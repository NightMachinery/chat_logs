[00:09:08] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-649e-12a6-5ee6-2484.fixed6.kpn.net)
[00:41:28] *** Joins: re101-impala-91 (~re101-imp@2a01:4f8:c17:d63f::1)
[00:42:08] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:52:36] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[01:25:41] *** Quits: AmR (~AmREiSa@156.199.236.198) (Quit: Konversation terminated!)
[01:29:01] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[01:33:25] *** Quits: PocketKiller (pocket@user/pocketkiller) (Quit: *evaporates*)
[01:33:37] *** Joins: PocketKiller (pocket@user/pocketkiller)
[01:36:43] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:42:37] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:47:03] <azizLIGHT> hello, im trying to modify a javascript userscript for browsers to match invidious domains instead of youtube domains. i dont quite understand the bit near #p and onwards inside https://regex101.com/r/1GlZhh/2
[01:55:02] *** Joins: src (~src@user/src)
[01:56:55] *** Quits: re101-impala-91 (~re101-imp@2a01:4f8:c17:d63f::1) (Quit: Client closed)
[02:02:27] *** Quits: src (~src@user/src) (Quit: leaving)
[02:03:19] *** Joins: src (~src@user/src)
[02:04:26] *** Quits: src (~src@user/src) (Client Quit)
[02:05:56] *** Joins: src (~src@user/src)
[02:06:07] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[02:09:48] <rairden> Can someone give me a regex to match a path like "foo/bar/baz/def" but only to include the last two tokens with exactly 1 slash `baz/def`. For library pcregrep. I would think something simple like "\w+/\w+$" would work, but is not.
[02:10:34] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[02:16:31] *** Quits: src (~src@user/src) (Quit: leaving)
[02:16:40] *** Joins: src (~src@user/src)
[02:19:57] *** Quits: src (~src@user/src) (Client Quit)
[02:20:06] *** Joins: src (~src@user/src)
[02:22:57] <rairden> My low-quality solution is "(\w|-)+/(\w|-)+$" which uses word class or a hyphen to match a URL, but I'm pretty sure URLs are allowed to have many special chars (^$!, etc)
[02:24:35] <mysticspiral[m]> you are not looking for this? https://regex101.com/r/yD8PQN/1
[02:36:24] *** Quits: re101-cougar-99 (~re101-cou@c-73-171-109-25.hsd1.va.comcast.net) (Quit: Ping timeout (120 seconds))
[02:38:55] *** Quits: src (~src@user/src) (Quit: leaving)
[02:39:04] *** Joins: src (~src@user/src)
[02:59:02] *** Quits: src (~src@user/src) (Quit: leaving)
[02:59:15] *** Joins: src (~src@user/src)
[03:05:34] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:1030:27f5:3084:25d2)
[03:11:37] *** Quits: rewt (~default@user/rewt) (Ping timeout: 240 seconds)
[03:14:24] *** Quits: src (~src@user/src) (Quit: leaving)
[03:25:15] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-649e-12a6-5ee6-2484.fixed6.kpn.net) (Ping timeout: 252 seconds)
[03:25:55] <rairden> yeah thanks mysticspiral[m]. That is the same solution in my last comment.
[03:37:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:37:38] <mysticspiral[m]> > \w+/\w+$
[03:37:50] <mysticspiral[m]> you didnt escape the slash there
[03:51:55] <rairden> yeah some libraries don't require escaping a slash.
[03:52:55] <mysticspiral[m]> you said pcregrep. it lets you choose the delimiter
[03:53:03] <mysticspiral[m]> the common one is slash
[03:53:50] <mysticspiral[m]> > yeah thanks mysticspiral[m]. That is the same solution in my last comment.
[03:53:50] <mysticspiral[m]> i dont get you comment. is it irony? does it not work as expected on re101 /1?
[03:55:45] <rairden> My solution works without escaping the slash. In sublime text, or pcregrep.
[03:56:35] *** Joins: re101-grouse-82 (~re101-gro@2a02:810c:c13f:cc40:357b:c6b9:eb95:9b10)
[03:56:49] <re101-grouse-82> hi guys
[03:57:17] <re101-grouse-82> can anyone tell me how i can remove everything in         <desc><![CDATA[SOME RANDOM DATA]]></desc>
[03:57:32] <re101-grouse-82> have plenty of those lines and all need to  be removed
[04:00:54] <mysticspiral[m]> rairden: so \w+\/\w+$ does not do what you want on re101?
[04:00:59] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[04:01:09] <mehwork> is it possible for the 'tree' command to not show/indent the root directory? 
[04:01:15] <mehwork> $ tree
[04:01:16] <rairden> it does mysticspiral[m]. Thanks. Both behave the same
[04:01:16] <mehwork> .
[04:01:18] <mehwork>    blah/
[04:01:22] <mehwork> such that . wouldn't be shown and blah/ would be totally left justified?
[04:04:27] <mysticspiral[m]> just do tree blah?
[04:04:38] <mehwork> mysticspiral[m]: well i want to see all of the subdirs
[04:04:54] <mehwork> just without indenting the first part, since it's obvious to me that the first part is the parent
[04:05:48] <mehwork> i guess i just need to delete the first 4 chars of all out put with cut -d or something
[04:13:16] <re101-grouse-82> mysticspiral[m] simply i just want  to remove every <desc> block in my xml file it contains any data
[04:22:26] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f1141fa1e0576466c280.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:23:20] <mysticspiral[m]> mehwork: its a bit dirty, but works :D
[04:23:23] <mysticspiral[m]> tree --noreport * |sed 's@\[error opening dir\]$@@'; tree| tail -n2
[04:26:54] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f140429be276a75d0242.dip0.t-ipconnect.de)
[04:28:34] <mysticspiral[m]> to keep the colors:
[04:28:39] <mysticspiral[m]> tree -C --noreport * |sed 's@[error opening dir]$@@'; tree| tail -n2
[04:32:18] <mysticspiral[m]> (forgot the escaping of the brackets here)
[04:32:20] <mysticspiral[m]> tree -C --noreport * |sed 's@[error opening dir]$@@'; tree| tail -n2
[04:32:34] <mysticspiral[m]> ah no, they were removed by markdown
[04:32:36] <mysticspiral[m]> tree --noreport * |sed 's@\[error opening dir\]$@@'; tree| tail -n2
[04:35:57] <mysticspiral[m]> re101-grouse-82: this? https://regex101.com/r/cIQjpu/1
[04:41:59] <mehwork> thanks
[04:44:44] <mysticspiral[m]> it doesnt scale well though (having the counter)
[04:53:26] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-1021-6229-e70e-1fe3.fixed6.kpn.net)
[04:57:37] <re101-grouse-82> mysticspiral[m] yeah perfect thanks a lot
[05:04:50] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-1021-6229-e70e-1fe3.fixed6.kpn.net) (Ping timeout: 250 seconds)
[05:15:11] *** Quits: re101-grouse-82 (~re101-gro@2a02:810c:c13f:cc40:357b:c6b9:eb95:9b10) (Quit: Client closed)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:48] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:48] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:48] *** Joins: maetthew (~maetthew@user/maetthew)
[05:41:14] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:50:50] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-1021-6229-e70e-1fe3.fixed6.kpn.net)
[05:55:58] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-1021-6229-e70e-1fe3.fixed6.kpn.net) (Ping timeout: 250 seconds)
[07:15:26] *** Joins: adeliktas0 (~adeliktas@i59F5FF5C.versanet.de)
[07:16:23] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[07:17:21] *** Quits: adeliktas (~adeliktas@i59F4D539.versanet.de) (Ping timeout: 252 seconds)
[07:17:21] *** adeliktas0 is now known as adeliktas
[07:18:54] *** Joins: sifsif (~sifsif@203.76.150.130)
[07:46:12] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-2524-f570-12e5-f6f3.fixed6.kpn.net)
[07:50:54] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-2524-f570-12e5-f6f3.fixed6.kpn.net) (Ping timeout: 252 seconds)
[08:01:05] *** Quits: sifsif (~sifsif@203.76.150.130) (Ping timeout: 256 seconds)
[08:34:27] *** Quits: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com) (Quit: rairden)
[08:44:02] *** Joins: src (~src@user/src)
[08:46:07] *** Joins: re101-adelie-59 (~re101-ade@vm621653.had.su)
[08:47:30] *** Quits: re101-adelie-59 (~re101-ade@vm621653.had.su) (Client Quit)
[09:18:10] *** Joins: nbin (~nbin@user/nbin)
[09:24:14] <nbin> https://regex101.com/r/Sg6x0U/1 i'm trying to match each "group" of numbers. a group can be defined as 2 numbers separated by a space or 3+ numbers separated by comma or forward slash. each group is separated by a space as well. i'm stuck trying to match two numbers separated by a space as a single group (the first two examples)
[09:25:17] <nbin> er, that should say "2 numbers separated by a space or 2+ numbers separated by comma or forward slash"
[09:26:38] <purplex> what about +100 -300 and -500/-700 ?
[09:26:59] <purplex> 2+ = including 2?
[09:28:28] <nbin> yeah
[09:29:48] <purplex> 2 or more, then. so you want +100 -300 as one group, -100/-300 -500/-700 also in a single group
[09:30:32] <nbin> i have this, but i assume there's a better way than duplicating the group for matching the numbers https://regex101.com/r/Sg6x0U/2
[09:31:22] <nbin> -100/-300 -500/-700 would be two groups. the delimiter is either a space, comma, or forward slash. if it's a space then only 2 numbers go in each group. otherwise it's as many numbers are separated by the (non-space) delimiter until a space
[09:33:55] <purplex> so that means /2 is what you want, you already solved it?
[09:35:16] <nbin> yeah /2 is the behavior i want (realized what i was missing right after i sent /1), but now hoping to clean it up a bit (to avoid duplicating the match for + or -) if possible
[09:42:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:43:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:47:56] <purplex> then it won't be a nice group as you're expecting, we can try with it without groups
[09:50:16] <digitok> https://regex101.com/r/Sg6x0U/3 maybe
[09:52:56] <nbin> that definitely looks cleaner
[09:56:24] <purplex> its the same idea but without groups, you seemed to avoid repeating +\- 
[10:01:08] <nbin> yeah mine was extra messy by how i was specifying +\- but a character set works just fine there. i'm happy with digitok's version. thanks both of you for the help
[10:02:25] *** Joins: sifsif (~sifsif@203.76.150.130)
[10:10:32] <purplex> yep so lesson learned, its not how you want, its how its going to be by the law
[10:16:46] <nbin> 100%. i just need to remember the laws :D
[10:21:54] *** Joins: re101-magpie-78 (~re101-mag@220.170.240.177)
[10:22:23] *** Quits: re101-magpie-78 (~re101-mag@220.170.240.177) (Client Quit)
[10:34:47] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:45:00] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-2524-f570-12e5-f6f3.fixed6.kpn.net)
[10:49:17] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-2524-f570-12e5-f6f3.fixed6.kpn.net) (Ping timeout: 240 seconds)
[10:49:19] *** Joins: lavaball (felix@31.204.155.215)
[11:20:47] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Quit: ZNC 1.8.2 - https://znc.in)
[11:22:16] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[11:23:03] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Client Quit)
[11:25:05] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[11:32:27] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:47:02] *** Quits: src (~src@user/src) (Quit: leaving)
[11:48:30] *** Joins: timm (~timm@user/timm)
[11:51:10] *** Joins: src (~src@user/src)
[11:51:26] *** Quits: src (~src@user/src) (Client Quit)
[11:59:58] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:07:45] *** Quits: timm (~timm@user/timm) (Ping timeout: 252 seconds)
[12:10:55] *** Joins: timm (~timm@user/timm)
[12:22:03] *** Quits: timm (~timm@user/timm) (Ping timeout: 252 seconds)
[12:22:12] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[12:28:38] *** Joins: palasso (~palasso@user/palasso)
[12:30:39] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[12:35:04] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 250 seconds)
[13:19:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[13:31:03] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[14:19:50] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[14:24:09] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 252 seconds)
[14:36:50] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[14:46:13] *** Joins: Dr-007 (~Dr-007@92-108-90-26.cable.dynamic.v4.ziggo.nl)
[14:49:31] <Dr-007> hey, im having trouble thinking of a clean way to match my urls to routes. here's my regex: https://regex101.com/r/xNijXN/1
[14:50:01] <Dr-007> right now the regex works and matches on the route in php
[14:50:31] <Dr-007> im having trouble translating / matching it to the actual url though. ill make a paste with the php
[14:53:07] <Dr-007> this is the php code im stuck on: https://dpaste.com/6ZKCSRAKN
[14:54:42] <Dr-007> so basicly im asking how do i this: if('files/284' == 'files/{file}') { ... }
[14:55:07] <Dr-007> but not files/{file}/download
[14:55:45] <Dr-007> i've begun exploding the but that doesnt seem right, too many loops. i figured there'd be a more regexy way
[15:01:54] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[15:14:50] <purplex> exploding? lol
[15:19:46] <purplex> currently im not sure what you are matching or want to avoid, if you put it as a regex question "i want to match.. this or, that" would be easier to get
[15:29:25] <digitok> 07Dr-007, see if this works: if (preg_match('/^'.preg_quote(preg_replace('/{[^}]*}/','[^/]*',$routeUri),'/').'$/',$currentUri)) { }
[15:40:44] <Dr-007>  digitok, thanks. i'm going to test it now
[15:45:56] <Dr-007> digitok, that if() works on the uri /files but not /files/231 or id
[15:48:33] <Dr-007> purplex, yeah with the explode i mean exploding the current uri im on: files/411 to parts[0] = files; parts[1] = 411; then use regex, the one i had, to determine on which index it should be
[15:49:28] <Dr-007> then i could find parts[1] = 411; replace that with what the regex matched which is {file}. so parts[1] becomes parts[1] = '{files}'. then implode the array to a string
[15:49:50] <Dr-007> then use that to compare it to the current uri
[15:50:12] <purplex> could be a php i'm not aware of? 'explode! boom!' 
[15:50:14] <Dr-007> but yeah, you're lol seems right. because i thought it could be done easier
[15:50:30] <purplex> php term*
[15:50:40] <Dr-007> purplex, yeah. it makes an array of a string where you splice on the /
[15:50:53] <Dr-007> like javascript splice
[15:51:07] <purplex> digitok knows both then, alright
[15:51:29] <Dr-007> do you understand why he did the preg_replace?
[15:51:35] <Dr-007> in his example
[15:53:12] <purplex> its a regex replace in php, i heard of that, not exactly sure of its semantics
[15:55:27] <digitok> my code would not be used to map the input string to the route format
[15:55:44] <digitok> it was just to do: if('files/284' == 'files/{file}') { ... }
[15:57:21] <Dr-007> digitok, https://dpaste.com/CPSFQD78M
[15:57:26] <Dr-007> it says no
[15:57:53] <digitok> yea, i did not test it lol
[15:59:24] <Dr-007> lol
[15:59:29] <digitok> ah
[15:59:32] <digitok> derp
[15:59:48] <Dr-007> this regex: '/{[a-zA-Z0-9._-]+}/'
[15:59:54] <Dr-007> matched on {file}
[16:00:05] <Dr-007> should that be in the preg_replace instead?
[16:00:29] <Dr-007> nah
[16:07:27] <digitok> preg_match('#^'.preg_replace('/{[^}]*}/','[^/]*',$routeUri).'$#',$currentUri)
[16:08:12] <digitok> not entirely sure if it is useful for your end goal or not
[16:10:54] <Dr-007> yeah that one works, but not for /files/432/download
[16:11:29] <Dr-007> so you replace {file} with another regex?
[16:12:27] <Dr-007> so i think [^/]* or $# needs some character to allow stuff behind it
[16:14:10] <digitok> i thought you did not want files/432/download to match lol
[16:14:51] <Dr-007> ah yes, i did say that. hehe
[16:15:11] <Dr-007> it has to match tho, both of 'em
[16:15:35] <Dr-007> i meant to say, it has to match on or the other. but that doesnt apply anyways
[16:15:39] <Dr-007> since its matching in a loop
[16:15:44] <Dr-007> *one or the other
[16:16:39] <Dr-007> but i get what you're doing
[16:16:55] <Dr-007> so with regex101.com i think ill make it from here
[16:18:59] <Dr-007> how did you guys learn regex?
[16:19:45] <Dr-007> my regex skills are googling it and then edit a little bit with online tools. but i couldnt write it willy nilly
[16:20:05] *** farn_ is now known as farn
[16:22:58] *** Joins: re101-tiger-30 (~re101-tig@110.136.137.102)
[16:27:16] *** Quits: re101-tiger-30 (~re101-tig@110.136.137.102) (Client Quit)
[16:27:52] <purplex> i never used a googled regex, i can't trust any.. i mean regexes are highly specific and tailored to needs
[16:29:52] <Dr-007> yeah, i get what you mean. thats why i use regex101 and hover over it and see if i can lose parts.
[16:30:05] <Dr-007> digitok, i was mistaken. your regex works for each case
[16:30:28] <Dr-007> *borat voice on* very niiiice
[16:38:20] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[16:40:15] <digitok> i will just trust you on that :p
[16:45:59] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[16:49:31] *** Joins: bin101 (~bin101@user/bin101)
[17:03:00] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:03:09] *** Joins: src (~src@user/src)
[17:03:40] *** Joins: re101-cougar-20 (~re101-cou@c-73-171-109-25.hsd1.va.comcast.net)
[17:04:01] <re101-cougar-20> I am not sure what I am doing wrong so looking for some guidance
[17:05:00] <re101-cougar-20> I am trying to match a pattern so that a character is not succeeded by certain string. I think I should be able to use negative look ahead
[17:06:13] <re101-cougar-20> so suppose I want to make sure that my string does not have baabb following any character in my string  then following expression should work
[17:06:41] <re101-cougar-20> z(?!baabb)
[17:07:55] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:44] <re101-cougar-20> sorry found something wrong with my regex, checking
[17:13:17] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 240 seconds)
[17:16:35] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (Remote host closed the connection)
[17:16:51] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[17:16:51] *** ChanServ sets mode: +v karhunkynsi
[17:26:59] *** Quits: re101-cougar-20 (~re101-cou@c-73-171-109-25.hsd1.va.comcast.net) (Quit: Client closed)
[17:39:43] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[17:47:04] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 250 seconds)
[17:49:45] *** Joins: re101-cougar-20 (~re101-cou@c-73-171-109-25.hsd1.va.comcast.net)
[17:50:15] <re101-cougar-20> I think either I am doing something really sillly or I am confused about negative look ahead
[17:50:22] <re101-cougar-20> Here is what I am trying to do
[17:50:41] <re101-cougar-20> find a word that does not have "agos" in it
[17:50:50] <re101-cougar-20> so to being building my regex
[17:51:04] <re101-cougar-20> I start seeing how to match the word "agos" in string
[17:51:13] <re101-cougar-20> simple regex "aog" foots the bill
[17:51:36] <re101-cougar-20> if I apply that regular expression to the word flagost
[17:52:10] <re101-cougar-20> I see that regex101 tool highlights the substring "ago"
[17:52:52] <re101-cougar-20> now when I use regex  (?!.*\bagos\b)\w*
[17:53:16] <re101-cougar-20> I read it as saying show me a word that does not have ago in it
[17:53:51] <re101-cougar-20> interestingly that regular expression matches flagost
[17:54:02] <re101-cougar-20> I am not sure what I am doing wrong
[17:54:13] <re101-cougar-20> any help greatly appreciated
[18:00:24] *** Joins: KevinX (~KevinX@user/KevinX)
[18:04:07] <digitok> the lookahead there matches at any position in the string where there is no complete word "agos" after that position (also anywhere in the string)
[18:04:38] <digitok> and then the \w* after it means it looks to satisfy this condition before a word character
[18:05:00] <digitok> what you want is something like \b(?!\w*agos)\w+
[18:05:45] <digitok> this first looks for a word boundary, then checks that this position is not followed by 0 or more word characters and then "agos", then matches all of the consecutive word characters from that position
[18:06:02] <digitok> brb
[18:10:37] <re101-cougar-20> Thanks a lot, that seems to be working
[18:10:51] <re101-cougar-20> your explanation helped me understanding the issue.
[18:10:53] <re101-cougar-20> Thanks!
[18:13:53] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[18:17:37] <digitok> cool :) yw
[18:20:00] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 250 seconds)
[18:27:33] *** Quits: sifsif (~sifsif@203.76.150.130) (Quit: Client closed)
[18:30:20] <re101-cougar-20> seems like this won't work if I search for something like _
[18:35:55] <digitok> possibly. do you have an example
[18:42:02] <re101-cougar-20> I just typed as _ as the search string and regex101 highlighted that, now I am questioning myself if it should have or should not have
[18:43:15] <re101-cougar-20> I think \w does not include "_" so regex101 should not have highlighted
[18:44:48] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:58:44] *** Joins: re101-hyena-88 (~re101-hye@139.5.158.152)
[18:59:42] <re101-hyena-88> Hey guys, Help me to solve regex quiz 2nd, any hint
[19:01:34] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:19:11] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[19:23:41] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 245 seconds)
[19:25:07] <farn> re101-hyena-88: What have you tried?
[19:27:56] *** Quits: re101-cougar-20 (~re101-cou@c-73-171-109-25.hsd1.va.comcast.net) (Quit: Client closed)
[19:29:53] <re101-hyena-88> sorry, hhh. I've found,
[19:30:29] <re101-hyena-88> That time, i didn't realize the global flag `/g`
[19:30:55] <re101-hyena-88> Thnx for your reply :)
[19:42:18] *** Joins: AmR (~AmREiSa@156.199.236.198)
[19:59:20] *** Joins: lavaball (felix@31.204.155.215)
[20:00:21] *** Quits: Dr-007 (~Dr-007@92-108-90-26.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[20:19:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:24:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:56] *** Joins: KevinX (~KevinX@user/KevinX)
[20:37:38] *** Quits: KevinX (~KevinX@user/KevinX) (Client Quit)
[20:38:56] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[20:42:38] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:43:57] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 240 seconds)
[20:45:00] *** Quits: re101-hyena-88 (~re101-hye@139.5.158.152) (Quit: Client closed)
[20:49:04] *** Joins: re101-hare-0 (~re101-har@2401:4900:46aa:e092:4128:d0a1:1a7a:441a)
[20:49:45] <re101-hare-0> A ques, I need a regex to match a pattern which starts with word "sha"
[20:51:41] *** Quits: re101-hare-0 (~re101-har@2401:4900:46aa:e092:4128:d0a1:1a7a:441a) (Client Quit)
[20:57:04] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[21:09:54] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[21:15:57] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:20:53] *** Quits: re (~user@user/re) (Remote host closed the connection)
[21:29:41] *** Joins: mohab (~mohab@197.46.171.192)
[21:33:48] *** Quits: mohab (~mohab@197.46.171.192) (Remote host closed the connection)
[21:39:26] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[21:44:10] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net) (Ping timeout: 260 seconds)
[22:11:00] *** luva2 is now known as luva
[22:30:41] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:42:06] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-6da1-e9b1-d3e1-19fe.fixed6.kpn.net)
[23:15:57] *** Joins: rewt (~default@user/rewt)
[23:15:57] *** ChanServ sets mode: +v rewt
[23:16:02] *** Joins: re101-quoll-97 (~re101-quo@178.241.157.238)
[23:16:27] <re101-quoll-97> Buranın
[23:16:31] <re101-quoll-97> Amacı
[23:16:32] <re101-quoll-97> Ney
[23:17:34] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:18:26] *** Quits: re101-quoll-97 (~re101-quo@178.241.157.238) (Client Quit)
[23:19:56] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[23:20:47] *** Joins: rvalue (~rvalue@user/rvalue)
[23:46:44] *** Joins: guesswhat (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz)
[23:54:04] *** Joins: dandyn (~dandyn@user/dandyn)
