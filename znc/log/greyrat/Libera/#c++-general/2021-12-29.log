[00:00:37] *** Joins: urdh (~urdh@user/urdh)
[00:00:39] *** Quits: urdh (~urdh@user/urdh) (Remote host closed the connection)
[00:06:19] *** Joins: urdh (~urdh@user/urdh)
[00:06:21] *** Quits: urdh (~urdh@user/urdh) (Remote host closed the connection)
[00:09:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:11:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:13:30] *** Joins: greenbagels (~gb@user/greenbagels)
[00:15:10] *** Joins: urdh (~urdh@user/urdh)
[00:15:11] *** Quits: urdh (~urdh@user/urdh) (Remote host closed the connection)
[00:17:09] *** Joins: urdh (~urdh@user/urdh)
[00:17:11] *** Quits: urdh (~urdh@user/urdh) (Remote host closed the connection)
[00:30:24] *** Joins: urdh (~urdh@user/urdh)
[00:30:41] *** Quits: urdh (~urdh@user/urdh) (Client Quit)
[00:32:57] *** Quits: n3rdy1 (~n3rdy1@c-73-14-53-56.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[00:34:05] *** Joins: urdh (~urdh@user/urdh)
[00:34:08] *** Quits: urdh (~urdh@user/urdh) (Remote host closed the connection)
[00:35:55] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:37:15] *** Joins: urdh (~urdh@user/urdh)
[00:37:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:43:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:43:56] *** Joins: john99 (~john99@171.246.103.34.bc.googleusercontent.com)
[00:45:38] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[00:46:02] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[00:48:19] <LordKalma> !fact
[00:48:20] <nolyc> LordKalma: It is unspecified whether or not iterator and const_iterator are the same type.
[00:48:29] * LordKalma facepalms
[00:55:29] <PJBoy> I mean that's fair
[00:55:32] *** Quits: magla (~gelignite@55d4d2a6.access.ecotel.net) (Quit: Stay safe!)
[01:06:40] <rpav> it doesn't really matter does it
[01:12:56] *** Quits: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:21:55] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[01:22:29] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[01:23:45] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[01:25:37] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[01:28:41] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[01:29:06] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[01:31:32] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[01:31:49] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[01:32:28] <PJBoy> lately wandbox has been loading like 20mb :/
[01:32:45] <PJBoy> and their sign in link still doesn't work
[01:33:04] <PJBoy> I've also noticed their sponsors have significantly decreased in number
[01:33:16] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Client Quit)
[01:36:15] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:36:31] <PJBoy> think my browser might be lying to me about that 20MB
[01:40:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:19] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:19] *** ChanServ sets mode: +v npaperbot
[01:40:37] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Ping timeout: 240 seconds)
[01:45:49] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:47:21] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[01:47:35] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[01:49:16] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: WeeChat 3.0)
[01:52:37] *** Joins: seninha (~seninha@user/seninha)
[02:00:26] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:01:09] *** Joins: rajkosto (~rajkosto@93-86-220-172.dynamic.isp.telekom.rs)
[02:09:08] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:10:09] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:11:11] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 245 seconds)
[02:12:37] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[02:23:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:23:25] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[02:29:02] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 240 seconds)
[02:30:01] *** Quits: john99 (~john99@171.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[02:33:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Ping timeout: 240 seconds)
[02:36:10] *** Joins: biberu\ (~biberu@user/biberu)
[02:37:15] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[02:39:57] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 256 seconds)
[02:39:57] *** biberu\ is now known as biberu
[02:44:56] *** Joins: jsbach_ (~jsbach@2a01:c22:341c:3500:81bb:3e2c:6fbf:8aee)
[02:50:07] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Ping timeout: 250 seconds)
[03:01:08] *** Joins: ferdna (~ferdna@user/ferdna)
[03:01:53] *** Quits: jsbach_ (~jsbach@2a01:c22:341c:3500:81bb:3e2c:6fbf:8aee) (Remote host closed the connection)
[03:10:51] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:11:11] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 252 seconds)
[03:11:54] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[03:24:49] *** Joins: greenbagels (~gb@user/greenbagels)
[03:28:42] *** Joins: n3rdy1 (~n3rdy1@2601:281:c780:a510:9005:8349:e7c7:a7ad)
[03:32:55] *** Quits: rajkosto (~rajkosto@93-86-220-172.dynamic.isp.telekom.rs) (Quit: Leaving)
[03:33:20] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[03:33:57] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[03:36:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:85f4:5f76:4849:adb1)
[03:36:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:85f4:5f76:4849:adb1) (Changing host)
[03:36:58] *** Joins: skapata (~Skapata@user/skapata)
[03:39:26] *** Quits: rito_ (~rito_gh@45.112.243.151) (Ping timeout: 268 seconds)
[03:50:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a196:f21c:f656:4b68) (Quit: Quit)
[03:51:07] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:33:42] *** Quits: Trollmann (~Trollmann@user/trollmann) (Ping timeout: 268 seconds)
[04:38:15] *** Joins: Trollmann (~Trollmann@user/trollmann)
[04:42:37] *** Quits: Trollmann (~Trollmann@user/trollmann) (Ping timeout: 240 seconds)
[04:57:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:33:04] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:40:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:21] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:21] *** ChanServ sets mode: +v npaperbot
[05:41:03] *** Joins: Trollmann (~Trollmann@user/trollmann)
[05:52:17] *** Quits: AmR (~AmREiSa@156.199.202.96) (Ping timeout: 240 seconds)
[05:57:00] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:58:36] *** Joins: frost (~frost@user/frost)
[06:08:34] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a196:f21c:f656:4b68)
[06:27:40] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:41:04] <very_sneaky> when using cmake and `find_packages()`, is there anything special you have to do to add the library to the include and library flags?
[06:41:27] <very_sneaky> aside from passing the target to `target_link_libraries(mytgt date::date)` for example
[06:50:00] *** Joins: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[06:50:59] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[06:55:21] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[07:04:39] *** Joins: asen_ (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[07:05:17] *** Quits: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Read error: Connection reset by peer)
[07:06:57] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:09:20] <Terminus> very_sneaky: target_include_directories() exists if somehow includes don't get added. i think i've had a situation where my dependencies were from conan and i needed to do that with the vars that were generated.
[07:10:12] <Terminus> otherwise though, if your code compiles then i wouldn't worry about it. unless you have multiple header files with the same name and the wrong one gets included...
[07:11:54] <Terminus> so like i had `target_include_directories(foo PUBLIC "${Poco_INCLUDE_DIRS}")`
[07:11:58] <very_sneaky> Terminus: thanks, i figured out my issue. I'm trying to switch from conan's `cmake` generator to `cmake_find_packages` - i was using a mix earlier, and didn't realise that the `cmake` generator took care of a lot of linking for me
[07:12:22] <very_sneaky> i realised i didn't actually have a `target_link_libraries` for the lib i was building, only the application and test executables
[07:13:11] <very_sneaky> i also didn't realise that the `cmake` generator does some nice things like output artefacts to ${CMAKE_BINARY_DIR}/bin and ${CMAKE_BINARY_DIR}/lib by default
[07:13:34] <very_sneaky> i'm trying to get my CML to be as agnostic to conan as possible - looks like the `cmake_find_packages` generator could be a good way of doing that
[07:14:51] <Terminus> very_sneaky: the variables generated by `cmake_find_package` is listed in https://docs.conan.io/en/latest/reference/generators/cmake_find_package.html
[07:15:40] <very_sneaky> yep cheers, i'm trying to use targets instead of the variables directly though
[07:16:12] <very_sneaky> anyway, problem solved - i didn't have target_include_directories() for the thing that was complaining :)
[07:16:44] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:17:43] <Terminus> 👍
[07:18:28] *** Joins: adeliktas1 (~adeliktas@i59F4D5C9.versanet.de)
[07:20:32] *** Quits: adeliktas (~adeliktas@i59F4A2E7.versanet.de) (Ping timeout: 240 seconds)
[07:20:32] *** adeliktas1 is now known as adeliktas
[07:35:27] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:35:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4890:dc4a:4e6c:df38) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:06:10] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:08:51] <very_sneaky> how important is ordering of paths on rpath?
[08:09:00] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[08:12:37] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[08:13:59] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:17:15] *** Joins: ravan (~ravan@user/ravan)
[08:20:49] <johnny> are the path semantics different from any other?
[08:21:09] <johnny> if not, seems like it'd be just as important
[08:21:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:21:19] <johnny> i've personally never had to touch it myself
[08:23:13] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:23:17] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Ping timeout: 240 seconds)
[08:34:45] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Read error: Connection reset by peer)
[08:35:01] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[09:02:23] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:02:57] *** Quits: n3rdy1 (~n3rdy1@2601:281:c780:a510:9005:8349:e7c7:a7ad) (Ping timeout: 240 seconds)
[09:07:41] *** Joins: aniketgm (~Aniket@49.36.107.251)
[09:09:10] *** Quits: asen_ (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Read error: Connection reset by peer)
[09:09:24] *** Joins: asen_ (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[09:25:45] *** Quits: aniketgm (~Aniket@49.36.107.251) (Read error: Connection reset by peer)
[09:26:03] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[09:29:42] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[09:32:06] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[09:34:19] *** Joins: malloy (~jimery@116.30.221.255)
[09:40:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:21] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:21] *** ChanServ sets mode: +v npaperbot
[09:42:00] *** Joins: aniketgm (~Aniket@49.36.107.251)
[09:44:18] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: ville)
[09:46:43] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[09:46:58] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[09:56:54] *** Joins: seninha (~seninha@user/seninha)
[10:04:47] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[10:19:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[10:31:30] *** Quits: aniketgm (~Aniket@49.36.107.251) (Quit: leaving)
[10:46:04] *** Joins: kurahaupo (~martin@115.69.27.211)
[10:57:22] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[10:58:10] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[10:58:59] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[11:00:40] <very_sneaky> I've got a weird situation where when I use the conan gtest target, gtest_main gets called appropriately, but when I use the target resulting from `find_package()`, it seems to compile and link fine, but `gtest_main` is never called
[11:02:26] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 260 seconds)
[11:04:45] *** Quits: kurahaupo (~martin@115.69.27.211) (Excess Flood)
[11:07:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[11:14:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:19:49] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:31:52] *** Joins: epony (epony@user/epony)
[11:32:29] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a196:f21c:f656:4b68) (Quit: Quit)
[11:32:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:37:29] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[11:37:55] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: WeeChat 3.0)
[11:42:49] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[11:43:14] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:46:22] <very_sneaky> is there a difference between `clang++ ... -Wl,rpath,/path/to/gtest/lib lib/mylib.a /path/to/gtest/lib/libgest_maind.a` and `clang++ ... -Wl,rpath,/path/to/gtest/lib -lgtest_maind lib/mylib.a`, functionally?
[11:46:52] <very_sneaky> I guess aside from the question of ordering, are `-lgtest_maind` and `/path/to/libgtest_maind.a` functionally equivalent in this context?
[11:48:00] *** Joins: handsome_kid (~chroot@bison.sh3ll.ru)
[11:49:56] <ville> order matters for static libs if that's what you are asking
[11:51:18] <very_sneaky> that was part of it, yes
[11:51:18] <ville> a -lsomething is able to find dynamic and static version of the library
[11:51:38] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[11:52:08] <very_sneaky> do you know of any good writeups on this to help me understand the details here?
[11:52:21] <ville> not really
[11:52:49] *** Quits: handsome_kid (~chroot@bison.sh3ll.ru) (Quit: leaving)
[11:52:49] *** Joins: malloy (~jimery@116.30.221.255)
[11:55:08] <ville> -lsomething uses the default directories and any directories added by -L to looks for anything that mateches a patterne like: <prefix>something.<suffix> and prefix and suffix are platform dependent
[11:55:42] <ville> on a posix system lib and .so or .a
[11:55:59] <ville> err so or a
[11:56:12] <very_sneaky> huuuuh.
[11:57:05] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[11:57:51] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[11:57:53] <very_sneaky> well, shit. i accidentally have gtest installed as a system library
[11:58:21] <ville> it is a really dumb/simplistic mechanism. it just goes through the list: does /path/aaa/libsomething.so open? does /path/aaa/libsomething.a open? does /path/bbb/libsomething.so open?...
[11:59:04] <ville> (#includes work the same way and their corresponding -I option)
[12:00:04] <very_sneaky> yeah that makes sense. So conan is adding the correct gtest lib directory using -L, but i think the system lib is appearing earlier
[12:01:33] <johnny> for a lot of people that is expected behaviour .. particular linux folks
[12:02:55] <johnny> like say i'm building a package with fmtlib to load into my distribution, it's often setup such that it would prefer the installed system version (if i had it)
[12:03:00] <very_sneaky> yes, it would otherwise be
[12:03:31] <johnny> because linux distro folks always want yo uto use the existing package since it's 100% build with the proper hardening and other flags
[12:04:16] <johnny> so, i don't know anything about conan, so i don't know if that's a setting in the conan file to force it to prefer the local version over the system one
[12:04:30] <johnny> or if it's perhaps an issue in your cmake file (you haven't said enough about your setup to say)
[12:05:10] <johnny> i now that i meson i can force it to prefer system installed or subprojects  or vice versa
[12:05:11] <very_sneaky> conan just generates CMake files to manipulate the build
[12:05:41] <very_sneaky> basically, it builds and stores a local cache of pre-built binaries to depend on, and then passes -I, -L etc to cmake to build those paths up
[12:05:46] <johnny> so does it have a setting something like "use local deps" or something?
[12:06:18] <very_sneaky> no, but if you just pass `-lsomething` then that's what will be used, as i've just discovered
[12:06:59] <johnny> but you're syaing the systemlib is appearing earlier.. but that's only because either you just let it work that way, or conan sets it up that way
[12:07:01] <very_sneaky> and interestingly, removing my system gtest broke my previously "working" build, so identified some misconfiguration with how i'm finding/linking against gtest
[12:07:24] <johnny> wait how is that interesting? that sounds like a natural consequence?
[12:07:36] <very_sneaky> interesting because i didn't realise it was happening :)
[12:07:58] <very_sneaky> it also indicates that it's not _just_ that the system lib was on the path earlier - it's not finding gtest in the conan cache either
[12:08:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:08:20] <johnny> maybe it never installed it in the first place beause you already had it???
[12:08:46] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5321)))
[12:08:47] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[12:09:18] <johnny> maybe one day i'll setup conan just so i have an idea on how it works
[12:09:31] <johnny> i mean sure i know the broad overview.. but i mean stuff like this
[12:10:14] <johnny> but for now.. i guess i'll go back to playing video games for a bit
[12:10:17] <very_sneaky> the find_package does work though :\
[12:10:58] <johnny> where else would it find it if not from the conan cache and also not in your system?
[12:11:33] <johnny> or did you reinstall it on your system since then?
[12:11:44] <johnny> maybe examine hte cache manually is all i can suggest
[12:14:02] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Remote host closed the connection)
[12:14:27] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[12:15:59] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[12:18:37] *** Joins: epony (epony@user/epony)
[12:21:55] *** Joins: robod34 (Username@79.113.195.239)
[12:26:50] *** Quits: asen_ (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Quit: Leaving)
[12:27:12] <very_sneaky> i think i was misconfiguring my CML in the "working" case - it discovered gtest in the conan cache, but i was taking that result and basically just appending system libs. Without that, it's not appending anything
[12:27:40] <ville> a directory added with -L should be searched before the default ones. but i can't remember if it tries all directories with .so first, then .a or does it alternate .so and .a for each directory
[12:27:45] <very_sneaky> i'm still left with the "kind of working" case - everything builds/links/runs fine, but it doesn't look like gtest is invoking gtest_maind, so my tests aren't actually being executed
[12:30:31] <very_sneaky> ah, progress. LeakSanitizer encountered a fatal error when running gdb
[12:36:25] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[12:38:10] *** Joins: aleios (~aleios@user/aleios)
[12:40:43] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[13:08:30] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:15] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 250 seconds)
[13:21:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:22:01] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[13:23:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tungsten.libera.chat (Nickname regained by services)))
[13:23:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:25:54] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[13:29:03] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[13:30:57] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[13:32:20] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[13:32:20] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[13:32:20] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:35:20] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Client Quit)
[13:40:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:22] *** ChanServ sets mode: +v npaperbot
[13:46:24] *** Joins: Meteorhead (~Meteorhea@lfbn-idf1-1-520-7.w86-242.abo.wanadoo.fr)
[13:46:40] *** Quits: Meteorhead (~Meteorhea@lfbn-idf1-1-520-7.w86-242.abo.wanadoo.fr) (Remote host closed the connection)
[13:47:36] *** Joins: Meteorhead (~Meteorhea@lfbn-idf1-1-520-7.w86-242.abo.wanadoo.fr)
[13:49:45] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[13:50:55] *** Joins: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de)
[14:02:58] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: ville)
[14:08:22] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[14:10:02] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[14:13:46] *** Joins: rito_ (~rito_gh@45.112.243.151)
[14:16:19] *** Joins: john99 (~john99@213.246.103.34.bc.googleusercontent.com)
[14:17:35] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Read error: Connection reset by peer)
[14:17:42] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[14:21:01] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: The Lounge - https://thelounge.chat)
[14:21:26] *** Joins: jancoow (~jancoow@user/jancoow)
[14:32:03] *** Quits: john99 (~john99@213.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[14:33:32] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b920:ed9f:9fbe:554c)
[14:49:42] *** Quits: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:51:33] *** Joins: AmR (~AmREiSa@156.199.202.96)
[14:56:10] *** Quits: aleios (~aleios@user/aleios) (Quit: WeeChat 3.4)
[15:06:15] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[15:07:41] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[15:09:08] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[15:11:57] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[15:14:19] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Max SendQ exceeded)
[15:33:36] *** Joins: biberu\ (~biberu@user/biberu)
[15:33:37] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[15:34:33] *** biberu\ is now known as biberu
[15:48:17] *** Joins: rajkosto (~rajkosto@178-221-115-84.dynamic.isp.telekom.rs)
[15:50:57] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:55:23] *** Joins: Leone (~Leo@157.52.18.77)
[15:55:58] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:00:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[16:00:47] *** Joins: john99 (~john99@213.246.103.34.bc.googleusercontent.com)
[16:00:58] *** Quits: john99 (~john99@213.246.103.34.bc.googleusercontent.com) (Client Quit)
[16:02:02] *** Joins: pulse (~pulse@user/pulse)
[16:05:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[16:10:37] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[16:17:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[16:19:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[16:23:25] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[16:35:38] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[16:42:01] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[16:46:53] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:52:18] <very_sneaky> all, I'm seeing some strange behaviour that I can't really explain and would appreciate a nudge in the right direction. As above, I'm having trouble getting my test executable to run. It doesn't seem to be using the main() provided by gtest. I can't debug into the executable - neither gdb or strace seem to give me much relevant information (though I wouldn't suggest that I know what I'm
[16:52:19] <very_sneaky> looking at). The compiler flags and link commands look relatively identical to my working comparison case, so all I can imagine is that I've misconfigured something somehow - though I can't see how. This is my project CMakeLists.txt: https://bpa.st/GF5Q. This is the gtest test application CMakeLists.txt as shipped with the conan recipe:
[16:52:21] <very_sneaky> https://github.com/conan-io/conan-center-index/blob/master/recipes/gtest/all/test_package/CMakeLists.txt. I've built the test program that ships with the conan recipe and that works correctly. Can anybody suggest places to look to get more information about this problem?
[17:01:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:06:55] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[17:07:23] <john99> someone know how disable Leak Analicer for a function in concrete?
[17:08:07] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b920:ed9f:9fbe:554c) (Ping timeout: 250 seconds)
[17:08:38] *** Joins: seninha (~seninha@user/seninha)
[17:10:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[17:12:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:90de:bade:1639:c5d2)
[17:12:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:90de:bade:1639:c5d2) (Changing host)
[17:12:46] *** Joins: skapata (~Skapata@user/skapata)
[17:18:14] *** Quits: p-i-__ (~Ohmu@mx-ll-180.183.72-213.dynamic.3bb.co.th) (Remote host closed the connection)
[17:19:24] *** Quits: letto (~letto@188.26.158.104) (Read error: Connection reset by peer)
[17:19:42] <AmR> Any one Work with GTIN And GS! ?
[17:19:51] <AmR> Any one Work with GTIN And GS1 ?
[17:20:12] *** Joins: letto (~letto@188.26.158.104)
[17:21:09] *** Joins: Crassus (~Crassus@user/crassus)
[17:26:54] *** Joins: p-i- (~Ohmu@180.183.72.213)
[17:33:37] *** test_ is now known as _flood
[17:37:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:39:47] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[17:40:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:22] *** ChanServ sets mode: +v npaperbot
[17:43:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:55:56] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[18:04:03] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[18:05:04] *** Joins: cart_man (~rynot@host-78-144-122-20.as13285.net)
[18:06:56] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[18:09:38] <LordKalma> !fact
[18:09:39] <nolyc> LordKalma: A string-literal that begins with u, such as u"asdf", is a char16_t string literal.
[18:12:41] <rpav> qt designer is just hilariously incredible terrible
[18:13:19] <LordKalma> yes
[18:16:29] <very_sneaky> i'm almost convinced that my problem is the order of static libraries, i.e. that lib/mylib.a preceeds /path/to/conan/libs/gtest/lib/gtest_main.a in the link command
[18:16:59] <very_sneaky> i have no idea how to change that in cmake though
[18:18:55] *** Quits: oj (oj@user/oj) (Quit: Eyy)
[18:19:15] *** Joins: oj (oj@user/oj)
[18:20:22] *** Quits: cart_man (~rynot@host-78-144-122-20.as13285.net) (Quit: Konversation terminated!)
[18:20:57] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:22:21] <cbreak> very_sneaky: cmake will get the correct order on its own normally
[18:25:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:27:13] <very_sneaky> cbreak: `clang++ ... lib/mylib.a /path/to/gtest/lib/libgtest_maind.a` (derived using the GTest::gtest_main target) fails to inject a main() into my test exe and `clang++ ...  -lgtest_maind lib/mylib.a` (derived by manually specifying `gtest_maind` in target_link_libraries()) does so successfully. I can't work out how to test `clang++ ... /path/to/gtest/lib/libgtest_maind.a lib/mylib.a` such
[18:27:14] <very_sneaky> that `libgtest_maind.a` preceeds `lib/mylib.a` - reordering the arguments doesn't seems to change anything. Multiple `target_link_libraries()` statements doesn't seem to change anything.
[18:27:25] <very_sneaky> so, not getting it correct when i'm using targets in this case
[18:28:21] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[18:29:17] <cbreak> main should be part of your code I think
[18:29:20] *** vdamewood is now known as Guest9136
[18:29:20] *** Quits: Guest9136 (~vdamewood@fedora/vdamewood) (Killed (iridium.libera.chat (Nickname regained by services)))
[18:29:20] *** vinleod is now known as vdamewood
[18:29:30] <ville> you would get undefined symbol errors if your order was wrong
[18:29:33] <cbreak> If I remember correctly, you'd have to link a second library for the main, or do some macro magic
[18:29:53] <very_sneaky> i think this is a special case, gtest specifically provides its own main for this
[18:30:04] <LordKalma> very_sneaky, whats the problem?
[18:30:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:30:37] <cbreak> very_sneaky: make sure that your library is first
[18:30:42] <very_sneaky> ville: no undefined symbols because it's only main that's not provided
[18:30:44] <cbreak> and that all external libraries are after your own
[18:30:57] <cbreak> otherwise linking might eliminate the external libs
[18:30:59] <ville> you can write your own main and link against gtest, not gtest_main?
[18:31:09] <cbreak> basically, dependees should be before dependancies
[18:31:12] <LordKalma> or just doctest instead :p
[18:31:23] <very_sneaky> ville: yes, that's one possibility - trying to understand why this isn't working/how to fix it though
[18:31:28] <LordKalma> but anyway it should be trivial to do it right
[18:31:35] <LordKalma> very_sneaky, what's the issue exactly?
[18:31:51] <very_sneaky> cbreak: this is my CML: https://bpa.st/GF5Q - the test executable is being assembled on line 99/100
[18:32:35] <ville> very_sneaky: if your executable didn't have a main you'd get undefined reference still to the entry point
[18:32:35] <very_sneaky> LordKalma: when using the conan cmake_find_package generator and using the GTest::gtest_main target, a main function doesn't get injected into my test executable like it does if i use ${CONAN_LIBS}
[18:32:45] <LordKalma> `set(COMMON_DEBUG_DEFS DEBUG)
[18:32:45] <LordKalma> ` no need for this
[18:32:58] <LordKalma> debug builds do that
[18:33:09] <very_sneaky> LordKalma: not in my testing :\
[18:33:14] <LordKalma> link_libraries -> global link libraries? no no no no no no no
[18:33:33] <LordKalma> very_sneaky, well, I mean, they'll add NDEBUG instead of release
[18:33:42] <LordKalma> it's the other way around
[18:33:46] <ville> very_sneaky: if you're using gtest's main you're supposed to register your tests? are you doing that? surely building the tests is supposedly producing an executable. stick that in a debugger
[18:33:47] <very_sneaky> LordKalma: lol, yes. I'm focusing on one thing at a time - my plan is to look at how to replace these with presets if possible
[18:34:14] <LordKalma> GLOB_RECURSE
[18:34:17] * LordKalma facepalms
[18:34:52] <LordKalma> target names based on the project name
[18:34:55] * LordKalma facepalms
[18:35:03] <ville> LordKalma: it's not a very helpful style of helping to focus on everything you think is not "the right way" to do so something
[18:35:22] <ville> LordKalma: first solve the problem. after that feel free to comment on stlye issues
[18:35:25] <cbreak> very_sneaky: well, make sure your dependency graph is correct
[18:35:31] <LordKalma> hahaha ville fair enough
[18:35:32] <LordKalma> let's see
[18:35:36] <LordKalma> target_link_libraries(${PROJECT_TEST} PRIVATE ${EXTERNAL_LIBS} ${EXTERNAL_DEV_LIBS} ${PROJECT_LIB})
[18:35:41] <LordKalma> this should be the proble, right?
[18:36:04] <very_sneaky> ville: debugger doesn't launch, with this error: https://bpa.st/OTIQ
[18:36:09] <LordKalma> very_sneaky, what's the build log?
[18:36:43] <ville> very_sneaky: clearly it does launch, and even runs the binary? says the interior exited normally
[18:37:06] <ville> very_sneaky: put a breakpoint somewhere, such as main
[18:37:09] <LordKalma> this is non-ideal cmake, but I don't see a problem directly
[18:37:15] <LordKalma> I'd have to see the configuration log and the build log
[18:37:27] <cbreak> very_sneaky: find out where your main comes from
[18:37:38] <cbreak> you can only have one main per program
[18:37:50] <ville> LordKalma: come on use the words: clean and modern. i know you want to..
[18:38:10] <LordKalma> ville, cranky today, are we?
[18:38:17] <very_sneaky> huuuuh.
[18:38:18] <cbreak> not sure if you can have both gmock_main and gtest_main
[18:38:31] <LordKalma> that's a good point from cbreak
[18:38:40] <ville> cbreak: probably with enough linker scripts
[18:38:46] <very_sneaky> ville: yeah you might be on to something. I was getting leak errors earlier that aren't showing up now - not sure what changed that, but it looks like it's using the main for my program proper rather than the test main
[18:39:20] <cbreak> very_sneaky: well, obviously
[18:39:25] <cbreak> you tell it to use your program main
[18:39:38] <cbreak> file(GLOB_RECURSE LIB_SOURCES CONFIGURE_DEPENDS "src/*.cpp") // main.cpp is part of your library
[18:39:52] <LordKalma> ville, also, very_sneaky is interested in things like conan, and so, it's not about clean cmake, modern cmake, or <insert bullshit marketing word> cmake. Its about making it easy to package, for example
[18:40:00] <LordKalma> cbreak, line 84
[18:40:01] <very_sneaky> cbreak: line 84: `list(REMOVE_ITEM LIB_SOURCES ${MAIN})`
[18:40:08] <cbreak> I recommend against globbing
[18:40:24] <cbreak> very_sneaky: print the list.
[18:40:30] <cbreak> look what's inside.
[18:41:37] <cbreak> if you really want to glob, put the library and the application sources into different directories
[18:41:47] <cbreak> (I'd do that anyway...)
[18:41:50] <LordKalma> (which you should anyway)
[18:41:52] <LordKalma> hahah
[18:42:24] <very_sneaky> yeah, that's it. main is in there
[18:42:29] <LordKalma> regardless of how much ville rants about bullshit words, a *clean* cmake is a less buggy cmake :p
[18:42:41] <LordKalma> see? :p
[18:42:44] <rpav> bah there's nothing wrong with globbing, you just have to remember to rerun cmake if you add files
[18:42:52] <LordKalma> that's trye
[18:42:54] <LordKalma> *true
[18:43:12] <rpav> which you also do in a lot of other cases _anyway_, and thus the benefits outweigh the occasional "oh yeah i ahve to run it again"
[18:43:18] <LordKalma> but you shouldn't glob too much :p
[18:43:40] <rpav> you mean overcapture source files? hah yeah
[18:43:49] <cbreak> rpav: the problem with globbing (in this case) is that undesired source files were added
[18:43:49] <very_sneaky> i didn't even think of that, because main was being picked up by gtest before i tried to transition to targets
[18:43:59] <rpav> i mean if you're planning on globbing, _probably_ organize your source sanely .. probably do this even if you're not :
[18:44:00] <rpav> :P
[18:44:20] <LordKalma> rpav, you mean to haave a CLEAN source structure? :o
[18:44:54] <very_sneaky> any of you recommend any reading on "good" cmake/repo structures? (aside from professional cmake - about to start working through that)
[18:44:56] *** Joins: cart_man (~rynot@host-78-144-122-20.as13285.net)
[18:45:09] <LordKalma> it's up to you really
[18:45:19] <cbreak> very_sneaky: not mixing sources of different targets in the same directory
[18:45:22] <LordKalma> just make something that is sane considering your environment
[18:45:43] <cbreak> very_sneaky: I'd also recommend keeping public headers separate from private headers and source files
[18:45:45] <rpav> LordKalma: yeah imagine that hah
[18:45:58] <LordKalma> rpav, apparently saying clean is BS
[18:45:58] <very_sneaky> cbreak: in fairness, the sources builds a library, and my other targets just pull that library in - i thought that was good separation
[18:46:02] <rpav> yeah separate public/private is vastly easier to manage
[18:46:17] <very_sneaky> ah, no i see what you mean - main should be pulle dout
[18:46:20] <cbreak> like include/ProjectName/public.hpp vs src/private.hpp vs cli/main.cpp
[18:46:42] <very_sneaky> yeah gotcha.
[18:46:45] <cbreak> I usually do something like that
[18:46:52] <cbreak> and test/test_blah.cpp
[18:46:56] <very_sneaky> i don't love having the private hpp in with the cpp files
[18:46:59] <rpav> if you have like one directory with a zillion utilities you generate then don't glob, but there aren't a lot of other sane structures that do this .. one subtree per binary/library/etc
[18:47:07] <cbreak> very_sneaky: you can keep it separate. I don't bother.
[18:47:16] <very_sneaky> how would oyu keep it separate?
[18:47:23] <very_sneaky> src/include/header.hpp?
[18:47:29] <cbreak> sure.
[18:47:31] <cbreak> if you want.
[18:47:32] <very_sneaky> cli/include/mainheader.hpp?
[18:47:36] <cbreak> but... why bother?
[18:47:40] <cbreak> what's a mainheader?
[18:47:51] <rpav> you can GLOB_RECURSIVE PUBLIC_HEADERS and PRIVATE_HEADERS and target_include_directories PUBLIC / PRIVATE
[18:47:52] <LordKalma> https://bpa.st/QEWLZB4C5H2XJT5GSZK5YEKUCM
[18:47:56] <very_sneaky> idk, just something that cli/main.cpp might pull in
[18:47:56] <LordKalma> I've done things like this
[18:48:00] <LordKalma> because I don't glob
[18:48:02] <cbreak> main doesn't need a header normally
[18:48:37] <rpav> LordKalma: separate modules?
[18:48:37] <very_sneaky> LordKalma: yeah i don't mind that actualy
[18:49:07] <cbreak> very_sneaky: the important part is: different directory for public headers than for the rest
[18:49:11] <very_sneaky> LordKalma: where do your implementation files go?
[18:49:16] <cbreak> and different directory for each target's source files
[18:49:17] <very_sneaky> or public/private headers
[18:49:21] <LordKalma> with files: https://bpa.st/UFEQFY25J5UHZ2WLR66GNC6P6I
[18:49:27] <very_sneaky> cbreak: yep good tip
[18:49:31] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[18:50:17] <very_sneaky> LordKalma: yeah i see, that makes sense
[18:50:21] <very_sneaky> thanks for sharing
[18:50:31] <cbreak> I'd also strongly recommend having a subdirectory named after the project / library in the public include directory
[18:50:41] <LordKalma> of course I make the target_include_directories in cmake be such a way that all files end up as
[18:50:58] <LordKalma> #include "aether_explorer/<module>/<file>
[18:51:11] <cbreak> that way, users are encouraged to use proper include paths
[18:51:13] <LordKalma> that's you I have misc/include/aether_explorer/include/misc/
[18:51:17] <LordKalma> *that's why
[18:51:54] <LordKalma> cbreak, we seem to be aligned :) I prefer to have it fragmented like this, and bundle them together into aether_explorer/include would be part of the install script :)
[18:52:09] <LordKalma> (which would be written in cmake also, of course, trivially)
[18:52:32] <cbreak> I'd structure the code differently I think, in the details
[18:52:44] <cbreak> so far I've not had to make modules
[18:52:48] <very_sneaky> LordKalma: have you managed to extricate all conan statements from your CML?
[18:52:48] <cbreak> so it's easier :)
[18:53:05] <LordKalma> cbreak, that's where personal style comes in
[18:53:09] <LordKalma> but we agree on the goals anyway
[18:53:21] <cbreak> don't think there's room to disagree while being sane...
[18:53:36] <LordKalma> very_sneaky, there are small things, like find_package(doctest)... that only exist when using conan/vcpkg
[18:53:54] <very_sneaky> i like the idea, but i'm not sure i see how to easily remove `conan_basic_setup()` - it can be done with the `cmake_find_package` generator, but you lose a lot of the nice setup that conan does for you wrt compilation and linker flags for profiles etc
[18:54:14] <LordKalma> I use qt creator :) which does it for me beforehand :p
[18:54:17] <very_sneaky> LordKalma: huh. I would have thought that could easily be one of the agnostic statements
[18:54:30] <LordKalma> I might even copy their scripts into my repos eventually
[18:54:42] <LordKalma> they are GPLed anyway
[18:54:47] <cbreak> I've not used conan. And I don't plan to.
[18:55:05] <cbreak> you don't need conan to use find_package
[18:55:08] <LordKalma> I might not even go back to C++, idk hahah
[18:55:12] <very_sneaky> cbreak: not even to check it out? I'm having a good experience with it so far
[18:55:19] <cbreak> very_sneaky: no.
[18:55:21] <LordKalma> cbreak, the thing is that "official" doctest distribution doesn't have any cmake files
[18:55:29] <cbreak> I write my code agnostic from package managers
[18:55:34] <cbreak> that way, users can use what ever they want
[18:55:34] <LordKalma> they want you just download the header file
[18:55:42] <very_sneaky> cbreak: that's what i meant :) find_package is agnostic so removing conan from CML as much as possible makes packaging generally easier for everyone involved
[18:55:48] <LordKalma> cbreak, and you can keep it agonistic if you want
[18:55:58] <LordKalma> minor those details
[18:56:09] <cbreak> LordKalma: so doctest is something I'd add as git submodule
[18:56:16] <LordKalma> yes, and that's fair
[18:56:20] <cbreak> or maybe via cmake's external_project_add
[18:56:25] <LordKalma> better
[18:56:27] <cbreak> ... probably both...
[18:56:35] <LordKalma> hahaha
[18:56:50] <cbreak> well, if it's header only, then the latter's not needed
[18:57:30] <very_sneaky> I guess if i wrap `conan_basic_setup` in an if statement that gets it pretty agnostic
[18:58:23] <cbreak> very_sneaky: or you can remove it
[18:58:26] <cbreak> what does it do?
[18:58:56] <LordKalma> nothing interesting that you can't do yourself, honestly
[18:59:16] <LordKalma> conan install . -g=cmake_find_package or something
[18:59:40] <very_sneaky> cbreak: initializes a number of environment variables that change how cmake will build something for things like cross building, compiler selection, compiler versions, libcxx standards, things like that
[19:02:23] <very_sneaky> i think from a packaging perspective, it's almost always better to do an out-of-source package like CCI does it. That is - have a separate repo for the package recipe that downloads the source repo when packaging, rather than having the recipe live within the source repo
[19:02:34] <cbreak> that seems more like something I'd do in a wrapper script
[19:02:36] <cbreak> not as part of cmake
[19:02:59] <very_sneaky> the only clincher to that, is that you then can't have editable packages - which is unfortunately something that we'll need a lot ><
[19:04:23] <very_sneaky> cbreak: maybe it is available in some of the other generators - it certainly sounds like not all of that needs to be pulled into cmake. I'm not sure though - when trying it earlier i certainly lost things like output directory structure
[19:04:57] <very_sneaky> i.e., definitions for `CMAKE_RUNTIME_OUTPUT_DIRECTORY` et al
[19:05:54] <cbreak> how about having something like scripts/setup_for_conan.sh
[19:06:02] <cbreak> which you can source scripts/setup_for_conan.sh if you want to
[19:07:05] <very_sneaky> there are actually a large number of generators and ways of doing things with conan - i know they have concepts like "virtualenv" and "virtualrunenv" which from what i understand actually sound pretty similar to that
[19:07:12] <cbreak> if those are env vars, then that should be fine
[19:07:19] <very_sneaky> I'm still learning though - there's a lot i haven't explored
[19:07:22] <cbreak> if those are cmake vars, you'd need to pass them to cmake via -D
[19:08:11] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[19:08:46] <very_sneaky> cbreak: out of curiosity, what don't you like about the idea of trying conan? I know you can probably do most of it by scripting, but if it's already done - why not see if it can reduce the amount of work to do?
[19:11:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[19:12:38] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[19:14:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:17:38] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[19:19:54] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[19:25:48] <cbreak> very_sneaky: I don't want to use conan
[19:25:55] <cbreak> and many of the users can't use it
[19:26:07] <cbreak> and it really adds nothing useful
[19:26:34] <cbreak> (since I can't rely on it)
[19:37:21] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:39:00] *** Joins: seninha (~seninha@user/seninha)
[19:42:19] *** Quits: cart_man (~rynot@host-78-144-122-20.as13285.net) (Quit: Konversation terminated!)
[19:45:09] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:f35e:852b:e5b8:1894)
[19:45:09] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:f35e:852b:e5b8:1894) (Changing host)
[19:45:09] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:47:03] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[19:49:25] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[19:51:52] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[19:59:45] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[20:00:57] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:02:15] *** Quits: rajkosto (~rajkosto@178-221-115-84.dynamic.isp.telekom.rs) (Quit: Leaving)
[20:06:35] *** Joins: rajkosto (~rajkosto@93-87-179-94.dynamic.isp.telekom.rs)
[20:08:47] *** Joins: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de)
[20:12:54] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[20:19:52] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:31:10] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[20:31:31] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:f35e:852b:e5b8:1894)
[20:31:31] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:f35e:852b:e5b8:1894) (Changing host)
[20:31:31] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:40:00] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:48:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:50:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:50:41] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:53:25] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[20:58:04] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:02:19] <rpav> man xpra just makes me want to try building this tiny windowing system even more
[21:15:12] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:17:16] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[21:21:37] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 240 seconds)
[21:23:28] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[21:27:19] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[21:27:38] *** Joins: rajkohaxor (~rajkosto@93-86-220-117.dynamic.isp.telekom.rs)
[21:28:26] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Ping timeout: 252 seconds)
[21:28:46] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[21:28:56] *** Joins: sysctl (~sysctl@88.215.77.255)
[21:29:01] *** Quits: sysctl (~sysctl@88.215.77.255) (Client Quit)
[21:29:21] *** Joins: letto (~letto@188.26.158.104)
[21:29:43] *** Joins: bitrot (~rajkosto@109-93-190-37.dynamic.isp.telekom.rs)
[21:31:01] *** Quits: rajkosto (~rajkosto@93-87-179-94.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:32:16] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[21:32:37] *** Quits: rajkohaxor (~rajkosto@93-86-220-117.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[21:33:03] *** Joins: rajkosto (~rajkosto@77-46-205-234.dynamic.isp.telekom.rs)
[21:33:51] *** Joins: rajkohaxor (~rajkosto@109-93-113-132.dynamic.isp.telekom.rs)
[21:34:37] *** Quits: bitrot (~rajkosto@109-93-190-37.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[21:35:54] *** Joins: bitrot (~rajkosto@178-222-119-221.dynamic.isp.telekom.rs)
[21:37:59] *** Quits: rajkosto (~rajkosto@77-46-205-234.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[21:38:36] *** Quits: rajkohaxor (~rajkosto@109-93-113-132.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[21:38:55] *** Joins: rajkosto (~rajkosto@178.220.170.101)
[21:40:12] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:21] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:22] *** ChanServ sets mode: +v npaperbot
[21:40:31] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:41:04] *** Quits: bitrot (~rajkosto@178-222-119-221.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[21:43:29] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3411:d9a6:758d:8ad8)
[21:43:32] *** Quits: rajkosto (~rajkosto@178.220.170.101) (Ping timeout: 268 seconds)
[21:57:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[22:00:55] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bd21:ec47:c1ea:4c9e)
[22:15:44] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 252 seconds)
[22:17:10] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[22:17:40] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:21:21] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[22:27:45] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3411:d9a6:758d:8ad8) (Quit: Quit)
[22:39:33] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[22:44:49] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[23:00:40] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[23:27:37] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 240 seconds)
[23:29:34] *** Joins: magla (~gelignite@55d4b9f8.access.ecotel.net)
[23:30:55] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:40:25] *** Quits: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (Read error: Connection reset by peer)
[23:41:35] *** Joins: jbalint (~jbalint@097-090-242-068.res.spectrum.com)
[23:52:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
