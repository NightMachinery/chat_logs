[00:01:00] *** Quits: [exa] (exa@user/exa/x-3587197) (Remote host closed the connection)
[00:02:43] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.a357.priv.bahnhof.se)
[00:06:39] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Ping timeout: 256 seconds)
[00:06:59] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 256 seconds)
[00:07:52] <monochrom> However! I reckon that if you seek also being parametric in the functor f, things may be more unique.
[00:07:54] *** Joins: MatthiasG2 (~matthias@i6DFA038C.versanet.de)
[00:09:17] *** Quits: tavares (~tavares@user/tavares) (Ping timeout: 240 seconds)
[00:09:38] <monochrom> "This is going to be fun"
[00:10:01] *** Joins: vandito (~vandito@131.0.224.113)
[00:12:40] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[00:15:54] *** Quits: vandito (~vandito@131.0.224.113) (Quit: vandito)
[00:16:30] *** Joins: tavares (~tavares@187.19.213.50)
[00:19:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[00:20:03] <zzz> at https://hoggle.haskell.org it reads "... The Hoogle manual contains more details, including further details on search
[00:20:06] <zzz> queries, how to install Hoogle as a command line application and how to
[00:20:10] <zzz> integrate Hoogle with Firefox/Emacs/Vim etc."
[00:20:44] <zzz> but i can't seem to find anything about vim
[00:21:40] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[00:22:30] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[00:24:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[00:29:39] <lyxia> monochrom: I meant that for the specific implementation in Data.Contravariant.Functor.  To generalize, you'd want to add the law (phantom @f @a @a = id) to rule out such counterexamples.
[00:30:36] *** Quits: slac63591 (~slack1256@186.11.28.67) (Remote host closed the connection)
[00:31:18] <ski> `phantom @f @a @a' ?
[00:31:36] *** Joins: [exa] (exa@user/exa/x-3587197)
[00:42:53] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[00:45:55] *** Joins: wavemode (~wavemode@2601:241:0:fc90:e107:b5f8:8bcd:8e3a)
[00:46:17] *** Quits: tavares (~tavares@187.19.213.50) (Ping timeout: 240 seconds)
[00:47:17] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[00:47:27] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[00:49:11] <sprout_> https://twitter.com/andre_videla/status/1489680094339682308?s=20&t=FG02BMLwxD2K_Sci1ulVag
[00:50:03] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Ping timeout: 256 seconds)
[00:52:24] <lyxia> ski: TypeApplications for  phantom :: forall f a b. (...) => f a -> f b  ?
[00:53:26] <ski> i'd presume so ?
[00:53:47] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[00:53:53] *** Joins: vandito (~vandito@131.0.224.113)
[00:54:11] <ski> oh, actually, just realized i misread you. nevermind then, carry on
[00:55:07] *** Quits: g (x@libera/staff/glguy) (Quit: g)
[00:55:07] *** Quits: glguy (x@libera/staff/glguy) (Quit: Quit)
[00:55:46] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:56:02] *** Quits: vandito (~vandito@131.0.224.113) (Client Quit)
[01:04:57] *** Joins: tavares (~tavares@187.19.213.50)
[01:18:03] *** Quits: doxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[01:20:29] *** Joins: glguy (x@libera/staff/glguy)
[01:23:20] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[01:23:24] <monochrom> Wow conformal mappings of commuting diagrams
[01:27:50] <byorgey> DDDUDUDUUDDDUUUU  <--- what monadic zombies say when they come for your brains
[01:29:43] <monochrom> Are humans data as to zombies are co-data?
[01:33:00] <EvanR> human mortal, data finite. Zombie potentially immortal but they can still be terminated (headshot)
[01:33:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[01:33:30] <EvanR> so yes
[01:33:35] <monochrom> :)
[01:34:37] <EvanR> michael myers would have to be Stream HalloweenSequels though
[01:35:06] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[01:37:17] *** Quits: tavares (~tavares@187.19.213.50) (Ping timeout: 240 seconds)
[01:38:07] *** Quits: glguy (x@libera/staff/glguy) (Quit: Quit)
[01:41:08] *** Joins: glguy (x@libera/staff/glguy)
[01:43:31] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:43:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:44:25] *** Quits: glguy (x@libera/staff/glguy) (Read error: Connection reset by peer)
[01:46:42] *** Joins: glguy (x@libera/staff/glguy)
[01:48:00] *** Quits: deadmarshal (~deadmarsh@95.38.113.90) (Ping timeout: 250 seconds)
[01:50:53] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[01:52:12] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:52:17] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[01:52:41] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:53:34] *** Quits: michalz2 (~michalz2@185.246.204.89) (Remote host closed the connection)
[01:53:34] *** Quits: michalz (~michalz@185.246.204.75) (Remote host closed the connection)
[01:53:45] *** Quits: MatthiasG2 (~matthias@i6DFA038C.versanet.de) (Ping timeout: 256 seconds)
[01:55:36] *** Joins: MatthiasG2 (~matthias@i6DFA03D9.versanet.de)
[01:58:44] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Quit: WeeChat 3.4)
[01:58:44] *** Quits: [exa] (exa@user/exa/x-3587197) (Read error: Connection reset by peer)
[01:59:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[01:59:57] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[02:00:22] *** Joins: zebrag (~chris@user/zebrag)
[02:01:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[02:03:09] *** Quits: nitrix (~nitrix@user/nitrix) (Ping timeout: 256 seconds)
[02:04:17] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 256 seconds)
[02:04:39] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[02:06:00] <qrpnxz> i'm using ghcup, 9.0 working fine, 9.2 not finding modules i install for some reason, i can't figure out the difference
[02:07:00] <monochrom> Library binaries built for one GHC version cannot be reused by another GHC version. This has always been the case.
[02:07:10] *** Joins: nitrix (~nitrix@user/nitrix)
[02:07:44] <qrpnxz> i did reinstall the libs with cabal after switching, they have entries in the environment file for 9.2
[02:07:51] <qrpnxz> idk if there's something else i have to do
[02:08:18] <monochrom> Steve Jobs was greatly inspired by this, and invented the slogan "This changes everything. Again." at every iPhone release. >:)
[02:10:54] <qrpnxz> even on `cabal repl` not able to load libraries i have imported on my .ghci
[02:12:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[02:13:02] *** Joins: gawen (~gawen@user/gawen)
[02:13:11] <maerwald> qrpnxz: are you on archlinux?
[02:13:27] <qrpnxz> i'm on Debian bookworm
[02:13:35] *** Quits: gawen_ (~gawen@user/gawen) (Ping timeout: 256 seconds)
[02:13:40] <qrpnxz> (testing)
[02:14:29] <qrpnxz> cabal/store/ghc-9.2.1 has packages
[02:15:03] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[02:19:15] <maerwald> great... 9.2.1 needs libnuma again
[02:19:24] <maerwald> build system bugs from 5 years ago reappear
[02:19:33] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:19:35] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:20:17] <qrpnxz> compile bot on a discord server i use can't compile haskell for a libnuma thing
[02:20:19] <qrpnxz> idk what it is
[02:21:34] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[02:21:46] <maerwald> some optional library turned mandatory due to a build system bug
[02:22:05] <qrpnxz> shucks
[02:22:33] <qrpnxz> ok, i'm just gonna go back to 9.0 because i can't figure this out.
[02:22:34] *** Joins: nitrix (~nitrix@user/nitrix)
[02:25:37] <maerwald> 9.2.1 works on bookworm here
[02:25:52] <maerwald> I tried `cabal repl --build-depends aeson` and could import modules
[02:27:47] <qrpnxz> with 9.0 i can just do import, then compile like `ghc main.hs` and it works, i can import stuff in my .ghci, and it will just work, sure i could create a whole cabal project, that might work (hopefully), but i don't want to bother right now when 9.0 just works
[02:28:14] <qrpnxz> no --build-depends required in 9.0
[02:29:05] <maerwald> use build-depends
[02:29:06] <qrpnxz> i think i remember having to add the libs to my environment to get it to do that, but they are already there, so i can't think of anything else
[02:31:14] *** Parts: qrpnxz (abc4f95c31@user/qrpnxz) (Disconnected: closed)
[02:31:23] *** Joins: qrpnxz (abc4f95c31@user/qrpnxz)
[02:34:59] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[02:38:28] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[02:39:35] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:43:01] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:43:52] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:44:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:45:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:47:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[02:51:42] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[02:54:09] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:55:20] *** Quits: jrm (~jrm@156.34.173.250) (Quit: ciao)
[02:55:33] *** Quits: adnaahm (~adnaahm@host-57-net-67-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[02:56:39] *** Joins: jrm (~jrm@156.34.173.250)
[03:00:32] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:02:38] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[03:03:24] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[03:05:34] *** Joins: nosewings (~ngpc@cpe-68-206-102-85.satx.res.rr.com)
[03:14:33] *** Quits: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[03:14:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:15:41] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[03:18:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:22:32] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[03:23:41] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[03:26:02] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:27:02] *** Quits: qrpnxz (abc4f95c31@user/qrpnxz) (Ping timeout: 268 seconds)
[03:27:41] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.4)
[03:28:23] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[03:31:47] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:31:57] *** Joins: cheater (~Username@user/cheater)
[03:33:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[03:33:38] *** Quits: mmalter (~mmalter@88.126.10.237) (Quit: Lost terminal)
[03:33:59] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[03:35:51] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:41:11] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:44:18] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Read error: Connection reset by peer)
[03:44:40] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[03:47:21] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Remote host closed the connection)
[03:50:43] *** Joins: nitrix (~nitrix@user/nitrix)
[03:54:07] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[03:55:02] *** Quits: nitrix (~nitrix@user/nitrix) (Remote host closed the connection)
[03:55:55] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[03:56:24] *** Joins: nitrix (~nitrix@user/nitrix)
[03:59:25] *** Quits: nitrix (~nitrix@user/nitrix) (Client Quit)
[04:00:26] *** Joins: nitrix (~nitrix@user/nitrix)
[04:00:35] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 250 seconds)
[04:07:09] <hololeap> how would one go about testing the bounds of a dependency on a package? for instance, if I have a package with semigroups listed as a dependency, how would I go about testing to see which version of semigroups is the lowest that still compiles with it?
[04:09:30] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[04:10:34] *** Quits: emf_ (~emf@2620:10d:c090:400::5:9a32) (Ping timeout: 250 seconds)
[04:11:51] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[04:12:23] <sm> do you use stack or cabal ?
[04:12:38] <hololeap> cabal
[04:13:38] <sm> run a bunch of test builds like cabal build --constraint 'semigroups == X.Y' -O0
[04:14:19] <sm> also, check semigroups' changelog for signs of api change
[04:15:15] <hololeap> does anyone actually do this in practice?
[04:16:41] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:17:00] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[04:18:58] *** Joins: alp (~alp@user/alp)
[04:20:33] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[04:21:39] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:21:58] <hololeap> testing every version bump with every version of every dependency seems unmanagable, but I would think the bounds should have _some_ testing, so what is a compromise that is actually done in practice?
[04:26:05] <sshine> hololeap, in practice, I think most people add the currently available package as the lower bound.
[04:26:27] *** Joins: Inst[m] (~instrmatr@2001:470:69fc:105::1:903e)
[04:27:01] <hololeap> ok, that's what it seems like
[04:27:06] <sshine> hololeap, in the case of stackage snapshots that may be fine, since others depending on your package wouldn't see it in an older snapshot. but in general, what you're suggesting is something I also considered, but never bothered to test.
[04:28:05] <sshine> hololeap, since the lower bound never changes, you could do a binary search on every dependency.
[04:29:10] <sshine> hololeap, or rather, step backwards in (manor, minor) until it breaks.
[04:29:40] <hololeap> yeah. I suppose this isn't a problem that is specific to haskell/cabal, either.
[04:30:02] <sshine> hololeap, what you're solving is that you make your package available to people who depend on really old versions of things without having to bump their versions.
[04:30:34] <sshine> hololeap, but I think what's typically more customary, is that if people start depending on new things, they start by bumping their old dependencies to the point where their new dependencies resolve.
[04:32:16] <hololeap> the problem is when someone depends on an abandoned package that never get bumps, it may drag down the rest of their environment, so actually knowing what lower bounds work for your package could be very helpful in this scenario
[04:32:27] <sshine> hololeap, and, I think, you'll solve some problems if they have multiple dependencies where one is stale and depends on an old package version. in that case they don't need to --allow-newer.
[04:32:36] <hololeap> but really, I am just curious about the problem in general
[04:32:38] <sshine> right
[04:34:05] <sshine> it'd be neat if you could check if a version of a package works cheaper than trying it
[04:34:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:34:39] <sshine> I guess a neater solution is to shrink the problem like Unison does :)
[04:37:39] <hololeap> this problem gets hairy in the case of gentoo-haskell, where you might have 600 packages installed at once on your system, if you (ab)use it like I do. (I know this is very niche and probably doesn't make sense for most people)
[04:38:26] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:38:58] <sshine> right... having your Linux package manager handle Haskell packages is pretty far down most people's lists :P
[04:39:11] <sshine> I'd rather learn Nix then.
[04:39:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[04:40:20] <hololeap> well, I end up sending out a lot of PRs trying to get people to bump their dependencies! :)
[04:40:39] <hololeap> or remove certain dependencies... *cough* system-filepath *cough*
[04:40:45] *** Quits: nosewings (~ngpc@cpe-68-206-102-85.satx.res.rr.com) (Remote host closed the connection)
[04:41:35] <sshine> so... the gentoo-haskell packages have dependencies that aren't in hackage? or are you talking about unnecessary dependencies in hackage packages?
[04:42:23] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[04:43:57] <hololeap> we try to keep it so that (ideally) you could install all the packages available at once and not have any problems. in reality this isn't obtainable, but we try to shoot for a high percentage. as a consequence, we are often times patching packages for newer versions of libs or just doing simple bumps in the .cabal file
[04:45:02] <hololeap> but on occasion there is a popular package that is not trivial to patch and it just won't compile with newer libs, so we end up omitting the newer libs or "mask" them at the very least
[04:46:25] <hololeap> for instance, it's going to be a while before we bring aeson-2 in
[04:46:36] <hololeap> there's too little support for it right now
[04:46:36] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Read error: Connection reset by peer)
[04:46:55] <Inst[m]> Hecate: is there a roadmap for Haskell in 2022?
[04:47:12] <Inst[m]> It's often comforting to have a plan, even if deadlines and targets are not met
[04:48:16] <hololeap> it's a weird hobby, I admit :)
[04:48:42] *** Joins: tavares (~tavares@187.19.213.50)
[04:48:44] *** Quits: tavares (~tavares@187.19.213.50) (Remote host closed the connection)
[04:48:52] <Inst[m]> you could link it to donations, i.e, you underpromise for certain donation thresholds
[04:50:33] *** Quits: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[04:51:30] *** Joins: dajoer (~david@user/gvx)
[04:52:30] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:55:36] *** Quits: MatthiasG2 (~matthias@i6DFA03D9.versanet.de) (Quit: Lost terminal)
[04:59:43] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 256 seconds)
[05:01:37] <hololeap> I'm not sure enough people would donate for that to make sense. I like using gentoo's package manager for my haskell deps, so there's a personal incentive to work on it
[05:06:24] <hololeap> plus it teaches me about gentoo development and haskell/hackage development
[05:10:23] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:11:05] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.a357.priv.bahnhof.se) (Remote host closed the connection)
[05:11:23] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[05:11:47] <sshine> hololeap, constraint resolution is everybody's favorite hobby. some have wordle, you bump gentoo package constraints.
[05:12:06] <hololeap> lol
[05:12:13] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:d78:32a5:c637:9190)
[05:14:35] * sshine is caught up trying to find optimal paths through various wordle clones. -_-
[05:18:46] *** Quits: koolazer (~koo@user/koolazer) (Remote host closed the connection)
[05:19:10] <EvanR> there's at least 2 wordie, it's very confusing
[05:22:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:22:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:22:05] *** Joins: wroathe (~wroathe@user/wroathe)
[05:26:56] <sm> hololeap: yes I will sometimes do that manually if I care about installability over a wider range of dep versions. It's not a recurring thing usually, just a one time activity
[05:27:26] *** Joins: pavonia (~user@user/siracusa)
[05:28:18] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[05:28:29] <sm> when installability is less of a priority, I'll just set a more conservative bound, probably checking stackage snapshots or cabal matrix builder for guidance
[05:29:53] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[05:30:18] *** Joins: Erutuon (~Erutuon@user/erutuon)
[05:34:07] <hololeap> makes sense
[05:34:07] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:42] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:35:19] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[05:38:31] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:39:37] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[05:42:28] *** Joins: img (~img@user/img)
[05:42:47] *** Quits: mmhat (~mmh@55d49d8b.access.ecotel.net) (Ping timeout: 256 seconds)
[05:44:09] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[05:48:43] *** Joins: califax- (~califax@user/califx)
[05:50:57] *** Quits: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[05:51:41] *** Quits: Ariakenom_ (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: Leaving)
[05:52:25] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[05:53:13] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:d78:32a5:c637:9190) (Remote host closed the connection)
[05:53:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:53:22] *** califax- is now known as califax
[05:57:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:59:45] *** Quits: alp (~alp@user/alp) (Ping timeout: 250 seconds)
[06:00:23] *** Joins: mmhat (~mmh@55d44844.access.ecotel.net)
[06:02:51] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:03:03] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[06:04:53] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:07:26] *** Quits: xff0x (~xff0x@2001:1a81:5244:c900:2c67:9c0a:1653:d1e3) (Ping timeout: 260 seconds)
[06:09:04] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:a39:53d4:f8b2:1b4f)
[06:13:50] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[06:13:54] *** Joins: razetime (~quassel@49.207.209.26)
[06:13:57] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[06:16:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:20:45] *** Quits: alx741 (~alx741@157.100.197.240) (Quit: alx741)
[06:21:41] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:9964:9851:99b7:1e83)
[06:24:32] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:30:18] *** Quits: burnsidesLlama (~burnsides@dhcp168-031.wadham.ox.ac.uk) (Remote host closed the connection)
[06:32:07] *** Joins: leungbk (~brian@cpe-142-129-149-172.socal.res.rr.com)
[06:33:26] *** Joins: zebrag (~chris@user/zebrag)
[06:43:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:49:30] *** Joins: res0nat0r08 (~Fletch@dia.whatbox.ca)
[06:50:15] *** Joins: Taneb0 (~Taneb@2001:41c8:51:10d:aaaa:0:aaaa:0)
[06:50:31] *** Quits: srk (~sorki@user/srk) (Remote host closed the connection)
[06:50:31] *** Quits: derelict (~derelict@user/derelict) (Quit: bye)
[06:50:32] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[06:50:49] *** Joins: srk (~sorki@user/srk)
[06:50:51] *** Joins: derelict (derelict@user/derelict)
[06:51:25] *** Quits: welterde (welterde@thinkbase.srv.welterde.de) (Ping timeout: 240 seconds)
[06:51:25] *** Quits: res0nat0r0 (~Fletch@dia.whatbox.ca) (Ping timeout: 240 seconds)
[06:52:45] *** Joins: welterde (~welterde@thinkbase.srv.welterde.de)
[06:53:22] *** Joins: hexeme (~hexeme@user/hexeme)
[06:54:13] *** Quits: Taneb (~Taneb@runciman.hacksoc.org) (Ping timeout: 240 seconds)
[06:55:06] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[06:56:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:58:40] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[06:59:10] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[07:03:40] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[07:09:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[07:11:25] *** Quits: td_ (~td@muedsl-82-207-238-085.citykom.de) (Ping timeout: 256 seconds)
[07:12:43] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[07:12:52] *** Joins: td_ (~td@muedsl-82-207-238-241.citykom.de)
[07:19:21] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[07:20:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[07:20:19] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[07:22:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:26:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:29:37] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[07:31:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:31:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:31:32] *** Joins: wroathe (~wroathe@user/wroathe)
[07:41:06] *** Joins: shriekingnoise_ (~shrieking@201.231.16.156)
[07:41:38] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[07:42:21] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Ping timeout: 256 seconds)
[07:45:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:51:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:51:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:51:58] *** Joins: wroathe (~wroathe@user/wroathe)
[07:56:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:01:35] *** Joins: n_blownapart (~nb@135-180-218-226.fiber.dynamic.sonic.net)
[08:07:37] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[08:08:25] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:08:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[08:09:21] *** Quits: mmhat (~mmh@55d44844.access.ecotel.net) (Quit: WeeChat 3.4)
[08:12:06] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[08:20:19] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[08:24:30] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:a39:53d4:f8b2:1b4f) (Ping timeout: 250 seconds)
[08:25:15] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:8f21:adc2:1c05:78b)
[08:25:39] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[08:25:57] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[08:28:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[08:31:13] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[08:34:08] *** Joins: ario (~ario@159.65.220.102)
[08:36:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:40:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[08:42:39] *** Quits: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[08:48:38] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[08:52:37] *** Quits: leungbk (~brian@cpe-142-129-149-172.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:53:05] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:54:35] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[08:54:56] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[08:58:50] *** Joins: ardell (~ardell@user/ardell)
[09:00:26] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[09:03:35] *** Joins: leungbk (~brian@cpe-142-129-149-172.socal.res.rr.com)
[09:04:14] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[09:04:14] <Inst[m]> why is it
[09:04:19] <Inst[m]> that no one covers until?
[09:05:51] <Inst[m]> or more specifically, why is Richard Bird covering until?
[09:06:16] <dsal> covers until what?
[09:06:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:08:05] *** Joins: wyrd_ (~wyrd@gateway/tor-sasl/wyrd)
[09:09:07] <EvanR> :t until
[09:09:08] <lambdabot> (a -> Bool) -> (a -> a) -> a -> a
[09:09:24] <EvanR> cool
[09:09:26] <Inst[m]> it's Haskell's for loop
[09:09:29] <Inst[m]> that no one ever uses
[09:09:58] <EvanR> well it's limited to a very specific kind of loop
[09:10:04] <Inst[m]> until x y z = if x z then z else until x y (y z)
[09:10:15] <EvanR> @src until
[09:10:15] <lambdabot> until p f x | p x       = x
[09:10:15] <lambdabot>             | otherwise = until p f (f x)
[09:10:15] <Inst[m]> also there's no warning on infinite loops with it, but Bird covers it
[09:10:18] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[09:11:03] <Inst[m]> I'm more wondering why people haven't stolen until yet, simply because of the syntax, but it's probably because most languages don't have tco
[09:11:08] <EvanR> also this seems more like a `while' loop xD
[09:11:22] <EvanR> which are known to diverge from time to time
[09:14:39] <Inst[m]> it doesn't really have much of an advantage over:
[09:14:45] * Inst[m] uploaded an image: (14KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/tNDqnCYuezDWWCsWYeBPAcGo/image.png >
[09:16:12] <EvanR> they aren't really comparable
[09:16:30] <Inst[m]> i mean it's expression-based vs syntax-based language, also FP vs IP
[09:16:36] <Inst[m]> erm, statement-based language
[09:16:54] <janus> hololeap: if you need help to advance your PR for happstack-server, i'll happily help
[09:17:01] <Inst[m]> i was just wondering why someone didn't steal until syntax
[09:17:09] <EvanR> what syntax
[09:18:37] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 240 seconds)
[09:19:09] <dsal> It's just a function.
[09:19:13] <dsal> There are a lot of functions.
[09:19:16] <dsal> Have you tried fix?
[09:21:11] <janus> Inst[m]: i think a big part of the reason is that if you need imperative stuff like loops, you probably also need some effect. and then you need something like monad-loops
[09:21:27] *** Joins: Erutuon (~Erutuon@user/erutuon)
[09:22:32] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:22:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:23:08] <EvanR> untilM :: Monad m => m a -> m Bool -> m [a]
[09:23:17] <EvanR> in which case the condition test is conveniently 2nd
[09:23:56] <EvanR> "The condition is evaluated after the loop body" ah, that's why
[09:23:57] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[09:24:20] <EvanR> which is different from until. And why there's no standard for loops
[09:24:25] <EvanR> too many to choose from
[09:24:50] <janus> yeah, you can get into analysis paralysis :O
[09:25:00] <janus> i like https://hackage.haskell.org/package/break-1.0.2/docs/Control-Break.html 
[09:25:31] <janus> because breaking surely subsumes all of them. and then you don't have to figure out if it tests before or after
[09:25:47] <janus> but otoh it is the most imperative of all
[09:25:55] *** Joins: califax (~califax@user/califx)
[09:25:59] <janus> anyway, i like gabriel's packages, they always have good docs
[09:26:25] <EvanR> I like to see 6 year old packages still working xD
[09:26:47] <janus> why wouldn't it? the bounds are super loose
[09:27:15] <janus> and if it broke, i'd trust gabriel to fix it
[09:27:32] <EvanR> from the looks of it, it can't break, it's too simple!
[09:27:46] <janus> ;)
[09:27:50] <EvanR> lol "loose bounds" as grounds for being super reliable
[09:28:25] <EvanR> lets all burn our braz-- version bounds
[09:28:42] <janus> well if the loose bounds are also fortune telling, that would make them more reliable than others :P
[09:31:57] *** Quits: Andrew (andrew@andrewyu.org) (Ping timeout: 240 seconds)
[09:32:13] <EvanR> if you want subsumption, code your loop using Cont monads xD
[09:32:28] <EvanR> which subsumes all loops and more
[09:35:17] *** Joins: euouae (~euouae@user/euouae)
[09:35:37] <euouae> Hello are the hackage archive packages digitally signed?
[09:35:49] <euouae> or at least some of them?
[09:39:33] <sshine> I don't think so.
[09:39:35] *** Quits: phma (phma@2001:5b0:211f:7008:1fdf:50b9:29f4:b115) (Read error: Connection reset by peer)
[09:39:38] <euouae> got it, thank you 
[09:40:32] *** Joins: phma (phma@2001:5b0:211c:1a98:48d4:386a:82f8:d37)
[09:41:03] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[09:41:48] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[09:42:36] <sshine> euouae, it might be worth considering for https://dev.flora.pm/
[09:43:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[09:43:49] <euouae> sshine the search bar does not respond here
[09:43:55] *** Quits: n_blownapart (~nb@135-180-218-226.fiber.dynamic.sonic.net) (Quit: Lost terminal)
[09:44:07] <euouae> firefox 96.0 
[09:46:00] <random-jellyfish> can I get a state monad to return an infinite list? e.g. I want to generate an infinite list of random numbers
[09:46:19] <sshine> euouae, yeah, I just realize that page doesn't work very well.
[09:46:27] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[09:46:29] <sshine> euouae, I thought it was more functional, never mind. :)
[09:46:37] <c_wraith> random-jellyfish: sure. But...  You can do that without, too!
[09:46:55] <random-jellyfish> without the state monad?
[09:47:00] <c_wraith> yes
[09:47:14] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 260 seconds)
[09:47:16] <wavemode> randoms
[09:47:19] <sshine> https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-State-Lazy.html
[09:47:28] <c_wraith> But the most naive State version works with... yeah, that version
[09:47:58] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[09:48:07] <wavemode> :t randoms
[09:48:08] <lambdabot> (Random a, RandomGen g) => g -> [a]
[09:48:38] <random-jellyfish> okay
[09:48:57] <random-jellyfish> but as an exercise...how would I do that with a state monad?
[09:49:51] <c_wraith> with exactly what sshine linked to
[09:50:17] <c_wraith> Just write the naive code, pretend you don't care how much it leaks...
[09:50:26] <sshine> random-jellyfish, so... RandomGen is a type class, so you'd need a concrete implementation of it that works for a State monad. https://hackage.haskell.org/package/random-1.2.1/docs/System-Random.html#t:RandomGen
[09:50:32] <c_wraith> though to be fair, it's like that randoms leaks too
[09:50:35] <c_wraith> *likely
[09:50:51] <sshine> random-jellyfish, it looks like StateGen might work: https://hackage.haskell.org/package/random-1.2.1/docs/System-Random-Stateful.html#t:StateGen
[09:51:15] <sshine> random-jellyfish, I'd just use StdGen :)
[09:51:26] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[09:52:11] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:56:33] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:56:59] *** Joins: gentauro (~gentauro@user/gentauro)
[09:57:54] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[10:00:47] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[10:00:49] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[10:05:13] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[10:05:30] <ski> random-jellyfish : make sure to use `newStdGen' (not `getStdGen')
[10:09:18] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[10:09:48] *** Parts: nitrix (~nitrix@user/nitrix) (Leaving)
[10:09:58] *** Joins: notzmv (~zmv@user/notzmv)
[10:11:51] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[10:14:28] *** megeve_ is now known as megeve
[10:17:17] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[10:19:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[10:19:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:23:02] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:23:19] *** Joins: img (~img@user/img)
[10:24:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[10:29:52] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[10:31:04] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:34:17] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[10:36:13] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[10:37:49] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[10:45:37] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:48:44] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[10:50:13] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[10:50:20] *** Joins: img (~img@user/img)
[10:50:43] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 256 seconds)
[10:53:03] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[10:54:02] *** Joins: jespada (~jespada@87.74.36.188)
[10:57:17] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[10:58:08] *** Joins: messier102 (~messier10@user/messier102)
[11:00:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[11:04:19] *** Quits: wavemode (~wavemode@2601:241:0:fc90:e107:b5f8:8bcd:8e3a) (Ping timeout: 256 seconds)
[11:06:58] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[11:14:18] <hololeap> janus: I was waiting to see what would happen with this PR, but it doesn't look like it's going anywhere currently
[11:14:29] <hololeap> https://github.com/Gabriel439/Haskell-Turtle-Library/issues/54
[11:14:39] <hololeap> *issue, not PR
[11:15:10] <hololeap> janus: but you can pull in my PR if you want. I'll un-draft it
[11:16:41] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:20:36] <Sqaure> is there some way to find unused code in a project? 
[11:22:54] *** Joins: xkuru (~xkuru@user/xkuru)
[11:22:59] <hololeap> there's warnings you can turn on
[11:23:21] <hololeap> I think -Wall has most of them
[11:25:57] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:9964:9851:99b7:1e83) (Remote host closed the connection)
[11:26:38] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622) (Remote host closed the connection)
[11:28:40] <hololeap> actually, -W is all you need: https://downloads.haskell.org/ghc/8.10.6/docs/html/users_guide/using-warnings.html#ghc-flag--W
[11:29:15] <hololeap> those four -Wunused-* warnings
[11:32:10] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[11:36:40] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:36:48] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[11:36:48] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[11:36:48] *** Joins: turlando (~turlando@user/turlando)
[11:38:20] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[11:41:38] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[11:41:56] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[11:42:13] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[11:42:51] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[11:45:03] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[11:53:29] *** Quits: eoiles[m] (~eoilesmat@2001:470:69fc:105::1:6164) (Quit: You% have% been% kicked% for% being% idle)
[11:53:33] *** Quits: codygman[m] (~codygman@2001:470:69fc:105::b4ba) (Quit: You% have% been% kicked% for% being% idle)
[11:53:44] *** Joins: Graham31415 (~Graham314@213.237.82.193)
[11:54:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:55:42] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:30fc:7acd:1f91:844b)
[12:02:46] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[12:07:32] <hololeap> what is a .hs-boot file?
[12:08:31] <hololeap> oh, found it... nvm
[12:08:37] <pavonia> I think it's created to resolve dependencies if you have mutually recursive modules
[12:09:28] <hololeap> yeah
[12:09:28] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[12:10:21] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[12:11:25] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:13:09] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:13:43] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[12:14:01] *** Quits: leungbk (~brian@cpe-142-129-149-172.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:20:25] <Hecate> < Inst[m]> Hecate: is there a roadmap for Haskell in 2022? // Not that I know of
[12:26:54] *** Joins: leungbk (~brian@cpe-142-129-149-172.socal.res.rr.com)
[12:27:02] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622)
[12:27:51] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[12:30:13] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:30:27] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[12:30:40] *** Quits: xbreu (~xbreu@2001:470:69fc:105::1:5061) (Quit: You have been kicked for being idle)
[12:31:15] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:31:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622) (Ping timeout: 240 seconds)
[12:31:23] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:34:53] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:35:04] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:45:25] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[12:45:52] *** Joins: mcglk (~mcglk@131.191.49.120)
[12:47:39] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:39] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:42] *** allbery_b is now known as geekosaur
[12:49:18] *** Joins: MatthiasG2 (~matthias@i6DFA03D9.versanet.de)
[12:51:11] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:51:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:54:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:54:01] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:55:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[12:58:50] *** Joins: max22- (~maxime@2a01cb088335980099495edec395a55d.ipv6.abo.wanadoo.fr)
[13:03:26] *** Joins: yauhsien (~yauhsien@49.216.190.89)
[13:05:01] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[13:08:11] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[13:11:05] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:11:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[13:11:57] *** Quits: yauhsien (~yauhsien@49.216.190.89) (Read error: Connection reset by peer)
[13:14:58] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:18:04] *** Joins: ksqsf (~user@2001:da8:d800:611:a0b5:a752:45e1:ee6e)
[13:18:43] *** Joins: coot (~coot@213.134.190.95)
[13:19:07] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:21:20] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[13:29:56] *** Joins: namkeleser (~namkelese@124.188.192.57)
[13:34:14] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[13:34:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[13:35:16] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[13:36:05] <oscurochu> There are a bunch of http servers for haskell... which one should i use and why?
[13:36:25] <oscurochu> im looking to build a backend server.
[13:38:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:38:16] <Rembane> oscurochu: I like Scotty because it's a very simple HTTP server that's not too hairy to get setup. Servant is cool because types are cool. 
[13:39:31] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[13:40:03] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[13:42:23] <Las[m]> Does anyone know whether there's a flag to warn on .. imports?
[13:46:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc07:dd00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[13:47:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[13:48:01] <geekosaur> if you mean Type(..), no
[13:48:53] <geekosaur> if anything I'd expect the opposite, the most common patterns are Type(..) for all data constructors or Type for none (and then smart constructors)
[13:49:25] *** Joins: alp (~alp@user/alp)
[13:50:57] *** Joins: fef (~thedawn@user/thedawn)
[13:55:21] *** Joins: __monty__ (~toonn@user/toonn)
[13:55:55] *** Quits: __monty__ (~toonn@user/toonn) (Client Quit)
[13:56:13] *** Joins: __monty__ (~toonn@user/toonn)
[13:58:03] *** Quits: ksqsf (~user@2001:da8:d800:611:a0b5:a752:45e1:ee6e) (Ping timeout: 256 seconds)
[13:59:05] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:00:55] *** Joins: ksqsf (~user@2001:da8:d800:611:a0b5:a752:45e1:ee6e)
[14:01:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6)
[14:06:27] *** Quits: max22- (~maxime@2a01cb088335980099495edec395a55d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:07:15] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[14:09:29] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Read error: Connection reset by peer)
[14:18:37] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[14:18:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[14:20:11] <ksqsf> I'm using a mirror of Hackage, but Cabal upload wanted to upload to the mirror site. Is there any cabal config that sets the proper Hackage API root?
[14:22:38] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:23:53] *** Joins: jakalx (~jakalx@base.jakalx.net)
[14:25:18] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:27:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:28:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:30:36] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[14:31:02] *** Taneb0 is now known as Taneb
[14:31:16] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[14:36:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[14:38:29] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[14:42:37] *** Joins: tfeb (~tfb@5.133.43.132)
[14:43:34] *** Joins: tubogram4 (~tubogram@user/tubogram)
[14:45:56] *** Quits: tfeb (~tfb@5.133.43.132) (Client Quit)
[14:50:11] *** Joins: CHUD (~CHUD@dhcp6353.kent.ac.uk)
[14:52:00] *** Quits: tubogram4 (~tubogram@user/tubogram) (Quit: See ya later!)
[14:52:22] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[14:54:57] *** Joins: tubogram4 (~tubogram@user/tubogram)
[14:55:22] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:8f21:adc2:1c05:78b) (Ping timeout: 250 seconds)
[14:55:37] *** Joins: fendor (~fendor@91.141.79.239.wireless.dyn.drei.com)
[14:56:06] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[14:56:26] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:5087:4f80:f91e:3652)
[14:57:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[15:02:19] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 256 seconds)
[15:08:39] <CHUD> I get an error whenever I try to run this distance :: double distance x1 y1 x2 y2= sqrt ((x2-x1)^2 + (y2-y1)^2)
[15:09:04] <geekosaur> :t sqrt
[15:09:05] <lambdabot> Floating a => a -> a
[15:09:10] <geekosaur> :t (^)
[15:09:11] <lambdabot> (Integral b, Num a) => a -> b -> a
[15:09:57] <CHUD> they are different types 
[15:10:52] <geekosaur> you might show the error, but I already see a problem if you didn't include the parameter types
[15:11:42] <geekosaur> > let distance :: Double; distance x1 y1 x2 y2 = sqrt ((x2-x1)^2 + (y2-y1)^2) in distance 1 2 1 2
[15:11:43] <lambdabot>  error:
[15:11:43] <lambdabot>      â€¢ Couldn't match expected type â€˜Doubleâ€™
[15:11:43] <lambdabot>                    with actual type â€˜a0 -> a0 -> a0 -> a0 -> a0â€™
[15:12:16] *** Joins: ardell_ (~ardell@user/ardell)
[15:12:27] <CHUD> so I need to say I am expecting 4 doubles and say I am expecting the return type to also be a double 
[15:12:51] *** Quits: ardell (~ardell@user/ardell) (Ping timeout: 256 seconds)
[15:13:15] <geekosaur> > let distance :: Double -> Double -> Double -> Double -> Double; distance x1 y1 x2 y2 = sqrt ((x2-x1)^2 + (y2-y1)^2) in distance 1 2 1 2
[15:13:16] <lambdabot>  0.0
[15:13:34] *** Joins: Topsi (~Tobias@dyndsl-095-033-026-182.ewe-ip-backbone.de)
[15:14:18] <geekosaur> > let distance :: Double -> Double -> Double -> Double -> Double; distance x1 y1 x2 y2 = sqrt ((x2-x1)^2 + (y2-y1)^2) in distance 1 1 2 2
[15:14:19] <lambdabot>  1.4142135623730951
[15:14:38] <geekosaur> would help if I read the parameters correctly :>
[15:15:32] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:16:57] <CHUD> so I put distance :: Double -> Double -> Double -> Double -> Double distance x1 y1 x2 y2= sqrt ((x2-x1)^2 + (y2-y1)^2) but I was wondering why did you put let in front of the first line?
[15:17:16] <CHUD> I there a way to do multiline on IRC?
[15:18:02] <geekosaur> no, and lambdabot only does expressions so I had to do it with a let-in
[15:18:07] <c_wraith> not really.  Using the pastebin is recommended
[15:18:40] <geekosaur> % distance :: Double -> Double -> Double -> Double -> Double; distance x1 y1 x2 y2 = sqrt ((x2-x1)^2 + (y2-y1)^2)
[15:18:40] <yahb> geekosaur: 
[15:18:46] <geekosaur> % distance 1 1 2 2
[15:18:46] <yahb> geekosaur: 1.4142135623730951
[15:18:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:19:06] <CHUD> Ok, cool, thank you 
[15:19:10] <geekosaur> yahb is actual ghci. still doesn't do multiline though
[15:19:12] *** Quits: Unhammer (~Unhammer@user/unhammer) (Ping timeout: 250 seconds)
[15:19:27] *** Quits: Graham31415 (~Graham314@213.237.82.193) (Quit: Client closed)
[15:20:18] *** Joins: APic (apic@apic.name)
[15:26:41] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:28:53] *** Joins: max22- (~maxime@2a01cb08833598005486a79f6b483be0.ipv6.abo.wanadoo.fr)
[15:30:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[15:31:15] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[15:31:22] *** Joins: alx741 (~alx741@157.100.197.240)
[15:31:46] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:5087:4f80:f91e:3652) (Ping timeout: 250 seconds)
[15:33:18] *** Joins: Unhammer (~Unhammer@user/unhammer)
[15:37:24] *** Joins: RFV (~Thunderbi@135.red-88-5-244.dynamicip.rima-tde.net)
[15:38:47] *** Quits: RFV (~Thunderbi@135.red-88-5-244.dynamicip.rima-tde.net) (Client Quit)
[15:44:34] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[15:45:23] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[15:51:23] <CHUD> Is using the || operator appropriate here? https://paste.tomsmeding.com/cZqd2g4N
[15:52:18] <CHUD> When I checked it first time I kept getting an error, I think it was an indentation issue but it seems to work now
[15:53:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:53:39] <geekosaur> it's fine
[15:53:41] <byorgey> CHUD: looks OK to me, assuming the intention is that either of those two passwords should work
[15:54:01] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:5087:4f80:f91e:3652)
[15:55:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:56:57] <CHUD> I tried to initially solve it in replit and I got a scope error https://paste.tomsmeding.com/PwYSFVD8 I don't understand why though 
[15:58:01] <geekosaur> I'd have to see more, but by itself the error is correct
[16:00:00] <CHUD> https://replit.com/join/olbucvxubu-sr53
[16:00:05] <geekosaur> if I had to guess I'd say you needed to use multiline input
[16:01:34] <CHUD> I got even more errors :/ f
[16:01:54] <geekosaur> indentation
[16:04:26] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[16:09:28] <CHUD> geekosaur: thanks dude
[16:10:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[16:11:03] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[16:13:40] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:13:57] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[16:14:41] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[16:15:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:16:13] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[16:16:18] <Inst[m]> sort of embarrassing
[16:16:25] <geekosaur> at this point you might want to learn about guards
[16:16:25] <Inst[m]> class Monad m => MonadReader r m | m -> r where
[16:16:42] <Inst[m]> wait, was that in reply to me?
[16:16:46] <geekosaur> no
[16:16:52] <geekosaur> that was to CHUD
[16:16:57] <Inst[m]> why is there a | in the class definition? I checked Haskell Report
[16:17:14] <Inst[m]> is it valid to put a | in a class definition?
[16:17:15] <geekosaur> it's called a functional dependency, and it's not in the Report
[16:17:23] <Inst[m]> thank you so much
[16:17:44] <geekosaur> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/exts/functional_dependencies.html
[16:18:13] <Inst[m]> https://wiki.haskell.org/Functional_dependencies
[16:18:46] <CHUD> geekosaur: yeah, it's in lecture 2, shall I jump to it now? I'm up to exercise 7 from the pset
[16:18:57] *** Quits: fendor (~fendor@91.141.79.239.wireless.dyn.drei.com) (Remote host closed the connection)
[16:19:21] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[16:19:23] <geekosaur> CHUD, probably not yet. but this looks like it'll show you why we use guards :)
[16:20:44] <geekosaur> there's also MultiWayIf but I assume they don't want you to use extensions either
[16:20:52] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4)
[16:21:06] <CHUD> geekosaur: what are extensions?
[16:21:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[16:21:36] <geekosaur> extennsions to standard Haskell as defined in the Haskell Report
[16:21:46] <geekosaur> ghc has a bunch of extensions
[16:21:54] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[16:21:54] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[16:21:54] *** Joins: turlando (~turlando@user/turlando)
[16:22:13] <CHUD> I think I should use the bare minimum I don't think for assessments they will allows anything except a basic text editor and the terminal 
[16:23:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[16:24:27] <CHUD> Do I always include the type annotation/signature in a programme? 
[16:24:55] <geekosaur> it's generally a good idea
[16:25:12] <geekosaur> haskell doesn't require it, but it often makes tracking down type errors easier
[16:25:56] <messier102> A good rule of thumb is to explicitly annotate your function types, while local definitions can be left to automatic inference
[16:26:15] <Inst[m]> if it's for uni, you have a style guide and it probably requires type sigs / annotations
[16:27:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:27:13] <CHUD> I think if it helps track type errors I will include it 
[16:27:32] <CHUD> especially while learning, it's probably best to at this stage
[16:27:38] <Inst[m]> type annotations are usually for the dev / reader, i.e, it makes it easier to understand what the functions actually do
[16:28:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:28:13] <geekosaur> they're also useful when working with numbers, since haskell will happily infer nonsense like (Integral a, Fractional a) => a
[16:28:33] <geekosaur> and putting type ascriptions everywhere will help you localize where you made the mistake
[16:28:34] <Inst[m]> iirc, the stuff HLS suggests to your editor, what is that called again?
[16:28:58] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4) (Remote host closed the connection)
[16:29:14] <messier102> Inst[m]: type lenses?
[16:30:01] <messier102> https://haskell-language-server.readthedocs.io/en/latest/features.html#add-type-signature
[16:30:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:30:15] <Inst[m]> i'm sort of dependent on type lenses :(
[16:31:31] <geekosaur> I'll also mention that ghc will almost always infer the most general type possible for something, but you may want to constrain it beyond that and a type signature will let you do so
[16:31:46] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[16:31:57] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[16:32:05] <messier102> function type inference is nice for interactive stuff, but I feel like for anything beyond toy snippets it's a mistake to rely on
[16:32:31] <messier102> Rust made the right choice to require explicit signatures imho
[16:32:40] <Inst[m]> hmmm, what happens if i install haskell platform despite having GHCup installed?
[16:32:49] <geekosaur> you can enable that
[16:33:01] <maerwald> Inst[m]: nothing
[16:33:17] <maerwald> Inst[m]: which GHC is picked depends on how your PATH variable is configured
[16:33:29] <maerwald> run `which ghc` to see 
[16:33:34] <geekosaur> -Werror=missing-signatures iirc
[16:33:51] <Inst[m]> just going to install it, see what happens
[16:34:21] <geekosaur> I thought the platform was gone, tbh
[16:34:30] <maerwald> Inst[m]: each ghc installation has its own global pkg database... they don't conflict. cabal however only distinguishes compilers by version
[16:34:52] <maerwald> that can (in some cases) cause trouble
[16:34:55] <maerwald> but not generally
[16:35:04] <Inst[m]> i have no idea where this comes from
[16:35:05] <geekosaur> the preferred way to do things is to use stack or cabal v2, not install a bunch of libs globally that you then can't safely upgrade for a project that needs something newer
[16:35:09] <Inst[m]> https://downloads.haskell.org/~platform/8.6.5/
[16:35:19] <Inst[m]> just hoping it comes with winghci or something like that
[16:35:20] <messier102> geekosaur: thank you
[16:35:22] <maerwald> Inst[m]: on windows?
[16:35:29] <maerwald> Please use chocolatey or ghcup on windows
[16:35:33] <maerwald> platform is not supported anymore
[16:35:45] <maerwald> we won't be helping you :p
[16:36:43] <Inst[m]> i just wish i weren't a freaking skid, otherwise i'd work on projects improving windows IDE etc support
[16:37:02] *** Quits: the_proffesor (~theproffe@user/theproffesor) (Ping timeout: 240 seconds)
[16:38:15] <Inst[m]> although tbh given tendencies in haskell community, the language would probably fork into multiple custom preludes if the userbase was 10x larger
[16:38:35] <geekosaur> there are already multiple custom preludes
[16:38:41] <maerwald> xD
[16:39:08] <Inst[m]> there are, but they haven't forked the language
[16:39:10] <maerwald> Inst[m]: if you have knowledge about MSIX installers, lets me know
[16:39:14] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:39:33] <Inst[m]> it's somethign you guys are actively working on?
[16:39:34] <Inst[m]> great to hear
[16:40:03] <maerwald> it's just an idea to get something into MS store
[16:40:10] <maerwald> e.g. ghcup or GHC bindist itself
[16:40:38] <maerwald> we have exactly one GHC devs who knows windows, so...
[16:40:52] *** Quits: ksqsf (~user@2001:da8:d800:611:a0b5:a752:45e1:ee6e) (Remote host closed the connection)
[16:41:14] <messier102> I think you don't need to package as MSIX for the updated Windows store, do you?
[16:41:24] <Inst[m]> you'd actually be better off trying to turn an experienced windows dev into a haskeller
[16:41:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[16:41:57] <maerwald> Inst[m]: they're too pragmatic to waste their time on something like that
[16:41:58] <Inst[m]> it's great fun selling haskell as a scam, i.e, "if you use defer type errors, it's almost like it's a dynamic language!"
[16:42:07] <geekosaur> I thought the HF was supposed to be working on improving that situation
[16:42:31] <Inst[m]> they probably are, but outsourced it to maerwald
[16:42:31] <maerwald> geekosaur: they'd support someone spearheading MS store inclusion
[16:42:45] <maerwald> exactly
[16:43:00] <Inst[m]> i'd love it too, if it could save me 90 minutes getting someone to get VSC / GHCup installed and configured
[16:43:03] *** Quits: Philonous (~Philonous@user/philonous) (Quit: ZNC - https://znc.in)
[16:43:10] <maerwald> the main issue is msys2
[16:43:28] <geekosaur> I meant getting windows devs, and more generally improving the windows experience
[16:43:33] *** Joins: Philonous (~Philonous@user/philonous)
[16:43:46] <geekosaur> msys2 is a lousy way to get windows support
[16:43:53] <Inst[m]> lol btw anyone know how to get runghc to support RTS options?
[16:44:00] <maerwald> ghcup/cabal/GHC/stack all need a working msys2 installation... both stack and ghcup bootstrap an msys2 themselves... and msys2 is really hard to package as a clean install-uninstall target, because it's mutable
[16:44:01] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Remote host closed the connection)
[16:44:25] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[16:44:36] <Inst[m]> why not just have a slaved msys2?
[16:44:44] <maerwald> slaved?
[16:44:47] <Inst[m]> i guess someone will come in and complain about all the disk space you're wasting
[16:44:57] <Inst[m]> i mean that GHCup already installs its own msys2
[16:45:22] <maerwald> it does so via a powershell script... the binary itself (handling GHC versions) has no knowledge of it
[16:45:23] <Inst[m]> i think on this machine i technically have cygwin, but don't use it, etc
[16:45:44] <Inst[m]> also thanks for making GHCup usable on windows
[16:46:11] <geekosaur> re RTS options, it looks like it supports RTS options but was not built with -threaded so -N doesn't work
[16:46:16] <Inst[m]> I'm not sure what I'd do without it, i.e, I was briefly considering learning OCaml (up to and only including a bootstrap), but decided to give up after I realized it wasn't trivial to get the compiler installed
[16:46:22] *** Joins: fendor (~fendor@91.141.79.239.wireless.dyn.drei.com)
[16:46:25] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:46:26] <Inst[m]> i need it to use winIO
[16:46:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[16:46:46] <Inst[m]> i'm also wondering if you can get a full GHCup installation via a VSC extension
[16:46:50] <Inst[m]> that would actually be ridiculously convenient
[16:47:09] *** Quits: ellie (~ellie@user/ellie) (Ping timeout: 250 seconds)
[16:47:11] <maerwald> I think VSCode already uses ghcup for some stuff afair
[16:47:15] <maerwald> not sure
[16:47:54] <messier102> What would the benefit of getting on MS store be as opposed to the current state of affairs?
[16:48:13] <Inst[m]> i'm pretty dependent on VSC, it's just way too much fun having type lenses, having a haskelly hack that can call GHCi, etc
[16:49:02] <Inst[m]> messier102; at least in my use case, getting some rube to run a powershell script requires lots of trust, and you have to trust haskell.org hasn't been compromised, which, for haskellers, isn't such a big problem
[16:49:13] <maerwald> messier102: running a powershell script from the internet on your computer isn't as cool as getting it certified from the MS store?
[16:49:24] <maerwald> not sure windows users care, though
[16:49:24] <Inst[m]> everyone else? "this is a niche language that i've never heard of that wants me to run a powershell script"
[16:49:49] <maerwald> maybe it's part of the expected experience to get viruses from installers and then have windows defender clean it up
[16:50:15] <maerwald> like the whole experience
[16:50:17] <maerwald> xD
[16:50:42] <messier102> That's fair, but at the same time I don't think any other language does it all that differently
[16:50:54] <maerwald> someone claimed python is in MS store
[16:50:55] <messier102> It's always either an installer or a spooky looking shell script
[16:51:43] <messier102> maerwald: It is, yes. Actually the default `python` command on a clean Windows install will link you to the store page, which can be a source of problems in and of itself
[16:51:46] <Inst[m]> you install visual studio (community iirc) for C++
[16:52:15] <maerwald> https://www.microsoft.com/en-us/p/python-39/9p7qfqmjrfp7#activetab=pivot:overviewtab
[16:52:24] <maerwald> I think that's pretty cool
[16:53:00] <messier102> Getting PL runtimes off of MS store feels weird conceptually, but who knows
[16:53:31] <messier102> Or toolchains, I should say
[16:54:01] <messier102> Then again, all the WSL Linux distros is on the store too
[16:58:02] <messier102> Ah, I suppose it would make more sense to be able to do `winget haskell` or some such
[16:59:41] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[17:00:48] *** Joins: pothepanda (~pot_@109.249.187.17)
[17:01:07] *** Parts: pothepanda (~pot_@109.249.187.17) ()
[17:01:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:03:07] <mon_aaraj> Hey, I have been trying to get ghcup with GHCUP_USE_XDG_DIRS, but it generates symlinks with broken paths into my ~/.local/bin, any idea how to fix it from doing that? I would like to evade putting .ghcup in my home directory 
[17:03:35] <maerwald> mon_aaraj: where do the links point to
[17:04:01] <maerwald> and what are your XDG variables
[17:04:09] <maerwald> I assume they point outside of home?
[17:04:18] *** Joins: pothepanda (~pot_@109.249.187.17)
[17:04:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[17:05:21] <mon_aaraj> for example, a binary in ~/.local/bin/runghc points to `../share/ghcup/ghc/8.10.7/bin/runghc`, i believe the only variable that matters here is XDG_DATA_HOME which is ~/.local/share for me 
[17:05:57] *** Joins: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net)
[17:06:09] *** Joins: [exa] (~exa@user/exa/x-3587197)
[17:06:17] <mon_aaraj> running `file ~/.local/bin/runghc` results in `/home/mon/.local/bin/runghc: broken symbolic link to ../share/ghcup/ghc/8.10.7/bin/runghc`, which is how i know it is a broken symlink 
[17:06:48] <maerwald> lemme try
[17:08:23] <maerwald> mon_aaraj: GHCUP_INSTALL_BASE_PREFIX should definitely work though
[17:08:53] <Inst[m]> wait, there's no way to get runghc to use winio without modifying global environment variables, is there?
[17:09:01] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 256 seconds)
[17:10:11] *** Joins: jespada (~jespada@87.74.36.188)
[17:10:37] *** Quits: yauhsien (~yauhsien@61-231-25-133.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:12:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:14:06] <maerwald> mon_aaraj: works here
[17:14:52] <maerwald> mon_aaraj: can you pastebin all your env?
[17:15:33] <mon_aaraj> alright, let me see
[17:16:00] *** Joins: gaff (~gaff@49.207.224.13)
[17:16:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:16:33] <mon_aaraj> https://bpa.st/OJHQ
[17:16:46] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:25] <geekosaur> Inst[m], --ghc-arg=+RTS --ghc-arg=--io-manager=native --ghc-arg=-RTS
[17:17:42] <Inst[m]> thank you so much
[17:17:44] <gaff> if you have something like `data  X = X Int`, is it possible to enforce a constraint on what `Int` values are allowed? for example, suppose you want to allow only 1 & 2.
[17:18:10] <geekosaur> gaff, no, ghc does not support subtyping
[17:18:19] <geekosaur> you have to use a smart constructor
[17:18:32] <gaff> yeah, i thought so.
[17:18:45] <maerwald> mon_aaraj: what are the contents of ~/.local/share/ghcup?
[17:18:48] <Inst[m]> so every ghc-arg has to be explicitly spelled out, instead of allowing a block
[17:18:50] <geekosaur> liquid haskell supports this iirc
[17:18:56] <geekosaur> Inst[m], yes
[17:19:18] <maerwald> mon_aaraj: and what is your ghcup version?
[17:19:32] <gaff> smart constructor is just a function that simply creates `X  1`, or `X  2`, in this example?
[17:19:47] <geekosaur> yes
[17:20:29] <gaff> and you don't expose the type declaration outside the module, but you just expose the smart constructor to outsiders?
[17:20:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[17:20:38] <geekosaur> correct
[17:20:46] <gaff> ah, i thought so
[17:20:54] <geekosaur> well, you expose the type constructor but not the data constructor(s)
[17:20:58] <gaff> funny name: "smart constructor"
[17:21:11] <gaff> geekosaur: correct
[17:22:28] <gaff> geekosaur: thanks much.
[17:22:58] <mon_aaraj> here: https://bpa.st/IE3Q with ghcup version v0.1.17.4
[17:23:09] <gaff> are there any plans to allow such a thing using language extensions in the future?  i suppose not but hought i would ask.
[17:24:05] <maerwald> mon_aaraj: your paste indicates that the link is not broken
[17:24:07] <maerwald> I'm confused
[17:24:30] *** Joins: Graham31415 (~Graham314@213.237.82.193)
[17:24:32] <mon_aaraj> huh, i guess `file` got it wrong? 
[17:24:45] <maerwald> can you run ~/.local/bin/runghc?
[17:25:02] <mon_aaraj> nope, `zsh: no such file or directory: /home/mon/.local/bin/runghc`
[17:26:05] <mon_aaraj> or anything else inside ~/.local/bin made by ghcup, i have had this issue days ago, but i've tried everything to fix it, including nuking ghcup and reinstalling it, but it didn't work 
[17:26:39] <maerwald> mon_aaraj: wait, so the symlink points to itself?
[17:26:40] <Inst[m]> hmmm
[17:26:41] <Inst[m]> this is nice
[17:26:47] <Inst[m]> haskell platform is technically installed, but i didn't let it do a damn thing to path variables
[17:27:47] *** Quits: gaff (~gaff@49.207.224.13) ()
[17:29:12] <mon_aaraj> well, I don't think so, here's the output of `ls -Alh ~/.local/bin/`: https://bpa.st/3AWA
[17:29:34] <mon_aaraj> oh, wait, i think i realise why 
[17:29:40] <maerwald> mon_aaraj: those links look all correct
[17:30:06] <mon_aaraj> oh, then nevermind 
[17:30:24] <maerwald> can you run ~/.local/share/ghcup/ghc/8.10.7/bin/runghc?
[17:30:59] <maerwald> I have a feeling you can't run the extracted binaries
[17:31:28] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622)
[17:31:56] <mon_aaraj> well when i try to run just that path it doen't do anything for a while, but when i add --version it says: `runghc 8.10.7`
[17:32:09] *** Quits: pothepanda (~pot_@109.249.187.17) (Ping timeout: 256 seconds)
[17:32:49] <mon_aaraj> hold on, maybe symlinks could mess with it? i have ~/.local/bin also symlinked to ~/Git/dotfiles/.local/bin, so maybe for some reason it goes to the Git folder instead of going to local when it does `..`
[17:32:57] <maerwald> oh gosh
[17:33:07] <maerwald> yes
[17:33:23] <mon_aaraj> huh, alright then 
[17:33:27] <maerwald> that could be considered a bug indeed... we don't run realpath on ~/.local/bin
[17:33:37] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 240 seconds)
[17:33:49] <mon_aaraj> ah, i see! Thank you so much for your help
[17:34:38] <Inst[m]> okay, now to uninstall haskell platform
[17:34:38] <mon_aaraj> meanwhile i will try your suggestion to use BASE_PREFIX
[17:34:45] <Inst[m]> what does it actually come with?
[17:35:03] <maerwald> https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/311
[17:35:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622) (Ping timeout: 240 seconds)
[17:35:44] <maerwald> mon_aaraj: you can also use bind-mounts instead of symlinks
[17:35:55] <mon_aaraj> i forgot about that 
[17:36:08] <maerwald> although bind mounts can cause funny bugs with recursive file operations
[17:36:20] <maerwald> but not in this case I think
[17:36:33] <mon_aaraj> yeah, they kind of sound scary to do haha but i've never played much with them, so that is a great suggestion 
[17:36:44] <mon_aaraj> thank you so much for your help once again! 
[17:37:05] <maerwald> I've tested once whether file managers detect infinite recursion due to bind mounts, but most don't
[17:39:16] <mon_aaraj> that's sad, but i wouldn't have thought any of em did, i am kind of curious about which ones you found detected them?
[17:40:54] <maerwald> only my own xD
[17:42:43] *** Joins: Guest21 (~Guest21@94.19.154.46)
[17:42:49] <Inst[m]> hmmm, maybe i need to reinstall ghcup... again
[17:43:06] <Inst[m]> or maybe just a reinstall would work
[17:43:42] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:95fa:7805:c4e7:5d84)
[17:44:35] <Inst[m]> guess it's my fault for installing haskell platform
[17:44:39] <Inst[m]> winio seems to be broken now
[17:45:07] *** Joins: Kosades (~Kosades@94.19.154.46)
[17:45:16] *** Quits: Guest21 (~Guest21@94.19.154.46) (Client Quit)
[17:46:17] *** Joins: rustisafungus (~rustisafu@2602:306:cd3c:9350:95fa:7805:c4e7:5d84)
[17:47:02] *** Joins: APic (apic@apic.name)
[17:47:03] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[17:47:47] *** Quits: messier102 (~messier10@user/messier102) (Ping timeout: 256 seconds)
[17:47:57] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:95fa:7805:c4e7:5d84) (Ping timeout: 240 seconds)
[17:48:04] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:50:16] *** Joins: Everything (~Everythin@37.115.210.35)
[17:53:56] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:54:59] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[17:57:45] *** Quits: Graham31415 (~Graham314@213.237.82.193) (Quit: Client closed)
[17:58:27] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:58:55] *** Quits: Kosades (~Kosades@94.19.154.46) (Quit: Client closed)
[17:59:44] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:5d10:aa97:98cb:a150)
[18:01:36] <Inst> do you know who do I talk to to complain about WinIO?
[18:01:37] *** Quits: rustisafungus (~rustisafu@2602:306:cd3c:9350:95fa:7805:c4e7:5d84) (Ping timeout: 240 seconds)
[18:01:40] <Inst> or at least, try to debug it?
[18:02:34] <[exa]> Inst: it seems quite unmaintained
[18:03:37] <[exa]> what functionality from there are you using? chances are there's a better way now
[18:05:34] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:07:41] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[18:10:57] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[18:11:30] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:12:01] *** Quits: max22- (~maxime@2a01cb08833598005486a79f6b483be0.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[18:16:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6) (Read error: Connection reset by peer)
[18:16:51] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a)
[18:23:38] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[18:24:21] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:5d10:aa97:98cb:a150) (Read error: Connection reset by peer)
[18:24:57] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:5087:4f80:f91e:3652) (Ping timeout: 240 seconds)
[18:25:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:26:11] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:bf98:a5c2:4041:4009)
[18:27:57] <CHUD> Is there a way to view each evaluation in Haskell for example yesterday I asked what f x = if even (x + 1) then x + 1 else f (x - 1) evaluated to at each step and opqdonut responded with  f 3 ==> if even (3+1) then 3+1 else f (3-1) ==> if True then 3+1 else f (3-1) ==> 3+1 ==> 4
[18:29:28] <CHUD> it could be a simpler like this example factorial 3   ==> 3 * factorial (3-1)   ==> 3 * factorial 2   ==> 3 * 2 * factorial 1   ==> 3 * 2 * 1   ==> 6
[18:29:50] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:30:17] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[18:32:16] *** Joins: ardell (~ardell@user/ardell)
[18:32:47] *** Quits: ardell_ (~ardell@user/ardell) (Ping timeout: 256 seconds)
[18:33:11] <geekosaur> you could try ghc-vis
[18:33:17] <geekosaur> @hackage ghc-vis
[18:33:17] <lambdabot> https://hackage.haskell.org/package/ghc-vis
[18:34:57] <CHUD> cool, I will try it out when I get home, can't install anything on computer lab pcs
[18:37:23] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:38:46] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[18:40:17] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Read error: Connection reset by peer)
[18:40:39] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:41:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:43:07] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: WeeChat 3.4)
[18:46:53] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[18:47:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:47:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:47:40] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:35] *** Joins: x_kuru (~xkuru@user/xkuru)
[18:48:53] *** Quits: namkeleser (~namkelese@124.188.192.57) (Quit: Client closed)
[18:48:59] *** Joins: vysn (~vysn@user/vysn)
[18:50:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[18:51:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:51:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:52:55] <Inst[m]> [exa]: winio is a new feature to make haskell compatible with windows console, in 9.0.1, or maybe 8.12 or something
[18:53:28] <Inst[m]> somehow it bugged out and is now causing getLine to freak out
[18:53:42] <geekosaur> --io-manager=native is ghc 9.0.1 and later
[18:54:13] *** Joins: stef204 (~stef204@user/stef204)
[18:54:14] <Inst[m]> i was warned! it's probably the installation and uninstallation of haskell platform that did this :(
[18:54:21] <Inst[m]> or maybe something crashed and winio couldn't terminate smoothly
[18:54:52] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[18:57:46] <xerox> CHUD: there's also simple-reflect that can show some interesting things
[18:58:15] <CHUD> is that a extension?
[18:58:25] <geekosaur> nope, just a library
[18:58:27] <CHUD> package*
[18:58:30] <CHUD> oh 
[18:58:33] <geekosaur> > foldr f z [a,b,c]
[18:58:34] <lambdabot>  f a (f b (f c z))
[18:58:49] <geekosaur> lambdabot has simple-reflect loaded
[18:59:00] <geekosaur> it takes over all the single-letter variables
[19:00:05] <xerox> > reduction $ fix (\f x -> if even (x + 1) then x + 1 else f (x - 1)) $ 2
[19:00:06] <lambdabot>  [2 - 1 + 1,1 + 1,2]
[19:00:28] <xerox> nicer with a mapM_ print $ in front in your ghci (:
[19:00:53] <geekosaur> %% mapM_ print $ reduction $ fix (\f x -> if even (x + 1) then x + 1 else f (x - 1)) $ 2
[19:00:53] <yahb> geekosaur: http://qp.mniip.com/y/41
[19:00:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:01:26] <geekosaur> oh right, no simple-reflection in yahb :(
[19:01:36] <geekosaur> % import Debug.SimpleReflect
[19:01:36] <yahb> geekosaur: 
[19:01:42] <geekosaur> %% mapM_ print $ reduction $ fix (\f x -> if even (x + 1) then x + 1 else f (x - 1)) $ 2
[19:01:42] <yahb> geekosaur: http://qp.mniip.com/y/42
[19:02:14] <xerox> hehehe
[19:08:41] <[exa]> Inst[m]: oh so, I googled the wrong thing
[19:09:00] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:44dc:4b88:2c8a:316d)
[19:09:06] <Inst> thanks for trying to help @hexa
[19:09:19] *** Joins: messier102 (~messier10@user/messier102)
[19:10:21] <[exa]> I was a bit curious about what they actually did there
[19:10:55] <[exa]> looks a bit more than "console compatibility"
[19:11:19] <Inst> getLine and getChar aren't working anymore
[19:11:19] *** Joins: fef (~thedawn@user/thedawn)
[19:11:25] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[19:11:56] <Inst> two hypotheses: either, one, I crashed winio and it hada improperly set console settings, or two, haskell platform screwed with settings that weren't fixed by uninstall
[19:12:03] <geekosaur> https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/9.0.1-notes.html
[19:12:26] <geekosaur> the new io manager is listed in the highlights, and links to a youtube presentation
[19:13:07] <CHUD> is it possible to see this channels chat history?
[19:13:09] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[19:13:22] <Inst[m]> i guess you're a Discord native?
[19:13:26] <Inst[m]> get Matrix
[19:13:40] <CHUD> I have Matrix 
[19:13:44] <[exa]> CHUD: it's in topic :]
[19:13:49] <CHUD> ohhh
[19:13:53] <Inst[m]> then just scroll up
[19:14:11] <Inst[m]> as far as matrix bridge is capable of doing so
[19:14:15] <[exa]> wow the winio effort is actually huge
[19:14:15] <Inst[m]> with the logs, etc
[19:14:19] <CHUD> I'm not on matrix rn I'm using gamja 
[19:14:33] <Inst[m]> getting windows codemonkeys into haskell is good for the ecosystem
[19:14:48] <Inst[m]> better haskell chimps than codemonkeys
[19:14:51] <CHUD> but I need to take a walk and if I leave my PC for too long it will logout and I don't want to lose chat history 
[19:14:55] <[exa]> not sure how windows is doing now but the last time I tried to get async IO working, I found like 3 uncodumented bugs in both possibilities and then gave up
[19:14:56] <Inst[m]> can be used for linguistics / ethology experiments :)
[19:15:16] <[exa]> CHUD: did you see the "logs" link in /topic right?
[19:15:41] <geekosaur> it's the last entry in the topic
[19:15:58] <CHUD> oh nice
[19:16:01] <[exa]> (also, you might want to reflect on the transient nature of the mood of this conversation :] )
[19:16:02] <geekosaur> I use it somewhat regularly, to the point that my browser autocompletes it if I type "irc" :)
[19:16:15] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:16:16] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[19:16:36] <CHUD> I just don't want to ask the same question again if I can avoid it 
[19:16:58] <[exa]> like, you can write down what you found
[19:17:07] <[exa]> but the irc logger solves it too I guess
[19:17:36] <CHUD> I did do that briefly yesterday, but I was only asking a single line question, it's been more back and forth today 
[19:19:44] <[exa]> you even have a nice profile there now https://ircbrowse.tomsmeding.com/nick/CHUD
[19:20:19] <CHUD> Yeah I just saw that 
[19:20:25] <CHUD> is my IP public?
[19:20:57] <[exa]> yeah, IRC makes hosts visible
[19:20:58] <geekosaur> currently yes
[19:21:07] <[exa]> you can setup a cloak (register with NickServ)
[19:21:22] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:3911:f302:476a:5d4c)
[19:21:23] <CHUD> Can I cloak without registering?
[19:21:27] <geekosaur> no
[19:21:32] <CHUD> alright
[19:21:36] <geekosaur> the cloak is tied to the registration
[19:22:10] <segfaultfizzbuzz> i'm a bit confused here: bluespec is haskell and is "good for specifying hardware" ... i am also aware of some other hardware specified in bluespec/a haskell dialect.
[19:22:11] <geekosaur> if you're that worried about exposure you might instead want to look up how to connect via tor
[19:22:35] <segfaultfizzbuzz> but you would think that hardware specification would be all about knowing what computations are performed up-front, and probably even having static memory allocation
[19:22:52] <segfaultfizzbuzz> laziness and garbage collection don't seem to be friendly to this modality of thought... what am i not understanding?
[19:22:56] <CHUD> geekosaur: no I'm not worried, I mean this is just a temporary nickname, someone else might take it in the future
[19:22:57] *** Quits: messier102 (~messier10@user/messier102) (Ping timeout: 240 seconds)
[19:23:09] <[exa]> CHUD: now really unless you desperately need to avoid others posing here under your nick (unlikely) or you have something very breakable/problematic on that IP, I wouldn't care
[19:23:28] <geekosaur> you could always register it and then protect it
[19:23:43] <geekosaur> then nickserv will boot anyone who tries to use it without logging in
[19:23:52] <CHUD> I'm just connecting via my university network 
[19:24:20] <[exa]> yeah, that's basically the only thing people will know from the IP
[19:24:32] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[19:24:45] <[exa]> (it translates back to dhcpXXXX.kent.ac.uk)
[19:25:03] <Inst[m]> where is hutton at again?
[19:25:06] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[19:25:07] <geekosaur> segfaultfizzbuzz, it's not like using haskell means necessarily making use of laziness. haskell has other advantages
[19:25:24] *** Joins: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[19:25:35] <Inst[m]> i mean you could just set {-# LANGUAGE Strict #-}
[19:25:45] <Inst[m]> iirc, does that force strictness on everything, or does it implement strict by default?
[19:26:20] <CHUD> [exa]: I thought the owners of this channel would just cloak everyone by default
[19:26:29] <CHUD> it's alright 
[19:26:34] <Inst> it's IRC
[19:26:47] <Inst> at least on libera/freenode, there's no native IP blocking
[19:26:51] <Inst> you have to request a cloak
[19:27:05] <geekosaur> and cloaks are controlled by the server operators, not per channel
[19:27:17] <geekosaur> channels can offer custom cloaks, but not automatic cloaking
[19:27:30] <CHUD> oh I see 
[19:27:33] <Inst> wait, is Strict language pragma forcing strict by default or lazy by default?
[19:27:46] <Inst> erm, strict by default or everything is forced to strict?
[19:27:55] <geekosaur> (we don't offer custom cloaks here. several other channels I'm in have cloaks for developers)
[19:28:11] <[exa]> CHUD: cloaking by default also kinda slows down action against abuse (spambots etc)
[19:28:12] <geekosaur> Inst, -XStrict makes everything strict by default
[19:28:37] <Inst> does it have to be XStrict, or is Strict via pragmas enough?
[19:28:46] <Inst> iirc a major corporate Haskell implementation is Strict
[19:28:54] <geekosaur> there's also -XStrictData which acts as if you marked every ADT you define as strict
[19:28:59] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[19:29:15] <Inst> btw can you ~datatypes?
[19:29:25] <Inst> and when you say ADT, do you mean Algebraic Datatypes or Abstract Datatypes?
[19:29:35] <CHUD> fair 
[19:29:39] <geekosaur> the "-X" is just convenient shorthand, as long as it appears before the `module` pragmas work just as well
[19:30:02] <geekosaur> I believe so, yes (~ on datatypes to override default !)
[19:30:02] <Inst> I know you can !DataConstructor, but not sure if you can ~DataConstructor to force laziness
[19:31:03] <geekosaur> "Informally the StrictData language extension switches data type declarations to be strict by default allowing fields to be lazy by adding a ~ in front of the field."
[19:32:05] *** Joins: gaff (~gaff@49.207.224.13)
[19:32:38] <Inst> but it implies in native Haskell ~ is not supported for datatypes
[19:33:25] <Inst> also how much more Haskell do I have to do before I can say Haskell is my first language?
[19:34:14] *** Joins: mmhat (~mmh@55d44844.access.ecotel.net)
[19:34:22] <Inst> i have a friend who probably needs Python training, and I have a copy of K&R that's busy destroying my bookshelf
[19:34:50] <geekosaur> standard Haskell only supports ~ in one place, and that is in patterns
[19:35:01] <Inst> thanks
[19:35:05] <Hecate> do we have abstract datatypes in Haskell?
[19:35:14] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[19:35:37] *** Quits: Topsi (~Tobias@dyndsl-095-033-026-182.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[19:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:35:42] <Inst[m]> you're trolling me, hecate?
[19:35:43] <geekosaur> "ADT" above was algebraic data type. "abstract" depends on usage, not definition
[19:35:43] * Inst[m] uploaded an image: (17KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pLTELmLGtlMcQCqFGqkUxeBB/image.png >
[19:35:44] <Inst[m]> ;_;
[19:37:00] <Hecate> this is terribly named
[19:37:01] <segfaultfizzbuzz> geekosaur: okay, so then what advantages does haskell have in specifying hardware, if laziness is not relevant
[19:37:03] <Hecate> >  but whose representation is hidden
[19:37:04] <lambdabot>  error:
[19:37:04] <lambdabot>      â€¢ Variable not in scope: but :: t0 -> t1 -> t2 -> t3 -> t
[19:37:04] <lambdabot>      â€¢ Perhaps you meant one of these:
[19:37:07] <Hecate> It whould be named "opaque"
[19:37:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:37:40] *** Joins: tiferrei2000 (~tiferrei@user/tiferrei)
[19:37:43] <Hecate> segfaultfizzbuzz: https://clash-lang.org/
[19:37:48] <geekosaur> segfaultfizzbuzz, types and type inference
[19:37:50] <Inst[m]> the term "hidden" seems to have been used enough that it's understandable, the way i'm interpreting it is to mean a datatype on which pattern matching fails and you're forced to use predefined functions
[19:38:11] * hololeap has never heard that called "abstract data type"
[19:38:21] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Remote host closed the connection)
[19:38:27] <Inst[m]> i was told on Discord
[19:38:47] <hololeap> abstract data type sounds like a oxymoron
[19:39:07] <Inst> in my textbooks, it seems ADT means abstract data type by default, not algebraic data type
[19:39:38] <Inst> which is, for me, insane, because they do mention that GADT refers to generalized algebraic data type, but ADT means abstract data type
[19:40:00] <geekosaur> that seems odd, yes
[19:40:45] <Inst> https://wiki.haskell.org/Algebraic_data_type
[19:40:56] <Inst> Algebraic Data Type is not to be confused with *Abstract* Data Type, which (ironically) is its opposite, in some sense. The initialism "ADT" usually means *Abstract* Data Type, but GADT usually means Generalized *Algebraic* Data Type.
[19:41:01] * Inst facepalms
[19:41:28] <hololeap> what
[19:41:55] *** Joins: wroathe (~wroathe@user/wroathe)
[19:43:32] *** Quits: razetime (~quassel@49.207.209.26) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:43:48] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[19:45:37] <ski> "ADT" is sometimes used to mean Algebraic Data Type ..
[19:45:49] *** Joins: brandonh (~brandonh@102.39.195.50)
[19:45:52] <hololeap> that's what I always thought it meant
[19:46:08] <Inst> AlDT vs AbDT
[19:46:12] <Inst> damn you, Haskell community!
[19:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:46:49] *** Quits: tdammers (~tdammers@77.109.72.177.res.static.edpnet.net) (Quit: WeeChat 3.0)
[19:48:18] <hololeap> I don't even find "abstract data types" interesting enough to abbreviate, let alone take precedence over algebraic data types
[19:48:31] <hololeap> you didn't export the constructors... whoopty doo
[19:52:27] <ski> abstract data types are often a means to do subtypes, or quotient types, or both
[19:52:49] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[19:53:17] <ski> (can also be to e.g. hide differences between underlying platforms)
[19:55:39] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:bf98:a5c2:4041:4009) (Ping timeout: 250 seconds)
[19:58:50] *** Parts: m4lvin (~m4lvin@w4eg.de) ()
[20:01:47] *** Quits: brandonh (~brandonh@102.39.195.50) (Quit: brandonh)
[20:02:11] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Remote host closed the connection)
[20:02:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:02:44] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[20:02:53] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 256 seconds)
[20:03:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:05:51] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:06:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 245 seconds)
[20:07:43] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:bf98:a5c2:4041:4009)
[20:15:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:15:49] *** Quits: glguy (x@libera/staff/glguy) (Ping timeout: 622 seconds)
[20:16:51] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:17:04] *** Quits: Feuermagier_ (~Feuermagi@84.17.48.173) (Remote host closed the connection)
[20:17:10] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[20:17:12] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[20:17:23] *** Joins: Feuermagier_ (~Feuermagi@84.17.48.173)
[20:18:14] *** Quits: Feuermagier_ (~Feuermagi@84.17.48.173) (Client Quit)
[20:18:27] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[20:18:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[20:20:35] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[20:21:43] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:24:28] <monochrom> http://www.vex.net/~trebla/haskell/abs-type-param.html is why abstract data types are interesting.
[20:25:19] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[20:26:18] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[20:30:19] *** Joins: RFV (~Thunderbi@135.red-88-5-244.dynamicip.rima-tde.net)
[20:32:24] *** Quits: RFV (~Thunderbi@135.red-88-5-244.dynamicip.rima-tde.net) (Client Quit)
[20:33:01] *** Quits: xff0x (~xff0x@2001:1a81:525e:1300:bf98:a5c2:4041:4009) (Ping timeout: 256 seconds)
[20:33:18] <maerwald> labeloptics can cause really weird error messages when you pass too many parameters to a function
[20:33:54] *** Joins: xff0x (~xff0x@2001:1a81:525e:1300:ccb2:578e:6a32:bac8)
[20:34:06] <maerwald> telling you an instance is missing
[20:34:11] *** Quits: dajoer (~david@user/gvx) (Quit: leaving)
[20:34:39] *** Parts: CHUD (~CHUD@dhcp6353.kent.ac.uk) ()
[20:35:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:35:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:35:56] *** Joins: wroathe (~wroathe@user/wroathe)
[20:43:13] <hololeap> thanks for the link monochrom
[20:43:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[20:44:45] *** Joins: emad (~emad@156.214.198.176)
[20:44:56] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[20:47:59] <ski> monochrom : nice ! :)
[20:51:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[20:52:24] *** Joins: wavemode (~wavemode@2601:241:0:fc90:5d33:217d:3934:b62c)
[20:54:33] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:55:18] *** Joins: zebrag (~chris@user/zebrag)
[20:57:20] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:30fc:7acd:1f91:844b) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:05:23] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[21:07:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:07:04] *** Joins: maxime_ (~maxime@2a01cb0883359800c4d240234508d9fe.ipv6.abo.wanadoo.fr)
[21:09:45] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[21:10:34] <Sqaure> Some classes requires a type function (m :: * -> *). Say if i want to implement Foldable on MyType a b, but want it to operate on "a", is there some trick to that?   
[21:11:35] <monochrom> No. You have to change MyType or write a newtype wrapper.
[21:11:49] <Sqaure> thanks
[21:15:05] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.4)
[21:16:21] *** Quits: tiferrei2000 (~tiferrei@user/tiferrei) (Ping timeout: 276 seconds)
[21:16:26] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Remote host closed the connection)
[21:17:30] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[21:20:22] *** Joins: eugen[m] (~eugenrahr@2001:470:69fc:105::1:a153)
[21:21:03] *** Joins: Topsi (~Tobias@dyndsl-095-033-026-182.ewe-ip-backbone.de)
[21:21:25] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[21:23:07] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[21:25:07] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[21:28:49] *** Joins: Andrew (~andrew@user/AndrewYu)
[21:29:07] *** Quits: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[21:29:08] <hololeap> Sqaure: you can also use this for convenience: https://hackage.haskell.org/package/bifunctors-5.5.11/docs/Data-Bifunctor-Flip.html
[21:30:03] <Sqaure> hololeap, ah, great. Thanks
[21:30:14] <hololeap> and use GeneralizedNewtypeDeriving or DerivingVia to get all the nifty instances
[21:31:21] <hololeap> you will need to define bi(functor/foldable/traversable/etc) for your type though if you want to derive them
[21:31:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:34:23] *** hexeme is now known as ldlework
[21:36:40] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:41:39] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[21:42:05] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[21:42:57] *** Quits: martin02 (~silas@141.84.69.76) (Ping timeout: 256 seconds)
[21:44:39] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[22:05:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:07:51] <hololeap> when are we going to get DeriveBitraversable
[22:08:07] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[22:08:24] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:a45b:6ac9:43c1:2d7f)
[22:09:44] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[22:10:19] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:c18f:7483:538b:1622)
[22:11:15] *** Joins: theproffesor (~theproffe@user/theproffesor)
[22:13:11] <EvanR> zero one infinity rule
[22:13:43] <hololeap> DeriveNTraversable? :o
[22:16:01] *** Quits: gaff (~gaff@49.207.224.13) (Remote host closed the connection)
[22:16:05] *** Joins: cuz (~user@50.226.229.246)
[22:16:10] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[22:19:24] *** Joins: xkuru (~xkuru@user/xkuru)
[22:20:19] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[22:21:40] *** Joins: flinner (~flinner__@2001:16a2:79d5:9b00:4d69:65fd:2ae4:cd31)
[22:21:40] *** Quits: flinner (~flinner__@2001:16a2:79d5:9b00:4d69:65fd:2ae4:cd31) (Changing host)
[22:21:40] *** Joins: flinner (~flinner__@user/flinner)
[22:27:13] *** Joins: gaff (~gaff@49.207.224.13)
[22:27:15] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:27:18] *** Quits: gaff (~gaff@49.207.224.13) (Read error: Connection reset by peer)
[22:27:33] *** Joins: gaff (~gaff@49.207.224.13)
[22:27:38] *** Joins: x_kuru (~xkuru@user/xkuru)
[22:28:31] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[22:28:40] *** Quits: MatthiasG2 (~matthias@i6DFA03D9.versanet.de) (Quit: Lost terminal)
[22:29:36] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:30:31] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:33:03] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Remote host closed the connection)
[22:33:34] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[22:34:41] *** Quits: maxime_ (~maxime@2a01cb0883359800c4d240234508d9fe.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:35:04] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:37:47] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Ping timeout: 252 seconds)
[22:37:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:38:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:38:26] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:41:14] *** Joins: vicfred (~vicfred@user/vicfred)
[22:41:48] *** Joins: econo (uid147250@user/econo)
[22:41:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:42:02] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[22:45:51] *** Joins: soxen (~bbrahms@pool-173-54-217-168.nwrknj.fios.verizon.net)
[22:47:03] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Remote host closed the connection)
[22:47:36] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[22:48:54] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 260 seconds)
[22:49:03] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[22:51:51] *** Quits: flinner (~flinner__@user/flinner) (Ping timeout: 256 seconds)
[22:52:17] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:3911:f302:476a:5d4c) (Ping timeout: 240 seconds)
[22:53:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:54:02] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:55:32] *** Joins: brandonh (~brandonh@102.39.195.50)
[23:00:56] *** Quits: brandonh (~brandonh@102.39.195.50) (Quit: brandonh)
[23:03:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:06:29] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:08:13] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:12:15] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:12:17] *** Quits: polyphem (~rod@2a02:810d:840:8754:5126:c335:5f23:8358) (Quit: WeeChat 3.4)
[23:13:26] *** Joins: maxime_ (~maxime@2a01cb08833598005be65fcb4fda67db.ipv6.abo.wanadoo.fr)
[23:15:05] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:17:32] *** Quits: Topsi (~Tobias@dyndsl-095-033-026-182.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[23:24:12] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:27:36] *** Quits: cuz (~user@50.226.229.246) (Remote host closed the connection)
[23:27:46] *** Joins: cuz (~user@50.226.229.246)
[23:28:13] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:32:46] *** Quits: cuz (~user@50.226.229.246) (Ping timeout: 260 seconds)
[23:35:23] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:36:46] *** Joins: juhp (~juhp@128.106.188.82)
[23:39:51] *** Joins: alp (~alp@user/alp)
[23:39:55] *** Joins: tommd (~tommd@67-42-147-226.ptld.qwest.net)
[23:43:13] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[23:45:03] *** Joins: mcglk (~mcglk@131.191.49.120)
[23:53:05] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[23:53:07] *** Joins: fendor_ (~fendor@91.141.79.239.wireless.dyn.drei.com)
[23:53:51] *** Quits: fendor_ (~fendor@91.141.79.239.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[23:54:11] *** Joins: fendor_ (~fendor@91.141.79.239.wireless.dyn.drei.com)
[23:56:57] *** Quits: fendor (~fendor@91.141.79.239.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[23:58:55] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Remote host closed the connection)
