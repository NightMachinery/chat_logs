[00:00:24] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[00:04:52] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[00:11:40] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[00:12:03] *** Joins: kish` (~aqua@user/aqua)
[00:23:55] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[00:28:32] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[00:34:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:54:54] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:00:56] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[01:02:22] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[01:10:18] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:e172:1c94:79d5:99f2)
[01:11:50] <cvmn> https://github.com/Al-Caveman/nsapass/discussions/22
[01:12:35] <cvmn> ^ is it worth it?  wondering if i should store my passwords database in my password manage in an encrypted memory of some kind.  is is doable without being a needless complexity, or security through obscurity?
[01:13:31] *** Parts: LTCD (~LTCD@2a02:c7f:dd1c:b600:e172:1c94:79d5:99f2) ()
[01:14:35] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[01:18:21] <ms7821> maybe have a think about what kind of attacks you actually want to prevent
[01:19:20] <riv>  You need to have a threat model
[01:19:45] <riv> and use that to assess whether encrypted memory is a requirement
[01:20:02] <riv> and im pretty sure it wont be unless your threat model is insane
[01:20:23] <onelegend> would rust be a better choice than C in this case?
[01:21:00] <ms7821> cross-process meltdown/spectre is unlikely after kernel changes, but you might want to ensure you don't leave passwords around in memory to protect against them appearing in coredumps (I think this can be done with madvise I think)
[01:21:21] <riv> yes
[01:21:33] <riv> rust is a good choice because it secures against memory corruption errors
[01:21:39] <ms7821> or maybe against the snatched laptop scenario
[01:28:10] <ioxzev1z> cvmn, store passwords encrypted in memory, decrypt when needed
[01:28:19] <ioxzev1z> But then you need to store the encryption key safely
[01:29:31] <cvmn> so is it a useless method?
[01:29:49] <riv> it sounds like snake oil
[01:32:36] <cvmn> yeah.
[01:43:05] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:51:09] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[02:03:55] *** Joins: gde35|2 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[02:04:20] *** Quits: gde35|2 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Client Quit)
[02:04:24] *** Quits: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:04:39] *** Joins: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[02:13:40] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[02:17:42] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:19:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[02:24:04] *** onelegend is now known as [[OneLegend]]
[02:52:41] *** Joins: d1cor (~diego@179.63.242.114)
[02:55:47] <Seirdy> my approach is at the bottom of https://paste.sr.ht/~seirdy/4f8175f808157cb725669bd4f3df0a6bb8e938a2
[02:55:49] <Seirdy> basically have a strong pw to partially decrypt the master key, then a convenient/short password or hardware key to fully decrypt the key. so you have to enter the strong password when you turn on your computer or wake from sleep, but the convenient unlock can happen every time you access it afterwards.
[02:58:35] <ms7821> and what's your threat model for that?
[03:00:07] <cvmn> is -t for argon2 the number of passes over the entire memory pad?  or is it the total number of times a hashing function is called
[03:00:09] <cvmn> ?
[03:09:22] *** Joins: Elzington__ (~Elzington@68.235.43.22)
[03:11:02] <cvmn> must be the pads.
[03:11:19] *** Quits: ua_ (~ua@public-gprs220331.centertel.pl) (Ping timeout: 258 seconds)
[03:11:54] *** Quits: Elzington_ (~Elzington@68.235.43.14) (Ping timeout: 240 seconds)
[03:12:52] *** Joins: ua_ (~ua@public-gprs220331.centertel.pl)
[03:13:28] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[03:13:36] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[03:13:58] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:29:00] *** Joins: Elzington (~Elzington@68.235.43.20)
[03:30:52] *** Quits: Elzington__ (~Elzington@68.235.43.22) (Ping timeout: 258 seconds)
[03:33:54] <Alipha> Steve Gibson's SQRL client does that
[03:33:56] *** Quits: ua_ (~ua@public-gprs220331.centertel.pl) (Ping timeout: 258 seconds)
[03:35:20] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Remote host closed the connection)
[03:36:18] *** Joins: ua_ (~ua@public-gprs220331.centertel.pl)
[03:37:22] <cvmn> does gpg's --symmetric --cipher-algo AES256 use safe defaults for how aes is used? e.g. mode of operation?
[03:39:52] *** Joins: Elzington_ (~Elzington@68.235.43.37)
[03:40:50] *** Quits: Elzington (~Elzington@68.235.43.20) (Ping timeout: 258 seconds)
[03:50:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[04:05:16] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:08:54] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:08:54] *** Wulf4 is now known as Wulf
[04:14:24] *** Joins: ua__ (~ua@public-gprs230371.centertel.pl)
[04:14:57] *** Quits: ua_ (~ua@public-gprs220331.centertel.pl) (Ping timeout: 258 seconds)
[04:30:42] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 272 seconds)
[04:38:16] *** [[OneLegend]] is now known as OneLegend
[04:45:07] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[05:07:05] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 258 seconds)
[05:10:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.0.1)
[05:12:38] *** Joins: schubisu (~schubisu@dgplug/schubisu)
[05:17:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[05:22:54] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[05:23:45] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[05:24:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:35:45] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[05:43:30] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 240 seconds)
[05:52:57] *** Quits: ua__ (~ua@public-gprs230371.centertel.pl) (Ping timeout: 276 seconds)
[05:56:02] *** Joins: ua__ (~ua@public-gprs230371.centertel.pl)
[06:02:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 258 seconds)
[06:06:32] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-f9c9-12c1-1bdd-7dd0.res6.spectrum.com)
[06:10:06] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dd8f-ae40-8c90-f67d.res6.spectrum.com) (Ping timeout: 252 seconds)
[06:27:42] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:9826:c2f7:659c:9f58)
[06:31:24] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-f9c9-12c1-1bdd-7dd0.res6.spectrum.com) (Quit: jarthur_)
[06:45:10] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[06:45:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Remote host closed the connection)
[06:45:49] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[06:52:07] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 258 seconds)
[06:55:35] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:58:15] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[07:10:55] *** Quits: DefiantX (~DefiantN@user/defiantn) (Ping timeout: 250 seconds)
[07:11:13] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[07:11:54] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 240 seconds)
[07:17:36] *** Joins: DefiantX (~DefiantN@user/defiantn)
[07:22:24] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[07:22:24] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 258 seconds)
[07:23:14] *** Joins: rtypo (~alex@user/rtypo)
[07:27:49] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 250 seconds)
[07:39:05] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 250 seconds)
[07:39:33] *** Joins: schubisu (~schubisu@dgplug/schubisu)
[07:50:31] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[07:51:07] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[07:51:23] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[08:10:27] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:11:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 272 seconds)
[08:12:01] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[08:12:14] *** Quits: ua__ (~ua@public-gprs230371.centertel.pl) (Ping timeout: 258 seconds)
[08:16:22] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:21:42] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:21:57] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:36:04] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:37:11] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:43:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[08:47:36] *** sm2n_ is now known as sm2n
[08:56:33] *** Quits: maroon (~tinycrypt@user/maroon) (Read error: Connection reset by peer)
[08:56:45] *** Joins: szarkanet (~szarka@2001-48F8-9004-E05-E5D5-B728-477C-112E-dynamic.midco.net)
[08:57:26] *** Quits: shachaf (~shachaf@user/shachaf) (Quit: Reconnecting)
[08:57:33] *** Joins: shachaf (~shachaf@user/shachaf)
[08:59:46] *** Quits: szarkaorg (~szarka@2001-48F8-9004-E05-1816-5FE9-6C3B-E00E-dynamic.midco.net) (Ping timeout: 240 seconds)
[09:05:28] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[09:06:12] *** Joins: kish` (~aqua@user/aqua)
[10:13:18] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[10:13:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Read error: Connection reset by peer)
[10:31:34] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[10:39:15] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:b07a:4f65:8361:1355)
[10:41:54] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[10:43:39] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:b07a:4f65:8361:1355) (Ping timeout: 258 seconds)
[10:46:54] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[10:54:59] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:55:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:57:12] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:57:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:57:51] *** Lord_of_Life_ is now known as Lord_of_Life
[10:58:36] *** Joins: maroon (~tinycrypt@user/maroon)
[11:00:12] *** Joins: BOKALDO (~BOKALDO@46.109.203.51)
[11:20:09] *** Joins: astrocat (~astrocat@112.134.8.239)
[11:25:08] <caveman> how many times is blake2b called with argon2?  say `argon2 thisissomesalt -d -k 1048576 -p 4 -t 20`?
[11:27:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[11:35:31] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:37:19] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:39:39] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:40:46] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:44:13] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[12:13:42] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[12:17:22] *** Quits: kbdlnx123 (~kbdlnx123@72.252.198.165) (Ping timeout: 256 seconds)
[12:18:43] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 258 seconds)
[12:34:14] *** Joins: ua_ (~ua@public-gprs220723.centertel.pl)
[12:38:09] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:28] *** Quits: astrocat (~astrocat@112.134.8.239) (Ping timeout: 256 seconds)
[12:40:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:04:59] *** Joins: astrocat (~astrocat@112.134.8.239)
[13:31:02] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[13:37:02] *** Joins: menace (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[13:40:16] *** Quits: menace (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Changing host)
[13:40:16] *** Joins: menace (~someone@user/menace)
[13:40:20] *** menace is now known as Deknos
[13:44:03] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[13:44:40] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[13:46:48] *** Joins: frost (~frost@59.71.241.179)
[13:52:01] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:80ea:a106:e757:47b1)
[13:54:29] *** Joins: randomdork (~astrocat@112.134.14.192)
[13:55:23] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:80ea:a106:e757:47b1) (Remote host closed the connection)
[13:55:58] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:80ea:a106:e757:47b1)
[13:58:10] *** Quits: astrocat (~astrocat@112.134.8.239) (Ping timeout: 272 seconds)
[14:00:42] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:80ea:a106:e757:47b1) (Ping timeout: 272 seconds)
[14:02:31] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:d532:1cf0:a02e:17e2)
[14:04:54] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 258 seconds)
[14:07:12] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:d532:1cf0:a02e:17e2) (Ping timeout: 258 seconds)
[14:13:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:15:03] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[14:15:08] *** Quits: aleck (~aleck@user/aleck) (Read error: Connection reset by peer)
[14:15:38] *** Quits: pstn (~nunyuhbiz@user/pstn) (Ping timeout: 252 seconds)
[14:16:01] *** Joins: pstn (~nunyuhbiz@user/pstn)
[14:16:22] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 245 seconds)
[14:16:47] *** Quits: eco_ (~ubuntu@ec2-54-201-230-197.us-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[14:16:50] *** Quits: zegalch (~zegalch@178.128.75.133) (Read error: Connection reset by peer)
[14:16:56] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 256 seconds)
[14:17:17] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 252 seconds)
[14:17:30] *** Quits: shachaf (~shachaf@user/shachaf) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: mats1 (sid23029@tinside.irccloud.com) (Ping timeout: 256 seconds)
[14:18:30] *** Joins: eco (~ubuntu@ec2-54-201-230-197.us-west-2.compute.amazonaws.com)
[14:18:45] *** Quits: udet (~udet@ve603.venus.servdiscount-customer.com) (Read error: Connection reset by peer)
[14:18:53] *** Joins: lord| (~lordpipe@user/lordpipe)
[14:19:00] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 272 seconds)
[14:19:21] *** Joins: shachaf (~shachaf@user/shachaf)
[14:19:44] *** Joins: mats1 (sid23029@id-23029.tinside.irccloud.com)
[14:19:46] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[14:19:55] *** Quits: d34dh0r53 (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net) (Ping timeout: 250 seconds)
[14:20:16] *** Quits: sarnold (~sarnold@ubuntu/member/sarnold) (Ping timeout: 272 seconds)
[14:21:22] *** Quits: elichai2 (sid212594@id-212594.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[14:21:28] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Ping timeout: 256 seconds)
[14:21:48] *** Quits: KeterClass (~KeterClas@vm0.max-p.me) (Ping timeout: 245 seconds)
[14:22:02] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[14:22:05] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) (Ping timeout: 250 seconds)
[14:22:10] *** Quits: meyer (~nunyuh@user/cosanostra) (Ping timeout: 272 seconds)
[14:22:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Ping timeout: 256 seconds)
[14:23:53] *** Quits: terabit (sid146285@id-146285.highgate.irccloud.com) (Ping timeout: 252 seconds)
[14:24:18] *** Quits: neocow (~neocow@185.38.14.210) (Ping timeout: 256 seconds)
[14:30:56] *** Quits: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[14:30:57] *** Quits: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se) (Ping timeout: 245 seconds)
[14:31:24] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:31:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Client Quit)
[14:31:40] *** Quits: eck (~root@user/eck) (Ping timeout: 256 seconds)
[14:31:40] *** Joins: elichai2 (sid212594@id-212594.stonehaven.irccloud.com)
[14:31:41] *** Joins: terabit (sid146285@id-146285.highgate.irccloud.com)
[14:32:03] *** Joins: PotatoGim (sid99505@id-99505.tooting.irccloud.com)
[14:33:04] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[14:33:10] *** Joins: Populus (~emil.a.jo@c-afbbe455.021-17-6b6c6d1.bbcust.telenor.se)
[14:33:25] *** Joins: eck (~root@user/eck)
[14:33:27] *** Quits: ericnoan (~en@user/ericnoan) (Ping timeout: 245 seconds)
[14:33:50] *** Joins: schubisu (~schubisu@dgplug/schubisu)
[14:33:52] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 245 seconds)
[14:33:53] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:34:17] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (Ping timeout: 245 seconds)
[14:34:22] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[14:34:35] *** Joins: zegalch (~zegalch@178.128.75.133)
[14:34:42] *** Quits: alexbobp_ (~alex@meowface.org) (Ping timeout: 245 seconds)
[14:34:51] *** Joins: lizzie (~alex@meowface.org)
[14:35:33] *** Joins: meyer (~nunyuh@user/cosanostra)
[14:35:46] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[14:36:06] *** Joins: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[14:36:08] *** Joins: ericnoan (~en@user/ericnoan)
[14:37:12] *** Quits: Bostik (~bostik@static.78.20.217.95.clients.your-server.de) (Ping timeout: 245 seconds)
[14:37:27] *** Joins: Bostik (~bostik@static.78.20.217.95.clients.your-server.de)
[14:37:48] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:38:02] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 245 seconds)
[14:38:35] *** Joins: sarnold (~sarnold@ubuntu/member/sarnold)
[14:39:46] *** Quits: randomdork (~astrocat@112.134.14.192) (Quit: Leaving)
[14:40:32] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) (Ping timeout: 245 seconds)
[14:40:33] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[14:41:30] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Excess Flood)
[14:43:53] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[14:44:23] *** Joins: PotatoGim (sid99505@id-99505.tooting.irccloud.com)
[14:46:26] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 252 seconds)
[14:46:39] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:50:39] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[14:50:56] *** Joins: schubisu (~schubisu@dgplug/schubisu)
[14:51:01] *** Joins: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[14:51:59] *** Quits: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Read error: Connection reset by peer)
[14:52:14] *** Joins: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[14:53:02] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) (Ping timeout: 245 seconds)
[14:54:36] *** Joins: PotatoGim (sid99505@id-99505.tooting.irccloud.com)
[14:54:38] *** Joins: mei (~mei@user/mei)
[14:54:52] *** Joins: mweckbecker (~matthias@weckbecker.name)
[14:58:38] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:07:13] *** Joins: rtypo (~alex@user/rtypo)
[15:14:08] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[15:18:51] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 250 seconds)
[15:31:59] <caveman> <caveman> how many times is blake2b called with argon2?  say `argon2 thisissomesalt -d -k 1048576 -p 4 -t 20`?
[15:32:01] <caveman> ^ trying to answer my own question: -k 1048576 = 1073741824 bytes.  i _guess_ blake2d uses blocks of 64 bytes.  so that's 1073741824 / 64 = 16777216 blake2d calls per pad/iteration.  since there are -t 20 iterations of the pad, we get 16777216 * 20 = 335544320 total blake2d iterations.
[15:32:03] <caveman> then thanks to my ``perfect lie theorem'' [1], that setup will inject log2(335544320) ~ 28 shannon's entropy bits into whatever key.
[15:32:05] <caveman> [1] https://github.com/Al-Caveman/ciphart-paper
[15:32:49] <caveman> i'm assuming blake2d is called only once per block.
[15:33:08] <caveman> not sure if any of that is correct.  it's just my thought so far.
[15:44:21] <caveman> now, nsapass does not use ciphart (my own silly app).  instead, it uses whatever kdf/enc/dec  app you like.  defaults are kdf=argon2, enc/dec=openssl enc -chacha20
[16:12:33] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 244 seconds)
[16:19:41] *** Joins: udet (~udet@ve603.venus.servdiscount-customer.com)
[16:33:41] *** Joins: dez (uid92154@user/dez)
[16:39:54] *** Quits: tkob (~tkob@user/thekingofbandit) (Ping timeout: 240 seconds)
[16:41:34] <ms7821> the perfect lie theorem is not a theorem
[16:45:39] *** Quits: BOKALDO (~BOKALDO@46.109.203.51) (Quit: Leaving)
[16:46:05] *** Joins: tkob (tkob@shell.xshellz.com)
[16:46:05] *** Quits: tkob (tkob@shell.xshellz.com) (Changing host)
[16:46:05] *** Joins: tkob (tkob@user/thekingofbandit)
[16:46:41] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[16:49:57] *** Quits: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Changing host)
[16:49:57] *** Joins: Deknos (~someone@user/menace)
[16:57:02] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[17:03:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 276 seconds)
[17:12:40] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[17:15:09] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[17:19:30] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 240 seconds)
[17:23:45] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[17:45:22] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[17:45:23] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[17:46:40] *** Joins: KeterClass (~KeterClas@vm0.max-p.me)
[17:48:14] *** Joins: szarkaorg (~szarka@2001-48F8-9004-E05-8DCB-C38A-2416-A70A-dynamic.midco.net)
[17:49:30] *** Quits: mcf (~mforney@mforney.org) (Changing host)
[17:49:30] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[17:51:42] *** Quits: szarkanet (~szarka@2001-48F8-9004-E05-E5D5-B728-477C-112E-dynamic.midco.net) (Ping timeout: 256 seconds)
[17:53:51] *** Joins: BOKALDO (~BOKALDO@46.109.203.51)
[17:54:51] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[17:55:58] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[17:56:10] <Deknos> does anyone of you have good scripts/programs/whatever for generating entropy sheets which can be printed?
[18:15:08] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:24:24] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:31:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net)
[18:47:35] *** Joins: d1cor (~diego@179.63.242.114)
[18:51:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[18:51:02] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[18:51:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:51:20] *** Joins: madage (~madage@user/madage)
[18:52:07] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[19:05:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net) (Ping timeout: 246 seconds)
[19:06:46] *** Joins: son0p (~ff@181.136.122.143)
[19:07:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:08:52] *** DefiantX is now known as DefiantN
[19:09:00] *** Quits: DefiantN (~DefiantN@user/defiantn) (Quit: Leaving)
[19:09:15] *** Joins: DefiantN (~DefiantN@user/defiantn)
[19:16:01] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[19:18:05] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:19:20] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:20:40] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 256 seconds)
[19:25:57] *** Joins: kbdlnx123 (~kbdlnx123@72.252.198.165)
[19:28:12] *** Quits: kbdlnx123 (~kbdlnx123@72.252.198.165) (Remote host closed the connection)
[19:33:14] *** Joins: kbdlnx123 (~kbdlnx123@72.252.198.165)
[19:33:26] *** Quits: d1cor (~diego@179.63.242.114) (Quit: WeeChat 3.2)
[19:33:42] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:37:21] *** OneLegend is now known as legend
[19:39:19] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[19:44:25] *** Joins: d1cor (~diego@179.63.242.114)
[19:48:12] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[20:00:55] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[20:01:02] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[20:13:12] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[20:14:20] *** fxrh_ is now known as fxrh
[20:21:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[20:22:18] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 240 seconds)
[20:23:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:26:24] *** Quits: d1cor (~diego@179.63.242.114) (Ping timeout: 272 seconds)
[20:33:14] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[20:37:37] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 245 seconds)
[20:37:39] *** Joins: netsan (~netsan@user/netsan)
[21:00:01] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[21:04:14] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[21:16:14] *** Joins: qbt (~edun@user/edun)
[21:17:39] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 250 seconds)
[21:18:07] *** Joins: schubisu (~schubisu@dgplug/schubisu)
[21:37:07] *** Joins: mouseghost (~draco@user/mouseghost)
[21:44:38] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[21:56:38] *** Joins: aizen (sid462968@id-462968.charlton.irccloud.com)
[21:59:46] *** Joins: ses (uid38151@id-38151.stonehaven.irccloud.com)
[22:05:33] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[22:05:57] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[22:08:14] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[22:08:15] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[22:08:38] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[22:15:17] *** Joins: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867)
[22:20:03] *** Quits: RickSanchez (~RickSanch@2607:fb90:26:2aad:1a7:762c:3e1e:d867) (Ping timeout: 250 seconds)
[22:24:11] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[22:35:57] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:59ad:381f:9ad2:be3e)
[22:37:42] <LTCD> Hey. I am reading Introduction to Cryptography 2nd edition by Katz and Lindell. In this picture here, I am confused by the highlighted part, what two numbers do I input into GCD(.,.) to yield the key length of a multiple of the key length? This is the Kasiski's observation for the Vigenere Cipher.
[22:37:43] <LTCD> https://ibb.co/qD8HbYt
[22:38:11] <LTCD> to yield the key length [OR] a multiple of the key length?*
[22:40:44] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[22:41:24] <yawkat> you put in all the distances between repeated sequences that you think arent coincidental
[22:41:48] <yawkat> but it does say right there that "not coincidental" is hard to automate.
[22:44:59] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:45:22] *** Joins: kish` (~aqua@user/aqua)
[22:45:34] <LTCD> yawkat So in the example at the top of the image we do not have enough ciphertext to do that, right?
[22:45:52] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:46:13] *** Joins: kish` (~aqua@user/aqua)
[22:46:47] <ms7821> given there's only one repeated word in the ciphertext, yeah
[22:46:53] <yawkat> theres the LII
[22:47:01] <tolarz> (btw this chapter is so irrelevant for the contents of this book)
[22:47:13] <tolarz> (like, if you don't understand this paragraph, don'T worry, it's irrelevant)
[22:47:29] <LTCD> Like, in the example at the top of the page I can see LII is 30 characters away from the next LII (and with access to the plaintext it is not a coincidence). But now my equation looks like gcd(,.,30).
[22:47:41] <yawkat> gcd(30) = 30
[22:47:50] <tolarz> gcd is a binary function
[22:48:12] <LTCD> gcd(.,30)  <--- Surely, I need another number to then calculate the GCD?
[22:48:23] <yawkat> gcd is associative ;D
[22:48:28] <LTCD> tolarz I understand that, but wanted to read it anyway.
[22:48:34] <tolarz> okay
[22:49:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:49:03] <LTCD> So look, in the example I see the distance between LII and LII is 30. Next, how do I do the GCD to get the period of 5?
[22:49:11] <ms7821> what you could do is note that there are 6 3-letter words, and with some information about frequencies of 3-letter words in english work out a probability of a coincidence happening for various multiples of the key length
[22:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:49:29] <ms7821> e.g. if it *were* a 30-char key, it's pretty unlikely you'd happen to have a repeat in such a small sample of text
[22:49:39] <ms7821> so it's more likely to be a smaller factor of 30
[22:50:01] <ms7821> (obviously this is all speculation on a small sample, but larger text might be susceptible to that kind of analysis)
[22:50:02] <yawkat> i mean theres only so many factors
[22:50:02] <LTCD> ms7821: For now, I want to focus on this paragraph, your attack is covered another time I think.
[22:50:23] <yawkat> 3, 5, 2, and combinations of those
[22:51:26] <LTCD> I am just saying, I could see the distance is 30 characters between the first LII and the second LII, I also know for certain that LII is mapped to 'the' in plaintext. Based on this, how do I follow the highlighted instructions to calculate the GCD to get an answer of 5 which is the key length of the password "beads"
[22:51:29] <ms7821> LTCD, as you said, there's not enough information to do what they're suggesting with this sample
[22:51:53] <ms7821> they're just using it as something to focus on while describing techniques
[22:52:49] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[22:53:23] <LTCD> ms7821 That is what I wanted to hear! So, in real life, I might see another LII which is only 5 characters away. Then I do gcd(5,30) = 5 which matches the key length. I might also find LII which is 10 characters away, then I do gcd(10,30) = 10 where 10 is a multiple of 5.
[22:54:01] <LTCD> I hate it when books teach you something this cool, but do not properly include it, or at least say [WARNING not included in above example] for noobs like myself.
[22:54:43] *** Joins: fanis30_ (~fanis30@adsl-11.37.6.3.tellas.gr)
[22:54:56] <LTCD> Correct?
[22:55:04] <ms7821> I reckon so
[22:55:10] <LTCD> Phew
[22:55:59] <LTCD> I wish they included more ciphertext, then they could have just said gcd(10,30) = 10. The 10 is either the key length, or a multiple of the key length (in this case that is true because the "beads" key is just 5 chars).
[22:56:20] <ms7821> the happiest case would be some relatively prime multiples, e.g. 30 chars and 35 chars, which would immediately give you 5
[22:57:27] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Ping timeout: 268 seconds)
[23:05:42] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:08:07] *** Joins: netsan (~netsan@user/netsan)
[23:10:40] <LTCD> Well said.
[23:12:32] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:13:22] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:59ad:381f:9ad2:be3e) (Quit: Client closed)
[23:15:58] *** Quits: fanis30_ (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[23:17:06] *** Quits: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:18:02] *** Quits: ses (uid38151@id-38151.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:18:07] *** Joins: Guest86 (~Guest86@2a02:c7f:5677:7600:aed:d66f:3fc3:795d)
[23:18:27] <Guest86> hello
[23:18:40] *** Quits: elichai2 (sid212594@id-212594.stonehaven.irccloud.com) (Ping timeout: 256 seconds)
[23:18:40] *** Joins: BUSY (~BUSY@user/busy)
[23:18:53] <Guest86> i have been reading this website https://www.garykessler.net/library/crypto.html but i have had trouble understanding the diagrams and such
[23:19:13] <Deknos> which one exactly?
[23:21:04] *** Joins: Manouchehri (sid384576@stonehaven.irccloud.com)
[23:21:43] *** Joins: elichai2 (sid212594@stonehaven.irccloud.com)
[23:22:03] <Guest86> the ones which are diagrams of the system of cryptography, the one with the circles and lines and such
[23:22:06] *** Joins: ses (uid38151@stonehaven.irccloud.com)
[23:22:16] *** Joins: Guest8119 (~Guest81@201-229-10-44.setardsl.aw)
[23:22:46] *** Quits: Guest8119 (~Guest81@201-229-10-44.setardsl.aw) (Client Quit)
[23:23:32] <ms7821> they're not great diagrams
[23:24:04] <Deknos> the plus in the circle is a XOR
[23:24:20] <Deknos> and the lines are the dataflow
[23:24:56] <Guest86> how do they work
[23:25:47] <Deknos> well, a xor b generates a new value c. a and be then would be input lines into the plus-circle and c goes out of it
[23:25:54] <Deknos> read from left to right
[23:26:20] <Deknos> https://www.garykessler.net/library/images/crypto_Self-SynchStreamCipher.jpg <-- this one you mean?
[23:26:46] <Guest86> yes
[23:26:56] <yawkat> what a weird graph.
[23:27:11] <Guest86> i cant make sense of it
[23:27:12] <int-e> you have to split it in the middle; the left half is encryption; the right half is decryption
[23:27:41] <ms7821> they're based on electronics block diagrams - the idea is that a stream of data is clocked through the system somehow, and the graph shows how the system combines the data for each bit/byte/however it's done
[23:27:42] <int-e> and the key and ciphertext are communicated between parties
[23:28:16] <yawkat> huh, an async stream cipher according to the caption, does anyone actually use those
[23:28:35] <yawkat> CDMA might count i guess
[23:30:42] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:38:26] <Deknos> perhaps the site is a bit outdated and not the best start nowadays
[23:38:56] <yawkat> "28 July 2021"
[23:38:56] *** Quits: dynemeloun (~dynemelou@93-93-35-197.cust.mitranet.cz) (Ping timeout: 272 seconds)
[23:39:05] <yawkat> maybe the person is just really old-school...
[23:39:20] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:40:43] <ms7821> he started writing it in 1998, so figures
[23:42:15] <ms7821> the "Significance of Key Length" section hasn't been updated this millennium
[23:42:46] <yawkat> "because 56,000-bit keys are infeasible" well...
[23:43:22] <Alipha> If LTCD comes back, there's another way to determine key length candidates for vignere cipher
[23:45:30] <ms7821> they're reading Introduction to Modern Cryptography, so that may come up next
[23:45:39] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:9826:c2f7:659c:9f58) (Ping timeout: 258 seconds)
[23:50:07] <int-e> "modern" and "contemporary" should be banned from book titles ;)
[23:50:34] <ms7821> we should of course be doing postmodern cryptography
[23:54:57] <edk> int-e: modern history is usually held to start somewhere around 1500, so in that sense modern isn't wrong
[23:55:11] *** Quits: BOKALDO (~BOKALDO@46.109.203.51) (Quit: Leaving)
[23:55:29] <Guest86> cryptography goes way before 1500 doesnt it
[23:55:56] <Guest86> as far back as written record has existed there has been a need to encode it
[23:56:07] <yawkat> modern cryptography usually means something like "after shannon"
[23:56:08] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[23:56:26] <int-e> edk: So the Vernam cipher is modern cryptography then.
[23:56:44] <edk> sure
[23:56:50] <int-e> Cool
