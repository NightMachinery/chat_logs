[00:01:30] <jneira[m]> wow actually i can reproduce it
[00:04:24] <jneira[m]> as ghcup set the wrapper in path i dont use that config option
[00:06:40] <jneira[m]> maerwald: `D:\ghcup\bin\haskell-language-server-8.10.7.exe` works for me
[00:07:11] <maerwald> in the json? 
[00:07:19] <jneira[m]> that is how i use it normally, to set a fixed server executable (compiled from source)
[00:07:21] <maerwald> that's not correctly escaped I think
[00:07:34] <jneira[m]> in the settings of vscode
[00:07:37] <jneira[m]> one sec
[00:07:40] <maerwald> eh... so haskell-language-server-wrapper is broken on windows?
[00:08:13] <jneira[m]> `"haskell.serverExecutablePath": "D:\\ghcup\\bin\\haskell-language-server-8.10.7.exe"`
[00:09:16] <jneira[m]> maerwald: you have to put the .exe too but that is a minor incovenience
[00:09:35] <maerwald> so why does wrapper not work?
[00:09:41] <jneira[m]> maerwald: no no, using it in that config option, i use the wrapper in path everyday
[00:10:06] <jneira[m]> remove the config value and try with it empty
[00:10:18] <jneira[m]> (if hls-wrapper is in PATH)
[00:10:24] <maerwald> I still don't understand why I can't put it in that config option
[00:10:43] <jneira[m]> ya, i have to investigate
[00:10:45] <jneira[m]> hmmm
[00:10:55] <jneira[m]> it works in linux then
[00:12:27] <jneira[m]> `"haskell.serverExecutablePath": "D:\\ghcup\\bin\\haskell-language-server-wrapper-1.4.0.exe"` works
[00:12:32] <jneira[m]> so maybe shim releated?
[00:13:12] <maerwald> that doesn't work for me either, but I get a different error
[00:15:07] <jneira[m]> hmm but it finds the executable, the error will be thrown by the wrapper itself i suppose
[00:15:49] <jneira[m]> some cradle error?
[00:16:05] <maerwald> I'll report later
[00:16:30] <jneira[m]> üëçÔ∏è
[00:16:57] <jneira[m]> but why it does not find the shim executable is very weird
[00:19:26] <jneira[m]> the code of executable discovery is https://github.com/haskell/vscode-haskell/blob/257e5aeca33afdeaef0f10802e93375701493c25/src/utils.ts#L259-L264
[00:25:53] <jneira[m]> hmm actually i didnot have a D:\ghcup\bin\haskell-language-server-wrapper.exe ,maybe i deleted it to make some tests? dont remember
[00:27:30] <jneira[m]> Now `"haskell.serverExecutablePath": "D:\\ghcup\\bin\\haskell-language-server-wrapper.exe"` works
[00:29:55] <jneira[m]> ü§∑
[00:34:24] <maerwald> yeah, not worth to debug
[00:34:31] <maerwald> just wanted to see if I'm missing something obvious
[00:51:06] *** Quits: fendor (~fendor@178.165.200.199.wireless.dyn.drei.com) (Remote host closed the connection)
[03:26:00] <shapr> yay, talk went well
[03:42:42] <shapr> though I found one bug and got one really good feature suggestion
[04:45:40] *** Joins: drsooch (~drsooch@cpe-45-46-39-116.maine.res.rr.com)
[06:34:16] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[07:14:37] *** Quits: drsooch (~drsooch@cpe-45-46-39-116.maine.res.rr.com) (Ping timeout: 256 seconds)
[07:58:21] <jneira[m]> nice, good income
[09:53:23] *** Joins: lortabac (~lortabac@atoulouse-256-1-14-70.w92-136.abo.wanadoo.fr)
[09:55:05] *** Joins: fendor (~fendor@178.165.200.199.wireless.dyn.drei.com)
[13:04:16] *** Joins: fendor_ (~fendor@178.165.166.121.wireless.dyn.drei.com)
[13:06:59] *** Quits: fendor (~fendor@178.165.200.199.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[16:01:23] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[16:22:38] *** Joins: arrowd (~arr@2.93.55.66)
[18:03:15] *** Quits: ikex (~ash@user/ikex) (Ping timeout: 260 seconds)
[18:26:56] *** Quits: lortabac (~lortabac@atoulouse-256-1-14-70.w92-136.abo.wanadoo.fr) (Quit: WeeChat 2.8)
[19:30:06] *** Quits: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99) (Quit: You have been kicked for being idle)
[19:39:41] *** Quits: fendor_ (~fendor@178.165.166.121.wireless.dyn.drei.com) (Remote host closed the connection)
[19:41:28] *** Joins: fendor (~fendor@178.165.166.121.wireless.dyn.drei.com)
[21:09:24] <shapr> oh hey!
[21:09:56] <shapr> so the feature suggestion I got was about filtering the list of libraries to import by the type signature
[21:10:24] <shapr> so this line without a type signature shows the whole list: https://github.com/shapr/hlsexamples/blob/main/src/Examples.hs#L32
[21:10:37] <shapr> but if instead the previous line were otherthing :: (a -> a -> Bool) -> [a] -> [[a]]
[21:10:54] <shapr> then it wouldn't make sense to choose groupBy from Data.Text and the others
[21:16:24] <shapr> where is the import suggesting code implemented?
[22:06:09] <jneira[m]> Not sureif it is the same feature request but it reminds me https://github.com/haskell/haskell-language-server/issues/754
[22:06:57] <jneira[m]> there it is linked some relevant code
[22:23:47] <shapr> looks like the same thing to me
[22:26:47] <jneira[m]> yeah, it seems July541 start to work on it but there is pr
[22:27:00] <jneira[m]> * there is no pr
[22:27:43] <shapr> there is lots of helpful context 
[22:27:58] <shapr> I'll check it out this evening
[22:28:01] <jneira[m]> s/yeah, it seems July541 start to work on it but there is pr/yeah, it seems July541 started to work on it but there is no pr/
[22:28:25] <shapr> jneira[m]: thanks for the pointer to that issue
[22:29:11] <jneira[m]> great, i miss the feature a lot: this is haskell, static types and so on, no? :-) 
[22:31:33] <shapr> right!
[22:35:20] *** Quits: arrowd (~arr@2.93.55.66) ()
[23:35:29] *** Quits: juhp (~juhp@128.106.188.220) (Ping timeout: 265 seconds)
[23:37:44] *** Joins: juhp (~juhp@128.106.188.220)
