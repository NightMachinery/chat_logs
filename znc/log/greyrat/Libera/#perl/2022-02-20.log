[00:00:32] <krismatrix> ok...i debugged why we don't see and the reason it the url is empty i precisely because it doesn't think of localhost:3000/xxx as a valid url.
[00:00:34] *** Quits: Pny (pny1312@2605:6400:c847:1985::5891) (Quit: ZNC - https://znc.in)
[00:04:38] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 256 seconds)
[00:09:45] *** Joins: Pny (pny1312@2605:6400:c847:1985::5891)
[00:15:17] <krismatrix> mst and Spiceman..thank you for your help. The cloudflare test did indeed allow me to test.
[00:15:59] <krismatrix> The problem is...the url that cloudflare creates a new everytime i run the tunnel...so I am not sure how to design the program to create the tunnel, get the url working and usable in development.
[00:18:52] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc4-git-8b97cae-Pogorze-Karpackie-CUSTOM-KERNEL)
[00:19:19] *** Joins: k8yun (~k8yun@user/k8yun)
[00:22:51] <SpiceMan> krismatrix: maybe this? https://stripe.com/docs/payments/handling-payment-events#deploy-endpoint
[00:22:52] <Paperbot> Link title(s): [ Triggering actions with webhooks | Stripe Documentation ]
[00:23:58] <krismatrix> interesting...I'll take a look into it.
[00:24:06] <mst> krismatrix: doesn't cloudflared output the URL it's created?
[00:24:29] <krismatrix> it does on screen..yes.
[00:24:42] <mst> so ... write that to a file and have your tests read the file
[00:25:02] <mst> then later write some code that does that automatically if the file either doesn't exist or is more than an hour old or whatever
[00:25:04] <krismatrix> Yep. That IS the plan...just slightly more work. lol.
[00:25:30] <mst> you said you weren't sure how to design the program to do it. 'read stdout from cloudflared' is basically it
[00:25:35] <mst> p3rl.org/IPC::Run3 is your friend.
[00:27:24] <SpiceMan> mst: it seems stripe provides a tool that kind of ngroks and takes events relevant to its API ( the "test your webhook locally" part in the last link I pasted )
[00:27:30] <SpiceMan> that seems like less effort
[00:28:59] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[00:29:32] <mst> the problem appears to've been that the dev mode API didn't like localhost:3000/ URLs being POSTed to it, and while it's entirely possible there's a stripe configuration setting that would make that work, I'm fucked if I'm going to spend time trying to find it
[00:31:16] <mst> also once krismatrix gets this all working it's a single workaround that he can use for this entire class of problems rather than needing to figure out service specific versions each time, so while it's entirely possible you're right that going down the path you're thinking of might've been less effort had he done that in the first place, at this point I think the ROI to finishing sorting out the cloudflare 
[00:31:22] <mst> thing will be better in the long run
[00:31:24] <mst> though I am also biased here
[00:31:47] <mst> because "helping krismatrix use IPC::Run3 and figure out how to auto-refresh a file on disk as required" sounds a lot more like fun to me than trying to figure out how to do stripe correctly :D
[00:32:57] <mst> krismatrix: though I still suspect that SpiceMan's answer is arguably More Correct, I just cannot at all be bothered digging into stripe docs.
[00:33:23] <krismatrix> I am going to look into the stripe docs as well. But your solution did work in the moment.
[00:33:55] <mst> basically my approach is arguably 'Plan B', but it's also a plan B that's applicable to multiple situations whereas the best Plan A will be specific to what you're doing
[00:34:09] <mst> so if you end up knowing how to do both that's probably going to be pretty cool for you in the long run :D
[00:36:47] <krismatrix> ineed
[00:40:55] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:43:51] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1da8:8bb8:7aff:3b18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:44:47] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[00:53:02] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[01:08:52] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[01:10:14] <SpiceMan> mst: I did dig into the docs. that API sucks, doesn't let you configure whatever the fuck you want (TM)
[01:10:39] <mst> SpiceMan: your sacrifice is appreciated, sir
[01:10:42] <SpiceMan> the things one does out of boredom at 6:40 am
[01:15:57] <krismatrix> you mean the docs for Stripe.
[01:16:17] <mst> krismatrix: yep
[01:16:44] <krismatrix> I found it frustrating...ultimately...i looked up the curl version of the stripe api..and just tested everything that I wanted to there..Once I got the one i wanted, I proceed to use that.
[01:17:22] <mst> having zero motivation to deal with that frustration is why I went straight to the Plan B approach :D
[01:17:36] <mst> SpiceMan was apparently a different sort of bored to me :D
[01:18:21] <SpiceMan> mst: had you digged into the docs, I'd probably be fuck that and coming up with my own plan B
[01:18:35] <SpiceMan> boredom has that quality
[01:18:45] <mst> <3
[01:21:01] *** Joins: alex11 (~alex11@user/alex11)
[01:25:21] *** Quits: erik__ (~erik@2001:1c00:1805:fd00:dc1:1d1a:d0f9:149d) (Ping timeout: 245 seconds)
[01:26:05] <krismatrix> stepping away..thx for help on the stripe..I still need to look into the IPCRun3..
[01:26:17] *** Quits: krismatrix (~krismatri@12.182.97.5) (Quit: Leaving)
[01:28:43] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[01:34:38] *** Quits: deadmarshal (~deadmarsh@95.38.113.80) (Ping timeout: 272 seconds)
[01:36:11] *** Joins: erik__ (~erik@2001:1c00:1805:fd00:583:b424:6ba0:fa50)
[01:37:32] *** Joins: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr)
[01:37:42] *** Parts: faris (~faris@lfbn-idf1-1-1759-158.w90-91.abo.wanadoo.fr) ()
[01:55:03] *** Joins: KnoP (~KnoP@p4ff5676f.dip0.t-ipconnect.de)
[01:55:14] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[01:55:59] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[02:00:34] *** Joins: Croran (~Croran@71.231.214.173)
[02:01:29] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[02:02:10] *** Quits: erik__ (~erik@2001:1c00:1805:fd00:583:b424:6ba0:fa50) (Remote host closed the connection)
[02:02:27] *** Joins: erik__ (~erik@2001:1c00:1805:fd00:fd99:a742:5c55:d0fd)
[02:04:31] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[02:07:31] *** Joins: deadmarshal (~deadmarsh@95.38.118.170)
[02:10:27] *** Quits: bmeneg_ (~bmeneg@2001:1284:f019:462c:8021:8a78:4a24:7e8d) (Ping timeout: 250 seconds)
[02:11:46] *** Quits: erik__ (~erik@2001:1c00:1805:fd00:fd99:a742:5c55:d0fd) (Ping timeout: 250 seconds)
[02:12:08] *** Quits: deadmarshal (~deadmarsh@95.38.118.170) (Ping timeout: 256 seconds)
[02:20:04] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[02:21:45] *** Joins: ofl^ (~ofl@50.233.120.162)
[02:27:29] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[02:33:40] *** Quits: pizdets (~pizdets@183.182.114.44) (Ping timeout: 256 seconds)
[02:33:46] *** Joins: pizdets_ (~pizdets@183.182.110.129)
[02:34:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[02:34:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[02:45:31] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:1da8:8bb8:7aff:3b18)
[02:52:25] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:34e0:8b74:dd2c:1d62) (Ping timeout: 256 seconds)
[02:59:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:04:02] *** Joins: whynot (~whynot@37.73.131.244)
[03:14:42] *** Quits: KnoP (~KnoP@p4ff5676f.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:21:56] *** Joins: krismatrix (~krismatri@12.182.97.5)
[03:24:14] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[03:25:29] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:28:13] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[03:29:10] <simcop2387> a sad day, https://www.phoronix.com/scan.php?page=news_item&px=AMD-ROCm-5.0.1
[03:29:10] <Paperbot> Link title(s): [ AMD ROCm 5.0.1 Released - Begins Moving HIPCC/HIPCONFIG From Perl Scripts To Binaries - Phoronix ]
[03:35:00] <xenu> leaving the perl issue aside, i never understood why amd is shooting its foot so hard with ROCm
[03:35:14] <xenu> 1. why it supports only a small subset of their cards?
[03:35:22] <xenu> 2. why it doesn't support windows?
[03:35:35] <xenu> it's like they want people to use CUDA
[03:38:36] <krismatrix> I am not sure I follow what the point of IPC::Run3 is. I tried to do the following: https://l.perl.bot/p/hfxiqd
[03:38:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[03:38:47] <krismatrix> Not sure if this is what I am supposed to attempt.
[03:41:57] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 240 seconds)
[03:43:28] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:49:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:58:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[04:08:30] *** Joins: lllh (~llh@198.48.244.21)
[04:09:57] *** Quits: llh (~llh@user/llh) (Ping timeout: 240 seconds)
[04:11:42] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[04:12:58] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[04:31:11] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1da8:8bb8:7aff:3b18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:31:50] *** Quits: krismatrix (~krismatri@12.182.97.5) (Quit: Leaving)
[04:42:13] <simcop2387> xenu: rocm 5 at least addresses point 1 from my understanding.  it's still not as good as it should be there but i believe it adds support to a lot more of their cards
[04:43:14] *** Joins: monkey_ (~user@190.104.116.153)
[04:51:25] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:1da8:8bb8:7aff:3b18)
[05:02:48] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[05:09:30] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:10:16] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[05:11:11] *** Joins: csrf (~csrf@user/csrf)
[05:14:24] *** Quits: ofl^ (~ofl@50.233.120.162) (Remote host closed the connection)
[05:44:27] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:48:37] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 240 seconds)
[05:50:01] *** Quits: Su-Shee (~Susanne@p50894f16.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:51:53] *** Joins: Su-Shee (~Susanne@p4ff4967e.dip0.t-ipconnect.de)
[06:05:50] *** Joins: jx0 (~jx0@199.229.250.137)
[06:20:57] *** Quits: whynot (~whynot@37.73.131.244) (Quit: leaving)
[06:37:38] *** Joins: G_SabinoMullane (~G_SabinoM@c-75-69-51-68.hsd1.ma.comcast.net)
[06:39:52] <rindolf> simcop2387: hey, sup?
[06:42:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:57:58] *** Joins: krismatrix (~krismatri@12.182.97.5)
[07:00:07] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:12:50] <krismatrix> I am creating a dynamic web page for an audio player (essentially a page that acts like an SPA but without using react or vue). But like react router and vue router, it would be nice if when the audio changes, the router also changes. Is there a way for me to achieve that with Mojo?
[07:18:09] <mst> krismatrix: mojo is server side, changing the apparent URL in the browser is client side, so your question makes no sense
[07:18:33] <krismatrix> :(
[07:18:34] <mst> do you mean "I want to change the URL in the browser from my javascript code" ?
[07:19:11] <mst> krismatrix: usual thing, I need to understand the actual problem and then I can make suggestions :D
[07:19:46] <mst> like vue and react both do it on the client with javascript
[07:19:48] <krismatrix> I think you are right. But not sure how to change url in frontend either...need to look into that then.
[07:19:58] <mst> your problem is reasonable but the solution is nothing to do with mojo
[07:20:00] <krismatrix> right...vue and react can do it. but I am not using either.
[07:20:16] <krismatrix> right...i need to find out in JS i guess...
[07:21:06] <mst> krismatrix: https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API
[07:21:07] <Paperbot> Link title(s): [ Working with the History API - Web APIs | MDN ]
[07:21:49] <krismatrix> thx
[07:22:03] <mst> krismatrix: aTHX, dTHX or pTHX ?
[07:22:13] <krismatrix> huh?
[07:22:18] <krismatrix> thx = thanks.
[07:22:43] <mst> krismatrix: no, THX is a sound system standard, and aTHX, dTHX and pTHX are perl core C macros
[07:23:10] <krismatrix> ok.
[07:23:45] <mst> krismatrix: if you meant 'thanks' either type it out or use 'ta' which is an english abbreviation, 'thx' is 12 year old american girl with a nokia candybar phone bullshit :P
[07:24:07] <krismatrix> ta?
[07:24:10] <ether> or a reference to a sci fi movie from the 70s
[07:24:30] <mst> krismatrix: 'ta' is an en_UK short version of 'thank you'
[07:24:36] <mst> krismatrix: 'thx' is not even english
[07:25:02] <ether> I work with someone who writes things like "r u finished with that report" and it drives me nuts
[07:25:03] <krismatrix> it's short like lol is. It is not english. 
[07:25:14] <krismatrix> or brb.
[07:25:29] <mst> krismatrix: 'ta' is shorter and actually english
[07:25:57] <krismatrix> Is it? But doesn't that sound like ta ta (as in bye bye).
[07:26:34] <mst> ether: indeed
[07:26:48] <mst> krismatrix: if you're actually grateful, use actual words
[07:27:09] <mst> krismatrix: in northern english, 'ta' is an actual word so I'm fine with it. 'thx' is just bullshit. don't please.
[07:27:15] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[07:28:23] <krismatrix> i take it: aight, fo sho, tru dat, is all not acceptable lingo? hah.
[07:29:00] <mst> krismatrix: the point here is that gratitude - i.e. saying 'thank you' to somebody - should be done properly
[07:29:24] <krismatrix> Fair enough. Thank you.
[07:29:47] <mst> You are entirely welcome, and your listening to my gripe is appreciated :D
[07:31:54] <mst> note btw that when I ride a bus locally as I get off the bus I'll generally say "cheers ta" to the driver, in .uk english there's a rhythm and a principle to these things and I am absolutely a grumpy bastard but in this case I do actually have a reason for it ;)
[07:32:34] <krismatrix> Nothing wrong with basic courtesy.
[07:33:54] <krismatrix> I am having an odd (i think) problem in my site. I am trying to create cookies. I am trying to create a cookie called paidUser. But instead of creating one, my code is creating two. 
[07:34:09] <krismatrix> I noticed that the session for one is '/' and the other is '/secure'.
[07:34:34] <mst> right, because cookies by default are attached to the current URL path as well as the domain
[07:35:23] <krismatrix> oh.
[07:35:34] <krismatrix> so the two are actually good?
[07:35:44] <mst> depends on what you want
[07:36:11] <mst> also remember that mojo's session code, by default, uses a cryptographically signed cookie so you can be sure it hasn't been tampered with
[07:36:26] <mst> so you can usually just use $c->session and not worry about doing cookies by hand
[07:36:29] <krismatrix> Right. I do know that.
[07:36:56] <krismatrix> well..what I am trying to do is create a cookie called paidUser that says yes or no based on whether the user has paid for subscription.
[07:37:18] <krismatrix> And right now the paidUser / has value of No but paidUser /secure has value of Yes.
[07:37:38] <krismatrix> And I was expecting on signout, all the cookies would be deleted.
[07:38:06] <mst> (back when I was taking buses daily all the drivers recognised me because I was always scrupulously polite ... when I got the last bus of the night I'd often have them throw me off a stop before my 'real' stop because I knew that made it easier for them to turn the bus and get back to the depot sooner so they'd get home sooner ... several of them would grin and then drop me at the intersection for my road 
[07:38:12] <mst> instead because it gave them the same advantage but left me with a shorter walk home)
[07:38:17] <mst> krismatrix: cookies don't work like that
[07:38:31] <mst> krismatrix: that's why you're better stuffing them in the session or whatever
[07:39:09] <krismatrix> Ok...can there only be one session?
[07:39:27] <mst> krismatrix: it's just a cryptographically signed cookie
[07:39:34] <mst> I'm not sure what your question means
[07:40:31] <krismatrix> Well..when I submit my signin form, I create a cookie called user_login by $self->app->sessions->cookie_name('user_login');
[07:40:59] <mst> argh
[07:41:34] <mst> https://metacpan.org/pod/Mojolicious::Controller#session
[07:41:35] <Paperbot> Link title(s): [ Mojolicious::Controller - Controller base class - metacpan.org ]
[07:41:52] <krismatrix> I treat this cookie as something that tells my site that a user has logged in. When user logs out, this is deleted by $self->session(expires=>1);
[07:41:59] <mst> $self->session->{uid} = $user_id;
[07:42:16] <mst> krismatrix: you're overcomplicating this
[07:42:20] <krismatrix> ok.
[07:43:12] <mst> then I'd load paidUser via a databse call based on the user id in your authentication under() and ->stash it
[07:43:38] *** Joins: deadmarshal (~deadmarsh@95.38.118.170)
[07:44:08] <krismatrix> but didn't you tell me mojo's ->stash would be reset each time a new route was called? How is that persistent?
[07:44:42] <mst> krismatrix: it isn't!
[07:44:50] <mst> the *uid* is persistent
[07:45:02] <mst> then on each request you check your database for if it's a paid user
[07:45:21] <krismatrix> ooh...you are saying that the under() part will check the database everytime.
[07:45:21] <mst> which means that if they upgrade in another tab and give you money
[07:45:34] <mst> their existing tab actually gets the stuff they've paid for immediately
[07:45:41] <mst> which is a nice thing for paying customers
[07:46:06] <mst> note: yes, checking the database every time requires a little bit of overhead
[07:46:25] <mst> but customers getting the stuff they've paid for immediately is probably worth it
[07:46:39] <krismatrix> ok.
[07:46:52] <mst> you can get more clever caching stuff in the name of speed later
[07:47:23] <mst> but to begin with, making sure customers get the thing they've paid for immediately is probably more important
[07:48:28] <krismatrix> So you are saying create only one session via $self->session('user' => $user); And then on signout $self->session(expires => 1). But in my under() check the pg database for the paidUser status.
[07:49:06] <mst> krismatrix: yes
[07:49:45] <krismatrix> ok...that is simple enough.
[07:49:46] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Quit: https://convos.chat)
[07:50:00] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[07:50:08] <mst> krismatrix: right, if you end up with enough users that that's a problem that's a nice problem to have
[07:50:27] <krismatrix> right.
[07:51:00] <krismatrix> Alright. Thank you. I will review my code and implement that. thank you.
[07:51:08] <mst> $c->stash(user => $c->db->user($c->session->{user}));
[07:51:32] <mst> ^^ above code assumes 'db' is a DBIx::Class::Schema helper and uses DBIx::Class::Schema::ResultSetNames
[07:51:40] * GumbyPAN CPAN Upload: Sereal-4.023 by YVES https://metacpan.org/release/YVES/Sereal-4.023
[07:51:40] * GumbyPAN CPAN Upload: Sereal-Decoder-4.023 by YVES https://metacpan.org/release/YVES/Sereal-Decoder-4.023
[07:51:42] * GumbyPAN CPAN Upload: Sereal-Encoder-4.023 by YVES https://metacpan.org/release/YVES/Sereal-Encoder-4.023
[07:51:56] <mst> but the equivalent code for Mojo::Pg + SQL::Abstract should be pretty similar
[07:52:52] <krismatrix> I guess we are doing the stash because all the pages that need to verify the paidUser state will have acceess to the stash. And i just check that stash to toggle between one or the other.
[07:53:58] <mst> krismatrix: right, this can happen in the auth under() and then everything else can use the stash value for it, simpler code that way
[07:55:06] <krismatrix> alright....time to go to bed. Let the idea sink in and work on it tomorrow night.
[07:55:44] <krismatrix> thank you again. Hopefully, this will solve my weird cookie issue.
[07:56:10] <mst> I hope.
[07:56:23] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 256 seconds)
[07:56:36] *** Quits: Martchus_ (~martchus@dynamic-077-004-175-056.77.4.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:56:46] *** Joins: Martchus (~martchus@dynamic-095-114-074-044.95.114.pool.telefonica.de)
[08:04:30] *** Joins: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16)
[08:06:12] *** Quits: G_SabinoMullane (~G_SabinoM@c-75-69-51-68.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[08:08:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[08:19:09] *** Joins: deadmarshal_ (~deadmarsh@95.38.4.150)
[08:20:36] *** Quits: deadmarshal (~deadmarsh@95.38.118.170) (Ping timeout: 272 seconds)
[08:26:59] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 256 seconds)
[08:37:27] *** Joins: dansan (~daniel@75.81.148.51)
[08:42:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:43:02] *** Joins: Trigon (~reuben@144.39.114.115)
[08:53:35] <superkuh> Hi. I'm generating some RSS files by parsing an HTML unordered list. That works fine and is my first regex in a while loop for each <li>.  But within the while loop I do a second regex matching the full text of the filename from the first regex. But instead of doing the regex on the string in the variable, it does the regex on a completely unrelated original html file. I've been banging my head at this for the afternoon on and off and I can't see what I'v
[08:53:35] <superkuh> e done wrong. Any ideas?
[08:53:41] <superkuh> https://l.perl.bot/p/a9xrao
[08:53:42] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[08:54:31] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[08:54:50] <superkuh> I can't understand why in the world the second match, $fulltext =~ m/superkuh on blog at /; on $fulltext, which is populated with a real html, instead results in text from an unrelated html file.
[08:55:00] *** Quits: deadmarshal_ (~deadmarsh@95.38.4.150) (Ping timeout: 240 seconds)
[08:55:14] <superkuh> The html from the list of html <li> that the while goes through. :\
[08:58:59] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1da8:8bb8:7aff:3b18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:59:02] <mst> superkuh: use Mojo::DOM to read the HTML
[08:59:22] <superkuh> The HTML is there.
[08:59:23] <mst> superkuh: using regexps to parse HTML is always satan
[08:59:46] <superkuh> Okay. I understand your recommendation is for the best. But no.
[09:00:14] <mst> why no?
[09:00:26] <superkuh> I just want to get this done and leave it, not learn some new module.
[09:00:49] <mst> regexps and HTML is broken
[09:00:58] <mst> it never works right
[09:01:26] <superkuh> I've never had this problem before.
[09:01:31] <superkuh> I've been doing it for 20 years.
[09:01:38] <superkuh> Obviously without learning much.
[09:02:28] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:2db7:686:885a:81b9)
[09:02:29] <superkuh> It seems like the second match is matching against $_ instead of $fulltext, which it's set up with.
[09:02:49] <mst> I honestly don't care
[09:03:07] <mst> regexps+HTML is broken
[09:03:18] <mst> nobody in #perl will help you with it
[09:03:44] <superkuh> Ok.
[09:04:24] <mst> Mojo::DOM is easy
[09:04:29] <mst> and will actually work
[09:04:34] <superkuh> I honestly don't care.
[09:07:47] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[09:08:41] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[09:09:22] <mst> superkuh: https://perl.bot/p/hq9poy
[09:09:23] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[09:09:28] <mst> superkuh: that's how it works
[09:10:24] <superkuh> Okay. I am getting the text into $fulltext just fine. It prints out. But then when I do the matching it doesn't match what is in $fulltext. :\
[09:10:42] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:10:43] <superkuh> It matches an entirely different multi-line string not in $fulltext at all.
[09:10:56] <superkuh> The one the original while loop operated on.
[09:11:08] <superkuh> The html file with the <li></li>
[09:11:11] <mst> I don't care
[09:11:21] <mst> use the code I showed you to parse the HTML
[09:11:26] <mst> and then I can help
[09:11:26] <superkuh> I was just trying to explain why your code isn't useful.
[09:11:42] <mst> but it is, because it's better than the stupid shit you showed me
[09:11:44] <superkuh> Though I do appreciate, again, the attempt to help. I figure I just haven't explained the situation clearly enough and... you don't care.
[09:12:05] <mst> so long as you're doing HTML completely wrong, I don't care, no
[09:12:13] <mst> I wrote the code for you to do it right
[09:12:30] <mst> use that and then I'm happy to help with problems after that
[09:13:05] <rewt> superkuh, what's your ultimate goal?  you want to transform that html to what?
[09:14:11] <superkuh> http://superkuh.com/rss-all2.xml - except instead I replace the date field with the text of the blog posts by grabbing everything within the after a specific string which is in each post.
[09:14:28] <mst> superkuh: your choice: do you want help or not?
[09:14:55] <mst> I replaced your regexps with sensible code - I wrote it for you
[09:14:57] <superkuh> mst, I'm willing to give your way a go but it'll take me a bit to apply it. I was before answering rewts question.
[09:15:57] *** Joins: diskin (~diskin@185.49.242.58)
[09:16:07] <mst> using regexps on HTML is the single most hated sort of question we get in this channel and nobody wants to answer it because the result is always awful
[09:16:35] <mst> but once we get rid of that, we'll be happy to help with everything else
[09:17:23] <superkuh> It is not exactly plug and play with XML::RSS:SimpleGen.
[09:17:36] <superkuh> Mojo::DOM way, that is.
[09:18:01] <xenu> what do you mean? if you have a string, you can use Mojo::DOM
[09:18:05] <xenu> just like you can use a regex
[09:18:06] <mst> indeed
[09:18:11] <superkuh> I don't have the string.
[09:18:20] <superkuh> I give the URL to a private function and it goes.
[09:18:33] <mst> the string is what you tried to regexp
[09:18:35] <superkuh> I guess I can write extra to GET  myself.
[09:18:37] <mst> you do have the string
[09:18:39] <mst> stop lying
[09:19:20] <superkuh> mst, I'm really trying not to be antagonistic here. Since I've been here in #perl as long as you I know you're going to have a bad opinion about people asking this, but I'm not lying.
[09:19:52] <mst> superkuh: I took your string and put it into Mojo::DOM
[09:19:58] <mst> it worked
[09:20:07] <xenu> i thought that maybe you meant that this module has a function that takes a regex
[09:20:08] <superkuh> What string?
[09:20:11] <xenu> but i looked at its documentation
[09:20:17] <xenu> and it doesn't seem to be the case
[09:20:31] <superkuh> The string I need is http://superkuh.com/blog/recent31337.html
[09:20:39] <superkuh> Or I can load it locally.
[09:21:06] <xenu> by "string" we mean whatever you tried to parse with a regex
[09:21:14] <mst> superkuh: the string you used the 'while' loop on
[09:21:24] <mst> superkuh: is the same string that Mojo::DOM can handle for you
[09:21:36] <mst> superkuh: your code already proved it was there
[09:22:53] <superkuh> Okay, So there's the first string, which is the multi-line HTML file that XML::RSS::SimpleGen gets with get_url(), which then ??? and then the while loop which is operating implicitly so it's ... $_. So I give $_ to Mojo::DOM. Okay. I think I finally follow you.
[09:22:59] <mst> superkuh: your get_url() call put the HTML in $_
[09:23:11] <mst> superkuh: so
[09:23:18] <mst> superkuh: my $html = $_;
[09:23:28] <mst> superkuh: then use my Mojo::DOM code that uses $html
[09:23:37] <xenu> (btw, the api of that module is really weird)
[09:24:23] <mst> yes, XML::RSS::SimpleGen is awful and I'd rather you didn't use it because it's broken bullshit but this is how to make the broken bullshit work anyway
[09:24:44] <superkuh> I used it because I already had <li> generated in my blog pipeline and it was simple plug and play.
[09:24:49] <superkuh> At least until I wanted to add full text.
[09:25:04] <mst> except it wasn't because it's broken bullshit and doesn't work
[09:25:05] <superkuh> Been using it for years without trouble.
[09:25:09] <mst> This sounds like a case of having solved half of your problem, and now just needing help with the other half - the half that doesn't make any sense.
[09:26:09] <xenu> well, on the bright side, now you have a new powerful tool
[09:26:14] <mst> I wrote the Mojo::DOM code for you
[09:26:15] <mst> use it
[09:27:51] <xenu> and you're lucky it isn't 2005 anymore because otherwise our answers would've been much more complicated
[09:27:52] *** Quits: Croran (~Croran@71.231.214.173) (Quit: leaving)
[09:27:57] <xenu> mojo's parser is really simple to use
[09:28:14] *** Quits: lllh (~llh@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[09:29:11] <superkuh> Hm. Does Mojo::DOM install in 5.10.1?
[09:29:28] <superkuh> Not in my repos but I can give cpan a try.
[09:29:55] *** Joins: llh (~llh@user/llh)
[09:30:23] <xenu> superkuh: oh god, you *are* living in 2005
[09:30:28] <xenu> no, it won't install
[09:30:31] <xenu> *but*
[09:30:34] <xenu> https://metacpan.org/pod/Mojo::DOM58
[09:30:37] <Paperbot> Link title(s): [ Mojo::DOM58 - Minimalistic HTML/XML DOM parser with CSS selectors - metacpan.org ]
[09:30:39] <xenu> this module has the same api
[09:30:43] <xenu> and it's compatible with perl 5.8
[09:30:53] <superkuh> Eh, this is way too complex.
[09:31:00] <superkuh> Maybe in the future.
[09:31:06] <xenu> like it's literally the same, just made for old perls
[09:31:31] <xenu> >Mojo::DOM58 is a fork of Mojo::DOM and tracks features and fixes to stay closely compatible with upstream. It differs only in the standalone format and compatibility with Perl 5.8. Any bugs or patches not related to these changes should be reported directly to the Mojolicious issue tracker.
[09:31:43] <xenu> just replace "Mojo::DOM" with "Mojo::DOM58"
[09:31:47] <xenu> in what mst gave you
[09:33:47] <superkuh> Installed, and it's giving errors for the closing ); in an exact copy paste of the example Mojo::DOM code.
[09:34:36] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[09:35:02] <xenu> that sounds unlikely
[09:35:12] <xenu> oh
[09:35:15] <xenu> maybe it's about say
[09:35:37] <superkuh> https://l.perl.bot/p/94l3ch
[09:35:37] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[09:35:50] <xenu> you copied it wrong
[09:36:01] <xenu> that line should be }); not );
[09:36:07] <xenu> and the original paste has '}'
[09:36:31] <superkuh> Okay. Now I understand mistaking my mistakes for malicious intent. :\
[09:36:40] <superkuh> I really did think I copied it correctly Thank you.
[09:36:52] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[09:37:16] <superkuh> And I forgot another 58.
[09:37:33] <superkuh> Of, of course say isn't in my perl.
[09:37:52] <superkuh> There we go.
[09:37:59] <xenu> your perl *does* have say, it was introduced in 5.10 but it needs 'use v5.10' *or* 'use feature "say"'
[09:40:51] *** Joins: llh (~llh@user/llh)
[09:41:51] * GumbyPAN CPAN Upload: Module-cpmfile-0.006 by SKAJI https://metacpan.org/release/SKAJI/Module-cpmfile-0.006
[09:42:23] <superkuh> Ah. Well, that gets the first URL in the li but I need the second url.
[09:44:34] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:2db7:686:885a:81b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:35] *** Joins: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net)
[09:44:41] <vms14> hi
[09:44:52] <vms14> I try to implement a forth in perl https://termbin.com/lnfp
[09:45:05] <vms14> any idea about how to make a return stack?
[09:46:57] <superkuh> find('li a a') doesn't do it...
[09:47:05] <superkuh> Multiple calls of $_->{href}; don't do it.
[09:47:59] <superkuh> Welp. Until I figure that out I guess it's back to regex.
[09:48:04] <xenu> superkuh: "li > a:nth-of-type(2)"
[09:48:16] <xenu> mojo uses css to select a tag
[09:48:29] <xenu> and this should work
[09:48:42] <superkuh> It does. Thank you again.
[09:49:12] <superkuh> Ah, but now I can't get the right text.
[09:49:22] <superkuh> I guess I just do that one separately.
[09:49:27] <superkuh> Like it was originally.
[09:51:12] <superkuh> Nope. Because then I can't keep track of what goes with what.
[09:52:58] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:52:59] *** Joins: Croran (~Croran@71.231.214.173)
[09:58:35] <xenu> superkuh: sorry, i misunderstood what you wanted
[09:59:10] <superkuh> I need a way to get the $_->text from find('li a') and the ->{href} from find('li > a:nth-of-type(2)') in the same find. Currently I'm doing two find loops to fill arrays and just hope the order is deterministic and the same for each.
[09:59:28] <superkuh> Then combining the same indices from each array.
[09:59:52] <xenu> superkuh: https://perl.bot/p/qllo25
[09:59:52] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[10:01:47] *** Joins: k8yun (~k8yun@user/k8yun)
[10:06:54] * GumbyPAN CPAN Upload: YAOO-0.08 by LNATION https://metacpan.org/release/LNATION/YAOO-0.08
[10:09:54] <superkuh> Thanks xenu for the detailed help and mst for forcing me down the right path. I've got it all working now thanks to you.
[10:11:03] <xenu> btw, note that 'say $_->preceding('a')->first->text' will die if there's no preceding <a>, if you need to handle it more gracefully, you can use a callback
[10:11:12] <xenu> $_->preceding('a')->first(sub { say $_->text });
[10:11:22] <xenu> "say $->text" will be executed only if the preceding <a> is found
[10:11:26] <superkuh> Good to know. There will always be a preceding a in this case, luckily.
[10:11:51] <xenu> also i guess semantically "last" is more correct than "first', but it doesn't matter becasue there's only one element
[10:11:55] * GumbyPAN CPAN Upload: Phone-Valid-International-Loose-0.02 by LNATION https://metacpan.org/release/LNATION/Phone-Valid-International-Loose-0.02
[10:20:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:22:21] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[10:29:48] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[10:33:37] *** Quits: llh (~llh@user/llh) (Ping timeout: 272 seconds)
[10:41:58] * GumbyPAN CPAN Upload: ODS-0.04 by LNATION https://metacpan.org/release/LNATION/ODS-0.04
[10:45:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[10:45:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:46:11] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:55:49] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[10:57:29] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[11:04:12] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 240 seconds)
[11:05:09] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[11:13:02] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:15:29] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[11:17:48] *** Joins: frost (~frost@user/frost)
[11:24:34] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[11:26:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:29:44] *** Quits: Croran (~Croran@71.231.214.173) (Ping timeout: 256 seconds)
[11:31:43] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 256 seconds)
[11:40:55] *** Quits: zapwai (~zapwai@2600:8805:8002:ed00:346a:d6e3:bd63:1a16) (Quit: Slackin')
[11:44:51] *** Quits: vms14 (~user@29.red-79-153-202.dynamicip.rima-tde.net) (Remote host closed the connection)
[11:47:05] * GumbyPAN CPAN Upload: App-xspf2m3u-0.2.0 by SHLOMIF https://metacpan.org/release/SHLOMIF/App-xspf2m3u-0.2.0
[12:06:18] *** Quits: Peppard (~quassel@2001:470:1f0b:751:8c48:1ee9:654a:aa5a) (Quit: No Ping reply in 180 seconds.)
[12:06:34] *** Joins: Croran (~Croran@71.231.214.173)
[12:07:27] *** Joins: Peppard (~quassel@2001:470:1f0b:751:144a:e7d9:e429:b2d1)
[12:20:24] <xenu> https://thehackerblog.com/zero-days-without-incident-compromising-angular-via-expired-npm-publisher-email-domains-7kZplW4x/
[12:20:25] <Paperbot> Link title(s): [ "Zero-Days" Without Incident - Compromising Angular via Expired npm Publisher Email Domains – The... ]
[12:21:07] <xenu> cpan is definitely vulnerable to this
[12:22:08] * GumbyPAN CPAN Upload: MCE-1.877 by MARIOROY https://metacpan.org/release/MARIOROY/MCE-1.877
[12:22:09] * GumbyPAN CPAN Upload: MCE-Shared-1.876 by MARIOROY https://metacpan.org/release/MARIOROY/MCE-Shared-1.876
[12:22:18] <xenu> there's even this to make it more convenient: https://www.cpan.org/authors/02authors.txt.gz
[12:24:08] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:26:49] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[12:28:16] *** Joins: tejr (~tejr@user/tejr)
[12:31:06] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:31:42] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:33:13] *** Joins: Markow (~Markow@176.122.215.103)
[12:33:14] *** Joins: tejr (~tejr@user/tejr)
[12:39:40] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[12:55:02] <rindolf> xenu: security vulns r like hydra heads
[12:59:27] <rindolf> https://twitter.com/shlomif/status/1488058229867356162
[12:59:27] <Paperbot> Shlomi Fish (@shlomif) 20d2h ago: Life is so much better with https://noscript.net/ disabled. I welcome my new https://memory-alpha.fandom.com/wiki/Jem%27Hadar overlords. ;-)
[13:03:23] <ology> https://github.com/ology/Lex/blob/master/wordle-cheat fwiw
[13:03:24] <Paperbot> Link title(s): [ Lex/wordle-cheat at master · ology/Lex · GitHub ]
[13:05:13] *** Quits: willthechill (~willthech@wsip-98-175-201-111.ri.ri.cox.net) (Ping timeout: 256 seconds)
[13:07:00] <ology> Need to make that retain memory.
[13:12:15] <ology> Also "not in word letters" oof. Forgot that before pasting it here. :)
[13:12:50] *** Joins: erik_ (~erik@2001:1c00:1805:fd00:82fa:d442:6ea1:16ef)
[13:17:01] *** Quits: erik_ (~erik@2001:1c00:1805:fd00:82fa:d442:6ea1:16ef) (Ping timeout: 245 seconds)
[13:27:57] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[13:35:21] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[13:38:17] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[13:41:14] *** Joins: tejr (~tejr@user/tejr)
[13:41:17] * GumbyPAN CPAN Upload: Lingua-PT-PLNbase-0.29 by AMBS https://metacpan.org/release/AMBS/Lingua-PT-PLNbase-0.29
[13:42:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:46:22] *** Joins: erik_ (~erik@2001:1c00:1805:fd00:ba8c:1b66:dc7:6705)
[13:58:20] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:02:22] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc4-git-8b97cae-Pogorze-Karpackie-CUSTOM-KERNEL)
[14:21:58] *** diskin is now known as Guest6654
[14:21:58] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[14:21:58] *** Quits: Guest6654 (~diskin@185.49.242.58) (Killed (copper.libera.chat (Nickname regained by services)))
[14:21:58] *** diskin_ is now known as diskin
[14:22:14] *** Joins: averell (~averell@user/averell)
[14:23:56] *** Joins: magla (~gelignite@55d46ecf.access.ecotel.net)
[14:30:30] <ology> ok fixed
[14:30:30] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:33:48] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:36:47] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[14:37:13] *** Joins: proller (~p@80.240.216.69)
[14:42:30] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 272 seconds)
[14:49:04] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:57:39] *** Joins: furrymcgee (~devuan@cgn-89-1-211-93.nc.de)
[15:05:57] *** Quits: Gry (~quassel@botters/gry) (Ping timeout: 272 seconds)
[15:12:11] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:14:39] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[15:18:09] *** Joins: frost (~frost@user/frost)
[15:21:22] <rindolf> ology: line 47 is code injection - https://github.com/ology/Lex/blob/master/wordle-cheat
[15:21:23] <Paperbot> Link title(s): [ Lex/wordle-cheat at master · ology/Lex · GitHub ]
[15:24:00] <rindolf> simcop2387: hi, PM?
[15:27:07] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:447b:39c4:735e:5310)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:44:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:56:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:58:23] *** Joins: EGD (~egd@user/egd)
[16:06:33] * GumbyPAN CPAN Upload: perl-5.35.9 by RENEEB https://metacpan.org/release/RENEEB/perl-5.35.9
[16:16:03] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[16:16:34] * GumbyPAN CPAN Upload: PDL-VectorValued-1.0.15 by MOOCOW https://metacpan.org/release/MOOCOW/PDL-VectorValued-1.0.15
[16:16:52] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[16:18:00] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:21:44] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[16:22:50] *** Quits: EGD (~egd@user/egd) ()
[16:26:35] * GumbyPAN CPAN Upload: FFI-Platypus-Lang-CPP-0.06 by PLICEASE https://metacpan.org/release/PLICEASE/FFI-Platypus-Lang-CPP-0.06
[16:26:40] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Ping timeout: 256 seconds)
[16:32:56] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:33:21] *** Joins: Pali (~pali@user/pali)
[16:34:12] *** Quits: Woodzy_ (~quassel@198.204.246.228) (Ping timeout: 240 seconds)
[16:34:56] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:36:36] * GumbyPAN CPAN Upload: MCE-1.878 by MARIOROY https://metacpan.org/release/MARIOROY/MCE-1.878
[16:37:09] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[16:37:21] <leont> I wrote another thing: http://blogs.perl.org/users/leon_timmermans/2022/02/some-tricks-for-prettier-xs.html
[16:37:21] <Paperbot> Link title(s): [ Some tricks for prettier xs | Leon Timmermans [blogs.perl.org] ]
[16:44:50] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[16:49:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:52:33] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[16:56:58] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[16:56:59] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:01:20] *** Joins: troller (~p@80.240.216.69)
[17:01:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:11:40] * GumbyPAN CPAN Upload: Module-CoreList-5.20220220 by BINGOS https://metacpan.org/release/BINGOS/Module-CoreList-5.20220220
[17:11:40] * GumbyPAN CPAN Upload: CPAN-Perl-Releases-5.20220220 by BINGOS https://metacpan.org/release/BINGOS/CPAN-Perl-Releases-5.20220220
[17:13:00] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[17:19:57] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[17:21:24] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 240 seconds)
[17:23:15] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:35:12] *** Joins: troller (~p@80.240.216.69)
[17:43:56] <pragma-> leont: oh that reminds me. I have a question. Does XS need to be written in K&R style? Because I really, really do not want to do that.
[17:44:24] <leont> No it doesn't, that's exactly one of my points
[17:44:46] <leont> perlxs does that because it was written in 1994, and never updated when xs became better
[17:45:40] <pragma-> Excellent because that was really turning me off and a lot of random searching around the internet led to blogs where others were saying "Take note of the K&R function style. I'm not sure if we actually have to write it this way because I dont' know if there are any obscure parsers in the Perl toolchain that depend on this format, but its what eveyone else seems to do so I'm going to teach you to do
[17:45:40] <pragma-> it this way too just to be safe." and that's so off-putting.
[17:45:50] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[17:46:48] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[17:50:55] <pragma-> In a shocking turn of fate, the ISO C committee is actually seriously considering removing K&R style function declarations from the next C standard.
[17:52:31] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 256 seconds)
[17:52:48] *** Quits: perldoc (~perldoc@24.88.46.213) (Ping timeout: 256 seconds)
[17:52:48] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 256 seconds)
[17:52:59] <pragma-> I should have clicked the link and read the post before asking about K&R functions but I saw the IRC message and I immediately had to ask my question. :p
[17:53:22] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 256 seconds)
[17:53:22] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 256 seconds)
[17:53:46] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 272 seconds)
[17:56:15] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:03:18] *** Joins: G_SabinoMullane (~G_SabinoM@c-75-69-51-68.hsd1.ma.comcast.net)
[18:14:14] <xenu> pragma-: note that the removal from C won't affect xs
[18:14:26] <xenu> those declarations are parsed by the xs preprocessor
[18:14:43] <xenu> the output code always uses standard prototypes
[18:24:48] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 272 seconds)
[18:27:46] <leont> I don't think I've seen any actual K&R code, other than when doing git archeology (perl predates ANSI-C), ever.
[18:39:07] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:52:54] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:55:00] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[18:57:07] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[18:59:23] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 256 seconds)
[19:01:39] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[19:09:56] <pragma-> weird C error of the day: https://i.imgur.com/TXV7MIJ.png
[19:12:41] <krismatrix> mst..just an fyi...i managed to implement the cookie system we discussed yesterday. Appears to be working fine on incognition window...on non-inco...perhaps because of caching..it keeps one of the variables it seems.
[19:14:31] <mst> krismatrix: vaguecat.jpg
[19:14:38] *** Joins: troller (~p@2a00:1fa0:655:303:bd1:e1fb:95a2:b02c)
[19:17:48] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 240 seconds)
[19:20:46] *** Quits: troller (~p@2a00:1fa0:655:303:bd1:e1fb:95a2:b02c) (Ping timeout: 245 seconds)
[19:23:10] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d50:ed7b:88e6:c382)
[19:24:30] <aquanight> pragma-: ...how?
[19:25:02] <aquanight> the only thing I could think of is if the very obvious ';' got dummied out somehow but I can't figure out how that could happen
[19:25:05] <pragma-> aquanight: beats me, this is the full paste: https://0x0.st/o8hd.txt
[19:25:24] <pragma-> aquanight: clang gets it right: https://0x0.st/o8h5.txt
[19:25:30] <aquanight> printf("%zu", _Alignof(__typeof__(x));
[19:25:32] <aquanight> not enough )
[19:25:48] <pragma-> right, but why does gcc demand a semi-colon there? clang doesn't get confused.
[19:26:17] <aquanight> well
[19:26:31] <aquanight> 39:42: error: expected ')' before ';' token
[19:26:36] <aquanight> it did give you the right error
[19:26:45] <pragma-> but then...
[19:26:57] <aquanight> my wild-ass guess
[19:27:07] <aquanight> is that since it for some reason decided to carry on
[19:27:33] <aquanight> the theory is that despite the ;, it's still "mid-printf call" because the call was never closed
[19:28:00] <aquanight> so it then sees the } to end the outermost block but the current statement (voidcall to printf) was never closed
[19:28:22] <aquanight> "but ;" but it can't be closed because the function call wasn't closed.
[19:28:36] <aquanight> maybe it assumes the ;s were typos
[19:29:00] <aquanight> I dunno. I remember once being taught that you look at the first compiler error, and if it's a syntax error just assume everything after it is likely garbage.
[19:29:27] <aquanight> or generally, assume everything after the first syntax/lexer error is garbage (whether said error is the first reported error or not)
[19:29:50] <aquanight> perl has done weird things too when you blunder syntax
[19:30:06] <aquanight> sweval: my $x = 42 say $x;
[19:30:17] <aquanight> no bot
[19:30:46] <aquanight> also apparently current perl is too smart for that now.
[19:31:08] <aquanight> But i've had dropped ;s and }; spew out "global symbol" errors against otherwise correctly declared variables 400 lines away.
[19:31:58] *** Quits: G_SabinoMullane (~G_SabinoM@c-75-69-51-68.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[19:32:18] <mst> or duplicate declaration in same scope errors
[19:34:28] <aquanight> for want of a ) ...
[19:35:12] <aquanight> lost )s are perhaps the most egregious
[19:46:56] * GumbyPAN CPAN Upload: mro-EVERY-v0.1.2 by LEMBARK https://metacpan.org/release/LEMBARK/mro-EVERY-v0.1.2
[19:48:40] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[19:52:57] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[19:54:38] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 256 seconds)
[20:03:50] *** Joins: Astrased (~Astrased@82-168-108-38.fixed.kpn.net)
[20:08:37] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:34c0:3772:be9c:15db) (Ping timeout: 240 seconds)
[20:17:05] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[20:19:45] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[20:20:41] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[20:21:19] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:c1f6:28c:7cda:ba83)
[20:22:08] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[20:24:44] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[20:25:14] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[20:26:45] *** Joins: perldoc (~perldoc@24.88.46.213)
[20:28:17] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[20:28:17] *** ChanServ sets mode: +v perlbot
[20:32:44] *** Quits: krismatrix (~krismatri@12.182.97.5) (Ping timeout: 272 seconds)
[20:35:53] *** Quits: subie (~subie@2601:4c0:4080:bc0:65ff:4881:d497:d20d) (Ping timeout: 250 seconds)
[20:35:58] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[20:36:06] *** Joins: krismatrix (~krismatri@12.182.97.5)
[20:38:29] *** Joins: subie (~subie@2601:4c0:4080:bc0:a1cc:2d3e:91ae:8fa1)
[20:38:55] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 240 seconds)
[20:39:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[20:39:35] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[20:41:58] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 250 seconds)
[20:44:13] *** Quits: krismatrix (~krismatri@12.182.97.5) (Ping timeout: 256 seconds)
[20:46:04] *** Quits: Astrased (~Astrased@82-168-108-38.fixed.kpn.net) (Quit: Astrased)
[20:47:43] <simcop2387> alright, fans and recabling seems to have addressed the disk issues i was running into.  only a single file affected/corrupted according to zfs, some weird arcade rom.  already replaced.
[20:48:27] *** Joins: monkey_ (~user@190.104.116.153)
[20:49:34] *** Quits: Nataraj[m] (~dhyannata@2001:470:69fc:105::1:88f9) (Quit: Reconnecting)
[20:49:50] *** Joins: Nataraj[m] (~dhyannata@2001:470:69fc:105::1:88f9)
[20:51:07] <pragma-> zfs, eh? fancy. remember when everyone immediately dropped reiserfs after he killed his wife?
[20:51:44] <Adura> How old was she? 32 was she FAT?
[20:51:57] <buZz> exFat, Adura 
[20:52:04] * pragma- groans
[20:52:45] *** Joins: Nataraj (~Nataraj@91.203.188.92)
[20:52:58] <buZz> i do read a ton of ppl a) being very happy with zfs existing for unclear reasons (or just listing features of LVM2)  b) commenting about datacorruption of ZFS
[20:53:09] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[20:53:17] <buZz> i'll just wait another 10 years before i even touch it
[20:53:36] <pragma-> I've seen some posts where btrfs does some things better than zfs, but I forget what those specific cases were
[20:54:04] <LeoNerd> I'm quite happy with ext3 atop LVM raid1 mirror
[20:54:23] *** Joins: tejr (~tejr@user/tejr)
[20:55:04] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[20:55:16] <buZz> on my desk-xeon i just use raid0 , no lvm zfs or anything fancy 
[20:55:18] <veesh> leont: you have blown my mind wrt xs. I didn't realize you could just use it as a glue layer
[20:55:27] <veesh> it hath become significantly less scary
[20:55:42] <veesh> maybe we need a new xs tutorial
[20:55:57] <SpiceMan> I've never dabbled with xs... but isn't xs exactly a glue layer from its inception?
[20:55:58] <pragma-> I concur
[20:56:22] <pragma-> modernize all the documentation!
[20:56:36] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:57:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:57:38] <pragma-> Kind of hard to do anything about all the ancient blog posts and tutorials all over the internet still somehow not 404'ing yet
[20:58:25] *** Quits: Nataraj (~Nataraj@91.203.188.92) (Quit: Client closed)
[21:00:24] <simcop2387> pragma-: i dropped it when i found out about the horrible fsck behavior and it lost data for me.  if you have a reseiserfs image on resierfs and run fsck it'll combine the image with the root fs and randomly pick conflicting files
[21:01:40] <simcop2387> buZz: the thing is zfs found the corruption because of an issue with my hardware, and repaired it.  ext4, xfs, etc. you just lose it all.  though you don't usually try to run ext4 on 24 disks either though
[21:02:51] <simcop2387> in my case i was having reads aborted, writes aborted, etc. so any other file system would have just gone, "lol no data anymore".  linux MD raid would have just stopped entirely.  might not have lost as much there that way though but i was up and running while active hardware issues and resets were happening
[21:03:19] <simcop2387> lvm2 can't do that either
[21:03:28] <simcop2387> btrfs in theory can but well it's btrfs
[21:05:24] <simcop2387> now i just need the resilver to finish, and a scrub to be sure it's all stable.
[21:09:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:11:24] *** Joins: mexen (uid495612@user/mexen)
[21:16:05] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:89ee:62bb:3f9a:ddbb)
[21:20:41] <simcop2387> sweet, part 7 of colin furze's secret tunnel video series this thursday
[21:26:59] <leont> veesh: yeah, but I don't think I want to write it 😛
[21:27:23] <veesh> i'll add it to my pile of TOWRITE, lol
[21:37:08] * GumbyPAN CPAN Upload: Feature-Compat-Try-0.05 by PEVANS https://metacpan.org/release/PEVANS/Feature-Compat-Try-0.05
[21:37:08] * GumbyPAN CPAN Upload: Syntax-Keyword-Try-0.27 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Keyword-Try-0.27
[21:40:09] <leont> Though I'm expecting to write another XS blogpost soonish, but that's more internal; on how to do thread-safe objects and such
[21:47:09] * GumbyPAN CPAN Upload: Astro-SpaceTrack-0.150 by WYANT https://metacpan.org/release/WYANT/Astro-SpaceTrack-0.150
[21:51:54] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 272 seconds)
[22:02:11] * GumbyPAN CPAN Upload: Perl-Critic-Policy-Variables-ProhibitUnusedVarsStricter-0.112_01 by WYANT https://metacpan.org/release/WYANT/Perl-Critic-Policy-Variables-ProhibitUnusedVarsStricter-0.112_01
[22:02:17] *** Quits: erik_ (~erik@2001:1c00:1805:fd00:ba8c:1b66:dc7:6705) (Quit: Leaving)
[22:04:36] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[22:08:40] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[22:09:37] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:14:02] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[22:14:34] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[22:15:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[22:23:41] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[22:28:12] *** Quits: deadmarshal (~deadmarsh@95.38.116.229) (Ping timeout: 240 seconds)
[22:28:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:29:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[22:32:14] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:89ee:62bb:3f9a:ddbb) (Ping timeout: 260 seconds)
[22:32:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:34:31] *** Joins: epony (epony@user/epony)
[22:34:50] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[22:39:19] *** Quits: japh (~scp1@user/japh) (Remote host closed the connection)
[22:41:00] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[22:53:58] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[23:07:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:16:26] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:17:42] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:18:37] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[23:20:00] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[23:26:20] * GumbyPAN CPAN Upload: Syntax-Keyword-Match-0.09 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Keyword-Match-0.09
[23:31:20] * GumbyPAN CPAN Upload: PDL-Graphics-PLplot-0.81 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-PLplot-0.81
[23:37:01] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[23:37:54] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[23:42:14] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[23:44:46] *** Joins: krismatrix (~krismatri@12.182.97.5)
[23:44:54] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[23:49:29] *** Joins: tangy (~tangy@user/tangy)
[23:52:56] *** Quits: krismatrix (~krismatri@12.182.97.5) (Quit: Leaving)
[23:55:55] *** Joins: Markow (~Markow@176.122.215.103)
[23:56:45] *** Joins: deadmarshal (~deadmarsh@95.38.116.229)
[23:59:41] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:b40c:806a:27ba:87ae)
