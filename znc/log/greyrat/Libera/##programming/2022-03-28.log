[00:00:00] <pyzozord> pulse: I like to consider myself better than average in my category
[00:00:05] <pyzozord> but I'm not sure
[00:00:06] <pulse> might have been carlin, i forgot
[00:00:08] <vdamewood> sonny: Yes.
[00:00:24] <pulse> pyzozord, you probably are
[00:00:26] <ProfSimm> sonny: Esperanto is the REST of human languages
[00:00:34] <sonny> pyzozord didn't you see casey embarassing microsoft devs? lol
[00:00:58] *** Quits: password2 (~password8@user/password2) (Ping timeout: 272 seconds)
[00:01:02] <pyzozord> sonny: I did, it only added more credibility to that guy in my eyes
[00:01:13] <ProfSimm> sonny: where everyone speaks English but calls it Esperanto for the hype points
[00:01:15] <sonny> I don't think the bar is high right now tbh
[00:01:41] <vdamewood> sonny: I doded my app with English in the strings for UI, but when it runs it displays Esperanto from a translation file.
[00:01:45] <vdamewood> coded*
[00:02:11] <sonny> pyzozord maybe this will inspire you https://microsoftedge.github.io/edgevr/posts/bug-bounty-hunter-to-working-at-microsoft/
[00:02:12] <bayaz> Title: Bug bounty hunter to working at Microsoft 
[00:02:27] <sonny> vdamewood ohhh
[00:02:45] <sonny> what do your strings look like?
[00:03:11] <sonny> (thinking about how it does the translatation)
[00:03:25] <sonny> gnu gettext looks ... interesting
[00:03:30] <vdamewood> "Hello, world!"
[00:03:40] <sonny> oh ok
[00:03:44] *** Joins: jazzy (~jaziz@user/jaziz)
[00:03:46] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[00:03:52] *** Joins: welovfree (~welovfree@105.156.70.72)
[00:04:24] <vdamewood> Here's the full line:     ui->DisplayLabel->setText(tr("Hello, world!"));
[00:04:27] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[00:04:35] <vdamewood> Notice the tr
[00:04:49] <sonny> yeah, is that a macro?
[00:05:21] <vdamewood> Sort of, but all it expands too is something like this->translate
[00:05:40] <pulse> pyzozord, part of the reason i started indiedevs.net is (hopefully) to inspire gamedevs and have some kind of a platform to exchange useful information, so.. use it :p (if you want to)
[00:05:48] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[00:05:52] <pulse> inspiration is all in gamedev business
[00:05:54] <pulse> as far as i'm concerned anyway
[00:06:26] <sonny> beaky: are cyclic references allow in rust?
[00:06:32] <sonny> allowed*
[00:06:42] <pulse> the other part is i just wanted to make a phpbb based site because i loathe discord, reddit, and most other modern sites
[00:06:47] <pulse> discord is the worst
[00:06:51] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[00:06:56] <pyzozord> pulse: when I start working on some game project I probably will
[00:07:04] <vdamewood> the translate function looks up the string passed to it in a translation object abailable from a global object.
[00:07:18] <sonny> pulse you know, for some reason chat applications have determined life cycles
[00:07:40] <vdamewood> So, the translation can be changed at runtime.
[00:07:44] <pulse> i saved this post because it captures perfectly my sentiment about discord https://i.imgur.com/Ax78f4m.jpg
[00:07:45] <sonny> ah nice
[00:07:45] <bayaz> Type: image/jpeg Size: 107.4 kB 
[00:07:54] <pulse> it's exactly as described
[00:08:38] <vdamewood> Qt has a way to embed this into the executable itself, but I can't seem to find the 'path' to use.
[00:08:40] <user51> good ol' mailing list
[00:08:53] <pulse> i'm not a fan of mailing lists but even that is infinitely preferable to discord
[00:08:55] <sonny> we need to combine forms and [real-time] messaging, almost like ... email!
[00:09:12] <waylore> i dont understan how mailing lists work, like at all. am i just dumb?
[00:09:28] <sonny> I dunno either it's old tech
[00:09:39] <sonny> I dunno networking either :/
[00:09:48] <pulse> waylore, it's just a list of mail recipients
[00:09:50] <pyzozord> pulse: btw is there a dark theme available somewhere? Can't find the button
[00:09:58] <pulse> it's like a long thread for multiple people
[00:10:07] <pulse> pyzozord, nah. the old theme is available in dark mode, the new one isn't
[00:10:12] <waylore> pulse: so when someone replies, everyone reads his mail?
[00:10:18] <pulse> waylore, yes
[00:10:21] <sonny> vdamewood I imagine it's a header that will cause something to be linked in?
[00:10:21] <waylore> oh ok
[00:10:28] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 272 seconds)
[00:10:50] <vdamewood> sonny: Headers have nothing to do with linking.
[00:10:52] *** Quits: inky (~inky@46.70.99.147) (Remote host closed the connection)
[00:11:00] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:11:04] <pulse> (((for some values of nothing)))
[00:11:19] *** Joins: inky (~inky@46.70.99.147)
[00:11:36] <sonny> oh, so you are looking for the library then?
[00:11:45] <pyzozord> pulse: ok then I go with darkreader extension. Btw looks still slick https://imgur.com/a/jmGUq9Z
[00:12:01] <pulse> pyzozord, oh wow, that's... better than expected
[00:12:11] <pyzozord> yeah looks very good
[00:12:31] <pulse> maybe link the extension it in the "new theme" thread, someone else might find it useful?
[00:12:34] <pulse> if you want to that is
[00:12:51] <pulse> i may eventually make a dark mode for this theme too but it's a bit more work than i have time for rn
[00:12:51] <pyzozord> sure
[00:13:32] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[00:14:44] <pulse> pyzozord, add that screenshot too please. i might use it for inspiration if i ever get to making a dark mode
[00:15:02] <pulse> looks decent
[00:15:19] <vdamewood> sonny: Library?
[00:15:28] <sonny> .so stuff
[00:15:46] <vdamewood> No .so, just a .o
[00:17:13] <vdamewood> My build system is generating it, but it gets included into my executable in a .o file that's built from a .cpp file that starts wtih static const unsigned char qt_resource_data[] {
[00:18:10] <vdamewood> Qt has an API to retrieve data from this, but I have to use a special path to get the data.
[00:19:13] <sonny> something like this would be a 'resource' in windows I bet
[00:19:59] *** Joins: duuude (~user@user/duuude)
[00:20:44] *** Joins: bnchs__ (~bnchs@160.177.14.146)
[00:21:14] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb)
[00:21:17] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:23:34] *** Quits: bnchs (~bnchs@160.178.2.21) (Ping timeout: 260 seconds)
[00:23:41] *** Joins: wauterboi (~wauterboi@185.65.135.246)
[00:23:45] <pyzozord> pulse: this screenshot will expire after few days, that's imgur
[00:23:47] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:23:48] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[00:24:11] <pulse> pyzozord, why? imgur should last
[00:24:19] <pyzozord> oh then I guess it will last
[00:24:23] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[00:24:24] <pyzozord> I though imgurs expire fast
[00:24:31] <pulse> no, it lasts forever afaik
[00:24:44] <pulse> i can still find almost decade old posts i made on tigsource with imgur-linked images that still work
[00:24:47] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[00:24:49] <pulse> photobucket is the one that expires
[00:25:04] <pulse> pyzozord, but i've enabled attachments btw
[00:25:53] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[00:26:00] <bnchs__> one thing i find wrong here
[00:26:08] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[00:26:15] <bnchs__> "linux is not gonna be better, so might aswell target windows"
[00:26:26] <pyzozord> pulse: oh I didn't notice it, I looked for it a bit, only few seconds
[00:26:45] <pulse> bnchs__, gamers don't really care about linux
[00:26:47] <pulse> like, at all
[00:26:47] <bnchs__> thats like saying "healthy food tastes like shit, might aswell just eat mcdonalds"
[00:26:54] <pulse> no, that's false equivalency
[00:26:57] <flaqoniun> do they care about anything?
[00:27:13] <pulse> releasing games on linux is an incredibly unprofitable business model
[00:27:13] <duuude> duuude
[00:27:19] <pulse> flaqoniun, games
[00:27:22] <pulse> :)
[00:27:23] <bnchs__> pulse: funny
[00:27:29] <bnchs__> it's a endless cycle of
[00:27:33] <pulse> bnchs__, funny, until your livelihood depends on it
[00:27:35] <bnchs__> 1) not releasing your software to linux
[00:27:35] <duuude> people are using C++ and PHP in production
[00:27:43] <bnchs__> 2) complaining about linux not being good for desktop
[00:27:49] <bnchs__> 3) not doing shit about i
[00:27:53] <duuude> I had almost suppressed my memories about them
[00:27:56] <pulse> bnchs__, i actually release FOSS on linux
[00:28:05] <pulse> i have several projects that are cross-platform, and working on more
[00:28:08] <waylore> Red Hat did alright with open source software though :/
[00:28:16] <pulse> i might even release a game or two on linux, but i won't expect revenue from those games
[00:28:28] <bnchs__> because here's the thing
[00:28:29] <pulse> for games that i _do_ expect revenue, i can't find a good reason to bother with native linux releases
[00:28:31] <waylore> (look up for how much Red Hat was bought from IBM)
[00:28:37] <bnchs__> i wouldn't like to buy a software that excepts me to run
[00:28:40] <pulse> especially since windows builds actually work perfectly on wine
[00:28:43] <duuude> pulse: gamers don't care about linux but linuxers do care about games
[00:28:44] <bnchs__> a morbidly obese OS
[00:28:50] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[00:28:50] <vdamewood> Well, hexdump says the data is getting in there. I just need to remember how to use Qt's resource system.
[00:28:50] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[00:28:53] <pulse> bnchs__, "you" are irrelevant in my business model
[00:28:58] <duuude> pulse: you can be big in a near-empty niche
[00:29:00] <bnchs__> nice
[00:29:10] <bnchs__> remember postal 2 was ported to GNU/Linux
[00:29:13] <pulse> duuude, tiny fraction
[00:29:19] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Quit: Leaving)
[00:29:41] <bnchs__> porting your game to an another OS means more costumers
[00:29:47] <duuude> pulse: also if it is opensource, people will port it to everything under the sun
[00:29:54] <bnchs__> like postal 2
[00:29:58] <duuude> pulse: look at Super Mario War
[00:29:58] <pulse> duuude, open source games don't make revenue
[00:30:11] <bnchs__> pulse: go the DOOM way
[00:30:15] <pulse> no.
[00:30:18] <bnchs__> release the engine in a open-source license
[00:30:18] <waylore> is it all about the money though ? :/
[00:30:20] <pulse> you do you, i'll do me
[00:30:24] <bnchs__> and sell the data
[00:30:29] <bnchs__> i mean non-free game data
[00:30:29] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:30:30] <pulse> waylore, no, it's not all about money, far from it
[00:30:49] <duuude> pulse: publish games for free, then steal money from the nearest bank
[00:30:51] <pulse> but making bad business decisions isn't a priority of mine either
[00:31:00] <bnchs__> this is dumb
[00:31:01] <waylore> imagine a world where debian has the market share of Windows. I think you can make good money targeting linux then
[00:31:19] <bnchs__> pulse: heres the thing
[00:31:22] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[00:31:33] <bnchs__> there's game companies porting their games to gnu/linux
[00:31:39] <bnchs__> why do you think they do it
[00:31:44] <pulse> not to mention that on windows, i have to maintain a single binary installer
[00:31:57] <duuude> AppImage rocks
[00:32:07] <waylore> Flatpak is ok too
[00:32:13] <bnchs__> no fuck flatpak and shit
[00:32:17] <bnchs__> just distribute it as appimage
[00:32:19] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[00:32:23] <waylore> flatpak isnt that bad
[00:32:30] <pulse> easier to just maintain a single release in any case
[00:32:43] <duuude> good old "empty the .tar.gz here" works as well
[00:32:51] <bnchs__> pulse: lol
[00:32:52] <flaqoniun> .tar #1
[00:32:56] <bnchs__> just distribute it as a binary file
[00:32:59] <duuude> however wine remains the best distribution method :P
[00:33:00] <bnchs__> with data directory
[00:33:06] <bnchs__> it's the same thing as windows
[00:33:13] <waylore> I am playing Terraria on debian right now and afaik it's not oficially supported. (could be wrong). no issues what so ever, runs like a champ
[00:33:17] <pulse> like i said, you do you
[00:33:29] <pulse> (my games run perfectly fine on wine)
[00:33:35] <bnchs__> of course this is why you're still working on HTML5 games
[00:33:37] <waylore> god bless wine
[00:33:55] <pulse> bnchs__, what do you mean "still"? i work on html5 games because my clients want html5 games
[00:33:59] <bnchs__> "Postal 2 became Linux Game Publishing's fastest selling game in its first month, and contributed greatly to the continuing profitability of the company"
[00:34:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:14] <bnchs__> i forgot to mention this
[00:34:19] <pulse> postal 2 is one of the most horrible games ever made
[00:34:23] <waylore> so if clients want drugs, its ok to sell drugs?
[00:34:30] <bnchs__> pulse: postal 2 is fun
[00:34:43] <bnchs__> i think you hate it because it was ported to gnu/linux
[00:34:43] <pulse> waylore, i mean, morals and criminality aside, ... possibly? :p
[00:34:49] <waylore> haha
[00:34:54] <pulse> bnchs__, no, i hate it because it's a grotesque game
[00:35:02] <bnchs__> yes you can piss on a donut
[00:35:03] <pulse> where you can torture cats
[00:35:06] <bnchs__> and wait for someone to eat it
[00:35:19] <bnchs__> yeah i know that, use cats as a sliencer for your guns
[00:35:24] <pulse> it's in bad taste
[00:35:30] <pulse> i've never liked it
[00:35:31] <bnchs__> but whatever
[00:35:33] <bnchs__> it sold better
[00:35:49] <pulse> bnchs__, go ahead and release games for linux if you think that's a good business model
[00:35:49] <duuude> It was banned in a lot of places
[00:35:57] <pulse> i know it's a lousy business model, but like i said you do you
[00:36:02] <pulse> don't brainwash me in the process though
[00:36:22] <bnchs__> pulse: postal 2 is simply a game where you can either go peaceful
[00:36:23] <bnchs__> or violent
[00:36:33] <bnchs__> you can choose not to torture cats
[00:36:34] <pulse> i played it on release decades ago. i didn't like it then
[00:36:36] <pulse> and i don't like it now
[00:36:36] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[00:36:37] <bnchs__> nobody's forcing you
[00:36:50] <pulse> yeah but just the fact that devs thought it was funny to include that, puts me off
[00:36:50] <vdamewood> My gha!!! this is driving me nuts.
[00:36:54] <duuude> every time the games subject is brought up I feel a compulsion to advertise those of my own
[00:37:32] <bnchs__> i mean well it's the point
[00:37:57] <duuude> even though it is the same 5 people in this room
[00:38:07] <vdamewood> Fsck... The path had to end in a /
[00:38:21] <vdamewood> Well, that's 30 minutes wasted.
[00:38:26] <pulse> it's always funny to me when someone with severe fossvangelism syndrome goes down on me, knowing that i probably contribute way more to foss than they do
[00:38:28] <bnchs__> 30 minutes?????
[00:38:33] <bnchs__> you timed it?
[00:38:36] <pulse> but just because i use windows, i guess that makes me a valid target
[00:38:37] <flaqoniun> i wasted a whole week once
[00:38:48] <bnchs__> pulse, ok what did you write
[00:39:17] <vdamewood> bnchs__: Not precicely. Guessed based on the number of songs that played.
[00:39:39] <bnchs__> he went slient after this question
[00:39:54] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[00:40:04] <pulse> bnchs__, i don't do dick measuring contests, find someone else for that sort of thing
[00:40:20] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[00:40:21] <bnchs__> ok i said nothing about dick measuring contests
[00:40:25] <bnchs__> what did you write
[00:40:29] <bnchs__> and where the source code
[00:40:39] <pulse> not playing that game, sorry
[00:40:52] <duuude> dick measuring contests are not fun because it is just the same size
[00:40:59] <waylore> lol
[00:41:03] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:41:08] <duuude> no element of luck or strategy
[00:41:09] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[00:41:18] <bnchs__> pulse: so you're scared?
[00:41:24] <bnchs__> you contributed nothing to foss
[00:41:51] <bnchs__> ?
[00:42:04] <vdamewood> bnchs__: Cool it.
[00:42:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:42:20] <duuude> bnchs__: come and play this instead https://github.com/abakh/nbsdgames/
[00:42:21] <bayaz> Title: GitHub - abakh/nbsdgames: A package of 18 text-based modern games 
[00:42:42] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[00:42:49] <KillerWasp> mmmm...
[00:42:54] <bnchs__> vdamewood, i'm sorry, it's just that when someone says they contributed way more to foss, i'm just really curious about what they did
[00:43:29] <duuude> foss fussing
[00:43:47] *** Lord_of_Life_ is now known as Lord_of_Life
[00:44:05] <KillerWasp> No matter how much they/you brag from github, I will always be the best programmer in the world. Thats the reality. They/you can all go cry in a corner.
[00:44:55] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[00:45:06] <duuude> KillerWasp: you are not because Ken Thompson is not from Argentine so he is not you
[00:45:09] *** Quits: kubrickdave_ (~kubrickda@80-121-90-104.adsl.highway.telekom.at) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[00:45:12] <bnchs__> KillerWasp, divine intellect
[00:45:12] <duuude> *a
[00:45:55] *** Joins: kubrickdave (~kubrickda@80-121-90-104.adsl.highway.telekom.at)
[00:46:07] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[00:46:15] <vdamewood> I just sang along with a song and then I forgot the lyrics right after doing so... WTF?
[00:46:22] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[00:46:22] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[00:46:22] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[00:46:31] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:46:39] <kee> vdamewood: You never knew them in the first place. Sing them again; they'll come back to you, and you can learn them by listening to what you're saying.
[00:46:41] <bnchs__> i don't want infighting in free software
[00:46:54] <kee> bnchs__: The easiest way to prevent infighting is to discuss things.
[00:46:56] *** Quits: magla (~gelignite@d536552c.access.ecotel.net) (Quit: Stay safe!)
[00:47:02] <duuude> bnchs__: let's try outfighting
[00:47:24] <vdamewood> kee: But to sing along with them, I'd have to rewind the song.
[00:47:29] <bnchs__> no you know what i guess we do need infighting
[00:47:32] <bnchs__> emacs vs vim
[00:47:38] <vdamewood> VS Code
[00:48:06] <kee> Geany, or Notepad.
[00:48:11] <kee> (Yes, MS Windows Notepad.)
[00:48:11] <duuude> you could put vim in emacs but not emacs in vim
[00:48:19] <bnchs__> i use adie
[00:48:26] <kee> ed
[00:48:31] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:48:34] <duuude> (like anyone would have any reason to do that)
[00:48:53] *** Joins: pavonia (~user@user/siracusa)
[00:49:23] <bnchs__> i'm trying to maintain a software from decade ago
[00:49:29] <bnchs__> turning it into a daemon that uses unix socket
[00:49:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:50:00] <bnchs__> but windows was late in implementing unix sockets (about 2017)
[00:50:05] <vdamewood> I have no idea how to use ed.
[00:50:11] <bnchs__> so i guess that means something bad right?
[00:50:29] <duuude> ed is probably retarded sed
[00:50:41] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[00:50:41] *** Joins: urnebes (~urnebes@67-208-31-163.ip.tor.radiant.net)
[00:51:07] <bnchs__> i like how they say windows is lightyears ahead of linux
[00:51:15] <bnchs__> but yet decades late in unix sockets
[00:53:56] <vdamewood> duuude: Slurs aren't allowed here.
[00:54:29] <flaqoniun> troll is far slurier than retarded
[00:54:46] *** Joins: wolfshappen (~waff@irc.furworks.de)
[00:54:54] <kee> Only if you're French.
[00:55:39] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:55:42] <vdamewood> flaqoniun: No.
[00:55:47] <pulse> flaqoniun, it's not
[00:55:57] <flaqoniun> troll literally dehumanizes the target
[00:56:05] <kee> Slurs being bad isn't about the target.
[00:56:11] <pulse> troll can be used in a friendly context, `retarded` can't
[00:56:18] <flaqoniun> i'm not arguing if they're bad, i'm arguing which is worse
[00:56:23] <flaqoniun> and which get allowed
[00:56:34] <vdamewood> Troll doesn't dehumanize the target.
[00:56:44] <flaqoniun> define: troll
[00:56:56] <flaqoniun> what if i call someone an ogre
[00:57:04] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[00:57:06] <flaqoniun> or an orc
[00:57:11] <vdamewood> flaqoniun: Troll, a fisher who uses a net to catch a mass of fish
[00:57:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:57:20] <pulse> orcs are great <3
[00:57:23] <flaqoniun> thats the verb usage,  not the noun
[00:57:29] <flaqoniun> you can't call someone a verb
[00:57:42] <vdamewood> : a lure or a line with its lure and hook used in trolling
[00:57:55] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[00:57:56] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[00:57:57] <kee> The problem with slurs is that they attempt to insult somebody by taking the negative stereotypes of a marginalised (and often persecuted) group, and apply them to somebody as a form of insult.
[00:57:59] <vdamewood> citation: https://www.merriam-webster.com/dictionary/troll
[00:58:00] <bayaz> Title: Definition of TROLL 
[00:58:01] <flaqoniun> a lure is not a troll wtf
[00:58:14] *** Joins: xbkkd (~F0@user/xbkkd)
[00:58:23] <flaqoniun> that's the bait
[00:58:38] <flaqoniun> wow the internet is -3 degrees advanced
[00:58:44] <kee> flaqoniun: The trolls called themselves trolls, originally, because of the fishing metaphor.
[00:58:59] <pulse> trolls range from loving to destructive
[00:59:02] *** Quits: bnchs__ (~bnchs@160.177.14.146) (Read error: Connection reset by peer)
[00:59:04] <pulse> there is such a thing as lovingly trolling someone
[00:59:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[00:59:17] <pulse> there is no such thing as calling someone "retarded" lovingly, at least to my knowledge
[00:59:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[00:59:47] <pulse> in any case. read /topic and try to follow rule #1
[00:59:48] *** Joins: bnchs (~bnchs@160.177.14.146)
[00:59:48] <flaqoniun> (from top dead center)
[00:59:50] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[00:59:54] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[00:59:54] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[00:59:54] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[01:00:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:01:42] <Bou> pulse: welllll, someone can literally be mentally retarded, it's just a medical term really
[01:01:52] <vdamewood> Bou: Not any more.
[01:01:56] <pulse> no, it used to be a medical term
[01:02:00] <kee> Bou: Hasn't been for a very long time.
[01:02:10] <flaqoniun> if you call someone a "retard" thats a noun, and a slur
[01:02:19] <kee> The categorisation system was found to be deeply flawed.
[01:02:19] <flaqoniun> retarded is verb
[01:02:24] <kee> Adjective.
[01:02:45] <flaqoniun> oh yeah right, well you can "retard something" which is the verb
[01:02:56] <kee> Which is very rare, and not the sense that you used.
[01:03:14] <flaqoniun> fire retardant chemicals are banned from the newnet i guess
[01:03:22] <flaqoniun> adjusting your engines timing
[01:03:23] <kee> No, retardant is fine.
[01:03:37] <kee> Yeah, sure, it's used as jargon. Again, this isn't how you used the word.
[01:03:41] <flaqoniun> https://en.wikipedia.org/wiki/Retarded_time
[01:03:50] <kee> flaqoniun: It's not even the same part of speech, so I don't see how any of this is relevant.
[01:03:53] *** Joins: Pickchea (~private@user/pickchea)
[01:04:01] <kee> Slurs bad. Don't use slurs. It's not hard.
[01:04:13] <flaqoniun> right, don't say troll its a slur
[01:04:23] <flaqoniun> unless you are referring to the ver b  "trolling"
[01:04:56] <abraxis> when's the last time trolls were persecuted for anything other than something they decided to be?
[01:04:59] <kee> That might be a good rule of thumb, but not because troll is a slur. (I haven't seen it used as a slur.)
[01:05:27] <kee> When's the last time somebody was accused of being a troll for some reason other than trolling?
[01:05:31] <abraxis> troll isn't a slur because it doesn't refer to a marginalized group of people who have been persecuted
[01:05:42] <kee> And it isn't used to insult people by mere association with that group.
[01:06:20] <ProfSimm> abraham: troll is very definitely used as a slur
[01:06:43] <pulse> it's also used in a friendly manner
[01:06:48] <pulse> "this API is trolling me"
[01:06:52] <pulse> this is not a slur
[01:06:52] <ProfSimm> Eh sure.
[01:06:57] <pulse> "this API is retarded" this is
[01:07:15] <abraxis> mean name != slur
[01:07:15] <vdamewood> Anyone interested in why one word is allowed and another isn't can read the rules.
[01:07:19] <bnchs> wow
[01:07:28] <bnchs> you guys fought over the word "retarded"
[01:07:31] <flaqoniun> "this api has been retarded" might describe an intentionally slow or less than feature-full implementation
[01:07:37] <bnchs> shows the state of this channel really is
[01:07:42] <kee> flaqoniun: That's "verb" use.
[01:07:52] <pulse> bnchs, yes, and you shouldn't use it here. it's not a word that is conducive to a safe, friendly environment
[01:07:53] <flaqoniun> so is "trolling"
[01:07:59] <kee> bnchs: That's a good point. We probably shouldn't be arguing over this.
[01:08:18] <vdamewood> Leet's drop the argument.
[01:08:41] <vdamewood> A link to the rules are in the /topic. Read them if you want to know what's allowed and what's not.
[01:08:56] <kee> 1337's drop the argument. :-p
[01:08:58] <flaqoniun> does that include the full whitelisted slurs list?
[01:09:04] <vdamewood> !q flaqoniun 
[01:09:05] *** bayaz sets mode: +q *!*@32.211.211.39
[01:09:40] * vdamewood sets the time-out timer.
[01:10:07] <pyzozord> bnchs: I'd agrue the channel is in a very healthy state, healthiest I've seen it since say 6 months or something
[01:10:44] <pyzozord> quiets don't happen often, people are capable of mature discussion, and generally seem happy
[01:11:37] *** Quits: urnebes (~urnebes@67-208-31-163.ip.tor.radiant.net) (Ping timeout: 240 seconds)
[01:11:56] <pyzozord> especially considering how lax it is about the off-topic
[01:12:38] <ProfSimm> Does anyone here type space after unary minus:   - 10.
[01:12:52] * ProfSimm brings out some sharp knives
[01:13:03] <bnchs> pyzozord, yeah but
[01:13:06] <pulse> ProfSimm, nah, that's ... ugly
[01:13:08] <pyzozord> ProfSimm: never
[01:13:11] <bnchs> people here were arguing over a word
[01:13:15] <InPhase> ProfSimm: What about the people who tab between those?
[01:13:17] <pulse> at least make it -1*10
[01:13:17] * ProfSimm puts knives back
[01:13:22] <bnchs> i doubt it could be more healthier than that
[01:13:29] <ProfSimm> InPhase: I laughed.
[01:13:32] <InPhase> :)
[01:13:48] <pulse> bnchs, it's not arguing over a word, it's asking users politely not to use it
[01:13:52] <pulse> there's a difference
[01:13:59] <pyzozord> bnchs: you might not understand what discussion was really about if you say that
[01:14:05] <ProfSimm> InPhase: might hit \n twice for a nice paragraph break between them :P
[01:14:10] <bnchs> hmmm
[01:14:11] <vdamewood> bnchs: Would you rather we +q people as soon as we disagree with them?
[01:14:12] <bnchs> well ok
[01:14:19] <bnchs> vdamewood, nah thats worse
[01:14:45] <bnchs> i'm just saying maybe you guys shouldn't take a word so seriously?
[01:15:39] <pulse> we don't, we simply ask users to maintain friendlier language
[01:15:45] <InPhase> Well some words mean things, and some meanings are serious.  Words mean different things to different people, but in shared space, we can make an effort to be respectful of some variations in those meanings to help people feel comfortable discussing.
[01:15:51] <pulse> that benefits the whole channel
[01:16:11] <bnchs> well sure
[01:16:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:16:15] <bnchs> that's up to you guys
[01:17:43] *** Joins: urnebes (~urnebes@2605:8d80:66e:737:dcb2:1316:2942:2c61)
[01:18:14] *** Quits: urnebes (~urnebes@2605:8d80:66e:737:dcb2:1316:2942:2c61) (Read error: Connection reset by peer)
[01:18:52] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:19:11] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[01:19:12] <ProfSimm> Who loves these old-school binary formats that has elements that start with length in bytes and then have that exact length in bytes.
[01:19:18] <ProfSimm> So parsing it is super convenient
[01:19:20] *** bayaz sets mode: -q *!*@32.211.211.39
[01:20:02] <pulse> ProfSimm, i do. i like this too https://en.wikipedia.org/wiki/Variable-length_quantity
[01:20:02] <bayaz> Title: Variable-length quantity - Wikipedia 
[01:20:15] <vdamewood> ProfSimm: Pascal programmers
[01:20:43] *** Quits: javabean (~javabean@user/javabean) (Remote host closed the connection)
[01:20:50] <ProfSimm> "binary octets (eight-bit bytes)" <-- this won the redundancy award, but ok
[01:20:55] *** Joins: Guest86 (~Guest86@188.210.213.243)
[01:21:30] <zzz> fun fact: in some countries, one of the brands of condoms Control advertises is RETARDED
[01:21:33] <vdamewood> Well, that's what the parentheses are for.
[01:21:41] <ProfSimm> My file is long 652 binary eight-bit octet bytes.
[01:21:52] <vdamewood> zzz: Drop it.
[01:21:52] <zzz> "RETARD" even
[01:22:04] <ProfSimm> zzz: I would
[01:22:14] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[01:22:27] <zzz> https://preview.redd.it/dwochbsar4381.jpg?auto=webp&s=7b59396456d3cc3a99f9c70c9b5c7a3b2fc3cc69
[01:22:27] <bayaz> Type: image/jpeg Size: 98.6 kB 
[01:22:29] <zzz> oh sorry
[01:22:39] <vdamewood> !q zzz 
[01:22:40] *** bayaz sets mode: +q $a:zero
[01:22:45] *** Joins: urnebes (~urnebes@2605:8d80:64b:7fcf:f84d:2f89:a94a:c0b)
[01:22:55] * vdamewood sets the timer again
[01:23:04] <ProfSimm> pulse: yeah I think Google protobuf uses VLQ for integers right
[01:23:31] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Remote host closed the connection)
[01:23:31] *** Quits: urnebes (~urnebes@2605:8d80:64b:7fcf:f84d:2f89:a94a:c0b) (Read error: Connection reset by peer)
[01:24:51] *** Joins: kittyn (~kittyn@096-039-144-255.res.spectrum.com)
[01:25:00] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[01:25:21] <ProfSimm> I never actually inspected how the machine code compiles for a x86 CPU or similar
[01:25:28] <ProfSimm> I suspect it;s very much like a binary format
[01:25:36] *** Joins: javabean (~javabean@user/javabean)
[01:25:39] <ProfSimm> I mean binary data file
[01:25:41] <Bou> Very tightly packed, too
[01:26:03] <ProfSimm> There are no commands with variable arguments in ASM I think yes
[01:26:05] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[01:26:07] *** ShitbirdGrimshaw is now known as Stella
[01:26:09] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder_)
[01:26:12] <ProfSimm> So reading the command, you know how long it is
[01:27:07] *** Joins: soapsudsxx (~soapsudsx@141.193.188.145)
[01:27:08] <Bou> There are some modifiers that can add more stuff
[01:27:18] <ProfSimm> Ah
[01:27:26] <Bou> And different encodings for the same thing
[01:27:27] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[01:28:17] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Ping timeout: 256 seconds)
[01:30:08] <ProfSimm> I'm liking Icon https://www2.cs.arizona.edu/icon/docs/ipd266.htm
[01:30:18] <ProfSimm> Has many of the same ideas
[01:30:25] <ProfSimm> as what i do
[01:30:39] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[01:31:30] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:31:46] <bnchs> is m68k instruction set better
[01:32:03] <vdamewood> bnchs: Than what?
[01:32:06] <bnchs> i mean easier to program in
[01:32:38] *** bayaz sets mode: -q $a:zero
[01:32:52] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.106.threembb.co.uk)
[01:33:23] <vdamewood> Again, than what?
[01:33:36] <bnchs> x86
[01:33:42] <ProfSimm> Who can guess what this line of code does:       foo: read.line (file) & line -> print (line, "\n") & foo | print "done"
[01:33:58] <bnchs> you read a line
[01:34:04] <vdamewood> ProfSimm: Waters the binart tree
[01:34:07] <bnchs> and bitwise AND
[01:34:10] <vdamewood> binary
[01:34:12] <bnchs> with line
[01:34:33] <ProfSimm> I'll just say I have no binary bool operators, so I just have & and |
[01:34:39] <bnchs> and then you print the result (of bitwise AND'ing line read and line)
[01:35:05] <bnchs> then you bitwise and the result of the print with foo and then bitwise OR with the result of print "done"
[01:35:08] <kee> ProfSimm: Recursively prints a line, then prints done.
[01:35:19] * ProfSimm gives kee a medal
[01:35:25] <bnchs> terrible syntax
[01:35:31] <ProfSimm> Thanks
[01:35:51] <ProfSimm> bnchs: glad that my goal of producing a lean clear syntax is met
[01:36:06] <bnchs> yeah
[01:36:11] <bnchs> what does this do
[01:36:18] <bnchs> foo: 1 & 2
[01:36:18] <kee> It's an unholy combination between sh, JavaScript and Haskell.
[01:36:22] *** Joins: urnebes (~urnebes@2605:8d80:649:9804:eb40:ee7d:7764:1aa0)
[01:36:32] <kee> bnchs: Nothing.
[01:36:45] <kee> That code has no side-effects.
[01:36:46] <ProfSimm> bnchs: foo becomes a lamdba that's equal to 2
[01:36:46] *** Quits: urnebes (~urnebes@2605:8d80:649:9804:eb40:ee7d:7764:1aa0) (Read error: Connection reset by peer)
[01:37:02] <ProfSimm> Well not equal to 2, but produces 2 when called
[01:37:12] <kee> ProfSimm: And foo: 0 | 2 would do the same?
[01:37:37] *** Quits: welovfree (~welovfree@105.156.70.72) (Ping timeout: 240 seconds)
[01:37:41] <ProfSimm> kee: nah because my 0 is not falsey. But this would:   foo: !1 | 2
[01:37:49] <kee> Why's 0 not falsey?
[01:37:57] <bnchs> ProfSimm, what
[01:37:59] <ProfSimm> Well I don't cast non-bool values to bool implicitly
[01:38:07] <bnchs> in my mind, this does a bitwise AND 1 with 2
[01:38:25] <bnchs> so it should return 0
[01:38:40] <ProfSimm> kee: to emulate what C would do, you need to implicit test for 0:     x: 0, foo: x != 0 | 2
[01:39:00] <ProfSimm> I mean EXPLICIT obv
[01:39:01] <duuude> ProfSimm: 0 not being false is super-irritating
[01:39:06] *** Joins: welovfree (~welovfree@105.156.70.72)
[01:39:09] <kee> bnchs: It's a ternary expression, kinda.
[01:39:17] <kee> Or Python's `and` / `or` keywords.
[01:39:18] <ProfSimm> kee: yup.
[01:39:19] <bnchs> ok
[01:39:27] <bnchs> how do you do bitwise operations then
[01:39:32] <ProfSimm> duuude: it's irritating I understand.
[01:39:43] <ProfSimm> duuude: but good code tends to be explicit about == 0 and != 0 anyway
[01:39:46] <kee> Less irritating given shell scripts.
[01:39:46] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[01:39:59] <kee> ProfSimm: That numbers have any truthiness value at all in this case is annoying.
[01:40:33] <ProfSimm> kee: well in this one all values are truthy. so that's consistent in the language. 
[01:40:38] <ProfSimm> kee: better than some truthy and some not
[01:41:01] <ProfSimm> kee: this feature makes it possible to use AND and OR as THEN and ELSE (ternary)
[01:41:04] <kee> Better that, like Rust, none are truthy.
[01:41:12] <duuude> ProfSimm: either number should not be true or false
[01:41:13] <kee> It just refuses to run the code.
[01:41:19] <duuude> ProfSimm: or 0 is false
[01:41:26] <kee> Or 0 is true.
[01:41:37] <ProfSimm> Everything is true :P
[01:41:38] <duuude> no that is unbearable 
[01:41:42] <ProfSimm> Haha
[01:41:43] <kee> POSIX ftw
[01:41:55] <bnchs> no
[01:41:57] <bnchs> win32 ftw
[01:42:00] <flaqoniun> 0 doesn't mean true thats "SUCCESS"
[01:42:01] <bnchs> posix sux
[01:42:06] <duuude> 0 being true is hypocrisy and tyrannical blasphemy
[01:42:11] <kee> flaqoniun: There's an if.
[01:42:19] <ProfSimm> Yes it's more of a "success" and "failure"
[01:42:24] <duuude> return 0 is for && afaik
[01:42:25] <kee> /bin/true returns 0.
[01:42:32] <ProfSimm> But strictly speaking they're called 'then' and 'else' internally
[01:42:35] <bnchs> i'm joking
[01:42:39] <ProfSimm> Every value is 'then'-y
[01:42:47] <ProfSimm> You prepend "!" to make it "else"-y
[01:42:49] <vdamewood> bnchs: Vacuum cleaners suck. They don't even clean vacuums.
[01:43:15] <ProfSimm> Or you use a predicate
[01:43:19] <ProfSimm> like x > 0 and so on
[01:43:33] <bnchs> they suck
[01:43:40] <bnchs> and swallow
[01:43:50] <ProfSimm> BTW the equality operator is just one =
[01:43:51] <ProfSimm> Yay.
[01:43:55] <ProfSimm> I know you hate that too
[01:43:58] <pulse> ProfSimm, MIDI uses VQLs
[01:44:07] <ProfSimm> pulse: the music format?
[01:44:11] <pulse> yes
[01:44:11] <ProfSimm> pulse: nice
[01:44:21] <duuude> vdamewood: they don't even manage to suck vaccuum
[01:44:24] <bnchs> it's not music format
[01:44:31] <ProfSimm> Well.
[01:44:32] <bnchs> it's a MIDI format
[01:44:34] <ProfSimm> Makes music :P
[01:44:38] <bnchs> musical instrument data
[01:44:39] <pulse> file format*
[01:44:49] <vdamewood> Musitical instrument digital interface
[01:44:53] <vdamewood> Musical*
[01:44:56] <flaqoniun> hmm, can't say i've ever had to actually use /bin/true so maybe they are that orcish
[01:45:11] <ProfSimm> Midi files. So tiny. 
[01:45:14] <ProfSimm> The original mp3
[01:45:22] <bnchs> ProfSimm, because they don't store audio
[01:45:25] <ProfSimm> That sounds different everywhere you play it
[01:45:32] <bnchs> just notes and instruments per channel
[01:45:34] <bnchs> and tracks
[01:45:35] <ProfSimm> Sure
[01:45:40] <duuude> ProfSimm: those of kind of weirdities with no practical benefit are a reason why many dislike lua
[01:45:55] <ProfSimm> duuude: there's a lot of practical benefit
[01:45:56] <bnchs> so it wouldn't compete with mp3
[01:46:10] <ProfSimm> duuude: I thought people like Lua, it's big in games
[01:46:32] <duuude> ProfSimm: people using your stuff would be programmers, and programmers are used to ==
[01:46:43] <vdamewood> I saw someone encode the opening of startrek "Space, the final frontier..." in a midi fily. The did a Fourier analysis, then picked the closest instrument to a sine wave and encoded it as that. It sounded terrible, but you could hear the words.
[01:46:59] <vdamewood> So... many... typos!
[01:46:59] *** Quits: welovfree (~welovfree@105.156.70.72) (Ping timeout: 260 seconds)
[01:47:00] <ProfSimm> duuude: well they can still type == when they're used to it. They'll get a syntax error and fix it :P
[01:47:26] <ProfSimm> duuude: I'm not making a C clone. I want... to make a new thing. That's more like what we did in the 80s apparently 
[01:47:32] *** Joins: welovfree (~welovfree@105.156.70.72)
[01:47:47] <duuude> ProfSimm: they are mostly for it because of good api and performance, and most of it users are annoyed with 1-base, ~=, lack of +=, etc.
[01:47:48] *** Quits: zwr (~zwr@2804:d45:b966:fb00:e8a7:8c67:601:f50b) (Ping timeout: 240 seconds)
[01:47:51] <ProfSimm> duuude: your typical language has everything implemented 5-6 times
[01:47:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[01:48:01] * vdamewood hands ProfSimm a Pascal
[01:48:04] <ProfSimm> duuude: I'm trying to implement it once, with one syntax, but make it usable in 6 cases
[01:48:26] <duuude> ProfSimm: yeah but divergences should have good reasons
[01:48:30] <ProfSimm> duuude: for, foreach, for in, for of, while, do while... <-- loops
[01:48:37] <ProfSimm> duuude: in mine thing you need none of that
[01:48:41] *** Joins: zwr (~zwr@2804:d45:b966:fb00:f2b3:3aeb:5464:99ac)
[01:49:08] <ProfSimm> duuude: similarly && || ?: if/then/else switch/case <-- just & and | with me
[01:49:12] <duuude> ProfSimm: warnings and error are vastly unpopular, see: people complaining about YAML indents
[01:49:31] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[01:49:32] <ProfSimm> duuude: what do you mean
[01:49:38] <duuude> more so when there is little reason for it
[01:49:50] <duuude> ProfSimm: == breaking your program
[01:50:12] <duuude> ProfSimm: also they may be developing in some other language in tandem with yours
[01:50:12] <ProfSimm> duuude: the reason for == breaking my program is because it's written twice.
[01:50:20] <pulse> i'm still waiting for javascript to introduce =====
[01:50:24] <duuude> lol
[01:50:26] <ProfSimm> duuude: why would I parrot what C did, if I have no assignment operator using =
[01:50:48] <vdamewood> pulse: Matched type, alignment, and locale?
[01:50:50] <duuude> ProfSimm: why would you not?
[01:50:55] <pulse> ProfSimm, because that way you won't get angry programmers knocking on your door and throwing pie at you
[01:51:00] <ProfSimm> duuude: because my assignment operator is ":"
[01:51:02] <pulse> vdamewood, something like that
[01:51:14] <duuude> ProfSimm: at worst = and == could be the same
[01:51:16] <bnchs> sometimes, i dream about cheese
[01:51:18] <vdamewood> My alignment is Neutral Good
[01:51:24] *** Quits: inky (~inky@46.70.99.147) (Ping timeout: 240 seconds)
[01:51:28] <duuude> ProfSimm: better if assignment is =
[01:51:35] <duuude> ProfSimm: or = and :
[01:51:39] <ProfSimm> duuude: well, if someone types == I can delete one of em automatically.
[01:51:43] <duuude> what is wrong with =
[01:51:43] <ProfSimm> :D
[01:52:04] <duuude> yeah that is a better idea than breaking on ==
[01:52:05] <ProfSimm> duuude: nothing is wrong with = so that's why I use it
[01:52:32] <vdamewood> I think I need to food again.
[01:52:35] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:52:53] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[01:53:05] <ProfSimm> duuude: if assignment is a pattern that comes from limitations of the if statement
[01:53:12] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[01:53:16] <ProfSimm> Another thing not to replicate just because
[01:53:43] *** Quits: bnchs (~bnchs@160.177.14.146) (Quit: Leaving)
[01:54:34] <ProfSimm> duuude: actually no, even with the if statement you don't need to do it
[01:54:47] <ProfSimm> duuude: maybe the only place you do need it is while () loops
[01:54:57] <ProfSimm> but I already demonstrated how that works
[01:55:18] <duuude> ProfSimm: oh I didn't mean "if assignment"
[01:55:26] <ProfSimm> oh
[01:56:23] <ProfSimm> duuude: I have no reserved words, it means you can make anything an identifier, do you like that better :P
[01:56:31] <pulse> = allows cool things such as while ((c = getchar()))
[01:56:46] <flaqoniun> i'm almost certain true==0 is a consequence of posix sh's wanting to think [ is an exec call
[01:56:50] <duuude> and x=y=z=0
[01:56:57] <ProfSimm> pulse: in mine it'll be:    func: getchar & c -> ...
[01:57:15] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[01:57:28] <ProfSimm> pulse: boolean operators with arguments. It seems odd, but works
[01:57:53] <flaqoniun> like i really ant to run /bin/[ 5 times when evaluating a statement
[01:58:11] <duuude> ProfSimm: what are you trying to solve, and is that REALLY in conflict with = being assignment, == being comparison?
[01:58:47] <InPhase> ProfSimm: In your language can I make zero-width space an identifier for the increment operator?
[01:58:51] <duuude> ProfSimm: and is using : as assignment for being jsonish, in any conflict with using = too?
[01:59:00] <ProfSimm> duuude:  = is equality for any person who's done some math. Assignment on the other hand is not in math at all
[01:59:23] <duuude> ProfSimm: most people using your language are programmers of some sort
[01:59:36] <ProfSimm> InPhase: you can't make custom operators.
[01:59:50] <duuude> ProfSimm: even math people etc. likely learn python and friends beforehand
[01:59:52] <ProfSimm> InPhase: but you can override the existing ones
[02:00:10] <ProfSimm> duuude: sure
[02:00:27] <ProfSimm> duuude: well do you know what JSON uses to assign values to object keys
[02:00:40] <beaky> why not make custom operators like how agda has mixfix operator support for almost any unicode symbol
[02:01:06] <duuude> :?
[02:01:22] <ProfSimm> beaky: not the goal. I have operators only so people are not hella confused having to type  sum (5, 6) to add two numbers
[02:01:37] <ProfSimm> beaky: I support necessities and basics and stop there
[02:01:43] <user51> i hope sum is a variadic function
[02:01:59] *** Joins: urnebes (~urnebes@2605:8d80:646:454f:ffb:9b0d:aaba:981d)
[02:02:01] <ProfSimm> user24037: it is, and in fact the parser compiles 1 + 2+ 3+ 4 as sum(1, 2, 3, 4)
[02:02:16] <user51> i'm number 51 :)
[02:02:18] <ProfSimm> user51: *
[02:02:19] <ProfSimm> right
[02:02:33] <ProfSimm> user[0..99999]
[02:02:34] *** Quits: urnebes (~urnebes@2605:8d80:646:454f:ffb:9b0d:aaba:981d) (Read error: Connection reset by peer)
[02:02:35] <ProfSimm> :P
[02:02:39] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:02:43] <duuude> ProfSimm: and if going by the principle of least surprise, the sane approach IMO would be to imitate C-like whenever it is not in open conflict with the goal of the language
[02:02:45] <user51> that's omething that bothered me before
[02:03:05] <duuude> ProfSimm: it is not the usual that has have a reason, it is deviating from the usual that has
[02:03:16] <duuude> has to have*
[02:03:22] <user51> i'll talk about it tomorrow, goin to sleep now, gnight
[02:03:29] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[02:03:35] <ProfSimm> duuude: well == is in open conflict with a language I want to have short operators that make sense and don't make my neckbeard grow when looking at them
[02:04:10] *** Joins: karstensrage (~karstensr@nibbler.warped.com)
[02:04:11] <duuude> ProfSimm: is == more of a nuisance or a warning?
[02:04:27] <ProfSimm> duuude:  I have a JSON-like literal (a: 10, b: 20, c: 30) and so I already have an assignment operator. I don't need ten assignment operators
[02:04:45] <duuude> two may be enough
[02:04:49] <ProfSimm> One
[02:04:50] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[02:04:50] *** Joins: karstensrage (~karstensr@user/karstensrage)
[02:04:54] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[02:05:06] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[02:05:16] <duuude> == being error and = not doing what expected would be one of the first things your user would see
[02:05:37] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 240 seconds)
[02:05:39] <ProfSimm> duuude: don't we have enough languages that copy C
[02:05:41] <duuude> and frustration about such mundane things would harm the "First Impression"
[02:05:42] <ProfSimm> duuude: we do
[02:06:04] <duuude> and First Impression is very important for a language
[02:06:16] <ProfSimm> duuude: sure
[02:06:26] <ProfSimm> I want the first impression to be "not yet another C clone"
[02:07:00] <duuude> Python is only easy because it is easy for people bad with typing and little knowledge of programming and they get that impression and start with it
[02:07:20] <duuude> also it is slightly nicer to look at
[02:08:02] <duuude> ProfSimm: I am just saying, just diverge when you got a very important reason
[02:08:55] <duuude> it is the divergence from the usual that has got to have a reason
[02:09:26] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[02:09:41] <beaky> why have an assignment operator when you already have lambdas (to assign / rename you just define and apply lambdas)
[02:10:14] <duuude> "hey your programming habit sucks" for no more reason than "== doesn't look nice and I already have :, just because I wanted to be JSON superset and I refuse to add another operator" is not pretty good impression
[02:10:32] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[02:10:37] <ProfSimm> duuude: let's say that I started designing this language by thinking how the universe started
[02:10:47] <ProfSimm> duuude: so one could say I thought it through :D
[02:11:15] <duuude> ?
[02:11:17] <ProfSimm> beaky: I don't understand
[02:11:53] *** Joins: inky (~inky@46.36.114.138)
[02:12:03] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:12:41] <ProfSimm> duuude: are people outraged by SQL using = when writing a query. No. They learn it and then use it
[02:13:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:13] <Decker> half the time you have to use is
[02:13:35] <beaky> for example instead of 'x = y + 1; return x*x' you can do (λx,x*x)(y+1)
[02:13:58] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[02:14:38] <ProfSimm> beaky: I can't process the point
[02:14:46] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[02:14:59] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[02:15:08] <vdamewood> parse error: Unexpected Greek
[02:15:15] *** Parts: Guest86 (~Guest86@188.210.213.243) ()
[02:15:16] <CodePoint> beaky: not everyone has a dedicated lambda key for λ.
[02:15:18] <beaky> its more minimal instead of a dedicated assignment operator you just make use of lambdas
[02:15:30] <vdamewood> I do: λ
[02:15:45] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[02:15:51] <CodePoint> beaky: it also doesn't make much sense when working with variables and registers.
[02:16:07] <kee> ,\ should be the compose sequence for lambda.
[02:16:12] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[02:16:17] <vdamewood> Actually, That key is shared with L, Л, and م
[02:16:30] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[02:17:14] *** Joins: urnebes (~urnebes@2605:8d80:640:a73d:3edd:ce13:2243:541a)
[02:17:15] <duuude> ProfSimm: would they be outraged if they could? did people choose SQL because they couldn't? SQL got dominance because of historical reasons, your language is not Relational Database Inc.'s language in 1970s
[02:17:19] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[02:17:32] <CodePoint> vdamewood: you stand alone.
[02:17:54] <duuude> ProfSimm: most people getting to use SQL had little choice other than it
[02:17:55] *** Quits: urnebes (~urnebes@2605:8d80:640:a73d:3edd:ce13:2243:541a) (Read error: Connection reset by peer)
[02:18:15] <vdamewood> ÷گو سهففهرل
[02:18:23] <vdamewood> Dammit
[02:18:26] <vdamewood> I'm sitting.
[02:18:33] <CodePoint> lol
[02:18:44] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:18:54] <vdamewood> Forgot to change my layout back to Latin.
[02:19:40] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[02:19:49] <ProfSimm> duuude: I don't have a single operator that's repeated twice. So think about it. "Oh yeah, gotta repeat twice operators, because other languages do it, although the reasons they do it don't apply to me"
[02:20:00] <ProfSimm> duuude: this is what a monkey would do. I'm not a monkey
[02:20:05] <kee> Having bitwise operators is important.
[02:20:11] <kee> Also, consistency is important.
[02:20:23] <ProfSimm> kee: it's not important.
[02:20:47] <ProfSimm> kee: this is not a language to write kernels in. Well. Yet.
[02:20:53] <CodePoint> ProfSimm: so how are you emphasizing separation between logical and binary operators?
[02:20:56] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[02:20:58] <CodePoint> such as 
[02:21:02] <CodePoint> || and |
[02:21:19] <ProfSimm> CodeGeek: I have no binary operators. I have functions, which can compile to native CPU instructions just the same. But no operators
[02:21:35] <CodePoint> that sounds dumb.
[02:21:42] <Decker> I need to get a better input method; or learn more about the ones available to me...  ᘎϛɿ  O guess at least alt-numpad somewhat works in irc
[02:21:46] <kee> ProfSimm: quoi Sie sanot que.
[02:21:51] <duuude> ProfSimm: "I only diverge from the norm when I have reason to" that is basic reason. that would do zero annoyance to anyone.
[02:22:01] <ProfSimm> CodePoint: how often do you use bitwise operators. And for what.
[02:22:06] <ProfSimm> Let's unpack this misconception.
[02:22:21] <ProfSimm> I can bet my ass you use logical operators 10x more often
[02:22:24] <CodePoint> ProfSimm: normally for bitsets and mathematical operations.  You know, normal stuff.
[02:22:25] *** Joins: urnebes (~urnebes@2605:8d80:648:dd83:887a:5232:ea22:c9eb)
[02:22:40] <duuude> ProfSimm: manhattan distance maybe
[02:22:49] *** Quits: urnebes (~urnebes@2605:8d80:648:dd83:887a:5232:ea22:c9eb) (Read error: Connection reset by peer)
[02:22:52] <davve> whats a binary operator?
[02:22:58] <duuude> ProfSimm: also stuff like curses use bitmasks
[02:23:00] <ProfSimm> CodeGeek: well i have a set type that's backed by a bitset, problem solved.
[02:23:04] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:23:12] <phogg> davve: an operator requiring a value on two sides (left and right)
[02:23:16] <CodePoint> davve: when a man and a woman love eachother very much...
[02:23:16] <ProfSimm> Bitmasks and so on only relevant when you parse binary formats
[02:23:23] <kee> ProfSimm: That's not true.
[02:23:24] <ProfSimm> How often do you implement binary format parsing
[02:23:33] <kee> Bitmasks are useful everywhere.
[02:23:34] <CodePoint> phogg: that is 100% wrong lol
[02:23:39] <ProfSimm> kee: for what
[02:23:51] <kee> CodePoint: That seems like a good definition of a binary operator.
[02:23:59] <duuude> CodePoint: binary != bitwise
[02:24:00] <phogg> CodePoint: you are correct
[02:24:13] <CodePoint> ProfSimm: that is false.  You can use bitmasks to store information much more efficiently than using 100 bools.
[02:24:37] <kee> ProfSimm: A sufficiently intelligent compiler will turn your 100 bools into bithacking.
[02:24:38] <ProfSimm> CodeGeek: I have no bools, so that's not a problem either. As I said I have bit-backed sets
[02:24:53] <Decker> a convenient packedbool notation would be great :) 
[02:24:55] <kee> And it'll use the CPU's vectorisation instructions to do it better than you.
[02:24:59] <duuude> ProfSimm: there is also ciphers
[02:25:11] <duuude> ProfSimm: and similar algorithms
[02:25:17] <ProfSimm> And you implement ciphers eeeeeeevery day
[02:25:19] <ProfSimm> Yes?
[02:25:23] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[02:25:34] <duuude> sometimes
[02:25:39] <ProfSimm> Yea bs :P
[02:25:48] <ProfSimm> I'm not stopping anyone from messing with bits.
[02:25:56] <ProfSimm> I just require them to type few more chars as a function
[02:26:00] <CodePoint> ProfSimm: so I guess your stupid language prevents memory hacking huh?  If I wanted to create a rowhammer implimentation I couldn't do that.  I guess it's a good thing you didn't write C or we'd still be living in 1989.
[02:26:08] <kee> How dare you make a language that focuses on different kinds of problems to C‽
[02:26:14] <kee> This offends me personally.
[02:26:28] <ProfSimm> CodeGeek: that language is absolutely nothing like C
[02:26:53] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[02:27:04] <kee> CodePoint: Tbf, C kinda ignored the past decade-and-a-bit of programming language design.
[02:27:15] *** Joins: echo (uid504326@user/echosmile)
[02:27:27] <ProfSimm> If you mess with bits, you're doing low-level work that should be packed in a type and forgotten
[02:27:33] <CodePoint> kee: most of the past decade of language design is superflous anyway.
[02:27:41] <ProfSimm> And if it's forgotten, doesn't matter if you used operators or functions
[02:27:46] <Decker> I tried to run mc in my gui terminal on wayland and realized I need to add ansi parsing 
[02:27:55] <duuude> ProfSimm: so all these stuff just because having double character operators makes you feel like a monkey?
[02:28:02] <CodePoint> ProfSimm: not necessarily.
[02:28:19] <ProfSimm> duuude: it's because you type the bool operators literally the entire time in the code
[02:28:39] <ProfSimm> duuude: I have to be an idiot to deoptimize the common operators, so I can add operators that are useful when doing something once a year
[02:28:44] <kee> ProfSimm: Why not just have & and | be bitwise, but on bools that's equivalent?
[02:28:49] <CodePoint> ProfSimm: preventing people from being able to do stupid things also prevents people from doing clever things.
[02:28:50] <kee> (Oh, wait, then they can't be lazy.)
[02:29:03] <kee> CodePoint: ProfSimm is not destroying C.
[02:29:05] <ProfSimm> kee: that's not how my bools work
[02:29:10] *** Quits: jack_rabbit (~knusbaum@89.187.180.40) (Ping timeout: 272 seconds)
[02:29:18] <duuude> ProfSimm: if you want to make a language good for DSLs and compatible with JSON, can't you just improve on those aspects and keep other stuff like what people are used to?
[02:29:37] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[02:29:47] <kee> ProfSimm: Do your bools work like Smalltalk?
[02:29:51] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:29:55] <ProfSimm> kee: in part.
[02:30:22] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[02:30:22] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[02:30:22] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[02:30:31] <ProfSimm> kee: when you want to get the value of... a value, you pass it two continuations, then/else, and it calls either one with the value it contains
[02:30:49] <duuude> kee: C was mostly B, B was mostly BCPL
[02:30:58] <kee> duuude: Which ignored all the other languages going on at the time.
[02:31:05] <kee> Imo, B was better-designed in many ways than C.
[02:31:08] <duuude> kee: which ones?
[02:31:09] <ProfSimm> kee: there's no boolean type.
[02:31:12] <Decker> if bools work in the fastest way that the underlaying hardware does I'm happy.  I don't remember instructions for C bools that true+true=true but maybe it's just testing a >= or something clever in assembly instead; it's just a logic table right?
[02:31:48] <kee> duuude: Algol was one.
[02:31:52] <Decker> (that is, I can't see C's bool type being all that efficient given its range checking constraints)
[02:31:53] <ProfSimm> Decker: bool types are high-level language thing indeed. In ASM you have predicates and jumps
[02:31:59] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[02:32:28] <ProfSimm> Decker: so I thought about it, and i also have predicates and jumps, and no need for bool types
[02:32:38] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[02:33:13] <CodePoint> ProfSimm: the typelessness of the B language is WHY C was created...
[02:33:25] <kee> CodePoint: And C is barely typeful.
[02:33:39] <kee> It's typeful enough to lull you into a false sense of security.
[02:33:39] <ProfSimm> A language made in 2022 shouldn't optimize for bit-hacking. Every time you work with bits, abstraction failed you
[02:33:52] <CodePoint> you can't tout is as better than C when it literally had limitations that the creators rectified by designing C.
[02:34:08] <kee> Not limitations.
[02:34:14] <kee> The correct solution to B's typelessness was type checking.
[02:34:14] <ProfSimm> I don't tout it as "better" than C
[02:34:20] <duuude> kee: BCPL was based on CPL, kinda being like ALGOL, C did borrow a lot of syntax similarity from ALGOL
[02:34:21] <ProfSimm> Oh you mean B
[02:34:52] <kee> Not weird operator overloading that depends on a type system that C only sometimes had.
[02:34:55] <duuude> kee: for example the way for works only makes sense if one considers ALGOL
[02:35:00] <duuude> "for"*
[02:35:14] <kee> duuude: Or BASIC.
[02:36:17] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[02:36:39] <ProfSimm> duuude: have you seen parser generator rules. Where you type stuff like huge tables of :   expr = number | text | float | name | sum | product | pow | cond | ...
[02:36:56] *** Quits: Akuli (~Akuli@87-94-108-152.bb.dnainternet.fi) (Quit: Akuli)
[02:36:58] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[02:37:08] <duuude> ProfSimm: kinda, have seen BNF stuff
[02:37:30] <ProfSimm> duuude: well because bool operators are so core to the entire language you type them all the time, a bit like those tables.
[02:37:40] *** Joins: urnebes (~urnebes@2605:8d80:643:4467:7017:d2e2:62e3:cc95)
[02:38:00] <ProfSimm> duuude: it's like semicolons in another language. Imagine you had to type ;;
[02:38:11] *** Quits: urnebes (~urnebes@2605:8d80:643:4467:7017:d2e2:62e3:cc95) (Read error: Connection reset by peer)
[02:38:17] <ProfSimm> For no reason
[02:38:27] <duuude> kee: well, one can't be similar with everything at once
[02:38:41] <kee> duuude: This is true.
[02:39:23] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.4.1)
[02:39:39] *** Joins: jtgd (~jtgd@user/jtgd)
[02:40:55] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[02:42:01] *** Joins: pulse (~pulse@user/pulse)
[02:42:52] *** Joins: urnebes (~urnebes@2605:8d80:64b:e668:fa71:b9a3:f64c:d0d)
[02:42:57] <MangyDog> https://twitter.com/MD_Builds/status/1508203949089828873
[02:42:57] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f)
[02:43:22] *** Quits: urnebes (~urnebes@2605:8d80:64b:e668:fa71:b9a3:f64c:d0d) (Read error: Connection reset by peer)
[02:43:36] <beaky> nice gpu
[02:44:11] <beaky> 4000 mhz clock
[02:44:13] *** Quits: teut (~teut@103.144.92.214) (Quit: Client closed)
[02:45:47] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:46:49] <MangyDog> :p
[02:46:54] <MangyDog> its just a placeholder
[02:47:02] <MangyDog> all the text will be runtime
[02:49:43] <ProfSimm> MangyDog: you should type M1 Ultra on the CPU and watch reactions :P
[02:49:43] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.106.threembb.co.uk) (Read error: Connection reset by peer)
[02:49:51] *** Joins: kakysha (~kakysha@user/kakysha)
[02:49:54] <MangyDog> lol
[02:51:08] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.106.threembb.co.uk)
[02:51:46] *** Quits: welovfree (~welovfree@105.156.70.72) ()
[02:52:28] <nomagno> is the sh 'eval' command actually useful for anything?
[02:52:36] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[02:52:40] <nomagno> When you can just wrap the thingy to eval in $(thingy)
[02:52:47] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f) (Remote host closed the connection)
[02:52:52] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[02:53:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f)
[02:53:04] *** Joins: urnebes (~urnebes@2605:8d80:64a:d4be:95aa:5b2a:9523:e4b)
[02:53:33] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[02:53:33] *** Quits: urnebes (~urnebes@2605:8d80:64a:d4be:95aa:5b2a:9523:e4b) (Read error: Connection reset by peer)
[02:54:05] *** Quits: skreech (skreech@user/skreech) (Ping timeout: 252 seconds)
[02:54:11] <biberao> beaky: 
[02:54:39] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[02:55:04] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:56:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:56:28] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:56:54] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f) (Remote host closed the connection)
[02:57:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f)
[02:57:20] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:57:59] <PlanckWalk> nomagno: Command substitution discards the return value of the command
[02:59:35] <PlanckWalk> Or rather, it does in cases where the substitution is used in some other command, which is very common
[02:59:53] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[03:00:55] <pyzozord> nomagno: isn't eval just a different way to do $() and ``
[03:01:28] <PlanckWalk> eval doesn't capture the standard output
[03:01:53] <PlanckWalk> (Which is sometimes what you want)
[03:01:56] <Decker> :/ why can't ssh be simple like telnet?
[03:03:25] <pyzozord> i thought it was essentially like telnet over tls
[03:03:56] <pyzozord> except it has like extra features like tunneling or whatever
[03:04:20] <Decker> channels
[03:04:23] <Decker> ya
[03:04:38] <pyzozord> what else is complicated about it?
[03:04:44] <pyzozord> honestly I don't know anything about ssh
[03:04:59] <epony> you've been stuck at the ssh keys
[03:04:59] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[03:05:31] <pyzozord> oh right it has it's own keys and stuff
[03:05:46] <epony> it's easier than TLS/SSL
[03:05:49] *** Joins: skreech (skreech@user/skreech)
[03:06:05] <pyzozord> oh so ssh actaully isn't on top of tls?
[03:06:09] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[03:06:17] <epony> way easier, since you don't use certification agencies and root certificate chains
[03:06:23] <epony> NO
[03:06:24] *** Joins: jack_rabbit (knusbaum@gateway/vpn/protonvpn/knusbaum)
[03:06:52] <epony> it's using private and public keys, but does not use TLS/SSL
[03:07:04] <epony> it's point to point, direct authentication
[03:07:07] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Ping timeout: 256 seconds)
[03:07:29] <pyzozord> so that's the complex part it's implementing it's own security measures
[03:07:31] <ProfSimm> Interesting, in JS, you can't do   let x = {foo: x};   but you can do:    let x = function () { x(); };
[03:07:40] <Decker> (shrug) maybe I didn't actually read the RFC; maybe it's because everything has these structures associated with it...  rfc 4254
[03:07:42] <pyzozord> instead of using tls or pgp or something
[03:07:42] <epony> pyzozord, it's not complex, it's trivial
[03:07:56] <Decker> https://github.com/d3x0r/SACK/blob/master/src/games/dekware/filters/telnet/telnet.c  this was just sort of trivial to just inject inline
[03:07:57] <bayaz> Title: SACK/telnet.c at master ? d3x0r/SACK 
[03:07:58] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[03:07:58] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[03:07:58] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[03:08:06] <epony> it's a couple of commands, beats telnet
[03:08:13] <Decker> and openssh is a huge project
[03:08:18] <epony> nonsense
[03:08:42] <epony> it's authored by a couple of people and maintained by them still
[03:08:49] <pyzozord> telnet is very simple that is true yey
[03:09:02] <Decker> almost like ansi
[03:09:04] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[03:09:27] <Decker> was digging through filters to see if anything else might be useful for telnet.  My first http processor was a stream filter actually :)
[03:10:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:10:14] <pyzozord> https://github.com/openssh/openssh-portable
[03:10:15] <bayaz> Title: GitHub - openssh/openssh-portable: Portable OpenSSH 
[03:10:24] <epony> https://en.wikipedia.org/wiki/OpenSSH#Development ; https://www.openssh.com/goals.html
[03:10:25] <bayaz> Title: OpenSSH - Wikipedia 
[03:10:25] <bayaz> Title: OpenSSH: Goals 
[03:10:29] <pyzozord> many files but i clicked a few and they seem 300 lines or so
[03:10:37] <epony> "Our goal is simple: Since telnet and rlogin are insecure, all operating systems should ship with support for the SSH protocol included."
[03:10:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:11:26] <pyzozord> I'm guessing openssh is about 10kloc
[03:12:24] <Decker> just channels https://github.com/openssh/openssh-portable/blob/master/channels.c  5k
[03:12:25] <bayaz> Title: openssh-portable/channels.c at master ? openssh/openssh-portable 
[03:12:54] <Decker> client loop is another 2.5
[03:13:08] <piou> that's not unreasonnable for such a project involving cryptography, many utilities to catter to different needs, all cross platform, with widespread use and therefore important performance requirements
[03:13:30] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 272 seconds)
[03:13:46] <epony> https://www.openssh.com/history.html  "The following team members participated: Theo de Raadt (CANADA) Niels Provos (GERMANY but living in USA) Markus Friedl (GERMANY) Bob Beck (CANADA) Aaron Campbell (CANADA) Dug Song (USA)" and others
[03:13:47] <bayaz> Title: OpenSSH: Project History 
[03:14:14] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[03:15:01] <epony> http://www.openbsd.org/innovations.html "Programs and subsystems:  OpenSSH including ssh(1), scp(1), sftp(1), ssh-add(1), ssh-agent(1), ssh-keygen(1), sshd(8), sftp-server(8): Started by Aaron Campbell, Bob Beck, Dug Song, Markus Friedl, Niels Provos, and Theo de Raadt as a fork of SSH 1.2.12 by Tatu Ylonen. Imported September 26, 1999 and first released with OpenBSD 2.6. Now maintained by Markus Friedl, Damien Miller, Darren Tucker, and Theo de Raadt."
[03:15:01] <bayaz> Title: OpenBSD: Innovations 
[03:15:30] <pyzozord> actually looks like 120kloc, quite massive
[03:15:44] <pyzozord> I cloned it and ran for f in *.[ch]; do cat $f; done | wc
[03:15:45] <epony> it implements a lot of RFCs
[03:16:28] <piou> 120k isn't light, but it's not that much really, and certainly not unjustified
[03:16:29] <epony> "Standard(s): RFC 4250, RFC 4251, RFC 4252, RFC 4253, RFC 4254, RFC 4255, RFC 4256, RFC 4335, RFC 4344, RFC 4345, RFC 4419, RFC 4462, RFC 5656, RFC 6594, RFC 6668, RFC 7479"
[03:16:36] <Decker> and to decide to re-implement- I suspect there's more to the algorithm side than just handling some strctures... umac.c https://github.com/openssh/openssh-portable/blob/master/umac.c  is a bunch of utility things for something; surely they're useful and would have to be implemented in some way
[03:16:37] <bayaz> Title: openssh-portable/umac.c at master ? openssh/openssh-portable 
[03:17:04] <piou> given how used ssh is they have to minimize dependencies, no way arround it
[03:17:14] <pyzozord> that is 24 500-page books
[03:17:15] <epony> https://man.openbsd.org/sshd.8#AUTHORS  "OpenSSH is a derivative of the original and free ssh 1.2.12 release by Tatu Ylonen. Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo de Raadt and Dug Song removed many bugs, re-added newer features and created OpenSSH. Markus Friedl contributed the support for SSH protocol versions 1.5 and 2.0. Niels Provos and Markus Friedl contributed support for privilege separation."
[03:17:15] <bayaz> Title: sshd(8) - OpenBSD manual pages 
[03:17:39] <pyzozord> don't care what's in it, it doesn't take 24 fat books to make secure shell
[03:18:37] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[03:18:39] <piou> pyzozord: if you want it to be cross platform and be used over 20 years while handling backward compat, it does
[03:18:40] <Decker> it's no IRC protocol :)
[03:19:12] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:19:22] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[03:19:26] <piou> things looked a lot different 20 years ago, be it on the platform or cryptography side
[03:19:31] <epony> you can always create some own implementation, at least in some small part of it, for a couple of years work
[03:19:35] <pyzozord> i bet it's just like curl, I never used and never use more than 10% of it
[03:19:49] <epony> pyzozord, only it's not so you lose the bet
[03:20:15] <pyzozord> curl has 150kloc
[03:20:24] <pyzozord> or more
[03:20:36] <oldlaptop> pyzozord: unfortunately there's a /lot/ of historical baggage to carry around. In one sense ssh has not aged well: IIRC all of the cryptographic algorithms (kex, symmetric methods, whatever) specified in the original SSH2 RFCs have had to be deprecated now. (To say nothing of ssh1, which turns out to be fundamentally insecure.)
[03:20:42] <epony> might as well hand out your server keys with it, since you don't run a curl server on your system for logins
[03:21:23] <pyzozord> yes that legacy argument is probably a big contributor to the situation
[03:22:11] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[03:22:16] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[03:22:18] <piou> you'll (hopefully) never use many of the cryptographic algorithms supported by ssh, but some people still have to connect to forgotten machines using them
[03:23:02] <oldlaptop> Some old stuff is sufficiently disused that they really can rip it right out, but far too much has to stay around for interoperability - I don't remember offhand whether even ssh1 support has really been removed yet (as opposed to being unhooked from a default build)
[03:23:38] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 272 seconds)
[03:24:02] <epony> try this $ for i in `ssh -Q help`; do echo $i:; ssh -Q $i; echo; done
[03:24:41] <oldlaptop> Even turning insecure algorithms off by default causes notable disruption.
[03:24:58] <epony> https://man.openbsd.org/ssh.1#Q "-Q query_option  Queries for the algorithms supported by one of the following features.."
[03:24:59] <bayaz> Title: ssh(1) - OpenBSD manual pages 
[03:25:00] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[03:25:18] <epony> that will produce a list of these algorithms
[03:26:09] *** Quits: MangyDog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[03:26:14] *** Joins: urnebes (~urnebes@2605:8d80:66c:f286:fde7:e34d:8579:5db4)
[03:26:57] *** Quits: urnebes (~urnebes@2605:8d80:66c:f286:fde7:e34d:8579:5db4) (Read error: Connection reset by peer)
[03:27:20] <epony> people think it's "all" HTTP API services now, but there is a lot prior work to get to that ;-)
[03:29:56] *** Quits: rcesptro (~rcesptro@180.247.221.78) (Ping timeout: 245 seconds)
[03:30:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[03:33:09] *** Quits: xbkkd (~F0@user/xbkkd) (Quit:  )
[03:33:19] *** Joins: c2a1 (~c2a1@2607:fb90:177d:94e4:1a03:2738:6af7:bba4)
[03:33:48] *** Joins: pizdets (~pizdets@183.182.115.192)
[03:34:23] *** Quits: pizdets_ (~pizdets@183.182.110.13) (Ping timeout: 265 seconds)
[03:34:42] *** Joins: zaher_ (~zaher@37.48.148.174)
[03:36:13] *** Joins: urnebes (~urnebes@2605:8d80:66c:b991:8d3d:8bfa:dafe:5a38)
[03:36:51] *** Quits: urnebes (~urnebes@2605:8d80:66c:b991:8d3d:8bfa:dafe:5a38) (Read error: Connection reset by peer)
[03:37:10] <epony> you can browse the repo online at https://cvsweb.openbsd.org/src/usr.bin/ssh/
[03:37:17] *** Quits: zaher (~zaher@37.48.157.79) (Ping timeout: 240 seconds)
[03:37:57] <epony> works with http:// too
[03:39:11] <epony> so, check http://cvsweb.openbsd.org/~checkout~/src/usr.bin/ssh/OVERVIEW for brief details
[03:39:12] <bayaz> Type: text/plain 
[03:43:40] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:44:41] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[03:44:55] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[03:44:55] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[03:44:55] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[03:45:58] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[03:46:27] *** Joins: urnebes (~urnebes@2605:8d80:646:3c2f:64a1:2af7:e38d:377e)
[03:47:15] *** Quits: urnebes (~urnebes@2605:8d80:646:3c2f:64a1:2af7:e38d:377e) (Read error: Connection reset by peer)
[03:48:20] *** Joins: duuude (~user@user/duuude)
[03:49:35] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[03:49:35] <epony> shows it uses  https://en.wikipedia.org/wiki/LibreSSL  internally for the cryptographic functions  https://en.wikipedia.org/wiki/OpenSSH#History  "OpenSSH first appeared in OpenBSD 2.6. The first portable release was made in October 1999. Developments since then have included the addition of ciphers (e.g., ChaCha20-Poly1305 in 6.5 of January 2014), cutting the dependency on OpenSSL (6.7, October 2014)"
[03:49:36] <bayaz> Title: LibreSSL - Wikipedia 
[03:49:36] <bayaz> Title: OpenSSH - Wikipedia 
[03:49:40] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Client Quit)
[03:49:55] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[03:49:55] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[03:49:55] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[03:50:20] <epony> 22 years of release notes covered here  https://www.openssh.com/releasenotes.html
[03:50:21] <bayaz> Title: OpenSSH: Release Notes 
[03:51:18] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:51:27] *** Joins: urnebes (~urnebes@2605:8d80:64b:5ea8:e305:6d70:47f4:1ec7)
[03:51:50] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.106.threembb.co.uk) (Remote host closed the connection)
[03:52:11] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.104.threembb.co.uk)
[03:52:12] *** Quits: urnebes (~urnebes@2605:8d80:64b:5ea8:e305:6d70:47f4:1ec7) (Read error: Connection reset by peer)
[03:53:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:55:24] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[03:55:43] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:55:51] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[03:56:05] <epony> for tech details, implementers etc, this doc contains links to the (de facto) standards and drafts specs  https://www.openssh.com/specs.html
[03:56:05] <bayaz> Title: OpenSSH: Specifications 
[03:57:36] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[03:57:51] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[03:57:51] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[03:57:51] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[03:57:58] *** Quits: c2a1 (~c2a1@2607:fb90:177d:94e4:1a03:2738:6af7:bba4) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[04:00:26] *** Joins: justyb11 (~justyb@64.253.212.72)
[04:01:43] *** Joins: urnebes (~urnebes@2605:8d80:669:4a14:6cf6:395d:82c1:f90c)
[04:02:33] *** Quits: urnebes (~urnebes@2605:8d80:669:4a14:6cf6:395d:82c1:f90c) (Read error: Connection reset by peer)
[04:06:36] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:07:20] <edgar-rft> Why does openssh encrypt its data? With "open" ssh I expect my data to be visible to everyone!
[04:08:52] <Decker> hah
[04:09:11] <Decker> blah; I don't know how to write this game.
[04:09:19] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Ping timeout: 260 seconds)
[04:09:32] <Decker> I did once... but now it's a browser; and I get a proper server even
[04:09:35] *** Quits: soapsudsxx (~soapsudsx@141.193.188.145) (Remote host closed the connection)
[04:09:48] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:11:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[04:13:17] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 240 seconds)
[04:13:22] *** Joins: Blondie101010_ (~Blondie10@user/blondie101010)
[04:13:59] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 256 seconds)
[04:14:07] *** Blondie101010_ is now known as Blondie101010
[04:14:43] <duuude> Decker: what game?
[04:15:46] <Decker> https://boardgamegeek.com/image/325141/stock-market-game 
[04:15:47] <bayaz> Title: Stock Market Game 
[04:16:18] <Decker> the track of the board has forks... and depending on certain conditions you can either take the alternate path or not
[04:16:55] *** Joins: urnebes (~urnebes@2605:8d80:662:bc45:e788:47bb:f9f9:7b91)
[04:16:55] <Decker> each square on the board has different arrow direction that you leave from that square too.  When you roll anything from 2-12 can get you to 1-3 different places... so I been thinkin...
[04:17:07] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[04:17:10] <Decker> maybe I just show 3 choices after your roll and abstract that there's a board at all...
[04:17:20] *** Joins: coaxing (~coaxing@user/coaxing)
[04:17:20] *** Quits: urnebes (~urnebes@2605:8d80:662:bc45:e788:47bb:f9f9:7b91) (Read error: Connection reset by peer)
[04:17:56] <Decker> but sometimes, you want to know how far through the investor track you might end up... like if you're at the start, it's more likelly to choose that path, because you might get a low roll... but the 7 roll out of the investor track usually ends you in the corner where there are penalty squares
[04:18:01] <Decker> it's a fun game :) super simple
[04:18:16] *** Joins: Tahr-user (~puppy@71.50.50.51)
[04:18:16] <Decker> so... having played the game though; I know there's a trck.
[04:18:21] <Decker> track
[04:18:55] <Decker> so I dunno if I can fully abstract it - I could draw the board on a canvas anyway... and maybe use that as source data to show the choices anyway?
[04:19:07] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[04:19:08] <Decker> (render it nice and big like 4kx4k?)
[04:19:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dbe3:7d60:6f59:546f) (Ping timeout: 240 seconds)
[04:21:19] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.104.threembb.co.uk) (Read error: Connection reset by peer)
[04:22:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:24:16] <kee> Decker: If there are obvious pros and cons to each choice, you could implement more than one UI.
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:47] <Decker> kee one UI that's both :)
[04:26:31] *** Joins: EekTheCat (~EekTheCat@47.155.62.184)
[04:26:48] <Decker> I could individually style both; the board layout has phsyical constraints... so there's squares (2x2) and rectangles(2x1) so using the raw image has issues presenting 3 unified choices...
[04:27:02] <Decker> which then maybe there's another part that's unused in some cases
[04:27:03] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:04] *** Joins: urnebes (~urnebes@2605:8d80:649:afa1:f548:7773:654a:af55)
[04:29:00] *** Quits: urnebes (~urnebes@2605:8d80:649:afa1:f548:7773:654a:af55) (Read error: Connection reset by peer)
[04:29:35] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:29:49] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:30:46] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[04:31:09] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[04:33:51] <ProfSimm> Decker: can you please link me to description of what extensions there are in your JSOX
[04:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[04:34:47] *** Joins: Farty (Farty@gateway/vpn/protonvpn/farty)
[04:35:16] <Decker> ProfSimm the github readme has *JSOX* notations
[04:35:21] <Decker> d3x0r/jsox
[04:35:29] *** Quits: Tazy (~Tazmainia@2001:1c02:170a:4000::100a) (Quit: Leaving)
[04:35:36] <Decker> which is on the NPM package link too
[04:35:47] <ProfSimm> cool
[04:36:34] *** Joins: seifeslimene (~seifeslim@102.156.202.190)
[04:36:59] <ProfSimm> Oh native dates. Nice
[04:37:34] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:37:43] *** Joins: tangy (~tangy@user/tangy)
[04:38:09] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwvg5mruaaif3j.ipv6.telus.net) (Remote host closed the connection)
[04:38:38] <Decker> ProfSimm right? Why is that so hard to do? :) I suppose string parser is generally good enough?
[04:39:07] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxstd0deypn0zq.ipv6.telus.net)
[04:39:19] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[04:39:43] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:40:22] <ProfSimm> Decker: philosophically speaking the issue is that while time/date is a very common thing we use, the format is highly... hairy, detailed. And creates a precedence for adding more ad-hoc formats like that
[04:41:17] <Decker> I should work in some phrasing on that - that JSOX is not responsible for implementations losing accuaracy of timestamps; JS Date is only good to .999  while 8601 can have N digits after the decimal
[04:41:42] <Decker> don't blame the message blame the recipient
[04:42:14] <Haxxa> C# say I have a function called UpdateData() which takes a parameter and updates it, but I have say 20 different update types i.e. name, address etc. What is the best way to overload the function to accept different parameters. i.e. name and address would both be of type string so should I pass an enum to differentiate them or is there a better
[04:42:15] <Haxxa> way?
[04:42:26] *** Joins: urnebes (~urnebes@2605:8d80:644:f92a:2558:668a:c50c:cd65)
[04:42:34] <ProfSimm> Decker: if I was implementing JSOX I'd probably serialize this something like datetime (2018,09,14, 2,55,27, -7,00)
[04:42:44] <ProfSimm> Decker: so that I can borrow some general purpose parsing code
[04:42:52] *** Quits: urnebes (~urnebes@2605:8d80:644:f92a:2558:668a:c50c:cd65) (Read error: Connection reset by peer)
[04:42:55] <ProfSimm> Decker: wait it'd be [] I guess not ()
[04:43:16] <Decker> ProfSimm I can C&P into SQL Date('...') or excel spreadsheets...
[04:43:25] <ProfSimm> Decker: trye
[04:43:26] <Decker> there's actually some limited interop with iso8601
[04:43:27] <ProfSimm> true*
[04:43:58] <ProfSimm> Decker: what if it was datetime "2018-09-14T02:55:27-07:00"
[04:44:04] <ProfSimm> I.e. constructor + string
[04:44:31] <Decker> ya could use a tagged string
[04:45:12] <Decker> just... I was concentrating on removing quotes
[04:45:12] <Decker> and things that didn't need quotes
[04:45:12] <Decker> (or were outside of quotes)
[04:45:12] *** Quits: EekTheCat (~EekTheCat@47.155.62.184) (Quit: Leaving)
[04:45:12] <ProfSimm> Yours wins on size and clarity
[04:45:17] <Decker> since there's no whitepsace it became easy extension of the number gather
[04:45:28] <Decker> and the '-' in a number before an 'e' switches state early
[04:45:31] <ProfSimm> datetime is genuinely the one thing JSON definitely needs
[04:46:12] <Decker> (hence my inclination to say the difference is 'no operators' just 'format control')  it just controls the state of the state parsing read-head
[04:46:36] <Decker> encoding \b literal begins to resemble code :)
[04:46:51] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 256 seconds)
[04:47:53] *** Joins: pulse (~pulse@user/pulse)
[04:49:04] <Decker> so in code... because '-' is an operator... there has to be a huge lookahead buffer 
[04:49:48] <Decker> (which strangely in SQLites yacc generated parser is actually more of a lookback... like if the previous thing was a thing, that's what's important; it's called readahead though I guess because the read is always ahead?)
[04:51:24] *** zaher_ is now known as zaher
[04:51:36] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[04:52:19] *** Joins: urnebes (~urnebes@2605:8d80:643:b0c7:deb9:953b:1ee6:e8da)
[04:52:28] <PlanckWalk> Haxxa: Not much better way, no.
[04:52:49] <Haxxa> I was thinking of using generics with an enum paramater
[04:52:49] *** Quits: urnebes (~urnebes@2605:8d80:643:b0c7:deb9:953b:1ee6:e8da) (Read error: Connection reset by peer)
[04:53:41] <PlanckWalk> In a "sufficiently nice" language you'd be able to get compiler support for enforcing that the descriptor you use is a property name and that the type is compatible.
[04:54:37] <PlanckWalk> This is part of why you sometimes see proxy objects with property accessors.
[04:54:41] <Haxxa> Is C# nice?
[04:54:46] <PlanckWalk> Just to get that kind of support
[04:55:28] <PlanckWalk> Instead of "UpdateData(FieldDescriptor, NewValue)" you have a proxy object and just do  proxy.field = newValue;
[04:55:57] <PlanckWalk> Then the compiler can enforce that your "field" is valid and that the type is correct.
[04:56:41] <PlanckWalk> The proxy object has a setter that does whatever UpdateData would have done.
[04:57:03] <Decker> :/  My config parser liked this... Prospector pays 400 on 2 or 12   and not only was it a good string, it was the numbers to use in the game
[04:58:01] <ProfSimm> Decker: in my parser I have savepoints, and I wonder if other parsers do that. If you suspect you may need to backtrack, you call tokens.save() and it returns an id, and later you can tokens.restore(id) and it's like everything since the .save() call didn't happen
[04:58:39] <Haxxa> PlanckWalk
[04:58:41] <Haxxa> Thanks
[04:59:06] <Decker> ya mines are more blackbox hands off from the user standpoint... 
[04:59:32] <Decker> (well shoot I keep thinking about 'parser' as more just 'tokenizer' 'phraseifier') AST-ish thing
[05:00:35] <Decker> (sorry for the 2 long links) https://github.com/d3x0r/SACK/blob/master/src/games/stock_market/Board.Data  read with https://github.com/d3x0r/SACK/blob/master/src/games/stock_market/board.c#L1412-L1441  which registers a bunch of callback above
[05:00:36] <bayaz> Title: SACK/Board.Data at master ? d3x0r/SACK 
[05:00:36] <bayaz> Title: SACK/board.c at master ? d3x0r/SACK 
[05:00:42] <Decker> ProfSimm ^
[05:00:58] *** Quits: Tahr-user (~puppy@71.50.50.51) (Quit: Quitting)
[05:03:32] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[05:05:02] *** Joins: Tahr-user (~puppy@71.50.50.51)
[05:05:05] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[05:07:16] *** Joins: urnebes (~urnebes@2605:8d80:663:8661:7d5f:7b05:a8f:4451)
[05:07:32] <Haxxa> PlanckWalk This might make more sense what I'm trying to do: https://bpa.st/BOXQ
[05:07:33] <bayaz> Title: View paste BOXQ 
[05:07:39] <Haxxa> Although it doesn't work
[05:08:00] *** Quits: Tahr-user (~puppy@71.50.50.51) (Client Quit)
[05:08:00] *** Quits: urnebes (~urnebes@2605:8d80:663:8661:7d5f:7b05:a8f:4451) (Read error: Connection reset by peer)
[05:10:05] *** Quits: seifeslimene (~seifeslim@102.156.202.190) (Ping timeout: 256 seconds)
[05:11:55] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[05:13:36] <epony> edgar-rft, you have to work more on your Lisp SSH2 server to find out more details  Mar28 0037<edgar-rft> Why does openssh encrypt its data? With "open" ssh I expect my data to be visible to everyone!
[05:14:01] <epony> (it encrypts your data, not its)
[05:17:20] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:19:31] <edgar-rft> epony: a shell that cannot be hijacked by anyone isn't open
[05:19:32] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[05:21:10] <epony> it comes from the OpenBSD notion, where it means you have access to view openly the software as it is developed and validate for yourself it works as specified
[05:21:35] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:22:09] <amigojapan> morning
[05:22:11] <epony> and the fun fact is that the repository is accessible over OpenSSH for commits
[05:22:25] <kee> edgar-rft: The shell totally can be hijacked.
[05:22:27] <epony> (to change it)
[05:22:39] <kee> All you need to do is break the cryptography. It's not that hard to do.
[05:22:46] <kee> Simply have more processing power than the sun.
[05:23:11] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[05:23:44] <edgar-rft> ah, that's easy, you only need *two* sun computers
[05:24:08] <kee> Or just a small time machine. That would suffice as well.
[05:24:44] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[05:24:57] *** Joins: flaqoniun (~F@32.211.211.39)
[05:26:37] <flaqoniun> time machine and self replicating computer to repair/replace faulty hardware over thousands of years, and ANYONE can crack your session!
[05:26:48] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:26:51] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb) (Ping timeout: 256 seconds)
[05:27:07] <kee> flaqoniun: You only need to send the intermediate state backwards in time.
[05:27:28] <kee> And have it so you will send the same state back as you received iff you've cracked it.
[05:27:37] <kee> There are two options, depending on time travel model:
[05:28:01] <kee> • if it's self-consistent, you'll receive the only self-consistent data you could possibly have received.
[05:28:26] <kee> • if it's multiverse-new-timeline, an infinite number of timelines will have the correct solution: probability 1 of getting it.
[05:30:20] <epony> edgar-rft, check it out, there are some Lisps available as packages  https://openports.pl/search?descr=lisp
[05:30:22] <bayaz> Title: 
[05:33:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6f34:49ad:a0b8:f509)
[05:33:43] <flaqoniun> whats the best time-travel resistant encryption scheme?
[05:33:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:34:20] <kee> flaqoniun: One that uses lots of RAM.
[05:34:47] <kee> Also, one where there are lots of plausible decryption candidates.
[05:34:53] <kee> So large key sizes are useful there.
[05:35:36] <kee> Also, compress your data as much as possible before encrypting it; the fewer regularities in your encrypted data, the harder it is to verify whether the encryption was correct.
[05:36:37] <kee> A one-time pad is fully time-travel resistant.
[05:36:58] <flaqoniun> i don't like compression, but if it keeps the travellers out of my session i can accept that concession
[05:37:17] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 240 seconds)
[05:37:18] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[05:37:41] <kee> Oh, I forgot it might be multiple timelines. A one-time pad is fully time-travel resistant, if you keep it out of the hands of the attackers in all possible timelines.
[05:38:06] <flaqoniun> right, they could send robot fly's back in time to check out what pad i used
[05:38:32] *** Quits: jack_rabbit (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 272 seconds)
[05:38:58] <flaqoniun> but i don't think they have that kind of a budget so w/e
[05:39:25] <kee> Or, if you can't go to a timeline that you left, check for the one-time pad now and then go back in time to when you didn't check, so the person you're attacking isn't tipped off.
[05:40:17] <kee> So a properly time-travel-resistant encryption scheme has to do some kind of key exchange handshaking to generate a very large key.
[05:41:11] <kee> And it has to drag in a source of entropy, so chaos-theory fluctuations caused by the time travel will stop alternate-present keys from being valid.
[05:41:22] <epony> flaqoniun, you can travel back in time right now, just power off your raspberries for a while and you'll be back in time, from the future to the present again
[05:41:41] <epony> actually you can power other people's berries too
[05:41:44] <epony> (off)
[05:41:49] <flaqoniun> i don't buy broadcom hardware anymore
[05:42:07] <epony> shame.. their stock must be in trouble
[05:42:27] *** Joins: Blackajack (~Blackajac@cpe-65-29-185-101.wi.res.rr.com)
[05:43:09] <kee> Just take a photo of the raspberry's motherboard.
[05:43:21] <kee> They're camera-shy, so it'll restart.
[05:43:27] <kee> Something something quantum.
[05:43:47] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:45:02] *** Joins: pmercado (~pmercado@186.107.57.83)
[05:49:01] *** eldritch_ is now known as eldritch
[05:50:46] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[05:51:00] *** Joins: flaqoniun (~F@32.211.211.39)
[05:52:54] *** Quits: Blackajack (~Blackajac@cpe-65-29-185-101.wi.res.rr.com) (Changing host)
[05:52:54] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[05:53:06] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[05:56:02] <smlckz> is it possible for a computer to deduce how many steps are needed to be performed for a given algorithm/program for any input it takes?
[05:56:46] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:59:35] <epony> forgot to say the next question would be about "any" computer
[06:01:20] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[06:01:34] <smlckz> what i am thinking if this has the same fate as the halting problem or it has some hope..
[06:02:37] *** Joins: Soni (~quassel@autistic.space)
[06:02:50] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:03:41] <madprops> i don't get it
[06:03:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[06:03:57] <madprops> how do I know if the webhook sent to my server is from a normal git push or a release
[06:04:02] <madprops> im reading the response json
[06:04:10] <madprops> i don't see any identifier
[06:04:11] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:04:15] <madprops> to see which type it is
[06:04:17] *** Joins: hololeap (~hololeap@user/hololeap)
[06:04:45] <madprops> except maybe: "ref": "refs/tags/psltst5",
[06:05:39] <madprops> ah that'll do
[06:07:53] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[06:10:13] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Ping timeout: 240 seconds)
[06:10:57] <kee> smlckz: If the algorithm is known to halt? Sure.
[06:11:18] <smlckz> kee: how?
[06:11:56] <kee> You can do that by multiplying, for an algorithm that looks like for x=0 to X, for y=0 to Y for known X and Y.
[06:12:04] <kee> And for several other forms like that.
[06:12:20] <kee> So you just run enough of the program that what's left is in a form where you can easily work out the answer, then you return the answer.
[06:12:46] <kee> (The naïve approach would just be to run the whole program, and increment a counter until you've finished the program, but you don't need to go that far.)
[06:13:23] <kee> It's basically just a mathematical proof thing.
[06:13:57] <kee> A program that deduces how many steps are needed for a given algorithm would work best if it had a database of known results it could look at.
[06:14:11] <smlckz> how much is enough? depending on the algorithm? 
[06:14:23] <kee> Yeah, depending on the algorithm.
[06:14:47] <kee> Something chaotic like the Collatz conjecture, you have to go until a power of 2 pretty much.
[06:15:39] <smlckz> for now, i'm interested in the sorting algorithms
[06:15:41] <kee> If you implement special handling for “Collatz-like” algorithms, you'd be able to optimise all runs of powers of 2.
[06:15:49] <kee> Oh, sorting algorithms are annoying too.
[06:15:54] <kee> They depend a lot on the data you give them.
[06:16:06] <kee> But you can find bounds for the best and worst-case.
[06:17:06] <kee> Something like merge sort, how long it takes doesn't depend on the data, only the size of the data, so the algorithm in my head would be able to calculate identical best-case and worst-case bounds.
[06:17:52] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:17:55] <kee> But the algorithm in my head wouldn't be able to do anything special for something like return-early bubble sort.
[06:18:05] <kee> You could come up with an algorithm that could, of course…
[06:18:19] <smlckz> yes, what can i do for the average one? use random arrays or exhaustively test for all permutations?
[06:18:20] <epony> there are a lot of them too https://en.wikipedia.org/wiki/Sorting_algorithm#Comparison_of_algorithms
[06:18:20] <bayaz> Title: Sorting algorithm - Wikipedia 
[06:18:41] <kee> At a certain point, you're just writing a program that auto-detects known sorting algorithms and special-cases a calculation of its runtime.
[06:19:03] <kee> But if the lists aren't massive, the naïve “run it and see” approach will give you exact values, every time.
[06:19:10] <smlckz> kee: hmm
[06:19:55] <kee> That won't give you average-case.
[06:19:59] <kee> Average-case analysis is hard.
[06:20:01] <smlckz> they aren't massive, so i'd run and see
[06:20:35] <kee> Random lists will give you an answer very close to the true average-case.
[06:20:54] <kee> Assuming you try several random lists, and average the result, of course. :-)
[06:22:06] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[06:22:07] <dTal> "average" assumes some kind of probability density fuction over the input - is that accurate, or even defined?
[06:22:31] <kee> dTal: Well, if you generate random lists it'll be defined. ;-)
[06:22:47] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[06:23:50] <dTal> you yoursef admitted that the "true average-case" is different from that :)
[06:24:17] <kee> Just because you don't calculate it exactly, that doesn't mean it's not defined.
[06:24:45] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:25:48] *** Quits: zaher (~zaher@37.48.148.174) (Ping timeout: 240 seconds)
[06:25:59] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[06:26:35] *** Joins: Inline__ (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de)
[06:26:42] <dTal> well, there's no uniform probability density function over an infinite range, so assuming the length of the list you might supply to your sort routine is unbounded, then you must assert a non-uniform weighting to each list in your calculation
[06:27:00] <dTal> which is subjective, at best
[06:27:04] *** Joins: eck (~root@user/eck)
[06:27:07] *** Quits: Farty (Farty@gateway/vpn/protonvpn/farty) (Quit: Bye Felisha!)
[06:28:00] <dTal> and in the real word, fed with real data, who is to say that that density function is representative? Real numbers are statistically distinct from random numbers
[06:28:20] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:29:19] *** Quits: Inline (~Inline@p200300cd473c9e009f1d7d6dc4a648e3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:33:54] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:51] *** Joins: soapsudsxx (~soapsudsx@209.221.40.132)
[06:47:01] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 245 seconds)
[06:48:07] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:40] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[06:50:58] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:51:19] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:52:32] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[06:53:30] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[06:53:52] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[06:55:01] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[06:59:15] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[07:10:27] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[07:12:14] *** Quits: GOATRIDER (~DOWNCATTL@74.215.16.190) (Quit: Leaving)
[07:14:14] *** Joins: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878)
[07:18:36] *** Quits: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878) (Ping timeout: 240 seconds)
[07:21:02] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[07:21:34] <CodeAgain> Hello! I have a question, more like an english question than a programming one, actually... 
[07:21:56] <CodeAgain> What is precisely a "cleanup task"?
[07:22:11] <CodeAgain> If anyone could give some examples I would love 
[07:23:51] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Remote host closed the connection)
[07:24:10] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[07:25:14] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[07:26:24] <Tech_8> vdamewood: Hi again
[07:26:54] <oldlaptop> In the context of programming, perhaps closing open files, freeing up memory allocations, etc. would be "cleanup tasks".
[07:27:12] <oldlaptop> In the context of English generally, mopping the floor is a cleanup task.
[07:28:28] <Haxxa> I have a C# application that reads in a CSV file, users update the csv file by excel. Only issue is excel places a lock on the file preventing access:
[07:28:28] <Haxxa> System.IO.IOException: 'The process cannot access the file"
[07:28:37] <Haxxa> Anyway to avoid this/overcome this?
[07:29:29] <oldlaptop> What's the broader goal?
[07:30:18] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:30:48] <oldlaptop> Perhaps, for example, the users could update a sqlite database (with some Excel-smelling GUI like sqlitebrowser) instead of a CSV file. (sqlite is more fine-grained with its locks such that you can retain atomicity and so on without the occasional-writer maintaining an exclusive lock the whole time)
[07:31:06] <oldlaptop> Perhaps there's some completely different approach that would solve the problem better.
[07:32:46] <oldlaptop> If you mean to say the file can't be opened by your application even after Excel closes it, that would be a distinct sign you're doing something else wrong. (I'm proceeding under the assumption that it holds some kind of exclusive lock while it has the file open.)
[07:33:38] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6f34:49ad:a0b8:f509) (Remote host closed the connection)
[07:33:41] *** Joins: password2 (~password8@user/password2)
[07:34:02] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[07:34:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5964:5c6c:b427:583c)
[07:35:25] <CodeAgain> oldlaptop, ohhh, I see, thanks a lot!
[07:35:39] <snake> Haxxa, yes actually
[07:35:52] <snake> when i did that sort of work i just made a copy of the file to my computer before using it
[07:36:24] <Haxxa> snake yeah taht would work
[07:36:41] <Haxxa> I ended up just calculating md5 sum to see if file changed and copying it 
[07:36:50] <Haxxa> then importing data
[07:36:56] <snake> Haxxa, are you my scab
[07:36:58] <snake> or what 
[07:36:59] <snake> haha
[07:37:04] <PlanckWalk> Watch out for race conditions
[07:37:56] <Haxxa> yeah true
[07:37:56] <snake> Haxxa, oh i used diff i think
[07:38:05] <snake> because i had it in a bash script
[07:38:14] <snake> it made more sense to use diff than to use a hash
[07:38:28] <snake> diff will tell you if the files differ which is really all you need to know
[07:38:36] <oldlaptop> (race conditions are the kind of thing using something like sqlite with very carefully-implemented concurrency handling can avoid for you)
[07:38:44] <Haxxa> this application is a one time simulator, it calculates md5 sum every 10 seconds or so, I reckon it will be fine, odds of md5 calculation occuring midsave are unlikely
[07:38:53] <snake> Haxxa, dont forget to make copies
[07:38:57] <snake> and records
[07:39:05] <snake> of everything you pull onto your computer
[07:39:11] <snake> so they can't hack u
[07:39:25] <snake> and when they fire you you will have some evidence in your favor
[07:39:48] <snake> not that you will need it cause the state doesn't trust these companies anymore, they come up with any nonsense they want for firing you
[07:39:57] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[07:44:09] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[07:49:00] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 272 seconds)
[07:50:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:50:37] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:c93e:f33d:df5:a660) (Ping timeout: 240 seconds)
[07:50:47] *** Parts: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) ()
[07:50:58] *** Joins: algosanddatastru (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[07:51:00] <algosanddatastru> Haxxa not sure if it will let you, but you could try to unlock it https://docs.microsoft.com/en-us/dotnet/api/system.io.filestream.unlock?view=net-6.0
[07:52:36] <Haxxa> algosanddatastru Thanks I took the better option, and implemented a check to see if the file is locked and now it produces an error to the user and tells them to save the file ane exit before proceeding. 
[07:52:45] <Haxxa> *and
[07:53:15] <algosanddatastru> yes, that's the best
[07:54:48] <algosanddatastru> is there something in a sequence diagram to denote you are framing a reusable portion and then referring to it from elsewhere? https://i.imgur.com/hSRZPku.png (see alt Initialize - is this correct?)
[07:57:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:58:12] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[07:58:52] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[08:01:43] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[08:02:52] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:06:06] *** Quits: RedNifre2 (~RedNifre@dslb-088-073-105-197.088.073.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:06:14] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[08:06:15] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[08:06:55] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Max SendQ exceeded)
[08:07:19] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[08:10:07] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[08:12:32] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[08:13:06] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[08:13:25] *** Joins: MCx (~MCx@user/mcx)
[08:13:38] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[08:14:58] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[08:15:20] <Linkandzelda> If I was going to invest in learning a full stack web development solution today what should it be? 
[08:15:23] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:15:40] <ent58> The C programming language.
[08:16:25] <ent58> (half joking)
[08:16:59] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[08:17:19] <EdFletcher> Linkandzelda: javascript (no joke) 
[08:18:46] <PlanckWalk> Or various other compiles-to-js lanagues
[08:18:46] *** Joins: RedNifre2 (~RedNifre@dslb-002-206-191-225.002.206.pools.vodafone-ip.de)
[08:18:57] <PlanckWalk> Typescript being the most obvious
[08:18:59] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[08:19:42] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 252 seconds)
[08:19:52] <PlanckWalk> But you really need JS knowledge anyway for any of those.
[08:20:39] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[08:20:50] <PlanckWalk> At any rate, if you want "full stack" for your own use, then that's one thing.  "Full stack" for being employable by a company that wants "full stack developers" is very much another.
[08:21:07] *** Joins: dvanloon8 (~dvanloon@user/dvanloon)
[08:21:19] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[08:21:20] *** dvanloon8 is now known as dvanloon
[08:21:54] <EdFletcher> ^truth 
[08:21:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[08:22:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[08:24:06] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[08:25:01] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:25:03] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[08:25:24] <ent58> Lets redo the entire internet in fastCGI
[08:26:33] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:26:34] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[08:27:03] <PlanckWalk> Well, it basically is...
[08:27:15] <PlanckWalk> In overview at least, not details.
[08:27:40] <PlanckWalk> fastCGI is essentially a way to achieve "the web server is a proxy for your real backend"
[08:27:56] *** Quits: grogu (~quassel@user/grogu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:28:11] *** Joins: grogu (~quassel@45-26-125-25.lightspeed.tukrga.sbcglobal.net)
[08:28:12] *** Quits: grogu (~quassel@45-26-125-25.lightspeed.tukrga.sbcglobal.net) (Changing host)
[08:28:12] *** Joins: grogu (~quassel@user/grogu)
[08:28:22] <PlanckWalk> It's just the details of what protocols the web server and the backend use to communication are different.
[08:28:30] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[08:28:40] <PlanckWalk> These days they tend to communicate over HTTP :-p
[08:28:45] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[08:28:56] <ent58> If it were up to me, JS would be replaced with dynamic self modifying modules written in C/C++
[08:29:04] <PlanckWalk> Ewwwww.
[08:29:13] <ent58> why eww ;-;
[08:29:18] <PlanckWalk> I absolutely do not want that running in my browser!
[08:29:22] <ent58> s p e e d.
[08:29:26] <ent58> alright but what if it was safe
[08:29:32] <PlanckWalk> hahano
[08:29:43] <PlanckWalk> I wouldn't trust the promises that it was safe
[08:29:44] <algosanddatastru>  is there something in a sequence diagram to denote you are framing a reusable portion and then referring to it from elsewhere? https://i.imgur.com/hSRZPku.png (see alt Initialize - is this correct?)
[08:29:52] *** Joins: tccki (~tccki@box.webslate.co.nz)
[08:29:57] <PlanckWalk> (I mostly don't trust promises that JS is safe, either)
[08:30:07] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:30:11] <PlanckWalk> (and JS is a heck of a lot more sandboxed)
[08:30:49] <PlanckWalk> *Self*-modifying modules in C, supplied by untrusted third parties?  Just No :-)
[08:31:13] <ent58> well by self, I mean they are overwrite inserted into the brower's address space
[08:31:22] <ent58> not necessarily that they have to be virus-y
[08:31:25] <PlanckWalk> Which is exactly what I thought you might mean.
[08:31:34] <ent58> Think of it like
[08:31:34] <MCx> Thoughts on learning Python for that Full Stack experience?
[08:31:42] <ent58> unmapping and remapping a DLL
[08:31:47] <ent58> or shared object
[08:31:49] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[08:31:49] <ent58> but faster
[08:31:53] <PlanckWalk> Guaranteed to hijack ther browser at the slightest hint of a bug.
[08:31:59] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[08:32:15] <PlanckWalk> or at least, guaranteed that someone will use it to do that.
[08:32:27] <ent58> This is true if you allow arbitrary assembly (binary loaded modules), but what if you brought the compiler with you?
[08:32:34] <ent58> a limited set of exposed symbols
[08:32:38] <PlanckWalk> (and from there, well, the browser has the ability to access all your user files)
[08:32:59] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 260 seconds)
[08:33:42] <PlanckWalk> It's bad enough running JS that is compiled at runtime and stuffed into their own sandbox processes.
[08:33:45] <oldlaptop> PlanckWalk: Unless it can't! https://www.openbsd.org/papers/bsdcan2019-unveil/mgp00022.html
[08:33:45] <bayaz> Title: MagicPoint presentation foils 
[08:34:13] <PlanckWalk> Running the compiled code in the same address space as the browser is a recipe for disaster.
[08:34:14] <oldlaptop> (not that such tricks are a very good excuse to do absurdly dangerous things)
[08:34:26] <ent58> I guess...how do you stop someone from doing `for (;;) { char *p = (char *)rand()*rand()*rand(); *p = 42; }`
[08:35:11] <PlanckWalk> Yeah, if the browser itself was a lot more walled off and treated as toxic waste it might be tolerable.
[08:36:15] <oldlaptop> I note that when "we" did do something vaguely like ent58's suggestion, there wasn't very much stopping activex applet things from doing pretty much anything they wanted to anything
[08:36:37] <PlanckWalk> Yep, and they were rightly excoriated in security circles.
[08:36:56] <ent58> alright don't associate what I'm saying with activex, that's not fair
[08:36:57] <ent58> :(
[08:37:05] <PlanckWalk> (and that was back in the days when there were only 5 actual criminals on the intenet)
[08:37:12] <oldlaptop> Unfortunately, it kind of looks like it /is/ fair.
[08:37:39] <ent58> But mine will be better, with waffles and pancakes
[08:37:52] <ent58> and no security holes
[08:37:53] <ent58> promise
[08:38:11] <PlanckWalk> Even Java applets were more sandboxed than this and still rightly considered as a security threat.
[08:38:17] <oldlaptop> I'll just let you keep it all then. More for you, right?
[08:38:33] <ent58> Realistically though, you would have to have a compilation "mode" for all the C code you receive to limit the type of expressions you can generate
[08:38:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[08:38:49] <PlanckWalk> Well, you can already run a C-to-WASM compiler
[08:38:51] <ent58> and that's not an easy problem
[08:38:54] <knusbaum> We'll just keep doing the same thing over and over again because there is money to be made, and security issues be damned.
[08:39:09] <oldlaptop> Security schmecurity!
[08:39:22] <ent58> I'm working on a proof of concept of the whole dynamic insertion-loader deal
[08:39:27] *** Joins: jazzy (~jaziz@user/jaziz)
[08:39:37] <oldlaptop> Unless it has a 'cyber' at the beginning and a politician talking about it, then we'll pretend to care about it for the cameras
[08:39:49] <ent58> but the sanitization is harder....I actually wrote something once that use disassembly analysis to check where the code tries to reach
[08:40:02] <ent58> This stopped 99% of everything that mattered
[08:40:39] <ent58> But it didn't stop exploiting a vetted system call from being used maliciously, which required checking the data, etc
[08:40:57] <ent58> like I obviously can't let the code set up a socket or start writing/reading arbitrary files
[08:41:20] <ent58> but it's not an insurmountable challenge I think
[08:41:53] <PlanckWalk> I wonder how NaCl turned out?
[08:42:20] <oldlaptop> They appear to have completely given up on it
[08:42:29] <PlanckWalk> Yeah, so I see
[08:42:37] <knusbaum> oldlaptop, really? That's really too bad.
[08:42:39] <knusbaum> Last time I checked NaCl was fairly widely used and well regarded.
[08:42:50] <knusbaum> Very sad to hear they've abandoned it.
[08:44:06] *** Quits: pmercado (~pmercado@186.107.57.83) (Ping timeout: 272 seconds)
[08:45:04] <oldlaptop> Without deep knowledge of the internals, I'd have somewhat greater confidence in emscripten/wasm keeping everything properly sandboxed.
[08:45:15] <oldlaptop> (Not that I like that much either.)
[08:46:12] <knusbaum> Where are you all seeing that NaCl has given up? I can't find anything.
[08:46:28] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:48:12] <oldlaptop> https://developer.chrome.com/docs/native-client/
[08:48:13] <bayaz> Title: Native Client - Chrome Developers 
[08:48:46] <oldlaptop> (There is another, unrelated NaCl that's a cryptographic library, we're (I'm?) not talking about it)
[08:49:13] <knusbaum> Ahh, the cryptographic library was what I thought you were talking about.
[08:49:24] <knusbaum> Glad to hear that's not suddenly gone, haha.
[08:49:53] <oldlaptop> I don't think any one organization can just "oops, we no likey you anymore" with the cryptographic library NaCl :P
[08:50:27] <oldlaptop> as opposed to pretty much anything with chrome, which eldritch abomination is tractable to its creator, if anyone
[08:50:30] <knusbaum> Depending on the library, it's pretty easy for even open-source libraries to become unmaintained messes.
[08:50:41] <oldlaptop> (existence proof: chrome)
[08:51:46] <ent58> Huh....I'd like to know more about why NaCl was abandoned
[08:55:39] <knusbaum> What NaCl are we talking about that isn't the cryptography library? Is that "Native Client" called NaCl?
[08:57:01] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:57:05] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[08:57:30] <oldlaptop> Yes
[08:57:32] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[08:58:47] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[08:59:07] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Ping timeout: 260 seconds)
[08:59:37] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[08:59:46] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[09:00:18] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[09:05:45] *** Quits: bytefire_ (~bytefire@li1531-193.members.linode.com) (*.net *.split)
[09:05:45] *** Quits: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net) (*.net *.split)
[09:05:45] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (*.net *.split)
[09:05:48] *** Quits: epony (epony@user/epony) (*.net *.split)
[09:05:49] *** Quits: kee (~wizzwizz4@user/wizzwizz4) (*.net *.split)
[09:05:49] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[09:05:49] *** Quits: kaichiuchi (uid547644@user/kaichiuchi) (*.net *.split)
[09:05:49] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[09:05:49] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[09:05:49] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (*.net *.split)
[09:05:49] *** Quits: dfoolz_ (~dfoolz@2a01:4f8:160:1161::2) (*.net *.split)
[09:05:49] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[09:05:49] *** Quits: EoN (~adam@2001:19f0:5801:1f28:5400:3ff:fe37:9588) (*.net *.split)
[09:05:49] *** Quits: picooz (~picooz@user/picooz) (*.net *.split)
[09:05:49] *** Quits: feoh (~feoh@idlerpg/player/feoh) (*.net *.split)
[09:05:49] *** Quits: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050) (*.net *.split)
[09:05:50] *** Quits: MCx (~MCx@user/mcx) (*.net *.split)
[09:05:50] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (*.net *.split)
[09:05:51] *** Joins: bytefire (~bytefire@li1531-193.members.linode.com)
[09:06:01] *** Joins: kaichiuchi (sid547644@user/kaichiuchi)
[09:06:02] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[09:06:02] *** Joins: dfoolz (~dfoolz@static.114.137.9.176.clients.your-server.de)
[09:06:03] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[09:06:06] *** Joins: EoN (~adam@2001:19f0:5801:1f28:5400:3ff:fe37:9588)
[09:06:08] *** Joins: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net)
[09:06:12] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[09:06:20] *** Joins: anddam (~anddam@user/anddam)
[09:06:21] *** Joins: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050)
[09:06:28] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[09:06:30] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[09:06:34] *** Joins: kee (~wizzwizz4@user/wizzwizz4)
[09:06:42] *** Joins: jeaye (~jeaye@user/jeaye)
[09:06:55] *** Joins: picooz (~picooz@user/picooz)
[09:09:12] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[09:09:32] *** Joins: Guest6037 (epony@lz2.eu)
[09:11:53] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:17:56] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[09:21:03] *** Quits: Cashlin (~hp@user/cashlin) (Ping timeout: 260 seconds)
[09:22:17] *** Quits: password2 (~password8@user/password2) (Remote host closed the connection)
[09:22:40] *** Joins: password2 (~password8@user/password2)
[09:24:00] *** Joins: Cashlin (~hp@user/cashlin)
[09:24:00] *** Quits: soapsudsxx (~soapsudsx@209.221.40.132) (Ping timeout: 272 seconds)
[09:24:31] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[09:25:09] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Ping timeout: 252 seconds)
[09:27:21] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:34:08] <Decker> is a pretty good start... https://i.ibb.co/N2W9wLX/image.png
[09:34:08] <bayaz> Type: image/png Size: 578.2 kB 
[09:34:27] <Decker> (have to reload the server, fixed the tag to be just the name ... ) but still need arrows and up/down and and and...
[09:36:38] <sonny> is that a board game?
[09:36:50] *** Quits: echo (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[09:38:16] <Linkandzelda> EdFletcher: full stack for both my own use, and use in production. Javascript with nodejs I assume?
[09:38:41] <Linkandzelda> PlanckWalk: ^ was also for you, sort of
[09:40:33] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:42:15] *** Joins: Jaami (~Jaami@182.185.242.83)
[09:43:59] <EdFletcher> Linkandzelda: yup exactly, node on the backend 
[09:44:50] <Linkandzelda> EdFletcher: any particular frameworks to look at?
[09:49:09] <EdFletcher> Linkandzelda: quite a few 🙂 but generally speaking, express (https://expressjs.com/) or fastify (https://www.fastify.io/) are good enough to get you up an running, and then there are many that build on/around them or others at varying levels of abstraction and breadth. https://nestjs.com/ is a pretty simple one i like a lot. closer to the
[09:49:09] <EdFletcher> frontend of course there's React and associated frameworks (such as https://nextjs.org/) that have different approaches, some that are full-stack in and of themselves (like next). 
[09:49:09] <bayaz> Title: NestJS - A progressive Node.js framework 
[09:49:58] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:50:57] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[09:55:10] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[09:57:17] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[09:58:15] *** Joins: vartan (~vartan@047-028-106-153.res.spectrum.com)
[10:00:29] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:00:46] *** Joins: img (~img@user/img)
[10:00:47] *** Joins: password (~password@user/password2)
[10:02:07] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 260 seconds)
[10:06:54] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[10:07:36] <Alex123> hello everyone, do you know where can I find documentation for Document-Level:EmbeddedJS for pdf files, I try to googling it nothing is coming up
[10:11:24] <sonny> I'm guess you'd find that in pdf.js or adobe documentation
[10:11:30] *** Joins: teut (~teut@103.144.92.143)
[10:12:31] *** Joins: bry-guy (~bry-guy@174-21-128-83.tukw.qwest.net)
[10:12:35] *** Quits: algosanddatastru (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) (Quit: Going offline, see ya! (www.adiirc.com))
[10:14:42] <Alex123> the problem is there nothing which describes the methods 
[10:15:57] <Linkandzelda> EdFletcher: Thanks, fastify looks good. Wondering if I should build an application as a big coupled thing or as a set of microservice APIs
[10:15:59] <sonny> hmm, maybe there is a mailing list or github or stackoverflow
[10:16:02] <Decker> console.log( Object.getPrototypeOf( thingYouWantMethodsOf ) )
[10:17:26] *** Quits: bry-guy (~bry-guy@174-21-128-83.tukw.qwest.net) (Remote host closed the connection)
[10:17:29] *** Quits: newwebdev13 (~newwebdev@78.135.91.69) (Quit: Leaving)
[10:17:42] <EdFletcher> Linkandzelda: that's quite subjective, depends on a lot of things. i personally try to decouple things if anything because the "shared-nothing" model (aka "actor concurrency model") is just a _lot_ easier to reason about and keep bugs out of. but monoliths can have their value too, it's mostly a contextual decision. 
[10:20:02] <Linkandzelda> EdFletcher: Just thinking about it in future, it would be useful to have a microservice for the things which were going to be used in other apps. Like maybe user management, auth
[10:21:22] <EdFletcher> Linkandzelda: yup another great reason to split stuff into microservices, great point 
[10:22:03] <sonny> is unix webscale?
[10:22:04] <Linkandzelda> EdFletcher: I'm right in thinking that if I had a user system in a monolith which was deployed to 10 apps I'd have to update all 10 and make sure the updates to the user system didn't conflict with the rest of the implementations, say if we are talking just in "modules" or plugins?
[10:22:54] *** Quits: kusanagi_ (~kusanagi@user/kusanagi) (Ping timeout: 272 seconds)
[10:23:00] <Linkandzelda> But if it's a microservice those 10 apps would implement an API, and the upgrade should be easier and simpler, I guess
[10:23:10] <EdFletcher> Linkandzelda: broadly, yeah. if you have things in decoupled services that only speak to each other via well-defined protocols and structures, then you can easily replace any of the services with something else entirely (on the most drastic end) without disrupting the others. 
[10:23:42] <EdFletcher> in the real world it's rarely that simple, but that's the theoretical ideal anyway 🙂 
[10:25:03] <Linkandzelda> EdFletcher: Indeed, well then I have to just know when to draw the line and how micro a microservice should get. I can imagine it being quite easier to make many of them for the smallest things
[10:26:41] <EdFletcher> Linkandzelda: yup and that's where the context comes in. often it can be helpful to build your proof-of-concept as a monolith to understand the data movement and natural interfaces, and then either use that as a reference implementation for individual services or simply start factoring out independent logic from the monolith into microservices 
[10:27:07] *** Quits: vartan (~vartan@047-028-106-153.res.spectrum.com) (Quit: Leaving)
[10:27:58] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:28:07] <Linkandzelda> EdFletcher: Oh, clever. That makes it easier to make a prototype without needing to think much. I like it
[10:28:40] <EdFletcher> Linkandzelda: you got it! 
[10:29:52] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:30:00] *** Quits: danpg (~thelounge@shout.jpaglier.com) (Quit: bye bye)
[10:30:27] *** Joins: Jong (~Jong@2620:10d:c090:400::5:bdbd)
[10:30:43] *** Quits: DevAntoi_ (~DevAntoin@2a01:e34:ec18:50c0:6479:a4f:3fd8:4be7) (Remote host closed the connection)
[10:30:58] *** Joins: danpg (~thelounge@shout.jpaglier.com)
[10:31:24] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016)
[10:33:50] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:33:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Client Quit)
[10:33:57] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[10:33:58] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:34:41] *** Joins: Enitin (~Enitin@82.180.145.226)
[10:37:32] *** Quits: CockEye (~CockEye@2600:1700:6f73:a490:baca:3aff:fe81:61fa) (Quit: CockEye)
[10:38:13] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[10:38:23] *** Quits: stagas (~stagas@2a02:587:c4ad:3ad8:94d2:4f7a:bd74:410a) (Ping timeout: 250 seconds)
[10:38:27] *** Joins: flaqoniun (~F@32.211.211.39)
[10:39:57] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016) (Ping timeout: 252 seconds)
[10:41:19] *** Joins: plastico (~plastico@neomutt/plastico)
[10:41:38] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[10:47:29] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[10:49:57] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f4fd:eac0:60cb:c468)
[10:50:24] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[10:51:21] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:51:54] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-4943-4396-933e-e0b1.res6.spectrum.com) (Quit: jarthur_)
[10:52:47] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[10:53:58] *** Joins: xiongxin (~Thunderbi@117.136.33.130)
[10:54:59] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[10:56:46] *** Joins: learner36_ (~learner36@2607:fea8:129f:c220:9406:ea6c:f7b0:cb3f)
[10:57:42] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[10:59:25] *** Joins: user51 (~user51@77.124.35.94)
[10:59:48] *** Quits: learner36 (~learner36@2607:fea8:129f:c220:7982:b77f:cbf9:aade) (Ping timeout: 240 seconds)
[10:59:52] *** learner36_ is now known as learner36
[11:02:38] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[11:02:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[11:03:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5964:5c6c:b427:583c) (Ping timeout: 240 seconds)
[11:05:22] *** Parts: skreech (skreech@user/skreech) ()
[11:06:28] *** Joins: VoidSync (~sync@user/voidsync)
[11:11:48] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016)
[11:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:16:48] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016) (Ping timeout: 252 seconds)
[11:17:33] *** Joins: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net)
[11:19:07] <user51> gmail
[11:19:11] <user51> aw, grap
[11:19:30] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:22:23] *** Quits: px (~px@user/px) (Ping timeout: 260 seconds)
[11:22:36] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[11:25:33] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[11:28:05] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[11:34:05] *** Parts: VoidSync (~sync@user/voidsync) ()
[11:36:19] *** Joins: uzee (~uzee@86.36.37.198)
[11:36:34] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:78cc:4c57:d99a:217c)
[11:37:41] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:39:42] *** Joins: palasso (~palasso@user/palasso)
[11:42:01] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:43:58] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 272 seconds)
[11:44:40] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:29] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:46:44] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[11:48:07] *** Joins: Rounin (~david@84.212.130.215)
[11:49:45] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Read error: Connection reset by peer)
[11:49:46] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: Bridge terminating on SIGTERM)
[11:49:46] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Quit: Bridge terminating on SIGTERM)
[11:49:47] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: Bridge terminating on SIGTERM)
[11:49:47] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Bridge terminating on SIGTERM)
[11:49:48] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Quit: Bridge terminating on SIGTERM)
[11:49:49] *** Quits: ta180m (~ta180m@2001:470:69fc:105::1d3) (Quit: Bridge terminating on SIGTERM)
[11:49:50] *** Quits: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9) (Quit: Bridge terminating on SIGTERM)
[11:49:51] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Quit: Bridge terminating on SIGTERM)
[11:49:51] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[11:49:51] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: Bridge terminating on SIGTERM)
[11:49:53] *** Quits: relmnight[m] (~relmnight@2001:470:69fc:105::f982) (Quit: Bridge terminating on SIGTERM)
[11:49:53] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: kaji (~kajiryoji@2001:470:69fc:105::405b) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Quit: Bridge terminating on SIGTERM)
[11:49:56] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:49:58] *** Joins: rsx (~dummy@ppp-188-174-141-51.dynamic.mnet-online.de)
[11:49:58] *** Quits: sss123next[m] (~sss123nex@2001:470:69fc:105::1:ceac) (Quit: Bridge terminating on SIGTERM)
[11:50:04] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[11:50:50] *** Joins: RazielZ (~Raziel@user/raziel)
[11:51:01] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[11:51:20] *** Joins: tccki (~tccki@box.webslate.co.nz)
[11:51:41] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:51:59] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:52:27] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:52:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[11:53:36] *** Quits: jinsun (~jinsun@user/jinsun) ()
[11:53:40] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[11:53:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:53:58] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[11:54:00] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[11:54:06] *** Quits: swp (~Thunderbi@143.176.249.0) (Remote host closed the connection)
[11:54:35] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[11:54:37] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Ping timeout: 240 seconds)
[11:54:38] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[11:54:44] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 272 seconds)
[11:55:59] *** Joins: opeerateur_ (~My_user_n@91.143.220.230)
[11:56:00] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[11:57:47] *** Joins: jinsun (~jinsun@user/jinsun)
[11:58:30] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:59:13] *** Quits: wauterboi (~wauterboi@185.65.135.246) (Ping timeout: 250 seconds)
[12:01:44] *** Joins: BinBash (~binbash@49.206.12.92)
[12:02:56] *** Quits: BinBash (~binbash@49.206.12.92) (Client Quit)
[12:04:14] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:05:54] *** Quits: yiggityswaps (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d) (Quit: Leaving)
[12:07:13] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[12:07:13] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[12:07:13] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[12:07:13] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[12:07:13] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[12:07:13] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[12:07:13] *** Joins: psydroid (~psydroid@user/psydroid)
[12:07:13] *** Joins: jinsun_ (~jinsun@user/jinsun)
[12:07:13] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[12:07:13] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[12:07:13] *** Joins: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d)
[12:07:13] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[12:07:13] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[12:07:13] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[12:07:13] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[12:07:13] *** Joins: ta180m (~ta180m@2001:470:69fc:105::1d3)
[12:07:13] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[12:07:14] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[12:07:14] *** Joins: kinduff (~kinduff@user/kinduff)
[12:07:14] *** Joins: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac)
[12:07:14] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[12:07:14] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[12:07:14] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[12:07:14] *** Joins: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9)
[12:07:14] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[12:07:42] *** Joins: fedemp (~federico@186.22.17.169)
[12:08:49] *** Parts: fedemp (~federico@186.22.17.169) ()
[12:10:39] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[12:13:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:16:35] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[12:18:59] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[12:19:46] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[12:19:56] *** Joins: menace (~someone@ppp-93-104-188-119.dynamic.mnet-online.de)
[12:20:22] *** Quits: menace (~someone@ppp-93-104-188-119.dynamic.mnet-online.de) (Changing host)
[12:20:22] *** Joins: menace (~someone@user/menace)
[12:20:28] *** menace is now known as Deknos
[12:20:40] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016)
[12:21:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016) (Remote host closed the connection)
[12:21:28] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016)
[12:22:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:22:57] <smallville7123> ughhh operating from USB is very slow
[12:23:03] *** Joins: bt-01 (~bt-01@49.207.185.155)
[12:23:59] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[12:24:29] <Trashlord> smallville7123: live USB environment?
[12:24:49] <smallville7123> Visual Studio Project
[12:25:07] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:1861:afad:270:b1c5)
[12:25:18] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.137)
[12:25:18] <Trashlord> ah
[12:25:23] <Trashlord> Visual Studio was always slow for me
[12:25:35] <Trashlord> even when not loading projects from USB
[12:25:42] <smallville7123> slow pc then
[12:25:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:26:02] <password> visual studio is very bloaty
[12:26:12] <smallville7123> password: oof, how
[12:27:20] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxstd0deypn0zq.ipv6.telus.net) (Read error: Connection reset by peer)
[12:27:31] <password> its always been
[12:27:46] <password> even on decent pcs it just feels sluggish
[12:28:03] <password> though i came from qt creator , which idk how they make it as fast
[12:28:33] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:32:24] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[12:32:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:33:11] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[12:33:47] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[12:34:23] *** Joins: norayr (376bc34bfc@37.252.78.253)
[12:34:32] *** Joins: inky_ (~inky@5.77.146.11)
[12:36:07] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:37:03] *** Quits: inky (~inky@46.36.114.138) (Ping timeout: 260 seconds)
[12:39:02] *** Joins: Enitin (~Enitin@82.180.145.228)
[12:39:55] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[12:41:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:45:31] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:47:49] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[12:48:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[12:50:35] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:56:12] *** Joins: zaher (~zaher@37.48.148.36)
[12:57:49] *** Joins: Pickchea (~private@user/pickchea)
[13:00:45] *** Joins: duuude (~user@user/duuude)
[13:01:13] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:01:18] *** Quits: Cyp (~cyp@213.237.85.100) (Read error: Connection reset by peer)
[13:02:17] *** Quits: znedw54419 (~znedw@home.znedw.com) (Ping timeout: 240 seconds)
[13:03:03] *** Joins: Cyp (~cyp@213.237.84.236)
[13:07:00] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f4fd:eac0:60cb:c468) (Ping timeout: 240 seconds)
[13:07:43] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb)
[13:09:16] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[13:10:43] *** Quits: xiongxin (~Thunderbi@117.136.33.130) (Ping timeout: 246 seconds)
[13:11:23] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb)
[13:12:13] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb) (Ping timeout: 250 seconds)
[13:12:46] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[13:13:26] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[13:14:45] *** Quits: teut (~teut@103.144.92.143) (Quit: Client closed)
[13:15:12] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:16:27] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[13:16:32] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[13:17:17] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[13:17:43] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 246 seconds)
[13:18:08] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[13:18:08] *** Joins: menace (~someone@user/menace)
[13:18:12] *** menace is now known as Deknos
[13:18:24] *** Joins: BUSY (~BUSY@user/busy)
[13:18:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[13:19:07] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 246 seconds)
[13:19:13] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Quit: Leaving)
[13:20:36] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb) (Ping timeout: 240 seconds)
[13:20:52] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[13:20:53] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[13:21:15] *** Joins: algosanddatastru (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[13:21:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[13:21:57] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[13:22:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:22:49] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:23:22] *** Joins: rtypo (~alex@user/rtypo)
[13:24:22] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[13:25:02] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[13:26:15] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[13:26:31] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[13:27:42] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[13:27:55] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[13:28:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:30:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[13:30:26] <DnzAtWrk> What is it with templates and website builders
[13:30:32] <DnzAtWrk> why can't a template just be a template
[13:30:50] <DnzAtWrk> and not something which includes everything including the sink, such as social media integration, RSS feeds and 500 other things
[13:31:07] <DnzAtWrk> is minimalism dead
[13:31:35] *** Joins: akselmo (~akselmo@user/akselmo)
[13:31:39] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:33:28] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[13:36:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:37:15] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[13:37:46] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Read error: Connection reset by peer)
[13:38:26] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[13:39:33] <mercenary> Minimalism died when it became unacceptable to close a feature request with 'No! Fsck off'
[13:40:57] *** Quits: LuKaRo (~LuKaRo@p200300dfa732173cc4814602d73ef0b9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:41:06] <ProfSimm> mercenary: "no f**k off" is quite minimal
[13:41:31] <ProfSimm> mercenary: this type of attitude came from FOSS, so thanks FOSS
[13:42:00] <ProfSimm> mercenary: everyone's goal became to be a little king of a little kingdon and tell others to f**k off.
[13:42:03] <ProfSimm> kingdom*
[13:42:40] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[13:42:42] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[13:43:14] *** Joins: norayr (376bc34bfc@37.252.78.253)
[13:43:48] *** Joins: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de)
[13:44:08] *** Quits: inky_ (~inky@5.77.146.11) (Read error: Connection reset by peer)
[13:45:00] *** Joins: xiongxin (~Thunderbi@117.136.40.172)
[13:45:27] <pyzozord> I think it's just very hard to say no in general, especially to new features
[13:47:26] <pyzozord> I don't I need to think more about this, it kind of contrasts with my world view in some ways
[13:47:54] *** Joins: Jakob (~Jakob@h87-96-217-169.cust.a3fiber.se)
[13:48:07] <pyzozord> I don't think I can for minimalism of the sake of minimalism. I care about being able to understand things I use
[13:48:24] <pyzozord> s/can/care/
[13:48:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:49:11] <pyzozord> but that might not be a realistic philosophy
[13:49:11] <mercenary> FOSS doesn't have the commercial project equivalent of 'That'll be a VO' or 'What other item can we remove from the planning to fit this in'. So saying 'No' becomes difficult indeed.
[13:50:45] <ProfSimm> pyzozord: new rule, when submitting a feature request, you need to submit a matching unfeature request.
[13:50:53] <Bou> pyzozord: I hold you responsible for my new "project" of implementing TLS from scratch, to understand it better
[13:50:55] <ProfSimm> pyzozord: all projects above version 1.0 should require this format
[13:51:07] <pyzozord> maybe it's a matter of organizing things in layers so I can easily and quickly learn how things work but I can dive deeper if I need to
[13:51:12] <ProfSimm> pyzozord: i.e. "add this, remove that"
[13:51:16] <koollman> mercenary: it has some equivalents, and some better answers. "not in the next release", "feel free to provide a patch for evaluation"
[13:51:30] <ProfSimm> pyzozord: it's like feature economy. Trading features
[13:51:51] <pyzozord> Bou: haha, I'm sorry... This might be useful https://jvns.ca/blog/2022/03/23/a-toy-version-of-tls/
[13:51:52] <bayaz> Title: Implementing a toy version of TLS 1.3 
[13:52:13] <koollman> mercenary: or even "well, you can maintain your own patchset if you want that"
[13:52:32] *** Quits: jaysicks (~jaysicks@178-164-227-38.pool.digikabel.hu) (Ping timeout: 272 seconds)
[13:52:35] <ProfSimm> koollman: "patch or GTFO is also annoying" tho
[13:52:36] <pyzozord> ProfSimm: that might be a good idea, more concious and sophisticated principles and means of dealing with complexity
[13:52:49] <mercenary> koollman: those are the wrong answers. They leave the door open for inclusion. Simplicity is maintained by not doing that.
[13:52:54] <ProfSimm> pyzozord: I've the feeling this is how Apple deals with things internally
[13:52:59] *** Joins: Guest6959 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[13:53:05] <koollman> mercenary: the last one does not
[13:53:07] <ProfSimm> pyzozord: this is why they constantly remove things :P
[13:53:25] <Bou> pyzozord: I'm at step 3 now, where things get more math-y (I went with RSA instead of elliptic curve though)
[13:53:33] <koollman> mercenary: also, there are projects known for refusing/rejecting contributions quite often, too :)
[13:53:33] *** Joins: fe23 (~fe23@2409:8a34:466:6010:e450:a807:7ddd:9d33)
[13:54:03] <mercenary> koollman: indeed. And leads to the mess that was old Minix: you have to apply patch sets C,G,B and E _in that order_
[13:54:45] <koollman> but you do have a minimalistic version available, then
[13:54:53] <koollman> by not applying the patches
[13:55:24] <pyzozord> ProfSimm: this might be actually their biggest strength when I think about it. They make effective and simple interfaces (hardware and software)
[13:56:21] <Bou> pyzozord: "I decided to use Go because I heard that Go has good crypto libraries.", what, no, that's cheating! :^)
[13:56:29] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[13:56:37] <user51> yo ProfSimm. what i wanted to talk about yesterday was in relation to sum() - i was programming in c at the time and it hit me that you can't access syntax as a function. e.g there's syntax for 1+2, but no equivalent function
[13:57:12] <ProfSimm> user51: yes. C++ offers it ho
[13:57:22] <ProfSimm> tho*
[13:57:42] <arahael> ProfSimm: Is there *anything* C++ doesn't offer?
[13:58:03] <ProfSimm> aradesh: simplicity
[13:58:04] <ProfSimm> :P
[13:58:23] * arahael won't deny that.  Not at all. Not in the slightest.
[13:58:42] <Bou> C++, pssh, way too high-level
[13:59:30] *** Joins: Klinda (~superleag@user/klinda)
[13:59:43] <arahael> And yet, also somehow too low-level.
[14:00:13] <user51> ProfSimm: fwiw, at the time i was concerned about having a uniform structure. and naturally i broke it :|
[14:00:19] *** amigojapan is now known as he-man
[14:00:25] <user51> s/uniform/& code/
[14:00:41] *** he-man is now known as amigojapan
[14:01:33] <KillerWasp> who's Unit193???
[14:01:39] <KillerWasp> seem like a anon name
[14:03:42] *** Joins: wildo (~lain6141@202.180.111.143)
[14:03:43] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:03:43] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:03:43] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:03:50] <KillerWasp> anyone know from what library is this symbol? hb_ot_layout_get_horizontal_baseline_tag_for_script
[14:04:17] <GeDaMo> harfbuzz
[14:04:17] <KillerWasp> i can't open the browser by same reason
[14:04:55] <GeDaMo> https://harfbuzz.github.io/harfbuzz-hb-ot-layout.html#hb-ot-layout-get-horizontal-baseline-tag-for-script
[14:04:55] <bayaz> Title: hb-ot-layout: HarfBuzz Manual 
[14:05:24] *** Joins: zaher_ (~zaher@37.48.154.85)
[14:05:40] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.137) (Ping timeout: 246 seconds)
[14:06:12] *** Quits: raym (~raym@user/raym) (Ping timeout: 252 seconds)
[14:07:28] *** Joins: jaysicks (~jaysicks@91-82-251-185.pool.digikabel.hu)
[14:07:51] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[14:08:00] *** Joins: raym (~raym@user/raym)
[14:08:07] *** Quits: zaher (~zaher@37.48.148.36) (Ping timeout: 246 seconds)
[14:13:26] *** Joins: xcombelle3 (~xavie@176-139-252-198.abo.bbox.fr)
[14:13:29] *** Joins: xcombelle1 (~xcombelle@176-139-252-198.abo.bbox.fr)
[14:14:42] *** Quits: Jakob (~Jakob@h87-96-217-169.cust.a3fiber.se) (Quit: Konversation terminated!)
[14:14:44] *** Joins: Atque (~Atque@user/atque)
[14:15:09] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[14:17:51] <KillerWasp> mmm, don't work, still are needed.
[14:18:29] <KillerWasp> really is harfbuzz?
[14:19:04] <KillerWasp> don't exist in any side, even with harfbuzz.
[14:19:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[14:19:47] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Client Quit)
[14:20:24] <ProfSimm> user51: uniform structure in what
[14:20:55] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[14:23:07] <KillerWasp> damn... this shit of firefox...
[14:23:28] <user51> ProfSimm: i had a table of cpu instructions, and wanted the instruction to be in the table.
[14:24:19] <user51> solutions could be sum(), lambdas, whatever, but it's c so i just used a function pointer
[14:24:55] *** Joins: Atque (~Atque@user/atque)
[14:25:28] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:28:12] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92)
[14:28:17] *** Joins: archie (~archie@host-79-49-217-108.retail.telecomitalia.it)
[14:28:19] <archie> hello
[14:28:58] <archie> anyone knows how to convert an []interface{} in []string in go?
[14:29:30] <archie> the json.Unmarshal methods returns []interface{} for any kind of array -.-
[14:29:39] *** Joins: audio (~audio@user/audio)
[14:30:29] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:30:56] *** Quits: Guest6037 (epony@lz2.eu) (Quit: QUIT)
[14:31:51] *** Quits: xiongxin (~Thunderbi@117.136.40.172) (Ping timeout: 260 seconds)
[14:32:41] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:36] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[14:34:19] *** Joins: swp (~Thunderbi@143.176.249.0)
[14:34:59] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92) (Ping timeout: 250 seconds)
[14:35:02] <GeDaMo> https://go.dev/ref/spec#Type_assertions
[14:35:03] <bayaz> Title: The Go Programming Language Specification - The Go Programming Language 
[14:36:06] <archie> hi GeDaMo, unfortunatly that's an assertion, it doesn't any conversion
[14:36:57] <archie> tldr, since json.Unmarshal returns the array of strings as []interface{}, the appempt of doing array.([]string) fails
[14:37:07] <archie> panic: interface conversion: interface {} is []interface {}, not []string
[14:39:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.8.2+cygwin4 - https://znc.in)
[14:39:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:41:09] <pyzozord> archie: there is a #go-nuts channel
[14:41:17] *** Joins: Pickchea (~private@user/pickchea)
[14:41:36] <pyzozord> []interface{} means "an array of anything" as far as I know, what do you expect the string to look like
[14:41:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:42:49] <GeDaMo> https://go.dev/blog/json#decoding-arbitrary-data
[14:42:49] <bayaz> Title: JSON and Go - The Go Programming Language 
[14:44:05] <ProfSimm> I've been thinking, an interface doesn't ensure a type works as promised, it only ensures that it works as promised OR crashes.
[14:44:20] <ProfSimm> So type guarantees are much less than we usually think about
[14:44:38] <GeDaMo> It doesn't have to crash, it could do nothing
[14:44:45] <bjs> ProfSimm: or not terminates
[14:45:02] <ProfSimm> GeDaMo: well, no if the interface has to return, say, string, it can only return string, or crash no
[14:45:06] <bjs> ProfSimm: but you can make a type system that is total,  i.e. if it typechecks then it halts in a good state (no crashing, no non-termination)
[14:45:09] <GeDaMo> Empty string
[14:45:09] <ProfSimm> bjs: oh yeah that too
[14:45:17] <bjs> ProfSimm: well it can also not return at all and just spin forever
[14:45:20] <ProfSimm> GeDaMo: sure but that's a string :)
[14:45:23] *** Joins: epony (epony@user/epony)
[14:45:51] <ProfSimm> ok so types ensure: 1) thing works as promised  -or- 2) crashes or hangs :P
[14:46:04] <ProfSimm> Of course "as promised" is just minimal type guarantees
[14:46:12] <bjs> ProfSimm: well it ensures that things work as promised, it's just that most type systems *dont* promise it won't crash or hang
[14:46:26] <ProfSimm> bjs: right
[14:46:29] <bjs> you can make type systems that include those promises too
[14:46:44] <ProfSimm> It seems to be however that this is not that different than runtime assertions
[14:46:52] <bjs> but the truth is, it's quite nice to have `division :: Number -> Number -> Number`
[14:46:53] <ProfSimm> The only difference is that the compiler understands the assertions
[14:47:00] <bjs> rather than wrapping it up in some Maybe type
[14:47:56] <archie> pyzozord but there are cases where I know that's a []string, and I do need that type rather than []generic{}
[14:48:02] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[14:48:03] <archie> *interface
[14:48:13] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:49:15] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[14:50:09] *** Joins: cursey (~cursey@user/cursey)
[14:50:58] <KillerWasp> giveme money! giveme money! giveme money! comoooon!! giveme money!! GIVEME MONEY SON OF B@$*&#@&#*&$!!!!!
[14:51:03] <pyzozord> archie: you can do this https://go.dev/play/p/oWAuT3mj9U7
[14:51:03] <bayaz> Title: Go Playground - The Go Programming Language 
[14:51:10] <KillerWasp> GRRRRRRRRRRRR!!!!!!!!
[14:52:45] *** Quits: swp (~Thunderbi@143.176.249.0) (Read error: Connection reset by peer)
[14:53:46] <KillerWasp> Excuse me for bothering you, my dearest users, but would you be so humble as to donate a little of your coins to this humble gentleman out of the goodness of your hearts?
[14:54:01] <archie> pyzozord uhm, that way I should loop the entire []interface{} and manually append each element in a []string array -.-
[14:55:24] <KillerWasp> mmmmm...
[14:55:36] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[14:55:47] <KillerWasp> With both options to the extreme it doesn't seem to catch anyone's attention. :/
[14:58:59] *** Joins: xiongxin (~Thunderbi@117.136.40.176)
[14:59:08] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Quit: Leaving)
[15:00:18] <pyzozord> archie: as far as I can tell go is all about looping
[15:02:22] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[15:03:17] <PlanckWalk> KillerWasp: Every second square centimetre of most websites is, when you boil it down, someone asking for money.
[15:03:29] <PlanckWalk> Most of the rest is white space.
[15:03:36] *** Quits: wildo (~lain6141@202.180.111.143) (Quit: leaving)
[15:04:06] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[15:07:49] <KillerWasp> PlanckWalk: well, everything in this world moves for money. If something is offered for free, it is just lying.
[15:08:39] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a)
[15:09:11] *** Quits: ivanf (~ivan@user/ivanf) (Ping timeout: 260 seconds)
[15:09:57] <KillerWasp> You could point out that all of FOSS or GNU is free, but it's just very forced to be free because its people wanted it this way, it's called 100% cost-externalizing. The rest, like other organizations, always pursue their own interests so they pretend it's free, they charge you for it by other means, such as adsenses, Trojans, abuse of personal information, etc. You are paying with your life and your soul.
[15:10:19] <ProfSimm> Glad we're rediscovering the purpose of money.
[15:11:01] <KillerWasp> ProfSimm: 👍
[15:11:05] *** Joins: ivanf (~ivan@user/ivanf)
[15:11:50] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[15:12:03] *** Quits: xiongxin (~Thunderbi@117.136.40.176) (Ping timeout: 250 seconds)
[15:12:03] *** xiongxin1 is now known as xiongxin
[15:12:21] <ProfSimm> We're all technically running on a credit from the Sun.
[15:12:25] <ProfSimm> Entropy credit
[15:12:27] <KillerWasp> Someone here on IRC, I think it was one of the administrators, mentioned that sooner or later everything was going to stop being free and end up being paid. As the only viable way.
[15:17:56] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[15:18:01] *** Joins: Enitin (~Enitin@82.180.145.223)
[15:18:04] <ProfSimm> KillerWasp: thee's something bigger than money
[15:18:35] <ProfSimm> KillerWasp: and in fact money is just a particular instance of that thing
[15:19:48] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:20:22] <KillerWasp> ProfSimm: what thing?
[15:20:36] <ProfSimm> Network effect.
[15:21:53] <ProfSimm> Everything is a network.
[15:22:04] <ProfSimm> A network that's bigger and has sufficient mobility, wins.
[15:22:12] <KillerWasp> At least on the internet it is much easier to buy and sell.
[15:22:23] <ProfSimm> Well the Internet is a network
[15:22:43] <KillerWasp> yes, i mean it.
[15:22:56] <ProfSimm> This also explains why FOSS will continue to exist.
[15:23:28] <ProfSimm> Sometimes a platform being available to all produces greater network effects, than the money you can sell it for
[15:23:32] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[15:23:49] <KillerWasp> Although the only problem is that there is no way to establish a public place where street vendors or people begging can exist, everyone ends up banned. :S
[15:24:51] <KillerWasp> Well, at least ask for currency like what I just did. But there should be a way to ask and imply that you give something in return.
[15:25:13] *** Joins: kakysha (~kakysha@user/kakysha)
[15:25:35] *** Joins: inky_ (~inky@46.36.114.138)
[15:26:08] <KillerWasp> ProfSimm: Not so much, there are a lot of people who don't even touch FOSS and pay a lot of money for products/programs with Trojans.
[15:26:17] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[15:26:32] <KillerWasp> Or they pay to rent something virtual.
[15:26:37] <ProfSimm> Can't discuss hypothetical people.
[15:26:55] <KillerWasp> ProfSimm: what? hypothetical?...
[15:27:15] <ProfSimm> You don't "own" anything though.
[15:27:17] <KillerWasp> ProfSimm: Do you think people are a lie?
[15:27:27] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 260 seconds)
[15:28:00] <ProfSimm> Ownership is mostly an insurance against change.
[15:28:14] <ProfSimm> In stable times, people would choose to rent every time.
[15:28:31] *** Joins: xkuru (~xkuru@user/xkuru)
[15:28:37] *** Joins: Enitin (~Enitin@82.180.145.226)
[15:28:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[15:28:47] *** Joins: norayr (376bc34bfc@37.252.78.253)
[15:29:57] <ProfSimm> KillerWasp: my point is all those models make sense in specific context, so I can't discuss them without context.
[15:29:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[15:30:08] <ProfSimm> KillerWasp: it makes sense to use FOSS, and also to pay for expensive software
[15:30:37] *** Joins: xbkkd (~F0@user/xbkkd)
[15:30:40] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[15:30:53] * vdamewood strokes the fur on his teeth.
[15:31:00] <vdamewood> Hi, people etc.
[15:31:05] <ProfSimm> Ew
[15:31:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:31:15] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[15:31:28] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[15:31:33] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a) (Ping timeout: 260 seconds)
[15:31:43] *** Quits: suss (~user@user/suss) (Ping timeout: 256 seconds)
[15:31:44] <ProfSimm> vdamewood: I have a question
[15:32:09] <vdamewood> ProfSimm: Is there enough of it ti share with the whole channel?
[15:32:15] <vdamewood> s/it ti/it to/
[15:32:54] <ProfSimm> vdamewood: go here , paste this: 1 -1-1 - 1-1 -1    observe the expression tree. A beige box means "application chain"  like a(b(c))  is application chain of a, b, c
[15:33:04] <ProfSimm> vdamewood: does what this parses to make sense to you
[15:33:31] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[15:33:38] <ProfSimm> vdamewood: uh, go here i mean https://www.coltram.com/proto/
[15:33:39] <bayaz> Title: Parser 
[15:34:50] <vdamewood> It doesn't do anything
[15:34:55] <ProfSimm> Nice
[15:35:01] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: User was banned)
[15:35:03] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Quit: User was banned)
[15:35:03] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: User was banned)
[15:35:10] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: User was banned)
[15:35:11] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: User was banned)
[15:35:13] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: User was banned)
[15:35:15] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: User was banned)
[15:35:18] *** Quits: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac) (Quit: User was banned)
[15:35:19] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:35:25] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: User was banned)
[15:35:28] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Quit: User was banned)
[15:35:29] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Quit: User was banned)
[15:35:29] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: User was banned)
[15:35:32] *** Quits: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732) (Quit: User was banned)
[15:35:34] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Quit: User was banned)
[15:35:35] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Quit: User was banned)
[15:35:36] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: User was banned)
[15:35:38] <ProfSimm> vdamewood: but I don't understand
[15:35:39] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: User was banned)
[15:35:40] *** Quits: akselmo (~akselmo@user/akselmo) (Quit: User was banned)
[15:35:45] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: User was banned)
[15:35:46] *** Quits: ta180m (~ta180m@2001:470:69fc:105::1d3) (Quit: User was banned)
[15:35:48] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: User was banned)
[15:35:51] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Quit: User was banned)
[15:35:53] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:35:59] *** Quits: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d) (Quit: User was banned)
[15:36:06] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[15:36:17] *** Quits: kaji (~kajiryoji@2001:470:69fc:105::405b) (Quit: User was banned)
[15:36:20] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[15:36:20] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[15:36:25] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[15:36:25] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[15:36:26] *** Joins: psydroid (~psydroid@user/psydroid)
[15:36:40] *** Joins: jinsun_ (~jinsun@user/jinsun)
[15:36:47] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Quit: User was banned)
[15:36:52] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[15:37:00] *** Quits: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9) (Quit: User was banned)
[15:37:06] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[15:37:20] *** Joins: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d)
[15:37:29] *** Quits: relmnight[m] (~relmnight@2001:470:69fc:105::f982) (Quit: User was banned)
[15:37:30] <ProfSimm> vdamewood: how does it not do anyway
[15:37:32] <ProfSimm> anything
[15:37:34] <vdamewood> ProfSimm: I don't know what to tell you. I see a split screen, half black, half grey. I can paste into the black section, but it doen't have any effect, other than pasting the text.
[15:37:34] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[15:37:35] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[15:37:45] <ProfSimm> lel
[15:37:48] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[15:37:48] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:37:49] *** Quits: psydroid (~psydroid@user/psydroid) (Client Quit)
[15:37:49] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Client Quit)
[15:37:49] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Client Quit)
[15:37:49] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Client Quit)
[15:37:49] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Client Quit)
[15:37:49] *** Quits: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732) (Client Quit)
[15:37:49] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Client Quit)
[15:37:49] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Client Quit)
[15:37:49] *** Quits: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d) (Client Quit)
[15:37:49] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Client Quit)
[15:37:49] *** Quits: jinsun_ (~jinsun@user/jinsun) (Client Quit)
[15:37:49] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Client Quit)
[15:37:49] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Client Quit)
[15:37:49] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Client Quit)
[15:37:49] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Client Quit)
[15:37:51] <ProfSimm> vdamewood: try refreshing 
[15:38:02] *** Joins: ta180m (~ta180m@2001:470:69fc:105::1d3)
[15:38:04] <ProfSimm> vdamewood: don't you see bunch of garbage on right with emoji
[15:38:06] <vdamewood> Tried it. No change.
[15:38:14] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[15:38:18] <vdamewood> Nope, no garbage, no emoji. Just grey.
[15:38:28] <ProfSimm> vdamewood: do you have your JS disabled :P ?
[15:38:28] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[15:38:32] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[15:38:35] <vdamewood> Nope.
[15:38:39] <ProfSimm> vdamewood: which browser/os
[15:38:42] *** Joins: kinduff (~kinduff@user/kinduff)
[15:38:55] *** Joins: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac)
[15:39:07] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[15:39:19] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[15:39:23] <vdamewood> macOS 12.3 Monterey, Safari 15.4
[15:39:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:39:29] <ProfSimm> hm
[15:39:33] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[15:39:39] <ProfSimm> 1 sec I'll open on mac
[15:39:45] *** Joins: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9)
[15:39:52] <vdamewood> I doubt it matters, but I'm on an Intel system.
[15:39:57] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[15:40:11] *** Joins: akselmo (~akselmo@user/akselmo)
[15:40:38] <ProfSimm> vdamewood: errors?
[15:40:51] <vdamewood> None show.
[15:40:53] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:41:00] <ProfSimm> vdamewood: wait, doesn't work on safari
[15:41:05] * ProfSimm debugging
[15:41:07] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[15:41:08] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[15:41:20] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[15:41:20] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[15:41:32] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[15:41:44] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[15:41:44] *** Joins: psydroid (~psydroid@user/psydroid)
[15:41:44] *** Joins: jinsun_ (~jinsun@user/jinsun)
[15:41:44] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[15:41:44] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[15:41:56] *** Joins: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d)
[15:41:56] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[15:42:10] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[15:42:10] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[15:42:10] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:42:24] <ProfSimm> vdamewood: didn't expet that. I added a lookbehind in one regex, and Safari bombed on it
[15:42:32] <ProfSimm> :P
[15:42:34] *** Quits: archie (~archie@host-79-49-217-108.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[15:43:24] <ProfSimm> FFS https://stackoverflow.com/questions/58460501/js-regex-lookbehind-not-working-in-firefox-and-safari
[15:43:25] <bayaz> Title: JS Regex lookbehind not working in firefox and safari 
[15:43:30] <ProfSimm> TIL
[15:44:00] <ProfSimm> I can't believe this
[15:44:38] *** Quits: Jaami (~Jaami@182.185.242.83) (Ping timeout: 252 seconds)
[15:45:32] *** Joins: Twipply (~Twipply@user/twipply)
[15:46:29] <ProfSimm> https://caniuse.com/js-regexp-lookbehind
[15:46:30] <bayaz> Title: Lookbehind in JS regular expressions | Can I use... Support tables for HTML5, CSS3, etc 
[15:47:01] <beaky> nice its been 2 weeks and i still havent implemented the rest of my tea database
[15:47:17] <ProfSimm> beaky: is it literally a database of teas
[15:47:23] <beaky> yes
[15:47:47] <ProfSimm> beaky: I suppose you needed a database that supports tea types as columns
[15:47:52] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 246 seconds)
[15:47:59] <beaky> yes each column is indexed by a succinct radix trie
[15:48:21] *** Joins: xiongxin (~Thunderbi@117.136.33.131)
[15:48:29] <ProfSimm> Ah yes, that's how I drink my tea too. With succinct radix trie.
[15:48:30] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[15:49:01] *** Joins: Jaami (~Jaami@182.185.216.231)
[15:49:23] *** Joins: epony (epony@user/epony)
[15:49:26] <PlanckWalk> Succulent radical teas.
[15:50:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:51:02] * vdamewood pets his kitty.
[15:52:21] <vdamewood> Kitty go prrr.
[15:55:38] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 252 seconds)
[15:55:52] *** Joins: gareppa (~gareppa@user/gareppa)
[15:57:19] *** Quits: ivanf (~ivan@user/ivanf) (Ping timeout: 246 seconds)
[15:57:52] <beaky> nice google is releasing their rust-based operating system https://fuchsia.dev/fuchsia-src/development/build/build_workstation
[15:57:53] <bayaz> Title: Build Workstation ?|? Fuchsia 
[15:58:01] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:58:54] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[15:59:14] *** Joins: Tazy (~Tazmainia@2001:1c02:170a:4000::100a)
[15:59:28] <vdamewood> I think I want a cookie.
[15:59:42] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[15:59:50] *** Joins: ivanf (~ivan@user/ivanf)
[16:00:13] *** Joins: coaxing (~coaxing@user/coaxing)
[16:01:20] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[16:01:38] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:07:17] <beaky> nice most of hacker news cant spell fuchsia if only google had picked a better name https://news.ycombinator.com/item?id=30827210
[16:07:22] <epony> https://en.wikipedia.org/wiki/HTTP_cookie#Cookiejacking
[16:07:22] <bayaz> Title: HTTP cookie - Wikipedia 
[16:08:13] <smallville7123> ok so the touch tracking works as it is i expect android's version to work o.o    https://gist.github.com/mgood7123/4c48c07303846c16a75a3d948272114a
[16:08:14] <bayaz> Title: tracking.cs 
[16:09:20] <epony> touch interfaces get you haxored and malware infectored
[16:10:01] *** Joins: newwebdev13 (~newwebdev@78.135.91.69)
[16:10:13] * vdamewood names a new os 'Fewshuh'
[16:10:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:10:32] <epony> because you can't control it and it's unreliable, and there are unsafe regions that when touched result in faults and unpredictable and unexpected behaviour
[16:11:17] <epony> touch interfaces are pretty dangerous
[16:11:18] *** Quits: xiongxin (~Thunderbi@117.136.33.131) (Read error: Connection reset by peer)
[16:12:00] <epony> from trivial annoyances to costs incurred and data theft and abuse and attacks on people and worse
[16:12:34] <epony> surgeons general warning: don't operate with your bare hands
[16:12:52] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Read error: Connection reset by peer)
[16:13:29] *** Joins: password11 (~password@user/password2)
[16:14:12] <vdamewood> Gummy worms!
[16:15:40] *** Joins: Tazmainian (~Tazmainia@2001:1c02:170a:4000::100f)
[16:16:56] *** Quits: password (~password@user/password2) (Ping timeout: 272 seconds)
[16:17:17] <epony> https://en.wikipedia.org/w/index.php?search=webshit  "Showing results for website. No results found for webshit.  The page "Webshit" does not exist. You can ask for it to be created, but consider checking the search results below to see whether the topic is already covered." (in websheets, from excel to webcel)
[16:17:18] <bayaz> Title: webshit - Search results - Wikipedia 
[16:17:37] <user51> http://n-gate.com/
[16:17:42] <epony> yep
[16:18:08] <epony> that's the connotation with HN & YComboZombocombobulator
[16:19:22] *** Quits: Tazy (~Tazmainia@2001:1c02:170a:4000::100a) (Ping timeout: 260 seconds)
[16:19:58] <epony> the number of hits for "uber" is staggering ;-)
[16:22:32] <smallville7123> epony: o.o
[16:24:27] <epony> just read the summaries ;-) and you've understood half of the pop-culture of "fund.me" (uber for prostitutes) online (speculative investments scams)
[16:25:12] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:26:10] <ProfSimm> vdamewood: so anyway I guess the joke is that Apple never looks behind. badumtsss
[16:29:26] *** Tazmainian is now known as Tazy
[16:30:40] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441)
[16:32:23] *** Joins: zaher (~zaher@37.48.189.13)
[16:32:32] <epony> user51, on a second note, that webshite seems to be abandoned about mid-summer last year (n-gate)
[16:33:26] <epony> (there are a lot of mentions of Apple too, none of them flattering)
[16:34:17] <beaky> nice i like apple
[16:35:07] *** Joins: xcombelle2 (~xcombelle@176-139-252-198.abo.bbox.fr)
[16:35:18] *** Quits: zaher_ (~zaher@37.48.154.85) (Ping timeout: 272 seconds)
[16:36:48] *** Quits: Guest6959 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[16:36:53] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[16:36:53] *** Quits: nf (~n@monade.li) (Ping timeout: 252 seconds)
[16:38:28] *** Quits: xcombelle1 (~xcombelle@176-139-252-198.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:38:44] <epony> must be due to the 5 year old stank of pegas.us   https://en.wikipedia.org/wiki/Pegasus_(spyware)#Discovery
[16:38:44] <bayaz> Title: Pegasus (spyware) - Wikipedia 
[16:38:52] *** Joins: nf (~n@monade.li)
[16:39:39] <epony> (sumbathe peg.us US teh BOM)
[16:43:06] *** Joins: Jaami2 (~Jaami@182.185.161.184)
[16:45:02] *** Quits: Jaami (~Jaami@182.185.216.231) (Ping timeout: 260 seconds)
[16:47:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[16:49:08] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:49:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:49:20] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[16:50:28] *** password11 is now known as password
[16:50:29] *** Joins: pmercado (~pmercado@186.107.57.83)
[16:50:36] *** Parts: KillerWasp (~KillerWas@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[16:53:06] *** Quits: kron (~weechat@user/qaph) (Read error: Connection reset by peer)
[16:53:35] *** Joins: kron (~weechat@user/qaph)
[16:54:58] *** Joins: Pickchea (~private@user/pickchea)
[16:55:18] <ProfSimm> duuude: what's your opinion on the expression syntax of Excel
[16:56:31] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Ping timeout: 260 seconds)
[16:57:09] *** Joins: XSDNMN (~XSDNMN@2601:449:8400:4170:4c65:aeab:acc9:1dcc)
[16:57:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441) (Ping timeout: 256 seconds)
[17:00:22] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:02:47] <ProfSimm> Should languages have reserved words
[17:05:12] <epony> that's not a question, is it?
[17:05:24] <ProfSimm> epony: it is
[17:05:33] <epony> only isn't ;-)
[17:05:45] <ProfSimm> epony: yes, FCK RESERVED WORDS
[17:05:53] <ProfSimm> epony: no, actually it is question
[17:06:06] <epony> sounds like an S-expression to me
[17:06:28] <ProfSimm> epony: oh that has no words right
[17:06:28] <epony> FSCK(1)
[17:06:46] <epony> no, it's in "ALL" caps
[17:07:53] <epony> you know like the "ALL" CPUs have operating systems in them, so you don't have to have one, and run directly your "PAGER" with embedded OS inside
[17:08:15] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:08:22] *** Quits: algosanddatastru (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) (Ping timeout: 260 seconds)
[17:08:40] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[17:09:25] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[17:10:37] <epony> the caps were pretty mandatory in the 8bit epoch where there were LESS-RESERVED WORDS because it was inferior to the mini-computers with More Reservations Word and time sharing and multiple users and storage, you know necessities
[17:10:58] *** Joins: Yonle (~Yonle@user/yonle)
[17:11:11] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:11:32] <epony> that quickly came back as soon as the computers were functional enough to be able to run multiple programs without restarting them
[17:11:53] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[17:12:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[17:12:15] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:12:28] *** Joins: favadi (~textual@2001:ee0:4081:6914:7d50:ffb0:7177:22b)
[17:12:29] <epony> you can still pretend it is a 60ies computer, in an emulator, but that won't make it a very compelling platform that takes over the world
[17:13:28] <epony> and you end up having reserved words anyway, no matter if you use syntax to mark them or just the words as reserved for the program
[17:13:48] <epony> so you still have them, even if you pretend you don't
[17:14:47] <epony> the real question is, why complicate things more than minimally required, and use the optimal design choices for your intended goal set and objectives list
[17:14:54] <ProfSimm> epony: the caps thing actually is better than what we have now
[17:15:03] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:15:13] <ProfSimm> epony: btw in my language technically all caps are reserved too
[17:15:15] <epony> if all you have is CAPS.. then it's a bit worse
[17:15:21] <ProfSimm> epony: identifiers can't have caps in them
[17:15:39] <ProfSimm> epony: but also I don't use them for anything
[17:16:08] <epony> from a minimal design standpoint, that is aligned with your goals
[17:16:25] <ProfSimm> epony: I was thinking of allowing caps as custom infix operators
[17:16:30] <ProfSimm> or unary
[17:16:56] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com)
[17:16:58] <ProfSimm> 2 LSH 2 // 8
[17:17:03] <ProfSimm> (left shift)
[17:17:07] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[17:17:19] *** Quits: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: ta180m (~ta180m@2001:470:69fc:105::1d3) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: relmnight[m] (~relmnight@2001:470:69fc:105::f982) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: akselmo (~akselmo@user/akselmo) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: kaji (~kajiryoji@2001:470:69fc:105::405b) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9) (Quit: Bridge terminating on SIGTERM)
[17:17:19] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Quit: Bridge terminating on SIGTERM)
[17:17:20] *** Quits: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d) (Quit: Bridge terminating on SIGTERM)
[17:17:34] <ProfSimm> epony:  but maybe not
[17:17:46] <epony> it's probably a meaningful gained expression power to have all-caps special variant of the all-small keywords, and captioning to indicate some feature like precedence or weight or intent
[17:18:29] <ProfSimm> epony: maybe but that's more universally realized with blocks () [] {} and unary operators
[17:18:38] <epony> the sigils (prefix and postfix) is another such tooling
[17:18:54] <ProfSimm> epony: caps are adding 26 chars to your alphabet, and to use it for one bit of info is unfortunate
[17:19:22] <epony> yeah, but you can have "print" and "PRINT" and Print and prinT do different things
[17:19:47] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Ping timeout: 252 seconds)
[17:19:47] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[17:19:48] <ProfSimm> epony: APL needed a custom keyboard for all the operators.
[17:20:04] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[17:20:04] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[17:20:04] <ProfSimm> epony: imagine if every capital letter is one additional operator like E is "element of"
[17:20:07] <epony> symbolics borrowed it
[17:20:11] <ProfSimm> epony:   5 E integer
[17:20:17] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[17:20:18] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[17:20:18] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[17:20:27] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[17:20:27] *** Joins: psydroid (~psydroid@user/psydroid)
[17:20:27] *** Joins: jinsun_ (~jinsun@user/jinsun)
[17:20:27] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[17:20:31] *** Quits: nulleip (~luiz@user/nulleip) (Ping timeout: 250 seconds)
[17:20:39] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[17:20:41] <ProfSimm> epony: it can be expressive
[17:20:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:20:51] *** Joins: Stefan911[m] (~stefan911@2001:470:69fc:105::1:cb6d)
[17:20:52] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[17:20:52] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[17:20:54] *** Joins: nulleip (~luiz@user/nulleip)
[17:20:59] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[17:20:59] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:21:08] <epony> that is the real answer to your question, what is more expensive to you and your implementation
[17:21:13] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[17:21:14] *** Joins: ta180m (~ta180m@2001:470:69fc:105::1d3)
[17:21:14] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[17:21:14] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[17:21:14] *** Joins: kinduff (~kinduff@user/kinduff)
[17:21:14] *** Joins: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac)
[17:21:29] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[17:21:29] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[17:21:29] *** Joins: nazarewk[m] (~nazarewk@2001:470:69fc:105::1:2c8d)
[17:21:41] *** Joins: alkberk[m] (~alkberkma@2001:470:69fc:105::1:daa9)
[17:21:53] *** Joins: akselmo (~akselmo@user/akselmo)
[17:21:53] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[17:21:56] <ProfSimm> epony: expressive not expensive
[17:22:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[17:22:04] <epony> (*costs* of effort implementing, or *returns* of capability using)
[17:22:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[17:22:32] <epony> oh, yeah, I moved onto the "technical" details
[17:22:34] <ProfSimm> epony: I want to show identifiers rendered as little tags rendered in small caps.
[17:22:47] <ProfSimm> epony: do you know small caps, some fonts have them
[17:22:51] <epony> yeah
[17:23:06] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:23:07] <ProfSimm> This is just pure 80s nostalgia but all caps UIs look so good man
[17:23:09] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Disconnected. Ah.....)
[17:23:16] <ProfSimm> But they need to be small caps, not shouty caps
[17:23:31] <ProfSimm> and not require shift
[17:23:36] <ProfSimm> hence small caps
[17:23:50] <epony> minimal word processing features can be powerful
[17:23:57] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[17:23:59] <epony> (typeset)
[17:24:30] <ProfSimm> https://www.1001fonts.com/latin-modern-mono-font.html
[17:24:31] <bayaz> Title: Latin Modern Mono Font Family ? 1001 Fonts 
[17:24:51] <ProfSimm> If you scroll this one has small caps
[17:24:53] <ProfSimm> So sexy man
[17:25:57] *** Quits: chomwitt (~chomwitt@2a02:587:dc18:da00:e2ec:eb52:4039:9bfe) (Ping timeout: 256 seconds)
[17:26:05] *** Joins: chomwitt (~chomwitt@athedsl-352218.home.otenet.gr)
[17:28:05] *** Joins: shkurata (~shkurata@ptr-8riebuguuj1m7ooi3ez.18120a2.ip6.access.telenet.be)
[17:31:12] <pyzozord> I'm not sure how I feel about the brutalist arechitecture esthetic. It certainly is very powerful and looks great in movies. But this code is one of the best I ever seen, just judging by the file tree
[17:31:16] <pyzozord> https://github.com/brutal-org/brutal/
[17:31:18] <bayaz> Title: GitHub - brutal-org/brutal: ? An operating system inspired by brutalist design that combines the ideals of UNIX from the 1970s with modern technology and engineering 
[17:31:34] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:31:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[17:31:45] <pyzozord> the exact opposite of https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition/
[17:31:46] <bayaz> Title: GitHub - EnterpriseQualityCoding/FizzBuzzEnterpriseEdition: FizzBuzz Enterprise Edition is a no-nonsense implementation of FizzBuzz made by serious businessmen for serious business purposes. 
[17:33:43] <ProfSimm> pyzozord: author likes newlines
[17:34:58] <ProfSimm> Brutalist actually means "made from concrete", so I suppose this code has no many abstract types :P
[17:35:22] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Quit: ZNC - https://znc.in)
[17:35:55] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 250 seconds)
[17:38:30] *** Quits: favadi (~textual@2001:ee0:4081:6914:7d50:ffb0:7177:22b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:38:33] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[17:38:43] *** Joins: Rayke (rayke@user/rayke)
[17:39:24] *** Quits: moniker- (~mon@dh207-122-170.xnet.hr) (Remote host closed the connection)
[17:39:24] <pyzozord> ignoring everything else, I say this operating system is easier to understand than this fizbuzz
[17:41:07] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[17:41:14] <koollman> ProfSimm: that's not quite what it means. But, yes, exposing the raw material, usually concrete, is part of the style
[17:42:00] <pyzozord> his code is so simple https://github.com/brutal-org/brutal/blob/main/sources/kernel/channel.c
[17:42:01] <bayaz> Title: brutal/channel.c at main ? brutal-org/brutal 
[17:42:46] *** Quits: chomwitt (~chomwitt@athedsl-352218.home.otenet.gr) (Read error: Connection reset by peer)
[17:42:51] <pyzozord> honestly I want to work with code that looks like brutalos code not code that looks like fizzbuzzenterprise code
[17:43:11] *** Quits: tinhatcat (~Thunderbi@2620:103:a000:2201:8ebf:b39b:1976:95a0) (Quit: tinhatcat)
[17:43:16] <ProfSimm> koollman: "beton brut" in French means raw concrete
[17:44:04] <ProfSimm> pyzozord: yup, makes C look like Python
[17:44:09] <koollman> ProfSimm: yes. but brutalism is about the raw (brut) part, not the concrete part (although it is very commonly associated to it)
[17:44:28] *** Joins: snake (~snake@user/snake)
[17:45:25] <pyzozord> also taking design philosophies from architecture and applying them to software is brilliant
[17:46:06] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[17:46:07] <koollman> most software has much more rougher edge beneath the surface though, though :)
[17:46:52] <pyzozord> also I should read more about architecture
[17:48:55] *** Joins: tinhatcat (~Thunderbi@2620:103:a000:2201:8ebf:b39b:1976:95a0)
[17:49:36] <pyzozord> architecture is art that is functional
[17:49:38] <ProfSimm> vdamewood: implemented lookbehind by hand, like a mupper :P
[17:49:40] <ProfSimm> muppet*
[17:50:07] <ProfSimm> pyzozord: architecture is "the part that can't change"
[17:50:09] <ProfSimm> :)
[17:50:23] <koollman> now I wonder what s6 and execline looks like and if an architectural style would fit the description
[17:50:23] <ProfSimm> (well, the part that changest most slowly)
[17:52:04] <pyzozord> well that's true the whole point of SOFTware is that it can change
[17:52:45] <pyzozord> but maybe it's not about mutating a single piece of software but rather about replacing and running differenc pieces of software
[17:53:26] <pyzozord> i dunno
[17:53:45] <pyzozord> not smart enough, but I feel getting some inspiration from architecture migh inform my coding style
[17:53:47] <ProfSimm> pyzozord: software can change on a particular machine, but in an ecosystem, the software changes more slowly than the hardware.
[17:53:48] *** Joins: yewscion (~yewscion@72-21-196-67.amazon.com)
[17:54:28] <pyzozord> ProfSimm: nah, it changes daily, every minute even
[17:54:42] *** Quits: Jaami2 (~Jaami@182.185.161.184) (Quit: Nettalk6 - www.ntalk.de)
[17:54:42] <ProfSimm> pyzozord: getting inspiration from art and architecture is definitely a good thing. We need to learn from other areas of science, art, and engineering. The principles are the same.
[17:55:23] <ProfSimm> pyzozord: Apple has changed its CPU architecture 4 times now
[17:55:27] <ProfSimm> pyzozord: on the same OS
[17:55:34] <ProfSimm> pyzozord: the OS changes, but remains compatible.
[17:55:41] <ProfSimm> pyzozord: imagine if they had to switch to Windows.
[17:55:46] <ProfSimm> pyzozord: which is more impossible
[17:56:24] <ProfSimm> pyzozord: it's tricky. You have parts (applications) and a whole (platform). 
[17:56:36] <ProfSimm> Software is a platform as much as hardware is, sometimes even more.
[17:56:51] <ProfSimm> Because it's more complicated.
[17:57:05] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:57:09] <ProfSimm> Hardware is relatively simple. If you compare what it does.
[17:57:19] <ProfSimm> The hard part is making it real :P
[17:57:20] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com)
[17:57:31] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[18:00:38] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:7196:fee3:b56d:cfbd)
[18:01:02] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-0155-fcd0-86f6-6019.inf6.spectrum.com) (Ping timeout: 260 seconds)
[18:06:02] *** Joins: xiongxin (~Thunderbi@117.136.40.175)
[18:07:27] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 260 seconds)
[18:07:37] <epony> only with itself, and in relatively short periods  Mar28 1425<ProfSimm> pyzozord: the OS changes, but remains compatible.
[18:07:48] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:07:52] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Ping timeout: 260 seconds)
[18:09:03] <epony> and it's not the same OS, because, it changed the binary model and took a different kernel
[18:09:35] *** Quits: bt-01 (~bt-01@49.207.185.155) (Quit: Leaving)
[18:09:44] <ProfSimm> epony: not only with itself, but the apps that run on it. Hence ecosystem
[18:10:01] <epony> commercial operating systems are downstream of standards implementing research and non-commerical / non-profit operating systems like UNIX and related
[18:10:05] <ProfSimm> epony: as for the sliding window, that's a good thing.
[18:11:29] <epony> it's not, since it creates a huge waste and overhead and compatibility problems, but also Unix-like binaries model changed too, the standards remain the same, the OS implementation is subject to "interpretation" by different groups, the applications remain largely portable and transportable
[18:11:34] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:12:04] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[18:12:10] <ProfSimm> epony: it creates "huge waste" to deal with tech debt?
[18:12:25] <epony> it's in the interest of the hardware+software bundle sellers, not an ecosystem, a one company with its commercial and financial profit at the core of its own interests
[18:12:44] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[18:12:50] <epony> the waste is "not having standards" ensuring portability of applications
[18:12:57] <ProfSimm> epony: to have a platform that has no sliding window of compatibility is like running a garbage collected language with the GC off. It'll run faster, all right. And then it crashes.
[18:13:03] <pyzozord> problem is kind of with software depending on software
[18:13:09] <pyzozord> since it's soft, it can change
[18:13:40] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:13:42] <pyzozord> maybe the solution is to put more things in hardware
[18:13:45] <epony> there is no "platform", there are standards and de-facto standards and conventions and interfaces and specifications
[18:13:46] <pyzozord> hardwire the os
[18:13:47] <ProfSimm> epony: standards exist to integrate horizontally across parties, not to freeze things in time.
[18:13:54] <pyzozord> and some libs
[18:14:01] <pyzozord> literally print them in silicon
[18:14:18] <epony> platform is a podium where politicians speak and where they are frozen as stone or metal monuments and piedestals
[18:14:28] <epony> and where you mount your tanks on trains
[18:14:33] <ProfSimm> epony: also "living standard" is a thing
[18:14:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:14:43] <ProfSimm> epony: because if it's not living, it's dead.
[18:14:56] <epony> that's nonsensical ;-)
[18:15:14] <ProfSimm> epony: a standard that is incapable of adapting to a changing environment is doomed to be abandoned
[18:15:20] *** Joins: palasso (~palasso@user/palasso)
[18:15:30] <ProfSimm> epony: that's how life works.
[18:15:33] <epony> you mean standards revisions and improvements resulting in releases and versions
[18:15:37] <ProfSimm> epony: change is the only constant
[18:15:51] <ProfSimm> epony: right, and it means also major versions
[18:15:53] *** Joins: xiongxin1 (~Thunderbi@117.136.39.222)
[18:15:57] <ProfSimm> epony: you know what that means
[18:16:34] <ProfSimm> epony: although I'm more a fan of the sliding window of change management. You deprecate for N releases, then remove.
[18:16:34] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com) (Read error: Connection reset by peer)
[18:16:45] <epony> there is no "living" or "dead" standard, there is one in use and one that is superceded
[18:16:54] *** Joins: jjt (~jjt@user/jjt)
[18:17:16] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com)
[18:17:32] <ProfSimm> epony: maybe you're not familiar with the term. Check "HTML living standard"
[18:17:37] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4.1)
[18:17:46] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:17:52] *** Joins: ddakx (~ddakx@user/ddakx)
[18:18:21] <epony> it's not a creature, it's a specification of certain criteria and has certain properties as do other written documents, although standards implementation ensures portability and compatibility, which your applications need, and which your commercial operating system vendors can not produce or maintain
[18:18:27] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:18:33] <ProfSimm> epony: re
[18:18:57] *** Quits: jjt (~jjt@user/jjt) (Quit: leaving)
[18:19:11] *** Quits: xiongxin (~Thunderbi@117.136.40.175) (Ping timeout: 252 seconds)
[18:19:11] *** xiongxin1 is now known as xiongxin
[18:19:26] <tangy> and it's a creature
[18:19:27] <epony> you see HTML is not a platform, it's a specification by a working group, a document about a document markup language
[18:19:59] <ProfSimm> epony: it's not a standard, it's a specification... ok...
[18:20:00] <epony> you need a better dictionary :-)
[18:20:26] <ProfSimm> epony: I didn't come up with the term 'HTML living standard"
[18:20:27] <epony> s/platform/specification/g
[18:20:35] *** Joins: jjt (~jjt@user/jjt)
[18:20:49] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[18:20:55] <ProfSimm> https://wikidiff.com/standard/specification
[18:20:55] <bayaz> Title: Specification vs Standard - What's the difference? 
[18:21:09] *** herme5 is now known as el_kevino
[18:21:16] <epony> some other person that does not understand terminology and uses literary meta-phorisms
[18:21:32] <ProfSimm> epony: yes, as usual, no one knows words, only you do
[18:21:52] <edgar-rft> HTML is a shit - now compare standard vs specification vs shit :-)
[18:22:14] <ProfSimm> edgar-rft: let's keep the bar higher eh :P
[18:22:31] <Decker> think that's the wrong article... it's 'the' not 'a'
[18:22:39] <epony> now, how are you linking an epithet to the benefits of failing operating system designs.. is your own tooling too, apart from missing terminology
[18:22:50] <epony> seem to be related
[18:23:04] <ProfSimm> wut
[18:24:05] <epony> I told you Apple releases operating systems that are incompatible with anything else other than its own releases and only briefly.. and you go on to tell us how HTML is a living standard and how platforms need sliding windows and failing portability as a good thing.
[18:24:26] <ProfSimm> Yes
[18:24:44] <epony> you can't exactly use Apple as a model of software development ;-) it is unstable and unreliable
[18:25:04] <epony> the hardware has failing compatibility in interfaces too
[18:25:05] <ProfSimm> epony: you're not familiar with Apple dev
[18:25:10] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.65)
[18:26:10] <ProfSimm> epony: they've done insane changes in their ecosystem while your app just runs. Or when you need to compile it for a brand new target, you change almost nothing, or nothing, and check a box in Xcode and compile it
[18:26:19] <ProfSimm> epony: Apple is a good sheppard of its platforms
[18:26:29] <epony> that's wrong and also incorrect
[18:27:15] <ProfSimm> Microsoft in contrast is aggregating a lot of bloat, and still look at Windows 11. Suddenly almost no computer is compatible with it
[18:27:38] <epony> they are both alike, commercial incompatible with the rest of the world, only with their own designs
[18:27:39] *** Joins: Payam59 (~Payam@138.106.57.131)
[18:27:46] <FloridaMan> https://youtu.be/YnL9vAFphmE
[18:27:47] <bayaz> Title: Interview with a Postdoc, Junior Python Developer in 2022 
[18:28:26] <ProfSimm> epony: Linux apps are not even compatible across distros.
[18:28:32] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 252 seconds)
[18:28:51] <ProfSimm> epony: fragmentation is not virtue
[18:29:02] <epony> ProfSimm, you are talking out of your lack of experience and affiliation with commercial incompatible failing operating systems
[18:29:02] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[18:30:00] <ProfSimm> epony: I'm writing this on Windows where i work most of the time, I'm an Apple developer, and run server in Linux and BSD, so tell me how I have no experience.
[18:30:17] <ProfSimm> servers*
[18:30:39] <epony> your points are incorrect, means you're not experience to provide correct points
[18:30:50] <ProfSimm> I'm not experience, ok
[18:31:03] <epony> "experienced" (and returning your previous comment)
[18:31:38] <FloridaMan> "your points are incorrect, therefore you're inexperienced" -- that's kind of a flawed statement
[18:31:52] <ProfSimm> epony: it's easy to say 'you have no experience". The point is I didn't just say it, I remarked you can't possibly say Apple handles compat poorly if you knew what they've gone through
[18:32:05] <epony> you need to advertise operating system incompatibility as a good thing to your customers and clients
[18:32:10] <ProfSimm> epony: Apple does things other platforms can only dream of.
[18:32:44] <ProfSimm> epony: nothing is compatible forever. You're living a lie
[18:33:01] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:91f3:ecf8:6a83:66fa) (Read error: Connection reset by peer)
[18:33:08] <epony> like owning 5% of the market through forced incompatibility and overpriced hardware+firmware+software bundles that require new application rewrites every couple of years?
[18:33:29] <ProfSimm> epony: see, I can't just seriously respond to BS you make up
[18:33:38] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:33:43] *** Quits: justOkay (~justache@user/justache) (Remote host closed the connection)
[18:33:48] <epony> you're incompetent, that's why
[18:33:49] <ProfSimm> epony: Apple is known for the longevity if its support.
[18:33:56] <epony> that's a joke
[18:34:10] <ProfSimm> epony: meanwhile everyone is complaining Android phones get abandoned a year after release
[18:34:17] *** Joins: justOkay (~justache@user/justache)
[18:34:20] <ProfSimm> epony: and that's your Linux kernel in action there
[18:34:32] <epony> Apple is known for incompatible models and software that has the same defects as Microsoft.
[18:35:08] <ProfSimm> epony: https://valorvortech.com/how-long-will-my-phone-be-supported/
[18:35:09] <bayaz> Title: How Long Will My Phone Be Supported? (With 8 Examples) - Valorvortech 
[18:35:19] <ProfSimm> epony: which is the brand with longest support. Read it
[18:35:28] <ProfSimm> epony: it's Apple
[18:35:40] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com)
[18:36:02] *** Joins: Akiva (~Akiva@user/Akiva)
[18:36:06] <ProfSimm> epony: so next time spare me the BS. Linux is just pure fragmentation and everyone is taking turn effin that kernel from behind
[18:36:23] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[18:36:38] <ProfSimm> epony: it doesn't matter what standards you have "in theory". What matters is practice.
[18:36:58] <ProfSimm> epony: Android phones, i.e. Linux kernel phones, have the worst support record of all
[18:37:30] <ProfSimm> epony: the story on the desktop is also just as pathetic, not even a single binary standard yet
[18:38:01] <epony> we're talking about Opearting Systems standards, not brands of resellers, which can't implement standards and don't manufacture even the hardware they are selling
[18:38:11] <nomagno> ProfSimm: epony is expected to be unreasonable at least once a week, but don't answer with more unreasonable stuff pls. It just hurts the chat
[18:38:13] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com) (Ping timeout: 260 seconds)
[18:38:15] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[18:38:42] <nomagno> epony: Do you really have to do this exaggerated sophism so often?
[18:39:29] <ProfSimm> It's 2022 and there's no binary compat among all distros
[18:39:40] <ProfSimm> And that's the shining example of forever compatibility.
[18:39:42] <merijn> nomagno: Empirical evidence, suggests yes
[18:39:54] <nomagno> ProfSimm: Except there is?
[18:40:13] <nomagno> Linux binaries are almosy universally compatible on same-arch glibc distros
[18:40:20] <nomagno> You mean packages.
[18:41:15] <FloridaMan> It's easy to make things compatible with every distro of your OS when your OS only has one distro lol
[18:41:38] <nomagno> ^
[18:41:52] *** Joins: lalitmee (~lalitmee@180.94.33.235)
[18:41:57] <nomagno> Linux distros need to pick everything besides the kernel
[18:42:34] <nomagno> While Windows and MacOS have singular choices for everything, including userspace and formats
[18:42:57] *** Joins: LalitKumar[m] (~lalitmeem@2001:470:69fc:105::1:d56b)
[18:43:18] <pyzozord> btw are things in windows or macos simpler?
[18:43:25] <GeDaMo> https://justine.lol/ape.html
[18:43:25] <bayaz> Title: Actually Portable Executable 
[18:43:26] <ProfSimm> FloridaMan: that's kinda the point
[18:43:34] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 246 seconds)
[18:43:59] <ProfSimm> FloridaMan: it's like saying "how to make it not hurt when I shoot my foot" and I say "don't shoot your foot' and you're like "uh, that's too easy"
[18:44:10] <nomagno> pyzozord: Depends on your definition of simpler. They're almost certainly far more messy architecturally and probably have a comparable amount of code
[18:44:57] <nomagno> Windows more than MacOS is probably hell on earth to navigate in source form, if Microsoft's organization track record is to be trusted
[18:45:20] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[18:45:49] <nomagno> I have to admit it was impressive how well they maintained compatibility up until Windows 7->8 transition
[18:46:00] <pyzozord> I'm not exactly sure what I mean by simpler. I guess I mean things that are easier to understand
[18:46:22] <pyzozord> not the user facing interface, I mean the internals
[18:46:31] *** Joins: kakysha (~kakysha@user/kakysha)
[18:46:33] <FloridaMan> ProfSimm: well the reason there is only one distro of Windows and MacOS is because the source is closed, so it's not possible (practically, anyway). Multiple distros is an effect from having open source: if you're source is open, people are going to turn it into something, and that's usually the desired effect, so I don't get why that's a bad thing
[18:46:51] <FloridaMan> Your*
[18:46:54] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:47:04] <nomagno> pyzozord: They're definitely more complex architecturally, more tangled and harder to understand
[18:47:08] <ProfSimm> FloridaMan: I don't know why you need to state the obvious.
[18:47:26] <ProfSimm> FloridaMan: the bad thing is the fragmentation
[18:47:30] <nomagno> Well, MacOS it's up for debate
[18:47:37] <FloridaMan> I'm saying that's one of the good things
[18:47:46] *** Quits: xiongxin (~Thunderbi@117.136.39.222) (Read error: Connection reset by peer)
[18:47:47] <FloridaMan> One of the only reasons Linux is popular
[18:47:49] <ProfSimm> FloridaMan: and the fact that companies step on top of that FOSS kernel and make closed-source products, so you're doubly effed
[18:48:11] <ProfSimm> FloridaMan: yes, it's popular, like how smoking is popular in some countries
[18:48:43] <nomagno> ProfSimm: I mean, what closed source products are made taking advantage of Linux?
[18:48:59] <ProfSimm> nomagno: Android. 
[18:49:03] *** Joins: zeenk (~zeenk@2a02:2f04:a312:5400:bab:b48f:4ed5:7407)
[18:49:12] <FloridaMan> To allow people creative freedom is to... Well, allow them creative freedom. They can make whatever they want. That doesn't mean it's all good, and it certainly doesn't make everything work together nicely, but that doesn't make it a bad thing.
[18:49:16] <nomagno> ProfSimm: Android is open source.
[18:49:28] <ProfSimm> nomagno: only in part. Let's called it "hybrid source"
[18:49:43] <ProfSimm> nomagno: you know well without the closed source Google services & so on you cna't run most apps
[18:50:22] <ProfSimm> nomagno: and the part that's open, got recently forked by Huawai, and boom, more fragmentation, enjoy
[18:50:27] <ProfSimm> Huawei*
[18:50:29] <nomagno> ProfSimm: I get that daily, yes most users will never touch FLOSS android software :(
[18:50:39] <FloridaMan> ProfSimm: what your saying is a little like "there are too many varieties of potatoes. They should all mash well. I don't bake so just give me potatoes that mash well"
[18:50:51] <pyzozord> nomagno: than linux?
[18:50:52] <nomagno> you get by not using Google services
[18:51:01] <ProfSimm> FloridaMan: maybe pick a better analogy
[18:51:16] <nomagno> pyzozord: Yes, I was comparing the internals to Linux
[18:51:35] *** Quits: snake (~snake@user/snake) (Read error: Connection reset by peer)
[18:51:37] <FloridaMan> ProfSimm: maybe don't avoid the one I provided by insulting it
[18:51:46] <nomagno> Microsoft has like 4 competing functioning solutions to a given problem at the OS-level at any time
[18:51:49] <pyzozord> nomagno: why do you think that?
[18:52:11] <coaxing> ProfSimm: you could just tell him why his analogy doesn't work, according to you.
[18:52:22] <nomagno> While Linux fairly quickly phases outs systems with what the userspace being modular and the only constant being the libc
[18:52:31] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[18:52:39] *** Joins: alefir_ (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[18:52:41] <ProfSimm> FloridaMan: I'm sorry if mashing potatoes is a poor example of the complexity of operating system compatibility
[18:53:30] *** Joins: zeenk2 (~zeenk@2a02:2f04:a313:b800:d260:40a8:2db3:e9ec)
[18:53:40] <nomagno> with Linux you don't usually really see the system critically supporting all legacy init systems, audio systems, graphics systems, driver systems, module systems, etc. At the same time
[18:53:41] <epony> there are more than one standards C library, also what fragmentation do you see in POSIX and portable applications that compile fine on most Unix-like systems, and need special rewrites for Windows and MacOS since they are inccompatible and don't follow anything other than its own market capture decisions?
[18:53:50] *** Quits: zeenk (~zeenk@2a02:2f04:a312:5400:bab:b48f:4ed5:7407) (Ping timeout: 252 seconds)
[18:54:01] <FloridaMan> It seems like a perfect analogy to be. Some distro creator decided they wanted a "potato" that baked better than the one they had that was better for mashing, so they grew their own
[18:54:07] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 260 seconds)
[18:54:08] <ProfSimm> epony: macOS and Windows are POSIX compatible
[18:54:08] <nomagno> If you compare the Linux kernel to the Windows kernel Linux might be more complex
[18:54:15] <FloridaMan> Me*
[18:54:43] <nomagno> Because Windows puts more on the backend library layer
[18:54:51] <nomagno> With what being hybrid and not monolithic
[18:54:57] <ProfSimm> epony: you keep saying things that make you look like not only you don't know, but don't mind making stuff up constantly
[18:55:00] <FloridaMan> The fact that you can't mash a baking potato doesn't make the number of different potatoes available a bad thing
[18:55:03] <nomagno> ProfSimm: Windows isn't POSIX compatible
[18:55:04] *** Joins: snake (~snake@user/snake)
[18:55:14] <snake> dont ddos me, that's illegal
[18:55:18] <snake> whoops wrong channel
[18:55:18] <epony> ProfSimm, compat layers, partial compatibility, non-native, different designs starting from the process creation to all sub-systems and system calls and interfaces
[18:55:22] <FloridaMan> Just as the number of different distros made to do things differently doesn't make Linux a bad thing
[18:55:25] *** Joins: duuude (~user@user/duuude)
[18:55:34] <ProfSimm> nomagno: https://en.wikipedia.org/wiki/Microsoft_POSIX_subsystem
[18:55:35] <bayaz> Title: Microsoft POSIX subsystem - Wikipedia 
[18:55:48] <merijn> "POSIX compatible" is a meaningless term
[18:55:54] <merijn> *which* POSIX spec are you talking about
[18:55:59] <merijn> There's, like, 20+
[18:56:03] <nomagno> ProfSimm: that's not supported anymore
[18:56:07] <merijn> Windows implements some of them (10 or so)
[18:56:08] <ProfSimm> merijn: thanks for making my point I guess
[18:56:20] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Quit: Leaving)
[18:56:25] <ProfSimm> nomagno: keep reading
[18:56:30] *** Joins: px (~px@ool-457980ed.dyn.optonline.net)
[18:56:37] <pyzozord> ProfSimm: I don't think windows is posix compatible
[18:56:39] <ProfSimm> nomagno: it was replaced with this https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux
[18:56:39] <bayaz> Title: Windows Subsystem for Linux - Wikipedia 
[18:56:49] <nomagno> I guess most people care about the POSIX libc and shell layers
[18:56:50] <nomagno> ProfSimm: on it
[18:56:50] <pyzozord> ProfSimm: at least it's shell and utilities are different
[18:56:55] <merijn> pyzozord: As I said, that depends on what you mean by that
[18:57:06] <merijn> pyzozord: POSIX doesn't specify shell and utilities
[18:57:07] *** Quits: lalitmee (~lalitmee@180.94.33.235) (Quit: Leaving)
[18:57:13] <nomagno> WSL 2 is a VM, not a compatibility layer
[18:57:16] <merijn> pyzozord: That'd be the Single Unix Specification v2
[18:57:21] <epony> ProfSimm, face it, commercial systems are incompatible and don't follow standardisation, otherwise they'd have compliance that would reduce their control and dependence.
[18:57:31] <nomagno> WSL 1 hasn't proven great at anything
[18:57:43] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[18:57:56] *** Joins: zeenk (~zeenk@2a02:2f04:a204:c800:8271:db23:e63b:d87a)
[18:58:00] <ProfSimm> epony: so you get to say bunch of wrong stuff, me calling you on it, and your response is 'face it, i am right regardless'
[18:58:01] <pyzozord> merijn: I'm not sure what the difference is, when I say posix, I mean this https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/
[18:58:02] <bayaz> Title: The Open Group Base Specifications Issue 7, 2018 edition 
[18:58:10] <nomagno> merijn: POSIX specifies shell and utilities.
[18:58:19] *** Quits: zeenk2 (~zeenk@2a02:2f04:a313:b800:d260:40a8:2db3:e9ec) (Ping timeout: 256 seconds)
[18:58:21] <nomagno> We are not talking about the same document if it doesn't
[18:58:28] <epony> ProfSimm, that's what I did, not you.
[18:58:38] *** Joins: nf (~n@monade.li)
[18:58:40] <epony> you did say the wrong things that were challenged
[18:58:41] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[18:58:41] <ProfSimm> epony: you literally said a POSIX CERTIFIED OS can't RUN POSIX APPS
[18:58:53] <epony> where?
[18:58:54] <nomagno> pyzozord: that's what I mean too, yes. marijn might only mean the libc part which would be weird
[18:59:18] <ProfSimm> epony: seriousy? you said POSIX apps have to be "ported" to macOS
[18:59:22] <FloridaMan> The philosophy behind open source believes that creating different things with open code is inherently a good thing, and I agree. I don't agree that it's all good, but I believe the fact that things are being created can only be good. It's crucial to progress.
[18:59:44] <epony> I said Apple and Microsoft create incompatible products and force their services on them, incompatible with the rest of the world and between them.
[18:59:49] <FloridaMan> Monopolies are illegal for a reason. Without Linux we just have an oligopoly.
[18:59:52] <ProfSimm> epony: you said POSIX
[18:59:57] <pyzozord> are you guys all angry or is it just me? :P
[19:00:04] <ProfSimm> AAAAAAAAAAAH
[19:00:09] * ProfSimm looks at pyzozord
[19:00:30] <ProfSimm> Anyway.
[19:00:35] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[19:00:42] <beaky> hwo do i better involve more anger in my programming
[19:00:53] <beaky> besides all caps identifiers like in LISP
[19:01:15] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Client Quit)
[19:01:15] <FloridaMan> beaky: emoji comments
[19:01:19] <pyzozord> (btw I mean by "is it just me" "do i get wrong impression")
[19:01:19] <FloridaMan> Hehe
[19:01:21] <epony> ProfSimm, and you believe Apple is creating portable and compatible hardware and software because it once passed the certification by taking some other OS userland and using its own incompatible designs everywhere?
[19:01:29] <nomagno> FloridaMan: Oligopolies are not just the most common illegal thing in business, they're the preferred way most governments have of regulating markets. Modern economy is a shitshow.
[19:01:32] <ProfSimm> FloridaMan: I'll do you one better. Angry emoji var names
[19:01:46] <FloridaMan> Yessss
[19:01:52] <FloridaMan> In PHP
[19:01:52] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[19:01:59] <FloridaMan> See how that works
[19:02:05] <FloridaMan> RAAAAAAGE
[19:02:19] <ProfSimm> pyzozord: my name is ProfSimm and I have internet anger problem.
[19:02:55] <ProfSimm> Only surpassed by my "Safari doesn't support lookbehind regex" anger problem.
[19:03:02] <pyzozord> ProfSimm: I feel like some days are kind of like that. Something something complex systems
[19:03:19] <nomagno> pyzozord: I'm feeling assertively aggressive.
[19:03:53] <FloridaMan> $😡 = array_get($🤬, "😈")
[19:03:59] <pyzozord> yeah so I sensed the general vibe correctly :P
[19:03:59] <ProfSimm> BTW, is there a way to make regex read off a stream, but not assume the end of the stream is the end of the content
[19:04:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:05:07] <pyzozord> ProfSimm: what would that mean
[19:05:13] <nomagno> ProfSimm: Well if the end if the stream isn't the end of the content, what is?
[19:05:20] <pyzozord> connect another stream after first one ended?
[19:05:40] <ProfSimm> nomagno: my point is the current tail end of the content that has arrived is not the end
[19:05:42] <FloridaMan> Oh regex
[19:05:48] * FloridaMan changes channels
[19:06:10] <pyzozord> ProfSimm: if you connect one stream after another, isn't that really just one stream then?
[19:06:16] <ProfSimm> nomagno: imagine you're parsing words, and you await "hello world" and this comes: "hello wor"  your regex will parse hello wor and then "ld" as a separate word
[19:06:44] <nomagno> ProfSimm: Well you need to have the entire chunk. Most of the time you read the stream from stdin, then wait until you have the whole thing, then apply the regex
[19:06:45] <pyzozord> just need some kind of inverse tee pipe or something like that
[19:06:54] <GeDaMo> cat?
[19:07:10] <nomagno> You can't apply regex on incomplete data and expect some kind of mid-regex-stoppage
[19:07:17] <nomagno> That wouldn't be regex anymore
[19:07:23] <pyzozord> or yeah cat, i think that was it's original purpose, before people started using it as print
[19:07:28] <nomagno> It'd be a more powerful language
[19:07:39] <ProfSimm> nomagno: I actually saw a neat trick in Monaco editor, they tokenize per *line*. But they also maintain tokenizer *state*. So you can open a string token with quotes, and you're in string state, which can span N lines before you decide you've seen the closing quote
[19:07:39] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[19:07:46] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[19:07:57] <ProfSimm> nomagno: it's a neat trick, doesn't work for everything, but... 
[19:08:07] <ProfSimm> nomagno: in practice for all programming languages I can think of.
[19:08:30] <ProfSimm> This implies you can stream and feed your tokenizer line by line
[19:08:31] *** Quits: zeenk (~zeenk@2a02:2f04:a204:c800:8271:db23:e63b:d87a) (Ping timeout: 256 seconds)
[19:08:47] <pyzozord> hmm that's pretty interesting, save the internal state of the automanton for each line
[19:09:02] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[19:09:10] <pyzozord> then you can recalulate arbitrary line based of previou's line automaton state
[19:09:14] <Trashlord> I failed a programming challenge
[19:09:21] <ProfSimm> pyzozord: yes, it's unexpected, but kinda obvious, you don't wanna parse the entire source on every keystrone in an editor
[19:09:45] <pyzozord> ProfSimm: that does leave you with a dependency list though
[19:10:00] <Trashlord> I signed up for this service that tries to hook devs with companies. I took the challenge, which gives 30 minutes to solve two problems. I solved the first one in about 10 minutes, easy enough, but the second one was more complicated and I just didn't have time to think about an approach
[19:10:02] <ProfSimm> pyzozord: dep list, what do you mean/
[19:10:12] *** Joins: Enitin (~Enitin@82.180.145.228)
[19:10:32] <pyzozord> ProfSimm: You need to recompute all lines below if their parent's automaton state changed
[19:10:39] <pyzozord> parent as in line above
[19:10:52] <ProfSimm> pyzozord: not all lines, only until a line produces the same state
[19:11:12] <ProfSimm> pyzozord: neat huh
[19:11:13] <pyzozord> oh yeah that's true, after first identical state you don't need to coninue
[19:11:34] <pyzozord> yeah pretty neat
[19:11:40] <nomagno> Trashlord: Well unless you're coming to ask for death penalty before us, the Council of Unwise Nerds, I suggest you keep trying!
[19:11:55] * pyzozord makes another note in the "editor ideas" folder
[19:12:18] <ProfSimm> pyzozord: luckily also the state is quite minimal, many parsers can get away with a single number (context) being their entire tokenizer state
[19:12:24] <Trashlord> nomagno: it's just frustrating to be given so little time
[19:12:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:13:04] <pyzozord> ProfSimm: yes I thought DFA have single state
[19:13:27] <pyzozord> although Thompson was arguing for NFA, I don't know how would that affect the idea
[19:13:56] <ProfSimm> pyzozord: it basically depends on how much of the parsing you move in the tokenizer. Some tokenizers have a stack for nested states
[19:14:03] *** Joins: zeenk (~zeenk@79.115.191.105)
[19:14:04] <pyzozord> that one I think has 2ⁿ statues, if I remember correctly
[19:14:04] <epony> in backtracking and recursive features
[19:14:11] <pyzozord> s/statues/states/
[19:14:52] <ProfSimm> pyzozord: I recall such an issue in a template engine I did some years ago. Because of HTML and so on, the tokenizer itself had to recursively maintain context as it parses
[19:15:01] <ProfSimm> pyzozord: basically mixed language parsers
[19:15:01] *** Joins: snake (~snake@user/snake)
[19:16:27] <oldlaptop> pyzozord: By "single state", you mean they're in a single state at any one time?
[19:16:41] <pyzozord> I wonder how this idea with regexp state cache per line would work with rope data structure
[19:16:48] <Bou> https://tree-sitter.github.io/ might be interesting
[19:16:49] <bayaz> Title: Tree-sitter 
[19:16:55] <pyzozord> oldlaptop: yes that's what I meant
[19:17:30] <ProfSimm> oldlaptop: the state is typically something like "in string"  "in comment" "neither"
[19:17:42] <ProfSimm> oldlaptop: can be a simple enum
[19:18:15] <pyzozord> as far as i can tell DFA is only in a single state at any given time
[19:18:28] <oldlaptop> About the first thing you'd learn about finite automatons as a CS undergrad is that it doesn't turn out to be fundamentally any different from allowing the automaton to be in multiple states at the same time
[19:18:40] *** Inline__ is now known as Inline
[19:18:56] <pyzozord> yes you can have a ton of states for every variation
[19:19:14] <pyzozord> but regexes I think need truly only one state
[19:19:34] <oldlaptop> Allowing the automaton to be "in" multiple states at the same time doesn't change anything except the size of your representation.
[19:19:56] <oldlaptop> (since, after all, each possible combination of states is itself a single distinct state)
[19:19:56] <pyzozord> yes yes I understand that
[19:20:49] <pyzozord> kind of intuitively makes sense to me with my big dashboard with bunch of knobs on it, the whole dashboard is a single state
[19:20:51] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[19:21:24] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[19:21:29] <pyzozord> you could write down all possible states of the dashboard by writing down all possible combinations of values on all knobs
[19:21:47] <oldlaptop> That's how the proof-by-construction that NFAs are equivalent to DFAs goes
[19:22:07] <pyzozord> interesting
[19:22:21] <pyzozord> btw how does DFA representation look like for multiple states?
[19:22:48] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[19:23:16] <oldlaptop> You mean a graph sketched out on paper?
[19:24:03] <oldlaptop> A DFA and NFA drawn out on paper look precisely the same, except that an NFA (by definition) will have multiple valid paths out of at least one state for at least one input.
[19:25:10] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:25:28] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[19:26:09] <oldlaptop> Or, at least, an NFA that is not also a DFA will have nondeterminism. :P
[19:26:32] <ProfSimm> Does it matter if something is NFA or DFA
[19:27:51] <ProfSimm> Isn't DFA just one branch of NFA
[19:28:23] <pyzozord> yeah I know DFA and NFA look the same
[19:28:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:28:50] <pyzozord> but I don't know how DFA with multiple simultaneous statues would look like on paper 
[19:29:48] <pyzozord> oldlaptop: well they don't look exactly the same, DFA can't have two arrows going different ways with identical conditions
[19:30:08] <oldlaptop> pyzozord: In that sense, yes, they don't look exactly the same.
[19:30:14] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[19:30:37] <pyzozord> how does the multistate thingy look like?
[19:30:52] <oldlaptop> I'm still not sure what you mean.
[19:31:08] <oldlaptop> Are you asking what the equivalent DFA to some NFA might look like?
[19:31:14] <pyzozord> 16:49 < oldlaptop> Allowing the automaton to be "in" multiple states at the same time doesn't change anything except the size of your representation. 1
[19:31:22] <oldlaptop> (the answer would be "more or less the same, but with a lot more states")
[19:31:22] <pyzozord> how does the representation change
[19:31:38] <GeDaMo> You'd have to keep track of the multiple states
[19:31:53] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 260 seconds)
[19:32:00] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 272 seconds)
[19:32:14] <pyzozord> so each circle would represent values for all variables?
[19:32:29] <oldlaptop> A proof-by-construction that NFAs and DFAs are equivalent has you enumerate all the possible combinations of states that the NFA could possibly be in, and create one state for each combination.
[19:32:35] *** Joins: bomb (~bomb@user/bomb)
[19:33:03] <pyzozord> oldlaptop: not asking about proof, asking about the graphical representation
[19:33:26] <ProfSimm> In parser generators is there some meaning to writing a leading | on a definition like     expr = | num | str | name;    vs expr = num | str | name;  
[19:33:30] <oldlaptop> It looks like any other finite automaton, but it has waaaay more states than the equivalent NFA.
[19:33:39] *** Joins: jjt (jjt@user/jjt)
[19:33:50] <pyzozord> oldlaptop: but then the representation didn't change, you mentioned changed representation
[19:34:27] <oldlaptop> DFAs, NFAs, and regular expressions are different ways of representing acceptors for regular languages.
[19:34:27] <pyzozord> well nevermind maybe I confused something
[19:34:45] <pyzozord> it probably is: single circle represent states of all variables in the system
[19:35:18] <oldlaptop> NFAs and DFAs are very similar in appearance, but NFAs usually can have much fewer individual state-circles, because the system can be "in" multiple state-circles at once.
[19:35:44] <oldlaptop> The equivalent DFA (if constructed mechanically) needs an individual state-circle for each combination of state circles the NFA could possibly be in.
[19:36:09] <pyzozord> oldlaptop: I think you are missing what I was asking about
[19:36:19] <oldlaptop> I'm pretty sure I am.
[19:36:36] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[19:36:58] <pyzozord> we can try again if you care, but it's also ok to drop it, the idea with single circle representing multiple variables is good enough for me
[19:37:15] <oldlaptop> I don't understand what you mean by that at all.
[19:37:20] <GeDaMo> pyzozord: I think oldlaptop was talking about the representation in the regex matching program
[19:37:33] <pyzozord> ooh hmm ok
[19:37:44] <pyzozord> I though he meant the state graph representation
[19:37:51] <GeDaMo> As in keeping track of all the states you're in currently
[19:37:53] <oldlaptop> That's what I have in mind, yes.
[19:38:05] <pyzozord> oldlaptop: which one, mines or GeDaMos?
[19:38:22] <pyzozord> let me draw what I had in mind
[19:38:30] <oldlaptop> The state-graph representation, with a bunch of circles drawn out on paper, and (directional) edges between them.
[19:38:34] *** Joins: pulse (~pulse@user/pulse)
[19:38:44] <pyzozord> oh man, I need some ascii drawing tool
[19:38:48] <pyzozord> but not now
[19:39:21] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[19:39:27] <oldlaptop> (It'd apply the same way to any other graph representation, though.)
[19:39:28] <epony> graphviz (dot language)
[19:39:31] <pyzozord> hmm what's the simplest DFA
[19:39:35] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Remote host closed the connection)
[19:39:48] <pyzozord> a vending machine?
[19:39:49] <epony> a one state
[19:40:01] <oldlaptop> One initial edge leading directly into the terminal state.
[19:40:35] <oldlaptop> (Or an initial state with one edge leading directly to the final state, depending on how your rules work.)
[19:41:43] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[19:42:02] <pulse> pyzozord, https://asciiflow.com/#/
[19:42:02] <bayaz> Title: ASCIIFlow 
[19:42:19] <deniska> initial state leading nowhere :D
[19:42:23] *** Quits: opeerateur_ (~My_user_n@91.143.220.230) (Ping timeout: 260 seconds)
[19:44:24] <oldlaptop> pyzozord: Have you seen this before? https://swtch.com/~rsc/regexp/regexp1.html
[19:44:25] <bayaz> Title: Regular Expression Matching Can Be Simple And Fast 
[19:44:54] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[19:45:17] <oldlaptop> (The author is mostly concerned with regex implementation strategies, but includes some instructive state-graph representations in the course of that discussion)
[19:46:29] <oldlaptop> The section header "Caching the NFA to build a DFA" (no id= attribute) is just above one example of an NFA and equivalent DFA with states corresponding to combinations of states in the NFA.
[19:46:31] <ProfSimm> Why do so many languages implement regex instead of something more verbose grammar definitions
[19:47:11] <oldlaptop> (In that particular example, the DFA actually has /fewer/ states, because that particular NFA isn't a particularly efficient representation)
[19:47:41] <oldlaptop> (it's just a particularly obvious translation of a regex under discussion)
[19:47:42] <deniska> regexes trade easy of reading for ease of writing
[19:47:46] <deniska> ease*
[19:48:06] <deniska> no readability, but really quick to bang out
[19:48:25] <deniska> and a lot of people are reasonably familiar with them, so it makes sense to make what people are already used to
[19:48:46] <epony> https://en.wikipedia.org/wiki/Glob_(programming)#Compared_to_regular_expressions
[19:48:46] <bayaz> Title: glob (programming) - Wikipedia 
[19:49:33] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:50:27] *** Quits: newwebdev13 (~newwebdev@78.135.91.69) (Read error: Connection reset by peer)
[19:51:04] *** Joins: newwebdev13 (~newwebdev@78.135.91.69)
[19:51:16] <pyzozord> oldlaptop: I meant this https://imgur.com/a/k6GcWEG
[19:51:17] *** Joins: password2 (~password8@user/password2)
[19:51:51] <oldlaptop> we should teach bayaz to translate imgur links to image hotlinks
[19:52:48] *** Quits: newwebdev13 (~newwebdev@78.135.91.69) (Read error: Connection reset by peer)
[19:52:54] <oldlaptop> pyzozord: It's a little tough to analyze that, because it's lacking labels on the transition edges. The first one already looks deterministic to me.
[19:52:56] *** Joins: newwebdev13 (~newwebdev@78.135.91.69)
[19:52:59] <GeDaMo> Direct links are in the header
[19:53:14] <oldlaptop> GeDaMo: I know, I just pulled one out of it. Sounds like a job for a computer. :P
[19:53:24] <GeDaMo> I wrote a greasemonkey script to do it :P
[19:54:10] *** Quits: newwebdev13 (~newwebdev@78.135.91.69) (Remote host closed the connection)
[19:54:19] <oldlaptop> pyzozord: Each transition out of "waiting for drink choice" is associated with a distinct input, correct?
[19:54:43] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[19:55:40] *** Quits: newwebdev13 (~newwebdev@78.135.92.89) (Read error: Connection reset by peer)
[19:55:49] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[19:56:22] <pyzozord> oldlaptop: maybe that's better? https://imgur.com/a/npN8jqT
[19:56:28] <oldlaptop> Compare e.g. https://swtch.com/~rsc/regexp/fig2.png
[19:56:28] <bayaz> Type: image/png 
[19:57:00] <oldlaptop> there are two paths out of s_2 for the input 'b', meaning either the machine has to take them both at once, or it has to magically guess which one is "right"
[19:57:22] <oldlaptop> (it turns out there's no ultimate difference there, theoretically, although obviously a real implementation can't just guess)
[19:58:16] <apotheon> 15:21 < oldlaptop> we should teach bayaz to translate imgur links to image hotlinks
[19:58:19] <apotheon> agreed
[19:58:40] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:58:56] <pyzozord> the only trick is that there cannot be two circles with identical values
[19:59:01] <oldlaptop> pyzozord: The top one is only nondeterministic if we say that it's allowed to take the transition into "hot coffee" for any input (which is what an unlabeled edge in NFAs traditionally means)
[19:59:21] <oldlaptop> The states don't have real "value", just labels to help humans discuss them.
[19:59:25] <pyzozord> oldlaptop: I designed these as DFA
[19:59:30] <oldlaptop> Ah.
[19:59:42] <apotheon> 15:16 < ProfSimm> Why do so many languages implement regex instead of something more verbose grammar definitions
[19:59:58] <pyzozord> forgot to label hot coffee transition in the top one
[19:59:58] <apotheon> because we wouldn't want to use something more verbose in IRC
[19:59:59] *** Joins: biberao (~m@user/biberao)
[20:00:01] <biberao> hi
[20:00:12] <apotheon> too bad ProfSimm isn't here to see that answer
[20:00:27] <oldlaptop> These also are a little different from analyzing automatons in the context of acceptors/rejectors for a language because they don't make a binary choice (i.e. it arrives at the final state and accepts, or can't arrive at the final state and rejects)
[20:00:33] <pyzozord> oldlaptop: yes this example wasn't very good because the single state and multistate have the same number of circles
[20:01:02] <oldlaptop> They're both the same machine, as far as I can tell.
[20:01:11] <oldlaptop> They just have different state labels.
[20:01:12] *** Quits: Payam59 (~Payam@138.106.57.131) (Quit: Client closed)
[20:01:46] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[20:01:52] <oldlaptop> There's certainly no concept of "variables" in finite automatons: the only state information they have is which state (or, depending on how you look at NFAs, which states) the machine is in
[20:02:26] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[20:02:32] <oldlaptop> (I always think of NFAs as being capable of being in multiple states at once, but it's also valid to look at them as being capable of magically guessing which choice is "correct")
[20:02:38] *** Joins: bomb_ (~bomb@user/bomb)
[20:02:51] <apotheon> That's an interesting description.
[20:03:57] *** bomb_ is now known as bomb
[20:04:02] <oldlaptop> If you print those out on paper and trace them yourself, by placing your finger on the state the machine is in, what happens next depends only on which state your finger is on, and which input is next. There's no "variables".
[20:04:25] <oldlaptop> If you do that with an NFA, the only difference is that you need more than one finger.
[20:05:46] <pyzozord> oldlaptop: you said that representation changes, i was wondering how would that look lke
[20:06:05] <oldlaptop> For this machine, I don't see how a non-deterministic version would make sense at all.
[20:06:21] *** Quits: newwebdev13 (~newwebdev@78.135.92.89) (Write error: Connection reset by peer)
[20:06:26] <pyzozord> i don't know why are you coming back to NFA
[20:06:32] <pyzozord> i don't think nfa is related at all to this
[20:07:06] <pyzozord> we were talking about regexp and I said that regexp has only one state
[20:07:13] <pyzozord> one variable
[20:07:33] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[20:07:34] <pyzozord> you mentioned that it can have many variables, and only representation changes because it's still the same machine
[20:08:05] *** Quits: newwebdev13 (~newwebdev@78.135.92.89) (Read error: Connection reset by peer)
[20:08:50] <pyzozord> so I though when you said "representation" you mean these state diagrams
[20:08:58] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb)
[20:09:08] <oldlaptop> I don't think it makes sense to say a regular expression has "states" in the same sense as finite automatons do at all.
[20:10:02] <pyzozord> ok so either I'm confused now or this is a goal post change
[20:10:08] <oldlaptop> A regular expression can be *converted* to an equivalent DFA, to which the same rule applies (i.e. if you print that DFA out on paper, and trace it with your finger, what happens next at any given time will depend only on where your finger is and what the next input is)
[20:10:26] <oldlaptop> I'm pretty sure there's some confusion going on here.
[20:10:43] *** Quits: user51 (~user51@77.124.35.94) (Ping timeout: 246 seconds)
[20:12:15] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Remote host closed the connection)
[20:12:17] <oldlaptop> I don't think I ever spoke of "variables" at all. I did say something to the effect that, given a DFA and NFA that are equivalent to each other, the DFA will probably tend to have more states.
[20:12:42] <oldlaptop> (in the sense of circles on your graph)
[20:13:00] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:78cc:4c57:d99a:217c) (Ping timeout: 240 seconds)
[20:13:03] <apotheon> You only mentioned that finite automata don't have variables.
[20:13:13] <oldlaptop> This was before you jumped in, I think
[20:13:35] <apotheon> 15:31 < oldlaptop> There's certainly no concept of "variables" in finite automatons [. . .]
[20:13:38] <apotheon> That'
[20:13:41] <apotheon> That's pretty much it.
[20:14:44] <oldlaptop> https://bpa.st/TNV6Q6NVMKRAUNTAMMNO3OXWFM
[20:14:45] <bayaz> Title: View paste TNV6Q6NVMKRAUNTAMMNO3OXWFM 
[20:14:56] <pyzozord> yes that part
[20:15:06] <pyzozord> I called them variables
[20:15:11] <pyzozord> lets call them states to be consistant
[20:15:48] <oldlaptop> Allowing it to be "in" multiple states at once (i.e. having an NFA instead of a DFA) means you can represent the same thing (an acceptor for the same regular language) with fewer states.
[20:16:05] <pyzozord> i see so you were talking about NFA all along
[20:16:08] <oldlaptop> In the sense of circles on your whiteboard.
[20:16:11] <pyzozord> I was talking about something different
[20:16:26] <oldlaptop> It's still just as many states in the sense of distinct situations the machine can be in.
[20:16:38] <oldlaptop> You just represent them more compactly.
[20:16:45] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[20:17:16] <oldlaptop> Do you mean that an implementation can concievably track the whole state of the machine as a single variable?
[20:17:24] <pyzozord> yes
[20:17:33] <oldlaptop> I think that's pretty obviously true, although the range of that variable will obviously depend on how many states there are
[20:17:35] <pyzozord> that's what i thought you mean but in reverse
[20:17:59] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[20:18:14] <oldlaptop> In practice I bet few regexes indeed map to a DFA with more than INT_MAX states for any legal (in C) of INT_MAX :P
[20:18:28] <oldlaptop> *value of INT_MAX
[20:18:48] *** Joins: Enitin (~Enitin@82.180.145.223)
[20:20:57] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[20:21:34] <pyzozord> wow this was confusing
[20:21:53] <oldlaptop> sorry about that :(
[20:21:54] <beaky> illegal regexes
[20:22:12] <pyzozord> oldlaptop: not your fault I assumed you were talking about something completely different
[20:22:15] <oldlaptop> beaky: protest signs I want to see: ban backreferences now!
[20:22:31] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[20:22:38] <oldlaptop> (If I can appear to be talking about something completely different than what I actually am, that's a me problem)
[20:23:34] *** Joins: xiongxin (~Thunderbi@117.136.40.183)
[20:23:54] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:7196:fee3:b56d:cfbd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:25] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[20:24:32] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[20:24:55] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[20:25:04] *** Quits: xiongxin (~Thunderbi@117.136.40.183) (Read error: Connection reset by peer)
[20:25:43] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e)
[20:26:32] *** Joins: Tangent-Man (~Tang3nt-M@213.205.240.3)
[20:27:29] *** Quits: Tangent-Man (~Tang3nt-M@213.205.240.3) (Remote host closed the connection)
[20:27:51] *** Joins: Tangent-Man (~Tang3nt-M@213.205.240.3)
[20:28:30] *** Quits: rsx (~dummy@ppp-188-174-141-51.dynamic.mnet-online.de) (Quit: rsx)
[20:28:33] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[20:28:59] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:b567:6867:3798:dbea)
[20:29:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:31:47] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:31:52] <pulse> isn't regex by definition generic, and as such sluggish
[20:32:07] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 260 seconds)
[20:32:19] <pulse> is regex->dfa optimal?
[20:32:41] <oldlaptop> Optimal in what sense?
[20:33:00] <ProfSimm> pulse: regex is typically compiled, so that slaps the "genericness" out of its execution
[20:33:39] <pulse> optimal in the sense of performance
[20:33:52] <pulse> ProfSimm, then why don't we parse html with regex?
[20:34:18] <ProfSimm> pulse: the meme of not parsing HTML with regex comes because people don't write complete parsers using it but basically ad-hoc hacks
[20:34:28] <GeDaMo> regex can't match recursive structures
[20:34:29] <ProfSimm> pulse: it's an issue of correctness, not performance
[20:34:42] <oldlaptop> Intuitively, a parallelized NFA implementation could perhaps be faster.
[20:34:52] <pulse> ProfSimm, i don't really buy that
[20:35:08] <beaky> because if you parse html with regex it summons the elder things https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454
[20:35:09] <bayaz> Title: RegEx match open tags except XHTML self-contained tags 
[20:35:13] <GeDaMo> I saw a paper about vectorized DFAs
[20:35:22] <ProfSimm> GeDaMo: you're technically correct, but there are extensions most support for recursive regex, also with offsets you can switch patterns contextually and recurse
[20:35:32] <oldlaptop> pulse: HTML is not a regular language, and therefore cannot be parsed by regular expressions (which are to be distinguished from practical "regexes", which tend to support things like backreferences)
[20:35:34] <ProfSimm> pulse: why 
[20:35:35] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[20:36:10] <pulse> oldlaptop, fair enough
[20:36:16] <pulse> ProfSimm, idk, i find it unintuitive
[20:36:17] <oldlaptop> I believe some extended non-regular "regex" systems are in principle powerful enough to parse HTML, but of course the expression itself would be a horror.
[20:36:22] <GeDaMo> "Data-Parallel Finite-State Machines" https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/asplos302-mytkowicz.pdf
[20:36:22] <bayaz> Type: application/pdf Size: 288.6 kB 
[20:37:05] <ProfSimm> pulse: I use regex to parse things all the time, including html. I tokenize with regex here for ex.: https://www.coltram.com/proto/assets/js/Parser.tsx (find "private static regex(): RegExp")
[20:37:05] <bayaz> Size: 46.8 kB 
[20:37:59] *** Joins: teut (~teut@103.144.92.246)
[20:38:03] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[20:38:57] *** Parts: vitali64 (~vitali64@user/vitali64) ()
[20:43:29] <bomb> Flutter would be a good choice for mobile dev freelancing?
[20:43:45] <apotheon> maybe
[20:44:25] <beaky> nice i have to try flutter someday it is google's enlightened vision for the future of cross platform application development
[20:44:31] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e) (Ping timeout: 245 seconds)
[20:44:34] *** Joins: Minvera (~Minvera@user/Minvera)
[20:44:52] <Minvera> How do I learn a new large codebase? Am I supposed to be browsing it via doxygen?
[20:46:35] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:3f61:faee:2303:2898)
[20:46:54] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[20:47:00] *** Joins: Tempesta (~Tempesta@user/tempesta)
[20:47:04] *** Joins: jamea (~jamea@200.68.141.36)
[20:47:13] <jamea> jquery css html question hi all, is possible disable enter key in entire webpage?
[20:47:44] <apotheon> Flutter seems to be the one real-world use of Dart.
[20:47:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[20:47:51] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[20:47:57] <apotheon> jamea: Why would you do that?
[20:48:42] <pulse> jamea, yes
[20:48:59] <pulse> you simply add an event listener and call e.preventDefault()
[20:49:48] <pulse> Minvera, paper, pen, and a lot of boxes with arrows representing relationships should work out
[20:50:42] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:51:56] <apotheon> bomb: The biggest problems with Flutter for mobile development might be the fact Dart doesn't have as big an ecosystem of third-party stuff (e.g. libraries) as other languages, and the fact Flutter applications can be pretty big compared to "native" applications (e.g. Java for Android or Swift for iOS).
[20:52:20] <jamea> thanks
[20:52:21] <jamea> pulse
[20:52:25] <jamea> https://stackoverflow.com/questions/895171/prevent-users-from-submitting-a-form-by-hitting-enter
[20:52:25] <bayaz> Title: Prevent users from submitting a form by hitting Enter 
[20:52:33] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[20:52:39] *** Quits: zaher (~zaher@37.48.189.13) (Ping timeout: 250 seconds)
[20:52:48] <bomb> apotheon yeah. Dart doesn't look alien at all, but library scarcity could be a problem for real
[20:53:01] <ProfSimm> bomb: Flutter maybe was a backup strategy if the Oracle case went south. But it didn't
[20:53:12] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:b567:6867:3798:dbea) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:53:29] <apotheon> I dunno.  The Flutter thing seems to be its own thing now.
[20:54:10] <apotheon> I think Google might still want Dart to eventually replace JavaScript, but is taking a different approach to it now than once intended.  Flutter might be the effort to create its first major inroad to broad developer awareness of it.
[20:54:15] <bomb> yeah ProfSimm Fuchsia will eventually replace Android, and Flutter is lingua france in Fuchsia
[20:54:21] <bomb> Samsung and Sony already supports Fuchsia
[20:54:29] <apotheon> If enough people get into Dart, then it would start to make sense to stick it in the browser.
[20:54:52] <apotheon> huh
[20:55:02] <apotheon> I didn't know Samsung and Sony were supporting Fuchsia.
[20:55:21] <ProfSimm> bomb: why is Fuchsia not simple Android ver X
[20:55:27] <ProfSimm> bomb: what are the biggest changes
[20:55:36] <bomb> apotheon yeah, they didn't release a device or somethin yet, but they joined the development
[20:55:44] <apotheon> I think it has a completely different kernel.
[20:55:50] <apotheon> . . . with another weird name.
[20:56:09] <apotheon> Fuchsia seems to be a whole different thing.
[20:56:18] <apotheon> bomb: gotcha
[20:56:20] <GeDaMo> Zircon
[20:56:57] <bomb> ^
[20:57:35] <ProfSimm> apotheon: surely it supports Android apps tho?
[20:57:35] <apotheon> I haven't looked closely enough to see whether Dart suffers some of the same annoying problems as JavaScript.
[20:57:37] <bomb> Android -> Fuchsia transition can be smooth as butter if Google provide a way to run Android apps
[20:57:59] <apotheon> ProfSimm: dunno
[20:58:17] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[20:58:19] <bomb> apotheon yep. it's created for replacing JS originally, has a similar concept, like async/await for concurrency, and such
[20:58:34] <apotheon> How's the type system?
[20:58:40] <bomb> static, thankfully
[20:58:44] <apotheon> oh, okay
[20:58:50] <sonny> bomb: what language?
[20:58:50] <apotheon> seems better in that regard, then
[20:59:07] <bomb> yeah, on par with TS
[20:59:08] <bomb> sonny Dart
[20:59:21] <apotheon> It could be better with a dynamic type system, too, but if it's dynamic I'd need to know more to know if it's shit like JavaScript's.
[21:01:03] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 260 seconds)
[21:01:49] <bomb> meanwhile, JavaScript developers use something called Capacitor for mobile app creation
[21:02:01] <bomb> it's basically WebView like Cordova/Phonegap
[21:02:34] *** Joins: Enitin (~Enitin@82.180.145.223)
[21:03:25] *** Joins: independent56 (~independe@2.26.38.133)
[21:03:41] *** Joins: suss (~user@user/suss)
[21:03:56] <sonny> Does Dart have LTS?
[21:04:14] <bomb> nothing from Google has LTS
[21:04:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:04:23] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[21:04:38] <bomb> https://killedbygoogle.com/
[21:04:38] <bayaz> Title: Killed by Google 
[21:05:39] *** Quits: shkurata (~shkurata@ptr-8riebuguuj1m7ooi3ez.18120a2.ip6.access.telenet.be) (Quit: Leaving...)
[21:05:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:06:13] *** Joins: coaxing (~coaxing@user/coaxing)
[21:06:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:06:51] <independent56> How is my analogy? "Vim is a Japanese chef's knife, thin, sleek and good at one or two tasks very well. Emacs is a multitool, doing many tasks but master of none. VScode is a cutting board, used for everything."
[21:06:59] <independent56> I am wondering how i can improve it.
[21:07:02] <beaky> nah i bet all my bitcoin flutter will be supported long term 
[21:07:08] <beaky> its the future of app development
[21:07:19] <beaky> as ordained by google the most brilliant software company
[21:07:53] <pulse> bomb, not as sad as https://i.imgur.com/duXvROc.png
[21:07:53] <bayaz> Type: image/png Size: 439.0 kB 
[21:08:03] *** Joins: kakysha_ (~kakysha@user/kakysha)
[21:08:09] <pulse> independent56, pretty terrible :p
[21:08:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:19] <pulse> vim isn't good at "one or two tasks"
[21:08:27] <pulse> emacs is more like an OS
[21:08:31] <independent56> I don't have enough experience with anything but Vscode
[21:08:33] <sonny> emacs is the master of all tasks tbh
[21:08:34] <bomb> pulse :(
[21:08:50] <independent56> So Emacs is the kitchen, Vim a powerful multitool, and Vscode the fridge?
[21:09:00] <pulse> independent56, better
[21:09:10] <bomb> vscode is a webpage
[21:09:10] <epony> independent56, you need to add the escape key to retract the blade each time you hammer something with the handle
[21:09:12] <pulse> except vscode is more like the stove
[21:09:21] <pulse> git is the fridge
[21:09:30] <independent56> Ah yes.
[21:09:42] <independent56> How is vscode more like a stove? Dangerous if misused :p?
[21:09:56] <epony> pulse, someone else's disposable storage
[21:09:59] <bomb> index.htm nothing more
[21:10:21] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 256 seconds)
[21:12:41] <apotheon> independent56: I don't think your analogy makes any sense at all.
[21:13:51] <pulse> few analogies make sense
[21:14:30] <pulse> train wagons as linked list works
[21:15:57] <apotheon> Emacs is a knife with eight handles and twenty blades.  Vim is a knife with three flip-out blades, but they can be replaced; the handle is long enough for two hands, but it has no guard, so be careful when stabbing.  VSCode is one of those electric turkey carving knives.
[21:16:43] <independent56> Ah, makes sense
[21:16:51] <apotheon> One of Emacs' blades is actually a hammer.
[21:17:11] <apotheon> One of Emacs' handles is actually an ice pick.
[21:17:14] <independent56> So you're saying VScode needs power, is frivolous, and is expensive
[21:17:27] <apotheon> hmm
[21:17:44] <apotheon> That's a pretty clear take-away from the analogy, but I'm not sure "frivolous" is entirely fair.
[21:17:54] <apotheon> every analogy has limits
[21:18:29] <apotheon> Okay, here it is: Rather than frivolous, it's suitable to people who have weak wrists and thus need the extra help of a reciprocating blade when carving turkey.
[21:18:33] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:18:38] <independent56> Makes sense
[21:18:56] <epony> the aux handle is in the wrong part of the machine  https://i.redd.it/q7xmzdqtjv341.png
[21:18:56] <bayaz> Type: image/png Size: 8.9 MB 
[21:19:11] <sonny> It seems that url bars don't support ipv6 addresses
[21:19:21] <sonny> weird
[21:19:21] <independent56> I use it. it makes code like word processing
[21:19:38] *** Joins: Cashlin (~hp@user/cashlin)
[21:19:43] <sonny> independent56: that's my idea for an ide tbh
[21:20:09] <independent56> I'll look into emacs and vim in the future
[21:20:12] <sonny> Something like 'pressing tab' doesn't actually mean anything for most languages when it comes to source code
[21:20:14] <apotheon> epony: That's hilarious.
[21:20:15] *** Quits: jjt (jjt@user/jjt) (Remote host closed the connection)
[21:20:18] <ProfSimm> So Android's replacement has no Linux kernel. So long, Linux kernel.
[21:20:28] <epony> ;-)
[21:20:49] <ProfSimm> I wonder what Linus will do when no one uses linux
[21:20:54] <apotheon> It also fits with my personal feelings about both RMS and Emacs.
[21:21:22] <apotheon> ProfSimm: use FreeBSD
[21:21:31] *** Joins: morte_ (~user@190.104.116.153)
[21:21:45] <apotheon> Realistically, he'd probably just retire.
[21:22:11] <ProfSimm> apotheon: is he rich
[21:22:52] <ProfSimm> What is Dart anyway. It used to be a competitor to TypeScript, compiled to JS
[21:22:58] <epony> in humourous ways, he is
[21:23:01] <apotheon> probably at least financially comfortable
[21:23:01] <ProfSimm> Now it has its own VM
[21:23:21] <apotheon> well . . . off to a meeting soon
[21:24:16] <epony> https://www.youtube.com/watch?v=D1TC1n9lhXU
[21:24:17] <bayaz> Title: Fiddler on the Roof (4/10) Movie CLIP - If I Were a Rich Man (1971) HD 
[21:24:25] *** Quits: kittyn (~kittyn@096-039-144-255.res.spectrum.com) (Quit: Read error: 2.71828182846 (Excessive e))
[21:25:27] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[21:26:44] <pulse> independent56, https://i.imgur.com/IWzK7jJ.png
[21:26:44] <bayaz> Type: image/png Size: 934.7 kB 
[21:27:31] <ProfSimm> epony: https://www.youtube.com/watch?v=zNBqQqI8CWw
[21:27:32] <bayaz> Title: Doctor octopus if I were a rich man 
[21:28:48] *** Joins: jjt (jjt@user/jjt)
[21:29:37] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 256 seconds)
[21:29:59] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[21:30:43] <independent56> https://i.imgur.com/5lTqIIc.png
[21:30:43] <bayaz> Type: image/png Size: 135.1 kB 
[21:30:45] <independent56> pulse, 
[21:31:08] <pulse> that's very sterile
[21:31:37] <independent56> On the inside, they're all made of the same things - arbituary numbers :p
[21:33:28] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[21:33:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) ()
[21:33:50] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:34:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[21:34:40] <bomb> https://getstream.io/blog/instagram-clone-flutter/
[21:34:41] <bayaz> Title: Coding an Instagram Clone With Flutter and Feeds 
[21:35:16] *** Joins: moniker- (~mon@dh207-122-170.xnet.hr)
[21:35:45] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[21:35:58] <pyzozord> pulse: https://cdn.hackernoon.com/hn-images/1*j80tBUC6gFi6E6mCqGUTrw.jpeg
[21:35:59] <bayaz> Type: image/jpeg Size: 49.0 kB 
[21:36:08] *** Joins: wauterboi (~wauterboi@185.65.135.237)
[21:36:17] <pulse> pyzozord, seems legit
[21:36:25] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175)
[21:36:55] *** Joins: Tempesta (~Tempesta@user/tempesta)
[21:37:03] *** Quits: alefir_ (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir_)
[21:38:18] <CyberTailor> bomb: russia wants to launch its instagram clone
[21:38:18] <pyzozord> anyone read this? https://www.bu.edu/csmet/2018/08/30/re-reading-tanenbaums-critique-of-rpc-30-years-later/
[21:38:20] <bayaz> Title: Re-Reading Tanenbaum?s Critique of RPC 30 Years Later | Computer Science 
[21:38:23] <pyzozord> can someone give me a tldr :P
[21:38:39] <bomb> CyberTailor heh. for Android-only?
[21:38:42] <pyzozord> (kind of along shot but hey)
[21:39:03] <bomb> they need an onlyfans clone first
[21:39:15] <CyberTailor> bomb: both android and ios
[21:39:16] <sonny> pyzozord check if it is a hn thread
[21:39:39] <pyzozord> sonny: good idea
[21:40:02] <pyzozord> but to be honest I don't know if I like the comments in hn, they are often deceptive
[21:40:40] <pyzozord> I read few about things I knew few things about and there were such misinformed yet confident and deceptive comments I almost believed them myself
[21:41:10] <ProfSimm> pyzozord: sometimes truth is relative
[21:41:19] <ProfSimm> In fact, always I'd say.
[21:41:23] <sonny> pyzozord tbh you have to know a lot to read hn
[21:41:26] <ProfSimm> But let's not be so drastic
[21:41:30] <sonny> I made that mistake myself
[21:41:41] <bomb> CyberTailor it's strange Apple didn't already lock all the iPhones in Russia
[21:41:43] <ProfSimm> sonny: eh, it's just folks like you and me
[21:41:49] <sonny> so I either read the article or looks at topics I'm familiar with
[21:42:05] <sonny> ProfSimm: no there's a lot of pros on there
[21:42:15] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Ping timeout: 250 seconds)
[21:42:16] <ProfSimm> bomb: that'd be dumb
[21:42:29] <pyzozord> sonny: To read to understand what is said? not really. To read to sieve truth from misinformation? Yes.
[21:42:51] <bomb> ProfSimm no dumber than any other sanction applied to individuals
[21:43:06] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 268 seconds)
[21:43:31] <CyberTailor> bomb: profits are profits
[21:43:32] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:44:02] <sonny> pyzozord: yeah
[21:44:35] <sonny> if you can then it's also humorous and interesting, if not then it's really unhelpful
[21:45:34] <pyzozord> so today at work a collegue literally told me that I work too hard
[21:46:02] <pyzozord> that's why I believe I'd do well in freelance
[21:46:08] <pyzozord> I like my work
[21:46:33] <ProfSimm> bomb: it's one thing to temporarily deny you the right to buy a new shiny. Another to block a device you paid for and leave countless people with no communication and crucial services.
[21:46:34] <sonny> or, he's lazy
[21:46:40] <koollman> if you work too hard in freelance, nobody will stop you and you'll burn out :)
[21:46:50] <beaky> how do we overcome burnout in programming
[21:47:07] <ProfSimm> beaky: more programming
[21:47:07] <koollman> most common problem for freelancers is to bill at least as much as the actual time and costs involved
[21:47:13] <pyzozord> beaky: we pace ourselves
[21:47:28] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:39] <pyzozord> but honestly it fits my style
[21:47:49] <pyzozord> i wanna do crazy work and then i don't want to look at work at all
[21:47:51] <ProfSimm> bomb: the real reason many businesses suspended in Russia is that they're international busineses and after the financial sanctions the Ruble plummeted.
[21:48:05] <ProfSimm> bomb: they're suspending business, not trying to cause a disaster
[21:48:07] <independent56> I still don't know why it is a shock the develooper community has so few LGBT people when in actual popualtions, the amount is 1%. And according to the SO survey, it is much more in developer communities.
[21:48:16] <pyzozord> being slightly occupied by work all the time is worst, you can't focus on other things
[21:48:40] <epony> start each paragraph with commands like d5d to make it paste-resist in vi* will teach people to recreate texts from memory, that will prevent burnout (be careful, it might cause spontaneous detonations and implosions in public spaces)
[21:48:43] <ProfSimm> independent56: never heard anyone being "shocked" about that, or even thinking that
[21:48:48] <pyzozord> and I'm not freaking 23 anymore. I've been around. Don't tell me how I should manage myself
[21:48:53] *** Joins: inky (~inky@178.78.135.57)
[21:48:54] <pyzozord> I did for 14 years
[21:49:04] *** Quits: noteness_ (~noteness@user/noteness) (Remote host closed the connection)
[21:49:07] <sonny> independent56 lgbt is new ...
[21:49:09] <independent56> "There’s still so much work to be done to ensure the developer community is more inclusive."
[21:49:33] <independent56> The awareness and acceptance is new, LGBT people have been around since people have been around.
[21:49:38] <ProfSimm> independent56: eh this is simply interests group trying to find a reason to exist
[21:49:40] <sonny> lol no
[21:49:47] *** Joins: noteness (~noteness@user/noteness)
[21:49:49] <sonny> it's a new concept
[21:50:10] <ProfSimm> sonny: it's a new concept to keep adding letters until it's the entire alphabet
[21:50:15] <ProfSimm> The rest is not so new :P
[21:50:27] <sonny> nothing is new I guess
[21:50:29] <pyzozord> independent56: generally people flock to programming when they are bothered by other people. It pays well and it deals with people less
[21:50:42] <independent56> Makes snese
[21:50:44] <independent56> *sense
[21:51:24] <ProfSimm> pyzozord: so it's super attractive to detach from society and become a computer part
[21:51:29] <ProfSimm> pyzozord: interesting
[21:51:36] *** Quits: inky_ (~inky@46.36.114.138) (Ping timeout: 245 seconds)
[21:51:53] <ProfSimm> pyzozord: we're all little cogs in a new big machine we made
[21:52:19] <sonny> 127.0.0.1 and ::1 are distinct loopback addresses because they use different schemes?
[21:52:21] <pyzozord> yeah, that's the more or less the closes to "yall leave me the f alone" most poor idiots like myself can get
[21:52:46] <sonny> pyzozord: according to matt might the lone wolf coder is extinct
[21:53:00] <pyzozord> sonny: thats pretty much true
[21:53:06] <sonny> may have to update your facts database :P
[21:53:15] <pyzozord> sonny: but you deal with similar people and there is more understanding for you
[21:53:26] <pyzozord> that's why I said "the closes to"
[21:53:29] <pyzozord> closest*
[21:53:45] <sonny> that's my point, you require social skills now
[21:53:57] <pyzozord> yes
[21:54:03] <pyzozord> very much so
[21:54:09] <pyzozord> but it's still better than in other jobs
[21:54:24] <sonny> ok, I get your point
[21:54:34] <sonny> (those other jobs are more social too)
[21:54:37] <pyzozord> I don't need to read the newspaper, i'm in the front line :P
[21:54:45] <sonny> heh
[21:56:15] <pyzozord> but yeah this is not a job for the truly antisocial types
[21:56:39] <pyzozord> I'm a severe case but I manage
[21:56:42] <beaky> how do i be more antisocial in programming
[21:56:59] <epony> write more self modifying code
[21:57:08] <pyzozord> I never met one but I imagine there must be some people that just cannot be working in a team environment as a member
[21:57:22] <pyzozord> for example Jon Blow, I bet he would be the most aweful team member ever.
[21:57:36] <bomb> who is Jon Blow?
[21:57:39] <pyzozord> He worked on the Witness in a team, but he paied these people and managed them
[21:58:03] <pyzozord> so this was still a power position with "if I get angry you will do what I say or you will not get money"
[21:58:22] <beaky> jonathan blow the most brilliant indie game developer
[21:58:23] <pyzozord> I can't imagine him as a normal dev in a team
[21:58:43] <pyzozord> he did work in AAA studios in teams but that was long time ago
[21:58:48] <beaky> creator of the jai programming language whose key innovation is that it is somehow better than rust and lets you turn arrays of structs into structs of arrays i think
[21:58:58] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[21:59:10] <epony> pivotall
[21:59:37] <pyzozord> yes the aos/soa is really a minor thing he came up with one day and implemented another day
[22:00:02] <beaky> i program with structs of arrays because my tea database needs to be maximally efficient
[22:00:04] <pyzozord> just a bit of syntactic sugar as far as I understand it
[22:00:53] <epony> ever heard the term "memory cylinder" (rotating disks don't have it either)
[22:01:02] <pyzozord> I think the compile time execution and the context with allocators are the big ideas
[22:01:24] <pyzozord> but I didn't follow it very closely so I'm not sure what else is there
[22:02:06] <pyzozord> ugh google stop showing me your shorts!
[22:02:13] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:02:14] <pyzozord> it's not appropriate!
[22:02:30] <pyzozord> s/google/youtube/
[22:03:19] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[22:03:31] <pyzozord> I really feel like I'm in some absurd alterantive reality
[22:03:45] <pyzozord> I don't care for new "wizarding world" movie
[22:03:46] <epony> now you know the next best thing (new and novel), multilane/multichannel memory
[22:03:51] <pyzozord> I don't care about youtube shorts
[22:04:03] <epony> ^ see, there are new things still
[22:04:05] <pyzozord> I don't give a crap about any of this utter nonesense
[22:04:11] *** Quits: zeenk (~zeenk@79.115.191.105) (Quit: Konversation terminated!)
[22:04:57] <sonny> pyzozord I'm actually impressed at the amount of iterations of similar software when I stopped to think about it
[22:05:42] <pyzozord> I don't want to talk about netflix shows, I don't want to know where you went on vacation and I really don't give a crap about olympics
[22:05:49] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:88cb:32a4:618d:21c7)
[22:05:49] <sonny> I wonder how tiktok came to prominence as a video sharing service ... this all because you can't even share videos with your friends using your OS
[22:06:04] <pyzozord> who cars about this stuff, it's just a bunch of people running fast and jumping high, who cares I ask
[22:06:09] <ProfSimm> pyzozord: tell me where Google touched you
[22:06:12] <bomb> ProfSimm just cancel the entire Russian population. problem solved!
[22:07:07] <pyzozord> sonny: it was tiktok, shorts, vine, instagram videos it's all the same crap with different branding
[22:07:07] <epony> careful there with the cancellations, there is mutual assured cancellation for a long time already
[22:07:13] <sonny> epony: any insight?
[22:07:16] <sonny> pyzozord yeah
[22:07:37] <epony> sonny, always
[22:07:50] <pyzozord> ProfSimm: I'm getting off google completely. I'm moving to hosted email
[22:07:51] <sonny> I think it means that facebook and twitter are not immortal
[22:07:57] <pyzozord> screw google
[22:08:00] <bomb> sonny are truckers canceled in Canada yet?
[22:08:09] <sonny> it's interesting the amount of iterations of stuff
[22:08:18] <pyzozord> still will use youtube though
[22:08:20] <sonny> bomb: I don't know
[22:08:26] <pyzozord> but maybe I'll sign out
[22:08:42] <bomb> your not Canuck enuff!
[22:08:44] <sonny> people in ottawa were pissed but I dunno much else
[22:09:54] <beaky> why arent there more efficient alternatives to mmap() for databases that do not have the drawbacks of mmap() (like poor performance or nondeterminism about io)
[22:10:06] <pyzozord> I really am experiencing a cognitive dissonace like I live in some mad world where everyone is just mad. People don't want to talk about interesting stuff, they only want to talk about boring stuff
[22:10:22] <beaky> boring stuff like tea and databases
[22:10:31] <pyzozord> like this channel is just about the only place that wants to talk about interesting stuff sometimes
[22:10:36] <pyzozord> well maybe a frined or two
[22:10:39] <pyzozord> but that's it
[22:10:46] <sonny> beaky: I think windows has some stuff
[22:10:47] *** Joins: swp (~Thunderbi@2001:610:450:90::2:1016)
[22:11:02] <sonny> afk
[22:11:04] <beaky> yes if only tiktok had videos about cubical type theory so i can finally understand higher groupoids
[22:11:11] <pyzozord> utter boring nonesense, I feel like im on a completely different wave the most of the world
[22:11:23] <pyzozord> </rant?
[22:11:26] <pyzozord> </rant>
[22:12:19] <beaky> on other platforms like windows i think the equivalent to mmap has the same issue
[22:12:58] <pyzozord> at least I have my own cli browser now, not everything is lost just yet
[22:13:11] <pulse> pyzozord, most people are shallow and dumb. for example you go into university and it's bad form to actually discuss the subjects you're studying
[22:13:14] <beaky> nice do you use gemini
[22:13:33] <pulse> you're supposed to hate the subjects and talk about petty, irrelevant things instead
[22:13:39] <pulse> people are simply dumb
[22:13:52] <bomb> pandemic ended or not?
[22:14:04] <pulse> most people have no inspiration in them, no higher vision, no greater interest
[22:14:10] <beaky> gemini is nice its like the web but more plain text and menu based
[22:14:11] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[22:14:11] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[22:14:11] *** Joins: tane (~tane@user/tane)
[22:14:14] <pyzozord> beaky: I use bro. Here is bro: http://bpa.st/KR6A
[22:14:16] <bayaz> Title: View paste KR6A 
[22:14:54] <pyzozord> beaky: it can read http and http websites and print a readable text instead of html. Also it follows redirects
[22:15:12] <pyzozord> pulse: it is?
[22:15:14] *** Joins: tangyQED (~tangy@user/tangy)
[22:15:19] *** Quits: wauterboi (~wauterboi@185.65.135.237) (Ping timeout: 246 seconds)
[22:15:35] <pyzozord> pulse: well I was thinking about going to university in few years for day studies
[22:15:38] *** RazielZ is now known as Raziel
[22:15:43] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[22:15:53] <pulse> pyzozord, yes, in all my years of schooling i've met exactly 1 person who i was able to actually exchange meaningful conversation with with regards to the studies
[22:16:06] <pyzozord> but this doesn't sound so great if people don't want to discuss things they are studying. If I'm going to university that's because I am really interested in these things that I am studying
[22:16:07] *** Joins: Farty (Farty@gateway/vpn/protonvpn/farty)
[22:16:10] <beaky> database studies
[22:16:10] <pulse> the other 99.99% wanted only to talk about getting drunk
[22:16:16] <pulse> because that's their peak intelligence
[22:16:34] <bomb> getting drunk is fun, and leads to more intellectual discussions
[22:16:46] <pyzozord> I don't get that.
[22:16:47] <pulse> no, getting drunk is stupid primate behavior
[22:16:49] <beaky> getting tea drunk
[22:17:01] *** Quits: swp (~Thunderbi@2001:610:450:90::2:1016) (Ping timeout: 245 seconds)
[22:17:02] <pyzozord> it's kind of as if people did things they didn't really want to do
[22:17:09] <pyzozord> I really do want to do what I do
[22:17:12] *** Joins: swp1 (~Thunderbi@143.176.249.0)
[22:17:23] <pulse> pyzozord, like alan watts said. you go and study philosophy, and you never talk about philosophy with your peers, because it's bad form. you talk about politics instead. university politics.
[22:17:40] <pulse> it just goes to show that the vast majority of people have no idea what they even want in life
[22:17:55] <pulse> that's why creative people end up lonely and isolated
[22:18:26] <pulse> i had a great deal of fun studying for my university classes, but i was apparently the only one
[22:18:27] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 252 seconds)
[22:18:31] <pyzozord> there is a difference between alone and lonely. I honestly feel more lonely when I'm around (most) people
[22:18:31] <pulse> everyone else hated it
[22:18:46] *** Joins: user51 (~user51@77.124.35.94)
[22:19:30] *** swp1 is now known as swp
[22:19:44] <pyzozord> like in one previous company we had biweekly hall meetings
[22:19:50] *** Quits: tangyQED (~tangy@user/tangy) (Ping timeout: 272 seconds)
[22:19:57] *** Quits: avu (~jan@user/avu) (Remote host closed the connection)
[22:20:11] *** Joins: avu (~jan@user/avu)
[22:20:14] <pyzozord> people usually standed as far from the speaker as possible, far enough that it wasn't clear what was being said
[22:20:23] <pyzozord> utter waste of time
[22:21:06] <pyzozord> you stand there pretend to listen and hear nothing. Then why did you come here at all. Make space for people who are hear to listen to this
[22:21:27] <pyzozord> Since i'm forced to be here I might as well listen, otherwise is just wasted time, not fun not useful...
[22:21:32] <pyzozord> I don't get that
[22:21:32] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[22:21:47] <pyzozord> ok </rant></rant> I'm sorry
[22:21:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[22:22:28] <bomb> nested rants? lol
[22:22:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:22:36] *** Joins: raym (~raym@user/raym)
[22:22:40] <beaky> rant overflow
[22:23:13] <pyzozord> yes sorry it was a coredump
[22:23:41] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 245 seconds)
[22:25:00] *** Joins: Florida (~FloridaMa@user/floridaman)
[22:25:02] *** Joins: tangy (~tangy@user/tangy)
[22:25:03] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 260 seconds)
[22:25:08] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[22:25:16] <edgar-rft> lol, there really is ##rant with 8 peeps online :-)
[22:25:19] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:25:32] *** Quits: Florida (~FloridaMa@user/floridaman) (Read error: Connection reset by peer)
[22:27:07] <pyzozord> btw do you guys know if in ed/vi addresses lik /foo/,/bar/ is it search for bar after foo or are these indeptendent?
[22:27:19] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[22:27:52] <pyzozord> say I want to delete all lines between line with "foo" and line with "bar" would :/foo/,/bar/d be correct
[22:28:07] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[22:28:26] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Quit: Leaving)
[22:28:30] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[22:28:42] <bomb> pyzozord https://i.kym-cdn.com/photos/images/original/002/312/861/e2a.png
[22:28:43] <bayaz> Type: image/png Size: 441.9 kB 
[22:29:37] *** Quits: xbkkd (~F0@user/xbkkd) (Remote host closed the connection)
[22:30:36] <ProfSimm> Isn't it odd how randomly in for () things are separated with semicolons, and not commas
[22:31:09] <pulse> no, commas in for have different semantics
[22:31:13] <beaky> the semicolons let you use the comma operator
[22:31:39] <pulse> for (i = 0, j = 10; i < 10; i++, j--)
[22:31:59] <ProfSimm> pulse: comma for immediate execution and semicolon for expression to execute again
[22:32:01] <ProfSimm> ?
[22:32:11] <ProfSimm> pulse: I know we can have commas in there, but not everywhere there
[22:32:16] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[22:32:49] *** Joins: llh (~UPP@user/llh)
[22:32:50] <ProfSimm> Why not have commas and semicolons in arguments
[22:32:51] <Bou> for (a; b; c) d(), e(), f();
[22:33:53] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[22:34:21] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[22:34:38] <DPA> Syntax is always just entirely made up.
[22:34:57] <sonny> so it seems like (compilers), chat, video sharing, document/file sharing, conferencing are the accessible markets. More technical stuff like professional services for accounting, engineering etc, operating systems, cloud, games, and office suites are difficult to get into
[22:35:17] <ProfSimm> DPA: sure but it has to be deeply consistent
[22:35:25] <sonny> The latter ones seem more 'stable'
[22:35:30] *** Quits: Leone (~Leo@216.154.12.122) (Read error: Connection reset by peer)
[22:35:38] <sonny> apart from games
[22:36:29] <DPA> You just have to define which interpretation to prefer in ambiguous cases. Anything goes.
[22:37:14] <pyzozord> I think go does it well. It never expents parens for the predicate but always expects curlies for the code block
[22:37:23] <pyzozord> and it has tuple assignments
[22:38:39] <sonny> yeah that was a great choice
[22:38:57] <pyzozord> so it ends up for i, j := 0, 10; i<10; i++, j-- { ... }
[22:39:11] <pyzozord> well i adedd the spaces in ird places
[22:39:28] <ProfSimm> pyzozord: frankly that's weird
[22:39:54] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[22:40:03] <pyzozord> for i,j:=0; i<10; i++,j-- { ... }
[22:40:04] <ProfSimm> I think if you have special parsing syntax for a for loop, your language failed
[22:40:17] <pyzozord> I'm not sure if i++,j-- is legal though
[22:40:29] <ProfSimm> People should be able to make their own for loop, therefore you can't rely on a parser for it
[22:41:21] <pyzozord> it's essnetially for <one-two-or-three-expressions> { <block> }
[22:41:29] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:42:09] <pyzozord> looks really good most of the time much better than what c does where predicate requires parents but the block doesn't require curlies
[22:42:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:42:51] *** Joins: hololeap (~hololeap@user/hololeap)
[22:43:21] *** Quits: ivanf (~ivan@user/ivanf) (Ping timeout: 250 seconds)
[22:44:01] <user51> ah, the feeling of all the little blocks suddenly connecting and it all works..
[22:44:43] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyti4ik7brch6u.ipv6.telus.net)
[22:44:54] *** Joins: ivanf (~ivan@user/ivanf)
[22:45:10] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[22:45:13] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:46:13] <pyzozord> is there a way to wrap output to just 80 lines in linux?
[22:46:53] <GeDaMo> fold
[22:46:56] *** Joins: flaqoniun (~F@32.211.211.39)
[22:47:25] <pyzozord> thanks
[22:49:16] <pyzozord> I think it doesn't work well with utf8
[22:50:12] <DPA> Another way: sed 's/.\{80\}/\0\n/g'
[22:50:12] <DPA> Probably won't work any better with utf-8. though
[22:51:08] *** Quits: fe23 (~fe23@2409:8a34:466:6010:e450:a807:7ddd:9d33) (Quit: fe23)
[22:51:21] <pyzozord> curl https://www.bu.edu/csmet/2018/08/30/re-reading-tanenbaums-critique-of-rpc-30-years-later/ | grep 'Distributed OS. Where in the so-called' | fold -w 80 | less
[22:51:22] <bayaz> Title: Re-Reading Tanenbaum?s Critique of RPC 30 Years Later | Computer Science 
[22:51:37] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[22:52:52] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[22:53:14] <sonny> alternatively reading mode works ...
[22:53:19] <flaqoniun> confirmed systemDbus h8er?
[22:53:38] *** Quits: password2 (~password8@user/password2) (Ping timeout: 252 seconds)
[22:54:01] <oldlaptop> pyzozord: Commas are perfectly legal in C's for(;;), because , is an operator.
[22:54:39] <oldlaptop> If go also makes , an operator (which I would expect offhand?), I would expect go to be the same way
[22:54:58] <user51> 21:10 < ProfSimm> People should be able to make their own for loop, therefore you can't rely on a parser for it
[22:55:05] <user51> ProfSimm: what advantages does that give?
[22:55:34] *** Quits: ivanf (~ivan@user/ivanf) (Ping timeout: 246 seconds)
[22:56:02] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:3f61:faee:2303:2898) (Ping timeout: 260 seconds)
[22:56:22] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[22:56:24] <pyzozord> DPA: looks like sed handles unicode better, it cuts words in random places, but thanks maybe this won't bother me
[22:56:29] <ProfSimm> user51: much simpler parser, much more flexible parser, and ability to mold the language for the purpose, instead of needing N languages for N use cases.
[22:56:35] *** Joins: flaqoniun (~F@32.211.211.39)
[22:56:46] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:57] *** Joins: kakysha_ (~kakysha@user/kakysha)
[22:57:40] <user51> ProfSimm: any ideas for programs which could benefit from that?
[22:57:44] <oldlaptop> (oooh it apparently doesn't: https://go.dev/ref/spec#Operators)
[22:57:45] <bayaz> Title: The Go Programming Language Specification - The Go Programming Language 
[22:57:52] <ProfSimm> user51: any
[22:58:04] * oldlaptop is that much less interested in go
[22:58:27] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[22:58:45] <pyzozord> oldlaptop: thanks I didn't know comma was acctually an operator
[22:59:05] <pyzozord> I didn't think about it really, I just used it without thinking
[22:59:06] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:b82f:d979:b282:ce17)
[22:59:25] <oldlaptop> If I read this correctly, it'd only be legal in go's for if there is special syntax for it
[22:59:40] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:d860:33a3:a28f:c27)
[23:00:04] <pyzozord> might be, I think go a bit more restrictive
[23:00:20] <oldlaptop> in C (exp1, exp2) evaluates exp1 and exp2 in that order (significant because (exp1 op exp2) does not in general define the order in which exp1 and exp2 are evaluated), and yields the value of exp2
[23:00:40] *** Joins: gareppa (~gareppa@user/gareppa)
[23:01:10] <oldlaptop> unfortunately and confusingly, f(arg1, arg2) does *not* define the order in which arg1 and arg2 are evaluated :|
[23:01:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 245 seconds)
[23:02:33] <pyzozord> do you mean UB?
[23:02:39] <ProfSimm> oldlaptop: if the same syntax works diferently in different places, your language has failed
[23:03:04] <ProfSimm> oldlaptop: I'm not saying C has failed I mean.... it just failed in the eyes of God :P
[23:03:13] <oldlaptop> pyzozord: The sequence in which exp1 and exp2 are evaluated in an expression like (exp1 + exp2) is not specified.
[23:03:14] <ProfSimm> So just God
[23:03:29] <ProfSimm> oldlaptop: oh I think that's specified
[23:03:39] <ProfSimm> oldlaptop: + is left assoc
[23:03:40] <oldlaptop> If the overall result depends on that order (as it would in some abomination like (i++ + i++), then you have UB.
[23:03:41] <GeDaMo> pyzozord: https://earthly.dev/blog/text-mode/
[23:03:42] <bayaz> Title: What About A Plain Text Web 
[23:03:51] *** Joins: jazzy (~jaziz@user/jaziz)
[23:03:53] *** Joins: inky_ (~inky@46.36.114.138)
[23:04:38] <ProfSimm> -> or => for lamdba
[23:04:40] *** Quits: inky (~inky@178.78.135.57) (Ping timeout: 246 seconds)
[23:05:03] <pyzozord> GeDaMo: nice, it does hn quite well https://earthly-tools.com/text-mode?url=https://news.ycombinator.com/news
[23:05:11] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:05:22] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[23:06:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[23:06:11] <pyzozord> GeDaMo: here is how my code currently does it (I need the urls to be there) https://bpa.st/JL2A
[23:06:12] <bayaz> Title: View paste JL2A 
[23:06:16] <pyzozord> I just added the wrapper
[23:06:41] <pyzozord> But I want to change the text formatter to something more readable
[23:06:45] <pyzozord> probably custom
[23:06:46] <oldlaptop> see e.g. http://c-faq.com/expr/evalorder2.html
[23:06:46] <bayaz> Title: Question 3.2 
[23:07:03] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 260 seconds)
[23:07:39] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[23:08:23] <oldlaptop> (, produces a "sequence point", where most binary operators do not)
[23:08:43] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:09:47] <pyzozord> but it's working pretty ok for that article http://bpa.st/I3SA
[23:09:49] <bayaz> Title: View paste I3SA 
[23:10:35] <pyzozord> I use https://pkg.go.dev/github.com/jaytaylor/html2text right now
[23:10:36] <bayaz> Title: html2text package - github.com/jaytaylor/html2text - pkg.go.dev 
[23:11:04] <pyzozord> but I looked at the code, is very simple and uses go's standard library for html parsing, I can write my own text printer based on the ast
[23:11:36] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[23:11:38] <pyzozord> one that prints paragraphs of text with links as [1] and [2] and below each paragraph it would have [1] http://example.com/stuff
[23:11:39] *** Joins: stanlib (~archblade@user/stanlib)
[23:11:54] <pyzozord> like foot notes after each paragraph
[23:12:31] <sonny> ProfSimm ->
[23:12:48] <sonny> double arrow means implication iirc
[23:12:58] <sonny> (or 1000 or things)
[23:13:05] <sonny> s/or/other/
[23:13:41] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[23:13:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:13:50] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:15:35] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[23:15:52] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 246 seconds)
[23:16:18] <sonny> Does google have a discover service outside of the one built into their search engine?
[23:16:27] <sonny> aka their knowledge graph thing
[23:16:45] <sonny> I think discovery could be a lot better (and profitable)
[23:18:01] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[23:21:25] *** Joins: Auron (~Auron956@user/auron)
[23:21:28] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (Ping timeout: 246 seconds)
[23:22:14] *** Joins: xbkkd (~F0@user/xbkkd)
[23:23:22] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:23:31] *** Joins: qwaddles (~qwaddles@2603-8080-7005-5266-38b8-d941-34d0-6e05.res6.spectrum.com)
[23:23:51] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[23:24:01] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:24:38] *** Joins: justOkay (~justache@user/justache)
[23:24:44] *** Joins: Twipply (~Twipply@user/twipply)
[23:24:57] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[23:26:34] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[23:26:37] <qwaddles> brackets should be placed on the following line and not the end of the line :)
[23:27:54] <bomb> depends on your organization's style guide
[23:28:06] <ProfSimm> sonny: cool
[23:28:44] <bomb> at my previous company in defense industry, we're only allowed mullet haircuts
[23:29:01] <ProfSimm> bomb: as a programmer?
[23:29:20] <qwaddles> bomb, yeah, just trying to stir shit up XD
[23:29:59] <qwaddles> mullet haircuts eh?
[23:31:21] <qwaddles> buisness in the front, and a party in the back 
[23:31:45] *** Joins: magla (~gelignite@d53668d6.access.ecotel.net)
[23:31:50] <bomb> ¯\_(ツ)_/¯ can't fight the style guide
[23:32:15] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.65) (Ping timeout: 260 seconds)
[23:32:46] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Remote host closed the connection)
[23:33:26] *** Joins: Akuli (~Akuli@87-94-109-66.bb.dnainternet.fi)
[23:35:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9ce0:4e24:4ca7:ce8)
[23:38:17] *** Quits: xbkkd (~F0@user/xbkkd) (Remote host closed the connection)
[23:40:10] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[23:40:14] <epony> now you know how emos feel
[23:40:32] *** Joins: snake (~snake@user/snake)
[23:40:54] <pulse> is it anything like how emus feel
[23:41:11] <epony> more like the style guide causing you trouble
[23:41:41] <beaky> i think maybe i should give up my rewrite of my tea database in rust 
[23:42:00] <pyzozord> beaky: how come
[23:42:00] <beaky> since i miss being able to prove my functions correct in coq or agda maybe i should try idris
[23:42:26] <pyzozord> oh haha, and here I was thinking that maybe rust was too annoying for you
[23:42:27] <epony> it means you've just re-discovered covfefe
[23:42:35] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[23:42:41] <beaky> no rust is great i like the borrow checker
[23:42:57] <beaky> but it just lacks higher kinded types let alone dependent types (which are required to prove things correct)
[23:43:20] <beaky> soon in the next nightly maybe rust will get higher kinded types but not dependent types anytime soon
[23:43:29] <pyzozord> beaky: can you give example of higher kinded type and dependent type?
[23:43:37] <pyzozord> beaky: also are you familiar with typescript?
[23:43:53] <beaky> no i have to check out typescript (i think that has higher kinded types)
[23:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:31] *** Joins: VoidSync (~sync@user/voidsync)
[23:47:10] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:47:11] *** Quits: snake (~snake@user/snake) (Ping timeout: 260 seconds)
[23:48:42] <ProfSimm> beaky: you can't prove most programs
[23:48:42] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[23:48:58] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[23:49:02] <beaky> higher kinded types are when you are allowed to require parameters in type parameters (rather than just a simple type) an example of a non higher kinded type (but which are useful as parameters for higher kinded types) are your usual generic data structures since those only take simple type parameters like T but imagine if you wanted to abstract a type T that itself takes another type a so
[23:49:05] <beaky> you can define a type F that takes as one of its parameters 'T a' so you can abstract over any possible kind of 'container type'
[23:49:11] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[23:50:09] <beaky> so if you have F then you can pass it Array (which itself takes a parameter T) you can get F<Array<T>> that F is a higher kinded type
[23:50:31] *** Quits: wodencafe (~wodencafe@woden.cafe) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[23:50:36] <beaky> ok reading about typescript seems it does not have higher kinded types (so just like rust)
[23:51:00] <beaky> ProfSimm: yes at the very least i want to verify database data structures and algorithms correct
[23:51:14] <ProfSimm> beaky: ah the tea
[23:51:20] <beaky> since i will do a lot of bit manipulations on bitmaps that represents trees (of teas)
[23:51:34] <beaky> like the equivalence between rank() and select() on bitmaps
[23:51:38] <ProfSimm> beaky: well my advice is to trust billions of years of evolution and do what nature does
[23:51:49] *** Joins: opeerateur_ (~My_user_n@178.220.220.180)
[23:52:21] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[23:52:49] <beaky> simple types: String, first-order (generic) types: Array<String>, higher-kinded types: Functor<Array<_>>
[23:52:54] <ProfSimm> beaky: as for your specific algorithms, can't you prove them in Coq or something like that and then implement it in whatever
[23:53:06] <beaky> but then i duplicate work in coq and rust 
[23:53:16] <pyzozord> beaky: why is Array<Int> not a higher kinded type?
[23:53:40] <ProfSimm> beaky: you do, but an algorithm is generic in principle. Code-specific algorithm would be an odd thing
[23:53:55] <beaky> it is first order because the type you pass Array is not allowed to itself have any parameters
[23:54:20] <pyzozord> beaky: is T<U<V<X>>> a higher higher-kinded type than T<U<V>>?
[23:55:00] <beaky> yes exactly
[23:55:09] <pyzozord> so rust doesn't have this?
[23:55:23] <beaky> yes rust doesnt even have T<U<X>> it only has T<X>
[23:55:41] <pyzozord> I honestly thought that these are just generics, and that's how all generics in all languages work
[23:56:30] <pyzozord> thanks for explaining, also what about dependent types?
[23:56:44] *** Quits: opeerateur_ (~My_user_n@178.220.220.180) (Ping timeout: 272 seconds)
[23:57:15] <beaky> yes many popular lanugages have generics but only scala and maybe c++ are the only popular lagnuages that let you define deeper 'nesting' in the types 
[23:57:52] <beaky> (theres also the related rank-n polymorphism where you have deeper 'nesting' in function polymorphism)
[23:58:09] <jinsun> Haskell too (or maybe that doesn't count as popular)
[23:58:20] <pyzozord> I only knew c++ templates and tyepscripts type parameters
[23:58:28] <beaky> yes haskell maybe more popular than i think
[23:58:37] <pyzozord> I think both are generics and both let you you do nested
[23:58:44] <beaky> in c++ there is template-template parameters that is sorta like higher kinded types
[23:59:09] <beaky> soon rust will have that
[23:59:39] <bomb> Rust needs another 10 years to catch C++
[23:59:50] <beaky> dependent types are types that take values (whereas generics in most languages only take types as parameters)
