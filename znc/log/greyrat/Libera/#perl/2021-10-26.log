[00:00:16] *** Joins: deadmarshal (~deadmarsh@95.38.114.198)
[00:04:29] *** Quits: deadmarshal (~deadmarsh@95.38.114.198) (Ping timeout: 244 seconds)
[00:05:22] *** Quits: jaytee80 (~jaytee80@fw.bmd.cpii.com) (Quit: Client closed)
[00:06:13] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Quit: Leaving...)
[00:07:15] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[00:08:45] <zgu> wow i need to put some kind of intake air filter on this computer
[00:09:12] <zgu> was just replacing a rear fan and noticed the floor of the case is covered in little tiny dead flies
[00:09:36] <shaldannon> time to de-bug the computer
[00:10:32] *** Joins: kylese (~kylese@p5dd8b9b1.dip0.t-ipconnect.de)
[00:10:41] <zgu> i know right
[00:13:35] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[00:16:56] * GumbyPAN CPAN Upload: libwww-perl-6.58 by OALDERS https://metacpan.org/release/OALDERS/libwww-perl-6.58
[00:17:14] <xenu> i know oracle is scary but it's very easy to upgrade centos to oracle linux in-place
[00:18:38] <xenu> https://linux.oracle.com/switch/centos/
[00:18:39] <Paperbot> Link title(s): [ Oracle Linux: A better alternative to CentOS ]
[00:18:49] <El_Che> xenu: now you are scaring me
[00:19:09] <El_Che> xenu: you never had an Oracle audit?
[00:19:15] <xenu> i love how self aware they are and their faq explicitly says "This is not some gimmick to get you running Oracle Linux so that you buy support from us."
[00:20:34] <shaldannon> LOL
[00:20:38] <shaldannon> yeahsureright
[00:21:09] *** Quits: Oele (~Oele@5.57.21.48) (Quit: Client closed)
[00:21:30] <xenu> tbh i probably wouldn't risk using it at work, but for personal use it isn't a terrible option
[00:22:50] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[00:24:54] *** Quits: pizdets_ (~pizdets@183.182.111.255) (Quit: pizdets)
[00:26:39] *** Joins: pizdets (~pizdets@183.182.111.255)
[00:26:50] *** Joins: jaytee80 (~jaytee80@fw.bmd.cpii.com)
[00:27:25] <jaytee80> Doing the PDL rpm now. Most of the libs "not found" for optional features are for stuff I added. *I* deserve this pain personally.
[00:28:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 244 seconds)
[00:31:57] * GumbyPAN CPAN Upload: URI-5.10 by OALDERS https://metacpan.org/release/OALDERS/URI-5.10
[00:31:57] * GumbyPAN CPAN Upload: WWW-Mechanize-2.06 by OALDERS https://metacpan.org/release/OALDERS/WWW-Mechanize-2.06
[00:41:58] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.35 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.35
[00:49:25] *** Quits: kylese (~kylese@p5dd8b9b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:51:08] *** Joins: furrymcgee (~devuan@cgn-89-1-210-103.nc.de)
[01:08:52] *** Joins: ritsch_master (~ritsch_ma@178.115.33.85.wireless.dyn.drei.com)
[01:09:40] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 260 seconds)
[01:14:08] <ritsch_master> anyone in here has some guidelines on how to properly describe signatures using perldoc?
[01:14:19] <ritsch_master> *subroutine signatures
[01:16:25] <ilmari> perldoc: perlsub#Signatures
[01:16:25] <perlbot> ilmari: Your documentation is available at: https://perldoc.perl.org/perlsub#Signatures
[01:16:30] <ilmari> ritsch_master: ^^
[01:18:23] <ritsch_master> so i do not want to use the experimental feature
[01:18:42] <ritsch_master> also there is no type hinting
[01:19:15] <ritsch_master> is type hinting a bad habit to do in perl? :S
[01:19:39] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[01:21:40] <ilmari> subroutine signatures are still experimental, so if you want to use them you have to turn on the experimental warning
[01:22:01] *** Joins: xenial-user10 (~androirc@3ec97c6f.catv.pool.telekom.hu)
[01:22:19] <ilmari> it's generally a bad habit to try to do things that don't exist, and there is no type hinting in perl
[01:22:28] <ilmari> s/warning/feature/
[01:22:57] <ritsch_master> i know that there is none. but is it a bad habit to indicate a type in the subroutine documentation?
[01:22:59] <ilmari> some OO frameworks have type constraints, but that's not the same, that's runtime checks on values
[01:23:21] <ilmari> no, it's good to document what kind of values a sub expects
[01:23:54] <ritsch_master> well that's what i am after
[01:24:01] <ilmari> and it can be useful to check it at runtime too (with libraries such as https://metacpan.org/pod/Params::ValidationCompiler)
[01:24:02] <Paperbot> Link title(s): [ Params::ValidationCompiler - Build an optimized subroutine parameter validator once, use it forev... ]
[01:24:56] <ritsch_master> i am fine with doc hinting. i just wanted to check if there are some guidelines
[01:25:07] <ritsch_master> e.g. in python you can do something like "my_param: int"
[01:25:18] <ritsch_master> which will be checked at runtime. but i do not need that
[01:25:43] <ritsch_master> documenting it is sufficient for me. i just do not want to reinvent the wheel in the documentation conventions
[01:25:44] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[01:25:57] <LeoNerd> There's no firm conventions on docs.
[01:27:08] <ritsch_master> well 
[01:27:43] <ritsch_master> then there will be one more new standard i guess :D
[01:28:24] <LeoNerd> It's very vaguely on my list of things to think about
[01:28:31] <LeoNerd> But so are so many other things already, that.. eh.. timing
[01:30:01] <ritsch_master> nah, i meant that i have to reinvent the wheel for my little project then. or at least copy it from another one
[01:32:04] *** Quits: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[01:32:43] *** Joins: proller (~p@2a02:6b8:b081:8831::1:29)
[01:36:35] <jaytee80> now this is a dep hell. My proj interface part of PDL was modified to use Alien::Proj4 to find the external dep... but now A::P4 want a extremely high min version that's only got an rpm from SUSE (that won't build on rocky). rocky installs proj6, EL7 used 4.8. A::P4 wants at least 4.9 but not 6. Uggggh 
[01:37:30] <sivoais> jaytee80: i don't know that much about RPM packaging, but if you have any PDL build questions, #pdl on the irc.perl.org is open
[01:37:57] * Grinnz bitten once again by javascript functions not returning the last evaluated expression if you omit explicit 'return'
[01:38:20] <jaytee80> I may have to. I contributed the Proj/GD interfaces to PDL years ago, but haven't done more than use them since. 
[01:39:22] <Grinnz> ritsch_master: as far as any convention for this in perl goes, most things concisely document the expected arguments and return value types via well-chosen variable names in a short synopsis directly after each function's heading; see Mojolicious docs for good examples
[01:39:43] <sivoais> jaytee80: oh nice! I'm currently setting up CI workflows for all the PDL subrepos. Trying to get ready for work on making PDL much simpler to install (creating a smaller core)
[01:39:46] *** Joins: e1f (~user@141.117.1.142)
[01:39:55] <jaytee80> Holy hell, grabbing the 4.8.0 specs and just changing the version number to 4.9.3 worked!
[01:40:04] <Grinnz> ritsch_master: you can also be more explicit if you want, just make sure to keep the section headings to only the function name, so they can be linked to on documentation sites
[01:40:11] <jaytee80> patches for 4.8.0 applied to boot!
[01:40:24] *** Joins: v^ (~v@user/ctrl)
[01:40:43] <Grinnz> ritsch_master: e.g. https://metacpan.org/pod/Mojo::Util#decode
[01:40:44] <Paperbot> Link title(s): [ Mojo::Util - Portable utility functions - metacpan.org ]
[01:41:34] <jaytee80> PDL is easy to install if you dont need all the external libs (you know the parts I added... lol my fault). I should update it to not need Proj4 some day. The bad news is I wrote a code gen that slurped the proj.h file to make that interface. 
[01:43:17] <jaytee80> I took over the HDF4 interfaces for a while and extended them, but I think someone else is in charge of that one now.
[01:43:41] *** Quits: v` (~v@user/ctrl) (Ping timeout: 244 seconds)
[01:46:19] <sivoais> jaytee80: well #pdl could always use more hands :-P (we've even got some IRC notifications going on there to track what's going on with all the projects)
[01:47:05] * GumbyPAN CPAN Upload: Config-AWS-0.090002-TRIAL by JJATRIA https://metacpan.org/release/JJATRIA/Config-AWS-0.090002-TRIAL
[01:50:59] *** Quits: ritsch_master (~ritsch_ma@178.115.33.85.wireless.dyn.drei.com) (Remote host closed the connection)
[01:52:40] *** Joins: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net)
[01:52:58] *** Quits: xenial-user10 (~androirc@3ec97c6f.catv.pool.telekom.hu) (Ping timeout: 244 seconds)
[01:56:46] *** Quits: proller (~p@2a02:6b8:b081:8831::1:29) (Ping timeout: 245 seconds)
[02:01:32] *** Quits: jess (~jess@libera/staff/jess) ()
[02:07:40] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[02:07:48] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:08:58] *** Joins: whynot (~whynot@46.96.175.207)
[02:10:43] *** Joins: proller (~p@80.240.216.69)
[02:14:53] <vanfanel64> news reporting that over 8 million tons of cheese were thrown overboard from a container ship
[02:16:28] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[02:19:59] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[02:20:14] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:24:23] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe) (Ping timeout: 264 seconds)
[02:25:43] <ilmari> (X) Doubt
[02:25:44] <jaytee80> The one of PNW?
[02:26:09] <jaytee80> off
[02:29:20] <greyrat> How do I do `/sth/ && (print "x", exit)` properly?
[02:30:54] <Adura> Does that not do what you intend?
[02:32:07] <greyrat> Adura: Even `perl -e "print 7 && exit"` does not print anything for me.
[02:32:51] <alh> That's because && is binding 7 and exit together
[02:32:55] *** Quits: pizdets (~pizdets@183.182.111.255) (Ping timeout: 260 seconds)
[02:32:55] <ilmari> greyrat: because && has higher precedence than list operators
[02:32:59] <alh> print('7') && exit
[02:33:12] <greyrat> Thanks
[02:33:15] <ilmari> or 'print 7 and exit'
[02:33:26] <ilmari> note that your prompt migh be overwriting it, since there's no trailing newline
[02:33:34] <greyrat> So `and` is `&&` but with a lower precedence priority?
[02:33:39] <ilmari> yes
[02:33:45] *** Joins: pizdets (~pizdets@183.182.110.228)
[02:33:48] <ilmari> ditto `or` and `||`
[02:34:47] <ilmari> but there's no low-precedence `//` and no high-precedence `xor`
[02:37:55] *** Quits: treefrob (~treefrob@p2e54293e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:38:03] *** Quits: Pali (~pali@user/pali) (Ping timeout: 260 seconds)
[02:45:15] *** Quits: whynot (~whynot@46.96.175.207) (Quit: leaving)
[02:51:07] *** Joins: treefrob (~treefrob@p2e5421a1.dip0.t-ipconnect.de)
[02:51:21] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[02:57:13] * GumbyPAN CPAN Upload: Catalyst-Plugin-CurrentComponents-0.009 by JJNAPIORK https://metacpan.org/release/JJNAPIORK/Catalyst-Plugin-CurrentComponents-0.009
[03:01:27] <aquanight> 17:04:48/B62FE < ilmari> but there's no low-precedence `//` and no high-precedence `xor` ## wat
[03:02:03] <aquanight> sweval: 37 xor 14
[03:02:04] <perlbot> aquanight: No output.
[03:02:20] <aquanight> sweval: 37 ^ 14
[03:02:21] <perlbot> aquanight: 43
[03:02:30] <aquanight> nani dafuq
[03:02:42] <aquanight> is xor boolean xor? tf is the point of that
[03:03:23] <Grinnz> yes
[03:03:39] <Grinnz> xor is to ^ as or is to |
[03:03:53] <aquanight> except or is ||
[03:03:57] <Grinnz> exactly
[03:03:59] <aquanight> but there isn't a ^^
[03:04:02] <Grinnz> it's a different operation
[03:04:11] <Grinnz> ^ is bitwise xor
[03:04:45] <aquanight> and | is bitwise or while || is boolean or, there's no ^^ for boolean xor and I still question why we want a specific boolean xor operator to start with
[03:04:49] <Grinnz> my biggest problem with it is that ^ should be exponentiation
[03:05:05] <aquanight> nah I actually like ** better
[03:05:11] <alh> if ($exclusivea xor $exclusiveb) { print "One of these things is set. Great!\n" }
[03:05:12] <aquanight> because then hypothetically it could be expanded on
[03:05:21] <alh> Semi common operation
[03:05:37] <aquanight> alh: if ((!$exclusivea) != (!exclusiveb))
[03:05:40] <Grinnz> huh, i could probably use xor in some cases i didn't think of before
[03:05:41] <xenu> it's not something you use everyday, but it is useful
[03:05:45] <Grinnz> aquanight: horrid
[03:05:50] <alh> That's just confusing
[03:06:15] <Grinnz> defined($foo) xor defined($bar) could be really useful 
[03:06:16] <aquanight> ** gives room for having a *** tetration operator
[03:06:55] <Grinnz> sure, anytime the mathematicians invent that
[03:07:06] <aquanight> I don't think anyone needs a tetration operator in perl
[03:07:15] <aquanight> but it could happen
[03:07:16] <Grinnz> s/ in perl//
[03:07:29] <aquanight> the operations exist
[03:07:35] <aquanight> is there applications of them? probably fucking not.
[03:07:50] <aquanight> other than mathematicians wanting to swing their big number dicks around
[03:08:04] <xenu> $n \/- $x # $nth root of $x 
[03:08:05] <aquanight> lol 7 ******* 7
[03:08:18] <aquanight> xenu: ... $x ** (1/$n)
[03:08:30] <xenu> mine is prettier
[03:09:02] <aquanight> forget \/- try √
[03:09:12] <aquanight> we need more unicode operators
[03:09:13] <xenu> this is perl, not raku!
[03:09:25] <aquanight> hmm
[03:09:27] <Grinnz> ooh, i should support √ in Math::Calc::Parser
[03:09:48] <Grinnz> then i could support ∛ too
[03:10:01] <aquanight> perlbot: sweval BEGIN { *√ = \&CORE::GLOBAL::sqrt; } √ 4
[03:10:02] <perlbot> aquanight: ERROR: Unrecognized character \x{221a}; marked by <-- HERE after ;BEGIN { *<-- HERE near column 86 at (IRC) line 1. 
[03:10:17] <aquanight> damn
[03:10:20] <Grinnz> gonna assume that's not a word character
[03:10:23] <xenu> is it possible to compose any digit into √ or is it harcoded?
[03:10:27] <aquanight> it probably isn't
[03:10:32] <Grinnz> xenu: hardcoded, they're unique codepoints
[03:10:59] <Grinnz> there's just ∛ and ∜
[03:11:45] <xenu> someone should submit an rfc to the unicode consortium
[03:11:59] <Grinnz> they'd make it an emoji
[03:12:02] <aquanight> you could probably do it with some kind of joiner or something
[03:12:26] <aquanight> isn't there combining marks or some fuckery
[03:12:42] <aquanight> or is that just the ' ` " : nonsense
[03:12:47] <Grinnz> combining 3
[03:12:51] <Grinnz> or zero width joiner
[03:14:09] <aquanight> but yeah no. I'm pretty sure shit like tetration, hyperoperations, arrow notation, etc. basically only exist for mathematicians to just invent big numbers
[03:14:28] <aquanight> that literally nobody needs
[03:14:52] <aquanight> I'll just stick to "umpteen fucktillion" thank you very much.
[03:40:48] *** Quits: e1f (~user@141.117.1.142) (Quit: goodnight...)
[03:46:32] *** Quits: Maff (maff@user/maff) (Read error: Connection reset by peer)
[03:47:44] *** Joins: Maff_ (maff@user/maff)
[03:53:30] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[03:54:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[03:58:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:05:36] *** Joins: proller (~p@2a02:6b8:b081:8025::1:37)
[04:08:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[04:20:26] <sivoais> i'll take one Avogadro's number of that please
[04:23:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:28:03] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:29:11] *** Joins: gce108 (~gce@user/gce108)
[04:36:09] <aquanight> what possible sense is there in a number that "spelled out would require more atoms than exist in the universe"
[04:36:36] <aquanight> I realize the real numbers are technically unbounded so these are perfectly cromulent numbers
[04:36:53] <aquanight> but what fricking realistic situation would ever give rise to one?
[04:37:18] <xenu> numbers aren't exclusively used to count physical things
[04:37:23] *** Quits: Su-Shee (~Susanne@p508946ab.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[04:37:40] <xenu> for example, how many possible states those atoms have?
[04:37:54] <aquanight> and there are numbers bigger than *that*
[04:38:59] *** Joins: Su-Shee (~Susanne@p50894023.dip0.t-ipconnect.de)
[04:40:27] *** Joins: leitz_ (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[04:41:09] *** Quits: leitz_ (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Client Quit)
[04:59:05] <cjac> xenu: do you know of any x.509 certificate generation perl libraries?
[05:11:15] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:22:12] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Quit: Leaving)
[05:24:10] <xenu> why specifically me?
[05:24:45] <Adura> Your name starts with x.
[05:25:40] <xenu> anyway, there are a few on cpan, e.g. Crypt::OpenSSL::CA and Tiny::OpenSSL but tbh they don't look very good
[05:26:13] <xenu> your best option is probably to call openssl CLI tool
[05:29:35] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[05:43:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:50:22] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[06:03:16] <zgu> https://xkcd.com/2531
[06:03:16] <Paperbot> Link title(s): [ xkcd: Dark Arts ]
[06:07:45] *** Joins: Shells (~michelle@2407:8800:bc20:200a:141f:50f:dd31:7b81)
[06:07:54] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[06:10:35] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 264 seconds)
[06:11:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:13:10] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:21:45] *** Quits: proller (~p@2a02:6b8:b081:8025::1:37) (Ping timeout: 260 seconds)
[06:22:13] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:22:35] *** a3r0__ is now known as a3r0
[06:36:55] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe)
[06:37:51] *** Joins: monkey_ (~user@190.104.116.134)
[06:53:27] *** Joins: zyweo (~Svew@user/zyweo)
[07:02:16] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[07:05:05] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) ()
[07:19:51] *** Joins: Martchus_ (~martchus@2a01:c22:762d:3000:d250:99ff:fe49:3cce)
[07:20:17] *** Quits: Martchus (~martchus@dynamic-077-009-126-245.77.9.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:21:42] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:31:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:45:20] <Grinnz> tfw regexp_matches in postgres is a better interface for returning multiple instances of multiple captures than m// in perl
[08:00:06] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe) (Ping timeout: 245 seconds)
[08:02:08] *** Joins: mattil (~mattil@dy59t3pr4y0s5sgxkgfzy-4.rev.dnainternet.fi)
[08:02:20] <mst> Grinnz: you can't scare me, I've spent the day writing nix and tcl
[08:08:27] *** Quits: mattil (~mattil@dy59t3pr4y0s5sgxkgfzy-4.rev.dnainternet.fi) (Remote host closed the connection)
[08:15:50] *** Joins: mattil (~mattil@dy59t3pr4y0s5sgxkgfzy-4.rev.dnainternet.fi)
[08:22:02] *** Quits: mattil (~mattil@dy59t3pr4y0s5sgxkgfzy-4.rev.dnainternet.fi) (Remote host closed the connection)
[08:32:06] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[08:33:21] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:41:24] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[08:41:51] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[08:42:06] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[08:44:35] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:45:26] *** Joins: deadmarshal (~deadmarsh@95.38.114.198)
[08:47:11] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[08:48:07] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[08:50:33] <Grinnz> if anyone wants to see the postgres FTS gore i'm working on https://github.com/Grinnz/song-request-queue/blob/master/song_request_queue.sql#L210
[08:50:34] <Paperbot> Link title(s): [ song-request-queue/song_request_queue.sql at master · Grinnz/song-request-queue · GitHub ]
[08:50:52] *** Joins: WinterStar (~IceLight@user/icelight)
[08:52:38] <Grinnz> (not looking forward to when i'll need more than the artifical allowed limit of 4 priorities)
[09:00:56] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[09:04:03] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Quit: Leaving...)
[09:14:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[09:16:14] <mst> Grinnz: ask bmomjian where to patch :D
[09:17:46] <Grinnz> i'd like to patch the crap that tries to internet host.names and file/paths first
[09:17:52] <Grinnz> interpret*
[09:18:38] <mst> I've spent the day thinking in nix and tcl
[09:18:47] <mst> C is beyond me even more than usually right now
[09:19:25] *** Quits: gce108 (~gce@user/gce108) (Read error: Connection reset by peer)
[09:20:22] *** Joins: gce108 (~gce@user/gce108)
[09:20:47] *** Quits: holyghost (~shameen@2a02:a03f:64c8:9200:8105:b986:e088:50cc) (Ping timeout: 264 seconds)
[09:31:58] * GumbyPAN CPAN Upload: Crypt-SMIME-0.28 by MIKAGE https://metacpan.org/release/MIKAGE/Crypt-SMIME-0.28
[09:36:00] *** Quits: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net) (Ping timeout: 260 seconds)
[09:38:29] <Grinnz> and since i ended up not needing m//g there was actually a mcuh simpler way to do the regex captures
[09:39:54] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[09:40:18] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[09:40:53] *** Joins: gce108 (~gce@user/gce108)
[09:58:38] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:01:27] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[10:01:51] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:06:31] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[10:09:26] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[10:09:58] *** Joins: tobybl (~tobybl@213.31.135.91)
[10:11:37] <Adura> eval: @arr = ('a', 'b'); print @{[~~@arr, - -@arr, '' . @arr, () + @arr, 0 + @arr]}
[10:11:38] <perlbot> Adura: 22222
[10:21:50] *** Joins: SKYDAD (~NwApSlLeH@idlerpg/player/SkyDad)
[10:23:19] <SKYDAD> hi there , i was just wondering if someone could help me im tryin to login a perl bot into psybnc its seems i cant get perl to do the /quote pass thing on connect
[10:24:03] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:24:25] <SKYDAD> like on mirc i would connect via /server ip:port:quote pass mypassword
[10:28:28] <rindolf> SKYDAD: hi
[10:29:09] <SKYDAD> hi
[10:30:50] <rindolf> SKYDAD: i don't see this 'quote' in hexchat either
[10:32:02] <SKYDAD> https://secure.xzibition.com/billing/knowledgebase/10/How-do-I-connect-to-the-psyBNC-after-its-installed.html
[10:32:05] <Paperbot> Link title(s): [ How do I connect to the psyBNC after its installed? - Knowledgebase - Xzibition Data ]
[10:32:06] <SKYDAD> like this is an exmaple
[10:32:11] <SKYDAD> example
[10:32:15] <SKYDAD> of what imtrying to do
[10:32:27] <SKYDAD> To connect to your psyBNC enter /server servername.Xzibition.com:port#
[10:32:27] <SKYDAD> When prompted type /quote pass yournewpass
[10:32:30] <SKYDAD> this right here
[10:32:34] <SKYDAD> but with a perl bot
[10:33:07] <SKYDAD> and on my own box  im testing this on
[10:33:11] <SKYDAD> not there
[10:37:59] <Adura> Guess the basic question would be... what kind of prompot?
[10:38:12] *** Quits: randir (~randir@95-25-159-246.broadband.corbina.ru) (Remote host closed the connection)
[10:38:19] <Adura> prompt, not prompot, which sounds like some sort of prom-related toilet.
[10:39:31] <SKYDAD> like say log an idlerpg bot into psybnc
[10:40:31] <Adura> Lacks specificity, bah.
[10:42:49] <SKYDAD> im looking for the cmd needed onconnect to send /quote pass
[10:43:26] <Adura> That'd depend on the bot.
[10:43:34] <SKYDAD> its an idlerpg bot
[10:43:35] <SKYDAD> perl
[10:43:36] *** Joins: deadmarshal_ (~deadmarsh@95.38.113.79)
[10:44:09] <Adura> Uh, what's the documentation like?
[10:44:10] *** Quits: deadmarshal (~deadmarsh@95.38.114.198) (Ping timeout: 260 seconds)
[10:45:16] <SKYDAD> https://github.com/falsovsky/idlerpg/blob/master/bot.pl
[10:45:17] <Paperbot> Link title(s): [ idlerpg/bot.pl at master · falsovsky/idlerpg · GitHub ]
[10:45:22] <SKYDAD> say like log that into PSYbnc
[10:46:21] <SKYDAD> like in my conf server ip:port:quote pass apassword
[10:46:25] <SKYDAD> with no luck
[10:47:44] <Adura> Well, hope you find someone more familiar with that bot.
[10:47:51] <SKYDAD> ok well ty
[10:47:54] <SKYDAD> for your time
[10:50:41] *** Joins: randir (~randir@93.159.239.42)
[10:59:13] *** Joins: txtsd (~txtsd@user/txtsd)
[10:59:39] <rindolf> perlbot: irc
[10:59:39] <perlbot> rindolf: Don't parse IRC with regex! See Bot::BasicBot (and Bot::BotBasic::Pluggable), POE::Component::IRC, Net::Async::IRC, Mojo::IRC, or Parse::IRC. Avoid Net::IRC. | http://xkcd.com/1782/ | If you must use TCP directly, take a look at POE::Filter::IRC or Parse::IRC for parsing.
[11:01:06] *** Joins: Pali (~pali@user/pali)
[11:01:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[11:07:08] <merpaderp> damn so many libs for IRC
[11:07:27] <buZz> merpaderp: makes you wonder how long its around already? :D
[11:07:31] <buZz> (its 1988)
[11:08:07] <merpaderp> even Mojo have a lib, those are usually high quality
[11:08:49] <merpaderp> I have been checking out recently Irssi.pm module
[11:09:44] <rindolf> merpaderp: http://shlomifishswiki.branchable.com/How_Alternatives_Proliferate/ ;)
[11:09:45] <Paperbot> Link title(s): [ How Alternatives Proliferate ]
[11:09:59] *** Quits: deadmarshal_ (~deadmarsh@95.38.113.79) (Ping timeout: 264 seconds)
[11:10:30] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 260 seconds)
[11:16:26] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[11:16:45] <merpaderp> that Irssi.pm is as old schoold as it can get, everything is functions, no weird objects calling other objects
[11:18:30] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[11:19:35] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:21:49] *** Joins: japh_ (~japh@195-198-186-122.customer.telia.com)
[11:25:58] *** Joins: art1 (~romeyke@p200300ccdf058c00ea388b87a8da0369.dip0.t-ipconnect.de)
[11:26:38] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[11:27:35] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[11:28:06] *** Joins: holyghost (~shameen@2a02:a03f:64c8:9200:a167:60a8:acf1:bfa7)
[11:28:31] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:31:59] <El_Che> are functions old school?
[11:33:06] *** Joins: randir_ (~randir@95-25-159-246.broadband.corbina.ru)
[11:34:14] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 244 seconds)
[11:36:23] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 264 seconds)
[11:40:10] *** Quits: dotandimet (~dotandime@evomr2.evogene.com) (Ping timeout: 260 seconds)
[11:43:47] *** Joins: dotandimet (~dotandime@evomr2.evogene.com)
[11:45:36] *** Joins: Oele (~Oele@5.57.21.48)
[11:46:35] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 265 seconds)
[11:52:26] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[11:53:36] <daemon> https://github.com/autodl-community/autodl-irssi/blob/master/AutodlIrssi/Irssi.pm
[11:53:36] <Paperbot> Link title(s): [ autodl-irssi/Irssi.pm at master · autodl-community/autodl-irssi · GitHub ]
[11:53:44] <daemon> ewww goto's as well
[11:55:40] <vague> That's not irssi's Irssi.pm I bet
[11:55:58] <daemon> probably was just first hit on bing
[11:56:38] <daemon> there we go https://github.com/irssi/irssi/blob/master/src/perl/common/Irssi.pm
[11:56:39] <Paperbot> Link title(s): [ irssi/Irssi.pm at master · irssi/irssi · GitHub ]
[11:57:05] <daemon> still pretty evil
[11:57:08] <daemon> and has goto
[11:57:10] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[12:03:24] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:04:54] *** Joins: randir (~randir@93.159.239.42)
[12:06:23] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 264 seconds)
[12:08:47] *** Quits: randir_ (~randir@95-25-159-246.broadband.corbina.ru) (Ping timeout: 260 seconds)
[12:10:40] <merpaderp> single goto wont hurt nobody
[12:11:00] <merpaderp> why would they even need it there? can't just call sub like normal people do
[12:11:24] <merpaderp> also I think the whole magic happens in that .so lib it compiles, so its XS something
[12:29:38] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[12:31:18] * GumbyPAN CPAN Upload: Data-Kramerius-0.01 by SKIM https://metacpan.org/release/SKIM/Data-Kramerius-0.01
[12:32:20] <Altreus> famous last words
[12:32:58] <Altreus> or absolutely correct, depending on how you take the double negative :D
[12:33:42] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200B0BB7EE3F884E948.catv.pool.telekom.hu)
[12:34:37] *** Quits: furrymcgee (~devuan@cgn-89-1-210-103.nc.de) (Quit: leaving)
[12:41:19] * GumbyPAN CPAN Upload: Signer-AWSv4-0.07 by JLMARTIN https://metacpan.org/release/JLMARTIN/Signer-AWSv4-0.07
[12:44:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[12:46:13] *** xenial-user10 is now known as xenial-user5
[12:47:38] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (Ping timeout: 246 seconds)
[12:52:54] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:53:14] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:00:43] <EvanCarroll> join #angular
[13:00:45] <EvanCarroll> bahhhh
[13:04:49] <Adura> No.
[13:08:29] *** Quits: jaytee80 (~jaytee80@fw.bmd.cpii.com) (Quit: Client closed)
[13:11:21] <Altreus> part #angular
[13:12:56] <Adura> cycle #perl
[13:17:48] <merpaderp> perl is eternal
[13:23:44] <Altreus> eternal sunshine of the spotless mind
[13:29:33] *** Quits: Bossi (~quassel@p5dc59f87.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:31:37] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:31:49] *** Joins: Bossi (~quassel@p5dc59f87.dip0.t-ipconnect.de)
[13:32:21] *** Joins: csrf (~csrf@user/csrf)
[13:35:14] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[13:39:34] *** Joins: ritsch_master (~ritsch_ma@77.119.220.56.wireless.dyn.drei.com)
[13:40:52] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[13:41:18] <LeoNerd> Altreus: Around here, whose mind do you imagine to be spotless?
[13:42:18] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:501:77ee:d7b0:fee9) (Quit: Leaving)
[13:45:08] <Altreus> haha, I can imagine quite a lot of nonsense
[13:45:26] <Altreus> is spotless synonymous with smooth?
[13:46:07] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:85b:142f:3b28:233b)
[13:57:43] <daemon> hey all with https://metacpan.org/pod/Text::CSV  if I do a parse(); so then I have $csv with a Text::CSV object in it, how do I extract say a col of information, I tried ->col(0) but apparently not
[13:57:43] <Paperbot> Link title(s): [ Text::CSV - comma-separated values manipulator (using XS or PurePerl) - metacpan.org ]
[13:59:33] <Altreus> Text::CSV is great at parsing CSV but not so great at presenting you with the results
[14:00:03] <Altreus> daemon: pretty sure you just get an array-of-arrays so you'd map $_->[0], @$result
[14:00:17] <daemon> yeah the documentation is wonky with zero examples
[14:00:26] <ilmari> daemon: «Upon success, "fields" can be called to retrieve the decomposed fields.»
[14:00:34] <daemon> ilmari, I got the fields, it gave me the headers
[14:00:37] <daemon> but non of the data
[14:00:41] *** Joins: ppw (~ppw@user/ppw)
[14:00:47] <Altreus> oh if you have headers then the rows are hashrefs
[14:00:58] <daemon> how do you get to the actual rows
[14:01:13] <Altreus> I think I've only ever done it this style: while (my $row = $csv->getline ($fh)) {
[14:01:19] <daemon> foreach my $csv_col_name ($csv->fields()) {
[14:01:22] <daemon> is how I get the fields
[14:01:25] <ilmari> ->parse parses a single line
[14:01:27] <daemon> I have no fh
[14:01:45] <ilmari> so if you gave it the header line, it gives you each header column back
[14:02:11] <daemon> ah I see
[14:02:17] <daemon> so I would need to parse each line
[14:02:26] <Altreus> daemon: just use getline_hr_all I suppose
[14:02:44] <Altreus> now you have an arrayref of hashrefs to loop over
[14:02:54] <ilmari> open my $fh, '<', \$data; # now you have an $fh containing $data
[14:02:56] <Altreus> or getline_all for a-o-a
[14:03:20] <daemon> ilmari, there is no actual file
[14:03:23] <daemon> Altreus, gotcha
[14:04:08] <ilmari> daemon: note the backslash. opening a reference to a scalar gives you a filehandle backed by the scalar, nota real file
[14:04:51] <Altreus> I have to say I have a strong dislike for any document that forces you to read everything in order to discover the simple case
[14:05:16] <Altreus> Well now I have context I suppose it's yet another ADHD problem
[14:06:36] <ilmari> daemon: also note the variable name. just like in the docs for ->parse, the names are meaningful
[14:06:44] *** Parts: ppw (~ppw@user/ppw) ()
[14:06:44] <daemon> csv is shit, lets remove it
[14:06:56] <daemon> from everything -_-
[14:07:55] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[14:09:52] <Altreus> and of course this all requires people to send you valid CSV
[14:10:05] <Altreus> One of my first tasks was to work with addresses from Royal Mail, delivered by CSV
[14:10:09] <Altreus> You know, addresses
[14:10:12] <Altreus> Those things with commas in
[14:10:23] <Altreus> delivered by CSV, that format where commas are meaningful
[14:10:44] <Altreus> Produced by royal mail, that company who deal with physical media and can't do electronic for shit
[14:10:50] <Altreus> or at least they couldn't in 2008
[14:11:47] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 264 seconds)
[14:13:13] <daemon> lol
[14:13:15] <daemon> sounds about right
[14:19:47] <ilmari> Altreus: at work we use Ordnance Survey's Addres Base Premium, that comes in CSV as well
[14:20:11] <ilmari> 5.2GB of it, after xz compression
[14:20:32] *** Parts: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) ()
[14:21:11] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[14:21:15] <daemon> sounds about right
[14:21:24] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[14:21:48] <Altreus> ilmari: does it at least quote commas
[14:22:48] <ilmari> yes, it quotes all non-numeric fields. but it also  separate fields for the things you'd separate with commas in an address
[14:22:53] <ilmari> +has
[14:26:24] <Altreus> ah, the traditional not-how-it-works example
[14:27:02] <Altreus> similarly to people's names and representation of numbers
[14:29:43] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[14:31:30] <ilmari> Altreus: section 2 (page 12/13) has the schema: https://www.ordnancesurvey.co.uk/documents/product-support/tech-spec/addressbase-premium-technical-specification.pdf
[14:32:22] *** Quits: Su-Shee (~Susanne@p50894023.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:33:11] <ilmari> "delivery point address" is Royal Mail's concept of an address, LPI is OS's 
[14:33:52] *** Joins: Su-Shee (~Susanne@p4ffc71c9.dip0.t-ipconnect.de)
[14:36:00] <xq> CSV fills an important niche of a format that is both easily processable automatically via perl and editable manually by barely computer-literate people in excel
[14:36:25] *** Joins: diskin (~diskin@87.117.62.113)
[14:36:42] <xq> so I don't think removing it would be a great idea, because any alternative will be probably worse in some way
[14:37:34] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[14:37:39] <ilmari> the main problem with CSV is all the software that kinda-sorta thinks it knows how to process/generate it
[14:37:47] <Altreus> xq: I don't want anything that needs parsing by computers to be edited by humans
[14:37:53] <ilmari> luckily we have Text::CSV_XS in perl
[14:38:11] <ilmari> but see its plethora of options for coping with broken CSV
[14:38:34] <ilmari> Altreus: including source code? ;)
[14:39:08] <Altreus> that's the dream
[14:44:11] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200B0BB7EE3F884E948.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[14:48:16] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[14:48:24] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[14:53:16] *** Quits: ritsch_master (~ritsch_ma@77.119.220.56.wireless.dyn.drei.com) (Remote host closed the connection)
[14:54:18] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[14:54:52] *** Shells is now known as Michelle
[14:56:56] *** Joins: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[14:57:30] *** Joins: proller (~p@2a02:6b8:0:51e:ff06:8de1:4ad8:5bfb)
[15:07:29] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[15:08:46] *** Joins: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d)
[15:09:15] *** Quits: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d) (Client Quit)
[15:11:55] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[15:11:55] *** diskin is now known as Guest1693
[15:11:55] *** diskin_ is now known as diskin
[15:14:31] *** Quits: Guest1693 (~diskin@87.117.62.113) (Ping timeout: 260 seconds)
[15:20:45] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[15:31:37] * GumbyPAN CPAN Upload: App-Kramerius-URI-0.02 by SKIM https://metacpan.org/release/SKIM/App-Kramerius-URI-0.02
[15:32:15] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[15:33:14] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[15:41:46] *** Quits: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 245 seconds)
[15:43:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:00:55] *** Joins: gast0n (~g4570n@user/gast0n)
[16:03:23] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 264 seconds)
[16:07:02] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[16:19:40] *** Quits: japh_ (~japh@195-198-186-122.customer.telia.com) (Ping timeout: 265 seconds)
[16:30:09] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:31:28] *** Parts: art1 (~romeyke@p200300ccdf058c00ea388b87a8da0369.dip0.t-ipconnect.de) ()
[16:31:31] *** Joins: llh (~llh@user/llh)
[16:35:04] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:35:38] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:38:21] *** Joins: hethw (~heth@46.238.32.56)
[16:38:53] <hethw> does functions by default accept bytes or unicode? what's the rule of the thumb?
[16:39:15] *** Joins: furrymcgee (~devuan@cgn-89-1-210-103.nc.de)
[16:39:21] <Botje> "functions" don't care what they recevie.
[16:39:24] <Botje> but
[16:39:30] <Botje> perlbot: encoding mantra
[16:39:30] <perlbot> Botje: decode goes from BYTES to UNICODE CHARACTERS. encode goes from UNICODE CHARACTERS to BYTES. decode bytes to unicode characters as soon as possible, work with unicode characters, and encode to bytes as late as possible.
[16:39:54] <Botje> you should strive to minimize the time your data spends as encoded bytes
[16:42:26] <Botje> so to answer your question in a roundabout way: "unicode unless you have very good reasons to send bytes"
[16:43:25] <hethw> I find most functions use unicode
[16:43:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:43:31] <hethw> but then there is readlink for example
[16:43:42] <Botje> oh, you mean built-in functions?
[16:43:46] <hethw> yes
[16:43:54] <Botje> that's an important qualification.
[16:44:32] <Botje> I believe there it's "whatever bytes the OS expects"
[16:44:46] <Botje> and conversion from Unicode is spotty
[16:44:46] <hethw> what's that in linux
[16:44:52] <Botje> UTF-8, luckily.
[16:45:12] <hethw> but if it's filesystem, it's bytes?
[16:45:57] <Botje> "bytes that are the result of a UTF-8 encoding of whatever unicode character you intended to store"
[16:46:16] <hethw> that's too complicated for my simple brain
[16:46:23] <Botje> re-read the mantra.
[16:46:30] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[16:46:42] <choroba> The problem with filesystems is there's no generally accepted way how a filesystem can announce its encoding
[16:46:46] * GumbyPAN CPAN Upload: Config-AWS-0.090003-TRIAL by JJATRIA https://metacpan.org/release/JJATRIA/Config-AWS-0.090003-TRIAL
[16:46:55] <hethw> I know
[16:47:02] <Botje> filenames on linux are bytes. by convention, these bytes are to be interpreted as UTF-8
[16:47:09] <hethw> should I expect and create filesystem functions that work with bytes
[16:47:13] <hethw> or not
[16:48:06] *** Joins: xenial-user5 (~androirc@3EC97C6F.unconfigured.pool.telekom.hu)
[16:48:55] <choroba> You should expect them. Not sure whether you should create them - there aren't any missing.
[16:50:40] <Botje> hethw: yes. expect bytes. 
[16:55:44] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:56:47] * GumbyPAN CPAN Upload: AWS-Lambda-0.0.31 by SHOGO https://metacpan.org/release/SHOGO/AWS-Lambda-0.0.31
[16:59:00] <mst> hethw: depends what you're doing
[16:59:49] *** Joins: humky (~humky@user/humky)
[17:00:12] <mst> hethw: if you need non-ascii characters in filenames, ideally you would specify utf8 and work that way, if you can't rely on that, then bytes it is
[17:02:42] <Botje> (I pity the poor person that uses Linux with non-UTF8 filesystems)
[17:04:41] <hethw> fortunatelly it's utf8 fses
[17:07:16] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Remote host closed the connection)
[17:08:14] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[17:23:19] *** Quits: xenial-user5 (~androirc@3EC97C6F.unconfigured.pool.telekom.hu) (Ping timeout: 260 seconds)
[17:24:18] <simcop2387> Botje: mostly true.  if you setup case folding in ext4 and then set chattr +F on a folder then it must be utf8 and not considered bytes, under that folder.
[17:24:29] <simcop2387> i think btrfs and xfs also support that now but i'm not sure
[17:28:24] <ilmari> TIL
[17:31:06] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[17:31:33] <ilmari> simcop2387: mke2fs(8) says you can specify the encoding (but not which encodings are supported)
[17:41:29] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[17:41:37] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[17:42:22] *** Joins: justHaunt (~justache@user/justache)
[17:43:23] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[17:46:00] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[17:47:47] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[17:48:00] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:50:36] *** Quits: rwp0 (~rwp0@user/rwp0) (Read error: Connection reset by peer)
[17:50:53] *** Joins: rwp0 (~rwp0@user/rwp0)
[17:51:42] *** Joins: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[17:52:58] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[17:55:31] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[17:56:53] *** Joins: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de)
[17:59:40] <Grinnz> daemon: if reading everything into memory at once isn't a problem i strongly suggest using the csv() function instead of the OO interface, it will just give you an array of arrayrefs or hashrefs (depending whether you tell it to parse the header line)
[18:00:09] <Grinnz> daemon: and always pass auto_diag => 2 and encoding => 'UTF-8' (or the appropriate encoding)
[18:05:37] *** Joins: jaytee80 (~jaytee80@fw.bmd.cpii.com)
[18:06:55] * GumbyPAN CPAN Upload: Yancy-1.081 by PREACTION https://metacpan.org/release/PREACTION/Yancy-1.081
[18:07:11] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[18:07:17] *** Quits: magla (~gelignite@55d4747b.access.ecotel.net) (Quit: Stay safe!)
[18:08:51] *** Joins: rwp0 (~rwp0@user/rwp0)
[18:11:05] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[18:17:55] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[18:18:51] <vanfanel64> simcop2387, what does"must be utf8 and not considered byte" mean? utf8 is bytes
[18:20:15] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[18:21:57] * GumbyPAN CPAN Upload: App-Kramerius-V4-0.01 by SKIM https://metacpan.org/release/SKIM/App-Kramerius-V4-0.01
[18:23:07] *** Joins: rwp0 (~rwp0@user/rwp0)
[18:24:49] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:31:39] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:36:28] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:37:03] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[18:37:22] <Botje> vanfanel64: presumably that you can't whack shift-JIS- or koi8r-encoded filenames into that directory?
[18:37:32] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:38:42] *** Joins: rwp0 (~rwp0@user/rwp0)
[18:42:20] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe)
[18:48:19] <vanfanel64> Botje, I don't get it. utf-8 is encoded into bytes, so it is bytes, and a matter of how the bytes are read, like most encodings
[18:48:52] <Grinnz> utf-8 is a specific series of bytes. i assume he meant arbitrary bytes that aren't a valid utf8 sequence aren't allowed
[18:49:18] <Grinnz> (they normally are!)
[18:51:35] <vanfanel64> I would imagine always validating would slow things down when doing mass processing of a large tree
[18:52:12] <Grinnz> you only have to validate when creating new things
[18:54:05] <vanfanel64> would not renaming a directory or file count too?
[18:55:02] <Grinnz> sure
[18:55:16] <Grinnz> also not normally a batch operation
[18:55:48] <vanfanel64> I have seen situations where a large tree had to be reworked to correct something
[18:58:48] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[19:00:55] <Grinnz> indeed, abnormal situations exist
[19:03:22] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:07:12] <vanfanel64> Grinnz, maybe it is adnormal for you, but I would not be surprised if many people have had to do a lot of renamings at once at some point or another. Maybe not every day, something that comes up. I have had to do this various times, enough that I made some scripts to help.
[19:17:03] * GumbyPAN CPAN Upload: Deplide-RFID-EPCISSubmitter-0.01 by AVAJADI https://metacpan.org/release/AVAJADI/Deplide-RFID-EPCISSubmitter-0.01
[19:24:39] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[19:24:40] *** Joins: randir (~randir@95-25-159-246.broadband.corbina.ru)
[19:28:36] *** Quits: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[19:33:54] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[19:34:27] *** Quits: X-Scale (~ARM@31.22.144.14) (Ping timeout: 260 seconds)
[19:35:05] *** X-Scale` is now known as X-Scale
[19:36:18] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[19:38:18] *** Joins: rwp0 (~rwp0@user/rwp0)
[19:41:59] <simcop2387> vanfanel64, yes qith case folding thjngs are restricted to just valid utf8 and only valid utf8.  Arbitrary bytes iis no longer allowed, but that's only with case foldimg (aka case insensitivity) turned on.  And yea the performance and unicode rules being I'm the kernel was one reason jt took so long to happen in linux
[19:42:38] <alh> Is your keyboard quite alright?
[19:42:51] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[19:43:14] <simcop2387> It's all opt in, the filesystem itself has to support it, with ext4 it's a fifilesystem creation time thing, and then you enable it via chattr +F on specific paths/directories
[19:43:24] <simcop2387> Alh, thumb typing on a tablet while working
[19:43:28] <alh> haha nice
[19:44:11] <simcop2387> Today that means babysitting a tempermental jenkins setup that randomly fails and has to be restarted
[19:45:45] <simcop2387> And later, a series of meetings with sr directors, executive directors, and possibly some VPs or higher on a large project that's about to get delayed
[19:47:06] * GumbyPAN CPAN Upload: Future-AsyncAwait-0.54 by PEVANS https://metacpan.org/release/PEVANS/Future-AsyncAwait-0.54
[19:48:25] *** Joins: rwp0 (~rwp0@user/rwp0)
[19:57:23] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe) (Ping timeout: 264 seconds)
[20:05:13] *** Quits: randir (~randir@95-25-159-246.broadband.corbina.ru) (Read error: Connection reset by peer)
[20:05:34] *** Joins: randir (~randir@95-25-159-246.broadband.corbina.ru)
[20:05:59] *** Quits: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de) (Quit: ChatZilla 0.9.99 [SeaMonkey 2.53.9.1/20210921115122])
[20:12:09] * GumbyPAN CPAN Upload: Config-Model-Tester-4.007 by DDUMONT https://metacpan.org/release/DDUMONT/Config-Model-Tester-4.007
[20:12:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:14:50] *** Joins: kensanata (~user@user/kensanata)
[20:16:01] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:17:13] <mjgardner> More on list processing with map, grep, etc.: https://phoenixtrap.com/2021/10/26/better-perl-four-list-processing-best-practices-with-map-grep-and-more/
[20:17:16] <Paperbot> Link title(s): [ Better Perl: Four list processing best practices with map, grep, and more - The Phoenix Trap ]
[20:19:15] <jaytee80> What's the killer app for needing async/await?
[20:27:29] <buZz> human interaction
[20:27:30] <buZz> :D
[20:29:45] <ether> strongly disagree about using blocks instead of expressions in map and grep. using an expression means you don't introduce another scope, which saves resources
[20:30:26] <ether> just because there's a perlcritic policy for something doesn't make it good :)
[20:30:51] <ether> using 'grep' instead of 'any' can be faster for short lists for precisely this reason
[20:30:59] <Grinnz> i agree with using blocks but because i hate parser special cases
[20:31:05] *** Quits: proller (~p@2a02:6b8:0:51e:ff06:8de1:4ad8:5bfb) (Ping timeout: 260 seconds)
[20:31:11] <Grinnz> so wholly unrelated to perlcritic's reasons as well :P
[20:31:16] <ether> also 'grep' optimizes in the parser a little better iirc
[20:31:36] <Grinnz> yeah, https://metacpan.org/pod/List::Keywords is meant to solve that discrepancy
[20:31:36] <Paperbot> Link title(s): [ List::Keywords - a selection of list utility keywords - metacpan.org ]
[20:31:41] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[20:32:07] *** Quits: rwp0 (~rwp0@user/rwp0) (Read error: Connection reset by peer)
[20:32:25] *** Joins: rwp0 (~rwp0@user/rwp0)
[20:39:13] <jaytee80> buZz: well that explains why I haven't needed it yet. Our frontend is "somebody else's job". Still, it looks neat.
[20:39:40] <buZz> ^_^
[20:40:01] <jaytee80> Come to think of it I've never done a modern web app in perl. I should take one on just for fun.
[20:40:24] <jaytee80> What are the best libs for that lately?
[20:40:26] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[20:40:32] <ether> Mojolicious
[20:40:48] <ether> there is a #mojo channel, and it's got good newbie docs
[20:41:43] <jaytee80> thanks
[20:42:12] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000093 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000093
[20:42:12] * GumbyPAN CPAN Upload: Valiant-0.001010 by JJNAPIORK https://metacpan.org/release/JJNAPIORK/Valiant-0.001010
[20:42:32] <genio> Just want to second that. Mojo is _really_ well done and the docs are great
[20:46:05] *** Joins: Shells (~michelle@203.206.128.220)
[20:46:19] *** Quits: Michelle (~michelle@2407:8800:bc20:200a:141f:50f:dd31:7b81) (Ping timeout: 260 seconds)
[20:47:12] * GumbyPAN CPAN Upload: Chemistry-Elements-1.075 by BDFOY https://metacpan.org/release/BDFOY/Chemistry-Elements-1.075
[20:49:57] <jaytee80> I think I burned myself out yesterday. 547 perl rpms ready for my stack on rocky8 yesterday... 5 to go (2 majorly problematic). Tryin' to find energy to finish today. Then there's the non-perl stack, but that should be way easier.
[20:50:09] <mst> jaytee80: Mojolicious is basically the successor to Catalyst as the sensible framework to pick, except this time with native async as well
[20:50:47] <jaytee80> I learned some things: 1. cpantorpm is pretty cool, but I wish it worked recursively, or had a hook to "check dnf first". 2. perl is really good at being portable lately.
[20:51:09] <LeoNerd> "lately" ?
[20:51:22] <mst> perl always has been unless you're stuck on windows or certain red had releases
[20:51:37] <jaytee80> Yeah, for a long time now. But in 547 rpms I only found 2 that gave me compat issues. That's a DAMN good stat
[20:51:39] <mst> then things get a bit trickier :)
[20:54:02] <xenu> perlbot: frameworks
[20:54:03] <perlbot> xenu: Catalyst, Dancer2, Mojolicious (and many many PSGI frameworks like Web::Simple, Web::Machine) | http://shadow.cat/blog/matt-s-trout/mstpan-1/ | https://metacpan.org/pod/CGI::Alternatives
[20:54:37] <jaytee80> I think I played with mojo about 5-6 years ago, but didn't end up using it for anything. I need to make little standalone GUI apps sometimes, and usually I need to make they very quickly. I should get better a mojo so I can use just that in those cases.
[20:55:25] <xenu> tbh i'm not a fan of Catalyst, it's bloated and its ecosystem *mostly* assumes that you're using DBIx::Class and i'm not a fan of ORMs
[20:55:44] <xenu> mojolicious and dancer2 are both fine options, mojo is more powerful and dancer2 is simpler
[20:56:57] <sivoais> there is an interesting little extension for Mojolicious that helps with making small desktop-like GUIs by integrating with Qooxdoo. I've used it several times for small projects
[20:57:26] <sivoais> it's called CallBackery on CPAN
[20:58:24] <mst> jaytee80: for standalone GUIs I tend to go with p3rl.org/Tkx via p3rl.org/Tcl
[20:58:28] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[20:59:23] <ehuelsmann[m]> I think when you start from scratch, those are both great options. I'm maintaining an application that used to be CGI until somewhere in 2014 at which point we were finally able to move it to PSGI. I'm now combining new and very old code bases on the same PSGI application. I think that doesn't work well with Dancer(2) and due to the async nature of Mojo, definitely won't work on Mojo. 
[20:59:26] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[20:59:47] <ehuelsmann[m]> (I'm still hoping this will be a transitional state that I may get out of some day)
[20:59:51] <mst> xenu: its ecosystem mostly assumes that because 90%+ of the userbase were doing that, and that's where the contributors came from
[21:00:15] <Grinnz> ehuelsmann[m]: i don't see why it wouldn't - mojo works perfectly well in a psgi server, you just can't use the event loop
[21:00:21] <Grinnz> which would be your choice to do
[21:00:30] *** Quits: japh (~scp1@user/japh) (Ping timeout: 244 seconds)
[21:01:29] <mst> ehuelsmann[m]: I think you're making shit up, I've done mixed modern and CGI codebases in all three frameworks and it works fine
[21:01:53] <ehuelsmann[m]> Grinnz: I actually just found that out while going over Mojo again after ether 's  remark. But I was referring the other way around: using the old (blocking) cgi code within/on top of Mojo
[21:01:54] <sivoais> mmm, yeah, Tkx is very nice. There are some things for distribution in the Tcl ecosystem that I would like to explore some more to see if they can be rolled together with Perl code (like Starkit and undroidwish)
[21:01:58] <Grinnz> you'd combine dancer like any other psgi app
[21:02:14] * GumbyPAN CPAN Upload: TestRail-API-0.050 by TEODESIAN https://metacpan.org/release/TEODESIAN/TestRail-API-0.050
[21:02:16] <Grinnz> ehuelsmann[m]: if you've designed your app to require nonblocking features already, yeah, that wouldn't work well
[21:02:33] *** Joins: japh (~scp1@host-95-192-28-251.mobileonline.telia.com)
[21:02:33] *** Quits: japh (~scp1@host-95-192-28-251.mobileonline.telia.com) (Changing host)
[21:02:33] *** Joins: japh (~scp1@user/japh)
[21:02:54] <mst> ehuelsmann[m]: in fact, every perl framework has a way to embed legacy cgi apps that works fine (and Plack has a module for it as well)
[21:02:56] <Grinnz> but otherwise it's... no different than any other deployment but with more options
[21:03:16] <Grinnz> https://metacpan.org/pod/Mojolicious::Plugin::CGI
[21:03:16] <Paperbot> Link title(s): [ Mojolicious::Plugin::CGI - Run CGI script from Mojolicious - metacpan.org ]
[21:03:19] <ehuelsmann[m]> mst: yes, I'm using the Plack integration for CGI.
[21:03:28] <mst> they all derive from some code I wrote for a company called opsview to wrap the nagios CGI binaries because their app was using a frameset and it offended me
[21:03:49] <sivoais> plus, Tkx + Perl would probably still be smaller and better at memory usage than rolling together Mojolicious + Electron / Chromium :-P (I did a whole Perl Conf presentation on my thoughts on *that*, heh)
[21:04:05] <mst> ehuelsmann[m]: right, so, that, the Mojolicious equivalent, and the Dancer2 equivalent, are all descendents of the same codebase and I don't understand why you think they'd work any differently
[21:04:12] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:74e1:93d1:2998:f6fe)
[21:04:44] <mst> and speaking as he person who first wrote the bloody thing, I can assure you that they don't, and whatever problem you're imagining is strictly in your head :P
[21:05:00] <xenu> i like tkx but there are two problems with it 1) it requires tcl (it especially complicates installation on windows) 2) tk doesn't have a webview widget
[21:05:28] <xenu> the latter can be a deal-breaker for some apps
[21:06:27] <ehuelsmann[m]> The framework Grinnz just pointed me at for Mojolicious was something I completely missed that existed (although by the time I got there, the move to Starman had already been made).
[21:06:40] <ehuelsmann[m]> the plugin for mojolicious*
[21:06:53] <mst> ehuelsmann[m]: and catalyst and dancer2 are both PSGI so you can use the same damn code in them too
[21:07:42] <mst> ehuelsmann[m]: but seriously I don't understand what problem you imagined there'd be in the first place
[21:08:14] <sivoais> ugh, yeah, any webview strictly in tcl is ancient. I think I can hack up something to get Chromium inside it like I did with Gtk
[21:09:25] <mst> if you need web stuff, writing a native app seems kinda counterproductive to me tbh
[21:09:36] <xenu> mst: imagine e.g. something like an email client
[21:09:55] <xenu> or anything that needs oauth 
[21:09:58] <mst> xenu: you mean like mutt?
[21:10:24] <sivoais> there are some more lightweight HTML renderers though that might be better than Chromium (and less of a security vulnerability)
[21:10:29] <mst> but yeah, fair point, though I just have it set up to open a browser on a tempfile for that
[21:10:45] <mst> that or I just read the HTML because I'm like that ;)
[21:10:48] <Botje> sivoais: I came across https://ultralig.ht recently
[21:10:48] <Paperbot> Link title(s): [ Ultralight - Next-Generation HTML Renderer for Desktop Apps and Games ]
[21:10:56] <Botje> which seems to fit the bill
[21:11:42] <Botje> (but requires a reasonable fee for big commercial apps)
[21:12:09] <mst> ehuelsmann[m]: sorry, I'm actually curious here, it's always fascinating to me what leads people to invent problems like this one because I've seen people discard perfectly useful options as a result and anything I can do to avoid that happening is probably worth doing
[21:13:43] <xenu> mst: i think the whole problem is that he didn't realize mojo can be deployed as an ordinary psgi app
[21:13:57] <ehuelsmann[m]> mst: actually, with Dancer, I didn't imagine any problems (as I had only few). I didn't go to Dancer at the time because for the newer code that I had in place, it was far easier to convert it to PSGI than it was to convert it to Dancer due to the structure of request dispatching.
[21:14:08] <mst> xenu: that's not even relevant to the question though
[21:14:13] <xenu> which isn't surprising considering that mojo heavily advertises hypnotoad
[21:14:17] <ehuelsmann[m]> I'm currently writing new code that actually has sensible routing.
[21:14:19] <mst> xenu: and in fact not the right solution to mojo+cgi at all
[21:14:36] <xenu> mst: well, not knowing about the mojo plugin is even more obvious so i ignored it
[21:14:49] <mst> xenu: yeah but that's not really relevant either
[21:14:50] <ehuelsmann[m]> the way it's "normally" done (through the URL, not using query arguments as the "old code" does it)
[21:15:06] <mst> ehuelsmann[m]: ayup, I think the only dispatcher that really handles that is Web::Simple's
[21:15:34] <ehuelsmann[m]> mst: well, I *really* want to get rid of that.
[21:15:59] <mst> sure, I implemented that feature for people migrating old CGI code to PSGI so they could still use a dispatcher in the meantime
[21:16:22] <mst> basically exactly your use case :P
[21:17:21] <ehuelsmann[m]> but now that I'm getting into the area of sensible routing, I really want to look at better frameworks to implement the newly routed infrastructure with.
[21:18:08] <ehuelsmann[m]> the first step in this new code is going to be web services, but later actual content is going to be added to it too.
[21:18:49] <mst> honestly, I'd seriously consider using Mojolicious::Plugin::MountPSGI to shove your legacy code into a Mojolicious app and then write the new stuff in mojo
[21:18:59] <mst> Catalyst is old and Dancer2 is kinda duplo
[21:19:32] <ehuelsmann[m]> I've looked at Mojo, because it comes with Minion too.
[21:19:57] <ehuelsmann[m]> I really would love to have the background job processor handed to me on a plate.
[21:20:18] <ehuelsmann[m]> I'm thinking for application component services like webhooks and e-mail transfer in the background.
[21:21:07] <ehuelsmann[m]> I didn't like Dancer2 enough to invest a lot of time in it; I started to do it, the experience wasn't half bad, but I didn't feel the code ended up much better than what I had.
[21:21:15] <ehuelsmann[m]> (which is what I was aiming for)
[21:21:18] <mst> I mean, you can use Minion in any other framework as well
[21:21:38] <ehuelsmann[m]> I looked at that too. 
[21:21:49] <ehuelsmann[m]> but it's more different technologies.
[21:21:55] <mst> really?
[21:22:02] <mst> a minion job handler is a perl subroutine
[21:22:14] <mst> you can put the same perl in there as you use in the rest of your app
[21:23:12] <mst> it's no more meaningfully a different technology than any cpan module would be
[21:24:28] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:25:15] <ehuelsmann[m]> agreed. I was looking at it from the end-user perspective and where my user-base originally comes from (CGI) as well as the contributors that are currently in the project. I postponed going to Minion while the application didn't have webservices yet (and thus no need for webhooks); e-mails are now being sent on the request thread which is rather ugly, but is really easy to set up from an admin point of view.
[21:26:35] <mst> right, but what you do is have a send_email subroutine
[21:26:40] <ehuelsmann[m]> when the project moves to Mojo, they need to understand the Mojo setup (but no longer Starman); I need to figure out if a single mojo invocation also starts a Minion worker or not.
[21:26:42] <mst> that either calls Email::Sender directly
[21:27:06] <mst> or schedules a minion job that will then run the same Email::Sender code
[21:27:09] <mst> and just let them pick
[21:28:50] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 260 seconds)
[21:28:52] <jaytee80> Ugh, now I have PDL::PP code that doesn't compile. I guess I'll head over to #pdl on perl.irc.org. I hope they have a web client over there.
[21:29:09] <mst> jaytee80: kiwiirc.com can connect to irc.perl.org just fine
[21:29:22] <jaytee80> thx
[21:29:38] <mst> also please don't call me 'they'
[21:29:58] <ehuelsmann[m]> That confirms an idea I had lately indeed. I think it'd be totally great if it's possible to have sites decide whether or not to run with a job worker like minion
[21:30:12] <mst> of course it is
[21:30:17] <mst> try and avoid imagining extra problems that don't exist - programming is hard enough when you only have to deal with the real ones.
[21:30:24] <jaytee80> fuuuu work blocks kiwiirc explicitly. 
[21:30:29] * mst facepalms
[21:30:56] <mst> I guess that's a reason why I should set us up our own at some point
[21:31:26] <jaytee80> That would certainly be less likely to be blocked by most firewalls.
[21:31:43] <mst> yeah, you have no idea how many different ports the irc.perl.org ircds listen on because of that
[21:31:54] <sivoais> Botje: yeah, that's one. The others i'm thinking of are Netsurf, Dillo. There was also another that has a similar license to the Ultralight one made by a small company out of Russia... I just can't remember the name.
[21:31:55] <mst> every time we got a user who couldn't connect we'd add another one ;)
[21:31:59] <ehuelsmann[m]> well, I'm not always imagining problems :-) I'm sometimes dealing with the amount of change that the project can absorb (which roughly equates to - what I can absorb) without coming to a grinding halt
[21:32:21] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:32:42] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:32:43] <mst> ehuelsmann[m]: sure, but "do I call this subroutine here, or in another script" is kinda something perl makes pretty easy :D
[21:32:46] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:32:51] <ether> more kindly, you aren't imagining problems, but they are in a different castle than you think they are.
[21:32:58] <ehuelsmann[m]> :-)
[21:34:13] <ehuelsmann[m]> oh. right. the background processing is something that only recently even became an option: the original code base always was sending mails from within the request thread and I have only recently factored out the code path which sends the mail from the code path which collects the required inputs.
[21:34:32] <ehuelsmann[m]> Before, there were other fish to fry.
[21:35:02] <mst> ether: yeah, but I don't have an irssi alias configured for that phrasing yet :D
[21:37:14] <Grinnz> ehuelsmann[m]: minion workers are run separately from the mojo server, however you choose to set up the deployment
[21:38:42] <sivoais> Botje: ah, the last one i was thinking of is Sciter. Their license is funny... it's free to use as-is, but no source and no support
[21:39:11] <Grinnz> ehuelsmann[m]: generally started from a mojo application command: https://metacpan.org/pod/Minion::Command::minion::worker
[21:39:12] <Paperbot> Link title(s): [ Minion::Command::minion::worker - Minion worker command - metacpan.org ]
[21:39:36] <Grinnz> ehuelsmann[m]: but it's pretty modular, you can set it up different ways, it's just optimized for this way
[21:40:15] <jaytee80> the dumbest question ever: what irc net are we on here? I'm on through web.libera.chat
[21:40:19] <Botje> sivoais: ah, neat.
[21:40:23] <mst> jaytee80: this is libera.chat
[21:40:37] <mst> jaytee80: the replacement for freenode after Clown Prince Lee killed it
[21:40:38] <Botje> sivoais: paying to get source access is not _that_ unheard of in the middleware world
[21:40:49] <jaytee80> so if I setup quassel, just libera.chat in the address.
[21:41:05] <mst> jaytee80: irc.libera.chat for the ircd round robin
[21:41:09] <Grinnz> jaytee80: https://libera.chat/guides/connect
[21:41:09] <Paperbot> Link title(s): [ Connecting to Libera.Chat | Libera Chat ]
[21:41:15] <Grinnz> libera's guides are *very good*
[21:41:34] <mst> yeah, they're pretty much the best 'how to IRC' intro guides full stop
[21:42:01] <Grinnz> jaytee80: also there's webchat links for irc.perl.org on http://www.irc.perl.org/ now, not that it helps you with it being blocked
[21:42:02] <Paperbot> Link title(s): [ irc.perl.org ]
[21:42:11] * ehuelsmann[m] reads more about minion
[21:42:57] *** Quits: Oele (~Oele@5.57.21.48) (Ping timeout: 256 seconds)
[21:45:06] <Grinnz> jaytee80: you can use irccloud as a free webchat (you just have to make an account): https://www.irccloud.com/invite?channel=%23pdl&hostname=ssl.irc.perl.org&port=7062&ssl=1
[21:45:07] <Paperbot> Link title(s): [ Join                      #pdl on ssl.irc.perl.org          |            IRCCloud ]
[21:45:37] <Grinnz> jaytee80: as a bonus it will keep you connected/keep chat history for up to 2 hours while it's closed even after your free trial ends
[21:45:41] <mjgardner> ether: Opinions vary on "good."
[21:45:59] <mjgardner> (re: earlier comment about map/grep expressions)
[21:46:48] <ether> sure, opinions vary about style. I think "don't ever use it" is too strong, because of that
[21:46:53] <ether> and there are distinct advantages to the expression form
[21:46:56] <mst> ehuelsmann[m]: btw
[21:47:37] <mst> ehuelsmann[m]: $minion->worker->register->tap(sub ($w) { $w->dequeue(0, $options)->perform })->unregister;
[21:47:55] <mst> ehuelsmann[m]: that'll run -one- job if there is one
[21:48:15] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[21:48:19] <mst> ehuelsmann[m]: so you could always have your hypnotoad children drain the queue while they're not doing anything else for low load setups
[21:48:29] *** Joins: humky (~humky@user/humky)
[21:48:57] <jaytee80> www.irc.perl.org seems blocked for me... though it doesn't show me the rejection page. irccloud definitely is.
[21:49:27] <jaytee80> I've got a laptop I've connected via guest wifi. The problem is the stuff I need to reference is totally inaccessible from there. I wanna paste some build errors.
[21:49:59] <ehuelsmann[m]> thanks! I think that's a very good setup for my situation: in general load is pretty low and the low end of the users of the application likely do not want  to deal with complexities in setup that they perceive from setting up multiple services.
[21:50:38] <mst> jaytee80: send it to http://paste.scsys.co.uk/ from the machine where it is accessible
[21:50:38] <Paperbot> Link title(s): [ pasting to magnet_web ]
[21:50:46] <mst> hang on
[21:51:00] <mst> jaytee80: http://paste.scsys.co.uk/pdl even
[21:51:01] <Paperbot> Link title(s): [ pasting to magnet_web ]
[21:51:09] <mst> jaytee80: that sahould make the bot report the URL for you :D
[21:52:38] <jaytee80> thx
[21:53:18] <mst> also would you please stop talking in '12 year old girl writing a text message', it's intensely annoying to read, you have an actual keyboard after all :P
[21:55:32] <mst> ehuelsmann[m]: note, that's probably not -quite- right but if you decided to adopt the approach I'm sure I could make it go (and then make you cpan the generic parts so I don't have to figure it out ever again ;)
[21:58:34] <ehuelsmann[m]> Yea. I'm definitely looking at what I can do to make that work. Many of the components that aren't specific to the application end up as independent libraries on CPAN.
[22:00:08] <Grinnz> oh god, external links on rt.cpan.org are all marked with target="new" so not only do they spawn a new tab (fine) they *reuse the same tab every time you click another link*
[22:00:24] <Grinnz> target="_blank" is too useful i guess?
[22:00:52] <simcop2387> https://i.redd.it/pbm4x305asv71.jpg
[22:01:20] <simcop2387> Grinnz, but I want a new tab, not a blank ome
[22:01:34] <Grinnz> well you'll get 1 new tab, and then only recycled tabs
[22:05:56] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 245 seconds)
[22:05:57] <jaytee80> mst: wait... 'thx' annoys you? I may not be a 12yo girl, but my daughter is... I guess I have thicker skin for that stuff due to exposure.
[22:06:28] <mst> jaytee80: it's just not part of technical IRC netiquette
[22:06:31] *** Joins: rwp0 (~rwp0@user/rwp0)
[22:07:30] <mst> it's not about 'thick skin' or otherwise
[22:07:47] <mst> also THX is a C struct in perl core so it always takes a minute to realise people aren't referring to that :P
[22:07:55] <jaytee80> sub thx {  return 'thanks' }
[22:08:04] <mst> yes, please implement :D
[22:08:07] *** Quits: rwp0 (~rwp0@user/rwp0) (Read error: Connection reset by peer)
[22:08:27] *** Joins: rwp0 (~rwp0@user/rwp0)
[22:08:48] <Adura> thx()
[22:08:50] <Altreus> nvm then
[22:12:21] <jaytee80> Funny, my work also blocks the channel rules link because bit.ly.
[22:12:33] * Grinnz is more likely to interpret it as an audio standard
[22:12:36] <mst> *lolsob*
[22:12:44] <Grinnz> jaytee80: lol
[22:13:02] <Grinnz> jaytee80: it's a link to www.irc.perl.org anyway so it's probably blocked
[22:13:15] <jaytee80> haha double **** blcoked
[22:13:40] <jaytee80> sub blcoked { return 'blocked' }
[22:14:18] <Altreus> maybe use constant
[22:14:20] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[22:14:50] <mst> jaytee80: honestly, it sums up to "don't be a dickhead", as irc rules generally do
[22:15:12] <mst> for many years the irc.perl.org rules were just 'Reasonable Person Principle Required'
[22:15:21] <jaytee80> I'm not at the top of my module anymore... it would make my chat code sloppy.
[22:15:43] <jaytee80> dickhead = no problem
[22:15:48] <jaytee80> thx = OMGWTF!
[22:16:00] <Altreus> "dickhead = no problem" is why we need rules
[22:16:19] <mst> I mean, honestly, it can be rounded off to "don't be so obnoxious that even mst notices"
[22:17:08] <Altreus> Don't stoop lower than matt?
[22:17:16] <Altreus> Does that mean you're the dipstick?
[22:17:21] <Altreus> :D
[22:17:58] <mst> I've been called worse by better :D
[22:24:47] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 260 seconds)
[22:25:19] <xenu> mst: thx for calling him out
[22:25:42] *** Joins: rwp0 (~rwp0@user/rwp0)
[22:25:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:30:53] *** Joins: deadmarshal (~deadmarsh@95.38.113.79)
[22:33:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:33:41] <ether> if mst is the bar for acceptable behaviour, that might be too low? :)
[22:34:34] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:36:33] <mst> ether: I've been known to /kick myself on occasion? :D
[22:36:34] *** Quits: rwp0 (~rwp0@user/rwp0) (Read error: Connection reset by peer)
[22:37:49] *** Joins: rwp0 (~rwp0@user/rwp0)
[22:37:51] <Altreus> ether: defining a lower bound is certainly valuable :)
[22:38:21] *** Joins: kensanata (~user@user/kensanata)
[22:39:18] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[22:39:36] *** Joins: humky (~humky@user/humky)
[22:45:03] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[22:46:15] *** Quits: deadmarshal (~deadmarsh@95.38.113.79) (Ping timeout: 260 seconds)
[22:55:26] *** Joins: jplesnik (~jplesnik@83.240.62.176)
[22:55:26] *** Quits: japh (~scp1@user/japh) (Ping timeout: 260 seconds)
[22:56:16] *** Quits: jplesnik (~jplesnik@83.240.62.176) (Client Quit)
[22:58:17] *** Quits: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) (Ping timeout: 264 seconds)
[22:59:09] *** Joins: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be)
[23:01:08] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:01:26] * GumbyPAN CPAN Upload: TestRail-API-0.051 by TEODESIAN https://metacpan.org/release/TEODESIAN/TestRail-API-0.051
[23:03:27] <veesh> ether: there's only one type of bar that mst knows about
[23:03:46] <veesh> probably could have phrased that joke more cleverly
[23:04:10] <ether> :)
[23:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[23:10:07] *** Joins: X-Scale` (~ARM@31.22.167.71)
[23:10:29] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:10:52] *** X-Scale` is now known as X-Scale
[23:21:29] * GumbyPAN CPAN Upload: Config-AWS-0.10 by JJATRIA https://metacpan.org/release/JJATRIA/Config-AWS-0.10
[23:25:15] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[23:25:22] <simcop2387> veesh: https://en.wikipedia.org/wiki/Raising_the_Bar_(South_Park)
[23:25:23] <Paperbot> Link title(s): [ Raising the Bar (South Park) - Wikipedia ]
[23:25:32] <simcop2387> can't find any reasonable clips from that episode sadly
[23:27:12] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:30:39] *** Joins: haj1 (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[23:33:05] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:33:58] *** Joins: proller (~p@80.240.216.69)
[23:36:03] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[23:38:02] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Client Quit)
[23:38:12] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[23:52:16] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[23:52:27] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[23:52:57] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
