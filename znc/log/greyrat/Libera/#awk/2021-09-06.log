[00:18:58] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[00:44:32] *** Joins: Jad (~Nashmi@user/jad)
[00:51:00] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[00:55:25] *** Quits: user51 (~user51@176.228.90.248) (Quit: leaving)
[01:05:00] *** Joins: lavaball (felix@31.204.155.215)
[01:08:26] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:11:04] *** Joins: lavaball (felix@31.204.155.215)
[01:12:19] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:22:07] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 252 seconds)
[01:23:50] *** Quits: Jad (~Nashmi@user/jad) (Ping timeout: 252 seconds)
[01:24:48] *** Joins: lavaball (felix@31.204.155.215)
[02:08:44] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[02:32:40] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:36:14] *** Quits: roarde (~roarde@user/roarde) (Remote host closed the connection)
[02:38:21] *** Joins: seninha (~seninha@user/seninha)
[03:03:21] *** Joins: roarde (~roarde@user/roarde)
[03:17:38] *** Joins: mixfix41 (~homefame@user/mixfix41)
[03:45:19] *** Joins: anon16_ (~anon16_@user/anon16)
[03:45:29] <anon16_> Hi, in gawk, is there a shorter version of this $1$2$3$4$5$6$7$8$9$10 without looping? 
[03:46:06] <anon16_> I don't want to print everything, just these specific fields
[03:46:07] <earnestly> anon16_: http://awk.freeshell.org/RangeOfFields
[03:46:31] <earnestly> anon16_: A for loop, with caveats.  It's a surprisingly sore point in awk
[03:46:46] <anon16_> Nice, thanks
[03:46:54] <earnestly> None of the solutions are nice though :p
[03:47:45] <earnestly> Any of the nice solutions require you giving up the input FS
[03:48:02] <earnestly> E.g. 'a foo   bar baz' => 'foo bar baz'
[03:48:27] <anon16_> That's fine with me
[03:48:50] *** Quits: src (~src@user/src) (Quit: Leaving)
[03:49:03] *** Joins: src (~src@user/src)
[04:04:17] *** Quits: adip (~adip@aeje201.neoplus.adsl.tpnet.pl) (Ping timeout: 245 seconds)
[04:17:37] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:32:51] *** Joins: Torr (~Torr@user/torr)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:47:13] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[06:40:17] *** Joins: nmz (~nmz@adsl-72-50-7-199.prtc.net)
[06:44:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:42:29] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[07:45:07] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[08:11:17] *** Joins: demonbane (~demonbane@pool-74-108-12-105.nycmny.fios.verizon.net)
[08:41:01] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[08:41:22] *** Joins: Jad (~Nashmi@user/jad)
[09:25:47] *** Quits: Jad (~Nashmi@user/jad) (Quit: Benefits I derive from free­dom are largely the result of the uses of freedom by others, and mostly of those uses of freedom that I could never avail myself of.)
[09:31:20] *** Joins: Jad (~Nashmi@user/jad)
[09:34:22] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[09:43:27] *** Joins: user51 (~user51@176.228.90.248)
[10:45:58] <geirha> # awk -v OFS= '{NF=10;print}' <<< 'a b c d e f g h i j k l m n o'
[10:45:59] <shbot> geirha: abcdefghij
[10:46:36] <Patsie> cheater :P
[10:46:52] <Patsie> but I like it
[11:01:57] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[11:29:46] *** Joins: lavaball (felix@31.204.155.215)
[11:30:16] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:30:53] *** Joins: lavaball (felix@31.204.155.215)
[12:23:44] *** Joins: APic (apic@apic.name)
[12:45:42] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[12:52:32] *** Joins: adip (~adip@aeje201.neoplus.adsl.tpnet.pl)
[13:24:19] *** Joins: earnestly (~earnest@user/earnestly)
[13:58:52] *** Joins: lavaball (felix@31.204.155.215)
[14:01:07] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 252 seconds)
[15:08:15] *** Joins: user51 (~user51@176.228.90.248)
[15:10:31] *** Quits: anon16_ (~anon16_@user/anon16) (Read error: Connection reset by peer)
[15:15:01] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[15:15:27] *** Joins: APic (apic@apic.name)
[16:01:45] *** Joins: seninha (~seninha@user/seninha)
[16:02:34] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[16:42:07] *** Joins: lgc (~lgc@user/lgc)
[16:59:43] *** Joins: Torr (~Torr@user/torr)
[17:50:58] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:58:29] *** Joins: nvmd (~nvmd@user/nvmd)
[19:13:50] *** Joins: seninha (~seninha@user/seninha)
[19:33:42] *** Joins: src (~src@user/src)
[20:33:15] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[20:58:27] *** Joins: lavaball (felix@31.204.155.215)
[21:34:39] <earnestly> How would you go about using awk to read input that sends no EOF but does provide a size (in bytes)
[21:35:01] <earnestly> So there is no concept of "records"
[21:38:29] <yitz> exit() when you get to the end condition?
[21:40:03] <e36freak> what doesn't send an EOF?
[21:45:19] *** Quits: user51 (~user51@176.228.90.248) (Ping timeout: 252 seconds)
[21:49:10] *** Quits: nmz (~nmz@adsl-72-50-7-199.prtc.net) (Ping timeout: 252 seconds)
[21:52:28] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[21:56:08] <Patsie> good question
[22:00:50] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:04:56] <Patsie> with gawk you can do some RS/RT trickery to read byte data though, I've done that in awk-videoplayer
[22:05:04] <Patsie> with some good tips from e36freak
[22:06:45] <Patsie> just don't forget to pass the -b parameter to gawk
[22:07:27] <Patsie> otherwise it tries to parse multibyte characters per '.'
[22:07:49] *** Joins: nmz (~nmz@adsl-72-50-5-48.prtc.net)
[23:02:18] <earnestly> e36freak: http
[23:03:19] <earnestly> Patsie: The problem is that you have to decide when you have come to 'the end', so even if the input was split into individial bytes, it would still be waiting for bytes that never come
[23:10:13] <earnestly> This would be so much simpler if bash could store nul bytes in variables :(
[23:19:01] <e36freak> it sorta can if you rig an array around it, but you can't. you could also just use a file or fifo
[23:19:02] <earnestly> Patsie: https://0x0.st/-w1E.sh
[23:19:34] <earnestly> e36freak: Possibly with files
[23:20:02] <earnestly> Incidently, bash is kind of neat and tidy for this.  I wasn't using an assoc array at first, which looks even better
[23:20:25] <earnestly> Could be pure POSIX if it supported read -N and -d '' (and probably -t)
[23:21:14] <earnestly> e36freak: If bash allowed NUL in variables this would be simple as using its ${var:size} PEs
[23:22:24] <e36freak> then use a real language? C can't store them in strings either
[23:22:35] <e36freak> need a variable type that can
[23:22:50] <earnestly> C can store them no problem
[23:23:34] <e36freak> well ok, but you can't read past them without knowing the size ahead of time
[23:23:41] <earnestly> e36freak: The trouble is this kind of parsing is already trivial in non-real languages except for one or two roadblocks
[23:24:06] <earnestly> cstrings are a particular protocol, I think DJB doesn't touch str* functions as them all being crap
[23:24:12] <earnestly> snprintf though, is lovely
[23:24:41] <e36freak> you can theoretically create an array by splitting on NULs
[23:24:51] <e36freak> only issue with that is knowing if you need to put a NUL at the end or not
[23:25:14] <earnestly> Yeah, that's the problem I ran into.  It worked insofar as getting the variables out nicely but it still didn't know when it had "ended"
[23:25:39] <e36freak> check length and add as you go until you reach the desired size
[23:26:02] <e36freak> it's not ideal, but it could work
[23:26:07] <earnestly> I wonder if there's anything that takes out much of the potential for bugs in parsing like awk does, but can work with sizes like this
[23:26:18] <earnestly> e36freak: This is what the bash script does ^
[23:26:43] <e36freak> ah i didn't really look at it
[23:26:44] <earnestly> Works surprisingly wonderfully
[23:26:48] <earnestly> And it's very short too
[23:26:58] <earnestly> I like keeping all my stuff to a page or so in size
[23:27:10] <earnestly> (Without tricks)
[23:27:20] <e36freak> then we gotta get you to take a look at the kernel and see if you can pare it down
[23:27:31] <e36freak> how big of a page are we talking here?
[23:27:35] <earnestly> e36freak: :D
[23:27:50] <earnestly> Not like K though, that stuff would fit on a business card
[23:28:10] <earnestly> The shell's read is surprisingly sophisticated and I miss having it in 'real' languages
[23:28:26] <earnestly> erlang might... hmm
[23:30:35] <earnestly> e36freak: (There's two typos in the bash, n[ instead of h[)
[23:31:00] <earnestly> And all of those h's should be r's.  Silly me
[23:32:22] <earnestly> e36freak: while :; do curl ...; done on this script is ~3% cpu usage for both socat and the server lol
[23:33:21] <earnestly> ~76 req/s
[23:34:15] <earnestly> To be fair, I think C would be fine with this too
[23:38:13] *** Joins: roarde (~roarde@user/roarde)
[23:38:28] *** Joins: ztx (~ztx@user/ztx)
[23:45:04] *** Quits: Jad (~Nashmi@user/jad) (Quit: Benefits I derive from free­dom are largely the result of the uses of freedom by others, and mostly of those uses of freedom that I could never avail myself of.)
