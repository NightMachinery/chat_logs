[00:04:20] *** Quits: guidoc (~guido@151.37.145.152) (Quit: WeeChat 3.2)
[00:12:29] *** Quits: genom (~g@37.214.56.150) (Remote host closed the connection)
[00:16:13] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Ping timeout: 252 seconds)
[00:21:49] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[00:25:05] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:25:19] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[00:26:12] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Client Quit)
[00:34:47] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:35:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[00:35:11] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:38:57] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[00:42:45] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:58:50] *** Parts: ham5 (iamfive@user/ham5) ()
[01:03:01] *** Joins: entuland_ (~entuland@user/entuland)
[01:06:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[01:14:11] *** Parts: burrows (burrows@user/burrows) (Parting)
[01:25:26] *** Quits: magla (~gelignite@55d4a2ba.access.ecotel.net) (Quit: Stay safe!)
[01:55:26] *** Joins: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch)
[01:59:20] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[02:11:28] *** Quits: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch) ()
[02:23:37] *** Quits: entuland_ (~entuland@user/entuland) (Ping timeout: 248 seconds)
[02:27:34] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:03:58] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:09:09] *** Quits: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:09:15] <jargon> How do I use preg_match to span the entire document?
[03:10:34] <Blondie101010> not completely sure that's what you want, but it could be preg_match_all
[03:10:49] <da_wunder> you mean multiline?
[03:15:13] *** Joins: yurtan (~yurtan@123-243-165-224.static.tpgi.com.au)
[03:20:06] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[03:21:28] <jargon> I would like \r\n to be part of the capture.
[03:22:07] <da_wunder> so add `m` modifier to use multiline
[03:23:20] *** Joins: Poboy (~Poboy@user/poboy)
[03:32:34] *** Quits: Northwoods (~Northwood@103.223.8.125) (Ping timeout: 252 seconds)
[03:36:49] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:40:19] <Blondie101010> depending on the regex, that can have a considerable performance impact
[03:45:31] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Read error: Connection reset by peer)
[03:50:04] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[03:54:23] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:55:40] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[04:00:01] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[04:02:37] <celphi> is it still practical to use database to build class object or does it make more sense to use individual functions to run specific queries
[04:03:03] <__adrian> those two things don't sound exclusive
[04:03:15] <__adrian> what are you trying to choose between?
[04:05:56] <celphi> well for example,. (hypotetically) say i have a house - and a table called house- is it then better to make a class called house with the same properties in table and then use additional functions to do stuff with that data
[04:08:30] <celphi> let me take it a step further.. imagine i had a table called "Texas" and texas had all these properties so i made a class to store that,. but then say Texas also had cities,. so then i have a class called cities with their properities added to its object. Then say those cities had neighborhoods and so on... would it make sense then to construct a entire texas object if i wanted to know what neighboorhoods were in Texas?
[04:08:56] <celphi> or would it be better to make individual functions to handle that sort of stuff
[04:09:12] <__adrian> several things there: * "a class with the same properties as the table" is very naive and probably the wrong approach. make your classes around the business logic you need, NOT around the database. when you're writing your classes, pretend there's _no such thing_ as a database.
[04:09:28] <Byteflux> Not really a difficult concept, but data belongs in a database.
[04:09:49] <Byteflux> Or somewhere that isn't where you keep your logic.
[04:10:07] <__adrian> * whether you use classes or functions that just deal with the data is more of a question around your architecture. if you're writing oo code, then use objects.
[04:10:26] <Blondie101010> sounds like OO
[04:10:37] <celphi> ok but do i make all these parent objects just to create the children?
[04:10:50] <celphi> just to find out one detail on the children elements
[04:11:04] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:11:08] <__adrian> * regarding related or "nested" objects/data: they go in different tables.
[04:11:15] <__adrian> no
[04:11:26] <celphi> ya they are on different tables.
[04:11:29] <__adrian> don't think of the data as "nested" or being "parent/child"
[04:11:34] <celphi> k
[04:11:38] <__adrian> think of it as relationships
[04:12:15] <Blondie101010> celphi:  if you want to describe a table called Texas, you begin with a bad data structure
[04:12:17] <__adrian> e.g., a $city object might have a method ->getHouse($address) but that doesn't mean the house is literally a property on the object.
[04:12:21] <Blondie101010> the table name should not be data
[04:12:25] <celphi> well outer-circle is texas then inner circle is city then neighboorhood then house
[04:12:26] <__adrian> ^ this too
[04:12:31] <celphi> it's just an example
[04:13:00] <celphi> ok so you go in -> out
[04:13:05] <__adrian> ?
[04:13:08] <__adrian> no
[04:13:27] <__adrian> i'm saying they're not "contained" within each other one way or the other
[04:13:30] <Blondie101010> relationships, not dependencies
[04:13:35] <__adrian> ^
[04:13:45] <Blondie101010> https://en.wikipedia.org/wiki/Composition_over_inheritance
[04:13:46] <Byteflux> It would be pretty weird to have a table called Texas. You might have a table called 'states' and perhaps Texas is one of the rows in that table, along with a `state_id` which internally identifies that row and you can further create other pieces of data in other tables which relate to it.
[04:14:06] * Blondie101010 nods
[04:14:10] <celphi> if i wanted to know all the houses that were white in texas-- you're saying i dont have to make (Texas(city(neighboorhood(house)))
[04:14:19] <__adrian> of course not
[04:14:21] <celphi> yeah it's jst hypothetical Byteflux
[04:14:40] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:14:41] <__adrian> you'd do somehting more like $houseFinder->in($texas)->color($white)
[04:14:41] <celphi> so then how would you do that __adrian
[04:14:54] <__adrian> $texas doesn't look for houses
[04:15:34] <jargon> Thanks all! this is the result! http://puzzlum.net/?prj=Puzzlum+Release+History
[04:15:36] <Byteflux> $texas is a location where houses exist. you might also have $dallas, which is a city in texas, but also just a location where there are houses.
[04:15:41] <celphi> right but it's has decendent element of houses
[04:15:58] <__adrian> stop thinking about "descendent elements"
[04:16:05] <celphi> k
[04:16:09] <__adrian> objects are not literal data strutcures
[04:16:21] <celphi> let me make a basic code example then of what i mean- or you get what i  mean
[04:16:30] <__adrian> and a $house does not find houses. a $realtor (for example) finds houses
[04:16:51] *** Quits: jargon (~jargon@184.101.79.161) (Remote host closed the connection)
[04:17:54] <Byteflux> A `HomeLocator` object may find and return one or more `Home` objects within the scope of a `Location` object.
[04:18:09] <Byteflux> Where a Location might be a state, city or neighborhood.
[04:18:20] <Blondie101010> interfaces?
[04:18:24] <Byteflux> Indeed.
[04:18:29] <celphi> it's not so much the problem of type of data (ie house/realtor) it's more of a design question of accessing data where the parent class has a property that has an array of elements where those array of elements also has elemeents and so on,. and i need the bottom row of data
[04:18:55] <__adrian> you're thinking like objects are arrays, with nested data.
[04:18:56] <__adrian> they are not
[04:19:00] <Blondie101010> celphi:  you need to give the real situation, not something you make up just to make a bad example
[04:19:21] <celphi> yeah cant NDA
[04:19:32] <Blondie101010> duh
[04:19:53] * Blondie101010 takes a deep breath
[04:20:36] <__adrian> then my advice is: any time you start thinking about "parent" or "child" or "has data", stop and back up
[04:20:46] <Blondie101010> ^^
[04:20:46] <celphi> k
[04:21:16] <__adrian> think about the examples given so far instead. think about how they're very different than an array that contains data.
[04:21:30] <__adrian> do NOT think about the code that they use - only think about the things they do.
[04:22:06] <__adrian> e.g., when designing your code, write things like  $finder->location($texas)->zone($residential)->color($white)
[04:22:17] <__adrian> do NOT think about the code that goes in those methods to make them work.
[04:22:35] <__adrian> you do that part later. when you're desgining, stay focused on the usage.
[04:22:52] <__adrian> implementation is a detail for later
[04:24:19] <Byteflux> If you write PHPUnit tests, then just write a unit test and use that exact (or similar) code first, it helps to figure out your design in a test case and then make it pass (by implementing the details) once you've got a good design.
[04:24:59] <Byteflux> But that's more of a preference thing that helps me
[04:25:38] <__adrian> the idea of "focus on usage, not implementation" is also real helpful with tests
[04:25:56] <__adrian> "if i give this, i get back that"
[04:26:02] <__adrian> "if i give this, that happens"
[04:26:03] <Byteflux> Yep, exactly^
[04:26:03] <__adrian> etc.
[04:26:11] <__adrian> no details
[04:26:26] <Byteflux> You set your expectations of input and output, then worry about the details later.
[04:26:44] <celphi> https://bpa.st/WR3A
[04:26:51] <celphi> here's another example
[04:26:58] <__adrian> all those properties are implementation
[04:27:00] <__adrian> delete them
[04:27:07] <__adrian> write only public method names
[04:27:17] <__adrian> (and not ->getNumberOfPeople(), etc.)
[04:27:42] <__adrian> (how can a family have a location?)
[04:27:59] <__adrian> (and why _doesn't_ the church?)
[04:28:03] <Byteflux> haha
[04:28:03] <__adrian> :p
[04:28:06] <Sammitch> inb4 attempting to define the number of families that any one person can belong to
[04:28:10] <celphi> a family lives in a city? idk. it's just an example of showing what i mean how the lower levels depend on the other
[04:28:11] <Byteflux> It's a mobile church
[04:28:28] <__adrian> celphi: yes, i realize. the serious comment was about deleting the properties.
[04:28:46] <__adrian> think about what you need to do with each object. write those method names.
[04:29:01] <celphi> so whats point of properties then
[04:29:07] <__adrian> they're implementation
[04:29:12] <__adrian> and right now, no implementation.
[04:29:13] <celphi> meaning?
[04:29:26] <celphi> so they're not properties of the object?
[04:29:31] <__adrian> meaning they're details of how the code works. you are desigining a system; it's not time to think about details.
[04:30:06] <__adrian> you don't start designing a new model car by specifying the pitch and thread of the enging bolts.
[04:30:10] <__adrian> *engine
[04:30:31] <Byteflux> You're focusing too much on the details of the code in relation to the underlying data.
[04:30:32] <Sammitch> interface first, implementation later.
[04:31:17] <celphi> so when i instantiate a class, all of it's properties shouldnt match what is in database column?
[04:31:20] <Byteflux> First, figure out what it is you're trying to accomplish with that data.
[04:31:32] <Byteflux> Then write an interface that elegantly expresses that intention
[04:31:36] <celphi> k
[04:31:41] <__adrian> so regardless of whether your example code is "real," it needs to be _realistic_ enough that there's actually a usage goal
[04:31:50] <celphi> np
[04:32:11] <Byteflux> Find yourself in a position where you can answer the question "I have this data, but what query must I perform and what result am I expecting?"
[04:32:13] <__adrian> "church/family/person" seems pretty uselessly arbitrary. unless you can explain what you need to do with each.
[04:32:48] <celphi> ok lets see i have an idea
[04:32:52] <Sammitch> also it would probably be a much more productive discussion if you weren't being so needlessly cagey about what the code actually IS. just s/company/example/ and post actual code.
[04:33:08] <__adrian> but maybe there's a good example here. given  church/family/person,  how would you count the number of people that went to church?
[04:33:23] <Sammitch> I don't think that any has ever written such groundbreaking code in PHP that posting 20 lines would break an NDA
[04:33:45] <__adrian> ^ esp not just talking about broad oop strokes
[04:34:45] <__adrian> celphi: how would you count the number of people that went to church?
[04:35:12] <Sammitch> what is someone in the family goes to a different church? :3c
[04:35:38] <__adrian> my bet is you'd think  $total = 0; foreach ($church->families as $family) { $total += $family->count(); }
[04:36:17] <Blondie101010> it depends what you want to count
[04:36:38] <Blondie101010> making families with the people also causes a mess as people are related to various families
[04:36:57] <__adrian> indeed, but the above is reflecting the idea that objects are data structures
[04:37:08] <__adrian> and they're not. they're behavior, with state.
[04:37:39] <__adrian> $church would just count all the $people.
[04:38:15] <__adrian> same as it could count all the $families. they aren't "stored inside" each other.
[04:38:19] <Sammitch> "I'll just change the naming of my code to what I think is an equivalent example" [chooses a highly subjective and debatable model, causing needless argument] "perfect"
[04:38:56] <__adrian> yeah i don't imagine this example is good for their question; but i found a way for it to be good for my earlier point
[04:39:47] <da_wunder> and just for the twist - how about families that have divorced, how should those be counted
[04:39:48] <__adrian> celphi: re: "Do i then instanitate a church('christan') to get all the people?":  no, churches don't get people.
[04:40:07] <Sammitch> da_wunder: depends on the church :3c
[04:40:10] <__adrian> in a real church, there's a person whose job is attendence.
[04:40:13] <Byteflux> $church->attendees($date)->count()
[04:40:21] <__adrian> ^
[04:40:46] <__adrian> the church is a building/organization. it doesn't "do" anything.
[04:41:28] <celphi> no it was a bad example-
[04:41:29] <__adrian> that attendees() method might query the DB (probably indirectly).
[04:41:41] <__adrian> on the contrary, i think it was a good example.
[04:41:51] <da_wunder> and after divorce there could be multiple families with people that are connected to multiple families...
[04:42:06] <__adrian> da_wunder: maybe it's a church that doesn't allow divorce.
[04:42:14] <Blondie101010> lol
[04:42:38] <celphi> the idea is that the people are members of a church
[04:42:42] <__adrian> yes
[04:43:00] <celphi> but in the flow of church->family->people
[04:43:04] <__adrian> no
[04:43:06] <celphi> it could be anything really
[04:43:15] <__adrian> that's not a realistic flow, not in code nor in real life
[04:43:27] <da_wunder> and that is something that I don't understand or allow at all - that is people choice - not some institute choice...
[04:43:28] <Sammitch> church->people, family->people
[04:43:36] <celphi> the example is bad but im trying to show (a(b(c(d))) relationship
[04:43:48] <__adrian> a membership is made of people. maybe you could group them into families, but that doesn't mean the membership is of families.
[04:43:57] <celphi> do i make a to find out if d is part of a
[04:44:08] <__adrian> "im trying to show (a(b(c(d))) relationship"  yes, we know. we're tring to say that's NOT how to do it.
[04:44:13] <Sammitch> so it's really just a generic hierachy with no social connotations?
[04:44:17] <__adrian> make (a) (b) (c) (d)
[04:44:25] <__adrian> then define relationships
[04:44:38] <__adrian> relationships are not defined by the way the data is physically stored
[04:44:56] <__adrian> use arrows.  (a)→(b)  (a)→(c)
[04:45:00] <__adrian> etc.
[04:45:03] <celphi> ok
[04:45:36] <celphi> (a)->(b)->(c)->(d) is relationship
[04:46:04] <__adrian> yes. but that relatingship is not the data
[04:46:13] *** Joins: fairuz- (fairuz@user/fairuz)
[04:46:20] <__adrian> note (d) is still independent of (a), (etc.)
[04:46:28] <__adrian> in your model, it's not
[04:46:36] <__adrian> (a) (b) (c) (d)
[04:46:47] <Byteflux> In many cases data is stored very differently from how you would interact with it in code. Don't focus on trying to create a 1-to-1 relationship between code and data.
[04:47:06] <__adrian> this ^
[04:47:13] <Byteflux> Your code needs to express how you interact with that data, it should not care what the data actually looks like.
[04:47:17] <__adrian> if your classes look like your database, you did it wrong
[04:47:39] <celphi> when you say how you interact with that data can you give an example?
[04:47:54] <Sammitch> can't. NDA. :3c
[04:48:01] <__adrian> can you rephrase?
[04:48:13] * Sammitch couldn't resist
[04:48:24] <Byteflux> Your code is the logical representation of what you hope to learn from your data.
[04:48:26] <celphi> What do you mean by "Your code needs to express how you interact with that data"
[04:48:40] <Byteflux> You have data, it's meant to give you an answer when you ask a question about it.
[04:48:47] <celphi> k
[04:48:48] <Byteflux> Your code should look like that question.
[04:48:58] <__adrian> means reading code (object->method names) should give you an idea of what it does.
[04:48:59] <Byteflux> And it should provide that answer.
[04:49:04] <__adrian> NOT of _how_ it does.
[04:49:35] <celphi> so when you instanitate an object it begins with no properties?
[04:50:04] <__adrian> that's not a yes/no question. the point is, you DON'T CARE whether it has any properties.
[04:50:59] <celphi> so if you were making a user class,. you wouldnt make a property: username, email ect?
[04:51:20] <celphi> you'd just have $user->getUsername();
[04:51:27] <__adrian> you might, but that DOESN'T MATTER.
[04:51:32] <Byteflux> An object isn't simply a direct representation of your data. It doesn't exist just to store information from your data in properties. It exists as a logical piece of information which may contain one or more pieces of data with which you can interact with as part of your application.
[04:51:44] <Byteflux> A $user might have a username() or something, yes.
[04:51:56] <__adrian> take a $math object, for example. you're thinking it would have $math->lhs ->op ->rhs ->result
[04:52:12] <celphi> ok
[04:52:31] <__adrian> and then you'd do  $math->lhs = 5; $math->op = "+"; $math->rhs = 4; $math->result = 9;
[04:52:40] <__adrian> see how "micromanagy" that is?
[04:53:08] <__adrian> instead, you should have  $math->add(5,4)  that returns 9
[04:53:12] <celphi> yes. i guess im just thinking all math objects would need those 5 so it would have it
[04:53:13] <Byteflux> You might have multiple pieces of data that come together to form 1 object in code.
[04:53:18] <__adrian> what properties does this object have?
[04:53:26] <__adrian> you _don't know_.  because it _doesn't matter_.
[04:53:50] <__adrian> all you know is that when you pass two numbers to add() you get the sum.
[04:54:02] <__adrian> you don't know how the code works. and you should never care how it works.
[04:54:13] <celphi> i see - so build utility functions
[04:54:28] <celphi> that have nothing to do with data
[04:54:46] <__adrian> so,  add()  DOES have an implementation. it's not empty and magic. you will write that code like  $this->lhs = ...
[04:54:56] <__adrian> you just won't do it right now, when you're designing the system.
[04:54:57] <Byteflux> Not quite "utility functions" just define your objects better.
[04:55:18] <__adrian> first you need to know you want to have code that does  $math->add()
[04:55:35] <__adrian> you write the implementation for that _later_.
[04:56:00] <Sammitch> the object is a black box. you don't know what's in it or how it works. all that matters is that it has a lever on it called `getData()` and when you pull it the data you expect pops out.
[04:56:15] <celphi> k
[04:56:29] <Byteflux> Basically, if you understand the concept of interfaces, that's essentially it.
[04:56:43] <Sammitch> and maybe that all the levers are the right size and shape to fit into another thing you've built to use it.
[04:57:11] <__adrian> note, we're focusing on this a lot because we have no further details. without further details, this is likely as good as the advice gets. (not that it's bad advice, you're just going to have to do most of the work to apply it to your situation)
[04:58:59] <celphi> so in my earlier example-- if i need to know which houses are white. are you just saying $houses->getColor('white'); where $houses would be query like SELECT * FROM houses; and getColor() would filter out the white ones?
[04:59:51] <Blondie101010> details matter much more
[04:59:52] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[05:00:04] <Blondie101010> houses have more than one color
[05:00:18] <__adrian> tip: don't SELECT *
[05:00:31] <__adrian> tip: REALLY don't SELECT * FROM table;
[05:01:03] <Blondie101010> celphi:  the purpose is what defines the design
[05:01:26] <celphi> if i dont then wouldnt i be hitting that same table multiple times when i could just do it once?
[05:01:27] <__adrian> you're probably going to have a class that gets house info from storage (e.g., from your DB). note this class is not a "House" class
[05:01:33] <__adrian> no
[05:01:45] <__adrian> not if you write the code well  ;)
[05:01:50] <__adrian> that's a _detail_.
[05:02:10] <__adrian> right now, write  $houseFinder->color($white)->getHouses(); and stop
[05:02:14] <celphi> SELECT * FROM houses where COLOR = 'white'; SELECT * FROM houses where pool = 1; why do 2 queries when i could use *
[05:02:29] <__adrian> no one told you to do that
[05:02:45] <da_wunder> or at least use some library for database stuff, like doctrine...
[05:03:02] <__adrian> you write $houseFinder->color($white)->pools(1)->getHouses();  later, you might write really good code that makes this work, or you might write really bad code that makes it work.
[05:03:15] <__adrian> nothing to do with usage.
[05:04:15] <__adrian> your HouseFinder might make dozens of one-off queries, or it might compile everything into one query. it might cache query results. you don't know, and when you're designing, it doesn't matter.
[05:04:47] <__adrian> when you're designing, there IS NO database.  getHouses() just says  return [$fakeHouse, $fakeHouse, $fakeHouse];
[05:05:04] <celphi> k
[05:05:29] <__adrian> hard to emphasize that enough. when you're designing, there **is no database**.
[05:05:40] <Blondie101010> not my technique, but not bad advice either
[05:05:50] <Byteflux> $homes = $homeFinder->colorsEither(['white', 'black'])->bedroomsAtLeast(3)->bathroomsAtLeast(2)->yearAtLeast(2005)->find();
[05:05:53] <__adrian> assume you're writing the business logic, and the db stuff is magic.
[05:06:21] <__adrian> blondie: something of an extreme to try to drive that disconnect home
[05:07:04] <__adrian> it's not that i hate databases, i just don't want your php classes to look like a database.
[05:07:18] <celphi> i like the explanation though
[05:07:25] <Byteflux> Underneath this might just be building a query and then find() actually generates the final query and talks to the DB.
[05:08:28] <da_wunder> with doctrine that should be quite easy task to do...
[05:09:04] <__adrian> da_wunder: reason i'm focusing on it is to guide the design of the business logic
[05:09:19] <__adrian> yes, you might use doctrine, and then you _literally_ don't have to worry about the implementation
[05:09:45] <__adrian> BUT if you still model your classes after the DB tables, you still don't have a great solution
[05:10:18] <Sammitch> Byteflux: but the data from the MLS board says "HalfBaths: 2.5"
[05:10:21] <da_wunder> or still use custom repository method to get those results - the point is that you have the structure there what you can easily use
[05:10:49] <Byteflux> Sammitch: >_>
[05:12:01] <__adrian> Byteflux: he's right tho
[05:12:52] <celphi> thanks a lot for the insight
[05:13:12] <celphi> are there any articles on what you guys/gals just talked on?
[05:13:49] <Sammitch> though the point is more like "realtors are dumb, MLS data is trash, and I'm glad it's not my problem anymore" ;P
[05:15:48] <Byteflux> celphi: The general idea of what we discussed is *separating your data model from your application's business logic*. Don't know any articles off hand but searching along those lines should yield some results.
[05:16:11] <celphi> would `$homeFinder->colorsEither(['white', 'black'])->bedroomsAtLeast(3)->bathroomsAtLeast(2)->yearAtLeast(2005)->find();` read someting like "SELECT * FROM homes WHERE colors IN ('white','black') AND bedrooms >= 3 AND bathrooms >=2 AND year >= 2005 ? and the find part would execute it?
[05:16:19] <__adrian> !+domain ≠ storage
[05:16:22] <__adrian> hm...
[05:17:14] <__adrian> !+model ≠ storage
[05:17:15] <php-bot> the domain model is NOT the storage model. write your domain models as if there's no such thing as a "database." http://blog.sapiensworks.com/post/2012/04/07/Just-Stop-It!-The-Domain-Model-Is-Not-The-Persistence-Model.aspx
[05:17:25] <Byteflux> celphi: Pretty much, yes. But the more narrowly you can define your business logic, the better. But in cases of like people searching for homes online, it needs to be very fine grained and tunable so you end up with code like that.
[05:18:09] <Byteflux> Ideally you just have things like $homeFinder->findMansions() and you don't care how the data is stored, you just return a list of homes that are mansions by whatever your definition of a mansion is.
[05:19:09] <Byteflux> Because your app cares about what mansions there are and doesn't care about how your store mansion data.
[05:20:12] <celphi> k
[05:30:16] <Blondie101010> well I would not include the filter in the method name
[05:30:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:18] <Blondie101010> perhaps I'd consider 'mansion' to be in a list of qualifiers
[05:32:47] <Blondie101010> $homeFinder->findStyle('mansion')->with(2, 'bedroom')->limit('price', '500')->getList(); // semi-kidding
[05:33:36] <Blondie101010> I'm not a fan of method chaining :)
[05:34:34] <Byteflux> I dunno, builders seem like a good way to articulate criteria
[05:34:38] *** Joins: vlm (~vlm@user/vlm)
[05:34:39] *** Joins: jargon (~jargon@184.101.79.161)
[05:34:56] <jargon> Why does this only include the first occuring vod on my site? https://pastebin.com/Z1Q4BVGj
[05:35:04] <__adrian> don't have to chain if you don't want to, doesn't change the idea
[05:35:06] <Byteflux> I suppose you could also have a HomeCriteria class and then $homes->find($criteria) :P
[05:35:19] <Byteflux> Or something similar
[05:35:55] <Blondie101010> jargon:  line 12 is senseless
[05:36:06] <Blondie101010> probably your main concern
[05:36:27] <Blondie101010> btw, putting a few traces (echo) here and there would have made it very obvious
[05:37:15] <celphi> in order to do like this https://3v4l.org/e9Ft6 ?
[05:37:32] <celphi> it's an example
[05:37:34] <Blondie101010> ah come on
[05:37:45] <Blondie101010> no, that example shows that you failed grade 6 Math
[05:38:09] <Blondie101010> why do you need a subtract method?
[05:38:33] <celphi> it's just an example of me chaining
[05:38:42] <celphi> from an earlier suggest
[05:39:02] <celphi> would `$homeFinder->colorsEither(['white', 'black'])->bedroomsAtLeast(3)->bathroomsAtLeast(2)->yearAtLeast(2005)->find();`
[05:39:04] <jargon> https://pastebin.com/Yncb2rLW
[05:39:05] <__adrian> my earlier examples had nothing to do with implementation  ;)
[05:39:09] <Blondie101010> yes that's how chaining works
[05:39:21] <__adrian> but yes, that's how chaining works
[05:39:22] <celphi> im just asking about the chaining part if i did it right
[05:39:34] <Blondie101010> jargon:  add a trace on line 14
[05:39:39] <__adrian> jargon: https://php.net/foreach
[05:39:44] <jargon> Blondie101010, how do I cycle?
[05:39:47] <celphi> so you basically update a property
[05:39:52] <celphi> along the way
[05:40:01] <Blondie101010> jargon:  click adrian's link
[05:40:08] <Blondie101010> an example could help
[05:40:10] <__adrian> celphi: no, "chaining" just means that you have a method with no meaningful return value so you return $this
[05:40:29] <celphi> but am i using the $this->where part right?
[05:40:37] <__adrian> and then you can do  $obj->a()->b()->c()  instead of $obj->a(); $obj->b(); $obj->c();
[05:40:41] <Blondie101010> celphi:  your bad example doesn't calculate
[05:40:48] <celphi> bc how else would you carry over the values
[05:41:01] <Blondie101010> a property?
[05:41:04] <__adrian> celphi: in as much as a method might set some value on a property, yes
[05:41:08] <Blondie101010> $this->result
[05:41:25] <celphi> ok ty i just wasnt sure if there was a different way
[05:41:29] <__adrian> the specific property and assignments in your example don't make sense
[05:43:43] <celphi> ok does this make more sense? https://3v4l.org/LQJvf
[05:44:09] <__adrian> look at your result, and you tell me
[05:44:25] <celphi> lmao ok i get what you mean
[05:44:58] <Blondie101010> celphi:  there are different types of operators
[05:45:14] <Blondie101010> the one you use is for strings
[05:46:20] <Blondie101010> and please declare your properties
[05:47:22] <jargon> __adrian, Blondie101010~~ https://pastebin.com/ksabENfW
[05:47:35] <__adrian> celphi: start with this. you cannot change any oof this code; you may only add code inside each method. https://3v4l.org/Xlo4f
[05:47:39] <__adrian> *of
[05:47:52] <Blondie101010> jargon:  why did you remove the `foreach`?
[05:47:57] <__adrian> sorry, correction : https://3v4l.org/UN4cU
[05:48:01] <jargon> I am only making it worse. T_T
[05:48:09] <__adrian> jargon: did you see my link?
[05:48:20] <jargon> Yes, it didn't make any sense to me.,
[05:48:32] <Blondie101010> jargon:  you should go over the manual to see which parts you may have missed
[05:48:34] <__adrian> jargon: https://php.net/foreach  ← read this, and compare to what you wrote
[05:48:41] <Blondie101010> but this is basic language usage
[05:48:44] <__adrian> ^
[05:50:17] <jargon> I have never had this kind of issue with foreach before.
[05:50:39] <Blondie101010> not an issue with foreach
[05:51:02] <jargon> Maybe my computer got broken from the lightning over the past 3 nights. :(
[05:51:22] <Blondie101010> irrelevant unless it hurt your eyes or brain
[05:52:05] <jargon> It captures 2 mp4's from scandir, but only cycles through one of them.
[05:52:25] <Blondie101010> show that code again
[05:52:32] <__adrian> jargon: forget about that. look at your code. look at how foreach() works. compare the two.
[05:52:59] <Blondie101010> again, a very basic syntax thing
[05:53:10] <Blondie101010> if you get stuck on that, you have to review all basics
[05:53:41] <__adrian> might help you to remember that you should always use { braces } for blocks; do not omit them
[05:53:54] <Blondie101010> he didn't, that's the sad part
[05:54:11] <__adrian> there are no { braces } on that forech()  ;)
[05:54:18] <Blondie101010> :P
[05:57:56] <jargon> dur ";"
[05:58:01] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:58:07] <__adrian> :)
[05:58:29] <__adrian> jargon: now i'll tell you, bro, stop doing global
[06:09:52] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 252 seconds)
[06:10:58] <CoJaBo> TIL PHP doesn't support brotli
[06:15:40] *** Joins: Rockwood (~Rocky@user/rocky)
[06:18:53] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[06:26:40] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[06:35:31] *** Joins: ChanServ (ChanServ@services.libera.chat)
[06:35:31] *** iridium.libera.chat sets mode: +o ChanServ
[06:39:12] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:a24e:316c:c42d:ba7a)
[06:44:20] <jargon> I wish to thank you all, __adrian and Blondie101010 esp. :D *hugs*
[06:44:50] <Blondie101010> np
[06:44:58] <jargon> __adrian I used global $nen and $prj cross-site.
[06:45:28] <Blondie101010> the point was to avoid globals all the time
[06:45:29] <__adrian> i assumed so, that's why i suggested you stop  :)
[06:45:30] <jargon> For example, $nen handles more than one server on the same host.
[06:45:37] <__adrian> what?
[06:47:03] <jargon> While, $prj handles more than one hosted project per server.
[06:49:34] <Blondie101010> that is irrelevant
[06:50:00] <Blondie101010> making it global doesn't make it more versatile across projects, it just encourages you to do bad code on all of them
[06:53:34] <jargon> :(
[06:54:06] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[06:54:15] <jargon> I may not like what you have to say, but I am willing to listen and learn.
[06:54:32] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[06:54:33] <__adrian> function needsPrj() { global $prj; $prj->something(); }  // NOOOOOOOOOO
[06:54:35] <__adrian> function needsPrj(Prj $prj) { $prj->something(); }  // YASSSSSS
[06:54:47] <__adrian> signing off,
[06:56:17] <jargon> __adrian, I am just a hobbyist. Not a professional. I don't have what it takes to be a worthy admin.
[06:56:48] <__adrian> that's not relevant. doing this the right way is not harder, and being a hobbyist doesn't prevent/disallow you from doing it.
[06:57:04] <jargon> I learn slow. v__v
[06:57:10] <__adrian> (doing this  the right way is _easier_, in fact, because it removes a lot of guesswork)
[06:57:13] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:a24e:316c:c42d:ba7a) (Remote host closed the connection)
[06:57:23] <__adrian> you'll learn faster the right way  ;)
[06:57:45] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[06:58:13] <__adrian> when you do  global $x  you have a lot of uncertainty. is $x in the right state right now? does it even exist yet? if i change $x at the wrong time, will it break other code that does  global $x ?
[06:58:32] <jargon> Btw, I keep having to mentally flip back and forth between PHP and BASIC mode in my mind when working on my games versus my letterbox server that hosts them.
[06:58:36] <__adrian> if you take $x as an argument, you don't have to worry about any of those questions.
[06:59:33] <__adrian> also not a big deal
[06:59:46] <jargon> __adrian, I made my own PCRE based server module calleed "nengame"... but it was way too slow.
[07:00:38] <__adrian> just remember: if your function "needs $x" that means $x should be an argument, not a global. if you need your function to make (changes to) $x, that means it should  return $x, not be a global.
[07:00:45] <__adrian> simple to remember
[07:00:54] <Blondie101010> why would you describe how the thing is done without describing what it does?
[07:01:09] <jargon> How do I used global as read only?
[07:01:15] <__adrian> you don't
[07:01:40] <jargon> So there is no "read only" in php?
[07:01:43] <Blondie101010> I won't give you hints to make worse code
[07:01:50] <__adrian> your code might only read a global var, but there's no such thing as a "readonly" global var.
[07:02:01] <__adrian> no, variables cannot be "readonly"
[07:02:04] <jargon> $_SERVER?
[07:02:08] <__adrian> what about it?
[07:02:23] <Blondie101010> start using classes, and I'll show you how to do read-only properties
[07:04:07] <Blondie101010> but that is very rarely useful
[07:05:13] <Blondie101010> if your 2 hands keep fighting with each other, no computer will be able to resolve the conflict
[07:07:03] <jargon> Want to see my foss dev site now that it works again? http://puzzlum.net/?prj=Puzzlum+Release+History
[07:08:04] <Blondie101010> I regret clicking it
[07:08:47] <jargon> It's a letterbox server of all my personal games, source codes and vods.
[07:09:14] <Blondie101010> ok
[07:12:22] <__adrian> night  :)
[07:13:20] <jargon> nini __adrian! :D
[07:16:58] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[07:17:05] <jargon> Blondie101010, what do you do when you aren't busy assisting others in here?
[07:28:07] <jargon> Like, are you subsidized by some powqer that be?
[07:28:26] <jargon> Do you play chess?
[07:29:19] <Blondie101010> I used to play chess back in high school, but I don't like it so much
[07:29:40] <jargon> Oh, you might like my "Roe" engine once I get it working again1 :D
[07:29:58] <jargon> IT is a multiplayer online cross between Chess and Gauntlet! :D
[07:30:07] <Blondie101010> doubt it, and I doubt it would be a good idea for you
[07:31:45] <jargon> Here is an image capture of the only existing beta level from Roe: http://puzzlum.net/showcase/vault/Roe/thumbs/p2092019.png
[07:32:29] <Blondie101010> gosh, I said it's a bad idea for you
[07:33:08] <jargon> But this is the whole reason why I made the website! :<
[07:33:38] <Blondie101010> that's fine, but don't over expose yourself, and try to remain on topic
[07:35:43] <jargon> ok
[07:35:51] *** Joins: steve (~steven@li677-71.members.linode.com)
[08:19:43] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[08:57:39] *** Joins: guidoc (~guido@151.35.249.217)
[09:02:38] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[09:04:21] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[09:05:02] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[09:16:15] *** Joins: pmercado (~pmercado@190.22.89.183)
[09:26:37] *** Quits: pmercado (~pmercado@190.22.89.183) (Quit: Konversation terminated!)
[09:29:08] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[09:29:20] <hans> this is bs, why isn't this legal? https://3v4l.org/2qFOf
[09:29:35] <hans> that should've been legal
[09:31:29] <Naktibalda> to make it more obvious that you have a bug in your code
[09:38:20] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 268 seconds)
[09:39:29] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[09:39:55] <hans> Naktibalda, guess we should make it illegal to ignore return values too then? "to make it more obvious that you have a bug in your code"
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:41:48] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:42:12] <hans> because null'ing a nullable byref argument is very much like ignoring a return value
[09:53:26] <TinoDidriksen> If a function is declared with a return value, then yes it should be an error to not return a value.
[09:54:10] <hans> TinoDidriksen, no, i mean implicitly discarding return values of function calls
[09:54:20] <hans> like <?php print("print returns 1");
[09:55:00] <TinoDidriksen> That would require annotating the function, but sure that's also a good idea. Other languages do that.
[09:57:30] <Naktibalda> references always had special syntax, so it was easy to check. it was much more work for parser to check if a function returns value at the point of calling
[09:59:09] <Naktibalda> all PHP functions actually returned a value until void return type was introduced in 7.1
[09:59:29] <hans> i think they still do return NULL
[10:00:05] <hans> yeah.. https://3v4l.org/pFnMZ
[10:01:00] <hans> (wouldn't surprise me if that becomes a warning/error in the future though)
[10:01:13] <TinoDidriksen> It should
[10:03:00] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[10:09:29] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Remote host closed the connection)
[10:09:36] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[10:09:52] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[10:14:25] *** Quits: jargon (~jargon@184.101.79.161) (Remote host closed the connection)
[10:22:23] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[10:33:51] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[10:35:11] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[10:39:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:43:25] *** Joins: khanred_ (~khanred@user/khanred)
[10:48:33] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:07:40] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Ping timeout: 240 seconds)
[11:31:03] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:36:43] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[11:42:57] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[11:45:13] *** Quits: khanred_ (~khanred@user/khanred) (Read error: Connection reset by peer)
[11:55:09] *** Joins: Ducki (~ducki@user/ducki)
[11:57:19] *** Joins: Forza (~Forza@user/forza)
[12:01:36] *** Quits: Forza (~Forza@user/forza) (Client Quit)
[12:03:52] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 258 seconds)
[12:04:44] *** Joins: Forza (~Forza@user/forza)
[12:11:17] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::7845)
[12:11:54] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[12:20:13] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:22:53] *** Joins: DevAntoi_ (~DevAntoin@185.31.151.122)
[12:24:23] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Read error: Connection reset by peer)
[12:33:35] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:46:51] *** Joins: gry (~quassel@botters/gry)
[12:47:27] *** Joins: Simplar (~Simplar@188.163.92.202)
[12:48:04] <Simplar> Migrating a project from php 5.6 to php8. Getting so much warnings. Most of them are in form of Undefined variable $HTTP_SESSION_VARS (or other global var). Why is that / how to fix?
[12:48:47] <TinoDidriksen> $HTTP_SESSION_VARS was replaced with $_SESSION, and similar.
[12:49:12] <Simplar> if($HTTP_SESSION_VARS) => if($_SESSION) and the problem will go away?
[12:49:51] <Simplar> ....well, no
[12:49:53] <Simplar> Warning: Undefined variable $_SESSION
[12:51:25] <TinoDidriksen> Do you actually have an active session at that time?
[12:51:26] <Naktibalda> remove   global $_SESSION;  because $_SESSION is superglobal
[12:52:22] <Naktibalda> $HTTP_SESSION_VARS was deprecated since PHP 4.2
[12:53:39] <Simplar> Wow. So the codebase is *that* old
[12:59:39] *** Quits: guidoc (~guido@151.35.249.217) (Read error: Connection reset by peer)
[13:02:15] *** Joins: guidoc (~guido@151.19.248.209)
[13:02:34] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[13:02:35] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[13:02:36] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Quit: Bridge terminating on SIGTERM)
[13:05:08] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[13:07:55] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[13:07:55] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[13:08:05] <DrowningElysium> Hey, we are currently adding some behaviour in a query object. However this causes ambiguous id errors when ORM models and relations are queried. I was wondering if someone knows how I can replace the word id everywhere in a multi dimensional array to a certain level.
[13:09:12] <DrowningElysium> id can be a key or value
[13:10:50] <Simplar> https://3v4l.org/TqF4L
[13:10:56] <Simplar> This is the code fragment causing warnings
[13:11:50] <DrowningElysium> Might want to add isset()
[13:13:01] <DrowningElysium> Simplar: https://3v4l.org/5odq9
[13:13:17] <Naktibalda> Simplar: delete all lines with $HTTP_ vars, they are for backwards compatibility with PHP 4.0 and older
[13:13:59] <DrowningElysium> But yeah if you don't need to support older versions anymore, just remove them
[13:14:59] <Simplar> removed!
[13:21:37] *** Joins: tilde (~tilde@129.159.202.197)
[13:22:39] <Simplar> Warning: Undefined variable $PHP_SELF
[13:22:41] <Simplar> ...what.
[13:23:44] <Simplar> Why should people even use $PHP_SELF if it opens your website to attacks
[13:25:32] <AllenJB> Says the person who's extract()ing all the super globals like it's the early 00s
[13:25:52] <Simplar> AllenJB: not my codebase; I just got it to ask experts on how to migrate it
[13:26:12] <Simplar> Probably the guy who was working on this website was making it in the early 00s indeed
[13:28:22] <AllenJB> Also, it's not using PHP_SELF that's the problem. It's not escaping it properly that's the problem - but that goes for any data that ultimately came from user input
[13:29:38] <Simplar> $a = htmlspecialchars($a); ... without declaring $a above the code, why did it work in earlier versions of php?
[13:29:46] <Simplar> in php8, error is printed
[13:29:59] <Simplar> Undefined variable $a
[13:30:43] <AllenJB> That's a warning - the code will continue. to execute: https://3v4l.org/P7cLK
[13:30:50] <AllenJB> In previous versions it was a notice
[13:32:04] <AllenJB> This is why you should not ignore notices in your error reporting settings - as well as pointing out potential bugs in your code, they often get raised to higher reporting levels in newer versions
[13:32:50] <Simplar> Well, but what's the point of this operation
[13:32:58] <Simplar> calling htmlspecialchars on undefined
[13:33:30] <AllenJB> Maybe it's not always undefined (you're extracting all the superglobals apparently, so it could be from request input!)
[13:33:57] <Simplar> $a = isset($a) ? htmlspecialchars($a) : null;
[13:34:02] <Simplar> This will be a good way?
[13:36:13] <AllenJB> If you're using PHP 8, you could do: $a = htmlspecialchars($a ?? "");
[13:36:43] <Simplar> ?? is a thing in php8? woot!
[13:36:47] <Simplar> I'm happy to know
[13:37:04] <AllenJB> It's a thing since 7.something
[13:43:13] <Simplar> What even is the undefined $QUERY_STRING
[13:43:18] <Simplar> Is it from even older php vers?
[13:43:31] <Naktibalda> Simplar: you extracted all superglobals, so there could be parameter named "a" in query string or request body
[13:43:54] <Naktibalda> all your undefined variables are defined by extract()
[13:43:58] <Simplar> Aha, roger that
[13:44:07] <Simplar> ...a moment of serious laughter I caught in this code
[13:44:07] <Naktibalda> it comes from $_SERVER['QUERY_STRING']
[13:44:17] <Simplar> Warning: Undefined array key ""
[13:44:20] <Simplar> Like, why XD
[13:44:26] <Simplar> Why use "" as a key
[13:44:45] <Naktibalda> why not, that's the first valid thing
[13:44:57] <Simplar> ...huh?
[13:45:08] <Simplar> I clearly don't know something
[13:46:19] <Simplar> if($strips[$parts[0]] != TRUE and $parts[0] != ""){
[13:46:27] <Naktibalda> it would certainly improve that code if you started using superglobals directly instead of relying on extracted variables.
[13:46:28] <Simplar> This is what causes the warning about key ""
[13:46:49] <Simplar> It would require an overhaul instead of ensuring the warnings gone
[13:47:02] <Simplar> I don't object against an overhaul tho
[13:47:06] <Naktibalda> can you figure this one on your own ^
[13:47:12] <Simplar> Let me try :)
[13:48:24] <Simplar> $parts doesn't have any items, so it throws a warning?
[13:48:38] <Simplar> Oh wait
[13:48:53] <Simplar> $parts[0] is returning "", so $strips[""] is undefined
[13:48:58] <Simplar> have I got it right?
[13:51:40] *** Quits: Simplar (~Simplar@188.163.92.202) (Quit: Going offline, see ya! (www.adiirc.com))
[14:01:54] *** Quits: Forza (~Forza@user/forza) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:04:59] *** Joins: Forza (~Forza@user/forza)
[14:07:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:30:24] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:40:56] *** Joins: ordos (~ordos@user/ordos)
[15:24:03] <celphi> https://3v4l.org/Fh6SE
[15:35:25] *** Joins: Simplar (~Simplar@188.163.92.202)
[15:49:42] <Naktibalda> Simplar: swap conditions - check $parts first
[15:53:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:53:46] <Simplar> Naktibalda: did exactly that
[15:53:49] <Simplar> the error is gone
[16:00:26] <Simplar> so php doesn't execute the adjacent condition if the first one gives false
[16:01:08] <TinoDidriksen> No language does. Short-circuiting for && is normal.
[16:10:28] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[16:40:18] *** Joins: olle (~olle@p5785bfee.dip0.t-ipconnect.de)
[16:58:10] *** Quits: guidoc (~guido@151.19.248.209) (Read error: Connection reset by peer)
[17:01:07] *** Joins: gefd_ (~Geoff@user/gefd)
[17:02:33] *** Joins: guidoc (~guido@151.57.246.96)
[17:05:18] *** Joins: Poboy (~Poboy@user/poboy)
[17:12:05] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[17:14:36] *** Joins: MalMen (~MalMen@2001:8a0:f017:9400:250:56ff:fe96:782d)
[17:14:40] <MalMen> hi guys
[17:14:57] <MalMen> >>> Carbon\Carbon::now()->subDays(24)->diffForHumans();
[17:14:58] <MalMen> => "ago"
[17:15:03] <MalMen> anyone got this issue with Carbon ?
[17:15:20] <MalMen> couldnt google an awser yet
[17:16:10] <Naktibalda> what diff? have you missed parameter of diffForHumans method?
[17:18:06] <MalMen> I am using it.. on other server it works just fine,  -> => "3 weeks ago"
[17:18:45] <Blondie101010> MalMen:  show the exact line and what both servers output
[17:19:37] <Blondie101010> if you have the same version of everything and time on both sides, they should give the same result
[17:20:55] <MalMen> !paste
[17:21:06] <Blondie101010> !+pastebin
[17:21:07] <php-bot> Submit your code to https://gist.github.com/ or https://paste.gg/ (both support multiple files in a single paste); https://3v4l.org/ (for an actually runnable code, if you actually need it); or any of the other hundred similar Pastebins and post the URL and a summary of your issue to the channel. Please don't flood by pasting code directly into ##php.
[17:21:57] <MalMen> https://gist.github.com/MalMen/a12205f2454f316cd5acb3f435023ce7
[17:22:49] <MalMen> booth have the same Carbon\Carbon::now() result
[17:25:34] <Blondie101010> MalMen:  I don't have much time to look into it, but you need to try to pin point the differences, and I already see a different PHP version, so might as well check if it's in case (though I seriously doubt it)
[17:26:08] *** Quits: DevAntoi_ (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[17:26:30] <Blondie101010> the fact that the working side is outputting x weeks ago and the other is not outputting "weeks", it leads me to wonder about a locale issue
[17:26:40] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[17:28:22] <MalMen> Carbon\Carbon::now()->subDays(24)->diffForHumans(null, true); return "week"
[17:29:37] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:30:10] *** Quits: gefd_ (~Geoff@user/gefd) (Ping timeout: 240 seconds)
[17:30:38] <Blondie101010> find the differences and adjust to pinpoint on the factor causing the issue
[17:31:32] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[17:31:48] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[17:31:55] <MalMen> ok, if I do setLocale('en') it start to show the correct data
[17:34:06] *** Joins: F1R3DoG (~F1R3DoG@2806:108e:19:8b56:cd27:ae2d:9704:7991)
[17:37:27] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:39:18] <MalMen> thanks Blondie101010 ^^
[17:46:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:12:12] *** Quits: F1R3DoG (~F1R3DoG@2806:108e:19:8b56:cd27:ae2d:9704:7991) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:32:09] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:302d:31fb:8cf9:9946)
[18:32:26] *** glider_ is now known as glider
[18:33:56] <celphi> Thoughts? https://3v4l.org/BEim5
[18:34:09] <celphi> Is this what you were talking about __adrian
[18:36:56] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[18:37:23] <AllenJB> My thoughts: What's wrong with all the existing query builder libraries?
[18:37:27] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[18:38:20] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Read error: Connection reset by peer)
[18:38:32] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[18:39:27] *** Joins: F1R3DoG (~F1R3DoG@2806:108e:1f:172b:1882:8e5a:11b1:e9a3)
[18:41:06] *** Quits: F1R3DoG (~F1R3DoG@2806:108e:1f:172b:1882:8e5a:11b1:e9a3) (Client Quit)
[18:42:08] <MalMen> https://gist.github.com/MalMen/85ffc8295edf4bb6b1be8900c11dfd93
[18:45:05] <olle> Security question: Best way to filter string that ends up in href attribute?
[18:45:19] <Naktibalda> MalMen: we don't support libraries here, we help to write PHP code
[18:45:43] <Naktibalda> olle: urlencode(), right?
[18:45:56] <MalMen> Naktibalda understood, thank you
[18:46:07] <olle> Naktibalda: Hmmmm.
[18:46:35] <olle> Naktibalda: Does not encode ':' sign?
[18:46:39] <olle> Does that*
[18:46:41] <AllenJB> olle: What are you trying to protect against?
[18:47:05] <Naktibalda> try it and see
[18:47:07] *** Joins: jgrim230 (~jgrim@172.58.120.44)
[18:47:14] <olle> AllenJB: XSS
[18:47:25] <olle> There's a comment on the php.net page with 61 upvotes :d
[18:48:06] <AllenJB> olle: Assuming it's the entire URL, then htmlentities()
[18:50:35] *** Quits: jgrim23 (~jgrim@d60-65-211-197.col.wideopenwest.com) (Ping timeout: 258 seconds)
[18:50:36] *** jgrim230 is now known as jgrim23
[18:56:02] *** Quits: Simplar (~Simplar@188.163.92.202) (Quit: Going offline, see ya! (www.adiirc.com))
[19:06:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:06:17] *** Joins: Aryan (Aryan@user/aryan)
[19:07:34] <celphi> use htmlspecialchars to prevent xss
[19:08:11] <celphi> olle: ^
[19:10:43] <olle> Right
[19:10:58] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:25:44] <olle> Yeah ok, was missing the Twig url_encode filter ><
[19:36:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:37:02] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:45:38] <__adrian> olle: if you're talking about an attribute value, then make sure you also set ENT_QUOTES
[19:50:10] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::7845) (Ping timeout: 240 seconds)
[19:50:21] <celphi> __adrian: this is whati came up with after our discussion
[19:50:22] <celphi> https://3v4l.org/p9Om4
[19:50:57] <celphi> of course I'll have to expand it but does it look right?
[19:56:21] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[20:03:46] <olle>  __adrian: rawurlencode doesn't do that?
[20:09:24] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Me fail English? That's unpossible.)
[20:11:53] <TinoDidriksen> urlencode() has nothing to do with HTML attribute encoding.
[20:13:27] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[20:14:22] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[20:15:18] <__adrian> htmlspecialchars(urlencode($href), ENT_QUOTES)
[20:15:39] <__adrian> what urlencode does isn't strictly relevant
[20:16:58] <__adrian> celphi: i would very highly recommend using an existing ORM and/or query builder for this sort of thing.
[20:17:23] <__adrian> what _would_ be a good idea to write is an access layer that knows about your business rules.
[20:18:18] <celphi> yeah i wish i could but specific instructions was not to use 3rd party programs (which is dumb)
[20:18:24] <__adrian> e.g., you might have $userStorage->findByEmail($email)  or $userStorage->listOlderThan($age)
[20:18:56] <__adrian> you should definitely not have methods like  ->where() or ->fetch() or ->from()
[20:19:11] <celphi> why
[20:19:27] <__adrian> because that sort of thing already exists
[20:19:39] <celphi> i cant change their database and i cant use 3rd party
[20:19:43] <__adrian> and it's got nothing to do with your app
[20:19:49] *** Joins: molt (~molt@79.140.150.21)
[20:19:57] <Byteflux> But also because doing so unnecessarily creates tight coupling between your business rules to your database backend.
[20:20:12] <__adrian> your app should never say   $user = $db->where("user_id = 12345")
[20:20:31] <__adrian> it should say  $user = $userStorage->findById(12345)
[20:20:43] <__adrian> remember, **there is no database**
[20:20:50] <celphi> yeah if your database was perfect i could do that
[20:21:00] <__adrian> no, you can do it any time
[20:21:07] <Byteflux> It applies universally.
[20:21:26] <celphi> $userStorage has all the users?
[20:21:36] <__adrian> do it.  class UserStorage { public function findById(int $id) { /*your query or whatever goes here*/ } }
[20:21:39] <__adrian> no
[20:21:44] <__adrian> or yes
[20:21:47] <__adrian> depends  :)
[20:21:51] <Byteflux> It has nothing. It's an interface through which you access user information.
[20:22:10] <__adrian> it might be abcked by a DB, it might be a literal collection, it might be a mock collection for testing
[20:22:16] <__adrian> *backed
[20:22:46] <__adrian> it might be backed by a different db. or a text file.  **you don't care**.
[20:22:57] <__adrian> not when you call  $user = ...
[20:23:20] <celphi> im so confused. these guys have like 30line queries with like 10 joins  i dont see how i can make an object for every one of these
[20:24:07] <__adrian> so look at one of those queries. DO NOT WRITE PHP CODE THAT WRITES SQL QUERIES. look at the query and decide what it does.
[20:24:33] <__adrian> what does it do? do it look for users that match given conditions? does it find an invoice and its line items?
[20:24:36] <__adrian> describe.
[20:26:17] <Byteflux> celphi: https://3v4l.org/npbLX
[20:26:44] <__adrian> if you have a class (e.g., UserStorage) that does all the DB stuff, then the DB stuff should be NOWHERE ELSE in your code. the rest of your code should look like there's no database at all.
[20:27:04] <__adrian> Byteflux++
[20:27:10] <Byteflux> I wrote that example that way to demonstrate that you shouldn't care where your data comes from.
[20:27:18] <__adrian> celphi: look at the last line there.
[20:27:27] <__adrian> did that $user come from a db or a file?
[20:28:43] <__adrian> (hint: this is a trick question)
[20:29:51] <celphi> i mean i guess whichever line he uncomments
[20:29:55] <__adrian> YES
[20:29:59] <__adrian> the answer is, you don't know
[20:30:11] <celphi> ok but these guys dont use anything from files
[20:30:11] <__adrian> and hopefully this helps you understand why it DOESN'T MATTER.
[20:30:23] <__adrian> that's fine, that doesn't matter either
[20:30:51] <__adrian> the point is you don't worry about the database when you call $user = $storage->findById(12345);
[20:31:08] <__adrian> there's no sql or anything that builds sql there. not that you can see.
[20:31:16] <__adrian> this is called _encapsulation_
[20:31:30] <celphi> ok but you still have to put the sql somewhere
[20:31:32] <__adrian> it's what classes DO. they HIDE THINGS so you don't know/worry about them.
[20:31:51] <__adrian> see Byteflux's comments in the classes they wrote
[20:32:40] <__adrian> > // SQL query which fetches the user
[20:32:48] <celphi> sure lines 10-14 does one thing - get user by id that's like 1 specific query
[20:33:05] <__adrian> it's the same idea regardless of how complex the query is
[20:33:20] <__adrian> it all gets hidden in a method that describes what it does.
[20:33:25] <Byteflux> you can put the SQL in the findById() method. but the point is that in your application you are using code that "finds a user by their ID" instead of "select ... from users where id = 123"
[20:33:51] <Byteflux> Decouple your application logic from your database details.
[20:34:22] <__adrian> your code says "find user 12345." it does not say "look in the USERS table and find the record where user_id=12345 and also get the records from USER_LOGINS that have ..."
[20:35:17] <celphi> customer->customers_customer->vendors->parts->service_actions: a->b->c->d->e (where b,c,d,e all have an array of info) is one basic example- how am i supposed to build a class that returns the service_actions of a specific b,c,d -
[20:35:34] <__adrian> ok
[20:35:36] <Byteflux> Only the internals of your UserStorage class knows about what a database or users table is. The rest of your application doesn't need to know that. The rest of your application only needs to "find user 123"
[20:35:49] <__adrian> $customerFinder->listUsersThatOrdered($partnumber);
[20:35:56] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[20:36:28] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[20:36:36] <__adrian> or $customerFinder->listUsers()->thatOrdered($partnumber)->thatHadServiceAction($action);
[20:37:04] <__adrian> or something like. whatever that huge complex query _does_, write a method named that.
[20:37:27] <celphi> wouldnt that chain be building a query string?
[20:37:40] <__adrian> probably better like $customerFinder->thatOrdered($partnumber)->thatHadServiceAction($action)->list();
[20:37:47] <__adrian> no idea. i can't see the code.
[20:37:53] <__adrian> THIS ^ is the point.
[20:38:04] <__adrian> only that method knows what it's doing.
[20:38:13] <__adrian> the rest of your application does not. and doesn't care.
[20:39:00] <celphi> i just dont get the customerFinder class
[20:39:05] <__adrian> would that build a compound query: most likey, yes. but note that even so, you don't have any method where() or orderby() or from() or join().
[20:39:18] <Byteflux> *You* know that the CustomerFinder internally is probably building a query, but your application itself doesn't know or care.
[20:39:22] <celphi> like is it (result)->filter->filter->filter?
[20:39:40] <__adrian> there are only application words, like "find customers that ordered this part." there are NO database words at all.
[20:39:56] <celphi> ok so all english words
[20:40:04] <__adrian> result->filter->filter would be rather wasteful and expensive
[20:40:08] <__adrian> "would that build a compound query: most likey, yes. but note that even so, you don't have any method where() or orderby() or from() or join()."
[20:40:34] <celphi> ok bc those methods are db actions
[20:40:38] <__adrian> right
[20:41:02] <Byteflux> And those SQL queries are only happening in one place
[20:41:07] <__adrian> ^
[20:41:13] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Ping timeout: 248 seconds)
[20:41:20] <Byteflux> The rest of your application only knows that if it wants to find customers, it must use the CustomerFinder class
[20:41:34] <Byteflux> It does not know or care that those customers are coming from SQL
[20:41:52] <celphi> i see
[20:41:59] <celphi> i think im starting to get what you mean
[20:42:10] *** Quits: olle (~olle@p5785bfee.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:42:17] <Byteflux> But when you do things like select()->where()->fetch() everywhere in your app, then your app suddenly is using tools that are tightly bound to the concept of SQL.
[20:42:20] <__adrian> it's hard. we're basically saying that the way most everyone does it is backwards.
[20:42:47] <__adrian> it's hard to break that preconcevied notion
[20:44:00] <Byteflux> This is where interfaces can be very useful as a design tool
[20:44:04] <Byteflux> But that's up to you to use them
[20:44:40] <__adrian> ^ yesterday, when i said "write the method names you want to use but don't write any code yet" that basically means "write an interface"
[20:45:18] <__adrian> _actually_ writing and using an interface is good, but didn't want that to cloud the issue/scare you off
[20:46:28] <__adrian> aside: when i have only one implementation, i often give it the interface's name and skip the actual interface. this is simpler, easy to refactor later, and works the same way in the meantime.
[20:46:52] <celphi> you have a good article on interfaces?
[20:47:01] <__adrian> not offhand.
[20:47:15] <__adrian> an interface is all the methods you use, with none of the code.
[20:47:18] <__adrian> nothing more
[20:47:38] <celphi> like abstract functions?
[20:47:41] <__adrian> interface Foo { public function something(string $s) : int $n; }
[20:47:47] <__adrian> basically
[20:48:11] <celphi> the interface only lists the public ones right?
[20:48:29] <Byteflux> Interfaces only deal with public methods, yes
[20:48:34] <Byteflux> Interfaces define a contract of behavior and methods. You create a concrete implementation by *implementing* an interface like `class MysqlCustomerFinder implements CustomerFinder`
[20:48:34] <__adrian> write your classes like this even if you aren't using an interface. start from  class Foo { public function something(string $s) : int $n {/*no code yet*/} }
[20:50:07] <celphi> ok so you're saying make all the functions (or interface functions first - sorta like how pseudo code works) for what i want to do w/o any logic. just funciton names
[20:50:19] <__adrian> > pseudo code  // YES
[20:50:46] <Byteflux> Pretty much, but think very hard about what those functions actually are. They better not be select()->where()->fetch() :P
[20:51:02] <Byteflux> They should be decoupled from the specific details of your database.
[20:51:09] <celphi> aight
[20:51:18] <celphi> ill try that
[20:51:33] <celphi> brb - going to hit up gym then get to coding
[20:51:34] *** Joins: Ducki_ (~ducki@user/ducki)
[20:52:37] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 252 seconds)
[20:57:22] <__adrian> https://www.youtube.com/watch?v=vLXY5Gme-fQ
[20:59:01] *** Quits: guidoc (~guido@151.57.246.96) (Read error: Connection reset by peer)
[21:00:47] <Aryan> Hi
[21:01:04] <Aryan> I want to install https://www.directorylister.com/ on my server
[21:01:12] <Aryan> but I get error 500.
[21:01:19] *** Joins: F1R3DoG (~F1R3DoG@2806:108e:1f:172b:1882:8e5a:11b1:e9a3)
[21:02:19] <Aryan> 192.168.121.138 is currently unable to handle this request.
[21:02:20] <Aryan> HTTP ERROR 500
[21:02:28] <Aryan> I'm using apache
[21:02:47] *** Joins: guidoc (~guido@151.43.92.104)
[21:06:44] *** Parts: Aryan (Aryan@user/aryan) ()
[21:06:49] <__adrian> this channel is not for application support. their site suggests: https://github.com/DirectoryLister/DirectoryLister/discussions
[21:06:55] <__adrian> mmmm k
[21:07:29] <sumthing1980> hello I have a array that vardump gives false to
[21:07:31] <sumthing1980> it is empty
[21:07:48] <__adrian> if var_dump() says "false" then no, you don't have an array
[21:08:03] <sumthing1980> isset($arr['key']) gives false
[21:08:07] <sumthing1980> I mean
[21:08:10] <__adrian> ok
[21:08:24] <sumthing1980> var_dump(isset($r[0]['priority']));
[21:08:25] <sumthing1980> gives false
[21:08:27] <sumthing1980> bool
[21:08:34] <__adrian> so that key isn't set. if you expect it to be set, then go back to the code where you set it
[21:08:48] <sumthing1980> it shows up in print_r [priority]=>
[21:08:50] <sumthing1980> empty
[21:08:58] <__adrian> !+print_r lies
[21:08:58] <php-bot> use var_dump() instead!  print_r() is not helpful (for most purposes; but especially for debugging) as it hides useful information from you.  observe: https://gist.github.com/adrian-enspired/4b165cd0a1debe39aec6  (or)  https://3v4l.org/ThSLb
[21:08:58] *** Joins: Rockwood (~Rocky@user/rocky)
[21:09:01] <sumthing1980> how can I check its existence
[21:09:14] <sumthing1980> I want to see if the key exists basically
[21:09:17] <__adrian> you _are_ checking its existance
[21:09:18] <Rockwood> __adrian, hi h r u sir
[21:09:20] <__adrian> isset()
[21:09:22] <Rockwood> ?
[21:09:29] <sumthing1980> isset gives false
[21:09:51] <__adrian> see above. var_dump($r)
[21:09:51] <sumthing1980> but it shows in print_R
[21:09:59] <__adrian> don't print_r.  var_dump()
[21:10:32] <__adrian> i'd guess it's set to null
[21:10:38] <__adrian> but check
[21:10:56] <sumthing1980> ok
[21:11:09] <sumthing1980> so how can I check if the key exists in the array whatever the content may be
[21:11:20] <__adrian> array_key_exists
[21:11:25] <sumthing1980> aha
[21:11:26] <Rockwood> lol
[21:11:29] <Rockwood> gn
[21:11:32] <Rockwood> cya
[21:11:34] <__adrian> though it's something of a design problem if you don't know whether a key exists
[21:11:36] <Rockwood> soon
[21:12:18] <sumthing1980> thanks
[21:12:45] <sumthing1980> sqlite does not have alter table '' add column if not exists
[21:13:01] <sumthing1980> so I gotta select * limit 1 and see if it is there
[21:13:10] <__adrian> ???
[21:13:18] <__adrian> your application should not be modifying the DB
[21:13:37] <sumthing1980> why not it is my db
[21:14:04] <sumthing1980> it is a work in progress I have many dbs and may need to change things on the go
[21:14:10] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:14:10] <__adrian> creating the DB is the job of an install script
[21:14:19] <__adrian> modifying it is the job of a migration
[21:14:31] <__adrian> your application code should not even have _permissions_ to do these things.
[21:14:49] <sumthing1980> yea this is a different user case
[21:14:53] <sumthing1980> thanks for your concern
[21:18:06] <sumthing1980> and your help
[21:18:15] <__adrian> welcome
[21:28:51] *** Quits: F1R3DoG (~F1R3DoG@2806:108e:1f:172b:1882:8e5a:11b1:e9a3) (Quit: Textual IRC Client: www.textualapp.com)
[21:46:31] *** Joins: junktext (~junktext@77.247.181.210)
[22:18:20] *** Joins: genom (~g@37.214.56.150)
[22:27:57] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[22:30:33] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 248 seconds)
[22:30:33] *** dlundgren_ is now known as dlundgren
[22:43:48] *** Quits: jaguart (~jaguart@178.171.187.81.in-addr.arpa) (Remote host closed the connection)
[22:44:12] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[22:46:39] *** Quits: jaguart (~jaguart@178.171.187.81.in-addr.arpa) (Remote host closed the connection)
[22:47:25] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[22:47:41] *** Joins: dlundgren_ (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[22:49:13] *** Quits: dlundgren (~dlundgren@utm1.ctic-inc.com) (Ping timeout: 248 seconds)
[22:49:13] *** dlundgren_ is now known as dlundgren
[22:54:12] *** Joins: jgrim236 (~jgrim@d118-75-146-29.try.wideopenwest.com)
[22:55:54] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[22:56:18] *** Joins: molt (~molt@79.140.150.21)
[22:56:22] *** Quits: jgrim23 (~jgrim@172.58.120.44) (Ping timeout: 252 seconds)
[22:56:22] *** jgrim236 is now known as jgrim23
[22:58:13] <relipse> When company asks you you desired salary, how do you respond? Do you just give him a number?
[23:14:03] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[23:14:36] *** Joins: Poboy (~Poboy@user/poboy)
[23:18:34] <novns> relipse, "give me all the money you have"
[23:29:51] <__adrian> relipse: avoid companies that won't tell you the salary range you're applying for
[23:29:52] *** Quits: genom (~g@37.214.56.150) (Remote host closed the connection)
[23:30:27] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[23:30:27] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[23:30:27] *** Quits: yuckey2d (~yuckey2d@195.246.120.52) (*.net *.split)
[23:30:27] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[23:30:27] *** Quits: ekl (~ekl@user/ekl) (*.net *.split)
[23:30:27] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[23:30:27] *** Quits: SleePy (SleePy@simplemachines/siteteam/SleePy) (*.net *.split)
[23:30:27] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[23:30:27] *** Quits: infernix (~nix@2a02:22a0:bbb1:d500::2) (*.net *.split)
[23:30:27] *** Quits: pk004 (~pk004@user/pk004) (*.net *.split)
[23:30:27] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[23:30:40] *** Joins: ekl (~ekl@user/ekl)
[23:30:43] *** Joins: barlas (~aqeel@user/barlas)
[23:30:49] <__adrian> if anyone asks you what your desired salary is, you don't answer.
[23:30:58] <AllenJB> Yeah, but (in the UK anyway) they just say like £35-55k DoE
[23:31:02] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[23:31:06] *** Joins: yuckey2d (~yuckey2d@195.246.120.52)
[23:31:07] <__adrian> then say $55k
[23:31:11] *** Joins: SleePy (~SleePy@simplemachines/siteteam/SleePy)
[23:31:11] <__adrian> :p
[23:31:36] *** Joins: B3k (~B3k@b3k.pl)
[23:32:09] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:24] <__adrian> but seriously, range for position + your experience + how interesting/enjoyable you expect the job to be + other benefits
[23:32:42] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[23:32:48] <__adrian> in the end, if you like the range, you say it's negotiable, make your offer
[23:33:13] <__adrian> saying a number will only hurt you
[23:33:15] *** Joins: mjsir911 (~bnc@user/mjsir911)
[23:33:46] <__adrian> "oooh they have unrealistic expectations"  "ooooh they're too expensive for us"  "oooh we can get them dirt cheap"
[23:33:53] <__adrian> never helps. always hurts.
[23:34:36] <__adrian> bonus: companies that hide their salaries are often on the less-great-to-work-for end of the specturm
[23:35:42] *** Joins: pk004 (~pk004@user/pk004)
[23:36:59] *** Joins: s1b1 (~s1b1@user/s1b1)
[23:40:37] <relipse> why do companies ask for previous salary info
[23:40:39] <relipse> i hate that
[23:40:51] <relipse> i want to say none of your business
[23:42:10] <TinoDidriksen> Salary should be public information.
[23:42:17] <TinoDidriksen> It is in Norway.
[23:42:53] <relipse> oh really
[23:42:59] <relipse> wierd
[23:43:02] <relipse> its really private in the us
[23:43:09] <AllenJB> Because they want an excuse to pay you less
[23:43:39] *** Joins: infernix (nix@spirit.infernix.net)
[23:43:47] <relipse> there is this job I want, everything is really good but the compensation is kind of low
[23:43:56] <relipse> I'm not sure how to approach the interview
[23:45:13] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[23:49:41] *** Quits: guidoc (~guido@151.43.92.104) (Quit: WeeChat 3.2)
[23:58:47] <__adrian> up to you how far to push it
[23:59:11] <__adrian> depends on how good (happy) the job is, lots of other stuff
[23:59:57] <__adrian> e.g., if you like your coworkers and get 100% medical and good PTO, then a lower salary might be ok
