[00:08:26] <FromGitter> <lebensterben> a buffer shows a snapshot of a file or some output from special modes.
[00:09:49] <FromGitter> <lebensterben> a buffer is not tied to a project
[00:11:44] <FromGitter> <lebensterben> a layer is an abstraction we made in Spacemacs that encapsulates a set of packages with certain configurations
[01:52:13] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[01:52:14] <vatrat> layout^2
[01:52:17] <vatrat> layout^3
[01:52:30] <vatrat> buffer^-3
[01:54:10] <vatrat> can we just steal "pane" from vim and make it mean workspace (of layouts)
[01:54:53] <vatrat> or to make it worse, replace window with pane, replace layout with window, and replace workspace with layout
[01:55:05] <vatrat> just shit all over the emacs terminology
[01:57:14] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[02:06:39] <FromGitter> <rappie> ah yes sorry i meant layout instead of layer. but to rephrase my question: what exactly detemines you being "in" a project? when will `SPC p` work and when do i stay in or leave a project while switching between layouts/workspaces/buffers/<add-term-here-i-dont-know-yet>? :)
[02:15:07] *** Quits: vatrat (~vatrat@198.90.108.110) (Ping timeout: 256 seconds)
[02:21:51] <FromGitter> <lebensterben> projectile automatically determines a file is in a project if it found a version control system (and if that path is not excluded)
[02:22:50] <FromGitter> <lebensterben> also it by default support a few package build system like maven
[02:23:21] <FromGitter> <lebensterben> but you can also manually make a path as a project root
[02:23:32] <FromGitter> <lebensterben> see https://projectile.mx
[02:25:38] <FromGitter> <rappie> ok thanks :)
[03:50:57] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Ping timeout: 240 seconds)
[04:42:46] *** Joins: vatrat (~vatrat@2607:fb90:e349:4a75:b7ce:9d11:827d:c149)
[04:46:29] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[05:01:57] *** Quits: vatrat (~vatrat@2607:fb90:e349:4a75:b7ce:9d11:827d:c149) (Ping timeout: 240 seconds)
[05:13:05] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[05:46:07] *** Joins: vatrat (~vatrat@198.90.108.110)
[06:23:17] *** Quits: baldlizard (~Thunderbi@p5798577f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:40:53] *** Quits: vatrat (~vatrat@198.90.108.110) (Ping timeout: 268 seconds)
[07:20:42] *** Joins: vatrat (~vatrat@198.90.108.213)
[07:48:22] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Quit: Leaving)
[07:56:28] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791)
[07:56:57] *** Quits: vatrat (~vatrat@198.90.108.213) (Ping timeout: 240 seconds)
[08:03:54] *** Joins: vatrat (~vatrat@198.90.108.110)
[08:19:54] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:2b70:9bf7:d290:b791) (Remote host closed the connection)
[09:05:40] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[10:05:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 240 seconds)
[12:14:37] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[13:08:54] *** Joins: baldlizard (~Thunderbi@p57985ae5.dip0.t-ipconnect.de)
[13:17:26] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Quit: Leaving)
[16:04:40] *** Quits: baldlizard (~Thunderbi@p57985ae5.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:27:05] <FromGitter> <fran-penedo> hey all, I ask for your opinion: how do you prefer to "run" a project? I'm currently aware of two ways: from terminal, which requires you to go to the terminal window (`SPC p '` so you land in project root) and type or find in history the right command; or with the compile command (`SPC p c`), which can be run from any project buffer, but does not keep stdout history from previous runs.
[16:53:27] *** Joins: baldlizard (~Thunderbi@p200300f0c704d200fb99d5d929d6eaa2.dip0.t-ipconnect.de)
[17:22:39] <vatrat> personally I like to run projects in an emacs ansi-term from the compile command, but modify the command it runs based on project
[17:23:02] <vatrat> if I have more than one monitor I'll use multiple emacs frames for that
[17:28:04] <FromGitter> <fran-penedo> wait, you mean you can make the compile command output to a terminal instead of the compilation buffer?
[17:48:04] <vatrat> is <fran-penedo> your name?
[17:48:12] <vatrat> I thought you were talking to someone with that name
[17:48:27] <vatrat> say "vatrat:" if you want to get my attention
[17:48:46] <vatrat> I'm fairly certain you can replace it with a call to ansi-term and pass the command to ansi-term
[17:49:20] <FromGitter> <fran-penedo> vatrat: oh, let me see if I can figure it out
[18:02:46] <vatrat> I'm not sure how to mention you, but it's probably not the *accepted* solution for the task, but because of the way emacs is written, it should be just as good.
[18:03:13] <vatrat> I'd start with `describe- functions
[18:04:13] <vatrat> `SPC h d k` will give you descrie-key, then press `SPC p c` to see info on projectile-compile-project.
[18:04:35] <vatrat> From there you can see it's a function in projectile.el, and there is some manual information
[18:04:56] <vatrat> Reading the function definition in projectile.el should help write your own function
[18:06:45] <vatrat> In particular, look at "projectile-compilation-command" in projectile.el, see that it has comments explaining where it finds that command.
[18:09:59] <vatrat> Another setting that may actually fix this whole issue for you is "projectile-per-project-compilation-buffer", that may make the buffer not lose its contents on each compile
[18:10:06] <vatrat> <fran-penedo>
[18:10:25] <vatrat> fran-penedo:
[18:14:22] *** Joins: Mooncairn (~mooncairn@user/mooncairn)
[18:22:29] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:31:04] *** Quits: baldlizard (~Thunderbi@p200300f0c704d200fb99d5d929d6eaa2.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:36:18] *** Joins: baldlizard (~Thunderbi@p57985ae5.dip0.t-ipconnect.de)
[18:58:57] *** Quits: vatrat (~vatrat@198.90.108.110) (Ping timeout: 240 seconds)
[19:26:08] <FromGitter> <lebensterben> > how do you prefer to "run" a project ‚èé  ‚èé this largely depends on the language.
[19:26:35] <FromGitter> <lebensterben> many languages have major-mode specific commands.
[19:27:31] <FromGitter> <lebensterben> ansi-term is too slow to use. even vterm is too slow, comparing to alacrity.
[19:28:43] <FromGitter> <lebensterben> I always use native terminal emulator outside of Emacs
[19:33:34] *** Joins: vatrat (~vatrat@131.204.254.86)
[20:24:15] *** Quits: vatrat (~vatrat@131.204.254.86) (Ping timeout: 256 seconds)
[20:54:08] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[21:30:43] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:24] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:38:44] *** Joins: vatrat (~vatrat@131.204.254.86)
[22:24:57] *** Quits: vatrat (~vatrat@131.204.254.86) (Ping timeout: 240 seconds)
[22:38:11] *** Joins: vatrat (~vatrat@131.204.254.86)
[22:58:43] *** Quits: vatrat (~vatrat@131.204.254.86) (Quit: quitteded it)
[23:28:18] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
