[00:02:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:05:12] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[00:05:17] *** Joins: monkey_ (~user@190.104.116.153)
[00:07:08] *** sysRPN is now known as sysRPL
[00:07:40] *** Joins: duuude (~user@user/duuude)
[00:08:02] *** Joins: nvrhome (~Bop@user/nvrhome)
[00:09:12] *** Joins: JarbonFeh (~user@197.15.249.236)
[00:10:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:11:57] *** Joins: retro_ (~retro@05412d78.skybroadband.com)
[00:14:25] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[00:15:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:15:41] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[00:15:41] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[00:17:24] *** Joins: mrig (~mrig@user/mrig)
[00:17:35] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:18:10] *** Quits: JarbonFeh (~user@197.15.249.236) (Quit: ERC (IRC client for Emacs 27.2))
[00:18:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:21:37] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77)
[00:26:12] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:492a:4f1b:6342:37fe)
[00:26:42] *** Quits: WAR10CK (~WAR10CK@14.223.181.120) (Quit: Leaving)
[00:32:29] *** Joins: pony (sid524992@smol/hors)
[00:34:20] *** Parts: smol-hors (sid524992@smol/hors) ()
[00:34:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:37:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:38:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:40:37] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[00:45:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:45:37] *** Quits: dlx (~tom@05432be4.skybroadband.com) (Ping timeout: 240 seconds)
[00:46:43] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:48:38] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[00:50:26] <meator> Hello. Will strlen("a string literal") be computed at compile time?
[00:51:25] <Twix> usually with modern optimizing compilers, yes
[00:53:20] *** Joins: Hax0r (~Hax0r@146.251.110.211)
[00:53:26] *** Quits: Hax0r (~Hax0r@146.251.110.211) (Remote host closed the connection)
[00:53:53] *** Joins: Darkcoal (~user@167.86.137.72)
[00:54:05] <sham1> Yeah. No reason not to
[00:54:22] <fizzie> It's not an integer constant expression, though, so you don't get to do things like `static char buffer[strlen("foo") + 1];` or `switch (...) { case strlen("abc"): ... }`. Okay, that last one's a little far-fetched anyway.
[00:54:39] *** Joins: Hax0r (~Hax0r@146.251.110.211)
[00:54:43] *** Quits: Hax0r (~Hax0r@146.251.110.211) (Max SendQ exceeded)
[00:55:08] *** Joins: Hax0r (~Hax0r@146.251.110.211)
[00:55:26] <pragma-> I don't see any reason why the compiler could not reduce strlen on a string literal to a constant expression. It's not like string literals change.
[00:55:34] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[00:55:39] <pragma-> Bit annoying.
[00:55:49] <nitrix> Both GCC and Clang seems to go with the optimization even on -O0.
[00:55:52] <Twix> but strlen is a function not an operator
[00:55:59] <pragma-> Twix: So?
[00:56:24] <Twix> isn't it?
[00:56:37] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[00:57:09] <caze> Sew buttons.
[00:57:29] <meator> So I should use 16 instead of strlen("a string literal").
[00:57:46] <caze> No, do not do that.
[00:58:06] <fizzie> `sizeof "a string literal" - 1` is an option also, but it may be a little obscure-looking.
[00:59:36] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:00:11] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[01:00:43] <sham1> Twix: strlen being a function is irrelevant because you know that a string literal cannnot change, and the compiler knows its semantics, so it could very easily reduce the return value to a constant integer, but for whatever reason it doesn't
[01:01:00] <meator> So I should trust the compiled instead.
[01:01:12] <sham1> Maybe there's some stuff in the spec such that it just can't without changing the semantics, in which case bleh
[01:02:31] <sham1> Known functions when using constant data should be allowed to be reduced to constant expressions
[01:02:42] <fizzie> There's an explicit permission to make new things constant expressions (C11 6.6p10: "An implementation may accept other forms of constant expressions."), so I guess it would've been more precise to say it isn't _necessarily_ a constant expression. (And I don't think implementations usually make it one, though they do compute it at compile time.)
[01:03:15] <sham1> In that case I can't think of any rationale for why not. The compiler already knows the value
[01:03:21] <caze> Are we talking about why the compiler can or cannot optimize the call?
[01:03:33] <caze> It obviously can.
[01:03:38] <caze> It's not required to.
[01:04:03] <sham1> We're talking about why something like static char buf[strlen("foo") + 1]; won't be allowable even though it totally could be, and IMO should be
[01:04:20] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:04:34] *** Joins: smoke (~smoke@user/smoke)
[01:04:58] <sham1> Even if it may be an implementation-specific thing, that'd still be better than not
[01:05:00] <caze> Because then every compiler would be required to make the calculation at compile time.
[01:05:03] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:05:30] <sham1> Well no, it wouldn't. clang and gcc already know the value at compile time yet they don't use them
[01:07:36] <sham1> static char buf[strlen("foo") + 1] has no reason to be any different from static char buf[4] under clang and gcc considering that as fizzie quoted, an implementation is allowed to treat that as a constant expression
[01:07:38] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:07:46] *** Joins: echoSMILE (uid504326@user/echosmile)
[01:08:20] <caze> When about an implementation that doesn't treat that as a constant expression?
[01:09:00] <caze> What is it supposed to do when asked to translate that code?
[01:09:27] <sham1> Well it can fail by saying "yo, this isn't a constant expression". I'm purely talking about implementation-specified behaviour here
[01:09:31] *** Joins: u0_a391 (~u0_a391@2600:380:a469:3f77:9f8f:36c9:5069:e0a7)
[01:09:47] <caze> You're talking about a non-standard extension.
[01:09:51] <sham1> Yes
[01:10:06] <pragma-> Turbo C23
[01:10:11] <nitrix> You changed the framing of the question midway after caze answered you.
[01:11:21] <sham1> Did I? "Even if it may be an implementation-specific thing, that'd still be better than notEven if it may be an implementation-specific thing, that'd still be better than not" I think I expressed clearly that I was talking about non-standard things an implementation could do
[01:12:00] <sham1> But if I didn't, I apologise. But yeah, I meant a non-standard extension which would potentially trip up -Wpedantic
[01:13:02] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:13:19] *** u0_a391 is now known as Kit
[01:14:40] <caze> I don't think anyone was doubting whether it could be an extension.
[01:15:03] <sham1> Indeed. I'm more just questioning "why is it not"
[01:15:04] *** Quits: teut (~teut@2401:4900:1c68:4942:fd32:de7a:2e8b:a50a) (Quit: Client closed)
[01:15:30] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[01:15:44] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:16:28] <caze> They already do zero sized arrays.
[01:17:57] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:d365:2d3d:255:f608) (Ping timeout: 250 seconds)
[01:19:09] <meator> Well, you have answered my question. Thanks! Happy new year!
[01:19:16] <sham1> HNY!
[01:21:18] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:21:19] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:21:19] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:21:19] *** Joins: wroathe (~wroathe@user/wroathe)
[01:21:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 240 seconds)
[01:22:50] *** Joins: acerbic (~acerbic@cs-xdata-50-86-49-144.cspire.com)
[01:23:00] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[01:23:12] *** Joins: aradesh (~aradesh@user/aradesh)
[01:28:00] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Remote host closed the connection)
[01:28:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[01:30:12] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[01:30:32] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:30:36] *** Joins: Techcable (~Techcable@168.235.93.147)
[01:31:51] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[01:32:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[01:32:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:492a:4f1b:6342:37fe) (Quit: Quit)
[01:32:57] *** Joins: Techcable (~Techcable@168.235.93.147)
[01:33:21] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[01:34:37] *** Joins: semeion (~semeion@user/semeion)
[01:34:51] *** Quits: Techcable (~Techcable@168.235.93.147) (Client Quit)
[01:35:57] *** Joins: Techcable (~Techcable@168.235.93.147)
[01:36:42] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[01:37:20] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[01:37:45] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:38:29] *** Joins: magla (~gelignite@55d465a4.access.ecotel.net)
[01:38:50] *** Quits: Techcable (~Techcable@168.235.93.147) (Client Quit)
[01:38:57] *** Quits: jimboj1m (~jimboj1m@static-71-166-63-68.bltmmd.fios.verizon.net) (Ping timeout: 268 seconds)
[01:39:05] *** Joins: Techcable (~Techcable@168.235.93.147)
[01:41:24] *** Quits: Hax0r (~Hax0r@146.251.110.211) (Quit: Leaving)
[01:44:27] *** Joins: dlx (~tom@05432be4.skybroadband.com)
[01:46:54] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[01:50:24] *** Quits: Darkcoal (~user@167.86.137.72) (Quit: Darkcoal)
[01:50:31] *** Joins: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[01:51:38] *** Joins: jimboj1m (~jimboj1m@96.234.171.7)
[01:54:05] *** Joins: Burgundy (~yomon@79.115.213.171)
[01:55:32] *** Quits: yomon (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[01:56:01] *** Quits: zer0bitz (~zer0bitz@196.244.192.54) (Ping timeout: 256 seconds)
[01:56:11] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 245 seconds)
[01:57:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:57:26] *** Quits: Darkcoal (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 268 seconds)
[01:57:43] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[01:58:21] *** Quits: Akuli (~Akuli@85-76-42-63-nat.elisa-mobile.fi) (Quit: Akuli)
[01:58:50] *** Joins: newchair (~newchair@d-24-145-4-109.paw.cpe.atlanticbb.net)
[01:59:02] *** Joins: Darkcoal (~user@167.86.137.72)
[01:59:05] *** Quits: newchair (~newchair@d-24-145-4-109.paw.cpe.atlanticbb.net) (Client Quit)
[02:00:22] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:d903:d876:1354:7b4c)
[02:01:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:07:56] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[02:11:14] *** Joins: hiovoltage (~hiovoltag@176.88.83.200)
[02:11:37] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[02:11:59] *** Quits: egm (~egm@user/egm) (Remote host closed the connection)
[02:12:19] *** Joins: inlight (~inlight@157.35.20.3)
[02:12:19] *** Quits: inlight (~inlight@157.35.20.3) (Changing host)
[02:12:19] *** Joins: inlight (~inlight@user/inlight)
[02:12:33] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:12:49] *** Quits: acerbic (~acerbic@cs-xdata-50-86-49-144.cspire.com) (Read error: Connection reset by peer)
[02:20:10] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[02:22:45] *** Joins: palindrome (~jhonny@51.37.129.66)
[02:23:49] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[02:23:55] <palindrome> it might be not related to the language, but if I have struct { ... somefields } Foo SEC(".maps"). What does SEC(".maps") mean?
[02:25:12] *** Joins: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net)
[02:25:51] <clarity> https://stackoverflow.com/questions/67553794/what-is-variable-attribute-sec-means
[02:26:38] <dan_pena> Hello guys, I'm looking to get tutored by a senior developer for 50$/hour to learn about writting clean and professional code. So, if someone is interested tell me ^ ^
[02:29:13] <wroathe> What about writing unprofessional code? How much will you pay for that?
[02:31:00] <dan_pena> wroathe: 0 I can do it myself
[02:31:21] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.190) (Ping timeout: 268 seconds)
[02:31:28] <dan_pena> XD
[02:32:01] <dan_pena> wroathe: By that I mean I want to learn about conventions and so on that are used by devs in a professional environnement
[02:32:50] <palindrome> clarity: thanks a lot, dude
[02:33:25] *** Quits: pizdets (~pizdets@183.182.110.8) (Ping timeout: 256 seconds)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.115.80)
[02:34:23] <nitrix> I'd recommend working on smaller side projects and asking for code reviews from time to time.
[02:34:40] <novns> dan_pena, delay the most important coding until the last minute f the deadline, start smoking two packs a day, and never sleep
[02:34:46] <novns> *of
[02:34:47] <nitrix> A lot of the things we preach you wont really understand until you're put in the situation.
[02:34:53] <novns> that what professionals do
[02:35:19] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[02:37:23] <novns> *that's
[02:38:07] *** Joins: geli (~gelignite@55d465a4.access.ecotel.net)
[02:38:24] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[02:38:28] <caze> dan_pena: Wouldn't you rather get paid $50/hour to be told how to write?
[02:38:33] *** Joins: p0g0_ (~p0g0@216.211.153.38)
[02:38:51] *** Joins: wroathe_ (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:38:58] *** Joins: begriffs_ (~begriffs@user/begriffs)
[02:39:05] *** Joins: soapsudsxx_ (~soapsudsx@141.193.188.154)
[02:39:24] *** Joins: smoke (~smoke@user/smoke)
[02:39:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.92)
[02:39:31] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[02:39:33] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[02:39:37] *** Joins: pnill_ (~pnill@ip170.ip-54-39-37.net)
[02:39:49] *** Joins: combengue (~Thunderbi@207.191.249.160)
[02:40:03] *** Joins: drin (~Geezabisc@user/geezabiscuit)
[02:40:03] *** Joins: Red__ (~Red@97.109-247-81.customer.lyse.net)
[02:40:04] *** Joins: alicef_ (~none@gentoo/developer/alicef)
[02:40:09] *** Joins: nullptr_ (~nullptr@user/nullptr/x-2182142)
[02:40:10] *** Joins: cursey_ (~cursey@user/cursey)
[02:40:25] *** Joins: hexeme (~hexeme@user/hexeme)
[02:40:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:40:51] *** Joins: dansan_ (~daniel@75.81.148.51)
[02:41:04] *** Joins: wyre_ (~wyre@user/wyre)
[02:41:13] <sham1> novns: I feel personally attacked
[02:41:24] *** Joins: zensei1 (~zensei@user/zensei)
[02:41:42] *** Joins: Trashlord__ (~trash@user/trashlord)
[02:42:12] *** Joins: bliminse_ (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[02:42:14] *** Joins: ndorf_ (~nd@ob.noxio.us)
[02:42:15] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:42:15] *** Joins: rcf1 (rcf@iceland.sdf.org)
[02:42:29] <novns> sham1, nothing personal, it's just business
[02:42:31] *** Joins: Maxdaman1us (~Maxdamant@user/maxdamantus)
[02:42:34] *** Joins: HisShadow_ (~HisShadow@user/hisshadow)
[02:42:48] *** Joins: Hawker_ (~pi@user/hawker)
[02:42:53] *** Joins: Darkcoal_ (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb)
[02:42:57] *** sokan is now known as sam___
[02:42:59] *** Joins: Terlisimo1 (~Terlisimo@outofband.ozna.net)
[02:43:02] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[02:43:04] *** Joins: mdw_ (~root@159.65.86.163)
[02:43:10] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[02:43:11] *** Joins: Nitrousoxide_ (~msdos@user/nitrousoxide)
[02:43:26] *** sam___ is now known as sokan
[02:44:47] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[02:46:00] *** Joins: jaeckel_ (~jaeckel@sleipnir.jaeckel.eu)
[02:46:36] *** Joins: marcj- (~marc@205.175.215.25)
[02:46:47] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Quit: Lost terminal)
[02:47:11] *** Joins: nop (~Murray@89.109-247-180.customer.lyse.net)
[02:47:16] *** Joins: Teckla_ (~Teckla@user/teckla)
[02:47:20] *** Joins: asd_ (~noname@user/asd)
[02:47:27] *** Quits: Darkcoal (~user@167.86.137.72) (*.net *.split)
[02:47:27] *** Quits: imm_ (~imm_@user/imm/x-3405860) (*.net *.split)
[02:47:27] *** Quits: Burgundy (~yomon@79.115.213.171) (*.net *.split)
[02:47:27] *** Quits: jimboj1m (~jimboj1m@96.234.171.7) (*.net *.split)
[02:47:27] *** Quits: magla (~gelignite@55d465a4.access.ecotel.net) (*.net *.split)
[02:47:27] *** Quits: wroathe (~wroathe@user/wroathe) (*.net *.split)
[02:47:27] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (*.net *.split)
[02:47:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[02:47:28] *** Quits: the_lanetly_052_ (~the_lanet@194.135.166.92) (*.net *.split)
[02:47:28] *** Quits: Charadon (~Charadon@155.138.164.183) (*.net *.split)
[02:47:28] *** Quits: meator (~meator@user/meator) (*.net *.split)
[02:47:28] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[02:47:28] *** Quits: AmR (~AmREiSa@156.199.20.227) (*.net *.split)
[02:47:28] *** Quits: Akiva (~Akiva@user/Akiva) (*.net *.split)
[02:47:28] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (*.net *.split)
[02:47:28] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[02:47:28] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (*.net *.split)
[02:47:28] *** Quits: Torr (~Torr@user/torr) (*.net *.split)
[02:47:28] *** Quits: et09 (~et09@user/et09) (*.net *.split)
[02:47:28] *** Quits: asd (~noname@user/asd) (*.net *.split)
[02:47:28] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (*.net *.split)
[02:47:28] *** Quits: strajder (~strajder@user/strajder) (*.net *.split)
[02:47:28] *** Quits: csrf (~csrf@user/csrf) (*.net *.split)
[02:47:28] *** Quits: bud (~bud@user/bud) (*.net *.split)
[02:47:28] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[02:47:28] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (*.net *.split)
[02:47:28] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[02:47:28] *** Quits: zmt00 (~zmt00@user/zmt00) (*.net *.split)
[02:47:28] *** Quits: p0g0 (~p0g0@216.211.153.38) (*.net *.split)
[02:47:28] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[02:47:28] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[02:47:28] *** Quits: synbiose (~synbiose@user/synbiose) (*.net *.split)
[02:47:28] *** Quits: foul_owl (~kerry@94.140.8.106) (*.net *.split)
[02:47:28] *** Quits: x88x88x (~x88x88x@149.28.53.172) (*.net *.split)
[02:47:28] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (*.net *.split)
[02:47:28] *** Quits: edk (~edk@libera/staff/edk) (*.net *.split)
[02:47:28] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[02:47:28] *** Quits: w41 (~w41@45.76.32.7) (*.net *.split)
[02:47:28] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[02:47:28] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[02:47:28] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (*.net *.split)
[02:47:28] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[02:47:28] *** Quits: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com) (*.net *.split)
[02:47:28] *** Quits: kzootech (~contact@kzoo.tech) (*.net *.split)
[02:47:28] *** Quits: zensei (~zensei@user/zensei) (*.net *.split)
[02:47:28] *** Quits: aighearach (~paris@user/aighearach) (*.net *.split)
[02:47:28] *** Quits: DrNick42_ (~DrNick42@bastion.spikeyfishtech.uk) (*.net *.split)
[02:47:28] *** Quits: geezabiscuit (~Geezabisc@user/geezabiscuit) (*.net *.split)
[02:47:28] *** Quits: kapil (~kapil@okweb.co.in) (*.net *.split)
[02:47:28] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[02:47:28] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (*.net *.split)
[02:47:28] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (*.net *.split)
[02:47:28] *** Quits: rcf (~rcf@iceland.sdf.org) (*.net *.split)
[02:47:28] *** Quits: tbcr (~tbcr@107.13.189.161) (*.net *.split)
[02:47:28] *** Quits: kristian84 (~asdf@ti0037a400-4119.bb.online.no) (*.net *.split)
[02:47:28] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (*.net *.split)
[02:47:28] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[02:47:28] *** Quits: EtherNet (~ethernet@user/ethernet) (*.net *.split)
[02:47:28] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[02:47:28] *** Quits: noose (~noose@user/noose) (*.net *.split)
[02:47:28] *** Quits: begriffs (~begriffs@user/begriffs) (*.net *.split)
[02:47:28] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[02:47:28] *** Quits: |smlckz| (~smlckz@user/smlckz) (*.net *.split)
[02:47:28] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (*.net *.split)
[02:47:28] *** Quits: nullptr| (~nullptr@user/nullptr/x-2182142) (*.net *.split)
[02:47:28] *** Quits: heftig (heftig@archlinux/developer/heftig) (*.net *.split)
[02:47:28] *** Quits: alicef (~none@gentoo/developer/alicef) (*.net *.split)
[02:47:28] *** Quits: kuku01 (~kuku@user/kuku) (*.net *.split)
[02:47:28] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[02:47:28] *** Quits: jaeckel (~jaeckel@sleipnir.jaeckel.eu) (*.net *.split)
[02:47:28] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[02:47:28] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (*.net *.split)
[02:47:28] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[02:47:28] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[02:47:28] *** Quits: majors (~majors@user/majors) (*.net *.split)
[02:47:28] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (*.net *.split)
[02:47:28] *** Quits: Ryozuki (~Ryozuki@user/ryozuki) (*.net *.split)
[02:47:28] *** Quits: HisShadow (~HisShadow@user/hisshadow) (*.net *.split)
[02:47:28] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[02:47:28] *** Quits: xcm (~xcm@user/xcm) (*.net *.split)
[02:47:28] *** Quits: mdw (~root@159.65.86.163) (*.net *.split)
[02:47:28] *** Quits: Hawker (~pi@user/hawker) (*.net *.split)
[02:47:28] *** Quits: marcj (~marc@205.175.215.25) (*.net *.split)
[02:47:28] *** Quits: shan (~shan@cyblog/maintainer/shan) (*.net *.split)
[02:47:28] *** Quits: jan6 (jan6@tilde.team/user/jan6) (*.net *.split)
[02:47:29] *** Quits: joev (~joev@user/joev) (*.net *.split)
[02:47:29] *** Quits: ndorf (~nd@23.95.130.20) (*.net *.split)
[02:47:29] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (*.net *.split)
[02:47:29] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[02:47:29] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (*.net *.split)
[02:47:29] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[02:47:29] *** Quits: moose (~moose@user/moose) (*.net *.split)
[02:47:29] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[02:47:29] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[02:47:29] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[02:47:29] *** Quits: vinay (~Vinay@user/vinay-keshava) (*.net *.split)
[02:47:29] *** Quits: avar (avar@vm.nix.is) (*.net *.split)
[02:47:29] *** Quits: crudo (~crudo@livredigital.com) (*.net *.split)
[02:47:29] *** Quits: finalsummer (~finalsumm@user/finalsummer) (*.net *.split)
[02:47:29] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[02:47:29] *** Quits: mrec (~markus@user/mrec) (*.net *.split)
[02:47:29] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (*.net *.split)
[02:47:29] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (*.net *.split)
[02:47:29] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[02:47:34] *** combengue is now known as cmbengue
[02:47:44] *** Joins: synbiose (~synbiose@coxa.pt)
[02:47:57] *** Quits: Darkcoal_ (~user@2001:16a2:7a1f:b00:ca86:5f6b:1065:2cb) (Ping timeout: 240 seconds)
[02:50:13] *** Joins: Darkcoal_ (~user@167.86.137.72)
[02:50:25] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[02:50:25] *** Joins: YellowSuB (~YellowSuB@213.190.118.49)
[02:50:25] *** Joins: jan6 (jan6@tilde.cafe)
[02:50:25] *** Joins: finsternis (~X@23.226.237.192)
[02:50:25] *** Joins: joev (~joev@pool-108-34-251-123.prvdri.fios.verizon.net)
[02:50:25] *** Joins: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net)
[02:50:25] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[02:50:25] *** Joins: Burgundy (~yomon@79.115.213.171)
[02:50:25] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[02:50:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:50:25] *** Joins: AmR (~AmREiSa@156.199.20.227)
[02:50:25] *** Joins: et09 (~et09@user/et09)
[02:50:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[02:50:25] *** Joins: foul_owl (~kerry@94.140.8.106)
[02:50:25] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[02:50:25] *** Joins: edk (~edk@libera/staff/edk)
[02:50:25] *** Joins: w41 (~w41@45.76.32.7)
[02:50:25] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[02:50:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:50:25] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[02:50:25] *** Joins: ra4king (~ra4king@roiatalla.com)
[02:50:25] *** Joins: kzootech (~contact@kzoo.tech)
[02:50:25] *** Joins: aighearach (~paris@user/aighearach)
[02:50:25] *** Joins: kapil (~kapil@okweb.co.in)
[02:50:25] *** Joins: noarb (~noarb@user/noarb)
[02:50:25] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[02:50:25] *** Joins: EtherNet (~ethernet@user/ethernet)
[02:50:25] *** Joins: noose (~noose@user/noose)
[02:50:25] *** Joins: jkl (~jkl@user/jkl)
[02:50:25] *** Joins: |smlckz| (~smlckz@user/smlckz)
[02:50:25] *** Joins: heftig (heftig@archlinux/developer/heftig)
[02:50:25] *** Joins: kuku01 (~kuku@user/kuku)
[02:50:25] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[02:50:25] *** Joins: majors (~majors@user/majors)
[02:50:25] *** Joins: Ryozuki (~Ryozuki@user/ryozuki)
[02:50:25] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[02:50:25] *** Joins: xcm (~xcm@user/xcm)
[02:50:25] *** Joins: shan (~shan@cyblog/maintainer/shan)
[02:50:25] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[02:50:25] *** Joins: moose (~moose@user/moose)
[02:50:25] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[02:50:25] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[02:50:25] *** Joins: vinay (~Vinay@user/vinay-keshava)
[02:50:25] *** Joins: avar (avar@vm.nix.is)
[02:50:25] *** Joins: crudo (~crudo@livredigital.com)
[02:50:25] *** Joins: finalsummer (~finalsumm@user/finalsummer)
[02:50:25] *** Joins: SpringSprocket (~srv@hobby.esselfe.ca)
[02:50:25] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[02:50:25] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[02:50:25] *** Joins: mrec (~markus@user/mrec)
[02:50:25] *** Joins: nisstyre (~wes@user/nisstyre)
[02:50:27] *** Quits: finsternis (~X@23.226.237.192) (Max SendQ exceeded)
[02:50:41] *** Joins: In0perable (~PLAYER_1@fancydata.science)
[02:50:44] *** Joins: finsternis (~X@23.226.237.192)
[02:51:31] *** Joins: Charadon (~Charadon@155.138.164.183)
[02:52:24] *** Quits: monkey_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[02:52:35] *** imm__ is now known as imm_
[02:52:56] *** Quits: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:53:29] *** Joins: bud (~bud@user/bud)
[02:53:50] *** Joins: jimboj1m (~jimboj1m@96.234.171.7)
[02:54:08] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Remote host closed the connection)
[02:54:14] *** Quits: hiovoltage (~hiovoltag@176.88.83.200) (Quit: Client closed)
[02:54:23] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[02:54:24] *** Joins: kristian84 (~asdf@ti0037a400-4119.bb.online.no)
[02:54:58] *** Joins: Akiva (~Akiva@user/Akiva)
[02:54:58] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[02:56:07] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[03:00:15] *** Parts: bud (~bud@user/bud) (Leaving.)
[03:01:13] *** Quits: whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Quit: BitchX-1.2.1 -- just do it.)
[03:01:37] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Ping timeout: 240 seconds)
[03:02:19] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[03:02:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[03:02:51] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[03:04:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[03:04:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[03:07:37] <palindrome> #define __uint(name, val) int (*name)[val] -> is this a function that returns an int? what about val?
[03:07:52] *** Joins: Torr (~Torr@user/torr)
[03:07:52] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[03:07:57] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu)
[03:08:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:09:50] <fizzie> It's a macro that expands into what appears to be a declaration of a pointer to an array.
[03:10:30] <fizzie> `__uint(foo, 123);` would expand to `int (*foo)[123];` which declares `foo` as a pointer to an `int[123]`, an array of 123 ints.
[03:10:31] <palindrome> thanks fizzie
[03:10:50] <fizzie> (Odd name for it though.)
[03:11:44] *** Joins: Enitin (~Enitin@82.102.22.85)
[03:12:17] *** Inline__ is now known as Inline
[03:13:06] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:13:08] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[03:13:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[03:15:19] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:15:36] *** Red__ is now known as Red
[03:17:21] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:17:35] *** Joins: rsjw (~quassel@user/rsjw)
[03:19:08] *** Quits: immibis (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[03:19:22] *** Joins: korg815 (~korg815@user/korg815)
[03:21:32] *** Quits: carlavilla (~carlavill@2a0c:5a84:340b:7600:221:6bff:fe3b:cee4) (Ping timeout: 240 seconds)
[03:21:35] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[03:21:50] *** Joins: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4)
[03:22:29] <nomagno> Do pointers to a
[03:22:40] <nomagno> -arrays retain size information?
[03:22:58] <fizzie> The size is part of the type, yes.
[03:23:01] <nomagno> As in, is sizeof(*foo) == 123?
[03:23:10] <fizzie> Well, 123 * sizeof (int).
[03:23:11] <nomagno> Ah, so yeah
[03:23:28] <fizzie> ,cc int (*foo)[123] = 0; printf("%zu", sizeof *foo);
[03:23:31] <candide> fizzie: 492
[03:23:41] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[03:24:56] <caze> ,cc int (*foo)[123] = 0; printf("%zu", sizeof *foo / sizeof **foo);
[03:24:59] <candide> caze: 123
[03:26:05] <kurahaupo> ,cc int (*foo)[123] = 0; printf("%zu %zu %zu", sizeof foo, sizeof *foo, sizeof foo);
[03:26:07] <candide> kurahaupo: 8 492 8
[03:26:21] <kurahaupo> ,cc int (*foo)[123] = 0; printf("%zu %zu %zu", sizeof **foo, sizeof *foo, sizeof foo);
[03:26:23] <candide> kurahaupo: 4 492 8
[03:27:27] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[03:30:06] *** Quits: neunon (~neunon@user/neunon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:12] *** Joins: Torr (~Torr@user/torr)
[03:30:38] *** Joins: neunon (~neunon@user/neunon)
[03:31:38] <neiluj> hello! Got a struct of mpz_t struct s{mpz_t x;}, but since mpz_t is already a pointer, I thought s.x = new_x would work but alas s.x is not a modifiable left value
[03:32:12] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[03:32:56] <neiluj> (mpz_t is a big int from the GMP library)
[03:34:09] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:34:46] *** Joins: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net)
[03:35:11] <uskerine> happy new year. Super basic question, if I do  ts = *localtime(&epoch);   and epoch is unsigned int, how shall I cast it?
[03:36:02] *** Quits: palindrome (~jhonny@51.37.129.66) (Ping timeout: 240 seconds)
[03:36:29] *** Teckla_ is now known as Teckla
[03:36:46] <kurahaupo> uskerine: Don't cast it, change its type to "time_t"
[03:37:04] <uskerine> I can't do it, the epochs are stored as unsigned ints
[03:37:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:37:35] <kurahaupo> uskerine: Why, when time_t is everywhere?
[03:37:58] <uskerine> can you help me to cast it?
[03:38:10] *** hexeme is now known as ldlework
[03:38:27] <kurahaupo> uskerine: Use a temporary variable of type time_t then assign that to your epoch
[03:39:01] <johnjaye> is there a typedef int time_t; statement somewhere?
[03:39:17] <kurahaupo> uskerine: There is no guarantee that time_t will be the same size as unsigned int, so casting will cause UB
[03:39:39] <kurahaupo> johnjaye: It's part of the standard library
[03:40:04] <kurahaupo> johnjaye: It's unspecified which integral type it has
[03:40:51] <uskerine> time_t seems to be long, so it will hold without issues an unsigned int in a 64 bits box
[03:40:52] <caze> Doesn't have to be an integer.
[03:40:57] <uskerine> I thought casting was for these cases
[03:41:12] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:492a:4f1b:6342:37fe)
[03:41:14] <uskerine> where you know there will be no overflow so you tell the compiler "I know what I am doing, please cast it"
[03:42:06] <neiluj> ah okay, mpz_set to the rescue, fixed it
[03:42:37] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:43:03] <kurahaupo> uskerine: You would have to cast a pointer; that's not usually "safe" since you're not converting the integer value, you're just saying "use these raw bits"
[03:43:07] <caze> Where did epoch come from?
[03:43:18] <kurahaupo> probably time()
[03:43:29] <johnjaye> well that was quite a rabbit hole
[03:43:39] <johnjaye> i went to /usr/include/time.h and traced back through about 3 or 4 layers of includes
[03:43:50] <caze> Why did you do that?
[03:43:58] *** Joins: fentanyl (~chroot@user/sapi01)
[03:44:01] <kurahaupo> uskerine: "epoch" is a bad name for a timestamp, unless you actually mean the start of the epoch which was 1 Jan 1970
[03:44:05] <johnjaye> apparently time_t is defined as a __time_t. a __time_t is defined as a __int64_t
[03:44:10] *** Quits: fentanyl (~chroot@user/sapi01) (Client Quit)
[03:44:13] <johnjaye> and *that* is defined as a long long.
[03:44:28] <kurahaupo> johnjaye: On your system, sure. That's not true everywhere
[03:44:30] <caze> johnjaye: Why did you do that?
[03:44:39] <johnjaye> caze: curiosity. i always wonder why c header files are a maze of garbage and seemingly random definitions
[03:45:03] *** Norkle is now known as Z-cat
[03:45:04] <johnjaye> and lots of nested feature #ifdef tests referencing old versions of various OSes
[03:45:07] <kurahaupo> johnjaye: Because on x86 they have to allow for 100 different compiler modes
[03:45:08] <neiluj> there's a lot of defines for portability
[03:45:09] *** Z-cat is now known as Norkle
[03:45:10] <caze> johnjaye: Well I hope you understand that there wasn't much to learn in doing that.
[03:45:14] <neiluj> various architectures
[03:45:29] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[03:45:31] <caze> johnjaye: And in fact, it's hazardous.
[03:45:35] <johnjaye> caze: sure. but that's the fault of the libc not mine
[03:45:39] *** Norkle is now known as Z-cat
[03:45:56] <fizzie> neiluj: The GMP types are array types, not pointers. It's a trick.
[03:46:05] <caze> johnjaye: No, it's the fault of not understanding the relationship between specifications and implementations.
[03:46:30] *** Z-cat is now known as Norkle
[03:46:35] <uskerine> kurahaupo so if I understood it correctly, in this case because I would be forced to cast a pointer (and as you say we would be using raw bits), we would instead have to use an intermediate variable, is that correct?
[03:46:36] <johnjaye> the specifications being C99,C11, etc
[03:47:02] <kurahaupo> uskerine: That would be the sane option, yes
[03:47:08] <uskerine> thanks
[03:47:19] <caze> johnjaye: It would be like examining a bridge to determine how much weight it can carry, and noticing that some of the bolts used as fasteners are painted red, and inferring that red is in the specification for the bridge.
[03:47:27] <fizzie> https://gmplib.org/manual/Variable-Conventions "GMP types like mpz_t are implemented as one-element arrays of certain structures." This makes them pointers when used as function parameters, but non-pointers in other contexts.
[03:47:48] <johnjaye> caze: more like i'm mocking the people who painted the bolt for thinking red is green
[03:48:00] <johnjaye> or just for having no sense of style or taste in general
[03:48:07] <caze> johnjaye: You don't know why they painted it red, nor should you care.
[03:48:10] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:48:53] <johnjaye> lol
[03:50:04] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:50:08] <caze> johnjaye: It's a fallacy to examine the bridge in an attempt to divine how much load it was speced to carry. Just look at the spec.
[03:50:57] *** Quits: wroathe_ (~wroathe@206-55-188-8.fttp.usinternet.com) (Ping timeout: 240 seconds)
[03:51:01] <caze> In other words, even making the attempt to look into the headers is misguided.
[03:51:52] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[03:52:07] <kurahaupo> On a big endian architecture, reinterpreting the bits of a different width type will usually get you the intended value shifted left or right by the difference in width (in bits).
[03:52:44] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[03:52:46] <nitrix> You lost me at "maze of garbage". That's usually what you hear from inexperienced developers that haven't worked very much with C and/or don't value the diversity of platforms nor stability.
[03:52:46] *** Joins: ADHD (~xxx@bison.sh3ll.ru)
[03:52:50] <neiluj> ah, what a relief when your program works fine after many crazy segfaults
[03:53:16] <neiluj> fizzie: yeah, just read about it
[03:53:31] <neiluj> that's what happens when you rush and don't read the docs properly
[03:53:33] <kurahaupo> neiluj: Segfaults are not the norm even during development.
[03:53:48] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:54:09] <caze> During development of your brain, maybe.
[03:54:17] <neiluj> :)
[03:54:36] <kurahaupo> However you might encounter them if you're writing experimental code to probe the abilities of a library or compiler
[03:54:54] <fizzie> I really wish they hadn't done the array trick, and just declared the functions as taking `mpz_t *`, and trusted the library users to not make copies if only due to observing what all the library functions do.
[03:55:05] <neiluj> yeah, that was what I was expecting
[03:55:25] <kurahaupo> Such experimentation is however an adjunct rather than a replacement for reading documentation
[03:55:27] <neiluj> now I just mpz_set (before mpz_inits the struct field) and it just works fine
[03:55:38] *** Joins: masterbuilder (~user@user/masterbuilder)
[03:55:51] <neiluj> was worried it deep copy and not move pointer ownership
[03:56:14] <kurahaupo> fizzie: Making copies isn't the problem. It's failing to make copies that's the problem
[03:57:15] <nitrix> They want you to treat mpz_t as a handle and avoid accidental aliasing.
[03:57:17] <neiluj> I was also relunctant to write things like mpz_mul(x, x, x); // x = x*x, but the function does the copies
[03:58:18] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (Ping timeout: 268 seconds)
[03:58:20] <fizzie> The bit I quoted continues with: "Declaring a variable creates an object with the fields GMP needs, but variables are normally manipulated by using the pointer to the object. For both behavior and efficiency reasons, it is discouraged to make copies of the GMP object itself (either directly or via aggregate objects containing such GMP objects). If copies are done, all of them must be used read-only;
[03:58:22] <fizzie> using a copy as the output of some function will invalidate all the other copies."
[03:59:07] <fizzie> Anyway, the documentation also doesn't really highlight the "they're array types" thing either.
[04:01:03] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[04:01:26] *** Quits: kuoi (~kuoi@109.175.166.59) (Quit: kuoi)
[04:02:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:02:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:02:29] *** Joins: wroathe (~wroathe@user/wroathe)
[04:10:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:11:47] *** Joins: Wulf (~Wulf@user/wulf)
[04:12:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:12:23] <neiluj> fizzie: yeah, found the info in a blog post
[04:13:05] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[04:14:10] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[04:14:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:15:34] *** Quits: retro_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[04:15:49] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[04:15:55] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:17:46] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[04:17:47] *** Joins: mahmutov (~mahmutov@37.155.29.131)
[04:18:00] *** Quits: Everything (~Everythin@178-133-112-180.mobile.vf-ua.net) (Quit: leaving)
[04:20:24] *** Joins: Everything (~Everythin@37.115.210.35)
[04:20:47] *** Quits: geli (~gelignite@55d465a4.access.ecotel.net) (Quit: Stay safe!)
[04:21:27] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:28:45] *** Joins: retror (~retror@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[04:28:45] *** retror is now known as retro
[04:33:14] *** Joins: loganlee (~Thunderbi@user/loganlee)
[04:35:16] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:35:35] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:37:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:39:46] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:fbac:4b24:8942:27e4) (Quit: Leaving)
[04:40:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:45:59] *** Joins: NEYi (~NEYi@109.251.216.38)
[04:46:52] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[04:48:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:48:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:48:44] *** Joins: wroathe (~wroathe@user/wroathe)
[04:50:36] *** Quits: Leonard (~Administr@114.55.127.80) (Remote host closed the connection)
[04:51:12] *** Joins: Leonard (~Administr@114.55.127.80)
[04:53:40] *** Quits: jan6 (jan6@tilde.cafe) (Changing host)
[04:53:40] *** Joins: jan6 (jan6@tilde.team/user/jan6)
[04:53:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:59:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:59:37] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[05:01:21] <SrPx> I'm looking for a way to call a function in parallel in C (i.e., `f() + f()` should execute `f()` in two threads). Using pthread_create has a big overload. OpenMP is a big dependency I'd wish to avoid. Any other option? PS: happy new year \o
[05:01:48] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[05:03:01] <BtbN> pthread_create has big overhead? What?
[05:03:06] <BtbN> That's literally how you create a thread.
[05:03:08] <cehteh> openmp uses pthreads anyways :)
[05:03:23] <uskerine> https://bpa.st/WF3A I would to understand which would be the right way to code this function. The idea is to reuse the string later in addstr (curses)
[05:03:27] <cehteh> but it uses thread pools and thats prolly want you want to do as well
[05:05:13] <uskerine> like to understand*
[05:05:25] *** Quits: Kit (~u0_a391@2600:380:a469:3f77:9f8f:36c9:5069:e0a7) (Ping timeout: 240 seconds)
[05:08:07] <cehteh> uskerine: thats broken, you cant return a pointer to a local variable, it wont exist anymore when the function returns
[05:09:02] <cehteh> malloc the string or let the caller pass some buffer into the function or (pretty bad) use some static buffer
[05:09:36] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:09:53] <cehteh> and handle errors approbiately
[05:10:25] *** Joins: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:f827:bf2f:37c5:f9b9)
[05:12:19] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 268 seconds)
[05:12:40] <cehteh> simplest way would be you just return strdup(buffer_epoch);  and mandatory: check if strftime returned 0
[05:13:09] <cehteh> and the caller eventually has to free it of course, otherwise you get a memory leak
[05:14:23] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[05:15:00] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[05:16:50] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[05:17:03] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[05:17:56] *** Quits: rsjw (~quassel@user/rsjw) (Ping timeout: 252 seconds)
[05:18:30] *** luke-jr- is now known as luke-jr
[05:19:01] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:19:26] *** Quits: Darkcoal_ (~user@167.86.137.72) (Quit: Darkcoal_)
[05:19:27] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[05:20:08] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 252 seconds)
[05:22:44] *** Joins: oafish (~oafish@2a05:f480:2000:1325::)
[05:23:38] *** Joins: rsjw_ (~quassel@user/rsjw)
[05:24:18] *** rsjw_ is now known as rsjw
[05:29:49] *** Quits: foul_owl (~kerry@94.140.8.106) (Quit: WeeChat 2.3)
[05:32:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[05:34:37] *** Joins: rgrinberg (~textual@177.246.216.125)
[05:36:10] *** Joins: immibis (~hexchat@62.156.144.218)
[05:37:36] *** Quits: oxfuxxx (~oxfuxxx@2a01:e0a:268:92c0:f827:bf2f:37c5:f9b9) (Ping timeout: 268 seconds)
[05:38:13] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[05:38:35] *** Quits: moog (~moog@107.126.53.61) (Ping timeout: 250 seconds)
[05:40:58] <uskerine> thanks cehteh
[05:42:00] *** Joins: moog (~moog@107.126.48.142)
[05:43:14] *** Joins: oxfuxxx (~oxfuxxx@82-64-161-82.subs.proxad.net)
[05:44:16] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:45:06] *** Quits: rgrinberg (~textual@177.246.216.125) (Read error: Connection reset by peer)
[05:45:24] *** Parts: retro (~retror@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[05:45:31] *** Quits: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[05:45:47] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[05:46:32] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[05:46:32] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Quit: Leaving)
[05:47:42] *** Joins: gce108 (~gce@user/gce108)
[05:52:32] <kurahaupo> SrPx: Creating a thread (or a process) always takes time as it requires copying several tens of kilobytes of information within the kernel (and for a process, also copying the entire userspace memory). Generally when you need a thread to do some work, you send a request to an existing idle thread, or if none is available, create a new one. When the thread has finished your request, it goes back to the idle pool.
[05:52:33] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[05:53:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:57:39] *** Quits: soapsudsxx_ (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[05:59:24] <Torr> Happy new year!!!
[06:00:12] *** Quits: dlx (~tom@05432be4.skybroadband.com) (Remote host closed the connection)
[06:00:57] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[06:01:27] *** Quits: jimboj1m (~jimboj1m@96.234.171.7) (Quit: Leaving)
[06:01:51] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[06:02:18] *** Quits: mahmutov (~mahmutov@37.155.29.131) (Ping timeout: 260 seconds)
[06:02:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:02:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:02:52] *** Joins: wroathe (~wroathe@user/wroathe)
[06:03:06] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[06:03:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:03:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:03:21] *** Joins: wroathe (~wroathe@user/wroathe)
[06:06:37] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 240 seconds)
[06:06:38] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[06:06:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[06:09:54] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:10:54] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:15:02] *** Quits: Windshield (~Windshiel@120.20.217.5) (Ping timeout: 240 seconds)
[06:17:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:26:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:27:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:27:50] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Read error: Connection reset by peer)
[06:27:56] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:28:59] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[06:29:17] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:30:17] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:33:48] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:36:54] *** Joins: neverfindme (~hayden@72.92.246.5)
[06:37:43] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:39:36] *** Joins: kuoi (~kuoi@109.175.166.57)
[06:39:54] *** Quits: oxfuxxx (~oxfuxxx@82-64-161-82.subs.proxad.net) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[06:40:29] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[06:41:29] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[06:41:38] *** Quits: neverfindme (~hayden@72.92.246.5) (Client Quit)
[06:47:33] *** Joins: ferdna (~ferdna@user/ferdna)
[06:48:08] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[06:49:24] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[06:49:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:52:24] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:12] *** Joins: malina (~malina@user/malina)
[06:53:59] *** Quits: nvrhome (~Bop@user/nvrhome) (Ping timeout: 250 seconds)
[06:54:49] <malina> happy new year!
[06:55:08] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:57:15] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (Excess Flood)
[06:57:24] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[06:59:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:00:13] *** Joins: fe23 (~fe23@2409:8a34:464:4990:172:37c2:7ec0:df6)
[07:02:33] *** Joins: nvrhome (~Bop@user/nvrhome)
[07:04:56] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[07:06:13] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[07:12:53] *** Quits: kuoi (~kuoi@109.175.166.57) (Remote host closed the connection)
[07:21:35] *** Joins: Jeaton (hybrid@user/Jeaton)
[07:22:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:24:58] *** Parts: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[07:32:51] *** Quits: malina (~malina@user/malina) (Quit: malina)
[07:32:59] *** Joins: off^ (~off@207.5.21.20)
[07:33:39] * Feuermagier pets candide 
[07:33:47] * candide giggles at F​euermagier
[07:33:59] <Feuermagier> happy new year candide
[07:34:11] <candide> Happy New Year, F​euermagier!
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:40:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:41:48] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:42:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Quit: Leaving)
[07:47:07] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[07:47:36] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:51:57] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:55:51] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:05:03] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 250 seconds)
[08:09:09] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Read error: Connection reset by peer)
[08:10:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:10:31] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[08:16:48] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[08:21:13] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[08:23:38] *** rcf1 is now known as rcf
[08:23:50] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:24:29] *** Joins: stblaha (~stblaha@user/stblaha)
[08:26:41] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[08:29:46] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Read error: No route to host)
[08:30:28] *** Joins: de-facto (~de-facto@user/de-facto)
[08:31:03] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:32:02] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[08:34:37] *** Quits: Trashlord__ (~trash@user/trashlord) (Ping timeout: 240 seconds)
[08:35:13] *** Joins: Trashlord (~trash@user/trashlord)
[08:35:49] *** Quits: moog (~moog@107.126.48.142) (Remote host closed the connection)
[08:38:51] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[08:47:02] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[08:56:52] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[08:59:15] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 268 seconds)
[09:02:11] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[09:02:27] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[09:02:29] *** Quits: u0_a391 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com) (Ping timeout: 250 seconds)
[09:04:11] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[09:06:25] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:06:29] *** u0_a391 is now known as Kit
[09:09:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f0a6)
[09:11:17] *** Quits: Hawker_ (~pi@user/hawker) (Ping timeout: 240 seconds)
[09:12:01] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[09:14:53] *** presonic is now known as highrate
[09:15:27] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[09:16:16] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:23:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[09:24:53] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Quit: Leaving)
[09:25:09] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:25:14] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:25:23] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Client Quit)
[09:25:23] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Client Quit)
[09:25:38] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:31:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:31:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:31:55] *** Joins: wroathe (~wroathe@user/wroathe)
[09:33:49] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[09:33:51] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[09:36:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:36:25] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:39:55] *** Quits: ADHD (~xxx@bison.sh3ll.ru) (Quit: leaving)
[09:43:17] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[09:44:25] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[09:44:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[09:45:58] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Client Quit)
[09:46:00] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[09:47:06] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:47:59] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 252 seconds)
[09:49:47] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[09:50:51] *** Joins: tejr (~tejr@user/tejr)
[09:55:08] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:56:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:58:03] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[09:59:03] *** Joins: kish` (~sid742412@user/aqua)
[10:02:28] *** Joins: trafficjam (~trafficja@119.17.42.59)
[10:05:36] *** Quits: Jeaton (hybrid@user/Jeaton) (Remote host closed the connection)
[10:05:46] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 245 seconds)
[10:06:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:06:45] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[10:08:42] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:10:26] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[10:14:41] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[10:16:57] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 268 seconds)
[10:19:52] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[10:21:51] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[10:27:26] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 268 seconds)
[10:29:17] *** Joins: aerysh_ (~aerysh@2a0a:b640:1:5b::a08d)
[10:34:58] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[10:36:41] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 268 seconds)
[10:36:52] *** Quits: trafficjam (~trafficja@119.17.42.59) (Quit: Client closed)
[10:38:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:39:09] *** Joins: Windshield (~Windshiel@120.20.89.74)
[10:42:16] *** Joins: gco (~gco@2601:647:4c80:2424:adcf:788d:2425:1357)
[10:42:21] <|smlckz|> T *x[n]; <- is x an array of pointers to T or pointer to an array of T?
[10:43:14] <Deepspeed> * in context of pointers can usually be read as "the memory address of"...
[10:43:33] <Deepspeed> so I would say the latter
[10:44:16] <sham1> It's actually the former
[10:44:19] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[10:44:22] <sham1> It's an array of pointers to T
[10:44:38] <sham1> ,english T *x[n]
[10:44:38] <candide> sham1: error: unknown type name 'T'
[10:44:42] <sham1> ,english int *x[n]
[10:44:43] <candide> sham1: Declare `x` as an array of `n` elements of pointer to i​nt.
[10:44:51] <sham1> Yeah
[10:45:22] <sham1> If you want a pointer to array of T, you need to do T (*x)[n]
[10:45:44] <Deepspeed> hmm
[10:45:52] <Deepspeed> cool
[10:46:15] *** Quits: aerysh_ (~aerysh@2a0a:b640:1:5b::a08d) (Quit: Konversation terminated!)
[10:55:29] *** Quits: et09 (~et09@user/et09) (Ping timeout: 256 seconds)
[10:56:03] *** Quits: AmR (~AmREiSa@156.199.20.227) (Ping timeout: 256 seconds)
[10:56:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:59:44] *** Quits: nvrhome (~Bop@user/nvrhome) (Quit: Leaving)
[11:02:26] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 245 seconds)
[11:06:04] *** Quits: gco (~gco@2601:647:4c80:2424:adcf:788d:2425:1357) (Quit: ZZZzzz…)
[11:10:57] *** Joins: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr)
[11:14:13] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[11:22:07] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[11:23:10] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[11:25:05] *** Joins: jusski (~user@88.118.83.231)
[11:29:27] *** Joins: myon98 (~myon98@user/myon98)
[11:37:54] *** Quits: inomoz (~inomoz@85.26.233.222) (Remote host closed the connection)
[11:39:48] *** Joins: inomoz (~inomoz@85.26.233.222)
[11:46:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:55:26] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[12:03:14] *** Joins: mahmutov (~mahmutov@37.155.29.131)
[12:03:27] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[12:04:37] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[12:04:51] *** Quits: Mindiell (~Mindiell@python/afpy/mindiell) (Ping timeout: 268 seconds)
[12:05:02] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:06:37] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:08:27] *** Joins: Some-body_ (user@znc/developer/DarthGandalf)
[12:09:48] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[12:11:14] *** Some-body_ is now known as DarthGandalf
[12:11:53] *** Joins: jimboj1m (~jimboj1m@96.234.171.7)
[12:12:29] *** Quits: fe23 (~fe23@2409:8a34:464:4990:172:37c2:7ec0:df6) (Ping timeout: 250 seconds)
[12:15:57] *** Joins: Mindiell (~Mindiell@82-64-206-161.subs.proxad.net)
[12:15:57] *** Quits: Mindiell (~Mindiell@82-64-206-161.subs.proxad.net) (Changing host)
[12:15:57] *** Joins: Mindiell (~Mindiell@python/afpy/mindiell)
[12:26:28] *** Joins: mrig (~mrig@user/mrig)
[12:26:45] *** Joins: peter1 (~kevin@101.206.254.162)
[12:27:22] *** Quits: peter1 (~kevin@101.206.254.162) (Client Quit)
[12:27:51] *** Joins: peter1 (~kevin@101.206.254.162)
[12:30:36] <nitrix> |smlckz|, Are you familiar with the precedence of the operators? (e.g. man 7 operator). Like if you had *x[y] somewhere in an expression, would you know that the [] subscript operator happens before the * unary dereference?
[12:32:13] *** Quits: peter1 (~kevin@101.206.254.162) (Ping timeout: 240 seconds)
[12:32:59] <nitrix> |smlckz|, Type declarations intentionally works the exact same way. We say that "declarations follows usage". It's the same precedences, you simply prefix the expression with its resulting type to have a valid declaration.
[12:33:27] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[12:37:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:37:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:37:03] *** Joins: wroathe (~wroathe@user/wroathe)
[12:37:16] <nitrix> Given `int *x[n];`, then `x` has type `int *[n]`, then `x[n]` has type `int *`, then `*x[n]` has type `int`. I don't know if you can see the tug-of-war that's happening. The lesser the expression, the longer the type, the longer the expression, the lesser the type.
[12:37:35] *** Joins: kevin99 (~kevin@101.206.254.162)
[12:37:45] *** Parts: kevin99 (~kevin@101.206.254.162) ()
[12:38:12] *** Joins: kevin99 (~kevin@101.206.254.162)
[12:38:23] <nitrix> You don't need to memorize spiral rules or complicated tricks. It's the same operators your already know.
[12:39:13] *** Parts: kevin99 (~kevin@101.206.254.162) ()
[12:40:38] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:42:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:48:33] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:49:19] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[12:53:23] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:58:40] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:58:43] *** Quits: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net) (Quit: WeeChat 2.7.1)
[13:01:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:03:03] *** Joins: aradesh (~aradesh@user/aradesh)
[13:11:07] *** Joins: Akuli (~Akuli@85-76-42-63-nat.elisa-mobile.fi)
[13:16:19] <|smlckz|> the tug-of-war analogy is interesting.. ah operator(7)
[13:20:16] *** Joins: soul-d (~uknown@user/soul-d)
[13:22:53] *** Joins: meator (~meator@user/meator)
[13:25:14] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:492a:4f1b:6342:37fe) (Ping timeout: 252 seconds)
[13:27:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:27:18] *** Joins: fe23 (~fe23@2409:8a34:464:4990:20cb:7ac9:56a5:2642)
[13:27:27] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[13:30:20] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:c18c:3f2c:be:639c)
[13:31:07] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:c18c:3f2c:be:639c) (Client Quit)
[13:31:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:c18c:3f2c:be:639c)
[13:32:28] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[13:32:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:38:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:46:57] *** Quits: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[13:48:12] *** Joins: hinata (~hinata@2409:4042:2d97:f346:5c77:5e8:2fbb:6044)
[13:48:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:49:31] *** Quits: hinata (~hinata@2409:4042:2d97:f346:5c77:5e8:2fbb:6044) (Client Quit)
[13:49:35] *** Joins: brunosaboia_ (~bsaboia@177.37.198.83)
[13:49:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[13:50:19] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 268 seconds)
[13:50:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:54:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:57:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[13:58:14] *** Joins: Guest864545 (~Guest8645@77-85-136-37.ip.btc-net.bg)
[13:58:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:59:43] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:00:02] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[14:00:08] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:03:16] *** Quits: mahmutov (~mahmutov@37.155.29.131) (Ping timeout: 245 seconds)
[14:03:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:06:17] *** Joins: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4)
[14:06:32] *** Quits: brunosaboia_ (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[14:08:36] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Quit: Textual IRC Client: www.textualapp.com)
[14:08:54] *** Joins: mahmutov (~mahmutov@37.155.77.89)
[14:10:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:13:23] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:17:40] *** Joins: agonhajdari (~textual@user/agonhajdari)
[14:18:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:27:30] *** Quits: Guest864545 (~Guest8645@77-85-136-37.ip.btc-net.bg) (Quit: Client closed)
[14:30:13] *** Quits: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:36:09] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Ping timeout: 250 seconds)
[14:36:49] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[14:37:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:37:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:37:50] *** Joins: wroathe (~wroathe@user/wroathe)
[14:41:08] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[14:42:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[14:42:57] *** Quits: inomoz (~inomoz@85.26.233.222) (Ping timeout: 240 seconds)
[14:45:22] *** Joins: ko (~i.am@user/marlboro)
[14:46:52] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:49:23] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 252 seconds)
[14:50:43] *** Joins: earnestly (~earnest@user/earnestly)
[14:57:03] *** Joins: inomoz (~inomoz@176.59.118.12)
[15:02:40] *** Joins: psycomic (~psycomic@2a01:e0a:18:d0a0:4e90:e114:dfce:5afa)
[15:03:38] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[15:04:01] *** Quits: Windshield (~Windshiel@120.20.89.74) (Quit: Leaving)
[15:04:02] *** Quits: mahmutov (~mahmutov@37.155.77.89) (Ping timeout: 240 seconds)
[15:04:37] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:06:04] *** Quits: Brewster (~Brewster@user/brewster) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:06:44] *** Joins: Brewster (~Brewster@104.145.226.5)
[15:06:53] *** Joins: seninha (~seninha@user/seninha)
[15:07:33] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Remote host closed the connection)
[15:07:50] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[15:08:25] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[15:08:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:08:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:08:36] *** Joins: wroathe (~wroathe@user/wroathe)
[15:09:27] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[15:10:13] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:c18c:3f2c:be:639c) (Quit: Quit)
[15:11:00] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:11:01] *** Joins: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net)
[15:11:03] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Remote host closed the connection)
[15:11:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:12:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:13:12] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[15:13:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:14:26] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[15:17:23] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:17:38] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:17:46] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:17:49] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: The Lounge - https://thelounge.chat)
[15:18:06] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[15:19:02] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[15:19:37] *** Joins: Klinda (~superleag@user/klinda)
[15:24:54] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[15:25:39] *** Joins: stonkey (~stonkey@user/stonkey)
[15:28:26] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[15:29:11] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:29:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[15:29:56] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 245 seconds)
[15:31:35] *** Quits: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net) (Remote host closed the connection)
[15:31:56] *** Joins: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net)
[15:32:06] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[15:32:45] <uskerine> a bit offtopic but can't think in better place to ask, does anyone know how to getch PgUp, PgDown in curses?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:23] *** Quits: nop (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[15:38:46] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[15:39:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:39:23] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:39:23] *** Joins: wroathe (~wroathe@user/wroathe)
[15:43:14] *** Joins: retro_ (~retro@05412d78.skybroadband.com)
[15:44:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[15:44:23] *** Quits: retroid_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[15:45:21] *** Joins: palindrome (~jhonny@109.77.12.226)
[15:46:39] <palindrome> why can I assign name? https://bpa.st/6ORQ
[15:46:43] <palindrome> can't*
[15:46:52] <sham1> Does the compiler not say
[15:47:18] <palindrome> it does say that it is not assinable
[15:48:00] <sham1> Well one thing to consider is that `name[10] = 10;` isn't doing what you think it's doing
[15:48:41] <palindrome> mind to elaborate, I am still a newbie.
[15:48:58] <sham1> See, name has the type of int (*)[123], and when you do name[10], that expression has the type int [123], so you're trying to assign the value 10 to be an array and that's not a possible thing
[15:49:03] *** Quits: off^ (~off@207.5.21.20) (Remote host closed the connection)
[15:49:24] <sham1> What you want to do is (*name)[10] = 10;
[15:49:51] <sham1> Because in that case the dereference hits the name-pointer, and then the indexing goes to the underlying array
[15:50:34] <palindrome> oh alright, thanks
[15:54:19] *** Joins: Brainium (~brainium@user/brainium)
[15:55:34] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:57:14] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:58:52] *** Joins: random-nick (~random-ni@87.116.180.98)
[16:05:39] *** Joins: WAR10CK (~WAR10CK@14.223.183.246)
[16:06:17] *** Quits: palindrome (~jhonny@109.77.12.226) (Ping timeout: 240 seconds)
[16:06:32] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[16:06:42] *** Quits: uskerine (~uskerine@186.red-80-28-188.staticip.rima-tde.net) (Remote host closed the connection)
[16:10:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:10:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:10:13] *** Joins: wroathe (~wroathe@user/wroathe)
[16:13:21] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:15:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:18:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:19:24] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:20:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[16:22:53] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:f21:c523:df9b:fe11) (Ping timeout: 252 seconds)
[16:23:08] *** Joins: agonhajdari (~textual@user/agonhajdari)
[16:26:25] *** Quits: jusski (~user@88.118.83.231) (Ping timeout: 256 seconds)
[16:40:02] *** Joins: mahmutov (~mahmutov@37.155.77.89)
[16:40:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:40:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:40:57] *** Joins: wroathe (~wroathe@user/wroathe)
[16:41:42] *** Joins: nrl^ (~nrl@207.5.21.20)
[16:44:00] *** Quits: dansan_ (~daniel@75.81.148.51) (Read error: Connection reset by peer)
[16:44:18] *** Joins: dansan_ (~daniel@75.81.148.51)
[16:45:22] *** Joins: pucara (~i@181.91.29.65)
[16:45:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[16:46:33] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Remote host closed the connection)
[16:48:24] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[16:59:00] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Quit: [BX] Oral sex makes your day)
[16:59:35] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu)
[17:04:04] *** Joins: alioui (~medeva293@41.62.76.215)
[17:05:25] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:1603:7c6d:5d49:82fb)
[17:09:18] *** Joins: Rounin (~david@84.212.130.215)
[17:09:33] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[17:10:15] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000C96363670EDAE354.catv.pool.telekom.hu)
[17:14:41] *** Joins: plastico (~plastico@neomutt/plastico)
[17:16:55] *** Joins: jusski (~user@88.118.83.231)
[17:17:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:17:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:17:59] *** Joins: wroathe (~wroathe@user/wroathe)
[17:22:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[17:24:49] *** Joins: Satin (uid193953@user/Seten)
[17:30:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:31:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[17:40:37] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:40:48] *** Joins: meator (~meator@user/meator)
[17:46:30] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[17:49:24] *** Joins: pulse (~pulse@user/pulse)
[18:00:13] *** Joins: n3rdy1 (~n3rdy1@2601:646:c300:f20:d852:3bde:2197:ddf9)
[18:00:45] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Remote host closed the connection)
[18:01:01] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[18:02:06] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[18:02:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:04:27] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[18:11:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[18:12:09] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[18:13:26] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[18:14:03] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:15:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:15:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:18:32] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[18:19:11] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[18:19:29] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:21:06] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:22:16] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[18:23:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[18:24:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:26:41] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 250 seconds)
[18:28:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[18:29:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:29:12] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Read error: Connection reset by peer)
[18:29:35] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[18:30:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[18:34:05] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:36:03] *** Joins: moog (~moog@107.126.48.46)
[18:37:56] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Read error: Connection reset by peer)
[18:39:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:39:59] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[18:40:17] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[18:41:42] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0)
[18:43:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:43:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:43:17] *** Joins: wroathe (~wroathe@user/wroathe)
[18:43:31] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:46:32] *** Joins: mrig (~mrig@user/mrig)
[18:47:33] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Remote host closed the connection)
[18:48:01] *** Joins: Torr (~Torr@user/torr)
[18:48:11] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[18:49:12] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[18:49:54] <neiluj> why copying an array into a integer doesn't always produce the same value? char h[4]; signed long hash; fill(h); memcpy(&hash, h, 4);
[18:50:16] <neiluj> Checked that the hexadecimal contents of h is the same in different function calls with the same inputs
[18:50:21] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[18:50:39] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[18:51:05] *** Joins: kts (~kts@103.73.237.144)
[18:51:15] <BtbN> neiluj, because you're only filling 4 out of 8 bytes of "hash" I'd guess.
[18:51:24] <BtbN> So the other 4 remain uninitialized and contain random garbage
[18:51:30] <neiluj> the only time the hash integer were always the same for the same inputs was when its type was uint16_t, for other types (including unsigned long that didn't produce the same ints)
[18:51:57] <BtbN> Use a type with the right size if you want a precise size
[18:52:02] <BtbN> i.e. int32_t
[18:53:04] <neiluj> huh yes, uint32_t I mean
[18:53:25] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[18:53:27] <neiluj> oh indeed, unsigned long might be less than 32 bits
[18:54:07] <fizzie> `unsigned long` is never less than 32 bits, but it might be more.
[18:54:50] <neiluj> hmm, I'm a bit relunctant to sprintf the hash in hex and then feed that to a gmp int
[18:55:04] <neiluj> it might be more efficient to just pass an unsigned long
[18:55:47] <dave0> neiluj: you could write it   char h[sizeof(signed long)]; signed long hash; /* don't know fill() */ memcpy(&hash, h, sizeof(signed long));
[18:56:34] <neiluj> fill is in fact a call to blake2b blake2b(h, 4, plaintext, plaintex_length)
[18:56:57] <neiluj> oh that's neat, thanks!
[18:59:00] <fizzie> `signed long hash; char h[sizeof hash]; fill(h); memcpy(&hash, h, sizeof hash);` has less repetition of the type. ;)
[18:59:03] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Remote host closed the connection)
[18:59:15] <neiluj> it worked dave0!! :)
[18:59:31] <dave0> neiluj: heh cool
[18:59:35] <fizzie> (You can also do the array-of-char-to-integer-type conversion with a combination of <<s and |s, if you don't want it to depend on the platform's integer representation and endianness.)
[18:59:36] <neiluj> so maybe 4 was too much?
[18:59:53] <fizzie> 4 was most likely too _little_, as mentioned.
[19:00:00] <neiluj> I thought char h[4] would fill it with 0s
[19:00:24] <neiluj> hmm, but then the computation is deterministic, so the outputs are the same, even truncated?
[19:00:41] <fizzie> Again, chances are your sizeof (long) is *greater* than 4.
[19:00:55] <neiluj> oh indeed, you told that it was greater than 4
[19:00:57] <fizzie> So your `memcpy(&hash, h, 4);` was only filling part of the `hash`.
[19:01:59] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[19:02:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:02:53] <neiluj> I see, just checked that with my older code, hash was indeed non zero
[19:03:01] <dave0> as portable as copying an array of char is, it'll work on linux and windows
[19:03:01] <neiluj> set it to 0 and it worked
[19:03:19] <neiluj> thought ints were set to 0 automatically ^^'
[19:03:35] <dave0> oh nope, that's a bug-o-feature
[19:03:38] <fizzie> Objects of automatic storage duration have indeterminate values when not explicitly initialized.
[19:04:07] <fizzie> (Those with static or thread-local storage duration do get implicitly initialized to zero.)
[19:04:18] *** Joins: acerbic (~acerbic@cs-xdata-50-86-52-109.cspire.com)
[19:04:19] <dave0> you can force it   signed long hash = 0; char h[sizeof hash] = { 0 };
[19:04:57] <neiluj> thanks, will definitely pay attention to that!
[19:05:15] <NRK[m]> i would just use <stdint.h> if you need specific int sizes
[19:05:30] <caze> That's a big if.
[19:05:48] <NRK[m]> and if you need to be c89 compatible then you'll have to roll your own, i guess
[19:06:30] <caze> Most of the time you don't need a specific width - you just need a minimum width, and if it happens to be larger, you can mask out the extraneous bits.
[19:06:48] <NRK[m]> there's uint8_least_t i think
[19:06:56] <NRK[m]> and friends, of course
[19:07:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.92) (Ping timeout: 240 seconds)
[19:07:40] <caze> There's also just the standard integer types.
[19:08:21] <caze> You do get a minimum width guarantee with char, short, int, long, long long.
[19:08:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:08:35] <NRK[m]> yeah, i personally avoid stdint
[19:08:39] <neiluj> sure, I use a mixture of stdint and standard ints
[19:08:41] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 245 seconds)
[19:08:45] <caze> Why?
[19:08:45] <neiluj> we had a discussion about it
[19:08:52] <neiluj> it restricts portability
[19:08:56] <fizzie> If it doesn't matter exactly what GMP integer value you get, as long as it's the same one on one system, just copying the bits of the hash into an integer type is likely to be fine (modulo the mostly theoretical possibility of having an integer type with padding bits and a trap representation). If you need to to produce the same result on _any_ conforming system, even with a different endianness, you do
[19:08:58] <fizzie> need to be a bit more elaborate.
[19:09:08] <NRK[m]> because of what you just said
[19:09:13] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:09:23] <NRK[m]> if i need minimum 32 bits, i can just use a long
[19:09:29] <caze> Which part of what I just said?
[19:09:49] <neiluj> caze: yeah, it's just for convenience, should change that
[19:09:50] <caze> long int is a standard integer type.
[19:09:53] <NRK[m]> ,recall caze width
[19:09:54] <candide> [1m32s ago] <c​aze> You do get a minimum width guarantee with char, short, i​nt, long, long long.
[19:10:06] <neiluj> ultimately I'll just switch to gmp ints, that's the plan
[19:10:42] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:10:47] <caze> NRK[m]: Yes, so you do use the standard integer types?
[19:11:05] <caze> NRK[m]: What did you mean by <NRK[m]> yeah, i personally avoid stdint
[19:11:22] <NRK[m]> i meant stdint.h the c99 thing
[19:12:12] <caze> Oh, haha I was getting confused.
[19:12:35] <NRK[m]> i didn't add the `.h` since i thought it was clear from the context
[19:12:46] <dave0> depending on your needs, openssl also provides a bigint implementation
[19:12:54] <dave0> bignum
[19:13:02] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[19:13:47] <neiluj> interesting, will see how it compare to GMP
[19:14:03] <neiluj> I use GMP because I already use PARI/GP alot, which uses GMP
[19:14:37] <dave0> ah if you're already using it you dont need to worry
[19:15:36] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Read error: Connection reset by peer)
[19:15:51] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[19:16:29] *** Joins: strajder (~strajder@user/strajder)
[19:20:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:20:43] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:20:47] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:21:05] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Read error: Connection reset by peer)
[19:21:29] *** Joins: AmR (~AmREiSa@156.199.20.227)
[19:22:00] *** Quits: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Client Quit)
[19:23:17] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[19:24:43] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[19:24:54] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[19:24:59] *** Joins: pert (~pert@fsf/member/pert)
[19:25:29] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:25:30] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:25:42] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[19:26:24] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[19:26:39] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:32:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[19:36:11] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:37:53] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Read error: Connection reset by peer)
[19:40:37] *** Quits: pucara (~i@181.91.29.65) (Quit: Lost terminal)
[19:41:19] *** Joins: Deepspeed (~yep@239.sub-174-215-172.myvzw.com)
[19:43:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:44:06] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:684c:8372:affb:20f0) (Ping timeout: 260 seconds)
[19:44:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:46:31] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:48:30] *** Joins: et09 (~et09@user/et09)
[19:48:53] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[19:49:14] *** Joins: alch (~alch@ca-18-212-202.service.infuturo.it)
[19:50:45] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[19:53:38] <sham1> Sadly GMP has the quirk of calling abort() on allocation failure
[19:54:07] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[19:54:53] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[19:55:30] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:55:31] *** Joins: pulse (~pulse@user/pulse)
[19:56:48] *** Joins: Crassus (~Crassus@user/crassus)
[19:56:51] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:57:11] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:59:04] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[20:01:44] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:01:49] *** Quits: psycomic (~psycomic@2a01:e0a:18:d0a0:4e90:e114:dfce:5afa) (Quit: Leaving)
[20:05:25] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:05:48] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[20:06:11] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 245 seconds)
[20:07:33] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[20:13:09] *** Joins: semeion (~semeion@user/semeion)
[20:13:50] *** Joins: kish` (~aqua@user/aqua)
[20:19:00] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.93)
[20:20:18] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[20:21:51] *** Quits: fe23 (~fe23@2409:8a34:464:4990:20cb:7ac9:56a5:2642) (Quit: fe23)
[20:21:54] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:26:07] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.93) (Ping timeout: 256 seconds)
[20:26:38] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:28:13] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:28:57] *** Joins: Mentor (~Ionut@92.86.217.127)
[20:29:36] *** Joins: mrig (~mrig@user/mrig)
[20:29:41] *** Joins: shivesh (~shivesh@user/shivesh)
[20:32:08] *** Joins: CtokaX (~dominolog@103.27.2.72)
[20:33:15] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.93)
[20:33:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[20:37:01] *** Joins: Betal (~Betal@user/betal)
[20:38:01] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[20:38:26] *** Quits: CtokaX (~dominolog@103.27.2.72) (Quit: Leaving)
[20:39:07] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.93) (Read error: Connection reset by peer)
[20:39:11] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[20:39:14] *** Joins: teut (~teut@2401:4900:1c68:4942:c4a5:e74c:c4b8:7b2e)
[20:39:37] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[20:40:22] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[20:43:37] *** Quits: n3rdy1 (~n3rdy1@2601:646:c300:f20:d852:3bde:2197:ddf9) (Ping timeout: 240 seconds)
[20:44:20] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[20:45:36] *** Joins: Satin (uid193953@user/Seten)
[20:46:06] *** Joins: aqua (~aqua@user/aqua)
[20:46:06] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[20:46:31] *** Quits: nrl^ (~nrl@207.5.21.20) (Ping timeout: 256 seconds)
[20:48:07] *** aqua is now known as kish`
[20:49:38] *** Joins: uidops (~uidops@188.211.130.188)
[20:50:12] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3403:156c:961e:b2fe)
[20:50:12] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3403:156c:961e:b2fe) (Changing host)
[20:50:12] *** Joins: skapata (~Skapata@user/skapata)
[20:50:30] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[20:54:11] *** Joins: fWhatshisace (~jon@catv-178-48-246-132.catv.broadband.hu)
[20:55:06] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.broadband.hu) (Read error: Connection reset by peer)
[20:55:13] *** fWhatshisace is now known as whatshisface
[20:56:33] *** Joins: Foaly (~Foaly@user/foaly)
[20:57:35] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:59:48] *** Joins: aradesh (~aradesh@user/aradesh)
[21:02:04] *** Joins: nrl^ (~nrl@207.5.21.20)
[21:07:42] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:09:51] *** Joins: hexology (~hexology@user/hexology)
[21:10:03] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:17:36] *** Joins: Guest86 (~Guest86@2607:fb90:27d4:20be:a4b5:7c5b:d278:395e)
[21:18:15] *** Parts: Guest86 (~Guest86@2607:fb90:27d4:20be:a4b5:7c5b:d278:395e) ()
[21:18:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:18:48] *** Joins: u0_a391 (~u0_a391@2600:380:a47c:eeb:5725:dcc2:7270:da99)
[21:19:10] *** Quits: nrl^ (~nrl@207.5.21.20) (Remote host closed the connection)
[21:19:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[21:19:42] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[21:20:01] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:20:20] *** Parts: uidops (~uidops@188.211.130.188) ()
[21:20:46] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 245 seconds)
[21:22:11] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 250 seconds)
[21:22:32] <ioxzev1z> Nothing?
[21:22:46] <neiluj> kudos to this hashmap lib! https://github.com/DavidLeeds/hashmap
[21:22:48] <candide> Title of neiluj's link: GitHub - DavidLeeds/hashmap: Templated type-safe hashmap implementation in C using open addressing and linear probing for collision resolution.
[21:22:57] <neiluj> coming from type safe languages, it's soo nice
[21:23:55] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[21:26:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[21:28:31] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[21:31:03] *** Quits: jusski (~user@88.118.83.231) (Ping timeout: 250 seconds)
[21:31:58] *** Quits: WAR10CK (~WAR10CK@14.223.183.246) (Remote host closed the connection)
[21:32:19] *** Joins: WAR10CK (~WAR10CK@14.223.183.246)
[21:40:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:44:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[21:46:13] *** Quits: Brainium (~brainium@user/brainium) (Quit: -a- IRC for Android 2.1.59)
[21:46:36] *** Joins: Brainium (~brainium@user/brainium)
[21:49:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:49:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:49:01] *** Joins: wroathe (~wroathe@user/wroathe)
[21:49:07] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:51:01] *** Quits: AmR (~AmREiSa@156.199.20.227) (Quit: Konversation terminated!)
[21:56:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[21:56:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:57:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:57:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:57:24] *** Joins: wroathe (~wroathe@user/wroathe)
[22:00:45] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[22:02:08] *** Joins: NEYi (~NEYi@109.251.216.38)
[22:02:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:03:01] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[22:03:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[22:05:51] *** Quits: alch (~alch@ca-18-212-202.service.infuturo.it) (Ping timeout: 256 seconds)
[22:06:10] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[22:06:49] *** Parts: alioui (~medeva293@41.62.76.215) ()
[22:06:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:07:32] *** Joins: alch (~alch@151.82.172.110)
[22:09:50] *** Joins: pnbeast (~pnbeast@24.102.186.191.res-cmts.snh.ptd.net)
[22:13:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:13:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:13:29] *** Joins: wroathe (~wroathe@user/wroathe)
[22:21:03] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:22:06] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[22:22:31] *** Joins: Charadon (~Charadon@155.138.164.183)
[22:22:45] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[22:22:45] *** Joins: agonhajdari (~textual@user/agonhajdari)
[22:23:05] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[22:23:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:25:35] <sham1> The need for hash tables might be a tad overstated. Although they are nice to have sometimes
[22:27:56] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[22:30:18] *** Joins: brunosaboia_ (~bsaboia@177.37.198.83)
[22:30:18] *** Quits: brunosaboia_ (~bsaboia@177.37.198.83) (Client Quit)
[22:32:23] *** Joins: u0_a3911 (~u0_a391@2603-6010-a141-6fa3-995e-1663-5011-4cc5.res6.spectrum.com)
[22:32:46] *** Quits: Fr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net) (Quit: WeeChat 3.4)
[22:33:05] *** Joins: Fr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net)
[22:35:17] *** Quits: u0_a391 (~u0_a391@2600:380:a47c:eeb:5725:dcc2:7270:da99) (Ping timeout: 240 seconds)
[22:37:59] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:38:14] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:41:31] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:44:56] *** Joins: ferdna (~ferdna@user/ferdna)
[22:45:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[22:45:48] <NRK[m]> i think it's a good thing C stdlib doesn't provide "high level" data structures
[22:46:24] <NRK[m]> forces you to come up with simpler solutions
[22:47:09] *** Joins: jusski (~user@88.118.83.231)
[22:48:34] *** Joins: inlight (~inlight@157.35.69.73)
[22:48:34] *** Quits: inlight (~inlight@157.35.69.73) (Changing host)
[22:48:34] *** Joins: inlight (~inlight@user/inlight)
[22:48:36] *** Joins: Enitin (~Enitin@37.80.148.79)
[22:50:26] *** Joins: derp_ (~yep@24.sub-174-215-176.myvzw.com)
[22:52:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:52:31] *** Joins: magla (~gelignite@55d47ed7.access.ecotel.net)
[22:52:47] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:52:53] *** Quits: Deepspeed (~yep@239.sub-174-215-172.myvzw.com) (Ping timeout: 256 seconds)
[22:53:03] <pnbeast> NRK[m], how does it for you to do that?
[22:53:16] <pnbeast> *force you...
[22:55:02] *** Quits: Enitin (~Enitin@37.80.148.79) (Ping timeout: 240 seconds)
[22:55:41] <NRK[m]> well, you realize you don't even need a hashmap or a dynamic array when all you're dealing with is 10 elements which won't take up more than a kilobyte of memory
[22:55:54] <NRK[m]> so you just use a simple array and loop through it :D
[22:56:25] *** Quits: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 250 seconds)
[22:57:31] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[22:59:59] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:00:57] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[23:01:55] <pnbeast> Ah.  Well, thanks - that's an insight I hadn't quite reached.
[23:04:20] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[23:04:52] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:04:57] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[23:05:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:05:17] <sham1> Speaking of the C stdlib and data structure stuff, one thing I am miffed about is that there is no standard stable sort
[23:05:49] *** Joins: cousteau (~cousteau@user/cousteau)
[23:05:55] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 268 seconds)
[23:06:25] *** Joins: strajder (~strajder@user/strajder)
[23:07:33] *** Joins: m4v (~znc@ubuntu/member/m4v)
[23:08:45] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 256 seconds)
[23:13:29] <caze> That would only make the implementor's job harder, and the #1 priority of the committee is to make the job easier.
[23:13:50] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[23:13:54] *** Joins: derp__ (~yep@239.sub-174-215-189.myvzw.com)
[23:14:12] <sham1> mdr
[23:16:02] *** Quits: derp_ (~yep@24.sub-174-215-176.myvzw.com) (Ping timeout: 240 seconds)
[23:16:33] *** Quits: derp__ (~yep@239.sub-174-215-189.myvzw.com) (Remote host closed the connection)
[23:16:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:17:02] <neiluj> french spotted
[23:17:21] <caze> ,udict mdr
[23:17:23] <candide> 1/10: (+1422/-129) French equivelant of LOL, litterally meaning "m​ort de rire", "Death from laughter" or "dying of laughter" (though it should be note that most French people still know LOL) «INSERT: Funnyness RESPOND: mdr»
[23:18:23] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 256 seconds)
[23:18:50] <sham1> Not French in this case
[23:18:52] <sham1> Esperantist
[23:19:19] <sham1> Of course it's a related term
[23:19:24] *** Quits: llh (~llh@user/llh) (Ping timeout: 240 seconds)
[23:19:51] *** Joins: Satin (uid193953@user/Seten)
[23:20:25] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[23:20:28] *** Quits: teut (~teut@2401:4900:1c68:4942:c4a5:e74c:c4b8:7b2e) (Quit: Client closed)
[23:21:18] *** Joins: drstranger (~qqq@user/drstranger)
[23:21:57] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:24:02] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:24:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:25:12] *** Quits: drstranger (~qqq@user/drstranger) (Quit: drstranger)
[23:25:15] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:27:12] *** Joins: Deepspeed (~yep@124.sub-174-215-151.myvzw.com)
[23:27:30] *** Joins: trafficjam (~trafficja@119.17.42.59)
[23:30:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[23:31:42] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:b58d:d8c9:2199:bc86)
[23:33:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[23:34:20] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:36:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[23:36:13] *** Quits: inomoz (~inomoz@176.59.118.12) (Remote host closed the connection)
[23:36:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:37:11] *** Joins: palindrome (~jhonny@109.77.12.226)
[23:37:20] *** Joins: bdax (~tom@05432be4.skybroadband.com)
[23:38:06] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:38:20] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:40:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:40:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:40:35] *** Joins: wroathe (~wroathe@user/wroathe)
[23:41:29] *** Quits: bdax (~tom@05432be4.skybroadband.com) (Ping timeout: 250 seconds)
[23:42:34] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[23:42:45] *** Joins: Enitin (~Enitin@82.102.22.84)
[23:43:44] *** Joins: strajder (~strajder@user/strajder)
[23:45:29] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:45:47] *** kish` is now known as habanero
[23:46:57] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:48:06] *** Joins: llh (~llh@user/llh)
[23:48:32] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:50:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:50:57] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Remote host closed the connection)
[23:51:11] *** habanero is now known as Habanero
[23:51:14] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[23:51:38] *** Joins: Jeaton (~hybrid@23.88.189.54)
[23:53:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:53:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:53:28] *** Joins: wroathe (~wroathe@user/wroathe)
[23:53:59] *** Quits: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Remote host closed the connection)
[23:56:21] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[23:57:30] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[23:57:34] *** Habanero is now known as kish`
[23:57:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:57:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:59:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
