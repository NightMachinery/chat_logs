[00:04:48] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:b51b:c3c1:b1fa:8274)
[00:09:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:09:24] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[00:12:01] *** Joins: shka (~herr@109.231.62.239)
[00:12:49] *** Quits: shka (~herr@109.231.62.239) (Client Quit)
[00:13:05] *** Joins: shka (~herr@109.231.62.239)
[00:19:42] *** Quits: homarlone (~homarlone@user/homarlone) (Quit: Client closed)
[00:22:18] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 260 seconds)
[00:25:18] *** Joins: hexfive (~eric@50.35.83.177)
[00:26:33] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[00:27:26] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:b51b:c3c1:b1fa:8274) (Ping timeout: 260 seconds)
[00:29:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:33:07] *** Quits: MD87 (~MD87@user/md87) (Ping timeout: 252 seconds)
[00:33:20] *** Joins: MD87 (~MD87@user/md87)
[00:39:00] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:39:01] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[00:40:20] *** Joins: sheldon (~sheldon@user/sheldon)
[00:44:49] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[00:49:04] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[00:51:24] *** Joins: natrys (~natrys@user/natrys)
[01:05:05] *** Joins: sheldon_ (~sheldon@user/sheldon)
[01:06:38] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 260 seconds)
[01:15:46] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.241)
[01:22:21] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.241) (Ping timeout: 265 seconds)
[01:22:31] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8be1:9b8c:b277:a3d0) (Remote host closed the connection)
[01:25:29] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[01:25:52] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 245 seconds)
[01:26:10] *** Joins: mrig (~mrig@user/mrig)
[01:26:24] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.241)
[01:28:44] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[01:30:13] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[01:31:30] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[01:36:00] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:39:52] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Quit: Leaving)
[01:45:38] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[01:47:22] *** Joins: ztx (~ztx@user/ztx)
[01:47:39] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:47:47] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:52:43] *** Joins: k0ta (~k0ta@151.210.174.250)
[01:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:55:28] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[01:56:01] *** Quits: KekSi (~KekSi@x4db9a5e0.dyn.telefonica.de) (Ping timeout: 252 seconds)
[01:56:01] *** Quits: novns (~novns@user/novns) (Ping timeout: 252 seconds)
[01:56:14] *** Joins: novns (~novns@user/novns)
[01:56:16] *** Joins: KekS (~KekSi@x4db9a5e0.dyn.telefonica.de)
[01:57:09] *** Joins: KekSi (~KekSi@x4db9a5e0.dyn.telefonica.de)
[01:58:55] *** Quits: k0ta (~k0ta@151.210.174.250) (Ping timeout: 260 seconds)
[02:00:58] *** Quits: KekS (~KekSi@x4db9a5e0.dyn.telefonica.de) (Ping timeout: 252 seconds)
[02:00:58] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[02:02:11] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[02:04:00] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:04:03] *** Joins: cfjk5 (~cfjk@user/cfjk)
[02:04:09] *** Quits: cfjk (~cfjk@user/cfjk) (Read error: Connection reset by peer)
[02:04:10] *** cfjk5 is now known as cfjk
[02:04:16] *** Quits: binkers (~binkers@user/binkers) (Ping timeout: 252 seconds)
[02:04:34] *** Joins: binkers (~binkers@user/binkers)
[02:04:49] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.241) (Ping timeout: 252 seconds)
[02:07:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:09:18] *** Joins: fikran (~fikran@user/fikran)
[02:11:44] <wroathe> So the documentation for pprof says that the Go runtime is already capable of producing profile data. Everything I've seen says to use "go test" to produce a binary that can produce profiles, but I'm finding it to be a little obtuse to use. Is there a better way? Specifically what I'm trying to do is produce a binary I can attach to or signal at runtime and have that binary produce "production" data for
[02:11:50] <wroathe> profiling
[02:12:16] <wroathe> It seems odd that the unit testing and the benchmarking and profiling are all so coupled together in this CLI
[02:14:31] *** Joins: independent_ (~independe@95.144.68.39)
[02:14:52] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:15:03] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[02:18:45] <b0nn> coupled?
[02:20:17] <wroathe> go test seems to require that there be tests. Admittedly I'm approaching this in a lazy way, but I was hoping I'd be able to do something like go test hello.go (like go build hello.go) and then be able to run ./hello -cpuprofile=foo.out
[02:20:57] <wroathe> But really what I'd prefer is to just be able to do something like: go build --enable-profiling hello.go
[02:21:02] <wroathe> Not sure if something like that exists or not
[02:21:51] *** Joins: Snyp (~Snyp@49.207.200.242)
[02:23:56] <b0nn> try this https://flaviocopes.com/golang-profiling/
[02:26:16] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[02:27:12] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[02:27:31] *** Joins: independent_ (~independe@95.144.68.39)
[02:27:34] <wroathe> b0nn: thanks
[02:32:26] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:37:33] *** Joins: k0ta (~k0ta@151.210.174.250)
[02:39:42] *** Joins: sheldon (~sheldon@user/sheldon)
[02:42:22] *** Quits: sheldon_ (~sheldon@user/sheldon) (Ping timeout: 252 seconds)
[02:42:41] *** Parts: wroathe (~wroathe@user/wroathe) ()
[02:42:56] *** Quits: mooff (~mooff@awful.cooking) (Quit: Ping timeout (120 seconds))
[02:44:00] *** Joins: mooff (~mooff@awful.cooking)
[02:46:14] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2.1)
[02:47:28] *** Quits: mooff (~mooff@awful.cooking) (Client Quit)
[02:48:11] *** Joins: mooff (~mooff@awful.cooking)
[02:52:38] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[02:55:38] *** Quits: mooff (~mooff@awful.cooking) (Quit: Quit)
[02:57:32] <Tv_> generally you want to profile a busy system, not a trivial func main
[02:57:39] <Tv_> benchmarks are good for that
[02:57:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:03:41] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:09:10] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:09:43] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[03:16:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:18:34] *** Joins: mooff (~mooff@awful.cooking)
[03:19:27] *** Joins: NeoCron (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de)
[03:20:26] *** Joins: sheldon_ (~sheldon@user/sheldon)
[03:23:22] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 260 seconds)
[03:27:48] *** Quits: NeoCron (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:28:59] <rabbitear> https://www.youtube.com/watch?v=aW2LvQUcwqc&ab_channel=chemdotinfo
[03:32:02] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:26] *** Joins: jsrnop (~mark@user/jsrnop)
[03:37:58] <seebs> there is no particular connection between testing and profiling, except that `go test` happens to provide trivial hooks for enabling profiling, but you can add those other ways also.
[03:50:25] <Tv_> tests probably make bad subjects to profile
[03:51:09] *** Quits: tristero (~nobody@user/tristero) (Quit: WeeChat 3.0.1)
[03:54:52] *** Joins: tristero (~nobody@user/tristero)
[03:55:25] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100a) (Quit: ZNC 1.8.2 - https://znc.in)
[04:16:44] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:16:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:18:40] *** Joins: fikran (~fikran@user/fikran)
[04:21:57] *** Quits: sheldon_ (~sheldon@user/sheldon) (Quit: WeeChat 3.2.1)
[04:24:00] *** Quits: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:25:45] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:26:32] *** Quits: mooff (~mooff@awful.cooking) (Quit: Ping timeout (120 seconds))
[04:26:52] *** Joins: mooff (~mooff@awful.cooking)
[04:32:56] *** Joins: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net)
[04:41:32] *** Quits: freswa (~freswa@2a01:4f8:1c0c:804b::2) (Quit: Bye!)
[04:42:13] *** Joins: freswa (~freswa@static.3.158.69.159.clients.your-server.de)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:41] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[04:46:41] *** Quits: Snyp (~Snyp@49.207.200.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:52] *** Quits: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:50:55] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:51:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[04:51:49] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:52:14] *** Joins: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net)
[04:55:27] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[04:56:04] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:56:25] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:58:47] *** Joins: burningserenity (~burningse@102.129.153.120)
[05:08:07] *** Joins: Snyp (~Snyp@49.207.200.242)
[05:18:14] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[05:20:41] *** Quits: Snyp (~Snyp@49.207.200.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:49] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:21:05] *** Joins: Snyp (~Snyp@49.207.200.242)
[05:21:30] *** Quits: Snyp (~Snyp@49.207.200.242) (Client Quit)
[05:22:35] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[05:24:13] *** Ruxnor is now known as KDDLB
[05:28:54] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 260 seconds)
[05:30:47] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[05:39:29] *** Quits: tdsltl^ (~tdsltl@68.101.54.227) (Remote host closed the connection)
[05:42:43] *** Quits: robs (~rw@2401:c080:1c02:b7b:5400:3ff:fe43:b5cd) (Quit: WeeChat 2.9)
[05:44:58] *** Quits: jespada (~jespada@90.254.245.194) (Ping timeout: 252 seconds)
[05:48:45] *** Joins: jespada (~jespada@90.254.245.194)
[05:59:07] *** Joins: oxum (~oxum@106.201.47.93)
[06:02:42] *** Joins: frost (~frost@59.71.242.61)
[06:03:40] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 252 seconds)
[06:09:29] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[06:12:10] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[06:13:47] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[06:24:04] *** Joins: gggp (~textual@221.219.70.207)
[06:26:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:28:03] *** Joins: fikran (~fikran@user/fikran)
[06:28:48] *** Quits: gggp (~textual@221.219.70.207) (Ping timeout: 265 seconds)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:31] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:38] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[06:34:47] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:44] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[06:39:58] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:46:08] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:50:21] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[07:07:54] *** Joins: KekS (~KekSi@x4dbe953a.dyn.telefonica.de)
[07:11:49] *** Quits: KekSi (~KekSi@x4db9a5e0.dyn.telefonica.de) (Ping timeout: 265 seconds)
[07:12:01] *** Quits: JPT (~jpt@classified.name) (Quit: Hoppla!)
[07:18:18] *** Joins: JPT (~jpt@classified.name)
[07:32:53] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:43:05] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[07:47:16] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[07:48:54] *** Joins: oxum (~oxum@106.201.47.93)
[07:53:34] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 252 seconds)
[07:55:43] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:55:52] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[08:02:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:05:59] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[08:09:01] <acagastya> Hi, I am trying to create an array/slice for a simple HTTP server.  I am reading a db to get ID (integer), CONTENT (string) and UNIXTS (integer).  I intend to send the result as JSON, something like `{ res: [ { id: ID, content: CONTENT, when: UNIXTS }, ... ] }`.  How do I specify which type of initial array/slice it should be, to which I can append as I read the rows?
[08:11:20] *** Joins: fdan (~fdan@192.146.154.3)
[08:15:14] <b0nn> acagastya: you can make a struct type that holds a slice of other struct types that you store your db data in (something akin to type Foo strcut{ Data struct{1: string, 2: int}})
[08:16:06] <b0nn> See if this is any help https://penthaa.medium.com/golang-how-to-parse-json-data-into-a-nested-struct-29be89ce2ae8
[08:17:47] *** Joins: gggp (~textual@60.10.23.172)
[08:22:07] *** Quits: gggp (~textual@60.10.23.172) (Ping timeout: 252 seconds)
[08:27:05] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[08:32:43] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:35:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:36:03] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[08:37:30] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[08:37:30] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[08:37:32] *** Joins: fikran (~fikran@user/fikran)
[08:37:32] *** Joins: foobaz (~oofabz@199.58.97.156)
[08:37:44] *** Joins: matt1982 (~matt1982@178.62.73.7)
[08:38:01] *** Joins: arcatech (~arcatech@user/arcatech)
[08:38:13] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[08:38:23] *** Joins: Liexei (Liexei@user/liexei)
[08:38:27] *** Server sets mode: +Ccnt 
[08:38:47] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[08:40:19] *** Joins: mirai (~mirai@2001:bc8:630:161::1)
[08:40:19] *** Joins: klaas (~klaas@simply.kla.as)
[08:44:26] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:46:20] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[08:47:56] <acagastya> Ah, that works.  Thanks, @b0nn.
[08:49:16] *** Quits: Vigdis (~danj@ns4.chown.me) (*.net *.split)
[08:49:16] *** Quits: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987) (*.net *.split)
[08:49:16] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (*.net *.split)
[08:49:16] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (*.net *.split)
[08:49:17] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[08:49:17] *** Quits: jaguar (jag@maddshark.com) (*.net *.split)
[08:49:17] *** Quits: Papa (~papa@user/papa) (*.net *.split)
[08:49:17] *** Quits: chder (~chder@user/chder) (*.net *.split)
[08:49:17] *** Quits: Shimmy (~Shimmy@user/shimmy) (*.net *.split)
[08:49:17] *** Quits: jemaclus (~jemaclus@64.227.108.73) (*.net *.split)
[08:49:17] *** Quits: avoozl (~avoozl@escaflowne.hro.nl) (*.net *.split)
[08:49:17] *** Quits: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc) (*.net *.split)
[08:49:17] *** Quits: longsleep (~quassel@2a02:c207:3001:216:1000::1) (*.net *.split)
[08:49:17] *** Quits: abeaumont (~abeaumont@163.172.180.248) (*.net *.split)
[08:49:17] *** Quits: karl (~Karlssel@2001:41d0:8:9a4b::1) (*.net *.split)
[08:49:17] *** Quits: jolan (~jolan@ec2.jolan.org) (*.net *.split)
[08:49:17] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[08:49:17] *** Quits: Jmainguy (~Jmainguy@phy01.standouthost.com) (*.net *.split)
[08:49:17] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[08:49:17] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[08:49:17] *** Quits: wkalt (~wkalt@user/wkalt) (*.net *.split)
[08:49:17] *** Quits: hjmcnew (sid86092@tinside.irccloud.com) (*.net *.split)
[08:49:17] *** Quits: darkmuggle (darkmuggle@redhat/darkmuggle) (*.net *.split)
[08:49:17] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[08:49:17] *** Quits: alm (~alm@user/alm) (*.net *.split)
[08:49:17] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[08:49:17] *** Quits: loosh (~jason@vultr.bastion.pnj1.us.zj.is) (*.net *.split)
[08:49:17] *** Quits: arusso (~arusso@user/arusso) (*.net *.split)
[08:49:17] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[08:49:17] *** Quits: pinky (pinky@minime.fef.net) (*.net *.split)
[08:49:17] *** Quits: brb (~brb@user/brb) (*.net *.split)
[08:49:21] *** Joins: pinky_ (pinky@minime.fef.net)
[08:49:21] *** Joins: tharkun_ (tharkun@kvm6.telegraphics.com.au)
[08:49:23] *** Joins: karl (~Karlssel@2001:41d0:8:9a4b::1)
[08:49:25] *** Joins: Jmainguy1 (~Jmainguy@phy01.standouthost.com)
[08:49:29] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[08:49:30] *** Joins: longsleep (~quassel@2a02:c207:3001:216:1000::1)
[08:49:30] *** Joins: hjmcnew_ (sid86092@id-86092.tinside.irccloud.com)
[08:49:30] *** Joins: arusso (~arusso@nubsicle.aaron-russo.com)
[08:49:30] *** Joins: Vigdis (~danj@ns4.chown.me)
[08:49:32] *** Joins: loosh (~jason@vultr.bastion.pnj1.us.zj.is)
[08:49:36] *** Joins: avoozl (~avoozl@escaflowne.hro.nl)
[08:49:36] *** Joins: Shimmy (~Shimmy@user/shimmy)
[08:49:37] *** Joins: jemaclus (~jemaclus@64.227.108.73)
[08:49:40] *** Joins: alm (~alm@user/alm)
[08:49:41] *** Joins: oliv3 (~olivier@2001:bc8:6005:129:208:a2ff:fe0c:46bc)
[08:49:43] *** Joins: jolan (~jolan@ec2.jolan.org)
[08:49:48] *** Joins: beaumonta (~abeaumont@163.172.180.248)
[08:49:51] *** Joins: darkmugg- (darkmuggle@here.for-the.chat)
[08:49:53] *** Joins: leonardo (~leonardo@ipv6two.tilde.club)
[08:49:55] *** Joins: Ekho (~Ekho@user/ekho)
[08:49:55] *** Joins: chder (~chder@user/chder)
[08:49:55] *** Quits: arusso (~arusso@nubsicle.aaron-russo.com) (Changing host)
[08:49:55] *** Joins: arusso (~arusso@user/arusso)
[08:49:55] *** Joins: erhandsome (~erhandsom@206.190.233.126.16clouds.com)
[08:50:04] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[08:50:06] *** Quits: erhandsome (~erhandsom@206.190.233.126.16clouds.com) (Changing host)
[08:50:06] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[08:50:09] *** Quits: ikke (~kevin@delta.ikke.info) (Changing host)
[08:50:09] *** Joins: ikke (~kevin@alpine/developer/ikke)
[08:50:16] *** Joins: fizzie (irc@selene.zem.fi)
[08:50:33] *** Joins: wkalt (~wkalt@user/wkalt)
[08:50:50] *** Joins: Papa (~papa@user/papa)
[08:51:09] *** Joins: brb (~brb@user/brb)
[08:51:24] *** Joins: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987)
[08:51:55] *** Joins: jaguar (jag@maddshark.com)
[08:54:07] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[08:55:45] *** Joins: fdan (~fdan@192.146.154.3)
[08:56:16] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[09:02:03] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[09:17:12] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.250)
[09:23:36] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[09:29:32] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[09:35:46] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[09:37:03] *** Joins: jpw (~jpw@user/jpw)
[09:50:29] *** Joins: toretto (~ryan@user/toretto)
[09:50:59] <toretto> Is there any default Go hash function implementation that I can use?
[09:51:51] <nitrix> A hash function that would work for any type?
[09:53:02] <toretto> Yeah
[09:53:05] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[09:53:22] <toretto> Like, in C, I'd just cast it to void* and pass a size to get a size_t
[09:53:26] <toretto> and I'd just mod it
[09:53:35] <toretto> Can I do something similar in golang?
[09:54:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:54:44] <nitrix> There's a Hash interface, it requires types to implement a couple of things, a writer, a size, an ability to reset and a few other things.
[09:54:58] <b0nn> https://pkg.go.dev/hash/fnv
[09:55:08] <bpalmer> you can use an unsafe.Pointer and unsafe.SizeOf, I suppose, but generally you're better off defining a serialization that your types should handle
[09:55:45] <bpalmer> that way  you can create a []byte sequence from your type, and then hash that (which is what the hash.Hash type is outlining)
[09:55:54] <toretto> bpalmer: can you link me to a resource? i've never used unsafe.*, not sure how i can do what you're saying.
[09:56:41] <nitrix> The idea is that you create one of the Hash type that Go provides and you write data to the writer it embeds.
[09:57:51] <bpalmer> toretto: if you haven't done it before, then this is probably not the time to start messin with it; unsafe is, well, not safe :)
[09:58:01] <nitrix> So you're left with the responsability to serialize things. encoding/binary could work, etc.
[09:58:11] <bpalmer> toretto: you can use a standard serialization mechanism like json.Encoder or gob to create a []byte to hash
[09:58:48] <bpalmer> gob is encoding/gob
[09:58:58] <toretto> i see
[09:59:47] <nitrix> I would not do unsafe pointer stuff, the garbage collector is allowed to move memory and relocate pointers.
[10:00:45] <toretto> nitrix: ah, yeah. good point.
[10:00:54] <toretto> never thought of that.
[10:01:27] <toretto> well, wait.
[10:02:33] <toretto> nitrix: but is using the Hash interface safe from this?
[10:02:51] <toretto> let me look at Hash
[10:03:35] <bpalmer> toretto: Hash works with you writing []byte sequences; you have to go from the value to a serialization yourself.
[10:03:39] <nitrix> I don't think you understand. A type that implements Hash provides an io.Writer that you write data to and a Sum() operation.
[10:04:03] <bpalmer> the various encodings proposed (encoding/json , encoding/gob, encoding/binary) all can be used safely to produce []byte
[10:04:21] <nitrix> You have to serialize your types into bytes, then feed that to the hash's writer.
[10:05:09] *** Joins: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247)
[10:05:59] <nitrix> The pointer stuff was brought up because you mentioned how you would do this in C, by treating the pointer like an integer, which is a no-go for Go.
[10:07:14] <nitrix> When you start using the unsafe uintptr, Go no longer knows that this is a pointer and it wont get updated if the memory is ever relocated. It's quite dangerous to work with.
[10:07:35] *** Joins: oxum (~oxum@106.201.47.93)
[10:07:47] <toretto> makes sense.
[10:07:53] <toretto> i'll read about Hash. i'll need to understand it a bit.
[10:09:25] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Client Quit)
[10:09:40] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.250) (Ping timeout: 240 seconds)
[10:09:58] *** Joins: shka (~herr@109.231.62.239)
[10:11:21] *** Joins: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247)
[10:11:33] *** Quits: oxum (~oxum@106.201.47.93) (Remote host closed the connection)
[10:11:42] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:11:44] <nitrix> player := Player{username: "nitrix", level: 100}; hash := fnv.New32a(); binary.Write(hash, binary.LittleEndian, obj); fmt.Println(hash.Sum())
[10:14:10] <nitrix> Well, I meant obj to be player.
[10:20:26] *** Joins: mrig (~mrig@user/mrig)
[10:22:32] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[10:25:52] *** Quits: LiftLeft (~LiftLeft@172.98.92.55) (Ping timeout: 252 seconds)
[10:27:04] *** Joins: gggp (~textual@111.63.44.11)
[10:29:40] *** Joins: cskr (~cskr@49.207.218.133)
[10:30:05] *** Quits: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:31:28] *** Joins: independent56 (~independe@95.144.68.39)
[10:31:56] *** Quits: gggp (~textual@111.63.44.11) (Ping timeout: 268 seconds)
[10:32:29] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[10:39:23] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Quit: What a beautiful day for an airstrike!)
[10:40:38] *** Quits: k0ta (~k0ta@151.210.174.250) (Ping timeout: 260 seconds)
[10:42:07] *** Joins: oxum (~oxum@106.201.47.93)
[10:42:29] *** Quits: cskr (~cskr@49.207.218.133) (Quit: Leaving)
[10:43:52] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[10:44:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:46:54] *** Joins: fikran (~fikran@user/fikran)
[10:47:21] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 268 seconds)
[10:47:48] *** Joins: cskr (~cskr@49.207.218.133)
[10:49:07] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Quit: WeeChat 3.2)
[10:49:29] *** Quits: cskr (~cskr@49.207.218.133) (Client Quit)
[10:50:21] *** Joins: cskr (~cskr@49.207.218.133)
[10:50:21] *** Joins: binape (~binape@154.197.27.149)
[10:52:31] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[10:52:49] *** Joins: ninjin (~ninjin@user/ninjin)
[10:53:01] *** Joins: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247)
[10:53:34] *** Quits: cskr (~cskr@49.207.218.133) (Client Quit)
[10:54:50] *** Joins: cskr (~cskr@49.207.218.133)
[10:56:38] *** Joins: LiftLeft (~LiftLeft@172.98.80.65)
[11:00:09] *** Joins: Snyp (~Snyp@49.207.212.114)
[11:01:13] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[11:03:47] *** Quits: Compy_ (~compy@user/compy) (Quit: Going offline, see ya! (www.adiirc.com))
[11:04:33] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:05:08] *** Joins: Snyp (~Snyp@49.207.212.114)
[11:05:43] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[11:08:09] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[11:09:01] *** Joins: gggp (~textual@60.10.194.48)
[11:09:20] *** Quits: dozn (uid249292@user/dozn) (Quit: Connection closed for inactivity)
[11:09:55] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[11:10:27] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[11:10:50] *** AndrewIRC is now known as AndrewYu
[11:10:57] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[11:11:07] *** Quits: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4) (Ping timeout: 252 seconds)
[11:12:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[11:13:59] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[11:16:31] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[11:17:24] *** Joins: fdan (~fdan@192.146.154.3)
[11:22:30] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Ping timeout: 268 seconds)
[11:26:38] *** Joins: gggp (~textual@60.10.194.48)
[11:29:33] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[11:30:14] *** beaumonta is now known as abeaumont
[11:30:16] *** Joins: gggp (~textual@111.63.44.11)
[11:30:40] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 240 seconds)
[11:31:51] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[11:33:50] *** Quits: cskr (~cskr@49.207.218.133) (Quit: Leaving)
[11:34:55] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[11:35:00] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:35:02] *** Quits: gggp (~textual@111.63.44.11) (Client Quit)
[11:35:36] *** Joins: gggp (~textual@221.219.70.207)
[11:37:29] *** Joins: Snyp (~Snyp@49.207.212.114)
[11:37:39] *** Joins: bkircher (~bkircher@2001:a61:2513:7e01:a543:4867:46f9:4de4)
[11:38:05] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[11:38:32] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[11:39:03] *** Joins: Snyp (~Snyp@49.207.212.114)
[11:39:38] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[11:40:17] *** Joins: mrig (~mrig@user/mrig)
[11:41:04] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[11:41:19] *** Joins: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4)
[11:41:59] *** Quits: nctcf^ (~nctcf@68.101.54.227) (Remote host closed the connection)
[11:42:22] *** Quits: carlavilla (~carlavill@2a0c:5a84:3206:a800:221:6bff:fe3b:cee4) (Remote host closed the connection)
[11:43:51] *** Joins: Snyp (~Snyp@49.207.212.114)
[11:44:26] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[11:45:37] *** Joins: absc (~absc@81.31.144.178)
[11:46:10] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 252 seconds)
[11:49:35] *** Joins: eduardas (~eduardas@93.93.57.5)
[11:51:57] *** Quits: binape (~binape@154.197.27.149) (Quit: Client closed)
[12:00:26] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[12:00:43] *** Joins: Snyp (~Snyp@49.207.212.114)
[12:00:54] *** Joins: independent56 (~independe@95.144.68.39)
[12:02:29] *** Quits: Snyp (~Snyp@49.207.212.114) (Client Quit)
[12:02:46] *** Joins: goldfish (~goldfish@user/goldfish)
[12:05:11] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[12:05:41] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 265 seconds)
[12:08:35] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[12:19:36] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[12:19:58] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[12:30:58] *** Joins: normen (~normen@p200300d7173dc90078c3a48d03c6a4b0.dip0.t-ipconnect.de)
[12:31:15] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[12:34:47] *** Joins: kayprish (~kayprish@46.240.130.158)
[12:36:13] *** Quits: absc (~absc@81.31.144.178) (Ping timeout: 252 seconds)
[12:36:50] *** Joins: neurocyte (~neurocyte@92.119.10.38)
[12:36:50] *** Quits: neurocyte (~neurocyte@92.119.10.38) (Changing host)
[12:36:50] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[12:38:41] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[12:42:32] *** Joins: absc (~absc@81.31.144.180)
[12:43:00] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:49:25] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 252 seconds)
[12:49:40] *** Quits: toretto (~ryan@user/toretto) (Ping timeout: 268 seconds)
[12:50:05] *** Joins: Snyp (~Snyp@1.39.173.220)
[12:54:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[12:55:56] *** Joins: oxum (~oxum@106.201.47.93)
[12:56:18] *** Joins: fikran (~fikran@user/fikran)
[12:57:09] *** Quits: Snyp (~Snyp@1.39.173.220) (Quit: Textual IRC Client: www.textualapp.com)
[12:57:09] *** Joins: kenth (~kenth@210.17.203.53)
[12:58:17] *** Quits: oxum (~oxum@106.201.47.93) (Remote host closed the connection)
[12:58:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:14:04] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[13:14:22] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[13:16:42] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[13:18:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[13:25:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:27:25] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[13:31:21] *** Joins: Guest23 (~textual@210.17.203.53)
[13:33:36] *** Quits: Guest23 (~textual@210.17.203.53) (Client Quit)
[13:33:54] *** Joins: Guest23 (~textual@210.17.203.53)
[13:34:11] *** Quits: Guest23 (~textual@210.17.203.53) (Client Quit)
[13:35:05] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 268 seconds)
[13:35:18] *** Joins: arkalon76 (~textual@210.17.203.53)
[13:36:52] *** Parts: arkalon76 (~textual@210.17.203.53) ()
[13:36:54] *** Joins: arkalon76 (~textual@210.17.203.53)
[13:38:48] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[13:39:20] *** Quits: gggp (~textual@221.219.70.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:19] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[13:42:29] *** Quits: kenth (~kenth@210.17.203.53) (Quit: Lost terminal)
[13:45:54] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[13:46:02] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[13:51:31] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:56:41] *** Joins: oxum (~oxum@106.201.47.93)
[13:58:10] *** Quits: absc (~absc@81.31.144.180) (Ping timeout: 240 seconds)
[13:59:23] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[14:01:41] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 265 seconds)
[14:03:16] *** Quits: arkalon76 (~textual@210.17.203.53) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:04:17] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[14:05:38] *** Joins: iliaf (~iliaf@user/iluxa)
[14:05:52] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[14:09:14] *** Quits: bpalmer (~user@user/bpalmer) (Remote host closed the connection)
[14:12:06] *** Joins: arkalon76 (~textual@210.17.203.53)
[14:13:39] *** Joins: cskr (~cskr@49.207.218.133)
[14:13:55] *** Quits: cskr (~cskr@49.207.218.133) (Client Quit)
[14:15:47] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 268 seconds)
[14:16:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ed36:db0d:8bac:c18d)
[14:19:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:30:17] *** Quits: arkalon76 (~textual@210.17.203.53) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:31:44] *** Quits: DM43078421 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[14:39:13] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ed36:db0d:8bac:c18d) (Ping timeout: 268 seconds)
[14:39:47] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[14:40:44] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:5c47:50d6:795a:5cec)
[14:40:46] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Client Quit)
[14:41:00] *** Joins: fdan (~fdan@192.146.154.3)
[14:43:54] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[14:45:36] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Client Quit)
[14:49:52] *** Joins: oxum (~oxum@106.201.47.93)
[14:50:50] *** Joins: DM43078421 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[14:52:49] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[14:53:53] *** Quits: r0bby (r0bby@user/r0bby) ()
[14:54:11] *** Joins: r0bby (r0bby@user/r0bby)
[14:54:51] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 268 seconds)
[15:04:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[15:05:40] *** Joins: fikran (~fikran@user/fikran)
[15:06:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[15:08:58] *** Joins: absc (~absc@81.31.144.178)
[15:14:37] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:16:33] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[15:18:59] <acagastya> Hi, I have unix timestamp (till millisecond) -- how do I convert it to something like "Sat, 11 Sep 2021 02:43:48 +0000"?
[15:19:37] <acagastya> As far as I understand, time.Parse does not accept the time stamp.
[15:19:57] <ikke> https://pkg.go.dev/time#Unix
[15:28:37] <acagastya> ikke -- am I supposed to use it in `time.Parse`?
[15:29:02] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[15:29:26] <ikke> No, it does not need to be parsed. You pass the timestamp to that function
[15:31:32] *** Quits: soren (sid124229@highgate.irccloud.com) ()
[15:31:43] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:31:48] *** Joins: soren (sid124229@id-124229.uxbridge.irccloud.com)
[15:34:42] <acagastya> I need it in this format: "Sat, 11 Sep 2021 02:43:48 +0000" -- how should I change that, other than extracting every single field like day, date, month year?
[15:36:11] <ikke> After you got a Time value, you can use Time.Format to get it in a specific format
[15:37:09] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:41:09] <acagastya> Ah, figured out -- `time.UnixDate` as the format.  Thanks, ikke.
[15:42:20] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5c47:50d6:795a:5cec) (Ping timeout: 268 seconds)
[15:50:01] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[15:50:19] *** Joins: shka (~herr@109.231.62.239)
[15:50:57] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[15:57:50] *** Quits: kayprish (~kayprish@46.240.130.158) (Remote host closed the connection)
[16:00:36] *** Quits: jimcroft______ (sid148498@highgate.irccloud.com) ()
[16:00:50] *** Joins: jimcroft______ (sid148498@id-148498.uxbridge.irccloud.com)
[16:03:46] *** Joins: Guest90 (~textual@119-18-3-156.771203.syd.nbn.aussiebb.net)
[16:10:30] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[16:11:12] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Client Quit)
[16:17:55] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[16:18:09] *** Joins: khrbt (~znc@user/khrbt)
[16:19:00] *** Joins: yoonkn (~user@175.197.208.79)
[16:20:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[16:22:49] *** Quits: Guest90 (~textual@119-18-3-156.771203.syd.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[16:24:00] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[16:25:56] *** Joins: Guest90 (~textual@119-18-3-156.771203.syd.nbn.aussiebb.net)
[16:26:31] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[16:26:53] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[16:27:48] *** Quits: gpeskens[w] (~gpeskens@94-208-100-217.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[16:31:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:31:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:33:11] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Read error: Connection reset by peer)
[16:33:24] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[16:42:53] *** Quits: cmagina (sid286142@user/cmagina) ()
[16:43:02] *** Parts: icebreaker (~icebreake@user/icebreaker) ()
[16:43:08] *** Joins: cmagina (sid286142@user/cmagina)
[16:44:41] *** Quits: trollixx (sid289131@highgate.irccloud.com) ()
[16:44:57] *** Joins: trollixx (sid289131@id-289131.uxbridge.irccloud.com)
[16:46:14] *** Joins: toretto (~ryan@45.15.18.2)
[16:50:47] *** Quits: toretto (~ryan@45.15.18.2) (Ping timeout: 268 seconds)
[16:59:35] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:02:07] *** Joins: Giedrius (~giedrius@5.133.65.65)
[17:02:17] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Ping timeout: 268 seconds)
[17:02:38] *** Joins: fdan (~fdan@103.215.168.1)
[17:04:37] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[17:04:47] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[17:05:32] *** Joins: X-Scale (~ARM@46.50.5.253)
[17:05:40] *** Quits: jsvcycling (sid369784@id-369784.highgate.irccloud.com) ()
[17:05:55] *** Joins: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com)
[17:13:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:15:03] *** Joins: fikran (~fikran@user/fikran)
[17:15:38] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:16:28] *** Quits: Guest90 (~textual@119-18-3-156.771203.syd.nbn.aussiebb.net) (Ping timeout: 268 seconds)
[17:17:16] *** Joins: Torr (~Torr@user/torr)
[17:17:55] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Ping timeout: 268 seconds)
[17:19:10] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:19:40] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:21:08] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[17:21:55] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[17:25:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[17:26:22] *** Joins: gggp (~textual@111.63.44.11)
[17:27:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:28:14] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[17:35:37] *** Quits: obviyus (sid415299@user/obviyus) ()
[17:35:53] *** Joins: obviyus (sid415299@user/obviyus)
[17:41:06] *** Quits: gggp (~textual@111.63.44.11) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:51:59] *** Joins: gggp (~textual@221.219.70.207)
[17:55:13] *** Quits: burningserenity (~burningse@102.129.153.120) (Ping timeout: 252 seconds)
[17:55:15] *** Joins: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com)
[18:03:18] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[18:06:19] *** Quits: aarchi (sid486183@id-486183.highgate.irccloud.com) ()
[18:06:26] *** Joins: fdan (~fdan@192.146.154.3)
[18:06:35] *** Joins: aarchi (sid486183@id-486183.uxbridge.irccloud.com)
[18:06:52] *** Joins: majic (~majic@89-73-196-12.dynamic.chello.pl)
[18:10:28] *** Parts: majic (~majic@89-73-196-12.dynamic.chello.pl) ()
[18:13:00] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[18:27:41] *** Joins: Compy_ (~compy@user/compy)
[18:28:19] *** Joins: mollerup (~nmollerup@customer-2a00-7660-1612-0168-011f-9c95-7048-49bd.ip6.gigabit.dk)
[18:28:27] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[18:28:42] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Read error: Connection reset by peer)
[18:30:02] *** ox is now known as oz
[18:34:13] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:34:43] *** Quits: gggp (~textual@221.219.70.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:35:22] *** Joins: fdan (~fdan@103.215.168.1)
[18:37:39] *** Joins: kulak (~kulak@user/kulak)
[18:43:29] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[18:45:25] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[18:46:31] *** Joins: motheki (~motheki@8.20.123.54)
[18:48:41] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[18:50:06] *** Joins: impermanence (~impermane@73.94.243.213)
[18:52:52] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 250 seconds)
[18:54:22] *** Joins: src (~src@user/src)
[18:54:35] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[18:54:46] *** Joins: rockyh (~rockyh@user/rockyh)
[18:57:18] *** Quits: burningserenity_ (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[18:58:32] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[18:58:40] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[18:59:02] *** Joins: shka (~herr@109.231.62.239)
[18:59:34] *** Quits: avery (sid501608@highgate.irccloud.com) ()
[18:59:49] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[19:02:04] *** Parts: motheki (~motheki@8.20.123.54) ()
[19:05:30] *** Joins: independent56 (~independe@95.144.68.39)
[19:08:33] *** Joins: gggp (~textual@60.10.23.172)
[19:11:13] *** Joins: oxum (~oxum@106.201.47.93)
[19:14:41] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[19:14:58] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[19:17:46] *** Quits: Giedrius (~giedrius@5.133.65.65) (Remote host closed the connection)
[19:18:00] *** Joins: edrocks (~Ed@user/edrocks)
[19:19:43] *** Quits: oxum (~oxum@106.201.47.93) (Ping timeout: 265 seconds)
[19:22:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:23:04] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[19:24:25] *** Joins: fikran (~fikran@user/fikran)
[19:28:33] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[19:29:14] <oliv3> hi, i'm posting JSON-encoded slices to a webservice and update them with the POST response, right now this works using e.g. *[]type1, but i have to duplicate the code for type2, type3 etc.. i'd like to pass my slices as []interface{} in order to have only one function, i guess it's probably doable but if anyone had an example ? :)
[19:33:12] <eric_hill> oliv3: does this assume that all of your JSON slices are objects, not arrays?  You can use json.RawMessage to deal with opaque json types.
[19:33:56] <oliv3> they are slices of objects yes
[19:34:35] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[19:38:04] *** Quits: gggp (~textual@60.10.23.172) (Ping timeout: 252 seconds)
[19:40:30] *** Joins: gggp (~textual@60.10.194.48)
[19:40:30] *** Joins: aead (~aead@user/aead)
[19:42:19] *** Quits: gggp (~textual@60.10.194.48) (Client Quit)
[19:43:50] *** Joins: anotheruser (~user@41.43.46.6)
[19:44:06] *** Joins: toretto (~ryan@45.15.18.2)
[19:45:47] *** Quits: impermanence (~impermane@73.94.243.213) (Quit: Connection closed)
[19:45:55] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[19:46:47] *** Quits: someuser (~user@41.46.233.226) (Ping timeout: 265 seconds)
[19:48:46] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[19:48:51] *** Quits: eduardas (~eduardas@93.93.57.5) (Quit: Konversation terminated!)
[19:52:06] *** Joins: eph (~eph@cpe-74-138-155-69.kya.res.rr.com)
[19:54:17] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[19:55:37] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[19:55:55] <A_Dragon> wait
[19:55:57] <A_Dragon> oliv3:
[19:56:01] <A_Dragon> please share some code for this
[20:00:37] <oliv3> https://paste.debian.net/1211595/
[20:00:52] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[20:01:58] <A_Dragon> model.Sites is a slice?
[20:03:11] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 268 seconds)
[20:05:25] <oliv3> Yes
[20:06:03] <A_Dragon> yeah use a json.RawMessage and unmarshal that into an interface{} you're passed, rather than repeating the code
[20:06:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:06:31] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[20:08:02] <oliv3> Would you have an example ?
[20:08:34] *** Quits: kulak (~kulak@user/kulak) (Ping timeout: 260 seconds)
[20:09:47] <A_Dragon> you can have Items in sitesResponse be a json.RawMessage
[20:11:02] <A_Dragon> from there, accept an interface{} in PostSites, that could be whatever, you dont need to care about it; Marshal just works (tm) with that, and unmarshal will as well
[20:11:05] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:11:36] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:11:36] <A_Dragon> as you want to overwrite `sites` you may have an issue there, but you can just return it instead (arguably what you should do anyway)
[20:16:01] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[20:16:30] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[20:18:30] <oliv3> hmm if i return (interface{}, error) then do sites, err := PostSites(...) it complains it can not convert it back to *model.Sites
[20:19:18] *** Quits: lebster (sid17131@id-17131.stonehaven.irccloud.com) ()
[20:19:20] *** Quits: jespada (~jespada@90.254.245.194) (Quit: Textual IRC Client: www.textualapp.com)
[20:19:34] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[20:19:34] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[20:20:13] *** Quits: jzelinskie (sid17772@user/jzelinskie) ()
[20:20:28] *** Joins: jzelinskie (sid17772@user/jzelinskie)
[20:20:49] *** Joins: tg (~tg@rockylinux/infra/tg)
[20:22:32] <Kyros> oliv3: https://tour.golang.org/methods/15
[20:23:32] *** Quits: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de) (Quit: Ping timeout (120 seconds))
[20:23:43] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[20:23:50] *** Joins: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de)
[20:27:56] *** Quits: absc (~absc@81.31.144.178) (Quit: Leaving.)
[20:29:50] <oliv3> i tried res, err := PostSites() then sites = res.(*model.Sites) and interface conversion: interface {} is *json.RawMessage, not *model.Sites
[20:30:36] <A_Dragon> yes you need to use RawMessage.DecodeJSON either inside on the interface you're passed (which may or may not do exactly what you want -- try it) or after its returned
[20:30:38] <oliv3> (the same with a plain json.RawMessage)
[20:31:32] *** Joins: jpw (~jpw@user/jpw)
[20:31:36] <oliv3> ok i'm lost now :)
[20:32:08] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) ()
[20:32:24] *** Joins: jakesyl (sid56879@id-56879.hampstead.irccloud.com)
[20:34:58] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:40:19] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[20:43:21] <A_Dragon> oliv3: json.RawMessage is essentially saying "please just gimme the raw data, Ill deal with it later"
[20:43:36] <A_Dragon> that way you can accept a $thing, that contains $stuff, but you dont know what $stuff is
[20:43:59] <A_Dragon> now, something down the line might, so you can give it $stuff, it can ask json to unmarshal it then into your concrete type
[20:44:20] <A_Dragon> so you can think of RawMessage just saying "take everything in this field, put it in a box, gimme the box"
[20:46:20] <A_Dragon> and then above, at your call site, you know what type you want to unmarshal into
[20:46:31] <A_Dragon> thus you can use it there
[20:49:26] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[20:52:19] *** Quits: pvalenta (~petr@mail.open-system.cz) (Ping timeout: 252 seconds)
[20:53:58] *** Joins: motheki (~motheki@8.20.123.54)
[21:05:04] *** Joins: kulak (~kulak@user/kulak)
[21:05:13] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[21:05:33] *** Joins: shka (~herr@109.231.62.239)
[21:07:17] <oliv3> A_Dragon: i have to leave, will try that tomorrow, many thanks !
[21:07:35] *** Joins: ztx (~ztx@user/ztx)
[21:07:38] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[21:08:43] *** Joins: pvalenta (~petr@mail.open-system.cz)
[21:13:25] *** Quits: motheki (~motheki@8.20.123.54) (Quit: motheki)
[21:18:59] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[21:20:16] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 268 seconds)
[21:24:25] *** Joins: shtirlic_ (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[21:24:26] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[21:25:41] <A_Dragon> good luck!
[21:32:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[21:33:48] *** Joins: fikran (~fikran@user/fikran)
[21:37:32] *** Joins: internut (~internut@2601:280:4e00:7b70:9dfa:d458:d9ab:7ddd)
[21:37:50] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[21:49:34] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[21:57:31] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.243)
[22:09:27] *** Joins: keiser0091075852 (~keiser@83.25.215.28.ipv4.supernova.orange.pl)
[22:11:17] *** Quits: arahael (~arahael@203.221.121.242) (Ping timeout: 245 seconds)
[22:18:07] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.243) (Ping timeout: 252 seconds)
[22:20:00] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 265 seconds)
[22:22:20] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 268 seconds)
[22:31:49] *** Joins: motheki (~motheki@8.20.123.54)
[22:39:03] *** Joins: arahael (~arahael@203.221.121.242)
[22:39:17] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[22:48:55] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:50] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[22:53:31] *** Joins: demon__ (~user@45.132.225.71)
[22:57:42] *** Quits: anotheruser (~user@41.43.46.6) (Ping timeout: 268 seconds)
[22:58:45] *** Joins: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de)
[23:00:51] *** Quits: shtirlic_ (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[23:01:30] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[23:02:21] *** Quits: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru) (Remote host closed the connection)
[23:02:23] *** Joins: amk (~amk@109.255.169.126)
[23:03:19] *** Joins: anotheruser (~user@41.43.46.6)
[23:05:04] *** Joins: gl (~x@pwn.lu)
[23:05:23] *** Quits: mollerup (~nmollerup@customer-2a00-7660-1612-0168-011f-9c95-7048-49bd.ip6.gigabit.dk) (Read error: Connection reset by peer)
[23:06:22] *** Joins: someuser (~user@45.133.6.36)
[23:06:25] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:8413:17fe:5b47:e269)
[23:06:31] *** Joins: shtirlic (~shtirlic@c2-178-216-97-103.elastic.cloud.croc.ru)
[23:07:18] *** Quits: demon__ (~user@45.132.225.71) (Ping timeout: 260 seconds)
[23:07:46] *** Quits: anotheruser (~user@41.43.46.6) (Ping timeout: 260 seconds)
[23:07:57] *** Joins: anotheruser (~user@41.43.46.6)
[23:08:50] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[23:09:12] *** Joins: toretto_ (~ryan@bras-vprn-toroon4834w-lp130-08-174-91-44-103.dsl.bell.ca)
[23:09:18] *** Joins: mollerup (~nmollerup@customer-212-237-103-18.ip4.gigabit.dk)
[23:10:31] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:11:04] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[23:11:10] *** Joins: hexfive (~eric@50.35.83.177)
[23:11:14] *** Quits: someuser (~user@45.133.6.36) (Ping timeout: 265 seconds)
[23:11:54] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[23:12:17] *** Quits: toretto (~ryan@45.15.18.2) (Ping timeout: 268 seconds)
[23:16:12] *** Quits: anotheruser (~user@41.43.46.6) (Ping timeout: 268 seconds)
[23:18:00] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 265 seconds)
[23:20:49] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[23:22:59] *** Quits: cespare (sid330206@stonehaven.irccloud.com) ()
[23:23:14] *** Joins: cespare (sid330206@id-330206.hampstead.irccloud.com)
[23:24:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[23:26:06] *** Joins: rvt (~rvt@librecad/rvt)
[23:26:12] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[23:26:30] <rvt> hey all, quick question… is it normal in golang to have all variable names starting uppercase?
[23:26:52] <siXy> rvt: That's how you communicate that this variable is exported.
[23:27:08] <eric_hill> rvt: https://tour.golang.org/basics/3
[23:27:15] <rvt> siXy: gotcha, thanks! /me new to golang… just learning and reading some code..
[23:27:26] <A_Dragon> definitely read though tour.golang.org
[23:27:32] <A_Dragon> it explains the syntax etc
[23:27:35] <siXy> I'd strongly encourage a run through the tour - it's really good and covers a lot of this stuff
[23:30:10] <rvt> Will do, thanks for th links…
[23:32:54] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.243)
[23:35:41] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.243) (Client Quit)
[23:37:57] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[23:39:46] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[23:41:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:43:10] *** Joins: fikran (~fikran@user/fikran)
[23:47:54] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[23:51:37] *** Quits: Manouchehri (sid384576@stonehaven.irccloud.com) ()
[23:51:49] *** Quits: hikhvar796073809 (~thelounge@x4db32c7e.dyn.telefonica.de) (Quit: The Lounge - https://thelounge.chat)
[23:51:53] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
