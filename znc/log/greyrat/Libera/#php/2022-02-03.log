[00:00:34] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[00:05:46] <relipse> ok i figured it out
[00:05:46] <relipse> there was "=="
[00:05:46] <relipse> my copy pasting must have messed it up
[00:05:46] <relipse> now it works
[00:07:45] *** Quits: Albright (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[00:08:55] *** Joins: Albright (~Albright@149.28.13.173)
[00:14:23] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:15:30] *** Quits: ordos (~ordos@user/ordos) (Remote host closed the connection)
[00:26:51] *** Quits: d3sync (~d3sync@62.1.158.240) (Read error: Connection reset by peer)
[00:27:19] *** Joins: d3sync (~d3sync@62.1.158.240)
[00:41:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[00:41:32] *** Quits: px4n (~px4n@user/px4n) (*.net *.split)
[00:41:32] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[00:41:32] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[00:41:33] *** Quits: mooz (~none@173.208.98.70) (*.net *.split)
[00:41:33] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (*.net *.split)
[00:41:33] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[00:41:33] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (*.net *.split)
[00:41:33] *** Quits: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: gonogo (~gonogo@167.88.62.87) (*.net *.split)
[00:41:33] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[00:41:33] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: UnknowingMind (~Unknowing@108.217.80.213) (*.net *.split)
[00:41:33] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (*.net *.split)
[00:41:33] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[00:41:33] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[00:41:33] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[00:41:33] *** Quits: ham5 (~iamfive@user/ham5) (*.net *.split)
[00:41:33] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[00:41:34] *** Quits: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi) (*.net *.split)
[00:41:34] *** Quits: Phil-Work (~phil@62.3.100.20) (*.net *.split)
[00:41:34] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[00:41:34] *** Quits: DoubleJ (~DoubleJ@user/doublej) (*.net *.split)
[00:41:34] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (*.net *.split)
[00:41:34] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (*.net *.split)
[00:41:34] *** Quits: Koopz (~Koopz@koopz.rocks) (*.net *.split)
[00:41:35] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[00:41:35] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[00:41:35] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[00:41:35] *** Quits: aloy (~luna@2001:41f0:3fe:3:30f9:22a5:2b5e:91f1) (*.net *.split)
[00:41:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[00:41:35] *** Quits: tercaL (~tercaL@user/tercal) (*.net *.split)
[00:41:35] *** Quits: miklcct (~quassel@vps.miklcct.com) (*.net *.split)
[00:41:35] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[00:41:35] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[00:41:35] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: Warped (~Warped@user/warped) (*.net *.split)
[00:41:35] *** Quits: Forza (~Forza@user/forza) (*.net *.split)
[00:41:35] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[00:41:35] *** Quits: nate (NBishop@o.apocaleaps.com) (*.net *.split)
[00:41:35] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[00:41:35] *** Quits: Oclair_ (~Oclair@nq3.aventia.pw) (*.net *.split)
[00:41:35] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (*.net *.split)
[00:41:35] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[00:41:36] *** Quits: dimbulb (~sam@indra.vis.nu) (*.net *.split)
[00:41:36] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[00:41:36] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[00:41:36] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[00:41:36] *** Quits: couture (~couture@user/couture) (*.net *.split)
[00:41:36] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297) (*.net *.split)
[00:41:36] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (*.net *.split)
[00:41:36] *** Quits: Kristine (~quassel@user/kristine) (*.net *.split)
[00:41:36] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[00:41:36] *** Quits: Kilroy (~thelounge@user/Kilroy) (*.net *.split)
[00:41:36] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[00:41:36] *** Quits: oztunan (~oztunan@oztunan.org) (*.net *.split)
[00:41:36] *** Quits: melchior (melchior@user/melchior) (*.net *.split)
[00:41:36] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[00:41:36] *** Quits: silly (silly@user/silly) (*.net *.split)
[00:41:36] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[00:41:36] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (*.net *.split)
[00:41:36] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[00:41:36] *** Quits: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle) (*.net *.split)
[00:41:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[00:41:37] *** Quits: nbin_ (~nbin@user/nbin) (*.net *.split)
[00:41:37] *** Quits: robotkittenscat (~robotkitt@user/robotkittenscat) (*.net *.split)
[00:41:37] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:37] *** Quits: novns (~novns@user/novns) (*.net *.split)
[00:41:37] *** Quits: zer0 (~zer0@user/zer0) (*.net *.split)
[00:41:37] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[00:41:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[00:41:37] *** Quits: jhave (~jhave@gw.jdh.dk) (*.net *.split)
[00:41:37] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[00:41:37] *** Quits: arieh (~51062cbb@user/jewllama) (*.net *.split)
[00:41:37] *** Quits: jtreminio (~jtreminio@198.199.111.164) (*.net *.split)
[00:41:37] *** Quits: caffeinatedcode (~caffeine@user/caffeinatedcode) (*.net *.split)
[00:41:37] *** Quits: xSavitar (~xSavitar@user/xsavitar) (*.net *.split)
[00:41:37] *** Quits: php-bot (~php-bot@box.croustillant.ch) (*.net *.split)
[00:41:37] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[00:41:37] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[00:41:37] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[00:41:37] *** Quits: litharge (litharge@libera/bot/litharge) (*.net *.split)
[00:41:37] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (*.net *.split)
[00:41:37] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[00:41:37] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[00:41:37] *** Quits: led_belly (~led_belly@83.97.23.14) (*.net *.split)
[00:41:37] *** Quits: guido (~weechat@host-82-59-230-189.retail.telecomitalia.it) (*.net *.split)
[00:41:38] *** Quits: beob (beob@user/beob) (*.net *.split)
[00:41:38] *** Quits: bodicceaII (~bodiccea@user/bodiccea) (*.net *.split)
[00:41:38] *** Quits: FightingFalcon (~none@user/fightingfalcon) (*.net *.split)
[00:41:38] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: TML (~tml@user/tml) (*.net *.split)
[00:41:38] *** Quits: DerekTheRed (~portra400@peso.subtitled.com) (*.net *.split)
[00:41:38] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[00:41:38] *** Quits: omegatron (~some@p5b056436.dip0.t-ipconnect.de) (*.net *.split)
[00:41:38] *** Quits: adsr (~adsr@45.58.35.250) (*.net *.split)
[00:41:38] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[00:41:38] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[00:41:38] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[00:41:38] *** Quits: thumbs (1000@apache/committer/thumbs) (*.net *.split)
[00:41:38] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[00:41:38] *** Quits: belak (~belak@user/belak) (*.net *.split)
[00:41:38] *** Quits: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4) (*.net *.split)
[00:41:39] *** Quits: Mr-Snick_ (mr-snick@gateway/vpn/protonvpn/mr-snick) (*.net *.split)
[00:41:39] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (*.net *.split)
[00:41:39] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (*.net *.split)
[00:41:39] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[00:41:39] *** Quits: arash- (arash@thinks.life.is-a.beauty) (*.net *.split)
[00:41:39] *** Quits: Teraii (~teraii@juraii-s1-1.teraii.net) (*.net *.split)
[00:41:39] *** Quits: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au) (*.net *.split)
[00:41:39] *** Quits: AsenMx (~asen@user/asenmx) (*.net *.split)
[00:41:39] *** Quits: dmk (~dmk@dmk.sh) (*.net *.split)
[00:41:39] *** Quits: c17r (~c17r@c17r.com) (*.net *.split)
[00:41:39] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[00:41:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[00:41:39] *** Quits: Janusz (~Janusz@user/janusz) (*.net *.split)
[00:41:40] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[00:41:40] *** Quits: sharpertool (sid80151@id-80151.hampstead.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[00:41:40] *** Quits: nekaii (nekaii@er.alltaf.online) (*.net *.split)
[00:41:40] *** Quits: steve (~steven@li677-71.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: d3sync (~d3sync@62.1.158.240) (*.net *.split)
[00:41:40] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (*.net *.split)
[00:41:40] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (*.net *.split)
[00:41:40] *** Quits: glider (~glider@user/glider) (*.net *.split)
[00:41:40] *** Quits: wovixo (~wovixo@128.104.205.49) (*.net *.split)
[00:41:40] *** Quits: pmercado_ (~pmercado@190.22.160.49) (*.net *.split)
[00:41:40] *** Quits: luva (~luva@37.120.197.52) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:40] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (*.net *.split)
[00:41:40] *** Quits: Bencraft (~Bencraft@user/Bencraft) (*.net *.split)
[00:41:40] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[00:41:40] *** Quits: bytestream2 (~bytestrea@user/bytestream) (*.net *.split)
[00:41:40] *** Quits: jgrim (~jgrim@d199-74-109-78.col.wideopenwest.com) (*.net *.split)
[00:41:40] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (*.net *.split)
[00:41:40] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[00:41:40] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[00:41:40] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (*.net *.split)
[00:41:40] *** Quits: znf (ibm86@blender.linge-ma.ro) (*.net *.split)
[00:41:40] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (*.net *.split)
[00:41:40] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (*.net *.split)
[00:41:40] *** Quits: ss23 (~ss23@irc.ss23.geek.nz) (*.net *.split)
[00:41:40] *** Quits: ReimuHakurei_ (~Reimu@raphi.vserver.alexingram.net) (*.net *.split)
[00:41:40] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[00:41:40] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[00:41:40] *** Quits: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com) (*.net *.split)
[00:41:40] *** Quits: salathe_ (~peter@idle.php.net) (*.net *.split)
[00:41:41] *** Quits: tirnanog (~tirnanog@user/tirnanog) (*.net *.split)
[00:41:41] *** Quits: ms49434 (~ms49434@user/ms49434) (*.net *.split)
[00:41:41] *** Quits: davetoo_ (~davetoo@2600:8802:5704:c900:7145:6a77:28c3:6cbd) (*.net *.split)
[00:41:41] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (*.net *.split)
[00:41:41] *** Quits: sm (~sm@plaintextaccounting/sm) (*.net *.split)
[00:41:41] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[00:41:41] *** Quits: Kartagis (~iegg@user/kartagis) (*.net *.split)
[00:41:41] *** Quits: joachimo (~joachimo@cloud02.joachimopdenakker.be) (*.net *.split)
[00:41:41] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[00:41:41] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (*.net *.split)
[00:41:41] *** Quits: noord (noord@user/noord) (*.net *.split)
[00:41:42] *** Quits: cosine (~cosine@vpn.mashio.net) (*.net *.split)
[00:41:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[00:41:42] *** Quits: refactor_ring (~refactor_@142.93.146.100) (*.net *.split)
[00:41:42] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[00:41:42] *** Quits: remolej (~kenoba@user/kenoba) (*.net *.split)
[00:41:42] *** Quits: Robdgreat (~rob@user/robdgreat) (*.net *.split)
[00:41:42] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[00:41:42] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[00:41:42] *** Quits: len (~len@v2202104141858149543.nicesrv.de) (*.net *.split)
[00:41:42] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[00:41:42] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: FatBoyXPC (~FatBoyXPC@user/fatboyxpc) (*.net *.split)
[00:41:42] *** Quits: dag (~d@user/dag) (*.net *.split)
[00:41:42] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (*.net *.split)
[00:41:42] *** Quits: Deltik (~deltik@2001:470:69fc:105::1:5ba3) (*.net *.split)
[00:41:43] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: wolfgangspace (~wolfgangs@159.203.73.30) (*.net *.split)
[00:41:43] *** Quits: judah (~judah@50.46.45.66) (*.net *.split)
[00:41:43] *** Quits: AciD (~fu@user/acid/x-5205451) (*.net *.split)
[00:41:43] *** Quits: ePirat (~ePirat@user/epirat) (*.net *.split)
[00:41:43] *** Quits: paladox (sid373195@wikimedia/paladox) (*.net *.split)
[00:41:43] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[00:41:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[00:41:43] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[00:41:43] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[00:41:43] *** Quits: __adrian (~adrian@user/adrian/x-7832151) (*.net *.split)
[00:41:43] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[00:41:43] *** Quits: noahmg123 (sid89117@ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[00:41:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[00:41:43] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (*.net *.split)
[00:41:44] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (*.net *.split)
[00:41:44] *** Quits: chiptuner (~bobby@user/chiptuner) (*.net *.split)
[00:41:44] *** Quits: yaraju (~yaraju@user/yaraju) (*.net *.split)
[00:41:44] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[00:41:44] *** Quits: BlackBishop (dexter@user/blackbishop) (*.net *.split)
[00:41:44] *** Quits: Zombie_Ryushu (~masterz@h181.58.40.69.dynamic.ip.windstream.net) (*.net *.split)
[00:41:44] *** Quits: poseidon_ (~broseidon@users.757.org) (*.net *.split)
[00:41:44] *** Quits: biggie (~biggie@user/bige) (*.net *.split)
[00:41:44] *** Quits: ekl (~ekl@user/ekl) (*.net *.split)
[00:41:44] *** Quits: ramsey (sid508214@phpc/ramsey) (*.net *.split)
[00:41:44] *** Quits: Yorick- (znc@vps.freegamehosting.eu) (*.net *.split)
[00:41:44] *** Quits: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001) (*.net *.split)
[00:41:44] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (*.net *.split)
[00:41:44] *** Quits: stenno (~stenno@user/stenno) (*.net *.split)
[00:41:45] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (*.net *.split)
[00:41:45] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (*.net *.split)
[00:41:45] *** Quits: Reinhilde (ellenor@vice-chairwoman.of.freenode.management) (*.net *.split)
[00:41:45] *** Quits: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (*.net *.split)
[00:41:45] *** Quits: Togra (~Togra@user/togra) (*.net *.split)
[00:41:45] *** Quits: prime (~prime@user/prime) (*.net *.split)
[00:41:45] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[00:41:45] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Kadigan_ (~Kadigan@user/kadigan) (*.net *.split)
[00:41:45] *** Quits: VectorX (~sunilaiya@user/vectorx) (*.net *.split)
[00:41:45] *** Quits: petris (sid19918@user/petris) (*.net *.split)
[00:41:45] *** Quits: sunarch (uid526836@user/sunarch) (*.net *.split)
[00:41:45] *** Quits: Beryllium (sid186414@id-186414.lymington.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: ghoti (~paul@198.23.196.224) (*.net *.split)
[00:41:45] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (*.net *.split)
[00:41:45] *** Quits: AllenJB (~AllenJB@user/allenjb) (*.net *.split)
[00:41:45] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (*.net *.split)
[00:41:45] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (*.net *.split)
[00:41:45] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[00:41:45] *** Quits: siinus (sns@saabas.kahtlane.info) (*.net *.split)
[00:41:45] *** Quits: ikonia (~irc@user/ikonia) (*.net *.split)
[00:41:45] *** Quits: ialokin (znc@user/ialokin) (*.net *.split)
[00:41:45] *** Quits: void09 (~void@150.230.21.57) (*.net *.split)
[00:41:46] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[00:41:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[00:44:09] *** Joins: DoubleJ (~DoubleJ@user/doublej)
[00:44:09] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[00:44:09] *** Joins: Phil-Work (~phil@62.3.100.20)
[00:44:09] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[00:44:09] *** Joins: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi)
[00:44:09] *** Joins: ham5 (~iamfive@user/ham5)
[00:44:09] *** Joins: justGhost (~justache@user/justache)
[00:44:09] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[00:44:09] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[00:44:09] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[00:44:09] *** Joins: UnknowingMind (~Unknowing@108.217.80.213)
[00:44:09] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[00:44:09] *** Joins: infernix (~nix@spirit.infernix.net)
[00:44:09] *** Joins: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[00:44:09] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[00:44:09] *** Joins: \mSg (mSg@user/msg/x-0285936)
[00:44:09] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[00:44:09] *** Joins: mooz (~none@173.208.98.70)
[00:44:09] *** Joins: gonogo (~gonogo@167.88.62.87)
[00:44:09] *** Joins: keypusher (keypusher@user/keypusher)
[00:44:09] *** Joins: michele (~eraser@user/michele)
[00:44:09] *** Joins: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4)
[00:44:09] *** Joins: belak (~belak@user/belak)
[00:44:09] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[00:44:09] *** Joins: barlas (~aqeel@user/barlas)
[00:44:09] *** Joins: tabakhase (tabakhase@user/tabakhase)
[00:44:09] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[00:44:09] *** Joins: thumbs (1000@apache/committer/thumbs)
[00:44:09] *** Joins: adsr (~adsr@45.58.35.250)
[00:44:09] *** Joins: omegatron (~some@p5b056436.dip0.t-ipconnect.de)
[00:44:09] *** Joins: Fleck (~fleck@user/fleck)
[00:44:09] *** Joins: DerekTheRed (~portra400@peso.subtitled.com)
[00:44:09] *** Joins: TML (~tml@user/tml)
[00:44:09] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[00:44:09] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[00:44:09] *** Joins: beob (beob@user/beob)
[00:44:09] *** Joins: FightingFalcon (~none@user/fightingfalcon)
[00:44:09] *** Joins: guido (~weechat@host-82-59-230-189.retail.telecomitalia.it)
[00:44:09] *** Joins: led_belly (~led_belly@83.97.23.14)
[00:44:09] *** Joins: enyc (~enyc@user/enyc)
[00:44:09] *** Joins: void09 (~void@150.230.21.57)
[00:44:09] *** Joins: ialokin (znc@user/ialokin)
[00:44:09] *** Joins: ikonia (~irc@user/ikonia)
[00:44:09] *** Joins: siinus (sns@saabas.kahtlane.info)
[00:44:09] *** Joins: Cork (~Cork@user/cork)
[00:44:09] *** erbium.libera.chat sets mode: +v TML
[00:44:09] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[00:44:09] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[00:44:09] *** Joins: AllenJB (~AllenJB@user/allenjb)
[00:44:09] *** Joins: ghoti (~paul@198.23.196.224)
[00:44:09] *** Joins: Beryllium (sid186414@id-186414.lymington.irccloud.com)
[00:44:09] *** Joins: sunarch (uid526836@user/sunarch)
[00:44:09] *** Joins: petris (sid19918@user/petris)
[00:44:09] *** Joins: VectorX (~sunilaiya@user/vectorx)
[00:44:09] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[00:44:09] *** Joins: prime (~prime@user/prime)
[00:44:09] *** Joins: Togra (~Togra@user/togra)
[00:44:09] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[00:44:09] *** Joins: phlixi_ (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de)
[00:44:09] *** Joins: Reinhilde (ellenor@vice-chairwoman.of.freenode.management)
[00:44:09] *** Joins: Kadigan_ (~Kadigan@user/kadigan)
[00:44:09] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[00:44:09] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[00:44:09] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[00:44:09] *** Joins: stenno (~stenno@user/stenno)
[00:44:09] *** Joins: px4n (~px4n@user/px4n)
[00:44:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[00:44:09] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[00:44:09] *** Joins: refactor_ring (~refactor_@142.93.146.100)
[00:44:09] *** Joins: Exa (exa@irc.moe)
[00:44:09] *** Joins: cosine (~cosine@vpn.mashio.net)
[00:44:09] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[00:44:09] *** Joins: s1b1 (~s1b1@user/s1b1)
[00:44:09] *** Joins: joachimo (~joachimo@cloud02.joachimopdenakker.be)
[00:44:09] *** Joins: Kartagis (~iegg@user/kartagis)
[00:44:09] *** Joins: mjsir911 (~bnc@user/mjsir911)
[00:44:09] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[00:44:09] *** Joins: sm (~sm@plaintextaccounting/sm)
[00:44:09] *** Joins: davetoo_ (~davetoo@2600:8802:5704:c900:7145:6a77:28c3:6cbd)
[00:44:09] *** Joins: ms49434 (~ms49434@user/ms49434)
[00:44:09] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[00:44:09] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[00:44:09] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[00:44:09] *** Joins: php-bot (~php-bot@box.croustillant.ch)
[00:44:09] *** Joins: caffeinatedcode (~caffeine@user/caffeinatedcode)
[00:44:09] *** Joins: jtreminio (~jtreminio@198.199.111.164)
[00:44:09] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[00:44:09] *** Joins: arieh (~51062cbb@user/jewllama)
[00:44:09] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[00:44:09] *** Joins: jhave (~jhave@gw.jdh.dk)
[00:44:09] *** Joins: tccki (~tccki@box.webslate.co.nz)
[00:44:09] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[00:44:09] *** Joins: zer0 (~zer0@user/zer0)
[00:44:09] *** Joins: novns (~novns@user/novns)
[00:44:09] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[00:44:09] *** Joins: robotkittenscat (~robotkitt@user/robotkittenscat)
[00:44:09] *** Joins: nbin_ (~nbin@user/nbin)
[00:44:09] *** Joins: deltab (~deltab@user/deltab)
[00:44:09] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:44:09] *** Joins: Albright (~Albright@149.28.13.173)
[00:44:09] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:44:09] *** Joins: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001)
[00:44:09] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[00:44:09] *** Joins: ramsey (sid508214@phpc/ramsey)
[00:44:09] *** Joins: ekl (~ekl@user/ekl)
[00:44:09] *** Joins: biggie (~biggie@user/bige)
[00:44:09] *** Joins: poseidon_ (~broseidon@users.757.org)
[00:44:09] *** Joins: BlackBishop (dexter@user/blackbishop)
[00:44:09] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[00:44:09] *** Joins: yaraju (~yaraju@user/yaraju)
[00:44:09] *** Joins: Zombie_Ryushu (~masterz@h181.58.40.69.dynamic.ip.windstream.net)
[00:44:09] *** Joins: chiptuner (~bobby@user/chiptuner)
[00:44:09] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[00:44:09] *** Joins: entropy_ (~ent@user/entropy/x-9891564)
[00:44:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[00:44:09] *** Joins: sagax (~sagax_nb@user/sagax)
[00:44:09] *** Joins: noahmg123 (sid89117@ilkley.irccloud.com)
[00:44:09] *** Joins: mgocobachi (~m@ancrae.com)
[00:44:09] *** Joins: len (~len@v2202104141858149543.nicesrv.de)
[00:44:09] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[00:44:09] *** Joins: Robdgreat (~rob@user/robdgreat)
[00:44:09] *** Joins: nortoh (~nortoh@user/nortoh)
[00:44:09] *** Joins: remolej (~kenoba@user/kenoba)
[00:44:09] *** Joins: salathe_ (~peter@idle.php.net)
[00:44:09] *** Joins: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com)
[00:44:09] *** Joins: Woet (~me@irc.woet.me)
[00:44:09] *** Joins: percY- (~percY@138.68.239.19)
[00:44:09] *** Joins: ReimuHakurei_ (~Reimu@raphi.vserver.alexingram.net)
[00:44:09] *** Joins: ss23 (~ss23@irc.ss23.geek.nz)
[00:44:09] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[00:44:09] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[00:44:09] *** Joins: znf (ibm86@blender.linge-ma.ro)
[00:44:09] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:44:09] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[00:44:09] *** Joins: Byteflux (~byte@byteflux.net)
[00:44:09] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:44:09] *** Joins: jgrim (~jgrim@d199-74-109-78.col.wideopenwest.com)
[00:44:09] *** Joins: bytestream2 (~bytestrea@user/bytestream)
[00:44:09] *** Joins: travisghansen (~travisgha@192.74.130.86)
[00:44:09] *** Joins: Bencraft (~Bencraft@user/Bencraft)
[00:44:09] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:44:09] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:09] *** Joins: luva (~luva@37.120.197.52)
[00:44:09] *** Joins: pmercado_ (~pmercado@190.22.160.49)
[00:44:09] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:44:09] *** Joins: glider (~glider@user/glider)
[00:44:09] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[00:44:09] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[00:44:09] *** Joins: d3sync (~d3sync@62.1.158.240)
[00:44:09] *** Joins: litharge (litharge@libera/bot/litharge)
[00:44:14] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[00:44:28] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:44:28] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[00:44:28] *** Joins: Koopz (~Koopz@koopz.rocks)
[00:44:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:44:28] *** Joins: vlm (~vlm@user/vlm)
[00:44:28] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[00:44:28] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:44:28] *** Joins: aloy (~luna@2001:41f0:3fe:3:30f9:22a5:2b5e:91f1)
[00:44:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:44:28] *** Joins: tercaL (~tercaL@user/tercal)
[00:44:28] *** Joins: miklcct (~quassel@vps.miklcct.com)
[00:44:28] *** Joins: hays (rootvegeta@fsf/member/hays)
[00:44:28] *** Joins: Furai (~Furai@furai.pl)
[00:44:28] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[00:44:28] *** Joins: Warped (~Warped@user/warped)
[00:44:28] *** Joins: Forza (~Forza@user/forza)
[00:44:28] *** Joins: sabet (~sabet@user/sabet)
[00:44:28] *** Joins: nate (NBishop@o.apocaleaps.com)
[00:44:28] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[00:44:28] *** Joins: Oclair_ (~Oclair@nq3.aventia.pw)
[00:44:28] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[00:44:28] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[00:44:28] *** Joins: mixfix41 (~homefame@user/mixfix41)
[00:44:28] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[00:44:28] *** Joins: AMG (ghebo@user/amg)
[00:44:28] *** Joins: dimbulb (~sam@indra.vis.nu)
[00:44:28] *** Joins: judabuda (kowbunga@user/judabuda)
[00:44:28] *** Joins: silly (silly@user/silly)
[00:44:28] *** Joins: couture (~couture@user/couture)
[00:44:28] *** Joins: catbeard (~noise@user/catbeard)
[00:44:28] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[00:44:28] *** Joins: Kristine (~quassel@user/kristine)
[00:44:28] *** Joins: Kilroy (~thelounge@user/Kilroy)
[00:44:28] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[00:44:28] *** Joins: oztunan (~oztunan@oztunan.org)
[00:44:28] *** Joins: melchior (melchior@user/melchior)
[00:44:28] *** Joins: rb (~augh@theguntretort.com)
[00:44:28] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[00:44:30] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Max SendQ exceeded)
[00:44:40] *** Quits: mixfix41 (~homefame@user/mixfix41) (Max SendQ exceeded)
[00:44:50] *** Joins: Mr-Snick_ (mr-snick@gateway/vpn/protonvpn/mr-snick)
[00:44:50] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[00:44:50] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[00:44:50] *** Joins: jdrab (~jdrab@user/jdrab)
[00:44:50] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[00:44:50] *** Joins: Teraii (~teraii@juraii-s1-1.teraii.net)
[00:44:50] *** Joins: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au)
[00:44:50] *** Joins: AsenMx (~asen@user/asenmx)
[00:44:50] *** Joins: dmk (~dmk@dmk.sh)
[00:44:50] *** Joins: c17r (~c17r@c17r.com)
[00:44:50] *** Joins: wyre (~wyre@user/wyre)
[00:44:50] *** Joins: Artea (~Lufia@artea.com.pt)
[00:44:50] *** Joins: Janusz (~Janusz@user/janusz)
[00:44:50] *** Joins: Learath2 (~learath2@user/learath2)
[00:44:50] *** Joins: steve (~steven@li677-71.members.linode.com)
[00:44:50] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[00:44:50] *** Joins: DCTWD (~dc@uz.utmappro.com)
[00:44:50] *** Joins: nekaii (nekaii@er.alltaf.online)
[00:44:56] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (Ping timeout: 245 seconds)
[00:45:01] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[00:45:01] *** Joins: de-facto (~de-facto@user/de-facto)
[00:45:01] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:45:01] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[00:45:01] *** Joins: FatBoyXPC (~FatBoyXPC@user/fatboyxpc)
[00:45:01] *** Joins: dag (~d@user/dag)
[00:45:08] *** Quits: sm (~sm@plaintextaccounting/sm) (Ping timeout: 252 seconds)
[00:45:11] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[00:45:18] *** Joins: judah (~judah@50.46.45.66)
[00:45:18] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[00:45:18] *** Joins: Deltik (~deltik@2001:470:69fc:105::1:5ba3)
[00:45:18] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[00:45:18] *** Joins: wolfgangspace (~wolfgangs@159.203.73.30)
[00:45:18] *** Joins: AciD (~fu@user/acid/x-5205451)
[00:45:18] *** Joins: ePirat (~ePirat@user/epirat)
[00:45:18] *** Joins: paladox (sid373195@wikimedia/paladox)
[00:45:18] *** Joins: celphi (sid97751@user/celphi)
[00:45:18] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[00:45:18] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[00:45:18] *** Joins: biberu (~biberu@user/biberu)
[00:45:18] *** Joins: __adrian (~adrian@user/adrian/x-7832151)
[00:45:18] *** Joins: ringo__ (~ringo@157.230.117.128)
[00:45:18] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Ping timeout: 245 seconds)
[00:45:18] *** Quits: Deltik (~deltik@2001:470:69fc:105::1:5ba3) (Ping timeout: 245 seconds)
[00:46:14] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 252 seconds)
[00:46:15] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Remote host closed the connection)
[00:47:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[00:47:49] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:52:11] *** Quits: magla (~gelignite@55d436fa.access.ecotel.net) (Quit: Stay safe!)
[01:01:31] *** Joins: ChanServ (ChanServ@services.libera.chat)
[01:01:31] *** erbium.libera.chat sets mode: +o ChanServ
[01:02:14] *** Joins: noord (~noord@user/noord)
[01:02:21] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:05:33] *** Quits: pmercado_ (~pmercado@190.22.160.49) (Ping timeout: 256 seconds)
[01:09:24] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[01:13:48] *** Quits: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle) (Client Quit)
[01:17:01] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[01:17:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:18:10] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[01:21:32] <relipse> hello?
[01:21:37] <relipse> echo...echo..
[01:22:08] <stenno> it was just a netsplit
[01:23:13] <relipse> hi stenno
[01:23:18] <relipse> you are on a lot of the same channels as me
[01:23:25] <relipse> common interest?
[01:23:27] <stenno> webdev
[01:23:33] <relipse> right
[01:24:03] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[01:24:29] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[01:24:38] <fsoc> In MySQL on GRANT's command, how is `GRANT SELECT ON some_database.* TO foo@bar.com` different from `GRANT SELECT ON some_database TO foo@bar.com`? Are these things just same?
[01:24:59] <Robdgreat> that's mysql. this is #php
[01:25:00] <stenno> fsoc: did you want #mysql ?
[01:26:10] <fsoc> #mysql wasn't having much activity, so I thought of asking it here (as most PHP devs knowledgeable on mysql0
[01:26:35] <stenno> this is not how topical channels work
[01:33:00] <relipse> i'm totally guilty of what fsoc did
[01:33:09] <relipse> i'm the most off topic person in this channel probably
[01:37:47] *** Joins: sm (~sm@plaintextaccounting/sm)
[01:40:06] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[01:40:21] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:45:07] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[01:50:49] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[01:53:37] *** Joins: echo (uid504326@user/echosmile)
[01:57:57] *** Joins: Tunefix (~Tunefix@247.92-221-139.customer.lyse.net)
[01:59:10] *** Quits: guido (~weechat@host-82-59-230-189.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[01:59:59] *** Joins: Deltik (~deltik@2001:470:69fc:105::1:5ba3)
[02:04:36] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:05:02] <ash_worksi> so I had this working at one point and I'm not sure what changed
[02:05:15] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Remote host closed the connection)
[02:05:36] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[02:05:47] <ash_worksi> I am trying to get nginx to redirect to an external site when the upstream proxy fails
[02:06:02] <Blondie101010> then you're on the wrong channel
[02:06:06] <Blondie101010> #nginx
[02:08:59] *** Quits: UnknowingMind (~Unknowing@108.217.80.213) (Remote host closed the connection)
[02:10:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[02:10:39] <ash_worksi> supposedly, I should be able to do this with `proxy_intercept_errors on;`... when I look at the debug log I see `header: "Status: 404 Not Found"` ... but of course the normal error is "primary script not found" ... the point is, is there some FPM setting I need to change to get FPM to send back a 404 for a missing script or no?
[02:15:23] <ash_worksi> note that everything works as expected if I test a location that exists but just responds with a 404
[02:15:45] <ash_worksi> which of course is not useful
[02:19:59] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:20:21] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[02:23:23] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[02:24:04] *** Joins: nitrospectide (~Adium@38.65.76.76)
[02:24:44] <nitrospectide> If I did a print_r on an array, and got the following, what would be the syntax to grab that 22578 value? https://www.toptal.com/developers/hastebin/ruzolozoma.php
[02:30:03] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[02:31:32] <Albright> nitrospectide: $array[0]->ID
[02:33:16] *** Quits: Mr-Snick_ (mr-snick@gateway/vpn/protonvpn/mr-snick) (Ping timeout: 245 seconds)
[02:35:53] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[02:38:59] *** Joins: mikey_p (uid129477@uxbridge.irccloud.com)
[02:40:19] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Client Quit)
[02:42:18] <nitrospectide> Albright: Thank you
[02:46:02] *** Joins: rgucluer (~rgucluer@176.41.26.26)
[02:48:20] *** Quits: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi) (Ping timeout: 256 seconds)
[02:52:53] *** Joins: luva8 (~luva@37.120.197.44)
[02:56:03] *** Quits: luva (~luva@37.120.197.52) (Ping timeout: 256 seconds)
[03:04:26] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:05:23] <puff> Evening.
[03:05:48] <puff> Anyone want to talk design?  I have this library I want to code, and I know how I'd design it, but it's very influenced by my java background.  I'm wondering if it makes sense in a php context.
[03:07:34] <Albright> Modern PHP is increasingly Java-ish particularly to using namespaces and such
[03:07:44] <puff> Ah.
[03:07:59] <Albright> Did you have any specific questions?
[03:14:35] <puff> Well the basic idea is to generate a row object for each table.  The row object is pretty much a javabean, if you're familiar with that.
[03:15:24] <puff> The obvious use for the row class is to map query results to a list of row objects. The row classes themselves don't deliver much value, but they support the other parts.
[03:17:07] <puff> Each column represented in a row class has a set/unset flag, a render-to-HTML class, a render-to-input-element class, a parse-from-GET/POST-variable class, and a list of test classes. (Class instances, actually).
[03:17:39] <Albright> To slow you down a bit
[03:17:42] <puff> The library generates row, query, and mapper classes for each table.
[03:17:57] <Albright> …Oh. okay, go on
[03:18:43] <Blondie101010> a library doesn't typically generate classes..  that sounds more like a utility
[03:18:44] <puff> The query class is for simple queries; for anything complex, you write it yourself.  But for simple stuff, you instantiate a row, set the instance values you want to use in the LIKE clause, hand it to a query class method.
[03:19:08] <puff> The query class method looks at the set/unset flags in the row object, constructs a query, returns the resultset.
[03:19:33] <puff> The calling code then passes the resultset to the mapper class, and gets back a row object or a list of row objects.
[03:19:34] <Blondie101010> does that handle joins?
[03:19:52] <puff> Nope, like I said, for complex stuff you write your own SQL.  This is just to handle the obvious stuff.
[03:20:00] <Blondie101010> then it's useless
[03:20:09] <Blondie101010> don't waste time on it
[03:20:13] <puff> Though I do have some thoughts on having the mapper support mapping joined resultsets.
[03:20:38] <Blondie101010> there are common renown solutions
[03:20:40] <Albright> That's a bit harsh, but yes, I prefer not to use heavy libraries for this sort of thing and just write my own queries most of the time nowadays
[03:20:45] <puff> Well, like I said, what I'm mainly asking about is where it doesn't match PHP idioms.
[03:20:59] <Blondie101010> not relevan t
[03:21:13] <Blondie101010> you make a complex design which only limits you
[03:21:15] <puff> I've looked at several different libraries and they all seem to require far too much work for far too little value.
[03:21:40] <Blondie101010> don't really like ORMs but you should look at what exists
[03:21:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:47] <puff> Actually it's a pretty simple design, that's the point.  The only tricky part about it is designing it so it gets out of your way when you're not doing simple stuff.
[03:22:00] <Albright> Judging if it matches PHP idioms would require looking at the code. But nothing of what you said so far sounds like it'd be unusual to do in PHP.
[03:22:08] <puff> Albright: Thanks.
[03:23:05] <Blondie101010> not sure how that could have been inspired by Java since Java classes are not generated
[03:23:22] <puff> Most ORMs work great, as long as you color inside the lines.  When you don't, then you're kinda screwed.
[03:23:38] <Albright> Isn't it the meme of Java to have FactoryFactories?
[03:23:47] <puff> Blondie101010: It's not "inspired by java", and I never claimed it was.  Just that it makes sense to me, but my background is much more java than PHP.
[03:23:58] <Blondie101010> ok
[03:24:06] <puff> Beans, beans, everywhere.
[03:24:14] <puff> Etc.
[03:24:20] <Blondie101010> there are bean libs in PHP
[03:24:49] <Blondie101010> https://packagist.org/?query=bean
[03:25:27] <puff> Ah, I'd had the impression that people didn't use rowbeans in php much.
[03:26:52] <Blondie101010> that will always be sub-optimal because it prevents DB optimization
[03:27:50] <Albright> Yeah, with some of those heavy DB libraries, I gotta wonder if more time is spent building a complex query than it takes the RDBMS to execute it sometimes.
[03:27:53] *** Quits: luva8 (~luva@37.120.197.44) (Quit: Byebye)
[03:28:15] <Blondie101010> in the context of a single user app, it may not be even noticeable, but things may be very different on a web service
[03:28:24] <Albright> I know SQL itself is really complex but I don't think these libraries typically make the complex things simpler, but often make the simple things more complex
[03:28:25] *** Joins: luva (~luva@37.120.197.44)
[03:28:40] <Blondie101010> indeed
[03:28:46] <puff> Albright: That's pretty much how I feel.
[03:28:48] <__adrian> haven't fully read through everything, but joins are not "complex"
[03:29:14] <Albright> Tell that to a newbie.
[03:29:19] <__adrian> also not sure if you're planning on using these Row classes in your domain logic, but don't  :)
[03:29:48] <puff> Albright: I remember when ORMs finally started getting big in java, probably around the early 2000s, and my immediate response was "gee, I wonder how they handle complex queries?" and the answer, of course, was "not very well."
[03:30:32] <Blondie101010> but common ORMs do now
[03:31:00] <Blondie101010> my main point is not to make your own crap...  use what exists or nothing
[03:31:04] <puff> Blondie101010: I remember debugging some hairy hibernate issues. Hibernate isn't my strong suite, but then it appears it's hardly anyone's.
[03:31:28] <puff> Blondie101010: I'd be happy to use an existing solution, if I found one that met my needs.
[03:31:49] <puff> Also, come to think of it, that wasn't *just* hibernate, it was something like three layers of pluggable APIs.
[03:32:02] <puff> Felt like wading through hip deep mud.
[03:34:00] *** Parts: nitrospectide (~Adium@38.65.76.76) ()
[03:34:36] <puff> So what's your recommended tool/framework/library/roncovegematic for basic CRUD apps in Php?
[03:36:54] *** Quits: rgucluer (~rgucluer@176.41.26.26) (Quit: Leaving)
[03:37:35] <Albright> Are you still talking just in terms of database?
[03:38:02] <puff> No, the whole thing.
[03:38:27] <puff> I google on php frameworks and all I find are content farm sites, endless vaguely and poorly written "top five PHP framework" reviews, etc.
[03:39:11] <Blondie101010> look at a few and pick the most common ones
[03:39:22] <Blondie101010> the lists will probably be very similar
[03:39:28] <Albright> CodeIgniter is not terrible, though it feels a bit old.
[03:40:13] <Albright> Slim is very basic and you'll need to find other libraries or write your own if you need some common stuff like user authentication but it might be a good foundation to build off of.
[03:42:40] <puff> Laravel, Symfony and CodeIgniter seem to come up often.
[03:43:10] <Albright> Laravel is the library of choice for developers who like to sniff their own farts
[03:43:16] <Albright> *framework of choice
[03:43:45] <Albright> Symfony is quite large and complex and I find the documentation to not be very friendly, but YMMV
[03:44:16] <Blondie101010> indeed
[03:44:35] <Blondie101010> Symfony is modular...  you choose what you want
[03:45:08] <Albright> Laravel is also the framework of choice for people who see no problem with installation instructions that involve running `curl somerandom.url | sh`
[03:46:58] <puff> Okay, so not laravel, not symfony, not codeigniter, so...
[03:47:21] <stenno> symfony with api-platform is just fine imo
[03:47:43] <Albright> Yeah, I'm being critical, but you should make your own evaluations.
[03:47:51] <stenno> true
[03:49:03] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[03:49:13] <stenno> symfony can be very lean and sinatra-like with their microkernel(?) stuff
[03:50:42] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:56:48] *** Quits: echo (uid504326@user/echosmile) ()
[04:02:04] <__adrian> "Laravel is the library of choice for developers who like to sniff their own farts"  i'm SO GLAD to see how objective and professional everyone's being today
[04:02:24] <__adrian> also, i chuckled.
[04:03:49] <__adrian> symfony's docs problem: mostly a result of being so large a project, i think. unfortunate. but it's usually not hard to figure out.
[04:14:43] *** Joins: WishBoy (~WishBoy@user/wishboy)
[04:18:28] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[04:21:37] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[04:25:42] <Albright> It calls its CLI tool "artisan," come on
[04:27:17] *** Joins: Viper-7 (~viper7@irc.viper-7.com)
[04:33:40] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[04:40:00] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[05:20:09] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 250 seconds)
[05:20:26] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:52] *** Joins: vlm (~vlm@user/vlm)
[05:33:55] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 256 seconds)
[05:34:06] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[05:47:46] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[05:52:34] *** Parts: davetoo_ (~davetoo@2600:8802:5704:c900:7145:6a77:28c3:6cbd) (Leaving...)
[05:54:16] *** Joins: Hiccup (cHoy@user/hiccup)
[06:04:24] *** Joins: epony (epony@user/epony)
[06:19:42] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[06:51:23] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 250 seconds)
[06:57:26] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[07:07:00] *** Joins: Rockwood (~Rocky@user/rocky)
[07:12:27] *** Joins: DrAny7H1n5 (~bruno@177.205.235.55.dynamic.adsl.gvt.net.br)
[07:12:44] *** Joins: ferdna (~ferdna@user/ferdna)
[07:29:16] *** Joins: genomc (uid245282@hampstead.irccloud.com)
[07:51:35] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[07:58:20] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:02:03] *** Quits: DrAny7H1n5 (~bruno@177.205.235.55.dynamic.adsl.gvt.net.br) (Ping timeout: 256 seconds)
[08:06:13] *** Quits: mikey_p (uid129477@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:15:48] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:17:40] *** Quits: Hiccup (cHoy@user/hiccup) (Ping timeout: 250 seconds)
[08:19:43] *** Joins: Rockwood (~Rocky@user/rocky)
[08:27:09] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:28:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:29:00] *** Joins: Hiccup (~cHoy@user/hiccup)
[08:42:27] *** Quits: php-bot (~php-bot@box.croustillant.ch) (Read error: Connection reset by peer)
[08:42:54] *** Joins: php-bot (~php-bot@box.croustillant.ch)
[08:43:05] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[08:49:02] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net)
[09:31:06] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[09:31:27] *** Joins: \mSg (mSg@user/msg/x-0285936)
[09:31:45] *** Joins: PovilasCNC (~PovilasCN@user/PovilasCNC)
[09:38:40] *** Quits: tercaL (~tercaL@user/tercal) (Ping timeout: 250 seconds)
[09:43:49] *** Quits: Tunefix (~Tunefix@247.92-221-139.customer.lyse.net) (Quit: leaving)
[09:49:53] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:51:39] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Quit: Leaving)
[10:30:53] *** Joins: guido (~weechat@host-95-235-251-51.retail.telecomitalia.it)
[10:31:08] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[10:31:22] *** Joins: de-facto (~de-facto@user/de-facto)
[10:32:17] *** Quits: guido (~weechat@host-95-235-251-51.retail.telecomitalia.it) (Client Quit)
[10:32:27] *** Joins: guido (~weechat@host-95-235-251-51.retail.telecomitalia.it)
[10:45:02] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[10:47:32] *** Quits: guido (~weechat@host-95-235-251-51.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[10:50:42] *** Joins: jnugle (~jnugle@2406:7400:73:94e:ec23:eb97:665b:4d3e)
[10:50:48] *** Parts: jnugle (~jnugle@2406:7400:73:94e:ec23:eb97:665b:4d3e) (WeeChat 3.4)
[10:51:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:51:54] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[10:55:52] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[10:55:52] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[10:55:52] *** Quits: mooz (~none@173.208.98.70) (*.net *.split)
[10:55:52] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (*.net *.split)
[10:55:52] *** Quits: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: gonogo (~gonogo@167.88.62.87) (*.net *.split)
[10:55:52] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[10:55:52] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (*.net *.split)
[10:55:52] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[10:55:52] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[10:55:52] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[10:55:52] *** Quits: ham5 (~iamfive@user/ham5) (*.net *.split)
[10:55:52] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[10:55:52] *** Quits: Phil-Work (~phil@62.3.100.20) (*.net *.split)
[10:55:52] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[10:55:53] *** Quits: DoubleJ (~DoubleJ@user/doublej) (*.net *.split)
[10:58:01] *** Joins: michele (~eraser@user/michele)
[10:58:01] *** Joins: keypusher (keypusher@user/keypusher)
[10:58:01] *** Joins: gonogo (~gonogo@167.88.62.87)
[10:58:01] *** Joins: mooz (~none@173.208.98.70)
[10:58:01] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[10:58:01] *** Joins: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[10:58:01] *** Joins: infernix (~nix@spirit.infernix.net)
[10:58:01] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[10:58:01] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[10:58:01] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[10:58:01] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[10:58:01] *** Joins: justGhost (~justache@user/justache)
[10:58:01] *** Joins: ham5 (~iamfive@user/ham5)
[10:58:01] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[10:58:01] *** Joins: Phil-Work (~phil@62.3.100.20)
[10:58:01] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[10:58:01] *** Joins: DoubleJ (~DoubleJ@user/doublej)
[10:58:39] *** Quits: michele (~eraser@user/michele) (Max SendQ exceeded)
[10:59:11] *** Joins: michele (~eraser@user/michele)
[11:00:03] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[11:00:28] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[11:04:01] *** Joins: luigibu (~luigi@93.176.144.84)
[11:04:53] *** Parts: catbeard (~noise@user/catbeard) (Bye!)
[11:05:15] *** Joins: jnugle (~jnugle@2406:7400:73:94e:ec23:eb97:665b:4d3e)
[11:05:30] <jnugle> what is a sane value for session.save_path in php.ini?
[11:07:04] *** arash- is now known as arash
[11:08:38] <arash> Hello, Is it recommended to use template engines such as a smarty to easily separate my html code and write html code faster?
[11:09:48] <AllenJB> jnugle: I would recommend a path specific to the application, outside of the web root (ie. not accessible from the web) and outside of /tmp (because some setups will wipe /tmp on reboot, which isn't really desirable)
[11:10:34] <AllenJB> arash: I would say it's recommended to separate views from logic, but you don't need to use a template engine to do that.
[11:13:33] <arash> AllenJB, how can I do it without template engine? I mean there is no way to pass variable to html file so I need to combine html with php, you say for example pass variable to another php file (to handle views) and from there combine html with php?
[11:13:41] *** Joins: fef (~thedawn@user/thedawn)
[11:14:33] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:15:44] <AllenJB> arash: You can just use a normal require. eg: require "../views/add.php"; // add.php will see all the same variables as if it were written at that point in the including script
[11:15:51] <jnugle> AllenJB: so would a path like /var/data/nextcloud/session/ be good?
[11:15:59] <jnugle> what is it used for?
[11:16:44] <arash> AllenJB, I see. thank you.
[11:17:24] <AllenJB> session.save_path is used to store the server-side session data (the actual contents you see in $_SESSION). Using PHP's default session handler / settings you'll see 1 file per session.
[11:19:15] *** Joins: lord4163_ (~lord4163@81-233-183-142-no86.tbcn.telia.com)
[11:19:50] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 252 seconds)
[11:19:54] *** lord4163_ is now known as lord4163
[11:28:07] *** Joins: stenno (~stenno@user/stenno)
[11:30:35] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[11:36:57] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 250 seconds)
[11:41:28] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:49:11] *** Quits: luigibu (~luigi@93.176.144.84) (Read error: Connection reset by peer)
[11:50:16] *** Joins: luigibu (~luigi@93.176.144.84)
[11:52:17] *** Joins: Fede_HC (~Guest55@185.230.82.40)
[11:55:40] <Fede_HC> hello guys, does somebody know how i can delete a <tr> in a variable containing a html string by id, if an other variable is empty?
[11:58:53] <TML> Fede_HC: What?
[11:59:05] <AllenJB> For parsing HTML and locating specific entities, look at DomDocument and DomXPath
[11:59:30] <Fede_HC> i tried with that: https://pastebin.com/XkPxL3F9 but i dont want to print the html 2 times if the variable is empty but change the variable message
[12:01:59] <TML> Fede_HC: So change the variable $message instead of echoing the modified HTML
[12:03:07] <Fede_HC> yes that's what i want but am not able to do that X)
[12:05:24] <TML> Fede_HC: Why not?
[12:06:07] <TML> Fede_HC: You have a line of code that is echoing the modified HTML, do you not?
[12:09:39] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[12:10:57] <Fede_HC> yes but how can i instead of echoing the modified html save the result in the variable message and then echo that variable?
[12:13:10] *** Joins: NakedKing (~NakedKing@user/nakedking)
[12:13:20] <NakedKing> o/ Hey @LL
[12:13:36] <Fede_HC> istead of echo maybe $message = "Remaining: [" . $doc->saveHTML() . "]\n";
[12:14:21] <NakedKing> $myInt = 1199882310000    ,   how can i show it like that: 1.199
[12:15:12] <NakedKing> i need to put . after 12 char and then trim last 9 char and
[12:16:17] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Ping timeout: 240 seconds)
[12:17:34] <TinoDidriksen> So, you want to format it as trillions? Always trillions, or should it just format as whatever the magnitude is?
[12:18:02] *** Joins: richardjh (~Thunderbi@157.231.31.255)
[12:18:08] <TinoDidriksen> Anyway, https://www.php.net/number_format and substr() can do it.
[12:18:22] <NakedKing> isnt substr for string values?
[12:20:27] <Fede_HC> +TML : yes ok that worked, and what if i have to check more variables and delete more <tr> but dont want to repeat the if statement more times but use the same
[12:21:09] <TML> Fede_HC: You want to use the same if statement to check different variables?
[12:21:48] <Fede_HC> yes is that possible?
[12:21:54] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:22:24] <TML> !+babbage
[12:22:24] <php-bot> "I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question." -- Charles Babbage
[12:23:28] <Fede_HC> for exaple if variable x = 2 delete id=1 and if variable y=3 delete id = 2
[12:23:59] <TML> Note how when you explained that in English you had to use word if twice?
[12:24:01] <Fede_HC> i know i am a noob trying to make stuff
[12:24:50] <Fede_HC> yes i noticed that
[12:25:11] <Fede_HC> so i gaved myself an answer :D
[12:25:11] *** Joins: tercaL (~tercaL@user/tercal)
[12:25:19] <TML> Fede_HC: You *can* chain multiple checks in a single conditional expressions, but then it will do all the operations in the block and only if ALL statements are true, e.g.: if ($foo === "x" && $bar === "y") { removeThing1; removeThing2; }
[12:25:37] <TML> But I don't think that's what you're looking for
[12:28:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:29:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f)
[12:29:39] <Fede_HC> so i have to do it like that? https://pastebin.com/tFzpSiWw
[12:29:45] <Fede_HC> correct?
[12:30:20] <TML> Fede_HC: Try using 3vl4.org instead of pastebin, it will actually allow you to execute the code and see the result
[12:30:27] <TML> And then I don't have to visit pastebin.com
[12:32:42] <Fede_HC> ill remember that
[12:32:43] <Fede_HC> https://3v4l.org/LWJb9
[12:38:35] <TML> Fede_HC: Does that code do what you intended?
[12:43:42] <Fede_HC> yes it works, am only trying to understand if this is the best way to do it. Cause if i have 30 variables there is a lot of code
[12:48:28] <TML> Fede_HC: Well, what most people would do in that case is look at all the code that repeats, and think "Maybe I can define a function that runs the common stuff, and takes arguments for the parts that change each time"
[12:50:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:43] <Fede_HC> ok i understand, ill try to do that also
[12:50:59] <Fede_HC> +TML: thank you very much for your help
[12:52:39] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:56:08] *** Joins: Simplar (~quassel@188.163.93.241)
[12:56:28] <TML> Fede_HC: An example might look something like https://3v4l.org/tTBmc
[13:23:05] *** Joins: chao (~stenno@user/stenno)
[13:25:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:34:21] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:36:17] *** Joins: chao (~stenno@user/stenno)
[13:52:13] *** Quits: jnugle (~jnugle@2406:7400:73:94e:ec23:eb97:665b:4d3e) (Quit: WeeChat 3.4)
[13:55:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:14:21] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[14:19:58] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[14:29:01] *** Joins: Deuchnord (~Deuchnord@user/deuchnord)
[14:33:17] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[15:01:23] *** Quits: Deuchnord (~Deuchnord@user/deuchnord) (Ping timeout: 256 seconds)
[15:05:25] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[15:07:23] *** Joins: chao (~stenno@user/stenno)
[15:11:55] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[15:12:02] *** Joins: stenno (~stenno@user/stenno)
[15:23:38] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:26:21] *** Joins: pmercado_ (~pmercado@190.22.160.49)
[15:28:11] *** Quits: Hiccup (~cHoy@user/hiccup) (Remote host closed the connection)
[15:39:05] *** Joins: chao (~stenno@user/stenno)
[15:40:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[15:44:55] *** Quits: bodicceaII (~bodiccea@user/bodiccea) (Remote host closed the connection)
[15:45:15] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[15:52:49] *** Joins: guido (~weechat@host-95-238-252-231.retail.telecomitalia.it)
[16:00:58] *** Quits: Simplar (~quassel@188.163.93.241) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:03:14] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 268 seconds)
[16:06:33] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:10:37] *** Joins: biberu (~biberu@user/biberu)
[16:13:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:14:24] *** Joins: operateur (~operateur@91.143.220.230)
[16:14:54] *** Joins: d[-_-]b (~stenno@user/stenno)
[16:17:17] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[16:18:04] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:19:17] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 240 seconds)
[16:21:13] *** Joins: d[-_-]b (~stenno@user/stenno)
[16:22:19] *** d[-_-]b is now known as stenno
[16:35:19] *** Joins: Deuchnord (~Deuchnord@user/deuchnord)
[16:41:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f) (Read error: Connection reset by peer)
[16:42:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:1498:75d8:5496:f62f)
[16:46:38] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[16:57:53] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 256 seconds)
[16:59:26] *** Joins: operateur (~operateur@91.143.220.230)
[17:00:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[17:01:05] <relipse> i have a bunch of data in relatively small text files, I assumed it would be easy to just open the files and do some regex on them to get the data I need, as opposed to uploading them all into a database first?
[17:01:31] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[17:02:16] <relipse> using file_get_contents()
[17:02:22] <relipse> hi BadAdviceCat
[17:02:57] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[17:05:17] <BadAdviceCat> Howdy!
[17:06:48] <Fede_HC> +TML: yes that's much better than what i did...  I got this error when i used to much if statements : Failed to load resource: the server responded with a status of 500
[17:08:35] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[17:10:32] <Naktibalda> relipse: how does that data look like?
[17:10:40] *** Joins: biberu (~biberu@user/biberu)
[17:15:54] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[17:20:24] *** pmercado_ is now known as pmercado
[17:20:35] <Fede_HC> +TML: u really gaved me the motivation to start and learn more about coding, thx
[17:32:21] *** Parts: steve (~steven@li677-71.members.linode.com) ()
[17:36:55] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:45:19] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Read error: Connection reset by peer)
[17:46:03] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[17:50:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:50:38] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[18:00:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:05:20] *** Joins: podeni (~podeni@188.27.130.140)
[18:09:53] <FightingFalcon> echo "here is a text line called:" . $title;
[18:10:09] <FightingFalcon> is there a way to check if $title is defined without if?
[18:10:38] <Naktibalda> you could use . ($title ?? '');
[18:11:45] <FightingFalcon> whats this concept called in php?
[18:11:57] *** Joins: stenno (~stenno@user/stenno)
[18:13:12] <Naktibalda> null coalescing operator
[18:14:07] <FightingFalcon> ok thanks a lot
[18:22:41] <FightingFalcon> can i also understand if media is uploaded as attachment but not regular image into post?
[18:22:53] <FightingFalcon> awww
[18:22:55] <FightingFalcon> sorry :D
[18:23:46] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[18:24:56] <relipse> Do you all use the League Packages often?
[18:29:40] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:29:43] *** Quits: PovilasCNC (~PovilasCN@user/PovilasCNC) (Read error: Connection reset by peer)
[18:32:02] <AllenJB> relipse: The League is just an umbrella a number of developers choose to maintain their packages under. There's nothing particularly special about them. They do tend to be good quality, but I assign no special favor to them just because they're League packages.
[18:32:46] <judah> I second that, never had any real trouble with their stuff. Good quality packages. 10/10.
[18:33:10] <AllenJB> Personally I like the Plates templating library and several of my projects have made use of League/csv and Flysystem
[18:34:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[18:37:28] *** Joins: stenno (~stenno@user/stenno)
[18:38:08] *** Joins: nkm (~nkm@103.255.7.41)
[18:38:38] <relipse> yeah I was looking at the csv
[18:38:46] <relipse> looks like nice features
[18:43:08] <relipse> this is pretty slick too https://climate.thephpleague.com/terminal-objects/progress-bar/
[18:45:31] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[18:47:30] *** Joins: Northwoods (~Northwood@202.14.122.173)
[18:49:01] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[18:49:19] *** Joins: nkm (~nkm@103.255.7.41)
[18:50:38] <relipse> does anyone use Git Bash for windows here?
[18:51:53] <AllenJB> "Does anyone use ..." / "does anyone know about ..." is not likely to get you a useful answer. Pose a specific problem / ask a specific question.
[18:52:32] *** Joins: olle (~olle@p5784fa92.dip0.t-ipconnect.de)
[18:52:35] <olle> OK wait
[18:52:39] <olle> About composable parts.
[18:53:06] <olle> I said before all code should be either organising composable parts, or be a composable part. But maybe second rule should be: be *smallest* possible composable part...?
[18:54:06] <Naktibalda> so you are aiming for pyramid of 2 line functions?
[18:54:10] *** Joins: marc-o (e23c17097e@vps71629.serveur-vps.net)
[18:54:37] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 250 seconds)
[18:54:40] <olle> Naktibalda: Pyramid how? With indentation?
[18:55:01] <Naktibalda> I mean deep dependency tree
[18:55:16] <olle> Function call is not dependency tho
[18:56:43] <Naktibalda> what you wrote about seems similar to "right level of abstraction"
[18:57:34] <relipse> So basically the Git Bash terminal seems lacking, as the CLImate functions don't all work with it
[18:57:43] <relipse> maybe its better on linu
[18:57:45] <relipse> linux~
[18:58:47] <judah> why on earth would you use git bash on linux? use regular bash
[18:58:52] <judah> or zsh
[18:58:55] <judah> zsh best sh
[18:59:55] <marc-o> Hi. On a symfony 5.4.4 project with php 7.4, I got "502 Bad Gateway nginx/1.20.2" errors on some pages. But when I set `fastcgi.logging = 0` in  /etc/php/7.4/fpm/fpm.ini, then the 502 errors are gone, I can access the pages normally.  I don't understand at all what may be happening here. Can someone educate me ?
[19:00:28] <olle> Naktibalda: You have a link?
[19:00:54] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[19:01:03] *** Joins: delboy1978uk (~delboy197@ip-213-49-8-163.dsl.scarlet.be)
[19:01:11] *** Parts: podeni (~podeni@188.27.130.140) ()
[19:01:12] <delboy1978uk> morning o/
[19:01:19] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[19:01:25] <Naktibalda> olle: Clean Code book, probably
[19:01:38] <stenno> ctrlaltdelboy
[19:02:07] <olle> Naktibalda: Wonder if we still have it in the office...
[19:02:08] <delboy1978uk> what s the quickest was to camelCase a bunch of PascalCase array keys? I thought array_change_key_case but that converts the entire key
[19:02:14] <olle> delboy1978uk: Vim
[19:02:53] <delboy1978uk> olle: and then half an hour trying to :wq! it
[19:02:57] <Naktibalda> https://moderatemisbehaviour.github.io/clean-code-smells-and-heuristics/general/g6-code-at-wrong-level-of-abstraction.html
[19:03:01] <olle> delboy1978uk: ^^
[19:03:12] * olle Vim macros are kewl
[19:03:13] <stenno> never understood those vim jokes
[19:03:20] <delboy1978uk> lol
[19:03:30] <olle> The real Vim joke is pressing ctrl-s in an ssh session terminal
[19:03:39] <stenno> ctrl+s is a classic for any terminal app, yeah
[19:03:53] <delboy1978uk> i like nano
[19:03:57] <olle> Or ctrl-z and not knowing `fg`
[19:03:58] <stenno> ctrl+s -> nothing happens, you type something, nothing still happens
[19:04:01] <delboy1978uk> it helps my sanity
[19:04:05] <stenno> maybe i should use ctrl+q :P
[19:06:35] <relipse> finally, somoene who mastered the password prompt
[19:06:39] <relipse> $climate = new League\CLImate\CLImate();
[19:06:39] <relipse> $input    = $climate->password('Please enter password:');
[19:06:39] <relipse> $password = $input->prompt();
[19:06:52] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:09:17] *** Quits: tercaL (~tercaL@user/tercal) (Ping timeout: 240 seconds)
[19:14:13] <olle> Maybe "smallest composable part" would imply putting lots of side-effects inside command objects :d
[19:14:46] <olle> Or you need DSL to describe side-effects from a function. But that's just Haskell.
[19:15:51] *** Joins: ge (~g@37.214.33.95)
[19:18:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:22:20] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[19:23:27] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[19:30:36] *** Quits: delboy1978uk (~delboy197@ip-213-49-8-163.dsl.scarlet.be) (Quit: delboy1978uk)
[19:30:54] *** Quits: Deuchnord (~Deuchnord@user/deuchnord) (Remote host closed the connection)
[19:32:28] *** Joins: mikey_p (uid129477@id-129477.uxbridge.irccloud.com)
[19:32:33] *** Quits: Fede_HC (~Guest55@185.230.82.40) (Quit: Client closed)
[19:33:47] *** Joins: delboy1978uk (~delboy197@ip-213-49-8-163.dsl.scarlet.be)
[19:36:18] *** Joins: nkm (~nkm@103.255.7.41)
[19:38:27] *** Joins: stenno (~stenno@user/stenno)
[19:42:27] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 256 seconds)
[19:44:19] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[19:46:08] <olle> Wait, no
[19:46:15] <olle> Tagless-final != monads
[19:47:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:49:04] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[19:49:28] *** Joins: de-facto (~de-facto@user/de-facto)
[19:56:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[19:56:35] <relipse> is it me or does everyone make command line utility programs in php often?
[19:59:10] *** Joins: Rockwood (~Rocky@user/rocky)
[20:03:31] <biberu> relipse: independent utilities, or connected so some project otherwise written in php?
[20:03:45] <biberu> s/so/to/
[20:04:20] *** Quits: luigibu (~luigi@93.176.144.84) (Quit: WeeChat 3.4)
[20:07:24] <relipse> I guess connected to another project written in php most often
[20:07:27] <relipse> sometimes stand alone
[20:10:32] <Rockwood> biberu, o/
[20:11:46] <biberu> hey Rockwood
[20:12:28] <Rockwood> what is going on?
[20:12:55] <biberu> relipse: i've done so for tools that need to call other php directly, otherwise no, not really, but it depends on what you need and what you're familiar with ¯\_(ツ)_/¯
[20:17:02] *** Joins: da_wunder (~wunder@dsl-jklbng11-54fa51-220.dhcp.inet.fi)
[20:19:00] *** Joins: ms49434 (~ms49434@user/ms49434)
[20:24:30] *** Joins: stenno (~stenno@user/stenno)
[20:27:23] <delboy1978uk> here's how i camelCased my PascalCase array keys
[20:27:24] <delboy1978uk> array_combine(array_map(function($k){return lcfirst($k);}, array_keys($data)),array_values($data));
[20:27:52] <delboy1978uk> and no vim involved olle :-P
[20:30:15] *** Joins: operateur (~operateur@109.92.177.112)
[20:32:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[20:34:55] *** Quits: operateur (~operateur@109.92.177.112) (Ping timeout: 256 seconds)
[20:35:04] <arash> Hello, When working with DateTime class, which time formats I can pass to that class? I mean for example $dt = new DateTime('2012-03-11'); or $dt = new DateTime('2012/03/11'); how can I know acceptable formats?
[20:36:49] <AllenJB> arash: To the best of my knowledge, the constructor uses the same rules as strtotime. If you know the original format, you can instead use DateTime::createFromFormat()
[20:37:23] <arash> I think I found it https://www.php.net/manual/en/datetime.formats.php
[20:39:49] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:41:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[20:42:02] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: REALITY.SYS Corrupted: Re-boot universe? (Y/N/Q))
[20:42:46] *** Quits: richardjh (~Thunderbi@157.231.31.255) (Quit: richardjh)
[20:43:14] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[20:46:09] *** Joins: orr (~onildo@177.130.3.13)
[20:46:29] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[20:47:17] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 256 seconds)
[20:48:53] *** ___Rockwood__ is now known as Rockwood
[20:50:09] *** Joins: WishBoy (~WishBoy@user/wishboy)
[20:58:42] *** Joins: fef (~thedawn@user/thedawn)
[21:01:48] *** Quits: fef (~thedawn@user/thedawn) (Read error: Connection reset by peer)
[21:04:14] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:09:04] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:14:08] *** Quits: delboy1978uk (~delboy197@ip-213-49-8-163.dsl.scarlet.be) (Quit: delboy1978uk)
[21:15:56] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[21:20:08] *** Joins: fef (~thedawn@user/thedawn)
[21:28:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[21:30:18] *** Joins: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs)
[21:30:50] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Quit: Stay safe!)
[21:31:22] *** Joins: Mr-Snick_ (~mr-snick@c-73-183-97-137.hsd1.md.comcast.net)
[21:31:38] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:33:14] *** Joins: Mr-Snick__ (mr-snick@gateway/vpn/protonvpn/mr-snick)
[21:34:06] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:34:19] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:34:57] *** Quits: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs) (Ping timeout: 250 seconds)
[21:35:13] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Ping timeout: 256 seconds)
[21:36:37] *** Quits: Mr-Snick_ (~mr-snick@c-73-183-97-137.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[21:43:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[21:45:25] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:45:39] *** Quits: olle (~olle@p5784fa92.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:58:07] *** Quits: Northwoods (~Northwood@202.14.122.173) (Ping timeout: 256 seconds)
[22:07:31] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:09:16] *** Quits: Oclair_ (~Oclair@nq3.aventia.pw) (Quit: %Cya%)
[22:11:46] *** Joins: Oclair (~Oclair@nq3.aventia.pw)
[22:15:14] *** Quits: Oclair (~Oclair@nq3.aventia.pw) (Client Quit)
[22:18:49] *** Joins: Oclair (~Oclair@nq3.aventia.pw)
[22:20:08] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:54:57] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:05:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:06:19] *** Joins: Error (~err@user/error)
[23:12:56] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[23:18:19] *** Joins: olle (~olle@i5E866D84.versanet.de)
[23:18:34] <olle> Any good synonym to `do(fn () ... );`
[23:18:37] <olle> ?
[23:18:46] <olle> run() perhaps
[23:18:47] <olle> Hm.
[23:18:56] <olle> app() or apply()
[23:20:03] *** Quits: d3sync (~d3sync@62.1.158.240) (Ping timeout: 256 seconds)
[23:20:57] *** Joins: stenno (~stenno@user/stenno)
[23:22:14] <biberu> olle: context? apply has other associations for me
[23:22:18] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:22:32] <olle> Hmmm
[23:22:37] <olle> biberu: command object list
[23:22:59] <olle> Or, an easy way to collect command objects and then run them later
[23:23:15] *** Joins: d3sync (~d3sync@46.246.162.135.dsl.dyn.forthnet.gr)
[23:23:19] <biberu> what are you doing with the results?
[23:23:24] <olle> "do" would be perfect, because in Haskell it's do-notation
[23:23:33] <olle> biberu: It's assumed results are not needed ^^
[23:23:43] <olle> Or, that's outside my use-case
[23:24:02] <olle> Buuut, possible, if false is returned, do not continue in the command list.
[23:24:14] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:25:04] <__adrian> enqueue()
[23:25:12] <olle> Oooh
[23:25:24] <olle> Shorter, like que() maybe.
[23:25:24] <__adrian> this sounds more like "add to list of things to do" than "do"
[23:25:35] <__adrian> DO NOT ABRVT
[23:25:36] <biberu> sounds like a reduce to me
[23:26:05] <olle> __adrian: well, that's what do-notation does in Haskell too :) As I understand it. But by wrapping everything in closures.
[23:26:39] <biberu> or if you want to handle failures in a functional way: sequence
[23:26:58] <__adrian> is it  $x->do($a, $b, $c)  or  $x->do($a)->do($b)->do($c)->go()  ?
[23:27:04] <olle> Right, seq()
[23:27:19] *** Quits: orr (~onildo@177.130.3.13) (Quit: Leaving)
[23:27:40] <olle> __adrian: do() has a static variable, which means independent functions can do() stuff and then at top of stacktrace, it can do()->run(); to execute the list (by traversing the command tree or something)
[23:27:53] <olle> Point would be to make more functions unit-testable
[23:27:56] * __adrian grumbles
[23:27:59] <olle> hahaha
[23:28:19] <olle> Well, the alternative is for each function to return command objects and manage them that way
[23:32:01] <__adrian> why is this not a CallbackSequence object or something
[23:34:34] *** Quits: magla (~gelignite@d536277f.access.ecotel.net) (Read error: Connection reset by peer)
[23:34:50] *** Joins: magla (~gelignite@d536277f.access.ecotel.net)
[23:35:16] <stenno> wt
[23:35:39] <stenno> with 'do', i think about statements getting expressionized
[23:36:58] <__adrian> "do" does sound overly generalized, especially as a function (vs. method) name
[23:37:16] <__adrian> but i'm talking about that fact that it's a function () { static }
[23:37:26] <Error> hiya.. im lost again why this code is not getting the whole file.. https://paste.ircnow.org/gtunox2n0t27sdmjklin/ well its usual im lost again!
[23:37:27] <__adrian> let's not bring that back
[23:37:32] <stenno> in js its called 'do-expression', and haskell has its own 'do' too as mentioned by olle
[23:38:50] *** Joins: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs)
[23:39:03] *** Quits: ge (~g@37.214.33.95) (Remote host closed the connection)
[23:39:11] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[23:39:34] <olle> It *is* CallbackSequence
[23:39:37] <olle> But a tree
[23:40:06] <__adrian> you know, now that you mention it, that's great. because php has  do..while, which means you can't implement this horrible naming decision anyway.
[23:41:51] <olle> stenno: OK, have to google that one
[23:41:55] <varrg> I think __clone() should receive the original object. *opinion*
[23:42:49] <stenno> olle: stage-1 https://github.com/tc39/proposal-do-expressions
[23:43:13] *** Quits: operateur (~operateur@109-93-127-25.dynamic.isp.telekom.rs) (Ping timeout: 250 seconds)
[23:43:35] <olle> o0
[23:43:47] <stenno> so very far from actually being in the language
[23:44:11] <stenno> right now we are waiting more on throw-expression
[23:44:34] <stenno> stage-2 https://github.com/tc39/proposal-throw-expressions
[23:45:20] * stenno enviously glances to php match expressions
