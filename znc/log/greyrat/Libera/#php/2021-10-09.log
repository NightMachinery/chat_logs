[00:29:13] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[00:30:28] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[00:38:06] *** Joins: pmercado (~pmercado@186.107.35.198)
[00:45:49] <velix> Man... I hate creating pivot tables in PHP :D My brain hurts. Maybe I really should try a library, which does it for me :)
[00:47:19] <__adrian> maybe you should do it in sql
[00:48:29] <velix> __adrian: Actually, I have it in PostgreSQL ;) I'm doing this for years. But since I need to do some pre-processing I thought: Why not do it all in PHP.
[00:49:17] <__adrian> well, for starters, you apparently don't like doing that
[00:49:24] <__adrian> "pre-processing"?
[00:50:09] <velix> __adrian: Fix data incoming from SPSS and Excel.
[00:50:57] <velix> __adrian: Yeah. Because it's complicated. In R, you've got pivot_wider and pivot_longer from a plugin. Maybe I just port these to PHP. Could be really useful for people.
[00:51:31] <__adrian> advice: don't create tables and import data at the same time.
[00:52:03] <velix> Sure?
[00:52:11] <__adrian> sure
[00:52:14] <velix> I mean sure... I don't want to do that.
[00:52:22] <__adrian> have fun :) bbl
[00:58:42] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[00:58:52] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Client Quit)
[01:05:13] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[01:11:38] *** Quits: pmercado (~pmercado@186.107.35.198) (Ping timeout: 265 seconds)
[01:18:26] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[01:27:00] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[01:44:04] *** Quits: junktext (~junktext@109.201.152.171) (Ping timeout: 252 seconds)
[01:48:28] *** Joins: dagwood (~NooneOfCo@pool-108-45-46-117.washdc.fios.verizon.net)
[01:52:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[01:52:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:55:24] *** Joins: stenno (~stenno@user/stenno)
[02:06:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 265 seconds)
[02:07:16] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[02:12:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:40:06] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[02:48:43] *** Joins: WishBoy (~WishBoy@user/wishboy)
[02:49:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:52:39] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[03:19:34] *** Quits: tex (~super@user/dix) (Ping timeout: 260 seconds)
[03:27:23] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:30:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[03:46:43] *** Quits: WishBoy (~WishBoy@user/wishboy) (Ping timeout: 252 seconds)
[03:53:48] *** Joins: WishBoy (~WishBoy@user/wishboy)
[04:02:45] *** Joins: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca)
[04:07:01] *** Quits: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[04:10:42] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:15:44] *** Quits: fstd (~fstd@xdsl-87-79-83-167.nc.de) (Ping timeout: 245 seconds)
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:35] *** Quits: bobdobbs (~user@14.137.23.74) (Read error: Connection reset by peer)
[04:34:44] *** Joins: vlm (~vlm@user/vlm)
[04:44:22] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[04:47:09] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[05:14:42] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:17:58] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[05:20:43] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[05:21:44] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[05:23:10] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Quit: Leaving)
[05:23:40] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[05:27:35] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:30:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[05:33:42] *** Joins: semeion (~semeion@user/semeion)
[06:23:37] <CoJaBo_> This morning, I found possibly one of the dumbest dependency chains I have ever seen.
[06:32:16] *** Joins: Rockwood (~Rocky@user/rocky)
[06:44:36] <WishBoy> CoJaBo_ not bad
[06:44:50] <WishBoy> CoJaBo_ tell us more
[06:45:16] *** Joins: ferdna (~ferdna@user/ferdna)
[06:54:41] <CoJaBo_> WishBoy: So, I first noticed something odd when I found this app I've been working on for a while uses the mysqli_* API, but the server doesn't have that installed
[06:54:54] <CoJaBo_> It has some kind of polyfill lib that implements the parameterized mysqli_* API on top of............... the deprecated legacy mysql_* API
[06:55:49] <__adrian> ext/mysql is not "deprecated," it's literally gone
[06:56:37] <CoJaBo_> Yep. That was my next, "Wait a minute........" moment
[06:56:50] <CoJaBo_> As it turns out, it has a polyfill lib that implements the mysql_* API on top of PDO-mysql.
[06:59:37] <WishBoy> you need to *ban* mysql from the project urgently
[07:00:02] <WishBoy> depreciated, insecure
[07:00:14] <WishBoy> is dead
[07:00:47] <CoJaBo_> Yeh, I just installed the mysqli_* extension, and am going to pretend I never saw any of this
[07:01:38] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[07:02:05] <CoJaBo_> I'm kind of amazed at how well these work tho. I didn't notice until I copy-pasted some app code to prototype another page and got a mysqli__whatever() is not defined error, which was baffling, because the code has been running fine for years
[07:03:15] <Rockwood> __adrian, hi how are you sir?
[07:06:00] <WishBoy> CoJaBo_ https://www.php.net/mysqlinfo.api.choosing
[07:06:18] <CoJaBo_> WishBoy: ..?
[07:06:35] <WishBoy> mysqli vs PDO
[07:06:36] <WishBoy> :P
[07:07:09] <CoJaBo_> Yeh, I'm just not sure how that relates to this lol
[07:07:16] <WishBoy> sorry
[07:07:33] <WishBoy> im just reading something about DB API
[07:07:38] <WishBoy> >.<
[07:08:09] <CoJaBo_> This app is an insane amount of files. Who knows what else lurks beneith :/
[07:09:33] <CoJaBo_> Just last week, in this same app, I discovered this fun bit when I turned on strict_types...........   header('Content-Type','application/json');
[07:09:47] <WishBoy> CoJaBo_ many dependencies and frameworks?
[07:10:03] <CoJaBo_> Yep
[07:10:13] <CoJaBo_> It's also got 2 YAML parsers
[07:10:25] <CoJaBo_> Last month, I removed one of the JSON parsers
[07:10:51] <CoJaBo_> It was only ported forward from PHP 5.4 earlier this year.
[07:12:03] <CoJaBo_> I don't remember if this was the same one that had a for(each()) loop. Not to be confused with a foreach() loop.
[07:12:27] <CoJaBo_> No, that was a different one. Can't have TOO much insanity in one app
[07:14:54] <CoJaBo_> My re-implementation of each() actually turned out to be fortuitous. each() was removed in PHP8, and preliminary testing shows that at least that portion of the app still functions "correctly".
[07:31:40] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[07:33:51] *** Joins: guido (~guido@host-79-13-254-48.retail.telecomitalia.it)
[07:53:43] <Blondie101010> CoJaBo_:  each was usable on its own, though justifiedly removed, but why not replace `for(each...)` by `foreach`?
[08:30:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:39:01] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:50:07] *** Joins: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net)
[08:52:18] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 260 seconds)
[08:53:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:56:40] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[08:58:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 252 seconds)
[08:58:01] *** mIk3_09 is now known as mIk3_08
[09:03:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[09:10:56] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 245 seconds)
[09:13:54] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:17:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 252 seconds)
[09:17:13] *** mIk3_09 is now known as mIk3_08
[09:18:47] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[09:19:09] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:20:07] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:23:40] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 265 seconds)
[09:23:40] *** mIk3_09 is now known as mIk3_08
[09:26:09] *** Joins: tex (~super@user/dix)
[09:31:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:38:10] *** Quits: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 265 seconds)
[10:07:05] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Read error: Connection reset by peer)
[10:24:13] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:30:44] *** Joins: bmg505 (~leon@8ta-146-17-205.telkomadsl.co.za)
[10:44:04] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[10:46:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 265 seconds)
[10:47:58] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:48:11] *** Quits: WishBoy (~WishBoy@user/wishboy) (Quit: updating somethings)
[10:54:51] *** Joins: WishBoy (~WishBoy@user/wishboy)
[11:02:36] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[11:15:51] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:24:58] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[11:26:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:38:02] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[11:43:12] *** Joins: Lantizia (~Lantizia@user/lantizia)
[11:43:13] <Lantizia> how 'hardened' do we think something like this is?  https://gist.github.com/taterbase/2688850
[11:43:52] <Lantizia> in theory couldn't someone upload files with '../' in their name and maybe write into dirs they shouldn't?  that kind of thinking.
[11:44:59] <AllenJB> Possibly. The filename in 'name is specified by the client and shouldn't be trusted.
[11:45:23] <Blondie101010> Lantizia:  never trust user input and especially never use them for file names
[11:45:30] <Lantizia> exactly :)
[11:45:58] <AllenJB> I would also note that this code has absolutely no error checking (does not check the 'error' element of $_FILES) and does not check the mime type of uploaded files (did someone upload an image or a PHP script?)
[11:46:56] <Lantizia> we're basically a nonprofit that helps other nonprofits/charities with their IT needs for free and also does free web hosting.... see functionoffice.org
[11:47:18] <Lantizia> but sometimes we're asked if there is anything simple someone can upload to their site (a php script for example) to do this kind of thing
[11:47:36] <Lantizia> so far I haven't seen anything ready-made which can in a secure way which I'd be happy recommending
[11:47:49] <Blondie101010> doesn't your system support FTP/SFTP?
[11:48:05] <Blondie101010> if not, find a real sysadmin
[11:48:14] <Lantizia> sure but we're talking about nonprofits/charities that barely learned to use a mouse last week :P  keep it simple with a web page!
[11:48:23] <Blondie101010> doesn't matter
[11:48:38] <Lantizia> yes, yes it does.
[11:48:38] <Blondie101010> you're wasting efforts on crap
[11:48:48] <Blondie101010> put them in the right place
[11:50:08] *** Joins: Diego (~textual@user/diego)
[11:50:32] <Blondie101010> and in the worst case scenario, use an existing script
[11:51:49] <Lantizia> now it just looks like you've not read what I've written... I *just* said that.
[11:53:42] <Lantizia> Although I do remember using net2ftp years ago, which might be alright
[11:53:54] <Lantizia> but was still hoping for something simpler
[11:54:56] <Blondie101010> I just reread and still don't know what you're arguing about
[11:55:29] <Lantizia> then it's probably best you ignore this :)
[11:55:41] <Blondie101010> if you want the site admins to be able to transfer files, give them FTP access, or get an existing upload/file browser scritp
[11:56:44] <Lantizia> and onto ignore you go
[11:56:56] <Blondie101010> oh well
[11:57:26] <Lantizia> i'm short on patience for people who like the sound of their own voice more than the ability to read
[11:58:27] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[11:58:51] <TinoDidriksen> SFTP is the secure way to do that. But there's also Usermin for more general purpose administration of everything to do with their user.
[12:00:51] <Lantizia> that's not the requirement here, the requirement is for someone (by that I mean *anyone* who is joe public) to be able to upload something through a web page
[12:01:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[12:01:09] *** mIk3_09 is now known as mIk3_08
[12:01:12] <Blondie101010> you said "php script"
[12:01:32] <Blondie101010> never run an uploaded php script from a stranger
[12:01:48] <Blondie101010> didn't you start this discussion with security concerns?
[12:02:13] <Blondie101010> you have 0 security
[12:03:42] <TinoDidriksen> So you just want a public file storage? Then hash the filenames and store them by the hashed name, and keep the hash-to-real mapping in a database for use by the download script.
[12:04:03] <TinoDidriksen> Hash the contents, rather, to deduplicate the files.
[12:04:11] <Blondie101010> I think he wants people to upload php scripts
[12:05:20] <TinoDidriksen> I think Lantizia meant a simple uploader, where the uploader could be a PHP script - not that people should be able to upload and run untrusted PHP scripts. I hope, at least.
[12:06:04] <Lantizia> i don't care if they upload any file really, php script or not... I'd make sure they went into a dir which doesn't process cgi scripting anyway
[12:06:14] <TinoDidriksen> Ha
[12:06:15] <Blondie101010> phew
[12:07:04] <Lantizia> and I'm thinking of making a 12 digit invite code or something so that whomever has had one issued to them... has 1 month to use it
[12:07:04] <TinoDidriksen> So you don't want them executable. Well then just store them by hashed content. That way they have neutral names that won't trigger anything.
[12:07:14] <Blondie101010> and then again ftp has been used for anonymous uploads for 40 years or more
[12:07:25] <Lantizia> i.e. in those 12 digits are a date 'from' and date 'to' encoded with some kind of key which only we know
[12:07:52] <Hash> People come here looking for solutions to problems, not to be antagonized.
[12:07:57] <Lantizia> i.e. i can say to someone go to http://myanonymousuploader.com (don't know if that exists, just made it up) and use code 763834724742
[12:09:25] <Lantizia> mostly the code is there so that if the upload script stays up all the time... it stops rando's filling up the disk
[12:09:47] <Blondie101010> but it's not anonymous anymore
[12:09:55] <Hash> 1) What kind of files do you want them upload? Is there a specif list of mimes to allow or disallow?
[12:10:26] <Lantizia> it's for all those occassions when you encounter someone online who wants to give you a file... but doesn't have the means (or knowledge) to do that (weirdly in 2021, which is odd)
[12:10:33] <TinoDidriksen> If it's a 3rd party file sharing service, why make another? Just have them use Google or whatever.
[12:10:56] <TinoDidriksen> There's so many file sharing services.
[12:11:03] <Lantizia> because they all need extra steps like registration, file limits, adverts, waiting for counters to expire before doing anything, etc..
[12:11:17] <Lantizia> i'm looking for something simple anyone can just host themselves
[12:11:27] <Lantizia> and the file appears directly in their webspace
[12:11:39] <Hash> There are self hosted solutions for this need already
[12:11:43] <Hash> Owncloud comes to mind.
[12:11:44] <TinoDidriksen> Then hashed storage with database mapping...
[12:11:58] <Lantizia> Hash, owncloud/nextcloud really doesn't fit this bill at all!
[12:12:07] <Hash> Ok, thought it might.
[12:12:07] <Lantizia> and I use it!
[12:12:16] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[12:12:22] <Hash> What are the business needs? Make a list.
[12:12:35] <Lantizia> the page would literally be.... File: <enter>    Code: <enter>    [Upload]
[12:12:50] <Hash> So what's the problem?
[12:14:24] <Lantizia> the problem would be **preferring** to not make such a thing from scratch (although absolutely capable of doing that) and instead... if such a thing already exists... using something which already does this (or close enough to it) as it'll have had many more eyes on the code and public scrutinty for security concerns
[12:14:36] <Hash> By now you'd have been halfway done with a solution already.
[12:14:47] <Hash> 2:13 to 2:245 am
[12:14:52] <Hash> That's half an hour.
[12:15:03] <Blondie101010> and that was what I suggested
[12:15:12] <Lantizia> yes because I've not been doing other things in amongst typing in here
[12:15:21] <Lantizia> and you've asked a question and then not even read my answer above
[12:15:24] <Lantizia> you join Blondie101010
[12:15:26] <Hash> Don't allow people to derail you
[12:16:56] <Hash> Take uploaded files. Run through a list of mimes to compare against in an array. Store in a secure directory. Put file location/code and hashed filename into db
[12:17:59] <Hash> https://dev.to/einlinuus/how-to-upload-files-with-php-correctly-and-securely-1kng read this too
[12:19:12] <Hash> https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload might be useful
[12:19:21] <TinoDidriksen> /ignoring people who are giving useful advice and asking pertinent questions is not a great way to behave.
[12:19:54] <Hash> https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/10-Business_Logic_Testing/08-Test_Upload_of_Unexpected_File_Types
[12:19:57] <Lantizia> its wasn't pertinent or useful
[12:20:07] <Lantizia> but thanks for making my list grow :)
[12:20:40] <Hash> make sure to read the owasp pages and follow best practices.
[12:21:52] <TinoDidriksen> Hash, pretty sure none of that is getting through.
[12:25:56] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[12:26:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[12:27:01] <TinoDidriksen> Lantizia, you come in here with a broad problem and then reject what the channel regulars have to say about the topic. We have expertise in the field and language. We say these things because we quite literally know better. But it's not exactly what you want to hear? Then you need to take a step back and narrow down the problem and desired solution. Which you eventually did, and got a solution
[12:27:01] <TinoDidriksen> that satisfies it.
[12:27:49] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[12:31:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:31:45] *** Joins: Warped (~Warped@user/warped)
[12:34:20] *** Quits: sharpertool (sid80151@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[12:35:46] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[12:35:56] *** Joins: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net)
[13:11:09] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 268 seconds)
[13:11:19] *** Joins: ArchNoob (~maotora@user/archnoob)
[13:37:31] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:51:20] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[13:52:00] *** Joins: wyre (~wyre@user/wyre)
[14:01:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:05:32] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[14:06:53] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:12:26] *** Quits: Diego (~textual@user/diego) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:21:38] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[14:22:05] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:22:53] *** Joins: wyre (~wyre@user/wyre)
[14:31:09] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[14:34:12] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[14:53:56] *** Joins: wyre (~wyre@user/wyre)
[14:53:58] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[14:57:14] <freeman_h> 16390:66.249.64.115 - - [09/Oct/2021:11:05:52 +0000] "GET /libraries/index.php?keyword=172-decals-Spitfire-507842 HTTP/1.1" 404 56 "-" "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)" is this google trying to access this?
[14:57:59] <freeman_h> because the file it is trying to access has been removed has it was created by a hacked plugin for my wordpress site so I am trying to remove all tracing of it
[15:01:29] <Blondie101010> ok, so what is the problem?
[15:02:05] <Blondie101010> my main concern is that you sound like you manually cleaned up the intrusion, which is very error prone
[15:02:36] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[15:03:14] <freeman_h> Blondie101010, I am using a wordpress recommended approaches, I have removed everything it needs, however something is still making a call to that /libraries/index.php?keyword=
[15:03:30] <freeman_h> the libraries directory does not exist anymore
[15:03:42] <Blondie101010> that is not a problem
[15:03:51] <freeman_h> has this is where the backdoor was created, I am just trying to see what is making a call to it
[15:04:15] <Blondie101010> people and bots could try to access anything they imagine, but if it gives a 404 it's all fine for you
[15:05:28] <Blondie101010> those are NOT treats
[15:05:35] <Blondie101010> *threats
[15:13:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[15:15:08] *** Joins: wyre (~wyre@user/wyre)
[15:16:03] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:16:26] <TinoDidriksen> It existed before and got indexed, so Google will try to see if it still exists.
[15:16:46] *** Quits: deksar (~deksar@user/deksar) (Remote host closed the connection)
[15:21:32] <freeman_h> if anyone is running a aache or nginx server please can you check if www-data is in the sudo group
[15:24:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[15:36:13] <TinoDidriksen> www-data is not in sudo by default. That would be a serious flaw.
[15:43:05] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[15:51:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:54:41] *** Quits: connrs (~connrs@user/connrs) (Ping timeout: 250 seconds)
[15:56:46] <AllenJB> Why do you want www-data in sudo? That's a security risk. I would consider a cron or long running process (service) that performs tasks from a job queue
[16:04:48] <biberu> freeman_h: was your system compromised? did someone add www-data to sudo?
[16:08:29] *** Joins: deksar (~deksar@user/deksar)
[16:33:25] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:34:39] *** Joins: stenno (~stenno@user/stenno)
[16:58:08] *** Quits: bin4ry (~bin4ry@128.199.135.148) (Quit: Ping timeout (120 seconds))
[16:58:26] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[17:35:14] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[17:41:04] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[17:42:26] *** Parts: velix (~velix@user/velix) (Leaving)
[17:47:57] <greyrat> Is it possible to include literal text in a <?php ... ?> block? For example, a for-loop like the modern template engines. I am interested in using PHP as a general purpose templating language (not for just HTML).
[17:48:19] <greyrat> (Of course, I can just 'echo' text, but that voids the whole templating idea.)
[17:49:38] <TinoDidriksen> You can add literal text in ?> <?php blocks
[17:49:42] <AllenJB> greyrat: Typically you would just jump in and out of 'php mode' using ?> .... <?php to "print" HTML / text. There's also the '<?=' short echo tag which is short for '<?php echo '
[17:50:02] <TinoDidriksen> If you want non-PHP strings there's also heredoc and nowdoc.
[17:57:33] <greyrat> TinoDidriksen: I tried this: https://paste.gnugen.ch/paste/5Ali
[17:57:34] <greyrat>  but it errors that it can't see the variables of the previous block.
[17:59:36] <TinoDidriksen> greyrat, https://3v4l.org/XnnZ8 works for me, without {}
[18:01:30] <greyrat> TinoDidriksen: Any idea why is that? 
[18:01:43] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[18:01:56] <TinoDidriksen> {$var} is for use inside strings. You don't need {} in PHP code.
[18:03:35] <greyrat> Hmm. No shell-style modifiers then? Stuff like ${my_var:u}, ${(j.,.)my_var} etc?
[18:04:03] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[18:05:10] <AllenJB> No. You would use functions such as substr to modify values
[18:13:08] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e)
[18:15:46] <greyrat> Are there any other special tags like `<?php` `<?=`? Where are they documented? 
[18:16:34] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 245 seconds)
[18:17:59] <TinoDidriksen> Nope
[18:19:01] <TinoDidriksen> Only those 2 open PHP blocks, and <?=X?> is simply same as <?php echo X;?>
[18:20:05] <AllenJB> See also the language reference section of the manual: https://www.php.net/manual/en/langref.php
[19:00:08] *** Quits: dagwood (~NooneOfCo@pool-108-45-46-117.washdc.fios.verizon.net) (Quit: Leaving)
[19:11:45] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:20:04] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:31:38] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[19:54:02] *** Quits: mactron_ (~mactron@APN-123-214-101-gprs.simobil.net) (Ping timeout: 260 seconds)
[20:08:05] *** Joins: Rockwood (~Rocky@user/rocky)
[20:16:40] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[20:26:28] *** Joins: paulr (~Guest1@cpc81271-enfi21-2-0-cust57.20-2.cable.virginm.net)
[20:27:33] *** Quits: paulr (~Guest1@cpc81271-enfi21-2-0-cust57.20-2.cable.virginm.net) (Client Quit)
[20:29:32] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:48:23] *** Parts: fedorafan (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[21:07:36] *** Joins: ms49434 (~ms49434@user/ms49434)
[21:19:45] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[21:21:20] <ash_m> I could be wrong about this, but I think you told me about some wrapper library that you use to execute a workflow of multiple processes? I think you use ->get() or something to get the result... I just remember you really liked it.
[21:22:23] <ash_m> ^ that message was intended for BadAdviceCat, but they aren't on and it might not have been that person anyway.
[21:22:56] <ash_m> Anyone know of such a lib?
[21:24:57] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:35:20] *** Joins: magla (~gelignite@55d47841.access.ecotel.net)
[21:37:04] *** Joins: olle (~olle@i5E8666AB.versanet.de)
[21:50:03] <TinoDidriksen> I don't see anything about that in the logs.
[21:56:12] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[21:56:36] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:57:40] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 265 seconds)
[21:57:59] *** Quits: refactor_ring (~refactor_@142.93.146.100) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:58:41] *** Joins: refactor_ring (~refactor_@142.93.146.100)
[21:59:21] *** Quits: magla (~gelignite@55d47841.access.ecotel.net) (Quit: Stay safe!)
[22:07:43] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:10:50] *** Joins: kenoba6 (~kenoba@user/kenoba)
[22:11:33] *** Joins: rambleba1 (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:11:44] *** Joins: keypushe- (keypusher@user/keypusher)
[22:12:44] *** Joins: Bitflux (~byte@byteflux.net)
[22:12:52] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Ping timeout: 245 seconds)
[22:12:52] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[22:12:52] *** Quits: Byteflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[22:12:53] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Remote host closed the connection)
[22:12:53] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[22:12:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[22:12:53] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 245 seconds)
[22:12:53] *** kenoba6 is now known as kenoba
[22:13:15] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[22:13:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:15:01] *** keypushe- is now known as keypusher
[22:35:59] <olle> What code coverage percentage is reasonable for unit-tests? 50%? 100%?
[22:36:47] *** Joins: magla (~gelignite@55d47841.access.ecotel.net)
[22:37:07] <olle> Maybe depends on if path coverage is enabled or not, too.
[22:39:57] <olle> Someone wrote a fucking zen story on so: https://stackoverflow.com/questions/90002/what-is-a-reasonable-code-coverage-for-unit-tests-and-why
[22:42:31] <rambleba1> olle, depends on what you consider 100% and what the untested portions of your code do
[22:42:51] <rambleba1> 100% test-coverage, regardless of what kind of test is stupid
[22:43:36] <rambleba1> Cover errors you have fixed, cover code you want to refactor, cover integral parts of your business application,
[22:43:38] <AllenJB> Many of the answers there echo my thoughts. While code coverage can inform decisions with regards to tests (what needs more tests, for example), I don't think it's good to focus on it. It should be a tool, not a target.
[22:44:28] <Blondie101010> the main point which was mentioned is to focus on bugs
[22:44:47] <Blondie101010> every single bug needs a unit test
[22:45:06] <da_wunder> and 100% coverage might just be that you are calling all the endpoints of your application, and not really _testing_ how those should work in each use case
[23:00:35] <olle> Blondie101010: Not sure how to reflect that in a CI
[23:00:51] <olle> da_wunder: No, you can do path coverage too
[23:00:59] <olle> 100% path coverage would be testing most of it
[23:01:50] <Blondie101010> olle:  very elementary logic....  if function getResult($a) has a bug when $a > 10, you add a test for that during the fix!
[23:01:55] *** Joins: semeion (~semeion@user/semeion)
[23:02:08] <olle> Blondie101010: The CI doesn't know anything about reported bugs tho
[23:02:12] <olle> It could
[23:02:26] <Blondie101010> so you're not the one leading your project, a program is?
[23:02:48] <olle> The CI? Yes, preferably :D
[23:03:03] <rambleba1> olle, the CI is nothing but a tool
[23:03:08] <Blondie101010> that probably explains half your concerns
[23:04:11] <olle> AllenJB: Making it a "tool, not a target" creates a dependency on company culture
[23:04:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[23:04:56] <Blondie101010> sure if the ultimate objective is to hire the worst devs!
[23:04:59] <rambleba1> olle, the other way around is worese, it is called cargocult
[23:05:29] <rambleba1> Fymann had a nice talk about it some decades back
[23:05:38] <Blondie101010> you should focus on guiding your devs to improve, not make them worse
[23:05:40] <AllenJB> Making it a target leads to blind adherence to the target without knowing why, or worse, gamification
[23:06:00] <olle> rambleba1: Any number is better than 0% code coverage, which is our current number
[23:06:33] <Blondie101010> olle:  I already told you the most important unit test use
[23:06:34] <rambleba1> olle, yes, BUT the way yuo go about it you end up with a steaming pile of whatever it is you have only worse
[23:06:46] <olle> wat
[23:06:51] <Blondie101010> if you don't do that, the coverage is absolutely unimportant
[23:07:00] <Blondie101010> bugs
[23:07:09] <rambleba1> olle listen to Blondie101010
[23:07:34] <olle> Well, does Blondie101010 know a way to automatically connect reported bugs with path coverage?
[23:08:01] <Blondie101010> there are tools for that, but I focus on humans
[23:08:54] <Blondie101010> just make it a requirement that each fix has a new unit test
[23:09:25] <olle> Not possible, our code is not adapted to unit testing. I'm mostly thinking of new code.
[23:09:43] <olle> And how to increase the quality of refactored parts
[23:09:45] <Blondie101010> you're doing it wrong
[23:09:52] <Blondie101010> the coverage won't be useful
[23:10:09] <olle> Still thinking any test is better than 0 test :)
[23:10:10] <Blondie101010> you could reach 99% coverage and redo the same bugs over and over
[23:10:23] <Blondie101010> add tests for each bug fix
[23:10:37] <rambleba1> olle, the try E2E testing if that is an option. Won't work for some bugs though and is harder to set up. Also, consider refactoring your code, that way the health of your code improves as well and it get's moderninzed as well
[23:10:55] <dag> is it really worth it writing lots of unit tests? still unclear to me. but 100% coverage is obsiously asinine
[23:10:59] <Blondie101010> functional tests are good, but that's not what he's looking at
[23:11:01] <olle> Blondie101010: That's an intersting point of view - each contract between functions is fulfilled to the fullest, yet there are bugs.
[23:11:29] <Blondie101010> olle:  if a bug is found in a hard to test function, it might be a good occasion to improve it
[23:11:41] <rambleba1> dag 100% test coverage is a fetish you shouldn't indulge in
[23:11:43] <olle> dag: No, I was thinking more like 50%, maybe less, just to get us going, and make sure new code is *testable*
[23:12:18] <Blondie101010> olle:  why not make every fix testable?
[23:12:34] *** Quits: guido (~guido@host-79-13-254-48.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[23:12:55] <rambleba1> olle, the new code is testable, ok, but it needs to interact with the old code, it does not stand on it's own. And code that is testable via unit-tests without reflections  requires some setup, and therefore you cannot prevent refectorings from happening if you want test-coverage
[23:13:13] <olle> Blondie101010: Legacy blob of spaghetti bullcr*p. Would need integrity tests, but those get slow fast.
[23:13:41] <Blondie101010> that's not what we're talking about
[23:14:04] <olle> Oh, you mean refactor as you bug fix? Yes, that's possible too.
[23:14:09] <Blondie101010> if you have a bad function in which a bug is reported, you make it better, and add the proper test
[23:14:14] <Blondie101010> yes
[23:14:27] <olle> Problem is, any change is risky.
[23:14:46] <Blondie101010> especially if you only try to patch it
[23:15:08] <olle> We have refactoring projects going, but they are targeted to certain parts.
[23:15:14] <Blondie101010> omg
[23:15:16] <olle> Maybe I should just find a new job, lol
[23:15:36] <Blondie101010> you'd have the same issues with your logic elsewhere
[23:15:52] <Blondie101010> you don't have to rewrite the whole application to improve a small part
[23:16:02] <olle> obviously :)
[23:16:03] <dag> whats your goal olle :)
[23:16:25] <olle> dag: Goal is to increase the quality of refactored parts of the code, and new code as well.
[23:16:44] <olle> By tuning the CI
[23:16:53] <olle> If possible
[23:18:00] <olle> I guess, at least we need a feedback loop for test coverage statistics.
[23:18:51] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Ping timeout: 245 seconds)
[23:19:00] <olle> But again, that falls back on company culture. :(
[23:19:18] <dag> very broad goal. it's too generic
[23:19:31] *** night_wulfe_ is now known as night_wulfe
[23:20:00] <olle> Pah. Test coverage is one aspect. There are lots of others, yes, sure.
[23:20:32] <AllenJB> Like people skills
[23:20:51] <Blondie101010> if your company culture is wrong, you could work on making small suggestions to make it better
[23:21:28] <Blondie101010> even new inexperienced devs will benefit from it, not find it harder!
[23:21:32] <olle> Yes, I want to learn more about that.
[23:22:03] <olle> Things that are not automated easily falls between the cracks.
[23:22:23] <biberu> olle: are people writing tests before refactoring?
[23:22:25] <olle> If I put something in the CI, people will have to motivate its removal, which I find good.
[23:22:31] <olle> biberu: No one writing tests
[23:22:36] <olle> is*
[23:22:38] <dag> regarding refactoring you read fowler's work https://martinfowler.com/books/refactoring.html
[23:22:57] <AllenJB> olle: Or they'll decide to leave and go elsewhere
[23:23:25] <biberu> olle: I'd reject prs without tests
[23:23:34] <dag> you can refactor untested code by being very very careful. but you need a bit training for it and you will make some mistakes in the beginning.
[23:24:21] <biberu> I'd also write tests before refactoring legacy code, to minimize the risk of accidentally changing behavior
[23:24:24] <rambleba1> Blondie101010 sometimes that is a fallacy, I tried improving my last company, only to walk away from it because the guy running the show was an entitled snob knowing everything and patronizing the dev-department
[23:24:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[23:25:28] <Blondie101010> there are plenty of bad bosses, but many can be slightly improved when coached / informed properly
[23:25:59] <olle> AllenJB: Because of unit-test requirement? Maybe.
[23:26:26] <olle> biberu: Not an easy policy for legacy code-base
[23:26:42] <biberu> didn't say it was easy :)
[23:26:46] <rambleba1> Blondie101010, yes and thank you for the keyword MANY :D
[23:27:01] <AllenJB> olle: No because of your insistence on managing them via CI instead of talking to them and teaching
[23:27:13] <olle> AllenJB: Tried it
[23:27:16] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:27:21] <olle> "Why do I have to change code that works?!"
[23:27:23] <dag> olle: at a past company i worked for we had like 1% code coverage. only for critical stuff.
[23:27:32] <rambleba1> olleolle I can also recommend https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052 very highly
[23:27:54] <biberu> olle: you should be able to answer that though :)
[23:28:11] <biberu> +1 for working with legacy code
[23:28:26] * rambleba1 hears the grass grow and waits for an answer as the tumbleweed flies by
[23:29:12] <olle> rambleba1: I have two books on legacy code, but more can't hurt :)
[23:30:16] <olle> Writing tests before refactoring is the preferred way, yeah
[23:31:49] <olle> Maybe I'll try to start on 10% coverage and evaluate it with the team later :d
[23:33:14] <rambleba1> olle having books is not enough one also has to read them
[23:33:17] <rambleba1> SCNR
[23:33:48] <olle> hehe
[23:37:47] <rambleba1> olle, just as an example, at work the other day, I took over a nice piece of legacy goodness, a method needed extension, first thing I did was write unit-tests for it a holw 1kk permutations of data to cover all the possible scenarios(FYI PHPUnit runs iterator_to_array for dataProviders and depledes memory) and then I went ahead and changed the code, rerunning my tests to see if the function is still
[23:37:49] <rambleba1> working as expected. The change was 1h the unit-tests and data-generation 7
[23:38:20] <rambleba1> no unit-tests and the reason I went overboard is because the code at hand was operating on string-values and self modifying
[23:38:54] <rambleba1> first week on the job and my new bosses got their priorities straight, I already cherrish them :D
[23:41:24] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:399c:16c5:8a3c:727e) (Quit: Client quit)
[23:43:01] <olle> rambleba1: How could you write unit-test on legacy code without refactoring it first?
[23:43:01] <olle> It's usually html, db, file access, everything in a mess
[23:43:01] <biberu> you'll have to figure that out from case to case, that's one of the things wwlc talks about olle
[23:44:48] <rambleba1> olle, whatever the technique is it pretty much boils down to moving parts of code without modifying them, and handing dependencies from the outside to the class
[23:45:13] <dag> usually you must refactor a bit to make it testable. e.g. moving $client = new HttpClient() into the constructor and perhaps add a setter method for it
[23:45:36] <rambleba1> in that particular case, I was able to call the method directly and since it did not have any complex dependencies, just use it as is
[23:45:58] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:47:01] <rambleba1> olle, also it is not s.th. you do all at once but one step at a time
[23:47:15] <rambleba1> each step being an iteration that you deploy
[23:47:38] <rambleba1> that is also your safety-net should s.th. go amiss on production
[23:47:50] <rambleba1> as you progress in the refactoring you will be able to move faster
[23:47:52] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[23:48:06] <biberu> re that http example, for poorly written oop you may be able to make something testable via subclassing, then start fixing it
[23:49:07] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: WeeChat 2.3)
[23:51:01] *** Joins: fakuve (~fakuve@192.210.243.250)
[23:51:51] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:52:31] <dag> biberu: yup. i learned that from feathers. e.g. $client = $this->getClient() and then you subclass and override that method to return some fixed value
[23:52:52] <olle> My knowledge about how to make code testable is not the problem. :)
[23:55:27] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[23:58:16] *** Joins: semeion (~semeion@user/semeion)
[23:59:34] <rambleba1> dag, composition over inheritance ;)
