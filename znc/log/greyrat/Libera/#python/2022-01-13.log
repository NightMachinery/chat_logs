[00:00:14] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[00:00:36] <grym> yeah some of my installed list is certainly from #python use alone
[00:00:42] *** Joins: ice9 (~ice9@user/ice9)
[00:00:47] <grym> like a fairly ancient pypy
[00:00:59] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[00:01:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[00:02:09] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[00:04:37] *** Quits: humbertowoody (~humbertow@189.132.111.57) (Ping timeout: 240 seconds)
[00:05:18] *** cacheyou- is now known as cacheyourdreams
[00:05:28] *** Quits: jw_dungeon (~jw@2601:44:4380:4a10:84fa:95e:73a6:3e6d) (Remote host closed the connection)
[00:05:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[00:06:03] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[00:06:23] *** Joins: humbertowoody (~humbertow@189.132.111.57)
[00:07:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:07:34] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[00:07:48] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[00:07:48] *** Joins: ice9 (~ice9@user/ice9)
[00:08:41] *** Quits: dreamon_ (~dreamon@pd9503da5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[00:08:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[00:08:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[00:09:17] *** Quits: dreamon (~dreamon@pd9503da5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:10:23] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:10:40] *** Joins: corgi_ (~corgi@2620:1b2:c40:3000:8454:8314:51c8:6660)
[00:11:32] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[00:12:35] *** Quits: cosimone` (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 252 seconds)
[00:13:52] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 250 seconds)
[00:14:31] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[00:14:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:15:01] <Kebianizao> Hi all! is #pypa still valid for asking about packaging?
[00:15:21] *** Quits: inomoz (~inomoz@176.59.106.192) (Remote host closed the connection)
[00:15:31] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[00:15:58] *** Parts: fizzizist (~fizzizist@72.53.248.15) ()
[00:15:59] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9b2b:cace:d492:f449) (Remote host closed the connection)
[00:16:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[00:16:39] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 256 seconds)
[00:16:42] *** Quits: Kruppt (~Kruppt@50.111.24.186) (Quit: Leaving)
[00:16:46] *** Joins: audiobirb (~audio@user/audio)
[00:17:05] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 250 seconds)
[00:17:10] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[00:17:18] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[00:18:29] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[00:19:23] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:19:52] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:20:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:21:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[00:22:27] *** Parts: dbear (~david@mesa.ha.school) ()
[00:22:44] <SnoopJ> Kebianizao, yes, and it's topical here too
[00:23:16] *** Joins: Atque (~Atque@user/atque)
[00:23:37] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[00:24:21] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:24:30] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[00:25:22] <Kebianizao> Thanks. I'll ask here then, as pypa looks so silent (and #distutils is empty)
[00:25:28] *** Joins: cthulchu (~Cthulchu@208.94.110.98)
[00:25:40] <Kebianizao>  I'm having what I think is packaging problem. I have this layout: http://paste.debian.net/1226883/
[00:25:57] <Kebianizao>  In there you can see that I want that the installed python module (at /usr/lib/python3/dist-packages/project) is named after project name. Inside that directory I would like to have the modules I have written in the source
[00:26:34] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:26:35] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:27:15] <Kebianizao> the aim is that my project users will do `import project.moduleA` (and not `import moduleA`  which is all I attained so far)
[00:27:15] *** Joins: nomad1 (~nomad@user/spacenomad)
[00:28:27] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:29:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:30:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[00:31:33] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:31:50] *** Quits: elmc212 (~elmc212@2001:16b8:6859:8000:993:948e:b46b:8e7e) (Ping timeout: 252 seconds)
[00:32:57] *** Quits: slisnake0 (~slisnake@82.102.25.12) (Ping timeout: 240 seconds)
[00:33:01] *** Quits: marjus (~marius@5.226.162.54) (Ping timeout: 240 seconds)
[00:33:05] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:33:11] *** Joins: Betal (~Betal@user/betal)
[00:33:22] *** Joins: earendel (uid498179@user/earendel)
[00:33:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:33:58] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[00:34:07] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:35:32] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[00:35:48] *** Joins: enoch (~enochthec@122-60-210-123-adsl.sparkbb.co.nz)
[00:35:53] *** Quits: enoch (~enochthec@122-60-210-123-adsl.sparkbb.co.nz) (Changing host)
[00:35:53] *** Joins: enoch (~enochthec@user/enochthechronoco)
[00:36:53] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Remote host closed the connection)
[00:39:16] *** Quits: cvemys (~cvemys@user/cvemys) (Quit: Client closed)
[00:40:28] *** Joins: slisnake0 (~slisnake@82.102.25.13)
[00:40:31] *** Quits: enoch (~enochthec@user/enochthechronoco) (Client Quit)
[00:40:43] *** Quits: anotheruser (~user@s178255151130.blix.com) (Ping timeout: 250 seconds)
[00:40:59] *** Joins: lntl (~joey@24.136.23.254)
[00:41:01] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:41:36] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[00:41:44] *** Ekho- is now known as Ekho
[00:42:14] <lntl> if i declare a local helper variable inside of a def, is the memory for this variable released after the call?
[00:42:43] *** Joins: nomad1 (~nomad@user/spacenomad)
[00:42:52] <tdsmith> it should be available for garbage collection, anyway, yeah
[00:43:03] <phy1729> assuming you don't return the object
[00:43:16] <SnoopJ> lntl, when a name goes out of scope, the reference to the corresponding object is dropped. Objects are eligible for garbage collection when nothing is left referring to them
[00:43:20] <phy1729> (or add it to a list or dict or otherwise keep a reference to it)
[00:43:25] <SnoopJ> but GC might not happen immediately
[00:44:08] <SnoopJ> if you're used to languages like C where "variables" exist, Python names don't work like that. helpful read/watch: https://nedbatchelder.com/text/names1.html
[00:44:21] <c4017w> Was this added in 3.8? Don't have an interpreter to test with, doesn't work on 3.7 https://bugs.python.org/issue36817
[00:44:33] *** Joins: martums5 (~martums@user/martums)
[00:45:01] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:45:23] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-16-71.w82-124.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[00:45:25] <SnoopJ> c4017w, yes: https://docs.python.org/3/whatsnew/3.8.html#f-strings-support-for-self-documenting-expressions-and-debugging
[00:45:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[00:45:51] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[00:45:52] <c4017w> darn,ok
[00:46:15] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:46:18] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:46:24] *** Quits: cliluw (~cliluw@47.147.73.223) (Quit: Leaving)
[00:46:30] *** Joins: mickey8 (~user@user/mickey)
[00:46:41] *** arjun is now known as ccldarjun
[00:47:15] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[00:47:47] <c4017w> hmm, I wish there was '-0' so that data[:-0] == data[:]
[00:48:16] <SnoopJ> c4017w, data[:None]
[00:48:33] <c4017w> yeah, but I'm using the 0 elsewhere
[00:48:52] <SnoopJ> if you're slicing dynamically you might want to construct a slice() and hang the relevant branching logic around that
[00:48:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:49:06] *** Quits: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[00:49:10] <c4017w> good idea
[00:49:50] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:50:37] *** Quits: roro_ (~roro@78.192.226.182) (Ping timeout: 240 seconds)
[00:50:48] <SnoopJ> for the sake of trivia: -0.0 is a valid distinct value (which is useless here)
[00:51:38] *** Joins: roro (~roro@78.192.226.182)
[00:52:02] *** roro is now known as Guest7932
[00:52:32] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:53:41] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[00:53:52] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[00:54:55] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[00:56:40] <be3uykpy> this work as i expect it to, how'd you simplify it though? goal is to keep last N versions or less. https://bpa.st/43CQ
[00:57:35] *** Joins: newdimension (~newdimnes@user/newdimension)
[00:58:01] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:58:15] *** Quits: ubert (~Thunderbi@p200300ecdf0994b6cb4175acd0981d1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:58:26] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:58:44] *** Joins: wyclif (~wyclif@user/wyclif)
[00:59:09] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[00:59:09] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 256 seconds)
[00:59:23] <deniska> be3uykpy: prefixes can be a collection.defaultdict(list)
[00:59:27] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:00:03] <deniska> collections*
[01:01:32] *** Quits: gry_ (gry@lecturify.net) (Changing host)
[01:01:32] *** Joins: gry_ (gry@botters/gry)
[01:01:32] *** gry_ is now known as gry
[01:01:49] *** Joins: nomad1 (~nomad@user/spacenomad)
[01:02:07] *** Joins: tnez (~el@user/tnez)
[01:02:30] *** Parts: gfs (~schau@c-73-37-61-230.hsd1.or.comcast.net) ()
[01:03:31] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:04:06] <leitz> Writing Perl in Python:    show_info(**{**c, **d})
[01:04:16] <leitz> Probably not a great idea.   ;)
[01:04:25] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:04:39] *** Quits: spiderman_ (~spiderman@spiderman.shelltalk.net) (Ping timeout: 268 seconds)
[01:04:50] *** Joins: mickey8 (~user@user/mickey)
[01:05:26] <be3uykpy> deniska, updated :) is it by any means more efficient now? or just more pythonic?
[01:05:56] <SnoopJ> leitz, slightly less cumbersome in 3.10: `show_info(**(c | d))`
[01:05:58] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[01:07:48] *** Quits: ketiv (~ketiv@92.40.194.73.threembb.co.uk) (Ping timeout: 256 seconds)
[01:07:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:07:59] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:08:22] <bilb_ono> can someone help me with this stdout and stdin script? https://bpa.st/4T2Q ? Right now it doesn't display any output. I want it to read lines from stdin and then output the count of the # of lines its received so far
[01:08:37] <leitz> SnoopJ, I'm just relearning about vararg unpacking, and found the line funny. I really dislike code, even mine, that pushes me out of the flow and makes me unpack it.
[01:08:40] <deniska> be3uykpy: it's an if statement you don't have to write, otherwise it should perform similar to a normal dict
[01:09:01] *** Quits: steam (~steam@user/steam) (Ping timeout: 240 seconds)
[01:09:09] <SnoopJ> leitz, yea, it can create write-only code pretty easily
[01:09:16] *** Joins: Barones (~Barones@189.50.80.77)
[01:09:20] <deniska> leitz: I'm kinda annoyed that you can't do show_info(**c, **d)
[01:09:31] *** Quits: dxrt (~dxrt@user/dxrt) (Ping timeout: 245 seconds)
[01:09:55] <phy1729> Seems to work locally (I assume you have the same key in both c and d)
[01:10:03] <leitz> deniska, I tried that, but yeah, it bombed.
[01:10:38] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 250 seconds)
[01:10:54] <be3uykpy> deniska, ahh, nice! i missed that completely
[01:11:00] <leitz> phy1729, there are two keys in each, only one is the same. without wrapping them in **{}, it chokes on the duplicate key.
[01:11:04] <be3uykpy> i changed to the defaultdict but kept the if :)
[01:11:05] <be3uykpy> got it
[01:11:09] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:11:09] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[01:11:20] <be3uykpy> thanks deniska, wouldn't have figured that one D:
[01:11:39] <phy1729> right it's the duplication biting you; foo(**a, **b) should otherwise be ok
[01:12:16] <SnoopJ> yea it does "work" it just suffers the same problem f(x=42, x=-1) does
[01:12:27] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[01:12:42] *** Joins: summersault (~summersau@179.221.251.36)
[01:12:48] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[01:12:52] <SnoopJ> leitz, when I'm preparing a mapping to be unpacked this way, I usually do it separately from the call so that I can `f(**args)` and not have to think about it a lot
[01:13:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[01:13:55] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[01:13:58] *** vinleod is now known as vdamewood
[01:14:27] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:14:27] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[01:14:51] *** Joins: cap0ne (cap0ne@user/cap0ne)
[01:14:57] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[01:15:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:15:50] *** Joins: thorbw (~tw@46.230.130.50)
[01:16:24] *** Joins: kevr (~kevr@user/kevr)
[01:17:56] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[01:18:03] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[01:18:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:19:08] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[01:19:40] <lmmx> Hey all, I was just reading the docs on enum and was wondering if anyone can explain what part of the multiple inheritance bytes/Enum class it gives is a bytes object: https://docs.python.org/3/library/enum.html#when-to-use-new-vs-init
[01:19:42] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[01:19:58] <lmmx> I just ran it and it only has int and str values for me?
[01:20:19] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:20:46] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:21:05] <leitz> SnoopJ, that's likely my plan. I just do Perl as well and the **{} wrapping struck me as funny.
[01:21:37] <SnoopJ> leitz, it's a bit like splats
[01:21:37] *** Joins: matsaman (~matsaman@user/matsaman)
[01:22:01] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:22:32] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:22:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[01:23:19] <Nothing4You> what would be a good way to detect `Protocol.eof_received()` on an `asyncio.open_connection()`?
[01:23:19] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:23:30] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:24:44] <SnoopJ> lmmx, well, it has bytes as a base class, and you can call bytes() methods on it, e.g. Coordinate.PX.decode() is valid
[01:25:13] *** Quits: Staunch (~Staunch@137.83.202.22) (Ping timeout: 256 seconds)
[01:25:26] <Nothing4You> basically i'm trying to figure out if a connection in a pool is closed, in some cases the server would send a message about the disconnection + EOF, leaving some unread data and a CLOSE_WAIT tcp connection
[01:25:48] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 250 seconds)
[01:26:07] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:26:12] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489lkmrivqvfxhq.ipv6.telus.net) (Quit: Leaving)
[01:26:26] <Nothing4You> as there's some unread data on the reader `reader.at_eof()` will return False
[01:26:37] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[01:27:05] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:27:11] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:27:26] <Nothing4You> and there is no non-internal attribute that would expose this on the StreamReader https://docs.python.org/3/library/asyncio-stream.html#streamreader
[01:27:54] <mefistofeles> phy1729: I got busy with stuff, were you able to solve your issue somehow?
[01:28:20] <phy1729> mefistofeles: I just left it with the function call in the fixture
[01:28:27] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[01:29:36] <mefistofeles> phy1729: hm okay
[01:31:22] *** Quits: marcello42 (~mp@2001:1a81:135d:4300:2724:75b4:97f:636b) (Quit: WeeChat 3.4)
[01:32:44] *** Joins: ST47 (~ST47@wikimedia/st47)
[01:32:44] *** Joins: bluedust (~bluedust@59.89.219.209)
[01:35:25] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:35:51] *** Joins: elmc212 (~elmc212@2001:16b8:6859:8000:993:948e:b46b:8e7e)
[01:36:09] *** Joins: unautre (~unautre@149.91.83.63)
[01:37:16] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[01:37:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:39:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:39:05] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:39:05] *** Quits: elmc212 (~elmc212@2001:16b8:6859:8000:993:948e:b46b:8e7e) (Client Quit)
[01:39:19] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-237.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:39:46] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:40:06] *** Joins: xx (~xx@user/xx)
[01:40:59] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl4880liscxrt2a2h.ipv6.telus.net)
[01:41:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:45:34] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:47:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:48:27] *** Henryx_ is now known as Henryx
[01:49:32] *** Quits: oprypin_ (~irc@pryp.in) (Ping timeout: 240 seconds)
[01:50:09] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:50:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:51:07] *** Joins: oprypin (~irc@pryp.in)
[01:51:17] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:52:14] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[01:53:18] *** Joins: trashbird (~trashbird@user/trashbird)
[01:53:30] <Saxtheowl> where is my syntax error here sql_manager.write_table(transformed_raw_brand_exp_df, name = <outputTable>, schema=<outputSchema>, if_exists='replace') ?
[01:54:26] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:54:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:55:19] *** Joins: steam (~steam@user/steam)
[01:55:50] *** Joins: dxrt (~dxrt@user/dxrt)
[01:56:01] *** Quits: gopar (~gopar@199.36.94.212) (Remote host closed the connection)
[01:56:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:57:06] *** Quits: fikran_ (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:57:31] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[01:57:49] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[01:58:03] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:58:12] *** Quits: Strom (strom@fedora/strom) ()
[01:58:18] *** Joins: nomad1 (~nomad@user/spacenomad)
[01:58:38] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:58:47] *** Joins: fikran_ (~fikran@user/fikran)
[01:59:14] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[01:59:19] *** Joins: fanis30 (~anon@adsl-144.176.58.136.tellas.gr)
[01:59:54] *** Joins: Strom (strom@fedora/strom)
[02:00:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:01:44] <CrtxReavr> <outputTable>
[02:02:03] *** Joins: walterwhip (~www@user/walterwhip)
[02:02:15] <CrtxReavr> <outputSchema>
[02:02:19] *** Quits: nomic (~nomic@185.192.69.217) (Quit: Leaving)
[02:02:37] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[02:02:46] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[02:03:02] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[02:03:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:03:46] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[02:04:03] *** Joins: wyclif (~wyclif@user/wyclif)
[02:04:37] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 240 seconds)
[02:04:54] <Saxtheowl> yes it come from a parameter above, I think I find my solution
[02:05:06] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:05:08] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:06:18] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[02:07:39] *** Parts: jdmark (~jdmark@user/jdmark) (Leaving)
[02:07:39] *** Joins: esv (~esv@74.124.178.154)
[02:07:48] *** Joins: rje (~textual@50.35.241.164)
[02:08:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[02:09:00] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:09:05] *** Quits: magla (~gelignite@55d48ba2.access.ecotel.net) (Quit: Stay safe!)
[02:09:35] *** Joins: wyclif (~wyclif@user/wyclif)
[02:09:57] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:11:00] *** Joins: Naan (~naan@user/naan)
[02:13:36] *** Joins: nomad1 (~nomad@user/spacenomad)
[02:13:55] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:01] <bilb_ono> \quit
[02:15:04] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Quit: ERC (IRC client for Emacs 27.2))
[02:15:47] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:02] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[02:20:20] *** Joins: kts_ (~kts@103.73.237.59)
[02:20:20] *** Quits: kts (~kts@103.73.237.187) (Ping timeout: 256 seconds)
[02:22:00] *** Joins: pepper (~pepper@user/pepper)
[02:22:09] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:22:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:22:17] *** Quits: humbertowoody (~humbertow@189.132.111.57) (Ping timeout: 240 seconds)
[02:22:48] *** Joins: somazero (~somazero@2600:8805:b00:10::19b5)
[02:23:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:24:11] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[02:24:20] *** Joins: humbertowoody (~humbertow@189.132.111.57)
[02:24:23] *** Joins: RabidToaster1 (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[02:24:36] *** Joins: Cyp (~cyp@213.237.85.9)
[02:25:17] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[02:25:35] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[02:26:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[02:26:02] *** RabidToaster1 is now known as RabidToaster
[02:26:32] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Remote host closed the connection)
[02:27:01] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[02:27:39] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[02:27:47] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl4880liscxrt2a2h.ipv6.telus.net) (Quit: Leaving)
[02:27:53] *** Quits: Guddu (~Guddu@122.161.81.114) (Read error: Connection reset by peer)
[02:28:35] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:30:13] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[02:31:40] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 250 seconds)
[02:32:49] *** Joins: lavos (~molt@46.33.200.12)
[02:32:49] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:33:19] *** Joins: stonkey (~stonkey@user/stonkey)
[02:33:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:33:32] <crunchy_david> trying to reason about a multiprocessing queue feature assigning and tracking fixed resources. basic problem description here: https://gist.githubusercontent.com/pgguru/a5ed743d4b14e71fbe41ab0ea1b3442f/raw/4ed3b7318a3c2585d8fffff91a1d0c05323abecc/gistfile1.txt
[02:34:32] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:4d36:beb1:772c:20e) (Quit: Konversation terminated!)
[02:35:02] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 240 seconds)
[02:35:29] *** Joins: Macuser (~Macuser@166.sub-174-206-113.myvzw.com)
[02:36:46] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[02:37:33] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[02:37:45] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[02:38:01] *** Joins: zamba (~marius@5.226.162.54)
[02:38:15] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[02:38:26] <sveinse> How do I import the system html module when the current module is called html.py ?
[02:39:25] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[02:39:28] *** Joins: hyperknot (~hyperknot@dynamic-089-204-139-206.89.204.139.pool.telefonica.de)
[02:41:32] <Wulf> sveinse: you could change sys.path before importing
[02:42:00] *** Quits: kts_ (~kts@103.73.237.59) (Quit: Konversation terminated!)
[02:42:22] <sveinse> Wulf: eww, yes, but it has a hairy feel over it
[02:43:59] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:44:16] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[02:44:28] *** Quits: fanis30 (~anon@adsl-144.176.58.136.tellas.gr) (Quit: WeeChat 3.3)
[02:44:41] *** Joins: humberto1 (~humbertow@189.132.111.57)
[02:45:21] <Wulf> sveinse: Create a package. pkg/html.py can then do "import html" and won't import itself.
[02:45:30] *** RoyK^ is now known as RoyK
[02:45:41] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[02:45:43] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:46:42] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-84a1-7a94-9d0b-0877.res6.spectrum.com)
[02:46:55] *** Joins: Fiji- (~Fiji@user/fiji)
[02:46:58] <sveinse> Wulf: ah, yes, I am already in a package, but I was trying to execute it directly (python pkg/html.py). I need to go via the console app. Thanks.
[02:47:42] *** Quits: humbertowoody (~humbertow@189.132.111.57) (Ping timeout: 250 seconds)
[02:48:31] *** Quits: cthulchu (~Cthulchu@208.94.110.98) (Ping timeout: 256 seconds)
[02:48:45] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[02:49:42] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[02:49:58] *** Quits: hyperknot (~hyperknot@dynamic-089-204-139-206.89.204.139.pool.telefonica.de) (Quit: Textual IRC Client: www.textualapp.com)
[02:50:00] *** Joins: vladoski (~foo@2001:b07:add:d406:6153:a55b:8d72:81e6)
[02:50:04] <SnoopJ> sveinse, naming a package after something you want to import is also a little hairy, FWIW
[02:50:17] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[02:50:56] <c4017w> Anyone used PDFSurface in pycairo? I always get MemoryError during `surface.show_page()`: https://bpa.st/Q4TQ
[02:53:31] *** Joins: Terexen (~terexen@user/terexen)
[02:54:07] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[02:55:09] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:55:12] <sveinse> SnoopJ: It didn't when the package was created back in the days. The package used to import cgi to use cgi.escape(), but in py3 this has moved to html.escape() and so the clash. So... I guess a bit of bad luck
[02:55:27] <SnoopJ> hmm
[02:56:07] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:57:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:57:30] <sveinse> I'm maintaing a package that has been running in production since 2010, and I'm porting it to py3
[02:57:33] *** Quits: Macuser (~Macuser@166.sub-174-206-113.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:58:08] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:58:10] *** Joins: Roey (~Roey@user/Roey)
[02:58:27] *** Joins: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net)
[02:59:19] <sveinse> Running it via an entry point console script fixed it
[03:00:05] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[03:00:08] <SnoopJ> I think if you had this conflict in a way you couldn't side-step, you'd probably need importlib machinery, but I don't really know which parts
[03:01:15] *** Quits: andreasbuhr (~quassel@p549dbcc9.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:01:42] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[03:02:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[03:02:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Client Quit)
[03:02:09] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[03:02:25] <SnoopJ> it might end up equivalent to munging sys.path :/
[03:02:34] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[03:02:57] *** Quits: cyphase_ (~cyphase@2600:1700:7800:4680:ad7b:92e1:e5e1:b310) (Ping timeout: 240 seconds)
[03:03:00] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[03:03:01] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[03:03:15] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:03:17] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[03:03:27] <SnoopJ> imp.find_module() lets you specify the path to use, but it's deprecated and I don't know what the importlib equivalent is
[03:03:49] *** Quits: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[03:03:54] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[03:04:06] *** Joins: jay-m1262 (~jay-m@70.39.111.242)
[03:04:10] <SnoopJ> importlib.find_loader() can do the same thing but is *also* deprecated
[03:04:34] <SnoopJ> and its replacement (importlib.util.find_spec) does not let you specify the path
[03:04:54] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:06:12] *** Joins: parv (~quass@user/parv)
[03:06:25] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[03:06:25] *** Quits: hightower2 (~hightower@95.168.116.155) (Read error: Connection reset by peer)
[03:07:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:07:51] <SnoopJ> sveinse, ahh, I think this is how you'd spell it: `importlib.machinery.Pathfinder.find_spec("html", path=sys.path[1:])`
[03:07:55] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:11] <SnoopJ> PathFinder*
[03:08:31] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[03:08:35] *** Joins: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com)
[03:08:43] <SnoopJ> you'd want .loader.load_module() on the resulting ModuleSpec to actually get the module
[03:08:56] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:09:27] *** Quits: cap0ne (cap0ne@user/cap0ne) (Ping timeout: 250 seconds)
[03:11:25] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:12:04] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:12:43] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[03:14:37] *** Quits: corgi_ (~corgi@2620:1b2:c40:3000:8454:8314:51c8:6660) (Ping timeout: 240 seconds)
[03:15:16] *** Joins: cyphase (~cyphase@user/cyphase)
[03:15:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:15:52] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:16:26] *** Joins: corgi (~corgi@2620:1b2:c40:3000:bc85:facb:59f2:257d)
[03:16:26] *** Quits: corgi (~corgi@2620:1b2:c40:3000:bc85:facb:59f2:257d) (Changing host)
[03:16:26] *** Joins: corgi (~corgi@user/corgi)
[03:16:30] *** Joins: cyphase_ (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net)
[03:17:01] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:18:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:19:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[03:19:56] *** Joins: Macuser (~Macuser@100.sub-174-206-99.myvzw.com)
[03:19:57] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[03:20:37] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[03:21:36] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Ping timeout: 245 seconds)
[03:22:04] *** Joins: Warped (~Warped@user/warped)
[03:23:04] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:23:09] *** Parts: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com) ()
[03:24:46] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:28:13] *** Joins: jazzy (~jaziz@user/jaziz)
[03:29:07] *** Joins: KvL (~KvL@user/KvL)
[03:30:02] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 256 seconds)
[03:30:14] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:30:44] *** fikran_ is now known as fikran
[03:32:20] *** Joins: spiderman_ (spiderman@spiderman.shelltalk.net)
[03:33:05] *** Quits: vladoski (~foo@2001:b07:add:d406:6153:a55b:8d72:81e6) (Quit: Textual IRC Client: www.textualapp.com)
[03:33:13] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[03:34:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[03:34:35] *** Joins: bluedust_ (~bluedust@185.195.232.135)
[03:35:11] *** Joins: Devtron (~Devtron@D4708984.rev.sefiber.dk)
[03:35:32] *** Joins: wyclif (~wyclif@user/wyclif)
[03:35:33] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:36:07] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:36:45] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[03:37:32] *** daniel3 is now known as daniel2
[03:37:58] *** Quits: bluedust (~bluedust@59.89.219.209) (Ping timeout: 250 seconds)
[03:38:05] *** Joins: hightower2 (~hightower@212.15.178.116)
[03:39:30] *** Joins: summersault (~summersau@179.221.251.36)
[03:40:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:40:17] *** Quits: ddavis (~user@2600:1702:2790:3ce0:41e1:b662:d596:294e) (Remote host closed the connection)
[03:40:50] *** Joins: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net)
[03:40:55] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[03:41:02] *** Joins: wyclif (~wyclif@user/wyclif)
[03:41:14] *** Joins: KvL (~KvL@user/KvL)
[03:41:15] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Quit: Leaving)
[03:41:31] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:41:55] *** Joins: georgios (~georgios@user/georgios)
[03:41:57] *** Quits: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net) (Client Quit)
[03:44:17] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[03:44:40] *** Quits: KvL (~KvL@user/KvL) (Client Quit)
[03:44:44] *** arjun is now known as ccldarjun
[03:44:51] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:45:14] *** Joins: KvL (~KvL@user/KvL)
[03:45:16] <Roey> ccldarjun: hey you remind me of this guy I know on Youtube who runs this neat channel on Python pogramming
[03:45:28] <Roey> oh, he's Arjan
[03:45:29] *** Quits: Macuser (~Macuser@100.sub-174-206-99.myvzw.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:45:44] <Roey> https://www.youtube.com/watch?v=vRVVyl9uaZc
[03:45:47] *** Joins: Fiji_ (~Fiji@user/fiji)
[03:45:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:45:55] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Client Quit)
[03:46:33] <ccldarjun> wow that looks like a cool channel
[03:46:33] *** Quits: hightower2 (~hightower@212.15.178.116) (Read error: Connection reset by peer)
[03:46:49] *** Joins: wyclif (~wyclif@user/wyclif)
[03:47:13] *** mags_ is now known as mags
[03:48:00] *** nuala3 is now known as nuala
[03:48:03] *** Joins: hightower2 (~hightower@212.15.178.116)
[03:48:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[03:48:26] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:48:49] *** Quits: hightower2 (~hightower@212.15.178.116) (Read error: Connection reset by peer)
[03:49:03] *** Joins: hightower2 (~hightower@95.168.120.83)
[03:49:18] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[03:49:56] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:49:59] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:50:13] *** Joins: summersault (~summersau@179.221.251.36)
[03:51:05] *** Roey is now known as Roey{-
[03:51:30] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[03:51:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:51:48] *** Joins: KvL (~KvL@user/KvL)
[03:52:21] *** Joins: wyclif (~wyclif@user/wyclif)
[03:55:41] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:56:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:57:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:57:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:57:17] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:57:25] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:57:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[03:57:55] *** Joins: wyclif (~wyclif@user/wyclif)
[03:57:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:58:16] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[03:58:36] *** Joins: optimant (~asavage@user/optimant)
[03:58:37] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[03:58:37] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[03:58:37] *** Joins: corgi (~corgi@user/corgi)
[03:58:54] *** Joins: Wulf (~Wulf@user/wulf)
[03:59:32] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:59:55] <zerosum> Hey all, so I have some data that outputs a Temperature and City.. if I wanted to compare which Temperature and City has the highest temp what would be the best way to do this?
[03:59:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[04:00:04] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:00:13] <zerosum> would it be best to create a dictionary, then compare the values?
[04:01:05] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:8572:5509:a339:341e)
[04:01:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:02:14] *** Quits: Helithumper (~Helithump@98.43.136.227) (Quit: ZNC 1.8.2 - https://znc.in)
[04:02:31] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:03:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:03:08] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:03:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[04:03:38] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:03:42] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[04:03:43] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[04:03:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:04:24] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[04:04:46] *** Joins: wyclif (~wyclif@user/wyclif)
[04:04:58] <Repiphany> max/sorted with a key function
[04:05:17] *** Joins: Celelibi (celelibi@user/celelibi)
[04:06:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:07:00] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[04:07:11] *** Joins: Guest42 (~Guest42@host109-146-79-199.range109-146.btcentralplus.com)
[04:08:08] *** Joins: fikran (~fikran@user/fikran)
[04:08:17] *** Joins: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534)
[04:08:38] *** Joins: KvL (~KvL@user/KvL)
[04:08:48] *** Quits: Guest42 (~Guest42@host109-146-79-199.range109-146.btcentralplus.com) (Client Quit)
[04:09:05] *** Quits: grimvar (~grimvar@i5C75FE19.versanet.de) (Ping timeout: 252 seconds)
[04:09:28] *** Quits: corgi (~corgi@user/corgi) (Quit: o_O)
[04:10:48] *** Joins: dulanic (~dulanic@47.187.144.163)
[04:10:51] *** Joins: Helithumper (~Helithump@98.43.136.227)
[04:10:59] *** Joins: grimvar (~grimvar@i5C75FEDD.versanet.de)
[04:12:38] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Quit: Leaving.)
[04:13:37] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[04:14:45] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:15:13] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:15:13] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:15:44] <grym> zerosum: that would be fine
[04:16:23] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:84fa:95e:73a6:3e6d)
[04:16:43] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:16:50] *** Joins: walterwhip (~www@user/walterwhip)
[04:17:25] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[04:17:40] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[04:18:03] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[04:18:08] *** Joins: panella32 (~panella32@154.21.208.160)
[04:18:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[04:18:32] *** Joins: walterwhip (~www@user/walterwhip)
[04:19:31] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[04:19:32] *** Quits: hightower2 (~hightower@95.168.120.83) (Read error: Connection reset by peer)
[04:19:34] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[04:19:36] <dulanic> why would a variable have a value yet if i load it as part of a loop, it is None? im confused...
[04:19:38] <dulanic> https://bpa.st/WMSA
[04:20:06] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[04:20:31] *** Joins: walterwhip (~www@user/walterwhip)
[04:20:43] <grym> dulanic: None is a perfectly normal value
[04:21:01] <grym> there's no such thing as a python name that doesn't have _anything_ assigned to it
[04:21:04] <dulanic> No I know it is,... but it shouldnt be none in this case
[04:21:14] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl488xsxdtjokoqdh.ipv6.telus.net)
[04:21:21] <grym> you set it to None on line 3?
[04:21:23] <bleb> what would be the cleanest way to do this, but go to the else block if an exception is caught? http://ix.io/3M21
[04:21:25] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Client Quit)
[04:21:27] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:21:27] <dulanic> it should be the same as outside of the loop
[04:21:37] <dulanic> sorry ine 3 is me tyuping not the code
[04:21:46] <dulanic> line 1-3 is comments
[04:21:49] <bleb> (the else block is not just a g(), would rather not put it all in a function)
[04:21:54] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[04:22:00] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:22:06] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[04:22:29] <grym> dulanic: well, for at least one element of a, that element's size attribute is None
[04:22:39] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Client Quit)
[04:22:42] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[04:23:09] <nedbat> dulanic: print out more values
[04:23:21] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[04:23:36] <grym> print out all of x, for example
[04:23:39] <dulanic> There is no more values
[04:23:45] <dulanic> its just [0]
[04:23:49] <dulanic> in thise case at least
[04:23:50] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Remote host closed the connection)
[04:24:12] <nedbat> bleb: you can use a boolean to decide to call g
[04:24:13] *** Quits: peteyboy_ (~peteyboy1@95.169.232.161) (Client Quit)
[04:24:15] <sveinse> When a package depends on a package, say mysqlclient, can it use the globally installed package and not download it from pypi?
[04:24:27] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[04:24:31] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:24:32] <grym> sveinse: yes, but it can get annoying
[04:24:38] <grym> venv --system-site-packages
[04:24:38] <bleb> what about asserting that x is true such that it raises an exception if false?
[04:24:43] <bleb> then use try/except/else?
[04:24:48] *** Quits: Common (~Common@user/common) (Quit: Leaving)
[04:24:57] *** Joins: panella32_ (~panella32@79.110.55.23)
[04:25:07] <nedbat> bleb: no, i don't like that
[04:25:07] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:25:43] <sveinse> grym: That worked, thanks
[04:26:03] <bleb> how bout just a label before g() then goto label in the except block
[04:26:06] <nedbat> bleb: i would do "ran_f = False" at the top, then "ran_f = True" after f(), then "if not ran_f: g()"
[04:26:07] <bleb> oh wait
[04:26:08] <dulanic> x.media[0].parts[0].size = 3272268008
[04:26:11] <nedbat> no labels
[04:26:33] <dulanic> and there is only media[0] no other iterations... same with parts...
[04:26:35] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Client Quit)
[04:26:38] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[04:26:48] *** Joins: OPK (~OPK@user/opk)
[04:26:50] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[04:27:02] <nedbat> dulanic: can you pastebin the whole program?
[04:27:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:27:46] <dulanic> https://bpa.st/2CQA
[04:28:11] <dulanic> its not much more, its just testing program, the full script is much longer, but thats drilled down to the issue
[04:28:23] <sveinse> grym: for the record, I strongly prefer doing stuff in isolated venvs, but some packages that require a lot to build and are sometimes easier to fetch from the distro's package. Especially when running in docker, so it's already containerized
[04:28:40] *** Quits: panella32 (~panella32@154.21.208.160) (Ping timeout: 250 seconds)
[04:28:45] <nedbat> dulanic: why can't size be None? How do you know?
[04:28:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:29:39] <dulanic> because a[0].media[0].parts[0].size  = 3272268008 and x.media[0].parts[0].size = 3272268008 so why would part.size = None?
[04:29:55] <nedbat> dulanic: how do you know those things? Where here did you print them out?
[04:30:02] <dulanic> VSCode
[04:30:19] <dulanic> https://irc.dulanic.com/uploads/1ae94b19c4dc4861/image.png
[04:30:27] <nedbat> dulanic: and why are you only showing [0]? Are there other elements?
[04:30:33] <grym> sveinse: gotcha
[04:30:46] <dulanic> In this case no, just 0
[04:30:57] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:31:08] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Client Quit)
[04:31:16] *** Quits: panella32_ (~panella32@79.110.55.23) (Ping timeout: 250 seconds)
[04:31:32] *** Joins: semeion (~semeion@user/semeion)
[04:31:36] <Repiphany> dulanic: Why not change line 12 to `print(i.size)`
[04:31:59] *** Joins: nomad1 (~nomad@user/spacenomad)
[04:32:41] <bleb> nedbat: I ended up checking for a state change that f() is supposed to accomplish
[04:32:53] <bleb> thanks for the help
[04:33:02] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[04:33:23] <nedbat> bleb: i like that solution
[04:33:26] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[04:35:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[04:36:11] *** Quits: jay-m1262 (~jay-m@70.39.111.242) (Ping timeout: 256 seconds)
[04:36:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:36:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[04:36:37] <sveinse> If I'm looking for another sql db than mysql, what exists that have good python integration? postresql? mariadb?
[04:36:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:37:23] <InPhase> sqlite3
[04:37:45] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[04:38:06] <grym> ^^
[04:38:23] <grym> postgres gets a lot of love
[04:38:39] <sveinse> Yeah, I need a db which can act as a service on the network. I don't belive sqlite3 can do that, can it? It's a file, right?
[04:39:01] <grym> it probably can! but it'll be poo-poohd
[04:39:06] *** Joins: KvL (~KvL@user/KvL)
[04:39:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:39:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:39:47] *** Joins: panella32 (~panella32@37.19.197.62)
[04:39:57] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[04:39:58] <sveinse> hahah, SW references :D. Just saw that movie with my kid (that has now gained interest for Star Wars)
[04:40:05] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:40:13] <grym> sqlite.org runs on sqlite
[04:40:17] <grym> but that's to be expeted
[04:40:53] <grym> but if you've got lots of clients talking to the same server, my totally uneducated opinion is that postgres is a better fit for rdbms
[04:41:20] <Ashburry> I have an error:
[04:41:30] <Ashburry> scripts/trio_ircproxy/socket_data.py:11: error: Cannot find implementation or
[04:41:30] <Ashburry> library stub for module named "ircproxy_proxyscript"
[04:41:30] <sveinse> heh, I need an odbc-driver for it as well, but I didn't plan on bothering this channel with that :D
[04:41:33] *** Quits: delvian (~delvian@41.13.228.73) (Quit: Leaving)
[04:41:41] *** Joins: cheater (~Username@user/cheater)
[04:41:57] *** Quits: Fiji_ (~Fiji@user/fiji) (Quit: Leaving)
[04:41:59] <Ashburry> All it contains is:
[04:41:59] <Ashburry> trio_ircproxy = importlib.import_module("trio-ircproxy")
[04:42:10] <Ashburry> thats all
[04:42:25] <Ashburry> trying to avoid circular import
[04:42:42] *** Quits: parv (~quass@user/parv) (Quit: parv)
[04:42:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:42:59] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[04:43:16] <Ashburry> How do I make a library stub or implementation?
[04:43:38] <Ashburry> do I need an Type for trio_ircproxy variable?
[04:44:16] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[04:44:42] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[04:45:25] *** Joins: rd (~rd@pool-108-54-98-204.nycmny.fios.verizon.net)
[04:45:59] *** Quits: rd (~rd@pool-108-54-98-204.nycmny.fios.verizon.net) (Client Quit)
[04:46:05] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[04:46:23] *** Joins: arinov (~arinov@213.194.126.155)
[04:46:26] *** Quits: panella32 (~panella32@37.19.197.62) (Ping timeout: 250 seconds)
[04:47:20] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:48:11] *** Joins: frost (~frost@user/frost)
[04:48:39] <Ashburry> nm, fixed it with from . import ircproxy_proxyscript
[04:49:02] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 250 seconds)
[04:49:18] <toma> [python 3.8.10, turtle, linux mint 20.3] Trying to make my way through Think Python 2e which uses turtle. Read that turtle was actually in the standard library but got a "ModuleNotFoundError" (https://bpa.st/LAZQ). Tried a pip install turtle got an error (https://bpa.st/7YQQ). Any tips?
[04:50:16] *** Joins: humberto1 (~humbertow@189.132.111.57)
[04:50:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[04:51:13] <Repiphany> toma: Probably need to install python3-tkinter or whatever with mint's package manager
[04:51:25] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[04:51:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:51:49] <toma> Repiphany: Thanks. Trying that as I type this.
[04:51:50] <Ashburry> toma, did you create an module named turtle that is shadowing the std library turtle?
[04:52:18] <grym> toma: ^ yeah, did you create turtle.py
[04:52:19] <toma> Ashburry: Nope just in the interpreter importing turtle.
[04:52:28] <grym> gotcha
[04:52:33] <grym> probably tkinter then
[04:53:22] <toma> Just to confirm that I didn't make a mistake. type(turle) = NameError: name 'turtle' is not defined
[04:53:42] <grym> toma: 'turle' is not 'turtle'
[04:53:44] *** Joins: Guest88 (~Guest88@bras-base-kntaon1614w-grc-38-76-71-23-60.dsl.bell.ca)
[04:53:52] <grym> toma: does python -c "import turtle" work ?
[04:53:55] <grym> (from a command line)
[04:53:56] <toma> yea. I typed that by mistake but the NameEorr is right.
[04:54:05] <grym> (did you import turtle?)
[04:54:10] <grym> (you need to)
[04:54:40] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[04:54:45] <toma> the python -c "import turtle" gives me the same No module 'tkinter'
[04:55:12] <toma> Installing python3-tkinter didn't work either.
[04:55:17] <grym> ok, then i agree, you need to install tkinter for py3, whatever your OS calls that
[04:55:41] <Ashburry> are you using Python 3 or Python 2, check it?
[04:55:46] <toma> Python 3.8
[04:56:26] <Ashburry> try pip install tkinter
[04:56:34] <toma> I should mention I did a "sudo apt-get install python-tk" maybe I should have done python3-tkinter. trying once more.
[04:57:12] <toma> pip install tkinter = No matching distribution found for tkinter.
[04:57:26] <Guest88> I'm trying to setup my python environment.  I have an M1 mac pro.  I setup pyenv with brew etc.. then install 3.10.1.  After install I use "python -m test".  It segfaults every time at test_dbm_ndbm.  I'm hoping this is normal for my setup.
[04:57:33] <grym> toma: pip doesn't apply here
[04:57:43] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:c145:c095:bf17:f117) (Quit: Textual IRC Client: www.textualapp.com)
[04:58:54] <Guest88> if I comment "def test_context_manager(self):" and "def test_bytes(self):" then the rest of test_dbm_ndbm works passes.
[04:59:00] <grym> toma: your distro package manager should have a search command; search for python3 tkinter
[04:59:27] <toma> cool. got it working. "sudo apt-get install python3-tk" seemed to resolve the issue.
[04:59:39] <grym> toma: (assuming the python you're running now is one that was installed by your distro package manager)
[04:59:40] <toma> thanks all.
[04:59:45] <grym> cheers
[04:59:48] <grym> turtle's great
[05:00:01] <toma> I don't know how python got installed but maybe that's a problem for another day?
[05:00:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:00:12] <grym> probably
[05:00:53] <Repiphany> Lots of default system python installations don't include everything in the standard library for dumb reasons
[05:00:54] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::6)
[05:01:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:01:26] <toma> Repiphany: Is there a command that gets it all installed?
[05:01:31] *** Joins: nomad1 (~nomad@user/spacenomad)
[05:01:48] <grym> toma: building your own :)
[05:01:51] <toma> Thanks all the Python Graphics Window popped up when I used the sample code in the book.
[05:01:56] <grym> nice.
[05:02:07] *** Joins: hightower2 (~hightower@95.168.116.2)
[05:02:15] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:03:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Quit: RabidToaster)
[05:03:22] <Ashburry> I have a module that uses Types from the main module how do I avoid circular imports?
[05:03:41] <retrosenator> you cant
[05:03:57] <retrosenator> i mean
[05:03:59] <retrosenator> use "from"
[05:04:25] <Ashburry> I have from . import ircproxy_proxyscript
[05:04:34] *** Joins: Guest31 (~Guest31@118.251.154.19)
[05:04:52] <Ashburry> okay, I'll try it with the other side of the import
[05:04:58] <grym> Ashburry: if you have A and B, and A imports from B and B imports from A, perhaps you could have a new module C from which A and B both only import
[05:05:11] *** Quits: donutfarian (~donutfari@2601:140:9180:5e40:88df:7fd3:8fca:5534) (Remote host closed the connection)
[05:05:56] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[05:06:05] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[05:06:15] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:06:25] <Ashburry> okay..
[05:06:41] <retrosenator> using from
[05:06:43] *** Quits: Guest31 (~Guest31@118.251.154.19) (Quit: Client closed)
[05:06:47] <retrosenator> or put the class in a different file
[05:07:14] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[05:08:26] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:10:14] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:10:14] *** Quits: hightower2 (~hightower@95.168.116.2) (Read error: Connection reset by peer)
[05:11:04] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[05:11:19] *** Quits: nicode (~nic@2607:f2c0:9463:7d00:73e7:4f8b:71a7:581f) (Ping timeout: 268 seconds)
[05:11:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:12:00] *** Joins: donutfarian (~donutfari@69.250.8.192)
[05:12:14] <Guest88> I guess my issue is similar to https://bugs.python.org/issue45289 except that test_dbm works for me.
[05:13:07] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:13:25] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:13:48] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[05:14:04] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:14:49] *** Joins: hightower2 (~hightower@95.168.116.4)
[05:15:55] <Guest88> any suggestions for how I could add info to this isssue? or do I create a new account on the python bug tracker and try to submit my info.
[05:16:05] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:17:26] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:20:23] *** Joins: gopar (~gopar@199.36.94.212)
[05:22:34] *** Quits: hightower2 (~hightower@95.168.116.4) (Read error: Connection reset by peer)
[05:24:43] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[05:25:31] *** Joins: nomic (~nomic@185.192.69.217)
[05:25:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:26:17] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488xsxdtjokoqdh.ipv6.telus.net) (Quit: Leaving)
[05:26:37] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[05:27:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:27:53] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[05:27:54] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 256 seconds)
[05:28:24] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[05:28:27] *** Joins: KvL (~KvL@user/KvL)
[05:30:47] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:30:50] *** Joins: semeion (~semeion@user/semeion)
[05:31:00] *** Joins: mickey8 (~user@user/mickey)
[05:33:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:34:43] *** Joins: hylisper (~yaaic@user/hylisper)
[05:36:04] *** Quits: gopar (~gopar@199.36.94.212) ()
[05:36:06] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:36:15] *** Quits: {4144} (~{4144}@46.56.70.224) (Ping timeout: 256 seconds)
[05:38:52] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 250 seconds)
[05:39:04] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:39:18] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 250 seconds)
[05:39:21] *** Joins: Guest65 (~Guest65@116.92.203.182)
[05:39:43] *** Quits: Guest65 (~Guest65@116.92.203.182) (Client Quit)
[05:40:35] *** Joins: hightower2 (~hightower@95.168.116.4)
[05:40:49] *** Joins: KvL (~KvL@user/KvL)
[05:41:34] *** Joins: califax- (~califax@user/califx)
[05:41:45] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[05:42:02] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:42:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::6) (Ping timeout: 240 seconds)
[05:43:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[05:44:09] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:44:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:44:32] *** Quits: bluedust_ (~bluedust@185.195.232.135) (Remote host closed the connection)
[05:44:48] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:44:49] *** califax- is now known as califax
[05:45:28] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:45:28] *** brabrax_ is now known as brabrax
[05:46:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:48:12] <causasui> why does the first logging message in this small script (a) do nothing (that I can determine) and (b) prevent logging from working thereafter? https://paste.rs/EUk
[05:49:36] *** Joins: {4144} (~{4144}@46.56.69.241)
[05:49:41] <Ashburry> You need a / for multiline code
[05:50:05] *** Quits: hightower2 (~hightower@95.168.116.4) (Read error: Connection reset by peer)
[05:50:14] <Ashburry> also I am not sure but you may need just one set of quotes
[05:50:15] <nedbat> causasui: it seems odd to log a message before configuring logging, but i don't know why it would stop everything.
[05:50:23] <nedbat> Ashburry: you don't need \ if it's in parens
[05:50:43] <nedbat> causasui: i guess the log message does an implicit config?
[05:51:23] <causasui> nedbat: yeah, definitely an error by a python beginner, but I find myself at a loss explaining why it behaves like it does
[05:51:52] <causasui> intuitively I would expect either an exception or at worst the rest of it would work as if the first message had been removed / commented
[05:52:14] <causasui> bizarre pit trap for a beginner
[05:53:53] *** Quits: f__ (~f@2607:f598:bbda:20:4fe8:26c5:979b:b609) (Remote host closed the connection)
[05:53:54] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[05:54:10] *** Joins: f__ (~f@2607:f598:bbda:20:ecf2:181b:3e9c:546b)
[05:54:14] <nedbat> causasui: yes. follow the logging how-to in the docs
[05:55:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:55:57] *** Quits: Helithumper (~Helithump@98.43.136.227) (Read error: Connection reset by peer)
[05:57:22] *** Quits: f__ (~f@2607:f598:bbda:20:ecf2:181b:3e9c:546b) (Remote host closed the connection)
[05:57:25] <causasui> alright. seems like the user experience could be better though :( but I don't know how I would go about improving it
[05:57:36] <causasui> thanks for the feedback anyway
[05:57:43] <BrenBarn> your code doesn't use the StreamHandler that you defined
[05:57:46] <BrenBarn> so you may be getting confused
[05:58:04] <causasui> it's not my code, but this is a stripped down repro of what I got from a friend
[05:58:46] <causasui> doubtless there are more mistakes than just the logging before configuring. but I feel like the way this behaves could be better in spite of the user error
[05:59:28] <BrenBarn> I mean, maybe
[05:59:35] *** queue is now known as queue-
[05:59:41] <BrenBarn> but maybe also you need to read the docs and do it the way it says, and doing something else can lead to undefined behavior
[05:59:42] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[05:59:42] *** Joins: queue- (~nerd@user/queue/x-7267619)
[06:00:07] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:31] <BrenBarn> the behavior is actually documented
[06:00:34] <BrenBarn> > Does basic configuration for the logging system by creating a StreamHandler with a default Formatter and adding it to the root logger. The functions debug(), info(), warning(), error() and critical() will call basicConfig() automatically if no handlers are defined for the root logger.
[06:00:34] <BrenBarn> > This function does nothing if the root logger already has handlers configured, unless the keyword argument force is set to True.
[06:01:14] <BrenBarn> so it says that if you call a logging method like .info(), it will auto-call basicConfig, which will configure the logger, and then it also says that if the logger is already configured, calling basicConfig will do nothing
[06:01:36] <causasui> you keep saying that word "you"
[06:01:45] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[06:01:49] <grym> the universal you
[06:01:54] *** Joins: moog_ (~moog@107.77.244.71)
[06:02:02] *** Joins: notevil (~notevil@user/notevil)
[06:02:29] <causasui> anyway, it's kind of an abstract philosophical gripe I guess and python is a lot more than just what it is to me
[06:03:10] *** Joins: mgedmin (~mg@user/mgedmin)
[06:03:40] *** Quits: runelind (~runelind@user/runelind) (Read error: Connection reset by peer)
[06:03:47] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[06:03:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:04:01] *** Quits: moog (~moog@107.77.244.71) (Ping timeout: 256 seconds)
[06:04:02] *** Quits: ayaka_ (~randy@192.147.44.15) (Quit: Leaving)
[06:04:43] <BrenBarn> look man, "you" are the one who asked the question so I'm talking to you
[06:04:59] <BrenBarn> if it's not your code that's fine, but if you want people to talk to your friend instead then tell you friend to come here and ask
[06:05:11] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:05:28] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[06:05:30] <causasui> it's not important. let's say it is my code. I have a vague feeling that there is an opportunity somewhere in here to improve the module, but that's all I've got
[06:05:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:05:37] *** Joins: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f)
[06:05:52] <BrenBarn> there's little doubt it could be improved
[06:06:10] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 250 seconds)
[06:06:18] <causasui> ok then, we agree about at least one thing :)
[06:06:28] <BrenBarn> I feel like there was a discussion about it on python-ideas at some point
[06:06:31] *** Joins: runelind (~runelind@user/runelind)
[06:06:49] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:07:36] <causasui> any suggestion for how I might run that down and find out where it went?
[06:08:12] *** Joins: KvL (~KvL@user/KvL)
[06:08:15] *** Joins: bluedust (~bluedust@185.195.232.135)
[06:08:22] *** foxbox is now known as tildebot|||
[06:08:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:09:33] <Ashburry> Your branch is behind 'origin/working' by 5 commits, and can be fast-forwarded.
[06:09:33] <Ashburry>   (use "git pull" to update your local branch)
[06:09:44] <Ashburry> How do I fix this?
[06:09:56] <Ashburry> git pull origin master does nothing
[06:10:04] <grym> Ashburry: that's not a python question, and git tells you waht to do
[06:10:08] *** Quits: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f) (Client Quit)
[06:10:15] <causasui> Ashburry: try in #git maybe
[06:10:19] <grym> (but i suspect git pull origin working will help you more)
[06:10:39] *** Joins: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f)
[06:10:41] <grym> or just git pull, if your remotes are tracking properly
[06:10:54] <Ashburry> okay.. ty
[06:11:52] *** tildebot||| is now known as foxbox
[06:15:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:15:44] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[06:16:36] <aphysically> jinsun_: guess what
[06:16:58] <aphysically> jinsun_: https://github.com/microsoft/pyright/commit/d74b89a758011af0cb655fdfbe5a0ada6dd8dc1a
[06:17:26] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[06:17:29] *** Joins: fikran (~fikran@user/fikran)
[06:18:11] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:18:39] *** Joins: matsaman (~matsaman@user/matsaman)
[06:19:10] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[06:20:06] *** Joins: mdemo (~mdemo@user/mdemo22)
[06:22:54] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:23:06] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[06:23:11] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[06:23:23] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[06:23:50] <Elliria> Hey there. The Tkinter script I put on the https://pastebin.com/ndQeBw9c page is working. The script I put on the
[06:23:53] <Elliria> https://pastebin.com/buxDxV49 page is not working. It keeps giving me an error about cb1 not being defined no matter where I put the function. I also tried using lambda in the function call, but my lambda foo isn't very good and I got the same not defined error. Anybody have any idea where I've gone wrong with the function?
[06:23:59] *** Quits: xecycle (~user@222.64.179.77) (Remote host closed the connection)
[06:25:24] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:95ef:efc6:6e5:5817)
[06:26:21] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:26:52] *** Quits: Lightsword (~Lightswor@user/lightsword) (Quit: ZNC)
[06:27:55] *** Joins: Lightsword (~Lightswor@user/lightsword)
[06:27:55] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[06:28:23] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:28:26] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[06:28:48] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:29:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:29:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:29:43] <Repiphany> `command=checkState(cb1)` isn't providing the check button with a callback
[06:30:00] <Repiphany> It's trying to call the function checkState with cb1 as a target before cb1 has even been defined
[06:30:17] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:95ef:efc6:6e5:5817) (Ping timeout: 240 seconds)
[06:30:39] <Elliria> Yeah, that's completely confusing for me since the same function works fine in the first script without the variable.
[06:31:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:31:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::6)
[06:31:39] <Repiphany> It "works" before the checkState function looks up `cb` globally
[06:31:57] *** Quits: donutfarian (~donutfari@69.250.8.192) (Quit: Leaving)
[06:32:01] <Repiphany> If you changed line 16 to be called something else, it wouldn't work
[06:32:37] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[06:32:38] <Elliria> True.
[06:32:57] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:922e:3972:ca9c:a6cf)
[06:33:40] *** Joins: jinsun (~quassel@user/jinsun)
[06:34:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:34:54] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[06:37:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com)
[06:38:50] *** Quits: Guest88 (~Guest88@bras-base-kntaon1614w-grc-38-76-71-23-60.dsl.bell.ca) (Quit: Client closed)
[06:40:16] *** Joins: ketiv (~ketiv@92.40.194.149.threembb.co.uk)
[06:40:19] <Ashburry> Elliria, you have checkState(cb1) where cb1 is not defined
[06:40:20] <Repiphany> Elliria: You can use lambda in your code by changing it to `command = lambda : checkState(cb1)`
[06:40:55] <Repiphany> So the lambda is a function that takes no arguments and is called when the checkbutton is toggled or whatever
[06:41:07] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[06:41:33] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:41:36] <Elliria> Oh, my goodness, you've done it. I've been wrestling with this for hours.
[06:41:59] <matsaman> Elliria: good endurance
[06:42:17] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[06:42:22] <Elliria> I had written my lambda attempt wrong. My attempt was command=lambda cb1=cb1:checkState(cb1) and that was also giving me a not defined error.
[06:42:37] <Elliria> I'm going to have to study lambda.
[06:42:48] <Elliria> Heh on the endurance.
[06:43:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[06:43:38] *** Joins: millido (~millido@84.210.150.128)
[06:43:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:43:47] <Repiphany> It's equivalent to doing `def f(): checkState(cb1)` then `... command = f)`
[06:43:49] <Elliria> Should my first "working" example also use lambda as good practice in such a case?
[06:43:57] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[06:44:09] <grym> Elliria: i prefer writing normal functions in most cases
[06:44:18] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 250 seconds)
[06:44:32] <grym> i make exceptions for things like sorted()'s key= argument
[06:44:43] <Elliria> Thank you so much for explaining it. I'm taking notes and will definitely be putting this into my head for the future.
[06:44:54] <Repiphany> I might even prefer using functools.partial to make a callback out of another existing function as in your example
[06:45:04] <Elliria> grym: Was the one I wrote not a normal one?
[06:45:19] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[06:45:26] <Elliria> Oh, you just lost me, Repiphany. I've never even heard of functools.partial.
[06:45:28] <grym> Elliria: a normal function starts with `def funcname(argument):`
[06:45:31] <Repiphany> "normal function" as in one with an explicit `def` instead of an anonymous lambda
[06:45:56] <grym> instead of `funcname = lambda argument: ... `
[06:46:15] <Elliria> Wasn't 'def checkState(target):' like that?
[06:46:23] <Repiphany> Doing `funcname = lambda ...` is already defeating the point of anonymous function
[06:46:34] *** Joins: KvL (~KvL@user/KvL)
[06:46:42] <grym> Elliria: it was.  but we were talking about lambdas just now
[06:46:46] <Elliria> Ah, yeah, I wasn't having any luck with that. That lambda, however, worked perfectly.
[06:46:48] <Repiphany> `def checkState(target):` can't be used as a callback for your checkbox because it requires an argument
[06:46:57] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[06:47:14] *** Joins: nicode (~nic@2607:f2c0:946d:3800:72c3:6283:a9c2:9e2f)
[06:47:14] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:47:22] <Elliria> Yeah, and the argument I gave it was part of the object I put it into, which didn't work.
[06:47:26] *** Joins: Guest31 (~Guest31@118.251.154.19)
[06:47:27] <grym> lambdas in callbacks might make sense
[06:47:33] <Repiphany> The ways around that are like we've been discussing; using a lambda, explicitly writing a `def f()` which takes no arguments
[06:47:50] <SnoopJ> Elliria, functools.partial eats a function and some arguments and returns a new function that "plugs in" the arguments you "partially applied"
[06:48:01] <Repiphany> functools.partial is similar in that it takes an existing function, and you provide some or all of the ...
[06:48:01] <grym> and it's nice :)
[06:48:08] <Elliria> Could you even write a def f() that takes no arguments if the need was to write one function that could handle several checkbuttons and provide their individual states?
[06:48:12] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[06:48:26] <SnoopJ> you can write functions that take no arguments, if that's the question
[06:48:50] <Elliria> Oh, my. That sounds complicated. I'm going to have to look into that, but it sounds like it would be hard to wrap your head around something like that.
[06:49:03] <SnoopJ> why's that?
[06:49:18] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[06:49:24] <Repiphany> You'd need to define as many functions to handle each of the checkboxes individually
[06:49:26] *** Joins: lethu (~lethu@user/lethu)
[06:49:34] <Elliria> Yeah, the problem was that I wanted to hand the function the name of each of the checkbutton objects so that each one could get tested in turn. Otherwise, I'd need to write separate testing statements for each one.
[06:50:08] <Repiphany> But the point of the lambda/functools.partial is that you can reuse the already existing function by providing the target checkbox as an argument in each case
[06:50:15] <Elliria> I'm a very linear thinker and something that eats a function and then returns a new function sounds very exotic.
[06:50:35] <Elliria> Yes, that works perfectly and is very elegant.
[06:50:47] <grym> Elliria: not really; remember function composition from high school?
[06:51:02] <SnoopJ> it's the tool that fits your task the best here, and it's worth knowing about (it's one of Python's core features, actually)
[06:51:03] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[06:51:04] <Repiphany> Elliria: https://en.wikipedia.org/wiki/Closure_(computer_programming)#Anonymous_functions
[06:51:15] <Elliria> No. They never taught us that. <--- old dog
[06:51:19] <grym> f(g(x))
[06:51:21] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[06:51:44] <Elliria> Oh. Like algebra.
[06:51:46] *** Quits: Guest31 (~Guest31@118.251.154.19) (Client Quit)
[06:51:46] <grym> yes
[06:51:53] <Elliria> Okay, that's not so bad.
[06:51:56] <SnoopJ> Elliria, if you can wrap your head around the idea that a function can return a function, it's not that bad, no
[06:51:56] <grym> partial appliction isn't the same, but there are some similarities
[06:52:23] <Elliria> Okay, that's also not rough, SnoopJ. Maybe this isn't as complicated as it seemed.
[06:52:35] <grym> the usual first reaction is "wat?!"
[06:52:46] <grym> but then also "oh.  ok, that's not as complicated.." :)
[06:52:51] <SnoopJ> Elliria, what you want here is a function that makes the actual callback function. Sometimes this is called a "function factory"
[06:53:07] <Elliria> Heh. Oh, my.
[06:53:09] <BrenBarn> causasui, belated, here is the thread: https://mail.python.org/archives/list/python-ideas@python.org/thread/BK6P32YAUZ2D763LJXKI6WNVUNHQIBKH/
[06:53:10] <SnoopJ> functools.partial() is basically function-factory-in-a-can :)
[06:53:31] <BrenBarn> unfortunately it seems like what happened is Guido said "just use a third-party logging lib" which I think is kind of a cop-out to be honest
[06:53:32] <Elliria> Oh, I have got to mess around with some of those.
[06:53:33] <SnoopJ> when the "factory" part is "here's a function and all or part of the arguments I want to call it with"
[06:54:08] <Elliria> That may come in handy when I've got hundreds of checkbuttons.
[06:54:42] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[06:54:52] *** Quits: matari1 (~matari@2603-8000-e240-2bc2-504c-e2e5-31d0-f3cf.res6.spectrum.com) (Read error: Connection reset by peer)
[06:54:53] *** Quits: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f) (Quit: WeeChat 3.4)
[06:55:00] <grym> BrenBarn: but, think of the possibilities for smtp notifications!
[06:55:10] *** Quits: thorbw (~tw@46.230.130.50) (Ping timeout: 256 seconds)
[06:55:12] <Elliria> My rather simple goal here is to create a grocery list that I can just check boxes in. Then there will be a regular button (not a checkbutton) at the bottom that will check the state of all the checkbuttons and only print out the list of checked ones.
[06:55:57] <SnoopJ> Elliria, I think you can do what you were aiming for here with a straightforward change to your existing code: https://bpa.st/SYYA
[06:56:17] <Repiphany> Next thing you could try is to write a function that produces and returns checkbuttons, so you don't have to deal with cb1 = ..., cb2 = ...
[06:56:26] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[06:56:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:57:53] <SnoopJ> Elliria, oh, perhaps not quite, since lines 16, 17 are trying to refer to cb1 before it's been built
[06:58:00] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 256 seconds)
[06:58:00] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[06:58:12] *** Joins: stblaha (~stblaha@user/stblaha)
[06:59:27] *** Ellenor is now known as Reinhilde
[06:59:28] <Elliria> Interesting. That one doesn't print anything out for me. Do I still use a lambda to call it or do I call it another way?
[06:59:36] *** Joins: Xano (~Xano@2a00:23c4:4204:700:e0df:a8cd:f1b:4d86)
[06:59:50] <MacGyver> As an architectural note, rather than run through all checkbuttons checking their state, you could have callbacks on the checkbuttons themselves to add and remove the appropriate ones to a set (assuming no duplicates) and just print the set at the end.
[07:00:18] <SnoopJ> Elliria, I was looking at your checkState(cb1) etc. and imagined a function that would do what it was expressing...if cb1 was already defined, which it isn't here.
[07:00:38] <Elliria> Yeah, I've been thinking about that, Repiphany, with some sort of loop and an ordinary numbering scheme that I'd want to up to multiple digits instead of one like I've got now.
[07:00:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[07:00:47] <MacGyver> Such a callback would also probably be one defined function, and then instantiated using functools.partial with the checkboxes text value.
[07:02:06] <Elliria> Interesting, MacGyver. I'd have to do a bit of learning to do that one. I know that you can assign a variable to a checkbutton and then change it and read it later, but even accessing those can be a bit tricky with checkbuttons for some reason.
[07:02:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:03:00] <Elliria> These states seem to be built in on the ttk checkbuttons. If you do Tk checkbuttons, they behave differently and you have to use IntVar().get() or BooleanVar().get() to get at their states.
[07:03:35] <Elliria> This stuff can pretzel the brains of some of us more fainthearted coders. I'm still very much a Python n00b.
[07:03:40] *** Quits: ketiv (~ketiv@92.40.194.149.threembb.co.uk) (Ping timeout: 256 seconds)
[07:04:18] <SnoopJ> As someone in the local user's group says, "we're all beginners, some of us have just been doing it longer"
[07:04:32] <Elliria> Heh.
[07:04:45] <MacGyver> Oh the concepts discussed in the last 20 minutes always pretzel the brains of smart people first encountering functional programming.
[07:04:53] <MacGyver> Don't worry about it :P
[07:05:00] <Ashburry> me too, thats why I don't bother with gui interface code. Just html on pythonanywhere.com
[07:05:15] <SnoopJ> MacGyver, a testament to the write-only nature of functional solutions :)
[07:05:17] <Elliria> Ah, I just reread what you wrote, MacGyver. So kind of like using a dictionary and just changing its values and then reading the dictionary at the end and only printing out ones that match the selected value?
[07:05:27] *** Joins: bloody_ (~bloody@user/bloody)
[07:05:45] *** Joins: ketiv (~ketiv@92.40.170.55.threembb.co.uk)
[07:05:58] <Elliria> I'm a sucker for anything that toggles, though, so I can't resist messing with Tkinter. It offers so many ways to make things visually happen that it's positively delicious.
[07:05:59] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:06:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[07:06:22] <Elliria> I just discovered how to style buttons so that they react to hovering, clicking, etc., and oh, my, what fun.
[07:06:25] <SnoopJ> being able to build something that offers that kind of visual feedback can be really rewarding
[07:06:57] <Elliria> Yeah. Even watching this script come to life with Repiphany's fix was magical after hours of getting that blasted error.
[07:07:12] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:07:21] <MacGyver> Elliria: Not exactly, more like, when you toggle a checkbox, its callback function checks whether it is now on, then it adds whatever value is associated with that checkbox to a set; if it is off, it *removes* whatever value is associated with that checkbox to a set.
[07:07:36] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:36] <grym> hey i added a progress bar to my cli tool today and ran it like 5 times just to see it go brrrrrrrr
[07:07:40] <MacGyver> Elliria: So in the end the set would only have the values of those that are toggled on.
[07:07:42] <grym> same deal
[07:08:05] <Elliria> Ah, okay, I would like that as long as the set items would always be in the same position since this would be an alphabetical list.
[07:08:15] <MacGyver> Elliria: But I was mainly using it as another example of how you would write *one* function to do this, and then instantiate it for each individual checkbox using functools.partial to pass it the appropriate value.
[07:08:20] <Elliria> Although I suppose sorting is elementary regardless.
[07:08:46] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[07:09:03] <Elliria> Yes, I totally know the feeling, grym!
[07:09:20] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 256 seconds)
[07:09:31] *** Joins: humberto1 (~humbertow@189.132.111.57)
[07:09:58] <Ashburry> I never understood how progress bars work.
[07:10:07] <Elliria> You also have to wonder what the neighbors think, because after a long battle, if you finally figure it out (which I sometimes do), you generally let out a loud happy whoop.
[07:10:17] <grym> Ashburry: well, you install tqdm and then forget about it
[07:10:19] <grym> :D
[07:10:29] <TML-prv> Ashburry: Most of them are more-or-less random
[07:10:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:10:48] <matsaman> ^
[07:11:02] <matsaman> why most have given up and just been replaced with spinners
[07:11:16] <matsaman> "we think stuff is happening"
[07:11:38] <SnoopJ> "Lies, damned lies, and statistics"
[07:11:56] <MacGyver> Honestly spinners are more useful than progress bars.
[07:12:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:12:17] <Elliria> I like them both. The more, the merrier.
[07:12:25] <matsaman> I mean, since they tend to convey no information, and since most progress bars are terrible, spinners do tend to be less wrong =P
[07:12:34] <Elliria> Heh.
[07:12:37] * SnoopJ likes having information on progress (including whether there *is* any at all) and total duration
[07:12:48] <MacGyver> Ever tried telling the difference between a program hang and a progress bar step just taking an infinity and a half?
[07:12:51] <grym> i always fret a little that i'm cluttering up stdout
[07:12:57] <grym> but that matters less with proper logging
[07:13:13] <Elliria> Oh, gosh, my work computer has Windows on it and those updates always give you a 100% on the progress about 4 minutes before the thing actually finishes. It's maddening.
[07:13:17] <grym> MacGyver: yes; i have updates that take like 4 hours sometimes; fixing that is a low priority rn
[07:13:20] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[07:13:32] <MacGyver> Hence: spinners :P
[07:13:44] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[07:13:46] <grym> "GPU hamsters hard at work; come back tomorrow"
[07:13:51] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:13:54] <MacGyver> (Or just good ol' textual output of what it's doing)
[07:14:01] <jinsun> aphysically: ah, so he added that len narrowing without any new discussion
[07:14:02] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:14:06] <matsaman> GUIs in general are just terrible for any kind of substantial update
[07:14:14] <TML-prv> I prefer a good old "Nope. Try again."
[07:14:15] <Elliria> Or at least some sort of occasional indication that something is happening.
[07:14:36] <SnoopJ> A spinner seems like the extreme of trying to indicate no more than "something is happening"
[07:14:40] <Elliria> The worst is definitely no visual feedback whatsoever where you're just left sitting there wondering if it broke.
[07:14:42] <grym> Elliria: "the server room got warmer"
[07:14:42] <TML-prv> back before SSDs you didn't need a progress bar, you could just _listen_
[07:14:51] <Elliria> Heh.
[07:14:55] <TML-prv> when the grinding noise got slightly slower, you were almost done
[07:15:01] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 240 seconds)
[07:15:12] <Elliria> Heh. Oh, the memories.
[07:15:28] <Elliria> And the little blinking light on the front of the case flickering on and off.
[07:15:32] <grym> TML-prv: GPU fans, but they're not as ... penetrating
[07:15:48] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:16:00] <TML-prv> I am too low-brow for GPUs with fans on them :)
[07:16:08] <Elliria> You gotta stick a baseball card in them like we used to do with our bicycle tires.
[07:16:11] <SnoopJ> Elliria, here's one way you might make checkbuttons as part of a function, which should do something pretty much like what I think you were going for: https://bpa.st/BN4A
[07:17:00] <matsaman> fanless computers are literal heaven
[07:17:23] <MacGyver> Considering their temperature, more like hell.
[07:17:27] <TML-prv> I assume you mean literal as in figurative :)
[07:17:34] <matsaman> no like, I read it
[07:18:13] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[07:18:29] <Elliria> Interesting, SnoopJ. That one gives me: "TypeError: _callback() missing 1 required positional argument: 'selected'"
[07:18:35] <TML-prv> I sincerely hope that when I die there's something more impressive than "fanless computers" going on
[07:18:55] <Elliria> But hopefully not clouds with harps on them for us to have to play.
[07:18:57] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 240 seconds)
[07:19:02] <SnoopJ> Elliria, hmm, maybe I read the wrong thing, I thought the command callback gets the selected-or-not-selected value as its first argument
[07:19:41] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[07:19:45] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[07:20:09] <Elliria> It starts with the "alternate" state and then switches between selected and not selected, but when it's first selected, I believe it contains alternate and selected. If you get it to print the state on each click, you can see it.
[07:20:11] *** Joins: adeliktas5 (~adeliktas@i59F52CD4.versanet.de)
[07:21:07] <SnoopJ> I guess you're supposed to just roll your own "state of the box" code here
[07:21:24] * SnoopJ is slightly annoyed at having to guess since this class is not (?) documented in the Python docs
[07:21:43] <Ashburry> my coffee was so strong that when it was nearly done I filled the cup up with water and it is still a strong coffee
[07:21:49] *** Quits: adeliktas (~adeliktas@i59F4DFBF.versanet.de) (Ping timeout: 240 seconds)
[07:21:49] *** adeliktas5 is now known as adeliktas
[07:22:09] <SnoopJ> the ttk docs aren't super enlightening about whether or not command() gets args either, but I guess..no?
[07:22:37] <TML-prv> It doesn't
[07:22:38] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[07:23:06] <TML-prv> but you're right, that documentation isn't very good about what command does
[07:23:08] <SnoopJ> TML-prv, am I wrong or does this mean the state of the widget whose command is running is something you have to rube-goldberg for yourself if you want it?
[07:23:40] <Elliria> The ttk one has it built in, but it's odd.
[07:23:55] <TML-prv> SnoopJ: IIUC, command is to allow you to wire in other behaviour when your Checkbutton's state changes
[07:24:28] <TML-prv> So if I wanted checking the box to enable the input field
[07:24:28] <SnoopJ> TML-prv, right, but I'm not sure what the utility is if there isn't a reliable way to actually know what it changed *to*
[07:24:59] <SnoopJ> unless the user is just expected to write their own machinery to keep track of that kind of thing
[07:25:14] <Repiphany> Binding a tkinter variable to the button lets you "get" the state pretty easily
[07:25:19] *** Quits: t2mkn_ (~t2mkn@user/t2mkn) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:25:40] <SnoopJ> Repiphany, is that something you can do before the button/widget is constructed?
[07:27:07] <TML-prv> no, I think you have to do it once you have the widget
[07:27:42] <SnoopJ> then I think that just shifts the question to "how do you know which variable you want inside the callback" :)
[07:28:31] <Elliria> If you add print(target.state()) as the first line inside the function in the script you fixed for me, SnoopJ, it will print out the state each time.
[07:28:44] <TML-prv> You have to create the variable and pass it to the constructor
[07:29:11] <TML-prv> variable=someTtkVar
[07:29:14] <Elliria> I used the instate() method instead of 'for "selected" in target'
[07:29:35] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[07:29:44] <SnoopJ> Elliria, sorry I'm not quite following what you're saying there
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:12] <Elliria> I'll post the code and then when you click the checkboxes, it will print the state of the checkbuttons.
[07:31:02] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[07:31:26] *** Joins: haasn (~nand@haasn.dev)
[07:31:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:31:58] <Elliria> Here you go: https://bpa.st/4NKA
[07:32:17] <Elliria> Apparently there are a LOT of states for a checkbutton and all I was after was whether it was selected or not.
[07:33:51] <TML-prv> so you're passing the entire Checkbutton to the callback
[07:34:03] <Elliria> Also, what that script doesn't show is that the default state of a checkbutton is "alternate" when you first load up the script, so if you've got something that's checking a checkbutton that hasn't yet been interacted with, that's what you'd see.
[07:34:04] <SnoopJ> nothing's being passed to the cb there actually, it's just resolving the name in the module scope
[07:34:07] <TML-prv> I'm honestly kind of surprised it's able to resolve cb1
[07:34:08] <SnoopJ> which is...not great :)
[07:35:09] <Elliria> It's only the if statement that's handling the state. The output is the text of the checkbutton because that's what I was after for my grocery list.
[07:35:29] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[07:35:44] <Repiphany> https://bpa.st/74JQ
[07:35:45] <SnoopJ> Elliria, this code works, but it has a slight flaw: the value `cb1` isn't "captured" into the function you built. It's just going to look for what `cb1` currently is every time you call it
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:22] <SnoopJ> which isn't a problem in *this* program, but it's the kind of thing that can snowball out of hand as a habit
[07:36:23] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:14] <SnoopJ> I might do something like this to do it "right" and pass the widget as the first argument: https://bpa.st/AQVQ
[07:37:20] <Elliria> Oh, blast. I'll have to check it later. My operating system can't handle those kinds of print statements. I'll load it up in a VM later. I've got to update this computer...
[07:37:34] <SnoopJ> to clarify: it's not "wrong," it's just actually kind of confusing why what you did there works :)
[07:37:58] <Elliria> If you get it to where it's glorious, SnoopJ, please put it up on StackExchange, because a lot of people look for a way to make this happen.
[07:38:05] *** Quits: Spunk (~SioUx@user/spunk) (Ping timeout: 256 seconds)
[07:38:17] <SnoopJ> Elliria, I think that last link is the last fussing with it I will do, I don't really use Tkinter
[07:39:05] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[07:39:05] <Repiphany> You can change the f-string with `print(text, selected.get())` I guess
[07:39:22] *** Quits: moog_ (~moog@107.77.244.71) (Ping timeout: 256 seconds)
[07:40:12] <Ashburry> What is the recommded fastest python interpreter. There is cython pypy etc. ?
[07:40:13] <Elliria> Oh, that worked perfectly, Repiphany!
[07:40:14] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[07:40:17] *** Joins: Veri (~yourname@110.247.73.122)
[07:40:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:40:54] *** Quits: Veri (~yourname@110.247.73.122) (Client Quit)
[07:41:10] <SnoopJ> Ashburry, pypy's JIT does quite a good job, although it has a warmup time
[07:41:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:41:19] *** Joins: Veri (~yourname@110.247.73.122)
[07:41:19] *** Quits: Veri (~yourname@110.247.73.122) (Client Quit)
[07:41:26] <SnoopJ> best advice: try at least CPython and PyPy, and measure what you care about
[07:41:29] <Elliria> That one is beautiful, SnoopJ. It's definitely one that will take me a long time to take apart and figure out.
[07:42:15] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:42:23] <SnoopJ> Elliria, it's combining this "functions can return functions" idea with classes. Each instance of the class makes its own _newcommand() that "wraps" around the passed command (if any)
[07:42:28] <Elliria> Hopefully you'll change your mind about Tkinter, SnoopJ, because you seem to be a wizard at coding with it.
[07:42:38] <SnoopJ> and the only interesting thing about the wrapper is that it passes `self` :)
[07:43:09] <SnoopJ> Elliria, I've messed with it a tiiiiny bit, but I usually reach for PyQt if I want to make a UI (not that I often do)
[07:43:17] <Elliria> Heh.
[07:43:33] <Elliria> Oh, boy, another toy for me to explore.
[07:43:37] <SnoopJ> but I don't have anything against it, it's great to have UI resources in the stdlib
[07:43:54] <Ashburry> someone stole all my usb flash drives!
[07:43:55] <Elliria> I'm switching back to Kubuntu after years away, so Qt is definitely something I'll be interested in.
[07:44:01] <Ashburry> I've got one left
[07:44:02] <SnoopJ> Qt is a substantially bigger bite than Tkinter, for what it's worth
[07:44:15] <Elliria> As in more complicated or more powerful?
[07:44:19] <SnoopJ> both!
[07:44:29] <Elliria> Heh. I'll have to nibble at it.
[07:44:51] <Elliria> I learn a tiny bit at a time and eventually hope it turns into a big steaming pile of code.
[07:45:05] <SnoopJ> as do we all :)
[07:45:29] <Elliria> You guys are leaps and bounds ahead of me. It's wonderful seeing how you think.
[07:45:30] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[07:45:35] <sathylias> Yeah, usually I get a stinking pile of shitty code..
[07:46:02] <Elliria> Don't feel bad, sathylias. Today, all I got was "not defined" over and over.
[07:46:03] *** Joins: ano (~ano@user/ano)
[07:46:24] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Remote host closed the connection)
[07:46:34] <sathylias> Ah, those moments, but when it works though !
[07:46:44] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[07:46:50] <Elliria> Yeah. And oddly enough, it's fun even when it's not doing what it's supposed to.
[07:47:06] <sathylias> I got stuck on writing a tiny INI parser, always get stuck on the small details.
[07:47:57] <Elliria> I like when you've made a simple mistake (like a comma instead of a period or something) and don't notice it and check your code over and over and when you finally see it, you can't unsee it and wonder how you could have missed it.
[07:48:00] <sathylias> Well I get frustrated pretty easily when things don't go my way, so coding is an exercise in contenance.
[07:48:00] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 250 seconds)
[07:48:21] <sathylias> Elliria: This so much !
[07:48:31] <SnoopJ> "Most bugs are a result of the execution state not being exactly what you think it is."
[07:48:34] <Elliria> Heh.
[07:48:57] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:49:11] <Elliria> Well, I tend to argue loudly with my monitor: "What do you MEAN it's not right?! It's PERFECT!"
[07:49:35] <Elliria> It never listens, though...
[07:49:40] <jim> hi, is there a python module/package, that is an irc message parser?
[07:50:11] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 252 seconds)
[07:50:13] *** Joins: ovnicraft (~ovnicraft@200.7.246.89)
[07:50:34] <jim> something that I can take a few lines of raw log, and have the parser... well I dunno. what's on the menu?
[07:50:37] <SnoopJ> jim, I would be surprised if there's a module dedicated to *just* parsing messages, but that functionality is definitely going to be part of an IRC library, of which there are a few
[07:51:20] <Elliria> Is this of any use, Jim? https://stackoverflow.com/questions/930700/python-parsing-irc-messages
[07:51:52] <jim> Elliria, let me look :)
[07:52:16] <Ashburry> is CPython just the normal python interpreter?
[07:52:39] <SnoopJ> Ashburry, CPython is the "reference" implementation of the Python language. It's the one you get from python.org
[07:52:52] <SnoopJ> and probably your OS's package system if it has one
[07:53:17] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[07:54:12] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[07:55:06] <SnoopJ> jim, the `irc` module looks like it has some machinery take inspiration from: https://github.com/jaraco/irc/blob/5ee34d886507aea3a9edb045d258098a78d1117b/irc/client.py#L270-L299
[07:55:31] <SnoopJ> it looks like it relies on a regex for a lot of the parsing: https://github.com/jaraco/irc/blob/5ee34d886507aea3a9edb045d258098a78d1117b/irc/client.py#L933-L937
[07:57:46] <Elliria> Those are fun, too, and can occasionally give you grey hair or flat spots on your head when they get a bit complicated.
[07:57:49] <SnoopJ> the name is probably a little misleading, tags aren't part of RFC 1459, but it looks about right against IRCv3
[07:57:58] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[07:58:33] <SnoopJ> (specifically, IRCv3 extends RFC 1459: https://ircv3.net/specs/extensions/message-tags.html#format)
[07:58:39] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[07:59:32] <aphysically> jinsun: yes, it was a new years miracle
[07:59:46] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:00:00] <Ashburry> pypy doesn't support type hints?
[08:00:09] <jinsun> aphysically: you've been reading his mind a lot lately :D
[08:00:10] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[08:00:13] *** Quits: sreve_ (~quassel@p4ff44ef6.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:00:17] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 268 seconds)
[08:00:17] *** jmiehe1 is now known as jmiehe
[08:00:20] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[08:00:36] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:00:46] *** Joins: sreve (~quassel@p549d7096.dip0.t-ipconnect.de)
[08:00:51] <SnoopJ> Ashburry, it supports them
[08:01:08] <Ashburry> (trio-ircproxy) (base) ashburry@thnkc-pc:~/Documents/trio-ircproxy$ pypy trio-ircproxy.py
[08:01:08] <Ashburry>   File "trio-ircproxy.py", line 101
[08:01:09] <Ashburry>     def colourstrip(data: str) -> str:
[08:01:24] <SnoopJ> please don't paste in the channel, use https://bpa.st
[08:01:33] <Ashburry> with an arrow pointing to the colon
[08:02:08] <SnoopJ> Ashburry, can you share the complete error message on that paste site?
[08:02:57] <Ashburry> https://bpa.st/ORNA
[08:02:57] <jinsun> pypy supports type hints but its latest version i 3.8 so you can't use the 3.9 or 3.10 style stuff like GenericAliases and the new uniion thing
[08:03:23] <SnoopJ> Ashburry, what version of pypy is this?
[08:03:33] <Ashburry> I have imported from __future__ annotations does that help?
[08:03:59] <Ashburry> Python 2.7.13 (7.3.1+dfsg-2, Apr 21 2020, 05:05:41)
[08:03:59] <Ashburry> [PyPy 7.3.1 with GCC 9.3.0]
[08:04:12] <SnoopJ> Ashburry, type annotations are for Python 3
[08:04:39] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[08:04:41] <Ashburry> I see. how do I get it to use python 3 ?
[08:05:00] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[08:05:10] <jinsun> how did you install pypy? you need to install pypy3 maybe
[08:05:47] <Ashburry> Python 3.6.9 (7.3.1+dfsg-4, Apr 22 2020, 05:15:29)
[08:05:47] <Ashburry> [PyPy 7.3.1 with GCC 9.3.0]
[08:06:11] <SnoopJ> Ashburry, these are two different versions of PyPy. One of them is for 2.7.13, one is for 3.6.9. Your code should work in the 3.6.9 one.
[08:06:14] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:06:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[08:06:44] <Ashburry> SyntaxError: future feature annotations is not defined
[08:06:52] <Ashburry> needs Python 3.7 i believe
[08:06:54] <SnoopJ> Right, because again, annotations are not for Python 2
[08:06:55] <jinsun> yeah that is 3.7+
[08:07:04] <SnoopJ> oh, that
[08:07:10] * SnoopJ shuts up
[08:07:35] *** Joins: wyclif (~wyclif@user/wyclif)
[08:08:05] <jinsun> you can remove the future import then it should work, if you didn't any fancy new kind of annotation that needs newer python version
[08:08:07] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:08:17] *** Quits: nicode (~nic@2607:f2c0:946d:3800:72c3:6283:a9c2:9e2f) (Ping timeout: 240 seconds)
[08:08:34] <jinsun> would be better to get pypy 3.7 or 3.8 though, 3.6 is too old especially for typing features
[08:08:45] *** Quits: bluedust (~bluedust@185.195.232.135) (Remote host closed the connection)
[08:09:00] <jim> when trying to make something like an event loop, do people generally prefer twisted (or is that perl??), or asyncio?
[08:10:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:11:35] <Elliria> This is doing a great job pounding the functools partial into my head, SnoopJ: https://www.tutorialspoint.com/partial-functions-in-python
[08:12:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[08:13:04] *** Joins: wyclif (~wyclif@user/wyclif)
[08:14:42] *** Joins: hylisper (~yaaic@103.205.173.25)
[08:14:42] *** Quits: hylisper (~yaaic@103.205.173.25) (Changing host)
[08:14:42] *** Joins: hylisper (~yaaic@user/hylisper)
[08:15:16] *** Joins: frmlof (~frmlof@70.243.238.191)
[08:16:34] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[08:17:40] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[08:18:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::6) (Ping timeout: 240 seconds)
[08:18:31] <energizer> jim: asyncio is the most mainstream. i like trio myself
[08:20:00] <Ashburry> needs help with symlinks https://bpa.st/EIMA
[08:20:15] * Ashburry love's trio
[08:21:05] <energizer> dont do stuff like that
[08:23:40] <matsaman> can you do pypy via pyenv?
[08:23:45] <SnoopJ> yep
[08:23:45] <matsaman> would probably be the way
[08:24:06] <matsaman> nice
[08:25:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:25:25] *** Quits: Roey{- (~Roey@user/Roey) (Quit: Client exiting)
[08:25:36] *** Joins: djapo (~archangel@user/djapo)
[08:25:44] *** Quits: LiENUX (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:25:56] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:26:50] *** Joins: fikran (~fikran@user/fikran)
[08:27:09] <Ashburry> you mean I should copy the binaries over to an pyenv ?
[08:27:53] <Ashburry> or create hard links or soft links ?
[08:29:01] <SnoopJ> Ashburry, pyenv is a tool that can install Python interpreters from source, including PyPy
[08:29:11] *** Joins: walterwhip (~www@user/walterwhip)
[08:29:15] <matsaman> yeah, pyenv should let you install and use pypy properly
[08:29:21] <matsaman> without fudging up your host system with strange symlinks
[08:29:26] <SnoopJ> it does, my pypy is installed this way
[08:30:03] <SnoopJ> it does have some build-time dependencies you need to worry about if you go that route: https://doc.pypy.org/en/latest/build.html#install-build-time-dependencies
[08:30:25] <Ashburry> pypy -m pyenv ./pypyenv will do?
[08:31:03] <SnoopJ> no, pyenv is not written in Python. https://github.com/pyenv/pyenv
[08:31:27] <gbristol> it's shell all the way down baby
[08:31:30] <gbristol> just like rbenv
[08:31:30] *** Quits: lntl (~joey@24.136.23.254) (Ping timeout: 256 seconds)
[08:32:01] <SnoopJ> you'd do `pyenv install pypyX.Y-X.Y.Z` or so, where there are a lot of available versions, and you can see a list of them with `pyenv install --list`
[08:32:02] <avu> Ashburry: you might be confusing pyenv with venv, they are different beasts solving different problems
[08:32:13] <SnoopJ> yes, pyenv is unfortunately really badly named
[08:32:25] <matsaman> pyenv you would install for your host system, and then you would _use_ pyenv to install pypy without messing up your host system
[08:33:10] <Elliria> Well, it's bed time here. Thank you so much for the help, all of you. You've been absolutely spectacular. Hugs all the way around.
[08:33:28] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[08:34:32] <llanhmod> pyenv may be badly named, but pecanpy is a classic
[08:35:04] <llanhmod> name wise anyway...haven't used it yet to know much more.
[08:35:40] <matsaman> pypi vs pypy is worse
[08:35:40] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 250 seconds)
[08:36:06] <matsaman> actually 'poetry' is worse, and 'black'
[08:37:46] <llanhmod> hm, I have kite installed for some time now and just now using it
[08:39:02] *** Joins: bluedust (~bluedust@185.195.232.135)
[08:39:31] <SnoopJ> black is at least a reference to something
[08:40:13] <SnoopJ> llanhmod, I'd never even *heard* of pecanpy before, TIL :)
[08:40:28] <llanhmod> I recall seeing some written content on black, never looked into what it did. that was months ago
[08:41:02] <llanhmod> SnoopJ: yeah, same. I was looking over some DevOps with python stuff and saw it.
[08:41:17] <SnoopJ> it's a formatter with *really* strong opinions ("Any color you like...as long as it's black")
[08:42:15] *** Quits: ovnicraft (~ovnicraft@200.7.246.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:24] <SnoopJ> the very opposite of formatters with lots of option knobs, you put code into black and you get consistent formatting out the other side
[08:42:50] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[08:43:14] <gbristol> it's really nice to take opinions out of code style
[08:44:24] <SnoopJ> it can be, yea
[08:44:46] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[08:44:48] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[08:46:31] <SnoopJ> it helps that Python avoids the war over brace style entirely right out of the gate, formatters don't even have to fuss about that one
[08:48:01] *** Joins: humberto1 (~humbertow@189.132.111.57)
[08:48:25] <matsaman> brace style but not style
[08:48:33] <bss> contrarian comment: black takes opinions out of code style the same way dictators take opinions out of politics
[08:48:43] <matsaman> bss: have to agree
[08:48:49] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:49:21] <matsaman> but it's used stupidly at my work
[08:49:26] <matsaman> which is my main gripe
[08:49:52] <matsaman> you're meant to conform to black before you commit, even though it can simply be done afterward, and as far as I understand the project rather intended its use that way
[08:50:00] <bss> I actively refused to merge it into my work projects I was maintainer over, eventually people gave up
[08:50:08] <matsaman> =)
[08:50:32] <matsaman> bored humans are the worst thing in the world
[08:50:37] *** Quits: Ashburry (~Ashburry@184.69.89.188) (Ping timeout: 256 seconds)
[08:50:38] *** Joins: vanessa (~annada@103.160.128.7)
[08:51:36] <SnoopJ> bss, you aren't wrong
[08:51:44] *** Joins: Ashburry (~Ashburry@184.69.89.188)
[08:52:49] <SnoopJ> personally I think I've had my fill of people expressing themselves with code style, I just want something I can read without adjusting to the aesthetics of the particular author
[08:53:02] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:53:31] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:54:36] <SnoopJ> at least with a syntax small enough to keep the number of potential flamewars to a minimum, which Python has
[08:54:40] <bss> on the code style alignment chart I think of myself as chaotic good: I don't care what code style you follow beyond some basic flake8 stuff, just try to make the code look okay
[08:54:57] <SnoopJ> Yea, and the language has already decided most of the *really* important stuff
[08:55:04] <bss> sometimes line per comma-separated thing is right, sometimes it's a waste of space; use your judgment
[08:55:27] <SnoopJ> I couldn't stand semantic whitespace at first but it's grown on me because control flow has a somewhat consistent appearance unless you're going out of your way to prevent this
[08:56:13] <SnoopJ> control flow might be a bad way to say it, but I know lexical scope isn't right. Whatever, blocks are neatly set off from each other is what I mean
[08:56:13] <matsaman> still hate it myself =P But not a real hurdle obviously
[08:56:24] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[08:56:49] <matsaman> more often than not I was already typing things the way black prefers them, so it's all the more ridiculous to me
[08:57:50] <SnoopJ> ridiculous?
[08:58:08] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[08:58:39] <matsaman> would've been nice if black had focused on style templates that you can switch to and from for each person. If it's really all the same then there's no reason each person can't view it formatted in their preferred way
[08:59:06] <SnoopJ> there's no reason they can't do that in a workflow that checks code in using black, either
[08:59:13] <matsaman> for sure
[08:59:25] <SnoopJ> it's basically the entire reason smudge filters exist
[08:59:53] <SnoopJ> I mean, not black specifically, but to handle the combinatoric explosion you get from lots o' knobs
[08:59:54] *** Joins: dvx (~dvx@5.181.92.64)
[09:00:48] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[09:00:48] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[09:00:48] *** Joins: hams (~hams@user/hams)
[09:01:03] <matsaman> right
[09:01:49] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[09:02:31] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[09:03:40] *** Joins: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[09:04:04] *** arjun is now known as ccldarjun
[09:05:53] *** Quits: debayer94 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Client Quit)
[09:07:15] *** Joins: ovnicraft (~ovnicraft@200.7.246.89)
[09:10:02] <SnoopJ> speaking of code formatting and chaotic alignment... https://github.com/arduino/ArduinoCore-mbed/blob/master/libraries/RPC/src/RPC.cpp#L142
[09:10:17] <Ashburry> pypy ../../rpython/bin/rpython --opt=jit
[09:10:25] <Ashburry> how do I get rpython/bin ?
[09:10:38] <grawity> SnoopJ: ah that's just two-space tabs
[09:11:32] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:11:57] <SnoopJ> grawity, interleaved with hard tabs, if understand what you mean by that correctly
[09:12:28] <grawity> yeah
[09:12:45] * SnoopJ has no clue if the distinction is meaningful here or if the code was formatted by a tornado
[09:12:47] <grawity> text editor set to 2-space, but not set to convert hard tabs *to* spaces, and you get a mess exactly like that
[09:12:49] *** Joins: fef (~thedawn@user/thedawn)
[09:13:03] <SnoopJ> considering the context I suspect it's that sort of oversight, yep
[09:13:22] <grawity> the worst C source code I've seen was procmail's
[09:13:24] <SnoopJ> I was looking at RPC.h and admiring what a tidy little system it was, then I saw that and nearly went cross-eyed
[09:13:52] <grawity> look at this beauty https://github.com/Distrotech/procmail/blob/master/src/misc.c#L34
[09:15:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[09:16:27] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Max SendQ exceeded)
[09:17:47] * SnoopJ blinks slowly
[09:18:15] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[09:18:30] <SnoopJ> I can understand 80 columns, but...
[09:19:11] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[09:19:45] <grawity> speaking of tabs and git filters, there was this python-based project, Sonata (a music player app)
[09:20:00] <grawity> which somehow had hard tabs in release tarballs, but spaces in git
[09:20:20] <BrenBarn> wow it has gotos
[09:20:27] <SnoopJ> so does CPython
[09:20:42] <grawity> procmail? hey it still uses K&R function syntax, of course it'll have some gotos
[09:21:09] <SnoopJ> I got tut-tutted for CPython-style gotos in something that was using them in places where it was talking to CPython
[09:22:05] <jim> tutored?
[09:22:11] <SnoopJ> lightly scolded
[09:22:12] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[09:23:41] <SnoopJ> something like: `if (capi_result == NULL) { goto cleanup; } /* ... */ cleanup: Py_XDECREF(something_else); return NULL;`
[09:24:09] *** Quits: nomic (~nomic@185.192.69.217) (Quit: Leaving)
[09:24:31] <SnoopJ> oh and the cleanup clause was releasing the GIL, too
[09:25:19] <jim> sometimes goto is the best way to express a particular structure, that doesn't have a language structure for it
[09:25:29] <SnoopJ> or even if it does
[09:25:48] *** Joins: Guest5023 (~Guest50@157.122.68.247)
[09:26:51] <SnoopJ> the elaborate C++ contraption my teammate was advocating for could support the same task, it just wasn't a contraption that added any value to the prototype (and pybind11/Boost/cppyy have already solved that problem anyway)
[09:27:23] <SnoopJ> hmm, actually cppyy can't embed I think
[09:27:58] *** Quits: rb (~augh@theguntretort.com) (Quit: ZNC - https://znc.in)
[09:28:44] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 256 seconds)
[09:29:03] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[09:29:10] *** Joins: rwb (~augh@theguntretort.com)
[09:29:11] <SnoopJ> in my teammate's defense, picking pybind11 would've been a better call than using the C API directly, but it wasn't worth re-doing just for that
[09:29:31] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 245 seconds)
[09:30:33] *** Joins: spithash (~spithash@user/spithash)
[09:31:34] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:32:24] *** Quits: humberto1 (~humbertow@189.132.111.57) (Read error: Connection reset by peer)
[09:32:59] *** Joins: humberto1 (~humbertow@189.132.111.57)
[09:33:09] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:34:04] *** Quits: oakridge (~oakridge@user/oakridge) (Read error: Connection reset by peer)
[09:36:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:37:21] *** Joins: oakridge (~oakridge@user/oakridge)
[09:37:23] *** Quits: ovnicraft (~ovnicraft@200.7.246.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:38:40] *** Joins: akoana1 (~Thunderbi@user/akoana)
[09:40:09] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:40:30] *** Joins: esv (~esv@74.124.178.154)
[09:43:21] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[09:43:22] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:43:48] *** Quits: akoana1 (~Thunderbi@user/akoana) (Quit: akoana1)
[09:44:02] *** Joins: tejr (~tejr@user/tejr)
[09:44:22] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[09:44:31] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:45:30] *** Joins: djapo (~archangel@user/djapo)
[09:45:30] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:dcb7:d938:b87e:d07e)
[09:45:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:46:59] *** Joins: delvian (~delvian@41.13.220.172)
[09:47:21] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[09:47:21] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:47:31] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:48:16] *** Joins: walterwhip (~www@user/walterwhip)
[09:48:17] *** Quits: kmh (~kmh@2a00:6020:5004:6800:dcb7:d938:b87e:d07e) (Ping timeout: 240 seconds)
[09:48:39] *** Joins: bluedust_ (~bluedust@59.89.219.209)
[09:49:07] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[09:49:18] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[09:49:18] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:49:28] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:49:56] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38b3:888b:b966:4381)
[09:50:35] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:50:45] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:51:30] *** Quits: bluedust (~bluedust@185.195.232.135) (Ping timeout: 250 seconds)
[09:51:36] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:51:46] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:52:32] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:52:59] *** catbread is now known as catbeard
[09:53:06] *** Quits: walterwhip (~www@user/walterwhip) (Ping timeout: 256 seconds)
[09:53:20] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:53:30] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:53:40] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Ping timeout: 250 seconds)
[09:54:15] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:58:26] *** Joins: noyb (~noyb@user/noyb)
[09:59:50] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[09:59:51] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:00:24] <taeaad> What is the "right" way to reorder columns of a Pandas dataframe?
[10:00:47] <taeaad> I'm getting "TypeError: unhashable type: 'list'" if I try df = df[listColumnsReordered].
[10:02:25] *** Joins: manti7 (~manti7@176.10.104.94)
[10:04:03] *** Joins: shantanoo (~shantanoo@user/shantanoo)
[10:04:35] <energizer> taeaad: something about what you're saying is wrong
[10:04:42] <energizer> that should work otherwise
[10:04:51] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Ping timeout: 256 seconds)
[10:04:55] <energizer> https://bpa.st/WPXQ
[10:05:17] <taeaad> Isn't it that that error is for dictionaries?
[10:05:31] <taeaad>  But yet it does say the type is pandas.DataFrame.
[10:05:49] <Repiphany> Do you have a list in your list
[10:06:01] <taeaad> Let me have a look.
[10:06:18] <taeaad> This dataframe is output from pandas.pivot_table().
[10:07:17] *** rwb is now known as rb
[10:07:25] *** Quits: delvian (~delvian@41.13.220.172) (Quit: Leaving)
[10:07:35] <taeaad> Repiphany: Right on the money. I used .append() incorrectly.
[10:07:55] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:08:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:08:24] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 256 seconds)
[10:09:31] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[10:09:59] *** Quits: montybanksnyc (~montybank@108.50.135.21) (Read error: Connection reset by peer)
[10:10:39] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[10:12:25] *** Joins: delvian (~delvian@41.13.220.172)
[10:13:06] <taeaad> Thanks.
[10:13:11] *** megaTherion_ is now known as megaTherion
[10:13:36] *** Quits: radens (uid501260@id-501260.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:14:21] *** Joins: humberto1 (~humbertow@189.132.111.57)
[10:14:34] *** Quits: foxbox (~cammy@user/cammy) (Read error: Connection reset by peer)
[10:15:12] <dba> they is that all programing language including python are English centric languages? did someone ever tried to make a programming language chines/japanes centric?
[10:15:17] *** Joins: foxbox (~cammy@user/cammy)
[10:15:18] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:4cf3:faaa:6ada:8853) (Read error: Connection reset by peer)
[10:15:33] <llua> ruby
[10:16:31] <energizer> APL isnt english
[10:16:53] <Guest5023> dba: because their majority user speaks English. english is the franca lingua for science.
[10:16:58] *** Joins: han-solo (~hanish@user/han-solo)
[10:17:18] <matsaman> ruby I would call English centric, except for maybe the original docs
[10:17:26] <energizer> science is a very small part of programming
[10:17:50] <dba> energizer: I believe APL has somehting called push. pull. right?
[10:17:59] <foxbox> programming is a very small part of science
[10:18:03] <matsaman> CJK, for example, is also incredibly not concise when it comes to characters. It can be a chore just to input conversational phrases
[10:18:06] <Guest5023> centering non-English -> much fewer users -> less competitive. And I know that there are numerous attempts 'make a programming language chines/japanes centric', but as a result, we even haven't heard of them.
[10:18:14] <foxbox> science is everything
[10:18:29] <energizer> science is everything?
[10:18:42] <matsaman> it's also not a big deal to make a transpiler
[10:19:13] <Guest5023> yes. this reminds that Tang Feng, a taiwan Perl hackers, has built a Ancient Chinese transpiler for Perl.
[10:19:19] <matsaman> https://esolangs.org/wiki/Category:CJK =)
[10:19:31] <dba> Guest5023: but is it doable? to make a programing language that is not english centric ?
[10:19:37] <matsaman> of course
[10:19:41] <matsaman> it's all binary deep down
[10:19:52] <matsaman> 0 or 1, yes or no
[10:19:52] <Guest5023> dba: yes. whats your mother tongue?
[10:20:38] <dba> matsama, CJK is not fun :D
[10:20:43] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[10:20:46] <Guest5023> for chinese there is a pretty scary Visual Basic clone Easy Programming Language (www.dywt.com.cn)
[10:21:00] <Guest5023> but nevermind, languages just don't matter.
[10:21:06] <matsaman> dba: it is more complex, for sure
[10:21:14] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[10:22:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:22:34] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 256 seconds)
[10:22:46] <matsaman> https://esolangs.org/wiki/Wenyan
[10:23:08] <Guest5023> This is much cooler than Tang Feng's.
[10:23:15] <matsaman> still left-to-right, though, looks like
[10:23:17] <Guest5023> at least there are indents:)
[10:23:40] *** Quits: resmo (~resmo@2a00:d420:9:8a00:5844:41c6:167e:c1d1) (Remote host closed the connection)
[10:23:48] <matsaman> whereas real chinese would be top-to-bottom, right-to-left, I believe
[10:23:53] *** Joins: resmo (~resmo@2a00:d420:9:8a00:a449:57a4:63d6:1347)
[10:23:54] <Guest5023> https://metacpan.org/pod/Lingua::Sinica::PerlYuYan
[10:24:05] <matsaman> =)
[10:24:12] <matsaman> yeah perligata, I was reminded
[10:24:33] <Guest5023> matsaman: japanese and ancient Chinese. modern Chinese uses also left-to-right. however I've seen left-to-right japanese for science papers
[10:24:56] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[10:25:44] *** Quits: Xano (~Xano@2a00:23c4:4204:700:e0df:a8cd:f1b:4d86) (Ping timeout: 250 seconds)
[10:25:46] <energizer> https://github.com/nirs/hpy/blob/master/examples/99bottles.hpy
[10:25:50] <matsaman> https://is.gd/pugana
[10:26:01] <matsaman> Guest5023: yeah but it does that for the English world's sake
[10:26:16] *** Joins: vicfred (~vicfred@user/vicfred)
[10:26:20] <matsaman> for inflexible software and systems that are prevalent
[10:26:46] <matsaman> for the same reason hardly any of us have real apostrophes when we type contractions
[10:26:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:28:42] <ede> dba: not Chinese, but some language was translated to German at least in the 60s or 70s. and with this a mean the commands and keywords. good look typing non-ascii characters on other keyboard layouts, or even remember which of these odd addons a word carries.
[10:28:44] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:29:22] <energizer> https://en.wikipedia.org/wiki/Qalb_(programming_language)
[10:29:28] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:29:36] <matsaman> wow, arabic
[10:30:10] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[10:30:21] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[10:31:29] <ede> the alignment sounds nice. but don't they also use different glyphs for letters depending on their position in the word?
[10:32:04] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:32:44] *** Joins: carl-- (~carl-@185.103.188.130)
[10:32:57] *** Joins: Ruit (~textual@2601:84:4501:18a0:d9f0:dfd3:cb9b:e154)
[10:34:09] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[10:34:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:34:53] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[10:35:21] *** Joins: jpodivin_ (~jpodivin@cgnat44-pool3-70-212.poda.cz)
[10:36:11] *** Joins: fikran (~fikran@user/fikran)
[10:36:13] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 240 seconds)
[10:36:27] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool3-70-212.poda.cz) (Client Quit)
[10:36:30] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:37:07] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[10:37:11] *** Quits: onichomp (~onichomp@2806:264:4408:8:91e5:47ed:5350:b9f8) (Read error: Connection reset by peer)
[10:37:21] <deniska> https://github.com/EvilBeaver/OneScript/blob/develop/tests/json/json_reader.os 1C programming language :)
[10:37:22] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[10:37:25] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 240 seconds)
[10:37:48] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:37:48] *** Joins: onichomp (~onichomp@2806:264:4408:8:91e5:47ed:5350:b9f8)
[10:37:57] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[10:38:23] *** Joins: bkhl (~bkhl@user/bkhl)
[10:38:36] *** Joins: justIrresolute (~justache@user/justache)
[10:38:56] *** Joins: bambams (~bambams@user/bambams)
[10:40:09] *** Joins: lntl (~joey@24.136.23.254)
[10:41:01] <Guest5023> i believe the famous tqdm library comes from arabic world
[10:41:07] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-212.poda.cz)
[10:41:47] <taeaad> I think that 'it's all binary' is something of a misdirection towards the general public. You can always represent data in a (natural) number, but it's the rules that you work with that matter.
[10:42:11] <Ruit> nice
[10:42:13] *** Quits: onichomp (~onichomp@2806:264:4408:8:91e5:47ed:5350:b9f8) (Read error: Connection reset by peer)
[10:43:16] <taeaad> There is a nice video where Richard Penrose describes Gödel's incompleteness in terms of manipulation rules. What he says is that whenever you have a system of rules that we all agree on the interpretation or meaning, then there is a certain string / number that is also understood and agreed to be true, but which we cannot prove from the set of rules.
[10:43:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:43:56] <taeaad> That the computer uses binary is in some sense just a demonstrating proof that base_2 can be use instead of base_n for some n.
[10:44:10] <Guest5023> correct
[10:44:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:44:22] *** Quits: lntl (~joey@24.136.23.254) (Ping timeout: 250 seconds)
[10:44:30] <Guest5023> likewise, one can use lambda-calculus to describe everything. (see lisp)
[10:44:36] <Ruit> ugh
[10:44:50] <taeaad> Incidentally, the computer is modelled after a Turing machine, and yet the original Turing machine as a thought experiment had infinite memory.
[10:45:33] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:45:40] <deniska> Turing machine can probably open more than 70 chrome tabs
[10:45:54] <Guest5023> lol
[10:46:40] <Guest5023> a. turing may not forsee that after several decades the code editors cannot reach 120fps
[10:46:45] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:23cb:f304:8a4a:cc90)
[10:46:52] <Guest5023> as a result of using electron
[10:47:35] <energizer> deniska: chrome translated that code for me
[10:49:40] *** Joins: upsala (~zcb@185.209.196.169)
[10:49:52] *** Joins: mrwick (~mrwick@user/mrwick)
[10:50:05] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[10:50:15] *** Joins: noyb (~noyb@user/noyb)
[10:50:22] *** Quits: noyb (~noyb@user/noyb) (Client Quit)
[10:53:40] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:53:44] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:54:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:56:30] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 250 seconds)
[10:56:42] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:58:35] *** Quits: bloody_ (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:58:54] *** Joins: hightower2 (~hightower@212.15.178.3)
[10:59:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:00:00] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:00:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:00:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[11:00:24] *** Joins: pingpongball (~pingpongb@27.34.47.169)
[11:00:38] <pingpongball> Is qtile slow?
[11:01:08] <energizer> pingpongball: no
[11:01:26] *** Quits: kolcon (~kolcon@v.kolouch.org) (Quit: WeeChat 3.4)
[11:01:30] <pingpongball> why no? isnt python slow? why not qtile also to be slow? :/
[11:01:49] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[11:01:49] *** Joins: kolcon (~kolcon@v.kolouch.org)
[11:01:50] <pingpongball> or is it cython?
[11:02:16] <Guest5023> c is fast but windows is not
[11:02:25] <energizer> it's fast enough
[11:02:37] <energizer> i mean, python is fast enough for this job
[11:02:39] *** Joins: Socra (~Socra@206.217.216.21)
[11:02:58] *** Joins: gusto (~Augustus@109.255.100.54)
[11:03:21] <pingpongball> Like for example if i use bspwm, vs use qtile,
[11:03:22] <pingpongball> What do you think, i might be faster in terms of performance that depends on programming language.
[11:03:42] <supakeen> Probably, try it out.
[11:03:47] <energizer> i don't think you will notice
[11:03:50] <energizer> a difference
[11:04:09] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:04:39] <pingpongball> ok.
[11:04:42] <mrwick> or go here and tell them to speed it up for you: irc.oftc.net/#qtile
[11:05:00] <supakeen> That would be pretty unfriendly :)
[11:05:03] <pingpongball> aummm
[11:06:01] <pingpongball> Ok i've joined.
[11:06:03] <mrwick> agreed! then offer €€ for speed improvements :)
[11:06:32] <pingpongball> how about bspwm?
[11:06:36] <energizer> or use it and decide it doesnt need speed improvements
[11:07:54] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:07:55] *** Quits: hightower2 (~hightower@212.15.178.3) (Read error: Connection reset by peer)
[11:08:19] <pingpongball> energizer what text editor/ide you use for programming?
[11:08:25] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:08:49] *** Joins: seednode99 (~seednode@user/seednode)
[11:10:10] <energizer> pingpongball: emacs and vscode
[11:10:46] <pingpongball> 8)  emacs is much more greater than vscode/vim
[11:11:43] <pingpongball> oh (i use arch btw)
[11:11:47] *** Quits: pingpongball (~pingpongb@27.34.47.169) (Quit: Client closed)
[11:12:03] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[11:12:08] *** Joins: ahammer (~ahammer@157.122.68.247)
[11:12:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:13:20] *** Joins: hightower2 (~hightower@95.168.116.5)
[11:13:34] *** Joins: wyclif (~wyclif@user/wyclif)
[11:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6) (Ping timeout: 240 seconds)
[11:13:42] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[11:13:48] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[11:14:07] <Guest5023> i love pycharm lol
[11:14:28] *** Joins: rendar (~rendar@user/rendar)
[11:14:32] *** Quits: Guest5023 (~Guest50@157.122.68.247) (Quit: Client closed)
[11:15:31] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[11:15:43] *** andi__ is now known as andi_
[11:15:53] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:16:57] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[11:16:58] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[11:17:38] *** Joins: kai2 (~kai@x50d24799.cust.hiper.dk)
[11:17:39] *** Quits: hightower2 (~hightower@95.168.116.5) (Read error: Connection reset by peer)
[11:17:48] *** Quits: AlanMD_ (~AlanMD@5-12-13-215.residential.rdsnet.ro) (Quit: ZZZzzz…)
[11:18:06] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[11:18:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:19:01] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[11:19:04] *** Joins: wyclif (~wyclif@user/wyclif)
[11:19:39] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 256 seconds)
[11:19:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[11:19:39] *** kai2 is now known as kai
[11:19:41] *** lukedashjr is now known as luke-jr
[11:19:42] *** Quits: shantanoo (~shantanoo@user/shantanoo) (Remote host closed the connection)
[11:21:38] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[11:21:43] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:23:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:24:33] *** Joins: wyclif (~wyclif@user/wyclif)
[11:24:41] *** Joins: palasso (~palasso@user/palasso)
[11:25:29] *** Quits: alex11 (~alex11@user/alex11) (Remote host closed the connection)
[11:26:45] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[11:26:57] *** Joins: bluedust (~bluedust@103.161.144.94)
[11:27:44] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[11:28:28] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:29:33] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[11:30:00] *** Quits: bluedust_ (~bluedust@59.89.219.209) (Ping timeout: 256 seconds)
[11:30:02] *** Joins: teut (~teut@2401:4900:1c68:6b85:4d9d:d2be:67d7:2e63)
[11:30:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:30:46] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[11:30:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38b3:888b:b966:4381) (Quit: Client closed)
[11:31:21] *** Joins: kosh (~kosh@user/kosh)
[11:32:14] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:34:01] *** Joins: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net)
[11:35:40] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[11:36:08] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:23cb:f304:8a4a:cc90) (Quit: pvergain)
[11:36:47] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[11:37:31] *** Joins: pycode (~pycode3@2001:b07:5d28:551:fc33:f40d:cee5:afe4)
[11:37:35] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b70:4c30:a9c3:137c)
[11:37:54] *** Joins: allana (~user@2001:4641:6aed:0:4ad:2c51:49e9:2b4a)
[11:38:07] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[11:40:03] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b70:4c30:a9c3:137c) (Client Quit)
[11:41:01] *** Joins: shad (~shad@user/shad)
[11:41:41] *** Joins: RiFo (~RiFo@user/rifo)
[11:41:47] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[11:42:28] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:42:34] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:42:54] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c5fe:2ecc:be3b:db98)
[11:43:18] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:43:52] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:8d12:7512:3216:2787)
[11:45:01] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:8d12:7512:3216:2787) (Client Quit)
[11:45:12] *** Joins: ubert (~Thunderbi@p200300ecdf0994878c88f9c813554c3f.dip0.t-ipconnect.de)
[11:45:51] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[11:46:00] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e0:a7ed:607d:81a8:b645:3a30)
[11:46:08] *** Joins: dreamon_ (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:46:15] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:8d12:7512:3216:2787)
[11:46:33] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:48:00] *** Quits: ahammer (~ahammer@157.122.68.247) (Quit: Leaving)
[11:48:17] *** Quits: weedmic (~weedmic@5.102.235.240) (Remote host closed the connection)
[11:48:38] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-16-71.w82-124.abo.wanadoo.fr)
[11:48:49] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:49:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:50:18] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c5fe:2ecc:be3b:db98) (Ping timeout: 268 seconds)
[11:51:22] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:52:28] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[11:53:26] *** Joins: thorbw (~tw@46.230.130.50)
[11:55:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:55:55] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:56:18] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:56:23] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[11:56:37] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 240 seconds)
[11:58:25] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:58:31] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[11:59:20] *** Joins: chele (~chele@user/chele)
[12:00:18] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[12:00:32] *** Quits: Echoz_ (~chris@user/echoz) (Quit: WeeChat 3.3)
[12:02:51] *** Joins: Vonter (~Vonter@user/vonter)
[12:03:50] *** Joins: walterwhip (~www@user/walterwhip)
[12:03:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:04:28] *** Joins: Echoz (~chris@user/echoz)
[12:04:40] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[12:05:59] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[12:06:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:07:16] *** Joins: walterwhip (~www@user/walterwhip)
[12:08:26] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:09:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[12:09:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:09:22] *** Quits: Ruit (~textual@2601:84:4501:18a0:d9f0:dfd3:cb9b:e154) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:09:41] *** Joins: effprime (~effprime@user/effprime)
[12:10:13] *** Quits: effprime_ (~effprime@user/effprime) (Ping timeout: 240 seconds)
[12:10:18] *** Joins: palasso (~palasso@user/palasso)
[12:10:20] *** Joins: wyclif (~wyclif@user/wyclif)
[12:11:02] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[12:11:13] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[12:12:49] *** Quits: gegenschein (~james@ec2-54-210-169-253.compute-1.amazonaws.com) (Remote host closed the connection)
[12:13:44] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:bcce:385:7e5d:7553)
[12:14:04] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[12:14:11] *** Joins: Payam (~Payam@138.106.57.131)
[12:16:22] <bitplane> Hi, is there an easy/preferred solution for enums with multiple values that works with typing?
[12:16:30] <Payam> Hi in Regular expressions is there a way to match for a word like "/word" and "/word/" only and not anything else after it like "/word_/" or "/word-/" etc. ?
[12:16:32] <bitplane> I'm doing this at the moment: https://gist.github.com/bitplane/bea117902e42f3039359a978c6464c89
[12:16:50] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:17:09] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[12:18:56] <Repiphany> Payam: As in /word would be the end of the string?
[12:19:42] *** Joins: palasso (~palasso@user/palasso)
[12:22:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:22:44] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[12:23:09] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[12:23:27] *** Parts: nicoz-deb (nicoz@2607:5300:60:21b::1) ()
[12:26:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:27:23] *** dcaro_away is now known as dcaro
[12:28:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:29:22] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[12:29:24] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[12:29:55] *** Quits: teut (~teut@2401:4900:1c68:6b85:4d9d:d2be:67d7:2e63) (Ping timeout: 256 seconds)
[12:30:35] <Payam> Repiphany could be but not neccessary. Could be the beggining and the end
[12:30:58] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[12:31:36] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:31:37] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:32:58] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[12:33:08] *** Joins: andreasbuhr (~quassel@p548dd6cd.dip0.t-ipconnect.de)
[12:33:09] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:33:12] <Repiphany> I mean if not anything else after it, I presume you mean you want something like "/word(/|$)"
[12:33:53] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:34:17] <Payam> Repiphany I found another text. it is either "word" or "word/" and both are at the beginning of a string. but no "word-" or "word_" or "word[" etc.should be selected.
[12:34:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:34:54] <Payam> so ^word(/)"?
[12:35:20] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[12:35:27] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:35:46] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 245 seconds)
[12:36:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:36:30] <Repiphany> "/?word/?$" if the slashes are optional also matches
[12:36:59] *** Peng__ is now known as Peng
[12:37:08] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[12:37:25] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[12:38:10] *** Joins: pr3d4t0r (~zhenya01@varenka.cime.net)
[12:38:22] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:39:02] <Payam> Repiphany it still matches with "word-blabla"
[12:39:12] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[12:39:24] <Repiphany> $ matches the end of the string so you're doing something wrong
[12:40:31] *** Quits: say^2 (~zay@ti0048a400-1861.bb.online.no) (Quit: leaving)
[12:40:35] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[12:40:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:40:56] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:41:43] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:42:20] <Payam> Repiphany maybe I am not clear. You see there are for instance tree strings : "word", "word-blabla/blabla/", "word/blabla"/ . I try to match only "word" and "word/blabla/" and not "word-blabla/blabla/.."
[12:42:29] <Payam> so I can remove the dollar sign
[12:42:34] *** Joins: pabar (~pabar@2.123.105.158)
[12:43:14] <Payam> didn't work
[12:43:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[12:44:15] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:45:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:45:32] *** Joins: fikran (~fikran@user/fikran)
[12:46:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:57] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:47:37] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[12:51:30] <Repiphany> "word(?!/)"
[12:51:42] *** Joins: hightower2 (~hightower@95.168.116.1)
[12:51:51] <Repiphany> oops
[12:51:52] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[12:51:56] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:52:15] *** Joins: someuser (~user@197.54.99.203)
[12:52:45] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Remote host closed the connection)
[12:52:48] <Repiphany> "word(?=/|$)"
[12:52:57] <Ruit> ?
[12:54:17] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:bcce:385:7e5d:7553) (Ping timeout: 256 seconds)
[12:54:32] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[12:54:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:54:52] *** Joins: lntl (~joey@24.136.23.254)
[12:55:56] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:56:34] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Quit: Leaving)
[12:56:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:57:05] *** Joins: qeqeqw1 (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[12:57:18] <qeqeqw> Payam is this what you want /^word(?!-blabla)(?:\/blabla\/)?/     ?
[12:58:31] *** Quits: retrosenator (~retrosena@63.sub-174-203-192.myvzw.com) (Read error: Connection reset by peer)
[12:58:51] <vanessa> is it possible to use pdb like gdb? without changing my code and defining breakpoints and watches in pdb's repl?
[12:58:57] *** Quits: lntl (~joey@24.136.23.254) (Ping timeout: 240 seconds)
[12:59:20] *** Joins: unyu (~pyon@user/pyon)
[12:59:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:59:25] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[13:00:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:00:37] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 240 seconds)
[13:01:42] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[13:02:17] *** Joins: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de)
[13:02:30] *** Quits: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de) (Changing host)
[13:02:30] *** Joins: menace (~someone@user/menace)
[13:02:34] *** menace is now known as Deknos
[13:03:13] *** Joins: nomic (~nomic@185.192.69.217)
[13:03:23] *** Quits: nomic (~nomic@185.192.69.217) (Client Quit)
[13:03:40] *** Joins: nomic (~nomic@185.192.69.217)
[13:04:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:04:59] *** Joins: oxniu (~oxniu@2409:8914:30:97be:c428:fdc6:c1dc:90d5)
[13:06:44] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:07:22] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 250 seconds)
[13:08:08] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:38] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:09:17] *** Quits: oxniu (~oxniu@2409:8914:30:97be:c428:fdc6:c1dc:90d5) (Ping timeout: 240 seconds)
[13:09:22] *** Joins: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e)
[13:09:22] *** Quits: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e) (Changing host)
[13:09:22] *** Joins: hylisper (~yaaic@user/hylisper)
[13:09:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[13:12:37] *** Joins: hightower3 (~hightower@212.15.178.16)
[13:12:54] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[13:13:03] *** Joins: saroy (~Sandipan@43.252.250.86)
[13:13:29] *** Quits: hightower2 (~hightower@95.168.116.1) (Read error: Connection reset by peer)
[13:13:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:23] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:14:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[13:15:08] *** Joins: LimeOn (~user@user/limeon)
[13:15:15] *** Quits: ketiv (~ketiv@92.40.170.55.threembb.co.uk) (Ping timeout: 256 seconds)
[13:15:29] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Client Quit)
[13:16:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:16:46] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[13:17:27] *** Joins: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th)
[13:17:37] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:19:08] *** Joins: ketiv (~ketiv@92.40.199.187.threembb.co.uk)
[13:19:11] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:20:27] <qeqeqw> access
[13:21:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[13:22:13] *** Quits: Ergo^ (~ergo@91.238.59.144) (Ping timeout: 256 seconds)
[13:24:19] *** Quits: ketiv (~ketiv@92.40.199.187.threembb.co.uk) (Ping timeout: 256 seconds)
[13:24:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:25:28] *** Joins: ketiv (~ketiv@92.40.194.231.threembb.co.uk)
[13:25:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:26:15] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[13:26:52] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 250 seconds)
[13:27:46] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:31:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[13:31:56] *** Joins: hylisper2 (~yaaic@103.205.173.25)
[13:32:56] *** Joins: erkan (~erkan@p200300d34711968fdd59b2881401700c.dip0.t-ipconnect.de)
[13:33:54] *** Joins: stonkey (~stonkey@user/stonkey)
[13:33:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:33:57] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:34:35] *** Joins: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:34:37] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 240 seconds)
[13:34:37] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:34:41] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:35:38] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[13:36:51] <mad_moses> Hi, can I check if my current virtualenv fits my requirments.txt? (I currently write a script for my deployment and want to check if my target system has everything installed)
[13:37:48] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Quit: Leaving)
[13:37:53] *** Quits: qeqeqw1 (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Quit: Leaving)
[13:38:08] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:38:37] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:40:16] <sn_fk_n> check out `pip check` maybe?
[13:40:21] <kushal> mad_moses, python3 -m pip list ?
[13:40:22] *** Joins: beli6148 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[13:40:28] *** Joins: reset (~reset@user/reset)
[13:40:32] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:40:45] <mad_moses> but how can I check it against my requirments.txt
[13:40:48] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3)
[13:41:53] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 256 seconds)
[13:41:53] *** beli6148 is now known as beli6147
[13:42:00] <sn_fk_n> i mean you can probably quite easily write a script to check that everything in requirements.txt is pip list
[13:42:11] <sn_fk_n> i dunno if there's anything you can do that does it automagically
[13:43:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[13:43:32] <sn_fk_n> maybe freeze would be better for this actually
[13:45:46] *** Quits: sn_fk_n (~snufkin@2.221.192.124) (Quit: Lost terminal)
[13:46:00] *** Joins: sn_fk_n (~snufkin@2.221.192.124)
[13:46:15] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--366.oracle-ocna.com)
[13:49:44] <allana> Hi #python! This is my first time visiting this channel. Just curious, anyone in here use GNU guix in lieu of virtualenvs for developing in Python? I have been doing so for a few years now and I am looking for kindrid spirits, as well as opinions.
[13:54:22] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[13:55:54] *** Joins: walterwhip (~www@user/walterwhip)
[13:56:06] *** Joins: Proxysna (~Proxysna@185.251.89.199)
[13:57:10] *** Joins: ice9 (~ice9@user/ice9)
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:57:47] *** Joins: Proxysna_ (~Proxysna@62.119.254.142)
[13:57:47] *** Joins: cbertram[m] (~cbertramm@2001:470:69fc:105::1:6890)
[14:00:06] <Affliction> I've been heaaring of this 'guix' thing quite a bit lately, don't think I've heard of it months ago, might be time to look into it.
[14:00:40] *** Joins: molt (~molt@46.33.200.12)
[14:00:45] *** Quits: Proxysna (~Proxysna@185.251.89.199) (Ping timeout: 256 seconds)
[14:01:09] <Affliction> First impression: interesting. If it works, why not?
[14:01:28] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:01:28] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[14:01:30] <allana> :-)
[14:01:35] *** Joins: Joss (~joss@user/Joss)
[14:01:40] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:03:59] *** Quits: lavos (~molt@46.33.200.12) (Ping timeout: 256 seconds)
[14:04:11] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:04:23] <allana> I have to work a lot with docker/kubernetes and one cool feature of guix is "guix pack", which allows me to create a docker container from my package definition. So while I am working on a pyhton project, when it's ready I already have what I need to generate a docker image without dealing with docker or Dockerfiles.
[14:06:45] <allana> But anyway, for everyday use it's indispensible as a virtualenv that has scope beyond the python ecosystem. Was hoping to connect with anyone who might be using this technology here.
[14:07:51] *** Joins: shad (~shad@user/shad)
[14:08:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:09:33] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:11:07] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[14:14:30] *** Quits: andreasbuhr (~quassel@p548dd6cd.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:14:32] *** Quits: deck (~deck@177.172.19.128) (Quit: WeeChat 3.4)
[14:15:02] *** Joins: cdown (~cdown@163.114.131.1)
[14:15:12] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[14:15:42] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[14:15:50] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e0:a7ed:607d:81a8:b645:3a30) (Read error: Connection reset by peer)
[14:16:08] *** Quits: Devtron (~Devtron@D4708984.rev.sefiber.dk) (Remote host closed the connection)
[14:17:54] <vanessa> hi is there a #if macro counter part in python?
[14:18:07] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677)
[14:19:36] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[14:19:40] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Read error: Connection reset by peer)
[14:19:47] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:19:48] <The-Compiler> vanessa: no, since there is not really a concept of a preprocessor/compiler (other than a "transparent" bytecode compiler) - what's your goal?
[14:20:09] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[14:20:20] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[14:21:05] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[14:23:55] *** Joins: gusto (~Augustus@109.255.100.54)
[14:24:21] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:24:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:25:36] <vanessa> The-Compiler: I have some part of code that I want to execute conditionally, and go back and forth quickly. like #define DEBUG 0 #if DEBUG conditional_code_here #endif will act as a comment with DEBUG toggling the comment. And since Python's indentations are so important, I cannot even put it in a if statement without messing up the flow.
[14:26:45] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:27:37] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[14:28:26] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:28:31] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:28:44] <Wulf> vanessa: code = """class X: ..."""   if True: eval(code, locals(), globals())
[14:29:01] <Wulf> err... exec, not eval.
[14:29:09] <The-Compiler> meh :)
[14:29:16] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:29:22] <Wulf> exec(code, globals(), locals())
[14:29:48] <vanessa> it runs in the same namespace as the rest of my code?
[14:29:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:30:00] <The-Compiler> depending on the circumstances, I'd probably just have the code in a function or so, and call that (or another one) based on a feature flag or whatever
[14:30:10] <Wulf> vanessa: I think so. Better double check it.
[14:30:18] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[14:31:17] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:31:58] *** Joins: Payam (~Payam@138.106.57.132)
[14:32:17] <Payam> Repiphany Thanks. It worked like a charm
[14:32:22] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--366.oracle-ocna.com) (Read error: Connection reset by peer)
[14:33:52] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:34:10] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3)
[14:34:17] *** Parts: cbertram[m] (~cbertramm@2001:470:69fc:105::1:6890) ()
[14:34:28] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:34:29] *** Joins: Guest26 (~Guest26@78-58-232-10.static.zebra.lt)
[14:34:51] *** Joins: e2m4n (~ezman@user/e2m4n)
[14:35:53] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 256 seconds)
[14:36:28] *** Joins: dntreou (~yakiza@102.69.128.34)
[14:37:28] *** Joins: vanessa (~annada@103.160.128.7)
[14:37:35] *** Quits: hylisper2 (~yaaic@103.205.173.25) (Ping timeout: 256 seconds)
[14:39:12] *** Joins: md618 (~md618@37.228.215.251)
[14:39:14] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 250 seconds)
[14:39:39] *** Quits: somazero (~somazero@2600:8805:b00:10::19b5) (Quit: WeeChat 3.3)
[14:39:45] <vanessa> Wulf: it is not working https://www.online-python.com/dE8YvnVmiu
[14:39:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:40:20] *** Joins: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e)
[14:40:21] *** Quits: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e) (Changing host)
[14:40:21] *** Joins: hylisper (~yaaic@user/hylisper)
[14:40:29] *** Joins: kevr` (~kevr@user/kevr)
[14:40:46] <bjs> vanessa: I suggest avoiding exec() and just answering with "no, Python doesn't have macros"
[14:41:04] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[14:41:10] <bjs> Most of the time you put things in functions anyway, so a conditional call to a function is not a big deal
[14:41:35] *** Quits: oprypin (~irc@pryp.in) (Remote host closed the connection)
[14:41:46] <Wulf> vanessa: exec, not eval. Sorry for the confusion.
[14:42:10] <vanessa> bjs: then what would be the preferred solution if functions are not desired?
[14:42:19] <bjs> vanessa: an `if` statement with an indent.
[14:42:45] <Wulf> bjs: huh... I should have thought of that (:
[14:43:20] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[14:43:24] <vanessa> bjs: that will cause a lot of refactoring of the code and why is exec not recommended? what is wrong with exec?
[14:43:49] <Wulf> vanessa: it's just one indent. How is that lot of refactoring?
[14:43:55] <bjs> vanessa: nothing is "wrong" with exec,  it just comes with a laundry list of caveats that means even I fail to use it correctly most of the time
[14:43:57] <Wulf> vanessa: exec+eval are ugly.
[14:44:10] <The-Compiler> eval is a common misspelling of evil ;)
[14:44:19] <Swayze> :p
[14:44:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:44:29] <vanessa> ha ha
[14:44:36] <Swayze> thats how you write code for a virus, code that writes itself
[14:44:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:45:29] <vanessa> Swayze: but think about the potential for metaprogramming with exec
[14:45:42] <bjs> vanessa: and obviously, eval vs exec, exec 1 vs 2 arguments, locals() (is not what you think it is), my editor doesn't syntax highlight or lint or check code inside a string, exec probably doesn't work the way you think it does in terms of scopes, and finally we have functions+modules which are usually a much nicer option anyway
[14:45:44] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[14:46:27] <bjs> and when you really do need conditional execution at the top-level, a bare `if` usually does just fine.
[14:46:35] <bjs> It's fairly rare (but not totally unheard of...)
[14:48:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:49:02] *** Parts: allana (~user@2001:4641:6aed:0:4ad:2c51:49e9:2b4a) (ERC (IRC client for Emacs 28.0.50))
[14:49:10] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:52:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:53:32] <Wulf> bjs: if py3: import... else: implement it yourself.
[14:54:23] <Wulf> or optional features. Try to import something. If it fails, disable the feature.
[14:54:53] *** Joins: fikran (~fikran@user/fikran)
[14:55:26] <bjs> vanessa: if you're still not sure what I mean, here's a pop quiz: https://bpa.st/CFXA  try guess (without running,  just read the docs) what each function does and why and see how many you get right
[14:55:26] <bjs> :P
[14:57:04] <Wulf> bjs: is only one function run a time?
[14:57:06] <Wulf> +at
[14:57:24] *** Joins: foreverr (~foreverr@176.88.95.11)
[14:57:49] *** Quits: ketiv (~ketiv@92.40.194.231.threembb.co.uk) (Ping timeout: 256 seconds)
[14:57:55] <bjs> Wulf: well you get different answers if you try run them one after the other and what order you decide to run yes,  which also adds to the "fun"
[14:57:56] <jinsun> just having to write code in strings makes them super ugly already
[14:59:02] <bjs> Wulf: exec scoping works weird, and this is only *writing*.  Reading variables inside an exec behaves even weirder because of the way class scopes work
[14:59:06] <bjs> (and yes I know there are no classes here!)
[14:59:06] <nedbat> jinsun: welcome to the coverage.py test suite...
[14:59:28] *** Parts: foreverr (~foreverr@176.88.95.11) ()
[14:59:39] *** Joins: ketiv (~ketiv@92.40.196.239.threembb.co.uk)
[14:59:57] *** Quits: dntreou (~yakiza@102.69.128.34) (Ping timeout: 240 seconds)
[15:00:25] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[15:00:33] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[15:01:02] *** Joins: de-facto (~de-facto@user/de-facto)
[15:01:17] <Yhg1s> bjs: well, Python 2 or 3? :)
[15:01:27] <bjs> Yhg1s: what is a "Python 2"
[15:01:30] <Yhg1s> bjs: in Python 2, one of the NameErrors changes to just 42.
[15:01:39] *** Joins: Xano (~Xano@2a00:23c4:4204:700:e49e:bc1a:d89b:7604)
[15:01:41] <bjs> :P
[15:01:50] <vanessa> bjs: I get your point, that exec() is one hell of a rabbit hole.
[15:02:24] <Wulf> bjs: function `a' confuses me. Why does it not work?
[15:02:41] <Yhg1s> Wulf: because you can't affect locals indirectly.
[15:02:43] <bjs> vanessa: ^ see,  even people who really do know what they are doing still get confused. Even at the one that doesnt' even have exec :D
[15:02:44] <Yhg1s> locals() returns a copy.
[15:02:49] <Wulf> oh.
[15:03:07] <bjs> Yhg1s: wasn't there some discussion a while ago about making locals() return some proxy object that you could "write" through?
[15:03:08] <jinsun> nedbat: :D, well there the stuf in the strings is not really your code so not as bad
[15:03:21] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--213.oracle-ocna.com)
[15:03:22] <Yhg1s> bjs: indeed. It's still a pending PEP.
[15:03:23] <nedbat> jinsun: true
[15:03:28] <bjs> Yhg1s: ah
[15:03:40] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[15:03:41] <nedbat> jinsun: textwrap.dedent ftw
[15:03:42] <vanessa> I heard someone say here that "Python 2" is the other name for "PyPy".
[15:03:43] <bjs> Oh is that 558
[15:03:55] <Yhg1s> bjs: yes.
[15:03:59] <bjs> vanessa: PyPy has been Python 3 for a while
[15:04:15] <bjs> Yhg1s: I don't know how you keep up
[15:04:16] <rendar> best way to insert datetime into json is this `str(dt.datetime.now())` right?
[15:04:38] <Yhg1s> bjs: we have weekly meetings and we go over all open PEPs a few times a year.
[15:05:54] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:05:55] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[15:06:02] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[15:06:03] <Wulf> rendar: no. Either store a unix timestamp dt.datetime.now().timestamp(), or create an aware timestamp and call .isoformat() on it.
[15:06:19] *** Quits: d1b_ (~db@user/d1b) (Ping timeout: 256 seconds)
[15:06:43] <Wulf> rendar: dt.datetime.now(dt.timezone.utc).isoformat()
[15:06:51] <bjs> Yhg1s: makes sense,  do you sponsor any PEPs?
[15:07:23] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:07:30] *** Joins: d1b (~db@user/d1b)
[15:07:36] <bjs> (is sponsering the modern phrasing?)
[15:07:37] <Yhg1s> bjs: not me personally, but that's mostly because I spend my time on other things besides Python development (like running the PSF at the moment)
[15:07:38] *** Joins: oprypin (~irc@pryp.in)
[15:07:50] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[15:07:50] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--213.oracle-ocna.com) (Ping timeout: 250 seconds)
[15:07:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:08:23] <Yhg1s> bjs: it's a thing, yes. I don't know if it's the thing you meant. There's sponsors, which is 'submitting a non-core-dev's PEP', and delegates, which is 'decide on a PEP'
[15:09:02] <bjs> Yhg1s: yes it was the thing I meant, basically a round-about way of asking what changes you want to see in Python
[15:09:06] *** Joins: magla (~gelignite@55d43516.access.ecotel.net)
[15:09:10] <The-Compiler> vanessa: There is "Python" as in the language/syntax, and "Python" as in the project implementing that language. Most people use the "official" Python interpreter, CPython. PyPy is an alternative to it, and indeed for a long time only supported Python 2, but that changed in 2014 with PyPy3
[15:09:29] <The-Compiler> vanessa: (CircuitPython/MicroPython is another somewhat common alternative Python implementation)
[15:09:49] <Yhg1s> bjs: oh, that's an entirely different topic :P
[15:09:56] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:10:21] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Read error: Connection reset by peer)
[15:10:24] *** Joins: raym (~raym@user/raym)
[15:10:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:10:29] <bjs> Yhg1s: is that because there are things you would like to see but nobody will ever write a PEP or ?
[15:10:50] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[15:13:22] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[15:13:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[15:13:43] <rendar> Wulf, thanks! very useful
[15:13:57] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[15:14:24] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[15:14:26] <rendar> Wulf, once i serialize datetime with your method `dt.datetime.now(dt.timezone.utc).isoformat()`, which i find the best, do you have any other best suggestion to deserialize that string into a datetime object?
[15:14:51] <leshaste> how do you pip install the more recent v1.x version of tensorflow? I don't want v2.x
[15:15:54] <Wulf> rendar: dateutil.parser.parse("2022-01-13T11:45:45.108518+00:00")
[15:16:06] <rendar> i see thanks
[15:16:56] *** Quits: pycode (~pycode3@2001:b07:5d28:551:fc33:f40d:cee5:afe4) (Ping timeout: 250 seconds)
[15:17:14] *** dcaro is now known as dcaro_lunch
[15:17:40] <jinsun> I just use .fromisoformat to revese .isoformat
[15:19:01] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--3c1.oracle-ocna.com)
[15:19:23] <rendar> jinsun, wait, datetime.fromisoformat, or dateutil?
[15:20:05] <vanessa> The-Compiler: PyPy is a drop in replacement for the python interpreter? Sort of, what LLVM is to GCC?
[15:20:12] <jinsun> rendar: datetime.datetime.fromisoformat
[15:20:14] <Wulf> jinsun: doesn't work if someone decides to send "Z" instead of "+00:00" or "+0000"
[15:21:09] <jinsun> Wulf: but can .isoformat do that? I think .fromisoformat can always reverse what .isoformat produced
[15:21:27] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:21:33] <rendar> if i have +00:00, since that's the timezone, i can assume that's UTC
[15:21:38] <Wulf> jinsun: that's right. But then someone else uses another library to generate other valid iso formats.
[15:21:43] <Yhg1s> bjs: some of it, sure. And also I don't go out and look for PEPs to sponsor :)
[15:21:47] <taeaad> If you do subprocess.run(['sqlite3... does this limit the speed at which you run SQLite3 queries to any Python limits, or is it equivalent to calling SQLite3 from the command line?
[15:21:52] <Yhg1s> vanessa: very roughly, sure.
[15:22:19] <Yhg1s> taeaad: it is equivalent to calling sqlite3 from the command line.
[15:22:29] <Yhg1s> taeaad: there's not really a reason to do that over using the sqlite3 module though.
[15:22:53] <taeaad> Yhg1s: Is it better to use the sqlite3 module?
[15:23:07] <Yhg1s> taeaad: almost always, yes.
[15:24:11] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:24:27] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[15:24:47] <vanessa> That got me thinking, if we can convert Python (as in the language) to a IR that LLVM/GCC can understand, then we can get x86/amd64 binaries and run them natively and very fast, can't we? Yhg1s
[15:24:53] <Yhg1s> leshaste: 'pip install tensorflow<2.0' probably.
[15:25:08] <Yhg1s> vanessa: sure. Unfortunately that's not a thing that's possible.
[15:25:16] <leshaste> Yhg1s, thanks!
[15:25:33] *** Joins: ahammer (~ahammer@157.122.68.203)
[15:25:39] *** Joins: han-solo (~hanish@user/han-solo)
[15:25:43] <Yhg1s> vanessa: you still need a VM, for a variety of reasons. PyPy does the closest thing that's possible to that. (It used to also be able to target LLVM IR, but I think they dropped it.)
[15:26:04] *** Quits: ahammer (~ahammer@157.122.68.203) (Remote host closed the connection)
[15:26:30] *** Joins: root__ (~root@user/mokytis/x-7723836)
[15:26:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:26:53] *** Joins: mokytis (~root@user/mokytis/x-7723836)
[15:28:13] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:33:15] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677) (Remote host closed the connection)
[15:33:33] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677)
[15:33:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:34:42] <leshaste> Yhg1s, pip install tensorflow<2.0
[15:34:43] <leshaste> bash: 2.0: No such file or directory
[15:35:06] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[15:35:15] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--3c1.oracle-ocna.com) (Read error: Connection reset by peer)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:32] <mokytis> just evesdropping, but `pip install "tensortflow<2.0" might help you
[15:36:52] <mokytis> otherwise bash interprets the < as a file redirect
[15:36:52] *** Quits: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[15:37:28] <omegatron> to be precise, it tries to read a file '2.0' and feed it as input to the pip program
[15:37:29] <rendar> vanessa, basically you're speaking of JITted python, which is still not feasible as Yhg1s explained to you, however other languages can be JITted, like JavaScript, as the famous js v8 library does
[15:37:37] <leshaste> Yhg1s, argh.. version <2 are not available through pip any more??
[15:38:30] <vanessa> leshaste: what is wrong with conda? I think <2.0 is available in conda-forge.
[15:39:07] <leshaste> vanessa, nothing, I have just never used it and mixing conda and pip .. well I don't know if it's a good idea
[15:39:20] <leshaste> all I am trying to do is run stable-baselines?!!
[15:39:24] *** Joins: dez (uid92154@user/dez)
[15:39:26] <leshaste> surely it can't be so hard
[15:39:53] <rendar> vanessa, consider also that in 99% of coding cases, you don't need fast jitted python
[15:40:17] *** Joins: dntreou (~yakiza@102.69.128.34)
[15:40:25] <vanessa> leshaste: it is okay to use conda with pip as long as `which pip` is pointing to conda's local pip, not the systems.
[15:40:29] <rendar> vanessa, and also consider that if you have some code that must do very fast calculations, you can still write that particular routine in C/C++ and call it from python, there are plenty of ways to do this
[15:40:45] <leshaste> vanessa, ah ok...I already have a lot of things pip installed
[15:41:08] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[15:41:21] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[15:41:40] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:41:56] <vanessa> rendar: I think what you mean. the library I am working with right now is just python wrapper around C++ code.
[15:42:04] <trace987> why can some pip packages can be installed on some linux distributions, but not on others?
[15:42:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.225)
[15:43:17] <vanessa> leshaste: I hope that was not your systems env but in a virtual env.
[15:43:22] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[15:44:18] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:44:25] *** Joins: Guest99 (~Guest99@n175-32-17-12.meb1.vic.optusnet.com.au)
[15:44:33] *** Quits: Guest99 (~Guest99@n175-32-17-12.meb1.vic.optusnet.com.au) (Client Quit)
[15:44:45] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[15:45:07] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[15:45:28] <vanessa> trace987: for instance? I use a very niche distro and all packages I need work. And I don't think anyone even cares about my distro when building wheels.
[15:46:09] *** Joins: geli (~gelignite@55d43fe5.access.ecotel.net)
[15:46:18] *** Joins: codificat (~pep@126.red-79-158-54.dynamicip.rima-tde.net)
[15:46:28] * leitz cheers niche distros.
[15:46:48] <trace987> pip orderedset does not work everywhere
[15:47:02] <trace987> maybe built tools are missing
[15:48:07] <The-Compiler> trace987: it seems to be a pure Python package which means a lot less considerations - the only thing I can imagine is an older incompatible Python version
[15:48:22] <The-Compiler> trace987: what does "does not work" mean precisely?
[15:48:34] *** Quits: magla (~gelignite@55d43516.access.ecotel.net) (Ping timeout: 250 seconds)
[15:48:46] *** Joins: jellyknight (~gelignite@55d4319d.access.ecotel.net)
[15:49:35] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:49:40] *** Joins: esv (~esv@74.124.178.154)
[15:49:41] <The-Compiler> trace987: for packages including native code, there are a lot more considerations - pip being up to date, the glibc version, distros using alternative libcs (like Alpine with musl), different architecture (e.g. ARM on a Raspberry Pi and some other devices), etc. etc.
[15:50:15] *** Joins: frost73 (~frost@user/frost)
[15:50:33] *** Joins: RiFo (~RiFo@user/rifo)
[15:50:42] *** Joins: pycode (~pycode3@2001:b07:5d28:551:bdd3:d3b3:a417:8bec)
[15:51:37] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:51:39] *** Quits: geli (~gelignite@55d43fe5.access.ecotel.net) (Ping timeout: 256 seconds)
[15:51:45] <vanessa> The-Compiler: I agree. I have a lot of headaches with native code compilation on the fly with GCC and it fails even if I am on the correct GCC version and C standard library and arch.
[15:51:54] *** Joins: magla (~gelignite@55d4b5f5.access.ecotel.net)
[15:52:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi)
[15:52:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:52:59] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3)
[15:53:20] <trace987> so what should I do
[15:53:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:54:05] *** Quits: jellyknight (~gelignite@55d4319d.access.ecotel.net) (Ping timeout: 256 seconds)
[15:54:07] *** frost73 is now known as frost
[15:54:24] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[15:54:50] <leitz> Any suggestions on how to make the setUp() and tearDown() better? An actual DB will be under test since I'm still muddling through the design and my processes.     https://bpa.st/FNPQ
[15:54:53] <trace987> https://pastebin.com/WPXAAcaQ
[15:54:57] <trace987> this is the error
[15:55:19] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[15:55:26] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677) (Read error: Connection reset by peer)
[15:55:43] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677)
[15:56:49] <kosh> it looks like the nogil python version is continuing to get quite active development, any information on the feasability of actually getting it merged in eventually?
[15:57:18] <trace987> ld can not be found
[15:57:23] <The-Compiler> trace987: that indeed looks like missing build tools
[15:57:33] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b)
[15:58:37] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[15:58:58] *** Quits: cyphase_ (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[15:58:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:00:12] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: oddish)
[16:00:28] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[16:00:30] <The-Compiler> leitz: you might want to consider using pytest and its fixtures
[16:01:33] <vanessa> One thing I hate about Python that some shitty sites like geeksforgeeks, tutorialspoint, realpython have highjacked SEO and the search engines don't even return the desired page.
[16:01:54] <Helle> vanessa: yes
[16:02:26] <trace987> but built tools are installed
[16:02:49] <rendar> is good practice considering cancelled/timedout tasks as errors?
[16:03:09] <leitz> The-Compiler, I thought about pytest, and have tried it out. While it's nice, I'm not seeing a compelling use case nor an active IRC channel. Unittest works, far as I can tell.
[16:03:18] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[16:03:25] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:dcb7:d938:b87e:d07e) (Quit: Leaving)
[16:03:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:04:07] *** Quits: ketiv (~ketiv@92.40.196.239.threembb.co.uk) (Ping timeout: 256 seconds)
[16:04:21] <vanessa> trace987: how come ld is not installed in a distro? I thought it belonged to coreutils.
[16:04:30] <trace987> it is installed
[16:04:55] <jinsun> leitz: you can ask pytest questions here (and there is #pytest)
[16:05:18] <hexa-> vanessa: binutils
[16:05:56] *** Joins: ketiv (~ketiv@92.40.194.234.threembb.co.uk)
[16:08:15] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[16:08:18] <vanessa> trace987: I cannot understand Deutcsh
[16:08:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:09:20] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:09:36] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a7fd:cfa9:a0b2:2b1a)
[16:09:46] <grym> vanessa: nobody else likes SEO hacking either; however, zealdocs is great and requires no browser at all
[16:09:50] <grym> (if only it supported hotlinking)
[16:10:26] <hexa-> there is also uBlacklist, that lets you ban these sites from your google results
[16:10:29] *** Joins: Vonter (~Vonter@user/vonter)
[16:10:30] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:10:50] <The-Compiler> leitz: note that pytest is far more popular than unittest is, though
[16:10:57] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:10:58] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:11:05] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.225) (Ping timeout: 256 seconds)
[16:11:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[16:11:30] <The-Compiler> leitz: I'm obviously biased (I'm one of pytest's maintainers), but I really wish I knew about pytest before I started using unittest for my project and switched later :)
[16:11:31] *** dcaro_lunch is now known as dcaro
[16:11:36] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[16:11:42] <hexa-> 2124/4803 python packages in nixos use pytest
[16:11:56] <hexa-> 171/4803 use unittest
[16:12:01] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[16:12:02] <The-Compiler> vanessa: to be fair, Realpython har great tutorials, only the account requirement is a pain
[16:12:11] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:12:22] *** Joins: ahammer (~ahammer@157.122.68.203)
[16:12:26] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:12:40] <hexa-> I wish people would stop using nosetests though
[16:12:41] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:12:46] <trace987> vanessa,     collect2: fatal error: "ld" cannot be found.   Compilation finished.       error: command '/bin/gcc' failed with exit code 1
[16:12:50] <hexa-> 327/4803 (nose)
[16:12:55] <Yhg1s> rendar: JITed Python is very feasible, and has been for many, many years. That's what PyPy *is*. And it's way faster, too.
[16:13:11] <rendar> Yhg1s, i see
[16:13:21] <grym> hexa-: TIL, thanks
[16:13:31] <rendar> Yhg1s, why cpython doesn't embrace that approach?
[16:13:45] *** Quits: mokytis (~root@user/mokytis/x-7723836) (Quit: Lost terminal)
[16:13:45] *** Quits: root__ (~root@user/mokytis/x-7723836) (Quit: Lost terminal)
[16:13:45] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[16:13:47] <The-Compiler> hexa-, leitz: https://www.jetbrains.com/lp/python-developers-survey-2020/ - 28k respondents, 49% report using pytest, 28% unittest (4% nose, 37% no test framework at all)
[16:13:48] <grym> take that, w3schools!  ahahaha
[16:13:52] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Max SendQ exceeded)
[16:14:03] <Yhg1s> leshaste: you need to escape special characters for your shell, like '<'. Also, tensorflow is only available as wheels on PyPI, because source builds are very complicated, and for 1.x they only have wheels for Python 3.6/3.7.
[16:14:08] <The-Compiler> really curious how that will look for the 2021 survey, which I think is not out yet
[16:14:16] <Yhg1s> rendar: what makes you say it doesn't?
[16:14:16] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[16:14:21] <rendar> how to fix this? is it possible? https://bpa.st/X3QQ
[16:14:25] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.241)
[16:14:34] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b9a:7a2e:eb82:b9d3) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:14:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:14:44] <The-Compiler> trace987: so you can run ld in a terminal?
[16:14:49] <trace987> yes
[16:14:58] <The-Compiler> trace987: weird
[16:15:00] <trace987> maybe this error message is wrong
[16:15:04] <rendar> Yhg1s, this answer on stackoverflow: <<To answer the question you meant to ask: CPython, 3.x or otherwise, does not, never did, and likely never will, contain a JIT compiler. >>
[16:15:06] <The-Compiler> trace987: what does "which ld" say?
[16:15:11] <trace987> and not ld can not be found but its targets
[16:15:18] <leitz> The-Compiler, if I did what everyone else did, I'd be like everyone else, right?  ;)
[16:15:18] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[16:15:21] <The-Compiler> rendar: I thinnk you can just use X and Y there
[16:15:22] <trace987> which: no ld in ((null))
[16:15:30] <Yhg1s> rendar: sounds like a typical SO answer.
[16:15:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:15:38] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[16:15:41] <The-Compiler> trace987: I'm not sure what makes you think that you have ld, then
[16:15:44] <vanessa> is there a online version of zeal?
[16:15:50] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[16:15:54] <rendar> Yhg1s, you mean it's wrong?
[16:15:58] <hexa-> The-Compiler: then I'm probably miscounting packages that still rely on `python setup.py test`
[16:16:01] <The-Compiler> trace987: "fatal error: "ld" cannot be found" makes it pretty clear, no?
[16:16:07] <trace987> when I run ld it says: ld no input files
[16:16:10] <Yhg1s> rendar: I mean it's people talking with pretend-authority.
[16:16:27] <trace987> there is sort of ld command
[16:16:29] <Yhg1s> rendar: but perhaps you should use PyPy and find out why *you*'re not embracing it :)
[16:16:29] <hexa-> that output looks fine (no input files)
[16:16:40] <leitz> The-Compiler, cool on being a pytest maintainer! I'm trying to figure out if i have the brains to help with the python docs.
[16:16:44] *** Quits: ahammer (~ahammer@157.122.68.203) (Ping timeout: 250 seconds)
[16:16:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:16:46] <trace987> but the other outputs looks not fine
[16:16:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:17:04] <Yhg1s> trace987: what does 'type ld' say?
[16:17:06] <hexa-> trace987: wherever ld is on your system, it needs to be in a path in your PATH env var
[16:17:29] <trace987> ld is /usr/bin/ld
[16:17:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:17:43] <leitz> The-Compiler, my choice of unittest devolves back to my usual work environment, which is usually "very limited". That's why the standard library focus.
[16:17:50] <Yhg1s> trace987: then it's very strange that 'which ld' produced that error.
[16:17:57] <Yhg1s> trace987: and also that gcc can't find it.
[16:18:08] <grym> The-Compiler: turns out evernyy last nose respondent worked on the ipython kernel, and now thit's pytest... :D
[16:18:20] <rendar> Yhg1s, lol, i see
[16:18:38] <trace987> what does that mean: which ld
[16:18:38] <trace987> which: no ld in ((null))
[16:18:40] *** Quits: pycode (~pycode3@2001:b07:5d28:551:bdd3:d3b3:a417:8bec) (Ping timeout: 250 seconds)
[16:18:54] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 250 seconds)
[16:18:55] <Yhg1s> trace987: it *sounds* like you broke $PATH.
[16:19:04] <trace987> very good to know
[16:19:07] <rendar> `if any of ("a","b","c") not in my_dict: call_error()` what is the most pythonic way to get this?
[16:19:18] <trace987> echo $PATH /usr/bin /bin /usr/bin/site_perl /usr/bin/vendor_perl /usr/bin/core_perl /var/lib/snapd/snap/bin /opt/scripts
[16:19:31] <The-Compiler> trace987: those spaces should not be spaces
[16:19:32] <trace987> is there something wrong with PATH?
[16:19:38] <hexa-> they should be colons
[16:19:44] <trace987> ahh
[16:19:59] <leitz> grym, my IRC client can't read some of the characters in your response. Do you mean that ipython kernel people used nose, but now ipython uses pytest?
[16:20:00] <Yhg1s> (if you're using a bash-like shell at least.)
[16:20:10] <vanessa> hexa-: what if he is using fish?
[16:20:14] <trace987> it is fish shell, thats why its spaces and not colons
[16:20:25] <hexa-> oh well
[16:20:26] *** Joins: Vonter (~Vonter@user/vonter)
[16:20:28] <trace987> echo $PATH
[16:20:47] <The-Compiler> that seems like a weird thing to do for a shell, given that not only shells interpret PATH...
[16:20:57] <hexa-> yep
[16:21:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:21:40] <grawity> it's normal for PATH to be a fancier type when it's a shell internal variable, but normally fish should re-join it using colons when exporting to environment
[16:21:45] <vanessa> in fish, the $PATH is an array
[16:22:04] <grawity> I've seen other shells do the same too – they import env:$PATH into an array, but export back as a :-separated string
[16:22:33] <leitz> jinsun, thanks! What I've done with pytest has been fun, but most of my work doesn't really warrent the change. Yet, anyway. If I go some place that uses pytest, I'll be happy to ask questions.  :)
[16:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:22:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[16:22:47] <vanessa> grawity: yeah, and that is very handy makes adding removing paths painless
[16:22:53] <trace987> bash can not find ld
[16:23:02] <trace987> so there is something wrong with PATH
[16:23:04] <The-Compiler> rendar: sets are nice for such things:   set(my_dict) >= {"a", "b", "c"}
[16:23:10] <trace987> okay problem found
[16:23:22] <vanessa> trace987: do you have binutils installed?
[16:23:27] *** Joins: shad (~shad@user/shad)
[16:23:42] <rendar> The-Compiler, wow very cool solution, i have opted for all([x in dict for x in (...)])
[16:23:56] <trace987> no it found it
[16:24:01] <trace987> yes installed
[16:24:05] *** Joins: ovnicraft (~ovnicraft@200.7.246.89)
[16:24:05] <grawity> in other words, $PATH isn't an environment variable, it's a shell variable, use `printenv PATH` to see the actual environment
[16:24:14] <The-Compiler> rendar: that'd work too - you could drop the [] though, as a generator expression works inside all() too
[16:24:24] <rendar> right
[16:24:25] <trace987> why is /sbin not in PATH
[16:24:39] <grawity> very historical reasons
[16:24:44] <trace987> and /usr/sbin not
[16:24:51] <Yhg1s> trace987: because you're not root.
[16:25:05] <trace987> I am root
[16:25:08] *** Joins: analog_frog (~analog_fr@c-71-238-180-183.hsd1.ar.comcast.net)
[16:25:20] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[16:25:26] <vanessa> I have /usr/sbin in my path. grawity, is that dangerous?
[16:25:31] <Yhg1s> trace987: then you'll have to find out why your bash thinks you aren't, or why it decided not to add those directories to $PATH even though you are. (It's really not a Python question.)
[16:25:44] *** Joins: thorbw (~tw@46.230.130.50)
[16:25:47] <Yhg1s> vanessa: no, it's just not very useful if you're not root.
[16:25:58] <trace987> Yhg1s, yes
[16:26:16] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:26:24] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[16:26:54] <vanessa> my path looks like this: /opt/miniconda/conda/bin /usr/local/bin /home/vanessa/.local/bin /opt/texlive/2021/bin/x86_64-linux /usr/local/cuda/bin /usr/bin /usr/sbin
[16:26:58] <grawity> many sbin tools are useful to non-root though, ifconfig, iw, ping...
[16:27:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:27:37] *** Joins: plastico (~plastico@neomutt/plastico)
[16:27:47] *** Joins: Klinda (~superleag@user/klinda)
[16:27:50] <Deneb> probably a silly question, but how do I copy a byte from one byte array and append it to another? Apparently if I reference is mybytearray[x] then the returned value is now considered to be an integer. So how do I bytearray2 += bytearray1[x] ?
[16:27:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:28:11] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[16:28:28] <bjs> Deneb: bytearray2.append(123) ?
[16:28:36] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:28:53] <grawity> Deneb: take a 1-item slice bytearray1[x:x+1]
[16:28:58] <bjs> bytearrays are basically just lists (but restricted to ints)
[16:29:21] <grawity> yeah .append() would probably be better for 1 item
[16:29:23] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:29:37] *** Quits: dntreou (~yakiza@102.69.128.34) (Ping timeout: 256 seconds)
[16:29:59] *** Joins: teut (~teut@106.202.98.32)
[16:30:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:30:07] <Deneb> hmm, that did actually work although I was sure that I had an error when I used append() before. Thanks.
[16:30:34] <trace987> the reason was that fish was set as standard shell and this is not liked
[16:31:36] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--38e.oracle-ocna.com)
[16:31:41] *** Joins: arseru (uid515527@user/arseru)
[16:31:55] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:32:00] <arseru> is the creator of vulns.xyz around here? his/her website is rekt
[16:32:06] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[16:32:24] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[16:32:25] <leitz> A lot of the differences between /sbin and /usr/sbin have gone away over time. It seems mostly based on small disk sizes and what gets mounted when on system boot. The small "/" partition had /bin and /sbin, which had things needed to bring up the system. /usr was often a larger partition, and mounted later.
[16:32:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:32:48] <grawity> yes and the actually dangerous, root-only, tools were in (/usr)/etc
[16:33:01] <The-Compiler> vanessa: some distributions (e.g. Archlinux, but I think others too) have /sbin and /usr/sbin (and /bin) just symlinked to /usr/bin nowadays, for the reason leitz mentions
[16:33:21] <grawity> nowadays we have an initramfs, so a separate (/usr)/sbin serves no purpose
[16:33:48] <deniska> On some (many?) systems nowadays /bin is symlinked to /usr/bin and /sbin is symlinked to /usr/sbin
[16:33:57] <The-Compiler> Yhg1s: IMHO, being able to do "fdisk -l" or IIRC whatever the iptables list equivalent was is quite useful :)
[16:34:08] <grawity> lsblk
[16:34:15] <grawity> er, wrong window
[16:34:18] <The-Compiler> ah, grawity already said that above, nevermind
[16:34:34] *** Joins: lntl (~joey@24.136.23.254)
[16:34:45] *** analog_frog is now known as FakeMage
[16:34:52] <Yhg1s> I've never had the desire to run 'fdisk -l' on someone else's machine :P
[16:35:03] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[16:35:06] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Remote host closed the connection)
[16:35:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:35:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:36:08] *** Joins: esther (~esther@2607:fb90:5fef:c74a:3d6a:6697:4f80:d3a0)
[16:36:16] <deniska> Running anything on someone else's machine is meh. You start typing, and it turns out they use slightly modified dvorak
[16:36:54] <The-Compiler> arseru: looks like that is https://github.com/kpcyrd
[16:37:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:37:22] <vanessa> The-Compiler: my distro does it too. /usr/sbin is linked to /bin
[16:37:22] <arseru> The-Compiler: ah, true, I'll find him maybe in #archlinux, thx :)
[16:37:37] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[16:37:44] <The-Compiler> vanessa: what distro is that?
[16:37:53] <The-Compiler> arseru: I already looked over there, no luck
[16:38:42] <vanessa> The-Compiler: Void Linux
[16:38:54] <arseru> The-Compiler: he seems to be there, 'kpcyrd'
[16:38:59] <The-Compiler> arseru: ah, maybe I typo'd the nick then
[16:39:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:40:17] *** Quits: esther (~esther@2607:fb90:5fef:c74a:3d6a:6697:4f80:d3a0) (Ping timeout: 240 seconds)
[16:40:23] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 256 seconds)
[16:40:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:40:39] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[16:40:40] *** Quits: delvian (~delvian@41.13.220.172) (Quit: Leaving)
[16:41:30] *** Joins: inomoz (~inomoz@176.59.106.192)
[16:41:43] *** Joins: Pickchea (~private@user/pickchea)
[16:41:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:42:44] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[16:43:16] *** Joins: ingmarbergman (~ingmar@2804:3814:3:c728:683b:631a:1f4e:f539)
[16:46:45] *** Quits: erkan (~erkan@p200300d34711968fdd59b2881401700c.dip0.t-ipconnect.de) (Quit: Leaving...)
[16:47:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:48:48] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:49:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:50:20] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[16:50:41] <grym> leitz: that's what i meant; and my response was entirely ascii
[16:51:36] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b) (Quit: WeeChat 2.8)
[16:52:33] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:52:37] *** Joins: nicode (~nic@2607:f2c0:946d:3800:da6f:ffbd:5d89:a11f)
[16:52:43] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:52:44] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b)
[16:53:55] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b) (Client Quit)
[16:54:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:54:54] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[16:55:06] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[16:55:56] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b)
[16:55:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:56:00] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Remote host closed the connection)
[16:56:23] <grym> hexa-: https://bpa.st/FQPQ  ahh so much better already
[16:56:35] <hexa-> :)
[16:56:51] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b) (Client Quit)
[16:57:32] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi)
[16:58:11] *** Joins: exarkun (~exarkun@user/exarkun)
[16:58:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:58:47] <exarkun> Why did `bdist_wheel` construct a wheel with "linux_x86_64" as a platform and then PyPI rejected the upload saying "unsupported platform tag 'linux_x86_64'."?
[16:58:51] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b)
[16:58:57] <jinsun> grym: looked weird here also https://0x0.st/o-uZ.png
[16:59:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:59:18] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:59:26] <grym> jinsun: wild
[16:59:37] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--38e.oracle-ocna.com) (Ping timeout: 240 seconds)
[16:59:39] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:00:05] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:00:13] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[17:00:26] *** Quits: ovnicraft (~ovnicraft@200.7.246.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:00:53] <The-Compiler> grym, jinsun: hmm, I actually see blank characters in the place you see those DELs too
[17:01:03] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:01:19] *** Joins: mickey8 (~user@user/mickey)
[17:01:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:01:55] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[17:02:03] *** ketiv is now known as vizi
[17:02:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:02:23] <Yhg1s> well, those *are* still ASCII dels :)
[17:02:44] *** Joins: ovnicraft (~ovnicraft@200.7.246.89)
[17:02:49] <grym> huh.  i just copy/pasted out of the buffer scrollback into ipython and printed ord() for every character and all of 'em were between 32 and 127
[17:03:31] <hexa-> most things before 32 (space) aren't really useful to print
[17:03:36] <grym> no kidding :)
[17:03:46] <hexa-> so no surprise? :)
[17:03:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:04:14] *** Joins: fikran (~fikran@user/fikran)
[17:04:14] <grym> bytes, what are you doing :D
[17:04:18] *** Joins: acidsys (~LSD@2.lsd.systems)
[17:06:34] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 250 seconds)
[17:06:38] <jinsun> ord(x) says 9249 here for those DELs
[17:06:44] <leitz> vanessa, I'm also running Void.
[17:06:54] <grym> jinsun: yeesh
[17:06:56] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[17:07:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:07:54] <grym> i was having some latency issues when i sent that message; maybe mosh "guessed" and derped it
[17:07:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:08:11] <Yhg1s> They're \x7fs here.
[17:08:20] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:08:57] <Yhg1s> grym: more likely your IRC client thought you were pasting, and decided not to evaluate backspaces
[17:09:32] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:09:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:10:07] *** Quits: ingmarbergman (~ingmar@2804:3814:3:c728:683b:631a:1f4e:f539) (Quit: Leaving)
[17:10:11] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:10:21] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:10:57] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[17:11:01] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:11:43] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[17:13:31] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[17:13:31] <grym> maybe.
[17:13:49] <grym> irssi is usually quite sensible
[17:14:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:14:28] <grym> except for that whole perl thing 😇
[17:14:54] *** Joins: CBTEnjoyer (~bananaman@195.206.169.171)
[17:15:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:15:38] *** Joins: remote (~remote@user/hackers)
[17:16:07] *** Joins: Naan (~Naan@user/naan)
[17:16:50] <vanessa> grym: you know a online alternative to zealdocs?
[17:17:32] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:17:50] <vanessa> or a terminal alternative that uses less pager or with vi-bindings?
[17:17:57] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[17:18:22] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:19:05] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[17:19:17] *** Parts: CBTEnjoyer (~bananaman@195.206.169.171) (WeeChat 2.8)
[17:19:50] <grym> vanessa: google suggests https://github.com/sunaku/dasht, which i am just now learning about
[17:19:55] <grym> i tend to use either zeal or emacs info
[17:20:15] <The-Compiler> vanessa: hmm, there is something I found recently, let me dig it up
[17:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:20:41] <The-Compiler> vanessa: https://devdocs.io/
[17:20:47] <The-Compiler> different docsets though I think
[17:20:49] *** Joins: pycode (~pycode3@2001:b07:5d28:551:d55d:bf5e:287c:ea66)
[17:20:52] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[17:21:09] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[17:21:18] *** Joins: eem (~eem@user/eem)
[17:21:55] *** Quits: eem (~eem@user/eem) (Client Quit)
[17:22:13] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[17:22:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:23:02] *** Joins: jdmark (~jdmark@user/jdmark)
[17:23:39] <grym> is it still possible to build texinfo docs from cpython source?
[17:23:57] *** Parts: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Leaving)
[17:24:41] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:24:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:25:11] <vanessa> The-Compiler: thank you for the devdocs.io it even has pytorch
[17:25:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[17:25:57] *** Quits: dreamon_ (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[17:26:14] *** Joins: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[17:26:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:26:42] *** Joins: kingofcsu (~kingofcsu@114.249.133.203)
[17:27:35] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:28:16] <kingofcsu> is there any sql builder like honeysql in clojure, to build sql at runtime? I found pypika can not satisfy my need.
[17:28:31] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:28:40] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[17:29:15] <grym> kingofcsu: sqlalchemy-core, possibly?   honeysql looks ORM-ish
[17:29:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:29:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:30:11] <vanessa> The-Compiler: it has docs for a lot of tools I use. no more shitty SEO hijacking sites.
[17:30:19] <The-Compiler> vanessa: yay!
[17:30:44] <kingofcsu> what I need is like this.  I pass a json to api. and server app build a table at runtime. after that, I can use CRUD to that new table, without restart app
[17:31:27] <grym> kingofcsu: how much have you written already
[17:32:04] <kingofcsu> So I want to build sql at runtime, by passing a well designed json to python dict. then parsing dict to sql(create, alter, CRUD)
[17:32:08] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:32:13] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[17:32:32] *** Joins: davidd (~hay_sup@user/memorious)
[17:32:36] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:32:49] <kingofcsu> I did it once by java. But the sql generated is only for mysql. I want abstract a middle layer so that can gen sql for other db
[17:32:53] <grym> if i had to do that from zero, i'd use https://sqlmodel.tiangolo.com/  and https://fastapi.tiangolo.com/
[17:34:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:35:12] <leitz> An interesting bit of career advice that mentions coding:   https://seths.blog/2022/01/harder-easier-and-more-convenient/
[17:35:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:35:59] <kingofcsu> grym: Ok, thanks. I will try it
[17:36:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:36:56] *** Quits: dawg (dirtydawg@triton.blinkenshell.org) (Changing host)
[17:36:56] *** Joins: dawg (dirtydawg@user/dawg)
[17:37:14] *** Parts: arseru (uid515527@user/arseru) ()
[17:37:56] *** Quits: maxzor (~maxzor@2a01cb04054faa005c010db600382d4f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[17:38:37] <grym> kingofcsu: it might be A Lot if you're brand new to python, though? i'm not sure
[17:38:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:39:05] <kingofcsu> I wrote some script by python. 😄️
[17:39:56] <kingofcsu> I want build a app backend, so that I can build table and CRUDs on runtime. save lot of repeat work, like create model restart app etc.
[17:40:04] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[17:40:11] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[17:40:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:41:40] <kingofcsu> I thought there two way to do so(just no extra businiss logic), one is use code generator  to gen standard controller model view code, the other is build these at runtime,dynamicly.
[17:42:26] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[17:42:30] *** Joins: kts (~kts@103.73.237.175)
[17:42:54] <kingofcsu> I do impl a code gen in java for my current project. but it is hard to let java dynamic. so I turn to dynamic language like python.
[17:44:08] <kingofcsu> grym: can you give me some advice to do so?
[17:44:26] <grym> kingofcsu: MVC codegen is out of my wheelhouse
[17:44:54] *** dcaro is now known as dcaro_brb
[17:45:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:45:13] *** Joins: bloody (~bloody@user/bloody)
[17:45:43] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:45:50] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[17:45:55] <kingofcsu> OK, what about the second one. dynamic gen table. by the way, I'm reading sqlmodel and fastapi. hope they can build sql runtime.
[17:46:56] *** Joins: Ruit (~textual@2601:84:4501:18a0:28cf:14ff:b27e:e7ea)
[17:48:46] *** Quits: ovnicraft (~ovnicraft@200.7.246.89) (Read error: Connection reset by peer)
[17:49:44] <grym> you can programmatically make tables, sure
[17:49:52] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:50:05] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:50:05] <xheimlich> man, I want IBM Plex with programming ligatures.
[17:50:32] *** Joins: ovnicraft (~ovnicraft@200.7.246.89)
[17:50:33] <xheimlich> There should be a programmatic way to add basic ligatures like -> to arbitrary fonts by now.
[17:50:39] *** Quits: natewrench (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[17:50:55] *** Quits: pycode (~pycode3@2001:b07:5d28:551:d55d:bf5e:287c:ea66) (Remote host closed the connection)
[17:51:12] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5a6c:9f80:1aac:2bcf)
[17:51:18] <grym> there are plenty of ligatureified fonts
[17:51:45] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:51:59] <xheimlich> I know, I know.
[17:52:35] <xheimlich> IBM Plex is the best I've seen so far though. In terms of like scrolling and being able to read most of the code with mild coloring.
[17:52:39] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[17:53:00] <xheimlich> I'm irrationally bothered by ->.
[17:53:21] <grym> i don't like it when my fonts lie to me; everyone's got their tastes :)
[17:53:42] <xheimlich> of course you're not seeing it in my font (I also use italics for IRC), but it's too separated here.
[17:53:52] <xheimlich> So I'm always always always reading what is greater than?
[17:54:21] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:54:36] <xheimlich> tbh ligatures are like programming candy. like color schemes. a great way to kill a day is to pick a color scheme.
[17:54:45] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[17:54:48] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:54:51] <grym> we both hang out in #emacs; preaching to the choir there boss
[17:55:00] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:55:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:55:16] <xheimlich> usually they all have bad aesthetics and the real problem is to find one that doesn't colorize EVERYTHING while also not being Austerus Marcus Aurelius Alvus Totum.
[17:55:45] <grym> modus <3
[17:56:10] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[17:56:25] <xheimlich> of course pfaffing with fonts is not that much better. But there's a much higher effect on legibility, headaches etc. My glasses are long in the tooth, and it seems I'm getting to the age of bifocals.
[17:56:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:56:59] <xheimlich> anyway, with color schemes sometimes I'm going to be working somewhere with natural light and switch to a light theme and never find the dark theme I liked again. I'm not that prticular.
[17:57:10] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[17:57:28] <xheimlich> let me check what I'm using. "Dark+ (default dark)". Serves me right.
[17:57:40] *** Joins: hylisper2 (~yaaic@103.205.173.25)
[17:58:03] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[17:58:09] <xheimlich> emacs has a beautiful theme I've tried to emulate in vscode but never followed through. Only aesthetically pleasing scheme I know. Of course I forgot its name.
[17:58:13] <grym> https://protesilaos.com/emacs/modus-themes prot is very, very thoughtful
[17:58:27] <grym> but we're way off topic now :D
[17:58:37] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[17:59:08] <xheimlich> has a greenish to grayish background. I wrote my whole thesis on an emacs screen, including CLI matlab, etc.
[17:59:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[17:59:17] *** Quits: vizi (~ketiv@92.40.194.234.threembb.co.uk) (Ping timeout: 240 seconds)
[17:59:37] <The-Compiler> https://github.com/morhetz/gruvbox <3
[17:59:47] <grym> gruvbox is great too
[17:59:57] <xheimlich> I have gruvbox installed on vscode if iirc. why am I not using it
[18:00:15] <The-Compiler> also, https://typeof.net/Iosevka/ <3
[18:00:17] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 240 seconds)
[18:00:30] <xheimlich> I didn't hate Iosevka.
[18:00:40] <xheimlich> I hated Monoid and Victor Mono.
[18:00:53] <grym> ioveska always felt kind of spiderey to me
[18:00:56] <xheimlich> Haskell code looks exquisite on Monoid.
[18:01:02] <grym> the ascenders were too .. ascendey
[18:01:08] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:01:15] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:01:26] <xheimlich> eh, gruvbox colors too much.
[18:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:01:58] <xheimlich> I don't want things-that-appear-to-be-callable to be colored. Nor do I want types to be more visible than parameter names.
[18:01:58] *** Quits: Ruit (~textual@2601:84:4501:18a0:28cf:14ff:b27e:e7ea) (Quit: Textual IRC Client: www.textualapp.com)
[18:02:17] *** Joins: miique (~miique@181.46.139.166)
[18:02:21] <xheimlich> Gruvbox Dark Medium feels like cowboy boots.
[18:02:41] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[18:03:43] <xheimlich> there was a theme for sublime text called Terrorizer. It colored so much of everything in crazy neon colors, you quickly adjusted and saw almost no coloring. Like white noise that lets your brain focus.
[18:04:25] <dminuoso> xheimlich: You should see Haskell with PragmataPro with ligatures enabled. Now that's a visual wonder.
[18:05:01] *** Joins: Vonter (~Vonter@user/vonter)
[18:05:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[18:05:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:06:10] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48agh3qbz6mh8rh.ipv6.telus.net)
[18:06:11] <xheimlich> but back to the point.
[18:06:37] <xheimlich> what's a font that looks like IBM Plex (i.e. like a frakking computer font) but has some Python-relevant ligatures?
[18:06:52] *** Joins: fling (~fling@user/fling)
[18:07:21] *** Joins: stonkey (~stonkey@user/stonkey)
[18:07:38] <xheimlich> I feel like if my team got on a field trip to the 1980s, everyone there would be freaked out by most programming fonts. Except mine.
[18:08:31] <NoImNotNineVolt> i thought perl was a write-only language, but then i saw haskell pipes.
[18:08:31] <xheimlich> oh pragmata pro is preeetty
[18:08:56] <xheimlich> too tall but sexy sexy
[18:09:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[18:09:25] * NoImNotNineVolt is a pleb and uses default terminal font
[18:09:29] <lntl> I have a list of list of boolean. Best way to OR them element-wise?
[18:09:50] <NoImNotNineVolt> lntl: any() ?
[18:09:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:09:51] <xheimlich> any
[18:09:59] <xheimlich> sorry. a list of list.
[18:10:10] <xheimlich> if you can have an external dependency get more-itertools.
[18:10:17] <xheimlich> it has a list flattening operator.
[18:10:23] <grym> any(any(x for x in mylist))
[18:10:24] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:7125:6c88:316f:2f30) (Quit: Textual IRC Client: www.textualapp.com)
[18:10:37] <xheimlich> or try hy for size.
[18:10:47] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:64cc:fa11:8fcb:d98e)
[18:10:49] <NoImNotNineVolt> any(any(x) for x in list_of_lists)
[18:10:55] <Repiphany> numpy.any
[18:10:57] <NoImNotNineVolt> or, what grym said, probably.
[18:11:02] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 240 seconds)
[18:11:10] <grym> NoImNotNineVolt: your parens are in the right place
[18:11:11] <xheimlich> although hy is changing so fast they might have removed flatten by now. Try hy==0.18.0-ish. Or more-itertools, it's a lifesaver.
[18:11:28] <lntl> Will this output a list of OR'd boolean? Or just a boolean?
[18:11:40] <NoImNotNineVolt> just a boolean.
[18:11:41] <SnoopJ> those solutions will output a bool, but I read your question as wanting a list of bools
[18:11:47] <xheimlich> sorry. a list of list.
[18:11:50] <xheimlich> https://more-itertools.readthedocs.io/en/stable/api.html#combining
[18:11:59] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:12:10] *** Joins: moog (~moog@107.126.53.167)
[18:12:17] <NoImNotNineVolt> conversely, can't you just flatten the list of lists and any that?
[18:12:27] <lntl> I have a list of list of bool and want a list of OR'd bool.
[18:12:32] <NoImNotNineVolt> (assuming you want a single bool as the result)
[18:12:36] <NoImNotNineVolt> oh.
[18:12:40] <NoImNotNineVolt> nm then :P
[18:12:49] <NoImNotNineVolt> [any(x) for x in list_of_lists]
[18:12:54] <SnoopJ> lntl, assuming the lists are all the same length: `[any(vals) for vals in zip(*list_of_lists)]`
[18:13:13] <SnoopJ> NoImNotNineVolt, that just computes whether or not there's a True in each of the lists
[18:13:27] <NoImNotNineVolt> SnoopJ: i think that's what's requested?
[18:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:13:39] <SnoopJ> NoImNotNineVolt, I can't imagine how that would be interpreted as an OR operation
[18:14:02] *** Joins: backes (~backes@2a02:168:5823:0:9c3e:c6c9:3175:78dd)
[18:14:02] <NoImNotNineVolt> any() is the same as or, isn't it?
[18:14:44] <SnoopJ> NoImNotNineVolt, yes, but what yours is computing is each list's values ORed against themselves. They want `result[0] == lst1[0] or lst2[0] or ...` if I understand right
[18:15:00] <lntl> That's it! Thanks folka
[18:15:11] <NoImNotNineVolt> i saw no requirement for comparing between lists, only within lists.
[18:15:19] <NoImNotNineVolt> i guess it was ambiguous, though.
[18:15:31] * SnoopJ didn't think so
[18:15:37] <backes> hello, has someone used pymer4 before? I don't manage to predict a two-level model, it always says that I'm missing column names for the random effects.
[18:15:41] <NoImNotNineVolt> i didn't think so either
[18:15:52] <NoImNotNineVolt> but i recognize that your interpretation doesn't conflict with anything he said
[18:16:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:16:15] <NoImNotNineVolt> and since multiple different interpretations are consistent with the requirements as stated, they're ambiguous :P
[18:16:23] <SnoopJ> NoImNotNineVolt, what is "element-wise" about any()?
[18:16:23] <Repiphany> numpy.any could do all three if it's a rectangular array
[18:16:27] <xheimlich> Pragmata has so many ligatures I don't know if it has a significant performance cost. But the kerning is really sexy.
[18:16:31] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[18:16:32] <NoImNotNineVolt> SnoopJ: if any element is true, it returns true.
[18:16:39] <xheimlich> I don't know anything about kerning but I know what I like.
[18:16:40] <SnoopJ> NoImNotNineVolt, I understand what any() does, but that was not my question
[18:16:48] *** Quits: kingofcsu (~kingofcsu@114.249.133.203) (Quit: kingofcsu)
[18:16:56] <NoImNotNineVolt> SnoopJ: then i may not understand your question.
[18:17:14] *** Joins: Vonter (~Vonter@user/vonter)
[18:17:15] <xheimlich> (it's not even kerning with monospace fonts. I mean the "d" is really to the right so "dX, dY, dZ" look good.)
[18:17:28] <SnoopJ> NoImNotNineVolt, let me put it another way: in your solution the lists do not interact with each other. They did pretty clearly express an intent to OR the lists against each other.
[18:17:51] <NoImNotNineVolt> SnoopJ: where was that intent clearly expressed? i didn't see it expressed even unclearly :P
[18:18:25] <SnoopJ> NoImNotNineVolt, what does unary OR even mean?
[18:18:45] <NoImNotNineVolt> i'm ignorant of unary OR.
[18:18:49] <SnoopJ> well, it isn't a thing, so
[18:18:59] <xheimlich> I'ma stop my bitching. https://github.com/ToxicFrog/Ligaturizer  Thanks everyone.
[18:19:00] <NoImNotNineVolt> then i don't understand the question.
[18:19:01] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[18:19:06] <NoImNotNineVolt> seems faulty?
[18:19:39] *** Joins: Roey (~Roey@user/Roey)
[18:19:39] <vanessa> inside a for loop, does 'pass' act like a break or continue from other languages?
[18:19:47] <NoImNotNineVolt> vanessa: pass does nothing.
[18:19:54] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:19:56] <NoImNotNineVolt> vanessa: it acts like noop from other languages.
[18:20:24] <vanessa> oh, ok
[18:20:25] <SnoopJ> `break` and `continue` do what they do in other languages that I'm familiar with
[18:20:25] <NoImNotNineVolt> vanessa: so, it acts like neither break nor continue.
[18:20:36] <exarkun> vanessa: It's a placeholder where syntax requires a statement but you have nothing to say.
[18:20:55] <NoImNotNineVolt> aka {}
[18:21:18] *** Joins: Rum (~bourbon@user/rum)
[18:21:46] *** Joins: LimeOn (~user@user/limeon)
[18:22:12] *** Quits: md618 (~md618@37.228.215.251) (Quit: leaving)
[18:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:22:37] *** Joins: md618 (~md618@37.228.215.251)
[18:22:52] *** Joins: Fiji (~Fiji@user/fiji)
[18:23:22] *** Joins: Fiji_ (~Fiji@user/fiji)
[18:23:31] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[18:24:31] *** Joins: killswitch (~killswitc@217-120-19-98.cable.dynamic.v4.ziggo.nl)
[18:24:37] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[18:25:24] *** Joins: xkuru (~xkuru@user/xkuru)
[18:26:46] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:27:32] *** Joins: georgios (~georgios@user/georgios)
[18:27:36] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[18:28:03] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:28:03] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:48f0:35d7:2b08:b57)
[18:28:37] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 256 seconds)
[18:28:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:29:25] *** Joins: esv (~esv@74.124.178.154)
[18:31:55] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[18:32:02] *** Quits: Guest26 (~Guest26@78-58-232-10.static.zebra.lt) (Quit: Client closed)
[18:32:19] *** Joins: dbristow (~dbristow@user/dbristow)
[18:35:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:36:35] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[18:36:43] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[18:36:57] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[18:37:48] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[18:38:20] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[18:38:25] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:39:14] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[18:41:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:42:48] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[18:42:55] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[18:44:10] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Quit: ZNC - http://znc.in)
[18:44:13] <bjs> vanessa: Python has "break" and "continue" statements too that do what you expect
[18:44:38] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[18:44:50] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:44:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:46:11] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:46:52] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[18:47:26] *** Joins: linux (~linux@cm-171-98-10-67.revip7.asianet.co.th)
[18:49:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:49:52] *** Joins: Ergo^ (~ergo@91.238.59.144)
[18:50:27] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[18:50:46] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:50:48] *** spiderman is now known as iphone
[18:51:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:51:18] *** Quits: teut (~teut@106.202.98.32) (Ping timeout: 256 seconds)
[18:51:25] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[18:51:49] *** Parts: linux (~linux@cm-171-98-10-67.revip7.asianet.co.th) ()
[18:51:52] *** Joins: Fiji- (~Fiji@user/fiji)
[18:51:54] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[18:51:59] *** Joins: georgios (~georgios@user/georgios)
[18:53:30] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[18:53:52] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:54:54] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[18:55:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:55:25] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:55:47] *** Joins: upsala (~zcb@185.209.196.169)
[18:57:30] *** Joins: panella32 (~panella32@45.130.83.88)
[18:58:42] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[18:59:04] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[18:59:35] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[18:59:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:00:42] *** Quits: panella32 (~panella32@45.130.83.88) (Client Quit)
[19:01:29] *** Quits: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[19:01:51] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:02:04] *** Joins: mickey8 (~user@user/mickey)
[19:02:42] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:02:56] *** Quits: backes (~backes@2a02:168:5823:0:9c3e:c6c9:3175:78dd) (Quit: Client closed)
[19:03:14] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[19:03:15] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[19:03:59] <bancroft> if i'm the root user, can I tell pyenv to install python for a specific user?
[19:04:19] <bancroft> or install python and do pip install for all users?
[19:04:34] <grym> bancroft: sure, you can plonk PYENV_ROOT wherever you want with whatever permissions you please
[19:04:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:04:56] <phy1729> Probably easiest to sudo as that user to run pyenv
[19:05:04] <grym> gross
[19:05:25] <bancroft> phy1729: no sudo here, strictly a no sudo zone :P
[19:07:43] <SnoopJ> `su` then?
[19:08:30] <TML-prv> doas?
[19:08:43] <SnoopJ> you can indeed locate the pyenv dir wherever you want, but getting it in place as root is gonna leave you with some obnoxious permissions/ownership to clean up
[19:08:44] *** Quits: killswitch (~killswitc@217-120-19-98.cable.dynamic.v4.ziggo.nl) (Quit: Lost terminal)
[19:08:46] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:10:47] *** Joins: bomb-on_ (~bomb-on@213.220.120.43)
[19:10:56] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:11:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:11:54] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[19:13:07] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Remote host closed the connection)
[19:13:23] *** Joins: DocMors (~DocMors@web.crypticity.net)
[19:13:35] *** Joins: fikran (~fikran@user/fikran)
[19:13:58] *** Quits: bomb-on_ (~bomb-on@213.220.120.43) (Read error: Connection reset by peer)
[19:14:44] <zamba> hi! i'm using the ssh2-python library to upload files over sftp.. i'm using the .open function to return a file-like object.. but the problem is that sometimes this raises an exception from the underlying functions.. is there a way i can catch these exceptions in my "higher-level" code?
[19:14:47] *** Joins: flea- (flea@gateway/vpn/protonvpn/nosoul)
[19:14:55] <zamba> without importing the ssh2 module in my own code?
[19:14:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[19:15:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:15:13] <zamba> (i forgot to mention that, i have further abstracted the .open() code in a separate module)
[19:15:34] <zamba> this is the exception thrown: ssh2.exceptions.SocketRecvError
[19:15:45] *** Joins: bomb-on (~bomb-on@213.220.120.43)
[19:15:52] *** Joins: rsx (~dummy@ppp-188-174-134-164.dynamic.mnet-online.de)
[19:16:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:16:54] *** Joins: bomb-on_ (~bomb-on@194.144.47.113)
[19:18:05] *** Quits: bomb-on (~bomb-on@213.220.120.43) (Read error: Connection reset by peer)
[19:18:28] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:19:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:20:52] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[19:21:09] *** Joins: Fiji (~Fiji@user/fiji)
[19:21:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[19:22:38] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[19:22:58] <deniska> zamba: if this exception inherits from something more generic, you can catch it instead
[19:23:48] *** Quits: heldwin (~heldwin@user/asmodee) (Ping timeout: 276 seconds)
[19:23:48] <deniska> (just make sure it's not overly generic)
[19:23:58] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:24:19] *** Joins: humberto1 (~humbertow@189.132.111.57)
[19:24:22] *** Quits: hylisper2 (~yaaic@103.205.173.25) (Ping timeout: 250 seconds)
[19:24:48] *** Quits: Major_Biscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[19:25:12] *** Joins: theo (~theo@user/theo)
[19:25:27] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:25:51] *** TML-prv is now known as TML
[19:26:18] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[19:26:34] *** Joins: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e)
[19:26:34] *** Quits: hylisper (~yaaic@2409:4040:d90:34cd::3c0a:f50e) (Changing host)
[19:26:34] *** Joins: hylisper (~yaaic@user/hylisper)
[19:26:43] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[19:26:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:27:41] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[19:27:43] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[19:31:31] *** Joins: fef (~thedawn@user/thedawn)
[19:33:00] *** Quits: rsx (~dummy@ppp-188-174-134-164.dynamic.mnet-online.de) (Quit: rsx)
[19:33:11] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[19:33:28] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:33:49] <iphone> hey gamers, I need to encrypt some database dumps in an app I'm writing, and I want to use Fernet. Does anyone know off-hand if encrypting a 2GB file will require that 2GB file to be in memory during encryption? We might have dumps that are 20GB+ and don't want to load the whole thing into memory. I assume that the kernel will buffer parts of the file
[19:34:40] <iphone> aka I need to pass the file's contents as a string, I think, which would load the entire thing in memory?
[19:34:44] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:35:18] *** Joins: heldwin (~heldwin@user/asmodee)
[19:35:48] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:35:48] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:35:56] <dav1d> iphone, https://cryptography.io/en/latest/fernet/#limitations Fernet is ideal for encrypting data that easily fits in memory. As a design feature it does not expose unauthenticated bytes. This means that the complete message contents must be available in memory, making Fernet generally unsuitable for very large files at this time.
[19:36:23] <iphone> :o
[19:36:26] <iphone> shid
[19:36:31] <dav1d> random google search
[19:36:34] <iphone> yeah
[19:36:37] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:36:37] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:36:37] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:36:50] <iphone> thats a lot of jays
[19:37:44] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:38:15] <zamba> i want to set up a tcp listener that should copy everything it receives to one or more other servers.. so it's basically duplicating the incoming stream to a number of other listeners.. but i don't want this to be synchronous.. so if packet A arrives and should be sent to client 1, 2 and 3, then it should be sent to all at the same time and if client 2 is slower then the rest, then this shouldn't
[19:38:16] <zamba> slow down the others
[19:38:28] <zamba> but instead this should be cached in memory on this duplicating proxy
[19:38:53] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[19:39:07] <zamba> if the question makes any sense? :)
[19:39:44] <zamba> but i think i need one memory buffer per outgoing instance?
[19:40:22] *** Joins: whaley (~whaley@2603-6080-a301-33d1-f8a1-ed97-c5a3-dfc6.res6.spectrum.com)
[19:40:39] *** Joins: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net)
[19:41:59] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[19:42:11] <juliaEnv> is there any way to run ansible >= 2.9.x on Windows?
[19:42:13] <hexology> any tornado users here? i'm trying to figure out why my application takes a long time to shut down when i do ctrl+c. it's not a major problem,  but it's annoying when developing. here is how i set up and run the application, more or less: https://bpa.st/HEJQ
[19:42:15] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[19:42:48] <juliaEnv> I would need it only as a (remote) control host to execute playbooks on linux with it
[19:42:58] *** saroy is now known as bytehackr
[19:43:35] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[19:43:57] <iphone> juliaEnv: #ansible is usually very responsive if you want to ask there
[19:44:00] *** Quits: k1ng (uid535889@id-535889.uxbridge.irccloud.com) ()
[19:44:12] <iphone> all of the devs live in that channel
[19:44:48] <juliaEnv> iphone thanks, I'll ask
[19:45:26] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:45:38] *** Joins: k1ng (uid535889@id-535889.uxbridge.irccloud.com)
[19:45:56] *** Stench is now known as Staunch
[19:46:06] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:46:22] *** Quits: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu) (Ping timeout: 268 seconds)
[19:46:38] *** Joins: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu)
[19:47:03] *** Joins: water_27300935_ (~xe@182.90.96.73)
[19:47:35] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:8d5b:699f:1bf:4a88) (Remote host closed the connection)
[19:47:57] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:444d:404c:c947:f9bc)
[19:48:17] *** dcaro_brb is now known as dcaro
[19:48:47] *** Joins: thorbw (~tw@46.230.130.50)
[19:49:24] *** Joins: nyah (~nyah@94.6.71.219)
[19:49:39] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:49:40] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[19:50:14] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[19:50:39] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[19:52:10] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[19:53:24] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[19:53:58] *** Parts: water_27300935_ (~xe@182.90.96.73) (WeeChat 3.4)
[19:54:38] *** Joins: Barones (~Barones@189.50.80.77)
[19:54:40] *** Joins: yangby (~secret@115.199.105.217)
[19:54:43] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:54:44] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[19:55:24] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:55:54] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:56:27] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:56:47] *** Quits: yangby (~secret@115.199.105.217) (Client Quit)
[19:58:28] *** Joins: yangby (~secret@115.199.105.217)
[19:59:13] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[19:59:40] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:00:05] *** Quits: yangby (~secret@115.199.105.217) (Client Quit)
[20:00:49] <juliaEnv> what could be the solution to this python error? https://i.imgur.com/OoT4kiC.png
[20:00:54] *** lastshell1 is now known as lastshell
[20:01:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:01:20] <juliaEnv> ERROR: Could not install packages due to an EnvironmentError: [Errno 2] No such
[20:01:20] <juliaEnv> file or directory: 'C:\\cygwin64\\tmp\\pip-install-_j4swlf4\\ansible_61fecc49d2f
[20:01:20] <juliaEnv> a4ff0ab6c41eb4fc765d4\\ansible_collections/community/aws/tests/unit/plugins/modu
[20:01:20] <juliaEnv> les/placebo_recordings/aws_direct_connect_link_aggregation_group/delete_lag_with
[20:01:20] <juliaEnv> _connections/directconnect.DeleteConnection_1.json'
[20:01:24] *** lastshell is now known as Guest8840
[20:01:54] <juliaEnv> it happens when I "pip install ansible" on windows (or in cygwin terminal)
[20:02:29] *** Joins: whistl034 (~whistl034@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[20:02:30] *** Quits: Guest8840 (~lastshell@ip68-104-107-93.lv.lv.cox.net) (Quit: WeeChat 3.0)
[20:02:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:02:37] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[20:02:58] <grym> juliaEnv: windows doesn't like very long file paths
[20:03:01] <grym> that looks like a real long one
[20:03:33] <InPhase> juliaEnv: Looks like you have a recent enough pip to try doing a "pip cache purge"
[20:03:48] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:8d12:7512:3216:2787) (Quit: pvergain)
[20:04:04] <InPhase> juliaEnv: I never tried it, as I'm primarily working with a slightly older pip at the moment.
[20:04:32] *** Joins: Vonter (~Vonter@user/vonter)
[20:04:58] *** Quits: whistl034 (~whistl034@172-125-148-108.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[20:05:16] *** Joins: whistl (~whistl@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[20:05:36] <SnoopJ> grym, I don't think it's long enough to cause a problem here
[20:05:53] <SnoopJ> I would try the cache purge as well
[20:06:35] *** Joins: cyphase (~cyphase@user/cyphase)
[20:06:54] <lz_> any chance I could attach a debugger to a running python script?
[20:07:06] *** Joins: Betal (~Betal@user/betal)
[20:07:12] <lz_> it seems to be stuck after 12h but I don't know where
[20:07:25] <InPhase> It does look pretty long.  I can't count characters though from an image without more work than it's worth.  Also I'm not sure why the \\ and / switch there, and whether or not pip can handle that properly.
[20:07:31] <jinsun> it is 265 chars, so 5 above the long paths limit, so could be that problem
[20:07:41] <SnoopJ> yea the \\ and / does seem a little suspect
[20:07:41] *** Joins: cyphase_ (~cyphase@2600:1700:7800:4680::49)
[20:08:27] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:09:02] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:78eb:3969:8c1d:749b) (Quit: WeeChat 2.8)
[20:09:09] <SnoopJ> (it's not clear why they're running this in cygwin)
[20:09:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[20:09:26] <lz_> oh i found it ! https://gist.github.com/reywood/e221c4061bbf2eccea885c9b2e4ef496
[20:10:00] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:12:33] *** Joins: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f)
[20:13:04] *** Joins: earendel (uid498179@user/earendel)
[20:14:22] <lz_> ...doesn't work:(
[20:14:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[20:15:02] <jinsun> juliaEnv: you could try running with pip -vvv to get more verbose output that might show why you get that weird path
[20:15:51] <SnoopJ> yea pip's verbose output can be very helpful
[20:16:14] <rendar> i get this `exception=NameError("name 'self' is not defined")`, but i have this simple line: `async def run(self) -> None:` how is this possible?
[20:18:59] *** Quits: leizy (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[20:19:17] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:19:23] *** Joins: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl)
[20:19:24] <lz_> i took the c stacktrace instead and got what i was looking for, sort of
[20:19:28] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:20:01] <juliaEnv> jinsun thanks. It was indeed a long path issue. I've solved it using this: https://pip.pypa.io/warnings/enable-long-paths
[20:20:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[20:21:02] *** Joins: esther (~esther@2607:fb90:5fe8:11c3:74ed:56b7:c1a4:cdeb)
[20:21:05] <juliaEnv> jinsun now, pip fails on something else, so I'm using -vvv
[20:22:43] <rendar> anyone?
[20:23:17] *** Quits: wre^ (~wre@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[20:23:20] *** Quits: nomic (~nomic@185.192.69.217) (Quit: Leaving)
[20:23:36] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[20:23:41] *** Quits: marcello42 (~mp@2001:1a81:1373:1000:b615:e09c:7d18:7b3f) (Ping timeout: 252 seconds)
[20:23:49] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:23:52] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[20:24:43] <SnoopJ> rendar, you will probably get more help if you ask a more complete question
[20:24:52] <bjs> rendar: I'm not sure how to parse your question
[20:24:55] <rendar> wait, i found the bug
[20:25:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:25:04] <bjs> you say you "get" something but don't explain what you mean by you "get" it
[20:25:16] <rendar> https://bpa.st/J5LA
[20:25:18] <rendar> as you can see here
[20:25:24] *** Quits: pr3d4t0r (~zhenya01@varenka.cime.net) (Changing host)
[20:25:24] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[20:25:36] <rendar> the Task object reports error to be at /home/rendar/wb/py/akern/kern/aio/task_group.py:754
[20:25:49] <rendar> but then the last line of the stack reveals the real location
[20:25:57] <rendar> i was following only the first one
[20:26:19] <bjs> rendar: that's not what it's reporting the error from
[20:26:31] <rendar> ok
[20:26:38] <SnoopJ> "real location" is misleading here, these are all real locations, showing how this execption propagated up the call stack
[20:26:46] <bjs> rendar: it's saying <Task coro=<...> exception=<...>>
[20:26:49] *** Parts: deicer (deicer@umadbro.net) ()
[20:26:55] <bjs> you're reading the coro name as part of the exception
[20:27:16] <rendar> oh, right, sorry
[20:27:24] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:27:41] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[20:27:43] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[20:27:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:28:08] *** Joins: mickey8 (~user@user/mickey)
[20:28:41] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5a6c:9f80:1aac:2bcf) (Ping timeout: 245 seconds)
[20:30:35] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[20:31:06] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 250 seconds)
[20:31:36] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[20:32:43] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:33:02] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[20:33:20] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:31f6:768b:5d65:a6a0)
[20:33:21] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[20:33:51] <rendar> another strange thing: https://bpa.st/45ZA -- as you can see here in __init__ self.tg is clearly defined, but __repr__ says it's not
[20:33:52] <rendar> how come?
[20:33:57] *** Quits: whaley (~whaley@2603-6080-a301-33d1-f8a1-ed97-c5a3-dfc6.res6.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[20:34:05] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:34:42] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:34:48] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[20:36:07] *** Quits: ubert (~Thunderbi@p200300ecdf0994878c88f9c813554c3f.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:36:23] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:36:33] <bjs> rendar: clearly there is more going on than just the code you show here
[20:36:54] *** Quits: JC5 (~X@user/jc5) (Read error: Connection reset by peer)
[20:37:00] <rendar> that's the entire module: https://bpa.st/HSIA
[20:37:21] *** Joins: retrosenator (~retrosena@63.sub-174-203-192.myvzw.com)
[20:37:28] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[20:37:32] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[20:37:37] <SnoopJ> possibly you deleted the attribute wherever you are using the class
[20:38:09] <rendar> that's possible, let's see
[20:38:45] <rendar> i guess that may happen because i do d=vars(that_object) then d.pop(...values)
[20:38:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2981-2615-93a2-b00d.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:38:57] <rendar> that's because vars returns a reference to the instance.__dict__
[20:38:59] <rendar> and not a copy, right?
[20:39:00] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:39:43] *** Joins: JC5 (~X@user/jc5)
[20:40:09] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:40:11] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[20:40:38] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[20:40:53] <SnoopJ> that's probably it yep
[20:41:01] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:41:31] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[20:42:18] <rendar> yes, dict(vars(instance)) fixes the error
[20:43:59] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[20:44:47] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:922e:3972:ca9c:a6cf) (Quit: Leaving)
[20:45:18] *** Joins: amoe (~amoe@visarend.solasistim.net)
[20:46:04] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e5:449e:9cbd:ac34:e54d:c677)
[20:46:19] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[20:46:25] <amoe> Using Celery, my 'add_together()' task calls 'time.sleep(10)' to introduce an artificial delay.  I run 'add_together.apply_async(args=[1,2]).wait()' and instantly get the result 3.  It's as if time.sleep() is being skipped in the celery thread, why?
[20:47:00] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:48:42] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[20:49:06] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e0:a7ed:9cbd:ac34:e54d:c677) (Ping timeout: 245 seconds)
[20:49:59] *** Joins: frmlof (~frmlof@70.243.238.191)
[20:50:00] <SnoopJ> amoe, perhaps you can share a http://sscce.org/
[20:50:04] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:50:45] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[20:51:02] <davidd> I'm defining a callback for add_done_callback and for the first argument's type, I get: Missing type parameters for generic type "Task"
[20:51:30] <davidd> what parameter should I define for the asyncio.Task? is it the return type of the coroutine?
[20:51:44] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 252 seconds)
[20:52:22] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[20:52:33] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:52:43] *** Quits: theo (~theo@user/theo) (Ping timeout: 256 seconds)
[20:54:24] *** Joins: vicfred (~vicfred@user/vicfred)
[20:56:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:56:33] *** Joins: theo (~theo@user/theo)
[20:56:40] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[20:56:57] *** Quits: _0ne (~one@user/0ne/x-2101768) (Ping timeout: 240 seconds)
[20:57:58] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[20:59:12] *** vitali64 is now known as vitali64matrix
[21:00:01] *** Quits: ovnicraft (~ovnicraft@200.7.246.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:00] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[21:01:47] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[21:02:55] *** Joins: panella32 (~panella32@45.130.83.88)
[21:03:17] *** Joins: jmd (~user@de.cellform.com)
[21:03:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:68c4:8bd5:ec8a:69c5)
[21:04:04] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: Bye)
[21:04:43] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:04:56] *** Joins: pacbard (~pacbard@user/pacbard)
[21:06:36] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 245 seconds)
[21:06:43] *** Joins: ovnicraft (~ovnicraft@181.188.201.186)
[21:07:44] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[21:08:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:08:37] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 240 seconds)
[21:09:14] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[21:09:14] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 250 seconds)
[21:10:54] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Read error: Connection reset by peer)
[21:10:54] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:11:39] *** Joins: alex11 (~alex11@user/alex11)
[21:13:41] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:13:46] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:14:11] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:14:28] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[21:14:50] *** Joins: fling (~fling@user/fling)
[21:15:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[21:16:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-85fe-8f80-ea5f-426b.res6.spectrum.com)
[21:17:04] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:17:25] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[21:19:58] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Ping timeout (120 seconds))
[21:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[21:21:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:21:10] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:21:26] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[21:21:28] *** Joins: _0ne (~one@user/0ne/x-2101768)
[21:21:37] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 256 seconds)
[21:22:03] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:22:56] *** Joins: fikran (~fikran@user/fikran)
[21:23:35] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:27:10] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:27:40] *** Quits: bomb-on_ (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[21:27:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:27:52] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 250 seconds)
[21:28:04] *** Joins: humbertowoody (~humbertow@189.132.111.57)
[21:28:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[21:28:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:29:33] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[21:29:36] <trace987> where can I browser python libraries in a way that I understand fast its content, probalby with illustrating pictures, and get to know the most interesting libraries
[21:29:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:30:01] <trace987> or is it always to look for a particular library you are needing
[21:30:14] <grym> trace987: pypi and github and readthedocs and hope the authors maintain things
[21:30:17] <grym> there's no standar
[21:30:23] *** Quits: humbertowoody (~humbertow@189.132.111.57) (Read error: Connection reset by peer)
[21:30:28] *** Quits: humberto1 (~humbertow@189.132.111.57) (Ping timeout: 250 seconds)
[21:30:31] <grym> d location for this, though, just a collection of community consensuses
[21:30:38] <trace987> yes
[21:30:49] <trace987> I find that not most comfortable
[21:30:49] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[21:30:54] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[21:30:56] <grym> it could be better
[21:30:58] *** Joins: humbertowoody (~humbertow@189.132.111.57)
[21:31:01] <grym> but, c'est la vie
[21:31:27] <trace987> aren't there blogs or whatsoever when they found something interesting new?
[21:31:31] <SnoopJ> Yes, there are
[21:31:50] <SnoopJ> there are 350,033 projects on PyPI right now, so even if this thing existed it'd be a slog to get through _all_ of them
[21:32:22] <trace987> okay, so I google for python blogs
[21:32:23] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:32:25] <trace987> or what
[21:32:53] <grym> ehh if you like?
[21:32:54] <SnoopJ> If we had some idea of what kind of libraries you're interested in, we might be able to recommend some places
[21:33:12] <SnoopJ> If you're interested in every possible kind of library...PyPI is probably your best bet
[21:33:21] <ede> i've found some people on twitter, maybe they'd have some sources
[21:33:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a)
[21:33:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a) (Changing host)
[21:33:25] *** Joins: skapata (~Skapata@user/skapata)
[21:33:40] *** Joins: andyandybobandy (~AndyAndyB@89.36.78.153)
[21:33:46] <ede> one of them just released another python book, so he's not really a hobbyist ;)
[21:34:07] <trace987> SnoopJ, shell terminal libs
[21:34:22] <trace987> libs for table datastructures
[21:34:29] *** Joins: martums53 (~martums@user/martums)
[21:35:37] *** Quits: Roey (~Roey@user/Roey) (Remote host closed the connection)
[21:36:10] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[21:36:20] *** Joins: mat001_ (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[21:36:22] <grym> trace987: what's a shell terminal lib
[21:36:26] <grym> for tables, tabulate is <3
[21:36:26] <SnoopJ> trace987, off the top of my head: `click, tqdm, blessings, urwid, rich` are all useful libraries to know about for terminal applications. For table structures, `tables, h5py, numpy, pandas` are all worth knowing about
[21:36:41] <trace987> grym, as curses
[21:36:43] <grym> ^ all of those, too
[21:36:57] *** Quits: thorbw (~tw@46.230.130.50) (Ping timeout: 240 seconds)
[21:36:57] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[21:37:04] <SnoopJ> the stdlib has a curses module, and urwid is a handy abstraction on top of it
[21:37:20] <grym> trace987: SnoopJ mentioned the big names; prompt-toolkit might also be useful
[21:37:28] <grym> (it's what drives ipython)
[21:37:31] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 3.0)
[21:37:38] <apollo13> I loled, I had to think which methods a curses module might expose till I realized it is ncurses
[21:37:46] <mcint> I'm having trouble with setup.py (and shiv). I'm trying to add data_files, but it's just failing
[21:37:48] <grym> apollo13: the cursed one, ofc
[21:37:53] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 256 seconds)
[21:37:53] *** martums53 is now known as martums5
[21:38:09] *** Joins: rje (~textual@65.141.156.170)
[21:38:11] *** Joins: sabry (~sabry@197.37.4.159)
[21:38:19] <SnoopJ> apollo13, right, it's basically a wrapper :)
[21:38:20] <grym> mcint: in your code, how do you access the data files you add to your package
[21:38:54] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:38:59] <apollo13> SnoopJ: I was hoping for actual curses to replace lorem ipsum texts ;)
[21:39:13] <mcint> possibly through a longer / inappropriate-for-packaging path
[21:39:14] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[21:39:31] <grym> mcint: if it's a str or a pathlib.Path, it won't work inside shiv
[21:39:43] <grym> (because where we're going, there are no paths...)
[21:39:47] <SnoopJ> mcint, failing how?
[21:39:56] <mcint> it has been either of those at one time or another
[21:39:57] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:40:10] <grym> mcint: importlib.resources will let you locate the contents of data files inside your package even when your entire package is one big zipfile
[21:40:21] <grym> (which it is, with shiv/pex/zipapp)
[21:40:24] <SnoopJ> kiiiiinda
[21:40:35] <SnoopJ> shiv extracts first, so you have more elbow room to do it the 'wrong' way
[21:40:36] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:40:56] <grym> i have some memories of it blowing up on me, but maybe that was an early rev or i'm remembering pex
[21:41:26] <SnoopJ> just important to flag that shiv is doing something very different than the other things mentioned
[21:41:29] <mcint> build errors. "error can't copy ...: doesn't exist or isn't a regular file
[21:42:17] <mcint> ...which is a different error than when I had data_files as the last ~kwarg, vs 2nd to last kwarg to setup(...)
[21:42:29] * SnoopJ can't see enough of the problem to offer any useful advice
[21:42:31] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[21:42:46] <mcint> will try importlib.resources, and read its docs
[21:42:59] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[21:43:15] *** Joins: Roey (~Roey@user/Roey)
[21:43:16] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[21:43:22] *** Joins: greedom (~greedom@p200300de670b64002b53aa8fa076fded.dip0.t-ipconnect.de)
[21:43:38] *** Joins: tejr (~tejr@user/tejr)
[21:43:45] <trace987> how good is ipython
[21:43:56] <SnoopJ> it's great if a notebook is what you want
[21:44:21] *** Quits: greedom (~greedom@p200300de670b64002b53aa8fa076fded.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:44:46] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 250 seconds)
[21:44:47] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[21:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[21:45:11] *** Joins: greedom (~greedom@p200300de670b64002b53aa8fa076fded.dip0.t-ipconnect.de)
[21:48:33] <grym> it is a fine repl
[21:48:51] <grym> probably the most actively developed one, too
[21:49:04] <grym> ptpython and bython have users too, though
[21:49:19] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:49:40] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:49:41] <SnoopJ> bpython*
[21:49:41] <trace987> how good is this https://xon.sh/
[21:49:46] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[21:50:04] <SnoopJ> trace987, I've never used it, but xonsh seems like a good shell if you really like customizing your shell and want to do that in Python.
[21:50:08] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:50:42] *** Joins: sandb0y (~pirate@user/sandb0y)
[21:51:15] <grym> yeah i've known _of_ xonsh for a long time, but zsh is plenty good
[21:51:15] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[21:51:16] <grym> for me
[21:52:00] *** Joins: tejr (~tejr@user/tejr)
[21:52:45] *** Quits: Xano (~Xano@2a00:23c4:4204:700:e49e:bc1a:d89b:7604) (Ping timeout: 250 seconds)
[21:53:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:54:18] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[21:55:28] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[21:55:57] *** Joins: sabry84 (~sabry@197.37.4.159)
[21:56:34] *** Quits: sabry84 (~sabry@197.37.4.159) (Client Quit)
[21:56:55] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[21:57:15] *** Quits: flea- (flea@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[21:57:19] *** Joins: hylisper2 (~yaaic@103.205.173.25)
[21:57:26] *** Quits: ovnicraft (~ovnicraft@181.188.201.186) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:57:46] *** Quits: MajorBiscuit (~MajorBisc@c-001-009-026.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:58:42] <meatballs> I've used xonsh for years. It's excellent.
[21:59:57] *** Quits: hylisper (~yaaic@user/hylisper) (Ping timeout: 240 seconds)
[22:00:32] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:01:34] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:01:46] <trace987> meatballs, it does not yet belong to standard repo of my distribution
[22:02:17] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:48f0:35d7:2b08:b57) (Ping timeout: 240 seconds)
[22:02:18] <trace987> meatballs, yet it does not belong to standard repo of my distribution
[22:02:18] <grym> trace987: that's fairly irrelevant
[22:02:37] <hexology> trace987: is pipx part of your os package repo? you can install it using pipx
[22:02:39] <trace987> grym, not fully, because of trust
[22:02:46] <grym> trace987: that's fairly irrelevant, too :)
[22:02:55] <SnoopJ> grym, to you
[22:03:05] <grym> no, i don't see how a middleman helps
[22:03:05] <trace987> using third party repos is not maximum recomendable
[22:03:12] <grym> or n-middlemen
[22:03:21] <grym> it's also not really relevant, so we can move on
[22:03:22] <SnoopJ> trace987, it's pretty common in Python, e.g. PyPI
[22:03:27] <hexology> theoretically your os package repo has been vetted and follows higher standards than pypi
[22:03:28] <grym> shoudn't hahve spoken
[22:03:33] <SnoopJ> grym, that might be a good idea
[22:03:42] <grym> ¯\_(ツ)_/¯
[22:03:55] <hexology> usually it's not that hard to make your own packages though
[22:04:06] <hexology> except deb, i feel like making deb packages is black magic
[22:04:16] <trace987> meatballs, whats best about it
[22:04:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 250 seconds)
[22:04:43] <hexology> xbps, pkgbuild, rpm all make it pretty easy to roll your own packages. and usually there are recommendations specifically for packaging python apps
[22:05:43] <trace987> I would need to create an ebuild
[22:05:45] *** Joins: Esteri (Esteri@gateway/vpn/protonvpn/esteri)
[22:05:49] <trace987> for my distribution
[22:06:07] <hexology> ebuild is gentoo, right?
[22:06:10] <trace987> yes
[22:06:10] <SnoopJ> That is likely going to be true for a lot of Python software if you intend to only use things your distribution provides
[22:07:10] <meatballs> trace987: i like having python directly in my terminal with no need for the repl. I like writing my shell scripts in python but not needing subprocess for system calls. I like having a built in shell tool for virtual envs.
[22:08:01] *** Quits: greedom (~greedom@p200300de670b64002b53aa8fa076fded.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:08:36] <trace987> meatballs, I find shell scripts, in comparision to python, not that perfect for greater tasks
[22:08:36] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:08:45] <SnoopJ> that's basically the core idea of xonsh
[22:08:54] *** Joins: tejr (~tejr@user/tejr)
[22:08:56] *** Joins: greedom (~greedom@p200300de670b64002b53aa8fa076fded.dip0.t-ipconnect.de)
[22:09:03] <hexology> trace987: does this help? https://forums.gentoo.org/viewtopic-t-1037184-start-0.html
[22:09:11] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[22:09:23] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:09:31] <hexology> i found some other stuff on the gentoo forums too, e.g. https://forums.gentoo.org/viewtopic-t-1062218-start-0.html
[22:09:43] <trace987> thx
[22:09:55] * SnoopJ isn't really sure what writing an ebuild provides in this case
[22:10:09] <hexology> i don't know if we have many gentoo users here, so you might want to ask more gentoo questions in a gentoo-specific room or forum
[22:10:21] <trace987> yes
[22:10:25] <meatballs> trace987:  xonsh scripts are essentially python with extra sugar for system calls
[22:10:32] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:10:40] <SnoopJ> yea, it's a superset of Python
[22:10:47] <hexology> SnoopJ: personally i also like having things installed through my system package manager. one benefit from a security/trust perspective is that you can manually fetch sources and look at them, instead of downloading whatever is on pypi
[22:10:55] <SnoopJ> hexology, pip can do that
[22:10:56] <hexology> i don't personally go that far, but some people do
[22:10:56] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:11:11] <SnoopJ> fetch sources, I mean
[22:11:24] <hexology> sure, but it's not something that happens automatically
[22:11:25] <SnoopJ> if one wants to examine the source, I imagine that portage is probably not fitting the bill anyway
[22:11:35] <hexology> well the package creator can
[22:11:45] <SnoopJ> the same is true of the person writing a `pip install`
[22:12:01] <SnoopJ> I think this is less "the tools do different things" and more "I want to look at every line of code first"
[22:12:06] <hexology> not really, because in most packaging systems the build process requires you to have already fetched the sources
[22:12:29] <hexology> personally i don't see anything wrong with using your system package manager for system-wide tools, and with avoiding non-system-package managers for the same
[22:12:34] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[22:12:34] <SnoopJ> ...and pip can do that
[22:12:48] <SnoopJ> `pip download` specifically
[22:12:58] <hexology> i am saying that you look at the source _once_, then build a package around it that you personally trust and can reuse
[22:13:44] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:14:06] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[22:14:11] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[22:14:24] <hexology> i have been learning how to package things for rpm for this purpose
[22:14:30] <SnoopJ> hexology, what is the difference between looking at the source _once_ and then pip-installing that revision (from a downloaded sdist, if you like) and doing it in an ebuild?
[22:14:31] <hexology> i like having my system package manager do all the managing of system packages
[22:15:11] <hexology> not much SnoopJ, but now pip is fetching deps, unless you specify --no-deps, in which case you are going to end up writing some kind of ad-hoc install script, at which point you are making your own package manager
[22:15:43] <SnoopJ> the fuss seems to be the point
[22:15:56] <hexology> i'm not saying this is a highly important thing for everyone to immediately do. but i also think it's a perfectly legitimate way to use your computer
[22:16:01] <SnoopJ> sure
[22:16:05] <hexology> ...and i don't see the value in telling people not to do it
[22:16:11] <SnoopJ> has someone done that?
[22:16:20] <hexology> that's the impression i was getting. but maybe i misunderstood
[22:16:30] <SnoopJ> if you think I am saying "don't do that," then yes
[22:17:17] <crunchy_david> hmm, so is there no easy way to pass additional environment vars to a process forked by os.system() other than setting it in the parent process environment via `os.environ["FOO"] = value`?
[22:17:45] <crunchy_david> `pydoc os.system` only shows it taking a single parameter
[22:18:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:18:08] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 250 seconds)
[22:18:09] *** pmb_ is now known as pmb
[22:18:15] <SnoopJ> crunchy_david, os.execle() and friends, probably https://docs.python.org/3/library/os.html#os.execle
[22:18:30] <grym> crunchy_david: if you use subprocess.*  instead, you could also pass an env= kwarg in most of 'em
[22:18:39] <SnoopJ> yea, subprocess makes this less of a pain
[22:20:09] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[22:20:29] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:20:52] *** Joins: Arnold- (~hdhdjjhdh@160-92-174-82.ftth.glasoperator.nl)
[22:21:48] <Arnold-> So I have a function func() which returns two values, the latter a boolean, is there a way to use this in a conditional assignment with := to test for the truthiness of the latter at the same time, obviously if (value, guard := func(); guard): does not work
[22:22:16] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[22:22:18] <CrtxReavr> Oath Keepers leader and 10 others charged with "Seditious Conspiracy."
[22:22:20] *** Joins: casastorta (~casastort@neo3.krivokuca.net)
[22:22:25] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:22:29] <crunchy_david> thanks; will look at those
[22:22:31] <CrtxReavr> sorry - wrong channel
[22:22:50] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e5:449e:9cbd:ac34:e54d:c677) (Read error: Network is unreachable)
[22:23:00] <grym> Arnold-: res = func(); if res[1]:
[22:23:13] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:fcd4:8c5d:7c22:5e25)
[22:23:27] <SnoopJ> or `value, guard = func(); if guard:`
[22:23:35] <crunchy_david> grym: env= is augmentive of parent env, or replaces?
[22:23:39] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:23:47] <grym> crunchy_david: check the docs; i think it replaces
[22:24:34] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[22:24:37] <Arnold-> grym, I suppose but that will look a bi uly in if .. elif ... thnigs
[22:24:47] *** Joins: rotherfuchs (~rotherfuc@2a01:598:b97b:de35:1c67:6273:b56b:3564)
[22:24:54] <Arnold-> It requires if ... else res = func(); if res: then right?
[22:25:07] <Arnold-> So the “tower starts to lean then” if youw ill
[22:25:08] <SnoopJ> Arnold-, I think doing multiple assignment like this will *always* be truthy, because the expression is a non-empty tuple
[22:25:28] <Arnold-> SnoopJ, yes that is why I wanted to to use something such as (x ; y)
[22:25:30] <SnoopJ> so `if (a, b := ...):` seems like it would always be a waste of time
[22:25:34] <crunchy_david> grym: yup, sounds like it, but I assume you could do something like {**os.environ, **overrides} to get merged behavior
[22:25:41] <Arnold-> I had hoped that (x ; y) would evelatuate both in sequence, and then evaluate to the value of the last but alas
[22:26:09] <grym> crunchy_david: yep
[22:26:14] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[22:26:17] <SnoopJ> Arnold-, the RHS of an assignment expression contains an expression, not a statement. Seems like you want an assignment statement and a separate guard statement here
[22:27:33] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:27:38] <SnoopJ> if it's something you have to do in multiple places, you might want a helper function, or a refactor of func()
[22:27:40] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[22:27:40] *** Joins: linux-phaedrus (~linux-sis@104.36.253.60)
[22:27:42] <Arnold-> Well yes, I was simply wondering if it were possible to dot his inside of the if <cond>: rathe than outside of it, which requires the tower to lean  as said.
[22:27:47] <SnoopJ> it is not
[22:28:52] *** Quits: rotherfuchs (~rotherfuc@2a01:598:b97b:de35:1c67:6273:b56b:3564) (Client Quit)
[22:28:53] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:29:12] <SnoopJ> you could do `if (result := func())[1]: ...` but this is bending over pretty far to avoid something legible
[22:29:42] *** Joins: rotherfuchs (~rotherfuc@2a01:598:b97b:de35:1c67:6273:b56b:3564)
[22:29:47] <rotherfuchs> Hi, I'm having a weird issue with pip. Since using v21 it looks like it's installing Python2 code. When using v20 everything works fine .. !?
[22:30:19] <TML> rotherfuchs: did you install v21 using a python2 interpreter on accident?
[22:30:27] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:fcd4:8c5d:7c22:5e25) (Ping timeout: 250 seconds)
[22:30:34] <rotherfuchs> No I used `python3 -m ensurepip`
[22:30:39] <SnoopJ> how are you invoking pip?
[22:30:42] *** dcaro is now known as dcaro_away
[22:30:55] <rotherfuchs> SnoopJ `python3 -m pip`
[22:31:29] <BtbN> Normally, it just installs the code of the package you want. Very few packages have and ship different code for different python versions.
[22:31:47] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:31:47] *** Parts: Arnold- (~hdhdjjhdh@160-92-174-82.ftth.glasoperator.nl) (I'm an albatraoz)
[22:31:49] *** Joins: Auron (~Auron956@user/auron)
[22:31:56] <BtbN> There might be different wheels if it has binary parts, that are targeting specific python versions, but that's about it.
[22:32:11] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[22:32:15] *** Quits: casastorta (~casastort@neo3.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:32:18] <rotherfuchs> I have a system set up where I have two virtualenvs, both containing a pip version. one installs the right version of a lib (pyCLI in that case), one does not.
[22:32:21] <SnoopJ> rotherfuchs, and `python3 -m pip -V` isn't indicating any py2-ness? It could be some weirdness on the part of the package you're installing as BtbN says
[22:32:39] <rotherfuchs> *both containig a DIFFERENT pip version
[22:32:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[22:32:59] *** Joins: nomic (~nomic@185.192.69.217)
[22:33:00] <rotherfuchs> SnoopJ: `pip 21.3.1 from /tmp/x/lib/python3.7/site-packages/pip (python 3.7)`
[22:33:41] <catbeard> any ideas about this? https://kopy.io/4s0AN#CPjLFpaQn4KhFL
[22:33:45] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[22:33:50] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:33:57] <SnoopJ> rotherfuchs, okay, can you explain what "installing Python2 code" means in this case? I can install that package successfully with pip 21.3.1 but I don't quite know what you're saying is wrong with it
[22:34:12] <catbeard> is that python weirdness or math weirdness
[22:34:29] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:34:36] *** Quits: zaquest (~notzaques@5.130.79.72) (Ping timeout: 250 seconds)
[22:34:41] <rotherfuchs> SnoopJ check this https://dpaste.org/Y1Ur
[22:34:48] <SnoopJ> catbeard, the Python being used there doesn't look particularly weird
[22:35:47] *** Joins: Naan (~naan@user/naan)
[22:36:04] *** Joins: zaquest (~notzaques@5.130.79.72)
[22:36:24] <TML> rotherfuchs: pyCLI hasn't had a release since 2012, I don't think it's python3 aware
[22:36:40] <SnoopJ> it works in my 3.8, trying again in 3.7.10
[22:36:48] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[22:36:48] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[22:37:08] <rotherfuchs> TML it is working when using an older pip (!) version
[22:37:26] <TML> rotherfuchs: Which version of pyCLI gets installed in the older pip version?
[22:37:30] <SnoopJ> hmm, yea, I can't reproduce that error
[22:37:46] <SnoopJ> and that line doesn't appear in the pyCLI it downloaded
[22:37:54] <TML> I can reproduce it
[22:38:13] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:38:18] <SnoopJ> oh, I got the sdist, not the whl
[22:38:20] *** Joins: Barones (~Barones@189.50.80.77)
[22:38:28] *** Joins: Narrat (~omnius@p200300df5f129c2006ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:39:27] <catbeard> some notes on that " the number always go up then down symmertrically except for 10, it's the only exception, and it's off by exactly one"
[22:39:36] <rotherfuchs> And here is a working example https://dpaste.org/euAc
[22:39:48] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[22:39:48] <rotherfuchs> (ok pip v9 is very old but i could reproduce it with v20)
[22:39:50] <SnoopJ> where is that wheel even coming from, actually? there isn't one on PyPI
[22:40:27] <TML> pyCLI-2.0.3-py3-none-any.whl
[22:40:28] <rotherfuchs> That's a very good question but I don't know how to figure out
[22:40:36] *** Joins: Leolo_2 (~fil@184-75-132-167.resi.cgocable.ca)
[22:40:46] <SnoopJ> rotherfuchs, try `python3 -m pip cache remove pyCLI` and a re-install, maybe
[22:40:48] <Leolo_2> I have     def _cmd( self, cmd:str, unit:int, arg:int ):
[22:40:49] <Leolo_2>         return "{0} {1:02X} {2:02X}".format( cmd, self._unit(unit), arg )
[22:40:57] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:8572:5509:a339:341e) (Quit: Textual IRC Client: www.textualapp.com)
[22:41:31] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[22:41:34] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:41:36] <Leolo_2> and if I call it with self._cmd( "ka", 1, 0xff ) I get "<class 'str'> 01 FF"
[22:41:43] <SnoopJ> as far as how to figure out, you'd want to run the install with the verbosity turned up, although it won't be helpful until you remove the wheel from the cache if it's being downloaded
[22:42:01] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 245 seconds)
[22:42:07] <rotherfuchs> Ah, SnoopJ removing cache worked on the problematic env. Is there a way to purge ALL cache? because I'm running this on cloud infrastrucutre within a scaled environment
[22:42:16] <SnoopJ> rotherfuchs, `pip cache purge`
[22:42:40] *** Joins: teut (~teut@2401:4900:1c68:6b85:827:8b5f:2dc7:4cd1)
[22:42:42] <SnoopJ> you can also pass --no-cache-dir when installing to disable it, which is useful e.g. inside a container
[22:43:12] <rotherfuchs> Yes it's running ona gitlab runner which involves Dockers..
[22:43:16] <SnoopJ> sounds like the 2.0.3 wheel you had from...somewhere? did not actually contain 2.0.3
[22:43:35] <TML> SnoopJ: even after `python3 -m pip cache remove pyCLI` my Python 3.10.1 still ends up grabbing the py2 pyCLI (pyCLI-2.0.3)
[22:44:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[22:44:56] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[22:45:05] <SnoopJ> I don't think there are different versions for 2/3
[22:45:14] <SnoopJ> 2.0.3 is tagged for both
[22:45:35] <TML>   Added pyCLI from https://files.pythonhosted.org/packages/95/fc/b2d86a5fbdac4072bcf70b01674b612e1a13026f54962c878fe3eca36fd1/pyCLI-2.0.3.tar.gz#sha256=bc53e6c5db031ae1c05d131641f153d22a201c5e82cc8c9324a945752efbb622 to build tracker '/tmp/pip-req-tracker-y8igusb4'
[22:45:35] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:46:14] <mexen> Anyone ever used mu editor? Can I make it see my virtual environment?
[22:46:24] <SnoopJ> TML, bizarre! that file does indeed have `except Exception, e:` in it
[22:46:25] <TML> When I look in the source it downloads for pyCLI 2.0.3, it definitely contains the py2 "except Exception, e" code
[22:46:54] *** Joins: duszek (~duszek@adto246.neoplus.adsl.tpnet.pl)
[22:46:59] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:47:05] <mexen> Sorry, installing third party packages worked.
[22:47:14] *** Joins: bdiddy (~bdiddy@li654-123.members.linode.com)
[22:47:20] <duszek> Traceback (most recent call last):
[22:47:20] <duszek>   File "<pyshell#59>", line 1, in <module>
[22:47:20] <duszek>     for i in range(1,len(S+1)):
[22:47:20] <duszek> TypeError: can only concatenate str (not "int") to str
[22:47:29] <duszek> how do I solve this problem?
[22:47:31] <duszek> s
[22:47:32] <phy1729> len(S)+1
[22:47:35] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:47:42] <The-Compiler> mexen: I'm not sure if mu supports virtualenvs at all - but in any case, mu is great for learning Python, but for actually writing stuff you might watn to consider switching to something like PyCharm or VS Code
[22:47:47] <Leolo_2> nvm I found my error
[22:47:49] *** Parts: Leolo_2 (~fil@184-75-132-167.resi.cgocable.ca) ()
[22:47:58] <The-Compiler> duszek: depends on what you intend to do
[22:48:00] <phy1729> though you might want enumerate(S)
[22:48:03] <mexen> I am learning python
[22:48:05] <TML> SnoopJ: I see a commit in the git repo from Jun 11, 2020 to fix that error, but that doesn't explain where you and rotherfuchs are getting that from
[22:48:09] <SnoopJ> TML, ...what the heck, my pip is getting the same sdist
[22:48:15] <The-Compiler> duszek: S is a string, 1 is an int. You can't add 1 to "somestring".
[22:48:19] <SnoopJ> but my installed app.py does *not* have the offending syntax
[22:48:26] <duszek> The-Compiler: ok I understand
[22:48:36] <duszek> wait, I have to use bpaste, I forgot about it completely
[22:48:48] <TML> https://github.com/whilp/cli/commit/2af95cff5609142ec14efdf13b394f9b0121ab2e
[22:48:51] <rotherfuchs> TML SnoopJ but after I ran the purge it installed the correct version (with the  `except Exception as e` syntax)
[22:48:51] *** Quits: bdiddy (~bdiddy@li654-123.members.linode.com) (Client Quit)
[22:49:00] <rotherfuchs> Where from? no clu.
[22:49:04] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:49:15] <mexen> The-Compiler: I see that it doesn't but in my case, it is fine. It has a tab for installing third party packages, so I just reinstalled the one i needed within mu
[22:49:17] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[22:49:24] <SnoopJ> rotherfuchs, TML what version of distutils do you have?
[22:49:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:49:44] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:50:04] <mexen> Thanks
[22:50:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[22:50:22] <TML> SnoopJ: How do I tell that?
[22:50:27] <SnoopJ> nvm, silly question isn't it
[22:50:45] <mexen> I wonder if I am ready to move on from mu... Feel like I should stick with it for the duration of this book (automate the boring stuff, wrapping up regex)
[22:51:05] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[22:51:36] <SnoopJ> TML, rotherfuchs I see that the project's setup.py uses `distutils.command.build_py.build_py_2to3` to run 2to3, I wonder if that's not happening on your systems
[22:51:39] *** Joins: dsp00 (~dsp00@20.79.249.135)
[22:51:49] <SnoopJ> in the cases where it fails, I mean, I understand that the original issue was resolved :)
[22:52:03] <TML> oh, that could be
[22:52:34] <SnoopJ> it's the only idea I have since I'm getting exactly the same sdist, but not the same installed source
[22:52:57] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:53:49] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:54:01] *** Joins: onichomp (~onichomp@2806:264:4408:285:353a:9ad8:29b:a31a)
[22:55:32] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Ping timeout: 256 seconds)
[22:56:28] <TML> SnoopJ: ImportError: cannot import name 'build_py_2to3' from 'distutils.command.build_py'
[22:56:31] <TML> so yeah
[22:56:37] <TML> you nailed it right on the head
[22:56:41] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:56:50] *** Joins: fstd_ (~fstd@xdsl-87-78-21-185.nc.de)
[22:56:52] <SnoopJ> what the heck
[22:57:02] <zerosum> hey all, need some help crafting a simple regex that matches a city name, so far I've only been able to match on cities w/ no spaces but I want for both cases.. my sample string is the following: https://bpa.st/II6Q
[22:57:03] *** Joins: Syzygy__ (~Syzygy@dynamic-2l4rd2qeatx0n54f76-pd01.res.v6.highway.a1.net)
[22:57:07] <TML> They have a try/except on importing build_py_2to3
[22:57:17] <SnoopJ> yea, I just dunno why yours doesn't have that :)
[22:57:22] <hexology> zerosum: in general i recommend https://regex101.com for building and testing regex
[22:57:24] <TML> if it fails, they just use build_py
[22:57:25] <zerosum> my regex is "name\"\:\"\w*" but only matches one case
[22:57:26] <jinsun> setuptools replaces distutils with its own thing, and that doesn't have build_py_2to3
[22:57:32] <jinsun> maybe that is the cause?
[22:57:37] <hexology> also parsing json with regex seems like a bad idea
[22:57:39] <SnoopJ> jinsun, does it alias it?
[22:58:06] <rotherfuchs> SnoopJ that can be. I just ran a deployment, adding a `purge` before installing the packages but it's still not using the Python3 syntax on the instance :-/
[22:58:48] *** Joins: naranja (~orange@user/orangeboxcutter)
[22:58:57] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[22:59:01] <jinsun> SnoopJ: yeah it does some hackery https://github.com/pypa/setuptools/blob/main/_distutils_hack/__init__.py
[22:59:39] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 256 seconds)
[22:59:39] *** Quits: Syzygy_ (~Syzygy@178-190-59-186.adsl.highway.telekom.at) (Ping timeout: 256 seconds)
[22:59:39] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[22:59:52] <SnoopJ> rotherfuchs, TML I had setuptools 57.4.0, I can reproduce after upgrading to 60.5.0
[22:59:58] <SnoopJ> mystery resolved :)
[23:00:03] <SnoopJ> (also, ew!)
[23:00:04] <TML> rotherfuchs: I think you should build yourself a whl
[23:00:13] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Ping timeout: 256 seconds)
[23:00:13] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:00:41] <rotherfuchs> SnoopJ ahh!
[23:00:52] <SnoopJ> or pin setuptools if that's not prohibitive
[23:01:11] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 256 seconds)
[23:01:15] <SnoopJ> vendoring a built wheel into your container is probably a little less janky :)
[23:01:18] *** Joins: manti7 (~manti7@176.10.104.94)
[23:01:22] *** Joins: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:01:23] <TML> > Distutils was imported before Setuptools, but importing Setuptools also replaces the `distutils` module in `sys.modules`.
[23:01:32] <TML> > This may lead to undesirable behaviors or errors.
[23:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:01:39] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[23:01:42] <TML> …
[23:01:52] <SnoopJ> narrator: and it did!
[23:02:29] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[23:02:41] <SnoopJ> rotherfuchs, are you using pyCLI in a new project, or is this in support of existing code?
[23:03:10] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[23:03:14] *** Joins: Cyp_ (~cyp@213.237.85.9)
[23:03:51] *** Joins: LimeOn (~user@user/limeon)
[23:03:54] <rotherfuchs> SnoopJ this is old code. Still I could replace pyCLI but I first wanted to make sure that this is not an issue with pip and python versions
[23:04:01] *** Quits: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:04:01] *** Quits: Cyp (~cyp@213.237.85.9) (Ping timeout: 256 seconds)
[23:04:10] <SnoopJ> yea, me too, that's why I kept digging :)
[23:04:38] <rotherfuchs> TML haha, good catch
[23:05:24] <TML> I don't love that they do that.
[23:05:28] <TML> *shrug*
[23:05:48] <SnoopJ> it's pretty gross, yea. on the other hands, has setuptools ever *not* been gross?
[23:06:02] *** Quits: miique (~miique@181.46.139.166) (Read error: Connection reset by peer)
[23:06:20] *** Quits: duszek (~duszek@adto246.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[23:07:09] <TML> distutils and setuptools are both kind of black boxes to me
[23:07:27] <TML> They fall well below the threshold of "things I have time to care about" :)
[23:08:00] *** Joins: matsaman (~matsaman@user/matsaman)
[23:08:42] *** Joins: miique (~miique@181.46.139.166)
[23:09:44] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[23:09:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:10:36] *** Joins: martums5 (~martums@user/martums)
[23:11:44] *** Joins: bdiddy (~bdiddy@li654-123.members.linode.com)
[23:12:18] *** Quits: remote (~remote@user/hackers) (Ping timeout: 250 seconds)
[23:12:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[23:13:08] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:13:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:14:54] <rotherfuchs> TML SnoopJ it seems like this ticket is the reason for that behavior https://github.com/pypa/setuptools/pull/2896 because 60.0.0 is the first version where it fails
[23:14:57] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[23:15:14] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:15:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:16:23] <SnoopJ> rotherfuchs, thanks. I gave a half-hearted attempt to figure out where the break was but came up pretty short.
[23:16:28] *** Joins: mickey8 (~user@user/mickey)
[23:16:47] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:16:59] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Client Quit)
[23:17:48] <rotherfuchs> SnoopJ least I can do:)
[23:18:12] <jinsun> looks like graingert is responsible :D https://github.com/pypa/setuptools/commit/58799d344902ca419cba3b4cffd46b8edeb7d3fe
[23:18:12] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[23:19:00] <graingert[m]> Hehe
[23:19:02] *** Joins: ngp (~ngp@199.180.249.183)
[23:19:11] *** Joins: esv (~esv@74.124.178.154)
[23:19:13] *** Joins: Guest50 (~Guest50@159.203.58.112)
[23:19:14] <arkanoid> if I send a CookieJar of all my browser cookies into a requests.post, will it send to the other side only the cookies relevant to the requested url, or blindly send all the cookies for all domains?
[23:19:45] <rotherfuchs> jinsun yep that comment tells the whole story :-D
[23:19:56] *** Joins: summersault (~summersau@179.221.251.36)
[23:19:59] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[23:20:11] *** Quits: ngp (~ngp@199.180.249.183) (Client Quit)
[23:20:12] *** Joins: mickey8 (~user@user/mickey)
[23:20:14] * SnoopJ won't lose any sleep over less 2.x-enabling code
[23:20:51] <SnoopJ> ...the distutils docs should probably mention the removal though
[23:20:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[23:21:01] *** Joins: ngp (~ngp@199.180.249.183)
[23:21:30] *** Quits: obvs (~obvs@user/PeteH) (Remote host closed the connection)
[23:21:31] *** Quits: miique (~miique@181.46.139.166) (Quit: Leaving)
[23:21:47] *** Joins: vizi (~ketiv@92.40.195.183.threembb.co.uk)
[23:21:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:22:31] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:22:53] <jinsun> well it isn't removed from the stdlib distutils yet, distutils gives warning that the whole thing will go away in 3.12 though
[23:23:43] *** Quits: Guest50 (~Guest50@159.203.58.112) (Client Quit)
[23:24:01] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Ping timeout: 256 seconds)
[23:24:25] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[23:24:30] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:24:39] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[23:25:55] *** Joins: morte_ (~user@190.104.116.153)
[23:26:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:27:28] *** Quits: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 250 seconds)
[23:28:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:29:22] <zerosum> hexology thanks for the link, I was able to craft one that works
[23:29:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[23:30:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[23:30:12] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:30:53] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[23:32:16] *** Joins: fikran (~fikran@user/fikran)
[23:32:42] *** Joins: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr)
[23:33:34] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[23:35:09] <SnoopJ> jinsun, I was thinking maybe the snippet could emit a warning if it didn't find build_py_2to3, since it seems like the snippet was copy-pasted, but with the impending removal...yea, not worth it I guess
[23:35:09] *** Joins: ubert (~Thunderbi@p200300ecdf099487827ed8c05b109aa8.dip0.t-ipconnect.de)
[23:35:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[23:36:34] *** Quits: morte_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[23:37:27] <jinsun> ah it was from the distutils docs
[23:38:42] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[23:41:21] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:42:27] *** Joins: arinov (~arinov@213.194.126.155)
[23:42:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:42:50] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[23:43:43] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[23:44:22] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 250 seconds)
[23:44:32] *** Joins: Gerula (~Gerula@user/gerula)
[23:44:59] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:45:07] *** Joins: audiobirb (~audio@user/audio)
[23:46:02] *** Quits: sabry (~sabry@197.37.4.159) (Quit: Client closed)
[23:47:38] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:47:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:48:03] *** Joins: mickey8 (~user@user/mickey)
[23:48:21] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[23:48:46] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) ()
[23:48:57] *** Quits: andyandybobandy (~AndyAndyB@89.36.78.153) (Ping timeout: 256 seconds)
[23:49:06] *** Joins: andyandybobandy (~AndyAndyB@89.36.78.233)
[23:49:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:49:51] *** Joins: vlm (~vlm@user/vlm)
[23:51:32] *** Quits: andyandybobandy (~AndyAndyB@89.36.78.233) (Client Quit)
[23:51:36] <rotherfuchs> SnoopJ I can't get it working on my gitlab ci. There I'm doing this: https://dpaste.org/JhDQ  - I install the most recent pip, then downgrade to v20 and even pin the setuptools but still  the package contains the wrong, non 2_to_3-ed version. You have any hint on this ?
[23:52:47] *** Joins: delvian (~delvian@41.13.204.126)
[23:52:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:54:07] <SnoopJ> rotherfuchs, I wonder if one of your requirements is bumping setuptools back up before it gets to pyCLI
[23:54:17] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:54:29] <rotherfuchs> Not explicitly, no
[23:55:10] <SnoopJ> rotherfuchs, I would try installing pyCLI on its own before the requirements file, and doublecheck the setuptools version at the end before deactivation
[23:55:29] <SnoopJ> ...well, assuming I didn't just build and vendor my own wheel which is probably what I'd _actually_ do because I hate reasoning about this kind of thing :)
[23:55:54] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:56:38] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[23:56:42] *** Quits: ano (~ano@user/ano) (Quit: ano)
[23:57:49] *** Joins: johnjaye (~pi@154.6.152.74)
[23:58:59] *** Joins: ano (~ano@user/ano)
[23:59:06] *** Joins: yitz (~yitz@exercism/yitz)
[23:59:20] <rotherfuchs> Agree but the plan is to get rid of pycli next weeks so i just want to get it up and running for now.. I just intsalled the requiremts on my local machine and checked the setuptools version, which is still <60.. trying the pre-requiemtns approach now.
[23:59:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
