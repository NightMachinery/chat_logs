[00:01:20] *** Quits: mizi_ (~mizi@user/mizi) (Ping timeout: 260 seconds)
[00:01:35] <ehuelsmann[m]> ok. that's good to know. I'll send a number of questions to this user to run on their data and ask for the planner output before changing anything.
[00:01:50] <hwrd> given a list of ids, is there a straightforward way in postgres to tell which of the IDs do not exist in a table?
[00:02:19] <Myon> given in what form?
[00:02:45] *** Quits: Reiner_Unsinn (~quassel@tmo-121-153.customers.d1-online.com) (Ping timeout: 256 seconds)
[00:02:46] <hwrd> separated by newlines
[00:02:52] <Myon> in a table?
[00:03:02] *** Quits: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:03:15] <hwrd> no, text file
[00:03:39] <Myon> you have to either put it into a table, or into a string that you can use in a query
[00:03:41] <nbjoerg> hwrd: copy the text file to a temporary table and do a join?
[00:04:14] <Myon> select id from unnest('{your array}'::int[]) u(id) where not exists (select from tbl where tbl.id = u.id);
[00:04:23] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.4)
[00:04:24] <hwrd> nbjoerg that's what I thought, but was wondering if there was a more straightforward way. I should have mentioned that I don't have write access to this DB
[00:04:48] <Myon> or one of the split_to_table() functions
[00:05:04] <nbjoerg> of course there is the alternative approach of using copy to read the ids
[00:05:07] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[00:05:12] <nbjoerg> and using sort and comm :)
[00:05:24] <peerce> antijoins like that are generally expensive.
[00:05:44] <hwrd> yeah, understood
[00:05:45] <peerce> WHERE NOT EXISTS is about as good as it gets, and is better than other constructs
[00:06:13] <nbjoerg> in fact, you don't have write permissions for the db at all and the list of ids is longer, it is likely the easiest approach
[00:06:49] <hwrd> nbjoerg yeah, probably
[00:07:22] <nbjoerg> silly database people forgetting the basic unix tools ;)
[00:07:49] *** Joins: staticvoidmaine (~staticvoi@cpe-184-153-179-95.maine.res.rr.com)
[00:09:18] *** Quits: RLa (~RLa@85.253.190.236.cable.starman.ee) (Quit: Client closed)
[00:09:40] <Myon> hey there a /usr/bin/join. I think you can use it to write a database
[00:10:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:10:44] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:10:52] *** Joins: jmarsac (~jmarsac@2a01cb09d01417ca2581d3c23ef1dfee.ipv6.abo.wanadoo.fr)
[00:15:00] <peerce> the classic software approach to taht would be to sort both lists, then sequentally walk through them, with a left and right index, we'll call i and j..   if left(i) = right(j), advance both i and j, loop.    if left(i)<right(j), then output left(i) and increment i, loop.   if left(i)>right(j), then advance j, loop.
[00:15:26] <peerce> or something like that, its been decades since I did sequential processing like that on mainframes and/or minicomputers with very limited memory.
[00:16:12] <peerce> these techniques date back to doing stuff with mag tape as primary data input sources.
[00:16:48] *** Quits: jmarsac (~jmarsac@2a01cb09d01417ca2581d3c23ef1dfee.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[00:17:57] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[00:19:53] *** Joins: jazzy (~jaziz@user/jaziz)
[00:21:15] *** Joins: Mamad (~Mamad@5.123.131.88)
[00:23:22] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[00:23:48] *** Joins: jmarsac (~jmarsac@2a01cb0680555753fc131a0ff8e27729.ipv6.abo.wanadoo.fr)
[00:24:20] *** Joins: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e)
[00:24:21] *** Quits: Mamad (~Mamad@5.123.131.88) (Read error: Connection reset by peer)
[00:26:56] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:27:24] <nbjoerg> peerce: yeah and sort(1) and comm(1) can be used to do just that
[00:28:31] *** Quits: CanuteTh- (~CanuteThe@user/canutethegreat) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:32:03] <Myon> there is merge join support in PostgreSQL
[00:32:31] <Myon> though for short lists, a nested loop with index lookups is probably better
[00:35:09] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[00:36:14] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[00:38:03] <kjetilho> nbjoerg: you hardly ever see people optimise their scripts using sort -m any more!
[00:38:27] *** Quits: ekathva (~ekathva@2001:999:230:5e27:6147:f65d:75d1:f7dd) (Quit: Leaving)
[00:38:30] *** Joins: CanuteTheGreat (~CanuteThe@user/canutethegreat)
[00:39:04] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[00:41:36] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[00:42:01] *** Joins: mrwick (~mrwick@user/mrwick)
[00:46:13] *** Quits: TomyWork (~TomyLobo@p200300e80f1582000c576e44a1f70bbd.dip0.t-ipconnect.de) (Quit: Leaving)
[00:51:56] *** Joins: Auron (~Auron956@user/auron)
[00:52:24] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: Lost terminal)
[00:52:38] *** Joins: mjf_ (~mjf@cst-prg-10-110.cust.vodafone.cz)
[00:55:40] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[00:56:28] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Ping timeout: 272 seconds)
[00:56:42] *** Joins: mrwick (~mrwick@user/mrwick)
[00:59:24] *** Joins: maret (~maret@5-101-143-116.as42831.net)
[01:01:07] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 250 seconds)
[01:02:38] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[01:04:04] *** Quits: gambl0re (~gambl0re@45.72.228.31) (Ping timeout: 272 seconds)
[01:04:18] *** Joins: asocialblade (~qsl@user/asocialblade)
[01:07:14] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[01:12:15] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[01:16:11] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:17:33] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:5121:f4be:3944:807f) (Remote host closed the connection)
[01:17:45] *** Joins: immibis (~hexchat@62.156.144.218)
[01:17:53] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:46fd:f44c:1529:4e30)
[01:20:53] *** Quits: asocialblade (~qsl@user/asocialblade) ()
[01:21:17] *** Joins: tozhu (~tozhu@218.89.234.111)
[01:22:42] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 260 seconds)
[01:26:01] *** Quits: tozhu (~tozhu@218.89.234.111) (Ping timeout: 265 seconds)
[01:28:37] *** Quits: nattiestnate (~nate@202.138.250.9) (Quit: WeeChat 3.5)
[01:29:24] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:29:26] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:29:56] *** Joins: immibis (~hexchat@62.156.144.218)
[01:30:08] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::3b)
[01:30:48] *** Quits: vnf (~vnf@46.159.151.228) (Quit: Leaving)
[01:31:11] *** Quits: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:32:19] *** Quits: w_lehinsun__ (~lehinsun@188.113.178.220) (Remote host closed the connection)
[01:32:38] *** Joins: w_lehinsun__ (~lehinsun@188.113.178.220)
[01:35:01] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[01:40:59] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:46:06] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::3b) (Remote host closed the connection)
[01:46:28] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::3b)
[01:48:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:50:26] *** Joins: MrZeus__ (~MrZeus@89.238.143.231)
[01:52:00] *** Joins: mrwick (~mrwick@user/mrwick)
[01:53:38] *** Quits: MrZeus_ (~MrZeus@89.238.130.71) (Ping timeout: 260 seconds)
[01:54:17] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:57:23] *** Quits: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net) (Quit: Leaving)
[01:57:54] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[01:59:48] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[01:59:49] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[01:59:53] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:00:37] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:01:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[02:02:42] *** Quits: michalz (~michalz@185.246.204.97) (Remote host closed the connection)
[02:03:57] *** Quits: fcr (~fran@r167-56-99-105.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[02:04:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:05:30] *** Quits: jlc_ (~jlc@cpe-107-15-173-212.nc.res.rr.com) (Ping timeout: 272 seconds)
[02:06:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[02:06:46] *** Quits: h11 (~h11matrix@user/h11) (Quit: Reconnecting)
[02:07:01] *** Joins: h11 (~h11@user/h11)
[02:07:17] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:08:13] *** Joins: nattiestnate (~nate@202.138.250.11)
[02:08:13] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:08:43] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[02:09:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:11:09] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:11:25] *** Joins: vnf (~vnf@46.159.151.228)
[02:12:01] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[02:12:40] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[02:13:04] *** Joins: fcr (~fran@r167-60-91-44.dialup.adsl.anteldata.net.uy)
[02:13:28] *** Quits: jmarsac (~jmarsac@2a01cb0680555753fc131a0ff8e27729.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[02:13:55] *** Quits: nattiestnate (~nate@202.138.250.11) (Quit: WeeChat 3.5)
[02:15:13] *** Joins: jmarsac (~jmarsac@2a01cb0680555753fc131a0ff8e27729.ipv6.abo.wanadoo.fr)
[02:18:17] *** Joins: k8yun_ (~k8yun@user/k8yun)
[02:18:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:19:33] *** Quits: MrZeus__ (~MrZeus@89.238.143.231) (Read error: Connection reset by peer)
[02:19:38] *** Joins: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de)
[02:19:38] *** Quits: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de) (Changing host)
[02:19:39] *** Joins: asocialblade (~qsl@user/asocialblade)
[02:19:52] *** Joins: MrZeus__ (~MrZeus@89.238.130.71)
[02:19:58] *** Quits: staticvoidmaine (~staticvoi@cpe-184-153-179-95.maine.res.rr.com) (Ping timeout: 250 seconds)
[02:21:47] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 260 seconds)
[02:22:34] <maret> anyone knows how to import multiple csv files each having own header? One command I found isw COPY product(title, department) FROM PROGRAM 'awk FNR-1 ys*.csv | cat' DELIMITER ',' CSV;
[02:24:06] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[02:24:26] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:24:30] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::3b) (Remote host closed the connection)
[02:25:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:25:43] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.101) (Ping timeout: 260 seconds)
[02:25:53] *** Quits: vnf (~vnf@46.159.151.228) (Quit: Leaving)
[02:29:17] *** Quits: jmarsac (~jmarsac@2a01cb0680555753fc131a0ff8e27729.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:31:43] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[02:32:40] <peerce> maret; are these all the same table, same fields?
[02:33:09] <maret> yes
[02:33:15] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:41] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3)
[02:34:31] <peerce> i'd probably do something like (in shell),  for f in *.csv; do psql -d dbname -c "copy product(....) from $f delimiter ',' CSV"; done
[02:34:58] <peerce> oh, add HEADER in there
[02:46:37] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:47:25] <maret> I see so basically just run it the loop yeah
[02:47:27] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 260 seconds)
[02:48:58] *** Joins: uncleyear (~ian@31.173.80.95)
[02:51:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:56:20] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:56:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:57:16] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:19] *** Quits: Merixer (~Merixer@46.252.5.32) (Quit: ZNC 1.6.5 - http://znc.in)
[02:57:33] *** Joins: Merixer (~Merixer@46.252.5.32)
[02:58:40] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:59:29] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:03:14] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 252 seconds)
[03:05:35] *** Quits: Sellerie (~Sellerie@user/sellerie) (Quit: Ping timeout (120 seconds))
[03:07:01] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:07:53] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[03:09:11] *** Quits: maret (~maret@5-101-143-116.as42831.net) (Ping timeout: 250 seconds)
[03:15:20] *** Joins: maret (~maret@109.70.150.80)
[03:18:02] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[03:21:14] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[03:23:49] <texasmynsted> What is a good way to archive old data with postgresql? Make some kind of accumulating archive db? Partition tables so older content is stored in a foreign table?
[03:23:52] <texasmynsted> Something else?
[03:24:22] <texasmynsted> The goals: 1. keep all data somewhere for analytics. 2. Keep only current data in run-time production system for performance.
[03:25:00] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:25:20] *** Quits: sonOfRa (sonOfRa@user/sonofra) (Remote host closed the connection)
[03:25:51] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 250 seconds)
[03:28:25] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[03:30:26] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[03:33:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:36:18] *** Joins: Sellerie (~Sellerie@user/sellerie)
[03:42:31] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[03:42:40] *** Joins: tozhu (~tozhu@218.89.234.111)
[03:43:31] *** Quits: maret (~maret@109.70.150.80) (Ping timeout: 256 seconds)
[03:44:55] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[03:47:08] *** Quits: tozhu (~tozhu@218.89.234.111) (Ping timeout: 265 seconds)
[03:47:57] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:48:41] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 245 seconds)
[03:49:02] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[03:50:10] <xocolatl> texasmynsted: partitioning is usually the way to go with that
[03:50:29] *** Joins: concrete-houses (~g@209.6.150.53)
[03:51:26] <cahoots> hi, i have a table with a column that has strings of 10-200 bytes (type "text"). is there any performance win to be had for scans on this table (which don't filter using that column, but will return it in the results) by putting the strings in a separate table and only keeping an index to them in the original table? then doing a join at the end
[03:54:14] <strk> does TRUNCATE force a vacuum on indexes of the table ?
[03:54:31] <strk> as I'm getting a different behavior with TRUNCATE and DELETE as for what's found in the index
[03:55:07] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[03:57:07] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 256 seconds)
[03:58:19] *** Joins: tozhu (~tozhu@218.89.234.111)
[03:58:30] *** Joins: lilgopher (~lilgopher@c-24-12-183-227.hsd1.il.comcast.net)
[03:59:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:01:05] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[04:03:35] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:05:12] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 272 seconds)
[04:08:29] *** Quits: lilgopher (~lilgopher@c-24-12-183-227.hsd1.il.comcast.net) (Quit: leaving)
[04:08:45] *** Joins: lilgopher (~lilgopher@c-24-12-183-227.hsd1.il.comcast.net)
[04:09:33] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[04:11:41] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:12:51] *** Quits: w_lehinsun__ (~lehinsun@188.113.178.220) (Quit: Leaving)
[04:18:55] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[04:19:53] *** Quits: tozhu (~tozhu@218.89.234.111) (Quit: tozhu)
[04:23:04] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[04:24:33] *** Quits: n0fun_ (~jack@i577BC003.versanet.de) (Ping timeout: 256 seconds)
[04:25:53] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[04:29:29] *** Joins: tozhu (~tozhu@218.89.234.111)
[04:32:28] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:34:12] *** Joins: SwK_ (~SwK_@158.120.197.136)
[04:35:53] *** Quits: SwK (~SwK_@user/swk) (Ping timeout: 256 seconds)
[04:37:24] *** Joins: robins (~robin@25.51-174-133.customer.lyse.net)
[04:39:02] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[04:39:31] *** Quits: robinsmidsrod (~robin@25.51-174-133.customer.lyse.net) (Ping timeout: 246 seconds)
[04:43:41] *** Joins: Bebef (sbreit@phobos.bebef.de)
[04:47:28] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb)
[04:47:36] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:48:16] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[04:50:43] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:50:48] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[04:51:02] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[04:53:15] *** Joins: n0fun_ (~jack@mue-88-130-48-066.dsl.tropolys.de)
[04:57:26] *** Joins: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745)
[05:06:20] *** Joins: xiongxin (~Thunderbi@117.136.39.215)
[05:14:43] *** Joins: k8yun (~k8yun@user/k8yun)
[05:19:12] *** Joins: funhouse (~funhouse@user/funhouse)
[05:21:25] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:15c6:4ddf:5787:908a:a748)
[05:21:39] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[05:21:41] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[05:22:11] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[05:23:52] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[05:24:16] *** Quits: xiongxin (~Thunderbi@117.136.39.215) (Read error: Connection reset by peer)
[05:24:16] *** xiongxin1 is now known as xiongxin
[05:25:34] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:26:32] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb) (Quit: WeeChat 3.4)
[05:26:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 252 seconds)
[05:31:47] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:1ff2:e03a:2456:5ccc:3d7b)
[05:35:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:15c6:4ddf:5787:908a:a748) (Ping timeout: 256 seconds)
[05:36:08] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:1ff2:e03a:2456:5ccc:3d7b) (Ping timeout: 252 seconds)
[05:37:14] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:2469:bba4:9099:ef70:f70f)
[05:37:47] *** Quits: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 260 seconds)
[05:41:50] *** Quits: tozhu (~tozhu@218.89.234.111) (Quit: tozhu)
[05:42:14] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[05:51:08] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:61e3:f551:d48e:e2b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:52:15] *** Quits: MrZeus__ (~MrZeus@89.238.130.71) (Ping timeout: 260 seconds)
[05:55:06] *** Joins: sympatico (~textual@ip184-181-47-47.no.no.cox.net)
[05:58:19] *** Quits: f3f3lix (~weechat@55d4dab2.access.ecotel.net) (Ping timeout: 260 seconds)
[05:58:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:59:41] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:59:51] *** Joins: f3f3lix (~weechat@55d4df2c.access.ecotel.net)
[06:00:38] *** Joins: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net)
[06:02:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:04:16] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[06:09:09] *** Quits: Su-Shee (~Susanne@87-108-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[06:10:58] *** Joins: Su-Shee (~Susanne@170-109-142-46.pool.kielnet.net)
[06:11:10] *** Joins: tozhu (~tozhu@117.139.163.129)
[06:16:03] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[06:17:17] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:2469:bba4:9099:ef70:f70f) (Ping timeout: 260 seconds)
[06:18:02] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:20:19] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 246 seconds)
[06:26:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:26:52] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[06:33:36] *** Joins: _xor (~xor@74.215.232.169)
[06:38:47] *** Joins: xiongxin (~Thunderbi@117.136.39.221)
[06:39:59] *** Quits: dive (~dive@user/dive-o) (Ping timeout: 256 seconds)
[06:40:37] *** Quits: n0fun_ (~jack@mue-88-130-48-066.dsl.tropolys.de) (Ping timeout: 246 seconds)
[06:40:40] *** Joins: n0fun (~jack@mue-88-130-48-035.dsl.tropolys.de)
[06:42:25] *** Quits: _xor (~xor@74.215.232.169) (Quit: WeeChat 3.4.1)
[06:44:49] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 246 seconds)
[06:44:57] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[06:47:53] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[06:54:47] *** Quits: erry (~erry@errietta.me) (Quit: WeeChat 2.5)
[06:56:02] *** Joins: erry (~erry@errietta.me)
[06:57:04] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 246 seconds)
[06:58:51] *** Joins: Vacuity (~Vacuity@user/vovo)
[06:59:16] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[07:06:19] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:a39:e6f5:9d58:2466:b9f0)
[07:07:23] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[07:08:19] *** Quits: n0fun (~jack@mue-88-130-48-035.dsl.tropolys.de) (Ping timeout: 256 seconds)
[07:08:40] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:09:16] *** Quits: xiongxin (~Thunderbi@117.136.39.221) (Ping timeout: 260 seconds)
[07:09:16] *** xiongxin1 is now known as xiongxin
[07:10:08] *** Quits: zaher (~zaher@37.48.159.213) (Ping timeout: 272 seconds)
[07:10:10] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:441:afa9:b5e8:ac51:4870)
[07:12:23] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[07:13:53] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:a39:e6f5:9d58:2466:b9f0) (Ping timeout: 260 seconds)
[07:14:35] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:441:afa9:b5e8:ac51:4870) (Ping timeout: 252 seconds)
[07:15:15] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:20f2:ac8a:be5c:57a6:5a94)
[07:18:51] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:46fd:f44c:1529:4e30) (Ping timeout: 256 seconds)
[07:24:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:25:24] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[07:25:34] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[07:28:26] *** Joins: furrymcg1e (~devuan@cgn-89-1-210-48.nc.de)
[07:29:16] *** Joins: maret (~maret@188.212.154.109)
[07:31:05] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[07:31:45] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:31:46] *** Quits: furrymcgee (~devuan@cgn-89-1-209-26.nc.de) (Ping timeout: 260 seconds)
[07:31:58] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[07:39:03] *** Joins: xiongxin1 (~Thunderbi@117.136.39.219)
[07:39:54] *** Quits: mjf_ (~mjf@cst-prg-10-110.cust.vodafone.cz) (Ping timeout: 272 seconds)
[07:42:39] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:20f2:ac8a:be5c:57a6:5a94) (Ping timeout: 256 seconds)
[07:42:40] *** xiongxin1 is now known as xiongxin
[07:43:37] *** Quits: maret (~maret@188.212.154.109) (Ping timeout: 260 seconds)
[07:47:55] *** Joins: xiongxin1 (~Thunderbi@117.136.40.173)
[07:51:43] *** Quits: xiongxin (~Thunderbi@117.136.39.219) (Ping timeout: 260 seconds)
[07:51:54] <b0nn> I've got a column, and it has strings that end in -FOO and -BAR; I want to trim all strings in that column of -FOO. That is, I have X-FOO, X-BAR, Y-FOO, Y-BAR and I want to end up with X, X-BAR, Y, Y-BAR
[07:52:23] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[07:52:23] <b0nn> A column only has one string, it's either X-FOO or X-BAR
[07:52:34] *** Quits: xiongxin1 (~Thunderbi@117.136.40.173) (Ping timeout: 272 seconds)
[07:52:39] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:3065:2e43:1e0a:ae80:c245)
[07:53:08] *** Joins: xiongxin1 (~Thunderbi@117.136.40.178)
[07:55:40] <justyb11> b0nn, Well out the box sounds like you could just use REPLACE scalar function.  Unless there is some sort of gotcha.
[07:56:29] <b0nn> ah, that's what I needed to google, thanking you :)
[07:57:03] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:3065:2e43:1e0a:ae80:c245) (Ping timeout: 260 seconds)
[07:57:37] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[07:58:09] <peerce> or regex_replace()
[07:58:30] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[08:01:48] <peerce> update tablename set column=replace(column, '-FOO', '') where column like '%-FOO';
[08:02:04] *** Quits: xiongxin1 (~Thunderbi@117.136.40.178) (Ping timeout: 272 seconds)
[08:02:30] *** Joins: rageshkrishna (~rageshkri@122.162.198.225)
[08:03:28] *** Quits: sympatico (~textual@ip184-181-47-47.no.no.cox.net) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:04:33] <peerce> update tablename set column=regex_replace(column, '-FOO$', '') where column like '%-FOO';
[08:05:11] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[08:09:53] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[08:11:28] *** Joins: bmomjian (~bruce@momjian.us)
[08:14:16] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:28a1:5c46:cd0a:cd61)
[08:16:25] *** Quits: sreve (~quassel@p4ff44dd2.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:16:54] *** Joins: sreve (~quassel@p4ff44df2.dip0.t-ipconnect.de)
[08:19:10] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[08:21:08] *** Quits: rageshkrishna (~rageshkri@122.162.198.225) (Remote host closed the connection)
[08:30:18] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[08:31:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[08:32:58] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 246 seconds)
[08:33:05] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[08:33:39] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[08:34:43] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[08:36:10] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[08:39:39] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[08:42:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:42:35] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[08:42:57] *** Joins: tozhu (~tozhu@117.139.163.129)
[09:00:20] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[09:03:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[09:03:53] *** Joins: mattil (~mattil@dy6n2d-mz97dgrpxxfd8t-4.rev.dnainternet.fi)
[09:05:18] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[09:13:42] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[09:23:08] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[09:25:18] *** Quits: mattil (~mattil@dy6n2d-mz97dgrpxxfd8t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:25:22] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[09:25:44] *** Joins: mattil (~mattil@dy6n2d-mz97dgrpxxfd8t-4.rev.dnainternet.fi)
[09:30:11] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[09:30:23] *** Quits: mattil (~mattil@dy6n2d-mz97dgrpxxfd8t-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[09:30:44] *** Quits: alioui (~medeva293@197.0.87.71) (Ping timeout: 272 seconds)
[09:32:50] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:38:40] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[09:41:40] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:42:08] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[09:44:02] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 272 seconds)
[09:46:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[09:49:40] *** Joins: uncleyear (~ian@31.173.80.95)
[09:50:02] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da)
[09:50:41] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:52:30] *** Joins: manti7 (~manti7@176.10.104.94)
[09:53:32] *** Quits: stark__ (~stark@192.222.248.88) (Ping timeout: 272 seconds)
[09:54:17] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[09:57:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[09:59:14] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[09:59:15] *** Quits: uncleyear (~ian@31.173.80.95) (Read error: Connection reset by peer)
[09:59:48] *** Joins: uncleyear (~ian@31.173.80.95)
[10:02:20] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 252 seconds)
[10:03:14] *** Joins: michalz (~michalz@185.246.204.107)
[10:04:27] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:05:39] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[10:07:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[10:08:02] *** Quits: seabre (~seabre@user/seabre) (Remote host closed the connection)
[10:09:26] *** Joins: seabre (~seabre@user/seabre)
[10:10:08] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[10:11:11] *** Quits: uncleyear (~ian@31.173.80.95) (Remote host closed the connection)
[10:12:10] *** Joins: uncleyear (~ian@31.173.80.95)
[10:12:24] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[10:18:57] *** Joins: mrwick (~mrwick@user/mrwick)
[10:20:35] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[10:20:50] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:22:38] *** Joins: xiongxin (~Thunderbi@117.136.40.175)
[10:28:06] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[10:28:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[10:29:54] *** Joins: tozhu (~tozhu@118.115.103.117)
[10:33:03] *** Quits: tozhu (~tozhu@118.115.103.117) (Client Quit)
[10:33:23] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[10:33:35] *** Joins: tozhu (~tozhu@118.115.103.117)
[10:34:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:28] *** Quits: tozhu (~tozhu@118.115.103.117) (Client Quit)
[10:35:39] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:36:30] *** Joins: tozhu (~tozhu@118.115.103.117)
[10:36:54] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:37:52] *** Quits: xiongxin (~Thunderbi@117.136.40.175) (Ping timeout: 272 seconds)
[10:39:42] *** Joins: Klinda (~superleag@user/klinda)
[10:40:46] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[10:43:55] *** Quits: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz) (Ping timeout: 260 seconds)
[10:45:13] *** Joins: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8)
[10:45:39] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[10:46:03] *** Joins: rvalue (~rvalue@user/rvalue)
[10:46:29] *** Joins: ekathva (~ekathva@2001:999:230:5e27:83ce:bbb7:84b1:29a0)
[10:46:48] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:a8ec:646c:1d0c:a2da) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:49] *** Joins: darutoko (~darutoko@92.125.58.250)
[10:48:10] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91)
[10:48:56] *** Quits: tozhu (~tozhu@118.115.103.117) (Quit: tozhu)
[10:49:43] *** Joins: mexen (uid495612@user/mexen)
[10:52:12] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (Quit: < debdrup> What is this /quit thing?)
[10:52:31] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[10:53:25] *** Joins: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr)
[10:56:02] *** Joins: tozhu (~tozhu@118.115.103.117)
[10:57:44] *** Joins: mncheck (~mncheck@193.224.205.254)
[10:58:05] *** Quits: tozhu (~tozhu@118.115.103.117) (Client Quit)
[10:58:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:58:32] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[10:58:53] *** Joins: mrwick (~mrwick@user/mrwick)
[11:02:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[11:04:11] *** Joins: rendar (~rendar@user/rendar)
[11:07:05] *** Joins: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net)
[11:07:22] *** Joins: tozhu (~tozhu@118.115.103.117)
[11:15:18] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[11:15:33] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:15:57] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 256 seconds)
[11:24:18] *** robins is now known as robinsmidsrod
[11:25:30] *** Joins: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e)
[11:26:43] *** Quits: randir (~randir@95-31-138-202.broadband.corbina.ru) (Remote host closed the connection)
[11:28:06] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[11:29:07] *** Joins: triberio13 (~triberio1@195.53.32.158)
[11:30:43] *** Quits: tozhu (~tozhu@118.115.103.117) (Quit: tozhu)
[11:32:58] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[11:33:45] *** Joins: tozhu (~tozhu@118.115.103.117)
[11:34:56] *** Quits: waveform (~quassel@waveform.plus.com) (Read error: Connection reset by peer)
[11:38:03] *** Joins: palasso (~palasso@user/palasso)
[11:38:40] *** Quits: tozhu (~tozhu@118.115.103.117) (Quit: tozhu)
[11:39:05] *** Joins: waveform (~quassel@waveform.plus.com)
[11:39:24] *** Joins: veesh (~veesh@77.137.131.111)
[11:40:03] *** Joins: shiranaihito (~textual@219.85.165.182)
[11:40:19] *** Joins: tozhu (~tozhu@118.115.103.117)
[11:41:43] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[11:46:28] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 260 seconds)
[11:57:04] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[12:00:25] *** Joins: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c)
[12:01:18] *** Quits: veesh (~veesh@77.137.131.111) (Remote host closed the connection)
[12:01:20] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[12:02:34] *** Joins: shka (~herr@109.231.3.55)
[12:02:43] *** Joins: veesh (~veesh@77.137.131.111)
[12:03:05] *** Quits: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:03:06] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[12:07:51] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:28a1:5c46:cd0a:cd61) (Ping timeout: 256 seconds)
[12:07:52] *** Quits: veesh (~veesh@77.137.131.111) (Ping timeout: 246 seconds)
[12:09:11] *** Joins: veesh (~veesh@77.137.131.111)
[12:09:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:11:59] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[12:15:30] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[12:18:24] *** Quits: tozhu (~tozhu@118.115.103.117) (Quit: tozhu)
[12:18:43] *** Joins: tozhu (~tozhu@118.115.103.117)
[12:20:49] *** Joins: Guest7056 (~Guest70@80.78.79.215)
[12:21:17] *** Joins: vlado (~vladoski@mail-uk-out.statpro.com)
[12:22:19] <Guest7056> Hello, I am looking for some product/training to help me analyze/tune Postgresql database. Any suggestion would be welcome.
[12:22:21] <Guest7056> Thanks
[12:23:46] <peerce> where in the world are you?
[12:23:47] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[12:24:22] *** Quits: shiranaihito (~textual@219.85.165.182) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:25:36] *** Quits: tozhu (~tozhu@118.115.103.117) (Quit: tozhu)
[12:28:35] *** Quits: Guest7056 (~Guest70@80.78.79.215) (Quit: Client closed)
[12:30:10] *** Joins: zaher (~zaher@37.48.152.54)
[12:31:27] *** Joins: tozhu (~tozhu@118.115.103.117)
[12:31:53] *** Quits: tozhu (~tozhu@118.115.103.117) (Read error: Connection reset by peer)
[12:34:59] *** Joins: shiranaihito (~textual@2001-b011-4011-530e-b0e1-d545-c066-46fd.dynamic-ip6.hinet.net)
[12:36:57] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[12:37:16] *** Joins: Kyros (~kyros@user/kyros)
[12:37:44] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:45:36] *** Joins: jnnnnnnnnn (~jnnnnnnnn@65.99.151.178)
[12:45:40] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:47:47] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[12:49:53] *** Quits: AlienPenguin (~AlienPeng@46.44.210.238) (Ping timeout: 260 seconds)
[12:50:35] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 256 seconds)
[12:54:04] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 246 seconds)
[12:56:33] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[12:57:04] *** Joins: dege (~dege@user/dege)
[13:00:27] *** Quits: nepeat (~nepeat@79.110.170.59) (Quit: ZNC 1.8.2 - https://znc.in)
[13:00:46] *** Joins: jazzy (~jaziz@user/jaziz)
[13:03:03] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 256 seconds)
[13:03:23] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[13:03:25] *** Joins: AlienPenguin (~AlienPeng@46.44.210.238)
[13:04:19] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[13:05:08] *** Joins: kartikynwa (~kartik@2404:8ec0:4:c30:eb27:9f21:da8d:182a)
[13:05:47] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[13:08:02] <kartikynwa> Need some advice for debugging a plpgsql trigger. I have been able to set up pgadmin to set a breakpoint in the trigger but even after that, the process is a bit tedious because I have to create temporary variables and print their values. Is there a way to "jump" into a transaction to see what the result of some SELECT queries is?
[13:17:55] *** Joins: tozhu (~tozhu@117.139.163.129)
[13:18:15] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[13:19:37] *** Joins: nepeat (~nepeat@79.110.170.58)
[13:21:43] *** Joins: maret_ (~maret@188.212.154.112)
[13:22:53] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 256 seconds)
[13:24:16] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:3108:281:eecd:3097:6246)
[13:24:27] *** Joins: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e)
[13:24:56] *** Joins: AceSlash (~slash@2a01:e0a:432:c050:cd12:393c:3664:2a6e)
[13:25:24] *** Quits: nepeat (~nepeat@79.110.170.58) (Quit: ZNC 1.8.2 - https://znc.in)
[13:28:39] *** Quits: fcr (~fran@r167-60-91-44.dialup.adsl.anteldata.net.uy) (Ping timeout: 260 seconds)
[13:31:11] *** Joins: nepeat (~nepeat@79.110.170.58)
[13:34:05] *** Joins: fcr (~fran@r167-60-9-180.dialup.adsl.anteldata.net.uy)
[13:46:44] <kartikynwa> Nevermind a stackoverflow answer, whose link I forgot to save, said it's not possible (as of late 2021).
[13:48:43] <peerce> i dunno, best way is to instrument your code with a debug option that causes it to print all inputs and ooutputs to the stuff you wanna debug
[13:49:23] *** Quits: vlado (~vladoski@mail-uk-out.statpro.com) (Ping timeout: 260 seconds)
[13:49:25] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[13:49:34] <peerce> sometimes the old ways are the best ways.
[13:50:24] <maret_> is there speed , size or any other relevant  difference between creating an index on a column which is 64 long unique string  compared to SERIAL id column especially for  table with large amount of rows (billion+) and only 2 - 3 columns?
[13:50:55] *** Joins: randir (~randir@93.159.239.42)
[13:51:18] <Berge> maret_: serial is just a macro for an int plus a sequence and default value
[13:51:45] <Berge> So your question is what the differences are between an index over a column of a 64 character long string, and an int? (Or bigint, if you're talking several billion rows.)
[13:52:00] <maret_> yeah
[13:52:22] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[13:52:34] <peerce> the string wil be much slower if there's any fancy collation going on
[13:52:39] <Berge> maret_: How big are bigints stored on disk, and how big are text fields?
[13:52:59] <Berge> I know the answer, but I think you'll learn more if you answer those questions (-:
[13:53:11] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:53:30] <peerce> ^^ evil.   i like it.
[13:53:52] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:54:00] <Berge> Not trying to be evil (-: But learning to learn is super valuable.
[13:54:21] <Berge> maret_: So, in general, an index over larger values will be bigger on disk than an index over smaller values.
[13:55:01] <Berge> And bigger index means more IO. (A smaller index means higher probability for the index to be in RAM.)
[13:55:12] <maret_> yeah I am game, yeah I get that so I would expect for it to be slower? btw the larger value string has column has to be there one way aor another
[13:55:24] <maret_> true
[13:55:34] <Berge> Whether it'll be slower or not depends on many factors
[13:55:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[13:55:58] <Berge> Would the string values be random, or have some sort of sequence?
[13:56:27] <peerce> its pretty safe to assuume that integer or bigint btree indexes will be faster than most any text index.
[13:56:42] <Berge> well
[13:56:51] <Berge> Yes, but _meaningfully_ faster?
[13:56:56] <Berge> That depends.
[13:56:56] <peerce> a text index in POSIX of short values will be fast.
[13:56:58] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[13:57:05] <peerce> but UTF etcetc?  good luck.
[13:57:14] <maret_> Berge random
[13:57:18] <Berge> If your target is 5ms, it doesn't matter if lookups are 0.2ms or 0.3ms
[13:58:18] <Berge> maret_: Are you familiar with the problems of indexing random values?
[13:58:27] <Berge> Ie. write amplification.
[13:58:37] <Berge> https://www.2ndquadrant.com/en/blog/on-the-impact-of-full-page-writes/
[13:58:40] *** Joins: rageshkrishna (~rageshkri@122.162.198.225)
[13:58:51] <kjetilho> peerce: hmm.  can I specify a text to be POSIX while the rest of the database is localised?
[13:59:13] <Berge> maret_:  But I don't understand why these are your options. If you need to lookup data based on the string values, you'll need that index anyway
[14:00:03] <maret_> and also not sure if this is relevant  , dont have much experience  with partitioning but is there a different when partitioning large table using bigint column vs random string? Just to be more concrete -> I have a table with columns hash, count  and. hash, name,  The second table is larger one where hash repeats multiple times for different values in name, hash represents kind of group of related values
[14:00:04] <peerce> the index would need to be in that encoding.  older postgres versions did not allow any such, but newer ones are much better about mixing enocodings.
[14:00:20] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6)
[14:00:29] <peerce> we msotly used 'week' to partition
[14:00:29] *** Joins: sakasama (~sakasama@user/sakasama)
[14:00:41] <peerce> we had a pile of tables with 6 months retention
[14:00:48] <maret_> second table is for metadata related to these groups identified by hash , amongs other count which is number of rows in the other table. I am using that because i need count a LOT so wanna ,,ache it"
[14:02:23] <kartikynwa> peerce: That's what I am trying to do now.
[14:03:27] <maret_> so I will do a lot of select hash from foo where name ='xyz'; and then select count from groups_meta where hash = 'xyz'; or maybe join
[14:04:13] *** Joins: schinckel (uid38120@user/schinckel)
[14:06:34] <peerce> Usuaully you want FK references to be by primary key, not 'hash' but ok, whatever.
[14:06:44] <maret_> peerce yeah thats why I am asking, from what I saw most tutorial of not all I came across did partitioning based on  time timestap like column
[14:07:26] <maret_> and there is no cloear business requirement here which I can model my partitioning on  like doing monthly reports. It justs I hae large tabel  and from my experience simple selects can get slow
[14:08:08] <peerce> well, we did the by-week partionining to optimize the expiration of 6 month old data, its easier to drop partitions than it is to delete rows, by a LOT.
[14:09:18] <maret_> peerce  well yeah  so it should be also faster if I use big int column and also  save some space. I am more concerned about speed  than space,
[14:09:48] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[14:10:00] <maret_> we run the query above a lot  so I need to be as fast as reasonably possible and my sense is that using bigint instead of hash is low hanging fruit
[14:10:41] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[14:16:39] *** Joins: vnf (~vnf@46.159.151.228)
[14:16:49] *** Quits: maret_ (~maret@188.212.154.112) (Quit: maret_)
[14:21:13] *** Quits: dre (~dre@2001:8003:c932:c301:55ad:378d:2c99:f745) (Quit: Leaving)
[14:24:36] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:3108:281:eecd:3097:6246) (Ping timeout: 240 seconds)
[14:29:02] *** Quits: realies (~realies@user/realies) (Ping timeout: 272 seconds)
[14:30:01] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:30:12] <heftig> i need to change the ctype+collate of a cluster from en_US.UTF-8 to C
[14:30:30] <heftig> i know i need to reinitialize it, but won't the dump also restore the databases' locale settings, overriding the new ones?
[14:30:30] <Myon> dump-restore
[14:30:33] <Myon> but... why?
[14:31:03] <Myon> you'll lose any UTF-8 validation on that cluster
[14:32:54] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6)
[14:33:36] <depesz> yeah. switching db to C is kinda like killing your kid because it requested a muffin. sure it solves your immediate problem, but perhaps there is a better way?
[14:35:02] <heftig> the app i'm running (synapse) has already warned about this for a while and will refuse to start with non-C locale with the next version
[14:35:44] <heftig> they say C is necessary because the other collations are all unsafe and will break when libc or icu gets updated
[14:36:38] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[14:38:22] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 260 seconds)
[14:40:25] <heftig> do be clear, the encoding will remain at UTF8
[14:40:34] <heftig> *to
[14:42:51] <heftig> anyway, do i need to edit the dump to change the locale setting before restoring it?
[14:42:54] <kjetilho> I run bareos - it requires C since it stores filenames as octet strings - in texts.
[14:43:25] <depesz> kjetilho: this is clear example of broken schema. if it's octet strings, it should be using bytea, not text.
[14:43:29] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[14:43:36] <kjetilho> yeah, but bytea are not as user friendly!
[14:43:41] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 256 seconds)
[14:43:58] <depesz> as for heftig case - well, while there was recently problem with locale in libc, throwint db under the bus because of it doesn't seem like sane choice.
[14:44:28] <depesz> heftig: if you'll put utf8 data in c-based db, fine, but DB will not be able to verify that you do indeed have inside utf-8 data. it will gladly accept anything.
[14:44:41] <heftig> even with encoding at UTF8?
[14:44:47] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 260 seconds)
[14:45:03] <kjetilho> heftig: are you sure C.utf8 locale is supported?
[14:45:04] <depesz> heftig: try on sample db
[14:45:24] *** Joins: nyov (~nyov@user/nyov)
[14:45:32] <heftig> kjetilho: no, it's not. I want encoding=utf8 collate=C ctype=C
[14:46:14] *** Joins: uncleyear (~ian@31.173.80.95)
[14:47:26] <depesz> create database testx with template template0 encoding=utf8 lc_collate=C lc_ctype=C; -> this breaks with "ERROR:  invalid locale name: "c"\
[14:48:49] <depesz> this makes me wonder how will pg work with "order by" in such situation. this is gonna create "interesting" orders
[14:49:56] *** Quits: rageshkrishna (~rageshkri@122.162.198.225) (Ping timeout: 272 seconds)
[14:50:22] <heftig> depesz: you need to quote it `'C'`
[14:51:26] <kjetilho> sounds like a contradiction to me.
[14:52:22] *** Quits: kartikynwa (~kartik@2404:8ec0:4:c30:eb27:9f21:da8d:182a) (Ping timeout: 260 seconds)
[14:53:17] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:53:30] <depesz> heftig: anyway - if you want. go for it. no idea what "synapse" is, but tbh, I would treat it as bug in the software, to require "c" for database.
[14:59:37] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:2455:a2f0:99fd:7a91) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:59:43] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[15:00:47] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[15:01:39] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[15:04:16] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.76) (Ping timeout: 246 seconds)
[15:04:55] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[15:04:55] *** Joins: iliv (~iliv@user/iliv)
[15:05:56] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[15:07:15] *** Joins: rageshkrishna (~rageshkri@122.162.198.225)
[15:07:17] *** Joins: antaresgades (~antaresga@ieocadiz.cd.ieo.es)
[15:08:41] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:09:47] *** furrymcg1e is now known as furrymcgee
[15:12:29] *** Quits: Rashad (~textual@2a01:9700:1290:7400:e81f:a23b:9d68:335e) (Read error: Connection reset by peer)
[15:12:45] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6)
[15:12:51] *** Joins: realies (~realies@user/realies)
[15:14:04] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 246 seconds)
[15:14:13] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:20:10] *** Quits: aditsu (~aditsu@pcd605164.netvigator.com) (Remote host closed the connection)
[15:20:34] *** Joins: aditsu (~aditsu@pcd605164.netvigator.com)
[15:22:57] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f)
[15:23:12] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[15:25:20] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c562:b79c:738d:725f) (Client Quit)
[15:26:33] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[15:28:06] *** Joins: janos (~janos@fedora/janos)
[15:29:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[15:31:44] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 272 seconds)
[15:35:56] <AceSlash> hello, I'm trying to debug a slow down on a cluster and I would like to know the average statement duration for the last minute for instance, any extension or way to get that easily?
[15:37:03] *** Quits: rageshkrishna (~rageshkri@122.162.198.225) (Remote host closed the connection)
[15:37:26] *** Joins: rageshkrishna (~rageshkri@122.162.198.225)
[15:38:35] *** Joins: Klinda (~superleag@user/klinda)
[15:38:52] *** Joins: n0fun (~jack@mue-88-130-48-035.dsl.tropolys.de)
[15:45:17] *** Joins: xiongxin (~Thunderbi@117.136.40.175)
[15:45:48] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:4df:bfcf:ac49:3089:d900)
[15:49:39] *** Quits: xiongxin (~Thunderbi@117.136.40.175) (Read error: Connection reset by peer)
[15:50:19] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:4df:bfcf:ac49:3089:d900) (Ping timeout: 250 seconds)
[15:51:19] *** Quits: janos (~janos@fedora/janos) (Quit: updates!)
[15:53:49] *** Joins: MrZeus__ (~MrZeus@86.106.136.215)
[15:55:57] *** Quits: carwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:56:14] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[15:57:57] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:134a:aa8c:6c91:412d:d4e6)
[16:01:23] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[16:01:42] *** Joins: jmarsac (~jmarsac@195.25.246.177)
[16:02:57] <depesz> AceSlash: pg_Stat_statements, kinda.
[16:04:08] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[16:05:35] *** Quits: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8) (Read error: Connection reset by peer)
[16:05:41] *** Joins: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8)
[16:07:17] *** Joins: Guest59 (~Guest59@2a02:c7f:d4e7:a500:a8b5:3c5f:8f98:f0aa)
[16:07:40] <depesz> question: case: 60k+ tables. each with pkey, based on integer. I'm upgrading it from pg12 to pg14 using logical replication. afterwards, before switching traffic to pg14, i want to be *as sure as possible* that data has been completely replicated. the problem is that if I check with traffic, data changes live. if I stop traffic, I can take "snapshot", but downtime is not good. generally - i can get at most 1 hour of downtime.
[16:07:44] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:08:23] <depesz> with databases like 60k+ tables, and  2TB in size, it's hard to be sure. so what I do is: take random sample of tables, and for each of these tables, i get oldest and newst 1k records, calculate md5 of it, and compare.
[16:08:39] *** Quits: Guest59 (~Guest59@2a02:c7f:d4e7:a500:a8b5:3c5f:8f98:f0aa) (Client Quit)
[16:08:40] <depesz> works *reasonably* well. but perhaps there is a better way? another tool/algorithm/thing?
[16:09:06] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:09:42] <Myon> you could throw TABLESAMPLE on both sides, and see if you can fetch the same row from the other side
[16:10:05] <depesz> would tablesample return the same rows?
[16:10:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:10:20] <depesz> isn't the idea behind tablesample that it returns random-ish rows?
[16:10:23] <Myon> I mean select by id on the other side
[16:10:52] <Myon> but run the check both ways, so you'd also catch rows that are surplus, not only missing ones
[16:10:59] <depesz> ah. interesting idea.
[16:11:10] <depesz> requires certain ordering of process, which can be tricky.
[16:11:32] <depesz> as in: i have to do it first on one side, then fetch list of ids, and redo on 2nd side.
[16:11:56] <Myon> or do it live when connected to both dbs
[16:12:01] <depesz> i was thinking about solution that I can run in parallel on both sides, get output, and compare without any sequentialism
[16:12:08] *** Quits: aditsu (~aditsu@pcd605164.netvigator.com) (Quit: Leaving)
[16:12:20] <depesz> aside from final compare.
[16:12:28] <depesz> but the compare is basically checking to md5 values.
[16:12:39] <depesz> two
[16:12:48] <Myon> the advantage would be that you can let it run for an arbitrary amount of time, and it will check whatever it can do in that time
[16:13:10] <depesz> yeah.
[16:13:11] <Myon> sequentializing might be more efficient, though
[16:13:57] *** Quits: jmarsac (~jmarsac@195.25.246.177) (Read error: Connection reset by peer)
[16:14:20] <depesz> i was thiking about something kinda similar, but able to work without interlocking: since I can get ranges of ids in the beginning, i can pick random samples in the range, and do the asc-1000/desc 1000 from some random ids, and compare these too
[16:15:08] <selckin> clueless learner here that just read the docs, but can't you compare the WAL on both sides and be sure its cought up?
[16:15:10] <depesz> random ids can be generated before the process happens
[16:15:21] <depesz> selckin: it's logical replication, no wal based.
[16:15:48] *** Joins: jmarsac (~jmarsac@195.25.246.177)
[16:15:52] <Myon> selckin: the WAL will have a lot of diff in xid, lsn, ctid
[16:16:00] <Berge> depesz: These aren't just append-only tables, right?
[16:16:04] <Berge> All sorts of operations can happen?
[16:18:17] <depesz> Berge: yes.
[16:18:27] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[16:18:34] <johto> pause logical replication, take a dump, then restore a physical replica up to that LSN, and compare?
[16:18:39] <depesz> hahahahahah
[16:18:42] <depesz> very funny.
[16:18:54] <depesz> johto: rememeber the requirement of not having more than 1 hour of downtime?
[16:19:00] <Berge> depesz: How much of your hour of downtime do you ideally want to spend comparing?
[16:19:12] <depesz> i have to run the validation while we are in 1 hour downtime for the switchover procedure.
[16:19:25] <depesz> Berge: i can spend all of it in the compare.
[16:19:26] <Berge> I presume there's decent connectivity between the old and new host
[16:19:39] <depesz> we start upgrade like 2 weeks earlier. setup logrep, let it catchup. make sure it works.
[16:20:00] <johto> you want to check right before you switch?
[16:20:04] <depesz> then at magical time we do switchover, which is: stop app, verify that we are ok, switch dns, start app.
[16:20:12] <depesz> johto: yes. of course.
[16:20:33] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Client Quit)
[16:20:33] <depesz> if the verifitcation will say: NO - then we abort the process, next window to upgrade is in another 2 weeks.
[16:20:49] <depesz> and I have to automate it because we have like 400 separate clusters to upgrade.
[16:21:04] <Berge> With tens of thousands of tables each?
[16:21:20] <Berge> Interesting and fun stuff (-:
[16:21:29] <depesz> some less (i think the smaller in terms of # of tables is like 400 tables). but some MUCH larger.
[16:21:34] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:21:43] <depesz> the 60k table is my sample db for tests, picked because it's reasonably small in terms of data size.
[16:22:00] <depesz> just some 40G
[16:22:19] <Berge> right, which is well within compare-everything-range. But 2TB isn't.
[16:22:54] <Berge> I like the TABLESAMPLE approach Myon suggested
[16:23:24] <depesz> I do like it, with the exception that it requires doing things in specific order between the servers.
[16:23:25] <Berge> Especially written so that you just start it and let it run forever, or until inconsistencies are found
[16:25:06] <depesz> checking the ranges of sizes ....
[16:26:43] *** Joins: janos (~janos@fedora/janos)
[16:26:55] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[16:27:15] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[16:28:39] <depesz> ok. so i have for 75 to 305125 tables, and sizes are from 8.5MB (with 479 tables) to 5.5TB (with 980 tables).
[16:29:34] <selckin> so not running the same software either, else running the compare everything on the smaller ones could give confidence the process works, but each could be using a niche feature that has a suprise you're trying to detect?
[16:30:05] <depesz> same software everywhere.
[16:31:32] *** Quits: AlienPenguin (~AlienPeng@46.44.210.238) (Ping timeout: 260 seconds)
[16:32:23] <depesz> i think i'll use the tablesample, but instead of getting sample from one db, and compare it later with the other, i'll just generate random list of ids, and knowing this list, will be able to check both sides at the same time.
[16:32:44] <depesz> less synchronization needed.
[16:35:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[16:35:38] *** Joins: tozhu (~tozhu@117.139.163.129)
[16:36:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.76)
[16:36:49] *** Quits: jmarsac (~jmarsac@195.25.246.177) (Quit: Leaving)
[16:37:52] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:39:07] *** Quits: mthall (~quassel@mail.thalliman.com) (Ping timeout: 246 seconds)
[16:39:48] *** Joins: mthall (~quassel@mail.thalliman.com)
[16:43:52] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[16:44:45] *** Joins: AlienPenguin (~AlienPeng@46.44.210.238)
[16:44:57] *** Quits: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net) (Ping timeout: 240 seconds)
[16:45:04] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[16:45:34] *** Joins: MrZeus_ (~MrZeus@81.92.205.23)
[16:46:43] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:134a:aa8c:6c91:412d:d4e6) (Ping timeout: 260 seconds)
[16:48:13] *** Joins: janos (~janos@fedora/janos)
[16:48:28] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[16:48:34] *** Quits: MrZeus__ (~MrZeus@86.106.136.215) (Ping timeout: 246 seconds)
[16:49:23] *** Joins: MrZeus (~MrZeus@185.206.227.135)
[16:50:25] *** Joins: MrZeus__ (~MrZeus@81.92.206.10)
[16:51:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[16:51:43] *** Quits: MrZeus_ (~MrZeus@81.92.205.23) (Ping timeout: 246 seconds)
[16:53:07] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:54:18] *** Quits: MrZeus (~MrZeus@185.206.227.135) (Ping timeout: 260 seconds)
[16:56:09] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[16:57:27] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:2fae:e7bf:4539:f0df:f823)
[16:58:02] *** Joins: TomTom (uid45892@id-45892.ilkley.irccloud.com)
[16:59:32] *** Joins: MrZeus_ (~MrZeus@89.238.143.231)
[17:00:34] *** Joins: exempt (uid500827@id-500827.ilkley.irccloud.com)
[17:03:03] *** Quits: MrZeus__ (~MrZeus@81.92.206.10) (Ping timeout: 260 seconds)
[17:03:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Quit: Leaving...)
[17:03:39] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[17:03:47] *** Joins: Atque (~Atque@user/atque)
[17:04:05] *** Joins: MrZeus__ (~MrZeus@194.37.96.103)
[17:04:44] <dim> depesz: londiste / skytools includes a checksum based comparison tooling that you might like, it's both simple enough to extract from their code base IIRC, and implemented in a smart way
[17:07:31] *** Quits: MrZeus_ (~MrZeus@89.238.143.231) (Ping timeout: 260 seconds)
[17:09:24] *** Quits: MrZeus__ (~MrZeus@194.37.96.103) (Ping timeout: 260 seconds)
[17:12:02] *** Joins: xiongxin1 (~Thunderbi@117.136.40.190)
[17:12:11] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[17:15:18] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:2fae:e7bf:4539:f0df:f823) (Ping timeout: 260 seconds)
[17:15:18] *** xiongxin1 is now known as xiongxin
[17:19:44] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[17:22:41] *** Joins: tozhu (~tozhu@117.139.163.129)
[17:23:17] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[17:23:26] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 252 seconds)
[17:27:07] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[17:28:16] *** Quits: rageshkrishna (~rageshkri@122.162.198.225) (Ping timeout: 272 seconds)
[17:28:25] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[17:28:26] <depesz> oooh. interesting ... searching
[17:28:31] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:170d:f1be:16dc:459f:3aa5)
[17:29:17] *** Joins: rvalue (~rvalue@user/rvalue)
[17:29:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:30:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:25] *** Quits: xiongxin (~Thunderbi@117.136.40.190) (Ping timeout: 250 seconds)
[17:30:26] *** xiongxin1 is now known as xiongxin
[17:31:02] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:34:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:35:46] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 245 seconds)
[17:40:19] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:40:49] *** Joins: mattil_ (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi)
[17:40:58] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[17:41:07] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[17:43:27] *** Joins: dionysus69 (~Thunderbi@185.115.4.181)
[17:44:15] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[17:45:03] *** Quits: mattil_ (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:45:08] *** Joins: randir (~randir@93.159.239.42)
[17:45:10] *** Quits: pg_docbot (~docbot_li@donatu.postgresql.org) (Quit: Signal received: INT - shutting down)
[17:45:16] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 246 seconds)
[17:45:22] *** Quits: xinming (~xinming@115.219.38.26) (Ping timeout: 272 seconds)
[17:45:29] *** Joins: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi)
[17:45:54] *** Quits: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:46:02] *** Joins: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi)
[17:46:11] *** Quits: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:46:28] <AceSlash> depesz: I ended up doing this but it is of course very inexact since it only gets the statement that are currently running: "select EXTRACT(EPOCH FROM avg(now() - xact_start)) from pg_stat_activity where state = 'active'"
[17:46:38] *** Joins: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi)
[17:47:11] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6)
[17:48:13] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:48:28] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[17:49:34] *** Quits: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:49:53] *** Joins: pg_docbot (~docbot_li@donatu.postgresql.org)
[17:50:36] *** Joins: tradar (~tradar@user/tradar)
[17:50:51] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[17:54:13] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[17:55:14] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Ping timeout: 260 seconds)
[17:56:07] *** Joins: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[17:56:14] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:58:01] *** Joins: xinming (~xinming@115.219.34.204)
[17:58:48] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[18:02:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:02:37] *** Quits: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8) (Read error: Connection reset by peer)
[18:03:22] *** Joins: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8)
[18:05:01] *** Joins: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi)
[18:05:16] <depesz> another question - how can I get last element from "anyarray"? even to form of text.
[18:05:36] <depesz> I tried: select anyarray_column::text[] ..., but I'm getting: "ERROR:  cannot cast type anyarray to text[]"
[18:05:39] *** Joins: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com)
[18:06:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:06:31] *** Quits: cahoots (~cahoots@cpe-24-193-233-195.nyc.res.rr.com) (Client Quit)
[18:07:22] *** Joins: ba|ch (~user@p200300f3a7089cb991186e5ba332542a.dip0.t-ipconnect.de)
[18:07:32] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[18:09:42] *** Quits: mattil (~mattil@dy6n2d-lk8z37wpjlzw-t-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[18:11:03] *** Joins: janos (~janos@fedora/janos)
[18:11:09] *** Quits: dege (~dege@user/dege) (Quit: Textual IRC Client: www.textualapp.com)
[18:12:08] <ilmari> anyarray is a pseudotype for polymorphic function arguments, how did you manage to get a column with that?
[18:12:44] *** Joins: mamad (~mam@5.123.152.3)
[18:15:04] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:88a0:fb04:2d2:c434)
[18:15:33] *** Joins: maret (~maret@188.212.154.114)
[18:16:43] <depesz> ilmari: select from pg_statistics
[18:16:43] <nickb> one could update pg_attribute, for example
[18:17:00] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:17:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:18:48] <strk> I've updated pg_attribute today and ended up with a corrupted database
[18:19:03] <strk> COPY mytable TO stdout ; --> max alloc size ...
[18:19:25] <strk> the update I performed was aimed at changing attribute order
[18:19:39] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:19:43] <nickb> I don't think that'd ever work..
[18:19:58] <nickb> maybe on an empty table..
[18:19:59] <ilmari> that's not going to work, since they're stored physically in attnum order in the tuple
[18:20:03] <strk> set attnum = 40 where attname = 'a'; set attnum = 4 where attname = 'b'; set attnum = 3 where attname = 'a';
[18:20:21] <strk> ilmari: is there any syntax to do that kind of attribute order swap ?
[18:20:23] <ilmari> so it would be interpreting completely bogus data from disk as that type
[18:20:24] <nickb> yeah that's not how it works
[18:20:26] <Myon> you'd have to NULL all the columns first, unless they are the same datatype
[18:20:26] <ilmari> strk: no
[18:20:40] <strk> ok, so create new table, rename old, rename new
[18:20:41] <Myon> it's called "create table"
[18:20:53] <strk> and go relink all triggers and friends
[18:20:58] <ilmari> if there were, it would be in the ALTER TABLE documentation
[18:20:58] <nickb> why would you want to change order? Win some space on the alignment overhead?
[18:21:18] <strk> nah, I accidentally broke backward compatibility of postgis topologies by reordering fields
[18:21:20] <ilmari> if you just want to change the display order in select * , create a view
[18:21:30] <strk> it was a dev version, but ended up in a production server
[18:22:21] <strk> so db1> copy table to file; db2> copy table from file; -- is broken, due to db1> column order being broken
[18:22:47] <strk> I was trying to find an easy fix for db1, basically
[18:22:53] <nickb> just don't ever use copy without full column list
[18:23:07] <strk> yeah, that's what I ended up doing
[18:23:23] <strk> https://gitlab.com/postgis/postgis/-/merge_requests/74/diffs?commit_id=50c95e005ccede6f1483ca3eda48d80e8052da56
[18:23:59] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[18:31:07] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 260 seconds)
[18:31:09] *** Quits: antaresgades (~antaresga@ieocadiz.cd.ieo.es) (Quit: Client closed)
[18:31:55] *** Quits: mamad (~mam@5.123.152.3) (Quit: Konversation terminated!)
[18:32:05] *** Joins: iliv (~iliv@93.77.147.152)
[18:32:05] *** Quits: iliv (~iliv@93.77.147.152) (Changing host)
[18:32:05] *** Joins: iliv (~iliv@user/iliv)
[18:32:14] *** Joins: mamad (~mam@5.123.152.3)
[18:33:15] *** Quits: mamad (~mam@5.123.152.3) (Client Quit)
[18:33:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:33:29] *** Joins: mamad (~mam@5.123.152.3)
[18:34:03] *** Joins: mattil_ (~mattil@87-92-20-81.bb.dnainternet.fi)
[18:34:46] *** Quits: xinming (~xinming@115.219.34.204) (Ping timeout: 272 seconds)
[18:35:15] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[18:37:09] *** Quits: ba|ch (~user@p200300f3a7089cb991186e5ba332542a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:38:49] *** Quits: mattil_ (~mattil@87-92-20-81.bb.dnainternet.fi) (Ping timeout: 246 seconds)
[18:41:10] <strk> is it expected that gzip -9 can turn a -Fc dump file from 7.5K to 1.7K ? I read the "custom format" dump is already compressed ?
[18:41:25] *** Joins: xinming (~xinming@115.219.39.250)
[18:41:34] <strk> even w/out -9 gzip brings it down to 1.7k
[18:41:51] <strk> layers.dump: PostgreSQL custom database dump - v1.14-0
[18:42:15] *** Joins: nillyhan (~7f000001@user/nillyhan)
[18:42:28] <strk> 7680 layers.dump  vs. 1672 layers.dump.gz
[18:46:52] <Myon> strk: if you open a .dump file with "less", you'll see that the DDL parts are not compressed
[18:47:20] <Myon> but that size should be O(1) compared to the actual data
[18:47:57] <Myon> hopefully these extra 6kB won't kill you :)
[18:49:29] *** Quits: RangerRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:49:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:50:45] *** Quits: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8) (Ping timeout: 256 seconds)
[18:51:34] *** Joins: vnf_ (~vnf@46.159.151.228)
[18:51:48] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[18:51:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:52:22] *** Joins: RangerRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net)
[18:55:47] *** Quits: vnf (~vnf@46.159.151.228) (Ping timeout: 260 seconds)
[18:56:50] *** Quits: peb (~PEB@debian/peb) (Quit: time to move to the other box)
[18:56:50] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:170d:f1be:16dc:459f:3aa5) (Ping timeout: 260 seconds)
[18:57:00] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[18:58:02] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[18:58:38] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:01:40] *** Joins: peb (~PEB@debian/peb)
[19:03:50] *** Joins: janos (~janos@fedora/janos)
[19:05:45] *** Joins: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net)
[19:06:00] *** Joins: MrZeus (~MrZeus@185.206.227.135)
[19:06:30] *** Parts: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr) ()
[19:06:52] *** Joins: Atque (~Atque@user/atque)
[19:07:04] *** Quits: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[19:07:18] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 260 seconds)
[19:08:08] *** Joins: Guest75 (~textual@ip184-181-47-47.no.no.cox.net)
[19:10:18] *** Quits: exempt (uid500827@id-500827.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:10:51] <strk> of course not, I was just wondering
[19:11:00] *** Joins: Optimus (~risto@87.227.227.147)
[19:11:07] <strk> as I'm writing a topology exporter script that uses the .dump format internally
[19:11:11] <strk> and then compresses everything again
[19:11:28] <strk> would the directory format also keep files in compressed form ?
[19:12:00] <Myon> yes, *.gz
[19:13:18] *** Joins: rageshkrishna (~rageshkri@124.40.245.74)
[19:14:08] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[19:14:30] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:15:20] *** Joins: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it)
[19:15:46] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:16:31] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Client Quit)
[19:16:59] *** Quits: Wanderer (~wanderer@user/wanderer) (Quit: goodbye)
[19:16:59] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[19:16:59] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[19:17:58] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:24:01] *** Quits: rageshkrishna (~rageshkri@124.40.245.74) (Quit: ZNC 1.8.2 - https://znc.in)
[19:24:15] *** Joins: rageshkrishna (~rageshkri@124.40.245.74)
[19:24:17] *** Joins: Wanderer (~wanderer@user/wanderer)
[19:25:43] *** Quits: vladoski (~vladoski@host-79-44-230-48.retail.telecomitalia.it) (Ping timeout: 246 seconds)
[19:25:48] *** Parts: rageshkrishna (~rageshkri@124.40.245.74) ()
[19:25:56] *** Joins: rageshkrishna (~rageshkri@124.40.245.74)
[19:26:04] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[19:27:19] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:27:59] *** Joins: eldritch (~eldritch@user/eldritch)
[19:28:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:28:56] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[19:29:04] *** Joins: glider (~glider@user/glider)
[19:29:52] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 272 seconds)
[19:33:04] *** Quits: mamad (~mam@5.123.152.3) (Ping timeout: 246 seconds)
[19:33:29] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[19:36:33] *** Joins: stark__ (~stark@192.222.248.88)
[19:41:59] *** Quits: treefrob (~treefrob@p2e542993.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:46:22] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[19:46:53] *** Joins: randir (~randir@93.159.239.42)
[19:48:53] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:50:50] *** Quits: maret (~maret@188.212.154.114) (Ping timeout: 252 seconds)
[19:51:08] *** Joins: mizi_ (~mizi@user/mizi)
[19:51:23] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 252 seconds)
[19:52:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:53:15] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[19:54:36] *** Joins: treefrob (~treefrob@p2e542c0f.dip0.t-ipconnect.de)
[19:54:45] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:00:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:37] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[20:02:10] *** Quits: x5c30 (~x5c30@user/x5c30) (Ping timeout: 272 seconds)
[20:02:31] *** Joins: eric (~user@45.91.144.178)
[20:02:34] <eric> Hello
[20:03:16] *** Joins: TML (~tml@user/tml)
[20:03:23] <eric> i have to loop over the results of : regexp_matches(_fmla, E'[A-Z][a-z]*[0-9]*', 'g')
[20:03:39] <eric> FOREACH _m IN ARRAY regexp_matches(_fmla, E'[A-Z][a-z]*[0-9]*', 'g') do not seems to be correct
[20:04:18] *** Joins: randir (~randir@95-31-138-202.broadband.corbina.ru)
[20:04:29] <eric> error is "returned more than one row" ...
[20:04:53] <TML> I have a known password and the value from pg_authid.rolpassword of the format 'md5…' - for forensic reasons, I need to verify that rolpassword against the known password, but the obvious md5 hash doesn't match. Anyone know how pgsql hashes this stuff?
[20:05:34] *** Joins: zaher_ (~zaher@37.48.154.70)
[20:06:34] *** Quits: randir (~randir@95-31-138-202.broadband.corbina.ru) (Remote host closed the connection)
[20:06:46] *** Joins: randir (~randir@95-31-138-202.broadband.corbina.ru)
[20:07:43] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[20:08:07] *** Quits: zaher (~zaher@37.48.152.54) (Ping timeout: 260 seconds)
[20:13:20] *** Joins: x5c30 (~x5c30@user/x5c30)
[20:13:33] <ilmari_> TML: it's documented in https://www.postgresql.org/docs/current/catalog-pg-authid.html
[20:13:53] <TML> ilmari_: Wonderful, thank you!
[20:13:57] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[20:14:01] <TML> My google-fu was failing to turn that page up
[20:14:20] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:3e71:b326:79d0:315b)
[20:14:20] <TML> but I 100% see the doc now - thanks again
[20:15:07] *** zaher_ is now known as zaher
[20:16:07] <TML> and now I can confirm that in fact, the consultant is lying about the password :)
[20:18:58] <Myon> eric: regexp_matches returns one row per match, you need "for ... in select regexp_matches"
[20:19:07] <Myon> (TIL foreach ... in array)
[20:21:13] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[20:21:52] <eric> Myon: many thanks, it works ! :)
[20:23:00] <eric> in fact my error is that i was seeing the result of regexp_matches as an array...
[20:23:15] <Myon> each row is still an array
[20:23:20] <Myon> [✘] it's complicated
[20:25:24] *** Joins: janos (~janos@fedora/janos)
[20:29:27] *** Joins: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f)
[20:30:09] *** Quits: dionysus69 (~Thunderbi@185.115.4.181) (Ping timeout: 256 seconds)
[20:30:23] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[20:31:14] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[20:32:05] *** Parts: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c) ()
[20:32:21] *** Quits: Guest48_ (~textual@2001:ee0:4081:6914:adb5:7f11:b4c7:5e8f) (Client Quit)
[20:33:15] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[20:35:22] *** Quits: shiranaihito (~textual@2001-b011-4011-530e-b0e1-d545-c066-46fd.dynamic-ip6.hinet.net) (Ping timeout: 260 seconds)
[20:35:54] <TML> ilmari_: thanks again
[20:35:56] *** Parts: TML (~tml@user/tml) (WeeChat 3.3)
[20:36:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:39:46] <strk> is there a way to tell how many rows have been updated from EXPLAIN ANALYZE of an UPDATE with no RETURNING ?
[20:39:53] <strk>           Buffers: shared hit=796901 dirtied=266 written=170
[20:39:58] <strk> ^^^ anything from there ?
[20:40:11] <Snow-Man> those are pages, not rows
[20:40:13] *** Joins: coinbird (~coinbird@ip-130-180-018-054.um40.pools.vodafone-ip.de)
[20:40:37] <strk> 170 pages ?
[20:41:00] <Snow-Man> ... were written out, 266 were dirtied
[20:41:16] <ilmari> strk: the (actual … rows=X) value on the topmost child node of the Update node
[20:43:50] <strk> it's 0 unless I do RETURNING
[20:44:10] <ilmari> strk: no, the node _below_ the Update
[20:44:27] <ilmari> i.e. the Index Scan with rows=15 in https://explain.depesz.com/s/LizvA
[20:44:43] <strk> ah, yes, the index scan
[20:44:53] <strk> so these are 3969 rows
[20:46:14] <strk> half a second to update those many rows
[20:47:26] *** Joins: mattil (~mattil@helsinki.portalify.com)
[20:48:40] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 246 seconds)
[20:50:50] *** Joins: uncleyear (~ian@31.173.80.95)
[20:55:14] *** Joins: rom16384 (~Adium@bl18-251-205.dsl.telepac.pt)
[21:05:54] <ilmari> find and update. you can see from my example it took 9.5ms total, of which 3.2ms was finding the rows and 6.3ms was actually updating them
[21:06:12] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[21:08:32] <strk> in my case find is trascurable: https://explain.depesz.com/s/9zmky
[21:08:38] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 260 seconds)
[21:08:52] *** Quits: dfg (dfg@user/dfg) (Quit: I hate quit messages.)
[21:08:54] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[21:09:56] *** Quits: odnes_ (~odnes@5-203-245-187.pat.nym.cosmote.net) (Ping timeout: 272 seconds)
[21:10:11] *** Joins: dfg (~dfg@dfg.rocks)
[21:10:11] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[21:10:11] *** Joins: dfg (~dfg@user/dfg)
[21:10:16] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[21:10:18] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:213d:84ff:7913:27a6) (Ping timeout: 260 seconds)
[21:10:55] <strk> I'm afraid that edge_table is too large
[21:11:10] <strk> I was thinking separating geometry column from the rest of the columns might help speeding things up
[21:12:13] <ilmari> if the geometry column is toasted it won't be written if it's not updated
[21:12:19] *** Quits: carragom (~textual@201.204.94.76) (Read error: Connection reset by peer)
[21:12:49] <strk> but the whole tuple would still need to be written
[21:12:54] <strk> and is going to be larger, no ?
[21:13:16] <strk> for keeping the old tuple visible to other transactions
[21:15:16] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Remote host closed the connection)
[21:15:47] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[21:17:28] <ilmari> yes, but if you didn't update the toasted column, the new version just has the same toast chunk oid as the old ne
[21:20:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[21:20:55] *** Joins: econo (uid147250@user/econo)
[21:26:06] *** Joins: funhouse (~funhouse@user/funhouse)
[21:26:12] *** Joins: ivii (~ivan@user/ivii)
[21:28:35] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[21:29:58] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[21:32:01] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[21:35:27] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:39:48] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[21:42:07] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 256 seconds)
[21:44:02] *** Quits: dfee (~dfee@ew4-143.ewnet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:44:25] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:46:32] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[21:49:33] *** Joins: Optimus (~risto@87.227.227.147)
[21:51:15] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[21:54:05] *** Joins: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com)
[21:58:40] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 246 seconds)
[21:59:44] *** Joins: magla (~gelignite@55d42a76.access.ecotel.net)
[22:03:43] <adlaistevenson> Hi.
[22:17:35] *** Parts: rom16384 (~Adium@bl18-251-205.dsl.telepac.pt) ()
[22:22:00] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:38:36] *** Quits: Komzzpa (~kom@212.58.119.213) (Ping timeout: 272 seconds)
[22:40:50] *** Joins: triberio13 (~triberio1@195.53.32.158)
[22:46:13] *** Joins: EvanCarroll (~ecarroll@4.78.9.73)
[22:58:13] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:59:30] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 272 seconds)
[23:01:20] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[23:08:15] <adlaistevenson> I need to update a column on a table with 44 million rows. This is taking awhile. Is there any way to speed it up? UPDATE columnName = 'text';
[23:09:10] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[23:11:55] <Zr40> is it a new column?
[23:15:02] *** Joins: dfee (~dfee@ew4-143.ewnet.net)
[23:25:19] <adlaistevenson> yeah
[23:25:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[23:27:02] <peerce> that UPDATE has to write every tuple, and update every index for each new tuple
[23:27:23] <Zr40> if you're on a somewhat recent major version, you can set a default value when adding the column, which avoids the rewrite
[23:29:13] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[23:29:23] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[23:29:36] *** Joins: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net)
[23:30:29] <adlaistevenson> Ah okay, that could work then for my first column update as it is the same value in all the rows. I then need to do another update that is different based on another table though.
[23:30:45] <csd> I have a JSONB column that contains an array of objects O and I want to index one of the fields in O. How can I do this? It seems like creation the index on `columnName -> 'O'` is not the right way
[23:31:01] <adlaistevenson> Is it more efficient to create the index after the UPDATE is the index is only on columns in the UPDATE?
[23:31:20] <csd> `columnName -> 'field` is not the right way, rather
[23:31:47] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[23:32:33] <peerce> adlaistevenson; when each tuple (row) is rewritten odds are it lands in a new block, so *all* indexes to that row have to be updated
[23:32:39] <peerce> not just the new column
[23:33:28] <adlaistevenson> Ah that makes sense. Perhaps I should just create the new index first then as it has to update indexes anyway?
[23:35:43] <adlaistevenson> Nvm, I'm going to do that anyway. Thank you peerce & Zr40.
[23:37:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:41:01] *** Quits: darutoko (~darutoko@92.125.58.250) (Quit: Leaving)
[23:42:35] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[23:43:54] *** Joins: mamad (~mam@5.123.103.228)
[23:44:54] *** Quits: ekathva (~ekathva@2001:999:230:5e27:83ce:bbb7:84b1:29a0) (Remote host closed the connection)
[23:54:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:54:37] <Myon> alter table foo alter column bar type text using 'text'; might be faster
[23:56:08] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:3e71:b326:79d0:315b) (Ping timeout: 252 seconds)
[23:57:31] *** Quits: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net) (Quit: Client closed)
[23:58:11] *** Quits: nillyhan (~7f000001@user/nillyhan) (Ping timeout: 260 seconds)
