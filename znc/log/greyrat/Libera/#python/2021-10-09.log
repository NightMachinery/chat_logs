[00:01:11] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:02:03] *** Quits: shiriru (~shiriru@user/shiriru) (Quit: Leaving)
[00:03:53] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:2196:8498:72ff:bf8e) (Quit: Client closed)
[00:04:05] <aphysically> well with that stub function and class moved I get to mypyc's compilation stage now, but it throws a ton of errors. I still have a number of other class syntax namedtuples so maybe related
[00:04:31] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[00:05:28] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:50da:5207:5652:613a)
[00:06:40] *** Joins: qlixed (~qlixed@191.83.171.132)
[00:07:11] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:d98d:defc:b79b:f323)
[00:09:23] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[00:10:21] *** Quits: nbao (~nbao@187.20.156.163) (Quit: leaving)
[00:10:53] *** Joins: iomari891 (~iomari891@105.112.138.38)
[00:11:23] *** Joins: Kharon (uid511277@user/cypris)
[00:11:58] <aphysically> oh namedtuples need to be on the class level, well I got it compiling now just to figure out running
[00:17:06] <aphysically> now I just need to figure out how to make use of C extensions
[00:17:43] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[00:17:53] <SnoopJ> aphysically, what do you mean by that?
[00:18:34] <aphysically> oh I've just never manually used compiled .so C extensions so I'm not sure how to get python to recognize it for import (just be in same directory as .so?)
[00:21:13] *** Joins: wolfdale6 (~wolfdale@ec2-54-169-159-210.ap-southeast-1.compute.amazonaws.com)
[00:21:24] <aphysically> oh I think I got it working :D
[00:21:28] *** Joins: wolfdale85 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:22:42] <SnoopJ> aphysically, yea, it "just works" with the import system (a .so that contains a module is something the runtime can work out)
[00:22:53] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[00:22:53] *** wolfdale6 is now known as wolfdale
[00:23:10] *** Quits: wolfdale8 (~wolfdale@ec2-3-0-147-70.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:23:10] *** wolfdale85 is now known as wolfdale8
[00:23:29] *** Joins: yitz_ (~yitz@exercism/yitz)
[00:23:36] <Gudddu> What would be a supported wheel on Centos for zope?
[00:24:19] <Gudddu> I tried doing pip wheel twisted and it downloaded zope.interface-5.4.0-cp39-cp39-manylinux2010_x86_64.whl but that does not install on rhel
[00:24:36] <Gudddu> The pypi project page offers a lot of downloads https://pypi.org/project/zope.interface/#files
[00:24:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[00:25:02] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 260 seconds)
[00:25:23] <grym> that should work on centos
[00:25:33] <grym> https://github.com/pypa/manylinux
[00:26:06] <tim__> Could anyone recommend a library for reading/writing binary formats (e.g. PNG images, network packets, etc)? Should be able to specify things like data type, length (possibly dynamic?), index, etc
[00:27:38] *** Quits: Phase (~phase@user/phase) (Remote host closed the connection)
[00:27:45] *** Joins: Phase_ (~phase@user/phase)
[00:28:13] <aphysically> huh mypyc preserves line numbers in errors in the compiled code that must be complicated
[00:28:17] *** Quits: hodapp (~mawson@user/hodapp) (Ping timeout: 264 seconds)
[00:28:25] <aphysically> I guess nuitka does it too
[00:28:27] <SnoopJ> tim__, the open() builtin can handle arbitrary data. For image data, there's Pillow, for network packets, there's scapy (on top of libpcap), and so on. But it sounds like you're looking for something a little more "universal?"
[00:29:04] <SnoopJ> aphysically, there are some handy standard(ish) macros that make this possible in general, if you know how to use them right
[00:29:18] *** Joins: korg815 (~korg815@user/korg815)
[00:29:35] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:d788:a189:c94a:c46f)
[00:30:03] *** Joins: hodapp (~mawson@user/hodapp)
[00:30:15] <tim__> SnoopJ, yes, was hoping for more general case. Not sure such a thing exists. I've worked in this area before, using bytes buffers and struct, but I was thinking maybe there's something a bit more sugary
[00:30:18] <SnoopJ> $employer's error system uses them for this purpose for errors in non-release builds which is extremely handy (specifically, our ACME_THROW_EXCEPTION() macro uses __FILE__ and __LINE__)
[00:30:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:30:32] *** yitz_ is now known as yitz
[00:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:30:36] <SnoopJ> tim__, surely no such thing exists for all arbitrary data, but if there's some subset you're interested in, maybe...?
[00:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:31:17] <tim__> Would like to construct ping packets in Python https://datatracker.ietf.org/doc/html/rfc792
[00:31:23] <aphysically> anyway, my compiled code still gives errors, I think the mypyc code has problems with enums and the mentioned namedtuples still
[00:31:47] <SnoopJ> tim__, scapy is really great at network analysis/etc., I highly recommend it
[00:32:18] <tim__> I will take a look, thanks SnoopJ!
[00:32:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[00:32:53] <SnoopJ> https://scapy.readthedocs.io/en/latest/usage.html#icmp-ping
[00:33:11] <tim__> "It is able to forge or decode packets of a wide number of protocols, send them on the wire, capture them, match requests and replies, and much more" Looks perfect
[00:33:59] <SnoopJ> libpcap is very versatile and scapy brings a lot of its own improvements :)
[00:34:48] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:35:05] *** Joins: talismanick (~talismani@campus-004-115.ucdavis.edu)
[00:35:25] <talismanick> I have numpy in pyproject.toml, set to use the latest version
[00:35:41] <talismanick> When I run the poetry command to install dependencies,
[00:35:49] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:35:58] *** Quits: zepolen (~zepolen@2a02:587:860a:4682:d782:6bc4:a35f:6d7) (Remote host closed the connection)
[00:36:23] *** Joins: zepolen (~zepolen@2a02:587:860a:4682:7ff6:e830:25:c662)
[00:36:24] <talismanick> it says it requires Python >=3.7,<3.11
[00:36:33] <Gudddu> grym, Iam on Centos 6. Not able to figure out if that is playing against me.
[00:36:38] <NoImNotNineVolt> scapy sounds awesome, thanks for the ad :P
[00:36:48] <talismanick> and that the project's Python requirements are incompatible
[00:36:57] <talismanick> Oh, I need to set it to 3.11 at max
[00:36:58] <talismanick> duh
[00:37:03] <BtbN> Given how old CentOS 6 is, everything there will be playing against you.
[00:38:26] *** Quits: jazzy (~jaziz@172.58.36.71) (Ping timeout: 245 seconds)
[00:38:26] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[00:39:02] <talismanick> although
[00:39:08] <talismanick> I'm not sure how to edit this
[00:39:09] <talismanick> python = "^3.9"
[00:39:14] <talismanick> to set a max version
[00:39:41] <talismanick> requires = ["python>=3.9 <=3.11"]?
[00:39:58] <ksu> tim__: perhaps https://github.com/construct/construct
[00:40:22] <Gudddu> grym, Sorry. Thats RHEL 6
[00:40:41] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[00:41:27] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-2945-239c-37f8-0688.res6.spectrum.com)
[00:42:28] <talismanick> ah, nvm
[00:42:45] *** Quits: vd898 (~vd898@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:42:54] <talismanick> it's python=">=3.9, <3.11" to be compatible with numpy
[00:43:00] *** Joins: vd898 (~vd898@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:43:13] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:43:26] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-84ec-26e7-f43c-0412.res6.spectrum.com) (Ping timeout: 245 seconds)
[00:43:33] *** Joins: alzgh (~alzgh@user/alzgh)
[00:43:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[00:43:54] <tim__> ksu, that looks pretty neat. features look very nice. thanks!
[00:44:03] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:44:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[00:44:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:50da:5207:5652:613a) (Ping timeout: 256 seconds)
[00:46:32] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[00:46:48] *** Joins: jazzy (~jaziz@172.58.38.255)
[00:46:58] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:47:11] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:48:11] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[00:49:00] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:49:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[00:49:43] *** Quits: talismanick (~talismani@campus-004-115.ucdavis.edu) (Remote host closed the connection)
[00:50:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:50:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[00:51:09] <aphysically> well I found more pyright bugs while messing around with mypyc :P
[00:51:09] *** Quits: jazzy (~jaziz@172.58.38.255) (Ping timeout: 245 seconds)
[00:51:22] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[00:52:32] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[00:52:37] *** Joins: talismanick (~talismani@campus-004-115.ucdavis.edu)
[00:52:47] *** Lord_of_Life_ is now known as Lord_of_Life
[00:54:44] *** Joins: jazzy (~jaziz@172.58.36.106)
[00:55:01] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[00:56:53] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[00:57:51] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[00:58:13] *** Joins: Guddu (~Guddu@190.84.88.92)
[00:59:21] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[00:59:34] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[01:00:31] *** Quits: Gudddu (~Guddu@190.84.88.92) (Ping timeout: 265 seconds)
[01:00:56] *** Quits: emf (~emf@2620:10d:c090:400::5:3586) (Ping timeout: 245 seconds)
[01:01:00] *** Quits: jazzy (~jaziz@172.58.36.106) (Ping timeout: 265 seconds)
[01:01:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 245 seconds)
[01:01:49] *** Joins: emf (~emf@2620:10d:c090:400::5:3586)
[01:02:05] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:04:20] *** Quits: grooverman (~grooverma@177.189.91.225) (Read error: Connection reset by peer)
[01:05:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[01:06:28] *** Joins: Pickchea (~private@user/pickchea)
[01:06:38] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[01:06:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:07:59] *** Joins: mickey8 (~user@user/mickey)
[01:08:18] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:12:01] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[01:12:16] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:d98d:defc:b79b:f323) (Quit: Leaving)
[01:13:34] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 260 seconds)
[01:16:00] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[01:16:03] *** Quits: barzo (~barzo@31.177.222.75) (Remote host closed the connection)
[01:16:20] *** Joins: alzgh (~alzgh@user/alzgh)
[01:16:57] *** Joins: barzo (~barzo@31.177.222.75)
[01:19:41] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Ping timeout: 245 seconds)
[01:19:52] <shrysr> I am new to fastapi/flask+Dash : I am trying to extend the example here https://github.com/rusnyder/fastapi-plotly-dash to mount multiple Dash apps under FastAPI . To start with - i am just copying the existing Dash app as a 2nd dashapp2.py, adding a route to it and a mount . Error is - unable to find the path to the 2nd app. Here is the commit to a forked repo with my changes >>
[01:19:54] <shrysr> shrysr/fastapi-plotly-dash@17b4382
[01:19:56] <shrysr> I'm not able to understand where I'm going wrong conceptually. I would appreciate guidance
[01:20:34] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:20:49] *** Joins: asix (~Anders@user/asix)
[01:21:01] <shrysr> https://github.com/shrysr/fastapi-plotly-dash/commit/17b438287cff1eb6ec77a9c8956135901f2a6293
[01:21:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:22:12] <shrysr> hope its okay to post about fastapi/dash here
[01:22:38] *** Joins: redrum88 (~redrum88@user/redrum88)
[01:22:55] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:24:52] *** Quits: Akuli (~Akuli@87-94-109-27.bb.dnainternet.fi) (Quit: Leaving)
[01:25:08] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:26:16] *** Joins: vimart (~vimart@85.255.233.1)
[01:28:28] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[01:28:55] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:29:29] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 245 seconds)
[01:30:08] *** Quits: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr) (Ping timeout: 265 seconds)
[01:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:31:48] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:32:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:33:44] <talismanick> On Linux, running Python from Poetry
[01:33:53] <talismanick> can't get matplotlib to actually plot anything
[01:34:27] <talismanick> I did the standard "import matplotlib.pyplot as plt", followed later by "plt.plot(...)", etc
[01:34:31] <talismanick> no errors
[01:34:35] <talismanick> just silently fails
[01:35:04] <talismanick> I printed matplotlib.get_backend() and got Agg
[01:35:29] <talismanick> so I installed python3-tkinter and agg (on Void, but this should be common across distros)
[01:35:33] <talismanick> still no output
[01:36:34] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[01:37:31] <talismanick> (running it now says the backend is TkAgg, but it still doesn't print anything)
[01:37:38] <talismanick> heeelp?
[01:38:33] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[01:39:01] *** Joins: Chex (~Chex@user/chex)
[01:39:56] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:40:19] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[01:41:14] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[01:41:23] <grym> talismanick: usually, you also need plt.show()
[01:41:27] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[01:41:39] <talismanick> grym: holy throwback
[01:41:43] <talismanick> Now that you say that
[01:41:47] <talismanick> I remember that from high school!
[01:41:57] <talismanick> (I haven't plotted in Python since)
[01:42:03] <grym> back in my day, sonny boy, we had TI83s and were glad of it
[01:42:14] <grym> uphill! both ways!
[01:42:30] <akk> grym: HP41C here :)
[01:42:37] <talismanick> grym: Thanks!
[01:42:38] <grym> and we sneakernetted our crappy mario clones and drug dealer games
[01:42:39] <grym> :D
[01:43:22] <sartan> during physics class the math teacher would walk around and delete everyones roms before the test.  i wrote a fully functional fake ui so he only thought he was deleting my stuff.
[01:43:25] <sartan> on my ti83
[01:44:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[01:44:02] <akk> It's funny how school restrictions sometimes are great inspirations for learning.
[01:44:04] *** Quits: junktext (~junktext@109.201.152.171) (Ping timeout: 252 seconds)
[01:44:11] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[01:44:41] *** JacobFrost is now known as LeafyFrost
[01:44:42] <akk> I learned so much collaborating with other students to get around disk quotas, back in the day.
[01:45:00] *** LeafyFrost is now known as CheekyFrost
[01:46:38] <sartan> i seem to remember some quirk where a keystroke would override some captured key presses, so i just went in one step earlier as if the memory button was already pressed in the certain way.. like a hardware interrupt
[01:46:39] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7eb7:2ebc:285:ce97) (Ping timeout: 268 seconds)
[01:47:10] *** Joins: iflema (~ian@user/iflema)
[01:47:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:47:20] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[01:48:56] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:49:28] *** Joins: fikran (~fikran@user/fikran)
[01:51:43] *** Quits: talismanick (~talismani@campus-004-115.ucdavis.edu) (Ping timeout: 252 seconds)
[01:52:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:52:59] *** Joins: spenat (~spenat@c-1125235c.012-6-62726f1.bbcust.telenor.se)
[01:54:52] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:54:58] *** Quits: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net) (Quit: Leaving... Leaving... Left...)
[01:58:27] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[01:58:33] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[01:58:58] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[02:00:50] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[02:01:09] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 245 seconds)
[02:01:10] *** Joins: nomic (~nomic@185.192.69.208)
[02:04:28] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:05:08] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[02:05:22] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:06:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 265 seconds)
[02:06:28] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[02:06:58] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:09:32] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:09:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[02:10:04] *** Joins: srhm (~srhm@user/srhm)
[02:10:32] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:12:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:12:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:12:37] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 252 seconds)
[02:14:28] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 265 seconds)
[02:16:14] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:16:28] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.146-51.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[02:16:36] *** Joins: p-i- (~Ohmu@223.206.71.4)
[02:16:45] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:16:53] *** Quits: qlixed (~qlixed@191.83.171.132) (Ping timeout: 265 seconds)
[02:18:26] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 245 seconds)
[02:18:59] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[02:19:43] *** Joins: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14)
[02:20:54] *** vinleod is now known as vdamewood
[02:25:36] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:26:17] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[02:26:18] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[02:27:11] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[02:27:40] *** Joins: mickey8 (~user@user/mickey)
[02:29:31] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:30:59] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[02:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:33:36] *** Joins: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com)
[02:34:06] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[02:36:17] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:36:30] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:37:30] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:38:25] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:39:15] *** Joins: whatsupdoc (~whatsupdo@148.64.18.222)
[02:39:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:39:55] *** Joins: y1n-v1 (~y1n@178.115.67.71.wireless.dyn.drei.com)
[02:40:23] <whatsupdoc> When should you use keyward arguments vs positional arguments? Any guidelines?
[02:40:33] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[02:40:41] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[02:41:54] *** CheekyFrost is now known as JacobFrost
[02:42:06] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[02:43:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[02:45:08] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:45:30] <sartan> i personally try to always use keyword arguments, because positional arguments can be trouble later when you're refactoring
[02:45:45] <sartan> the only exception to the rule is anything that uses ctypes
[02:45:54] <sartan> which simply dont supprot kwarg
[02:45:56] *** Quits: emerent (~quassel@p200300cd57485522ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[02:46:16] *** Joins: emerent (~quassel@p200300cd57485545ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:47:20] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[02:48:20] <zumba_addict> Good evening. I ran `pip freeze` and I see the connexion module. However, when the application runs, I see `ImportError: No module named connexion`
[02:48:28] <whatsupdoc> So in general I should be using keyword arguments whenever possible? Although I see the benefit, seems strange coming from other languages
[02:48:38] <Compu-Celebi> I rarely use keyword arguments, because they require additional code, usually for no additional benefit.
[02:49:14] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:49:15] <zumba_addict> When I execute pip install -r requirements.txt again, I get this `Requirement already satisfied: connexion==1.5.3 in /usr/local/lib/python2.7/site-packages (from -r requirements.txt (line 1)) (1.5.3)`
[02:49:58] <zumba_addict> but how come, this code is failing to find it? https://bpa.st/XQIA
[02:50:08] <Compu-Celebi> Also, they require a dictionary, which probably requires more memory than a list that contains an equal quantity of items, all other things being equal.
[02:50:24] <energizer> whatsupdoc: i dont think you're getting good answers
[02:50:55] <sartan> thanks, energizer
[02:50:56] <energizer> whatsupdoc: look at good code and see what it does
[02:51:17] <energizer> sartan: sorry sartan
[02:52:34] <whatsupdoc> lol ok
[02:52:46] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:53:17] *** Joins: Jong (~Jae@2620:10d:c090:400::5:c08c)
[02:54:39] *** Joins: Wulf (~Wulf@user/wulf)
[02:54:45] <Compu-Celebi> Keyword arguments are more likely to be used if the programmer does not have a specific set of parameters in mind, perhaps because he/she intends to facilitate extensibility.
[02:55:51] *** Joins: audio (~audio@cpe-24-27-99-134.tx.res.rr.com)
[02:55:54] <aphysically> wow enum functional form's second argument is quite liberal with what it allows
[02:56:04] <sartan> It's kind of a weird analogy but it's the same stretch to avoid using booleans in favor of enum,  It's true/false today, but maybe later it becomes more conditional.  down the road if you have to add another parameter, especially one with a default value, more params later means less readability on positional arguments
[02:56:30] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[02:56:47] <zumba_addict> I'm going to try the solution with 8 points from this link https://stackoverflow.com/questions/2325923/how-to-fix-importerror-no-module-named-error-in-python How do I find the library path where my connexion lib is installed?
[02:57:44] <zumba_addict> I got it, pip show connexion
[02:58:02] <pseudonymous> I use `poetry build` to build a whl and a zip package which goes into `<project_root>/dist`. I somehow want to change this, and I cannot figure it out. I already use a hook function to expand the kwargs going to setuptools.setup -- any ideas what to do ?
[02:58:14] *** Quits: audiobirb (~audio@cpe-24-27-99-134.tx.res.rr.com) (Ping timeout: 245 seconds)
[02:58:50] <Jong> Hi.  Is there a term for coding paths switching and routing based on whether imports exist? Like if psutil exists, import it and use it to check whether there's another memory to cache some data; if not sys.exit with a message; If psutil does not exist, attempt to cache the data and the user will find out if there's anough space by whether the program crashes
[02:59:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:59:11] <zumba_addict> do I just install filestorage? https://bpa.st/QP4A
[02:59:44] <Jong> check whether there's /s/another/enough I meant
[03:00:00] <zumba_addict> :(  ERROR: Could not find a version that satisfies the requirement FileStorage (from versions: none)
[03:00:08] <nedbat> Jong: i don't know if there's a term for it, but that's definitely a thing people do
[03:01:06] <Jong> If I have a bunch of imports used that way, does it still make sense to keep all imports at the top of the file?  Why not place the import statement by the only place its being used.
[03:01:24] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[03:01:37] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:02:10] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:02:14] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:d788:a189:c94a:c46f) (Remote host closed the connection)
[03:02:32] *** Joins: learner36 (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com)
[03:03:09] *** Joins: sirquack (~sirquack@2601:643:8680:526:4014:eafe:80d5:789e)
[03:03:49] <energizer> Jong: perhaps "a fallback" or "to fall back"
[03:04:35] <energizer> Jong: `try: import psutil; except ImportError: psutil = None` at the top. then later `if psutil is None: ...`
[03:05:35] *** Joins: c4017w (~c4017@209.52.68.8)
[03:05:44] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 245 seconds)
[03:06:05] <zumba_addict> what would be the command similar to `npm i module`? I'd like to see valid version of connexion module for Python 2.7
[03:06:21] *** Joins: aknot (~aknot@2603:900a:1503:17bb:374e:b85a:a16:ac8f)
[03:07:32] *** BytesAndCoffee|a is now known as BytesAndCoffee
[03:08:16] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[03:08:29] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:10:37] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[03:10:57] *** Joins: nomic (~nomic@185.192.69.208)
[03:11:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:50da:5207:5652:613a)
[03:11:45] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 268 seconds)
[03:11:49] *** Quits: whatsupdoc (~whatsupdo@148.64.18.222) (Quit: Client closed)
[03:12:01] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Ping timeout: 252 seconds)
[03:12:50] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[03:13:59] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:14:53] *** Joins: korg815 (~korg815@user/korg815)
[03:15:42] *** Lando-HoloNet is now known as Mumm-Ra
[03:15:50] *** Quits: emf (~emf@2620:10d:c090:400::5:3586) (Ping timeout: 260 seconds)
[03:16:19] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[03:20:24] *** Joins: MCx (~MCx@user/mcx)
[03:26:09] <sirquack> why is ai usually done with python, and not other languages?
[03:26:29] <nedbat> sirquack: python is approachable, so more people can work in it, and focus on the problem at hand
[03:27:06] <sirquack> ah alr
[03:27:14] <zumba_addict> can't believe, all the solutions/suggestions I found on web didn't work
[03:27:36] <energizer> sirquack: because scipy was written in python in like 2001 so a community developed around it
[03:28:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:28:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:29:21] <energizer> if scipy had happened in lisp maybe ai would be there now
[03:30:11] <BtbN> I doubt it, given that no normal person can just sit down and write lisp after a 30 minute intro
[03:30:34] <nedbat> energizer: lisp had a 20-year head start in AI
[03:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:30:49] <nedbat> (if not 30- or 40-year head start)
[03:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:37] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:31:47] <energizer> nedbat: but no scientific computing library
[03:32:08] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:32:12] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:32:22] <nedbat> i thought we were talking about ai
[03:33:00] <nedbat> these days, ai seems to be mostly numeric rather than symbolic i guess
[03:33:06] <energizer> yes
[03:33:49] <energizer> it was only c/c++/fortran at the time. among dynamic languages, only python had scipy
[03:34:26] <BtbN> Given that a bayesian mail spam filter qualifies as AI nowadays, I don't have much hope in AI to save us.
[03:35:24] <energizer> BtbN: which lisp dialect did you find so challenging?
[03:35:36] <BtbN> The one with the braces.
[03:37:00] <energizer> i think i can teach (defun addone (x)  (+ x 1)) (addone 10) in under 30  minutes
[03:38:11] <BtbN> Most students can't do simple things in Python after a full semester of courses. So I doubt Lisp will go very well.
[03:38:13] <energizer> after all, the "How to design programs" curriculum works for teenagers learning racket
[03:38:43] <Compu-Celebi> I did not know that Python was a common language for AI.  Lisp would seem to be more common.
[03:39:24] <energizer> Compu-Celebi: as nedbat alluded to, there are two branches of ai: numerical and symbolic. numerical ai is done in python these days
[03:39:29] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[03:39:41] <nedbat> Compu-Celebi: machine learning is AI
[03:40:05] * energizer is AI
[03:40:21] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[03:40:31] <nedbat> energizer is a battery
[03:40:44] * iflema everyready
[03:41:24] <zumba_addict> Where should we be looking for if the error is like this? https://bpa.st/6AXA
[03:41:34] <zumba_addict> nobody in our team can figure it out, LOL
[03:41:43] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:42:26] *** Quits: sirquack (~sirquack@2601:643:8680:526:4014:eafe:80d5:789e) (Ping timeout: 260 seconds)
[03:43:35] <Compu-Celebi> nedbat, I was not implying otherwise.
[03:45:07] *** Joins: frost (~frost@59.71.244.36)
[03:45:27] *** Joins: emf (~emf@2620:10d:c090:400::5:3586)
[03:45:28] <grym> zumba_addict: you're missing a dependency https://pypi.org/project/connexion/
[03:45:58] <Compu-Celebi> In any case, I do not know how machine learning pertains to the AI types to which you alluded.
[03:46:18] <zumba_addict> grym it is installed as shown by pip show connexion
[03:46:20] <grym> zumba_addict: no version of connexion supports python 2
[03:46:21] <energizer> it's numerical Compu-Celebi
[03:46:45] <sartan> energizer is a pink bunny powered by AI, depending on when they travel to and from europe.
[03:46:52] *** Quits: MCx (~MCx@user/mcx) (Ping timeout: 256 seconds)
[03:47:08] <grym> zumba_addict: pip may not be the one you think it is
[03:47:16] <zumba_addict> what do you mean?
[03:47:52] <zumba_addict> I looked at the git project and previous team has a command, `pip install -r requirements.txt`. connexion is in that file
[03:48:14] <grym> energizer: the one true AI language is, of course, gawk
[03:48:15] <grym> :)
[03:48:22] <zumba_addict> I just ran `pip list` and this is listed in the output `connexion                1.5.3`
[03:48:43] <grym> zumba_addict: that pip may have nothing to do with the python you're using
[03:48:59] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:49:02] <zumba_addict> They are running the app via twistd which honestly I don't know what it is
[03:50:10] <zumba_addict> when I open a python terminal, import connexion works now. But when running their twistd, it fails with that bpaste i shared
[03:50:26] <nedbat> Compu-Celebi: sorry, which ai types were alluded to?
[03:50:34] <grym> zumba_addict: sure, you're running different pythons and only one of them has a site with connexion installed in it
[03:50:47] <zumba_addict> that's what I am guessing too
[03:50:51] <zumba_addict> how do I debug that?
[03:51:02] <zumba_addict> oh no, it's 7:20, got to pick up mother in law, LOL
[03:51:10] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[03:51:15] <zumba_addict> brb, I hope you'll still be here :)
[03:51:18] <Compu-Celebi> The numerical type and the symbolic type, according to energizer.
[03:51:46] *** Quits: emf (~emf@2620:10d:c090:400::5:3586) (Ping timeout: 245 seconds)
[03:52:38] <nedbat> Compu-Celebi: machine learning is heavily numeric
[03:52:47] <Compu-Celebi> However, I recollect that the CGP Grey video How Machines Learn mentions that linear algebra is used.
[03:53:27] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:54:55] <grym> 63. When we write programs that "learn", it turns out that we do and they don't.
[03:55:27] <energizer> that's nice. perlis?
[03:56:02] <grym> yeah :)
[03:56:07] <energizer> sweet
[03:57:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:57:11] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[03:57:17] <Compu-Celebi> I have no idea as to how machine learning could involve linear algebra, but machine learning probably tends to involve probabilities.
[03:57:23] <grym> Compu-Celebi: backprop
[03:58:44] <Compu-Celebi> I do not recognize this word.
[03:58:48] *** Joins: fikran (~fikran@user/fikran)
[03:59:10] <energizer> i think the place to start is learning about "linear regression" Compu-Celebi
[03:59:26] <Compu-Celebi> However, Wiktionary defines it as "backpropagation," another word that I do not recognize.
[03:59:36] <grym> optimization's a fine land to explore
[03:59:44] <grym> no need for nets rather a lot of the time
[03:59:49] <energizer> my story has a hole in it. there /was/ an open source dynamic language with numerics and arrays back then: APL
[04:00:31] <Compu-Celebi> Wiktionary defines it as "(computing) an error correction technique used in neural networks" and "(neurology) a phenomenon in which the action potential of a neuron creates a voltage spike both at the end of the axon, as normally, and also back through to the dendrites from which much of the original input current originated."
[04:00:49] <energizer> nedbat: did people talk about APL when you were starting out?
[04:01:10] <nedbat> energizer: i used APL in the late 70's a bit
[04:01:29] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[04:01:36] <nedbat> energizer: and in college, the creator of APL (Ken Iverson) gave a talk where he said one of APL's advantages was that it was readable.
[04:02:02] <energizer> nedbat: indeed, Notation as a Tool of Thought!
[04:02:24] <grym> and consider what fortran's name means :)
[04:03:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[04:03:24] <Compu-Celebi> energizer, I already know what linear regression is.  In fact, at least a few years ago, I programmed a Python function whose name is "`linear_regression`."
[04:04:20] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[04:04:26] <Compu-Celebi> Linear regression is a topic of statistics, which is related to probability.
[04:04:56] <Compu-Celebi> Machine learning probably tends to involve statistics, also.
[04:05:46] <energizer> Compu-Celebi: yeah, machine learning and statistics are related. https://projecteuclid.org/journals/statistical-science/volume-16/issue-3/Statistical-Modeling--The-Two-Cultures-with-comments-and-a/10.1214/ss/1009213726.full
[04:06:19] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (Quit: WeeChat 2.9)
[04:06:35] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[04:07:34] *** Quits: flokuehn (~flokuehn@i5e86b3fe.versanet.de) (Ping timeout: 252 seconds)
[04:07:54] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[04:09:37] *** Joins: flokuehn (~flokuehn@i577BC619.versanet.de)
[04:10:25] *** Joins: _xor (~xor@72.49.199.147)
[04:12:02] <Compu-Celebi> I probably have no experience with data modeling or statistical modeling.
[04:12:55] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:13:13] <Compu-Celebi> However, I studied statistics and probability when my brother was attending a college course about it approximately a year ago.
[04:14:06] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:14:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:15:19] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[04:15:44] *** Quits: fstd (~fstd@xdsl-87-79-83-167.nc.de) (Ping timeout: 245 seconds)
[04:18:39] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[04:19:03] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (Quit: WeeChat 2.9)
[04:19:41] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 245 seconds)
[04:21:32] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:21:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[04:23:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:24:39] *** Quits: BSaboia (~bsaboia@177.37.198.74) (Quit: This computer has gone to sleep)
[04:28:42] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[04:28:51] *** Quits: aknot (~aknot@2603:900a:1503:17bb:374e:b85a:a16:ac8f) (Ping timeout: 245 seconds)
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[04:31:34] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:31:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Quit: Leaving)
[04:32:46] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (Client Quit)
[04:34:44] *** Joins: vlm (~vlm@user/vlm)
[04:35:12] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[04:35:36] <zumba_addict> Just got back
[04:36:04] <Jong> does argparse have a way to treat an argument as a boolean or value?  I want --cache to represent a boolean, and --cache=5 to store 5
[04:36:05] *** Quits: gitly (~gitly@185.69.144.60) (Ping timeout: 265 seconds)
[04:36:38] <Jong> and no --cache flag at all stores a false value in the respect variable
[04:38:02] *** Joins: gitly (~gitly@85.255.234.80)
[04:39:23] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[04:40:31] <sartan> action='store_true' ?
[04:41:02] <zumba_addict> grym you mentioned that the system I am troubleshooting might have installed different python. The service when it is executed, it uses the path "/usr/lib/python2.7/dist-packages/". How do I verify if connexion might be installed somewhere else?
[04:41:15] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 260 seconds)
[04:41:16] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[04:41:19] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[04:41:24] *** Joins: fartyfoam5 (~fartyfoam@178-118-118-2.access.telenet.be)
[04:41:43] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Read error: Connection reset by peer)
[04:41:43] *** fartyfoam5 is now known as fartyfoam
[04:41:47] <Jong> I could have praser.add_argument("--cache", action="store_true", default = False)
[04:41:53] <Jong> that handles just boolean case
[04:42:25] <Jong> praser.add_argument("--cache", action="store_true", type=int, default=0) but that stores just a value
[04:42:36] <Jong> I want to combine both
[04:42:48] <Jong> --cache stores true.  --cache=X stores X
[04:43:22] *** Joins: akk (~akk@75.161.146.115)
[04:43:49] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[04:44:15] <zumba_addict> I ran `pip show connexion` and got this results - https://bpa.st/EVGA
[04:44:22] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[04:45:06] <zumba_addict> but when twistd runs the app, it cannot find connexion
[04:46:00] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:47:09] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[04:47:12] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 265 seconds)
[04:47:12] *** brabrax_ is now known as brabrax
[04:47:18] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:47:49] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 245 seconds)
[04:49:54] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 245 seconds)
[04:51:57] *** Joins: nbao (~nbao@187.20.156.163)
[04:53:19] *** Joins: khrbt (~znc@user/khrbt)
[04:58:46] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:59:49] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[05:00:04] <LuxuryMode> I've seen several approaches to generating random alphanumeric string in Python. What do you recommend?
[05:00:12] *** Joins: zeden (~zeden@user/zeden)
[05:01:59] <zumba_addict> also, the project doesn't use virtualenv or venv
[05:02:50] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 260 seconds)
[05:05:23] <zumba_addict> I see now
[05:05:29] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 264 seconds)
[05:06:28] <zumba_addict> twistd uses /usr/bin/python which is a symbolic link to /usr/bin/python2.7
[05:06:46] <zumba_addict> so how do I find out the pip for that one?
[05:07:37] <zumba_addict> oh, /usr/bin/pip freeze doesn't show connexion
[05:08:21] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:10:48] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[05:11:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[05:11:31] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[05:12:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:13:35] *** Gustavo6046_ is now known as Gustavo6046
[05:14:37] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:17:58] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[05:19:23] <KirkMcDonald> LuxuryMode: First, make a string containing the alphabet you want to choose characters from, e.g. string.ascii_letters + string.digits
[05:20:09] <KirkMcDonald> LuxuryMode: Then you can "".join(random.choices(s, k=length))
[05:20:42] <LuxuryMode> yeah thanks, I went with `''.join(random.choices(string.ascii_letters + string.digits, k=10))`
[05:20:43] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[05:20:47] <LuxuryMode> Appreciate the reply!
[05:21:13] *** Joins: orbatos (~orbatos@user/orbatos)
[05:21:44] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[05:22:36] <sartan> Jong: you want a mutable value between a boolean and an integer?
[05:22:44] <sartan> Hmm
[05:22:49] <sartan> Let me try this out
[05:23:10] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Quit: Leaving)
[05:23:41] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[05:23:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[05:25:38] <Guddu> Thanks SnoopJ and sartan for your help today. I solved the Letsencrypt certificate error by building openssl-3.0 from source and then i installed python3 from source using that openssl and then i was able to use the requests library for my api call without any error :-)
[05:27:01] <sartan> got it
[05:27:14] <sartan> try parser.add_argument('--cache', type=int, default=False, nargs='?', const=True)
[05:27:28] <sartan> foo.py <no args> will be False, foo.py --cache will be True, foo.py --cache 5 will be 5
[05:28:32] <sartan> I wasn't quite sure what you want but you can just change those parameters as you wish i think to come out with your result
[05:28:47] <sartan> the trick is [ab]using nargs and const
[05:28:58] <zumba_addict> how come /usr/local/bin/pip is able to use /etc/pip.conf while /usr/bin/pip doesn't know about it? How do I fix this?
[05:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:33:27] *** Joins: khrbt (~znc@user/khrbt)
[05:33:42] *** Joins: semeion (~semeion@user/semeion)
[05:35:04] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[05:35:24] *** Quits: bim9262 (~bim9262@user/bim9262) (Quit: ZNC - https://znc.in)
[05:35:42] *** Joins: bim9262 (~bim9262@user/bim9262)
[05:36:35] *** Joins: zaquest (~notzaques@5.128.210.178)
[05:37:43] *** Quits: nbao (~nbao@187.20.156.163) (Quit: leaving)
[05:38:26] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 245 seconds)
[05:38:37] <Gustavo6046> I have a (ctypes.c_uint32 * SOME_NUMBER). How do I get a bytes (to decode('utf32')) out of that, least squanderously?
[05:38:39] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:cd07:1922:4380:3c32)
[05:39:14] <Gustavo6046> Just turn into a bytearray?
[05:39:29] *** Joins: Trashlord (~trash@user/trashlord)
[05:40:03] <Gustavo6046> mypy seems to dislike the thought of multiplying a type (in this case ctypes.c_uint32) lol
[05:42:33] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:cd07:1922:4380:3c32) (Read error: Connection reset by peer)
[05:44:25] *** Quits: y1n-v1 (~y1n@178.115.67.71.wireless.dyn.drei.com) (Quit: Leaving)
[05:44:29] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:1115:e06d:eb09:5d18)
[05:44:40] *** Joins: y1n-v1 (~y1n@178.115.67.71.wireless.dyn.drei.com)
[05:44:41] *** Joins: newpy (~newpy@206.168.231.90)
[05:44:46] *** Joins: MCx (~MCx@user/mcx)
[05:44:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 245 seconds)
[05:45:12] *** Quits: y1n-v1 (~y1n@178.115.67.71.wireless.dyn.drei.com) (Client Quit)
[05:45:31] *** Quits: Mumm-Ra (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[05:45:34] *** Joins: y1n (~y1n@178.115.67.71.wireless.dyn.drei.com)
[05:46:00] <newpy> I have a numpy array of chars, is there a faster way of making a string than ''.join (a) ?
[05:48:15] <ammar2> what is the dtype of the array?
[05:48:45] <newpy> <U1
[05:49:03] <newpy> but I can change it if that helps, so long as it can represent characters
[05:50:19] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:a02a:538a:4bc3:dc64)
[05:50:26] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[05:50:57] <sartan> Guddu: i would have thought system openssl trust store would have been used, i'm surprised that updating it that way worked
[05:51:14] <Guddu> sartan, system openssl was very old.
[05:51:15] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[05:51:28] <sartan> ah i thought you implied the only chagne was the python3 version
[05:51:40] <sartan> I misread it
[05:51:59] <sartan> Building from source is always scary imo, it's very difficult to onboard vulnerability updates
[05:52:01] *** Quits: zettabyte (~zettabyte@user/zettabyte) (Remote host closed the connection)
[05:52:11] <sartan> unless you've containerized the whole build process
[05:52:33] *** Joins: zettabyte (~zettabyte@user/zettabyte)
[05:52:49] *** Quits: nisstyre (~wes@user/nisstyre) (Quit: WeeChat 3.1)
[05:53:02] <Guddu> sartan, I have always built my python using source. I have this habit (or bad habit). I build from source and then create virtual env.
[05:53:13] <sartan> I'm less concerned about python from source as openssl from source
[05:53:16] <Guddu> What is the other better way but without having to use docker?
[05:53:42] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[05:53:49] <sartan> you can't easily script updates or use nice things like unattended apt-get updates
[05:54:18] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[05:54:23] <sartan> it sort of sits there from the state it was at after compiling and sits there forever
[05:54:44] <Guddu> sartan, Yeah. It sits like that forever.
[05:54:53] *** Joins: nisstyre (~wes@user/nisstyre)
[05:54:58] <sartan> it's kind of a vulnerability time bomb
[05:55:16] <Guddu> I have never updated python or anything as the clients don't allow touching the prod systems too often.
[05:55:16] <sartan> Oh well that's orthogonal entirely to your problem though
[05:55:22] <Guddu> Those don't even have internet.
[05:56:13] <Compu-Celebi> For some strange reason, at least by default, eric displays all Python code besides the contents of text strings and byte strings in a variable-width font.  How can that be changed?
[05:56:21] <Guddu> The problem starts with them delivering a old version of OS always.
[05:56:27] <Gustavo6046> I was thinking about making a parallelizable string shuffle, and to that I thought about seeing the string as a binary tree of sorts
[05:56:35] <Gustavo6046> and each node would have a random bit that would basically tell whether to flip it
[05:56:36] <Guddu> sartan,  So i can't find newer python. So i install using source.
[05:57:00] <sartan> what distribution?  There are some community repos that help with this kind of stuff depending on what you're running
[05:57:25] <Guddu> sartan, So for example this is an app running on rhel 6 since 2015.
[05:57:29] <Gustavo6046> does this sound good?
[05:57:41] <Gustavo6046> it gets tricky for strings of a length that is not a power of two
[05:58:02] <Gustavo6046> like a string of length 7 ('cyclops')
[05:58:07] <Guddu> sartan, Do you apply update of python for every release that comes out(even for prod systems)?
[05:58:14] <InPhase> Gustavo6046: I don't think it's possible to parallelize a true shuffle and get a speedup.
[05:58:32] <Gustavo6046> you could flip c-y, c-l, o-p, cy-cl, op-s, or cycl-ops
[05:58:38] <Gustavo6046> InPhase: oh..
[05:58:40] <Gustavo6046> that is fine
[05:58:44] <Gustavo6046> maybe I can run multiple shuffles at once instead
[05:58:47] <Gustavo6046> thanks! :)
[05:59:13] <sartan> i'd suggest extra packages for enterprise linux (EPEL) but i just read they end of lifed' epel 6
[05:59:24] <InPhase> Gustavo6046: The reason is because the optimal shuffle has one pass.  See:  https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle
[05:59:31] <Gustavo6046> yeah
[05:59:38] <Gustavo6046> I did a Fisher-Yates already but I was wondering if I could parallelize that
[05:59:42] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[05:59:44] <Gustavo6046> but it seems it's okay to just have multiple shuffles parallelized
[05:59:50] <Gustavo6046> or maybe not bother with premature optimization :p
[05:59:51] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[06:00:19] <InPhase> Gustavo6046: It would not be possible to separate it because you would need to randomize which ones you separate into which piles, and at that point you could have just shuffled them.  :)
[06:00:19] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 265 seconds)
[06:00:20] <Gustavo6046> this is just something I wanted to try out for fun, a string stream of sorts (it only has write and read) that shuffles every middle character of every token
[06:00:58] <InPhase> Gustavo6046: Although you can abandon efficiency and try it for fun.
[06:01:14] *** Joins: Mumm-Ra (~Lando-Spa@user/lando-spacepimp)
[06:01:25] <Gustavo6046> so "I like planting plenty pretty potatoes in the summer!" could become "I lkie paltnlig ptelny ptaoets in the smumer!"
[06:01:39] <InPhase> Gustavo6046: One can, for example, attempt a merge-shuffle, and parallelize that.  It will be slow but could be enjoyable.
[06:02:01] <Gustavo6046> the idea is that, in theory, if the first and last letters are the same, you can understand what a word says (at least if it's part of a sentence, particularly a structure done), even if all the middle letters are shuffled.
[06:02:08] <Gustavo6046> Yeah
[06:02:10] <InPhase> Gustavo6046: Merge-sort for example has interesting parallelization, and can end up a bit faster in some circumstances.
[06:02:11] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:89f6:212a:87a4:b49e) (Ping timeout: 245 seconds)
[06:02:31] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[06:02:31] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[06:03:11] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 250 seconds)
[06:03:30] *** Joins: nfc_ (nfc@tilde.institute)
[06:03:32] <Gustavo6046> Mhm
[06:04:10] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:04:30] *** Joins: Guddu (~Guddu@190.84.88.92)
[06:04:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:04:47] <Guddu> sartan, I got disconnected :-)
[06:05:28] *** Quits: Guddu (~Guddu@190.84.88.92) (Client Quit)
[06:05:42] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[06:05:52] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[06:06:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[06:06:25] *** Quits: crazysim (sid86009@id-86009.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[06:06:36] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 265 seconds)
[06:06:38] *** Quits: han-` (sid293063@id-293063.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[06:06:58] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:06:58] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 252 seconds)
[06:07:11] *** Quits: Kharon (uid511277@user/cypris) (Ping timeout: 245 seconds)
[06:07:53] *** Joins: Kharon (uid511277@user/cypris)
[06:08:09] *** Joins: fikran (~fikran@user/fikran)
[06:08:14] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[06:08:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[06:08:56] *** Joins: han-` (sid293063@helmsley.irccloud.com)
[06:09:01] *** Joins: crazysim (sid86009@hampstead.irccloud.com)
[06:09:06] *** Joins: LuxuryMode (uid91005@ilkley.irccloud.com)
[06:09:09] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:14e9:d913:de41:9808) (Quit: Textual IRC Client: www.textualapp.com)
[06:09:29] *** Joins: Memory (sid459764@user/memory)
[06:10:49] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Time to sleep)
[06:12:55] *** Joins: elkclone (~elkclone@user/elkclone)
[06:13:37] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:13:38] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Read error: Connection reset by peer)
[06:14:15] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[06:15:48] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[06:16:25] <Compu-Celebi> Did a netsplit occur?
[06:17:22] *** Joins: pluri (~pluri@user/pluri)
[06:17:45] *** Joins: daveo (~user@184.63.104.16)
[06:19:00] <Gustavo6046> how can I write to a StringIO and have a separate read position?
[06:19:18] <Gustavo6046> so I can write to the end of it but still read from wherever the last read position was
[06:19:32] <Gustavo6046> which is kind of like what a ring buffer would do I guess?
[06:20:23] <Gustavo6046> oh wait
[06:20:25] <Gustavo6046> queue!
[06:21:27] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 265 seconds)
[06:21:36] *** Joins: circuitbone (sid355934@user/circuitbone)
[06:22:43] <TML> Gustavo6046: Just use a variable to store your read position, no reason to change data structures
[06:22:48] <Gustavo6046> yeah
[06:24:17] *** Joins: hnOsmium0001 (uid453710@hampstead.irccloud.com)
[06:24:18] *** Joins: hardwire (sid415742@uxbridge.irccloud.com)
[06:24:54] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 245 seconds)
[06:27:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:30:01] *** Quits: sticheln (~atsbomb@116.88.220.71) (Quit: leaving)
[06:30:47] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[06:31:18] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:22] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[06:31:35] *** Quits: sh4rk (~lemonade@user/sh4rk) (Quit: ZNC 1.8.2 - https://znc.in)
[06:32:45] *** Joins: sticheln (~atsbomb@116.88.220.71)
[06:35:58] *** Joins: frost (~frost@59.71.244.36)
[06:39:54] *** Quits: Jefren (~Jefren@70.35.66.231) (Ping timeout: 245 seconds)
[06:40:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:40:42] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[06:41:36] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[06:41:56] *** Joins: Jefren (~Jefren@208.104.190.29)
[06:42:06] *** Joins: Trashlord__ (~trash@user/trashlord)
[06:44:51] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[06:45:08] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 265 seconds)
[06:45:08] *** jmiehe1 is now known as jmiehe
[06:47:01] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[06:47:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:48:45] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:50da:5207:5652:613a) (Ping timeout: 256 seconds)
[06:50:36] <Gustavo6046> oh gawd it works
[06:51:33] *** Quits: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net) (Quit: bilb_ono)
[06:51:47] *** Quits: p-i- (~Ohmu@223.206.71.4) (Read error: Connection reset by peer)
[06:52:23] *** Joins: p-i- (~Ohmu@223.206.71.4)
[06:52:52] *** Quits: vimart (~vimart@85.255.233.1) (Ping timeout: 265 seconds)
[06:54:06] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[06:57:53] <Gustavo6046> The read method is quite the mess though
[06:59:43] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 252 seconds)
[06:59:57] <Gustavo6046> Here's with a convenient transform class method. https://termbin.com/kguk7
[07:01:00] <Gustavo6046> So, let's test the premise! Can you understand the following sentence?
[07:01:02] <Gustavo6046> > But I love my hibboes and digons; for iscnntae, I have a pcnhaent for the tmie I spend plntnaig antpely poetotas in the golw of smemur snluhgit! Why wolud aonnye see foul upon scuh an innncoet suol as mnie?
[07:01:51] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[07:03:12] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[07:03:14] <Compu-Celebi> However, that requires repeatedly
[07:04:30] <Gustavo6046> hmm?
[07:05:35] <Gustavo6046> How about this? This one might be easier
[07:05:36] <InPhase> Gustavo6046: I'm still bothered by the missing "of" between antpely and poetotas, but yes.  English has very little entropy per word.
[07:05:37] <Gustavo6046> > Msetir Gaets, seevral ddaeces ago, the msietr said taht no one wloud eevr need mroe than one-hrudned-and-sxity kiteoybls of RAM in thier cueotprms. Nwodyaas, two gbeyitgas is ciresndeod sccrae. How do you feel aobut taht?
[07:05:56] <Gustavo6046> Aplenty potatoes?
[07:06:07] <Gustavo6046> Oh, potatoes aplenty
[07:06:21] <Gustavo6046> aplenty makes the related noun as a genitive?
[07:06:34] <Gustavo6046> because I can see 'of' in that scenario if 'potatoes' is the genitive relative to 'aplenty'.
[07:06:42] <Gustavo6046> like "an aplenty of potatoes"
[07:06:55] <Gustavo6046> to be honest that word confuses me. I'm not a native English speaker. :P
[07:07:15] <grym> Gustavo6046: "is this scrambled text, or are you drawing words from 'finnegan's wake'
[07:07:38] <InPhase> Oh, aplenty.  See, I read it so easily I mentally reinserted your typo from earlier, when in fact you did not make it this time.
[07:07:46] <grym> "     Sir Tristram, violer d'amores, fr'over the short sea, had passen-
[07:07:46] <grym>     core rearrived from North Armorica on this side the scraggy
[07:07:47] <grym>     isthmus of Europe Minor to wielderfight his penisolate war"
[07:07:55] <Gustavo6046> grym: it is said that you can understand a sentence even if all the letters in the middles of words are shuffled. See the module-level docstring in the python file I linked.
[07:07:56] <grym> same deal :)
[07:07:59] <Gustavo6046> and lol
[07:08:09] <Gustavo6046> Armorica? What's the excuse for that?
[07:08:39] <Gustavo6046> Maybe English authors were slightly less literate centuries ago?
[07:09:09] <InPhase> Gustavo6046: You assume standardized spellings were a thing.
[07:09:24] <Compu-Celebi> Needing to repeatedly switch the active offset between the reading offset and the writing offset is inconvenient and possibly inefficient.
[07:09:28] <grym> ... finnegan's wake was written in 1939
[07:09:37] <grym> and joyce was super duper irish
[07:09:43] <Gustavo6046> Or just not entirely set on how their spoken language was to be written down.
[07:09:43] <Gustavo6046> But Armorica... that's sometime after the 1500s, for sure, right?
[07:09:43] <Gustavo6046> oh dear I must check Wikipedia on Finnegan's Wake
[07:09:43] <Gustavo6046> I'm mildly intrigued now.
[07:09:43] <Gustavo6046> Oh dear my network just died
[07:09:53] <Gustavo6046> ahh
[07:09:58] <InPhase> Gustavo6046: While tracking my ancestry, it gets complicated as soon as it gets to the part where they change the spellings of their own names every time they write it down
[07:09:58] <grym> dude just really liked wordplay
[07:10:12] <Gustavo6046> Compu-Celebi: in read()?
[07:10:15] <grym> InPhase: old-school i18n is "render your name like the locals do"
[07:10:17] <Gustavo6046> grym: yeah, it's fun
[07:10:20] <Gustavo6046> InPhase: lol
[07:10:50] <Gustavo6046> I've heard that some moustachio guy you may have heard of was initially surnamed Hiedler.
[07:10:56] <Gustavo6046> Maybe that has to do some.
[07:11:15] <Compu-Celebi> Gustavo6046, elucidate your inquiry.
[07:11:21] <grym> InPhase: someone i kindasorta know got their phd by detangling shipping contracts from the 1400s where "john" sold wool in england and "jean" recieved it elsewhere and "johannes" kept reselling it and so on; reconstructing the graph is nontrivial
[07:11:50] <Gustavo6046> Compu-Celebi: are you referring to the procedure in FirstLast.read? Yes, that is very messy, and I'm still not sure how to rework it.
[07:11:52] *** Quits: Jefren (~Jefren@208.104.190.29) (Ping timeout: 252 seconds)
[07:12:02] <Compu-Celebi> I do not know what `FirstLast` is.
[07:12:06] <InPhase> grym: Probably the same math as bitcoin forensics, but with phonetic hints.
[07:12:23] <Gustavo6046> Or are you abstractly referring to the usage of inbuffer in FirstLast.write somehow?
[07:12:25] <grym> InPhase: harder , but same space
[07:12:38] <Compu-Celebi> My comment was general.  I have not examined your code.
[07:13:57] <Gustavo6046> Wait, was that directed at me at all?
[07:14:06] <Gustavo6046> Apologies.
[07:14:31] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[07:14:42] <Compu-Celebi> To what does "that" refer?
[07:14:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:15:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:18:55] *** Quits: sticheln (~atsbomb@116.88.220.71) (Remote host closed the connection)
[07:19:56] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:707a:a74a:1ce1:5762)
[07:20:38] <Gustavo6046> Pardon
[07:20:41] <Gustavo6046> network's being silly
[07:21:18] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:23:14] *** Joins: sticheln (~atsbomb@116.88.220.71)
[07:24:43] <Compu-Celebi> Perhaps, you missed my latest message, which was, "To what does 'that' refer?"
[07:24:53] <Gustavo6046> Oh, apologies
[07:25:02] <Gustavo6046> maybe you missed mine too
[07:25:25] <Compu-Celebi> The last message that I received from you before I inquired was, "Apologies."
[07:25:35] <Gustavo6046> oh, then they all went through
[07:25:55] <Gustavo6046> https://termbin.com/qngy it should now be an executable script and might even work off of stdin, hooray!
[07:28:18] <Compu-Celebi> Yet, you did not answer my inquiry.
[07:28:28] <Compu-Celebi> It was in regards to, "Wait, was that directed at me at all?"
[07:28:58] <Gustavo6046> Ohh! "That" refers to your remark about the active offset.
[07:29:05] <Gustavo6046> I am sure it is an astute remark nonetheless. :)
[07:30:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:40] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[07:32:01] <Compu-Celebi> It was addressed primarily to you but was also intended for anyone else who was interested.
[07:33:37] *** Joins: Jefren (~Jefren@70.35.66.152)
[07:33:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-147f-b5d4-1962-58a8.res6.spectrum.com) (Read error: Connection reset by peer)
[07:35:20] *** Joins: monkey_ (~user@190.104.116.134)
[07:35:34] <Gustavo6046> Compu-Celebi: Ah. Which part of the code did it refer to specifically?
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:21] <Gustavo6046> InPhase, grym: here's a bigger sample. It's from a piece of text I wrote, about (fictitious) rockets used as fast, reusable, high-throughput method of transportation of divisible cargos (think electronics, fluids, powders, other kinds of cargos which can be split and carried in small parts). I passed it through FirstLast, good luck reading!  https://termbin.com/kb5x
[07:37:47] <Gustavo6046> If you want you can cross-check with this, the same bit of text but passed through again for different shuffles: https://termbin.com/6bcy
[07:38:29] <Compu-Celebi> It did not refer to any particular portion of the code.  As I said, I have not examined it.
[07:38:35] <Gustavo6046> Oh.
[07:38:59] <Gustavo6046> Are you referring to my original merge-shuffle proposal, then? I just went with a bog-standard Fisher-Bates at the end.
[07:39:20] <Compu-Celebi> I do not know what any of that is.
[07:39:31] <Gustavo6046> Shuffling algorithms.
[07:39:53] <Gustavo6046> Then what were you referring to by active/read/write offsets?
[07:40:01] <Gustavo6046> Oh wait
[07:40:06] <Gustavo6046> StringIO with different read and write positions?
[07:40:11] <Gustavo6046> Ohh, you're referring to seeks?
[07:40:29] <Compu-Celebi> Affirmative.
[07:40:35] <Gustavo6046> I was thinking that both the read and write offsets could be simultaneous active offsets, but used in separate circumstances (writing, and reading).
[07:40:52] <Gustavo6046> Of course this isn't possible if the underlying object (StringIO) only has one.
[07:41:06] <Gustavo6046> So I abandoned StringIO. A side effect of that is I tortured myself to get read() working lol
[07:42:12] <Jong> If a for loop in python is much slower than vectorized numpy operations, doesn't that mean that the clock-speed at which python steps through byte code is orders of magnitude slower than the clock speed at which native instructions are stepped through?
[07:44:20] *** Joins: pagnol (~user@014198154145.ctinets.com)
[07:45:08] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[07:45:42] <Gustavo6046> Jong: no, it just means the amount of machine code that ends up being run with each iteration of a Python loop is much bigger than the amount of underlying machine code executed with each individual operation run by Numpy.
[07:46:38] <Jong> Gustavo6046 but that effectively translates into a slower clock speed, if you want to think about python's execution model as a virtual machine, then it has a virtual clock speed
[07:49:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[07:49:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:50:32] <deltab> something like 50 MHz for me, on a CPU at 3.8 GHz
[07:52:46] <Gustavo6046> Broadcom network cards suck piss.
[07:52:46] <deltab> which is less than two orders difference
[07:58:26] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:a02a:538a:4bc3:dc64) (Ping timeout: 245 seconds)
[08:00:17] <sartan> .
[08:00:37] *** Joins: jazzy (~jaziz@172.58.39.111)
[08:01:20] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[08:01:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[08:01:52] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[08:03:25] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:03:32] *** Quits: Linux77 (~Linux7_7@186.233.182.243) (Ping timeout: 250 seconds)
[08:06:02] *** Joins: Maikel (~Maikel@130.61.63.136)
[08:07:49] <Jong> deltab  woah that's slow
[08:08:35] <deltab> not multiple orders of magnitude slower though
[08:08:58] <deltab> and I maximized the overhead for that
[08:09:07] <madduck> Has anyone actually successfully used the phonenumbers library by Google? Not only do I find its design whacky as, it also seems like the library cannot actually make sensible statements about whether a phone number is valid, or mobile, or national, or anything.
[08:09:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[08:09:33] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[08:09:36] <madduck> Whack design for sure. Seems like a C/Fortram programmer was told to use Python.
[08:09:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:10:20] <deltab> more time doing something useful means proportionally less time on overhead
[08:11:32] <deltab> that moves further from a 'clock speed' equivalent though, as operations aren't quantized to a particular timing cycle
[08:11:46] *** Quits: Jefren (~Jefren@70.35.66.152) (Ping timeout: 252 seconds)
[08:13:06] <kevr> There any super easy way to deduplicate k/v pairs of a dict based on .values()?
[08:13:32] *** Joins: Jefren (~Jefren@208.104.190.55)
[08:13:45] <kevr> I'd like .values() to be a unique set, but I don't want to dictate which key keeps the unique value if there are duplicate values.
[08:14:10] <deltab> madduck: this? https://github.com/daviddrysdale/python-phonenumbers
[08:14:13] <energizer> what type is the values kevr
[08:14:20] <kevr> {1: 'a', 2: 'a', 3: 'b'} => {1: 'a', 3: 'b'}.
[08:14:26] <kevr> energizer: The values are not builtin Python types.
[08:14:33] <kevr> I need a sort of comparator I can run.
[08:14:38] <energizer> kevr: are they mutable
[08:14:48] <kevr> They are.
[08:14:53] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:15:13] <kevr> energizer: Actually.. the types do have equality setup, so it should actually just work like python types.
[08:15:18] <kevr> Apologies.
[08:15:26] <kevr> (for this, at least)
[08:15:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:15:54] <energizer> in the case where they are mutable i cant think of anything short. use a for loop
[08:16:15] <kevr> What about the case where they're immutable?
[08:16:33] <energizer> swap the keys with the values and then swap them back
[08:16:51] <kevr> oh, interesting. is there a simple function that just does that?
[08:17:28] *** Joins: fikran (~fikran@user/fikran)
[08:17:34] *** Joins: comet23 (~comet23@user/comet23)
[08:18:09] <energizer> {{v:k for k,v in {v:k for k,v in d.items()}.items()} or something. i'm getting a "something's wrong" feeling because i've been doing python a while and i dont think i've ever seen this line before
[08:18:16] <deltab> dict({p[1]: p for p in {1: 'a', 2: 'a', 3: 'b'}.items()}.values())
[08:19:07] <energizer> extra { at the beginning there
[08:19:40] <energizer> anyway, use a for loop.
[08:19:41] <kevr> that's pretty sexy
[08:19:47] <kevr> that comprehension
[08:20:05] <kevr> alright, thanks guys.
[08:25:38] *** Quits: ente_ (~ente@p200300dc5f2e8500056745c22255634d.dip0.t-ipconnect.de) (Quit: WeeChat 3.2)
[08:28:35] *** Quits: zettabyte (~zettabyte@user/zettabyte) (Quit: Leaving)
[08:29:08] *** Joins: zettabyte (~zettabyte@user/zettabyte)
[08:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:33:28] *** Joins: upsala (~zcb@185.213.155.232)
[08:42:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:43:20] *** Quits: MCx (~MCx@user/mcx) (Quit: Client closed)
[08:44:19] *** Joins: wolfdale3 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[08:47:22] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[08:47:46] <zumba_addict> What could be the reason why pip won't honor /etc/pip.conf?
[08:49:27] *** Quits: comet23 (~comet23@user/comet23) (Ping timeout: 256 seconds)
[08:49:36] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[08:49:37] <dude-x> zumba_addict do you have pip 20.0?
[08:50:08] <dude-x> alternatively you can try export PIP_CONFIG_FILE=/path/to/pip.conf
[08:50:10] <zumba_addict> it wasn't built by our team but previous team that no longer exists
[08:50:22] <zumba_addict> i ran pip -v, didn't do anything
[08:50:59] <zumba_addict> there are 2 pip, /usr/bin and /usr/local/bin
[08:51:09] *** Quits: Mumm-Ra (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[08:51:19] <zumba_addict> what I really need to use is /usr/bin/pip
[08:51:35] <zumba_addict> ok I'll try that variable :)
[08:53:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[08:53:38] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:54:38] *** Quits: Jefren (~Jefren@208.104.190.55) (Ping timeout: 260 seconds)
[08:54:47] <zumba_addict> using /usr/bin/pip failed https://bpa.st/6VCA. But works if I use /usr/local/bin/pip
[08:55:29] *** Joins: Jefren (~Jefren@70.35.67.56)
[08:55:42] <zumba_addict> The reason why I need to use /usr/bin/pip is because the /usr/bin/twistd command that is used to start the daemon/service is using /usr/bin/python rather than /usr/local/bin/python
[08:56:23] <zumba_addict> Could not fetch URL http://pypi.python.org/simple/: HTTP Error 403: SSL is required
[08:56:40] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[08:58:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 252 seconds)
[08:58:01] *** mIk3_09 is now known as mIk3_08
[08:58:15] <zumba_addict> I tried updating /usr/bin/pip, it still failed - https://bpa.st/GBXA
[08:59:35] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:00:23] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[09:00:47] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[09:01:27] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[09:01:54] *** Joins: cqi (~cqi@2408:8207:2525:7450:f4b5:5d6:a202:f038)
[09:02:33] <zumba_addict> This is the version - pip 1.1 from /usr/lib/python2.7/dist-packages (python 2.7)
[09:02:58] *** Quits: Jefren (~Jefren@70.35.67.56) (Ping timeout: 252 seconds)
[09:02:58] <zumba_addict> looks like that version is too old
[09:03:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[09:04:44] <zumba_addict> How come, pip version 20 cannot install these modules 1) Twisted-Conch 2) Twisted-Core and my more
[09:04:49] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 265 seconds)
[09:04:54] *** Joins: Jefren (~Jefren@70.35.66.90)
[09:06:22] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[09:06:28] <zumba_addict> This is what happens when I used `/usr/local/bin/pip install Twisted-Conch` https://bpa.st/P42Q. It says "ERROR: Could not find a version that satisfies the requirement Twisted-Conch (from versions: none)"
[09:07:29] *** Joins: sgn (~sgn@user/sgn)
[09:10:36] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:13:53] *** Joins: Mumm-Ra (~Lando-Spa@user/lando-spacepimp)
[09:13:54] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:16:10] *** Quits: Jefren (~Jefren@70.35.66.90) (Ping timeout: 252 seconds)
[09:16:40] *** Joins: p-i-_ (~Ohmu@223.206.71.4)
[09:17:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 252 seconds)
[09:17:13] *** mIk3_09 is now known as mIk3_08
[09:18:01] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[09:18:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:18:47] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[09:19:09] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:19:23] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[09:19:50] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 260 seconds)
[09:20:07] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[09:20:45] *** Quits: p-i-_ (~Ohmu@223.206.71.4) (Remote host closed the connection)
[09:20:52] *** Joins: comet23 (~comet23@user/comet23)
[09:21:20] *** Joins: p-i- (~Ohmu@223.206.71.4)
[09:22:42] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 265 seconds)
[09:22:53] <comet23> why does my card class equal false on line 27?
[09:22:56] <comet23> https://bpa.st/VABA
[09:23:40] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 265 seconds)
[09:23:40] *** mIk3_09 is now known as mIk3_08
[09:23:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[09:24:04] *** Quits: y1n (~y1n@178.115.67.71.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[09:24:21] *** Joins: Jefren (~Jefren@70.35.67.167)
[09:25:48] <comet23> i'm getting a dict_keys(['clubs']) how do i access the value directly instead?
[09:26:12] <Repiphany> You probably don't want a list of dicts for suits anyway
[09:26:55] <comet23> what's a better way of doing it? the way i did it works and makes sense to me
[09:27:18] <Repiphany> Why not just one dict of suits
[09:27:37] <KirkMcDonald> Why not a list of (name, symbol) tuples?
[09:27:53] <comet23> aren't tuples immutable?
[09:28:03] <KirkMcDonald> Correct, they are immutable.
[09:28:20] <comet23> oh wait i would want each card to be immutalbe
[09:28:45] *** Joins: p-i-_ (~Ohmu@223.206.71.4)
[09:29:10] *** Quits: Jefren (~Jefren@70.35.67.167) (Ping timeout: 260 seconds)
[09:29:32] <stockholm> i read documentation (!) and in the third code block here https://docs.sympy.org/latest/modules/vector/examples.html they use Sys.i Sys.j and Sys.k . where do i j k come from?
[09:30:10] <energizer> comet23: get rid of the concept of suit_name. you could use tuples or @dataclass
[09:30:34] <comet23> but i'm passing that into a class
[09:30:45] <Repiphany> Enum
[09:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:30:55] <comet23> sorry this is my first big project if i sound argumentative i'm not trying to argue i'm trying to understand
[09:31:21] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 245 seconds)
[09:31:25] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:31:27] <energizer> good call Repiphany
[09:31:31] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:31:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:32:12] <Repiphany> It's probably not useful to have ranks being a mix of ints and strings (which is where enums come in)
[09:32:48] <KirkMcDonald> stockholm: They are part of that CoordSys3D class; they appear to represent the unit vectors in that coordinate space.
[09:32:49] <energizer> just count to 13
[09:32:59] <comet23> i'm not understanding why i should use enums or tuples but i'm going to blindly trust all of you :)
[09:33:26] <stockholm> thanks
[09:34:51] <energizer> comet23: blind trust is sometimes good, like now there are some experts here. earlier today someone was getting answers i thought were bad in here, and it's hard for newbies to tell the difference between experts and uh the other thing. i'm not sure we've come to a resolution on your particular situation tho.
[09:36:02] *** Joins: Jefren (~Jefren@70.35.66.181)
[09:36:10] <comet23> basically what i'm making is a tui blackjack game and i want it to utilize the dogecoin testnet on top of that
[09:36:21] <energizer> Repiphany: are you thinking an enum of all the cards, or an enum of the suits and enum of the ranks?
[09:36:24] <comet23> i'm going to be adding this project to my portfolio
[09:36:25] <domhnall> energizer: wouldn
[09:36:28] <domhnall> ooops..
[09:36:48] <domhnall> energizer: wouldn't someone (an expert) step in and correct the misinformation?
[09:36:48] <Repiphany> Separate for suits/ranks
[09:36:57] <comet23> but before i use a tui i have to make the logic work in a normal terminal i think right?
[09:37:06] *** Quits: LiftLeft (~LiftLeft@191.96.185.14) (Ping timeout: 260 seconds)
[09:37:14] <energizer> domhnall: sometimes they're busy or dont feel like getting involved
[09:37:20] <domhnall> ah...
[09:37:39] <KirkMcDonald> Man I remember playing DOS card games that used the cp437 box-drawing characters to represent the cards...
[09:38:22] <domhnall> bad side about that is, the misinformer may even believe they are giving good advice. dangerous ground. it's always good to be careful who/where you take information from though.
[09:39:06] <comet23> at the point i'm at i can't tell the difference between good and bad advice
[09:39:29] <comet23> i'd have to make a lot of mistakes and gain a lot of experience in order to get there
[09:40:22] *** Quits: Jefren (~Jefren@70.35.66.181) (Ping timeout: 252 seconds)
[09:41:25] <energizer> comet23: i think basically there are different viewpoints among smart people on how much of the program logic should be encoded into types
[09:41:30] *** Joins: rememberYou (~someone@user/rememberyou)
[09:41:38] <domhnall> comet23: what helps me is prior research and possibly mistakes that help guide my questions. though most of the queries I post are about code i can show and not extremely difficult for anyone to help with.
[09:42:32] <comet23> energizer i think as long as the programmer is mindful of what could potentially go wrong and goes in with that approach first he'll be fine?
[09:42:37] <domhnall> and something about 'program logic' often raises opinions... vs facts.
[09:42:53] *** Joins: Jefren (~Jefren@206.253.157.233)
[09:43:10] <energizer> there's the type-heavy people https://bpa.st/6VRA and the anti-type people (10, "♥")
[09:43:16] <comet23> i'd love to avoid every problem and not have code that breaks but i simply don't have the experience to pull that off
[09:43:20] <domhnall> anywho... just wanted to type something til vscode finished updating.
[09:44:23] <energizer> do people really do that Rank enum? that seems excessive
[09:44:48] <energizer> i dont even know how to do it actually
[09:44:48] <comet23> what is rank enum?
[09:45:01] <energizer> comet23: <energizer> there's the type-heavy people https://bpa.st/6VRA and the anti-type people (10, "♥")
[09:45:27] <comet23> yeah i see it i just don't understand what that means
[09:45:51] <energizer> i wouldn't do that. Repiphany are you sure that's what you meant?
[09:46:29] <Repiphany> It depends what you're trying to do with cards, but being able to compare rank and suit separately is useful in general
[09:46:41] *** Quits: seednode1 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:21] *** Joins: seednode1 (~seednode@user/seednode)
[09:47:36] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:47:41] <Compu-Celebi> comet23, are you familiar with the concept of enumerations in a computer programming context?
[09:47:42] <energizer> doesn't ordering depend on the game?
[09:48:17] <comet23> Compu-Celebi no
[09:48:51] <Compu-Celebi> https://en.wikipedia.org/wiki/Enumerated_type explains the concept and contains a subsection about Python.
[09:49:06] <domhnall> KirkMcDonald: hehe...yeah, WheelOfFortune was the best. That game started my journey into learning about computers. It stopped working one day.
[09:49:17] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: what)
[09:49:38] <comet23> Compu-Celebi is there a tl;dr version online?
[09:50:24] <comet23> i just started reading the article and i'm lost in the verbiage as it's talking about things i haven't experienced in a way i'm not able to understand
[09:50:28] <Compu-Celebi> https://docs.python.org/3.6/library/enum.html is the official Python 3.6 documentation's page about the built-in module that pertains to enumerations, `enum`.
[09:51:20] <comet23> okay that makes sense according to the docs it's a unique constant value that needs to be iterated over which is exactly what a suit is
[09:51:43] *** Joins: trashbird (~trashbird@user/trashbird)
[09:51:47] *** Joins: bSid (~bSid@139.5.242.41)
[09:51:49] <Compu-Celebi> Enumerations are of a special type in which labels, usually ones of the same form as variables, are associated with values, usually integers.
[09:52:32] <Compu-Celebi> Iteration is unnecessary.
[09:52:55] <bSid> why does python not allow len(), list() etc operation directly on integers?
[09:53:00] <comet23> how am i going to create a deck without iterating? should i just hard code everything in?
[09:53:34] *** Quits: jazzy (~jaziz@172.58.39.111) (Ping timeout: 252 seconds)
[09:53:56] <Compu-Celebi> I meant that iteration is unnecessary in order to use an enumeration.
[09:53:57] <ksu> bSid: which result would you expect?
[09:54:09] <Compu-Celebi> Iteration would probably be useful for whatever you are attempting to accomplish.
[09:54:12] <rindolf> bSid: they are not sequences
[09:55:36] <energizer> comet23: an Enum type is a type that only allows a certain set of values
[09:55:45] <bSid> ksu list('abc') is ['a','b','c'] but  if I need to convert 123 into [1,2,3] I would need to do list(map(int,str(n))).
[09:55:46] <energizer> comet23: i might do like this, if i were going type-heavy https://bpa.st/HARA
[09:56:30] <energizer> comet23: the low-types way is what KirkMcDonald said, just using tuples like (9, "♣️")
[09:57:01] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[09:57:03] <comet23> i think i like low types better because it seems easier to understand and work with as a beginner
[09:57:10] <comet23> your code looks more organized and professional
[09:57:25] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[09:57:35] <ksu> strings and integers are different concepts
[09:57:42] <comet23> this is a hard choice i think i should go with your code energizer
[09:57:47] <ksu> it would be possible to conflate them
[09:58:02] <comet23> oh boy my head is about to explode haha
[09:58:08] <ksu> but at a cost of unexpected behavior
[09:58:21] <Compu-Celebi> Generating a sequence that represents an entire deck can be accomplished by using `itertools.product`.
[09:58:28] *** Quits: Jefren (~Jefren@206.253.157.233) (Ping timeout: 252 seconds)
[09:58:53] <Compu-Celebi> The set of an entire deck's cards is the Cartesian product of the set of all ranks and the set of all suits.
[09:58:56] <domhnall> comet23: what's the dogecoin testnet thing you mentioned?
[09:59:02] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[09:59:37] <comet23> domhnall basically it's a way of using dogecoin to test like those test visa transactions it's all dummy data but it works over the network and it's basically the real thing but for devs
[09:59:39] <energizer> comet23: i was gonna say earlier but got distracted: i usually try to avoid having different types in a list. so eg i wouldn't use int for some ranks and str for others. use int (counting up to 13)
[09:59:48] <domhnall> energizer: yeah I like the tuples way too...easily read and understood.
[09:59:50] <energizer> or use str for all
[09:59:52] <Compu-Celebi> That makes direct iteration (for example, with `for`) unnecessary.
[10:00:08] <domhnall> comet23: ah...without the contracts?
[10:00:25] <comet23> i don't know how it works but i think there are contracts but it's all mock stuff
[10:00:29] *** Quits: bSid (~bSid@139.5.242.41) (Quit: Client closed)
[10:00:31] <energizer> and then convert between string and int when it's needed in the program, but generally you want to know what type of object is in certain variable
[10:00:42] <domhnall> comet23: cool
[10:00:45] <comet23> it's using a separate blockchain network
[10:00:46] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:00:57] <pr100> emacs / elpy is repeatedly giving: `error in process sentinel: elpy-rpc--default-error-callback: peculiar error: "exited abnormally with code 1"` - I've tried googling but none of the suggested fixes help - any ideas?
[10:01:00] <KirkMcDonald> Converting 123 into [1, 2, 3] can also be done with math; converting to a string is not necessary.
[10:01:01] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:01:08] <comet23> so like you can declare your wallet to have a million bitcoin if you have a bitcoin testnet and keep testing it like that
[10:01:22] <comet23> if i understand correctly
[10:01:34] <energizer> comet23: just so you hear the other side, what you called looking "professional" could easily be called "unnecessary complicated boilerplate"
[10:02:21] <comet23> to me professional code reads like english, is well structured, and looks like they've put in effort into writing it
[10:02:35] <comet23> so having a lot of different classes that do "magic" is something i'd consider professional
[10:03:03] <comet23> i haven't seen better looking code than this project... https://github.com/rapid7/metasploit-framework
[10:03:30] <domhnall> comet23: that's ruby though
[10:03:41] <comet23> i think the idea would apply to any language
[10:04:08] <domhnall> yeah...they were considering doing that in perl and python. I think someone actually started in perl (maybe first)
[10:04:55] <comet23> i strive for my code to look like that someday
[10:05:29] <domhnall> heh...dude, HD is a genious and rare type of programmer/developer. But it's possible.
[10:06:16] *** Joins: mickey8 (~user@user/mickey)
[10:07:05] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Read error: Connection reset by peer)
[10:07:27] <Compu-Celebi> domhnall, did you intend to spell "genius" with an o?
[10:07:52] <comet23> i think english might not be his first language because i thought genius was spelled genious when i first learned english
[10:07:53] <domhnall> Compu-Celebi: nope.
[10:08:13] <domhnall> comet23: English isn't my first language.
[10:08:22] <comet23> why isn't genius spelled as genious though
[10:08:35] <energizer> that is a good question comet23
[10:08:35] <comet23> domhnall it's not mine either
[10:08:43] <domhnall> because soe genius decided they didn't need the o.
[10:08:49] <comet23> LOL
[10:08:50] <energizer> ayyyy domhnall
[10:08:50] <domhnall> ugh...im done!
[10:09:15] <Compu-Celebi> "Genius" is a loanword from Latin.
[10:10:22] <comet23> i'm very lost and i appreciate all of your help but i think my best way forward right now is to just write working code and then fix it later because if i don't do anything now it'll never get done
[10:11:11] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[10:11:26] <Compu-Celebi> The Latin word is ultimately from Proto-Indo-European, perhaps via the Old Latin word "geno," which can translate as "beget," "produce," or "cause."
[10:11:38] <KirkMcDonald> Really it's just that English is terrible.
[10:12:03] <comet23> what i hate about english is the way you pronounce a word slightly differently it becomes a noun vs a verb
[10:12:22] <comet23> like produce could be groceries or produce could be something you do
[10:12:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[10:12:42] <Compu-Celebi> I dislike that English words can be of multiple lexical categories.
[10:12:47] *** Joins: rendar (~rendar@user/rendar)
[10:12:58] <energizer> i like that too Compu-Celebi
[10:13:01] <Compu-Celebi> It is already sufficiently problematic that many English words have multiple definitions.
[10:13:04] <energizer> i like that too comet23 i mean
[10:13:08] <KirkMcDonald> Also "project" as in a thing you work on and "project" as in a thing you do with a projector.
[10:13:09] *** Joins: Jefren (~Jefren@70.35.67.216)
[10:13:10] <Compu-Celebi> These and many other issues are why I am a Lojbanist.
[10:13:13] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:c44:f4e0:3261:4955)
[10:13:26] <KirkMcDonald> But really I can just link this and have done: https://ncf.idallen.com/english.html
[10:13:31] <comet23> what do you like energizer?
[10:13:54] <energizer> comet23: oh i see now you said you hate that. i like that!
[10:13:54] <pr100> English is extremely irregular - lots of things don't really make any sense; you just have to accept that they are the way they are...
[10:14:42] <comet23> is that why programming is extremely irregular and doesn't really make any sense and why we must accept things for the way they are?
[10:15:05] <Compu-Celebi> Programming is not irregular.
[10:15:05] <KirkMcDonald> With programming it's mostly that computers are extremely stupid.
[10:15:24] <pr100> programming *languages* are typically very regular - well defined syntax and semantics...
[10:15:27] <Compu-Celebi> For one thing, programming languages have a formal grammar.
[10:15:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:15:36] <Compu-Celebi> So does Lojban, by the way.
[10:15:46] <energizer> python aint regular
[10:15:56] *** Joins: mickey8 (~user@user/mickey)
[10:16:06] <comet23> english has formal grammar
[10:16:07] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:16:09] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[10:16:42] <KirkMcDonald> comet23: It really doesn't. Not in the computer science sense.
[10:16:46] <energizer> it may have one but i dont think anybody's written it down
[10:16:57] <pr100> you can formalise a lot of sentence structures, but in the wild lots of people use all kinds of idioms and inconsistencies
[10:17:05] <energizer> (and nobody ever will)
[10:17:11] <Compu-Celebi> English's grammar is not formal and is certainly not a CFG or a PEG, for example.
[10:17:27] <comet23> but the way programmers implement things have all kinds of idioms and inconsistencies just look at my code
[10:17:40] <Compu-Celebi> Its morphology additionally interferes with machine parsing.
[10:17:49] <KirkMcDonald> comet23: Sure, but that's not a matter of grammar.
[10:17:55] <Compu-Celebi> That is a matter of code style.
[10:18:07] <pr100> This is in part why modern language processing and generation is pretty much all probabilistic
[10:18:49] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[10:18:51] <Compu-Celebi> Such inconsistencies can be minimized by conforming with, for example, the guidelines that have been established by PEP 8.
[10:20:02] <comet23> i don't think anyone follows the pep 8
[10:20:28] <comet23> it's like rfcs not everyone is going to implement the code to the spec of the rfc
[10:20:41] <KirkMcDonald> It's pretty common. At a minimum, most Python style guides use PEP-8 as a starting point.
[10:20:43] <Compu-Celebi> I follow it.
[10:21:00] <KirkMcDonald> Perhaps adjusting things like indentation width or line length limits.
[10:21:01] *** Joins: mei (~mei@user/mei)
[10:21:03] <comet23> i meant to say everyone instead of anyone
[10:21:18] <Compu-Celebi> I have been doing so for a few years, since at most a few hours after I discovered it.
[10:21:24] <ksu> most python code mostly follows it :P
[10:21:33] <Compu-Celebi> I spent approximately several days to modify all of my code to conform with it.
[10:21:57] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:22:19] <KirkMcDonald> I will say that I've come to appreciate the way it works in Go, where gofmt is the ultimate arbiter of what proper style looks like.
[10:22:20] <pr100> teams typically use linters to enforce an agreed style - mostly so that you don't have to argue about such things in merge requests :)
[10:22:44] <comet23> that's sad
[10:22:53] <energizer> https://black.readthedocs.io/ +1
[10:22:58] <Compu-Celebi> comet23, what is?
[10:23:12] <KirkMcDonald> I know there are style enforcers for Python (like Black, yeah), but I haven't really adopted them.
[10:23:14] *** Quits: Jefren (~Jefren@70.35.67.216) (Ping timeout: 245 seconds)
[10:23:21] <comet23> people having to resort to blame a computer rather than communicate their concerns
[10:23:41] <comet23> go argue with the computer not me
[10:23:44] <pr100> it's just easier - you can focus on the stuff that matters
[10:24:13] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[10:24:48] <KirkMcDonald> I think my main annoyance with Python code formatters (which is not shared by gofmt) is that they adhere to PEP-8's line length limits, and then need to invent rules about how to do that.
[10:24:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[10:25:05] <KirkMcDonald> Which makes it nigh-impossible to predict what it will do with a given line.
[10:25:23] <KirkMcDonald> And it annoys me that I can't actually write code compliant with the enforced style.
[10:25:37] *** Joins: Jefren (~Jefren@70.35.66.201)
[10:26:03] <Compu-Celebi> You are referring to blaming a computer for what and communicating concerns about what?
[10:26:03] <energizer> black goes 88
[10:26:18] <comet23> will adding a blackjack game to my portfolio with awful code structure be enough to get me an entry level job?
[10:26:48] *** Joins: fikran (~fikran@user/fikran)
[10:27:03] <KirkMcDonald> I mostly prefer having no explicit maximum line length.
[10:27:49] <energizer> KirkMcDonald: how long do you go?
[10:28:35] <KirkMcDonald> I rarely write long lines for their own sake. But I don't format the code in compliance with a max column count; I focus on what reads best.
[10:29:05] <energizer> i think there's something to be said for accommodating narrower window sizes
[10:29:09] <ksu> generally, the only limits that make sense is 79 chars or unlimited
[10:29:27] <KirkMcDonald> I tend to edit in vim, which does something sensible (I think) to wrap lines.
[10:29:43] <KirkMcDonald> Visually, I mean.
[10:30:15] *** Joins: bmg505 (~leon@8ta-146-17-205.telkomadsl.co.za)
[10:30:30] <energizer> i guess you get used to softwrapped lines if you operate that way regularly
[10:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:30:38] *** Parts: bmg505 (~leon@8ta-146-17-205.telkomadsl.co.za) (Leaving)
[10:30:47] <KirkMcDonald> Been operating that way for decades at this point, heh.
[10:31:00] <comet23> what would you add to a portfolio for an entry level position?
[10:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:32:01] <KirkMcDonald> comet23: Some sort of open source project, perhaps.
[10:32:24] <comet23> so if i put this game on github it counts?
[10:32:31] <comet23> counts as open source i mean
[10:33:00] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[10:33:05] <Compu-Celebi> It is not rare for my Python instructions to be sufficiently long to require at least a few lines to conform with the PEP 8 guidelines.
[10:33:10] *** Quits: Jefren (~Jefren@70.35.66.201) (Ping timeout: 252 seconds)
[10:33:20] <pr100> if you're working on code that only you're going to touch then, of course, you do exactly as you wish... if you're working on code with a team, then IME it's just easier if you have an agreed style - doesn't really matter what it is, just that everyone uses it
[10:33:27] <KirkMcDonald> comet23: It's less about checking a box than about having something to show that is relevant to your prospective audience.
[10:33:48] <energizer> comet23: yeah what kind of company
[10:33:57] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:68a8:7f6b:10c0:1405)
[10:34:00] <comet23> idk anything that is hiring remotely because i'd hate to commute anyhwere
[10:34:17] <be3uykpy> github
[10:34:18] <comet23> but if i have to work at an office in the beginning to become a better programmer so be it
[10:34:20] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:1115:e06d:eb09:5d18) (Quit: Leaving)
[10:35:02] *** Joins: Jefren (~Jefren@70.35.66.113)
[10:35:20] <Compu-Celebi> Many such instructions contain one or more comprehensions and/or one or more ternary expressions.
[10:36:28] <KirkMcDonald> I find that a lot of the time, if a line is drifting off past the 80 column mark, that something can be made simpler.
[10:36:49] <KirkMcDonald> But sometimes you just have to.
[10:37:19] <ksu> Compu-Celebi: if you do that, splitting them out and giving them a name usually makes the code clearer
[10:38:01] <Compu-Celebi> Elucidate "giving them a name."
[10:38:25] <ksu> making a temporary variable
[10:38:38] <KirkMcDonald> Split the large expression at some point, and assign that portion to a variable.
[10:38:51] <ksu> or a function
[10:39:10] <energizer> instead of `if x & y | z > 9`, you can `should_launch_missiles = x & y | z > 9; if should_launch_missiles: launch_missiles()`
[10:39:11] <KirkMcDonald> Or reframe the comprehension as a for loop.
[10:39:37] <Compu-Celebi> I conjectured correctly, but you said "name" and variables are not names.
[10:39:46] <KirkMcDonald> Python variables are exactly names.
[10:40:05] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[10:40:18] <Compu-Celebi> Variables are more like memory locations.
[10:40:19] *** Quits: Jefren (~Jefren@70.35.66.113) (Ping timeout: 245 seconds)
[10:40:27] *** Quits: comet23 (~comet23@user/comet23) (Quit: Client closed)
[10:40:30] <KirkMcDonald> Python has its own conception of such things.
[10:41:07] <pr100> in python they're very much like keys in a dictionary that point at a memory location
[10:41:40] <ksu> when i first discovered functional programming, i did use a lot of multi-line monster expressions
[10:42:08] *** Quits: Trashlord (~trash@user/trashlord) (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
[10:42:10] <ksu> which were fun to write but less fun to understand :)
[10:42:25] *** Joins: Jefren (~Jefren@70.35.66.180)
[10:42:30] *** Trashlord__ is now known as Trashlord
[10:42:53] <ksu> splitting them into named components helps greatly
[10:43:11] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[10:43:34] <Compu-Celebi> Variables are still abstractions that are associated with a name.
[10:44:14] *** Joins: metaace (~metaace@user/metaace)
[10:44:34] *** Joins: _xor (~xor@72.49.199.147)
[10:44:44] <habnabit_> was that in question?
[10:45:15] <Compu-Celebi> It supports my point that variables are not themselves names.
[10:45:43] <habnabit_> Compu-Celebi, what is a variable if not a name
[10:45:46] <KirkMcDonald> The words are synonyms in Python.
[10:46:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 265 seconds)
[10:46:48] <Helle> given that you cannot get a reference to a bare variable, yep
[10:47:14] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[10:47:43] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[10:47:46] *** Quits: seednode1 (~seednode@user/seednode) (Quit: Ping timeout (120 seconds))
[10:47:58] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:48:03] <ksu> i wouldn't say they are synonyms, variable has name and value
[10:48:05] *** Joins: seednode1 (~seednode@user/seednode)
[10:48:05] <rendar> is there a way to do this https://bpa.st/ISYA -- with only 1 operation and creating only 1 list?
[10:48:23] <KirkMcDonald> ksu: A name has a name and a value as well, really.
[10:48:32] <habnabit_> rendar, what, get `r` from `a`?
[10:48:34] *** Quits: Jefren (~Jefren@70.35.66.180) (Ping timeout: 252 seconds)
[10:48:48] <rendar> yes, with a's keys ordered
[10:49:01] <rendar> habnabit_, how are you? i didn't see you often, lately
[10:49:08] <habnabit_> rendar, i'm fine
[10:49:58] <Repiphany> rendar: [item[1] for item in sorted(a.items())]
[10:50:07] <KirkMcDonald> rendar: You ultimately need some way of getting the key, given the value. So it's easiest to do that in two steps.
[10:50:10] <habnabit_> rendar, you can't meet all your constraints without creating >1 list or having >1 line
[10:50:26] <rendar> ok
[10:50:44] <KirkMcDonald> That approach using sorted() is perhaps the most compact, but it is indeed still making a second list.
[10:50:44] <rendar> Repiphany, sorted() creates a list internally
[10:50:45] <Repiphany> (creates list inside with sorted but kinda unavoidable?)
[10:50:46] <habnabit_> rendar, if it would be possible in one of each, it would be an extremely unreadable and/or slow method of completing the task
[10:51:02] <rendar> habnabit_, ok i agree
[10:51:10] <KirkMcDonald> Oh, sure, you could do it in quadratic time.
[10:51:52] <habnabit_> rendar, i would make two lists; sorted + list comp
[10:51:55] *** Joins: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr)
[10:52:20] <rendar> ok
[10:52:27] <rendar> also Repiphany's solution is not bad, `[y for x,y in sorted(a.items())]`
[10:52:35] <hexnewbie> rendar: If those are priorities, wouldn't it make more sense to have the priorities be the values, and the items - the keys? That way you could repeat a priority (3), but not an item ('www'). prio = {'www': 0, 'cc': -30}; sorted(prio, key=prio.get)
[10:52:53] <rendar> hexnewbie, nope it won't
[10:53:30] <rendar> hexnewbie, they are not only priorities but timeseries of a timeline, it's complicated, they can't be values
[10:53:43] <KirkMcDonald> I am compelled to point out that using sorted() with a key function is internally making an additional list.
[10:53:44] <rendar> also because i may have duplicates, "www", "www" and so on
[10:54:06] <rendar> KirkMcDonald, lol.. really? why?
[10:54:20] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:54:24] <KirkMcDonald> That's how the key function works. https://en.wikipedia.org/wiki/Schwartzian_transform
[10:54:33] <habnabit_> rendar, to store the key function's result
[10:55:01] *** Quits: apteryx (~maxim@dsl-152-183.b2b2c.ca) (Ping timeout: 265 seconds)
[10:55:38] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 265 seconds)
[10:55:50] <madduck> deltab: yeah, that's the one.
[10:55:51] <rendar> sorted+key will make 2 lists?
[10:56:03] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[10:56:23] <KirkMcDonald> It returns *a* list. Some other stuff happens inside, that honestly isn't that relevant to the user.
[10:56:24] <habnabit_> rendar, it makes a list to collect its iterable input into, and a list of the same length to store k(x) for x in L
[10:56:46] <hexnewbie> Hmm, sorted(d.items()) feeds my OCD. It cannot ever theoretically fail if values of different types are found, because the keys are always different, but still passing uncomparable tuples to sorted() makes me uncomfortable.
[10:57:09] *** Joins: Jefren (~Jefren@70.35.66.70)
[10:57:09] <habnabit_> hexnewbie, what part is uncomparable
[10:57:25] *** Joins: palasso (~palasso@user/palasso)
[10:57:31] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[10:57:41] <hexnewbie> habnabit_: E.g. if you have sentinels: {0: 'www', 3: None}
[10:58:07] <KirkMcDonald> hexnewbie: Eh, it's still a sensible total order, it's fine.
[10:58:19] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[10:58:33] <habnabit_> hexnewbie, it's true; python unfortunately is pretty anemic when it comes to interesting types like Option<T> vs Option<Option<T>>
[10:59:59] <hexnewbie> Even in Python 2 I did sorted(d.items(), key=itemgetter(0)) unnecessarily, because it described what I was *looking* for, as opposed to what gives me the same result.
[11:00:12] <hexnewbie> Well, that would be iteritems() then, but still
[11:00:28] <habnabit_> either way
[11:00:34] <Compu-Celebi> If Python variables are names, they are not actually named, because nothing can be its own name.
[11:00:54] <KirkMcDonald> Compu-Celebi: I honestly have no idea what you're going on about at this point.
[11:01:22] <habnabit_> Compu-Celebi, what other programming languages are you familiar with?
[11:01:44] <Repiphany> I guess it's possible to have dictionary keys that wouldn't be totally ordered
[11:01:47] *** Quits: Jefren (~Jefren@70.35.66.70) (Ping timeout: 265 seconds)
[11:02:07] <habnabit_> Repiphany, it's true; they only need hash and equality
[11:02:10] <KirkMcDonald> Repiphany: Oh, certainly. But that would be a different problem, then.
[11:02:11] <Repiphany> `keys = [frozenset([1]), frozenset([2])]; sorted(keys) == sorted(reversed(keys)) # False`
[11:02:36] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[11:02:42] <habnabit_> Repiphany, you can actually see this with {-1, -2} vs. {-2, -1}
[11:02:49] <Compu-Celebi> GW-BASIC, QBasic, Visual Basic, x86 assembly language, C, and Common Lisp, in order of when I commenced studying them.
[11:03:57] *** Joins: Jefren (~Jefren@70.35.67.16)
[11:04:34] <KirkMcDonald> Repiphany: Like at that point I start asking why you're sorting a list like that, heh.
[11:05:10] <hexnewbie> From a practical perspective, the variables are accessed by name, but don't have a name associated *with* them, e.g. HelloWorld = namedtuple('HelloWorld', 'x y z') # cannot infer its own class name, it needs to get it explicitly or from a class statement. So the name is a one-way street
[11:05:19] <Repiphany> I mean if they were keys of a dictionary for whatever reason, trying to sort the items would also depend on insertion order
[11:05:44] <habnabit_> hexnewbie, (don't use namedtuple if at all possible anyway)
[11:06:20] <habnabit_> Repiphany, eh? insertion order _is_ the ordering; it has nothing to do with sorts
[11:06:52] <KirkMcDonald> hexnewbie: In this sort of context, it's important to not confuse the variable with the object. The *object* doesn't have a name associated with it.
[11:07:16] <Helle> oh hell, do I need to get my Programming 101 lecture out ?
[11:07:31] <Repiphany> sorted(d.items()) isn't guaranteed to give the same result even if all the items are the same
[11:07:50] <KirkMcDonald> "Variable" is sort of a loaded term, in that any given language is going to have its own idea about what the word means.
[11:07:52] <Repiphany> for two dictionaries that may have identical entries, I mean
[11:07:54] <habnabit_> Repiphany, that's true of any ordered collection
[11:08:01] *** Joins: apteryx (~maxim@dsl-10-136-160.b2b2c.ca)
[11:08:01] <habnabit_> Repiphany, ordered doesn't imply sorted
[11:08:18] <Helle> both of you are correct, it is just a POV thing, esp with how Python is
[11:08:24] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:fcdf:2d93:709e:7090)
[11:08:42] <hexnewbie> habnabit_: I do use namedtuple somewhat more liberally than I should, as it used to save me typing, though I was more thinking of my own callable descriptors that cannot infer their __name__, but chose to give a stdlib example for clarity.
[11:08:54] <Repiphany> Yes, I was just having a re-realization coming off the above dictionary sorting conversation
[11:08:58] <KirkMcDonald> Repiphany: I think this just reduces to "Python's sort is stable."
[11:09:03] <habnabit_> hexnewbie, if you must be stdlib only, use dataclass
[11:09:04] *** Quits: Jefren (~Jefren@70.35.67.16) (Ping timeout: 245 seconds)
[11:11:21] *** Joins: Jefren (~Jefren@206.253.157.212)
[11:11:41] <pr100> ordered vacuously implies sorted with respect to the ordering :)
[11:12:01] <KirkMcDonald> Boo.
[11:12:15] <habnabit_> pr100, that tautology sure is tautological
[11:13:27] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:13:59] <hexnewbie> Yeah, dataclass is what I would instead use now in a new project, but most of the projects I'm maintaining were written before I had that available, and, like, using dataclass for the single new type I add in a year seems odd.
[11:14:28] <habnabit_> hexnewbie, why? using the better version (attrs) i make classes way more often because it's way easier
[11:14:55] <habnabit_> hexnewbie, the boilerplate is why i always hated making classes, and this finally brings a lot of the convenience of rust types to python
[11:15:51] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:16:28] *** Joins: kosh (~kosh@user/kosh)
[11:17:06] <hexnewbie> At work? Servers still run Debian 9 with Python 3.5. At home? I still haven't even decided which versions of Python I should be supporting, though Python versions seem to be deprecated far sooner than I seem to be able to complete a project, so I might as well not keep myself from using them.
[11:17:31] <habnabit_> hexnewbie, yes! attrs supports even python 2.7. it's a fantastic library
[11:17:33] <hexnewbie> I code really really slowly
[11:17:36] *** Quits: Jefren (~Jefren@206.253.157.212) (Ping timeout: 245 seconds)
[11:17:36] *** Quits: Mumm-Ra (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[11:17:38] <KirkMcDonald> There exists such a thing in the world as a complete project?
[11:17:55] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:17:57] <habnabit_> hexnewbie, i highly recommend it. it's made a world of difference to my own code: attrs.org
[11:18:35] <rindolf> KirkMcDonald: maybe: https://perl.plover.com/yak/12views/samples/notes.html#sl-9
[11:19:45] *** Joins: Jefren (~Jefren@70.35.67.217)
[11:20:05] <hexnewbie> KirkMcDonald: Maybe! We have a 80000 line company project in which the only commit in the last 3 years has been the addition of a py3 branch. (Although the ‘complete’ here implies ‘works’, not ‘is bug-free’)
[11:20:17] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 265 seconds)
[11:20:44] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[11:21:18] <pr100> There are always things that could be done... it's a question of what the business priorities are
[11:22:05] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:22:40] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[11:23:07] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:24:58] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[11:25:06] *** Quits: Jefren (~Jefren@70.35.67.217) (Ping timeout: 245 seconds)
[11:25:10] <hexnewbie> habnabit_: Oh, thanks.
[11:25:19] <ChrisWarrick> hexnewbie: upgrading language/library versions while a project is ongoing is common and normal
[11:26:16] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:27:08] *** Joins: Jefren (~Jefren@70.35.67.158)
[11:27:54] <hexnewbie> ChrisWarrick: I mean, we have two large company projects that don't see any changes *other* than that (even if the larger of the two them needs them), and I have one personal one where I *wish* I had stopped adding code around 2018 (I had mostly completed it in ~three months, and then kept adding features for the next four years, hence my hesitation to now convert stuff *from* namedtuple)
[11:28:07] <hexnewbie> s/two them/two/
[11:29:10] <Compu-Celebi> It still seems to me that calling variables "names" is analogous to calling objects by their types, colors, or whatnot.
[11:29:25] <hexnewbie> There's a moment where you need to go from ‘stop playing with the code’, and ‘mark it done and start fixing any bugs that pop up’
[11:29:38] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:29:48] <deniska> the best part is removing code
[11:30:33] <habnabit_> Compu-Celebi, what are the other things in the category with 'names' re: 'variables' then
[11:30:39] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:30:54] <be3uykpy> a bit off topic but do you guys know of any site that offers free SVGs that can be used with opensource projects?
[11:31:12] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:31:21] <pr100> hexnewbie: I'm not sure there is such a need in general. If you're in a commercial context, then there are no doubt things that people can think of which would add value. Whether or not those things every get done depends on comparison with other things that people could be spending their time on
[11:31:34] *** Quits: Jefren (~Jefren@70.35.67.158) (Ping timeout: 245 seconds)
[11:31:50] <Compu-Celebi> Some examples are "identifiers" and "labels."
[11:31:59] <hexnewbie> Compu-Celebi: That was a colloquial explanation, although one very close to the reality, since the variable in Python is just that - assigning a nae to the reference, or creating a name that holds the reference, not an exhaustive description of the spec or implementation.
[11:32:09] <habnabit_> Compu-Celebi, sure
[11:32:23] <habnabit_> Compu-Celebi, i don't think anyone was disagreeing with that
[11:33:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[11:33:15] <hexnewbie> Compu-Celebi: Still, the variable in Python is just that: A lookup-capable name and a reference to an object (whereas an object is type and data, e.g. dictionary or other namespace container)
[11:33:21] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:33:29] *** Joins: Jefren (~Jefren@70.35.67.239)
[11:35:13] <pr100> if you think of variables as a bit of syntactic sugar for setting or getting in an implicit "variables" dictionary, it's not far wrong.
[11:36:09] <deniska> We call them "names" to distinguish python from languages with a different data model in which variables might be "boxes" which actually hold data
[11:36:44] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:00] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:37:28] <hexnewbie> It's even true when we're talking about instance variables (which are literally a dictionary in 95% of the time), and even class variables (which are backed by dictionaries 100% of the time, and presented as a special dictionary proxy)
[11:37:38] <hexnewbie> even *more* true
[11:38:02] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[11:40:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:21] <hexnewbie> global variables are also a dictionary, and local ones are only not one for performance reasons (albeit that leads to a change in functionality: you can't add new ones dynamically)
[11:41:40] <pr100> in cpython at least
[11:41:47] <deniska> also you can't use `import *` inside a function
[11:41:52] *** Quits: Jefren (~Jefren@70.35.67.239) (Ping timeout: 252 seconds)
[11:42:08] <habnabit_> (don't use `import *` anyway)
[11:42:55] <deniska> Inside a function it'd be a semi-sane usage
[11:43:24] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:43:39] <hexnewbie> I thought import * was implemented by having __import__ play with the locals(), hence import * failing for the reason that you cannot add dynamic variables to locals()
[11:43:57] *** Joins: Jefren (~Jefren@70.35.67.94)
[11:44:26] *** Quits: hnOsmium0001 (uid453710@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:44:39] <Compu-Celebi> I have noticed people commonly phrasing statements of what a property of an object is as if they were stating that the object is the property.  For example, people are more likely to say, "Pikachu are electric types," instead of, "Pikachu's type is electric," or, "Pikachu are of the electric type."
[11:45:18] <Compu-Celebi> The former sentence is erroneous, because Pokémon are not their types.  They are of their types.  They have one or more types.
[11:45:31] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[11:45:42] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:46:17] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[11:47:58] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:48:36] <deniska> hexnewbie: it's just a SyntaxError
[11:49:02] <hexnewbie> Compu-Celebi: In English ‘is’ can both refer to subsumption (subtyping), and instantiation. E.g. ‘the duck is a bird’ is subsumption (subtype), whereas ‘John is a human’ is not (John is just an instance of the class). Nobody says “John is of type human”
[11:51:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:51:15] <pr100> I think that possibly there's some confusion around the word "type" here. The Picachu example presumably isn't intended to say anything about what the type of the object is in the python sense of "type"
[11:51:45] <Compu-Celebi> "Human" does not denote a type but an object.
[11:51:46] *** Joins: georgios (~georgios@user/georgios)
[11:51:58] <Compu-Celebi> Do not confuse humans with the human species.
[11:52:30] <pr100> it depends on what you mean by "type" and "object"
[11:53:48] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:54:27] <Compu-Celebi> s/does not denote/denotes not/
[11:55:19] <Compu-Celebi> An erroneous counterpart of, "John is a human," is, "John is the human species."  Compare with, "John is of the human species."
[11:56:07] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[11:56:26] <hexnewbie> In Python, “L is a list” is a correct statement, even though L denotes an object (of type list), and list denotes a type (of type type)
[11:57:09] <hexnewbie> Well, unless we're talking about literal Python, where “L is list” would be false, but Python's ‘is’ is insanely restrictive compared to English 😜
[11:57:31] <habnabit_> python's `is` is entirely useless. i'm not even much of a fan of `x is None` anymore
[11:57:41] <Compu-Celebi> Most people who know what the correct answer to, "What is Miles 'Tails' Prower's species?" is would erroneously answer with, for example, "A fox," instead of, for example, "The fox species," or, "A species of fox."
[11:58:02] <pr100> and the vagaries of the English language mean that it's perfectly normal to say "John is human" rather than "John is a human"
[11:58:05] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[11:58:18] <hexnewbie> habnabit_: I use _sentinel=object(); default=_sentinel; if default is _sentinel: raise KeyError(key) sometimes
[11:58:18] <Compu-Celebi> "Human" happens to be both a noun and an adjective.
[11:58:27] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[11:58:31] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Read error: Connection reset by peer)
[11:58:37] <rendar> habnabit_, why?
[11:58:40] <Compu-Celebi> As unfortunate as that is, my points do not pertain to lexical categories.
[11:58:50] <habnabit_> hexnewbie, yeah, i'm not a fan of that either. its repr is horrible; i use an enum.Enum for sentiels these days
[11:58:53] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[11:59:12] <domhnall> random thought, what's the deal with help(class) not returning any documentation?
[11:59:16] <habnabit_> rendar, to which part?
[11:59:16] *** Quits: Jefren (~Jefren@70.35.67.94) (Ping timeout: 245 seconds)
[11:59:31] <habnabit_> domhnall, how could it? `class` is a keywor; not legal in that position
[11:59:32] <rendar> `is` is entirely useless. i'm not even much of a fan of `x is None` anymore
[11:59:34] <Compu-Celebi> Those strangely common linguistic errors are analogous to reification fallacies.
[11:59:42] <hexnewbie> I used to have a NamedConstant type in my first project (and do like _DEFAULT = NamedConstant('_DEFAULT')), but gave up on that pretty soon
[11:59:53] <habnabit_> rendar, do you need me to justify both parts or just one?
[11:59:56] <domhnall> habnabit_: is 'str' a keyword?
[11:59:59] <habnabit_> domhnall, no
[12:00:02] <domhnall> or just a type?
[12:00:06] <rendar> habnabit_, both :)
[12:00:07] <habnabit_> domhnall, it's a type
[12:00:12] <domhnall> hm
[12:00:13] <domhnall> ok
[12:00:44] <habnabit_> rendar, `is` does nothing useful; the only times it gets used it's overly specific or a mistake
[12:00:48] <rendar> domhnall, if your IDE highlights 'str' *as* a keyword, is because its a very basic type, just like int or float
[12:00:48] <Compu-Celebi> The value of `str` is essentially a class.
[12:00:56] <habnabit_> Compu-Celebi, types are classes
[12:01:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[12:01:09] *** mIk3_09 is now known as mIk3_08
[12:01:31] <habnabit_> rendar, i'd rather write `x == None` but linters complain
[12:01:38] <rendar> habnabit_, isn't used to check the instance vs. copy?
[12:01:49] <habnabit_> rendar, when would that be useful?
[12:02:20] <rendar> can't get a use case off-hand, but.. i think it could
[12:02:21] <rendar> :)
[12:02:33] <habnabit_> rendar, ok. i don't remember seeing any
[12:02:54] *** Joins: Jefren (~Jefren@70.35.67.208)
[12:03:11] <Compu-Celebi> Ah, the function `type` returns the class `type` when the sole argument is a class, confirming that types are classes.
[12:03:28] <habnabit_> Compu-Celebi, did you know that the type of type is type?
[12:03:41] <Compu-Celebi> I was uncertain of whether they were, but anything that is x is also essentially x.
[12:03:48] <Compu-Celebi> Therefore, my statement was accurate.
[12:03:53] <hexnewbie> ‘x is None’ vs ‘x == None’ solely depends on what you want to happen when some genius passes you an object whose __eq__ returns True for None, and should you assume they know what they are doing (and they do it on purpose), or assume they made a mistake. And that's something I'd rather not even *consider* when writing code, so I treat ‘== None’ and ‘is None’ more or less equivalently
[12:04:04] <domhnall> habnabit_: class type
[12:04:08] <Compu-Celebi> I actually phrased it to cover both possibilities.
[12:04:11] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:04:31] <habnabit_> domhnall, "class type"? what?
[12:04:41] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[12:04:54] <domhnall> habnabit_: that's is what 'type' returns... '<class type>
[12:04:56] <Compu-Celebi> I noticed that the function `type` returns the class `type` when the sole argument is any return value of the function.
[12:04:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[12:05:00] <hexnewbie> That is, I type ‘x is None’ because it's idiomatic, but wouldn't write some complex jumble just to avoid typing ‘x in [None, 4, 5]’
[12:05:03] <habnabit_> domhnall, type(type) is type
[12:05:38] <domhnall> oh type(type), i just typed type in the repl. I see what you're saying.
[12:06:40] *** Joins: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net)
[12:07:13] *** Quits: Jefren (~Jefren@70.35.67.208) (Ping timeout: 252 seconds)
[12:08:58] <Compu-Celebi> The fact that `type(type)` evaluates to the class `type` implies that no built-in function whose name is "`type`" actually exists.
[12:09:16] *** Joins: Jefren (~Jefren@70.35.67.185)
[12:09:20] <habnabit_> Compu-Celebi, type pretends to be a 1-arg function as well
[12:09:24] <habnabit_> Compu-Celebi, but it is a type, yes
[12:09:25] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Ping timeout: 252 seconds)
[12:09:56] <Compu-Celebi> What seemed to be a function is actually the class, which can be instantiated to ascertain what an object's type is.
[12:10:17] <habnabit_> Compu-Celebi, it doesn't instantiate anything when it's called like that
[12:10:37] <Compu-Celebi> A function is invoked, but it is an instantiation function.
[12:10:46] <hexnewbie> Compu-Celebi: A built-in function is just another kind of callable, such as a Python function, *a class*, or some callable object presented by a C++ wrapper library.
[12:11:00] <ksu> this is true of several other things documented in https://docs.python.org/3/library/functions.html
[12:11:03] <habnabit_> Compu-Celebi, actually incorrect; it bypasses those too soon to get to instantiation code
[12:11:11] <domhnall> maybe it's just news to me but, any type inside a f-string inside a help() method, the repl says no documentation for that type. interesting.
[12:11:18] *** Joins: han-solo (~hanish@user/han-solo)
[12:11:34] <hexnewbie> Compu-Celebi: If it quacks like a function, it is a function
[12:11:38] <habnabit_> domhnall, f strings aren't a particular type of string. they produce exactly the same kind of string object out
[12:12:03] *** Joins: l4yer (~15F21@213.232.87.181)
[12:12:06] *** Quits: l4yer (~15F21@213.232.87.181) (Read error: Connection reset by peer)
[12:12:09] *** Joins: B4re (~l4yer@213.232.87.181)
[12:12:17] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:12:29] <Compu-Celebi> Yet, `type(max)` but not `type(type)` evaluates to the class `builtin_function_or_method`.
[12:12:50] <habnabit_> Compu-Celebi, correct. there's some builtin things that are really just functions and nothing else
[12:12:58] *** Joins: manti7 (~manti7@176.10.104.94)
[12:14:24] <Compu-Celebi> https://docs.python.org/3.6/library/functions.html#type identifies `type` as a class but refers to it returning a value.
[12:14:36] <habnabit_> Compu-Celebi, yep
[12:14:46] <domhnall> well, that makes sense.
[12:15:03] <domhnall> and I really do mean that.
[12:15:25] *** Quits: Jefren (~Jefren@70.35.67.185) (Ping timeout: 252 seconds)
[12:15:52] <Compu-Celebi> Furthermore, that page is "Built-in Functions."
[12:16:26] <domhnall> still no issues I see
[12:17:07] <Compu-Celebi> Classes are not functions.
[12:17:15] <habnabit_> Compu-Celebi, it acts like one
[12:17:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:17:32] <hexnewbie> Compu-Celebi: The exact types in Python can be an implementation detail, and nothing in Python prevents something from being several things at once - an object can be a class/type, function-like *and* a sequence at the same time.
[12:17:40] *** Joins: Jefren (~Jefren@70.35.66.98)
[12:18:17] <ksu> compu-celebi: read about callable types in https://docs.python.org/3/reference/datamodel.html
[12:19:00] *** Phase_ is now known as Phase
[12:19:08] *** Joins: wender (~Wender@189.37.64.64)
[12:19:12] <ksu> it is a bit more formal :)
[12:19:37] <domhnall> oh yeah... love the datamodel
[12:19:47] <hexnewbie> Compu-Celebi: Furthermore, all classes do act like functions do (with additional features), and builtin functions are not a subclass of function. Extending your argument, builtin functions are *not* functions: https://bpa.st/HPKQ
[12:21:54] *** Joins: Pinchiukas (~keps@128.29.231.35.bc.googleusercontent.com)
[12:22:05] <Compu-Celebi> That is a bizarre design decision.
[12:22:24] *** Quits: computeiro (~Wender@189.37.67.116) (Ping timeout: 245 seconds)
[12:22:52] <Pinchiukas> If I want to poll a URL to refresh a token every 10 minutes and send a different request to check for data every hour or two, how would I implement that? Use sched or something else?
[12:23:13] <ksu> it is surprisingly practical
[12:23:42] <hexnewbie> Compu-Celebi: Nothing bizarre about it, type(), int() etc. used to be functions, they were made to be types/classes as well so they work better.
[12:24:03] <habnabit_> Compu-Celebi, backward compatibility etc
[12:24:09] <domhnall> Compu-Celebi: felt that way when ever using a language that allowed things like 'list() = 4'.
[12:24:09] <madduck> is it possible to evaluate f-strings in the context of a dict, i.e. I pass in a string to a function, which then renders it like an f-string given the dict? I am not talking about str.format, but specifically bout f-strings
[12:24:21] <habnabit_> madduck, no
[12:24:39] <habnabit_> madduck, other than calling eval, but that's kinda silly
[12:25:32] <Compu-Celebi> hexnewbie, I was referring to the decision to make the type of built-in functions not be a subclass of the regular function type.
[12:25:56] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[12:26:03] *** Joins: curiosity (uid507362@user/cypris)
[12:26:16] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[12:26:18] <habnabit_> Compu-Celebi, that's not what subtyping is for in python
[12:26:34] <han-solo> Pinchiukas: not sure if it's best, but you could use `signal.alarm` and then have the handler do the token refresh and save it somewhere ?
[12:26:55] <hexnewbie> Compu-Celebi: I don't remember the history on that, but *other* such types were deliberately decoupled (e.g. the type 'file' was removed, as was 'basestring'), as putting things with incompatible implementations into the same type makes zero sense in Python
[12:27:07] <madduck> habnabit_: yeah, I don't want eval
[12:27:11] <habnabit_> basestring was gibberish from the sart
[12:27:29] <Pinchiukas> han-solo: I'm hoping just making that request with 'requests' will save it in the session.
[12:28:16] <hexnewbie> Compu-Celebi: Builtin functions and functions are a completely different types of object, with no overlap in implementation, so it makes no sense for them to share a type.
[12:28:17] *** Joins: tonyz (~tonyz@user/tonyz)
[12:28:33] <madduck> With str.format, I cannot for the life of me figure out how to do an implicit int() conversion; '{myvar:d}' is invalid.
[12:28:44] <hexnewbie> They are more different than str and bytes.
[12:28:45] <habnabit_> madduck, not possible
[12:28:50] <habnabit_> madduck, you need to convert it first
[12:28:58] <han-solo> Pinchiukas: this is a common use case, somebody must have already done something better
[12:29:18] <han-solo> i see, people using decorator to do the refresh token handling, which seems nice :)
[12:29:21] <Compu-Celebi> Then, the regular function type's name should be more like "`user_defined_function`," instead of simply "`function`."
[12:29:45] <Pinchiukas> han-solo: better than what? :) My main problem is I don't know how to arrange the two periodic function calls to happen in Python.
[12:29:55] <habnabit_> Compu-Celebi, why? nobody needs to use the type of a function to begin with
[12:30:01] <Pinchiukas> My best idea so far is to start a couple threads which make the calls and then sleep().
[12:30:10] <ksu> compu-celebi: also remember that python has virtual subclassing
[12:30:18] <Compu-Celebi> Choosing the latter name is as moronic as calling Minecraft calling unpolished diorite simply "diorite," not distinguishing it from polished diorite.
[12:30:26] <habnabit_> ksu, they didn't mention familiarity with C++
[12:30:51] <ksu> not in the c++ sense :)
[12:30:54] <Compu-Celebi> I was about to inquire as to what "virtual subclassing" means but did not know that it pertained to C++'s `virtual` keyword.
[12:31:10] <habnabit_> ksu, i don't know of any meaning of 'virtual subclassing' except the C++ one
[12:31:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:31:26] <Compu-Celebi> I know of some of C++'s features, partly due to my brother's object-oriented programming college course involving C++.
[12:31:45] *** Joins: Warped (~Warped@user/warped)
[12:32:07] <Compu-Celebi> It seems that ksu was referring to Python's ability to override methods.
[12:32:19] *** Joins: mat001 (~mat001@213.143.69.121)
[12:32:22] <habnabit_> python doesn't have overriding
[12:32:31] <habnabit_> errrr, it does
[12:32:31] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:32:37] <habnabit_> it doesn't have overloading
[12:32:41] <ksu> see the documentation of the abc module
[12:33:10] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 260 seconds)
[12:33:36] <Compu-Celebi> Python features operator overloading, also.
[12:33:40] <hexnewbie> Compu-Celebi: You can override isinstance() and issubclass(), therefore function and builtin_function can be evaluated as subclasses of collection.abc.Callable
[12:33:57] <Compu-Celebi> That feature involves special methods, which themselves can be overridden.
[12:34:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[12:34:20] *** Quits: sharpertool (sid80151@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[12:34:28] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[12:34:40] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 252 seconds)
[12:35:02] *** Joins: orbatos (~orbatos@user/orbatos)
[12:35:30] <ksu> if a class quacks like another one, it can register as a subclass of it
[12:35:40] <ksu> without inheriting it
[12:35:46] *** Joins: sharpertool (sid80151@id-80151.hampstead.irccloud.com)
[12:35:53] <habnabit_> python's whole class system is a mess
[12:36:05] <hexnewbie> Compu-Celebi: The metaclass (type) of Callable overrides isinstance(), so: https://bpa.st/KTZA
[12:36:08] *** Joins: fikran (~fikran@user/fikran)
[12:36:19] *** Quits: Jefren (~Jefren@70.35.66.98) (Ping timeout: 252 seconds)
[12:36:19] <habnabit_> shoehorning behavioral/interface-based polymorphism into something that appears to be structural subtyping but isn't
[12:37:06] <han-solo> Pinchiukas: https://bpa.st/QYLA # something like that, untested
[12:37:08] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[12:37:31] <Compu-Celebi> I assumed that they were subclasses of `collections.abc.Callable`.
[12:38:16] *** Joins: Jefren (~Jefren@70.35.66.170)
[12:38:20] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:38:28] <hexnewbie> Compu-Celebi: Not directly, no. type(collections.abc.Callable) overrides isinstance() to return true for all objects whose type implements __call__()
[12:38:47] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:39:17] <hexnewbie> type(collections.abc.Callable) would be abc.ABCMeta
[12:39:30] <Compu-Celebi> How can something register as a subclass without actually inheriting?
[12:39:56] <hexnewbie> abc.ABCMeta.register() is one way, though Callable does not need that
[12:39:57] <habnabit_> Compu-Celebi, 09:06:05 < hexnewbie> Compu-Celebi: The metaclass (type) of Callable overrides isinstance(), so: https://bpa.st/KTZA
[12:40:52] *** Joins: darksun (~darksun@user/darksun)
[12:40:52] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[12:41:16] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[12:41:28] <Compu-Celebi> My inquiry was not specifically about `collections.abc.Callable`, but hexnewbie has answered it usefully.
[12:41:47] <Compu-Celebi> I will finally sleep now.  My time zone's current time of day is 2:11.
[12:41:50] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Quit: I am disconnecting from this network.)
[12:45:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[12:45:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[12:47:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:49:18] <graingert[m]> I'm trying to enable warnings in a project that uses django tests https://github.com/chrisdev/django-pandas/pull/142/files#diff-ef2cef9f88b4fe09ca3082140e67f5ad34fb65fb6e228f119d3812261ae51449R31 settings `setenv = PYTHONWARNNGS=error` in tox means `pip` fails to run with a DeprecationWaring
[12:49:20] <hexnewbie> I don't see an issue for the choice to reuse isinstance() for this purpose, yeah, it's confusing to newcomers, inconsistent with try...except and odd if you were used to Python before that, but isinstance() had limited use before abc (which is not interfered with), and introducing something like islike() would have only been marginally better.
[12:49:28] <graingert[m]> `coverage run -W error -a runtests.py` of course doesn't work either
[12:49:35] <graingert[m]> /cc nedbat
[12:49:58] <graingert[m]> `commands = PYTHONWARNINGS=error coverage run -a runtests.py` doesn't work either
[12:50:10] <graingert[m]> because I get `ERROR: InvocationError for command could not find executable PYTHONWARNINGS=error`
[12:50:37] *** Quits: Jefren (~Jefren@70.35.66.170) (Ping timeout: 252 seconds)
[12:50:40] <graingert[m]> graingert[m]: the flag isn't supported and the interepter is already running by the time coverage has time to take over
[12:51:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:54:08] *** Joins: Jefren1 (~Jefren@70.35.67.182)
[12:55:10] <graingert[m]> setenv =
[12:55:10] <graingert[m]>     PYTHONWARNINGS = error,ignore::DeprecationWarning:pip
[12:55:10] <graingert[m]> commands = coverage run -a runtests.py
[12:55:22] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 265 seconds)
[12:55:27] <graingert[m]> also still has the DeprecationWarning raised
[12:59:43] <graingert[m]> this works though... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/4d8de77e20a39b878243e939e85b7b05c3fa2193)
[13:00:31] *** Quits: Jefren1 (~Jefren@70.35.67.182) (Ping timeout: 245 seconds)
[13:01:52] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:02:33] *** Joins: Jefren1 (~Jefren@70.35.67.97)
[13:03:03] *** Quits: p-i-_ (~Ohmu@223.206.71.4) (Remote host closed the connection)
[13:03:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:03:39] *** Joins: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[13:04:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:05:13] <stockholm> i want to solve a system of equations with a mix of vector math (cross product) and magnetic fields (sqrt, ...) witch is defined. are there ways to make it easier for sympy solver to solve this?
[13:05:43] <stockholm> it is a good sized set of equations and vectors
[13:06:16] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:06:30] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:06:38] <stockholm> is there like a turorial or ruleset to set up those equations to make it nice and structured and solveable?
[13:06:58] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:08:14] *** Joins: Vonter (~Vonter@user/vonter)
[13:10:00] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:11:09] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 268 seconds)
[13:12:43] <pseudonymous> when building a wheel with Cython code, should I, or should I not include the .c files in addition to the compiled .so modules ?
[13:14:39] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[13:16:51] *** Joins: Klinda (~superleag@user/klinda)
[13:17:05] <nedbat> pseudonymous: i'm no expert on that, but I say no.
[13:17:17] <nedbat> graingert[m]: i can't tell if you solved the problem or not
[13:17:55] <graingert[m]> Mostly a work around at the moment
[13:18:03] <graingert[m]> I'm ignoring the warning that pip is triggering
[13:18:10] <graingert[m]> Which isn't right
[13:19:03] <graingert[m]> Also it's horrible because I have to put it all on one line
[13:19:51] <pseudonymous> nedbat: thanks :) was what I'd think too. But can never be too careful
[13:20:45] <ChrisWarrick> pseudonymous: try installing your wheel in a clean venv and see if there are any issues due to missing .c files
[13:20:59] *** Quits: Jefren1 (~Jefren@70.35.67.97) (Ping timeout: 265 seconds)
[13:22:42] *** Joins: Jefren1 (~Jefren@70.35.66.197)
[13:24:01] *** Joins: zurna (~zurna@78.182.116.137)
[13:24:46] <zurna> hello
[13:24:51] <nedbat> graingert[m]: keep in mind this is also possible:  python [options] -m coverage run runtests.py
[13:24:56] <nedbat> zurna: hey hey
[13:25:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:25:16] <zurna> where is the best place to start learning python? Im zero, little bit scared
[13:25:41] <rindolf> zurna: hi
[13:26:00] <graingert[m]> nedbat: Hmm what does that do to the sys.path?
[13:26:19] <rindolf> zurna: see https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#i-want-to-learn-programming-which-language-should-i-start-with
[13:27:01] <nedbat> graingert[m]: not sure. btw, i just removed an xdist/syspath fixture from the coverage test suite
[13:27:23] *** Quits: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr) (Quit: leaving)
[13:27:40] <graingert[m]> nedbat: I fiddled with xdist sys.path recently
[13:28:35] <nedbat> graingert[m]: i noticed my "if empty in sys.path" code in the fixture was uncovered, so i took it out and nothing broke
[13:28:49] *** Joins: shangxiao (~davids@124.187.230.212)
[13:28:57] <graingert[m]> https://github.com/pytest-dev/pytest-xdist/pull/667/files
[13:29:12] *** Quits: Jefren1 (~Jefren@70.35.66.197) (Ping timeout: 265 seconds)
[13:29:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:29:56] <shangxiao> well how do you like that… I share a lib I created on HN as it might benefit someone else and it draws the inevitable "this is worse quality than something already out there… you neglected to survey the landscape"…
[13:30:06] <graingert[m]> It's all part of the whole pytest-cov Vs coverage -m pytest and source_pkgs train of thought
[13:30:14] <shangxiao> geez nobody's holding a gun to your head
[13:30:38] <graingert[m]> `pytest -n auto` used to do the same as `python -m pytest -n auto`
[13:30:42] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[13:30:43] *** Quits: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[13:31:14] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:32:02] *** SallyAhaj_ is now known as SallyAhaj
[13:32:32] *** Joins: Jefren1 (~Jefren@70.35.67.229)
[13:32:44] <rindolf> shangxiao: did they say why your library is lacking?
[13:33:22] <shangxiao> rindolf: no :)
[13:33:34] <han-solo> zurna: https://j.mp/23X7emF # is a good place to start. Check /topic
[13:33:41] <zurna> thanks
[13:33:55] <shangxiao> here's the thread: https://news.ycombinator.com/item?id=28808313
[13:33:58] <zurna> what can i do with python
[13:34:08] *** Joins: WhiteKarura (~WhiteKaru@user/whitekarura)
[13:34:35] <zurna> I saw on a youtube video that says instagram and youtube made with python
[13:34:51] <zurna> is this true
[13:35:03] <nedbat> graingert[m]: maybe that change is why i could drop my fixture
[13:35:05] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[13:35:18] <nedbat> zurna: yes, it's true, also reddit, dropbox, and edx
[13:35:23] <han-solo> i think, some part of instagram backend is using python django
[13:35:36] <han-solo> ah, yeah and those
[13:35:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:35:56] <graingert[m]> nedbat: It doesn't work with remote workers though. Those are abandonware though
[13:36:02] <shangxiao> zurna: yeah instagram's the poster-child for Django
[13:36:05] *** Joins: mickey8 (~user@user/mickey)
[13:36:10] <nedbat> graingert[m]: i don't use remote, just local sharded
[13:36:13] <zurna> woav, but python is a scripting language how can i make a web app
[13:36:27] <nedbat> zurna: "scripting language" doesn't mean anything. It's a programming language
[13:36:56] <zurna> thanks a lot
[13:37:01] <bjs> a general-purpose programming language,  you can make pretty much anything with it
[13:37:03] <ChrisWarrick> zurna: there are tons of frameworks for python, you might be interested in django
[13:37:18] <shangxiao> Python's very popular in the scientific field
[13:37:18] <zurna> I will look at automate the boring stuff
[13:37:30] <zurna> to learn python
[13:37:31] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:37:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:37:54] *** Quits: Jefren1 (~Jefren@70.35.67.229) (Ping timeout: 265 seconds)
[13:38:05] <rendar> bjs, graingert[m]: regarding that "bug" (which is not a bug) of Task.exception() not returning the original asyncio.CancelledError exception, to the message is not propagated, it does NOT happen with other type of exceptions, such as ValueError.. is this still wanted behavior? Isn't pretty confusing?
[13:38:40] <rindolf> shangxiao: ah
[13:38:46] <graingert[m]> rendar: Yeah it's totally ridiculous behaviour just to get a smaller traceback
[13:39:11] <WhiteKarura> for those of you who implement Data Structures and Algorithms using Python as your primary language, and have become proficient in it, which resource helped you the most? (Doesn't matter - could be a free or paid resource)
[13:39:13] <bjs> rendar: I think it is. I think it's an incorrect decision to not propagate the message,  but the reason was clear:  they don't want to duplicate the message in the traceback.
[13:39:40] <rendar> but for other exceptions it is propagated!
[13:39:46] <graingert[m]> Yeppp
[13:39:52] <rendar> unbelievable
[13:39:58] <graingert[m]> EGs make it worse
[13:40:03] <graingert[m]> Just use trio
[13:40:04] <bjs> rendar: graingert[m]: there's a difference here
[13:40:09] <rendar> EGs ?
[13:40:18] <graingert[m]> ExceptionGroups
[13:40:20] <rendar> bjs: which one?
[13:40:22] <bjs> I think graingert[m] is referring to MultiError/ExceptionGroups
[13:40:33] <rendar> raise A from b ?
[13:41:06] <graingert[m]> No EGs are where you have multiple tasks raise an exception concurrently
[13:41:11] *** Joins: Jefren1 (~Jefren@70.35.67.203)
[13:41:13] <rendar> oh
[13:41:17] <bjs> rendar: no I mean that cancellation is an action on the task,  the cancellation is not "propagating up" in asyncio but rather than the task is being cancelled *as well*
[13:41:18] <energizer> rendar pep 654
[13:41:37] *** Joins: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net)
[13:41:55] <bjs> rendar: this is the root cause of the problem really,  because it means the traceback contains *many* exceptions (one CancelledError for each task that got cancelled...)
[13:41:55] <rendar> ok
[13:42:13] <rendar> it's like..
[13:42:30] <rendar> asyncio.gather(multiple tasks...) which CancelledError do you propagate in this case?
[13:42:43] <energizer> https://github.com/python-trio/trio/issues/611
[13:43:14] <bjs> rendar: you don't, right?  IT's not "propagating" the cancel
[13:43:18] <graingert[m]> ExceptionGroup(CancelledError(), CancelledError(), ExceptionGroup(CancelledError(), CancelledError(), ...), ...)
[13:43:27] <bjs> It's that the task that does the gather, if one of the awaits cancels then you cancel too
[13:43:38] <energizer> also https://vorpus.org/blog/beautiful-tracebacks-in-trio-v070/
[13:43:40] <bjs> graingert[m]: gather() won't do that though (I assume).
[13:43:46] <rendar> yes
[13:44:01] <graingert[m]> I've no idea what gather will do in 3.11
[13:44:02] <rendar> gather will create a list, inserting exceptions raised as the results
[13:44:34] <bjs> rendar: no gather can also re-raise the exceptions  (infact that's the default)
[13:44:41] <rendar> oh
[13:44:51] <graingert[m]> But only the first one afaik
[13:44:58] <bjs> Yeah,  that's what EG will solve
[13:45:12] <rendar> ok let's say i have `try await ask; except CancelledError: ... ` <- how can i get the message here?
[13:45:22] <bjs> at the moment gather treats a cancellation as if it were a normal exception, and so the "CancelledError's" get gathered up as any other
[13:45:29] <bjs> but I think that's a band-aid on another root problem
[13:45:39] <bjs> rendar: yeah you can walk the __context__ of the cancelled errors
[13:45:44] <bjs> to find the "root" cancellation and its message.
[13:45:44] *** Quits: Jefren1 (~Jefren@70.35.67.203) (Ping timeout: 245 seconds)
[13:45:52] <rendar> let's see
[13:45:54] <graingert[m]> anyio does this fwiw
[13:46:01] <rendar> the task should have a __context__ ?
[13:46:07] <bjs> rendar: no
[13:46:07] <rendar> graingert[m], i know
[13:46:14] <bjs> rendar: exceptions do
[13:46:30] <rendar> graingert[m], but i had to rewrite a TaskGroup class of my own
[13:46:43] <graingert[m]> Ew
[13:46:46] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:46:53] *** Parts: ksu (~ksu@user/prtr) (End of Transmission Block)
[13:47:21] <rendar> with a lot of more features, such as sub groups that can cancel the parent group on certain events, tasks string tags, so i can wait certain subsets of tasks and so on
[13:47:23] <bjs> rendar: if you raise an exception in an exception handler then the exceptions get "chained" together
[13:47:38] <rendar> bjs, ok right
[13:48:11] <bjs> rendar: this is what is happening here,  on the future getting a CancelledError, asyncio cancels the task injecting a CancelledError into the task, so you get chains of them
[13:48:40] <bjs> graingert[m]: gather is a weird API
[13:48:55] <rendar> bjs, yes i see
[13:49:15] <bjs> I have no idea what it really *should* do with cancellations tbh
[13:49:25] <rendar> bjs, so i have initially to start from task.exception() right?
[13:49:33] <graingert[m]> bjs: I'm the Ingroup Pope of gather is a weird API
[13:49:46] <bjs> rendar: well no you have your `except CancelledError` there, so you can use that
[13:49:57] <bjs> rendar: but task.exception should work too
[13:50:19] <bjs> graingert[m]: on the surface it makes sense but the handling of errors and cancellation is just confusing :P
[13:50:25] <rendar> task.exception() should be the same CancelledError i get into the try block, isn't it?
[13:50:48] <graingert[m]> bjs: Yeah I avoid it and pass around and Event
[13:51:07] <graingert[m]> * Yeah I avoid it and pass around an Event
[13:51:12] <graingert[m]> Then race the Event with simple operations
[13:51:20] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[13:51:33] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: dalan6236)
[13:52:00] *** Joins: wyre (~wyre@user/wyre)
[13:52:10] <graingert[m]> Otherwise I only use Cancellation as a means of last resort to handle an unanticipated exception
[13:52:11] <rendar> so, with `except CancelledError as e:`... i have to get e.__context__ and walk through that chain?
[13:52:21] <bjs> rendar: well,  yes and no,  no because they're both fresh new cancellederrors
[13:52:32] <bjs> but yes because ... they're both fresh new ones so it doesn't matter
[13:52:33] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[13:52:46] <bjs> but .exception() won't *return* the CancelledError so there's no use
[13:52:48] <bjs> rendar: yeah
[13:52:55] <rendar> wtf, what a mess?! is that possible i have to lose 1 hr of time just to get a f. string message that should be immediately returned? -_-
[13:52:56] <bjs> that's what Chris said in your bpo
[13:53:03] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[13:53:17] <bjs> rendar: well it doesn't take 1hr to do the walk,  it's just the docs were very unclear about this
[13:53:20] <rendar> 1 hr of time? let's say DAYS
[13:53:30] <rendar> ok, well
[13:53:44] <rendar> then, what is the best way to use in production to get that message?
[13:53:51] <bjs> if the docs clearly said what happened to the message then it'd have been easy, so probably either a docs patch or convince them to change to the better format
[13:54:42] <bjs> rendar: well you can walk the __context__ to find the closest cancel with a message and that's the one that would have been propagated to you
[13:55:22] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[13:55:40] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:55:59] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[13:56:49] <sunny93> Why this `b = copy.deepcopy([1,2,3]).append(['a','c'])` return None ?
[13:56:58] <bjs> sunny93: because .append returns None
[13:57:11] *** Joins: moose` (~moose@user/moose)
[13:57:12] <sunny93> ah ya , stupid me..
[13:57:19] <rendar> bjs, ok, i got that, but how exactly to get this __context__ from "e" in `except CacnellledError as e`?
[13:57:38] <bjs> rendar: e.__context__
[13:57:43] <sunny93> :O thanks bj
[13:57:55] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[13:58:10] <rendar> bjs, yes of course but.. is `e` the right starting point? basically you said yes and no before, so that confused me
[13:58:22] <bjs> rendar: I didn't say yes and no,  it's the starting point yes
[13:58:32] *** Joins: Jefren1 (~Jefren@70.35.67.215)
[13:58:37] *** Joins: amosbird (~amosbird@13.75.119.182)
[13:58:48] <bjs> oh I said yes and no for whether exception() gives you "the same exception" but of course it does not,  it gives you a new CancelledError instance because that's what cancellation does.
[13:58:59] <amosbird> Hello! Is there a way to decode protobuf message in python by using .proto schema file directly without protoc?
[13:59:44] <bjs> rendar: you may have many of them, so you have to walk it. `while e.__context__ is not None: e = e.__context__`  or something
[13:59:50] <rendar> bjs, is that normal that e.__context__ is the CancelledError("With the msg") exception instance *ITSELF* ?
[13:59:59] <bjs> rendar: yes that's how exceptions work
[14:00:06] <rendar> i see
[14:00:29] *** Parts: WhiteKarura (~WhiteKaru@user/whitekarura) ()
[14:00:36] *** Joins: thiras (~thiras@user/thiras)
[14:00:37] <rendar> bjs, of course, if i find something != CancelledError i should stop the searching, telling that mesg is None, because other exceptions may be in the stack
[14:00:48] <rendar> even if deeply i can get a CacnelledError("msg")
[14:01:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:01:10] <bjs> rendar: yeah
[14:01:20] <rendar> ok, i see
[14:01:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[14:03:14] *** Quits: Jefren1 (~Jefren@70.35.67.215) (Ping timeout: 245 seconds)
[14:03:33] <bjs> rendar: https://bpa.st/7FKA  these "During handling of the above..." then the exception object ends up as the __context__ of the higher-up exception object
[14:04:05] <rendar> and __context__ is always present or i should have to check that too with hasattr ?
[14:04:08] <bjs> i.e. here the KeyError has __context__ AttributeError,  which has __context__ ZeroDivisionError which has __context__ None
[14:04:54] *** Joins: Jefren1 (~Jefren@70.35.67.165)
[14:05:32] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[14:06:06] <bjs> rendar: it's always there, it might just be None
[14:06:25] *** Quits: B4re (~l4yer@213.232.87.181) (Read error: Connection reset by peer)
[14:06:29] <rendar> ok
[14:06:53] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:07:19] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[14:07:22] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[14:10:06] *** Quits: Jefren1 (~Jefren@70.35.67.165) (Ping timeout: 245 seconds)
[14:10:44] <rendar> bjs, i've got this https://bpa.st/CTIA
[14:11:22] <bjs> rendar: why are you doing `msg =` in a loop
[14:11:26] <rendar> bjs, sorry, this is the correct one https://bpa.st/WNNA
[14:11:52] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[14:11:53] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[14:12:15] <bjs> rendar: you really want a do-while loop not a while loop
[14:12:24] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[14:12:34] <bjs> because you always want to check the original `exc` for the message too
[14:12:38] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[14:12:38] *** Joins: spithash (~spithash@user/spithash)
[14:12:52] <rendar> it checks the original one
[14:12:53] <bjs> whether or not it has a __context__
[14:13:01] <rendar> oh! right
[14:13:04] <bjs> :)
[14:13:12] <rendar> but do while loops in python are disabled :(
[14:13:14] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[14:13:40] <bjs> rendar: no `while True: ... if ...: return exc`
[14:13:47] <bjs> or well `return head` in your example
[14:13:57] <rendar> ok
[14:13:57] *** Quits: res0 (~zzz@user/res0) (Quit: WeeChat 2.7.1)
[14:13:59] <bjs> and you shouldn't need the hasattr
[14:14:15] <bjs> also your loop is checking head.__context__ not exc.__context__
[14:15:59] *** Joins: Jefren1 (~Jefren@70.35.66.112)
[14:17:09] <rendar> ok it's perfect https://bpa.st/CPXQ
[14:17:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:18:29] <rendar> oh, i also have to add if msg is not None: break
[14:19:13] *** Quits: devcpu (~rusty@d50-92-229-34.bchsia.telus.net) (Ping timeout: 252 seconds)
[14:20:09] *** Joins: devcpu (~rusty@d50-92-229-34.bchsia.telus.net)
[14:20:15] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:21:10] <bjs> rendar: I mean you can just `return` straight from the loop
[14:21:15] <bjs> rather than breaking-then-return
[14:21:24] *** Quits: Jefren1 (~Jefren@70.35.66.112) (Ping timeout: 265 seconds)
[14:21:29] *** Joins: B4re (~l4yer@159.48.55.8)
[14:22:05] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:22:20] *** Joins: Jefren1 (~Jefren@70.35.66.112)
[14:22:45] <rendar> yeah
[14:22:53] *** Joins: wyre (~wyre@user/wyre)
[14:22:59] *** Quits: zurna (~zurna@78.182.116.137) (Quit: Leaving)
[14:23:00] <bjs> rendar: also don't use id(),  if your really want object identity use `is`. also I'm not sure why you're making *another* new cancelled error :P
[14:23:26] <bjs> the problem is that asyncio makes too many of them!
[14:26:12] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:27:37] <rendar> https://bpa.st/WDBQ now its perfect
[14:28:04] <rendar> right, i can just return the one with the message
[14:28:07] <rendar> i didn't think about it
[14:28:35] <bjs> rendar: you can remove the last return,  why not just make `exc = exc.__context__` what's the point of having `next` ?
[14:28:46] *** Joins: kosh (~kosh@user/kosh)
[14:29:14] <rendar> i used next to avoid id() calling
[14:29:25] <bjs> rendar: I don't understand
[14:29:39] <rendar> but now it is perfect: https://bpa.st/6F2A
[14:29:42] <bjs> you can s/next/exc/ and your code is the same is it not?
[14:30:39] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[14:30:59] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:31:09] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[14:31:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:32:03] *** Joins: lastshell (~lastshell@user/lastshell)
[14:32:42] *** Quits: curiosity (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[14:33:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:33:03] *** Quits: promeys (~Promeys@gateway/tor-sasl/promey) (Remote host closed the connection)
[14:33:49] *** Joins: promeys (~Promeys@gateway/tor-sasl/promey)
[14:34:51] <bjs> rendar: your annotation is weird, why Union?
[14:35:22] <rendar> because it may return both an asyncio.CancelledError or another kind of Exception subclass
[14:35:36] <bjs> rendar: how?
[14:35:49] <rendar> if head is not an asyncio.CancelledError
[14:35:59] <bjs> rendar: but your annotation says head *is* a CancelledError
[14:36:07] <bjs> so your annotation wants unions in both places then?
[14:36:14] <rendar> oh right
[14:36:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[14:36:28] <bjs> rendar: or rather, you don't want to mention CancelledError at all
[14:36:30] <bjs> just Exception
[14:36:42] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:36:43] <rendar> yes, that would be a lot better
[14:36:51] <bjs> or well it doesn't matter Union[Exception, CancelledError] is the same as Exception
[14:36:56] <bjs> but maybe it'll help be clear
[14:37:46] <rendar> yes
[14:38:20] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:39:21] <bjs> rendar: ah no I'm wrong sorry,  CancelledError isn't a subclass of Exception
[14:39:34] <bjs> So you do want the Union :P
[14:39:50] *** Joins: dalan62369 (~dalan@59-102-54-91.tpgi.com.au)
[14:40:24] <rendar> ugh!
[14:40:27] <rendar> why is not?
[14:40:54] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[14:41:01] <bjs> rendar: for the same reason KeyboardInterrupt et al aren't, because it's sort of asynchronous and you don't want to accidentally swallow it around some other await
[14:41:40] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: leaving)
[14:41:46] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Ping timeout: 252 seconds)
[14:41:46] *** dalan62369 is now known as dalan6236
[14:42:04] *** Joins: brelod (~me@90.244.150.142)
[14:42:05] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 260 seconds)
[14:42:49] *** Quits: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Ping timeout: 245 seconds)
[14:42:54] <rendar> bjs, ok
[14:43:31] <Payam> hi dear friend
[14:43:32] <Payam> s
[14:43:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[14:44:01] *** Joins: lethu (~lethu@user/lethu)
[14:44:03] *** Joins: lastshell (~lastshell@user/lastshell)
[14:44:08] <bjs> rendar: why not a function that given a CancelledError propagates the cancellation message up?
[14:44:34] <bjs> like, setting the message on the cancelled error itself,  or simply returning the message
[14:44:34] <rendar> what you mean exactly?
[14:44:44] <bjs> why return an exception I mean
[14:45:08] <rendar> because i have to re-raise those exceptions or save them and report as a result of a coroutine
[14:45:20] <rendar> its easier to directly have the exception
[14:45:28] *** Joins: fikran (~fikran@user/fikran)
[14:46:56] *** Quits: lastshell (~lastshell@user/lastshell) (Client Quit)
[14:47:01] *** Joins: jinsun (~quassel@user/jinsun)
[14:47:04] *** Joins: plastico (~plastico@neomutt/plastico)
[14:47:57] *** Joins: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net)
[14:48:39] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 245 seconds)
[14:49:38] *** Joins: lastshell (~lastshell@user/lastshell)
[14:50:36] *** Quits: lastshell (~lastshell@user/lastshell) (Client Quit)
[14:52:43] <shangxiao> Payam: hey there
[14:52:46] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Ping timeout: 252 seconds)
[14:53:02] *** Joins: et_ (~et@user/et)
[14:53:26] *** Quits: tonyz (~tonyz@user/tonyz) (Ping timeout: 245 seconds)
[14:53:56] *** Joins: wyre (~wyre@user/wyre)
[14:53:58] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[14:54:04] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[14:54:04] *** et_ is now known as et
[14:55:35] *** Joins: y1n (~y1n@91.141.35.81.wireless.dyn.drei.com)
[14:55:53] *** Joins: alzgh (~alzgh@user/alzgh)
[14:56:59] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[14:57:07] *** Quits: Jefren1 (~Jefren@70.35.66.112) (Ping timeout: 252 seconds)
[15:00:58] *** Joins: vimart (~vimart@85.255.233.1)
[15:02:21] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[15:02:36] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 245 seconds)
[15:02:55] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[15:03:06] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:03:26] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[15:05:48] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[15:06:15] *** Joins: Jefren1 (~Jefren@70.35.67.86)
[15:07:51] *** Joins: paul424 (~tom@ip-31-0-120-58.multi.internet.cyfrowypolsat.pl)
[15:08:01] *** Joins: mattmcc (~matt@li807-33.members.linode.com)
[15:08:18] *** Joins: alex11 (~alex11@user/alex11)
[15:08:42] *** Joins: MrPixels (~MrPixels@87-95-125-71.bb.dnainternet.fi)
[15:08:53] <MrPixels> I'm building a dockerfile for a complex python project; it has many nested packages, each with their own setup.py. I made a top level requirements.txt file and manage to install everything. But I would like to seperate installation of dependencies external to the codebase, in order to optimize my docker builds.
[15:09:32] <ChrisWarrick> MrPixels: make a separate file with your depenencies, I guess
[15:10:07] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[15:11:34] <nedbat> MrPixels: what do you mean by "external to the codebase"?
[15:12:07] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[15:12:17] <MrPixels> I mean thirdparty dependencies nedbat
[15:13:04] <nedbat> MrPixels: those are in your requirements.txt.  That's one step: pip install -r requirements.txt     how do you want to change it?
[15:13:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[15:15:06] *** Joins: wyre (~wyre@user/wyre)
[15:15:39] <MrPixels> lets put it this way... there are N services in the project, each with their own setup.py; some subpackages of these services have a requirement.txt. I made a root_requirements.txt listing these N services, to make it easy to install everything I need.
[15:16:03] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:16:34] <MrPixels> I was hoping there was a way to install only the dependencies of each of these N services in one go without restructuring the project, and then seperately installing the services
[15:17:18] <nedbat> MrPixels: i'm not quite sure what you mean by subpackages with a requirements.txt, but: pip-tools has a pip-compile command that can collect up all the transitive dependencies.
[15:17:45] <MrPixels> what is a transitive dependency?
[15:18:04] <nedbat> MrPixels: I install A, which installs B, which installs C
[15:18:24] <nedbat> MrPixels: pip-compile can pull all that together, to have one file naming A, B, and C, at specific pinned versions
[15:18:30] <nedbat> MrPixels: for example: https://github.com/edx/repo-tools/tree/master/requirements
[15:18:49] <Payam> nebat, how does your vim look like? do you have a layout with files, variables, stack, watch and so ?
[15:19:03] <nedbat> Payam: i don't debug Python in vim
[15:20:55] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:dc05:213d:bab7:c6b7)
[15:22:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:23:27] *** Quits: paul424 (~tom@ip-31-0-120-58.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:25:14] *** Joins: Elodin (~weechat@user/elodin)
[15:27:55] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:30:40] *** Quits: cqi (~cqi@2408:8207:2525:7450:f4b5:5d6:a202:f038) (Quit: Leaving)
[15:31:46] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[15:34:06] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:34:17] *** Quits: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14) (Remote host closed the connection)
[15:34:29] *** Joins: Barones (~Barones@177.96.252.225.dynamic.adsl.gvt.net.br)
[15:35:50] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:44] *** Joins: Naan (~naan@user/naan)
[15:37:30] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:38:21] *** Joins: Vonter (~Vonter@user/vonter)
[15:39:54] *** Quits: Jefren1 (~Jefren@70.35.67.86) (Ping timeout: 245 seconds)
[15:42:06] *** Joins: Jefren1 (~Jefren@70.35.67.194)
[15:42:33] *** Quits: B4re (~l4yer@159.48.55.8) (Remote host closed the connection)
[15:43:08] *** Joins: et_ (~et@user/et)
[15:43:14] *** Quits: hudo (~hudo@62.68.20.210) (Ping timeout: 245 seconds)
[15:44:04] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[15:44:04] *** et_ is now known as et
[15:45:20] *** Joins: CodePoint (~BitShift@94.198.42.117)
[15:45:21] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:45:26] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[15:46:34] *** Quits: Jefren1 (~Jefren@70.35.67.194) (Ping timeout: 245 seconds)
[15:47:53] *** Joins: tonyz (~tonyz@user/tonyz)
[15:48:00] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[15:48:19] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:48:27] *** Joins: Jefren1 (~Jefren@70.35.66.216)
[15:51:59] *** Quits: dalan6236 (~dalan@59-102-54-91.tpgi.com.au) (Quit: dalan6236)
[15:55:00] *** Joins: sedeki (~textual@user/sedeki)
[16:00:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:04:41] *** Joins: l4yer (~l4yer@159.48.55.8)
[16:05:16] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[16:07:20] *** Joins: dez (uid92154@user/dez)
[16:07:38] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[16:08:15] *** Joins: Vonter (~Vonter@user/vonter)
[16:09:12] <tm007> From within Python how to make parallel API calls?
[16:10:04] <tm007> I need to fetch data from multiple external source via API calls, so I want to make parallel API calls
[16:10:42] *** Quits: CodePoint (~BitShift@94.198.42.117) (Quit: Never gonna give you up, never gonna let you down...)
[16:12:17] <ChrisWarrick> tm007: can you tell us more about your project? Is this a web app, a gui thing, a console thing, ?
[16:12:35] <tm007> It's a Django app
[16:12:59] <tm007> I have an api endpoint api/resource/
[16:13:19] <ChrisWarrick> django has async capabilities these days, so you could use that + httpx
[16:13:22] <tm007> resource calls multiple APIs, aggregates then returns the data
[16:13:54] <tm007> ok looking into it
[16:14:00] <tm007> what/why httpx?
[16:14:04] *** Quits: l4yer (~l4yer@159.48.55.8) (Ping timeout: 245 seconds)
[16:14:27] <ChrisWarrick> because it’s the most reasonable async http library out there
[16:14:57] <tm007> sir yes sir!
[16:15:03] <pr100> aiohttp client is OK too
[16:15:23] <tm007> heard that name
[16:16:06] *** Quits: sedeki (~textual@user/sedeki) (Ping timeout: 260 seconds)
[16:17:06] <pr100> I've used them both... I think aiohttp tends to be a bit faster; IIRC it doesn't to http2, which httpx does.. probably there are other things that might sway you one way or the other
[16:17:13] <pr100> do*
[16:18:20] <ChrisWarrick> aiohttp feels clunkier to me
[16:19:18] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[16:20:21] *** Joins: l4yer (~l4yer@159.48.55.9)
[16:21:57] *** Joins: dg_dg (~dg_dg@191.101.31.48)
[16:22:58] *** Joins: raxor2k (~raxor2k@78.158.228.45)
[16:23:00] <raxor2k> bjs: are you here
[16:23:31] <raxor2k> i have an awkard question
[16:23:50] *** Quits: bluss (~bluss@user/bluss) (Remote host closed the connection)
[16:23:52] *** Joins: strk (~strk@user/strk)
[16:24:08] <strk> I have a class TestPyQgsPostgresProvider(unittest.TestCase, ProviderTestCase):
[16:24:10] *** Quits: dgdg (~dg_dg@191.101.31.24) (Ping timeout: 265 seconds)
[16:24:12] <strk>     def setUpClass(cls):
[16:24:16] <strk>         self.assertFalse("We want to stop here")
[16:24:27] <han-solo> https://bpa.st/+python
[16:25:50] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:26:11] <strk> nevermind, this seems to be more of a cmake question
[16:26:21] <strk> because directly invoking the file "works" (as expected)
[16:26:29] <strk> it's just ctest NOT showing that assertion failure
[16:27:13] <strk> anyway, the question was... is there a way to ask a TestCase derived class setUpClass method to *stop* there and not execute any test if a precondition is not met ?
[16:27:25] <strk> I'm trying to reduce the noise of 100 tests failing due to a bogus precondition
[16:27:46] *** Quits: y1n (~y1n@91.141.35.81.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[16:28:43] *** Joins: ivan_ (~Ivyy@217.138.203.164)
[16:29:00] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[16:29:08] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:29:42] *** Joins: dalan6236 (~dalan@59-102-54-91.tpgi.com.au)
[16:30:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:13] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:dc05:213d:bab7:c6b7) (Ping timeout: 252 seconds)
[16:32:26] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[16:33:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Quit: Leaving)
[16:33:25] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:33:56] <raxor2k> this is awkard, but i need help on this one: https://bpa.st/VHVA.. how can i move line 42 up to line 39, and only get called if it is true ?
[16:34:04] <han-solo> strk: there's seems to be a `failfast` option. Will that work ?
[16:34:43] <han-solo> not sure if it will work with the `setUpClass`, but maybe make a test for the precondition ?
[16:35:22] <strk> I want to make sure running *every* test always checks the precondition
[16:35:27] <strk> in case someone runs a single test
[16:35:44] *** Joins: Klinda (~superleag@user/klinda)
[16:36:06] *** Joins: redrum88 (~redrum88@user/redrum88)
[16:36:31] <han-solo> raxor2k: you can put it inside the line 38, just indent it properly
[16:36:53] <han-solo> it needs to come under the `if` condition, for it to get the `weight` right ?
[16:37:06] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 260 seconds)
[16:38:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:38:59] <raxor2k> yes
[16:39:09] *** Joins: rannnn8888 (~rannnn888@bzq-109-65-168-133.red.bezeqint.net)
[16:39:21] *** Joins: y1n (~y1n@178.115.46.148.wireless.dyn.drei.com)
[16:39:51] <raxor2k> han-solo: but then i get error inside function in line 22. "keyError" : weight
[16:40:22] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:40:45] <han-solo> raxor2k: oh, right. It's setting the weight to sensor data item, not user_email
[16:40:55] <alzgh> hello, I have a question that may be obvious to you guys but here it goes: Wouldn't it make sense for Python to have a `break #` option where `#` is the number of loops you want to break out of? If so, is there some proposal like this already? Thanks.
[16:41:13] <strk> "If an exception is raised during a setUpClass then the tests in the class are not run and the tearDownClass is not run"
[16:41:19] <rannnn8888> Hey how i can make its show real numbers ? and not like 1-2-3-4-5 and 1e8 ? https://bpa.st/SR5Q
[16:41:20] <strk> https://docs.python.org/3/library/unittest.html
[16:41:23] <raxor2k> han-solo: yes ..
[16:41:26] <nedbat> alzgh: i'm sure there have been proposals like that.
[16:41:26] <strk> so it *should* work as I expected
[16:41:27] <han-solo> raxor2k: wait, why do you need to be inside the `for` condition again?
[16:41:50] <nedbat> alzgh: sometimes, you can rearrange your loops to not need the multiple loops.  do you have specific code you are working with?
[16:41:52] <raxor2k> han-solo: for different reasons
[16:41:55] <raxor2k> i cant tell it here
[16:42:10] <strk> maybe I'm failing to invoke the superclass setUpClass, as that same page says "If you want the setUpClass and tearDownClass on base classes called then you must call up to them yourself. "
[16:43:07] <han-solo> raxor2k: i mean, you are mutating something, and before it is complete, you are trying to access the `weight`, right ?
[16:43:18] <raxor2k> han-solo: correct
[16:43:18] <raxor2k> or
[16:43:23] <raxor2k> that is what the code does in this case
[16:43:29] <raxor2k> i need to wait until the mutating is done
[16:44:44] <alzgh> nedbat: it's a word search in a 2D array. There is a nested loop to check each letter as the beginning of the search. If we find a match we don't care about the rest. I guess I could make it one layer loop by extracting tuples of (i, j) from a nested list comprehension.
[16:45:09] <jinsun> or itertools.product
[16:45:14] *** Joins: always_blue (~andrea.be@93-34-80-22.ip48.fastwebnet.it)
[16:45:24] <always_blue> I'm looking for the implementation of "subproess.Popen" because I'm curious to see how it works internally with Shell=false. So far I've got to line 1715 in Lib/subprocess.py in CPython where we have a call to sys.audit("subprocess.Popen", executable, args, cwd, env), and I've got pretty much stuck there: I couldn't find anywhere where the "subprocess.Popen" hook is registered, which is where I think
[16:45:24] <alzgh> Ahh, yes. Even better.
[16:45:30] <always_blue> the real implementation of subprocess.Popen lies. Can anybody help me with this?
[16:45:54] <nedbat> always_blue: i don't think sys.audit is what starts the process
[16:46:04] *** Quits: MrPixels (~MrPixels@87-95-125-71.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[16:46:10] <NoImNotNineVolt> this is an interesting question.
[16:47:09] <nedbat> always_blue: the next line(s) call _posix_spawn
[16:47:38] <nedbat> always_blue: line 1676 calls os.posix_spawn
[16:47:43] <always_blue> Oh right, I got it all wrong
[16:48:02] <always_blue> I thought that sys.audit was used to call the hook. It jusr raises it instead
[16:48:15] <hexnewbie> alzgh: https://www.python.org/dev/peps/pep-3136/ it has been rejected as a proposed feature, and I'm sure I've seen it discussed at other times in the Python mailing lists
[16:48:22] <always_blue> Silly question now that I think about it :) thanks guys
[16:48:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:48:50] <raxor2k> han-solo: so what can i do here to solve this ?
[16:49:28] *** Joins: beuys (~beuys@user/beuys)
[16:49:39] <hexnewbie> I'm quite partial to the ‘break break’ proposal 😃
[16:50:06] <beuys> Hello! I changed my os to Ubuntu and now one of my scripts throws this error: sqlite3.OperationalError: /usr/lib/sqlite3/pcre.so.so: cannot open shared object file: No such file or directory
[16:50:47] <han-solo> raxor2k: i mean, what you have right now is fine. It only runs the `push_the_sensor_data_to_db`, after the `temporary_stored_sensor_data` is upadted with `weight`, no ?
[16:51:11] <han-solo> but i'm trying to understand why it needs to be inside the `for`
[16:51:21] <beuys> I wonder how that pcre.so.so file ended up in that dir on my old os? On Ubuntu, there is no /usr/lib/sqlite3/ dir to begin with. Any ideas?
[16:51:31] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[16:51:38] <hexnewbie> beuys: Did you carry any compiled Python extensions installed in your previous installation, either through a virtual env or in ~/.local/lib/python* or /usr/local/lib/python*?
[16:51:52] <alzgh> hexnewbie: this guys makes real sense. I can't but agree with him. Case in point: me not having this construct had to think about other work arounds which made my code cleaner and also helped me learn :D
[16:52:07] *** Quits: always_blue (~andrea.be@93-34-80-22.ip48.fastwebnet.it) (Quit: leaving)
[16:52:17] <beuys> hexnewbie: What are "compiled Python extensions"?
[16:52:22] <hexnewbie> alzgh: That's more or less the reasoning given by https://mail.python.org/pipermail/python-3000/2007-July/008663.html
[16:52:27] *** Joins: xiongxin (~quassel@113.116.34.18)
[16:52:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[16:52:59] <hexnewbie> beuys: All Python extensions 😃 Any python module written in C, and not in Python, thus looking for .so libraries that no longer exist after upgrade
[16:53:28] *** Quits: DerpGusta (~quassel@user/derpgusta) (Read error: Connection reset by peer)
[16:53:35] <alzgh> hexnewbie: Oh I forgot you didn't link to the rejection notice first :D I opened and read that from the proposal page.
[16:53:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[16:53:40] <beuys> hexnewbie: That so file is referenced in my code: con.load_extension('/usr/lib/sqlite3/pcre.so')
[16:53:49] <beuys> hexnewbie: But I don't know how it got there.
[16:53:51] *** Joins: DerpGusta (~quassel@user/derpgusta)
[16:54:13] <hexnewbie> beuys: In this case, the error message looks like either *the entirety of Python* (or at least a local installation of its sqlite3 module) was carried over (unless Ubuntu has a major bug in their distro, which is unlikely)
[16:54:48] *** Joins: fikran (~fikran@user/fikran)
[16:54:56] <beuys> hexnewbie: Ha, I solved it! Via "apt install sqlite3-pcre"
[16:55:02] <hexnewbie> Oh. I didn't realize sqlite3 could directly load so files.
[16:55:07] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[16:55:15] <han-solo> raxor2k: also, that else block will always run at the end of the for loop, unless you break
[16:55:23] <beuys> hexnewbie: Yeah, looks like.
[16:59:12] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[17:00:17] *** Joins: astroid99 (~cto-offic@134.148.95.68)
[17:00:39] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[17:01:09] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[17:01:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[17:02:49] *** Joins: wlsn (~wlsn@79-75-247-141.dynamic.dsl.as9105.com)
[17:03:49] *** Joins: sedeki (~textual@user/sedeki)
[17:04:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:06:22] <han-solo> raxor2k: maybe you wanted to update the thing right after it get weight ? i don't know # https://bpa.st/O2UQ
[17:06:36] *** Joins: LiftLeft (~LiftLeft@191.96.185.36)
[17:07:10] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[17:08:37] *** Quits: wolfdale3 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[17:08:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[17:09:59] *** Joins: kek_ (~kek_@net-2001-067c-10ec-5744-8000-0000-0000-0075.v6.ethz.ch)
[17:10:34] *** Joins: wolfdale4 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:10:54] *** Parts: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk) (Leaving)
[17:12:21] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[17:13:07] <kek_> hi, I have a python file that doesn't respect the 80char ruler. Is there a homepage or cli tool that autoformats it for me to respect the 80 char rule etc.?
[17:16:16] *** Quits: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[17:17:15] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:20:40] *** Parts: daveo (~user@184.63.104.16) (ERC (IRC client for Emacs 26.3))
[17:21:16] <iflema> line length?
[17:24:19] <jinsun> kek_: https://github.com/psf/black/ is the tool for that, though it will do 88 chars by default, you can change to 80 with --line-length=80, or just change your "ruler" and move it to 88 chars
[17:24:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[17:25:44] *** Quits: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Ping timeout: 245 seconds)
[17:26:21] <raxor2k> han-solo: yes. When weight is updated, THEN i want to call that function
[17:26:33] *** Joins: akk (~akk@75.161.146.115)
[17:26:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:26:44] <raxor2k> han-solo: you ask why i need that for loop to check with user ?
[17:27:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[17:28:00] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[17:28:28] <kek_> jinsun, thanks
[17:28:51] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7928-af67-c415-4f1b.res6.spectrum.com)
[17:31:33] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:32:07] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[17:34:55] <iflema> lower the anti to 110
[17:34:59] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[17:36:09] *** Quits: Barones (~Barones@177.96.252.225.dynamic.adsl.gvt.net.br) (Ping timeout: 245 seconds)
[17:38:40] *** Joins: ali1234 (~al@user/ali1234)
[17:38:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[17:40:20] *** Parts: Joanna (uid57472@id-57472.lymington.irccloud.com) ()
[17:40:58] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[17:41:37] <raxor2k> han-solo: i solved it!!
[17:41:43] <raxor2k> im an absolute beast nowadays
[17:43:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:45:19] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[17:46:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[17:47:02] *** Joins: zebrag (~chris@user/zebrag)
[17:49:50] <han-solo> 👍
[17:51:48] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:52:48] *** Quits: tonyz (~tonyz@user/tonyz) (Quit: Konversation terminated!)
[17:53:55] *** Joins: rsx (~dummy@ppp-188-174-153-254.dynamic.mnet-online.de)
[17:54:59] *** Joins: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net)
[17:56:11] *** Joins: hrob (~hrob@2a01:6f01:b602:d465:1612:2c8a:99d6:5dec)
[17:56:23] <hrob> o/
[17:57:12] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[17:57:16] *** Quits: zepolen (~zepolen@2a02:587:860a:4682:7ff6:e830:25:c662) (Quit: Konversation terminated!)
[17:58:14] <hrob> I have some old projs I want to convert to python3   I read there are some tools like 2to3 -- but Im not clear if this is the "official" / santified way to convert
[17:58:45] *** Joins: zepolen (~zepolen@2a02:587:860a:4682:c769:be15:c3da:c84d)
[17:59:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 252 seconds)
[18:00:25] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[18:00:34] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[18:00:51] *** Quits: ivan_ (~Ivyy@217.138.203.164) (Quit: Leaving)
[18:01:01] <rannnn8888> Hey how i can format the number in the plt.show the "y" like 680000000 to 68M ? https://bpa.st/PYMQ
[18:02:43] <han-solo> hrob: https://docs.python.org/3/library/2to3.html # it is official, but i haven't used it, so can't comment
[18:02:49] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:04:41] *** Joins: paul424 (~tom@apn-37-249-81-20.dynamic.gprs.plus.pl)
[18:05:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[18:05:46] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[18:06:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:07:43] <kek_> Is it considered okay to use \ for a newline (not a printed one) in a string?
[18:08:08] <hrob> rannnn8888   I think the accepted answer here is the way -   https://stackoverflow.com/questions/29188757/matplotlib-specify-format-of-floats-for-tick-labels
[18:08:35] <hrob> rannnn8888   you wan write your own formatter that does more complicated things
[18:09:00] *** Quits: avu (~jan@user/avu) (Quit: avu)
[18:10:41] *** Joins: avu (~jan@user/avu)
[18:11:09] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[18:12:43] *** Quits: raxor2k (~raxor2k@78.158.228.45) ()
[18:12:44] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[18:13:18] *** Joins: Sabinno (~Sabinno@75.26.52.152)
[18:13:57] <hrob> rannnn8888  also check out this example  https://jakevdp.github.io/PythonDataScienceHandbook/04.10-customizing-ticks.html     scroll down to "def format_func(value, tick_number):"
[18:17:16] <Sabinno> Hey folks. Can anyone tell me why this referenced line: results in
[18:17:19] <Sabinno> https://github.com/Sabinno/automatic-upgrade-stable/blob/master/get-upgrade-cand.py#L41
[18:17:29] <rannnn8888> yes i try use ax now but you know how i remove the size font up here ? https://ibb.co/ZMPCVXG
[18:17:41] <Sabinno> Results in this error*: TypeError: Expected a string or a unicode object
[18:18:03] <rannnn8888> hrob https://bpa.st/IYUQ this the code
[18:18:18] <Sabinno> The documentation for DNF API implies that `upgrade()` can accept a list.
[18:18:18] <hrob> @kek_   I think so,  can try runnin pylint on it --- but I rarely use it... you can often get splitting between lines long function args like  foo( <newline> arg1, <newline> arg2, <newline> )     looks cleaner ... also for long dict declarations just put newline after each ( or ,
[18:25:55] <hrob> @kek_  i mean new line after each "("   "{"  and ","
[18:26:34] *** Joins: Mumm-Ra (~Lando-Spa@user/lando-spacepimp)
[18:28:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:28:19] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:29:21] <hrob> im not clear if 2to3  can target a specific version... like python3.8   ... or if it just creates some generally compatible code
[18:35:34] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:38:42] *** audio is now known as audiocat
[18:39:33] *** Quits: wolfdale (~wolfdale@ec2-54-169-159-210.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:39:34] *** wolfdale4 is now known as wolfdale
[18:41:00] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:41:12] *** Joins: Klinda (~superleag@user/klinda)
[18:41:46] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:42:11] *** Joins: mickey8 (~user@user/mickey)
[18:42:27] *** Joins: Macuser (~Macuser@2601:5c4:4302:2c70:8c10:7015:b493:7480)
[18:43:26] <gitesh> what is next version of python which will become a stable version like python2.7 or python3
[18:43:37] <bjs> gitesh: what do you mean "stable version"?
[18:43:50] <gitesh> like many people will use it
[18:44:15] <gitesh> like many people will talk about it as they are talking now about python 3
[18:44:15] <bjs> gitesh: well, nobody is going around to peoples houses to force people to use any particular version or anything..
[18:44:28] <bjs> gitesh: "Python 3" isn't even a specific version
[18:44:38] <bjs> gitesh: Python regularly releases new versions,  the most recent version is 3.10
[18:44:57] <gitesh> I have Python 3.8.5
[18:44:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:45:03] <bjs> before that was 3.9, and before that was 3.8 and before that was 3.7
[18:45:04] <gitesh> how to update?
[18:45:05] <bjs> and before that was 3.6
[18:45:19] <bjs> gitesh: you go to python.org and download whatever newer version you want
[18:45:52] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[18:46:17] <bjs> there is a regular schedule for Python versions,  a new minor version every year
[18:46:30] *** Joins: p-i- (~Ohmu@223.206.71.4)
[18:47:23] <rendar> can i get a full string of the args passed through command line?
[18:48:08] *** Joins: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14)
[18:48:15] <bjs> rendar: what do you mean the "full string",  the args passed to python can be found in sys.argv
[18:51:18] *** Quits: rsx (~dummy@ppp-188-174-153-254.dynamic.mnet-online.de) (Quit: rsx)
[18:51:27] *** Quits: kek_ (~kek_@net-2001-067c-10ec-5744-8000-0000-0000-0075.v6.ethz.ch) (Remote host closed the connection)
[18:51:35] <rendar> https://bpa.st/ROVA
[18:51:57] <rendar> it seems it doesn't print those args
[18:51:58] <bjs> rendar: what is this `py` thing?
[18:52:03] <rendar> an alias for python
[18:52:10] <bjs> rendar: is it an alias you wrote?
[18:52:14] <rendar> yes
[18:52:35] <bjs> rendar: have you tried not using the alias just to check that it's not just that you wrote the alias wrong
[18:52:55] <rendar> uhm, without the alias it works...
[18:52:56] <rendar> strange
[18:53:40] <rendar> this is the script i use https://bpa.st/5V6A
[18:53:42] <rendar> it seems all ok
[18:54:33] <bjs> rendar: ... what is this?
[18:54:48] *** Quits: Sabinno (~Sabinno@75.26.52.152) (Quit: Client closed)
[18:54:48] <rendar> i script i run to load my venv
[18:55:25] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:56:03] <bjs> rendar: i'm guessing your shell script is just broken and isn't passing the args along then
[18:56:15] <rendar> yes i think so
[18:56:40] <hrob> gitesh  you can consider all the python releases stable, tagged version x.xx   https://www.python.org/downloads/   or here https://github.com/python/cpython  ,  they will call it -alpha or -beta if not stable   master is not stable except for tagged commits it seems
[18:57:22] <gitesh> hrob: can I install all python versions on my windows pc?
[18:57:45] <hrob> master in cpython is stable in a sense pretty tested, but seems can have -alpha features
[18:57:53] <bjs> gitesh: yes
[18:58:06] <bjs> gitesh: you can just download python versions from python.org/
[18:58:58] <hrob> @githesh most distros today are behind... and many developments not always up to date with bleeding edge realeses.  Ubuntu currently ships with 3.8 I think by default.
[18:59:05] <gitesh> because I guess I want to use that python version which will be suitable for my anaconda
[18:59:08] *** Quits: xiongxin (~quassel@113.116.34.18) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:59:31] <hrob> @gitesh you will be fine to use 3.8  with anaconda -- but you can use any release with anaconda
[19:00:08] *** Quits: dagwood (~NooneOfCo@pool-108-45-46-117.washdc.fios.verizon.net) (Quit: Leaving)
[19:00:52] *** Joins: dagwood_ (~textual@pool-108-45-46-117.washdc.fios.verizon.net)
[19:00:53] <hrob> githesh try using 3.8   ... dont use anything 2.x   most modules are now not even supporting 2.x
[19:01:53] *** Joins: darksun (~darksun@user/darksun)
[19:02:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[19:02:37] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[19:02:38] <gitesh> hrob: on my pc I am using 3.8.5 as in cmd when I type python --version it's showing Python 3.8.5
[19:03:12] <gitesh> I have also downloaded python 3.10.0 and installed on my pc but i don't know where has it gone?
[19:03:21] <gitesh> it didn't changed my default
[19:03:34] *** Parts: dagwood_ (~textual@pool-108-45-46-117.washdc.fios.verizon.net) ()
[19:03:37] <hrob> gitesh then you are good to go   ... Im not sure going to 3.10 is good, if you rely on modules that may not have support ... but I cant say.
[19:04:00] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:04:08] *** Joins: fikran (~fikran@user/fikran)
[19:04:08] *** Joins: dagwood (~textual@pool-108-45-46-117.washdc.fios.verizon.net)
[19:04:41] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[19:04:51] <rendar> bjs, ok btw sys.argv will be a list of args, including the python file
[19:04:54] <hrob> gitesh you likely have to specify the interpreter  like   python3.10  the installer may not have changed your default -  your python3 points probably to python3.8
[19:05:02] <bjs> rendar: yes
[19:05:03] <rendar> so i have to remove the top, and then do a " ".join()
[19:05:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:05:18] <bjs> rendar: they're the args that the shell actually passed to the process
[19:05:20] <rendar> i just wondered if i could have avoided this
[19:05:25] <rendar> yes
[19:05:26] <bjs> rendar: avoided what
[19:05:28] <hrob> gitesh and probably python points to python3.8 also
[19:05:31] <rendar> " ".join()
[19:05:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[19:05:43] *** ayusta is now known as ayustae
[19:05:51] <bjs> rendar: I'm not really sure what the join is for so I can't say "whether you can avoid it"
[19:06:04] <bjs> rendar: but I can say, that what you see in argv is exactly and entirely all that python was given by the shell
[19:06:09] *** Quits: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Ping timeout: 245 seconds)
[19:06:21] <rendar> yes yes, of course
[19:06:35] <bjs> the process gets given a list of string args,  the "command" or whatever you typed in the shell is entirely evaluated and broken up by the shell itself
[19:07:00] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:07:00] <rendar> bjs, the join is for recreating the command string, e.g. python my.py hello world how are you? i have to " ".join(argv) to recreate "hello world how are you?"
[19:07:05] <hrob> gitesh, also in anaconda environemnt you have to specify the interpreter I recall, set it to python3.8.... and within anaconda it will be called "python" only... same with pip3 will be "pip" inside anaconda I recall
[19:07:19] <hrob> just check in your anaconda env.... python --version   pip --version
[19:07:39] <gitesh> I see IDLE has a different look in python 3.10.0 :)
[19:07:41] <bjs> rendar: hmm,  i'm sure you're aware of the million-and-one edge cases and caveats and why it's not really at all "recreating" the command
[19:07:57] <rendar> bjs, yes, i'm aware
[19:08:28] <rendar> but i also know that a simple " ".join() is enough for my use case
[19:08:30] <bjs> rendar: but e.g. consider `python3 foo.py 'a b' c` vs `python3 foo.py a 'b c'` or whatever
[19:08:31] <bjs> okay
[19:08:39] <rendar> yes, also that
[19:09:39] <hexnewbie> rendar: Maybe (but please use only for debugging logs, unless you're calling something over SSH): ' '.join(shlex.quote(arg) for arg in sys.argv)
[19:09:57] <hrob> I have py files, old junk that seems to have "tabs" in places where should be four spaces -- is there a tool I can use to replace all tabs with four " " ... only if before python statemets... dont want replace tabs inside strings
[19:09:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[19:10:03] <rendar> hexnewbie, thanks, this is worth checking further
[19:10:08] <hrob> black ? maybe
[19:10:13] <bjs> hrob: any decent editor can do that
[19:10:24] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[19:10:27] <bjs> VSCode has a straight-up "convert indentation to spaces" button
[19:10:47] <hexnewbie> hrob: Be warned that if a file mixes tabs and spaces Python does (or at least did) assume a tab is eight spaces
[19:11:31] <hrob> @bjs   been using vscode  but it took care of it for me... this is some "junk" im converting and I didnt have good editor then i guess and yes python2 assume tab is four spaces lol
[19:11:49] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:12:18] <hrob> hexnewbie  yeah... python3 is strict on this so only noticed now.
[19:12:59] <hrob> if I had been pylinting it, would have been good at the time
[19:13:35] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-1571-9d91-2401-969.fixed6.kpn.net) (Remote host closed the connection)
[19:13:59] <hexnewbie> hrob: One tab, eight spaces: https://bpa.st/7ZTA
[19:14:23] *** Joins: KntHwk2020 (~Ace@71.214.148.25)
[19:14:51] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-9009-f260-44a7-6529.fixed6.kpn.net)
[19:15:11] <KntHwk2020> Hello! I'm a new IRC user.
[19:15:14] <hrob> hexnewbie I guess I need install a plugin for this in vscode,  ctrl-shift-T  should have done the trick
[19:15:35] *** Quits: vimart (~vimart@85.255.233.1) (Quit: WeeChat 2.8)
[19:15:37] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:15:50] <hrob> hexnewbie  but then a pain to open all the files and doing that -- I'll check if black can fix it for all files
[19:16:14] <avu> KntHwk2020: Welcome! Feel free to just ask any Python question you might have!
[19:16:32] <KntHwk2020> Thank you
[19:17:24] <hrob> lol black still says "Note - this is a beta product"   ive been using it.
[19:18:03] <aphysically> yeah that's one of black's quirks; there's some series of issues about defining what it means to release black but I never read into it
[19:18:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:19:07] <hrob> aphysically they do say they are "uncompromising"   evidently about releases too
[19:19:49] *** Joins: bauripalash (~bauripala@2401:4900:3829:6c07:1:1:6c70:8df0)
[19:19:58] <rendar> hexnewbie, thanks, that's an interesting solution, i get the ' ' as i passed them on shell args
[19:20:30] *** Joins: cyphase (~cyphase@user/cyphase)
[19:20:49] <rendar> hexnewbie, but i can't get your comment about using this as only for debugging logs? why?
[19:20:54] *** Joins: Auron (~Auron956@user/auron)
[19:22:24] <hexnewbie> rendar: It's safer to just pass the argument list as-is directly, instead of turning to string and invoking a shell to execute it. It's only needed for debug logs, as humans find sys.argv difficult to read as-is, and for ssh which always launches a shell
[19:22:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:22:48] <rendar> ok
[19:23:28] <hexnewbie> And I can't guarantee use with ssh is secure per se, though shlex.quote() uses a quoting style that I don't believe can't be broken in almost any locale that I can think of
[19:23:43] <rendar> hexnewbie, i have inverse use case: i have to read sys.argv, recompose a string that will go to a parser and get compiled so the '  ' may have some other meaning there
[19:25:47] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[19:26:53] *** Parts: KntHwk2020 (~Ace@71.214.148.25) (Leaving)
[19:26:58] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Ping timeout: 256 seconds)
[19:29:16] *** Joins: XV8 (~XV8@2601:5cb:c001:50:78:e67a:19d1:b3c9)
[19:30:17] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:30:58] *** Joins: dld (~davidlowr@73.61.8.155)
[19:32:01] <zumba_addict> Folks I'm getting this error `ImportError: No module named apt`. When I run pip install apt, i get this message `ERROR: Could not find a version that satisfies the requirement apt (from versions: none)`
[19:32:26] *** Joins: giacomo (giacomo@gateway/vpn/protonvpn/giacomo)
[19:32:47] *** Quits: MrAureliusR_ (~MrAureliu@user/mraureliusr) (Quit: ZNC - https://znc.in)
[19:33:20] <nedbat> zumba_addict: what is apt? There is no PyPI package with that name
[19:33:55] <zumba_addict> i am not sure too. I was debugging our developer's application and that popped up when I started twisted
[19:33:56] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[19:34:02] <hexnewbie> zumba_addict: You probably need to install python3-apt. python-apt was removed in e.g. Debian Bullseye and some Ubuntus
[19:34:14] <zumba_addict> ok, I'll try
[19:34:34] <hexnewbie> zumba_addict: If a Python 2 application, and this is Debian ≤10, you can install python-apt too
[19:34:46] <zumba_addict> i tried but it said this `python-apt is already the newest version.`
[19:36:15] <zumba_addict> it is in the other python. I noticed there are 2 python in this container. It's in /usr/bin/python and not /usr/local/bin/python. I ran /usr/bin/pip freeze and I saw this `python-apt==0.8.8.2`. When I ran `/usr/local/bin/pip freeze`, it wasn't there.
[19:36:15] *** Joins: Praise (~Fat@user/praise)
[19:36:26] <zumba_addict> I need it though on the latter
[19:36:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:37:14] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:38:50] <zumba_addict> I'm debugging an application that looks like it was built 4-5 years ago as I see in git commits. It is started as `/usr/bin/twistd --nodaemon --pidfile=/var/run/twistd.pid web --wsgi application.APP`
[19:39:08] <zumba_addict> Right now, I'm trying to get it using `/usr/local/bin/twistd --nodaemon --pidfile=/var/run/twistd.pid web --wsgi application.APP`
[19:40:33] <zumba_addict> When I run that command, I get the apt error - https://bpa.st/MGDA
[19:41:32] *** Joins: Azin (~Azin@user/azin)
[19:43:11] <zumba_addict> any ideas how I fix it?
[19:44:05] *** Joins: nomic (~nomic@185.192.69.208)
[19:46:23] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:5519:4b72:484:51a2)
[19:47:15] *** Quits: nomic (~nomic@185.192.69.208) (Client Quit)
[19:47:26] <zumba_addict> apt-get install python-apt keep on installing it in /usr/bin/python instead of the other python
[19:47:33] *** Joins: nomic (~nomic@185.192.69.208)
[19:48:13] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:49:18] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:49:41] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[19:50:10] *** Joins: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net)
[19:51:22] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[19:51:45] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Client Quit)
[19:52:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:52:10] *** Quits: Macuser (~Macuser@2601:5c4:4302:2c70:8c10:7015:b493:7480) (Quit: Textual IRC Client: www.textualapp.com)
[19:53:23] <gitesh> I did `conda create -n py3env python=3.8.5 anaconda` it's taking a lot time.
[19:53:29] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[19:54:31] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:54:44] *** Quits: bauripalash (~bauripala@2401:4900:3829:6c07:1:1:6c70:8df0) (Read error: Connection reset by peer)
[19:54:55] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:20d7:bbf1:581c:1ef3)
[19:56:15] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:5732:53b4:430:eff1)
[19:56:59] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 245 seconds)
[19:57:17] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Max SendQ exceeded)
[19:58:50] <han-solo> zumba_addict: did someone build the python in `/usr/local/` manually ? or was that installed with `apt` as well ?
[19:58:55] *** Joins: beterraba (~beterraba@86.107.21.205)
[19:59:27] <zumba_addict> han-solo I am not sure if someone build python in /usr/local. Most likely someone did. It's an old system
[19:59:40] <han-solo> if the former, i;m not sure you can get the module for /usr/local/bin python with `apt`. So you are better off creating a virtualenv
[19:59:45] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945)
[19:59:50] <zumba_addict> I can use /usr/bin/python but I keep getting error when starting the job
[20:00:06] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[20:00:12] <han-solo> yeah, make a virtualenv for that python, and install the deps using pip ?
[20:00:36] <zumba_addict> but i am thinking it might not work because /usr/bin/twistd points to /ur/bin/python too
[20:00:54] <zumba_addict> the application is started using twistd like this
[20:01:06] <zumba_addict> `/usr/bin/twistd --nodaemon --pidfile=/var/run/twistd.pid web --wsgi application.APP`
[20:01:21] <han-solo> ...would you able to use the twisted from /path/to/venv/bin/twistd ?
[20:01:53] <zumba_addict> honestly, I am not familiar with twistd much
[20:02:15] <han-solo> https://pypi.org/project/Twisted/
[20:02:19] *** Joins: _ev (~ev@user/ev/x-8999918)
[20:02:35] <zumba_addict> Looking at the docker file, they are installing it like this `apt-get install python-twisted`
[20:03:53] <han-solo> does the docker file have info on if they were building manually ?
[20:04:14] <zumba_addict> let me check
[20:04:43] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:05:04] <zumba_addict> none. It's just a pip install of requirements.txt
[20:05:56] <zumba_addict> https://bpa.st/SZYA
[20:07:04] <zumba_addict> Then what get's me so much confused is their used of /usr/local/bin/pip and the twistd command uses /usr/bin/python
[20:10:01] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[20:10:21] <zumba_addict> I don't know if the results of `apt-get install python-twisted` will be the same as `pip install twisted` since the former generated a file in /usr/bin/twistd. I am not sure if /usr/bin/twistd was created by previous colleagues. Or maybe it was installed by python-twisted. Here's the code, it's short.
[20:10:46] <zumba_addict> https://bpa.st/JXGQ
[20:10:46] <han-solo> yeah, that is confusing
[20:10:53] <zumba_addict> yep
[20:10:57] <han-solo> no no, twistd comes from the package `twisted`
[20:11:04] <han-solo> i think
[20:11:08] <zumba_addict> k
[20:11:22] <zumba_addict> if you look at the code, it uses /usr/bin/python
[20:11:32] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Remote host closed the connection)
[20:11:54] <zumba_addict> but they're using /usr/local/bin/pip install -r requirements.txt. Which is why when I start twistd, it is getting an error. Let me run it
[20:12:35] *** Joins: ryutas (~user@116.46.219.130)
[20:15:23] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[20:16:46] <han-solo> anyway, could you try creating a virtualenv, and install twisted and the other dependencies in there, and start /path/to/venv_dir/twistd ... and see if it works
[20:18:19] <zumba_addict> will do
[20:18:26] <zumba_addict> i want to share this with you https://bpa.st/HUQA
[20:18:44] <_ev> New to pandas, trying to prepend a value to a column. Do I need to do a replace for this, similar to likeso?:  https://bpa.st/S3LQ
[20:19:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[20:19:35] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[20:19:49] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:20:17] *** Joins: spithash (~spithash@user/spithash)
[20:22:56] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 265 seconds)
[20:23:06] <zumba_addict> I'm completed creating a virtual env. I've installed requirements too. However, now I am stuck at how to start it with twistd
[20:24:09] <zumba_addict> also done installing twisted
[20:24:24] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.2)
[20:24:28] <zumba_addict> oh wow
[20:24:39] <zumba_addict> it created a new twistd daemon in my virtualenv
[20:24:48] <zumba_addict> i'll try the app now
[20:25:15] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945) (Quit: WeeChat 3.3)
[20:25:37] <zumba_addict> got an error `No such WSGI application: 'packageresolve.APP'`
[20:25:40] *** Quits: XV8 (~XV8@2601:5cb:c001:50:78:e67a:19d1:b3c9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:59] *** Joins: Vonter (~Vonter@user/vonter)
[20:26:51] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3cf6:95c4:3bb3:f50a)
[20:27:19] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3cf6:95c4:3bb3:f50a) (Client Quit)
[20:27:53] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945)
[20:28:07] <zumba_addict> someone asked the same question 2 years ago, nobody responded to him :(  https://www.reddit.com/r/flask/comments/ckfoa7/twisted_wsgi_issue/
[20:28:31] <_ev> zumba_addict:  Do you know what a WSGI is?
[20:28:57] <_ev> Not assuming you don't. Just best to start there.
[20:29:21] *** Joins: kolcon (~kolcon@v.kolouch.org)
[20:29:46] *** Joins: khrbt (~znc@user/khrbt)
[20:30:22] *** Joins: finsternis (~X@23.226.237.192)
[20:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:31:02] <zumba_addict> you are correct, I don't know what wsgi is
[20:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:32:21] <zumba_addict> I'm reading this now, hoping to find info about wsgi - https://twistedmatrix.com/documents/current/
[20:32:49] <zumba_addict> ah it's like a middleware - https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface
[20:34:41] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 245 seconds)
[20:35:01] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[20:36:33] <zumba_addict> I'm also searching inside the whole project that was built by previous colleagues, I couldn't find `from twisted.internet` which I think is normally used for wsgi applications
[20:36:51] <zumba_addict> got that idea from https://twistedmatrix.com/documents/13.1.0/web/howto/web-in-60/wsgi.html
[20:36:52] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:38:27] <zumba_addict> this is so weird. They didn't even use twisted module in their code yet they used twistd to start their apps. Now I'm even more confused
[20:39:17] <_ev> Na, it's not middleware. It's the web server service itself. Nginx/Apache
[20:40:07] *** Joins: jazzy (~jaziz@172.58.35.83)
[20:40:20] <zumba_addict> ah
[20:40:48] <_ev> You may with to look into Gunicorn and read some of that. I have never worked with twisted myself. I know some true experts linger here, but I don't think people appreciate many messages/posts. Perhaps organize something sufficient  in the form of a pastebin http://bpa.st
[20:40:49] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[20:41:03] <_ev> s/with/want
[20:41:22] <zumba_addict> k
[20:41:34] <SnoopJ> There is a PEP that explains WSGI: https://www.python.org/dev/peps/pep-3333/
[20:41:36] <zumba_addict> I'll put it in a pastebin
[20:42:17] <zumba_addict> I mean in gist. Thank you SnoopJ
[20:42:35] <SnoopJ> The very short version: WSGI is a standardized way for a web server (like nginx, Apache) to defer to another application to figure out what content to actually serve.
[20:42:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:42:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[20:43:12] *** Joins: jinsun (~quassel@user/jinsun)
[20:44:14] *** Parts: dagwood (~textual@pool-108-45-46-117.washdc.fios.verizon.net) (Textual IRC Client: www.textualapp.com)
[20:44:18] <atomicwrites> Hi, I remember using a package once which did some import magic to wrap shell commands in a python function so you could using it to make python shell scripts essentially, but I can't find it now. So it would be something like:
[20:44:20] <atomicwrites> ```
[20:44:21] *** Quits: hrob (~hrob@2a01:6f01:b602:d465:1612:2c8a:99d6:5dec) (Quit: Client closed)
[20:44:22] <atomicwrites> from [somepkg] import ls, xargs
[20:44:24] <atomicwrites> xargs("cat", ls("/etc"))
[20:44:26] <atomicwrites> ```
[20:44:28] <atomicwrites> is equivalent to "ls /etc | xargs cat". Useless example, but it lets you use python for logic while easily breaking out to the shell when needed. Anyone know what it is? Thanks.
[20:45:42] <zumba_addict> Got it
[20:46:03] <zumba_addict> so WSGI is like a reverse proxy
[20:46:35] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:46:40] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[20:47:10] <zumba_addict> Just saw there is a README.md in this project. I'm going to try if it works on my laptop too. If it doesn't the docker image is really f* up
[20:48:09] <SnoopJ> Not really like a reverse proxy. The concept is known as a "gateway", hence the G in WSGI, and also in CGI, which came before WSGI and inspired it.
[20:48:20] *** Joins: zeden (~zeden@user/zeden)
[20:48:54] <SnoopJ> user <--[connection]--> web server <--[gateway]--> application
[20:49:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:50:34] *** Joins: MikZyth (~MikZyth@188.65.242.140)
[20:51:55] *** Quits: jazzy (~jaziz@172.58.35.83) (Quit: Beddie bye-bye)
[20:53:54] <atomicwrites> I think a reverse proxy (or any proxy) uses http to communicate to both the user and the server. In WSGI, there is no HTTP server on the back end, its what takes the data that the application wants to send (or is receiving) and gives it to the HTTP server to have it handle the HTTP part. But I'm not the most familiar with this stuff.
[20:55:28] <zumba_addict> ah
[20:55:58] <NoImNotNineVolt> i never really understood cgi or wsgi from that standpoint. by what mechanism does the ipc between the web server and application actually happen? presumably there should be some sort of ipc happening...
[20:56:34] <SnoopJ> «The WSGI interface has two sides: the "server" or "gateway" side, and the "application" or "framework" side. The server side invokes a callable object that is provided by the application side.»
[20:56:40] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[20:56:49] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:57:01] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[20:57:23] *** Joins: jazzy (~jaziz@172.58.35.83)
[20:57:38] *** jazzy is now known as jazz-o-lantern
[21:01:33] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[21:01:33] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[21:02:07] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[21:02:07] *** Joins: vancz (~vancz@user/vancz)
[21:02:18] <deniska> atomicwrites: sh
[21:02:24] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Ping timeout: 245 seconds)
[21:03:25] *** Joins: cdown (~cdown@151.82.141.214)
[21:03:29] <zumba_addict> Thank you SnoopJ. What could be the reason why the newer twistd is saying there is no wsgi application found?
[21:04:55] <SnoopJ> zumba_addict, I would have better answers to that question if I could see the complete error report
[21:05:07] *** Quits: sarna (~sarna@c40-227.icpnet.pl) (Ping timeout: 252 seconds)
[21:05:18] *** Quits: Azin (~Azin@user/azin) (Quit: Leaving...)
[21:05:26] <zumba_addict> sure, let me put everything in a gist. Thank you
[21:05:59] *** Joins: node1 (~node1@user/node1)
[21:06:10] *** Parts: _ev (~ev@user/ev/x-8999918) ()
[21:07:44] *** Joins: sirquack (~sirquack@2601:643:8680:526:4014:eafe:80d5:789e)
[21:07:54] <sirquack> hi
[21:08:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[21:09:16] <zumba_addict> Here it is SnoopJ - https://bpa.st/BFBA
[21:09:25] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: ttfn, Ta Ta For Now!)
[21:09:36] <sirquack> whats a good way of storing data after a program is closed? text files are fine but sometimes they wont save correctly in my experience (i know about replit database but i would prefer it to be on my computer)
[21:09:50] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[21:10:09] <deniska> sirquack: consider sqlite
[21:10:19] <ChrisWarrick> sirquack: what kind of data, and what issues are you seeing with text files?
[21:10:48] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[21:10:52] *** Joins: han-solo (~hanish@user/han-solo)
[21:11:16] *** Quits: cdown (~cdown@151.82.141.214) (Ping timeout: 265 seconds)
[21:11:35] <zumba_addict> SnoopJ Let me know if you still need more information
[21:11:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[21:12:09] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Remote host closed the connection)
[21:13:28] *** Joins: fikran (~fikran@user/fikran)
[21:14:02] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[21:14:14] <sirquack> ChrisWarrick: this is probably me doing something wrong but when stopping the program, despite me writing code to save everything, it has old data
[21:14:42] <SnoopJ> zumba_addict, what does `ls packageresolve/` look like? (or `tree packageresolve/` if you have it installed)
[21:14:55] <zumba_addict> sure, one sec
[21:15:09] <ChrisWarrick> sirquack: you might be saving in the wrong place, you might be looking at the file before closing it
[21:15:27] <SnoopJ> zumba_addict, it seems like twistd can't import your package. That probably means it's either malformed, or it doesn't want to look for packages in the directory you invoked it from. You might need to install it, or set PYTHONPATH (install would be the far better option).
[21:15:49] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:15:52] <sirquack> ChrisWarrick: ah alright
[21:15:53] <zumba_addict> https://bpa.st/IOLA
[21:16:05] <sirquack> ChrisWarrick: thanks
[21:16:17] <ChrisWarrick> sirquack: you’re welcome
[21:16:26] <ChrisWarrick> sirquack: although I also think you might want to look into sqlite
[21:16:48] <zumba_addict> I tried PYTHONPATH but I'm not sure which directory I should supply. I supplied PYTHONPATH=/opt. Should I also add packageresolve?
[21:16:53] *** Joins: ravan (~ravan@user/ravan)
[21:17:07] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Client Quit)
[21:17:35] <zumba_addict> oh new error
[21:17:37] <ledtc> can i do if(a==1)&&(b==2){}  in c++ =
[21:17:40] <ledtc> c++ ?
[21:17:52] <ChrisWarrick> zumba_addict: don’t use PYTHONPATH at all
[21:17:57] <zumba_addict> SnoopJ after setting PYTHONPATH to /opt, I am now getting `ImportError: cannot import name FileStorage`
[21:17:59] <ledtc> obs wrong channel
[21:18:01] <sirquack> ChrisWarrick: yeah, ive tried learning sql before, but it was a bit confusing, but i will look into it a bit more
[21:19:24] <ChrisWarrick> sirquack: basic sql (in a way that's enough to use sqlite-as-a-file-format) is fairly straightforward
[21:19:45] <zumba_addict> SnoopJ after doing a pip install FileStorage, I got `ERROR: Could not find a version that satisfies the requirement FileStorage (from versions: none)` Weird. Is FileStorage a module?
[21:20:47] <ChrisWarrick> zumba_addict: show full traceback? (and stop using $PYTHONPATH)
[21:20:53] <zumba_addict> I think I came accross this last night
[21:20:54] <SnoopJ> zumba_addict, I have no idea, but yes, seeing the complete error is always useful.
[21:21:06] <SnoopJ> and installing your module is a much better idea than messing with PYTHONPATH
[21:21:06] <zumba_addict> oh, sorry
[21:21:18] *** Quits: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:21:20] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[21:22:56] *** Joins: vimart (~vimart@85.255.233.1)
[21:23:02] <zumba_addict> Here you go - https://bpa.st/GTEQ
[21:23:57] <ChrisWarrick> zumba_addict: you might have some stray `werkzeug.py`
[21:24:19] <zumba_addict> yes there is as shown by pip freeze. It's in the requirements.txt
[21:24:21] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se)
[21:24:43] <ChrisWarrick> zumba_addict: I’d nuke all your things in /opt and reinstall the venv, then you could either make the rest of your app installable, or at least get it working without $PYTHONPATH (run in the correct working directory)
[21:25:22] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.136.48.mobile.tre.se) (Client Quit)
[21:25:29] <SnoopJ> installable app +1
[21:26:11] <zumba_addict> the venv is newly created an hour ago. But sure I'll create a new venv
[21:26:33] <han-solo> or maybe they moved the `FileStorage` to somewhere else,
[21:26:45] *** Joins: stockholm (~Andreas@p200300d2c72cb00024101de045c4546c.dip0.t-ipconnect.de)
[21:26:54] <han-solo> so i'm reading you need to install a pariticular version of `werkzeug` or update the import
[21:27:06] <zumba_addict> k
[21:27:43] <han-solo> could you try uninstalling the current version, and `Werkzeug==0.16.1`
[21:27:49] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[21:27:50] <han-solo> s/and/and install/
[21:27:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:28:19] <zumba_addict> I am  honestly not sure why this app started failing. But the requirements,txt is just 3 lines, connexion == 1.5.3 flask == 0.12.4 pathlib == 1.0.1
[21:28:21] <zumba_addict> sure
[21:28:46] <han-solo> https://github.com/zalando/connexion/issues/1149
[21:29:22] *** Quits: LuxuryMode (uid91005@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:29:26] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:30:03] <zumba_addict> ok 0.16.1 is installed. Restarting the app
[21:30:35] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[21:30:40] <zumba_addict> Now I'm back to the apt error - https://bpa.st/7B5Q
[21:31:03] <zumba_addict> this is in a venv env
[21:31:21] *** Quits: sirquack (~sirquack@2601:643:8680:526:4014:eafe:80d5:789e) (Ping timeout: 245 seconds)
[21:31:28] *** Quits: ilmostro (~ilmostro@user/ilmostro) (Client Quit)
[21:31:35] <SnoopJ> Well, since it's not in your requirements.txt, it needs to be installed by hand I guess.
[21:32:05] <zumba_addict> i remember running pip install apt was not found, Let me try again
[21:32:22] <ChrisWarrick> zumba_addict: seems to be `pip install python-apt`
[21:32:29] <zumba_addict> oh ok
[21:32:46] <zumba_addict> it failed too
[21:33:18] <zumba_addict> https://bpa.st/NS5A
[21:33:19] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[21:34:41] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 245 seconds)
[21:35:20] *** Joins: magla (~gelignite@55d47841.access.ecotel.net)
[21:35:34] <SnoopJ> zumba_addict, try installing it with apt: `sudo apt install python-apt`
[21:36:06] <zumba_addict> SnoopJ, it's installed but I don't think it will become part of the installed modules in the venv
[21:36:17] <zumba_addict> it always gets installed with the python in /usr/bin/python
[21:36:23] <SnoopJ> zumba_addict, it shouldn't need to, if the venv was made with the system Python
[21:36:30] <zumba_addict> got it
[21:36:37] <zumba_addict> i'll uininstall and reinstall
[21:36:50] <SnoopJ> oh, maybe you need to make the venv with --system-site-packages for that to be true
[21:37:00] <SnoopJ> not sure why it's failing via pip
[21:37:04] <zumba_addict> ah, that's new to me
[21:37:18] <zumba_addict> i'll deactive and recreate venv
[21:38:49] *** Joins: yitz (~yitz@exercism/yitz)
[21:39:03] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[21:39:04] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[21:40:31] <aphysically> jinsun: I think I should just disable the unused type: ignore check in mypy if I'm using other type checkers
[21:40:34] <aphysically> :P
[21:40:59] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:41:14] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:41:50] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 260 seconds)
[21:41:57] <jinsun> oh are you using mypyc specific comments also?
[21:42:01] <aphysically> I ran into this pattern, but I'm still thinking about it: I have a bunch of I/O things I want to run only under certain conditionals, and they each have a ~30 ms overhead. Startup time is significantly reduced if I run these in parallel
[21:42:40] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:20d7:bbf1:581c:1ef3) (Quit: Client closed)
[21:42:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:b814:bd17:1c14:5388)
[21:42:52] <aphysically> so I do this: I check a conditional for all of them to decide if I should submit the thread to an executor, then later I check the same conditional to see if I should check the result; this allows them all to run in parallel pretty simple and go from half a second to 30 ms
[21:43:01] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 245 seconds)
[21:43:21] <aphysically> but pyright complains that the futures are possibly unbound, because it doesn't know that they're bound and then checked under separate (but identical) conditionals
[21:43:21] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:44:39] <aphysically> right now I'm thinking if there's a better solution to do what I want that doesn't repeat the conditionals at all, but really this is a safe spot to use # type: ignore for pyright, but I then need to disable the mypy complaint about unused ignores (it's not like it disables the type checking anyway)
[21:45:32] <zumba_addict> SnoopJ han-solo ChrisWarrick I still encountered `ImportError: No module named apt` even after created the virtualenv using `python -m virtualenv --system-site-packages flask`
[21:45:43] <jinsun> aphysically: for pyright there are equivalent # pyright: comments instead of # type: ignore for all the checks I think
[21:45:51] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[21:46:11] <aphysically> I looked up the documentation and those disable the check for the entire file (not ideal)
[21:46:23] <jinsun> oh weird
[21:46:55] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[21:47:01] <aphysically> I went through the history of issues and pyright's position is # type: ignore is wrong philosophically and they were only convinced to implement it because it's in PEP 484
[21:47:20] <aphysically> so I imagine they feel the same about line-specific pyright
[21:47:24] <jinsun> in this case maybe better to restructure a little, like submit to the threadpool without any checks, and do the check inside the function maybe
[21:47:48] <aphysically> it might, it just results in submitting unnecessary threads for the paths where they're unneeded
[21:49:06] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[21:49:40] <zumba_addict> did I miss anything?
[21:50:00] *** Joins: _ev (~ev@user/ev/x-8999918)
[21:50:04] <aphysically> jinsun: oh oh, I misunderstood, you meant the checks inside the thread functions
[21:50:32] <aphysically> that wouldn't be so bad
[21:52:53] <_ev> How do I strip the index from my export?
[21:52:54] <_ev> https://bpa.st/P2LQ
[21:53:05] <jinsun> aphysically: yeah you will just do the checks multiple times instead of once in the main thread, but just doing an if check and completing won't be too bad
[21:54:29] <aphysically> it's actually been a pretty interesting problem making this startup/encode setup snappy in general. I need to know a bunch of information about the file being encoded, so there's a ton of I/O limited stuff everywhere
[21:55:10] <zumba_addict> so weird, https://pypi.org/project/python-apt/, they have the instruction in that page but my pypi can't find it
[21:55:26] <atomicwrites> deniska: Awesome, yeah `sh` is what I was looking for. I thought it may have been shlib but that's a path manipulation library, or shutil but that a builtin. Thanks.
[21:56:12] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[21:56:13] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[21:56:14] *** Quits: c4017w (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[21:56:20] <jinsun> _ev: `df.to_excel(..., index=False)` ?
[21:56:36] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:56:37] *** Joins: c4017w (~c4017@209.52.68.8)
[21:57:27] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[21:57:32] *** Quits: erica (~erica@user/erica) (Quit: Ping timeout (120 seconds))
[21:57:33] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[21:57:43] <_ev> jinsun: Ehh, thank you. I feel foolish.
[21:58:07] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[21:58:12] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[21:58:28] *** Joins: erica (~erica@user/erica)
[21:58:29] *** Quits: poorboy_ (~poorboy@159.89.189.144) (Quit: ZNC - http://znc.in)
[21:58:32] *** Quits: MrSpooky (Ben@mrbenc.net) (Remote host closed the connection)
[21:58:42] *** Joins: poorboy (~poorboy@159.89.189.144)
[21:58:47] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[21:58:48] *** Quits: pankid (~quassel@pankid.club) (Quit: No Ping reply in 180 seconds.)
[21:59:21] *** Quits: magla (~gelignite@55d47841.access.ecotel.net) (Quit: Stay safe!)
[21:59:40] *** Quits: _ev (~ev@user/ev/x-8999918) (Quit: Leaving.)
[21:59:54] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 245 seconds)
[21:59:55] *** Joins: MrC (Ben@mrbenc.net)
[22:00:07] *** Joins: pankid (~quassel@pankid.club)
[22:00:28] *** Joins: Akuli (~Akuli@82-203-164-70.bb.dnainternet.fi)
[22:00:41] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[22:01:46] *** Quits: ryutas (~user@116.46.219.130) (Ping timeout: 252 seconds)
[22:02:16] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 252 seconds)
[22:02:51] <Compu-Celebi> At least by default, eric displays all Python code besides the contents of text strings and byte strings in a variable-width font.  That hinders ensuring that no line consists of more than seventy-nine characters.  Why would anyone use such a font for programming code in any language?
[22:03:51] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[22:04:04] <Compu-Celebi> How can eric be configured to display all code in a monospaced font?
[22:05:37] *** Joins: lethu (~lethu@user/lethu)
[22:05:37] *** Joins: yitz (~yitz@exercism/yitz)
[22:05:58] *** Quits: erica (~erica@user/erica) (Quit: Ping timeout (120 seconds))
[22:06:29] *** Joins: erica (~erica@user/erica)
[22:06:54] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Read error: Connection reset by peer)
[22:06:59] *** Quits: poorboy (~poorboy@159.89.189.144) (Quit: ZNC - http://znc.in)
[22:07:02] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[22:07:12] *** Joins: poorboy (~poorboy@159.89.189.144)
[22:07:24] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: No Ping reply in 180 seconds.)
[22:07:43] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:07:50] *** Joins: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com)
[22:07:51] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:08:14] *** Quits: bjb (~bjb@sourcerer.ca) (Ping timeout: 245 seconds)
[22:08:35] *** Joins: mossman93 (~quassel@user/mossman93)
[22:10:30] *** Joins: redrum88_ (~redrum88@user/redrum88)
[22:10:49] *** Joins: mat001_ (~mat001@213.143.69.121)
[22:10:52] *** Joins: kenoba6 (~kenoba@user/kenoba)
[22:11:33] *** Joins: rambleba1 (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:11:36] *** Joins: decimuscorvinus_ (~jimmy@136.37.105.112)
[22:11:39] <deltab> Compu-Celebi: why does the specific number of characters matter? Width matters because it affects the chances of the line wrapping
[22:11:59] *** Joins: Dotz0cat_ (~Dotz0cat@h63.70.29.71.dynamic.ip.windstream.net)
[22:12:14] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[22:12:44] *** Joins: Bitflux (~byte@byteflux.net)
[22:12:45] *** Joins: bfortifi- (~bfortifie@user/bfortified)
[22:12:52] *** Quits: murr4y (ali@user/murr4y) (Ping timeout: 245 seconds)
[22:12:52] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Ping timeout: 245 seconds)
[22:12:52] *** Quits: redrum88 (~redrum88@user/redrum88) (Read error: Connection reset by peer)
[22:12:52] *** Quits: mat001 (~mat001@213.143.69.121) (Read error: Connection reset by peer)
[22:12:52] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[22:12:52] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[22:12:52] *** Quits: Byteflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[22:12:52] *** Quits: bfortified (~bfortifie@user/bfortified) (Remote host closed the connection)
[22:12:52] *** Quits: Dotz0cat (~Dotz0cat@h63.70.29.71.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:12:52] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[22:12:52] *** Quits: zigo (~quassel@shade.infomaniak.ch) (Quit: No Ping reply in 180 seconds.)
[22:12:53] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Remote host closed the connection)
[22:12:53] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Remote host closed the connection)
[22:12:53] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: No Ping reply in 180 seconds.)
[22:12:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[22:12:53] *** Quits: Roey (~Roey@user/Roey) (Ping timeout: 245 seconds)
[22:12:53] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 245 seconds)
[22:12:53] *** kenoba6 is now known as kenoba
[22:12:53] *** Dotz0cat_ is now known as Dotz0cat
[22:12:56] *** redrum88_ is now known as redrum88
[22:13:03] *** Joins: BigShip (~BigShip@user/bigship)
[22:13:08] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[22:13:15] *** Joins: Roey (~Roey@user/Roey)
[22:13:15] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[22:13:33] *** Quits: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com) ()
[22:13:38] *** Joins: bjb (~bjb@sourcerer.ca)
[22:13:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:14:06] <aphysically> jinsun: what do you think? I inlined the checks in a lambda (there's going to be more of these checks probably)
[22:14:09] <aphysically> https://github.com/GBeauregard/pyffstream/commit/fa7f7845ce5e1adc6526fb6efb9750db8c48c147
[22:14:15] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[22:14:38] <aphysically> it's not obvious why these are expensive; the calls to the ff_bin properties actually need to run the ffmpeg binary in a subprocess and query information from them
[22:15:01] <aphysically> but they're cached_properties so it's only ever run once at least
[22:15:28] *** Joins: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com)
[22:15:32] <aphysically> (happening in a subprocess is also why it's efficient to do these in parallel)
[22:15:56] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[22:18:29] *** Joins: Klinda (~superleag@user/klinda)
[22:18:33] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[22:19:01] <aphysically> side note: black managed to make those lambdas a lot less ugly than I thought it would
[22:20:25] <aphysically> another solution was initialize all the futures to None and check not None later (spurious check, but would be needed to satisfy type checkers)
[22:22:18] *** Joins: hudo (~hudo@62.68.20.210)
[22:23:35] <ChrisWarrick> Compu-Celebi: I wouldn’t bother with some random editor, just use PyCharm
[22:24:16] <Compu-Celebi> Oh, I just noticed people responded to my messages.
[22:25:15] *** Quits: NatalieTheTiny (uid247415@id-247415.helmsley.irccloud.com) ()
[22:26:01] <jinsun> aphysically: looks good, although if it is subprocess, then maybe you could avoid threads completely with Popen (though it might get uglier than this)
[22:26:37] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[22:26:55] <aphysically> well, that would get in the way of some of the cached property magic I'm doing behind the scenes in ff_bin's class I think
[22:27:02] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[22:27:15] <Compu-Celebi> deltab, I do not know how that is intended to answer my first inquiry.
[22:27:23] <aphysically> but yeah I"m not too keen on making it much uglier than this
[22:27:25] *** Joins: Axy (~Axy@user/axy)
[22:31:04] <zumba_addict> can I tar pyshared/apt and put it over to my virtualenv?
[22:31:17] <Compu-Celebi> Line wrapping being affected by using a variable-width font is irrelevant when code should only be displayed in a monospaced font.
[22:31:50] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:707a:a74a:1ce1:5762) (Quit: Textual IRC Client: www.textualapp.com)
[22:33:38] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[22:35:29] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[22:36:25] <Compu-Celebi> Part of the point in using a monospaced font is to ensure that whether a line is wrapped is unaffected by changing the typeface.
[22:36:35] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Client Quit)
[22:36:41] <SnoopJ> Compu-Celebi, best advice: if you are obsessed with prescribing to others how they should program, avoid others.
[22:36:47] *** Joins: magla (~gelignite@55d47841.access.ecotel.net)
[22:37:46] <SnoopJ> not sure about the eric editor, that's a new one on me
[22:38:13] <Compu-Celebi> I am merely attempting to understand what eric's developers were thinking when they decided to have it using a variable-width font for code and to configure to not do so.
[22:38:39] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 245 seconds)
[22:38:46] <Compu-Celebi> ChrisWarrick, I installed eric because, after I mentioned using IDLE, I was informed that it is for novices and that I should use a more advanced IDE.
[22:38:57] <ChrisWarrick> Compu-Celebi: use pycharm
[22:38:59] <Compu-Celebi> I also seem to recommend whoever informed me of that recommending eric as an alternative.
[22:39:01] <SnoopJ> Text editors edit text, use whatever tool you like.
[22:39:44] <SnoopJ> Your question about motivation for variable-width fonts may make sense on their mailing list
[22:40:23] <Compu-Celebi> What is PyCharm?
[22:40:38] <han-solo> an IDE
[22:40:44] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:40:46] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[22:40:52] <SnoopJ> JetBrains's Python IDE: https://www.jetbrains.com/pycharm/
[22:42:18] <Compu-Celebi> Linux Mint's repositories seem to have no package for it.
[22:43:17] <ChrisWarrick> you might need to install it manually
[22:43:24] *** Quits: paruh (~paruh@92.60.39.18) (Quit: paruh)
[22:43:26] *** Joins: emerent_ (~quassel@p200300cd57485520ba27ebfffed28a59.dip0.t-ipconnect.de)
[22:43:26] *** emerent is now known as Guest344
[22:43:26] *** Quits: Guest344 (~quassel@p200300cd57485545ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[22:43:26] *** emerent_ is now known as emerent
[22:43:42] <Compu-Celebi> That webpage refers to a "free trial" but also a "free" edition that is "open-source."
[22:43:44] *** Joins: jiffe (~jiffe@mail.nsab.us)
[22:44:15] <SnoopJ> The community edition is the free/open-source one.
[22:45:10] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 252 seconds)
[22:45:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:45:21] *** Joins: bilb_ono (~alexmarsh@ip184-189-224-55.sb.sd.cox.net)
[22:45:40] <gitesh> What is the difference between a library and a package?
[22:45:48] <vimart> Compu-Celebi: why not contact Eric developers then?
[22:45:50] <SnoopJ> gitesh, they are synonyms in Python
[22:46:02] <vimart> quote: Compu-Celebi | I am merely attempting to understand what eric's developers were thinking when they decided  │ abhixec
[22:46:04] <vimart>                │                      | to have it using a variable-width font for code and to configure to not do so.
[22:46:15] <Compu-Celebi> Wikipedia has an article about PyCharm.
[22:46:15] <Compu-Celebi> The free trial is for the professional edition, as the webpage indicated, and released under a proprietary license, and the free edition is the community edition and released under the Apache License.
[22:46:34] <Compu-Celebi> I prefer to use software whose only editions are non-proprietary.  I dislike dealing with a reduced feature set for the sake of not being subjected to proprietary licenses and not spending currency.
[22:46:44] <SnoopJ> PyCharm is not for you, then.
[22:46:51] <vimart> :-)
[22:47:13] <gitesh> SnoopJ: I guess a package is collection of modules
[22:47:16] <vimart> That's a straight fact
[22:47:16] <ChrisWarrick> Compu-Celebi: well, the reduction isn’t that large, but you do you
[22:47:18] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:47:29] <gitesh> SnoopJ: sorry library I meant
[22:47:50] <gitesh> SnoopJ: and package has dunderscore init.py
[22:49:17] <SnoopJ> gitesh, a package is a module with __path__ defined. https://docs.python.org/3/glossary.html#term-package
[22:49:48] <SnoopJ> (and "library" is not a term python.org defines, but we often refer to top-level packages this way)
[22:50:28] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:50:41] <Compu-Celebi> vimart, I was hoping that people who are possibly more experienced at Python programming than me would have insight into the rationale, because I could be lacking knowledge about the topic that would enable me to ascertain what the rationale is by merely applying logic.
[22:51:09] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 245 seconds)
[22:51:17] <SnoopJ> Best guess: because they wanted it and/or believed that some of their users would.
[22:51:28] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[22:51:33] <meejah> Compu-Celebi: many free/open projects struggle to get enough funding. I assume that's PyCharm's attempt at securing enough funding to pay devs
[22:51:39] <Compu-Celebi> I would not message developers about their software for any purpose but to request technical assistance, and I would not use a mailing list, a forum, or whatnot, for privacy reasons.
[22:52:18] *** Joins: murr4y (ali@user/murr4y)
[22:52:46] <meejah> a similar model is followed by e.g. GitLab (although they also host services, which you can pay for, so not precisely the same)
[22:52:50] <gitesh> SnoopJ: okay thanks
[22:53:05] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[22:53:35] <SnoopJ> Compu-Celebi, we can at best speculate. Do you have any Python questions?
[22:53:42] <Compu-Celebi> By the way, eric lacks proper documentation.  I attempted to consult its webpage about how to configure it to display all code in a monospaced font, but it says almost nothing about how to operate eric.
[22:54:11] <meejah> Compu-Celebi: emacs and vi are two extremely popular editors, maybe try whichever of those you prefer..?
[22:54:35] <Compu-Celebi> I am a GNU Emacs user, but I use an IDE, not a text editor, for programming in Python.
[22:54:53] <hogarius> Compu-Celebi: you're asking people who are not the developers of Eric and who do not use Eric and who are not familiar with Eric how Eric works.
[22:55:12] <meejah> Compu-Celebi: emacs is an IDE
[22:55:26] <meejah> (you just have to spend more time configuring it than most ;)
[22:55:36] <SnoopJ> SWIG question: I am writing a typemap of the form `%typemap(in) acme::Anvil& (Py_buffer* pybuf) { /* ... */ }` and need to call PyBuffer_Release() at the end of the typemap. Is there any way to get the name of the temporary when writing the corresponding `%typemap(free)` or do I basically just have to guess or write a helper?
[22:55:39] <Compu-Celebi> Yet, I cannot execute programs in GNU Emacs by pressing a function key, like F5, as I can in, for example, IDLE.
[22:55:51] <SnoopJ> Sure you can
[22:56:07] <SnoopJ> #emacs could tell you how to set that up
[22:57:12] <vimart> Compu-Celebi: I support meejah proposition. BTW I'm Vim lover, you shout look into it.
[22:58:00] <Compu-Celebi> GNU Emacs' Python menu contains no items for executing the current buffer's code.
[22:59:58] <Compu-Celebi> vim does not have an intuitive interface, nor can the cursor even be moved by pressing the arrow keys.
[23:00:11] <han-solo> sure you can
[23:00:22] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:01:15] <Compu-Celebi> I typed, "This is a test," into it and tried pressing the leftward arrow key to move the cursor.  Instead, bizarrely, it seemingly created a new line above it that consisted of a capital D and moved the cursor to its right end.
[23:01:17] <SnoopJ> There is very little that these two editors cannot be configured to do, but configuring them is out of scope for this channel. People in either #emacs or #vim will have lots of info.
[23:01:31] *** Joins: nomic (~nomic@185.192.69.208)
[23:01:47] <Compu-Celebi> Also, unlike GNU Emacs, vim has no GUI.
[23:01:55] *** Joins: semeion (~semeion@user/semeion)
[23:01:58] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945) (Quit: WeeChat 3.3)
[23:02:03] <meejah> Compu-Celebi: as with a lot of free/open software, it can be very powerful but may take some learning/time to set up properly. Rest assured, emacs or vim _can_ be an IDE but you have to put in time (or pay for someone else's time)
[23:02:17] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945)
[23:02:36] <SnoopJ> If you wanted a graphical interface for vim, that's what gVim is. But we're not in #vim, so let's avoid an editor flamewar.
[23:02:49] <meejah> (please join #python-offtopic if you wish to pursue this further...)
[23:04:29] <Compu-Celebi> Why would GNU Emacs require any configuration in order to be able to execute a Python program in response to a function key being pressed?  Why does it not already have such a feature?
[23:04:45] <SnoopJ> That is also a question for #emacs
[23:04:47] *** Joins: DF32 (~DF32@2001:8a0:f8a0:9a00:7cf0:bf12:756d:927c)
[23:04:54] <Compu-Celebi> I was uncertain.
[23:05:00] <SnoopJ> You may ask there if you'd like the answer
[23:05:55] * aphysically learned about __slots__
[23:06:41] *** Quits: jbe (~hellother@lysator/root/jbe) (Ping timeout: 264 seconds)
[23:06:49] <aphysically> I don't think this sort of microoptimization really affects me, but it's interesting I guess; and apparently dataclasses added ability to generate it automatically in 3.10
[23:07:18] <SnoopJ> aphysically, it's useful when you want to avoid a dict lookup, but this isn't super common
[23:07:44] <BrenBarn> It can be useful if you're creating huge numbers of objects
[23:07:54] <aphysically> SnoopJ: is there reasons you'd want that for reasons other than performance or RAM?
[23:08:45] <KirkMcDonald> __slots__ doesn't really avoid a lookup. It just changes where the lookup happens.
[23:08:49] <SnoopJ> aphysically, I'm not sure what you're getting at with the qualification, but I can't really think of anything. I guess __slots__ declares intent of contents in a roundabout way, but attrs/dataclass is better at that.
[23:08:50] <gitesh> What's the difference between pillow library and PIL library?
[23:08:50] <han-solo> to not have unwanted attribute assignment ?
[23:08:58] <KirkMcDonald> gitesh: Pillow is a fork of PIL.
[23:09:02] <SnoopJ> KirkMcDonald, doesn't it avoid computing a hash?
[23:09:10] <gitesh> Means what KirkMcDonald
[23:09:19] <KirkMcDonald> SnoopJ: It shoves it over to a descriptor on the class, rather than in the instance's __dict__
[23:09:20] <SnoopJ> gitesh, nobody should be using PIL, Pillow is a drop-in replacement that is strictly better.
[23:09:57] <SnoopJ> KirkMcDonald, right, which avoids that computation if I'm not mistaken. As BrenBarn said, that could be a large improvement over a large number of instances.
[23:10:11] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[23:10:12] <KirkMcDonald> SnoopJ: It still has to look up the descriptor in the class's __dict__
[23:10:28] <SnoopJ> KirkMcDonald, what about slots classes that don't have one?
[23:11:17] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945) (Quit: WeeChat 3.3)
[23:11:17] *** Joins: water_27300935_ (~xe@182.90.96.72)
[23:11:27] <SnoopJ> as I understood it, you basically get your own descriptor slot, and when you access those attributes, you go straight there in the same way you get the builtin tp_* members
[23:11:58] <SnoopJ> and the most expensive step in the elided stuff is probably computing the string hash AIUI, but I've never really looked deeply into it
[23:12:15] * SnoopJ might have just misunderstood
[23:12:18] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945)
[23:12:24] *** Quits: paul424 (~tom@apn-37-249-81-20.dynamic.gprs.plus.pl) (Remote host closed the connection)
[23:12:25] <KirkMcDonald> SnoopJ: But the name is dynamic. It can't do that.
[23:12:56] *** Joins: bloody (~bloody@user/bloody)
[23:12:59] <SnoopJ> KirkMcDonald, sorry, I'm not sure what you mean. I can't change the name of a slot declared by `__slots__ = ('foo',)`, can I?
[23:13:02] <KirkMcDonald> SnoopJ: The interpreter can only jump straight to the tp_* fields when the operation inherently knows which field is to be used.
[23:13:19] <DF32> Hey, I'm trying to do a CLI app for personal use and at same time get familiar with Python. I'm using the module argparse (ArgumentParser). Imagine I have a progam "p", I wanted to add arguments like "p add" or "p rm" and each of those could have different optional commands. What are the functions for that? When I use parser.add_argument "add" and
[23:13:19] <DF32> "rm" it makes them both required positional argumetns
[23:13:24] <SnoopJ> yes, and my understanding is that __slots__ is a way to tell the runtime "hey, here's some more for you to keep track of"
[23:13:52] <KirkMcDonald> SnoopJ: No. Because when you say `obj.x`, 'x' is just some string, and it needs to look that up.
[23:13:55] <han-solo> DF32: subparser
[23:14:21] <SnoopJ> KirkMcDonald, "no" to what?
[23:14:29] <han-solo> DF32: https://docs.python.org/3/library/argparse.html#sub-commands
[23:14:52] <KirkMcDonald> SnoopJ: No, it can't "go straight there."
[23:15:08] *** Quits: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net) (Read error: Connection reset by peer)
[23:15:12] <SnoopJ> KirkMcDonald, why not? Is there something special about scanning for a name declared in the CPython source vs. one declared in __slots__?
[23:15:13] <han-solo> DF32: also if you are open to installing third party libs, i head https://click.palletsprojects.com/en/8.0.x/ is nice
[23:15:14] *** Joins: ravan (~ravan@user/ravan)
[23:15:20] <han-solo> s/head/hear/
[23:15:34] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:5928:a98:d09b:7b69)
[23:16:20] <KirkMcDonald> SnoopJ: The distinction is in what context the thing is being looked up.
[23:16:20] <aphysically> I already don't have any attributes that are dynamically set on any of my classes to satisfy strict type checkers heh
[23:16:35] <SnoopJ> KirkMcDonald, and the only thing I am stating is that __slots__ lets you do that with not-a-dict. Is that wrong?
[23:16:48] <KirkMcDonald> SnoopJ: When you define a slot, it adds a descriptor to the class's __dict__, and that is how the name is looked up when used: https://bpa.st/UZ6Q
[23:17:00] <SnoopJ> KirkMcDonald, okay, so what happens when I define a class that doesn't have __dict__?
[23:17:00] <meejah> DF32: agree, Click is good
[23:17:12] <water_27300935_> I downloading cuDNN, have some version of RPM,
[23:17:18] <water_27300935_> RedHat/Centos 7.3 x84_64 (RPM)
[23:17:21] <KirkMcDonald> SnoopJ: A *class* with no __dict__? I'm not sure that's even an option with a metaclass.
[23:17:22] <water_27300935_> RedHat/Centos 8.1 x84_64 (RPM)
[23:17:28] <water_27300935_> I using Fedora 34, which version should I download?
[23:17:41] <water_27300935_> I use Intel CPU
[23:17:45] <SnoopJ> KirkMcDonald, oh, I see, it's on the class. I see what you mean now.
[23:18:18] <SnoopJ> ...so why the heck does that improve lookup speed? :|
[23:18:20] <KirkMcDonald> SnoopJ: A descriptor. As I said.
[23:18:25] <KirkMcDonald> SnoopJ: It doesn't! It's slower!
[23:18:38] <SnoopJ> KirkMcDonald, then someone should correct the documentation, which claims that it may be faster.
[23:18:46] <SnoopJ> https://docs.python.org/3/reference/datamodel.html#slots
[23:19:04] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 245 seconds)
[23:19:04] *** Quits: Allegretto (~allegrett@178-164-188-250.pool.digikabel.hu) (Ping timeout: 245 seconds)
[23:19:04] *** Quits: moto (~moto@user/moto) (Ping timeout: 245 seconds)
[23:19:29] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 245 seconds)
[23:19:29] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 245 seconds)
[23:19:54] *** Joins: moto (~moto@user/moto)
[23:19:54] *** Quits: faceface (~faceface@user/faceface) (Ping timeout: 245 seconds)
[23:19:57] * SnoopJ still isn't very clear on "descriptors"
[23:20:03] *** seednode1 is now known as seednode
[23:20:07] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[23:20:11] <DF32> han-solo Hmmm, thanks! That should be at the top....
[23:20:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:20:25] <KirkMcDonald> SnoopJ: A descriptor is a class attribute with a __get__ method, and possibly also with __set__ and __delete__ methods.
[23:20:27] <SnoopJ> but I understand well enough to see the point you're making about there being a dict in there somewhere, which means what I said about lookup is wrong
[23:20:33] *** Joins: faceface (~faceface@user/faceface)
[23:20:35] *** Joins: manti7 (~manti7@176.10.104.94)
[23:20:48] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:20:53] *** Joins: Macuser (~Macuser@2600:1003:b441:999c:b052:756:be94:2d19)
[23:20:57] <KirkMcDonald> SnoopJ: A descriptor allows the *attribute* to control behavior when it is looked up.
[23:20:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:21:06] *** Quits: mei (~mei@user/mei) (Quit: mei)
[23:21:06] <SnoopJ> Yes, I know what they are *for*
[23:21:21] <han-solo> i thought slots were faster :/
[23:21:23] <SnoopJ> I just don't have a good understanding of all the stuff it's meant to explain in this discussion, namely the dict-ness
[23:21:50] <Macuser> Could I have some advice on how to make my program run faster? it's <100 lines but it will take like 6 hours to run on my 245896 line input text file.
[23:21:50] <KirkMcDonald> Well, the key thing is that any descriptor is just an object in the class's __dict__
[23:22:07] <KirkMcDonald> (Or a parent class's.)
[23:22:12] <Macuser> it seems like infile.seek(0) could contribute to it, but it's necessary
[23:22:15] <Macuser> pasting code in one sec.
[23:22:24] *** Quits: LiftLeft (~LiftLeft@191.96.185.36) (Ping timeout: 245 seconds)
[23:22:39] <Macuser> https://bpa.st/7NQQ
[23:22:49] *** Joins: fikran (~fikran@user/fikran)
[23:23:21] <KirkMcDonald> Macuser: You're sure calling line.split(' ') a lot.
[23:23:27] <KirkMcDonald> Perhaps call it once?
[23:23:36] <SnoopJ> does going through that single dict perhaps allow for some kind of attribute lookup caching? I really did think it was potentially faster...
[23:23:49] <SnoopJ> Although if the docs are lying to me, at least I have a partial excuse :)
[23:24:40] <Macuser> oh
[23:24:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[23:25:39] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[23:25:54] <KirkMcDonald> Macuser: I haven't dug into this too closely, but there's gotta be a more concise way of expressing this tree of comparisons.
[23:26:04] <Macuser> heh perhaps.
[23:27:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:27:38] <KirkMcDonald> Macuser: And, also without digging into this too much, I'm curious if there's a way to invert the loops, such that the outer loop is `for line in infile:`, so that you only need to iterate over it once.
[23:27:57] <Macuser> so yeah I had it like that orignally
[23:28:05] <Macuser> but realized it wouldn't work
[23:28:16] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Client Quit)
[23:28:21] <SnoopJ> huh, sure enough `->slots` only appears in typeobject.c and isn't associated with lookup at all. TIL
[23:28:31] *** Joins: sandbox (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[23:28:31] *** sandbox is now known as Spawns_Carpeting
[23:28:36] <SnoopJ> (except inasmuch as the relevant dict is populated)
[23:28:47] <Macuser> but I think it might work if I do it the correct way.. let me think
[23:30:20] <Macuser> oh right so I think it'd require that I sort the file's lines by time KirkMcDonald
[23:30:25] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[23:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[23:30:54] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[23:31:22] *** Joins: Allegretto (~allegrett@178-164-188-250.pool.digikabel.hu)
[23:31:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:46] <Macuser> or not? hold on. gotta think harder about it
[23:32:24] *** Quits: devcpu (~rusty@d50-92-229-34.bchsia.telus.net) (Quit: leaving)
[23:32:49] *** Joins: devcpu (~rusty@d50-92-229-34.bchsia.telus.net)
[23:33:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:35:17] <Repiphany> It looks like some of those if-elif blocks always end up evaluating True and doing the same thing in each case
[23:35:42] *** Joins: LiftLeft (~LiftLeft@191.96.185.36)
[23:35:55] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:707a:a74a:1ce1:5762)
[23:37:06] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:37:06] *** Quits: Csm319_ (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Ping timeout: 260 seconds)
[23:37:19] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[23:37:54] <Macuser> oh shit duh. I copied and pasted it forgetting I just needed put the assignment below the first one
[23:38:02] <Macuser> derp moment there
[23:38:59] <Repiphany> It's impossible to follow what's being done and why with the lack of meaningful naming
[23:39:00] <Macuser> thx Repiphany lol
[23:39:11] <Macuser> yeah I'm an EE student not a CS major
[23:39:15] <Macuser> i'm just hacking together shit
[23:39:25] <han-solo> yeah, i'd throw in some namedtuple or friends on the line.split
[23:40:35] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:41:25] *** jarthur_ is now known as jarthur
[23:43:14] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Ping timeout: 245 seconds)
[23:43:48] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[23:44:20] <Macuser> yeah I just added a line_split = line.split(' ') to the top
[23:44:25] <Macuser> and changing all the line.split() calls now
[23:45:58] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:46:46] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[23:47:24] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.3)
[23:47:52] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[23:48:49] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[23:48:53] *** Parts: water_27300935_ (~xe@182.90.96.72) (WeeChat 3.3)
[23:49:10] <Macuser> hmmm this did not speed it up
[23:49:41] <Macuser> ok so inversing the for loops
[23:50:32] <Macuser> i would need a way to do a while loop
[23:50:45] <Macuser> er.
[23:50:59] <Macuser> nevermind
[23:51:02] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Ping timeout: 245 seconds)
[23:51:19] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:51:35] <rannnn8888> https://bpa.st/ZNNA where i worng here why it not make its multithred ?
[23:51:51] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:52:07] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[23:52:31] <han-solo> rannnn8888: don't call the func, instead pass it in the `target`
[23:52:47] <avu> rannnn8888: you are not running the `worker` function in the thread, you are instead passing its result (None) to `target`
[23:52:57] <han-solo> `threading.Thread(target=worker, args=(i,))`
[23:52:57] *** Joins: grooverman (~grooverma@177.95.12.14)
[23:53:47] <rannnn8888> https://bpa.st/HH6A ?
[23:53:51] <rannnn8888> what u mean
[23:54:16] *** herme5 is now known as el_kevino
[23:54:42] <rannnn8888> https://bpa.st/ZODA this the full
[23:54:54] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:55:25] *** Quits: wender (~Wender@189.37.64.64) (Remote host closed the connection)
[23:55:42] <aphysically> jinsun: I could also move the checks outside the thread and assign a callable that's either lambda: True or the submission result that I call later, which avoids making a thread
[23:55:50] <rannnn8888> k threading.Thread(target=worker, args=(i,)) i think its work
[23:55:58] <aphysically> looks about the same though, and might be more confusing
[23:57:21] <aphysically> and the thread overhead << the overhead of these calls anyway
[23:58:14] <jinsun> aphysically: executor.submit doesn't make a new thread, just a new future, which still might be more overhead, but not really much I think
[23:58:16] *** Joins: semeion (~semeion@user/semeion)
[23:59:08] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[23:59:57] <Macuser> KirkMcDonald I don't think there's a way to invert the loops to just go through the file once because that would require having 86400 lists
