[00:00:31] *** Quits: rgherdt (~rgherdt@2a01:598:d039:b0be:6323:9b7e:a6f0:c9f6) (Ping timeout: 250 seconds)
[00:12:46] *** Joins: rgherdt__ (~rgherdt@2a01:598:b1a0:604:5a99:e952:4add:9bbb)
[00:15:15] *** Quits: rgherdt_ (~rgherdt@2a01:598:b1a6:b836:35b8:fd52:cba:b4fc) (Ping timeout: 250 seconds)
[00:35:10] *** Quits: rgherdt__ (~rgherdt@2a01:598:b1a0:604:5a99:e952:4add:9bbb) (Ping timeout: 260 seconds)
[00:46:20] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd)
[00:55:24] <ASau> Speaking of crap.
[00:56:30] <ASau> I have run into "nice" case of approach to software engineering that combines defects of typical German and that of Really Big Corp.
[00:57:14] <ASau> A monopolist wants some feature that he orders from several companies.
[00:58:09] <ASau> We struggle making our software work across underspecified, badly engineered and badly maintained "JSON REST" API.
[00:58:28] <ASau> The project essentially fails, the other side goes bankrupt.
[00:58:58] <ASau> Two years later. Same monopolist, same companies (except one that disappeared).
[00:59:12] <ASau> Nearly the same "specifications"!
[00:59:46] <ASau> The interface is "better": it is SOAP.
[01:00:01] <ASau> sjamaan: I'm sure that you'll like this part. :)
[01:00:47] <ASau> SOAP functions have single argument that is composite object that contains few other composite objects that wrap one(!) string value.
[01:00:58] <ASau> The structure of this string value is prescribed.
[01:01:36] <ASau> It is delimiter-separated value with a number of fields reaching 50.
[01:02:04] <ASau> Plus variable appendix, that is going to make those reach 100-200.
[01:02:16] <ASau> But...
[01:03:16] <ASau> On top of that, at project initiation, you have "manager" talking about SAFe and all related buzzwords and abbreviations nobody (except him) understands.
[01:04:04] <ASau> As if "agility" and more administrative pressure can fix bad engineering. :]
[01:04:33] <ASau> Speaking of SAFe.
[01:05:04] <ASau> It is so detached from the ground, that even their site does not decipher their abbreviations that they use very actively on their front page.
[01:06:37] <ASau> (What is "PI"? I guess it is not "processing instruction", nor "primary investigator", nor "personal investments". I couldn't come up with anything that makes sense within a day.)
[01:07:45] <ASau> Bunny351: my experience was that in some cases it is easier to setup proper cross-development environment and cross-development process.
[01:08:26] <GreaseMonkey> my only knowledge of SAFe is second-hand reading rants by Ron Jeffries
[01:09:01] <ASau> Bunny351: I don't know current state of WINE, but it was restricted and didn't handle some things at all. It may be that this is irrelevant for your purpose, but stay cautious.
[01:09:39] <ASau> GreaseMonkey: as for me, anything that relates to "agile" is just a piece of crap.
[01:10:41] <ASau> It is based on belief that magical rituals are going to cause improvements.
[01:10:45] <GreaseMonkey> eh, the principles have a chance, but most applications of it are "we want you to do twice as much work i mean results in half the time and we're using JIRA"
[01:11:21] <ASau> I have studied NOT.
[01:11:59] <ASau> I believe it is fundamental development of what you would call "scientific management".
[01:12:27] <ASau> At least, in early years they cited Taylor and Ford, but also provided heavy criticism.
[01:13:06] <ASau> So far the best attempt to improve looks what they call "lean".
[01:13:21] <ASau> But on condition.
[01:13:30] <ASau> It must be done right.
[01:14:00] <ASau> Otherwise it reduces to common "just do it" or even makes things worse.
[01:15:12] <ASau> I have seen several times how people were using kanban board the way you would use bug tracking system.
[01:16:26] <ASau> It is very hard to explain people that all those tasks on kanban cards should be completable within observable time or they should be turned into activity steps.
[01:29:06] <ASau> Anyway, as I said already, no amount of management tricks can improve on bad engineering.
[01:41:16] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[01:49:36] *** Quits: teiresias (~chris@blvuug/founder/teiresias) (Remote host closed the connection)
[01:49:51] *** Joins: teiresias (~chris@blvuug/founder/teiresias)
[02:32:13] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd) (Read error: Connection reset by peer)
[02:32:26] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd)
[02:34:32] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[02:44:08] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[02:55:21] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[03:27:17] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:53:39] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab)
[03:53:39] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab) (Changing host)
[03:53:39] *** Joins: skapata (~Skapata@user/skapata)
[04:18:22] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:22:18] *** Joins: alexshe14 (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[04:25:43] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd) (Ping timeout: 256 seconds)
[04:38:25] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[04:39:54] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:46:00] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[04:50:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:26:43] <jcowan> Consumers only demand standardization when they have equal power with producers.  The real demand for standardization comes from insurance companies.  But software companies have historically been allowed to wiggle out of all liability.
[05:37:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[05:40:36] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:56:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab)
[05:56:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab) (Changing host)
[05:56:06] *** Joins: skapata (~Skapata@user/skapata)
[06:49:02] *** Joins: Lysandros_ (~Lysandros@2a02:aa13:8104:c080:21a:a0ff:fea7:35e)
[06:51:25] *** Quits: Lysandros (~Lysandros@user/lysandros) (Ping timeout: 240 seconds)
[07:08:03] *** mdhughes_ is now known as mdhughes
[07:11:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:41:27] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Ping timeout: 256 seconds)
[07:46:52] *** Joins: oxamide96 (~oxamide96@pool-108-56-140-18.washdc.fios.verizon.net)
[08:05:36] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[08:33:33] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[08:34:49] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:59:39] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:31:57] *** Quits: Andrew (andrew@andrewyu.org) (Ping timeout: 240 seconds)
[10:02:33] *** Quits: oxamide96 (~oxamide96@pool-108-56-140-18.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[10:09:21] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[11:41:56] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:03:33] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[12:03:54] *** Joins: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net)
[12:21:12] <vandusen> SPAM! SPAM! SPAM! by freeee
[12:41:31] <vandusen> SPAM! SPAM! SPAM! by freeee
[14:05:05] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:24:42] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:25:42] *** Quits: Lysandros_ (~Lysandros@2a02:aa13:8104:c080:21a:a0ff:fea7:35e) (Changing host)
[14:25:42] *** Joins: Lysandros_ (~Lysandros@user/lysandros)
[14:47:26] *** Joins: s-liao30 (~s-liao@101.86.96.21)
[14:49:51] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:58:22] *** Lysandros_ is now known as Lysandros
[15:59:13] *** Quits: alexshe14 (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[16:00:06] *** Joins: crumpo (~crumpo@user/crumpo)
[16:00:18] *** Joins: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[16:04:13] <Bunny351> has anybody tried building chicken with zig cc? that might be an easy-to-use windows toolchain alternative... (hint, hint!)
[16:10:53] <zilti[m]> If someone wants to play around a bit with Chicken and QML, I have a first rudimentary working version of my library. It's possible to load QML files, connect QML signals to custom Chicken procedures, and read and write QML properties from Chicken: https://codeberg.org/zilti/qml/src/branch/master/examples/helloworld.scm
[16:21:55] <Bunny351> cool!
[16:24:57] *** Quits: crumpo (~crumpo@user/crumpo) (Ping timeout: 240 seconds)
[16:26:14] *** Quits: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de) (Quit: -a- Connection Timed Out)
[16:28:42] *** Joins: ublx (~ublx@user/ublx)
[16:30:17] *** Joins: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[16:55:22] *** Joins: sts-q (~sts-q@212.53.219.188)
[16:59:31] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7)
[16:59:31] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7) (Changing host)
[16:59:31] *** Joins: skapata (~Skapata@user/skapata)
[17:23:25] *** Quits: sts-q (~sts-q@212.53.219.188) (Ping timeout: 256 seconds)
[17:26:14] *** Quits: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de) (Quit: -a- Connection Timed Out)
[17:30:17] *** Joins: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[17:48:47] <s-liao30> Bunny351 ziglang with cc?
[17:49:06] <Bunny351> it can be used as a C toolchain, yes
[17:50:54] <Bunny351> assuming it works reliably and can be easily installed on windows, this could be an option to have a solution to not having to support a plethora of broken, unsupported or obsolete windows toolchains
[17:51:26] <Bunny351> i.e. mingw32, ming64, msys, etc.
[17:51:38] <s-liao30> Yes.
[17:53:08] <s-liao30> https://github.com/haze this person I work with him in one issue.
[17:53:58] <s-liao30> Seem like his/her PH degree is about ziglang.
[18:01:25] <jjhoo> easy to use, until it is not due to some missing feature or a incompatibility? :)
[18:03:07] <Bunny351> yes, that would have to be investigated
[18:07:16] *** Joins: crumpo (~crumpo@user/crumpo)
[18:11:35] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[18:14:08] <s-liao30> That issue is about the crossbeam-rs/crossbeam of rust  https://github.com/crossbeam-rs/crossbeam/issues/543.
[18:15:25] <s-liao30> But from his comments, he concerned about the toolchain.
[18:16:48] <s-liao30> mostly not related to what you mentioned, just in case, some point can help.
[18:19:15] *** Quits: s-liao30 (~s-liao@101.86.96.21) (Quit: Client closed)
[19:28:39] *** Quits: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:51:36] *** Quits: crumpo (~crumpo@user/crumpo) (Remote host closed the connection)
[19:52:01] *** Joins: crumpo (~crumpo@user/crumpo)
[19:58:14] <zilti[m]> Speaking of MinGW/MSYS, I'm assuming there is a sharp decline of contributions since WSL?
[19:59:16] <ASau> Makes sense. MinGW is not that pleasant, actually.
[20:00:10] <ASau> At least, the idiotic unix way of creating processes is the worst contributor.
[20:00:25] *** Joins: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[20:04:55] *** Joins: shawnw (~shawn_w@152.44.212.188)
[20:12:17] *** Quits: shawnw (~shawn_w@152.44.212.188) (Ping timeout: 256 seconds)
[20:15:36] *** Joins: shawnw (~shawn_w@152.44.212.188)
[20:18:38] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 250 seconds)
[20:23:23] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[20:25:19] *** Quits: shawnw (~shawn_w@152.44.212.188) (Ping timeout: 256 seconds)
[20:51:03] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 256 seconds)
[20:53:36] *** Quits: alexshendi (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[20:59:09] *** Joins: ecloud (~quassel@192.89.120.58)
[21:00:25] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd)
[21:15:21] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[21:38:29] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[21:52:40] <ASau> Bunny351: just in case, since I have regular (and much more reliable recently!) access to win10 with some kind of toolchain, I can take a look, even if it requires installing something else (but nothing very unusual! space is somewhat limited).
[21:53:23] <ASau> Bunny351: except I am busy with somewhat unrelated things, so I cannot promise anything, if it requires additional search and too much thinking.
[21:54:06] <Bunny351> ASau: that would be great! just knowing whether CHICKEN can be built by overriding C_COMPILER="zig cc" would already be highly interesting.
[21:54:28] <ASau> What is this "zig" and where should I pick it up?
[21:54:52] <ASau> Also, I need pre-bootstrapped source code, unless you have reworked the whole thing.
[21:55:02] <Bunny351> https://ziglang.org/
[21:55:20] <ASau> Thanks. Let me see...
[21:55:22] <Bunny351> you can download binaries from that website
[21:55:30] <Bunny351> (I tihnk)
[21:57:14] <ASau> I hope you don't mind, if I nag you with stupid questions. I've got involved into funky numerics, and that takes most of my time and effort nowadays.
[21:57:26] <Bunny351> sure
[21:57:45] <Bunny351> I may not all the time be available, but I'm happy to assist when I can
[21:57:59] <ASau> Number crunching is funny.
[21:59:59] <ASau> I couldn't imagine before that LSQR may perform much worse than direct NLCG numerically and even worse than direct BFGS.
[22:00:14] <ASau> Trying to understand what the hell is going on.
[22:03:22] <ASau> There's some suspicion that Press & Co have fucked something up again and this caught unexperienced people into the next "find error in "Numerical Recipes" trap...
[22:11:06] *** Joins: alexshe37 (~alexshend@ip-046-005-255-195.um12.pools.vodafone-ip.de)
[22:13:13] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:e0d3:b880:bd5a:b4bd) (Ping timeout: 250 seconds)
[22:45:17] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 240 seconds)
[22:54:43] *** Joins: ecloud (~quassel@192.89.120.58)
[23:03:03] <ASau> Bunny351: do you want to test it with stable or with current zig?
[23:10:23] <ASau> Bunny351: also, MinGW? Cygwin? Anything else?
[23:13:10] <ASau> Bunny351: just doing this:
[23:13:34] <ASau> C_COMPILER="/path/to/zig.exe cc" make
[23:13:49] <ASau> builds by invoking GCC.
[23:14:13] <ASau> gcc -fno-strict-aliasing -fwrapv -DHAVE_CHICKEN_CONFIG_H -DC_ENABLE_PTABLES -c -Os -fomit-frame-pointer  -DC_BUILDING_LIBCHICKEN port.c -o port-static.o -I. -I./
[23:14:21] <ASau> I'm not sure that this is intented.
[23:25:34] <ASau> The following makes more sense:
[23:25:38] <ASau> make C_COMPILER="/path/to/zig.exe cc"
[23:25:44] <ASau> Bunny351: the outcome is this:
[23:26:21] <ASau>  /path/to/zig.exe cc -fno-strict-aliasing -fwrapv -DHAVE_CHICKEN_CONFIG_H -DC_ENABLE_PTABLES -c -Os -fomit-frame-pointer  -DC_BUILDING_LIBCHICKEN library.c -o library-static.o -I. -I./
[23:26:21] <ASau> In file included from library.c:9:
[23:26:21] <ASau> ./chicken.h:166:11: fatal error: 'alloca.h' file not found
[23:26:21] <ASau> # include <alloca.h>
[23:26:24] <ASau>           ^~~~~~~~~~
[23:26:27] <ASau> 1 error generated.
