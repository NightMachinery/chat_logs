[00:22:52] *** Quits: u0_a185 (~u0_a185@121-80-249-103f1.kyt1.eonet.ne.jp) (Ping timeout: 250 seconds)
[00:24:53] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[00:26:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:03:40] <NimEventer> New thread by Kcvinu: What is 'block' in this code, see https://forum.nim-lang.org/t/8696
[01:08:11] *** Joins: vicfred (~vicfred@user/vicfred)
[01:56:18] *** Joins: u0_a185 (~u0_a185@121-80-249-103f1.kyt1.eonet.ne.jp)
[02:04:04] *** Joins: jjido (~Denis@90.213.58.125)
[02:07:43] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[02:08:22] <FromDiscord> <ajusa> Anyone know how I can scrape a website behind Cloudflare? Using halonium but it doesn't seem to let me through to the actual website
[02:20:01] <FromDiscord> <dom96> I assume you're getting captcha challenges from Cloudflare?
[02:20:25] <FromDiscord> <dom96> or is there a different problem you're facing?
[02:26:34] <FromDiscord> <ajusa> Hm, there are a couple. I'm running this in headless chrome, but I still get a 503 error when it tries to do the redirect. I'm also trying to get it to print out the cloudflare challenge page using httpClient, but that doesn't work either (I get a 403 error, without the challenge body).
[02:27:05] <FromDiscord> <ajusa> So with httpclient I can't see the captcha, and with headless chrome via halonium, I think it solves the captcha but it doesn't proceed further.
[02:35:37] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3Hr3
[02:36:56] <FromDiscord> <ajusa> Ah I needed `print client.get(url).body()`, so that it wouldn't throw the exception while trying to read the body. Makes sense now
[02:38:22] <FromDiscord> <ajusa> Starting to think that nimpy + cloudscraper might be the best option for dealing with cloudflare, apparently they made a recent change that forced some other selenium solutions to stop working a few months ago.
[02:48:09] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[03:23:52] <arkanoid> if I have an object type with just 1 field, is it always true that I can do unsafe cast from outside object type to inner type as basically is a struct with one field?
[03:25:12] <FromDiscord> <Elegantbeef> If it's an inherited object that might not be true due to type information added to the type
[03:26:36] <arkanoid> not inherited
[03:27:00] <FromDiscord> <Elegantbeef> Then yea should be fine
[03:27:10] <FromDiscord> <Elegantbeef> Is there a reason you're using an object here?
[03:28:54] <arkanoid> no, I'm just trying to study python C-API tweaking nimpy, I'm not a C programmer so yeah just hacking around
[03:29:08] <FromDiscord> <Elegantbeef> I mean Nim has distinct types
[03:29:09] <arkanoid> I should really edit nimpy files and export fields
[03:29:15] <FromDiscord> <Elegantbeef> So like `type NotInt = distinct int`
[03:30:05] <arkanoid> I want to access PPyObject from a PyObject here: https://github.com/yglukhov/nimpy/blob/3ca0f3c58b70ee67823b6575fd43f279db70b7e3/nimpy.nim#L13
[03:30:21] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:30:35] <arkanoid> so I'm doing cast[PPyObject](myPyObject)
[03:31:23] <FromDiscord> <Elegantbeef> Seems like it'd be better to just export the fields, maybe with a conditional
[03:33:33] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Hr8 something like this
[03:34:18] <FromDiscord> <Elegantbeef> No clue if a PR would be accepted
[03:35:12] <arkanoid> no no, I don't intend to make a PR, I just want to know if I manage to interface https://numpy.org/doc/stable/reference/c-api with numpy
[03:35:50] <arkanoid> I like nim because I want to use it for science, but interop from python and nim curretly rely on value copy
[03:36:10] <FromDiscord> <Elegantbeef> Yea i know
[03:36:21] <arkanoid> it works nicely, but if you want to go back and forth python and nim is not convenient
[03:36:46] <arkanoid> so currently nim can be used for large functions with small inputs
[03:36:54] <FromDiscord> <Elegantbeef> if only i cared to use python
[03:37:33] <FromDiscord> <Elegantbeef> That joke is implying i'd probably get annoyed and have made it work
[03:37:46] <arkanoid> I would be happy to kick python from my life, but a lot of work for science rely on it today
[03:40:12] <arkanoid> actually there are larger projects that aims to bridge different science stacks to handle zero-copy between them: https://arrow.apache.org/
[03:41:28] <arkanoid> question is if it is better to have one fast lib for nim (arraymancer, datamancer), or rely on interop
[03:41:33] <FromDiscord> <Elegantbeef> I dont know much about python \<-\> native interop so cannot say much, seems if you can map the python object to a Nim object and have the abillity to allocate in the python interpreter you're golden
[03:41:48] <FromDiscord> <Elegantbeef> But that means you need embeded python, not an external interpreter afaik
[03:49:17] <arkanoid> Elegantbeef, it depents on the "glue" object you rely on. Numpy is a possibility, apache arrow another, but there's no silver bullet
[03:50:30] <arkanoid> and apparently there's there's no intention to sacrifice stability over performance here https://github.com/SciNim/scinim/issues/8
[03:52:12] <FromDiscord> <treeform> In reply to @Mister_Magister "<@107140179025735680> only issue i": I have added made it possible to "check if query contains parameter": https://github.com/treeform/urlly/commit/9a51fa34b6d4775e02191af5169bac481eab02c4
[04:06:11] <FromDiscord> <treeform> In reply to @Mister_Magister "<@107140179025735680> only issue i": You don't have to `parseUrl("?" & req.url.query)` any more it will now parse without the leading ? https://github.com/treeform/urlly/commit/4a5fa3fd6e8d5389667075c7dd1176110e340718
[04:10:52] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:19:12] <FromDiscord> <ynfle (ynfle)> How do I print a seq in nim-gdb?
[04:21:12] <arkanoid> do you know why this type is OverflowDefect? https://play.nim-lang.org/#ix=3Hrf
[04:42:30] <arkanoid> nevermind, excessive empty spaces. Not sure why the error is OverflowDefect though
[04:46:11] <FromDiscord> <Fish-Face> how do you create a `set[char]` from a string?
[04:46:49] <FromDiscord> <Elegantbeef> !eval import std/setutils; echo "hello".toSet
[04:46:53] <NimBot> {'e', 'h', 'l', 'o'}
[04:48:36] <FromDiscord> <Fish-Face> danke
[05:11:36] <FromDiscord> <evoalg> In reply to @Elegantbeef "!eval import std/setutils; echo": I'm wondering if you mind-read Michal as to why he used a func instead of toSet? https://github.com/MichalMarsalek/Advent-of-code/blob/master/2021/Nim/day8.nim
[05:12:13] <FromDiscord> <Elegantbeef> Probably didnt know it existed
[05:13:05] <FromDiscord> <evoalg> are you saying you looked into Michal's mind and saw nothing?
[05:13:13] <FromDiscord> <Elegantbeef> Perhaps
[05:13:48] <FromDiscord> <Elegantbeef> My telepathy is a bit under utilised so i could be wrong
[05:13:49] <FromDiscord> <ynfle (ynfle)> Any help with this error message `Error: 's' is of type <var seq[seq[int]]> which cannot be captured as it would violate memory safety`?
[05:14:17] <FromDiscord> <Elegantbeef> You'e attempting to capture a `var` which is unsafe
[05:14:18] <FromDiscord> <ynfle (ynfle)> I'm using `s.apply((x: var seq[int]) => some operate)`
[05:14:34] <FromDiscord> <ynfle (ynfle)> In a function with `s: var seq[seq[int]]`
[05:14:34] <FromDiscord> <Elegantbeef> What's the entire code?
[05:15:17] <FromDiscord> <ynfle (ynfle)> a mess 😉
[05:15:26] <FromDiscord> <ynfle (ynfle)> It's AOC
[05:15:30] <FromDiscord> <ynfle (ynfle)> I'm going to sleep
[05:15:36] <FromDiscord> <ynfle (ynfle)> I'll think about it tomorrow
[05:15:36] <FromDiscord> <Elegantbeef> anyway use `applyIt` instead
[05:15:56] <FromDiscord> <Elegantbeef> You're making a closure procedure which is capturing `s`
[05:18:16] <nrds> <06Prestige99> Is there a way in nim to prevent overflows or underflows in math operations? E.g. https://play.nim-lang.org/#ix=3Hrn
[05:19:27] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Hro
[05:19:34] <FromDiscord> <Elegantbeef> Unless you mean "I want compiler errors"
[05:19:43] <FromDiscord> <Elegantbeef> I dont want runtime errors\
[05:21:04] <FromDiscord> <Elegantbeef> What are you after prestige?
[05:21:08] <nrds> <06Prestige99> Ye just trying to avoid the runtime error if possible. Like if I'm doing something simple checking if x - y > 0, it could crash
[05:21:31] <nrds> <06Prestige99> eh just theoretical atm
[05:21:31] <FromDiscord> <Elegantbeef> Then yes the way would be to check if it's valid
[05:21:57] <FromDiscord> <codic> If you don't want runtime errors you can also use the `+%/-%/%//%` operators etc, which overflow instead of panic
[05:22:06] <FromDiscord> <codic> overflow as in wrap around
[05:22:16] <nrds> <06Prestige99> oh interesting
[05:22:16] <FromDiscord> <Elegantbeef> Well he doesnt want it to wrap he just wants to safely check
[05:22:26] <nrds> <06Prestige99> yeah
[05:22:35] <nrds> <06Prestige99> was hoping there'd be a non-cumbersome way to do so
[05:22:46] <FromDiscord> <Elegantbeef> My suggestion would be subrange types or procs
[05:25:48] <FromDiscord> <Fish-Face> In reply to @evoalg "I'm wondering if you": haha well it is for AoC but I have no idea how to read Michal's code there
[05:25:50] <FromDiscord> <Fish-Face> mine is way longer
[05:28:04] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3Hrr
[05:30:21] <FromDiscord> <Elegantbeef> Something like this prestige https://play.nim-lang.org/#ix=3Hrs
[05:30:53] <FromDiscord> <Elegantbeef> I think you need to make a PR to fix it
[05:32:33] <nrds> <06Prestige99> hm I wonder what the expected behavior should be
[05:33:00] <nrds> <06Prestige99> I almost would want it to stay at int.low or int.high if it would have exceeded those values, but that's just my pref
[05:33:18] <nrds> <06Prestige99> I mean I can code that into what you sent ofc but if I were to make a PR
[05:33:37] <FromDiscord> <Elegantbeef> The PR was to impbox
[05:33:45] <FromDiscord> <Elegantbeef> The current behaviour is the correct behaviour
[05:33:46] <nrds> <06Prestige99> o :P
[05:34:24] <nrds> <06Prestige99> yeah it's not bad
[05:41:09] <FromDiscord> <nwilburn> Hey would this be the appropriate place to ask potentially stupid questions?
[05:41:24] <FromDiscord> <Elegantbeef> Well i'm here to provide stupid answers
[05:43:13] <arkanoid> haha
[05:44:28] <FromDiscord> <nwilburn> sent a code paste, see https://play.nim-lang.org/#ix=3Hrw
[05:44:36] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:45:00] <FromDiscord> <Elegantbeef> You're making a `ref ref Gitlabclient`
[05:45:12] <FromDiscord> <Elegantbeef> `proc newGitlabClient(api_endpoint: string, api_key: string): ref GitlabClient =` make that `GitlabClient`
[05:45:51] <FromDiscord> <Elegantbeef> Right now you're allocating the first `ref`and the second one is unallocated hence the nil error
[05:47:17] <FromDiscord> <nwilburn> Oops! Changed that however I am still getting the same Illegal storage access error
[05:47:49] <FromDiscord> <Elegantbeef> Do you have the full code somewhere?
[05:47:59] <FromDiscord> <nwilburn> Yea one sec I can push it up somewhere
[05:48:08] <FromDiscord> <Elegantbeef> Thanks
[05:50:46] <FromDiscord> <nwilburn> https://github.com/ragingpastry/tap/tree/improve-documentation/src (Hold your breath before you enter. I'm sure it smells something fierce)
[05:52:07] <FromDiscord> <nwilburn> Is the traceback https://media.discordapp.net/attachments/371759389889003532/918326610015432724/unknown.png
[05:53:51] <FromDiscord> <Elegantbeef> Check if `glClient.isNil` or `glClient.client.isNil`
[05:54:48] <FromDiscord> <Elegantbeef> There is much reason i can see presently for you to use `ref object` anywho for your glClient
[05:55:45] <FromDiscord> <nwilburn> Yea I moved to ref object because I don't really understand how that all works and it wasn't working when I was just using object haha. Also yea glClient.client is nil
[05:56:22] <FromDiscord> <Elegantbeef> Well you just use `var GitlabClient` instead of `GitlabClient` when you want to mutate it 😛
[05:56:33] <FromDiscord> <Elegantbeef> Ok so now to see why it get's nil'd
[05:56:59] <FromDiscord> <Elegantbeef> https://github.com/ragingpastry/tap/blob/improve-documentation/src/cli.nim#L21 you dont use `newGitlabClient`
[05:57:14] <FromDiscord> <nwilburn> doh!
[06:01:36] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Hrz one example at how normal objects are supposed to be used
[06:04:02] <FromDiscord> <nwilburn> Thanks!
[06:04:43] <FromDiscord> <Elegantbeef> Though the constuctor you made is idiomatic it doesnt play well with generics
[06:10:49] <FromDiscord> <nwilburn> Cheers! Got it working thanks much
[06:10:58] <FromDiscord> <Elegantbeef> No problem
[06:21:21] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:49:16] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:15:12] <FromDiscord> <impbox [ftsf]> argh, i'm so confused
[07:17:06] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3HrJ
[07:17:14] <FromDiscord> <impbox [ftsf]> any idea what could cause this?
[07:18:28] <FromDiscord> <impbox [ftsf]> https://gist.github.com/ftsf/21dba0c07a8f0614b81ed2728540de74 compiles fine
[07:19:20] <FromDiscord> <impbox [ftsf]> it's not like it's being called from another template, so the template nesting should be identical
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[10:41:52] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 256 seconds)
[10:46:01] *** Joins: anddam (~anddam@user/anddam)
[10:59:32] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[11:01:44] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[11:08:35] *** Joins: neurocyte0132889 (~neurocyte@45.93.108.168)
[11:08:35] *** Quits: neurocyte0132889 (~neurocyte@45.93.108.168) (Changing host)
[11:08:35] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:10:22] <FromDiscord> <Cypheriel> Is there a cleaner way to do `foo[y1..y2, x1..x2] = foo[y1..y2, x1..x2].map(bar)`?
[11:10:44] <FromDiscord> <Cypheriel> A certain line of mine is getting a bit stupidly long because of this
[11:10:49] <FromDiscord> <Rika> what is foo
[11:10:50] <FromDiscord> <Rika> type
[11:10:57] <FromDiscord> <Cypheriel> `Tensor`
[11:11:06] <FromDiscord> <Rika> i cannot help you here
[11:11:08] <FromDiscord> <Cypheriel> I should've specified, my bad
[11:11:16] <FromDiscord> <Cypheriel> I'm a bit confused as to what to do lol
[11:43:03] *** Joins: jjido (~Denis@90.213.58.125)
[11:45:11] *** Joins: PMunch (~PMunch@user/pmunch)
[12:04:11] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:22:23] *** Joins: src (~src@user/src)
[12:23:34] <FromDiscord> <retkid> how do i know when my code is presentable to the world
[12:23:35] <FromDiscord> <retkid> well
[12:23:38] <FromDiscord> <retkid> i kinda do know
[12:23:48] <FromDiscord> <retkid> should i include a db or just the tools to generate the db?
[12:44:19] <PMunch> @retkid, you publish it and gauge the response :P
[12:44:33] <PMunch> Not quite sure what you mean about the db question
[12:44:39] <FromDiscord> <Rika> “Presentable” depends on who sees it
[12:45:01] <FromDiscord> <Rika> Probably means should he provide a sample database
[12:45:29] <PMunch> Oh I see
[12:45:31] <FromDiscord> <Rika> Usually applications that rely on a database generate one when needed or fail gracefully when one is found but is malformed
[12:45:57] <PMunch> I mean you could publish a database of test data or something, but it should be done outside of your repo (you don't want large binaries in a git repository)
[12:46:24] <FromDiscord> <Rika> I guess it depends on what this database is actually consisting of
[12:46:36] <PMunch> Not really
[12:47:42] <PMunch> I mean if the repository contains a script to build a database or instructions on how to do it then the repo is "complete". But if it takes a long time to do it, or it's easy to mess it up it's nice to also have somewhere that people can go and download a test database.
[12:47:55] <PMunch> But this database shouldn't be put in the Git repository
[12:48:24] <FromDiscord> <retkid> well
[12:48:25] <PMunch> If you don't have another hosting solution then you could of course create a separate Git repository for your binaries
[12:48:37] <FromDiscord> <retkid> the re are tools in the git which can generate the same or very similar database
[12:48:44] <FromDiscord> <retkid> but currently that process takes like 16 hours
[12:49:11] <PMunch> Yeah, so you probably want to share your database as well. Just don't put it in the main repo
[12:49:13] <FromDiscord> <Rika> I mean if it’s an empirical dataset in a database then there literally isn’t much else to do other than publish it
[12:49:27] <FromDiscord> <Rika> Otherwise if it’s for config or whatever then you generate it
[12:49:44] <FromDiscord> <Rika> Publish it not in the git repo
[12:50:17] <FromDiscord> <retkid> Ok I'll include the code i used to make it, but put a warning that it'll take a very long to make it, that is, if you can get HTTPclient to not bug out when you close it 4392 times
[12:50:23] <FromDiscord> <retkid> (edit) "Ok I'll include the code i used to make it, but put a warning that it'll take a very long to make it, that is, if you can get HTTPclient to not bug out when you close it 4392 times ... " 03added "with threadpool"
[12:50:40] <PMunch> Trust me, you don't want to have build artifacts in your repo and suddenly it takes a couple hours and a hard-disk and a half to download it
[12:50:54] <FromDiscord> <retkid> well, its not a big dataset
[12:50:55] <FromDiscord> <Rika> Totally
[12:51:25] <PMunch> @retkid, I guess it's bigger than your code-files though?
[12:51:29] <FromDiscord> <retkid> just, building the db takes pinging someone elses DB 16,000 times
[12:51:38] <PMunch> And can't easily use diffs to store variances between versions
[12:51:59] <PMunch> Yes, please publish the DB as well, just not in your repo
[12:52:05] <PMunch> Link to it or something
[12:52:14] <FromDiscord> <retkid> oh lol
[12:52:18] <FromDiscord> <retkid> i accidentally deleted the db
[12:52:21] <FromDiscord> <retkid> ............................
[12:52:21] <FromDiscord> <Rika> What
[12:52:23] <FromDiscord> <Rika> How
[12:52:25] <PMunch> Haha :P
[12:52:30] <FromDiscord> <Rika> Rest in peace
[12:52:32] <FromDiscord> <retkid> i was cleaning up in vscode
[12:52:35] <FromDiscord> <retkid> :|
[12:52:44] <FromDiscord> <Rika> Generate it again, have fun
[12:52:52] <FromDiscord> <Rika> This time make a backup haha
[12:53:00] <FromDiscord> <retkid> i had a backuo
[12:53:04] <FromDiscord> <retkid> (edit) "backuo" => "backup"
[12:53:06] <FromDiscord> <Rika> Had?
[12:53:08] <FromDiscord> <retkid> deleted it to
[12:53:09] <FromDiscord> <retkid> (edit) "to" => "too"
[12:53:13] <FromDiscord> <Rika> My goodness
[12:53:13] <FromDiscord> <retkid> :|
[12:53:54] <FromDiscord> <retkid> well shit
[12:54:00] <FromDiscord> <retkid> im starting it halfway done though
[12:54:08] <FromDiscord> <retkid> so instead of 16 hours it'll be like 12
[12:54:32] <FromDiscord> <Rika> Wow that’s long
[12:54:44] <FromDiscord> <retkid> well you try pinging a slow as db 16000 times
[12:54:47] <FromDiscord> <Rika> This thing you’re requesting from really has a bad API does it
[12:55:04] <FromDiscord> <retkid> im also using python because nim has no NLP
[12:55:08] <FromDiscord> <retkid> and i dont wanna make one
[12:55:18] <FromDiscord> <Rika> Async?
[12:55:24] <FromDiscord> <retkid> no l
[12:55:32] <FromDiscord> <retkid> native language processer
[12:55:36] <FromDiscord> <Rika> I mean do you use async
[12:55:37] <FromDiscord> <retkid> (edit) "processer" => "processor"
[12:55:39] <FromDiscord> <Rika> I know NLP
[12:55:45] <FromDiscord> <retkid> oh yea
[12:55:49] <FromDiscord> <retkid> i didn't thread or async it
[12:55:55] <FromDiscord> <retkid> i'll do it
[12:55:58] <FromDiscord> <Rika> Maybe that’s why lol
[12:56:02] <FromDiscord> <retkid> (edit) "it" => "that"
[12:56:08] <FromDiscord> <Rika> Not really sure if it would help though
[12:56:55] <FromDiscord> <retkid> i need to get good at async
[12:56:59] <PMunch> Apparently there is something called Git LFS: https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-git-large-file-storage
[12:57:07] <PMunch> To store large files in Git repos
[12:57:17] <FromDiscord> <retkid> well, i'd love to tell you how big it was
[12:57:19] <FromDiscord> <retkid> but i cant
[12:57:24] <FromDiscord> <retkid> the raw data is only 12mb
[12:57:37] <FromDiscord> <retkid> but it expands quite a bit
[12:57:52] <FromDiscord> <retkid> i would make it smaller if i use base64
[12:57:54] <FromDiscord> <retkid> (edit) "base64" => "base64, etc"
[12:58:08] <PMunch> Smaller if you used base64?
[12:58:22] <FromDiscord> <retkid> if i compress it i mean
[12:58:25] <PMunch> base64 typically makes stuff way bigger
[12:58:26] <PMunch> Ah
[12:58:30] <FromDiscord> <Rika> LFS is an extension for those who store massive monorepos
[12:58:32] <FromDiscord> <Rika> Afaik
[12:58:40] <FromDiscord> <retkid> actually
[12:58:42] <FromDiscord> <retkid> i have a copy of my db
[12:58:51] <FromDiscord> <retkid> well
[12:58:58] <FromDiscord> <retkid> i need to rebuild it
[12:59:04] <FromDiscord> <retkid> but i have all its contents in json form
[12:59:18] <FromDiscord> <retkid> 3 backups 😎
[12:59:57] <FromDiscord> <retkid> its not super big of a dB
[13:00:00] <FromDiscord> <retkid> (edit) "dB" => "only 20 m"
[13:00:02] <FromDiscord> <retkid> (edit) "m" => "mb"
[13:00:33] <PMunch> Aha, so basically Git LFS just creates a small file with an ID for your file in the remote repo. Then it uploads the file to the host in the normal way. And then when you pull a branch it will pull the actual large file from the web host.
[13:00:36] <PMunch> Pretty clever
[13:01:38] <FromDiscord> <Cypheriel> am I confused or.. is it not possible to convert a range with negative step to a sequence
[13:01:57] <PMunch> A large file in a Git context is like anything above a couple kilobytes, maybe up to about a megabyte.
[13:02:06] <FromDiscord> <retkid> In reply to @Cypheriel "am I confused or..": anything is possible if you try hard enough
[13:02:19] <FromDiscord> <Cypheriel> my brain already hurts enough 😔
[13:02:27] <FromDiscord> <Cypheriel> I can't even get ranges with steps working in inim
[13:02:31] <PMunch> @Cypheriel, it's certainly possible. But remember that the normal `..` iterator can only go up
[13:02:36] <FromDiscord> <retkid> I have no clue what a range is or a negative step
[13:02:43] <FromDiscord> <retkid> well no
[13:02:45] <FromDiscord> <retkid> (edit) 04removed "no"
[13:02:56] <FromDiscord> <Elegantbeef> !eval import std/sequitls; countDown(10, 0).toSeq
[13:02:59] <FromDiscord> <retkid> if you start from a on the left
[13:03:07] <FromDiscord> <retkid> you can use its absolute value to go down
[13:03:07] <FromDiscord> <Elegantbeef> !eval import std/sequitls; echo countDown(10, 0).toSeq
[13:03:09] <NimBot> Compile failed: /usercode/in.nim(1, 11) Error: cannot open file: std/sequitls
[13:03:10] <NimBot> Compile failed: /usercode/in.nim(1, 11) Error: cannot open file: std/sequitls
[13:03:17] <FromDiscord> <Elegantbeef> god damn it
[13:03:25] <PMunch> !eval import std/sequtils; echo countDown(10, 0).toSeq
[13:03:28] <NimBot> @[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
[13:03:28] <FromDiscord> <Elegantbeef> !eval import std/sequtils; countDown(10, 0).toSeq
[13:03:31] <NimBot> Compile failed: /playground/nim/lib/pure/collections/sequtils.nim(854, 7) Error: expression 'result`gensym0' is of type 'seq[int]' and has to be used (or discarded); start of expression here: /usercode/in.nim(1, 39)
[13:03:31] <FromDiscord> <Elegantbeef> There we go no more spam
[13:03:34] <FromDiscord> <retkid> for y in 10 .. 0:↵ echo 0 - y
[13:03:40] <FromDiscord> <retkid> (edit) "10" => "-10"
[13:03:44] <FromDiscord> <retkid> or something like that
[13:03:51] <FromDiscord> <Cypheriel> idk if I'd want to use `countDown`, though
[13:03:59] <FromDiscord> <Cypheriel> I kinda just want to do what I'd do in Python
[13:04:12] <FromDiscord> <Cypheriel> which is like `list(range(10, 0, -1))`
[13:04:18] <PMunch> @Elegantbeef, haha you seem to struggle a bit with getting your snippets to run properly :P
[13:04:19] <FromDiscord> <retkid> https://play.nim-lang.org/
[13:04:22] <FromDiscord> <retkid> this makes stuff easier
[13:04:23] <FromDiscord> <Cypheriel> but where the step is variable
[13:04:33] <FromDiscord> <retkid> nim playground is really useful for visualizing this stuff imo
[13:04:54] <FromDiscord> <Elegantbeef> `toSeq(countDown(10, 0, -1))`
[13:04:58] <FromDiscord> <Elegantbeef> How is that any different?
[13:05:01] <PMunch> @Cypheriel, well then you have to write `range` for yourself
[13:05:12] <FromDiscord> <Rika> He probably wants a unified count down and up
[13:05:28] <PMunch> Which Nim doesn't have AFAIK
[13:05:31] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3HsE
[13:05:35] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3HsE" => "https://play.nim-lang.org/#ix=3HsF"
[13:05:41] <PMunch> I mean it's easy enough to write one
[13:05:41] <FromDiscord> <Cypheriel> :faint:
[13:05:56] <FromDiscord> <Cypheriel> I fear I've exhausted a fair majority of my brain power
[13:05:56] <FromDiscord> <Rika> I’ll be honest, I don’t know what reason there is to not have one
[13:05:59] <FromDiscord> <retkid> a lot of things nim is missing because nobody wants to actually sit down and do not fun things
[13:06:13] <FromDiscord> <retkid> like NLP is cool and all
[13:06:17] <FromDiscord> <retkid> but who wants to actually make one
[13:06:25] <FromDiscord> <Rika> A few probably do what to
[13:06:26] <FromDiscord> <Rika> Want
[13:06:35] <FromDiscord> <retkid> well fuck
[13:06:40] <PMunch> @Rika, no idea, I guess the rationale that `..` doesn't do it is that it means an extra check every time you want to do iteration over a range
[13:06:50] <FromDiscord> <Rika> We just don’t have the size to have those kinds of people
[13:07:01] <FromDiscord> <retkid> i mean, i kinda want to
[13:07:02] <FromDiscord> <retkid> but also
[13:07:04] <FromDiscord> <retkid> i really do not
[13:07:07] <FromDiscord> <Elegantbeef> Yea pmunch i think that's the reason
[13:07:13] <FromDiscord> <Rika> Then you are not that kind
[13:07:20] <FromDiscord> <Elegantbeef> This comes up every so often
[13:07:28] <FromDiscord> <Cypheriel> I spent probably like a good hour wondering why my stuff wasn't working, and then I eventually found out that my ranges converted to sequences broke if any step was negative and became empty
[13:07:57] <PMunch> But why there isn't a combined countup/countdown I have no idea, such a simple thing that really should just be included..
[13:08:10] <FromDiscord> <retkid> it would be cool but learning everything about English grammar, figuring out a fast way to classify it, scraping thousands and thousands and thousands of websites, seems not fun
[13:08:17] <FromDiscord> <Cypheriel> Needless to say... I've spent a stupid amount of time echoing random things https://media.discordapp.net/attachments/371759389889003532/918436379782959104/Screenshot_20211209_023745.png
[13:08:19] <FromDiscord> <retkid> (edit) "would" => "wouldn't"
[13:08:30] <FromDiscord> <retkid> (edit) "wouldn't" => "would"
[13:08:35] <PMunch> I guess `countup` should probably have an `assert x > y` in it..
[13:08:50] <FromDiscord> <Rika> I’d say it’s more common to expect .. to count both up and down than to expect it to be a bit quicker
[13:09:25] <FromDiscord> <Rika> In reply to @PMunch "I guess `countup` should": Then a lot of peoples code would break, some people depend on 0..0 being empty
[13:09:32] <PMunch> Hmm, but that would still exist in `-d:release`.. Is there an assert which is the opposite of doAssert? ie. one that only gets checked in debug mode?
[13:09:39] <FromDiscord> <Rika> I feel like I’ve encountered a lot of code that expects that
[13:09:45] <PMunch> >= then :P
[13:09:56] <PMunch> And 0..0 isn't empty, it's 0
[13:09:58] <FromDiscord> <Rika> 0.. -1 as well
[13:10:02] <FromDiscord> <Rika> Yeah
[13:10:04] <PMunch> .. is inclusive ;)
[13:10:06] <FromDiscord> <Rika> I meant what I said
[13:10:09] <FromDiscord> <Elegantbeef> Well it'd also not be consistent
[13:10:16] <FromDiscord> <Cypheriel> so... what am I to do, then?
[13:10:22] <FromDiscord> <Cypheriel> surely I'm not to right my own range D:
[13:10:32] <FromDiscord> <Rika> If you want what you described
[13:10:35] <FromDiscord> <Rika> Then you write it
[13:10:36] <FromDiscord> <Elegantbeef> It takes all of 3 seconds
[13:10:50] <FromDiscord> <impbox [ftsf]> you could wait for someone else to write it
[13:10:53] <FromDiscord> <Rika> It’s just an if positive count up else count down
[13:11:01] <FromDiscord> <Cypheriel> I'm not sure where I'd even start...
[13:11:10] <FromDiscord> <Rika> In reply to @impbox "you could wait for": Probably that Python like library Yardanico wrote
[13:11:23] <FromDiscord> <Hamid_Bluri> take a look at `iterator`s
[13:11:24] <FromDiscord> <Rika> In reply to @Rika "It’s just an if": @Cypheriel it’s just this literally
[13:11:40] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3HsJ
[13:11:52] <FromDiscord> <Cypheriel> what the
[13:11:58] <FromDiscord> <Rika> “What the” what?
[13:12:20] <FromDiscord> <Rika> You’ll have to assert that count is not 0
[13:12:23] <FromDiscord> <Rika> At the start
[13:12:29] <FromDiscord> <Rika> Lest you explode
[13:12:30] <FromDiscord> <Elegantbeef> Also that you dont go over b
[13:12:43] <FromDiscord> <retkid> lol i found an npm package that used coffeescript
[13:12:52] <PMunch> @Cypheriel, something like this: https://play.nim-lang.org/#ix=3HsK
[13:12:57] <FromDiscord> <Cypheriel> In reply to @Rika "Lest you explode": I think my brain has already exploded
[13:13:07] <FromDiscord> <Rika> In reply to @retkid "lol i found an": Haha
[13:13:10] <FromDiscord> <Elegantbeef> There we go pmunch 😀
[13:13:12] <PMunch> Or what @Elegantbeef posted :P
[13:13:22] <FromDiscord> <Elegantbeef> Well what i posted has 2 buhgs
[13:13:34] <FromDiscord> <Rika> When are we getting `yield from`
[13:13:37] <FromDiscord> <Hamid_Bluri> yes 2 buhgs
[13:13:50] <PMunch> @Rika, yield from?
[13:13:53] <FromDiscord> <Rika> In reply to @Rika "When are we getting": It would be nice if we had it…
[13:14:02] <PMunch> Ah, like yield everything from this iterator
[13:14:05] <FromDiscord> <Rika> Same thing as looping the iterator and yielding the result
[13:14:06] <FromDiscord> <Rika> Yes
[13:14:08] <FromDiscord> <Elegantbeef> should be `while i in min(a, b)..max(a.b)` and ensuring `count` != 0
[13:14:14] <PMunch> Instead of having to write `for x in iter: yield x`
[13:14:18] <FromDiscord> <Rika> Yes
[13:14:19] <PMunch> That would be pretty neat
[13:14:38] <FromDiscord> <Elegantbeef> Not overly worth the effort in my view
[13:14:40] <FromDiscord> <Rika> Actually I think it could be a template
[13:15:10] <FromDiscord> <Cypheriel> oh hey. I understand now
[13:15:19] <FromDiscord> <Rika> Yeah it could just be a template with the for loop and yield thing hm
[13:15:19] <PMunch> If you call it `yieldFrom` it'd be easy to do as a template
[13:15:24] <FromDiscord> <Rika> Yeah
[13:15:29] <FromDiscord> <Elegantbeef> yep
[13:15:36] <FromDiscord> <Rika> And we already do that anyway (ala notIn)
[13:15:37] <FromDiscord> <impbox [ftsf]> the from sounds odd
[13:15:54] <FromDiscord> <Rika> Well you’re yielding the values from the iterator
[13:15:56] <FromDiscord> <Rika> So yield from
[13:16:03] <FromDiscord> <retkid> so apparently well written JS will surpass NIM's JS compiler by like 20 : 1
[13:16:13] <FromDiscord> <impbox [ftsf]> makes me think of COMEFROM =p
[13:16:17] <FromDiscord> <Rika> No, you should turn optimisations on
[13:16:43] <FromDiscord> <retkid> you think i didn't compile with optimizations? thats a thing for JS?
[13:16:44] <FromDiscord> <Rika> Also again, Nim output is not optimised or aiming to be short
[13:16:53] <FromDiscord> <Rika> It is a thing for JS
[13:17:02] <FromDiscord> <impbox [ftsf]> compile with `-d:danger`
[13:17:02] *** Joins: jjido (~Denis@90.213.58.125)
[13:17:05] <FromDiscord> <retkid> yea
[13:17:12] <FromDiscord> <Elegantbeef> Nim's runtime checks and debug info is still included without `danger/release`
[13:17:18] <FromDiscord> <retkid> but i dont think it'll be as fast as the JS it seems kinda crazy
[13:17:18] <FromDiscord> <impbox [ftsf]> but yeah, i wouldn't be surprised if hand coded assembly or js is faster than nim generated code
[13:17:33] <PMunch> Something like this: https://play.nim-lang.org/#ix=3HsM
[13:17:34] <FromDiscord> <retkid> well the Assembly thing is expected
[13:17:38] <FromDiscord> <Rika> You can further optimise by directly using the js apis and not Nim’s shims for its own functions
[13:17:51] <FromDiscord> <Elegantbeef> Well the main issue afaik is that JS has advanced a bit so there are some things that could be changed to make it a bit faster
[13:17:56] <FromDiscord> <Rika> Yes
[13:18:03] <FromDiscord> <Rika> Nim is stuck in ES3 afaik
[13:18:06] <FromDiscord> <retkid> I don't think i can get faster than the original code, it seems really smoothe
[13:18:08] <FromDiscord> <retkid> (edit) "smoothe" => "smooth"
[13:18:28] <FromDiscord> <Elegantbeef> ftfy pmunch https://play.nim-lang.org/#ix=3HsN
[13:18:34] <FromDiscord> <retkid> look at that
[13:18:35] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3HsO
[13:18:41] <FromDiscord> <Cypheriel> oh gosh... I've just realized a problem
[13:18:56] <FromDiscord> <Cypheriel> since this new range isn't an actual range... I can't use it with tensor slicing
[13:19:08] <PMunch> @Elegantbeef, probably a good idea :P
[13:19:29] <FromDiscord> <Elegantbeef> Not really cause it sucks
[13:19:42] <PMunch> `iterable` sucks?
[13:19:42] <FromDiscord> <Elegantbeef> `[10]` cannot be used in place of iterable
[13:19:53] <FromDiscord> <Elegantbeef> Yea there are many issues with it imo
[13:20:08] <FromDiscord> <Elegantbeef> It's a good idea but badly implemented
[13:20:17] <FromDiscord> <Elegantbeef> You cannot pass iterators to iterators
[13:20:44] <FromDiscord> <Elegantbeef> Objects/collections that have `items/pairs` do not implicitly pass to them
[13:21:42] <FromDiscord> <retkid> holy shit
[13:21:45] <FromDiscord> <Elegantbeef> You cannot use it in a typeclass so `template doThing(a: int or iterable[int])` doesnt work for both `int` and an `iterable`
[13:21:56] <FromDiscord> <retkid> with -d:danger the code went from 1200 lines to 14
[13:22:00] <FromDiscord> <retkid> this might be faster
[13:22:19] <FromDiscord> <Elegantbeef> Well Nim's js still has runtime checks
[13:22:21] <PMunch> Haha, might be :P
[13:22:27] <FromDiscord> <Elegantbeef> danger removes most them
[13:22:48] <PMunch> Danger sounds so ominous
[13:22:51] <madprops> is `something in someseq` as fast as `sometable.hasKey(somekey)` ?
[13:22:53] <FromDiscord> <retkid> compilers are magic
[13:22:56] <FromDiscord> <Elegantbeef> Suffice to say I like the idea of iterable but the implementation we have makes me sad
[13:22:57] <FromDiscord> <retkid> well its danger
[13:23:01] <PMunch> It's like we're expecting it to break :P
[13:23:15] <PMunch> madprops, nope, it's way slower
[13:23:17] <FromDiscord> <retkid> In reply to @Elegantbeef "Suffice to say I": whats wrong with iterable
[13:23:31] <FromDiscord> <Cypheriel> is it just me or are some of these error messages absolutely terrible
[13:23:41] <FromDiscord> <retkid> oh yea
[13:23:41] <FromDiscord> <Elegantbeef> retkid i just explained
[13:23:43] <FromDiscord> <retkid> tons of them suck
[13:23:48] <FromDiscord> <Elegantbeef> Some error messages do indeed suck
[13:24:03] <PMunch> `something in someseq` literally goes through the entire sequence and looks for your item. `sometable.hasKey(someKey)` hashes your key to a memory address and then looks it up directly to see if it exists.
[13:24:11] <FromDiscord> <retkid> well
[13:24:14] <PMunch> That's kinda the whole point with using tables
[13:24:16] <FromDiscord> <retkid> even if its flawed
[13:24:21] <FromDiscord> <retkid> i think its better we have them, then not
[13:24:47] <FromDiscord> <Elegantbeef> the table is O(1) the seq is O(n)
[13:24:52] <PMunch> @Cypheriel, some of them can be a bit confusing. But most of the time if you know the concepts at play they're pretty easy to read
[13:25:01] <FromDiscord> <Elegantbeef> Depending on the values/range you can use a bitset which is the best of both
[13:25:20] <FromDiscord> <Cypheriel> So apparently `count_down()` doesn't accept negative step... good to know, idk how I'd not expected that
[13:25:43] <PMunch> Oh yeah, if you only care about if it exists or not then a set is better than a table
[13:25:53] <FromDiscord> <Rika> Both count down and count up accept positives only
[13:26:13] <PMunch> @Cypheriel, how would a negative step work?
[13:26:32] <PMunch> You'd have to go all the way until the number wrapped round before you arrived at your destination..
[13:26:34] <FromDiscord> <Cypheriel> It wouldn't, which is why I'm annoyed I didn't spot it sooner
[13:26:36] <FromDiscord> <Elegantbeef> You iterate backwards until you over/underflow
[13:26:38] <FromDiscord> <Elegantbeef> 😀
[13:27:02] <FromDiscord> <Cypheriel> Praise the lord, I think I've finally got what I wanted
[13:27:17] <FromDiscord> <petsqui> when I write a macro that accepts some `Thing[T]` can I somehow extract the concrete type of T
[13:27:18] <PMunch> I wouldn't be the least bit surprised if I actually found something like that in an old C codebase @Elegantbeef :P
[13:27:22] <FromDiscord> <petsqui> (edit) "T" => "T?"
[13:27:29] <PMunch> @petsqui, yes
[13:27:34] <FromDiscord> <retkid> its still much slower but not as bad
[13:27:39] <FromDiscord> <retkid> the JS is just super optimized
[13:28:31] <FromDiscord> <Cypheriel> woo, praise. Fixing the range fixed my AoC solution
[13:28:35] <FromDiscord> <Cypheriel> I never wanna deal with that ever again
[13:28:44] <FromDiscord> <Elegantbeef> There you go petsqui
[13:28:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3HsT
[13:28:54] <FromDiscord> <Elegantbeef> Yea cyph that was an issue i had for that day aswell
[13:29:03] <FromDiscord> <Elegantbeef> remembers he hasnt done AoC for a few days now
[13:30:16] <PMunch> @petsqui, https://play.nim-lang.org/#ix=3HsU
[13:30:32] <FromDiscord> <petsqui> In reply to @PMunch "<@325637384517713920>, https://play.nim-lang.org/#i": thank you!
[13:30:53] <FromDiscord> <Elegantbeef> Pmunch was slow on that one
[13:31:08] <PMunch> I'm rusty >_<
[13:31:15] <FromDiscord> <Elegantbeef> No this is nim
[13:31:28] <PMunch> I'm Nimmy?
[13:31:57] <FromDiscord> <Elegantbeef> Nah you're timmy
[13:33:41] <PMunch> Ugh, so many of my macros have broken with recent versions of Nim..
[13:33:52] <FromDiscord> <Cypheriel> welp. sometimes I wonder if I'm a masochist for choosing to use Nim for things like Advent of Code
[13:34:06] <FromDiscord> <Cypheriel> There's a lot of cool stuff... but also a lot of... not-so-cool stuff
[13:34:08] <PMunch> Apparently notificatcher doesn't build on anything later than 1.2.6..
[13:34:35] <FromDiscord> <Elegantbeef> I mean you made your problem harder than it was
[13:34:56] <PMunch> @Cypheriel, I think it's mostly a matter of knowing which tools you have available to you
[13:35:07] <FromDiscord> <Cypheriel> In reply to @Elegantbeef "I mean you made": I did?
[13:35:19] <FromDiscord> <Cypheriel> tbh I couldn't even comprehend my problem
[13:35:47] <FromDiscord> <Elegantbeef> Using tensors and other fancy stuff for that problem is self harm imo
[13:35:48] <PMunch> @Cypheriel, if you want to see how I solve them, and how little trouble I run into, you can check my solving on YouTube: https://www.youtube.com/playlist?list=PL9Yd0XwsGAqyd_lKcHm3f_nlE8vMdacV0
[13:36:05] <PMunch> Wait, you're using tensors for AoC?
[13:36:10] <PMunch> Which day?
[13:36:26] <FromDiscord> <Cypheriel> 4 and 5 ._.
[13:36:44] <FromDiscord> <Cypheriel> I heard somebody talking about them and I thought maybe this was a good time to try and learn about that kind of stuff
[13:36:50] <FromDiscord> <Cypheriel> it was something I've wanted to learn anyways
[13:36:54] <FromDiscord> <Cypheriel> but eheh...
[13:37:00] <FromDiscord> <Elegantbeef> If you want to see less masochisitic approaches https://github.com/beef331/aoc2021
[13:37:30] <PMunch> I think you might be the first person to use tensors to score bingo sheets :P
[13:37:40] <FromDiscord> <Cypheriel> LMAO
[13:37:52] <PMunch> But using AoC to learn new stuff is a good idea :)
[13:38:03] <FromDiscord> <Cypheriel> I... had a lot of trouble figuring out how to get the nth column of a matrix
[13:41:02] <FromDiscord> <Cypheriel> In reply to @Elegantbeef "If you want to": what on Earth. So much shorter than my solution...
[13:41:17] <FromDiscord> <Elegantbeef> How does he do it!
[13:41:35] <FromDiscord> <Cypheriel> My whole part two as 94 lines
[13:42:38] <FromDiscord> <Elegantbeef> My philosophy on programming is it's fun to work through problems but writing code sucks, so i try not to write a lot of code 😛
[13:43:30] <FromDiscord> <Cypheriel> I mean me as well... but I keep feeling like "ugh, the only way I know to do this is the long way"
[13:45:07] <FromDiscord> <Elegantbeef> In the case of 4/5 i have a ton of experience with grids so it was basically 100% the usual for what i work with
[13:47:46] <FromDiscord> <Elegantbeef> Anyway i'm going to sleep, maybe i'll be interested in doing the day's i've missed, though the fish one had me going "Yep this is just a math solution i dont know"
[13:48:44] <FromDiscord> <Cypheriel> I should probably be heading to bed, as well... I stayed up trying to solve this darn puzzle. Thank y'all for the help and sharing some insight
[13:55:28] *** Quits: src (~src@user/src) (Quit: Leaving)
[14:15:49] *** Joins: dv2 (~dv2@eclipse.oxfordfun.com)
[14:26:28] <FromDiscord> <gogolxdong (liuxiaodong)> What's the default gc of 1.6
[14:31:19] <FromDiscord> <Yardanico> refc
[14:31:27] <FromDiscord> <Yardanico> it's been the default and is still the default
[14:31:35] <FromDiscord> <Yardanico> ORC is expected to become the default in nim 2.0
[14:35:17] <FromDiscord> <Yardanico> https://github.com/nim-lang/RFCs/issues/437 for more info
[14:37:07] <FromDiscord> <gogolxdong (liuxiaodong)> ok,  here is an error which not sure has business of swtiching arc/orc to default gc↵`C:\Users\root\nimcache\fight_r\@mfight.nim.c: In function 'claim_fight_6436':↵C:\Users\root\nimcache\fight_r\@mfight.nim.c:5169:72: error: redeclaration of 'fmtRes' with no linkage↵ 5169 |                                                         NimStringDesc fmtRes;`
[14:38:12] <FromDiscord> <gogolxdong (liuxiaodong)> I remembered it compiles before.
[14:38:17] <FromDiscord> <Yardanico> yeah, that's a Nim bug, are you using ARC/ORC or refc?
[14:38:42] <FromDiscord> <Yardanico> there has only been one similar issue with ARC but it's been closed since https://github.com/nim-lang/Nim/issues/13622
[14:40:49] <FromDiscord> <gogolxdong (liuxiaodong)> yes, I'm using arc/orc and switched to default gc because websocket of nim-json-rpc has issues with arc/orc.
[14:41:38] <FromDiscord> <Yardanico> so is this bug with refc?
[14:41:54] <FromDiscord> <Yardanico> anyway, I don't think I can help much without the code to reproduce it :(
[14:53:24] <FromDiscord> <gogolxdong (liuxiaodong)> switch to default gc gives me this compile error, cps threadpool works but memory grow fast , not sure whether memory leaks.
[14:54:56] <FromDiscord> <gogolxdong (liuxiaodong)> use cps means unable to listen event using websocket of json-rpc-client.
[14:59:04] <FromDiscord> <gogolxdong (liuxiaodong)> listening on websocket is required now, I remember it worked before. Does nim has some change in these days?
[15:00:53] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:35:28] <FromDiscord> <geohuz> Hi, I'm trying to cross compile my web app using jester, and I use docker run --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim "nimble install -y jester; nim c -r myapp.nim", I specified to install dependency package on the command line, is there any way to have a dependency list file so compileer can install them automatically ?
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:42:08] <PMunch> @geohuz, what I normally do is create a .nimble file that list the requirements, then either run `nimble build` to build my application, or `nimble install` a dummy package that is just a list of requirements.
[15:42:44] <PMunch> The latter is what I do to populate the playground with packages, but it really only makes sense if you want to build a docker image with a set of packages already installed.
[15:48:09] <FromDiscord> <geohuz> Ok, so I should use nimble init to create it and add dependenies in the file then run nimble build
[15:48:55] <FromDiscord> <geohuz> @PMunch , is it correct?
[15:49:09] <PMunch> Yes
[15:49:28] <FromDiscord> <geohuz> Ok, thanks! @PMunch
[15:49:29] <PMunch> You essentially want to create a Nimble project for your program, and then use Nimble to build it
[15:50:01] <arkanoid> I perfectly understand "prt UncheckedArray[T]", but what is "UncheckedArray[T]"?
[15:51:53] <PMunch> A piece of memory holding an unknown number of T
[15:55:21] <PMunch> arkanoid, you would typically use it for flexible array members in a struct: https://www.geeksforgeeks.org/flexible-array-members-structure-c/
[15:57:28] <arkanoid> hm, ok
[16:01:22] <arkanoid> got it, it's spacer inside a struct
[16:02:02] <arkanoid> but it makes sizeof unreliable
[16:03:54] <PMunch> Yup
[16:04:05] <PMunch> And it's not really a spacer
[16:04:32] <PMunch> It makes a bit more sense if you come from C :P
[16:06:30] <PMunch> To get a pointer to a struct in C you typically call `malloc(sizeof(mystruct))` or similar. If you know that `mystruct` has a flexible array member with e.g. ints you could do `malloc(sizeof(mystruct) + 42 * sizeof(int))` to create a pointer to mystruct where the flexible member would now be able to hold 42 integers.
[16:07:40] <PMunch> If you now store the number 42 somewhere in that struct you can now do one pointer dereference and then directly be able to iterate over your data.
[16:07:40] <arkanoid> sure, that's what I mean with "spacer". Struct is now a piece of memory with non-fixed size
[16:07:51] <PMunch> Correct
[16:08:13] <PMunch> I thought you meant "spacer" as in "padding", but that is incorrect
[16:08:29] <arkanoid> is this the only way to build structs not 1:1 with its sizeof?
[16:08:44] <PMunch> Well..
[16:08:55] <arkanoid> well, "only way", let me take it with a grain of salt
[16:09:05] <arkanoid> I know you can do everything
[16:09:14] <PMunch> I mean you can always malloc more or less memory than you actually need for a struct
[16:16:56] <arkanoid> Sure. Thanks for the info
[16:22:37] *** Joins: Guest70 (~Guest70@93-163-179-70-static.dk.customer.tdc.net)
[16:23:10] *** Quits: Guest70 (~Guest70@93-163-179-70-static.dk.customer.tdc.net) (Client Quit)
[16:24:47] <NimEventer> New Nimble package! contractabi - ABI Encoding for Ethereum contracts, see https://github.com/status-im/nim-contract-abi
[16:57:42] *** Joins: rockcavera (~rc@192.12.114.197)
[16:57:42] *** Quits: rockcavera (~rc@192.12.114.197) (Changing host)
[16:57:42] *** Joins: rockcavera (~rc@user/rockcavera)
[17:28:35] *** Joins: Guest461 (~Guest46@194.8.199.29)
[17:33:20] *** Quits: u0_a185 (~u0_a185@121-80-249-103f1.kyt1.eonet.ne.jp) (Read error: Connection reset by peer)
[17:37:23] *** Joins: arkurious (~arkurious@user/arkurious)
[17:49:49] *** Quits: Guest461 (~Guest46@194.8.199.29) (Quit: Client closed)
[19:58:09] <FromDiscord> <ajusa> Is there a way to force a library to use header files instead of dynamic linking? Or do I need to modify the library itself and make it use header files?
[19:59:02] <Amun-Ra> I don't quite get the question
[19:59:43] <FromDiscord> <IsaacPaul> huh? you link a library via dynamically or statically. Headers are kinda different for both. One has some sort of dll export, the other has functions without it
[19:59:44] <FromDiscord> <Yardanico> In reply to @ajusa "Is there a way": if you're talking about some wrapper, then yes, you need to modify it so it uses header files instead
[19:59:57] <FromDiscord> <Yardanico> if it's hardcoded to dynamic libs
[20:00:16] <Amun-Ra> you can either: use dynlib (loading library at runtime, may faile), use dynlib pragma (loading library at runtime (may not fail) or compile directly into binary
[20:00:21] <FromDiscord> <ajusa> Yup, https://github.com/nim-lang/sdl1/blob/master/src/sdl.nim seems to be hardcoded to dynlib. I'll want to change the dynlib to the header pragma then I assume.
[20:00:24] <Amun-Ra> fail*
[20:00:33] <FromDiscord> <Yardanico> In reply to @ajusa "Yup, https://github.com/nim-lang/sdl1/blob/master/s": any reason you'd want sdl1 specifically?
[20:00:35] <FromDiscord> <ajusa> 3ds
[20:00:37] <FromDiscord> <Yardanico> oh
[20:00:45] <FromDiscord> <ajusa> no dynamic libraries on that target either lol
[20:00:45] <FromDiscord> <IsaacPaul> nice
[20:01:02] *** Joins: xet7 (~xet7@user/xet7)
[20:01:11] <FromDiscord> <Yardanico> In reply to @ajusa "no dynamic libraries on": you really just have to change `dynlib: LibName` to header in proc definitions
[20:01:22] <FromDiscord> <Yardanico> assuming all object definitions are correct you don't really need to set `header` pragma for them
[20:02:13] <Amun-Ra> mhm
[20:03:12] <FromDiscord> <ajusa> In reply to @Yardanico "you really just have": Not quite sure what you mean? Don't I need to tell it which header to look for
[20:03:21] <FromDiscord> <Yardanico> In reply to @ajusa "Not quite sure what": well that's what I meant
[20:03:36] <FromDiscord> <Yardanico> you don't have to do much other than replacing the dynlib pragma with the header pragma pointing to the header
[20:03:40] <FromDiscord> <Yardanico> for proc declarations
[20:03:49] <FromDiscord> <ajusa> Ah I see what you meant now, yup we're on the same page
[20:19:26] *** Joins: src (~src@user/src)
[20:22:42] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[21:04:11] <FromDiscord> <Professor Actual Factual> sent a code paste, see https://play.nim-lang.org/#ix=3HuP
[21:06:01] <FromDiscord> <Professor Actual Factual> (edit) "https://play.nim-lang.org/#ix=3HuP" => "https://play.nim-lang.org/#ix=3HuQ"
[21:10:38] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b) (Remote host closed the connection)
[21:11:14] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:665d:1191:e0a9:8e5b)
[21:14:09] <FromDiscord> <Clonkk> Difficult to says for sure without knowing the code, but I think it's when you try to do async operation using non-async socket
[21:14:42] <FromDiscord> <Clonkk> So look into https://nim-lang.org/docs/asyncdispatch.html
[21:16:04] <FromDiscord> <Clonkk> You can look into the async layer of the ZMQ bindings also https://github.com/nim-lang/nim-zmq/blob/master/zmq/asynczmq.nim
[21:16:33] <FromDiscord> <Clonkk> Where it takes a raw file descriptor and makes it into an AsyncSocket and register it in the dispatch loop
[21:17:04] <FromDiscord> <Clonkk> Not sure if that's what you're looking for, but from the error message it looks like raw socket operation failing into an async context \:)
[21:19:58] <FromDiscord> <Professor Actual Factual> Thank you for the link. Ya Im using a proprietary library from someone who claims its an async http client, I wonder if there is a bug on their code where like you said they are using a non-async socket.
[21:20:13] <FromDiscord> <Professor Actual Factual> (edit) "client," => "client library,"
[21:20:39] <FromDiscord> <Clonkk> Maybe it's just not declared as async from Nim's perspective and that's why you get an error
[21:21:25] <FromDiscord> <Clonkk> Technically, an async dispatch loop written in pure C could achieve the functionality of an async http server but from Nim's `{.async.}` context not be seen as async ?
[21:22:27] <FromDiscord> <Professor Actual Factual> sent a code paste, see https://play.nim-lang.org/#ix=3HuW
[21:23:04] <FromDiscord> <Clonkk> Are you sure mixing async and thread is a good idea ?
[21:23:15] <FromDiscord> <Professor Actual Factual> Thats the thing, this is just an experiment
[21:24:23] <FromDiscord> <Clonkk> Ah ok then you might be interested in https://github.com/yglukhov/asyncthreadpool
[21:24:26] <FromDiscord> <Professor Actual Factual> If i could get async multithreaded to work it would be what my client wants. First thread is Producer IO-bound, second thread is Consumer CPU-bound. I'd rather not mix the two, but I dont know of a better way
[21:24:48] <FromDiscord> <Clonkk> Which allows you to spawn function from a threadpool and return `Future[T]` variable
[21:29:37] <FromDiscord> <Clonkk> I would limit the scope of the async to their own thread and then use some messaging queue primitive for inter-thread communication. You can use channels (either built-ins or the more experimental  https://github.com/nim-lang/threading ) or ZMQ to achieve this; I mention ZMQ because I4ve used extensively as an inter-process / inter-thread messaging queue (only downsize is necessity to copy data unless you're confortable handling raw shared
[21:32:58] <FromDiscord> <Professor Actual Factual> In reply to @Clonkk "I would limit the": I have looked into channels, but this is a latency-sensitive application, I'd rather not commit to copying. I can use it as a worst case scenario though. But I think you are correct in seperating the async stuff in one thread only. I currently did a greedy approach where I have all my procs (both async/sync) in a single object, which is what I'm passing to between these threads.
[21:34:07] <Zevv> PMunch: logs on the fire yet?
[21:36:48] <FromDiscord> <Clonkk> If I'm not mistaken, Nim's channels can send `ref` with --gc\:arc so no copy involved.ZMQ benefit is to use its patterns to easily distribute workload on multiple running thread but it usually does require to perform one copy of your data but - depending on your application - that may not represent a bottleneck.↵(@Professor Actual Factual)
[21:38:09] <FromDiscord> <Professor Actual Factual> In reply to @Clonkk "If I'm not mistaken,": Oh snap, can't believe I haven't thought of something that obvious lol, I am using ref objects so copy wouldn't be too bad.
[21:38:33] <FromDiscord> <Professor Actual Factual> I will try that tonight, hopefully it works
[21:39:02] <FromDiscord> <Professor Actual Factual> (edit) "works" => "works, thank you"
[21:39:04] <FromDiscord> <Clonkk> If oyu only have need for basic patterns, channels should suffice
[21:56:29] <NimEventer> New thread by Geohuz: Could not run program which compiling with static linked lib, see https://forum.nim-lang.org/t/8697
[22:29:28] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[22:36:59] <FromDiscord> <hmmm> yoyo how do I auto unroll some strings I have in a seq in a type object?
[22:37:19] <FromDiscord> <hmmm> don't tell me I can't I'm lazy 🤔
[22:37:19] <FromDiscord> <IsaacPaul> what do you mean by unroll>
[22:37:45] <FromDiscord> <hmmm> I mean first element of string goes in first element of type object and so on
[22:37:50] <FromDiscord> <hmmm> of seq string
[22:38:08] <FromDiscord> <IsaacPaul> oh.. so you want to serialize an array of strings into an object
[22:38:12] <FromDiscord> <hmmm> YES!
[22:38:25] <FromDiscord> <hmmm> big brainy isaac computing the answer...
[22:38:27] <FromDiscord> <hmmm> tick tick tick
[22:39:22] <FromDiscord> <IsaacPaul> Honestly sounds like a terrible way to serialize objects. Is there a built-in solution that does what you want? idk
[22:39:30] <FromDiscord> <Mocha> Is there some way to access nimble package information from within the package, e.g. the version number/author?
[22:39:43] <FromDiscord> <hmmm> are you really telling me I can't? 😒
[22:40:06] *** Joins: jjido (~Denis@90.213.58.125)
[22:40:13] <FromDiscord> <IsaacPaul> I'm saying idk, but I'm also saying that if you could you probably shouldn't... lol
[22:41:13] <FromDiscord> <hmmm> ok I think about it some more and will come back again 🤔
[22:42:06] <FromDiscord> <IsaacPaul> (edit) "probably" => "_probably_"
[23:05:25] <Amun-Ra> hmm, I've found another bug in 1.6
[23:12:44] <arkanoid> how can I wrap a static C function a.k.a. internal linkage?
[23:17:57] <FromDiscord> <pmunch> @hmmm\:  pretty easy with a macro
[23:18:04] <FromDiscord> <pmunch> If you want to get your toes wet
[23:19:40] <arkanoid> PMunch: I'm facing another edge case with futhark where I'd like to import a function with internal linkage
[23:24:49] *** Quits: averell (~averell@user/averell) (Quit: .)
[23:31:25] <FromDiscord> <hmmm> hmmm my toes are already frozen. Macros seems overkill for lowly me. I'm trying my hand at constructors but the more I go the more it seems a dumb way to go about it
[23:45:59] <FromDiscord> <nwilburn> Has anybody had any luck getting a statically compiled binary working on windows with HTTPS client support? My google-fu has not returned a whole lot of positive information about this
[23:50:05] <FromDiscord> <hmmm> my own personal google-fu says that if I get no results for "how to blabla python" it can't be done 🧐
[23:50:54] <FromDiscord> <hmmm> but if it can be done in python there are very good chances you can do it nim 😃
[23:51:56] *** Joins: averell (~averell@user/averell)
[23:52:53] *** Joins: PMunch_ (~PMunch@user/pmunch)
[23:54:41] <FromDiscord> <Recruit_main707> strictly speaking you can do anything even in brainfuck, if you hate yourself hard enough
[23:55:01] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[23:56:38] *** Quits: PMunch (~PMunch@user/pmunch) (Killed (NickServ (GHOST command used by PMunch_)))
[23:56:39] <FromDiscord> <leorize> @nwilburn\: if you just want to ship the binary, you won't have a good time since nim's tls implementation requires a cacert.pem file in PATH or next to the executable
[23:56:43] *** PMunch_ is now known as PMunch
[23:57:04] *** Joins: PMunch_ (~PMunch@user/pmunch)
[23:57:11] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3HvV
[23:57:17] <FromDiscord> <hmmm> it unpacks the seq into the vars
[23:58:27] <PMunch> New advent of code stream will be live in a couple of minutes :)
[23:58:40] <FromDiscord> <hmmm> go git them munchie!
[23:58:54] <FromDiscord> <hmmm> the yellow 
[23:59:02] <FromDiscord> <nwilburn> In reply to @leorize "<@784085658292715520>\: if you just": 😦 ↵Honestly I just ignore SSL certs at the moment. When I was attempting to build windows it just failed completely which was disappointing.  I can deal with proper cert management later, but was hoping that somebody has some experience with HTTPS + nim + windows and a single binary
[23:59:05] *** Joins: neurocyte0132889 (~neurocyte@45.93.108.168)
[23:59:05] *** Quits: neurocyte0132889 (~neurocyte@45.93.108.168) (Changing host)
[23:59:05] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:59:33] <PMunch> !eval let (a, b, c) = (100, 200, 300); echo b
[23:59:37] <NimBot> 200
[23:59:38] <PMunch> Nim has that for tuple unpacking
