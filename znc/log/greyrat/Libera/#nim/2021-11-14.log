[00:10:59] <FromDiscord> <Zoom> Just a program that listens for messages in one protocol, translates them to some other and sends requests. "Basic" just describes the planned complexity level and requirements.↵(@dom96)
[00:14:59] <FromDiscord> <Zoom> I meant there may be some useful libs for the task, which already depend on it. `nim-json-rpc` for example↵(@Rika)
[00:35:55] <FromDiscord> <Rika> Is it a hard dependency
[00:38:03] *** Joins: xet7 (~xet7@user/xet7)
[01:46:55] <FromDiscord> <Ricky Spanish> sent a code paste, see https://play.nim-lang.org/#ix=3EUB
[02:01:27] <FromDiscord> <Ricky Spanish> nevermind nim-arg parse seems like the kind of thing i was looking for
[03:27:03] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[04:21:40] <FromDiscord> <retkid> can you not have multiple channels?
[04:22:51] <FromDiscord> <Elegantbeef> You should be able to
[04:24:03] <FromDiscord> <TennisBowling> is there a good postgresql library?
[04:24:16] <FromDiscord> <retkid> forgot .open()
[04:24:27] <FromDiscord> <retkid> In reply to @TennisBowling "is there a good": theres on in the stdlib
[04:24:31] <FromDiscord> <retkid> (edit) "on" => "one"
[04:24:55] <FromDiscord> <TennisBowling> what’s it called?
[04:25:04] <FromDiscord> <retkid> https://nim-lang.org/docs/db_postgres.html#postgresql_1
[04:26:30] <FromDiscord> <andi-> Hey, nim newbie here. I've just tried to use `split` from the `unicode` module with the `maxsplit`parameter. I was expecting it to behave like `splitn` in rust or `split(..., n)` in Python but apparently it doesn't return the remaining parts of the input string a nth component but instead just returns everything between the separators (even if the max matches have been reached). Is there some stdlib function that does this "as expected"?
[04:27:20] <FromDiscord> <retkid> i don't know but, you can probably pipe in the last it then rsplit() the original string
[04:27:25] <FromDiscord> <retkid> (edit) "rsplit()" => "rsplit()[1]"
[04:27:43] <FromDiscord> <retkid> that'll return the remainder
[04:28:03] <FromDiscord> <retkid> however, there might be a cleaner way
[04:28:24] <FromDiscord> <Elegantbeef> Do you have an example of the problem?
[04:29:01] <FromDiscord> <andi-> `foo: bar:baz:zes`, I want to get `foo` as one element and ` bar:baz:zes` as another
[04:29:02] <FromDiscord> <retkid> think i might've sent him down a quest... I should have asked for an example...
[04:29:32] <FromDiscord> <retkid> ahhh
[04:29:59] <FromDiscord> <retkid> so in python, it splits into a tuple of 3↵ie ↵("foo", " ", "bar:baz:zes")
[04:30:07] <FromDiscord> <retkid> you want the delimiter
[04:31:05] <FromDiscord> <Elegantbeef> I dont get why it'd split it into `foo, " ", and "bar:baz:zes"`
[04:31:31] <FromDiscord> <andi-> sent a code paste, see https://play.nim-lang.org/#ix=3EV9
[04:31:34] <FromDiscord> <andi-> This is how it does it in python
[04:31:36] <FromDiscord> <Elegantbeef> That's what it does
[04:31:37] <FromDiscord> <exelotl> In reply to @TennisBowling "is there a good": ndb is better that the stdlib one because it's typesafe
[04:31:40] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3EVa
[04:31:57] <FromDiscord> <exelotl> https://github.com/xzfc/ndb.nim
[04:32:17] <FromDiscord> <retkid> oh no
[04:32:20] <FromDiscord> <retkid> im thinking of partition
[04:32:29] <FromDiscord> <Elegantbeef> Both the unicode aware and  strutils works the same https://play.nim-lang.org/#ix=3EVb
[04:32:34] <FromDiscord> <exelotl> (well I'm not actually sure how complete the ndb postgres support is, but it's good enough for Norm apparently)
[04:32:39] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909246916120940574/unknown.png
[04:32:51] <FromDiscord> <retkid> nim's split works the same way as it does in python
[04:33:12] <FromDiscord> <Elegantbeef> I mean it works correctly afaict
[04:33:44] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909247189778305044/unknown.png
[04:34:09] <FromDiscord> <andi-> Indeed it does.. m(
[04:34:11] <FromDiscord> <andi-> my fault
[04:34:14] <FromDiscord> <andi-> I had an off-by-one
[04:34:17] <FromDiscord> <andi-> in my actual code
[04:34:22] <FromDiscord> <retkid> happens to the best of us
[04:35:40] <FromDiscord> <TennisBowling> In reply to @exelotl "ndb is better that": will take a look
[04:36:01] <FromDiscord> <retkid> In reply to @exelotl "ndb is better that": is there a typesafe sqllite
[04:36:19] <FromDiscord> <exelotl> yep, also ndb ^^
[04:36:29] <FromDiscord> <exelotl> it just doesn't support mysql
[05:26:16] *** Quits: krux02 (~krux02@p200300e8172958000e9c089d099881c9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:03:27] <FromDiscord> <retkid> is there any example of how to use .peek()
[06:50:54] <FromDiscord> <evoalg> When I do `nimble list -i` it no longer lists what's installed, but it says `Warning: Using project local deps mode` and nothing else ... did I break it?
[06:52:08] <FromDiscord> <Elegantbeef> Mine says the same, truthfully didnt know nimble would list installed packages
[06:53:34] <FromDiscord> <evoalg> it did before yea
[06:58:35] <FromDiscord> <Varriount> @GULPF Regarding the `times` module, what was your motivation for giving the `TimeInterval` type separate fields? Why not make it a single `int64`, and have year/month/day/etc. do division?
[07:33:11] <FromDiscord> <evoalg> I can not longer install or unintall anything using nimble ... I'll try deleting everything and reinstalling nim
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:45:53] <FromDiscord> <evoalg> That worked
[07:52:08] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3EVM
[07:52:28] <FromDiscord> <Elegantbeef> Yep
[07:52:50] <FromDiscord> <Elegantbeef> That was a change from 1.4.8 -\> 1.6 so either the author hasnt got around to it or doesnt care 😀
[07:53:19] <FromDiscord> <exelotl> the nimble enforced structure is dumb and I hate it
[08:07:13] <FromDiscord> <evoalg> @ElegantBeef I was testing kashae and I wanted to see the speed up of calling the factorial function just once, but kashae is so damn fast that I thought I should use timeit instead of benchy as timeit can measure to nanoseconds ... anyway kashae sped it up about 100354x (I used -d:release for both) 🙂
[08:08:07] <FromDiscord> <Elegantbeef> Yep memoization is pretty nifty for stuff like this
[08:13:26] <FromDiscord> <Elegantbeef> The fun part is seeing how effective it is with just a few values cached
[08:13:27] <FromDiscord> <Elegantbeef> Like doing just `{.cacheOpt: 5.}` or similar
[08:19:26] <FromDiscord> <evoalg> oh I always misspeak - I was testing fib not func
[08:20:16] <FromDiscord> <evoalg> (edit) "func" => "fact"
[08:20:37] <FromDiscord> <evoalg> fact ... how many time will I misspeak
[08:23:06] <FromDiscord> <Elegantbeef> Ah so just validating my tests 😀
[08:23:37] <FromDiscord> <evoalg> lol to start with ... I'm not doing factorials
[08:23:44] <FromDiscord> <evoalg> using bigints
[08:24:05] <FromDiscord> <Elegantbeef> As most of my code, i just made it cause it seemed fun, never actually used it for anything
[08:24:30] <FromDiscord> <evoalg> I like fun code
[08:28:07] <FromDiscord> <evoalg> it's faster for factorials (using bigints) even on one call to the function instead of multiple calls ... I don't know why as the cache wouldn't be built up yet, as it's recursively going from n to 1 ... ?
[08:28:45] <FromDiscord> <Elegantbeef> What's the code?
[08:29:58] <FromDiscord> <evoalg> https://play.nim-lang.org/#ix=3EVX
[08:31:25] <FromDiscord> <evoalg> it's only like 4x faster, but it's faster
[08:31:56] <FromDiscord> <Elegantbeef> That's quite odd
[08:32:02] <FromDiscord> <evoalg> kashae magic!
[08:32:27] <FromDiscord> <Elegantbeef> Are we sure it got the right answer?
[08:32:46] <FromDiscord> <evoalg> lemme check...
[08:33:51] <FromDiscord> <Elegantbeef> Same value
[08:34:47] <FromDiscord> <Elegantbeef> I just dont get why it'd be faster, since it should enter it once go "yep it's not in the cache, invoke the child code"
[08:35:54] <FromDiscord> <evoalg> The kashae version and non-kashae answers are the same, and python's math.factorial(50) is the same answer too
[08:36:00] <FromDiscord> <Elegantbeef> Like it's expanded into https://play.nim-lang.org/#ix=3EW2
[08:36:32] <FromDiscord> <evoalg> wow ok
[08:36:45] <FromDiscord> <Elegantbeef> The fact it's faster is ... interesting
[08:38:03] <FromDiscord> <evoalg> and by "wow" I mean "Whoa look at all that code I don't understand" 😉
[08:38:30] <FromDiscord> <Elegantbeef> Lol it's just hashing parameters then checking a table
[08:39:48] <FromDiscord> <evoalg> the what have we learned? ... use kashae for all my proc's just in case, cos you never know! lol
[08:42:34] <FromDiscord> <Elegantbeef> hmm give me one second i might've found the culrpit
[08:42:36] <FromDiscord> <Elegantbeef> culprit even
[08:43:55] <FromDiscord> <Elegantbeef> Yep found it
[08:44:04] <FromDiscord> <Elegantbeef> the `timeGo` was running it more than once
[08:44:15] <FromDiscord> <evoalg> ohhhhh ok
[08:44:26] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3EW7 bench this
[08:44:49] <FromDiscord> <evoalg> I thought (1, 1) was 1 run of 1 loop
[08:44:52] <FromDiscord> <Elegantbeef> They're about even with that
[08:45:14] <FromDiscord> <Elegantbeef> I dont know might need to be `(1, 0)` but that still didnt seem right
[08:45:51] <FromDiscord> <Elegantbeef> I just went to the stdlib stuff since it's right there
[08:47:16] <FromDiscord> <Elegantbeef> Well there we go, dont always use kashae 😛
[08:48:37] <FromDiscord> <Elegantbeef> The full cached version will probably just be slower due to the nature of this code
[09:08:46] <FromDiscord> <retkid> somewhere in my code
[09:08:57] <FromDiscord> <retkid> http.getContent is causing some issue
[09:09:05] <FromDiscord> <retkid> which is causing threads to hang\
[09:09:11] <FromDiscord> <retkid> (edit) "hang\" => "hang"
[09:14:29] <NimEventer> New thread by Plgupa: Getting error setting up Mysql Database, see https://forum.nim-lang.org/t/8620
[09:23:07] *** Joins: vicfred (~vicfred@user/vicfred)
[09:28:23] <FromDiscord> <evoalg> In reply to @Elegantbeef "Well there we go,": Thank you for all your help
[09:32:24] <FromDiscord> <Elegantbeef> Uh oh that's a lot of users i see joining on matrix
[09:32:28] <FromDiscord> <Elegantbeef> Bot raid inbound
[09:42:01] <FromDiscord> <BioS>  https://media.discordapp.net/attachments/371759389889003532/909324773836869642/Screenshot_20211114_011330.png
[09:42:15] <FromDiscord> <BioS> admins get him
[09:44:43] <FromDiscord> <reilly> Yeup
[09:44:51] <FromDiscord> <reilly> Got a crypto spam DM
[09:44:58] <FromDiscord> <Dumb Dragon> Same
[09:45:00] <FromDiscord> <Dumb Dragon> Was just about to mention
[09:45:48] <FromDiscord> <Yardanico> banned them all I think
[09:45:54] <FromDiscord> <reilly> Wow guys, I can't believe I just inexplicably won $32,038.58! Surely this can't be a scam!
[09:45:58] <FromDiscord> <Yardanico> very nice "platform" you got there, discord
[09:46:09] <FromDiscord> <LilTuxie> i got a spam dm too
[09:46:24] <FromDiscord> <Yardanico> yeah i banned all bots who joined together in one minute
[09:47:01] <FromDiscord> <Yardanico> if you still see new bots messaging you _after_ this, please tell
[09:47:33] <FromDiscord> <Rika> Disable server DMs lol
[09:48:30] <FromDiscord> <Yardanico> In reply to @Rika "Disable server DMs lol": those can be quite helpful though
[09:48:48] <FromDiscord> <Rika> If they want to contact me they should ping me first
[09:49:17] <FromDiscord> <Yardanico> ah I thought it was a server option
[09:49:22] <FromDiscord> <Yardanico> yeah as a individual user option it's quite useless
[09:49:35] <FromDiscord> <Yardanico> because users have it enabled (can receive server DMs) by default
[09:49:53] <FromDiscord> <Yardanico> and you can't change this setting server-wide
[09:52:32] <FromDiscord> <Rika> Ah
[09:52:38] <FromDiscord> <Rika> Yeah
[09:56:00] *** Joins: xet7 (~xet7@user/xet7)
[10:00:10] <NimEventer> New Nimble package! brainlyextractor - Brainly data extractor, see https://gitlab.com/lurlo/brainlyextractor
[10:14:26] <FromDiscord> <codic> this causes a segfault, what's wrong with it?
[10:14:34] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3EWj
[10:14:37] <FromDiscord> <codic> params is a seq from `commandLineParams()`
[10:14:45] <FromDiscord> <Elegantbeef> fontList is nil
[10:19:48] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3EWk
[10:19:58] <FromDiscord> <Yardanico> ptr UncheckedArray is mainly for _getting_ arrays from the C side (casting raw array pointers to some type)
[10:20:08] <FromDiscord> <Yardanico> you can just make a normal array and pass `addr elem[0]` to the C function
[10:20:43] <FromDiscord> <Yardanico> this also works for sequences
[10:31:49] <FromDiscord> <codic> oh I see, I didn't allocate the memory for fontList
[10:31:54] <FromDiscord> <codic> In reply to @Yardanico "you can just make": excellent, thanks
[11:40:44] <NimEventer> New thread by Pietroppeter: FOSDEM 2022 call for Nim Devroom (deadline tomorrow), see https://forum.nim-lang.org/t/8621
[11:42:44] <FromDiscord> <pietroppeter> hey @dom96, the fosdem thread is here. a bit late but if people would be interested in submitting talks, I think it could stilll be doable.
[12:02:55] <FromDiscord> <apahl> In reply to @Ricky Spanish "is there any less": Have you tried https://github.com/c-blake/cligen ?
[12:03:44] <FromDiscord> <Ricky Spanish> no it didnt appear when i was searching, but thanks for sharing looks useful
[12:08:28] <FromDiscord> <Yardanico> In reply to @Ricky Spanish "is there any less": Aside from cligen I've found https://github.com/iffy/nim-argparse to be pretty useful. It also allows you to hook it to anything as long as you provide the command, so you can use it for e.g. Telegram bot commands
[12:08:45] <FromDiscord> <Ricky Spanish> yeh this is what i ended up using
[12:10:04] <FromDiscord> <Ricky Spanish> thanks for the suggestions anyway, good to have a development community that actually is helpful
[12:12:23] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3EWy
[12:13:00] <FromDiscord> <Yardanico> so yeah, it's really nice to use it when you don't exactly need a CLI argument parser but for general command parsing
[12:13:07] <FromDiscord> <retkid> Yard all i see when i look at your pfp is the airbnb logo
[12:13:22] <FromDiscord> <Yardanico> https://cnc.fandom.com/wiki/Brotherhood_of_Nod
[12:13:35] <FromDiscord> <retkid> bella
[12:13:53] <FromDiscord> <retkid> https://en.wikipedia.org/wiki/Airbnb
[12:14:28] <FromDiscord> <Ricky Spanish> @Yardanico actually that usage is cleaner than what i was doing so going to steal that 😆  thanks
[12:14:47] <FromDiscord> <retkid> ricky spanish
[12:15:14] <FromDiscord> <Yardanico> In reply to @Ricky Spanish "<@!177365113899057152> actually that usage": It's the second example in the readme :) https://github.com/iffy/nim-argparse#parse
[12:15:22] <FromDiscord> <retkid> (edit) "ricky spanish" => "rᵣᵢ꜀ₖᵧ ₛₚₐₙᵢₛₕ"
[12:16:08] <FromDiscord> <retkid> so i was wondering here if anyone knows about any interesting behaviors in httpclient
[12:17:30] <FromDiscord> <retkid> it appears to occasionally just ignore my timeout and just hog the mainthread
[12:17:42] <FromDiscord> <retkid> (edit) "it appears to occasionally just ignore my timeout and just hog the mainthread ... " 03added "on .close()"
[12:17:58] <FromDiscord> <retkid> .close() will never complete
[12:18:37] <FromDiscord> <retkid> in my attempts to crawl a website I only get to about 14,000 urls before all threads get taken by the .close() and it grinds to a hault
[12:20:48] <FromDiscord> <retkid> lemme post some code to see if i can repicate it
[12:20:51] <FromDiscord> <retkid> (edit) "repicate" => "replicate"
[12:27:01] <FromDiscord> <Yardanico> why are you using threads for crawling to begin with?
[12:27:12] <FromDiscord> <Yardanico> Why not async? httpclient supports that
[12:27:35] <FromDiscord> <Yardanico> And then you'll also have asyncdispatch's withTimeout proc
[12:28:23] <FromDiscord> <retkid> In reply to @Yardanico "why are you using": I did try async
[12:28:31] <FromDiscord> <retkid> my code was basically
[12:28:32] <FromDiscord> <Yardanico> so?
[12:29:51] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3EWB
[12:29:56] <FromDiscord> <retkid> but i would get read from Nil
[12:30:11] <FromDiscord> <retkid> (edit) "but i would get read from Nil ... " 03added "issues"
[12:30:17] <FromDiscord> <retkid> so i scrapped that idea
[12:30:46] <FromDiscord> <retkid> In reply to @Yardanico "why are you using": because i wanted to learn threading, and it would take hours
[12:30:55] <FromDiscord> <retkid> (edit) "In reply to @Yardanico "why are you using": because i wanted to learn threading, and it would take hours ... " 03added "otherwise"
[12:31:13] <FromDiscord> <Yardanico> it won't, you can run multiple async "workers" at the same time
[12:31:18] <FromDiscord> <retkid> (edit) "In reply to @Yardanico "why are you using": because i wanted to learn ... threading," 03added "more"
[12:31:29] <FromDiscord> <Yardanico> I've been using async in my adb scanner and screenshot scrapper and it works very well
[12:31:44] <FromDiscord> <retkid> well i can use async and threading
[12:32:06] <FromDiscord> <Yardanico> No need for hacks
[12:32:08] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3EWF
[12:32:09] <FromDiscord> <retkid> uea
[12:32:11] <FromDiscord> <retkid> (edit) "uea" => "yea"
[12:32:13] <FromDiscord> <retkid> as i said
[12:32:14] <FromDiscord> <retkid> it doesn't work
[12:32:21] <FromDiscord> <Yardanico> as in?
[12:32:26] <FromDiscord> <retkid> it wouldn't close it
[12:32:38] <FromDiscord> <retkid> In reply to @retkid "it appears to occasionally": read
[12:32:56] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3EWG
[12:33:05] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3EWG" => "https://play.nim-lang.org/#ix=3EWH"
[12:33:39] <FromDiscord> <Yardanico> I was talking about async though, but okay :)
[12:33:43] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3EWH" => "https://play.nim-lang.org/#ix=3EWI"
[12:33:47] <FromDiscord> <Yardanico> I've never used the sync version of httpclient with timeouts
[12:34:12] <FromDiscord> <Yardanico> Check where it hangs by a profiler, probably it doesn't account for the timeout somewhere where it accesses external stuff
[12:34:14] <FromDiscord> <retkid> I can try the async one
[12:34:31] <FromDiscord> <Yardanico> Compile with --debugger:native for original source code mapping for the profiler
[12:34:33] <FromDiscord> <retkid> I tried to profile it but the threads wouldn't start for some reason
[12:34:35] <FromDiscord> <retkid> oh
[12:35:08] <FromDiscord> <retkid> with nimprof, right?
[12:35:38] <FromDiscord> <Yardanico> no
[12:35:47] <FromDiscord> <Yardanico> With any generic app profiler
[12:36:06] <FromDiscord> <Yardanico> nimprof is not really maintained as far as I know
[12:36:06] <FromDiscord> <retkid> I don't think i have a profiler
[12:36:09] <FromDiscord> <retkid> apart from strace
[12:36:28] <FromDiscord> <Yardanico> Install one?
[12:36:28] <FromDiscord> <retkid> I haven't checked the strace yet
[12:36:34] <FromDiscord> <retkid> WHICH ONE DO YOU RECOMMEND
[12:37:09] <FromDiscord> <Yardanico> I don't have any particular recommendations, use the one you prefer
[12:37:27] <FromDiscord> <Yardanico> There's quite a lot of them, for example callgrind, perf, gprof, etc
[12:37:58] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[12:38:47] <FromDiscord> <retkid> im looking for one for C, right?
[12:39:12] <FromDiscord> <Yardanico> Almost all of them are language agnostic, but yes, if it works for C it'll work for Nim too
[12:49:16] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Ping timeout: 245 seconds)
[13:00:43] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909374776055824424/unknown.png
[13:00:44] <FromDiscord> <retkid> very cool
[13:01:45] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909375037272883200/unknown.png
[13:02:09] <FromDiscord> <Yardanico> so you weren't using callgrind
[13:02:20] <FromDiscord> <Yardanico> callgrind is a tool available in valgrind
[13:02:24] <FromDiscord> <Yardanico> `valgrind --tool=callgrind`
[13:11:46] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 245 seconds)
[14:17:48] *** Joins: beshr (~beshr@user/beshr)
[14:23:07] <NimEventer> New thread by Kobi: Compiling to macOS, see https://forum.nim-lang.org/t/8622
[14:39:12] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:03:14] <NimEventer> New thread by Rb3: Yet another macro DSL, see https://forum.nim-lang.org/t/8623
[15:18:20] <FromDiscord> <dom96> In reply to @pietroppeter "hey <@!132595483838251008>, the fosdem": thanks, I was wondering whether I should create this thread, glad you did so 🙂
[15:20:34] <FromDiscord> <dom96> In reply to @Yardanico "it won't, you can": yesss, async all the way
[15:20:41] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:02:28] <FromDiscord> <Recruit_main707> the only way to debug nim code setting breakpoints is with vscode right? (without manually adding the breakpoint intructions)
[16:22:41] <FromDiscord> <Recruit_main707> I guess i can check gdbgui, seems pleasant enough to sue
[16:22:46] <FromDiscord> <Recruit_main707> use
[16:52:13] *** Joins: Guest2 (~Guest2@2001:ce8:131:5f61:10dc:1015:53d0:c1b3)
[16:56:05] *** Quits: Guest2 (~Guest2@2001:ce8:131:5f61:10dc:1015:53d0:c1b3) (Client Quit)
[17:16:20] <FromDiscord> <hmmm> what am I doin wrong broskis https://media.discordapp.net/attachments/371759389889003532/909439106436702278/aaa.JPG
[17:17:37] <FromDiscord> <federico3> should we create a Nim FOSDEM matrix room?
[17:19:05] <FromDiscord> <Rika> @hmmm [] is not seq
[17:19:17] <FromDiscord> <hmmm> oh shi lol
[17:19:26] <FromDiscord> <Rika> either add a `@` before the [] or use `array[4, int]`
[17:19:33] <FromDiscord> <hmmm> yea now it should work
[17:22:17] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[17:26:35] <FromDiscord> <hmmm> rika 🫂
[17:29:01] <FromDiscord> <Rika> lol
[17:35:56] *** Joins: terminalpusher (~terminalp@2a01:586:9939:1:d0f8:58dc:2d55:7de2)
[17:45:24] *** Joins: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3)
[17:55:27] <FromDiscord> <Pietro Peterlongo> well, since FOSDEM uses Matrix I guess it is appropriate (I created a Matrix account on purpose \:))! Maybe it could be nice to also have it linked to discord so people there can see it. Not sure how is the process to bridge the room to discord, whether is it better to create it first on discord or matrix...
[17:56:14] <FromDiscord> <pietroppeter> (and checked that if I reply to a message on matrix, the reply is not loss on discord, that is good!)
[18:19:05] *** Joins: xet7 (~xet7@user/xet7)
[18:22:52] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:25:43] *** Quits: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3) (Quit: WeeChat 3.0.1)
[18:25:56] *** Joins: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3)
[18:36:37] *** Joins: Guest2 (~Guest2@2001:ce8:131:5f61:10dc:1015:53d0:c1b3)
[18:38:44] *** Quits: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3) (Quit: WeeChat 3.0.1)
[18:49:45] <FromDiscord> <dom96> I created https://matrix.to/#/#nim-fosdem:matrix.org
[18:52:04] *** Quits: Guest2 (~Guest2@2001:ce8:131:5f61:10dc:1015:53d0:c1b3) (Quit: Client closed)
[18:58:34] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 260 seconds)
[19:00:37] *** Joins: xet7 (~xet7@user/xet7)
[19:08:46] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[19:32:35] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:08:33] <NimEventer> New thread by Sdmcallister: Htmlgen question, see https://forum.nim-lang.org/t/8624
[20:23:26] *** Joins: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3)
[20:24:23] *** Parts: u0_a185 (~u0_a185@2001:ce8:131:5f61:10dc:1015:53d0:c1b3) ()
[20:49:33] <FromDiscord> <retkid> @Yardanico so i tried your method with async again
[20:49:38] <FromDiscord> <retkid> i had the same segment fault issue
[20:49:44] <FromDiscord> <retkid> i turned off the gc and it works fine
[20:49:56] <FromDiscord> <retkid> however, it uses too much memory and my computer just says "nah"
[20:50:38] <FromDiscord> <retkid> tried using arc and orc but seem to get the same issue
[20:51:06] <FromDiscord> <retkid> (edit) ""nah"" => ""nah"↵(i only have 8gb of ram)"
[20:51:20] <FromDiscord> <dom96> have some code the reproduces the problem?
[20:51:26] <FromDiscord> <PMunch> In reply to @Yardanico "https://cnc.fandom.com/wiki/Brotherhood_of_Nod": How have I not noticed this before now?!
[20:52:06] <FromDiscord> <retkid> In reply to @dom96 "have some code the": lemme  I'll build something basic to reproduce it
[20:54:50] <NimEventer> New thread by Mantielero: UFCS issue, see https://forum.nim-lang.org/t/8625
[21:19:51] <FromDiscord> <the cows came home> im learning nim and karax and im wondering why i can pass procedures with arguments like im calling them into onclick parameters and instead of calling it then it just calls it on click
[21:20:10] <FromDiscord> <Rika> likely a template
[21:21:16] <FromDiscord> <the cows came home> i wrote the proc and its just a normal proc
[21:21:33] <FromDiscord> <Rika> i mean the onclick "proc" is perhaps a template
[21:21:36] <FromDiscord> <Rika> i dont use karax
[21:21:37] <FromDiscord> <the cows came home> oh
[21:29:44] <FromDiscord> <retkid> In reply to @dom96 "I created https://matrix.to/#/#nim-fosdem:matrix.or": this code is stapled together
[21:30:14] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909503000400252938/example.nim
[21:30:41] <FromDiscord> <the cows came home> o i get it now
[21:31:12] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/909503244252889118/example.nim
[21:32:08] <FromDiscord> <retkid> use --gc:none there will be no segfault
[21:32:33] <FromDiscord> <retkid> at least with -d:release
[21:32:38] <FromDiscord> <retkid> be sure to compile with -d:ssl
[21:32:45] <FromDiscord> <dom96> `cast[ptr Channel[string]](allocShared0(sizeof(Channel[string])))` that already looks like a bad idea
[21:32:51] <FromDiscord> <retkid> this is in the dock
[21:32:53] <FromDiscord> <retkid> (edit) "dock" => "doc"
[21:33:11] <FromDiscord> <retkid> (edit) "this is in the doc ... " 03added "for channel"
[21:33:18] <FromDiscord> <dom96> channels are already "shared" afaik
[21:33:26] <FromDiscord> <3xpl01tc0d3r> Is there some examples on parsing PE files in nim ?
[21:33:45] <FromDiscord> <dom96> huh https://nim-lang.org/docs/channels.html 404s
[21:35:18] <FromDiscord> <Rika> link changed
[21:35:25] <FromDiscord> <retkid> yea
[21:35:33] <FromDiscord> <retkid> for some reason they didn't put a redirct
[21:35:42] <FromDiscord> <dom96> what is it now?
[21:35:42] <FromDiscord> <retkid> https://nim-lang.org/docs/channel_builtin.html
[21:35:49] <FromDiscord> <retkid> (edit) "https://nim-lang.org/docs/channel_builtin.html" => "https://nim-lang.org/docs/channels_builtin.html"
[21:36:07] <FromDiscord> <dom96> huh, why was this changed lol
[21:36:20] <FromDiscord> <Rika> idk
[21:36:29] <FromDiscord> <Rika> it was just sudden
[21:36:53] <FromDiscord> <dom96> in any case, it seems that allocShared is only necessary when you want to pass channels around, in your case the channel is a global already so no need for this, or am I missing something?
[21:37:01] <FromDiscord> <konsumlamm> so that `std/channels` could use the link
[21:37:04] <FromDiscord> <konsumlamm> but then they decided that `std/channels` isn't ready yet
[21:37:16] <FromDiscord> <retkid> In reply to @dom96 "in any case, it": i am passing them around
[21:37:33] <FromDiscord> <retkid> i pass it to the thread recursive()
[21:38:12] <FromDiscord> <dom96> okay, but why, you only ever have one channel
[21:38:13] <FromDiscord> <retkid> in the original code i have multiple channels passing between threads
[21:38:30] <FromDiscord> <retkid> In reply to @dom96 "okay, but why, you": because the names are the same
[21:39:09] <FromDiscord> <retkid> proc recursive(uwu : string, urlChannel :  ptr Channel[string]) {.thread async.} =↵↵discard spawn recursive(x, urlChannel)
[21:39:21] <FromDiscord> <retkid> (edit) "proc recursive(uwu : string, urlChannel :  ptr Channel[string]) {.thread async.} =↵↵discard spawn recursive(x, urlChannel)" => "sent a code paste, see https://play.nim-lang.org/#ix=3F04"
[21:39:23] <FromDiscord> <retkid> there are better questions to ask lol
[21:39:42] <FromDiscord> <retkid> like why am i using asyncclient
[21:39:47] <FromDiscord> <retkid> (edit) "asyncclient" => "asyncclient, etc"
[21:40:02] <FromDiscord> <retkid> why is it async at all?
[21:40:03] <FromDiscord> <retkid> etc
[21:40:18] <FromDiscord> <Rika> they only sound like better questions to you
[21:40:41] <FromDiscord> <retkid> don't call me out
[21:40:50] <FromDiscord> <dom96> `ptr` is inherently unsafe
[21:41:01] <FromDiscord> <dom96> so any segfaulting problems immediately should begin there
[21:41:14] <FromDiscord> <retkid> well the interesting thing is
[21:41:17] <FromDiscord> <retkid> thats not the problem
[21:41:27] <FromDiscord> <retkid> the problem has something to do with the async
[21:41:33] <FromDiscord> <retkid> because if i dont use async it doesn't segfault
[21:41:43] <FromDiscord> <dom96> but yes, you're also mixing async and sync
[21:41:57] <FromDiscord> <retkid> In reply to @dom96 "but yes, you're also": where?
[21:42:13] <FromDiscord> <dom96> and have an {.async, thread.}, this simply won't work, not sure what you're trying to achieve there 🙂
[21:42:32] <FromDiscord> <dom96> you're calling `newHttpClient` and `newAsyncHttpClient`
[21:43:14] <FromDiscord> <retkid> I'll fix that but i guarantee you that is not the issue on the second bit
[21:43:29] <FromDiscord> <retkid> In reply to @dom96 "and have an {.async,": If i dont use async, the httpclients dont close
[21:43:37] <FromDiscord> <retkid> eventually, what happens is
[21:43:42] <FromDiscord> <retkid> they hang on the .close() statement
[21:43:46] <FromDiscord> <retkid> (edit) "they hang on the .close() statement ... " 03added "and saturate every t hread"
[21:43:48] <FromDiscord> <retkid> (edit) "t hread" => "thread"
[21:43:53] <FromDiscord> <retkid> so i use async to close them
[21:44:09] <FromDiscord> <dom96> It sounds like you have just done a bunch of workarounds and ended up with something that kinda works
[21:44:22] <FromDiscord> <retkid> it works without GC
[21:44:22] <FromDiscord> <dom96> I would focus on the design of this
[21:44:32] <FromDiscord> <dom96> and make sure it's solid first
[21:44:42] <FromDiscord> <Rika> "works without gc" is not really
[21:44:45] <FromDiscord> <Rika> solid
[21:44:56] <FromDiscord> <retkid> alright, well that is fair
[21:45:01] <FromDiscord> <Rika> like a lot of broken things work without gc
[21:45:11] <FromDiscord> <retkid> this goes back to my original question
[21:45:23] <FromDiscord> <retkid> why the hell dose httpclient.close() just sometimes hang
[21:45:53] <FromDiscord> <retkid> I would never have to do weird async and threading things ((which should be compatible btw))
[21:46:13] <FromDiscord> <Rika> they are compatible
[21:46:18] <FromDiscord> <Rika> your design may just be wrong
[21:47:00] <FromDiscord> <retkid> ah ok so it cant be httpclient it is me being wrong for trying to work around its weird bug 🤔
[21:47:22] <FromDiscord> <dom96> no, it's likely that httpclient has some bugs 🙂
[21:47:47] <FromDiscord> <retkid> I'll remove the async then open an issue
[21:47:57] <FromDiscord> <dom96> first thing to answer the question of why `close` hangs is to check the source code
[21:47:58] <FromDiscord> <dom96> https://github.com/nim-lang/Nim/blob/devel/lib/pure/httpclient.nim#L653
[21:48:05] <FromDiscord> <Rika> In reply to @retkid "why the hell dose": this is a bug
[21:48:13] <FromDiscord> <Rika> In reply to @retkid "I would never have": this is likely due to your design
[21:48:14] <FromDiscord> <dom96> Looking at this I don't see why it would hang
[21:48:26] <FromDiscord> <Rika> In reply to @dom96 "https://github.com/nim-lang/Nim/blob/devel/lib/pure": https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/net.nim#L1160
[21:48:31] <FromDiscord> <Rika> also looking at this
[21:48:31] <FromDiscord> <retkid> In reply to @dom96 "Looking at this I": im not sure either
[21:48:36] <FromDiscord> <retkid> i was looking at it
[21:48:41] <FromDiscord> <retkid> it seems pretty straightforward
[21:48:52] <FromDiscord> <retkid> where would the issue be
[21:48:55] <FromDiscord> <retkid> is it my machine?
[21:49:12] <FromDiscord> <dom96> https://github.com/nim-lang/Nim/blob/devel/lib/pure/net.nim#L1171
[21:49:22] <FromDiscord> <dom96> maybe it's the ssl logic that's to blame
[21:49:23] <FromDiscord> <Rika> > literally sent that
[21:49:24] <FromDiscord> <Rika> smh
[21:49:40] <FromDiscord> <dom96> sorry, didn't read backlog before sending 🙂
[21:49:46] <FromDiscord> <Rika> im joking
[21:56:57] <NimEventer> New thread by JPLRouge: What does bycopy mean , see https://forum.nim-lang.org/t/8626
[21:59:37] <FromDiscord> <dom96> I know I know 🙂
[22:07:54] <FromDiscord> <hotdog> Has the choosenim install script has changed to windows line endings?
[22:08:22] <FromDiscord> <hotdog> Seems to be failing now with `bash: ./init.sh: /bin/sh^M: bad interpreter: No such file or directory`
[22:09:36] <FromDiscord> <hotdog> (edit) 04removed "has"
[22:15:40] <FromDiscord> <dom96> oof, I just updated it
[22:15:45] <FromDiscord> <dom96> so thank you for the call out
[22:18:45] <FromDiscord> <dom96> should be fixed now
[22:23:11] *** Joins: muffin_ (~muffin@2409:4064:2204:63bb:40d9:6efb:dc47:6c53)
[22:29:05] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[22:34:22] <FromDiscord> <hotdog> In reply to @dom96 "should be fixed now": Speedy fix! Cheer
[22:34:27] <FromDiscord> <hotdog> (edit) "Cheer" => "Cheers"
[22:37:38] *** muffin_ is now known as muffin
[22:38:51] *** muffin is now known as notmuffin
[22:56:44] *** notmuffin is now known as muffin_
[23:10:58] <FromDiscord> <andi-> Is there some preferred way to convert an array of 8 bytes to e.g. an uint64 if I know the byte order is correct (e.g. because I swapped it beforehand). I can't seem to find the right way to do this.
[23:14:03] *** Joins: PMunch (~PMunch@user/pmunch)
[23:20:22] <FromDiscord> <el__maco> dunno about preferred way, but maybe something like this? https://play.nim-lang.org/#ix=3F0o
[23:20:31] *** Quits: terminalpusher (~terminalp@2a01:586:9939:1:d0f8:58dc:2d55:7de2) (Remote host closed the connection)
[23:21:06] <NimEventer> New thread by Bpr: Preview of coming attractions?, see https://forum.nim-lang.org/t/8627
[23:24:10] *** Quits: muffin_ (~muffin@2409:4064:2204:63bb:40d9:6efb:dc47:6c53) (Quit: Konversation terminated!)
[23:25:41] *** Joins: muffin (~muffin@2409:4064:2204:63bb:40d9:6efb:dc47:6c53)
[23:25:45] <FromDiscord> <andi-> mhm, yeah I saw a couple of those while googling. Might be the way to go but I am a bit surprised that I need manual pointer fiddling here.↵(@elmaco)
[23:27:55] *** muffin is now known as muffin_
[23:29:05] <FromDiscord> <el__maco> I'm new with the language so it wouldn't surprise me if there was a cleaner way to express it, but that's how I would do it in C and that's probably alright in terms of resulting code performance
[23:29:42] <PMunch> @andi-, I mean you can just `cast[uint](a)`
[23:29:52] <FromDiscord> <andi-> Yeah, In C I'd not be scared by this as I would know that my array is of a given size on the stack and not some fancy abstractions I don't yet understand \:D
[23:30:21] <PMunch> !eval let a = [1.uint8,2,3,4,5,6,7,8]; echo cast[uint](a)
[23:30:26] <NimBot> 578437695752307201
[23:30:30] *** Quits: muffin_ (~muffin@2409:4064:2204:63bb:40d9:6efb:dc47:6c53) (Client Quit)
[23:30:45] <FromDiscord> <el__maco> ah, thats probably better then ^^
[23:31:52] <PMunch> andi-, Nim arrays are just bytes in memory, same as in C. They'll also be placed on the stack by default
[23:32:16] <FromDiscord> <el__maco> I find it a bit surprising that simple cast works
[23:32:18] <FromDiscord> <andi-> ok
[23:32:26] <FromDiscord> <andi-> The simple cast didn't work for me
[23:32:44] <FromDiscord> <el__maco> if the array is narrower than the type, it seems to produce garbage
[23:32:50] <PMunch> What did you try to do?
[23:33:05] <PMunch> Well obviously, because then you're grabbing nearby data as well
[23:33:27] <FromDiscord> <andi-> my LSP complained that I can't treat my `array[0..8,uint8]` as pointer
[23:33:29] <FromDiscord> <el__maco> kinda thought we had to go through unsafe address but I guess not
[23:33:42] <PMunch> andi-, well, you can't..
[23:34:13] <PMunch> But you're free to cast it to a pointer, at least if sizeof(pointer) == 8
[23:35:41] <FromDiscord> <andi-> That seems to work
[23:35:44] <FromDiscord> <andi-> sent a code paste, see https://play.nim-lang.org/#ix=3F0D
[23:38:33] <PMunch> This also works: https://play.nim-lang.org/#ix=3F0G
[23:38:49] <PMunch> Note that I converted your array to `array[8, uint8]`
[23:39:04] <PMunch> !eval echo sizeof(array[0..8, uint8])
[23:39:08] <NimBot> 9
[23:39:10] <PMunch> !eval echo sizeof(array[8, uint8])
[23:39:13] <NimBot> 8
[23:39:31] <FromDiscord> <andi-> oh, wow
[23:39:38] <PMunch> The .. is inclusive. So 0..8 is indexes 0 to 8, ie. 9 bytes
[23:40:18] <FromDiscord> <andi-> right, that is why Rust added the `..=` thingy to express this clearer.
[23:40:39] <FromDiscord> <andi-> Thanks! I'll try to make some progress now
[23:41:08] <FromDiscord> <enthus1ast> Why do you have the pointer in uint8 in the first place?
[23:41:22] <FromDiscord> <enthus1ast> Uint8 array I mean
[23:42:13] <FromDiscord> <andi-> Because it was mentioned here earlier and that is what I found in some older discourse thread
[23:42:28] <FromDiscord> <andi-> I didn't think that I could just cast it on the "spot"
[23:43:08] <NimEventer> New thread by IvanS: Puzzling compiler error (1.4.8 Windows), see https://forum.nim-lang.org/t/8628
[23:45:12] <FromDiscord> <enthus1ast> Yes this I get, but what possible could lead to a uint8 array that resembles a pointer
[23:46:37] <PMunch> Pointers are 8 byte long
[23:46:57] <PMunch> So you could theoretically cast an array of 8 bytes to a pointer
[23:47:04] <PMunch> Not sure when that would ever come up though
[23:47:32] <FromDiscord> <enthus1ast> Yes I know and have done it aswell
[23:47:34] <PMunch> But I'm guessing that they might have tried something like myArray[]
[23:47:52] <PMunch> @enthus1ast, in what scenario did you have to do that?
