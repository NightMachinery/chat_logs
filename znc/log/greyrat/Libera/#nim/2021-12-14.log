[00:09:57] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:12:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:12:24] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:36:56] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[00:37:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[00:41:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:43:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:43:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:44:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:44:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:45:30] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[00:45:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:46:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:46:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:46:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:02] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:49:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:56:46] <NimEventer> New thread by AmjadBHD: Stop clang from generating ilk and pdb files, see https://forum.nim-lang.org/t/8708
[01:31:19] *** Joins: vicfred (~vicfred@user/vicfred)
[03:10:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[03:12:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:13:29] *** Joins: jmd (~jmdaemon@142.207.63.60)
[03:16:01] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 268 seconds)
[03:23:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[03:24:03] *** Quits: jmd (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[03:55:44] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:15:37] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:39:32] *** Quits: src (~src@user/src) (Quit: Leaving)
[05:03:25] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[05:08:59] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:23:49] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[05:26:21] <NimEventer> New post on r/nim by 4runninglife: Nim is great, that is all, see https://reddit.com/r/nim/comments/rfw71y/nim_is_great_that_is_all/
[05:30:33] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 252 seconds)
[05:41:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:50:32] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 240 seconds)
[05:51:23] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[05:58:07] <NimEventer> New thread by Prestige: Maze solver benchmark - How would you optimize?, see https://forum.nim-lang.org/t/8709
[06:24:45] <FromDiscord> <huantian> <https://github.com/huantianad/advent-of-code/blob/150bb6642b246c4b3094c89ebe77bf0214cc0214/2021/day13.nim#L31> ↵why does changing this line to just an `else:` make nim unhappy
[06:49:19] <FromDiscord> <impbox [ftsf]> what does it say?
[06:50:34] <FromDiscord> <impbox [ftsf]> also it's hard to say when you're including stuff and it can't be run
[06:55:52] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3Ikd
[06:57:26] <FromDiscord> <impbox [ftsf]> what's the error?
[06:58:41] <FromDiscord> <huantian> `invalid type: 'void' in this context: 'seq[void]' for var`↵`expression 'x' is of type 'int' and has to be used (or discarded)`↵both on the bottom x
[07:29:51] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3Iko
[07:30:38] <FromDiscord> <geekrelief> (edit) "https://play.nim-lang.org/#ix=3Iko" => "https://paste.rs/DhG"
[07:31:26] <FromDiscord> <valerga> i wonder why the arch repos still have nim 1.4.8 hmm
[07:32:18] <FromDiscord> <valerga> `Last Updated:     2021-06-07 `
[07:33:05] <FromDiscord> <valerga> hmm the maintaner of it maintains a ton of packages though
[07:33:10] <FromDiscord> <valerga> (edit) "maintaner" => "maintainer"
[07:33:19] <FromDiscord> <valerga> https://archlinux.org/packages/?packager=anthraxx
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:48:23] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:52:29] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:01:16] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:32:51] *** Joins: PersonMcGuy (~PersonMcG@2603-8080-700a-3700-63fc-9e38-00ab-0976.res6.spectrum.com)
[08:34:20] <PersonMcGuy> Hello everyone. Quick question. What exactly is the difference between waitFor and await? A lot of times I've used waitFor in non-async procs while being lazy, but I'm sure this is not how it was intended to be used
[08:36:19] <FromDiscord> <Rika> It is, it’s the only thing you can use in sync procs
[08:36:28] <FromDiscord> <Rika> You use await in async procs
[08:39:23] <PersonMcGuy> @Rika ah okay, so then is there any weird behavior if waitFor is used within an async proc?
[08:45:39] <FromDiscord> <Rika> Yes, you block
[08:45:53] <FromDiscord> <Rika> Effectively negating the use of async
[08:48:58] <PersonMcGuy> @Rika That makes sense. Thanks for the insight, I appreciate it
[08:49:31] *** Quits: PersonMcGuy (~PersonMcG@2603-8080-700a-3700-63fc-9e38-00ab-0976.res6.spectrum.com) (Quit: Client closed)
[08:50:12] <FromDiscord> <Schelz> Does directx exist in nim ?
[08:54:39] <FromDiscord> <Rika> It can
[08:54:51] <FromDiscord> <Rika> I don’t know if someone has made a wrapper
[08:55:02] <FromDiscord> <impbox [ftsf]> what is directx even anyway?
[08:55:51] <FromDiscord> <impbox [ftsf]> wow, it's a lot of stuff
[08:55:57] <FromDiscord> <impbox [ftsf]> would be a lot of work to wrap manually i guess
[08:56:10] <FromDiscord> <impbox [ftsf]> i guess just wrap the bits you need
[08:56:26] <FromDiscord> <Rika> I just assumed he meant D3D
[08:57:06] <FromDiscord> <valerga> sent a code paste, see https://play.nim-lang.org/#ix=3IkE
[08:57:23] <FromDiscord> <valerga> how can I do that... or what's a better structure to hold [int, string] ?
[09:00:11] <FromDiscord> <valerga> i'll just make an object
[09:03:09] <FromDiscord> <impbox [ftsf]> what are you trying to do?
[09:04:28] <FromDiscord> <Elegantbeef> The relatiionship between the data is very important here
[09:04:57] <FromDiscord> <valerga> it an association of indexes (int) and strings
[09:08:09] <FromDiscord> <impbox [ftsf]> are you expecting all the indices to be filled out?
[09:08:13] <FromDiscord> <impbox [ftsf]> or random numbers to strings?
[09:08:38] <FromDiscord> <impbox [ftsf]> array[N,string] or seq[string] if the first
[09:08:47] <FromDiscord> <impbox [ftsf]> or Table[int,string] for the latter
[09:12:43] <FromDiscord> <valerga> i don't expect all indices, just some
[09:13:33] <FromDiscord> <valerga> object is cleaner to work with I think
[09:15:11] <FromDiscord> <impbox [ftsf]> what kind of operations will you be doing?
[09:15:26] <FromDiscord> <impbox [ftsf]> indexing will be slow if you're searching through the objects to find the correct one
[09:15:32] <FromDiscord> <impbox [ftsf]> that's where a table is nice
[09:20:12] <FromDiscord> <valerga> what im doing is havea seq of objects, then sort that seq by the object's index property
[09:20:16] <FromDiscord> <valerga> (edit) "havea" => "have a"
[09:27:24] <FromDiscord> <impbox [ftsf]> yep, you'd be better off using a table most likely
[09:27:42] <FromDiscord> <impbox [ftsf]> but depends what kind of operations you're doing most often
[09:28:03] <FromDiscord> <impbox [ftsf]> sorting and searching is generally slow
[09:43:26] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 260 seconds)
[09:46:50] <FromDiscord> <valerga> but how do I iterate the table keys in a sorted manner?
[09:49:23] <FromDiscord> <valerga> oh OrderedTable
[09:55:32] <FromDiscord> <Professor Actual Factual> sent a code paste, see https://play.nim-lang.org/#ix=3IkP
[09:56:20] <FromDiscord> <Rika> Do you need compile date and time?
[09:57:54] <FromDiscord> <Elegantbeef> The compiler can be built with libffi
[10:02:05] <FromDiscord> <impbox [ftsf]> OrderedTable is not sorted, it is based on insertion order
[10:02:32] <FromDiscord> <Elegantbeef> It can be sorted though
[10:03:12] <FromDiscord> <impbox [ftsf]> or get the keys and sort them
[10:04:08] <FromDiscord> <Rika> Doesn’t it have a sort function
[10:04:57] <FromDiscord> <Professor Actual Factual> In reply to @Rika "Do you need compile": Dont need compile time, i just want a cimport function to work. Times.now was the first to come to mind but it could be anything
[10:06:56] <FromDiscord> <Elegantbeef> Like i said build the compiler yourself with `-d:nimHasLibffi` then you should be able to
[10:06:59] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/pull/10150 for reference
[10:07:53] <FromDiscord> <Professor Actual Factual> In reply to @Elegantbeef "https://github.com/nim-lang/Nim/pull/10150 for refe": Thank you for the quick reply, will def look into this.
[10:09:02] <FromDiscord> <valerga> I'm hitting a limit using string.insert. would it be faster to concatenate manually?
[10:09:30] <FromDiscord> <Michal58> Some questions about tables: What is the equivalent of Python's defaultdict?
[10:09:41] <FromDiscord> <Elegantbeef> what does defaultDict do?
[10:10:35] <FromDiscord> <Elegantbeef> Is it just `Table[string, T]`?
[10:10:38] <FromDiscord> <Michal58> Why is there no dec for CountTable?
[10:11:57] <FromDiscord> <Elegantbeef> No clue but you can do `inc` with a negative
[10:12:16] <FromDiscord> <impbox [ftsf]> defaultdict i believe returns a specific value if you try to get an index that hasn't been set
[10:12:30] <FromDiscord> <impbox [ftsf]> you could do similar with `getOrDefault`
[10:12:36] <FromDiscord> <Elegantbeef> Yea
[10:14:24] <FromDiscord> <Michal58> In reply to @impbox "you could do similar": Wa afraid you'd say that
[10:14:35] <FromDiscord> <Elegantbeef> Why afraid?
[10:15:33] <FromDiscord> <impbox [ftsf]> you could make your own type that does it fairly trivially i think
[10:15:35] <FromDiscord> <Michal58> Since it's not that convenient
[10:15:57] <FromDiscord> <Elegantbeef> Sure but it's easy to alias or replicate
[10:17:29] <nrds> <06Prestige99> Maybe an example is in order
[10:19:17] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3IkT
[10:19:22] <FromDiscord> <Elegantbeef> I can only write so fast my dear boy
[10:21:23] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3IkU
[10:21:31] <FromDiscord> <impbox [ftsf]> faster than me
[10:22:02] <FromDiscord> <impbox [ftsf]> even had time to add in `std/`
[10:22:18] <FromDiscord> <Elegantbeef> and `contains`
[10:25:45] <FromDiscord> <Elegantbeef> If the value was compile time known this could even be done with just a distinct
[10:26:29] <FromDiscord> <valerga> how can I get the last key in an OrderedTable?
[10:26:39] <FromDiscord> <valerga> seems keys is only an iterator
[10:27:20] <FromDiscord> <valerga> actually nvm I can do it without that
[10:31:09] <FromDiscord> <Michal58> "Paste removed malware"? 👮‍♂️
[10:31:52] <FromDiscord> <Michal58> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3IkT": Yeah, I understand, thanks
[10:32:46] <FromDiscord> <Schelz> Is possible in nim to specify the type of a variable to return HANDLE ?
[10:33:27] <FromDiscord> <impbox [ftsf]> In reply to @Schelz "Is possible in nim": I don't understand the question... you can specify the type of variable a function returns
[10:33:48] <FromDiscord> <impbox [ftsf]> `proc procName(arg: ArgType): ReturnType =`
[10:33:51] <FromDiscord> <Schelz> If its possible to get the HANDLE of a process by its name
[10:34:45] <FromDiscord> <impbox [ftsf]> are you talking about a Windows thing?
[10:34:54] <FromDiscord> <Schelz> Yes :))
[10:35:29] <FromDiscord> <impbox [ftsf]> if it's exposed by the windows api then probably
[10:35:42] <FromDiscord> <valerga> sorting the OrderedTable is taking seconds...
[10:36:05] <FromDiscord> <impbox [ftsf]> valergra, just sort the keys
[10:36:09] <FromDiscord> <impbox [ftsf]> how many keys do you have?
[10:36:29] <FromDiscord> <valerga> thousands
[10:36:49] <FromDiscord> <valerga> I'm doing `ins.sort(system.cmp, order = SortOrder.Ascending)`
[10:37:07] <FromDiscord> <impbox [ftsf]> if you have a lot of keys probably just use a seq[string]
[10:37:15] <FromDiscord> <impbox [ftsf]> that way you don't need to sort
[10:37:47] <FromDiscord> <impbox [ftsf]> though i'm not sure why you need to sort
[10:37:53] <FromDiscord> <impbox [ftsf]> what are you actually trying to do?
[10:38:11] <FromDiscord> <valerga> im concatenating a string with some replacements. i need the indexes to be ordered to increment them properly
[10:39:12] <FromDiscord> <Michal58> CountTable is basically an implementation of multiset so there should be the basic operations - intersection, union, difference available. merge implements (even tho only in-place) union, but I don't see the rest?
[10:39:14] <FromDiscord> <valerga> sent a code paste, see https://play.nim-lang.org/#ix=3IkZ
[10:39:20] <FromDiscord> <impbox [ftsf]> @Schelz https://nim-lang.org/docs/winlean.html#getCurrentProcess
[10:39:39] <FromDiscord> <Elegantbeef> Michal i can only say be the change you want in the stdlib
[10:41:34] <FromDiscord> <impbox [ftsf]> In reply to @valerga "im concatenating a string": is that the only operation you're doing?
[10:41:44] <FromDiscord> <impbox [ftsf]> if so, use a seq
[10:42:05] <FromDiscord> <impbox [ftsf]> but i don't understand your usecase
[10:42:42] <FromDiscord> <Michal58> In reply to @Elegantbeef "Michal i can only": I don't understand.
[10:43:11] <FromDiscord> <impbox [ftsf]> if you need a feature that doesn't exist yet, feel free to add it. because otherwise probably no one else has needed it yet
[10:43:39] <FromDiscord> <impbox [ftsf]> or it may exist in another library, check nimble
[10:43:54] <FromDiscord> <Michal58> Yeah I just wanted to check that I'm not missing anything
[10:44:07] <FromDiscord> <impbox [ftsf]> well there are sets in nim
[10:44:23] <FromDiscord> <impbox [ftsf]> which have set operations
[10:45:09] <FromDiscord> <impbox [ftsf]> but CountTable is not a set, so I'm not sure why it would have set operations, but I'm not an expert on CountTables.
[10:45:27] <FromDiscord> <Elegantbeef> Me either it seems they're all weird operations for count table
[10:46:19] <FromDiscord> <Elegantbeef> Is `intersection(a, b) == intersection(b, a)`?
[10:46:43] <FromDiscord> <Hamid_Bluri> hey, i found `--checks:off` breaks Tables module with my code
[10:46:53] <FromDiscord> <Hamid_Bluri> (edit) "Tables" => "`tables`"
[10:46:54] <FromDiscord> <Elegantbeef> Cause i very much see them not being commutative
[10:47:13] <FromDiscord> <Elegantbeef> Does the code have runtime errors without checks?
[10:47:23] <FromDiscord> <Elegantbeef> Well with checks 😀
[10:48:02] <FromDiscord> <Hamid_Bluri> no it does not have any checks
[10:48:03] <FromDiscord> <Hamid_Bluri> https://github.com/hamidb80/problem-solving/blob/main/advent-of-code/2021/d14/main.nim#L48
[10:49:02] <FromDiscord> <Elegantbeef> So running with checks it works fine?
[10:49:08] <FromDiscord> <Hamid_Bluri> yep
[10:49:38] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3Il2
[10:49:43] <FromDiscord> <Elegantbeef> That's with checks
[10:49:56] <FromDiscord> <Hamid_Bluri> no its `--checks:off`
[10:50:08] <FromDiscord> <Elegantbeef> Are you sure?
[10:50:09] <FromDiscord> <Hamid_Bluri> with checks it works fine
[10:50:35] <FromDiscord> <Hamid_Bluri> yes
[10:50:41] <FromDiscord> <Hamid_Bluri> you can check it your self
[10:50:54] <FromDiscord> <Hamid_Bluri> it doesn't have any dependencies
[10:51:01] <FromDiscord> <Hamid_Bluri> nim 1.6.0
[10:51:11] <FromDiscord> <Hamid_Bluri> (edit) "your self" => "by yourself"
[10:51:55] <FromDiscord> <Elegantbeef> Both dont run
[10:52:19] <FromDiscord> <Hamid_Bluri> with what error?
[10:52:41] <FromDiscord> <Elegantbeef> Index error with checks on and without the same error as you've got
[10:53:17] <FromDiscord> <Hamid_Bluri> how can i remove compile cache?
[10:53:23] <FromDiscord> <Elegantbeef> do `-f`
[10:53:59] <FromDiscord> <Hamid_Bluri>  https://media.discordapp.net/attachments/371759389889003532/920214518573973534/unknown.png
[10:54:04] <FromDiscord> <Hamid_Bluri> it works fine
[10:54:09] <FromDiscord> <Elegantbeef> Not here
[10:54:22] <FromDiscord> <Hamid_Bluri> where then?
[10:54:58] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Il3
[10:55:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Il4
[10:55:42] <FromDiscord> <Hamid_Bluri> windows stores next line as `\r\n`
[10:55:59] <FromDiscord> <Elegantbeef> You know there is a splitlines proc?
[10:57:39] <FromDiscord> <Hamid_Bluri> yeah but i wanted to split where there are 2 next lines
[10:57:53] <FromDiscord> <Hamid_Bluri> line 29
[10:58:06] <FromDiscord> <Elegantbeef> Anywho yea i dont know what to say
[11:00:36] <FromDiscord> <Michal58> In reply to @impbox "but CountTable is not": Well CountTable (multiset) is a generalisation of a set. In set every element is present either zero times or once. In multiset each item can be present any (natural) number of times. So those operations are also just generalisations. Intersection and union are commutative, while difference is not.
[11:01:33] <FromDiscord> <Michal58> @ElegantBeef
[11:01:42] <FromDiscord> <Hamid_Bluri> https://play.nim-lang.org/#ix=3Il5
[11:10:08] <FromDiscord> <Schelz> In reply to @impbox "<@!354911589029380097> https://nim-lang.org/docs/wi": Inst there something to get process by id or name ?
[11:10:50] <FromDiscord> <impbox [ftsf]> Process ID is not the same as HANDLE
[11:12:02] <FromDiscord> <Schelz> Ik but rather getCurrentProcess
[11:18:34] *** Joins: PMunch (~PMunch@user/pmunch)
[11:19:36] *** Joins: jjido (~Denis@90.213.58.125)
[11:20:02] *** Quits: PMunch (~PMunch@user/pmunch) (Client Quit)
[11:22:17] *** Joins: PMunch (~PMunch@user/pmunch)
[11:22:43] *** Quits: PMunch (~PMunch@user/pmunch) (Remote host closed the connection)
[11:23:42] *** Joins: PMunch (~PMunch@user/pmunch)
[11:34:37] <FromDiscord> <impbox [ftsf]> Ooh you want a HANDLE of another windows process, I dunno, you should really check the Microsoft docs
[11:35:02] <FromDiscord> <impbox [ftsf]> Then use the corresponding function from the nim windows wrapper
[11:49:28] <FromDiscord> <Schelz> The nim windows api wrapper its import window ?
[11:49:52] <FromDiscord> <enthus1ast> import winim
[11:49:58] <FromDiscord> <enthus1ast> ^ this is the big one
[11:50:11] <FromDiscord> <Schelz> I found now thx
[11:50:12] <FromDiscord> <enthus1ast> or most complete one
[11:52:19] <FromDiscord> <enthus1ast> to get a handle to an process you must call OpenProcess
[11:56:51] <FromDiscord> <Hamid_Bluri> In reply to @hamidb80 "https://play.nim-lang.org/#ix=3Il5": why did I think `assert` discards the following statement 😕
[11:57:34] <FromDiscord> <Hamid_Bluri> sorry beef
[11:57:40] <FromDiscord> <Elegantbeef> You mean you though assert turns into discard without checks?
[11:57:47] <FromDiscord> <Hamid_Bluri> yep
[11:58:04] <FromDiscord> <Elegantbeef> Nah assert is basically for documenting what values should be
[12:04:44] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[12:07:15] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:11:52] <PMunch> Hmm, does anyone have a packed bool sequence implementation?
[12:14:41] <FromDiscord> <enthus1ast> this maybe? https://github.com/treeform/bitty
[12:15:04] <FromDiscord> <enthus1ast> but, in my tests, a seq[bool] is way faster
[12:15:24] <PMunch> Yeah I just got mine working and it's way slower
[12:16:13] <FromDiscord> <enthus1ast> why do you need it?
[12:16:20] <FromDiscord> <enthus1ast> or for what?
[12:16:27] <FromDiscord> <Rika> why is the BitArray a ref?
[12:16:45] <FromDiscord> <Elegantbeef> Probably to reduce copies
[12:17:24] <FromDiscord> <Rika> idk imo that should be to the discretion of the user
[12:17:52] <FromDiscord> <Elegantbeef> Sure but a lot of the stuff like this is made specifically for their usages
[12:21:13] <PMunch> Oh wow, yeah that was an order of magnitude slower than my custom solution, which itself was an order of magnitude slower than seq[bool]
[12:22:56] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:29:37] <FromDiscord> <Elegantbeef> What's your indexing logic?
[12:30:19] <FromDiscord> <enthus1ast> i mean do packed bitsets even have the potential to be faster than array (or preallocated seq) ?
[12:30:27] <FromDiscord> <enthus1ast> bitarrays i mean
[12:31:19] <FromDiscord> <Elegantbeef> They probably remove a bit of speed
[12:34:27] <FromDiscord> <enthus1ast> what i can imagine is that they have a speed bonus when reading and unrolled 8 times
[12:40:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:41:57] <NimEventer> New thread by Araq: Nim devel now supports Nimble 0.14, see https://forum.nim-lang.org/t/8710
[12:45:48] *** Joins: jmd (~jmdaemon@142.207.63.60)
[12:46:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[12:54:06] <FromDiscord> <hieu.nt> hi guys
[12:54:08] <FromDiscord> <hieu.nt> sent a code paste, see https://play.nim-lang.org/#ix=3Ilw
[12:54:32] <FromDiscord> <hieu.nt> when i try the code above to delete file from google drive
[12:54:35] <FromDiscord> <hieu.nt> i got error
[12:54:39] <FromDiscord> <Rika> what error
[12:55:08] <FromDiscord> <hieu.nt> no handles or timers registered in dispatcher
[12:55:15] <FromDiscord> <Rika> how are you running it
[12:55:48] <FromDiscord> <enthus1ast> this happens when you have a runForever and the only async proc returns, then there are none left
[12:56:05] <FromDiscord> <hieu.nt> let resp = await conn.delete(url)
[12:56:13] <FromDiscord> <hieu.nt> echo resp
[12:56:38] <FromDiscord> <hieu.nt> then i wrap it in waitfor deleteDriveFile proc
[12:56:55] <FromDiscord> <hieu.nt> it throws error
[12:57:03] <FromDiscord> <hieu.nt> but the file still got deleted in google drive
[12:57:04] <PMunch> Do you have a complete snippet we can look at?
[12:57:24] <PMunch> Yeah, that error just means that the pool of asynchronous tasks is empty when the dispatcher goes to find something to run
[12:57:53] <PMunch> It's only fired by runForever I believe
[12:58:34] *** Quits: jmd (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[12:58:54] <FromDiscord> <hieu.nt> sent a long message, see http://ix.io/3Ilx
[12:59:03] <PMunch> Aah, apparently it's from everything which happens to call runOnce, which is pretty much everything in async
[12:59:06] <FromDiscord> <hieu.nt> (edit) "long message," => "code paste," | "http://ix.io/3Ilx" => "https://play.nim-lang.org/#ix=3Ily"
[12:59:46] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[13:00:14] <FromDiscord> <hieu.nt> the issue is: per google api for deleting file "If successful, this method returns an empty response body."
[13:00:16] <PMunch> That's still not a complete snippet
[13:00:34] <PMunch> I don't think that should be an issue
[13:00:35] <FromDiscord> <hieu.nt> only then it throws an error if it successfully delete a file
[13:00:54] <FromDiscord> <hieu.nt> it it fails to delete a file, let resultStr = await resp.bodyStream.readAll()
[13:00:59] <FromDiscord> <hieu.nt> then this run and there is no error
[13:01:16] <FromDiscord> <enthus1ast> we need the full snipped that we see how you call the connect\_and\_delete\_all\_files proc
[13:01:38] <PMunch> Hmm, I guess maybe resp.bodyStream.readAll() doesn't register anything if the bodyStream doesn't have any data, and then await errors out that nothing is register
[13:01:42] <PMunch> But that seems odd
[13:02:17] <FromDiscord> <hieu.nt> the way i call it is:
[13:02:33] <FromDiscord> <hieu.nt> when isMainModule:
[13:02:44] <FromDiscord> <hieu.nt> waitfor connect_and_delete_all_files()
[13:04:20] <PMunch> Where do you get `readAll` from?
[13:04:27] <PMunch> It's not defined in asyncstreams..
[13:05:30] <FromDiscord> <hieu.nt> import asyncdispatch, cgi, httpclient, json, jwt, os, streams, strformat, times, strutils
[13:05:34] <FromDiscord> <hieu.nt> full import
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:09:18] *** Joins: rwb (~augh@theguntretort.com)
[13:09:21] <FromDiscord> <hieu.nt> but i think you might be right about error with FutureStream
[13:09:38] <FromDiscord> <hieu.nt> sent a code paste, see https://play.nim-lang.org/#ix=3IlA
[13:09:41] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[13:09:47] <FromDiscord> <hieu.nt> because the code works when it has error deleting file
[13:10:10] <FromDiscord> <hieu.nt> for example resp.status returns 404 No Permission or something like that
[13:10:46] <FromDiscord> <hieu.nt> but when it succeeds, it throws "no handles or timers registered ..."
[13:11:01] <FromDiscord> <hieu.nt> because there is no body response from google api
[13:12:11] *** Server sets mode: +nt 
[13:13:10] <PMunch> Hmm, it's not immediately obvious though where the error is
[13:13:12] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[13:13:23] <FromDiscord> <enthus1ast> could it be that the parseJson excepts but it is not catched and leaks to the waitFor?
[13:13:38] <FromDiscord> <enthus1ast> not sure what happens then
[13:14:07] <PMunch> I don't think so
[13:14:15] <PMunch> I mean this is where the error is raised: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/asyncdispatch.nim#L360-L362
[13:14:19] <FromDiscord> <enthus1ast> i would try to wrap all parseJson in an try except anyhow
[13:14:35] <PMunch> And that is called from various parts of the async libraries
[13:16:41] <FromDiscord> <hieu.nt> In reply to @enthus1ast "i would try to": i tried that. It doesnt fall into the try except block
[13:16:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[13:16:44] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[13:16:45] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[13:16:45] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[13:16:57] <FromDiscord> <hieu.nt> it throws error before that
[13:17:40] <FromDiscord> <hieu.nt> anyhow, i search around and see there are some workarounds with adding dummy timer
[13:17:57] <FromDiscord> <hieu.nt> any idea how can do that ?
[13:18:27] <PMunch> I think you rather want to check the error like you did
[13:18:41] <PMunch> Or even read the Content-Length header, and if it's 0 just don't call readAll
[13:19:24] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3IlD
[13:19:36] <FromDiscord> <hieu.nt> let resp = await client.delete(url)
[13:20:11] <FromDiscord> <hieu.nt> it dies before it gets to await
[13:20:30] <FromDiscord> <hieu.nt> so i cannot read anything from the resp
[13:21:20] <FromDiscord> <hieu.nt> i only call readAll() it fails
[13:21:22] <FromDiscord> <hieu.nt> if(resp.status != success_status):
[13:21:51] *** Joins: nisstyre (~wes@user/nisstyre)
[13:21:59] <PMunch> Wait, it fails already at the delete call?
[13:22:13] <FromDiscord> <hieu.nt> yes
[13:22:30] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[13:22:48] <PMunch> So if you do `let deleteFut = client.delete(url); let resp = await deleteFut` it fails on the second line?
[13:22:57] *** Joins: Colt (~Colt@user/colt)
[13:23:01] <FromDiscord> <hieu.nt> the echo doesnt print
[13:23:01] <FromDiscord> <hieu.nt> sent a code paste, see https://play.nim-lang.org/#ix=3IlE
[13:23:16] <FromDiscord> <hieu.nt> error is thrown
[13:24:03] <PMunch> Hmm, can you boil this down to a minimal example?
[13:24:54] <PMunch> Preferably not actually calling the Google APIs, but rather trying to call a small Jester API that behaves the same way
[13:25:31] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[13:27:48] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[13:28:51] <FromDiscord> <hieu.nt> wait my bad, i think might know what the errors are from
[13:28:52] <FromDiscord> <hieu.nt> let resultStr = await resp.bodyStream.readAll()
[13:29:02] <FromDiscord> <hieu.nt> this line, when bodyStream is empty
[13:29:10] <FromDiscord> <hieu.nt> it throws error
[13:29:43] <FromDiscord> <hieu.nt> there are some other error status from Google when it returns an empty response body.
[13:30:00] <FromDiscord> <hieu.nt> i think i just have to make a better nulll/empty check
[13:30:08] <FromDiscord> <Elegantbeef> Should you use `finished` or `failed` on the body stream?
[13:31:18] <FromDiscord> <hieu.nt> In reply to @Elegantbeef "Should you use `finished`": how can i do it ? still pretty new to Nim
[13:32:16] <PMunch> `readAll` is basically a loop which calls `read` which in turn should call `finished`
[13:32:32] <PMunch> That's why I said it wasn't obvious where the error came from
[13:33:21] <PMunch> But yeah, the error coming from `await resp.bodyStream.readAll()` was the only thing I could get to make sense
[13:33:29] <PMunch> But it's not obvious why this errors out
[13:34:11] <FromDiscord> <Elegantbeef> Well `.bodyStream` doesnt run any code so awaiting it probably kicks the dispatcher in and as there are no async procs waiting it poops the bed?
[13:34:19] <FromDiscord> <Elegantbeef> You know async better than i so i dont know
[13:34:30] <FromDiscord> <Elegantbeef> Just a guess based off the code and error
[13:34:51] <PMunch> But he awaits readAll, not bodyStream
[13:35:12] <FromDiscord> <Elegantbeef> Ah right
[13:37:25] <FromDiscord> <enthus1ast> just tried it, it reads empty body just fine
[13:37:40] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3IlK
[13:37:54] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3IlL
[13:39:38] <FromDiscord> <hieu.nt> so specifically, it fails when the status is 204 No Content
[13:40:19] <FromDiscord> <hieu.nt> i mean it throws the "no handles or timers registered"
[13:40:35] <FromDiscord> <hieu.nt> i remove the whole resp.bodyStream.readAll()
[13:40:45] <FromDiscord> <hieu.nt> and it doesnt throw error anymore
[13:42:28] <PMunch> Yeah I think I found the error
[13:42:33] <FromDiscord> <hieu.nt> "Although this status code is intended to describe a response with no body, servers may erroneously include data following the headers." From firefox
[13:42:34] <PMunch> Give me a sec to check it out
[13:42:47] <PMunch> That shouldn't be an issue
[13:43:35] <FromDiscord> <enthus1ast> it seems to be though
[13:44:02] <FromDiscord> <enthus1ast> returning Http204 makes the client stuck in my example
[13:44:57] <FromDiscord> <enthus1ast> so this\:↵    resp Http204, ""
[13:45:29] <PMunch> @enthus1ast, yeah and if you turn it into a proc with {.async.} and replace your waitFors with await then you get the same error
[13:46:15] <FromDiscord> <enthus1ast> yeah
[13:46:45] <FromDiscord> <enthus1ast> so then @hieu.nt do a↵`if resp.status == Http200:`
[13:47:24] <PMunch> Then it should work
[13:49:08] *** Joins: xet7 (~xet7@user/xet7)
[13:50:28] <PMunch> I believe the error is here: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/httpclient.nim#L861
[13:50:57] <PMunch> Or rather reading from a stream with Http204 is an error, but it should be a better error than just making asyncdispatch freak out..
[13:54:08] <FromDiscord> <hieu.nt> thanks guys really appreciate all the help
[14:08:35] <FromDiscord> <dom96> Please be sure this is reported on GitHub 🙂
[14:50:43] <NimEventer> New thread by Xigoi: How would this endianness check be translated to Nim?, see https://forum.nim-lang.org/t/8711
[15:18:42] <FromDiscord> <valerga> any idea why this code is still running after minutes of execution? https://play.nim-lang.org/#ix=3IlW
[15:18:48] <FromDiscord> <valerga> what's the bottleneck?
[15:19:44] <FromDiscord> <impbox [ftsf]> enable profiler
[15:20:35] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/estp.html
[15:20:53] <PMunch> So hard to help people without getting AoC spoilers :(
[15:21:42] <FromDiscord> <valerga> oh :d
[15:22:04] <FromDiscord> <impbox [ftsf]> oh yeah, if you're asking questions about aoc stuff, do it in the aoc channel and use spoiler tags
[15:22:26] <PMunch> Aaah, that's what people are doing in the AoC channel?
[15:22:34] <PMunch> Those don't really come through to IRC :P
[15:23:19] <FromDiscord> <impbox [ftsf]> well I guess the IRC client doesn't render them the same?
[15:23:46] <PMunch> It shows them as two pipes :P
[15:24:06] <FromDiscord> <impbox [ftsf]> yeah, i'm pretty sure that's what people are typing to do them
[15:24:20] <FromDiscord> <impbox [ftsf]> client would just need to render it as markdown or whatever
[15:27:12] <FromDiscord> <valerga> will the profiler work if I stop in mid execution?
[15:28:34] <PMunch> @dom96, @hieu.nt, issue and PR to fix it: https://github.com/nim-lang/Nim/issues/19253
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:46:02] <FromDiscord> <dom96> cool, thx
[15:46:58] <FromDiscord> <Forest> Anyone know how I'd implement a dynamic programming language in Nim? Any tools i can use?
[15:47:44] <PMunch> Not quite sure what you mean
[15:47:54] <PMunch> If you want to write your own language in nim then it's just to start writing
[15:48:13] <PMunch> Nothing special about writing a language compared to writing any other pgroam
[15:49:38] <FromDiscord> <Forest> I'm trying to reimplement python, and i have no idea where to start, this is a brand new field to me and I'm just confused lol, i know i need to work on a lexer but don't know how to begin implementing one in Nim
[15:50:25] <FromDiscord> <enthus1ast> you could have a look at\:↵https://nim-lang.org/docs/lexbase.html
[15:50:31] <FromDiscord> <enthus1ast> and also nimja's lexer
[15:50:40] <FromDiscord> <Forest> How did that not come up in google- thanks!
[15:50:49] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/nimja/blob/master/src/nimja/lexer.nim
[15:51:06] <FromDiscord> <Forest> Nimja?
[15:51:47] <FromDiscord> <Forest> Thanks!
[15:52:52] <FromDiscord> <enthus1ast> there are also a few others more complete langs written in nim
[15:54:01] <FromDiscord> <enthus1ast> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\:  has a nice gist where he has collected links for nim language development
[15:54:03] <FromDiscord> <enthus1ast> https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6
[15:57:12] <FromDiscord> <Forest> In reply to @enthus1ast "there are also a": Ooh neat!
[16:01:57] <FromDiscord> <Forest> htsparse looks really neat and useful 👀
[16:03:25] <FromDiscord> <enthus1ast> i would recommend that you write your own stuff first (does not have to be great or complicated) so that you get a feeling for lexing and parsing stuff
[16:03:55] <FromDiscord> <enthus1ast> eg write a toy assembler and a virtual machine
[16:04:37] *** Joins: jjido (~Denis@90.213.58.125)
[16:04:38] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[16:04:44] <FromDiscord> <enthus1ast> super easy parsing and lexing but requires roughly the same skills as with a full lang
[16:06:29] <FromDiscord> <Forest> Fair enough aha
[16:31:42] *** Joins: src (~src@user/src)
[16:35:34] <PMunch> Hmm, is it possible to create a type which is different across modules? Might sound weird but I was thinking of TaintedString and came up with an idea for CleanString. CleanString would be a `static string or currentModule.EscapedString`, so string literals and other compile-time strings are fine, but if you want to use a runtime string you need to escape it. But I only want the `escape` procedure for module X to work for procedures accepting a CleanString in 
[16:35:34] <PMunch> module X and not procedures accepting a CleanString in module Y.
[16:36:46] <PMunch> So essentially `X.escape(input: string): X.EscapedString` and `X.someProc(arg: CleanString)` there I want CleanString to be `static string or X.EscapedString`
[16:37:32] <PMunch> But I want to define CleanString generically
[16:52:40] <FromDiscord> <vindaar> use a `concept` that requires the `escape` proc and returns some type defined in the module (which then still must use a different name of course). You can call the concept `CleanString` though and you get the usage you want I think
[16:52:55] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[16:54:11] <PMunch> I thought about that, but you I can't think of a way to write a concept that allows `escape` to take a string and return a module-specific type
[16:57:19] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[16:59:04] *** Joins: rockcavera (~rc@192.12.114.194)
[16:59:05] *** Quits: rockcavera (~rc@192.12.114.194) (Changing host)
[16:59:05] *** Joins: rockcavera (~rc@user/rockcavera)
[17:06:59] <FromDiscord> <vindaar> sent a code paste, see https://play.nim-lang.org/#ix=3ImS
[17:10:46] <PMunch> Aah, yeah that works
[17:13:56] *** Joins: arkurious (~arkurious@user/arkurious)
[17:15:31] <PMunch> Yup, seems to work fine: http://ix.io/3ImV/
[17:16:22] <FromDiscord> <vindaar> nice!
[17:27:16] *** Joins: lumo_e (~enrico@151.29.48.90)
[17:33:15] <PMunch> If you couldn't tell I'm looking at how TaintedString failed, and what other alternatives we could use, spurred on by the Log4Shell exploit
[17:33:25] <PMunch> After all it's basically just SQL-injection all over again
[17:33:29] <PMunch> Just 10x worse :P
[17:34:49] <PMunch> @dom96, I think that's the fastest bug discovery -> merged to devel time I've ever had :P
[17:35:45] <FromDiscord> <dom96> 😄
[17:35:54] <FromDiscord> <dom96> Glad to hear it 🙂
[17:39:07] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:43:52] *** Quits: lumo_e (~enrico@151.29.48.90) (Quit: Quit)
[18:02:30] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:12:10] <FromDiscord> <retkid> so uh
[18:12:17] <FromDiscord> <retkid> i wanted to compile only a single
[18:12:19] <FromDiscord> <retkid> (edit) "single" => "single..."
[18:12:24] <FromDiscord> <retkid> (edit) "single..." => "single proc"
[18:12:31] <FromDiscord> <retkid> so i deleted all the other code
[18:12:38] <FromDiscord> <retkid> well that was a week ago
[18:12:41] <PMunch> Please try to avoid editing your messages too much..
[18:12:58] <PMunch> Editing creates a new message on platforms that don't support edits
[18:13:14] <FromDiscord> <retkid> that is unfortunate, sorry
[18:13:20] <PMunch> No worries :)
[18:13:38] <FromDiscord> <retkid> but yea i lost 500 lines of code
[18:14:09] <PMunch> You didn't have it in a Git repo?
[18:14:22] <FromDiscord> <retkid> i write my code locally
[18:14:32] <PMunch> You can have local Git repos
[18:14:37] <PMunch> Without a remote
[18:14:50] <PMunch> It's a great way to avoid losing 500 lines of code
[18:14:59] <FromDiscord> <retkid> its fine the code was bad anyway
[18:15:04] <FromDiscord> <retkid> but im not rewriting i
[18:15:06] <FromDiscord> <retkid> (edit) "i" => "it"
[18:15:22] <FromDiscord> <retkid> so i guess I'll just suck a fat chode
[18:16:22] <PMunch> Again, git is your friend :)
[18:16:59] <PMunch> It also means you can roll back stuff, create branches, bisect, and just generally enjoy all the features git provides
[18:17:18] <PMunch> (And if you get used to it you get really good at using Git, which is always handy)
[18:18:40] <FromDiscord> <retkid> wait a second
[18:18:44] <FromDiscord> <retkid> i have a backup
[18:19:22] <FromDiscord> <retkid> I might setup a master git just in my dev folder
[18:19:47] <FromDiscord> <retkid> so i only have to do it once
[18:25:22] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[18:35:39] <FromDiscord> <planetis> which syntax looks better? `for i in traverse(x, {&quot;emp_data&quot;: JArray, &quot;employee&quot;: JObject, /&quot;name&quot;: JString}):` or `for i in traverse(x, (JArray, &quot;emp_data&quot;)  (JObject, &quot;employee&quot;) / (JString, &quot;name&quot;)):` ?
[18:36:18] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:38:21] <FromDiscord> <planetis> which syntax looks better? `for i in traverse(x, (JArray, "emp_data")  (JObject, "employee") / (JString, "name")):` or `for i in traverse(x, {"emp_data": JArray, "employee": JObject, /"name": JString}):`
[18:51:37] <FromDiscord> <Solitude> yes
[18:56:35] <FromDiscord> <IsaacPaul> use triple back ticks please lol
[18:58:39] <FromDiscord> <IsaacPaul> The first one. In the second the quote looks like it's escaped and could cause confusion.. Honest it is all a bit confusing because you're applying math operations to data and strings, so It all doesn't make much sense.
[19:14:37] <FromDiscord> <planetis> you have a point, supposedly ["emp\_data", "employee", "name"] is a path to a json node the / between means direct child and \ it can be any.
[19:15:05] <FromDiscord> <planetis> to be sure, you mean the one with {} is better?
[19:15:56] <FromDiscord> <planetis> I am also trying to encode that "emp\_data" field is of kind JArray and stuff
[19:19:25] <FromDiscord> <hmmm> yo nimlets how can I redirect an echo to a file
[19:20:07] <FromDiscord> <planetis> echo is for debug use the write procs
[19:21:01] <FromDiscord> <hmmm> 😦
[19:21:44] <FromDiscord> <hmmm> and if I wanted to redirect an echo to a var?
[19:22:40] <FromDiscord> <planetis> what? you pbl have in mind `cin >> a` ?
[19:42:48] <FromDiscord> <Fish-Face> I have a type alias for an array type and want to re-initialise the variable. Is there a simple way to do this? existingVariable = MyArrayType() does not work as it would if it were an object type
[19:55:36] <FromDiscord> <planetis> maybe `a = default()` works
[19:59:44] <FromDiscord> <IsaacPaul> In reply to @hmmm "yo nimlets how can": echo goes to `stdout` I believe you can redirect it to a file: https://stackoverflow.com/questions/29154056/redirect-stdout-to-a-file
[20:00:04] <FromDiscord> <IsaacPaul> There maybe a nim / easier way tho
[20:01:37] <FromDiscord> <hmmm> oh I was looking for something like that do we have a freopen() in nim?
[20:03:28] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3IoM
[20:06:03] <FromDiscord> <IsaacPaul> It always helps to just have the nim source code open lol
[20:06:27] *** Joins: rockcavera (~rc@192.12.114.194)
[20:06:27] *** Quits: rockcavera (~rc@192.12.114.194) (Changing host)
[20:06:27] *** Joins: rockcavera (~rc@user/rockcavera)
[20:07:59] <FromDiscord> <planetis> do you just meant to do `./myprogram > output.txt` ?
[20:10:33] <FromDiscord> <hmmm> nay I have a blackbox library that spits in echo or stdout and I wanted to capture the spit 🤔
[20:23:54] <FromDiscord> <eyecon> What is the most idiomatic way to convert from a string o a built-in `set` of `char`s?
[20:24:32] <FromDiscord> <eyecon> I.e. `"abcdabc".convert() == {'a','b','c','d'}`
[20:24:52] <FromDiscord> <eyecon> (edit) "o" => "into"
[20:28:22] <FromDiscord> <Hamid_Bluri> In reply to @eyecon "I.e. `"abcdabc".convert() == {'a','b','c','d'}`": https://nim-lang.org/docs/setutils.html#toSet.t%2Cuntyped
[20:28:58] <FromDiscord> <eyecon> Ah, setutils, good to know, thanks a lot @Hamid_Bluri
[20:29:28] <FromDiscord> <Hamid_Bluri> actually thanks to pmunch 😄
[20:32:45] <FromDiscord> <Hamid_Bluri> since when we can write `13u8` instead of `13'u8` ?
[20:35:16] <FromDiscord> <Hamid_Bluri> where is github page of https://nim-lang.org/docs/manual.html
[20:35:18] <FromDiscord> <Hamid_Bluri> ?
[20:35:29] <FromDiscord> <Hamid_Bluri> (edit) "page" => "repo"
[20:46:41] <FromDiscord> <konsumlamm> `13u8` worked since before `13'u8` iirc
[20:47:02] <FromDiscord> <konsumlamm> however `13'u8` is more consistent with user defined literals
[20:47:39] <FromDiscord> <konsumlamm> In reply to @hamidb80 "where is github repo": there's literally a source link at the top
[21:10:39] *** Joins: fputs3 (~fputs@67.59.83.166)
[21:12:09] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 252 seconds)
[21:12:09] *** fputs3 is now known as fputs
[21:17:41] <FromDiscord> <retkid> so what if instead of generating JS manually, it creates a map of the nim compiled code to its c functions that see which c functions are called by JS and then approximates it to the JS
[21:17:48] <FromDiscord> <retkid> hopefully that makes sense
[21:18:02] <FromDiscord> <retkid> go to JS via their common link
[21:18:45] <FromDiscord> <retkid> IE nim rand goes to C rand and so does JS rand so does JS rand, so then you use the function which goes to the same function you do
[21:19:05] <FromDiscord> <retkid> ((idk if nim goes to C rand im just thinking of an example))
[22:00:10] *** Joins: xet7 (~xet7@user/xet7)
[22:35:43] <FromDiscord> <Michal58> In reply to @konsumlamm "however `13'u8` is more": What is the reason for the apostrophe anyways?
[22:51:17] *** Joins: Guest58 (~Guest58@151.47.3.193)
[22:51:32] <FromDiscord> <konsumlamm> makes it clear that it's calling a routine
[22:51:37] <FromDiscord> <konsumlamm> also looks better imo
[22:56:02] *** Quits: Guest58 (~Guest58@151.47.3.193) (Client Quit)
[22:57:03] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[23:14:05] <FromDiscord> <IsaacPaul> It's calling a routine?
[23:14:34] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[23:20:22] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3Iqc
[23:21:06] <FromDiscord> <IsaacPaul> Or maybe the routine resolves into a cast?
[23:26:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:49:39] <FromDiscord> <konsumlamm> well, u8 is special cased, it's calling a routine for user defined suffixes
