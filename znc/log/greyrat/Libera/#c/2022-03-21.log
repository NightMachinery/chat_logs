[00:00:35] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[00:00:48] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:04:43] *** Joins: Oddity (~Oddity@user/oddity)
[00:05:46] <nitrix> The gamers have their gaming chairs; we need programming chairs.
[00:07:03] *** Quits: Ox000 (~jy@74.215.11.197) (Ping timeout: 250 seconds)
[00:08:28] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[00:09:01] <greeter> nitrix: agreed
[00:11:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-855f-50e7-28b4-6a40.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:12:20] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:12:34] *** Quits: trumae (~trumae@170.231.88.62) (Ping timeout: 260 seconds)
[00:16:20] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 252 seconds)
[00:17:07] <fizzie> A programming chair is one that every now and then just collapses and dumps you on the floor. (It's a joke about the reliability of software.)
[00:17:23] <greeter> wouldn't that be a programmed chair? :-P
[00:17:31] <fossforus> don't we already have programming socks though
[00:17:38] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[00:18:20] *** Joins: Ox000 (~jy@74.215.11.197)
[00:19:33] *** Joins: Enitin (~Enitin@5.180.62.230)
[00:22:19] <Bou> From the code I see here, some of you need programming straitjackets
[00:22:33] <greeter> oh i probably fall into that group
[00:24:33] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[00:24:44] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[00:25:07] *** Joins: korg815 (~korg815@user/korg815)
[00:26:56] <owensjrw> if I malloc inside a function how do I free it if its the return value? https://pastebin.com/GpwwcRbS
[00:27:02] *** Quits: Msandoy (~Msandoy@telia-590832-38.connect.netcom.no) (Read error: Connection reset by peer)
[00:27:19] <pragma-> disemvowel
[00:27:27] * pragma- slaps knee.
[00:28:05] *** Quits: magla (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[00:28:53] <pragma-> you're off by one, btw.
[00:29:13] <pragma-> if there's no vowels you won't have enough space for the terminator
[00:29:40] <fossforus> owensjrw: free answer after calling the function, presumably
[00:29:41] <pragma-> you should check that malloc didn't return NULL
[00:29:44] <fossforus> ^
[00:30:13] <fossforus> you return the same pointer to char, you can just free that
[00:30:17] <pragma-> probably best to just let the user pass in the new buffer, or do the operation in-place on the existing buffer.
[00:30:31] <fossforus> ^
[00:30:39] *** Quits: nexus (~nexus@84-236-55-39.pool.digikabel.hu) (Ping timeout: 252 seconds)
[00:30:42] <fossforus> like how str*cpy works
[00:31:16] <owensjrw> so in main I would do a free(disemvowel)?
[00:31:31] <fossforus> be careful though, you need to pass a char ** if you actually want to modify the char * you pass as an argument
[00:31:49] <fossforus> otherwise you're assigning a separate variable
[00:31:54] <pragma-> ,c5
[00:31:54] <candide> C Aphorism 5: When given a choice of solutions, the questioner will always choose the wrong one.
[00:32:15] <pragma-> hm, "questioner"
[00:32:16] *** Joins: nexus (~nexus@178-164-188-66.pool.digikabel.hu)
[00:32:33] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[00:32:35] <pragma-> ,change c5 s/questioner/querent/
[00:32:36] <candide> Changed: c5 is /say C Aphorism 5: When given a choice of solutions, the querent will always choose the wrong one.
[00:34:20] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:35:00] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 240 seconds)
[00:35:24] <owensjrw> pragma great catch I passed all the 405 test but that was not one of the situations.
[00:35:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[00:35:45] *** Joins: CaCode (~CaCode@user/cacode)
[00:35:46] <owensjrw> malloc should include +1
[00:35:54] <fossforus> definitely not
[00:36:11] *** Joins: serbest (~serbest@user/serbest)
[00:36:19] <fossforus> malloc can be used for any arbitrary data, not just strings
[00:36:37] <fossforus> honestly I argue that "string" syntax shouldn't append null
[00:36:55] <owensjrw> fossforus, would answer not only be within the scope of the function? is it still accessible after the call is returned?
[00:37:17] *** Quits: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:37:32] <owensjrw> I was meaining in my malloc line I should have malloc(sizeof *thing * size + 1)
[00:38:19] *** Joins: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr)
[00:38:40] *** Quits: cassepipe_ (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Client Quit)
[00:39:27] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[00:39:57] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:40:13] <fossforus> sizeof *answer is just a char, which is just a byte
[00:40:15] <fossforus> so no
[00:40:16] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:40:25] <fossforus> you can just do malloc(strlgth)
[00:41:01] <fossforus> oh
[00:41:08] <fossforus> no you ned strlgth + 1
[00:41:12] <fossforus> for null byte
[00:41:35] <owensjrw> yes that is what pragma was pointing out to me.
[00:41:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[00:42:22] <fossforus> but I also agree, move malloc out of the function
[00:42:58] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Quit: Quitting IRC :()
[00:43:00] *** Quits: noonien (~noonien@user/noonien) (Ping timeout: 240 seconds)
[00:43:03] *** Joins: plastico (~plastico@neomutt/plastico)
[00:43:25] <fossforus> because in terms of designing an api, you can never pass an existing string into the function
[00:43:36] <fossforus> you always have to create a new one as this is designed
[00:44:44] *** Quits: vitimiti (~Celtor@2a01:4c8:1400:1025:8cee:6169:6f09:bbe) (Remote host closed the connection)
[00:44:55] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[00:45:23] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:46:03] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[00:46:51] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[00:48:50] <owensjrw> I should have done like a FAM instead and got the strlen then char answer[strlen+1] so the memory stayed on the stack and was cleaned after the call to the function.
[00:49:55] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[00:50:19] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:53:52] <fossforus> that's bad because it's a vla
[00:53:59] <fossforus> unless you want to use vla's
[00:54:38] <owensjrw> It gave me a nasty error solution.c:27:10: warning: address of stack memory associated with local variable 'answer' returned [-Wreturn-stack-address] return answer; 1 warning generated.
[00:55:08] <owensjrw> what is vla?
[00:55:31] <owensjrw> got it variable length array
[00:55:44] *** Joins: AlanRoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[00:56:40] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[00:57:50] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[00:57:54] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[00:58:04] <owensjrw> so now i'm back stuck at how to I clean the memory of answer?
[00:59:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[01:00:16] *** Joins: jkotra (~jkotra@122.169.141.242)
[01:01:01] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 240 seconds)
[01:01:10] *** Joins: Enitin (~Enitin@5.180.62.230)
[01:03:27] *** Quits: jkotra (~jkotra@122.169.141.242) (Client Quit)
[01:04:16] *** Joins: jkotra (~jkotra@122.169.141.242)
[01:07:20] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[01:08:53] *** Quits: adip_ (~adip@dev188.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:10:27] *** Guest9419 is now known as jmpeax
[01:13:15] *** Quits: alch (~alch@to-18-70-122.service.infuturo.it) (Ping timeout: 268 seconds)
[01:14:27] *** Joins: Briann (~Brianboru@177.12.221.56)
[01:14:40] *** Joins: alch (~alch@151.82.36.48)
[01:15:21] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[01:16:12] *** Joins: jkotra (~jkotra@122.169.141.242)
[01:16:29] *** Joins: adip (~adip@dev188.neoplus.adsl.tpnet.pl)
[01:16:36] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:18:37] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:19:25] *** Quits: Enitin (~Enitin@5.180.62.230) (Ping timeout: 268 seconds)
[01:21:57] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[01:23:07] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[01:26:42] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[01:26:57] *** Joins: Enitin (~Enitin@5.180.62.232)
[01:32:33] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[01:33:57] *** Quits: lureevar (~lureevar@200.139.84.46.dynamic.dialup.gvt.net.br) (Quit: lureevar)
[01:35:22] *** Quits: X-Scale (~ARM@92.250.103.201) (Ping timeout: 272 seconds)
[01:35:23] *** X-Scale` is now known as X-Scale
[01:36:30] <fossforus> owensjrw: http://0x0.st/oN9U.txt
[01:37:14] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[01:37:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:37:20] <fossforus> I wrote your program how I would have written it (minus a few things, would have used an arena allocator mainly)
[01:38:17] <fizzie> Missing a `const` from `char *restrict src`.
[01:39:27] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:39:46] <fossforus> dang true
[01:41:48] *** justAstache is now known as justOkay
[01:42:11] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[01:43:31] *** Joins: jkotra (~jkotra@122.169.141.242)
[01:44:06] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[01:45:26] *** Joins: Everything (~Everythin@37.115.210.35)
[01:45:34] <owensjrw> I would have written a void function as well. The question arose because at the beginning of the exercise it stated //solution must allocate all required memory and return a free-able buffer to the caller. However we only build the function.
[01:46:18] <fossforus> school moment
[01:46:19] <owensjrw> So I was courious how to free memory allocated in a function that is allocated?
[01:46:41] <owensjrw> no codewars playing, I'm half century young no more school for me.
[01:47:17] <fossforus> personally I would have saved the function return for length of dest incase I wanted to resize the buffer after the fact
[01:47:53] <fossforus> but yeah returning the pointer in this case isn't sensible, but I guess you have to model it how the assignment requires
[01:48:25] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:48:38] <fossforus> in either case you could either modify src in the function, or return dest, but neither of those require returning the pointer
[01:51:25] *** Joins: louis_deboot (~louis_deb@132.235.96.6)
[01:54:14] *** Quits: adip (~adip@dev188.neoplus.adsl.tpnet.pl) (Ping timeout: 252 seconds)
[01:54:32] *** Parts: louis_deboot (~louis_deb@132.235.96.6) (Leaving...)
[01:54:52] *** Quits: princess (~princess@c-73-255-162-200.hsd1.fl.comcast.net) (Quit: Konversation terminated!)
[01:56:32] *** Quits: mahmutov (~mahmutov@37.155.47.251) (Ping timeout: 240 seconds)
[01:58:37] <fossforus> owensjrw: if they haven't taught you pointer arithmetic yet (probably have not due to the nature of this assignment) you probably shouldn't do a lot of what I did
[02:01:52] *** Joins: Guest21 (~Guest21@2a02:c7f:180d:e500:1c29:8c0d:fc2b:a364)
[02:04:27] <owensjrw> fossforus everything I am learning is on my own. I am half a century young, I am not in school :-).
[02:06:24] <owensjrw> My career was in HR only had to know a little about MS office applications. I enjoy learning the coding. I think (only self assessment) that I have an basic understanding of pointers and pointer arithmetic.
[02:07:15] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:08:24] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[02:09:31] *** Joins: seninha (~chatzilla@user/seninha)
[02:14:00] <owensjrw> got another perspective someone suggested char *fun(arg...){returned allocated memory} int main(void){char *str = fun(); free(str);} because it would have the same address.
[02:14:00] <Akuli> is it possible to cast to "pointer to array of 5 chars" without typedef? as in typedef char foo[5]; (foo*)bar
[02:14:04] *** Quits: argonautx (~argonautx@i5E86725A.versanet.de) (Quit: Leaving)
[02:19:15] <owensjrw> typedef struct foo { char x[5]; } foo; is shown to be a better way per https://itecnote.com/tecnote/r-typedef-fixed-length-array/ however it states that your expression is possible.
[02:19:57] *** Joins: trumae (~trumae@152.255.98.83)
[02:24:34] *** gxt_ is now known as gxt
[02:24:38] *** Quits: trumae (~trumae@152.255.98.83) (Ping timeout: 260 seconds)
[02:24:54] <owensjrw> Reread that, and that does not answer your question
[02:24:55] <Xgc> Akuli: (char(*)[5])p  should do it.
[02:25:06] * owensjrw staring at stars
[02:25:24] <Akuli> ah, i should have thought of (*), thanks :)
[02:25:46] <Akuli> i don't really have a use for this, if i had i would be likely doing something in a very complicated way, but i was curious :)
[02:25:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:27:48] *** Joins: hiroshi_ (~freedom@151.35.209.214)
[02:30:33] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[02:32:51] *** Joins: matacao (~eduardo@2804:14c:6322:9953::1001)
[02:33:01] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[02:33:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:33:42] *** Joins: pizdets_ (~pizdets@183.182.114.133)
[02:33:59] *** Quits: pizdets (~pizdets@183.182.114.159) (Ping timeout: 265 seconds)
[02:34:02] *** Quits: Enitin (~Enitin@5.180.62.232) (Ping timeout: 268 seconds)
[02:34:44] *** Quits: Akuli (~Akuli@87-94-109-68.bb.dnainternet.fi) (Quit: Akuli)
[02:34:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[02:35:03] *** Joins: Enitin (~Enitin@82.180.145.227)
[02:39:40] *** Quits: madder_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Quit: Leaving)
[02:42:03] <owensjrw> As always you all are great... Have a good evening where ever you are in the world. See you all soon.
[02:42:38] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[02:44:57] *** Quits: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[02:45:38] *** Joins: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net)
[02:46:41] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[02:46:59] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 268 seconds)
[02:47:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[02:51:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:53:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:17] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[02:55:47] *** Joins: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net)
[02:55:51] *** Quits: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[02:57:45] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[02:58:05] *** Joins: jkotra (~jkotra@122.169.141.242)
[02:58:22] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-54-113.pa.qld.optusnet.com.au)
[02:59:23] *** Quits: kurahaupo (~kurahaupo@pa49-197-88-190.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[02:59:52] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[03:03:10] *** Quits: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu) (Remote host closed the connection)
[03:03:45] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[03:05:01] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[03:06:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:06:16] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[03:06:17] *** Joins: baltazar (~baltazar@84-236-97-135.pool.digikabel.hu)
[03:10:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:10:17] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[03:11:06] *** Joins: jkotra (~jkotra@122.169.141.242)
[03:15:12] *** Joins: korg815 (~korg815@user/korg815)
[03:19:14] *** Joins: g2anj (~v@58.228.230.4)
[03:20:03] *** Quits: nexus (~nexus@178-164-188-66.pool.digikabel.hu) (Ping timeout: 252 seconds)
[03:21:05] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:21:31] *** Quits: z4r4 (~z4r4@89.36.78.214) (Ping timeout: 268 seconds)
[03:21:36] *** Joins: alex11 (~alex11@user/alex11)
[03:21:37] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 250 seconds)
[03:21:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:21:56] *** Joins: nexus (~nexus@92-249-179-80.pool.digikabel.hu)
[03:22:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:24:00] *** Quits: Guest21 (~Guest21@2a02:c7f:180d:e500:1c29:8c0d:fc2b:a364) (Quit: Client closed)
[03:29:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:30:16] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:33:45] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:34:06] *** Quits: SoniEx2 (~quassel@autistic.space) (Ping timeout: 245 seconds)
[03:35:25] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:37:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[03:38:01] *** krok is now known as k
[03:38:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[03:39:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:39:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:39:04] *** Joins: wroathe (~wroathe@user/wroathe)
[03:39:06] *** Joins: z4r4 (~z4r4@89.36.78.198)
[03:39:47] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[03:40:17] *** Joins: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net)
[03:42:05] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Remote host closed the connection)
[03:42:34] *** Joins: nicbk (~nicbk@user/nicbk)
[03:43:23] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[03:43:24] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[03:45:32] *** Quits: hiroshi_ (~freedom@151.35.209.214) (Quit: hiroshi_)
[03:47:28] *** Quits: malloy (~jimery@120.235.172.170) (Ping timeout: 265 seconds)
[03:47:54] *** Joins: gruekun[m] (~gruekunbo@2001:470:69fc:105::1:e059)
[03:48:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:48:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:48:47] *** Joins: wroathe (~wroathe@user/wroathe)
[03:49:26] *** eldritch_ is now known as eldritch
[03:49:35] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[03:51:34] *** Quits: matacao (~eduardo@2804:14c:6322:9953::1001) (Quit: Konversation terminated!)
[03:53:43] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[03:54:20] <arkanoid> noob question. Given a .h file, how can I know if it is for C or C++?
[03:54:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Changing host)
[03:54:56] *** Joins: eldritch (~eldritch@user/eldritch)
[03:56:22] <pnbeast> That's kind of open-ended.  What's your real question?  Is this a puzzle?  Read the content to check whether it's valid C or valid C++.  Put it back in the codebase from which it came and check what that claims to be?  Read your compiler(s) error messages?
[03:57:55] <fizzie> Sometimes it's for both (with a bunch of #ifdef __cplusplus directives in it).
[03:59:54] *** Joins: ymwm (~yingmanwu@27.153.164.29)
[04:02:59] *** Joins: Satin (uid193953@user/Seten)
[04:03:02] *** Joins: hanzo (uid532183@user/hanzo)
[04:03:09] *** Joins: stov (~stov@2607:fb90:1c31:696:0:54:52e9:5d01)
[04:04:39] *** Joins: Soni (~quassel@autistic.space)
[04:05:41] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:06:22] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:cc79:eb32:e59b:99c7)
[04:06:32] *** Quits: AlanRoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 268 seconds)
[04:07:09] *** Quits: z4r4 (~z4r4@89.36.78.198) (Ping timeout: 256 seconds)
[04:15:20] <Satin> Hello - I was wondering about tackling a challenge a friend posed " make a cli tool to find the shortest path between two places using open street map api data" in C. As a relatively new programmer - any reccomendations on resources to understand basic networking stuff related to APIs and what not/how to use C with that?
[04:16:59] *** Joins: ferdna (~ferdna@user/ferdna)
[04:20:04] *** Quits: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net) (Quit: Quitting)
[04:20:46] <pnbeast> Satin, the Stevens UNIX Network Programming book has a good reputation.  C's hardly the correct language for a task like this, but it will be an educational project, I'm sure.
[04:22:51] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-c9ee-8cb6-887-fbc4.fixed6.kpn.net)
[04:22:56] *** Joins: riposte (~finalripo@2403-5802-74-2--2000.ip6.aussiebb.net)
[04:25:02] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[04:28:07] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-c9ee-8cb6-887-fbc4.fixed6.kpn.net) (Ping timeout: 268 seconds)
[04:28:20] *** Joins: X-Scale` (~ARM@46.50.5.55)
[04:28:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:30:12] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[04:30:13] *** X-Scale` is now known as X-Scale
[04:30:28] *** Joins: Wulf (~Wulf@user/wulf)
[04:31:05] *** Joins: fe23 (~fe23@2409:8a34:466:6010:2132:7d1b:127f:1790)
[04:33:30] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[04:34:21] *** Satin is now known as nexia
[04:34:30] *** Joins: malloy (~jimery@116.30.221.173)
[04:38:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:39:01] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:cc79:eb32:e59b:99c7) (Ping timeout: 240 seconds)
[04:39:37] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[04:40:40] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[04:44:05] *** nexia is now known as Satin
[04:45:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[04:47:57] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:51:35] <Satin> thank you i will look into that.
[04:51:57] *** Joins: Rynn (~rynn@216.30.158.198)
[04:53:26] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[04:53:30] <caze> Satin: Do you know what an API is?
[04:53:50] *** Joins: jkotra (~jkotra@122.169.141.242)
[04:54:04] *** Joins: trafficjam (~trafficja@203.176.111.34)
[04:54:13] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[04:54:20] <Satin> caze: Isn't it like a... way, a framework, or like a manual specificiation kind of, for programmers to access online services?
[04:54:37] <caze> Satin: No.
[04:54:52] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:c849:269f:6f46:be61)
[04:55:44] <Satin> Okay I cheated and googled. I see it's an interface between two programs?
[04:56:10] <caze> Or between a program and a library.
[04:56:52] <Satin> hmmm i see
[04:57:06] <pragma-> It's basically a list of functions that are available to be called.
[04:57:37] <Satin> Oh right. Yeah I messed around with the GTK 4.0 API a lot... when trying to create a simple GUI application in C....
[04:57:49] <Satin> (eugh btw. they're updating that too quickly!)
[04:57:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:57:57] <Satin> and breaking things*
[04:57:59] <caze> Satin: What functions would you call? in the OSM API?
[04:58:34] <Satin> I have no idea. I have not looked into that yet.
[04:59:07] <Satin> I'm seeing there's stuff like GET https://wiki.openstreetmap.org/wiki/API_v0.6#API_calls here but I've never done anything to do with networking before
[04:59:27] <caze> Satin: Does that look like C to you?
[04:59:35] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:c849:269f:6f46:be61) (Ping timeout: 252 seconds)
[04:59:41] <Satin> Not in the slightest.
[04:59:53] <caze> Satin: So that's your first obstacle.
[05:00:29] <gruekun[m]> You're gonna get moderately acquainted with libcurl
[05:01:09] <Satin> So. These are HTTP requests? (I've heard of the term being thrown around before, i def don't know what they are properly yet)
[05:01:16] <Satin> that you make to the openAPI?
[05:01:21] <Satin> OSM API*
[05:02:00] <Satin> Ooh. So libcurl is a library you can #include to do that, okay.
[05:02:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 240 seconds)
[05:02:29] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[05:04:26] <gruekun[m]> Yes. Then either you parse the objects yourself, or use an established library like jansson, or cjson or something of that sort to parse and manipulate the data (though their examples are using their xml object format, you can request json. Or just use xml. Whatever works for you really)
[05:04:32] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) ()
[05:05:24] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (Ping timeout: 240 seconds)
[05:05:25] <caze> Satin: Is it starting to look like this is going to involve learning a considerable amount of stuff that isn't C?
[05:05:56] <Satin> Kind of. I will have to learn what HTTP stuff is for sure. Going to start YouTube searching that stuff yeah.
[05:06:16] <Satin> and text resource searching*
[05:06:39] <caze> I would just find a different problem.
[05:06:53] <Satin> Why so?
[05:07:06] <caze> Are you sure your friend wasn't joking? Or being sarcastic?
[05:07:31] <caze> Because this has little to do with C.
[05:07:36] <Satin> I don't think they were being sarcastic or joking, though they are not that well acquainted with C and use Go as their primary language for sure
[05:07:52] <Satin> I think the goal wasn't about learning C per se as much as it was a challenge to implement something that does x.
[05:07:53] <caze> Why are you learning C, btw?
[05:08:18] <Satin> preference (I feel like it's more interesting, and more educational) + my school uses it for projects
[05:08:46] *** Quits: rgrinberg (~textual@fixed-187-191-8-46.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:09:33] <Satin> I just wasn't sure about what the first step would be since I'm unfamiliar with networking concepts and how that works with C, but now it's starting to make sense - thank you for the responses.
[05:13:06] <caze> Satin: How far did you get on K&R exercises?
[05:13:20] *** Quits: alch (~alch@151.82.36.48) (Ping timeout: 252 seconds)
[05:13:27] <Satin> ahh, I didn't really try them
[05:14:10] <Satin> I guess for me a question is (I haven't looked at K&R in a while though, so sorry if it's solved by just glancing at it) how much of those excercises involve algorithims and such?
[05:14:40] *** Quits: oriba (~oriba@dynamic-077-183-072-090.77.183.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:14:45] <Satin> I've realized I'm more interested in improving my programming skills/algorithim skills, not just problems that improve my understanding of C and its syntax if that makes sense.
[05:15:04] *** Joins: alch (~alch@151.82.44.127)
[05:15:24] <caze> Satin: ,kr1-17
[05:15:24] <candide> Satin: Chapter 1: A Tutorial Introduction; Exercise 1-17. Write a program to print all input lines that are longer than 80 characters.
[05:15:35] <caze> Satin: Try that one.
[05:15:47] <Satin> alright
[05:19:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:21:11] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[05:21:19] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[05:21:38] *** Joins: jkotra (~jkotra@122.169.141.242)
[05:24:36] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[05:24:50] *** Quits: jkotra (~jkotra@122.169.141.242) (Client Quit)
[05:25:29] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[05:26:10] *** Joins: jkotra (~jkotra@122.169.141.242)
[05:27:46] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:27:51] <caze> Satin: Try to come up with the best algorithm you can.
[05:28:36] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[05:29:34] *** Joins: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d)
[05:30:39] *** Joins: zer0x_ (~zer0x@1.55.210.57)
[05:32:12] <Satin> caze: how long can the input string be though?
[05:32:29] <Satin> I assume it's more than 80 characters for sure
[05:32:35] <Satin> so I'll say 100 characters.
[05:35:20] *** Quits: CodePoint (~CodePoint@2607:fb90:25d7:94f4:f8a5:ce83:a3cc:e16d) (Ping timeout: 252 seconds)
[05:36:11] *** Quits: nexus (~nexus@92-249-179-80.pool.digikabel.hu) (Ping timeout: 250 seconds)
[05:37:17] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[05:37:59] *** Joins: nexus (~nexus@188-143-101-118.pool.digikabel.hu)
[05:41:51] <bittersweetsymph> What kind of things do you program in C
[05:44:01] *** Joins: z4r4 (~z4r4@89.36.78.166)
[05:44:48] <no-n> computers
[05:46:05] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[05:49:48] <Satin> caz`
[05:49:51] <Satin> caze: https://ideone.com/hqRXAG
[05:50:15] *** Quits: phaisedArray (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[05:52:13] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:52:16] *** Joins: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76)
[05:52:57] *** Joins: phaisedArray (~phaise@gateway/tor-sasl/phaise)
[05:54:22] <caze> Satin: Infinite.
[05:54:34] <Satin> ...
[05:54:40] <caze> Satin: I think you can come up with a better algorithm.
[05:54:49] *** Quits: ymwm (~yingmanwu@27.153.164.29) (Ping timeout: 256 seconds)
[05:55:29] <caze> Satin: Do you want a hint to get started?
[05:55:43] <Satin> I suppose that would be nice.
[05:57:29] <caze> Satin: This program echoes input back to output. What is the longest input string it can echo? https://ideone.com/W7p177
[05:58:41] <caze> Satin: Sorry, just made an edit. Reload the URL if you have already opened it.
[05:59:14] <Satin> hmm
[05:59:48] <Satin> so that can input an infinite strength hmmm
[05:59:53] <Satin> string*
[06:00:53] <caze> Satin: Think about why you limited yours to 100.
[06:01:11] <Satin> because string arrays have to have an array size
[06:01:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:01:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:01:25] *** Joins: wroathe (~wroathe@user/wroathe)
[06:01:26] <Satin> https://i.imgur.com/HJk01e3.png
[06:01:28] <caze> Why are you using an array?
[06:01:33] <Satin> mine complained
[06:01:37] <Satin> meh, because i was going the string route
[06:01:45] <Satin> i suppose i shalt try characters now
[06:05:02] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:05:09] <caze> Satin: Okay.
[06:05:52] *** Joins: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de)
[06:06:27] *** Joins: vysn (~vysn@user/vysn)
[06:07:39] *** Joins: gargus (~user@27-32-195-30.static.tpgi.com.au)
[06:07:57] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:08:13] *** Quits: Inline (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:08:34] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:11:06] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 252 seconds)
[06:12:13] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[06:14:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[06:16:55] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 256 seconds)
[06:20:50] *** Quits: viv0 (~viv0@user/viv0) (Quit: Ping timeout (120 seconds))
[06:21:19] *** Joins: viv0 (~viv0@user/viv0)
[06:21:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:26:47] <caze> Satin: Are you aware of how streams work?
[06:27:21] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 256 seconds)
[06:28:10] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[06:28:53] <Satin> not entirely i guess
[06:28:57] *** Joins: trafficjam (~trafficja@203.176.111.34)
[06:29:10] <Satin> caze: am i allowed to ask the user what the length of their input will be? :^)
[06:29:41] <caze> Satin: No, in fact, you're not allowed to print anything that did not appear on input.
[06:29:55] <Satin> hm
[06:30:21] <caze> Satin: Here is how to understand the problem that you are being asked to solve: Take my echo program. Do the same thing, except filter out lines that are too short.
[06:31:21] *** Quits: malloy (~jimery@116.30.221.173) (Quit: WeeChat 3.0)
[06:31:26] <caze> Satin: Does that make sense?
[06:31:45] *** Joins: Inline (~Inline@p200300cd4709f600befffe6df48235ec.dip0.t-ipconnect.de)
[06:31:50] <Satin> it does but
[06:32:07] <Satin> i'm not exactly sure because to me there needs to be a buffer of some sort to even store the lines in the first place
[06:32:28] <Satin> to determine if the line should be printed or not hmmm
[06:32:38] <Satin> oh wait a second
[06:32:45] <Satin> hmmmm
[06:32:53] <Satin> i guess i misunderstood getchar oopsy
[06:33:02] <caze> Satin: You have two streams: stdio and stdout. My echo program reads one character from stdin and places it on stdout.
[06:33:03] <Satin> brb*
[06:33:06] *** Quits: banc (~banc@217.138.195.27) (Ping timeout: 252 seconds)
[06:33:22] *** Quits: Inline__ (~Inline@p200300cd470817006c1421c75266f737.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:33:26] *** Joins: malloy (~jimery@116.30.221.173)
[06:33:48] *** Joins: pucara (~i@host112.190-139-217.telecom.net.ar)
[06:35:23] <caze> Satin: You have two streams: stdio and stdout. My echo program reads one character from stdin and places that character on stdout, in a loop.
[06:35:32] <caze> Satin: Is this clearer? https://ideone.com/jaLrcc
[06:36:01] *** Quits: ymwm_ (~yingmanwu@240e:37a:40e4:9e00:71aa:8953:b0de:ee76) (Quit: Leaving)
[06:36:59] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:a5ba:2fa3:99b1:4dae) (Ping timeout: 256 seconds)
[06:38:03] <Satin> yeah
[06:41:11] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[06:41:26] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[06:41:37] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[06:43:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 252 seconds)
[06:44:45] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[06:46:54] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 260 seconds)
[06:49:47] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 256 seconds)
[06:51:02] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[06:53:13] *** Joins: banc (~banc@217.138.195.27)
[06:58:36] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:04:16] *** Joins: frost (~frost@user/frost)
[07:04:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8c9f:2901:a9f3:b788) (Ping timeout: 250 seconds)
[07:05:05] *** Joins: zwr (~zwr@2804:d45:b966:fb00:4a06:6d65:d4f7:d219)
[07:05:26] *** Joins: SorryBeauty (~SorryBeau@103.76.184.42)
[07:06:01] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[07:13:40] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[07:15:22] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[07:15:37] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:16:39] *** Joins: jsmolic (~quassel@gentoo/developer/jsmolic)
[07:19:58] *** Joins: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl)
[07:23:27] *** Quits: mzxtuelkl__ (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 256 seconds)
[07:25:34] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:25:43] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[07:26:20] <caze> Satin: How's your algorithm?
[07:27:49] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:06] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[07:32:24] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[07:32:36] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:32:44] *** Quits: pucara (~i@host112.190-139-217.telecom.net.ar) (Quit: Lost terminal)
[07:33:34] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 260 seconds)
[07:35:31] <Satin> Was afk for a bit to get dinner before stores closed.
[07:35:47] <Satin> But the main issue I'm running into is adding that filter I guess.
[07:42:01] *** Quits: nexus (~nexus@188-143-101-118.pool.digikabel.hu) (Ping timeout: 245 seconds)
[07:43:55] *** Joins: nexus (~nexus@80-95-86-84.pool.digikabel.hu)
[07:45:34] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:e88a:3649:6388:357d)
[07:49:30] *** Joins: fluter (~fluter@user/fluter)
[07:50:36] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[07:52:18] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Ping timeout: 252 seconds)
[07:55:18] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[07:59:03] *** Joins: ironman (~ironman@2405:201:1010:b026:a362:2a35:c984:ea47)
[08:00:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:01:25] *** Quits: SorryBeauty (~SorryBeau@103.76.184.42) (Ping timeout: 256 seconds)
[08:03:07] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 256 seconds)
[08:27:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:27:25] <Satin> caze: https://ideone.com/PSBHse
[08:28:37] *** Quits: z4r4 (~z4r4@89.36.78.166) (Ping timeout: 256 seconds)
[08:31:35] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:32:59] *** Quits: Giovanni (~Giovanni@45.128.199.65) (Ping timeout: 250 seconds)
[08:37:23] *** Joins: zlg (~zlg@user/zlg)
[08:40:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:42:18] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:42:18] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:42:18] *** Joins: wroathe (~wroathe@user/wroathe)
[08:42:46] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:49:24] *** Joins: z4r4 (~z4r4@static-198-54-132-118.cust.tzulo.com)
[08:50:36] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[08:52:02] *** Joins: tlp[m] (~tlphaloge@2001:470:69fc:105::1:e10c)
[08:58:29] *** Joins: unlink_ (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[08:58:37] *** Quits: unlink_ (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:58:57] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[09:01:14] *** Joins: noteness (~noteness@user/noteness)
[09:04:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:05:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:05:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:05:51] *** Joins: wroathe (~wroathe@user/wroathe)
[09:11:27] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:e88a:3649:6388:357d) (Ping timeout: 256 seconds)
[09:11:27] *** Quits: alch (~alch@151.82.44.127) (Read error: Connection reset by peer)
[09:15:23] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[09:15:26] *** Joins: alch (~alch@151.82.60.230)
[09:16:39] *** Joins: kts (~kts@103.73.237.62)
[09:29:06] *** Joins: adip (~adip@aeja124.neoplus.adsl.tpnet.pl)
[09:34:25] *** Joins: lleo (~leo@89-200-4-50.mobile.kpn.net)
[09:36:15] *** Quits: phaisedArray (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[09:37:02] *** Joins: phaisedArray (~phaise@gateway/tor-sasl/phaise)
[09:39:07] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[09:43:11] *** Quits: zer0x_ (~zer0x@1.55.210.57) (Ping timeout: 250 seconds)
[09:46:19] *** Quits: nexus (~nexus@80-95-86-84.pool.digikabel.hu) (Ping timeout: 268 seconds)
[09:47:42] *** Quits: lleo (~leo@89-200-4-50.mobile.kpn.net) (Quit: butterflies in 1024 bits mobius trumpets)
[09:47:49] *** Joins: nexus (~nexus@92-249-179-24.pool.digikabel.hu)
[09:53:55] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.205)
[09:54:07] *** Joins: relight (~relight@user/relight)
[09:55:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:57:02] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[09:57:56] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:00:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Quit: Quit)
[10:01:50] *** Joins: christinebabe (~christine@223.233.64.78)
[10:06:11] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[10:09:58] *** Joins: ekathva (~ekathva@2001:999:50:7590:3293:e550:f3ea:111)
[10:12:28] *** Quits: CaCode (~CaCode@user/cacode) (Read error: Connection reset by peer)
[10:13:19] <caze> Satin: I thought you were going to go character by character?
[10:14:45] *** Joins: kts (~kts@103.73.237.62)
[10:15:29] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[10:16:14] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[10:17:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:18:44] <dave0> how did they manage to standardize getline with such a bad interface :-(
[10:19:18] <caze> Satin: https://ideone.com/UFAqo1
[10:19:33] <dave0> it should have been: char *line = getline(stdin);
[10:19:33] <caze> Satin: You're not freeing enough btw.
[10:20:59] <Satin> caze: character by character seemed too tedious
[10:21:10] <Satin> your solution is interesting for sure
[10:21:21] <Satin> dave0: agreed
[10:21:55] <dave0> "it is more important for the interface to be simple than the implementation"
[10:25:25] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[10:28:52] <fossforus> getline is weird, especially since it returns a ssize_t even though string lengths are typically stored size_t
[10:30:35] <fossforus> also the fact it allocates memory if the second parameter is zero
[10:31:00] <fossforus> though honestly after working with opengl even something like getline feels refreshing lol
[10:31:08] <dave0> it's a different interface to the other string functions
[10:31:26] <dave0> string functions return a pointer to the string
[10:31:31] <dave0> getline doesn't
[10:31:49] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[10:32:11] <dave0> "consistency is as important as correctness"
[10:32:41] <no-n> is getline POSIX?
[10:32:57] <dave0> yeah
[10:33:01] <fossforus> yes, POSIX.1
[10:33:44] <dave0> the closest relative is probably fgets which returns a pointer to a string
[10:35:08] <fossforus> the strto* apis are also really weird tbh
[10:35:41] <fossforus> strtonum from openbsd is much nicer imo, though I don't use it very much because I want portability most of the time
[10:35:44] <fossforus> I guess it's in libbsd
[10:36:05] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:37:03] <dave0> strtonum -- reliably convert string value to an integer
[10:37:05] <dave0> nice
[10:39:01] <caze> Satin: Do you understand it?
[10:40:06] <caze> Satin: Do you understand my algorithm?
[10:43:52] <Satin> caze: yeah
[10:44:06] <caze> Satin: How is the buffer array used?
[10:44:47] <caze>  <Satin> caze: character by character seemed too tedious
[10:44:52] <Satin> to collect each character as long as it's less than the character stuff
[10:44:52] <caze> Programming in C is tedious.
[10:44:57] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[10:45:19] <Satin> caze: i mean part of the issue is, i took the "infinite length" constraint literally
[10:45:44] <caze> Satin: I showed you how to deal with infinite length.
[10:45:50] <Satin> yeah
[10:46:06] <Satin> i guess your program deals with infinite length in a way i didn't really envision was a viable approach
[10:46:12] <Satin> for this context
[10:46:22] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 272 seconds)
[10:46:48] <caze> Satin: character at a time is a very powerful approach.
[10:46:50] <Satin> i thought of the buffer[column] = c; part, in a similiar vein plenty of times, but my main issue was the length of that buffer potentially being infinite in my head
[10:46:52] <Satin> so
[10:47:32] <Satin> meanwhile you just did the approach of using the 80 characters as a buffer from the start i guess
[10:48:33] <dave0> it was misleading, but maybe on purpose to think differetly
[10:48:51] <dave0> make you*
[10:49:11] <Satin> yeah >:C
[10:49:25] <caze> Satin: Because you still weren't thinking in terms of character at a time.
[10:49:52] * Satin ended up using getline() anyways :^)
[10:49:55] <dave0> stdio exists to make character-at-a-time workable
[10:50:05] <Satin> dave0: interesting
[10:50:10] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[10:50:29] <caze> Satin: You were thinking of doing the superficial reading of the line character at a time, but you were still thinking of the *processing* in terms of line at a time.
[10:50:54] <Satin> i spent like an hour thinking of doing it with character only approach
[10:51:12] <Satin> the main issue/hurdle was consistently having a way to store it to check it
[10:51:20] <Satin> the only way for me was throug some sort of buffer
[10:51:29] <Satin> execpt for the fact i couldn't have some dynamic buffer
[10:51:45] <Satin> since i can't just do char str[]; in C sooooooo
[10:51:51] <caze> Yeah, you've been damaged by other languages.
[10:52:10] <Satin> you got around that by doing char str[<constraint here>][
[10:52:13] <Satin> ;
[10:52:19] <Satin> caze: I actually don't know any other languages lol
[10:52:27] <caze> Satin: Where did you learn getline?
[10:52:31] <Satin> well i did have to mess with C++ once but yeah, i don't really learn any of that
[10:52:44] <Satin> caze: i had to google search of course for the various functions that did things
[10:53:03] <caze> Satin: I get around it by not storing what I don't need to.
[10:53:17] * Satin often has to look up scanf's syntax again too
[10:53:24] <Satin> sscanf*
[10:53:26] <fossforus> would sscanf(buf, "%s\n" buf2thesequel); be a useful alternative to getline here
[10:53:29] <sham1> There's an easy solution for that
[10:53:31] <sham1> Don't
[10:53:42] <caze> Yeah, your first try used scanf.
[10:53:49] <caze> fossforus: No.
[10:53:50] <sham1> fossforus: "\n" in the scanf family matches any whitespace
[10:53:55] <sham1> Also, don't
[10:54:38] <caze> fossforus: getline allocates space for you.
[10:54:49] <dave0> Satin: i refuse to learn printf's formatting characters because there's too many to remember and i always cast to int
[10:55:07] <caze> wtf
[10:55:27] <caze> dave0: What's an example of something you'd cast to int?
[10:55:32] <Satin> dave0: lol
[10:55:36] <sham1> dave0: no!
[10:55:39] <dave0> sizeof
[10:55:44] <caze> (defautl arg promotions)
[10:55:56] <sham1> dave0: "%zu"
[10:55:57] <dave0> ,cc printf("%d ", (int)sizeof(char));
[10:55:59] <candide> dave0: 1
[10:56:01] <fossforus> sham1: thanks for saving me hours of headaches for whenever I use *scanf in the future
[10:56:11] <fossforus> speaking of inconsistent apis, format strings in this case
[10:56:16] <dave0> sham1: that's crazytalk and i refuse to memorize ir
[10:56:17] <dave0> it
[10:56:44] <caze> Satin: What does line 23 do?
[10:56:47] *** Quits: nexus (~nexus@92-249-179-24.pool.digikabel.hu) (Quit: leaving)
[10:57:32] <caze> fossforus: What about them?
[10:58:43] <Satin> caze: I actually don't know what line 23 does because that <= looks like a conditional to me
[10:59:04] <caze> Satin: It is.
[10:59:27] <Satin> but i thought that went in if statements...
[10:59:38] <Satin> or such...
[11:00:07] <caze> Satin: It's an expression.
[11:00:10] <Satin> but presumably if that's indeed the case, then column is being summed as long as column is less than LEN
[11:00:12] <rustytaco> Heh my little arduino has reached 6 more countries tonight with a long piece of wire and help from the sun :P
[11:00:25] <rustytaco> s/more/new/
[11:01:07] <caze> Satin: It's being incremented until it reaches LEN + 1.
[11:01:37] *** Quits: christinebabe (~christine@223.233.64.78) (Quit: Client closed)
[11:01:52] <Satin>  that makes sense
[11:02:00] <caze> Satin: Why?
[11:02:18] <rustytaco> now i need to work on a configuration parser :( :(
[11:03:06] <rustytaco> so i can make my amplifier work -- do i want to relearn the forgotten yacc and lex this week or leave them in 1990s and use json? :P
[11:03:40] <rustytaco> i have ~2kb to store a 'minified' form of whatever i use. Idealy human readable, in case config file gets lost it can be recovered off the device someday
[11:03:55] <Satin> caze: much in the same way a normal incremented for loop works
[11:04:35] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:04:35] <Satin> you're just essentially saying to keep moving up in characters as long as it's not a newline yet
[11:04:49] <caze> Satin: Let's say the line has 10 characters. Why do I stop incrementing when the column reaches 4 characters?
[11:05:07] *** Quits: metaversum (~metaverse@94.13.111.159) (Quit: Connection error?!)
[11:05:57] <Satin> line 17?
[11:06:17] <caze> line 17 doesn't increment.
[11:06:21] *** Joins: damian_ (~damian@94.13.111.159)
[11:06:26] <Satin> oh i mean
[11:06:50] <Satin> because of lin 2
[11:06:53] <Satin> line 3*
[11:07:00] <Satin> you defined LEN to be 3 so
[11:07:17] *** Quits: beastie (~lcu@user/thebeastie) (Ping timeout: 240 seconds)
[11:07:27] <caze> Satin: Why not just do column++?
[11:10:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:10:50] <Satin> mmm don't know for that one tbh
[11:11:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[11:11:21] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:11:39] <Satin> i mean it wouldn't act like that for loop incrementor within a bound
[11:11:43] <Satin> with colummn++
[11:11:44] <Satin> so
[11:11:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl)
[11:12:13] <caze> Why have the bound in the first place? Why not just let the counter reach 10 or wherever the '\n' is?
[11:12:36] *** Joins: zer0x_ (~zer0x@1.55.210.57)
[11:13:01] <Satin> because the buffer you declared  on line 6
[11:13:06] <Satin> is LEN + 1
[11:13:50] <caze> Oh, you still don't know how that part works.
[11:14:46] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:15:31] *** Joins: beastie (~lcu@user/thebeastie)
[11:17:24] *** Quits: eddybilley (~freddieti@217.119.232.174) (Client Quit)
[11:17:26] <caze> Satin: https://ideone.com/40chfe
[11:18:53] <caze> Satin: I changed it to column++, and it still works. I added a printf that prints the value of column when it sees '\n'.
[11:20:37] <Satin> i don't see any drawbacks then
[11:20:49] <Satin> to having column++
[11:21:23] <caze> Satin: Remember what I said about dealing with infinitely long lines?
[11:21:42] <Satin> that you want to deal with it character by character/ Yea
[11:22:45] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[11:23:07] <caze> There are other contingencies to worry about with infinitely long lines.
[11:23:18] <caze> Like the value of counter.
[11:24:02] *** Quits: z4r4 (~z4r4@static-198-54-132-118.cust.tzulo.com) (Quit: Leaving.)
[11:24:11] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:24:27] <Satin> but wouldn't the line be handled by the other if conditions by then
[11:24:48] <caze> I'm talking about the value of counter.
[11:25:02] <fossforus> wouldn't it be non-infinite if you caught integer overflow
[11:25:06] <fossforus> bigint time
[11:25:12] <fossforus> infinint
[11:25:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[11:26:07] <caze> It has type size_t, which as an unsigned integer type, would wrap around to zero.
[11:26:30] <dave0> too much detail for a beginner
[11:26:31] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:26:47] <caze> dave0: It's okay, you'll catch up eventually.
[11:26:56] <fossforus> bruh
[11:27:12] * dave0 puts caze in an unsigned char
[11:28:29] <fossforus> I'd take a byte of that
[11:28:37] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[11:29:17] <caze> Satin: Do you see the problem?
[11:29:42] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:30:25] *** Joins: eladion (~drew@2602:47:2257:b300:20c4:dc21:2a33:58c1)
[11:33:00] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 240 seconds)
[11:37:54] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[11:39:21] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[11:39:40] *** Quits: eladion (~drew@2602:47:2257:b300:20c4:dc21:2a33:58c1) (Quit: Leaving)
[11:40:25] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[11:41:10] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[11:42:11] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:42:22] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[11:42:25] <Dean> Hello!
[11:46:13] <dave0> i'm not in right now please leave a message
[11:47:05] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[11:49:03] *** Joins: aradesh (~aradesh@user/aradesh)
[11:50:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:52:40] *** Joins: Rounin (~david@84.212.130.215)
[11:57:11] *** Joins: random-nick (~random-ni@87.116.176.196)
[12:01:32] <greeter> greetings :-)
[12:04:17] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-54-113.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:06:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[12:09:17] <greeter> i love it when i trigger a new compiler warning i've never seen before :-D warning: function returns address of local variable
[12:10:57] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.205) (Ping timeout: 250 seconds)
[12:12:39] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[12:12:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[12:13:13] <dave0> greeter: local variables disappear when you return from your function.. you can fix it by adding `static` to the variable whose address you want to return, or you can `malloc` memory and return that address
[12:13:41] <greeter> i actually wondered if static would fix it, so i added that and it compiled warning free. haven't had the chance to test the code yet since i'm not done writing it
[12:13:42] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[12:13:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:13:44] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Quit: Textual IRC Client: www.textualapp.com)
[12:14:58] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[12:14:59] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[12:15:45] <dave0> it's a kinda quick and dirty fix, because it makes your function not-reentrant and probably not thread safe
[12:16:02] <dave0> but it is very simple
[12:16:10] <greeter> not-reentrant? as in i can't call the function again?
[12:16:27] *** Joins: raym (~raym@user/raym)
[12:16:51] <NRK> what are you returning btw?
[12:16:52] <dave0> you can't do a recursive call
[12:17:00] <dave0> eh that's not right
[12:17:23] <greeter> i'm returning a pointer to a character array
[12:17:39] <NRK> if it's constant strings, you can just return an index into a table, if it's dynamic then you can ask the caller for a buffer.
[12:18:04] <NRK> i tend to avoid returning pointers whenever possible. it makes life simpler.
[12:18:07] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.158)
[12:18:42] <greeter> makes sense. i'm mostly writing this as a learning experience, so i'm pretty much dabbling in anything i'm not overly familiar with
[12:20:05] <greeter> ooh when you create files with fwrite they sure do look interesting when you try to open the contents with a text editor
[12:21:05] <NRK> getting a pointer back from a function leads to so many questions, "do i need to free it?", "can i modify it?", "does it alias?", "does someone else (some other thread) have this pointer as well?".. it's a mess.
[12:21:41] <greeter> ah i see. i thought only pointers created my malloc() or similar ever needed to be freed
[12:23:57] <NRK> yes, that's what i meant by "do i need to free it?"
[12:24:10] *** Joins: kurahaupo (~kurahaupo@pa49-182-91-223.pa.qld.optusnet.com.au)
[12:24:14] <greeter> ah i see. i might change my approach later on in that case
[12:24:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:33:00] <greeter> hmm this is probably a dumb question, but when i'm done with fread or fwrite, i should probably fclose() those files shouldn't i?
[12:33:57] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.158) (Ping timeout: 240 seconds)
[12:34:12] *** Quits: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[12:34:44] <dave0> greeter: that's a good idea
[12:35:10] <dave0> check for errors too   if(fclose(file) != 0) perror("close error");
[12:35:31] <greeter> ah thank you. i wasn't sure how to do that. not very familiar with file handling
[12:35:41] <fossforus> I don't see the point of error checking a close unless you have some way to deal with it
[12:35:57] <fossforus> I guess just logging it is useful
[12:36:52] <greeter> well, i'm getting a seg fault and can't figure out why at this point, i should probably check that, and anything else i can think of. would like to be able to solve that one on my own
[12:38:26] <fossforus> gdb backtrace always good place to start
[12:39:48] <greeter> so, i ran it in gdb and now i don't get the segfault :-D
[12:40:08] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.204)
[12:40:56] <dave0> ouch
[12:41:04] <dave0> i predict much hair pulling
[12:41:10] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:41:35] <greeter> hmm, when i declare a file pointer, is it bad practice to immediately assign it the result of an fopen call like this? FILE *savefile = fopen(destination, "w");
[12:42:14] *** Joins: jellie (~luv_panda@user/jellie)
[12:42:52] <dave0> that's fine
[12:43:23] <greeter> alright, i'm going to putter around with this on my own for the next bit then, see if i can't make progress on my own :-) thank you
[12:43:26] <Dean> lol dave0 i only saw your message now.
[12:43:48] <greeter> i don't suppose i could just cheat and instruct players to run the game in a debugger could i? :-P
[12:44:39] <dave0> Dean :-)
[12:47:33] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:47:42] <greeter> hmm i think i may have fixed it, but i'm sure why the fix worked
[12:49:00] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:49:17] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.204) (Ping timeout: 256 seconds)
[12:49:34] <greeter> nope never mind it's back. i think you're right about the hair pulling dave0
[12:50:00] <dave0> bugs that go away when you try to probe them
[12:50:15] <dave0> not fun
[12:51:00] <greeter> looking at the save file though, i'm seeing some of the structure data i passed to it, like for inventory items, but nothing relating to the player, which i also tried to pass. maybe my save files are corrupted, so when i try to fread them it causes issues
[12:51:28] *** Joins: oxfuxxx (~oxfuxxx@45.152.181.204)
[12:51:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[12:59:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:00:51] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:01:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:01:11] *** Quits: oxfuxxx (~oxfuxxx@45.152.181.204) (Ping timeout: 268 seconds)
[13:06:34] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.158)
[13:13:05] *** Quits: alch (~alch@151.82.60.230) (Ping timeout: 256 seconds)
[13:13:12] <greeter> pretty sure the save file is getting corrupted somehow. whenever i try to read the file back in, the object locations all get set to NULL, effectively destroying them
[13:14:11] *** Joins: alch (~alch@151.38.208.172)
[13:15:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:16:03] *** Joins: CCCG2022 (~dell@120.245.30.75)
[13:16:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:16:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:19:00] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[13:24:49] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.158) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:24:49] <greeter> well, i figured it out and i still don't know how or why. but i did eventually figure out that fwrite can write the entire array to file as opposed to just one element in a time via looping :-D
[13:25:54] <greeter> wait scratch that, it still segfaults if i close the application, then reopen it and try to load the file again :-(
[13:26:18] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:26:26] *** Quits: milesrout (ce261f06ff@2604:bf00:561:2000::257) (Changing host)
[13:26:26] *** Joins: milesrout (ce261f06ff@user/milesrout)
[13:26:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:31:11] <greeter> https://bpa.st/YW4A anything glaringly wrong with this? if i'm on the right track at least it's a bit more encouraging lol :-)
[13:32:44] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[13:33:22] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[13:33:50] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 252 seconds)
[13:34:45] <gnoo> you should probably check if loadfile and savefile are not null
[13:35:08] <greeter> alright let me give that a shot
[13:35:21] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 245 seconds)
[13:36:16] <greeter> well, they aren't null at least :-)
[13:38:19] <greeter> ooh i finally figured out how to get gdb to catch the segfault :-D
[13:38:41] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[13:39:36] *** Joins: relight (~relight@user/relight)
[13:42:14] *** Quits: saribro (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:45:47] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[13:48:15] *** Joins: cursey (~cursey@user/cursey)
[13:50:01] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[13:54:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[13:55:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:58:35] *** Joins: kts (~kts@103.73.237.88)
[13:59:42] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:02:14] *** Joins: unknow (~i.am@user/marlboro)
[14:02:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 245 seconds)
[14:02:53] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:04:18] *** Joins: zacts (~zacts@user/zacts)
[14:06:38] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[14:07:14] *** Joins: crankslider (~slidercra@user/slidercrank)
[14:09:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:10:41] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[14:11:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:11:47] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[14:13:11] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[14:15:24] *** Joins: seninha (~seninha@user/seninha)
[14:15:47] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[14:17:47] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[14:22:46] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[14:25:12] *** pr-asadi_ is now known as pr-asadi
[14:27:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:29:43] <lnslbrty> Is there any programmatic approach to detecting an S3/S4 wakeup with C and Linux?
[14:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:00] *** Joins: csrf (~csrf@user/csrf)
[14:32:04] *** Joins: bladerunner1 (~bladerunn@103.167.123.127)
[14:32:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:33:25] <bladerunner1> cassepipe: could u send me the yt link again
[14:33:57] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[14:34:31] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:35:01] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[14:35:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:40:00] *** Joins: kts (~kts@103.73.237.88)
[14:40:13] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[14:43:55] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[14:49:08] <sham1> lnslbrty: you probably have to listen to the Linux' ACPI events somehow
[14:49:12] <sham1> Maybe udev?
[14:54:50] *** Quits: Ox000 (~jy@74.215.11.197) (Remote host closed the connection)
[14:56:11] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:56:14] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[14:56:16] <lnslbrty> sham1: will try the acpi approach but documentation is rather sparse
[15:01:35] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[15:03:00] *** Joins: mzxtuelkl__ (~mzxtuelkl@user/mzxtuelkl)
[15:03:25] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:03:49] *** Quits: yggdrasil (~yggdrasil@75-161-7-249.albq.qwest.net) (Ping timeout: 240 seconds)
[15:06:14] *** Joins: sokan (~sokan@85.73.229.195)
[15:06:34] *** Joins: terminalpusher (~terminalp@2a01:586:13f7:1:a0b8:8742:651a:339e)
[15:06:47] *** Quits: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 252 seconds)
[15:10:43] *** Joins: yggdrasil (~yggdrasil@67-0-92-81.albq.qwest.net)
[15:21:10] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 260 seconds)
[15:21:35] *** Joins: angelacrust (~angelacru@223.233.64.78)
[15:22:40] <angelacrust> Hi, is there a better way to handle the logic inside the while loop?  https://bpa.st/RNUQ
[15:28:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:31:36] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[15:34:51] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:ad18:9766:d605:a0fd)
[15:35:20] *** Quits: angelacrust (~angelacru@223.233.64.78) (Quit: Client closed)
[15:35:21] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:37:43] <dave0> hm
[15:38:26] *** Quits: stov (~stov@2607:fb90:1c31:696:0:54:52e9:5d01) (Ping timeout: 260 seconds)
[15:42:32] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[15:42:50] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[15:44:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[15:51:31] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[15:52:48] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[15:53:05] *** Joins: csrf (~csrf@user/csrf)
[15:56:45] *** Quits: Torr (~Torr@user/torr) ()
[15:57:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:58:39] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[16:00:12] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[16:03:38] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[16:07:07] *** Quits: zwr (~zwr@2804:d45:b966:fb00:4a06:6d65:d4f7:d219) (Ping timeout: 250 seconds)
[16:07:11] *** Quits: terminalpusher (~terminalp@2a01:586:13f7:1:a0b8:8742:651a:339e) (Remote host closed the connection)
[16:07:50] *** Quits: gargus (~user@27-32-195-30.static.tpgi.com.au) (Quit: Leaving)
[16:09:00] *** Quits: zer0x_ (~zer0x@1.55.210.57) (Ping timeout: 240 seconds)
[16:13:48] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:13:51] <SamuelMarks> hi
[16:14:56] <SamuelMarks> What's the right way to do error-handling in C? - I've been returning `struct OptionalFoo{bool set; struct Foo foo;}` but now I'm thinking `int getFoo(struct Foo *foo)` is the right approach
[16:16:47] <omegatron> depends on how elaborated your error handling should be
[16:17:43] <SamuelMarks> sometimes instead of `bool set` I have a `int status` in my `OptionalFoo`
[16:18:29] <vdamewood> That works too.
[16:18:40] *** Joins: kts (~kts@103.73.237.88)
[16:19:07] <vdamewood> You can also have struct { int status; union { ... } }
[16:19:11] <SamuelMarks> But is the `int getFoo(struct Foo *foo)` preferred? - I'm thinking about rewriting all my APIs to match
[16:19:28] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[16:19:31] <vdamewood> Well, there isn't really a 'preference'
[16:20:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:20:18] *** Joins: strajder (~strajder@user/strajder)
[16:20:21] <vdamewood> It all depends on your goals and needs.
[16:21:12] <omegatron> some people prefer to get simple  bool / int  return values, others want a struct with an error code, message, recovery info, context info and actual return value(s) ..
[16:21:50] <omegatron> just keep it as simple as required while accounting for all of your design goals
[16:21:57] <vdamewood> Some also just use a foo* return type and return NULL on error.
[16:22:13] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[16:25:06] <SamuelMarks> Ok but there's no standard way, it's just any of those
[16:25:07] <SamuelMarks> ?
[16:25:24] <vdamewood> There might be others.
[16:25:31] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:26:43] *** Quits: kts (~kts@103.73.237.88) (Quit: Konversation terminated!)
[16:30:06] *** Joins: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no)
[16:30:06] *** Joins: pulse (~pulse@user/pulse)
[16:32:40] *** Quits: bladerunner1 (~bladerunn@103.167.123.127) (Quit: WeeChat 3.4.1)
[16:39:43] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[16:42:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:43:59] *** eau_ is now known as eau
[16:45:47] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[16:46:49] <seninha> Do implementations of cc must support options after the argument (like `cc prog.c -c -I/usr/local/include` rather than `cc -I/usr/local/include -c prog.c`)?
[16:47:11] <seninha> Or do they are suposed to support only certain options, like -l?
[16:48:00] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[16:49:09] *** Joins: trumae (~trumae@2804:18:1018:72ad:1:0:fdbe:71b8)
[16:50:57] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Read error: Connection reset by peer)
[16:51:53] *** Joins: Satin (uid193953@user/Seten)
[16:52:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2034:c204:70d1:cb4e)
[16:52:11] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:53:36] *** Joins: cassepipe (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr)
[16:54:38] <cassepipe> Do you have any idea of why I can't compile a code  with the open syscall and O_TMPFILE flag ?
[16:54:41] <cassepipe> https://dpaste.com/EFEDTX3BT
[16:54:45] *** Joins: zer0x_ (~zer0x@1.55.210.57)
[16:55:12] *** Joins: waylore (waylore@waylore.hell.ws)
[16:56:56] <cassepipe> https://dpaste.com/GB9B4UBKW
[16:57:39] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:59:10] <seninha> Answered: >Options can be interspersed with operands. (https://pubs.opengroup.org/onlinepubs/9699919799/utilities/c99.html)
[17:00:18] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:00:34] <dave0> seninha: note that the order of -I and -L matters
[17:00:49] <dave0> even -l order can be important
[17:01:56] <seninha> dave0: I know, I was thinking about the order of the options relative to the source files.
[17:02:01] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 256 seconds)
[17:03:05] *** Quits: ironman (~ironman@2405:201:1010:b026:a362:2a35:c984:ea47) (Quit: Leaving)
[17:03:21] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[17:04:45] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[17:05:51] <cassepipe> I have seen I must use a mode and only another file but that won't compitle either : https://dpaste.com/FH3FKP5LM
[17:05:54] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:08:02] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Client Quit)
[17:08:13] <cassepipe> ,cc #include <fcntl.h>
[17:08:13] <cassepipe> #include <unistd.h>
[17:08:13] <cassepipe> #include <stdio.h>
[17:08:13] <cassepipe> #include <sys/stat.h>
[17:08:13] <cassepipe> #include <sys/types.h>
[17:08:14] *** ChanServ sets mode: +o candide
[17:08:14] *** candide sets mode: +b *!~cassepipe@*.wanadoo.fr
[17:08:15] <candide> cassepipe: Success (no output).
[17:08:21] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[17:08:51] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[17:09:15] *** candide sets mode: -b *!~cassepipe@*.wanadoo.fr
[17:10:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:10:50] *** Quits: alch (~alch@151.38.208.172) (Read error: Connection reset by peer)
[17:11:40] <pragma-> ope
[17:14:02] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[17:14:41] *** Joins: foul_owl (~kerry@23.82.193.87)
[17:15:02] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[17:15:23] *** Joins: jellie (~luv_panda@user/jellie)
[17:15:35] *** Joins: alch (~alch@151.38.212.43)
[17:17:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:18:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:18:42] <cassepipe> ,cc int main(void) { int fd; char string[100]; fd = open("./", O_TMPFILE | O_RDWR, 644); write(fd, "Hello!\n", 7); read(fd, string, 7); printf("%s", string); }
[17:18:44] <candide> cassepipe: warning: implicit declaration of function 'open'; did you mean 'popen'? [-Wimplicit-function-declaration]  error: 'O_TMPFILE' undeclared
[17:20:19] <cassepipe> How the hello do I inline #include directives
[17:20:48] *** Quits: trumae (~trumae@2804:18:1018:72ad:1:0:fdbe:71b8) (Ping timeout: 268 seconds)
[17:21:27] *** Joins: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e)
[17:21:39] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:22:38] <strajder> you are opening a directory, and writing to it?
[17:23:53] <cassepipe> strajder: I you pass the O_TMPFILE flag you get an inode that is not listed in the directory so it does not makes sense to give it a name, instead you pass the name of the dir you want it to be created in
[17:24:08] <dave0> ,cc #include <fcntl.h> printf("%x ", O_TMPFILE);
[17:24:09] <candide> dave0: error: 'O_TMPFILE' undeclared
[17:24:17] <cassepipe> man 2 open, /TMP_FILE
[17:24:23] <dave0> ,cc #define _GNU_SOURCE 1 \n #include <fcntl.h> printf("%x ", O_TMPFILE);
[17:24:25] <candide> dave0: 410000
[17:24:39] <strajder> not POSIX
[17:24:54] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:25:10] <strajder> man 3p open doesn't list O_TMPFILE
[17:25:45] <cassepipe> ,cc #include <fcntl.h> #include <unistd.h> #include <stdio.h> #include <sys/stat.h> #include <sys/types.h> int main(void) { int fd; char string[100]; fd = open("./", O_TMPFILE | O_RDWR, 644); write(fd, "Hello!\n", 7); read(fd, string, 7); printf("%s", string); }
[17:25:46] <candide> cassepipe: error: 'O_TMPFILE' undeclared
[17:26:05] <strajder> ^
[17:26:20] <cassepipe> strajder: But I am on Linux
[17:26:33] <strajder> and what of non-Linux?
[17:26:46] <strajder> or Linux <3.11
[17:26:53] <dave0> you need the #define _GNU_SOURCE 1
[17:26:58] <dave0> before the #include
[17:27:06] <cassepipe> It may not be POSIX but it should work on Linux
[17:27:24] <cassepipe> dave0: What the hell is this ? (thanks)
[17:27:26] <dave0> portable doesn't have to be a goal
[17:28:05] <zwr> that's one extension I wish existed elsewhere
[17:28:14] <dave0> https://man7.org/linux/man-pages/man7/feature_test_macros.7.html
[17:28:41] <cassepipe> strajder: Ok just realized the difference between man 2 open and man 3 open
[17:28:57] <zwr> it allows you to create files with certain contents or permissions atomically as far as the rest of the system is concerned, because you can do everything you want to the file before it's ever visible
[17:28:57] <cassepipe> I thought man 3 was just the libc and all syscalls were in 2
[17:29:03] <strajder> if you have perl, man 3 open is perl open
[17:29:10] <strajder> man 3p open is POSIX open
[17:29:16] *** Quits: damian_ (~damian@94.13.111.159) (Quit: Connection error?!)
[17:29:20] <dave0> man intro
[17:29:31] <clarity> man man
[17:29:50] *** Joins: linden (~linden@94.13.111.159)
[17:29:59] <cassepipe> But if I understand correctly if I am on Linux, I get linked to the Linux sycall but If I am not I will get linked to the POSIX libc implemention ?
[17:30:10] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:12] <cassepipe> Allright will have a look there
[17:30:46] <clarity> Usually you get linked to libc
[17:30:50] <cassepipe> dave0: They could at least document #define _GNU_SOURCE 1 in the man of open, or put a warning
[17:31:11] <clarity> (But linking has little to do with macros)
[17:32:07] <pragma-> lol, `man 3p open` on my system opens the 3perl manpage for open.
[17:32:35] <strajder> pragma-: interesting
[17:32:50] <dave0> i dunno i switched to netbsd
[17:32:51] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[17:32:54] <pragma-> "Perl Programmers Reference Guide"
[17:33:21] <strajder> "POSIX Programmer's Manual" here
[17:33:38] <strajder> (Artix, derivative of Arch)
[17:33:39] * pragma- gestures vaguely at his system and shrugs.
[17:34:27] <pragma-> I should probably be thinking about moving away from Ubuntu these days.
[17:34:38] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[17:34:41] <pragma-> Canonical is a garbage company, from what I hear about them.
[17:34:55] <pragma-> CEO is a twat, I hear.
[17:35:16] <cassepipe> pragma-: Maybe so, but I am glad they exist
[17:35:20] <pragma-> I installed Ubuntu on this about 15 years ago when Ubuntu was considered a good company.
[17:35:41] <cassepipe> cassepipe: I used Linux Mint... btw
[17:36:43] <pragma-> strajder: yeah, I wasn't expecting to get a Perl manpage from `3p`.
[17:37:07] <pragma-> I must have installed some perl-manpages package at some point.
[17:37:24] <strajder> https://man7.org/linux/man-pages/man3/open.3p.html
[17:37:41] <pragma-> And I guess I must not have the POSIX manpages so 3p expanded to 3perl?
[17:37:56] <strajder> idk
[17:38:02] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 252 seconds)
[17:38:29] <pragma-> Ah, just thinking outloud. Sometimes my fingers just start typing my thoughts.
[17:46:44] *** Joins: HP55555 (~HP51248@49.205.103.133)
[17:47:26] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[17:48:16] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 245 seconds)
[17:48:26] *** Parts: CCCG2022 (~dell@120.245.30.75) ()
[17:48:47] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[17:48:51] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Client Quit)
[17:55:03] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[17:55:10] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 260 seconds)
[17:55:13] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:56:15] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[17:58:38] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[18:00:03] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[18:00:15] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[18:03:02] *** Joins: constxd (~brad@142.134.78.128)
[18:03:46] *** Quits: ekathva (~ekathva@2001:999:50:7590:3293:e550:f3ea:111) (Remote host closed the connection)
[18:08:03] <SamuelMarks> pragma- - That's dissapointing. Maybe there are no good open-source [big] companies
[18:08:41] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:08:56] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:1a76:2017:77ff:dd44) (Quit: Leaving)
[18:10:07] <apotheon> There may not be any good big companies.
[18:13:37] <clarity> there may not be any good companies
[18:14:20] <pragma-> Most individuals are decent until you get 3+ individuals in a group.
[18:17:57] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 256 seconds)
[18:18:02] *** Quits: jkotra (~jkotra@122.169.141.242) (Ping timeout: 260 seconds)
[18:20:40] <constxd> kings!
[18:21:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:22:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:22:51] *** Joins: jfsimon1981 (~jfsimon19@210.65.6.84.rev.sfr.net)
[18:23:43] *** Joins: hiroshi_ (~freedom@151.43.57.208)
[18:23:46] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[18:25:21] *** Quits: jfsimon1981_b (~jfsimon19@38.60.6.84.rev.sfr.net) (Ping timeout: 252 seconds)
[18:26:10] <pragma-> >a long-standing bug that caused the system to freeze when attempting to read from a damaged floppy disk has finally been fixed
[18:26:19] <pragma-> People still use floppy disks?
[18:26:32] *** Joins: jfsimon1981_b (~jfsimon19@6.62.6.84.rev.sfr.net)
[18:26:42] <pragma-> That 1 megabyte of storage.
[18:26:51] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:27:06] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[18:29:01] *** Quits: jfsimon1981 (~jfsimon19@210.65.6.84.rev.sfr.net) (Ping timeout: 250 seconds)
[18:31:38] *** Quits: linden (~linden@94.13.111.159) (Quit: Connection error?!)
[18:32:08] *** Joins: amino_ (~amino@94.13.111.159)
[18:32:25] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[18:38:01] *** Joins: minto (~mintograd@47.201.5.61)
[18:38:26] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[18:38:29] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[18:38:44] *** Quits: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e) (Read error: Connection reset by peer)
[18:38:51] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:c0f1:b3e9:5d8f:87f)
[18:40:57] *** Quits: minto_ (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[18:42:26] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 245 seconds)
[18:42:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[18:45:18] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[18:45:44] *** Quits: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[18:45:51] *** Quits: amino_ (~amino@94.13.111.159) (Read error: Connection reset by peer)
[18:46:28] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:ad18:9766:d605:a0fd) (Read error: Connection reset by peer)
[18:46:28] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Remote host closed the connection)
[18:46:33] *** Joins: amino_ (~amino@94.13.111.159)
[18:46:42] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[18:46:45] *** Quits: hiroshi_ (~freedom@151.43.57.208) (Quit: hiroshi_)
[18:46:49] *** Quits: Stink (~chris@li670-83.members.linode.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:47:11] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: Ping timeout (120 seconds))
[18:47:22] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:8d59:351b:37ac:95be)
[18:47:38] *** Joins: jancoow (~jancoow@user/jancoow)
[18:49:10] *** Joins: Stink (~chris@li670-83.members.linode.com)
[18:49:33] *** Stink is now known as Guest4440
[18:51:27] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[18:54:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8)
[18:54:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f5bb:fecb:2a5a:41b8) (Changing host)
[18:54:57] *** Joins: skapata (~Skapata@user/skapata)
[18:55:04] *** Joins: sidy (~sidy@user/sidy)
[18:57:23] *** Quits: HP55555 (~HP51248@49.205.103.133) (Ping timeout: 256 seconds)
[19:00:12] *** Quits: zer0x_ (~zer0x@1.55.210.57) (Ping timeout: 240 seconds)
[19:00:59] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Quit: leaving)
[19:01:20] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[19:03:21] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[19:03:51] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[19:05:36] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:05:43] *** Joins: HP55555 (~HP51248@49.205.103.133)
[19:06:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:07:35] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[19:08:23] *** candide sets mode: -o candide
[19:08:48] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:09:04] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[19:12:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[19:17:33] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[19:19:37] *** Quits: drew (~drew@user/drew) (Ping timeout: 240 seconds)
[19:21:45] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[19:26:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[19:26:12] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[19:26:46] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:29:09] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 252 seconds)
[19:29:37] *** Joins: drew (~drew@user/drew)
[19:30:49] *** Joins: jellie (~luv_panda@user/jellie)
[19:34:38] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[19:35:12] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:c0f1:b3e9:5d8f:87f) (Ping timeout: 252 seconds)
[19:35:24] *** Joins: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e)
[19:36:00] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[19:36:23] *** Joins: Terlisimo (~Terlisimo@outofband.ozna.net)
[19:43:00] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[19:44:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:44:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:45:22] *** Joins: BGL (twenty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[19:46:29] *** Quits: muffin_storm_ (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Quit: Leaving)
[19:48:20] *** Joins: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net)
[19:48:20] *** Quits: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Changing host)
[19:48:20] *** Joins: muffin_storm (~muffin_st@user/muffin-storm/x-3740471)
[19:48:38] *** Joins: Betal (~Betal@user/betal)
[19:52:27] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:52:50] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:55:25] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 240 seconds)
[19:59:21] *** Joins: papna (~mike@159.203.139.114)
[20:03:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[20:04:53] *** Joins: mudzap (~mudzap@2806:107e:f:64c7:9561:1f80:44ac:8685)
[20:05:03] *** Quits: tetravus1 (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:06:17] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[20:11:13] *** Joins: mahmutov (~mahmutov@5.176.42.41)
[20:12:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[20:19:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca)
[20:19:14] *** Joins: Akiva (~Akiva@user/Akiva)
[20:20:27] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-231.dsl.bell.ca) ()
[20:21:24] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:21:37] *** Quits: HP55555 (~HP51248@49.205.103.133) (Ping timeout: 240 seconds)
[20:22:57] *** Joins: Enitin (~Enitin@82.180.145.230)
[20:23:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[20:25:00] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[20:25:02] *** Joins: vicfred (~vicfred@user/vicfred)
[20:30:30] *** Quits: trumae (~trumae@2804:18:8ba:e036:1:0:9c70:3a6e) (Read error: Connection reset by peer)
[20:31:16] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:3473:e0f9:d8:6df3)
[20:32:26] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 245 seconds)
[20:32:51] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[20:37:36] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[20:37:52] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:39:15] *** Quits: Msandoy (~Msandoy@telia-590850-1.connect.netcom.no) (Remote host closed the connection)
[20:43:03] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Read error: Connection reset by peer)
[20:44:17] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[20:44:29] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[20:44:42] <zwr> I used one a few months ago, including with damaged floppies, just not on linux
[20:45:00] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:45:17] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[20:46:38] *** Quits: fe23 (~fe23@2409:8a34:466:6010:2132:7d1b:127f:1790) (Quit: fe23)
[20:48:40] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:2c28:c414:690c:4aae)
[20:50:04] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[20:53:35] *** Joins: mixfix41 (~homefame@user/mixfix41)
[20:55:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:58:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[20:58:14] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:2c28:c414:690c:4aae) (Ping timeout: 252 seconds)
[20:58:37] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:00:42] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[21:00:49] *** fikran_ is now known as fikran
[21:01:47] *** Joins: Atque (~Atque@user/atque)
[21:02:38] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[21:03:51] *** Quits: Xgc (~Xgc@user/xgc) (Quit: Leaving)
[21:07:27] <Dean> hi, why is my code not working? https://paste.debian.net/1235145/ As I understand it, if i make a void or char pointer, it should not have a specific type until I copy something into its memory. Yet I cannot access the members of teacher via pointer p.
[21:09:42] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[21:11:00] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[21:13:05] *** Quits: alch (~alch@151.38.212.43) (Ping timeout: 252 seconds)
[21:13:06] <Bou> the type of "p" doesn't change just because you copied some data into it
[21:13:33] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[21:13:50] <rustytaco> you can make a void pointer to an address from say malloc then later cast it - like char *p = (char *)voidptr;
[21:14:18] <caze> Or just give it the right type in the first place.
[21:14:32] *** Joins: Atque (~Atque@user/atque)
[21:14:34] <Dean> caze ! :D
[21:14:55] *** Joins: alch (~alch@151.36.182.79)
[21:15:01] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[21:15:19] <Dean> caze is the following not true then? https://paste.debian.net/1235147/
[21:15:33] <Dean> thank you Bou and rustytaco
[21:17:26] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[21:17:35] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[21:18:06] <Bou> these code examples are unrelated to each other (the "p" in that printf can't  be a void* or a char*)
[21:18:23] *** Joins: ckdCreations (~ckdCreati@147.55.133.139)
[21:18:27] <caze> Dean: Where is that from?
[21:19:01] <Dean> caze: it is from the book "Effective C" by Robert C. Seacord.
[21:19:02] <caze> Dean: It's almost true. The pointed-to object gets the new type, but you can't refer to it using the old pointer.
[21:19:33] <caze> Dean: You have to assign p to a new pointer variable that has the correct type.
[21:19:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:20:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[21:20:17] *** Joins: Akiva (~Akiva@user/Akiva)
[21:23:22] *** Joins: Atque (~Atque@user/atque)
[21:24:22] <Dean> Thank you Bou and thank you caze
[21:26:04] *** Joins: tiotags (~tiotags@user/tiotags)
[21:26:08] <Dean> I think with memcpy(p, &t, sizeof(teacher));
[21:26:20] <Dean> it is an attempt to make p a teacher?
[21:26:42] <Dean> but it does not work. so i convert it another way
[21:27:43] <Bou> memcpy doesn't really care about the type of things, it just copies bytes around
[21:28:07] <Bou> p will point to the bytes of a teacher, but its type will always remain void* (and as such you can't  use it as a teacher)
[21:29:09] *** Joins: crankslider (~slidercra@user/slidercrank)
[21:29:29] <fizzie> The quote from the book also doesn't say anything about changing the type of `p`. What it says is: "the /storage referenced by p/ has an /effective type/ of widget following the call to memcpy", emphasis added.
[21:30:21] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:30:47] *** Quits: kurahaupo (~kurahaupo@pa49-182-91-223.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[21:31:07] *** Joins: kurahaupo (~kurahaupo@pa49-182-91-223.pa.qld.optusnet.com.au)
[21:32:53] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 252 seconds)
[21:34:04] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[21:36:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:36:22] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:8d59:351b:37ac:95be) (Ping timeout: 260 seconds)
[21:37:04] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:37:30] *** Joins: Klinda (~superleag@user/klinda)
[21:37:51] *** Quits: magla (~gelignite@d5363125.access.ecotel.net) (Quit: Stay safe!)
[21:40:01] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:43:09] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[21:45:31] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[21:49:31] *** Joins: emerson_ (~emerson@2600:6c50:a7f:7b9:ad7f:d9f4:4dae:892c)
[21:49:39] *** Quits: nmi (~deflected@user/deflected) (Ping timeout: 250 seconds)
[21:51:06] <Dean> ok thank you Bou and fizzie
[21:51:24] <Dean> fizzie: but they seem to use p->property fine in the example in the book. but it seems evident that this won't work?
[21:51:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:51:50] <Dean> Would it be correct to assume that this example is faulty?
[21:53:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:53:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:53:55] <fizzie> Well, faulty or just misleading. I read it as two unrelated examples, and no declaration shown for `p` in the latter, so it could be assumed to be of type `widget *`.
[21:54:35] <fizzie> (After all, it can't be *both* `void *` and `char *` either.)
[21:55:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[21:55:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:56:20] <pragma-> rustytaco: there is no need to cast objects of type void *
[21:58:30] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[21:59:37] <Dean> Ok! Thank you fizzie . I understand. :)
[22:00:17] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:00:37] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 240 seconds)
[22:04:33] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[22:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:05:58] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[22:06:07] *** Joins: bolodgad (~bolodgad@user/bolodgad)
[22:07:57] *** Joins: Atque (~Atque@user/atque)
[22:08:46] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:10:36] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Ping timeout: 240 seconds)
[22:12:39] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net)
[22:17:00] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-8831-396c-b2c-b55f.fixed6.kpn.net) (Ping timeout: 240 seconds)
[22:17:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 245 seconds)
[22:17:06] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[22:18:59] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[22:20:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:20:33] *** Joins: jkotra (~jkotra@122.169.141.242)
[22:20:35] *** Joins: magla (~gelignite@d5363125.access.ecotel.net)
[22:21:10] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Remote host closed the connection)
[22:21:51] *** Quits: Rounin (~david@84.212.130.215) (Remote host closed the connection)
[22:22:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:23:08] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:23:31] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[22:27:38] *** Joins: Tempesta (~Tempesta@user/tempesta)
[22:27:43] *** Joins: Atque (~Atque@user/atque)
[22:29:05] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-060.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[22:31:13] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[22:32:14] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:52] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:32:54] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-231-226.pa.qld.optusnet.com.au)
[22:35:25] *** Joins: strajder (~strajder@user/strajder)
[22:35:55] *** Quits: kurahaupo (~kurahaupo@pa49-182-91-223.pa.qld.optusnet.com.au) (Ping timeout: 268 seconds)
[22:35:56] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:55] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:37:51] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:3473:e0f9:d8:6df3) (Ping timeout: 245 seconds)
[22:38:06] *** Parts: waylore (waylore@waylore.hell.ws) ()
[22:38:39] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:3473:e0f9:d8:6df3)
[22:40:10] <emerson_> Anyone know of any good books on fuzzing? I'd like to learn how to fuzz cryptographic protocols, maybe even kernels like linux and freebsd. :)
[22:41:47] *** Joins: Oddity (~Oddity@user/oddity)
[22:43:03] *** Joins: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a)
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:24] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[22:47:26] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:55:02] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 268 seconds)
[22:56:15] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:57:09] *** Joins: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no)
[22:57:29] *** Quits: emerson_ (~emerson@2600:6c50:a7f:7b9:ad7f:d9f4:4dae:892c) (Ping timeout: 250 seconds)
[22:58:16] *** Quits: relight (~relight@user/relight) (Ping timeout: 245 seconds)
[22:58:34] *** Joins: relight (~relight@user/relight)
[23:00:02] <greeter> i think i finally figured out my segfault. when i use fwrite to save a structure, if the structure contains pointers, then the absolute memory addresses are written. if i then close and reopen the program, and fread the values back in, i'm pointing to memory the program doesn't own now. does that sound right?
[23:00:34] <caze> >use fwrite to save a structure
[23:00:36] *** Quits: Msandoy (~Msandoy@telia-59080e-89.connect.netcom.no) (Client Quit)
[23:00:50] <caze> Probably try not to do that.
[23:01:08] <greeter> got it, so maybe fprintf instead?
[23:01:17] <caze> Do you know what serialization is?
[23:01:50] <greeter> i've heard the term, but honestly i couldn't define it for you, no :-\
[23:03:01] *** Joins: Akuli (~Akuli@213.216.208.2)
[23:04:26] <greeter> after a bit of reading from a quick search, i realize i have lot more reading to do :-) thank you caze
[23:04:26] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:04:45] *** Quits: mudzap (~mudzap@2806:107e:f:64c7:9561:1f80:44ac:8685) (Ping timeout: 252 seconds)
[23:10:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[23:12:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:14:46] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[23:14:56] *** Joins: Atque (~Atque@user/atque)
[23:16:11] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[23:16:30] *** Joins: mudzap (~mudzap@2806:107e:f:64c7:945a:364:ecf7:ff43)
[23:18:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[23:19:21] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-231-226.pa.qld.optusnet.com.au) (Ping timeout: 250 seconds)
[23:20:09] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[23:21:00] *** Joins: LucaTM (~LucaTM@user/lucatm)
[23:25:43] *** Joins: oriba (~oriba@dynamic-089-014-152-127.89.14.pool.telefonica.de)
[23:28:35] *** Quits: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a) (Remote host closed the connection)
[23:28:49] *** Quits: cassepipe (~cassepipe@amontsouris-654-1-97-220.w90-44.abo.wanadoo.fr) (Quit: Leaving)
[23:29:46] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Remote host closed the connection)
[23:30:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:30:50] *** Quits: plastico (~plastico@neomutt/plastico) (Remote host closed the connection)
[23:31:22] *** Joins: plastico (~plastico@neomutt/plastico)
[23:31:45] *** Joins: marderIII (~MarderIII@86.88.74.111)
[23:32:03] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.9)
[23:32:25] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:33:13] *** Joins: satanist (~satanist@bureaucracy.bureaucracy.de)
[23:34:36] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:36:47] *** Joins: Rynn (~rynn@216.30.158.198)
[23:37:10] *** Quits: strajder (~strajder@user/strajder) (Quit: brb)
[23:37:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:37:45] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:38:53] *** Joins: marderII1 (~MarderIII@86.88.74.111)
[23:39:17] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[23:46:51] *** Joins: Atque (~Atque@user/atque)
[23:49:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:49:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:49:49] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:50:31] *** Joins: Intelo (~Intelo@user/Intelo)
[23:50:34] <Intelo> Hi c
[23:52:04] <greeter> greetings
[23:52:09] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[23:52:32] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:53:31] <Intelo> greeter thank you
[23:53:32] <Intelo> Can anyone pick one for the web and one for the OS programming?  clojure,Lisp, Go, Rust, Haskel, APL, Scala
[23:55:45] <apotheon> err, maybe Go and Rust, respectively, but . . . this is a C channel
[23:55:55] <apotheon> (and other "but" things, too)
[23:56:36] <Intelo> apotheon ok. Any language you would want to replace the 2 you said? Any language not in the list
[23:57:03] <apotheon> Ruby for web and C for OS
[23:57:34] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: Textual IRC Client: www.textualapp.com)
[23:57:55] <apotheon> I wonder whether Ada would be good for OS dev.  I don't know.
[23:58:50] *** Joins: nicbk (~nicbk@user/nicbk)
[23:59:32] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.9) (Ping timeout: 240 seconds)
[23:59:54] <Intelo> apotheon or APL?
