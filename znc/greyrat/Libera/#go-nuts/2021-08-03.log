[00:04:42] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[00:06:47] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[00:07:05] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[00:07:20] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[00:10:33] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 258 seconds)
[00:11:10] *** Joins: c10l (~c10l@89.34.167.207)
[00:11:43] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[00:12:45] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[00:12:52] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[00:14:58] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Remote host closed the connection)
[00:15:32] *** Quits: independent__ (~independe@85.255.234.93) (Remote host closed the connection)
[00:15:33] *** Joins: y04nn (~y04nn@91.193.4.154)
[00:15:51] *** Joins: independent__ (~independe@85.255.234.93)
[00:19:04] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[00:19:11] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Client Quit)
[00:22:38] *** Quits: independent__ (~independe@85.255.234.93) (Ping timeout: 272 seconds)
[00:22:49] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[00:25:40] *** Joins: independent56 (~independe@85.255.234.93)
[00:26:16] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 258 seconds)
[00:29:19] *** Quits: independent56 (~independe@85.255.234.93) (Remote host closed the connection)
[00:29:41] *** Joins: independent56 (~independe@85.255.234.93)
[00:29:45] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:30:14] *** Joins: mickey (~user@user/mickey)
[00:34:19] *** Quits: independent56 (~independe@85.255.234.93) (Ping timeout: 258 seconds)
[00:38:05] *** Joins: dfch (~dfch@user/dfch)
[00:38:23] *** Joins: Roey (~Roey@user/Roey)
[00:38:31] <Roey> Ballsac Appreciation Channel
[00:39:26] <Roey> #1 on IRC, I hear.
[00:44:48] <dfch> Roey Go: It’s the best thing since []Bread
[00:45:34] *** Quits: y04nn (~y04nn@91.193.4.154) (Remote host closed the connection)
[00:46:57] <eric_hill> dfch: (≖_≖)
[00:47:24] <kaleido> oh no
[00:47:40] <kaleido> i cant unread that :D
[00:47:44] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 258 seconds)
[00:48:01] <dfch> eric_hill sumimasen, no moe shitposting from me
[00:48:51] *** Quits: enkodr (~Srain@210.203.60.94.rev.vodafone.pt) (Ping timeout: 252 seconds)
[00:51:19] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:53:41] <Roey> dfch: hot damn :)
[00:53:44] *** Quits: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66) (Ping timeout: 272 seconds)
[00:54:07] <b0nn> dfch: hrm, that says the best thing since a bread slice, wouldn't Bread[;] be better :P
[00:54:17] <Roey> oh hey b0nn o/
[00:54:25] <b0nn> morning Roey  :)
[00:55:03] <Roey> b0nn: interesting bumping into you here of all chnanels
[00:55:29] <b0nn> I'm trying to think which other channels we bump into
[00:55:38] <b0nn> ##tea?
[00:57:06] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Quit: Reconnecting)
[00:57:18] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[00:59:22] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[01:01:21] <Roey> b0nn: probably :)
[01:01:22] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[01:01:26] <Roey> b0nn: I mean I know you from ##tea normally :)
[01:01:40] <b0nn> lol, sorry I have the memory of a tea strainer :)
[01:01:40] <Roey> b0nn: but you're not there now
[01:01:43] <Roey> LOL
[01:02:05] <b0nn> I have some ti Kwan Yi steeping, one moment
[01:03:36] <dfch> > kwan yi
[01:05:05] <dfch> i really hope it is not 观音 (or more specifically 铁观音); also offtopic, sorry all.
[01:06:36] <b0nn> It's a cheap iron goddess, it's darker than what I normally see, almost toasted look to it, but I like it for my daily driver
[01:08:04] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:29ac:7035:9d99:95e9)
[01:09:02] *** Joins: citizen_stig_ (~citizen_s@2001:982:9f64:1:d922:f99:2661:ac52)
[01:11:34] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 265 seconds)
[01:12:40] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[01:12:45] <dfch> b0nn do join ##tea channel for further convo :) let's not fill up backlog with tea or anime (yes) discussions here ;)
[01:14:13] <Sam> > Hello gophers,
[01:14:13] <Sam> > We have just released go1.17rc2, a release candidate version of Go 1.17.
[01:14:13] <Sam> > It is cut from release-branch.go1.17 at the revision tagged go1.17rc2.
[01:14:13] <Sam> > Please try your production load tests and unit tests with the new version.
[01:14:13] <Sam> > Your help testing these pre-release versions is invaluable.
[01:14:14] <Sam> > Report any problems using the issue tracker:
[01:14:14] <Sam> > https://golang.org/issue/new
[01:14:33] <b0nn> !nopastes :P
[01:14:58] <b0nn> Did you have a link to the release notes?
[01:16:19] <Sam> https://tip.golang.org/doc/go1.17
[01:17:00] <b0nn> Thanks, I had literally just found my way there
[01:23:01] *** Joins: LiftLeft (~LiftLeft@138.199.10.4)
[01:25:09] *** Joins: pepee (~user@user/pepee)
[01:34:12] *** Quits: Torr_ (~Torr@user/torr) (Ping timeout: 272 seconds)
[01:35:52] *** Joins: schmillin (~schmillin@user/schmillin)
[01:39:04] <b0nn> When you're first starting a job, how do you deal with people supervising you that just want to compete with you
[01:39:43] <b0nn> Like, you'll point things out, they'll spend a week telling you you're wrong because they know better, then they announce to the team that they've been investigating this new way of doing things
[01:41:52] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 272 seconds)
[01:43:28] <CommunistWolf> couple of options. one being to get a new job
[01:43:50] <b0nn> Yeah, that's what I'm thinking too
[01:44:13] <CommunistWolf> that behaviour won't have just appeared by magic when you showed up, it's indicative of a toxic working environment
[01:44:17] <Sam> Tell that persons mangager. If they support you: great. If not: start job hunting.
[01:44:20] <CommunistWolf> do you have anything like a skip-level meeting?
[01:44:36] <b0nn> The manager took their side - I'm just the new guy
[01:44:44] <CommunistWolf> yeah, time to go then
[01:45:07] <CommunistWolf> not like jobs are in short supply for programmer types at the moment
[01:46:10] <Sam> Every now and then I think I should actually get back into that field, then I hear stories like that and remember that every job I've ever had in the industry had something like that and that I've pretty much hated every second of the last 10 yeras of my life.
[01:46:29] *** Parts: Roey (~Roey@user/Roey) (Client exiting)
[01:46:43] <Sam> Sorry you're having to deal with that kind of thing.
[01:47:21] <b0nn> It's a feature of the way they "lead" over here
[01:49:19] <Sam> https://youtu.be/RBDtmAX_vNs?t=126
[01:50:03] <CommunistWolf> yeah, it's definitely better as a hobby
[01:52:43] <b0nn> The problem goes higher (here) I interviewed for a lead position, and the questions were "How do you rein in people, how do you ensure they don't undermine you, how do you enforce your decisions"
[01:52:48] <b0nn> that sort of stuff
[02:00:02] <eric_hill> If you're looking for another job, hit me up.  We're hiring like crazy right now.  AWS-focused development.  Go included.
[02:02:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 240 seconds)
[02:08:17] *** Joins: Torr (~Torr@user/torr)
[02:11:59] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 265 seconds)
[02:12:54] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 272 seconds)
[02:13:19] *** Quits: dza (~dza@user/dza) (Read error: Connection reset by peer)
[02:14:16] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[02:14:48] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[02:15:26] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Ping timeout: 272 seconds)
[02:15:36] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[02:16:03] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[02:17:06] *** Quits: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255) (Quit: WeeChat 3.2)
[02:19:05] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Remote host closed the connection)
[02:25:07] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:30:43] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[02:35:16] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:36:16] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[02:36:31] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[02:36:36] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 276 seconds)
[02:39:40] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[02:39:41] <foobaz> b0nn: the correct answer is "by creating a work environment that motivates people and makes them feel valued"
[02:40:05] *** Joins: thing (~thing@user/thing)
[02:40:57] <foobaz> i've found that in technology companies, people generally enjoy what they do and want to contribute to the team
[02:41:45] <foobaz> so managing them is more about facilitating communication and making sure they have what they need, not about cracking the whip
[02:42:04] <foobaz> theory x vs. theory y
[02:42:17] <Tv_> foobaz: cracking the whip enters when the subject domain is not interesting enough
[02:42:39] <foobaz> i have not encountered that much because i choose to work at interesting companies :)
[02:42:44] <Tv_> like, there's a limit to how many people can get enthusiastic about accounting, taxes, payroll, ...
[02:43:08] <Tv_> yes; in a hip startup, it's all about herding cats, the cats are natural mouse-hunters by themselves
[02:43:47] <foobaz> people will want to do even boring things, if it helps their peer group
[02:44:01] <Tv_> sure, but not when *everything* is boring
[02:44:05] *** Joins: Guest9136 (~Guest91@c-73-67-246-107.hsd1.or.comcast.net)
[02:44:14] <Tv_> what's interesting to me is the transition where previously-boring things are becoming interesting
[02:44:23] <foobaz> but they have to (1) actually like their coworkers and (2) understand their role and how they fit into the bigger picture
[02:44:28] <Tv_> like, these days, warehouse management can mean programming thousands of cooperative decentralized robots
[02:45:04] <foobaz> people willingly play factorio
[02:45:23] <Tv_> https://www.youtube.com/watch?v=ssZ_8cqfBlE
[02:46:25] <CommunistWolf> so *that's* why the injury rate is so much h igher at amazon facilities
[02:46:40] *** Parts: Guest9136 (~Guest91@c-73-67-246-107.hsd1.or.comcast.net) ()
[02:46:40] <Tv_> CommunistWolf: move fast and break shins
[02:46:46] <foobaz> hehe
[02:48:32] *** Joins: nilbytesmatter (~Guest91@user/nilbytesmatter)
[02:48:39] <nilbytesmatter> Any ideas why this doesn't "process" all files (https://pastebin.com/h48rxbfQ)? I have a folder with 1500 or so gzips and it says it processed around 1495. No errors or anything.. I guess it's an issue with control flow I am misunderstanding.
[02:50:34] <foobaz> nilbytesmatter: main() returns before the goroutines finish
[02:50:57] <foobaz> you tell them to quit via sem, but you also need to wait for them to finish quitting
[02:51:03] <nilbytesmatter> foobaz: even though it blocks on sending the n-values to sem channel before ending?
[02:51:20] <nilbytesmatter> lines 98-100
[02:51:25] <foobaz> oh you're right it does, maybe that's not the problem
[02:53:48] *** Joins: c10l (~c10l@89.34.167.207)
[02:56:17] <nilbytesmatter> foobaz: silly question, but maybe it's processed++ inside a defer of a coroutine causing it? Since it's not mutexed?
[02:56:26] <nilbytesmatter> Maybe it's just clobbered by a few other writes
[02:56:27] <Tv_> nilbytesmatter: that just requires that main manages to steal the slots, instead of the worker
[02:56:45] <Tv_> nilbytesmatter: consider lots of workers blocked at sem<-true
[02:57:11] <foobaz> nilbytesmatter: that could absolutely be it, the mutex might fix it
[02:57:20] <nilbytesmatter> Tv_: I tried waiting for ~30 seconds before doing the clean up and it still came out with the wrong number =/
[02:57:22] <Tv_> nilbytesmatter: https://pkg.go.dev/golang.org/x/sync/errgroup would be easy and let you handle errors right
[02:57:41] <nilbytesmatter> I'll try the sync/increment to see if that's it
[02:57:51] <foobaz> btw instead of using the sem channel, you could also use sync.Waitgroup
[02:58:02] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[02:58:12] <foobaz> i think that would fix the blocked workers Tv_ mentions too
[02:58:12] <Tv_> foobaz: not really, the sem here limits concurrency
[02:58:17] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[02:58:19] <nilbytesmatter> The problem with waitgroup is you need to wait for _all_ to finish.
[02:58:20] <Tv_> sem can be a chan struct{} though
[02:58:25] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[02:58:26] <nilbytesmatter> This way you always keep the workers full/busy
[02:58:47] <foobaz> yea you would have to limit concurrency some other way
[02:59:53] <Tv_> and that processed is a race
[03:01:37] <nilbytesmatter> Tv_: Got it, wrapped processed with sync.Mutext and it came out with the correct number
[03:01:43] <nilbytesmatter> Phew
[03:01:56] <Tv_> no need for mutex
[03:01:59] <foobaz> heh so it was acting correctly the whole time, only the printf was broken
[03:02:18] <nilbytesmatter> In the final program the processed doesn't matter so much, wanted to just make sure it war completing all of the files
[03:02:32] <Tv_> nilbytesmatter: something like https://play.golang.org/p/vq4nCjX8zRD
[03:02:52] <Tv_> foobaz: no it wasn't, main was racing the workers to grab semaphore slots instead of waiting for workers
[03:03:29] <Tv_> nilbytesmatter: and if you really needed processed, https://pkg.go.dev/sync/atomic#AddUint64 & https://pkg.go.dev/sync/atomic#LoadUint64
[03:06:22] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[03:06:50] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[03:07:40] <nilbytesmatter> Thanks, taking a look :)
[03:09:55] <nilbytesmatter> That works cleanly too, and used an atomic update
[03:12:14] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[03:12:34] *** Joins: c10l (~c10l@89.34.167.207)
[03:18:29] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:e5ca:cbe1:8a1:c106)
[03:19:53] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[03:22:22] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 256 seconds)
[03:28:56] *** Joins: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7)
[03:29:06] *** Quits: yelnah (~felix@2001:44b8:30c2:d8:6f0:21ff:fe3c:d4d7) (Ping timeout: 240 seconds)
[03:29:53] *** Joins: independent56 (~independe@95.148.245.54)
[03:31:37] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:09] *** Joins: jsrnop (~mark@user/jsrnop)
[03:32:34] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:29ac:7035:9d99:95e9) (Ping timeout: 240 seconds)
[03:33:37] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:34:20] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[03:38:55] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[03:39:02] *** Quits: theoceaniscool (~theoceani@119.12.233.178) (Ping timeout: 272 seconds)
[03:42:12] *** Quits: meinside_ (uid24933@id-24933.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:44:06] *** Quits: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7) (Ping timeout: 272 seconds)
[03:45:01] *** Joins: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7)
[03:47:14] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:47:32] <leonardo> Is there a way to have a single method that is capable of retrieveing jsons from a set of REST endpoint, and decode it for the appropriate structure? in this example http://paste.debian.net/plain/1206395 i wrote a Get method that i had to duplicate in order to let it work with two different structures because of the target struct. Is there a more elegant/correct way in order to avoid the
[03:47:34] <leonardo> duplciation of the method?
[03:49:48] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[03:50:22] <Seirdy> how do i make cgo use my CCLD? I'm on Linux and I've set my $CC to clang instead of gcc and CCLD to lld, and i also have -fuse-ld=lld in my CFLAGS/CXXFLAGS. Clang still calls /usr/bin/ld which is symlinked to ld.bfd.
[03:50:31] *** Joins: ofh (~felix@193-119-121-91.tpgi.com.au)
[03:51:16] *** Quits: yelnah (~felix@2001:44b8:3082:ad:6f0:21ff:fe3c:d4d7) (Ping timeout: 256 seconds)
[03:51:35] <Tv_> leonardo: make it a standalone function and pass the target as interface{}, just like encoding/json does
[03:53:26] <Seirdy> setting '-extld=clang' and '-extld=lld' in my ldflags didn't do anything either
[04:00:09] <f8l12> anyone ever have gorilla/mux (i think this is the culprit) get "backed up" or something? i just had an experience where requests werent going through and then i ctrl+c'd the process and the requests all came through at once
[04:00:32] <b0nn> queued/buffered
[04:03:35] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[04:03:44] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 256 seconds)
[04:04:05] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:04:28] *** Quits: nilbytesmatter (~Guest91@user/nilbytesmatter) (Quit: Client closed)
[04:04:30] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:8da0:6616:8b15:280)
[04:04:40] *** Joins: c10l (~c10l@89.34.167.207)
[04:05:37] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:8da0:6616:8b15:280)
[04:06:50] *** Quits: independent56 (~independe@95.148.245.54) (Ping timeout: 272 seconds)
[04:09:03] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:8da0:6616:8b15:280) (Ping timeout: 252 seconds)
[04:22:05] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[04:22:35] *** Joins: dza (~dza@user/dza)
[04:23:33] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[04:25:18] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[04:26:31] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[04:28:17] *** Quits: Rhys (Rhys@help.lux.melted.me) (Killed (iridium.libera.chat (Nickname regained by services)))
[04:28:28] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[04:35:26] *** Joins: alrs (alrs@tilde.team)
[04:37:53] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:34] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:58] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:e5ca:cbe1:8a1:c106) (Ping timeout: 272 seconds)
[04:51:36] *** Joins: yelnah (~felix@2001:44b8:308c:9a:6f0:21ff:fe3c:d4d7)
[04:52:28] *** Quits: ofh (~felix@193-119-121-91.tpgi.com.au) (Ping timeout: 256 seconds)
[05:02:21] *** Quits: phoenix[m]1 (~phoenixma@2001:470:69fc:105::f9b) (Read error: Connection reset by peer)
[05:02:21] *** Quits: freswa[m] (~freswa@2001:470:69fc:105::c1ec) (Read error: Connection reset by peer)
[05:02:21] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Read error: Connection reset by peer)
[05:02:21] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Remote host closed the connection)
[05:02:22] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Write error: Connection reset by peer)
[05:02:22] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Read error: Connection reset by peer)
[05:02:22] *** Quits: mambang[m] (~mambang@user/mambang) (Read error: Connection reset by peer)
[05:02:22] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Write error: Connection reset by peer)
[05:02:22] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Read error: Connection reset by peer)
[05:02:22] *** Quits: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019) (Read error: Connection reset by peer)
[05:02:22] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Remote host closed the connection)
[05:02:22] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Write error: Connection reset by peer)
[05:02:22] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Read error: Connection reset by peer)
[05:02:22] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[05:02:23] *** Quits: dec (~dec@2001:470:69fc:105::3204) (Read error: Connection reset by peer)
[05:02:23] *** Quits: keeganza (~keeganza@2001:470:69fc:105::c842) (Read error: Connection reset by peer)
[05:02:23] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Write error: Connection reset by peer)
[05:02:23] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[05:02:23] *** Quits: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e) (Read error: Connection reset by peer)
[05:02:23] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[05:02:46] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[05:03:11] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[05:04:10] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[05:05:07] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 245 seconds)
[05:05:12] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[05:05:12] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[05:05:12] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[05:05:12] *** Joins: phoenix[m]12 (~phoenixma@2001:470:69fc:105::f9b)
[05:05:12] *** Joins: kadoban (~kadoban@user/kadoban)
[05:05:12] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[05:05:12] *** Joins: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e)
[05:05:12] *** Joins: freswa[m] (~freswa@2001:470:69fc:105::c1ec)
[05:05:12] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[05:05:12] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[05:05:12] *** Joins: mambang[m] (~mambang@user/mambang)
[05:05:12] *** Joins: psydroid (~psydroid@user/psydroid)
[05:05:12] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[05:05:13] *** Joins: keeganza (~keeganza@2001:470:69fc:105::c842)
[05:05:15] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[05:05:25] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[05:05:25] *** Joins: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019)
[05:05:26] *** Joins: dec (~dec@2001:470:69fc:105::3204)
[05:05:26] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[05:06:18] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[05:06:43] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 250 seconds)
[05:09:39] *** Quits: LSD (~LSD@2.lsd.systems) (Quit: I love you.)
[05:09:53] *** Joins: LSD (~LSD@2.lsd.systems)
[05:10:01] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[05:10:40] *** Joins: LSD (~LSD@2.lsd.systems)
[05:11:02] *** Joins: holgersson (~quassel@user/holgersson)
[05:24:22] *** Quits: tia (~sidy@nat.esu3.org) (Quit: Leaving)
[05:24:23] *** Joins: meinside_ (uid24933@id-24933.brockwell.irccloud.com)
[05:42:34] *** Joins: saml_ (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:43:02] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Read error: Connection reset by peer)
[05:52:32] *** Joins: gggp (~gggp@123.116.95.154)
[05:55:44] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[05:57:33] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[05:58:05] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[05:58:05] *** Jigsy` is now known as Jigsy
[06:04:04] *** Quits: gggp (~gggp@123.116.95.154) (Read error: Connection reset by peer)
[06:04:27] *** Joins: gggp (~gggp@60.10.23.170)
[06:06:36] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[06:09:39] *** Joins: Jigsy (~Jigsy@user/jigsy)
[06:15:23] *** Quits: revolve (~u0_a227@82-132-247-46.dab.02.net) (Read error: Connection reset by peer)
[06:16:16] *** Quits: saml_ (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:17:22] *** Joins: revolve (~u0_a227@82-132-245-177.dab.02.net)
[06:22:37] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[06:25:57] <gggp> what is the meaning to include a interface type in a struct
[06:27:16] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[06:32:44] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[06:34:33] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[06:35:30] *** Quits: devx0 (~devx@151.233.209.35.bc.googleusercontent.com) (Quit: The Lounge - https://thelounge.chat)
[06:36:21] <nevivurn> gggp: do you mean embedding, as in `type yourStruct { someInterface }` ?
[06:36:31] <gggp> yep
[06:36:44] <gggp> I get it
[06:36:56] <nevivurn> ah, okay
[06:38:08] <gggp> nevivurn, but I want to know what is the size of this field
[06:38:31] <nevivurn> size, as in the actual size in bytes in memory?
[06:38:37] <gggp> yep
[06:40:11] <nevivurn> As far as I know, that isn't specified by the spec. I assume it's similar to any other struct member, so whatever the size of the interface or embedded struct.
[06:47:02] <fizzie> It's just a field. It's almost the same as any other field, except it doesn't have an (explicit) name, and there's that method promotion.
[06:48:42] <nevivurn> gggp: at least this https://play.golang.org/p/7dE-114huQp seems to suggest that interfaces are 16 bytes in this particular architecture, which makes sense. Two pointers, one for the concrete value and one for the concrete type.
[06:52:07] <fizzie> And here's almost the whole set of embedded and non-embedded structs, pointers and interfaces: https://play.golang.org/p/K56PZQ4l9Ro
[06:52:30] *** Joins: gggp_ (~gggp@123.118.15.132)
[06:55:32] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[06:56:54] <Tv_> nevivurn: https://research.swtch.com/interfaces
[06:57:20] <Tv_> (the optimization of storing small non-pointers inline has been removed)
[06:59:09] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[07:01:12] *** Quits: alip (~alip@exherbo/developer/alip) (Read error: Connection reset by peer)
[07:01:45] <nevivurn> That looks interesting, will give it a thorough read later
[07:04:21] <gggp_> iface and eface are confusing
[07:04:25] *** gggp_ is now known as gggp
[07:06:08] *** Quits: f8l12 (~f8l12@d24-36-156-191.home1.cgocable.net) (Ping timeout: 272 seconds)
[07:08:08] *** Quits: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:08:13] <Tv_> gggp: eface = empty interface
[07:08:25] <Tv_> special cased because it doesn't have to worry about tables of methods
[07:08:46] <Tv_> gggp: https://www.henrydu.com/2021/02/07/golang-interface-brief-look/
[07:10:02] <gggp> Tv_, what is the time that initialize methods table of a eface
[07:10:14] <Tv_> eface has no methods
[07:11:02] <gggp> eface can accept every type coercoin
[07:11:24] <Tv_> yes, you can assign any type to interface{}
[07:13:03] <gggp> is the golang first release version is release-branch.go1?
[07:13:32] <Tv_> there's a tag `go1`
[07:14:21] <gggp> so this version contains code of the oldest go compiler
[07:14:32] <Tv_> it existed before the release
[07:14:55] <gggp> oh ,I have checkout https://go.googlesource.com/go
[07:15:01] <lastlee> Hi, I'm pretty new to golang but trying to figure this out. I have a script that doesn't work but a simplified example that does. I am writing a simple token/value interpolator to convert ${...} style tokens in a string to be replaced with the value of a map with key "...". Here's my non-functional script: https://play.golang.org/p/t0MUCSCTRlw
[07:15:14] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[07:15:16] <gggp> which tag is the first go compiler introduced
[07:15:21] <lastlee> and my functional script: https://play.golang.org/p/Vbfc9MeJldn
[07:15:37] *** Joins: c10l (~c10l@89.34.167.207)
[07:15:39] *** Joins: alip (~alip@exherbo/developer/alip)
[07:16:09] *** Joins: andlabs (~andlabs@2607:fb90:f80f:80b3:bd81:3438:340b:cbe1)
[07:18:52] <Tv_> lastlee: you might enjoy https://pkg.go.dev/os#Expand
[07:19:39] *** Joins: andlabs_ (~andlabs@2607:fb90:f80f:291d:11ec:d3e1:bb56:25b6)
[07:19:54] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:20:20] <Tv_> lastlee: you seem to expecting it to magically recursively expand the values
[07:20:26] <lastlee> @Tv_: that is a perfect answer to the last few hours of my life. Thank you
[07:20:28] <Tv_> lastlee: nothing in the code actually does that
[07:20:32] *** Quits: andlabs (~andlabs@2607:fb90:f80f:80b3:bd81:3438:340b:cbe1) (Ping timeout: 245 seconds)
[07:20:37] <Tv_> neither does os.Expand
[07:21:11] <lastlee> But I think that leads me to a better place
[07:21:32] <Tv_> lastlee: yeah, generally the environment has values expanded at set time, not at evaluation time
[07:21:39] <kaleido> " i had a problem regexp could fix, now i have two problems."
[07:21:42] <Tv_> because LOOP=$LOOP
[07:22:57] <Tv_> also not really relevant here but darn neat so mentioning it anyway: https://github.com/icholy/replace
[07:23:46] *** Quits: andlabs_ (~andlabs@2607:fb90:f80f:291d:11ec:d3e1:bb56:25b6) (Ping timeout: 240 seconds)
[07:24:04] *** Joins: andlabs (~andlabs@172.58.235.83)
[07:27:06] *** Joins: andlabs_ (~andlabs@172.58.235.80)
[07:27:20] <lastlee> Yeah, maybe expanding at set time is the way to do it, but I was maybe hoping to do the expansion after all the keys were available. That might have been not that necessary of a requirement though
[07:28:10] *** Quits: andlabs (~andlabs@172.58.235.83) (Ping timeout: 240 seconds)
[07:28:25] <Tv_> lastlee: A=$B; B=$A; enjoy
[07:29:01] *** Quits: gggp (~gggp@123.118.15.132) (Read error: Connection reset by peer)
[07:29:45] <lastlee> hence orderedmap, but I'll just throw an error
[07:30:57] *** Joins: hexfive (~eric@50.35.83.177)
[07:31:20] <Tv_> lastlee: it's a lookup time problem if you're expanding recursively at lookup time, map ordering doesn't change that
[07:31:46] <Tv_> unless you make some weird rule like entries can only refer to variables defined before them -- but if you do that, why expand at evaluation time
[07:33:22] *** Quits: andlabs_ (~andlabs@172.58.235.80) (Ping timeout: 240 seconds)
[07:35:28] *** Joins: andlabs_ (~andlabs@2607:fb90:f80f:1300:25b6:6885:60a6:8e2e)
[07:36:14] *** Joins: gggp (~gggp@60.10.23.170)
[07:38:53] *** Joins: xav (~quassel@103-96-87-198.novaconnect.nz)
[07:39:02] *** Quits: xavpaice (~quassel@103-96-86-83.novaconnect.nz) (Ping timeout: 268 seconds)
[07:39:41] *** Quits: andlabs_ (~andlabs@2607:fb90:f80f:1300:25b6:6885:60a6:8e2e) (Ping timeout: 250 seconds)
[07:39:49] *** Joins: andlabs (~andlabs@172.58.235.180)
[07:42:35] *** Joins: andlabs_ (~andlabs@2607:fb90:f80b:b768:da6:ad4b:c288:9595)
[07:44:42] *** Quits: andlabs (~andlabs@172.58.235.180) (Ping timeout: 272 seconds)
[07:46:47] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[07:47:00] *** Quits: andlabs_ (~andlabs@2607:fb90:f80b:b768:da6:ad4b:c288:9595) (Ping timeout: 256 seconds)
[07:47:46] *** Joins: andlabs_ (~andlabs@2607:fb90:f80f:3355:d4ac:8c39:90d0:7f69)
[07:47:58] *** Quits: andlabs_ (~andlabs@2607:fb90:f80f:3355:d4ac:8c39:90d0:7f69) (Client Quit)
[07:50:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:53:25] *** Joins: gggp_ (~gggp@60.10.23.170)
[07:56:22] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[08:00:36] *** Quits: src (~src@user/src) (Ping timeout: 272 seconds)
[08:03:05] *** Joins: earthbreaker9000 (~earthbrea@li778-229.members.linode.com)
[08:04:20] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[08:04:25] *** Joins: gggp__ (~gggp@111.192.219.130)
[08:07:10] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[08:07:12] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[08:08:18] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:8da0:6616:8b15:280) (Ping timeout: 252 seconds)
[08:11:44] *** Joins: oxum (~oxum@122.172.39.197)
[08:12:53] *** Quits: earthbreaker9000 (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:13:07] *** Joins: earthbreaker9000 (~earthbrea@li778-229.members.linode.com)
[08:16:22] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 245 seconds)
[08:16:24] *** Quits: yelnah (~felix@2001:44b8:308c:9a:6f0:21ff:fe3c:d4d7) (Quit: ZNC 1.8.2 - https://znc.in)
[08:16:39] *** Joins: yelnah (~felix@238.4.220.203.dial.dynamic.acc02-gurw-wag.comindico.com.au)
[08:17:31] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:21:08] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[08:23:44] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[08:24:28] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:24:48] *** Quits: earthbreaker9000 (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:25:12] *** Joins: earthbre- (~earthbrea@li778-229.members.linode.com)
[08:28:22] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[08:29:51] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:27] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:32:54] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[08:36:04] *** Joins: ofh (~felix@110-174-253-90.static.tpgi.com.au)
[08:36:18] *** Quits: yelnah (~felix@238.4.220.203.dial.dynamic.acc02-gurw-wag.comindico.com.au) (Ping timeout: 256 seconds)
[08:36:50] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[08:36:52] *** Joins: oxum (~oxum@122.172.39.197)
[08:38:10] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-b5fa-cccb-3e1f-3ba8.inf6.spectrum.com)
[08:39:46] *** Quits: earthbre- (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[08:40:50] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 256 seconds)
[08:41:33] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[08:41:37] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[08:41:41] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[08:41:46] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[08:43:12] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:43:47] *** Joins: c10l (~c10l@89.34.167.207)
[08:43:48] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[08:46:00] *** Joins: oxum (~oxum@122.172.39.197)
[08:48:40] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[08:49:17] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[08:50:34] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 240 seconds)
[08:54:54] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 276 seconds)
[08:57:14] *** Joins: oxum (~oxum@122.172.39.197)
[09:02:12] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 252 seconds)
[09:10:34] *** Joins: mrniranjan (~mniranja@103.208.71.143)
[09:14:55] *** Joins: gggp_ (~gggp@60.10.23.170)
[09:16:05] *** Joins: bpalmer` (~user@user/bpalmer)
[09:16:22] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[09:17:54] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 240 seconds)
[09:18:18] *** Quits: gggp__ (~gggp@111.192.219.130) (Ping timeout: 276 seconds)
[09:21:25] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[09:21:36] *** Quits: nebiros (nebiros@user/nebiros) (Ping timeout: 272 seconds)
[09:22:10] *** bpalmer` is now known as bpalmer
[09:22:12] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (Ping timeout: 255 seconds)
[09:23:08] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[09:23:32] *** Joins: samhza (~sam@samhza.com)
[09:25:53] *** Joins: nebiros (~nebiros@li1848-13.members.linode.com)
[09:25:53] *** Quits: nebiros (~nebiros@li1848-13.members.linode.com) (Changing host)
[09:25:53] *** Joins: nebiros (~nebiros@user/nebiros)
[09:30:39] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[09:31:00] *** Joins: c10l (~c10l@89.34.167.207)
[09:33:15] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 276 seconds)
[09:36:28] *** Quits: CommunistWolf (~gulag@user/communistwolf) (*.net *.split)
[09:36:28] *** Quits: Lost (cold@user/lost) (*.net *.split)
[09:36:28] *** Quits: chasmo77 (~chas77@71.63.241.168) (*.net *.split)
[09:36:28] *** Quits: ddevault (znc@sourcehut/staff/ddevault) (*.net *.split)
[09:36:28] *** Quits: buffet (~buffet@buffet.sh) (*.net *.split)
[09:36:28] *** Quits: jimeh (~jimeh@51.15.210.236) (*.net *.split)
[09:36:28] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[09:36:28] *** Quits: flommi (~flommi@puck942.startdedicated.de) (*.net *.split)
[09:36:28] *** Quits: soxhlet (~soxhlet@81.171.29.137) (*.net *.split)
[09:36:28] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[09:36:28] *** Quits: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (*.net *.split)
[09:36:28] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:36:28] *** Quits: Dieterbe (~Dieterbe@user/dieterbe) (*.net *.split)
[09:36:28] *** Quits: shadowchaser (~Shadowcha@liox.eu) (*.net *.split)
[09:36:28] *** Quits: hugotty` (~user@51.159.70.14) (*.net *.split)
[09:36:28] *** Quits: jinn_ (~jinn@d.jinn.army) (*.net *.split)
[09:36:28] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (*.net *.split)
[09:36:28] *** Quits: ari (~ari@vmi500470.contaboserver.net) (*.net *.split)
[09:36:28] *** Quits: cation (cation@user/cation) (*.net *.split)
[09:36:28] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:36:29] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[09:36:29] *** Quits: darkmuggle (darkmuggle@redhat/darkmuggle) (*.net *.split)
[09:36:29] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (*.net *.split)
[09:36:29] *** Quits: effprime (~effprime@user/effprime) (*.net *.split)
[09:36:29] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[09:36:29] *** Quits: daegalus (~yulian@user/daegalus) (*.net *.split)
[09:36:29] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[09:36:29] *** Quits: comrad (~quassel@holarse/comrad) (*.net *.split)
[09:36:29] *** Quits: kzrl (~kzrl@149.28.171.210) (*.net *.split)
[09:36:29] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[09:36:29] *** Quits: belak (~belak@user/belak) (*.net *.split)
[09:36:29] *** Quits: Liexei (Liexei@user/liexei) (*.net *.split)
[09:36:29] *** Quits: dan- (~d@ircdocs/dan-) (*.net *.split)
[09:36:29] *** Quits: dozn (uid249292@user/dozn) (*.net *.split)
[09:36:29] *** Quits: itok (sid418430@2001:67c:2f08:3::6:627e) (*.net *.split)
[09:36:29] *** Quits: vds (sid12483@2001:67c:2f08:5::30c3) (*.net *.split)
[09:36:29] *** Quits: obviyus (sid415299@user/obviyus) (*.net *.split)
[09:36:29] *** Quits: m-kad_ (~quassel@2a02:c207:2043:4525::1) (*.net *.split)
[09:36:29] *** Quits: ikeaviking (~ikeavikin@198.98.50.70) (*.net *.split)
[09:36:29] *** Quits: cmagina (sid286142@user/cmagina) (*.net *.split)
[09:36:29] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (*.net *.split)
[09:36:30] *** Quits: Compy (compy@2600:3c00::f03c:91ff:fe83:6d49) (*.net *.split)
[09:36:30] *** Quits: trollixx (sid289131@id-289131.highgate.irccloud.com) (*.net *.split)
[09:36:30] *** Quits: mva (znc@gentoo/developer/mva) (*.net *.split)
[09:36:30] *** Quits: noord (~noord@user/noord) (*.net *.split)
[09:36:30] *** Quits: mirai (~mirai@2001:bc8:630:161::1) (*.net *.split)
[09:36:30] *** Quits: binkers (~binkers@user/binkers) (*.net *.split)
[09:36:34] *** Joins: jinn (~jinn@d.jinn.army)
[09:36:35] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:36:35] *** Joins: m-kad (~quassel@2a02:c207:2043:4525::1)
[09:36:35] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[09:36:36] *** Joins: pjs (~pjs@base.netlandish.com)
[09:36:36] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[09:36:36] *** Joins: francis (francis@132.145.48.21)
[09:36:36] *** Joins: hugotty` (~user@51.159.70.14)
[09:36:37] *** Quits: francis (francis@132.145.48.21) (Changing host)
[09:36:37] *** Joins: francis (francis@user/francis)
[09:36:39] *** Joins: ari (~ari@vmi500470.contaboserver.net)
[09:36:39] *** Joins: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d)
[09:36:39] *** Joins: deniska_ (~denis@user/deniska)
[09:36:39] *** Joins: soxhlet (~soxhlet@81.171.29.137)
[09:36:40] *** Quits: pjs (~pjs@base.netlandish.com) (Changing host)
[09:36:40] *** Joins: pjs (~pjs@user/pjs)
[09:36:40] *** Joins: mmk2410 (~mmk2410@mmk2410.org)
[09:36:42] *** Joins: cold__ (~spinning@user/lost)
[09:36:42] *** Joins: Dieterbe_ (~Dieterbe@user/dieterbe)
[09:36:50] *** Joins: chasmo77 (~chas77@71.63.241.168)
[09:36:50] *** Joins: dozn_ (uid249292@user/dozn)
[09:36:50] *** Joins: V__ (~v@anomalous.eu)
[09:36:51] *** Quits: mmk2410 (~mmk2410@mmk2410.org) (Changing host)
[09:36:51] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[09:36:53] *** Joins: trollixx (sid289131@id-289131.highgate.irccloud.com)
[09:36:53] *** Joins: vds (sid12483@id-12483.brockwell.irccloud.com)
[09:36:56] *** Joins: jimeh1 (~jimeh@51.15.210.236)
[09:37:02] *** Joins: daegalus (~yulian@c-73-35-235-95.hsd1.wa.comcast.net)
[09:37:03] *** Quits: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d) (Changing host)
[09:37:03] *** Joins: jdrab (~jdrab@user/jdrab)
[09:37:04] *** Joins: CommunistWolf (~gulag@user/communistwolf)
[09:37:10] *** Joins: Compy (compy@2600:3c00::f03c:91ff:fe83:6d49)
[09:37:11] *** Joins: obviyus (sid415299@id-415299.highgate.irccloud.com)
[09:37:11] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[09:37:12] *** Joins: cmagina (sid286142@id-286142.highgate.irccloud.com)
[09:37:16] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[09:37:16] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[09:37:22] *** Joins: flommi_ (~flommi@puck942.startdedicated.de)
[09:37:22] *** Joins: belak51 (~belak@user/belak)
[09:37:22] *** Joins: mva_ (znc@gentoo/developer/mva)
[09:37:29] *** Quits: obviyus (sid415299@id-415299.highgate.irccloud.com) (Changing host)
[09:37:29] *** Joins: obviyus (sid415299@user/obviyus)
[09:37:31] *** Quits: cmagina (sid286142@id-286142.highgate.irccloud.com) (Changing host)
[09:37:32] *** Joins: cmagina (sid286142@user/cmagina)
[09:37:33] *** Joins: kzrl (~kzrl@149.28.171.210)
[09:38:04] *** Joins: binkers (~binkers@user/binkers)
[09:38:10] *** Joins: dan- (~d@ircdocs/dan-)
[09:38:19] *** Joins: cation (cation@user/cation)
[09:38:19] *** Joins: mirai (~mirai@2001:bc8:630:161::1)
[09:38:20] *** Joins: ds (~dshoreman@user/ds)
[09:38:32] *** Joins: ddevault (znc@sourcehut/staff/ddevault)
[09:38:37] *** Joins: noord (~noord@user/noord)
[09:38:41] *** Joins: darkmuggle (darkmuggle@here.for-the.chat)
[09:38:51] *** Joins: Liexei (Liexei@user/liexei)
[09:38:53] *** Joins: hikhvar79607380 (~thelounge@x4dbeb36b.dyn.telefonica.de)
[09:39:30] *** Joins: effprime (~effprime@user/effprime)
[09:42:02] *** Joins: gggp__ (~gggp@221.219.76.106)
[09:44:17] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[09:47:43] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[09:55:01] *** Quits: LiftLeft (~LiftLeft@138.199.10.4) (Ping timeout: 265 seconds)
[09:55:52] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:53] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[10:01:33] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[10:01:34] *** Joins: shka (~herr@109.231.62.239)
[10:03:24] *** Joins: gggp_ (~gggp@60.10.194.46)
[10:06:53] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:07:06] *** Quits: gggp__ (~gggp@221.219.76.106) (Ping timeout: 252 seconds)
[10:07:26] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:07:36] *** Quits: daegalus (~yulian@c-73-35-235-95.hsd1.wa.comcast.net) (Changing host)
[10:07:37] *** Joins: daegalus (~yulian@user/daegalus)
[10:10:56] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 256 seconds)
[10:13:49] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Ping timeout: 268 seconds)
[10:16:38] *** Joins: comrad (~quassel@holarse/comrad)
[10:17:34] *** Joins: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66)
[10:18:53] *** deniska_ is now known as deniska
[10:19:04] *** Quits: gggp__ (~gggp@60.10.23.170) (Read error: Connection reset by peer)
[10:19:28] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:21:44] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:21:54] *** V__ is now known as V
[10:24:52] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[10:26:33] *** Joins: oxum (~oxum@122.172.39.197)
[10:26:46] *** Joins: xsteadfastx (~marv@62.176.255.180)
[10:27:08] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:29:28] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[10:30:55] *** Joins: gggp_ (~gggp@123.113.188.99)
[10:31:14] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 258 seconds)
[10:33:27] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[10:44:56] *** Joins: gggp__ (~gggp@60.10.23.170)
[10:48:39] *** Quits: gggp_ (~gggp@123.113.188.99) (Ping timeout: 276 seconds)
[10:48:44] *** Joins: kodah (~kodah@user/kodah)
[10:50:54] *** Joins: oxum (~oxum@122.172.39.197)
[10:51:32] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[10:52:29] *** gggp__ is now known as gggp
[10:53:02] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[10:53:28] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[10:55:46] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 258 seconds)
[10:56:22] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 245 seconds)
[11:02:03] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:54] *** Joins: gggp_ (~gggp@123.113.188.99)
[11:04:03] *** Joins: jespada (~jespada@90.254.247.46)
[11:04:55] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[11:05:51] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:05:57] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[11:06:09] *** Quits: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (Client Quit)
[11:07:46] *** Joins: jjhoo (~jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[11:12:41] *** Joins: mrig (~mrig@user/mrig)
[11:15:29] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 250 seconds)
[11:19:03] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[11:26:24] *** Joins: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru)
[11:27:46] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:d9c0:9871:5af:5f27)
[11:28:57] *** Quits: MrByte (~textual@2a02:8108:463f:b2c8:d9c0:9871:5af:5f27) (Client Quit)
[11:29:00] *** Joins: independent56 (~independe@95.148.245.54)
[11:33:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[11:34:29] *** Quits: independent56 (~independe@95.148.245.54) (Ping timeout: 258 seconds)
[11:35:43] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[11:37:06] *** Joins: independent56 (~independe@95.148.245.54)
[11:37:12] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-b5fa-cccb-3e1f-3ba8.inf6.spectrum.com) (Ping timeout: 245 seconds)
[11:37:24] *** Quits: gggp_ (~gggp@123.113.188.99) (Ping timeout: 276 seconds)
[11:38:17] *** Joins: enkodr (~Srain@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7)
[11:40:42] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:41:25] *** Joins: gggp_ (~gggp@60.10.23.170)
[11:42:55] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 258 seconds)
[11:44:27] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[11:45:44] *** gggp_ is now known as gggp
[11:45:49] <gggp> is there api cast timestamp to hex
[11:55:47] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[11:56:35] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[11:58:16] <seebs> this doesn't make any sense
[11:58:40] <seebs> "hex" is not a type. if you want to print a number in hex, that's not a cast.
[11:59:39] *** Joins: Xjs (~jannis@user/xjs)
[12:02:41] *** Joins: normen (~normen@p200300d7173dc9002c1c4522179364e3.dip0.t-ipconnect.de)
[12:04:11] *** Joins: oxum (~oxum@122.172.39.197)
[12:06:40] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[12:08:04] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[12:08:27] *** Joins: independent56 (~independe@95.148.245.54)
[12:11:36] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 268 seconds)
[12:11:54] *** Joins: gggp_ (~gggp@60.10.194.46)
[12:12:34] *** Quits: independent56 (~independe@95.148.245.54) (Ping timeout: 240 seconds)
[12:12:57] *** Joins: independent56 (~independe@95.148.245.54)
[12:14:51] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 250 seconds)
[12:15:17] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[12:15:39] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[12:15:57] *** Joins: independent56 (~independe@95.148.245.54)
[12:16:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:17:57] *** Joins: gggp__ (~gggp@221.219.75.222)
[12:20:08] *** Joins: oxum (~oxum@122.172.39.197)
[12:20:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[12:22:12] *** Quits: independent56 (~independe@95.148.245.54) (Ping timeout: 245 seconds)
[12:24:34] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 240 seconds)
[12:25:20] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[12:25:41] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[12:27:52] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:29:52] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[12:30:32] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 245 seconds)
[12:30:38] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[12:30:47] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[12:34:48] *** Joins: zwr (~zwr@2804:d45:b966:fb00:77f1:f53f:d604:3c40)
[12:38:21] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[12:44:36] *** Quits: revolve (~u0_a227@82-132-245-177.dab.02.net) (Read error: Connection reset by peer)
[12:45:34] *** Quits: francis (francis@user/francis) (Quit: rc)
[12:45:55] *** Joins: francis (francis@user/francis)
[12:46:26] *** Joins: revolve (~u0_a227@82-132-245-31.dab.02.net)
[12:46:39] <mrig> gggp the fmt verb %x will output the hexadecimal value of an integer, you could use fmt.Sprint to generate a string representation of the hex value of your timestamp. Here is an example : https://play.golang.org/p/3Dd7W699m2N
[12:47:07] <mrig> You are effectively changing the numerical base of the number.
[12:47:36] <mrig> as seebs mentions this is not really a cast though it is categorically similar.
[12:48:33] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[12:50:04] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[12:50:26] *** Joins: teasea (~teasea@user/teasea)
[12:53:34] *** LSD is now known as acidsys
[12:57:02] *** Joins: frost (~frost@59.71.241.179)
[12:57:17] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[12:58:32] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[13:00:21] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[13:02:17] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[13:02:22] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[13:02:33] *** Joins: moto (~moto@user/moto)
[13:05:35] *** gggp__ is now known as gggp
[13:05:59] <gggp> 1
[13:07:30] *** Quits: zwr (~zwr@2804:d45:b966:fb00:77f1:f53f:d604:3c40) (Ping timeout: 240 seconds)
[13:09:59] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[13:10:29] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[13:11:54] *** Joins: gggp_ (~gggp@60.10.23.170)
[13:12:36] *** Joins: theoceaniscool (~theoceani@119.12.233.178)
[13:12:56] *** Joins: mnx|aw (~mnxaw@94.11.23.235)
[13:13:05] *** Parts: mnx|aw (~mnxaw@94.11.23.235) ()
[13:13:18] *** Joins: dr0n (~mnxaw@94.11.23.235)
[13:15:12] *** Quits: gggp (~gggp@221.219.75.222) (Ping timeout: 252 seconds)
[13:15:26] *** Quits: citizen_stig_ (~citizen_s@2001:982:9f64:1:d922:f99:2661:ac52) (Quit: Textual IRC Client: www.textualapp.com)
[13:16:16] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:20:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[13:20:43] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 250 seconds)
[13:20:43] *** Joins: oxum (~oxum@122.172.39.197)
[13:20:54] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:23:27] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[13:25:22] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 240 seconds)
[13:28:23] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[13:28:37] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[13:30:25] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[13:31:11] *** Joins: darkapex (~darkapex@user/darkapex)
[13:33:13] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[13:34:38] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[13:35:34] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[13:36:53] *** Joins: c10l (~c10l@89.34.167.207)
[13:40:13] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[13:41:27] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[13:44:55] *** Joins: gggp_ (~gggp@60.10.194.46)
[13:47:53] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[13:51:48] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[13:55:26] *** Joins: gggp__ (~gggp@221.219.75.222)
[13:58:37] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:01:11] *** Joins: chripell (~chripell@109.255.230.3)
[14:01:34] *** Joins: fbrx (~fbrx@user/fbrx)
[14:02:25] *** Joins: gggp_ (~gggp@60.10.194.46)
[14:05:15] *** Quits: gggp__ (~gggp@221.219.75.222) (Ping timeout: 252 seconds)
[14:08:11] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[14:08:25] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:08:52] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:09:41] *** Joins: jespada (~jespada@90.254.247.46)
[14:11:36] *** Quits: jespada (~jespada@90.254.247.46) (Client Quit)
[14:11:55] *** Joins: gggp__ (~gggp@60.10.194.46)
[14:12:03] *** Joins: jespada (~jespada@90.254.247.46)
[14:12:59] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[14:15:06] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:15:45] *** Quits: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66) (Ping timeout: 250 seconds)
[14:15:49] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[14:15:55] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[14:18:10] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[14:19:25] *** Joins: gggp_ (~gggp@60.10.194.46)
[14:19:32] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[14:22:32] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 256 seconds)
[14:28:07] *** Joins: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66)
[14:33:26] *** Joins: gggp__ (~gggp@60.10.194.46)
[14:35:15] *** Quits: mei (~mei@user/mei) (Quit: mei)
[14:36:34] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[14:47:04] *** Quits: fbrx (~fbrx@user/fbrx) (Quit: Leaving)
[14:50:30] *** Quits: Kane (~Kane@vps-546dd2ef.vps.ovh.net) (Read error: Connection reset by peer)
[14:54:00] *** Joins: Kane (~Kane@portal.yarg.fr)
[14:55:06] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:57:00] *** gggp__ is now known as gggp
[14:59:40] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[15:02:54] *** Joins: gggp_ (~gggp@60.10.23.170)
[15:06:05] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[15:07:18] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Ping timeout: 256 seconds)
[15:09:28] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 258 seconds)
[15:09:55] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[15:10:41] *** Quits: dr0n (~mnxaw@94.11.23.235) (Ping timeout: 258 seconds)
[15:11:30] *** Joins: independent56 (~independe@95.148.245.54)
[15:11:31] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[15:15:55] *** Joins: gggp__ (~gggp@60.10.194.46)
[15:17:43] *** Joins: gggp (~gggp@60.10.194.46)
[15:19:17] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 245 seconds)
[15:20:42] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 240 seconds)
[15:23:48] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[15:38:40] *** Joins: TFKyle (~kyle@64.201.205.70)
[15:49:51] *** Joins: stmuk (~steve@15.43.187.81.in-addr.arpa)
[15:51:53] *** Joins: jeromenerf (~jerome@176-149-34-153.abo.bbox.fr)
[15:54:21] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[15:54:49] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[15:55:09] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[15:56:36] *** Joins: lluad (~lluad@2a02:8084:2861:3f80:681f:b9f0:4f38:1482)
[15:56:38] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[15:57:22] *** Quits: theoceaniscool (~theoceani@119.12.233.178) (Ping timeout: 240 seconds)
[16:08:27] *** Quits: dza (~dza@user/dza) (Ping timeout: 252 seconds)
[16:10:34] *** Quits: mrniranjan (~mniranja@103.208.71.143) (Quit: leaving)
[16:17:08] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:17:28] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:18:09] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[16:18:32] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[16:25:46] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[16:26:01] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[16:29:39] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[16:30:40] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[16:31:02] *** Joins: foobaz212 (~foobaz212@75.188.159.143.dyn.plus.net)
[16:35:55] *** Quits: foobaz212 (~foobaz212@75.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[16:41:46] *** Joins: yoonkn (~user@175.197.208.79)
[16:42:02] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[16:42:55] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:8ded:befc:bf12:b752)
[16:44:25] *** Joins: Xjs (~jannis@user/xjs)
[16:48:18] *** Joins: f8l12 (~f8l12@d24-36-156-191.home1.cgocable.net)
[16:56:13] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[16:57:34] *** Joins: Xjs (~jannis@user/xjs)
[16:59:00] *** Joins: Torr (~Torr@user/torr)
[16:59:49] *** Quits: Xjs (~jannis@user/xjs) (Client Quit)
[17:01:33] *** Joins: Xjs (~jannis@user/xjs)
[17:03:06] *** Quits: Xjs (~jannis@user/xjs) (Client Quit)
[17:04:59] *** Joins: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac)
[17:05:05] *** Quits: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac) (Changing host)
[17:05:05] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[17:05:25] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1009)
[17:06:53] *** Joins: fub (uid190747@id-190747.charlton.irccloud.com)
[17:08:15] <fub> Hi. I have a simple go tool which does some analyzation and puts the data into an sqlite db. to speed this up, Im using 10 goroutines which analyze, get the *sql.DB passed and .Exec() an INSERT stmt.
[17:08:27] <fub> because if the concurrency, I sometimes get a "database is locked" error
[17:09:04] <siXy> fub: suggest having a single goroutine doing DB writes, and your analyzer routines sending data to it as they are done.
[17:09:16] <fub> what is the best approach to tackle this? create a new goroutines which listens on a channel and does only one insert at once
[17:09:20] <siXy> yeah
[17:09:37] <fub> the other way would be a sync.Lock before the .Exec() call
[17:10:14] <fub> siXy: thanks for the fast answer. can you tell me why the goroutine-sync-writer is the better approach?
[17:10:22] <fub> instead of the lock
[17:10:35] <siXy> you *could* do that, but I think that'd be less elegant - and the first solution means the analyzer routines can get straight back on with the next task, rather than waiting for the db lock
[17:10:55] *** Joins: Xjs (~jannis@user/xjs)
[17:11:52] <siXy> The other reason is that the channel means that the results get written in order - which may not matter
[17:12:14] <siXy> if you don't care about idle routines waiting on the lock, and don't care about write order then it doesn't really make any difference
[17:12:42] <siXy> (depending on the driver there may even be a wait-for-db-lock option if you want to do the latter)
[17:13:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:16:18] *** Joins: oxum (~oxum@122.172.39.197)
[17:18:12] *** Quits: oxum (~oxum@122.172.39.197) (Remote host closed the connection)
[17:18:30] <fub> thanks for the explanation! in my current scenario most of this does not matter, but Im sure I will run into this problem again
[17:19:06] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[17:20:46] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[17:22:09] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 252 seconds)
[17:22:10] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[17:24:26] *** Quits: hikhvar79607380 (~thelounge@x4dbeb36b.dyn.telefonica.de) (Ping timeout: 256 seconds)
[17:24:57] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:25:04] *** Joins: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac)
[17:25:10] *** Quits: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac) (Changing host)
[17:25:10] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[17:28:10] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[17:29:17] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 245 seconds)
[17:29:27] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Client Quit)
[17:30:59] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[17:34:13] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:34:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:39:56] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[17:40:14] *** Joins: nperez (~nperez@2a02-a45b-17c4-1-a00-27ff-feab-4723.fixed6.kpn.net)
[17:40:38] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 244 seconds)
[17:42:53] *** Quits: xsteadfastx (~marv@62.176.255.180) (Ping timeout: 250 seconds)
[17:43:03] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[17:44:16] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:44:58] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Ping timeout: 240 seconds)
[17:54:03] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[17:55:11] *** Joins: jinie (~jimmy@188.114.173.37)
[17:55:17] *** Quits: normen (~normen@p200300d7173dc9002c1c4522179364e3.dip0.t-ipconnect.de) (Quit: WeeChat 3.2)
[17:58:43] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:00:28] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:95e:67bb:42fe:93)
[18:01:14] *** Joins: LiftLeft (~LiftLeft@138.199.10.79)
[18:03:57] *** Joins: sidy (~sidy@user/sidy)
[18:10:00] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[18:10:18] *** Quits: gggp (~gggp@60.10.194.46) (Read error: Connection reset by peer)
[18:10:36] *** Joins: gggp (~gggp@60.10.23.170)
[18:13:20] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 265 seconds)
[18:14:15] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:14:18] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[18:15:32] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Ping timeout: 245 seconds)
[18:15:36] *** Joins: oxum (~oxum@122.172.39.197)
[18:20:38] *** Quits: oxum (~oxum@122.172.39.197) (Ping timeout: 272 seconds)
[18:21:01] *** Joins: buffet (~buffet@buffet.sh)
[18:22:15] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[18:23:44] *** Joins: moonface (~moonface@45.133.4.32)
[18:26:58] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[18:31:19] *** Joins: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac)
[18:31:23] *** Quits: gueorgui (~gueorgui@2a00:23c8:18b:1:f55e:6cb1:aed7:68ac) (Changing host)
[18:31:23] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[18:31:47] *** Joins: lastlee (~dlee@98-9-174-206.gci.net)
[18:32:35] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:33:03] *** Joins: gggp_ (~gggp@60.10.194.46)
[18:33:22] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[18:34:11] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[18:34:30] *** Joins: independent56 (~independe@95.148.245.54)
[18:35:16] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[18:36:24] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:43:12] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:44:36] <leitz> Am I correct in thinking that future support for MacOS will be good?
[18:46:18] <siXy> leitz: It's already in the first-class support list... what more would you like?
[18:46:34] <Sam> There are no plans (or any reason to) drop MacOS support, if that's what you're asking.
[18:46:51] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[18:47:24] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 252 seconds)
[18:50:17] <leitz> siXy, Sam, thanks! I'm reading about new versions of MacOS dropping some languages, and I was asked for a recommendation. Go was my first thought, but I haven't been in the community for a while.
[18:50:46] <Sam> I'm not sure what that would be about; maybe xcode support? I dunno, I don't own any apple hardware.
[18:50:55] <Sam> But MacOS doesn't decide who supports it (not yet anyways)
[18:51:01] <leitz> My stuff mostly does text processing on Linux/Unix variants.
[18:51:33] <leitz> Sam, Apple is dropping what they provide, so applications will have to provide their own programmng environment.
[18:51:48] <siXy> leitz: The thing you're reading is about apple deciding to stop shipping macs with PHP (and maybe some other) interpreters already installed
[18:52:04] <leitz> siXy, yup.
[18:52:05] <siXy> Far as I know apple have never shipped a go compiler, so nothing changes there.
[18:52:23] <siXy> I haven't used a macbook in quite a few years though
[18:52:49] <leitz> Yup, but I write Perl now, and depend on Perl being installed.
[18:53:33] <siXy> Well, one of the important differences between compiled and interpreted languages is that interpreted languages (typically) rely on there being a pre-installed interpreter.
[18:53:43] <siXy> Go is a compiled language, and doesn't much care what you have installed.
[18:54:34] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 258 seconds)
[18:56:48] *** Joins: arcatech (~arcatech@user/arcatech)
[19:00:01] <leitz> Is there a list of supported OS/Arch versions? I'm specifically thinking about Solaris/Sparc.
[19:00:18] <leitz> But my google-fu seems weak...
[19:00:20] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[19:00:35] <siXy> leitz: https://golang.org/doc/install/source#introduction
[19:00:45] <leitz> me goes off to read.
[19:01:33] <leitz> Okay, no Sparc.
[19:01:50] <siXy> No official sparc ports, no
[19:02:00] <siXy> There may be a community-maintained one though
[19:04:30] <siXy> leitz: https://sysadm.life/posts/porting_golang_to_sparc/ suggests it might just work?
[19:04:50] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:05:18] <fub> Does someone know a library which allows to show a "dashboard" like is shown here https://www.rumble.run/blog/beta-5-scanner/ ? I want to show some live counts as shown here with a log window below. Is something like https://github.com/rivo/tview what I need to look at?
[19:06:16] <Sam> I was just going to sugest tview then noticed that I hadn't read your message all the way through :)
[19:06:34] <Sam> It makes that sort of thing pretty easy
[19:07:04] <bookworm> where do you want to render?
[19:07:11] <fub> in the terminal
[19:08:28] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[19:08:47] <leitz> siXy, thanks. I've skimmed that, and will include it in my report.
[19:08:49] <bookworm> https://github.com/charmbracelet/bubbletea / https://github.com/gdamore/tcell work too
[19:09:04] <Sam> tcell is what tview uses under the hood. It might be a bit lower level than you want.
[19:09:19] <bookworm> depends on what else you're doing, sure
[19:10:59] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:11:29] *** Joins: Giedrius (~giedrius@5.133.65.65)
[19:13:54] <fub> okay
[19:14:26] <fub> yeah basically I need just one split (above/below window) so I can show some live-updating counts in the upper one and some log output in the lower
[19:14:31] *** Quits: revolve (~u0_a227@82-132-245-31.dab.02.net) (Read error: Connection reset by peer)
[19:14:35] <Tv_> leitz: go tool dist list
[19:16:03] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:16:28] *** Joins: revolve (~u0_a227@82-132-247-62.dab.02.net)
[19:18:04] *** Joins: arcatech (~arcatech@user/arcatech)
[19:20:34] *** Quits: lastlee (~dlee@98-9-174-206.gci.net) (Quit: leaving)
[19:22:09] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 258 seconds)
[19:23:03] *** Guest4629 is now known as hentai
[19:24:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:25:43] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:25:56] *** Joins: arcatech (~arcatech@user/arcatech)
[19:28:02] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[19:28:11] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[19:28:30] *** Joins: independent56 (~independe@95.148.245.54)
[19:30:01] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[19:35:41] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[19:36:14] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:36:38] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:95e:67bb:42fe:93) (Read error: Connection reset by peer)
[19:36:41] *** Quits: moonface (~moonface@45.133.4.32) (Remote host closed the connection)
[19:36:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 245 seconds)
[19:37:26] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:40:10] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[19:40:26] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-9422-5b43-2e0d-b19e.inf6.spectrum.com)
[19:40:42] *** Joins: src (~src@user/src)
[19:42:43] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:43:55] *** Joins: arcatech (~arcatech@user/arcatech)
[19:45:47] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[19:51:11] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Quit: mikoto-chan)
[19:55:07] *** cold__ is now known as Lost
[19:55:49] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Quit: Leaving)
[20:03:10] <fub> @bookworm: At a first glance, bubbletea does not support splits, more like dialogs/views, is that right?
[20:04:33] <Sam> We probably won't talk about Go all that much (though we'll see, maybe we'll dig into the code since it's a dev audience) but I'm demoing a new TUI XMPP client (written in Go) live in about 30 minutes, if anyone is interested. Details here: https://wiki.xmpp.org/web/XMPP_Office_Hours
[20:11:17] *** Quits: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66) (Quit: WeeChat 3.2)
[20:14:13] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 258 seconds)
[20:20:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:20:35] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Quit: WeeChat 2.8)
[20:20:57] <fub> @sam: will there be a recording of it?
[20:21:27] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 252 seconds)
[20:23:43] *** Joins: accordianz (~markgilla@c-67-165-177-1.hsd1.il.comcast.net)
[20:24:10] <Sam> fub: I'm not sure yet
[20:24:18] *** Joins: bkircher (~bkircher@2001:a61:2531:2001:f3d0:f987:58d6:6d66)
[20:25:43] <Sam> Actually, yah, I'll stick it up on the XSF youtube channel later (https://www.youtube.com/channel/UCf3Kq2ElJDFQhYDdjn18RuA)
[20:27:39] *** Parts: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Later)
[20:28:26] *** Joins: s_ (~s@user/spencer)
[20:29:30] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[20:31:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:32:13] *** Joins: gggp (~gggp@60.10.194.46)
[20:32:42] *** Quits: lluad (~lluad@2a02:8084:2861:3f80:681f:b9f0:4f38:1482) (Remote host closed the connection)
[20:36:41] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[20:37:01] *** Joins: independent56 (~independe@95.148.245.54)
[20:39:41] *** Quits: independent56 (~independe@95.148.245.54) (Remote host closed the connection)
[20:39:58] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[20:40:01] *** Joins: independent56 (~independe@95.148.245.54)
[20:41:11] *** Joins: gggp_ (~gggp@60.10.194.46)
[20:41:15] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[20:42:16] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Quit: Leaving.)
[20:42:16] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[20:44:46] *** Joins: gggp__ (~gggp@60.10.194.46)
[20:45:14] <fub> thanks :)
[20:45:44] *** gggp__ is now known as gggo
[20:47:24] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:47:55] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[20:54:49] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[20:55:05] *** Joins: shka (~herr@109.231.62.239)
[21:02:40] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[21:05:21] *** Quits: pjs (~pjs@user/pjs) (Quit: br)
[21:05:29] *** Joins: gggp_ (~gggp@60.10.194.46)
[21:05:38] *** Joins: pjs (~pjs@user/pjs)
[21:08:20] *** Quits: gggo (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[21:16:45] <fub> wow so the tview presentation just blew my mind :o
[21:17:03] *** Joins: newton (james@user/newton)
[21:19:06] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[21:24:01] *** Joins: mhorn (~textual@134.134.137.82)
[21:26:55] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Read error: Connection reset by peer)
[21:27:42] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[21:31:19] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:31:19] *** Quits: accordianz (~markgilla@c-67-165-177-1.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[21:37:28] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[21:39:17] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[21:40:21] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[21:45:26] *** Joins: Crassus (~Crassus@user/crassus)
[21:49:06] *** Joins: gggp__ (~gggp@60.10.194.46)
[21:52:25] *** Quits: gggp_ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[21:52:29] *** Joins: gggp (~gggp@60.10.194.46)
[21:53:14] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[21:54:58] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 268 seconds)
[21:55:57] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[21:57:53] <Jmainguy> fub: oh?
[21:57:57] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[21:58:10] <Jmainguy> whats tview, and how did they blow your mind?
[21:58:40] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Changing host)
[21:58:40] *** Joins: fikran (~fikran@user/fikran)
[22:00:56] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:01:45] *** Joins: gggp_ (~gggp@60.10.194.46)
[22:02:27] *** Quits: gggp_ (~gggp@60.10.194.46) (Remote host closed the connection)
[22:02:48] *** Joins: gggp_ (~gggp@60.10.23.170)
[22:02:56] *** Quits: s_ (~s@user/spencer) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:59] <fub> https://github.com/rivo/tview -- its astonishing whats possible in the term. like the grid which resizes when the term is resized
[22:03:05] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[22:03:31] *** Quits: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:45] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 250 seconds)
[22:03:55] <bookworm> ... resizing is the very basics of a tui
[22:04:05] <bookworm> if you can't do that, go home
[22:05:36] <Tv_> amazing 40-year old technology
[22:05:41] <bookworm> ^^
[22:06:37] *** Joins: andlabs (~andlabs@pool-72-69-74-168.nycmny.fios.verizon.net)
[22:07:13] <Sam> Glad it was useful :)
[22:07:34] <Sam> Not everyone is a long time user of TUIs or knows what they're capable of; no need to take a mocking tone with them.
[22:08:12] <Sam> Instead, maybe consider explaining a bit from your knowledge of TUIs so that they can learn too and be excited about the new thing they've discovered.
[22:08:48] <Tv_> i mean, i get that there's always a first day for everything.. let's maybe go for "there's a rich history there, and you might want to read about it"
[22:08:54] *** Quits: chripell (~chripell@109.255.230.3) (Ping timeout: 256 seconds)
[22:09:46] *** Joins: gggp__ (~gggp@60.10.194.46)
[22:09:55] <Tv_> or, alternatively, let's wish for the quick and painless death of vt-100 and for finally pushing the world to move on from it
[22:10:10] <Sam> Yes, sending some resources would be a better use of time than, effectively, saying "duh"
[22:10:53] <siXy> the trouble with moving on from vt-100 is that all the moving on solutions I've seen involve electron and lots of javascript, and, well, no
[22:10:58] <Tv_> Sam: oh that's a pet peeve. "sending some resources" is a lot of effort, and it's unfair to imply that people are obligated to do that. i am not aware of any single great book to refer to, that would explain this matter fully.
[22:11:09] <Sam> Tv_: that's fine, then don't respond at all.
[22:11:32] <Tv_> Sam: if you think that's fine to tell people, then you please stop responding to me about this topic too
[22:11:37] <bookworm> I mean, of you want resources here's one https://man7.org/tlpi/
[22:12:01] <bookworm> in more detail than you've ever need in regards to job control, sessions and terminals
[22:12:20] <Tv_> bookworm: i was thinking more along of https://en.wikipedia.org/wiki/The_Unix_Programming_Environment but i don't know if that actually talks much about curses-style things; unix kinda isn't that
[22:12:24] <Sam> I'm just reminding you that we follow the Go Code of Conduct here. If you're not going to help folks that are less knowledgeable than you, at least don't make them feel bad for not knowing as much as you. If you can't do that, don't say anything at all. Please and thank you.
[22:12:39] <bookworm> but luckily you can simply use a library that hides it, ncurses, tcell etc
[22:12:52] *** Quits: gggp_ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[22:13:02] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 245 seconds)
[22:13:34] *** Joins: normen (~normen@p200300d7173dc9003107d8b45696e155.dip0.t-ipconnect.de)
[22:17:27] <Tv_> siXy: it's sort of sad that html is the "ui layout language" we can push over a socket, these days. and even it has plenty of issues, like trying to embed boxes A, B and C into one frame without them being able to mess with each other
[22:17:43] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 258 seconds)
[22:17:56] <Tv_> i don't think plan9's /dev/draw is the answer, but it's an interesting world for sure
[22:19:38] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 258 seconds)
[22:20:06] *** Quits: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl) (Quit: The Lounge - https://thelounge.chat)
[22:20:33] <Sam> I've never really played with plan 9 much, does /dev/draw just give you something similar to a terminal where you can fill in individual pixels, or does it have an API for drawing various shapes or something?
[22:21:04] <Sam> Well, in a terminal it's not "pixels" but you know what I mean.
[22:21:12] *** Joins: keiser0091075852 (~keiser@83.25.199.188.ipv4.supernova.orange.pl)
[22:21:59] <siXy> html/css themselves aren't the thing I most object to - it's that you need JS to make them dynamic, and there's no real way of having JS running that doesn't overheat my little laptop
[22:21:59] <Tv_> Sam: it's usually hidden in a C library but afaik it send vector graphics drawing commands
[22:22:17] <Sam> That's kind of what I was hoping; nifty
[22:22:39] <Tv_> i wonder what you could do shoving svg+updates over a socket
[22:22:56] <Tv_> and also, what's the accessibility / copy+paste story for svg these days
[22:23:29] *** Quits: enkodr (~Srain@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7) (Remote host closed the connection)
[22:23:42] *** Joins: tane (~tane@dslb-002-201-234-072.002.201.pools.vodafone-ip.de)
[22:24:12] <Tv_> ah here's the /dev/draw protocol: http://man.cat-v.org/plan_9/3/draw
[22:24:18] <Tv_> it's kinda.. ancient
[22:24:32] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[22:25:26] <Tv_> i guess <iframe sandbox="..."> would be worth playing around with
[22:25:47] *** Quits: l2dy (~l2dy@user/l2dy) ()
[22:26:19] <Tv_> siXy: also there's a pretty simple adaptation of that where there's no browser-side smarts, every click send a request, and it's actually not horrible to use most of the time even
[22:27:03] <Tv_> siXy: still getting partial updates etc. i stopped fiddling with that mostly because the "frameworks" were buggy wrt error handling, user cancelling the operation, user clicking more than once, etc -- but that's just code
[22:27:24] <Tv_> siXy: the end result is a reasonably small amount of js that does very little
[22:28:07] *** Joins: l2dy (~l2dy@user/l2dy)
[22:28:51] <Sam> That sounds like the first company I worked for. We had a machine that ran Windows XP VMs and analyzed anything that happened in them (so you could run stuff and see if it was malware). To "remote desktop" into the VM we had an endpoint that took a screenshot and if you clicked on it simulated moving the mouse to that position and clicking. Pretty much the tiniest amount of javascript possible
[22:29:56] <Sam> Might not have even been javascript, I can't remember, might have been an image map of links per pixel or something. It sounds jank, but it never broke and worked on every ancient version of Internet Explorer that our "enterprise" customers were using.
[22:30:28] <Tv_> Sam: yeah except since it's html and not just bitmap graphics, the response can be a partial update by id etc (of course image compression does somewhat similar things too)
[22:30:42] <siXy> Don't you still need the whole electron bit though? I've tried a few electron powered term emulators and they always caused laptop to get horribly hot
[22:30:48] <Tv_> jank was all the web could do ;)
[22:31:00] <Sam> Yah, I can't remember if we did anything like that, might have just been one PNG since it was just a 480p "screen" or something
[22:31:14] <Tv_> i once wrote a security camera server prototype based on a never-ending stream of mime-multipart jpegs
[22:31:28] *** Joins: Torr (~Torr@user/torr)
[22:31:42] <Sam> Isn't that what JPEG2000 was for? And everyone is going to adopt that! Right?! Riiiight?
[22:31:49] <Tv_> siXy: i like to use the browser as the client
[22:32:00] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 272 seconds)
[22:32:25] <siXy> oh chromeos style? yeah that kind of works, but it's not my favourite
[22:34:17] *** Joins: plujon (~user@24.16.249.105)
[22:36:09] <bookworm> PWAs are pretty nice, hides the browser then mostly
[22:40:55] <plujon> Greetings; I'm trying to understand how go templates work.  I'm confused by this:
[22:41:03] <plujon> template.New("").Parse("{{ strings.HasPrefix \"a\" \"a\" }}")
[22:41:18] <plujon> Which yields: template: :1: function "strings" not defined
[22:41:40] <Tv_> plujon: the stuff inside {{}} isn't Go, it's a separate mini-language
[22:41:40] <plujon> How does one use strings.HasPrefix within a template?
[22:42:45] <plujon> Perhaps my question is: what can go in a "pipeline"?
[22:42:51] <Tv_> plujon: https://pkg.go.dev/text/template#hdr-Functions & https://pkg.go.dev/html/template#Template.Funcs
[22:43:29] <Tv_> plujon: i'd suggest just reading the intro text of both https://pkg.go.dev/text/template and https://pkg.go.dev/html/template fully, no skimming
[22:45:08] <plujon> Is "niladic" a typo?  What the heck is "niladic"?
[22:45:45] <ikke> https://en.wiktionary.org/wiki/niladic
[22:46:02] <plujon> Tv_: Thanks; I was reading that; I'll read farther...
[22:46:50] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[22:46:59] <plujon> ikke: Ah, thanks.  Never seen that term before...
[22:47:13] <ikke> monadic, variadic are all related
[22:58:06] <KirkMcDonald> I have seen "nullary" more often than "niladic."
[22:58:21] *** Quits: gggp__ (~gggp@60.10.194.46) (Ping timeout: 258 seconds)
[22:59:05] <Tv_> yeah not a great idea to use any of those words in that context
[22:59:50] <Tv_> KirkMcDonald: if you use nullary you can't say variadic without mixing languages ;)
[23:00:17] <Tv_> but "adicity" i've never heard anyone use
[23:06:44] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[23:11:59] <plujon> I've read the template pages, and MEGO a bit.  I know very little go-lang; I'm mainly trying to understand Hugo, which permits {{ if strings.HasPrefix "a" "a" }} {{ end }}.  Does it use a funcMap so that templates can make use of strings?
[23:15:20] <Tv_> hugo adds a whole of stuff into what the template sees
[23:15:33] <Tv_> in case of strings.HasPrefix, it isn't a FuncMap thing, because... hugo?
[23:16:11] <Tv_> the root data element they pass to the template has a field/key/something with name "strings", which then has a function/method "HasPrefix"
[23:16:24] <A_Dragon> no leading .
[23:16:26] <A_Dragon> couldnt be that
[23:16:33] <A_Dragon> unless you can access it that way ?
[23:16:41] <Tv_> err okay maybe the "strings" is in FuncMap?
[23:16:48] <A_Dragon> I'd say yes
[23:16:51] <A_Dragon> but I feel like
[23:16:55] <A_Dragon> that'd really break the parser?
[23:17:04] <A_Dragon> oh not strings.
[23:17:05] <Tv_> all i remember is i looked at the hugo implementation, and then i washed my eyeballs
[23:17:31] <A_Dragon> no it couldnt be, funcmap gets upset if its not a func() string or func() (string, error)
[23:17:53] <A_Dragon> it might patch or replace the template parser with something a bit "nicer"
[23:19:49] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 258 seconds)
[23:20:46] <Tv_> A_Dragon: it does, but funcmap allows more than string returns
[23:20:51] <Tv_> "Similarly, functions meant to return a result of arbitrary type can return interface{} or reflect.Value."
[23:20:58] <A_Dragon> o.o
[23:21:01] <A_Dragon> is that new?
[23:21:05] <A_Dragon> I dont remember seeing that
[23:21:11] <Tv_> i really doubt that
[23:21:13] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[23:21:27] <Tv_> consider https://pkg.go.dev/html/template#hdr-Typed_Strings and using a function
[23:21:46] <Tv_> consider $x := someFunc, etc
[23:23:43] <A_Dragon> hmm I must have read that sometime then
[23:23:52] <A_Dragon> its been a while since I went all in on template magic
[23:24:40] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:54] <A_Dragon> related: template is fun to abuse as a scripting lang but my can it do some silly things
[23:29:08] *** Joins: Testtesttesz (~Testtestt@p5b05e91c.dip0.t-ipconnect.de)
[23:29:10] <plujon> {{ index ( $array ) 1 }} /* no go ? */
[23:29:20] <Tv_> A_Dragon: {{- . -}}
[23:29:42] <A_Dragon> Tv_: not sure if annoyed face or comment about -}}s
[23:29:55] <A_Dragon> plujon: what are you trying to do with that?
[23:29:56] *** Joins: dr0n (~dr0n@94.11.23.235)
[23:29:59] <Tv_> A_Dragon: yes
[23:30:08] <A_Dragon> Tv_: lol thats what I thought
[23:30:23] <A_Dragon> I used it to do a few things like zwspificate nicks for bridging
[23:30:32] <A_Dragon> but I also had plans for some clever command handling and things
[23:30:52] <plujon> Big picture, I simply want to transform [./my.md#thing](thing) to my.html#thing , hugo has something called a "render-link" template that allows one to customize how markdown links are rendered.
[23:31:32] <Tv_> plujon: i'd encourage you to ask with more detail than "no go?"
[23:31:33] <plujon> Inside of render-link.html, I'm trying to use Hugo and Go functions to paste the #thing fragment onto the end of the generated url.
[23:31:45] <Tv_> plujon: did you get an error?
[23:32:15] <plujon> can't evaluate field SplitN in type interface {}
[23:32:30] <plujon> My template contains:
[23:33:13] <plujon> {{ index ( strings.SplitN .Destination "#" 1 ) 1 }}
[23:33:30] <A_Dragon> well thats exceedingly terrifying
[23:34:08] <A_Dragon> but I'd assume that however strings is injected is missing something
[23:34:13] <A_Dragon> make an issue on hugo perhaps?
[23:36:39] <plujon> I'm fumbling around terribly because I"m new to Hugo and Go.  I think the error is my attempt to create a substring of Destination.
[23:37:22] <A_Dragon> that error specifically is something trying to find SplitN, given that the only place that is is `strings`, its strings that isnt something expected
[23:37:35] <A_Dragon> I should clarify here that the strings there is NOT normal strings from the stdlib
[23:37:40] <A_Dragon> it'll be wrapped somehow
[23:38:10] <Tv_> i don't see a SplitN in hugo source, just Split
[23:38:40] <Tv_> the messy details of the wrapper: https://github.com/gohugoio/hugo/blob/3d5dbdcb1a11b059fc2f93ed6fadb9009bf72673/tpl/strings/strings.go#L258-L266
[23:38:53] <plujon> You're right: strings.Split works.
[23:39:08] <A_Dragon> oh no
[23:39:17] <A_Dragon> thats terrifying already
[23:39:22] <Tv_> A_Dragon: yup, hugo
[23:39:47] <Tv_> for the full experience, try reading the docs to understand its behavior
[23:39:58] <A_Dragon> nope Im good
[23:40:03] <A_Dragon> this looks cursed enough
[23:41:13] *** Quits: Testtesttesz (~Testtestt@p5b05e91c.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:44:13] *** Quits: sizeof_void34 (~Thunderbi@109-252-75-112.nat.spd-mgts.ru) (Quit: sizeof_void34)
[23:45:11] <plujon> https://gohugo.io/functions/ does not list strings.Split, but it does list strings.HasPrefix.  Based on seeing strings.HasPrefix, and noticing that it was the name of a function in Go, I thought that all of strings.* was available.  Apparently not...
[23:45:24] <A_Dragon> nope, its a wrapper :D
[23:45:38] <A_Dragon> go doesnt allow runtime code generation etc*
[23:45:49] <A_Dragon> s/allow/support\/have methods to/
[23:45:59] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[23:46:06] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[23:46:06] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[23:46:15] <Tv_> well, more, 1) Go at runtime contains no list of what all functions are defined in a package 2) the calling convention doesn't match what the template mechanism wants
[23:46:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:46:41] <Tv_> 1) is very much by design: you don't refer to it, it doesn't get included
[23:48:23] <A_Dragon> which is just "sane"
[23:48:31] *** Joins: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net)
[23:58:11] *** Quits: fikran (~fikran@pool-108-31-11-131.washdc.fios.verizon.net) (Changing host)
[23:58:11] *** Joins: fikran (~fikran@user/fikran)
[23:58:18] <Jmainguy> fub: TUI is on my list of things to learn how to do, thanks for the link, this looks awesome
[23:59:38] *** Joins: MrByte (~textual@2a02:8108:463f:b2c8:51b6:6a2e:632b:2685)
