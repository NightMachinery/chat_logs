[00:02:14] *** Quits: zer0def (~zer0def@user/zer0def) (Remote host closed the connection)
[00:02:43] *** Joins: zer0def (~zer0def@user/zer0def)
[00:04:56] *** Joins: jjakob (~quassel@user/jjakob)
[00:05:19] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[00:05:45] <jjakob> "CREATE ROLE :'non_root_user' WITH LOGIN PASSWORD :'non_root_password';" ERROR:  syntax error at or near "'myuser'" at character 13
[00:06:13] <jjakob> username can't be a variable?
[00:06:25] <peerce> username is an identifier, not a data value
[00:06:35] <peerce> so that should be :"non_root_user"   ...
[00:07:53] <peerce> btw, doc suggestion?  this page https://www.postgresql.org/docs/current/app-psql.html  desperately needs a TOC with links into the various sections of that rather long page.
[00:11:04] *** Quits: meialuadecompass (uid505943@id-505943.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:11:15] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[00:13:25] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[00:14:10] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:14:51] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[00:15:40] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Read error: Connection reset by peer)
[00:16:25] <jjakob> peerce: thank you, that was it
[00:21:36] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 245 seconds)
[00:24:27] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[00:24:28] <peerce> triggers == automagic stuff that often has side effects that are hard to predict and debug.
[00:25:32] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[00:25:52] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:27:06] *** Quits: mizi_ (~mizi@user/mizi) (Ping timeout: 272 seconds)
[00:31:08] *** Joins: phenom (~primus@user/phenom)
[00:33:46] <Slade> have a database missing the postgres role.. whats the best way to figure out how to psql in so i can peek around?
[00:33:59] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:34:55] *** Quits: Optimus (~risto@87.227.227.147) (Remote host closed the connection)
[00:35:44] <peerce> what user is the server running as ?
[00:35:52] <peerce> system user, I mean
[00:36:35] <peerce> and, um, are there any pg_hba.conf records for the admin user ?
[00:37:09] <peerce> btw, databases don't have roles.     server instances (aka clusters) have roles, databases in that cluster referfence those roles
[00:37:22] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[00:38:12] *** Quits: robin44 (~robin44@131.106.25.151) (Quit: Client closed)
[00:39:27] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 260 seconds)
[00:40:02] <Slade> peerce: postgres
[00:40:15] <Slade> is user
[00:40:40] <peerce> k, then look in pg_hba.conf, which might be in the $PGDATA directory, or it might be in /etc/postgres, depending on the installation
[00:41:34] <peerce> Slade; what OS is this installed on ?
[00:41:47] <Slade> its the linux docker
[00:42:01] <peerce> ugh, I think those morons do everything as root.
[00:42:21] <Slade> hm no it got a postgres user, i checked for a root tho
[00:42:56] <Slade> pg_hba looks norml https://usercontent.irccloud-cdn.com/file/5ZlXOPOL/image.png
[00:43:12] *** Quits: tnewman (~tnewman@118.150.44.48) (Read error: Connection reset by peer)
[00:43:22] <peerce> oh, trust.  no security at all.
[00:43:30] <peerce> find an app, see what role it uses to connect.
[00:43:47] <Slade> yea. thats the default
[00:43:50] <peerce> gawd, thats awful.      anyone on the same localhost can connect as any role.
[00:45:05] <Slade> but only if you know the user ;P
[00:45:18] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[00:45:35] *** Quits: magla (~gelignite@d5362fd7.access.ecotel.net) (Quit: Stay safe!)
[00:45:51] <peerce> well, if there's a database, there's got to be at least one app that connects to said database
[00:45:57] <Slade> yea
[00:46:00] <Slade> trying to find
[00:46:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:48:02] <peerce> are you sure there's no postgres role?  you're getting  FATAL:  role "postgres" does not exist   or whatever?
[00:48:24] <Slade> yes
[00:48:50] *** Quits: shiranaihito (~textual@123.192.192.149) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:52:10] *** Joins: tnewman (~tnewman@118.150.44.48)
[00:52:37] <Slade> well that was an adventure
[00:55:26] <peerce> did you find something ?
[00:56:26] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[00:57:06] <jjakob> the default superuser can be overriden with POSTGRES_USER at container init
[00:57:15] <jjakob> that overrides the superuser
[00:58:26] <jjakob> you can 'docker inspect' the running container to see its environment and if POSTGRES_USER was set. or if you exec in, just run 'env'.
[00:58:30] <peerce> on freebsd at least, ps auxww    will show like....
[00:58:40] <peerce> postgres 22616  0.0  0.2 177428 24912  -  SsJ  13:28   0:00.00 postgres: somerole somedb 192.168.0.25(64018)  (systemuser)
[00:59:08] <jjakob> I don't mean the user postgres runs at
[00:59:27] <peerce> somerole somedb is the role and database being accessed on that connection process
[00:59:46] <jjakob> right but he may not have anything else connected
[01:00:15] <peerce> the canonical answer probably should be 'ask the admin or whomever set this up'
[01:00:39] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[01:00:40] <jjakob> it's easy to look at the container env
[01:01:10] <jjakob> though it may have been recreated on a existing data volume without the env when it was created
[01:01:19] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[01:02:01] <jjakob> by the way, the way I use the official docker container and create a non-superuser by a initdb script is documented here https://github.com/docker-library/postgres/issues/940#issuecomment-1085046385
[01:02:21] <jjakob> * official docker image
[01:03:59] <jjakob> (maybe that functionality could be added to the official image... would they accept it if I created a PR?)
[01:06:19] <Slade> peerce: yea i'm in now, found wht the app was using
[01:06:35] *** Parts: rj1 (~rj1@i.dont.know.how.com.puters.work) ()
[01:07:00] <jjakob> using superuser and not having a simple way to create a non-superuser in the docker image is not good
[01:07:46] <jjakob> other db's like mysql, mariadb have it (the initdb script I wrote replicates that)
[01:10:20] *** Joins: zaher (~zaher@37.48.155.11)
[01:10:50] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[01:11:26] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 272 seconds)
[01:17:21] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[01:17:58] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 260 seconds)
[01:18:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:18:16] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[01:20:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:21:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:23:29] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 252 seconds)
[01:23:30] *** Joins: Reiner_Unsinn (~quassel@p579d7cd9.dip0.t-ipconnect.de)
[01:25:16] *** Quits: ksynwa (~kartik@2401:4900:1f25:3de5:4412:99f6:abbc:3b7b) (Quit: WeeChat 2.8)
[01:25:39] *** Joins: dre (~dre@2001:8003:c932:c301:941f:1abe:5ede:ae67)
[01:26:37] *** Quits: stark__ (~stark@192.222.248.88) (Ping timeout: 250 seconds)
[01:26:52] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: Ping timeout (120 seconds))
[01:28:41] *** Joins: stark__ (~stark@192.222.248.88)
[01:29:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[01:30:18] *** Joins: tnewman (~tnewman@118.150.44.48)
[01:30:27] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:33:07] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[01:33:14] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[01:34:15] *** Joins: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:208a:caae:5572:8d91)
[01:34:31] *** Quits: jochum (~quassel@user/jochum) (Quit: No Ping reply in 180 seconds.)
[01:34:31] <segfaultfizzbuzz> does postgresql have role-based access control or is that something i need to implement myself?
[01:35:13] <segfaultfizzbuzz> i know postgresql has row level authorization, but i don't mean to ask about that directly
[01:35:34] <peerce> most certainly does.   see:   create role,  grant, revoke
[01:35:49] *** Quits: fcr (~fran@r167-60-139-91.dialup.adsl.anteldata.net.uy) (Ping timeout: 240 seconds)
[01:35:49] <peerce> also alter .... owner rolename;
[01:35:56] *** Joins: jochum (~quassel@user/jochum)
[01:36:05] <segfaultfizzbuzz> ok thx i will take a look
[01:36:08] <peerce> there's access control on a database, schema, table, view, etc level.
[01:36:15] <peerce> as well as RLS which is a relatively new thing
[01:36:33] <segfaultfizzbuzz> i also feel a little weird about mixing database users with the users of my service...
[01:37:01] <segfaultfizzbuzz> one reason being that i don't think that is friendly to connection pooling
[01:37:20] <peerce> ah, yeah, because if its a webservice where things are 'stateless', it sucks
[01:37:29] <segfaultfizzbuzz> and if there is a "do as" command i would feel a little nervous about using it,... so i feel like i need to build my own rbac logic
[01:37:37] <peerce> I would handle application users in the application service.
[01:38:11] <segfaultfizzbuzz> right... so in the real world i might only have like "root" and "web application" users within postgres or something to that effect
[01:38:24] <peerce> app and dba roles, yeah
[01:39:06] <segfaultfizzbuzz> also relevant to this is like,... i have groups which associate to roles
[01:39:17] <segfaultfizzbuzz> but there is some structure to the groups
[01:39:52] <segfaultfizzbuzz> i have considered introducing something more complex than simply the group,... maybe both supergroup and group,...
[01:40:12] <segfaultfizzbuzz> and that got me thinking that perhaps i should simply work with paths... so this becomes something like a unix filesystem? lol
[01:40:31] <segfaultfizzbuzz> what wheel am i reinventing here
[01:40:37] <peerce> ??secondsystem
[01:40:37] <pg_docbot> Nothing found
[01:40:40] <peerce> ??second
[01:40:40] <pg_docbot> Nothing found
[01:40:46] <peerce> grrrrr.
[01:40:53] *** Quits: justyb11 (~justyb@64.253.212.72) (Quit: Leaving)
[01:41:10] <peerce> keep it simple, don't overly complicate things
[01:41:48] <segfaultfizzbuzz> so for example information sometimes is "pre-group"
[01:42:03] <segfaultfizzbuzz> that is, it doesn't yet have a group but it has a supergroup
[01:42:33] <peerce> huh.
[01:42:36] *** Joins: fcr (~fran@r167-60-45-238.dialup.adsl.anteldata.net.uy)
[01:42:44] <peerce> https://en.wikipedia.org/wiki/Second-system_effect
[01:42:55] <segfaultfizzbuzz> for example a student might be joining a school but they don't yet have a major
[01:43:09] <peerce> also https://en.wikipedia.org/wiki/Inner-platform_effect
[01:43:15] <peerce> so tthere major would be NULL
[01:43:17] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 252 seconds)
[01:43:21] <peerce> as in unknown/undefined.
[01:44:33] *** Quits: EvanCarroll (~ecarroll@172.56.15.131) (Ping timeout: 256 seconds)
[01:44:35] <segfaultfizzbuzz> i'm aware of this zanzibar thing,...
[01:45:01] *** Joins: Amadiro_ (~Amadiro@45.154.138.90)
[01:46:12] *** Quits: Amadiro (~Amadiro@45.154.138.40) (Ping timeout: 240 seconds)
[01:46:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:48:17] *** Joins: Shells (~michelle@203.206.128.220)
[01:48:34] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[01:50:04] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 272 seconds)
[01:50:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:52:46] *** Joins: Optimus (~risto@87.227.227.147)
[01:52:58] *** Joins: g2anj (~v@58.228.230.4)
[01:53:43] <segfaultfizzbuzz> i think maybe the next step up above just group and role is zanzibar or some other complex system
[01:53:54] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[01:55:10] *** Joins: tnewman (~tnewman@118.150.44.48)
[01:57:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:00:11] *** Joins: mamad (~mam@5.124.223.190)
[02:01:08] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 260 seconds)
[02:04:19] *** Quits: segfaultfizzbuzz (~segfaultf@2602:306:cd3c:9350:208a:caae:5572:8d91) (Ping timeout: 250 seconds)
[02:05:21] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:08:29] *** Joins: seifeslimene (~seifeslim@102.158.105.22)
[02:09:22] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:10:16] *** Joins: tnewman (~tnewman@118.150.44.48)
[02:11:34] *** Quits: stark__ (~stark@192.222.248.88) (Quit: Lost terminal)
[02:15:59] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 260 seconds)
[02:20:57] *** Quits: michalz (~michalz@185.246.204.125) (Remote host closed the connection)
[02:24:27] *** Parts: texasmynsted (~texasmyns@99.96.221.112) (WeeChat 3.4)
[02:24:45] <raptelan> ilmari: ahh, that row-level security thing makes sense to me now, since without --enable-row-security, pg_dump does a set row_security=off and thus fails to even try returning anything from the table, in case it might only be partial.
[02:25:26] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:26:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[02:29:06] *** elastic_1 is now known as elastic_dog
[02:29:09] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[02:29:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:35:40] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 272 seconds)
[02:37:34] *** Quits: kakashiA1 (~kakashi@37.84.2.12) (Ping timeout: 260 seconds)
[02:39:11] *** Quits: vnf_ (~vnf@85.175.252.98) (Quit: Leaving)
[02:40:08] *** Joins: vnf (~vnf@85.175.252.98)
[02:41:12] *** Joins: Optimus (~risto@87.227.227.147)
[02:42:41] *** Quits: dre (~dre@2001:8003:c932:c301:941f:1abe:5ede:ae67) (Ping timeout: 252 seconds)
[02:44:41] *** Joins: tnewman (~tnewman@118.150.44.48)
[02:56:50] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:59:35] *** Joins: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com)
[02:59:54] *** Quits: mamad (~mam@5.124.223.190) (Quit: Konversation terminated!)
[02:59:58] *** Quits: immae (~immae@2a01:4f8:141:53e7::) (Quit: WeeChat 2.9)
[03:00:42] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[03:02:03] *** Joins: jazzy (~jaziz@user/jaziz)
[03:02:08] <yetoo> So that sql script I was talking about that has a bunch of \ir . They are in between a begin; and commit; Some of them work but most of them fail. Does that mean the ones that worked are loaded or is everything rolled back if a \ir has an error? From some testing rolling back seems to be the case but just want to confirm
[03:04:04] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 260 seconds)
[03:04:37] *** Joins: dre (~dre@2001:8003:c932:c301:638:3121:7e52:64a6)
[03:05:04] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[03:06:31] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[03:06:44] *** Shells is now known as Michelle
[03:07:50] <adlaistevenson> ??paste
[03:07:50] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[03:07:50] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[03:11:16] <adlaistevenson> Hi there everyone. Finally found you guys after the move from freenode :-).
[03:13:18] <adlaistevenson> Anyway, I'm wondering how to go about solving slow inserts into this publish_queue table. The table grows every day and is now 44 million rows. Inserts are getting slow (querying is getting pretty slow too, even with those 5 indexes!): https://dpaste.org/1vmL What should I try?
[03:15:21] <adlaistevenson> (Hopefully, the dpaste link provides relevant context.)
[03:19:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:19:59] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:20:43] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:20:57] *** Joins: JanC (~janc@user/janc)
[03:23:43] <dre> split up the table? ie: put `status` fields in a status table?  (im newb so don't mind me)
[03:24:07] <dre> also how do you know that it's the query that's taking that long, and not the dart code?
[03:24:28] <dre> from me it looks like you're doing them one by one, for the whole list of items
[03:25:33] <peerce> do you leavve stuff in that queue after the subscribers have all acknowleged reception ?
[03:26:27] *** Quits: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com) (Quit: Client closed)
[03:27:14] <peerce> does old data /ever/ get looked at once its been processed ?
[03:31:25] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:32:58] *** Quits: vnf (~vnf@85.175.252.98) (Quit: Leaving)
[03:34:01] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:34:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[03:34:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:34:48] *** Joins: Shells (~michelle@2407:8800:bc20:200a:7c00:910f:8e36:433c)
[03:36:15] *** Joins: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[03:37:23] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 260 seconds)
[03:37:37] *** Joins: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com)
[03:38:23] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:38:43] <adlaistevenson> peerce: Yes I do. In case it is relevant, this is Postgres 9.3 (I am working on getting it upgraded but need to sort this).
[03:39:44] *** Joins: ivii (~ivan@user/ivii)
[03:40:57] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:40:57] <peerce> thats really ancient now.
[03:41:42] *** Quits: immae (~immae@2a01:4f8:141:53e7::) (Quit: WeeChat 3.3)
[03:41:58] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 260 seconds)
[03:42:57] <adlaistevenson> Yep, the whole server should be in a museum. ;-)
[03:43:20] *** Quits: sympatico (~textual@ip184-181-47-47.no.no.cox.net) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:44:22] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[03:44:22] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:45:23] <adlaistevenson> I am working on an upgrade to a new Postgres (testing), which is a whole other thing to figure out. Unfortunately, this INSERT problem has come up now and stopped me in my tracks.
[03:46:30] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[03:47:52] <adlaistevenson> dre: Good question. Let me see if I can get a measurement from pg_stat_statements.
[03:48:23] *** Quits: raptelan (~raptelan@208.127.242.46) (Ping timeout: 260 seconds)
[03:50:06] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[03:50:08] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:50:41] *** Quits: randir (~randir@95-31-138-202.broadband.corbina.ru) (Ping timeout: 246 seconds)
[03:50:44] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:52:55] <adlaistevenson> dre: Average time is about 4 seconds. You might be right. However, the performance of the INSERT has definitely degraded.
[03:53:31] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[03:54:16] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:55:05] *** Quits: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Remote host closed the connection)
[03:55:26] *** Joins: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[03:56:06] *** Joins: epony (epony@user/epony)
[03:56:15] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:58:11] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:58:38] <adlaistevenson> Rows are never deleted from the publish_queue table as the table serves also as a log which is queried to prevent duplicate sends of the same content_id to the same person_id. Perhaps this is wrong?
[04:00:07] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[04:01:32] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[04:06:26] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[04:11:02] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:12:30] <adlaistevenson> What if I have two tables: publish_queue and publish_queue_archive. A cron job nightly moves older rows from the former into the later so publish_queue table stays small. The publish_queue_archive table has fewer columns -- just person_id, content_id -- and is used merely to suppress re-sending the same content_id to the same person_id.
[04:16:56] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:18:36] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:9dc9:ab61:a07a:fc38) (Ping timeout: 240 seconds)
[04:20:07] <peerce> so that means you need to look each new published row up in this old table?
[04:20:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:21:11] <adlaistevenson> Yes, to see if they've been published the same content_id already.
[04:21:19] <peerce> we did publish subscribe rather differently.     queue table just had undelivered stuff in it.   each subscriber had a entry for its last recieved record..      everything older than the oldest last recieved can be delieted.
[04:21:36] <peerce> you always publish in the order recieved so you don't need to look up each record
[04:22:06] *** Joins: Optimus (~risto@87.227.227.147)
[04:22:21] <adlaistevenson> That is a lot nicer than what I have here. Neat.
[04:22:22] <peerce> each time you process a subscriber, it reads as many as it can handle at once, and advances its pointer.
[04:22:50] <peerce> you do need to monitor for stalled subscribers and alert when they exceed some threshold
[04:23:35] <adlaistevenson> Hmm. Problem is, the user can publish any content_id to them at any time. A content_id is basically a knowledge base article. If they've already seen it, they aren't published to again.
[04:23:44] <peerce> oh, and each publish topic probably should have its own queue table, with its own subscribers.  a given subscriber can subscribe to multiple topics but has to track the separately
[04:24:02] <peerce> they republish stuff that was already published and hasn't changed ?
[04:24:03] <peerce> huh.
[04:24:11] <peerce> thats not how pub/sub MQ systems normally work.
[04:24:19] <adlaistevenson> Yeah, often to new people in the database.
[04:24:49] <peerce> so your publications are directed to specific subscribers?
[04:25:12] <peerce> thats normally done via  'topic', ever published record has a topic, and each subscriber chooses the topics it wants to subscribe to
[04:25:46] <peerce> we actually did all this outside the database, using round robin style buffers that could overflow to spool files.
[04:26:16] <peerce> there's a bajillion systems like that, rabbitmq, ams, etc etc.
[04:26:19] <adlaistevenson> Well, they are directed to subscribers who are opted-in (and often if they belong to a certain group).
[04:28:22] <adlaistevenson> Hmm, how would it remember who was sent what content_id so that, a few years later, the person isn't published the same content_id again? Keep in mind, there are literally hundreds of thousands of content_ids (uuid). :-\
[04:29:07] <peerce> our subscribers by definition were only interested in new stuff.  old stuff was already processed and in the database
[04:29:25] <adlaistevenson> Ah.
[04:29:37] <peerce> we used pub/sub to glue our how factory floor system together, from the front line test equipment to the various backend databases
[04:30:01] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:41] *** Joins: bertptrs (~quassel@user/bertptrs)
[04:31:11] *** Joins: Guest8570 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp)
[04:32:23] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[04:32:25] <adlaistevenson> My problem is, essentially, I need to be able to: 1) Remember who was sent what content_id for years 2) Query that table (or whatever it is) efficiently to determine who has been published to already.
[04:32:25] <adlaistevenson> I'm thinking a simple table with very few columns: Just (person_id, content_name, content_id). But will it hold up with 44 million rows, and a quarter billion rows in the near future?
[04:33:07] <peerce> partition that by person_id ranges or hashes so its managable.
[04:33:11] <adlaistevenson> BTW, I appreciate your explanation of your pub/sub system as it seems elegantly done. :-)
[04:35:13] <adlaistevenson> Basically all I need is a giant Set<String> where each member of the set is personId+contentName+contentId, but persisted to disc and not living in RAM haha.
[04:36:00] *** Quits: Guest8570 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 272 seconds)
[04:36:37] <adlaistevenson> That's interesting: https://www.postgresql.org/docs/current/ddl-partitioning.html My understanding: So, I'd partition by person_id uuid ranges. Then, postgres could appropriately redirect the query to the right table based on the range.
[04:37:20] <peerce> or you could parttion by _name ... with uuid's, I'd probably use hash partitioning since UUIDs are so random, range doesn't make much sense
[04:37:37] <peerce> is the content_name field like a 'topic' ?
[04:38:07] <adlaistevenson> Not really, and it almost always is the same value ('article').
[04:38:12] <peerce> a category of the content that a user subscribes to ?
[04:38:34] <peerce> how do you know what content a given subscriber is interested in ?
[04:38:37] <adlaistevenson> Partitioning by content_id could work as they'll be a lot of people sent the same content_id.
[04:39:02] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[04:39:03] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:39:05] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[04:40:13] <adlaistevenson> It is possible to know based on their being in certain groups (a junction table linking to their person_id).
[04:40:26] <adlaistevenson> (But this isn't always used.)
[04:40:34] <peerce> this sounds poorly thought out
[04:41:01] <peerce> the publisher should publish content under a 'topic' or 'category' or something.   a subscriber specifies the topics/categories its interested in.
[04:41:02] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:41:16] <peerce> and every message has this topic or category or whatever youw ant to call it field.
[04:41:31] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[04:41:31] <peerce> the publisher shouldn't have to keep track of the subscribers, thats the job of the messaging middleware
[04:42:33] *** Joins: dznfdavnz (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:43:12] <adlaistevenson> It's a good thought & you're probably right. Not something I can change.
[04:43:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:43:47] <peerce> so how does a given publication of a content get mapped to these groups ?
[04:44:15] *** Joins: Bebef (sbreit@phobos.bebef.de)
[04:44:25] <adlaistevenson> When the user wants to publish the content_id, they select the groups they want to publish to.
[04:45:02] *** Joins: randir (~randir@95-31-138-202.broadband.corbina.ru)
[04:45:39] <peerce> then you need to look up every message against every subscribers previously read list, which could run ingo the 100s of millions?   thats not going to scale at all well
[04:46:20] <peerce> and every time you think a new subscriber has joined a group, you need to republish everything to that group?  *OUCH*
[04:46:23] <adlaistevenson> Yes, currently 44 million rows. I of course use an index.
[04:46:28] <peerce> gotta go
[04:46:41] <adlaistevenson> I really appreciate your candor and advice.
[04:47:01] <adlaistevenson> Thanks peerce. Yeah, it is very worrying.
[04:47:24] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 272 seconds)
[04:50:54] *** Quits: immae (~immae@2a01:4f8:141:53e7::) (Quit: WeeChat 3.3)
[04:51:19] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[04:53:30] *** Joins: uncleyear (~ian@31.173.80.95)
[04:53:49] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[04:54:11] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 260 seconds)
[04:54:39] *** Quits: immae (~immae@2a01:4f8:141:53e7::) (Client Quit)
[04:55:09] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[04:56:00] *** Joins: concrete-houses (~g@209.6.150.53)
[04:56:02] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Client Quit)
[04:57:23] *** Joins: xiongxin (~Thunderbi@117.136.33.222)
[05:00:38] <yetoo> is it possible to check if text is null with check constraint? I need to ensure a column is null.
[05:01:20] *** Quits: immae (~immae@2a01:4f8:141:53e7::) (Quit: WeeChat 3.3)
[05:02:01] *** Joins: immae (~immae@2a01:4f8:141:53e7::)
[05:02:25] <xocolatl_> CHECK (column IS NULL)
[05:02:32] *** xocolatl_ is now known as xocolatl
[05:03:18] *** Quits: xiongxin (~Thunderbi@117.136.33.222) (Read error: Connection reset by peer)
[05:03:26] *** Quits: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com) (Quit: Client closed)
[05:04:05] <yetoo> xocolatl_: is it possible to check two columns with one check
[05:04:16] <xocolatl> yes
[05:05:17] <yetoo> and then compare aginst result of each null?
[05:05:48] <yetoo> timeout_date is null = timeout_state is null yields ERROR:  operator does not exist: boolean = text
[05:05:51] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f)
[05:09:52] <xocolatl> what are you trying to do with = there?
[05:10:19] <xocolatl> do you want both or neither?
[05:10:28] <yetoo> xocolatl I need to make sure both columns are null
[05:10:42] <xocolatl> timeout_date is null and timeout_state is null
[05:11:53] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[05:13:56] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[05:17:43] *** Quits: AceSlash (~slash@2a01:e0a:432:c050:cd12:393c:3664:2a6e) (Ping timeout: 260 seconds)
[05:20:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[05:23:34] *** Joins: favadi (~favadi@2001:ee0:4081:6914:4466:e3ad:3666:affe)
[05:25:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[05:32:23] *** Joins: tozhu (~tozhu@117.139.163.129)
[05:34:55] *** Quits: rvgate (~rvgate@user/rvgate) (Read error: Connection reset by peer)
[05:35:10] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[05:35:35] *** Joins: rvgate (~rvgate@user/rvgate)
[05:44:15] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 256 seconds)
[05:44:26] *** Quits: zaher (~zaher@37.48.155.11) (Ping timeout: 246 seconds)
[05:48:50] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 272 seconds)
[05:50:04] <yetoo> I get   syntax error at or near "desc"
[05:50:05] <yetoo> LINE 3:  desc text . code is create tablename (type text primary key, desc text) WITHOUT OIDS;
[05:51:00] <yetoo> why is that there are plenty other instances of desc text at end with no error
[05:53:00] *** Quits: favadi (~favadi@2001:ee0:4081:6914:4466:e3ad:3666:affe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:53:17] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[05:56:43] *** Quits: f3f3lix (~weechat@55d4d8f5.access.ecotel.net) (Ping timeout: 256 seconds)
[05:57:17] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[05:57:59] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[05:58:12] *** Joins: f3f3lix (~weechat@55d49a29.access.ecotel.net)
[05:58:58] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 272 seconds)
[05:59:30] *** Quits: plugwash (~plugwash@2a02:c7f:bce9:2d00::2) (Remote host closed the connection)
[06:00:17] *** Quits: MrZeus (~MrZeus@194.37.96.151) (Ping timeout: 260 seconds)
[06:00:52] *** Quits: n0fun (~jack@mue-88-130-48-078.dsl.tropolys.de) (Ping timeout: 272 seconds)
[06:01:02] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: The Lounge - https://thelounge.chat)
[06:01:37] *** Joins: tnewman (~tnewman@118.150.44.48)
[06:03:51] *** Quits: tnewman (~tnewman@118.150.44.48) (Client Quit)
[06:07:31] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[06:07:51] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[06:10:39] *** Joins: favadi (~favadi@2001:ee0:4081:6914:f515:3fd0:10f1:6a2)
[06:12:04] *** Joins: tnewman (~tnewman@118.150.44.48)
[06:20:49] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:21:06] <tbe_loki> Has anyone managed it to corrupt a gin index with massive parallel updates on it? `PANIC:  failed to add item to index page in "event_event_details_idx"` Or seen a bug. I'm in a post mrtem analysis of a crash with corruption on a pg 11.15
[06:21:37] <yetoo> *correction code is create TABLE tablename (type text primary key, desc text) WITHOUT OIDS;
[06:25:12] *** Joins: concrete-houses (~g@209.6.150.53)
[06:34:44] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:41:23] *** Joins: EvanCarroll (~ecarroll@4.78.9.20)
[06:52:58] *** Joins: xiongxin (~Thunderbi@117.136.33.222)
[06:57:03] *** Quits: xiongxin (~Thunderbi@117.136.33.222) (Read error: Connection reset by peer)
[06:57:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:57:40] *** Quits: seifeslimene (~seifeslim@102.158.105.22) (Ping timeout: 250 seconds)
[06:58:04] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[07:00:18] *** Quits: u4ia_ (~u4ia@2a10:3781:18fd:1:53d4:805b:c8e3:1629) (Ping timeout: 260 seconds)
[07:01:16] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Client Quit)
[07:01:34] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[07:01:35] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[07:02:03] *** Joins: u4ia_ (~u4ia@2a10:3781:18fd:1:53d4:805b:c8e3:1629)
[07:04:08] *** Quits: amenonsen (~amenonsen@pitta.toroid.org) (Remote host closed the connection)
[07:05:32] *** Joins: amenonsen (~amenonsen@pitta.toroid.org)
[07:06:04] *** Joins: tozhu (~tozhu@117.139.163.129)
[07:08:25] *** Quits: tozhu (~tozhu@117.139.163.129) (Client Quit)
[07:10:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:10:38] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:11:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:11:55] *** Joins: tozhu (~tozhu@117.139.163.129)
[07:15:00] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[07:15:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[07:16:26] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:20:01] *** Quits: xinming (~xinming@115.219.39.250) (Ping timeout: 256 seconds)
[07:21:56] *** Joins: funhouse (~funhouse@user/funhouse)
[07:25:23] *** Quits: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 260 seconds)
[07:27:17] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:ddb5:4ce2:c45a:c059)
[07:27:28] *** Joins: gearnode1 (~gearnode@2a01cb0003a40300f22f74fffedefec1.ipv6.abo.wanadoo.fr)
[07:28:13] *** Quits: gearnode (~gearnode@2a01cb0003a40300f22f74fffedefec1.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[07:31:24] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Quit: xiongxin)
[07:31:25] *** Joins: xiongxin1 (~Thunderbi@117.136.33.222)
[07:33:38] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 252 seconds)
[07:33:45] *** xiongxin1 is now known as xiongxin
[07:33:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:37:07] *** Quits: op2 (~op2@user/op2) (Ping timeout: 246 seconds)
[07:38:04] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[07:41:45] *** Quits: xiongxin (~Thunderbi@117.136.33.222) (Read error: Connection reset by peer)
[07:42:25] <yetoo> I needed to quote the column name, sql was thinking it was a key word
[07:48:22] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 250 seconds)
[07:50:05] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[07:56:33] *** Joins: jim (~jim@about/linux/staff/jim)
[08:01:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[08:03:23] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 260 seconds)
[08:03:23] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[08:07:03] *** Quits: sreve (~quassel@p54a71c9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:07:14] *** Joins: sreve (~quassel@p4ff44a40.dip0.t-ipconnect.de)
[08:07:49] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[08:13:27] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[08:16:55] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[08:17:15] *** Joins: funhouse (~funhouse@user/funhouse)
[08:20:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:25:31] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Ping timeout: 256 seconds)
[08:26:03] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 260 seconds)
[08:26:42] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[08:29:48] *** Joins: seanick (~seanick@146.196.32.83)
[08:30:52] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:32:03] *** Quits: realies (~realies@user/realies) (Quit: ~)
[08:34:13] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[08:34:35] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[08:37:56] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:39:31] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 250 seconds)
[08:39:46] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 246 seconds)
[08:40:15] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[08:40:51] *** Joins: realies (~realies@user/realies)
[08:42:28] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f) (Ping timeout: 260 seconds)
[08:48:04] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[08:56:10] *** Joins: tozhu (~tozhu@117.139.163.129)
[08:56:46] *** Quits: dznfdavnz (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: dznfdavnz)
[09:02:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:15:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:15:31] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[09:22:00] <Jonno_FTW> is it possible to EXPLAIN a query and also get an idea of where time is being spent in each step?
[09:22:05] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[09:25:07] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[09:26:43] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Ping timeout: 260 seconds)
[09:29:16] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[09:31:38] <pnorman> Jonno_FTW: EXPLAIN ANALYZE will run the query and provide a breakdown of time
[09:33:05] <peerce> Jonno_FTW; and that EXPLAIN ANALYZE output can be pasted on https://explain.depesz.com/ to be formatted and summarized
[09:40:25] *** Quits: dre (~dre@2001:8003:c932:c301:638:3121:7e52:64a6) (Ping timeout: 250 seconds)
[09:40:45] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:41:13] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[09:45:47] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[09:45:51] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[09:48:31] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[09:49:43] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:50:10] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[09:50:29] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[09:50:42] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[09:51:27] *** Quits: cliluw (~cliluw@47.147.77.43) (Quit: Leaving)
[09:52:09] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[09:52:16] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[09:52:44] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[09:53:38] *** Quits: favadi (~favadi@2001:ee0:4081:6914:f515:3fd0:10f1:6a2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:42] *** Joins: peerzzzz (mudshark@2601:647:c980:247:4c23:f1bf:4bbc:9940)
[09:55:44] *** Quits: libsys (~libsys@186.105.161.48) (Ping timeout: 246 seconds)
[09:55:48] *** Quits: peerce (mudshark@2601:647:c980:247:cc04:640a:7ce4:93d3) (Ping timeout: 240 seconds)
[09:55:58] *** Joins: libsys (~libsys@186.105.160.62)
[09:59:00] *** Quits: seanick (~seanick@146.196.32.83) (Ping timeout: 272 seconds)
[10:01:29] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[10:02:01] *** Joins: mattil (~mattil@176-93-148-104.bb.dnainternet.fi)
[10:06:51] *** Quits: mattil (~mattil@176-93-148-104.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[10:12:53] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 260 seconds)
[10:13:55] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[10:14:25] *** Joins: dre (~dre@2001:8003:c932:c301:d3ef:a188:4933:10bd)
[10:14:41] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:15:47] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[10:18:08] *** Joins: manti7 (~manti7@176.10.104.94)
[10:18:41] *** Joins: TomTom (uid45892@id-45892.ilkley.irccloud.com)
[10:20:29] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[10:22:17] *** Joins: rvalue (~rvalue@user/rvalue)
[10:22:42] *** Quits: dre (~dre@2001:8003:c932:c301:d3ef:a188:4933:10bd) (Quit: Leaving)
[10:23:49] *** Joins: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708)
[10:25:00] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:ddb5:4ce2:c45a:c059) (Ping timeout: 240 seconds)
[10:27:08] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:27:20] *** peerzzzz is now known as peerce
[10:27:35] *** Joins: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[10:28:09] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[10:29:05] <Jonno_FTW> is there a way to prevent result caching? My query takes 3s, running it immediately after it takes 0.6s
[10:29:24] <Berge> Jonno_FTW: Postgres isn't caching results
[10:29:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:29:35] <Jonno_FTW> then how did it happen?
[10:29:38] <peerce> postgres is caching data, so is your operating system
[10:29:43] <Berge> But there is a postgres-internal disk cache, and your OS will have cached stuff
[10:29:49] <Berge> peerce: But not results
[10:29:58] <peerce> yeah, just data blocks and files
[10:30:08] <Berge> It's the disk reads that are sped up, the query still gets planned and executed anew
[10:30:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:30:24] <Berge> Jonno_FTW: What do you want to achieve?
[10:30:29] <peerce> if your indexes fit in shared_buffers things get greatly sped up once your system has seeded itself.
[10:30:33] <Jonno_FTW> well how do I optimize a particular query given this?
[10:30:47] <peerce> do the query with different data and a lot of it
[10:30:57] <Berge> Jonno_FTW: You asked about _preventing_ caching?
[10:31:24] <Jonno_FTW> I just need the query to be fast when data isn't cached beforehand
[10:31:34] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:31:39] <Berge> At any rate: Run it under EXPLAIN (ANALYZE, BUFFERS, TIMINGS) SELECT .. and use explain.depesz.com, and post the link here
[10:31:49] <Berge> Then we'll see where time is spent
[10:31:50] <Jonno_FTW> okay one sec
[10:31:53] *** Quits: mattil (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Ping timeout: 256 seconds)
[10:32:14] <Berge> (I have to hop on a flight shortly, so I might have to suddenly pop out – but do hang around, there are other people here who'll be able to help)
[10:32:26] *** Joins: ekathva_ (~ekathva@mobile-access-b04823-216.dhcp.inet.fi)
[10:33:49] *** Quits: jochum (~quassel@user/jochum) (Read error: Connection reset by peer)
[10:33:50] *** Quits: ekathva_ (~ekathva@mobile-access-b04823-216.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:34:12] <Berge> Jonno_FTW: If you're on linux, you can drop OS caches with: echo 3 > /proc/sys/vm/drop_caches
[10:34:23] <Jonno_FTW> I don't have access to the machine
[10:34:24] <Berge> That will still leave postgres' cache, which you can clear by restarting postgres
[10:34:39] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[10:34:52] <Berge> Then a few things will become much harder
[10:35:00] <Berge> But let's see that EXPLAIN ANALYZE output
[10:35:03] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 260 seconds)
[10:35:15] <humanBird> is there truly seamless failover in postgresql with no downtime?
[10:35:49] <Berge> humanBird: Nothing is that absolute
[10:36:13] <Berge> But there are mechanisms and methods to help achieve a very small window of downtime in happy cases
[10:38:01] <Jonno_FTW> this explain is 300 lines long
[10:38:06] *** Joins: jochum (~quassel@user/jochum)
[10:38:07] <Berge> So?
[10:38:18] <peerce> big complex query with that many nodes, eh?
[10:38:31] <Berge> Sounds like something that can be slow, yeah (-
[10:38:39] <Berge> But the output will allow us to see _where_ it's slow
[10:38:40] <Jonno_FTW> https://explain.depesz.com/s/hIsc
[10:39:04] <peerce> 25 milliseconds isn't 'slow'
[10:39:07] <Berge> Jonno_FTW: So that executes i 300ms
[10:39:15] <Berge> peerce: Look at the planning time, though (-:
[10:39:17] <Jonno_FTW> when I ran it the first time it took 3s
[10:39:31] <Berge> What are these _hyper tables?
[10:39:33] <peerce> hah, oh.
[10:39:39] <Berge> Is this actual postgres, or is it something like timescaledb?
[10:39:46] <Jonno_FTW> it's using timescaledb
[10:39:53] <Berge> ok, right, so that's not actual postgres
[10:39:59] <Berge> And I know very little about it, and haven't used it
[10:40:06] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[10:40:13] <Berge> It's the sort of thing that's great to mention at the start (-:
[10:40:15] <peerce> me either
[10:40:21] <Jonno_FTW> these chunks are small compressed tables
[10:40:33] <humanBird> what are these tools called?  i'm juust beginning... i have a django postgres db with not much in it.  but i like to think ahead of time.  was thinking about using linode, aws and a 3rd provider to "house" my db instances (all the same copy?)  And possibly buying one of those big boxes at Best Buy that read "40 TB backup storage" for a physical
[10:40:33] <humanBird> thing i can touch.  was also looking at pg-pool-II.  Read something about hot/warm standby.  That seems to be the strategy I want.  Anyways, maybe this is all paranoid but i'm reading horror stories about individuals who destroy data, Digital ocean and their automated "stop hacking" scripts that auto shut down and deny acces for days etc etc
[10:40:34] <humanBird> etc.  Is it a good time to delve into this?  i have a kubernetes cluster on digital ocean, but again, app is not really that big.
[10:40:52] <Berge> But it is scanning a lot of indexes over a lot of tables
[10:41:02] <peerce> wow, thats a big wall of stream of concious
[10:41:03] <Berge> And that planning time is several orders of magnitude away from good
[10:41:23] <humanBird> i'm also reading about some cluster schemes where each database is a backup of every other database in a cluster
[10:41:49] <peerce> what specific problem do you need to solve now ?
[10:41:59] <peerce> vague questions get vague answers
[10:42:00] <humanBird> recovery/backup + high availaibility
[10:42:03] <Berge> humanBird: Look into stuff like pg_auto_failover or patroni, and possibly combine with pgbouncer (especially with its PLAY/PAUSE features). But distributed systems are hard, and there are no one-size-fits-all
[10:42:06] *** Joins: mexen (uid495612@user/mexen)
[10:42:27] *** Joins: Bebef (sbreit@phobos.bebef.de)
[10:42:35] <Berge> humanBird: In my experience, attempts to make something very highly available introduces complexities that cause more downtime than a simple system would
[10:42:59] <peerce> there are some postgres forks that deal with parallelism, usually for data warehouse/reporting kind of apps.
[10:43:08] <peerce> OLAP
[10:43:08] <Berge> Very, very few systems (or customers) actually require – or want to pay for – the sort of system that is very, very highly available
[10:43:21] <humanBird> basically you would advocate some kind of dump, and reloadiing the dump if something happens?
[10:43:32] <Berge> It's fun to play with, and you should absolutely do that, but running distributed systems in production requires care
[10:43:38] <Berge> Am I?
[10:43:41] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Ping timeout: 246 seconds)
[10:43:57] <peerce> humanBird; what sort of something are you thinking of?   a nuclear bomb destroying the data center?
[10:44:02] <xiaomiao> if you build a HA system you need to trigger failover regularly to be sure it actually works
[10:44:04] <Berge> That can be completely reasonable in many cases.
[10:44:05] *** Shells is now known as Michelle
[10:44:11] <Berge> PITR is also very reasonable.
[10:44:16] <xiaomiao> otherwise you'll learn when stuff is on fire that it's a lot on fire
[10:44:26] *** Joins: seanick (~seanick@146.196.32.83)
[10:44:31] *** Joins: mattil (~mattil@176-93-148-104.bb.dnainternet.fi)
[10:44:34] <Berge> Depends on your RTO and PRO targets
[10:44:39] <peerce> yeah, PITR w/ regular base backups is especially good for disaster recovery
[10:44:42] <Berge> Ie Recovery Time Objetive and Recovery Point Objective
[10:45:06] <Berge> And there's a difference between planned outages (say because you upgrade Postgres) and disaster recovery
[10:45:16] <Berge> Which require different methods
[10:45:16] <humanBird> https://twitter.com/w3nicolas/status/1134529316904153089?lang=en  i'm afraid of this.  i would like to have multiple providers for my data
[10:45:44] <Berge> humanBird: That's a reasonble thing to plan for, but what would your RTO be in that case?
[10:45:45] <peerce> DR usually has a day recovery time, thats to deal with major disasters.    building burned down.
[10:46:04] *** Joins: mattil_ (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi)
[10:46:05] <xiaomiao> Berge: but you still want to be sure your protocols for failover work, and that is best done with a proper failover
[10:46:08] <Berge> I'm a fan of storing either PITR or timely full dump backups in $other_provider's bucket storage thing
[10:46:16] <Berge> Say, if you're on AWS, store backups on GCP.
[10:46:22] <xiaomiao> ooh, expensive :)
[10:46:27] <Berge> No, very, very cheap
[10:46:40] <xiaomiao> (I've heard of one case where the data transfer cost was the limiting factor)
[10:47:51] <humanBird> it does sound like dumping terabytes of data out of a box in some host would eat up bandwidth
[10:48:45] <humanBird> If i say, I would like the whole recovery process to take a few minutes, is that being unrealistic?
[10:48:55] *** Joins: maxzor (~maxzor@2a01cb04054faa008ccf64ee8021dfab.ipv6.abo.wanadoo.fr)
[10:49:12] <peerce> our databases ran factories, so they logically had to be located at the factory they were running, with on site dual datacenter fiber-connected kind of redundancy.
[10:49:19] *** Quits: mattil (~mattil@176-93-148-104.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[10:49:26] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Ping timeout: 252 seconds)
[10:49:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:50:47] *** Joins: mattil (~mattil@176-93-148-104.bb.dnainternet.fi)
[10:50:48] <Berge> humanBird: If you have terabytes of data in postgres, you need some careful planning indeed
[10:50:49] *** Quits: mattil (~mattil@176-93-148-104.bb.dnainternet.fi) (Remote host closed the connection)
[10:50:58] *** Joins: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi)
[10:51:10] <Berge> Then RTO of a few minutes will require replicaiton, at the very least
[10:52:25] *** Joins: darutoko (~darutoko@37.21.218.242)
[10:52:59] *** Joins: tnewman3 (~tnewman@118.150.44.48)
[10:53:13] <Berge> humanBird: Look into built-in replication and get familiar with that. Then take a look at say pg_auto_failover (which I personally like, and will be moving our production environment to soon), patroni or any of the other similar tools. Look into WAL arhciving and get familiar with it, then look into stuff like pgbackrest, WAL-E or WAL-G (or similar tools)
[10:53:17] *** Quits: mattil_ (~mattil@d5z9ccvrfm3gyyhkg7y-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[10:53:39] <Berge> humanBird: Then consider if all this complexity – and operational know-how – is worth it.
[10:54:03] *** Joins: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net)
[10:54:20] <humanBird> well. if i understand all this, maybe i'll be slightly qualified for a DBA job.
[10:54:24] *** Joins: uncleyear (~ian@31.173.80.95)
[10:54:42] *** Quits: deebo (~globe@stonebay32.com) (Quit: reboot)
[10:54:53] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 246 seconds)
[10:54:53] *** tnewman3 is now known as tnewman
[10:54:59] <Berge> The postgres setup I've run that I'm probably the most proud of, and that's had the absolute best availability, was a single, physical server, with WAL archiving for PITR, and some simple operational playbooks for upgrades and the like
[10:56:10] <Berge> It ran for years and years, with excellent availability. It had the occasional period of unavailability when rebooting the server or one or two postgres major upgrades. But it was cheap, it was robust, it was understandable by tech people who aren't intimately familiar with postgres, and Just worked.
[10:57:30] <humanBird> gotcha.  one last question before i go deep diving some technical doc.  Is the WAL bigger in size than the actual instance or about the same? sounds like it's basically like a dump but a record of things that happened to the databaase
[10:57:30] *** Quits: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz) (Read error: Connection reset by peer)
[10:57:45] <Berge> At current job, we have a relatively simple patroni setup, but it's still much, much more complex, harder to reason about, and has been the cause of more unavailability than I'm proud of.
[10:57:48] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[10:58:02] <Berge> humanBird: The WAL is a stream of data
[10:58:23] <Berge> If you store all of it, it'll continue to grow indefinitely
[10:58:39] *** Joins: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr)
[10:58:45] <Berge> But I have to pop out!
[11:00:57] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[11:02:18] *** Joins: xiongxin (~Thunderbi@117.136.33.222)
[11:02:50] *** Joins: michalz (~michalz@185.246.204.61)
[11:02:55] <peerce> complexity is the enemy of reliability.
[11:08:16] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:12:23] *** Joins: meialuadecompass (uid505943@id-505943.ilkley.irccloud.com)
[11:13:07] *** Quits: bird8 (~bird@136-25-143-22.cab.webpass.net) (Quit: bird8)
[11:14:03] *** Quits: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz) (Ping timeout: 260 seconds)
[11:14:44] *** Joins: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8)
[11:14:53] *** Joins: bird8 (~bird@136-25-143-22.cab.webpass.net)
[11:15:45] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[11:16:58] <rk4> i can't hear you over my distributed serverless CRUD app's alerts pager
[11:17:57] <peerce> hah hah.
[11:18:12] *** Quits: azlev (~azlev@189.120.73.227) (Ping timeout: 240 seconds)
[11:18:22] *** Quits: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:18:27] <peerce> I can imagine a constant stream of bizzaro/bullshit alerts over SMS ... ugh!
[11:18:48] *** Joins: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi)
[11:19:35] *** Joins: op2 (~op2@user/op2)
[11:20:22] *** Joins: azlev (~azlev@189.120.73.227)
[11:21:20] *** Joins: john_johnk (~Thunderbi@2a02-8428-013e-4001-dd18-b2b3-2d0c-2ea6.rev.sfr.net)
[11:21:57] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[11:22:51] *** Joins: koo5_ (~quassel@51.140.155.227)
[11:23:01] *** Quits: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[11:23:36] *** Joins: DevAntoine (~DevAntoin@78.193.133.12)
[11:25:20] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[11:26:49] *** Joins: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi)
[11:28:08] *** Quits: DevAntoine (~DevAntoin@78.193.133.12) (Ping timeout: 260 seconds)
[11:29:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:30:41] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[11:31:09] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Read error: Connection reset by peer)
[11:32:58] *** Quits: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi) (Remote host closed the connection)
[11:33:25] *** Joins: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi)
[11:33:55] *** Joins: xocolatl_ (~xocolatl@138.199.15.167)
[11:36:43] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 256 seconds)
[11:37:14] *** xocolatl_ is now known as xocolatl
[11:37:17] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[11:37:51] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:37:58] *** Quits: mattil (~mattil@d5z9ccdfmyl1jmjj16z-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[11:38:04] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:39:29] *** Joins: palasso (~palasso@user/palasso)
[11:39:52] *** Joins: Guest1 (~Guest1@42.111.18.7)
[11:43:54] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:46:59] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[11:47:22] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 260 seconds)
[11:47:37] *** Joins: vladoski (~vladoski@host-95-232-62-77.retail.telecomitalia.it)
[11:51:54] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[11:54:16] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 272 seconds)
[11:55:58] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[11:58:09] *** Joins: shka (~herr@109.231.3.55)
[12:00:41] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[12:01:16] *** Joins: atal181 (uid506288@id-506288.uxbridge.irccloud.com)
[12:01:41] *** Quits: Guest1 (~Guest1@42.111.18.7) (Quit: Connection closed)
[12:01:58] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 260 seconds)
[12:02:34] *** Joins: xinming (~xinming@115.219.37.168)
[12:06:03] *** Quits: seanick (~seanick@146.196.32.83) (Ping timeout: 260 seconds)
[12:09:40] *** Quits: vladoski (~vladoski@host-95-232-62-77.retail.telecomitalia.it) (Read error: Connection reset by peer)
[12:16:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a)
[12:16:46] *** Joins: Optimus (~risto@87.227.227.147)
[12:17:23] *** Quits: Optimus (~risto@87.227.227.147) (Client Quit)
[12:17:43] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-dd18-b2b3-2d0c-2ea6.rev.sfr.net) (Ping timeout: 250 seconds)
[12:20:04] *** Joins: Optimus (~risto@87.227.227.147)
[12:20:24] *** Quits: Optimus (~risto@87.227.227.147) (Client Quit)
[12:22:02] *** Joins: Optimus (~risto@87.227.227.147)
[12:24:17] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[12:31:31] *** Quits: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net) (Ping timeout: 260 seconds)
[12:31:56] *** Joins: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net)
[12:35:17] *** Joins: randir_ (~randir@95-31-138-202.broadband.corbina.ru)
[12:36:35] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[12:37:42] *** Quits: randir (~randir@95-31-138-202.broadband.corbina.ru) (Ping timeout: 260 seconds)
[12:39:19] *** Joins: seanick (~seanick@146.196.32.83)
[12:39:32] *** Quits: seanick (~seanick@146.196.32.83) (Read error: Connection reset by peer)
[12:41:03] *** Joins: seanick (~seanick@146.196.32.83)
[12:41:23] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:42:30] *** Joins: Atque (~Atque@user/atque)
[12:43:44] *** Quits: seanick (~seanick@146.196.32.83) (Read error: Connection reset by peer)
[12:49:04] *** Joins: merzo1 (~Thunderbi@192.162.238.196)
[12:51:23] *** merzo1 is now known as merzo
[12:52:46] *** Joins: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c)
[12:53:11] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[12:55:48] *** Quits: maxzor (~maxzor@2a01cb04054faa008ccf64ee8021dfab.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:59:29] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[13:00:35] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 256 seconds)
[13:02:15] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[13:02:26] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:08:27] *** Joins: seanick (~seanick@146.196.32.83)
[13:08:41] *** Quits: seanick (~seanick@146.196.32.83) (Read error: Connection reset by peer)
[13:09:58] *** Joins: seanick (~seanick@146.196.32.83)
[13:10:30] *** Quits: xiongxin (~Thunderbi@117.136.33.222) (Read error: Connection reset by peer)
[13:10:38] *** Joins: vnf (~vnf@85.175.252.98)
[13:11:32] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 272 seconds)
[13:11:46] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[13:13:16] *** Quits: vnf (~vnf@85.175.252.98) (Remote host closed the connection)
[13:13:53] *** Quits: seanick (~seanick@146.196.32.83) (Read error: Connection reset by peer)
[13:24:49] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:25:46] *** Quits: randir_ (~randir@95-31-138-202.broadband.corbina.ru) (Remote host closed the connection)
[13:26:33] *** Joins: Guest6577 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp)
[13:30:06] *** Quits: Zaab1t (~carlbordu@2001:470:69fc:105::78e) (Quit: You have been kicked for being idle)
[13:31:12] *** Quits: Guest6577 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 260 seconds)
[13:31:26] *** Joins: Optimus (~risto@87.227.227.147)
[13:33:12] *** Quits: merzo (~Thunderbi@192.162.238.196) (Quit: merzo)
[13:33:18] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:34:00] *** Joins: metaller (~alex_alex@c-73-221-164-116.hsd1.wa.comcast.net)
[13:37:07] *** Joins: ivii (~ivan@user/ivii)
[13:37:49] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[13:37:56] *** Joins: Guest4120 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp)
[13:38:02] *** Quits: metaller (~alex_alex@c-73-221-164-116.hsd1.wa.comcast.net) (Quit: Leaving)
[13:38:19] *** Quits: fcr (~fran@r167-60-45-238.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[13:42:27] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Ping timeout: 260 seconds)
[13:43:16] *** Joins: fcr (~fran@r167-60-141-253.dialup.adsl.anteldata.net.uy)
[13:43:40] *** Joins: Klinda (~superleag@user/klinda)
[13:44:22] *** Joins: nillyhan (~nillyhan@user/nillyhan)
[13:51:11] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Quit: WeeChat 2.8)
[13:54:34] *** Joins: vnf (~vnf@85.175.252.98)
[13:55:01] *** Quits: Guest4120 (~Thunderbi@p8016092-ipngn39401marunouchi.tokyo.ocn.ne.jp) (Read error: Connection reset by peer)
[13:59:15] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[14:04:16] *** Joins: xocolatl_ (~xocolatl@138.199.15.167)
[14:05:38] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 246 seconds)
[14:07:48] *** Joins: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53)
[14:09:24] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:10:44] *** Quits: rodo (~rodo@2a01:e0a:2c6:d5f0:9fdf:316a:1fc5:954e) (Ping timeout: 252 seconds)
[14:12:33] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Read error: Connection reset by peer)
[14:12:40] *** Joins: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[14:13:38] <strk> is there provision for extension to store their arbitrary stats somewhere ? Some kind of fast lane for that vs. creating their own table to store stats in ?
[14:14:15] <strk> by "arbitrary stats" I mean something like: max number of edges found connected while building rings
[14:15:20] *** Quits: atal181 (uid506288@id-506288.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:07] *** Joins: jpn_ (~jpn@user/jpn)
[14:21:10] *** Quits: meialuadecompass (uid505943@id-505943.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:22:13] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:23:08] *** Joins: rodo (~rodo@2a01:e0a:2c6:d5f0:4f8d:1cf2:c2ce:40c)
[14:25:55] *** Quits: ur5us_ (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 256 seconds)
[14:30:44] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[14:31:08] *** Joins: marcel (~marcel@user/marcel)
[14:32:40] *** Quits: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:33:01] *** Joins: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708)
[14:37:41] *** Quits: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708) (Client Quit)
[14:38:48] *** Joins: favadi (~favadi@2001:ee0:4081:6914:5dc2:82a5:a213:2ac7)
[14:41:20] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 246 seconds)
[14:43:11] *** Joins: nyov (~nyov@user/nyov)
[14:46:01] *** Quits: jpn_ (~jpn@user/jpn) (Quit: leaving)
[14:52:14] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[14:53:45] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[14:54:23] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:59:11] *** Joins: Komzzpa (~kom@91.184.107.140)
[15:01:26] *** Joins: sreve_ (~quassel@p54a70c2b.dip0.t-ipconnect.de)
[15:01:45] *** Quits: sreve (~quassel@p4ff44a40.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:04:37] *** Joins: sympatico (~textual@ip184-181-47-47.no.no.cox.net)
[15:05:38] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Ping timeout (120 seconds))
[15:06:19] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[15:08:13] *** Joins: tozhu (~tozhu@117.139.163.129)
[15:11:00] *** Quits: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:19:03] *** Joins: shiranaihito (~textual@218.187.100.58)
[15:20:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:21:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:21:53] *** Joins: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336)
[15:21:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:22:47] *** Joins: n0fun (~jack@mue-88-130-48-226.dsl.tropolys.de)
[15:26:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:26:48] *** Joins: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr)
[15:31:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[15:31:46] *** Quits: luk1337_ (~luk1337@2a02:6ea0:dc05::a15d) (Ping timeout: 260 seconds)
[15:38:11] *** Quits: uncleyear (~ian@31.173.80.95) (Ping timeout: 260 seconds)
[15:39:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[15:39:24] *** Joins: Oussama22 (~Oussama22@235.252.6.93.rev.sfr.net)
[15:39:42] *** Joins: uncleyear (~ian@178.176.79.6)
[15:44:12] *** Joins: vanessa (~farawayas@103.160.128.7)
[15:49:11] *** Quits: xiongxin (~Thunderbi@2409:8955:3894:25d6:2bd8:ade2:1163:8d53) (Ping timeout: 252 seconds)
[15:49:51] *** Quits: rageshkrishna (~rageshkri@122.162.198.225) (Ping timeout: 260 seconds)
[15:50:02] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[15:50:27] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[15:52:59] *** Joins: zaher (~zaher@37.48.191.85)
[15:53:38] *** Joins: mark-otaris (~sigals@2607:fcd0:aa80:1304::bf2d)
[15:59:24] *** Joins: tnewman2 (~tnewman@118.150.44.48)
[16:00:47] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 246 seconds)
[16:00:47] *** tnewman2 is now known as tnewman
[16:03:37] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[16:03:41] *** Quits: mark-otaris (~sigals@2607:fcd0:aa80:1304::bf2d) (Ping timeout: 245 seconds)
[16:04:03] *** Joins: vanessa (~farawayas@103.160.128.7)
[16:04:10] *** Quits: Xgc (~Xgc@user/xgc) (Quit: Leaving)
[16:04:24] *** Joins: jrg (~jrg@2a02:6ea0:dc05::a15d)
[16:04:48] <sobel> strk: that sounds like a table that should be created and inserted to by the extension that cares to store data there
[16:05:20] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[16:07:50] *** Quits: shiranaihito (~textual@218.187.100.58) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:09:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:12:02] *** Quits: xocolatl_ (~xocolatl@138.199.15.167) (Ping timeout: 272 seconds)
[16:12:29] *** Quits: favadi (~favadi@2001:ee0:4081:6914:5dc2:82a5:a213:2ac7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:12:38] <sobel> general question - where should i go to learn/improve my backup strategy? i'm backup up my database and i've tested recovery. i'm just archiving full dumps and i'm certain it's the bare minimum.
[16:13:44] <sobel> the last time i thought i knew how professionals managed backups, they were accounting for bit rot on streaming tapes and looking forward to optical storage
[16:14:03] *** Joins: xocolatl (~xocolatl@138.199.15.151)
[16:14:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[16:15:09] <Myon> sounds like 1995
[16:15:12] <Henryx> sobel: don't use dump (with pg_dump). use continuous archiving
[16:15:20] <Myon> use both!
[16:16:14] *** Joins: vnf_ (~vnf@85.175.252.98)
[16:16:49] <Henryx> Myon: no, dump fails if a table is locked, so it doesn't guarantee consistency
[16:17:03] *** Joins: shiranaihito (~textual@218.187.100.58)
[16:17:25] <Myon> you'd hopefully notice that a failed backup job should be repeated
[16:18:22] *** Quits: vnf (~vnf@85.175.252.98) (Ping timeout: 272 seconds)
[16:18:47] *** Quits: xocolatl (~xocolatl@138.199.15.151) (Ping timeout: 260 seconds)
[16:18:52] <sobel> Myon: 1995 is about right. i saw myself as "coder" not "archivist" and those seemed pretty mutually exclusive at the time.
[16:18:59] *** Joins: randir (~randir@93.159.239.42)
[16:19:33] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[16:20:06] <Henryx> Myon: ok, i change the point: why i want dump when i have continuous archiving?
[16:20:36] <Myon> because that doesn't validate that all tables are readable
[16:20:59] <Myon> plus it's much easier to restore a single table from a dump
[16:22:04] *** Quits: Oussama22 (~Oussama22@235.252.6.93.rev.sfr.net) (Quit: Client closed)
[16:24:08] <sobel> i'm imagining there's some science or engineering around quantifying and avoiding data loss as a function of media durability
[16:24:11] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[16:24:35] <sobel> i have backups but i'd like data security, if that makes sense
[16:24:42] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 272 seconds)
[16:25:19] <sobel> but the discussion of pg_dump vs pg_basebackup is also very helpful, as my backup procedure is entirely immature
[16:25:33] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[16:26:23] *** Joins: atal181 (uid506288@id-506288.uxbridge.irccloud.com)
[16:27:03] <Myon> if you have any procedure you are already doing better than most people ;)
[16:27:50] <atal181> What is the recommend way to load pandas Dataframe in postgresql database?
[16:29:31] <peerce> what is panda dataframe?
[16:29:44] <peerce> does this have an installation procedure ?
[16:30:10] <atal181> Panads is a library in python.
[16:30:21] <sobel> AFAIK it's a python thing related to popular analytics packages
[16:30:37] <peerce> k, so follow instructions.
[16:30:53] *** Quits: xocolatl_ (~xocolatl@138.199.15.151) (Ping timeout: 246 seconds)
[16:31:58] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[16:32:02] <sobel> if pandas doesn't have anything designed for databases, you probably just need to write the INSERT logic yourself. do use a batch insert method for more than a few thousand rows or you'll be waiting a while.
[16:32:25] <sobel> google is honestly a better place to ask, unless someone happens to know pandas here
[16:32:26] *** Quits: Epithium (~Epithium@2603-6080-3203-8d68-a9fe-010b-1d2d-81ea.res6.spectrum.com) (Remote host closed the connection)
[16:33:45] <sobel> and maybe do that web search when every site isn't screwing up their CSS for an april 1 prank
[16:35:44] *** Joins: Elodin (~elodin@user/elodin)
[16:36:51] *** Joins: xocolatl (~xocolatl@138.199.15.167)
[16:37:01] <Elodin> Hi, is there such a thing as conditional join? Like, I have table A and B, I wanna join a.a on b.a IF a.a lengh > x and a.c on b.a if b.a whatever
[16:38:54] <selckin> trying to make life interesting are you
[16:39:47] <johto> from a left join b on a.length > x and b.a = a.a ..  ?
[16:41:10] <Henryx> Myon: because continuous archiving replay entire wal archive since last checkpoint (when all transaction are written to disk and validated by postgres), why i need of the dump to validate tables? also, in my experience, restore of a single table is for a bad management of the database
[16:41:11] <ilmari> Elodin: the join condition can be anything. from a left join b on a on (length(a.a) > x and b.a = a.a) or (whatever(b.a) and b.a = a.c)
[16:41:19] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[16:41:37] <ilmari> oops, excess `on a` in there
[16:42:11] <ilmari> of course, if both conditions are true, you'll get both rows. you may have to resort to a case expression to get finer control
[16:42:11] <Elodin> I think i missrepresented my case
[16:43:21] <Elodin> I have this table B where the data is inconsistent. Half of it i want to join A on A.a and the other half i want to join A on a.b the condition is to detect which case for each
[16:45:08] *** Joins: rufito (~phil@186-79-15-194.baf.movistar.cl)
[16:45:44] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:45:55] <ilmari> select … from b join a on case b.a = when <condtion involving b> then a.a else a.b end
[16:46:10] <ilmari> or, more efficiently a UNION ALL
[16:46:20] *** Joins: Phil (~phil@186-79-15-194.baf.movistar.cl)
[16:46:29] <Myon> Henryx: did you ever have data corruption on disk?
[16:47:38] <ilmari> select … from b join a on <condition> and b.a = a.a union all select … from b join a on not <condition> and b.a = a.b;
[16:47:55] <Henryx> Myon: data corruption on disk is totally unrelated to restore only one table
[16:48:26] <Myon> that is true, but that's why pg_dump is good
[16:49:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Quit: Leaving...)
[16:50:27] <Henryx> Myon: no, it isn't good, but it's your point, i prefer continue to use continuous archiving because it works ever. happy backup
[16:50:40] *** Quits: rufito (~phil@186-79-15-194.baf.movistar.cl) (Ping timeout: 272 seconds)
[16:51:10] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[16:51:25] *** Joins: rvalue (~rvalue@user/rvalue)
[16:51:36] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[16:53:40] *** Quits: shiranaihito (~textual@218.187.100.58) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:54:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:54:39] *** Joins: MrZeus (~MrZeus@89.238.130.71)
[16:55:02] *** Quits: Komzzpa (~kom@91.184.107.140) (Ping timeout: 246 seconds)
[16:56:22] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[16:57:42] *** Quits: mjf_ (~mjf@2001:1528:1:fffd:a02e:21d3:b3d4:86b8) (Ping timeout: 260 seconds)
[16:58:44] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[16:59:05] *** Joins: favadi (~favadi@2001:ee0:4081:6914:cc90:2a33:f69f:10cb)
[16:59:35] *** Quits: uncleyear (~ian@178.176.79.6) (Ping timeout: 246 seconds)
[17:00:18] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:00:29] *** Quits: rodo (~rodo@2a01:e0a:2c6:d5f0:4f8d:1cf2:c2ce:40c) (Quit: Leaving)
[17:01:07] *** Joins: fef (~thedawn@user/thedawn)
[17:05:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:05:57] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[17:05:57] *** Quits: earthbre- (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[17:07:38] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[17:09:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:11:07] *** Joins: MrZeus_ (~MrZeus@185.206.227.135)
[17:11:43] *** Joins: uncleyear (~ian@31.173.84.107)
[17:13:06] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[17:14:44] *** Quits: MrZeus (~MrZeus@89.238.130.71) (Ping timeout: 272 seconds)
[17:15:16] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:21:01] *** Quits: favadi (~favadi@2001:ee0:4081:6914:cc90:2a33:f69f:10cb) (Ping timeout: 256 seconds)
[17:22:21] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:23:10] *** Joins: mncheck (~mncheck@193.224.205.254)
[17:23:25] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[17:23:51] *** Joins: TheyCallMePaul (~TheyCallM@ip72-207-167-97.lv.lv.cox.net)
[17:26:00] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[17:29:16] *** Quits: tozhu (~tozhu@117.139.163.129) (Quit: tozhu)
[17:30:55] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[17:31:27] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:33:42] *** Joins: Xgc (~Xgc@user/xgc)
[17:34:04] <pedja> atal181, something like https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_sql.html#pandas.DataFrame.to_sql ?
[17:35:59] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 246 seconds)
[17:36:48] <atal181> This to_sql is not working. It simply runs without giving any error and data is not loaded in db.
[17:38:29] <ilmari> atal181: are you committing the change? either manually or by enabling autocommit
[17:40:37] *** Joins: mattil (~mattil@176-93-148-104.bb.dnainternet.fi)
[17:41:16] <atal181> I don't. As I know this function audocommit and auto handle close as well
[17:42:07] *** Quits: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336) (Quit: Client closed)
[17:43:35] *** Quits: tnewman (~tnewman@118.150.44.48) (Quit: Ping timeout (120 seconds))
[17:43:58] *** Joins: tnewman (~tnewman@118.150.44.48)
[17:44:05] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[17:44:18] *** Quits: mattil (~mattil@176-93-148-104.bb.dnainternet.fi) (Remote host closed the connection)
[17:44:26] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[17:45:06] <pedja> "The user is responsible for engine disposal and connection closure for the SQLAlchemy connectable"
[17:45:06] <atal181> Thank you guys so much. I figured it out I have problem with scheme.
[17:45:17] *** Joins: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi)
[17:46:11] <atal181> @pedja: I'm not aware of that. Can you please provide me more details?
[17:46:30] <atal181> How to handle those things?
[17:48:00] *** Quits: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:48:37] <pedja> atal181, there is a link to more information in the documentation for DataFrame.to_sql I posted earlier
[17:48:51] *** Joins: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi)
[17:49:02] <pedja> for 'con' function parameter
[17:49:05] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:49:11] <atal181> Okay, I'll follow.
[17:50:36] <pedja> never used pandas for that, so I can't be of more help, sorry :)
[17:52:41] <atal181> It's fine. Already you did a lot X
[17:54:24] *** Joins: Guest7470 (~Guest74@eog189.neoplus.adsl.tpnet.pl)
[17:56:39] *** Parts: Guest7470 (~Guest74@eog189.neoplus.adsl.tpnet.pl) ()
[17:58:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:58:45] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[18:00:18] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:01:05] *** Joins: shiranaihito (~textual@125-228-188-231.hinet-ip.hinet.net)
[18:01:41] *** Quits: odnes (~odnes@5-203-245-187.pat.nym.cosmote.net) (Quit: Leaving)
[18:01:41] *** Joins: randir (~randir@93.159.239.42)
[18:02:39] *** Quits: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:03:01] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:03:13] *** Joins: randir (~randir@93.159.239.42)
[18:08:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:08:40] *** Joins: mizi_ (~mizi@user/mizi)
[18:13:06] *** Joins: shiranaihito_ (~textual@123.192.192.149)
[18:14:04] *** Joins: raptelan (~raptelan@208.127.242.46)
[18:16:47] *** Quits: shiranaihito (~textual@125-228-188-231.hinet-ip.hinet.net) (Ping timeout: 256 seconds)
[18:18:07] *** Joins: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi)
[18:20:36] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[18:22:47] *** Quits: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi) (Ping timeout: 256 seconds)
[18:23:14] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:5de2:c43a:96bf:f43d)
[18:23:38] *** Joins: AceSlash (~slash@2a01:e0a:432:c050:cd12:393c:3664:2a6e)
[18:26:51] *** Joins: texasmynsted (~texasmyns@99.96.221.112)
[18:27:40] *** Quits: codedmart (~codedmart@li335-49.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:27:43] <texasmynsted> I do not suppose there is a way to pass a temporary table from one store procedure to another. I looked at passing one as an array, but that looks like a lot of building and taking apart.
[18:28:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.23)
[18:28:43] <Myon> you'll need dynamic SQL for that
[18:28:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:28:49] <Myon> which should usually be avoided
[18:29:29] *** Joins: tnewman6 (~tnewman@118.150.44.48)
[18:29:29] <texasmynsted> hm. It is one value, so I thought an array would work but it seems awkward.
[18:30:03] <texasmynsted> and I really do no think it is a good idea to call the second stored procedure in a loop.
[18:30:04] <Myon> why an array for a single value?
[18:30:10] *** Joins: codedmart (codedmart@2600:3c01::f03c:92ff:fefe:8511)
[18:30:52] <texasmynsted> One column really. Think "facility" so 10k facility values.
[18:31:31] *** Joins: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi)
[18:31:38] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 260 seconds)
[18:31:38] *** tnewman6 is now known as tnewman
[18:31:41] <Myon> ah I was misreading that as "name of temp table"
[18:32:05] <Myon> can't you use a join?
[18:32:21] <texasmynsted> Yes.
[18:32:48] <texasmynsted> I suppose that is the best option really.
[18:33:11] <Myon> it usually is in SQL
[18:33:20] <texasmynsted> This is a collection of stored procedures to remove normalized data. It is getting . . . complicated.
[18:34:06] <texasmynsted> Yeah. I just thought I would ask. I think another join is the only _real_ answer.
[18:34:38] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[18:36:11] *** Quits: mattil (~mattil@d5z9cc8f79crnb7yf28-4.rev.dnainternet.fi) (Ping timeout: 245 seconds)
[18:37:07] *** Quits: gleu (~guillaume@2a01cb0c0e54b8007e39e75cb4390e1c.ipv6.abo.wanadoo.fr) (Quit: Leaving.)
[18:38:01] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:41:30] *** Joins: asymmentric11 (~asymmentr@118.151.210.82)
[18:41:50] *** Quits: asymmentric11 (~asymmentr@118.151.210.82) (Client Quit)
[18:42:50] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[18:43:06] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[18:45:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:47:43] *** Joins: hodbogi (~fatalnix@user/fatalnix)
[18:48:18] *** Joins: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net)
[18:48:58] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:49:09] <depesz> is there any simple way to have a loop in psql?
[18:49:23] <Myon> \gexec
[18:49:27] <depesz> specifically in a sql script that I pass to stdin of psql
[18:49:46] <csd> my table has a JSONB column `C` that contains data of the form `[{"foo": .., "bar": ...}]` and I would like to add an index to speed up `@>` queries. Is my only option to add a general GIN index on `C`, or is it possible to do something more targeted if I'm only interested in a subset of the fields?
[18:50:36] <hodbogi> Anyone use pgadmin on docker? I tried to see if it would run but it says I need to set environment variables.. uh.. they're there, they're even exported and the image still complains the env isn't set, so I wasn't sure. Doesn't matter if I use -e or not.
[18:50:58] <Myon> csd: depends on which exact predicates you are using
[18:51:23] <Myon> the general answer is the general index
[18:52:36] <csd> Myon: i.e. suppose the object contains N > 2 fields, and I want to `@> '["foo": "a", "bar": "b"]'`
[18:52:50] <csd> err, imagine i wrote {}s inside the array
[18:53:41] <csd> key point is I'm checking multiple fields WITHIN an object and the object contains a lot of extraneous fields I don't care about, _and_ it's nested in an array structure
[18:53:42] <Myon> if it's always that exact contition, you can use a "where (idxcol @> '[{"foo": "a", "bar": "b"}]'" index
[18:53:46] <Myon> but that's not flexible
[18:54:17] <Myon> so yeah I think you need the index including all the fields you don't need
[18:54:19] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:47] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 246 seconds)
[18:56:57] <csd> Myon: to elaborate more, the object includes 11 fields, and my query would be a @> query involving only 3 of the fields. so i'm hesitant to use the general index since it's going to index all this stuff i don't care about
[18:57:30] <csd> sounds like i'm out of luck?
[18:58:30] <Myon> perhaps there's some room in gin vs gist, haven't looked too closely on that yet for jsonb
[19:01:52] <csd> Myon: ok, and just out of curiosity, if I was only querying the object itself, I could do an index on ((C->foo), (C->bar), (C->baz)), right?
[19:02:09] <csd> or would that not be what i want
[19:02:13] <Myon> yes, modulo the array step
[19:02:35] <Myon> where c->>'foo' = 'a'
[19:02:45] <Myon> where (c->'0')->>'foo' = 'a'
[19:03:10] <csd> yeah I'm just thinking if maybe i moved each object into its own row in a separate table
[19:03:25] <Myon> that would be the SQL solution
[19:03:54] <Myon> depesz: loop over what?
[19:03:57] <csd> thx
[19:05:08] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:05:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:11:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[19:20:11] *** Joins: krux02 (~krux02@p200301003f0391003e208a5028265eb9.dip0.t-ipconnect.de)
[19:20:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:21:10] *** Joins: rufito (~phil@165.1.200.190)
[19:21:38] *** Quits: codedmart (codedmart@2600:3c01::f03c:92ff:fefe:8511) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:21:59] *** Joins: codedmart (codedmart@2600:3c01::f03c:92ff:fefe:8511)
[19:23:05] *** Quits: Phil (~phil@186-79-15-194.baf.movistar.cl) (Ping timeout: 256 seconds)
[19:23:48] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:24:00] <depesz> sorry - was awaying. not over what. loop.
[19:24:12] <depesz> ok. background. I am writing checker for replication setup.
[19:24:33] <depesz> one of steps is making sure data is actually replicated. idea: insert row with specific id on source. and check for this id on replica.
[19:25:06] <depesz> since there can be delay, I figured I could try, for example 30 times, selecting if the id exists, if yes - exit loop, otherwise, sleep 0.1s, and repeat.
[19:25:10] *** Joins: inak (~justme@228-134-237-24.gci.net)
[19:25:17] <depesz> the thing is that I can't do it with \gexec (or I don't know how)
[19:25:33] *** Joins: triberio13 (~triberio1@195.53.32.158)
[19:26:37] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:35] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:33:59] *** Joins: tnewman4 (~tnewman@118.150.44.48)
[19:35:46] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 245 seconds)
[19:35:46] *** tnewman4 is now known as tnewman
[19:36:24] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:38:03] *** Joins: maxzor (~maxzor@2a01cb04054faa00a81dc7c4ffa3ec97.ipv6.abo.wanadoo.fr)
[19:38:30] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 272 seconds)
[19:38:39] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[19:38:41] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Quit: Client closed)
[19:45:16] *** Joins: palasso (~palasso@user/palasso)
[19:47:08] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:47:56] *** Joins: tnewman4 (~tnewman@118.150.44.48)
[19:48:20] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[19:49:54] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 272 seconds)
[19:49:55] *** tnewman4 is now known as tnewman
[19:56:27] *** Parts: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c) ()
[19:57:04] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[20:00:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:05:32] *** Quits: maxzor (~maxzor@2a01cb04054faa00a81dc7c4ffa3ec97.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:08:03] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[20:09:06] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:5de2:c43a:96bf:f43d) (Ping timeout: 245 seconds)
[20:09:56] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[20:10:07] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 256 seconds)
[20:12:05] *** Joins: janos (~janos@fedora/janos)
[20:12:33] *** Joins: john_johnk (~Thunderbi@2a02-8428-013e-4001-f024-6ec4-e61c-0181.rev.sfr.net)
[20:14:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:14:54] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:15:14] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 604 seconds)
[20:21:31] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:ce7b:4a80:c13c:8b4e)
[20:24:19] *** Quits: uncleyear (~ian@31.173.84.107) (Remote host closed the connection)
[20:28:00] *** Joins: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com)
[20:28:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:29:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:29:23] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 256 seconds)
[20:29:23] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[20:34:07] *** Joins: econo (uid147250@user/econo)
[20:35:02] *** Joins: orion (~orion@user/orion)
[20:35:39] *** Joins: mniip (mniip@libera/staff/mniip)
[20:35:41] <orion> Hello. Is there any benefit to enabling hugepages if the size of my dataset exceeds the amount of memory in the system?
[20:36:18] *** Quits: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com) (Quit: Client closed)
[20:36:50] <xiaomiao> maybe
[20:37:07] *** Quits: janos (~janos@fedora/janos) (Quit: WeeChat 3.4)
[20:37:52] <orion> Under what conditions will I experience a benefit? My dataset is >10TB.
[20:38:00] <xiaomiao> orion: for high-load databases I've seen ~10-20% difference in max throughput, so it's in general a good optimization
[20:38:42] <xiaomiao> >10TB is "exciting"
[20:39:24] <orion> That's just one of my databases. :)
[20:39:54] <xiaomiao> "worst" I've worked with is ~175TB in a single instance
[20:39:55] <orion> Across the entire infrastructure, it's about ~300 TB. ZFS reports a 3.5:1 compression ratio.
[20:40:14] <xiaomiao> zstd compression, eh? :)
[20:43:26] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-f024-6ec4-e61c-0181.rev.sfr.net) (Ping timeout: 252 seconds)
[20:44:32] *** Joins: b0nn (~shane@user/b0nn)
[20:45:47] *** Quits: atal181 (uid506288@id-506288.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:46:14] <texasmynsted> I do not suppose there a function or something that works like "delete cascade"? I do not want to alter the tables, I just want to delete records and all child records.
[20:46:58] <texasmynsted> Right now I am manually writing store procedures. I do not want delete cascade for normal deletes, only for the ones I am executing.
[20:48:48] *** Quits: c2main (~quassel@user/c2main) (Ping timeout: 272 seconds)
[20:50:32] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[20:50:55] <texasmynsted> truncate has a "cascade" parameter but I do not see that delete does.
[20:51:39] *** Joins: adlaistevenson (~adlaistev@068-188-185-039.res.spectrum.com)
[20:53:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[20:54:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:55:18] *** Joins: john_johnk (~Thunderbi@2a02-8428-013e-4001-25ac-cb66-1766-6c5b.rev.sfr.net)
[20:58:56] *** Joins: gp5st_ (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[20:59:39] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[20:59:56] *** Quits: john_johnk (~Thunderbi@2a02-8428-013e-4001-25ac-cb66-1766-6c5b.rev.sfr.net) (Ping timeout: 252 seconds)
[21:01:35] <adlaistevenson> For a web application accessing Postgres through pgbouncer, what is the optimal hosting setup for low latency in terms of servers? Should Postgres share a server with the web application so connections occur over loopback, or is it better that Postgres have on its own server with its own disc?
[21:02:11] *** Joins: lkw (~lkw@user/lkw)
[21:02:53] <adlaistevenson> Second question is, I have to get Postgres 9.3 upgraded to a more modern version of Postgres. What version should I shoot for upgrading to, and is it possible to use some sort of replication to keep the new Postgres database in sync until ready to switch over?
[21:05:52] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:06:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:06:50] *** Joins: epony (epony@user/epony)
[21:07:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:6028:512c:43b4:598a) (Remote host closed the connection)
[21:07:32] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[21:07:53] <sobel> adlaistevenson: latency from your database will typically be in fetch (disk) and search (ram)
[21:08:04] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[21:08:39] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[21:08:39] *** Joins: iliv (~iliv@user/iliv)
[21:09:00] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[21:09:08] *** Quits: EvanCarroll (~ecarroll@4.78.9.20) (Ping timeout: 246 seconds)
[21:09:16] <sobel> adlaistevenson: a dedicated server with enough ram to hold the data (or at least a useful working set) will get you the lowest latency
[21:11:09] *** Joins: EvanCarroll (~ecarroll@172.56.15.85)
[21:13:05] *** Joins: uncleyear (~ian@31.173.84.107)
[21:13:05] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 250 seconds)
[21:14:23] *** Quits: n0fun (~jack@mue-88-130-48-226.dsl.tropolys.de) (Ping timeout: 260 seconds)
[21:15:47] <adlaistevenson> sobel: Appreciate the help. So Postgres on its own server, then the web application on a second server. Should I worry about the two being in the same data center?
[21:16:25] *** Quits: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz) (Ping timeout: 256 seconds)
[21:16:53] <sobel> adlaistevenson: no, you should worry about having a very ordinary network connection between app and database. at AWS that can span regions, i don't know how it works out elsewhere.
[21:17:32] <sobel> latency is additive. you can measure query latency at your database, then figure out what network latency you can tolerate from there.
[21:18:11] *** Joins: mjf_ (~mjf@85-207-10-243.static.bluetone.cz)
[21:18:48] *** Quits: orion (~orion@user/orion) (Quit: Leaving...)
[21:21:55] <texasmynsted> How do I capture the deleted count? It seems like CTE would work but I am not using it correctly.
[21:22:11] <texasmynsted> Here is one simplified example.
[21:22:13] <texasmynsted> https://gist.github.com/mmynsted/341bbfb1cc2de29196e109c0382020ca
[21:22:42] <texasmynsted> if I remove the ; on line 14, this seems correct but is a syntax error.
[21:24:22] <adlaistevenson> sobel: Okay, not sure if I understand very ordinary meaning, unless that is referring to bandwidth/latency being consistent.
[21:25:20] <sobel> adlaistevenson: i'm talking about the several milliseconds typical for hardware+tcp stack
[21:25:44] <sobel> adlaistevenson: if you're concerned you should measure where it matters.
[21:25:47] *** Joins: chadea (~a@pool-71-178-44-88.washdc.fios.verizon.net)
[21:26:06] <texasmynsted> oooh I think I see. thanks anyway.
[21:26:14] <sobel> adlaistevenson: if you don't know for sure your data is bigger than ram, just build a clean, correct app and address performance later/as needed
[21:28:44] *** Joins: jim (~jim@about/linux/staff/jim)
[21:29:26] *** Joins: maxzor (~maxzor@2a01cb04054faa00e3b5d15dd970d9fb.ipv6.abo.wanadoo.fr)
[21:31:14] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 272 seconds)
[21:31:19] <adlaistevenson> Sounds good. I'll measure on new server(s) then. Now, there's just the problem of data migration from 9.3 to the new machine. If I just dump the database to SQL & reload on the new machine, it will take long enough it'll be out of date by the time it's ready.
[21:31:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[21:33:03] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 260 seconds)
[21:33:03] *** Joins: Elodin (~elodin@user/elodin)
[21:34:23] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:35:34] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[21:35:41] *** Quits: inak (~justme@228-134-237-24.gci.net) (Quit: Leaving)
[21:37:07] *** Quits: mjf_ (~mjf@85-207-10-243.static.bluetone.cz) (Ping timeout: 260 seconds)
[21:38:50] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[21:41:40] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:42:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:43:10] *** Joins: xocolatl_ (~xocolatl@138.199.15.151)
[21:44:03] *** Quits: xocolatl (~xocolatl@138.199.15.167) (Ping timeout: 260 seconds)
[21:47:43] *** Joins: fab-io (~fabio@dynamic-138-204-193-31.vicontec.net.br)
[21:48:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:49:15] *** Joins: funhouse (~funhouse@user/funhouse)
[21:50:01] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[21:51:43] *** Joins: ByteSlayer (~byteslaye@user/byteslayer)
[21:53:48] *** Joins: Elodin (~elodin@user/elodin)
[21:53:58] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Client Quit)
[21:56:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:57:05] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[21:57:57] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[21:58:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:58:55] *** Quits: EvanCarroll (~ecarroll@172.56.15.85) (Ping timeout: 256 seconds)
[22:02:05] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 252 seconds)
[22:03:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:04:44] *** Joins: zaher_ (~zaher@37.48.188.59)
[22:05:10] *** Quits: zaher (~zaher@37.48.191.85) (Ping timeout: 260 seconds)
[22:07:24] *** Joins: janos (~janos@fedora/janos)
[22:14:07] *** Joins: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net)
[22:15:41] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[22:16:13] *** Joins: n0fun (~jack@mue-88-130-48-226.dsl.tropolys.de)
[22:16:21] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[22:19:19] *** Quits: b0nn (~shane@user/b0nn) (Remote host closed the connection)
[22:19:50] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:22:22] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[22:22:22] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[22:22:22] *** Joins: iliv (~iliv@user/iliv)
[22:22:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:22:39] *** Joins: randir (~randir@95-31-138-202.broadband.corbina.ru)
[22:23:51] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 606 seconds)
[22:24:17] *** Joins: mniip (mniip@libera/staff/mniip)
[22:25:07] *** Joins: b0nn (~shane@user/b0nn)
[22:25:33] *** Quits: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz) (Ping timeout: 256 seconds)
[22:25:47] *** Quits: carragom (~textual@201.204.94.76) (Quit: Textual IRC Client: www.textualapp.com)
[22:25:55] *** Joins: mjf_ (~mjf@85-207-10-243.static.bluetone.cz)
[22:26:36] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[22:26:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[22:29:39] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[22:29:44] *** Quits: janos (~janos@fedora/janos) (Quit: moo)
[22:31:50] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[22:33:39] *** Joins: janos (~janos@fedora/janos)
[22:36:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:40:24] *** Joins: EvanCarroll (~ecarroll@172.56.15.85)
[22:40:37] *** Quits: fab-io (~fabio@dynamic-138-204-193-31.vicontec.net.br) (Ping timeout: 250 seconds)
[22:43:37] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:48:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:50:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:51:41] <adlaistevenson> I'm upgrading from 9.3 to 14. Does anyone remember any changes that will totally break some application queries? Such as syntax changes, removal of features. I'm using uuid_generate_v4(), hstore, and the older json column.
[22:53:05] *** Joins: carragom (~textual@201.204.94.76)
[22:53:44] *** Joins: cliluw (~cliluw@47.147.77.43)
[22:53:53] <johto> a ton of stuff has changed. read the release notes
[22:55:56] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[22:56:25] *** Joins: realies (~realies@user/realies)
[22:56:43] <adlaistevenson> Okay. Looking through. https://www.postgresql.org/docs/9.6/runtime-config-compatible.html
[22:57:41] <johto> no, you want https://www.postgresql.org/docs/9.4/release-9-4.html, https://www.postgresql.org/docs/9.5/release-9-5.html, etc.
[22:57:43] *** Joins: cation21 (cation@user/cation)
[22:57:57] <johto> 9.4 to 9.6, then 10 to 14
[22:58:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:59:16] *** Quits: cation (cation@user/cation) (Ping timeout: 272 seconds)
[23:01:04] *** cation21 is now known as cation
[23:01:20] <adlaistevenson> Thanks. I'm a bit unclear. 9.4 to 9.6 has breaking changes, but not 9.5 to 9.6? I'm already expecting I'll have to use pg_upgrade of course.
[23:01:54] <johto> I mean all versions between 9.4 and 14
[23:01:57] <johto> you need to read all the notes
[23:02:13] <adlaistevenson> Ah, I see. Okay I've got my work cut out for me! :-)
[23:03:16] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.23) (Ping timeout: 245 seconds)
[23:04:12] *** Quits: mjf_ (~mjf@85-207-10-243.static.bluetone.cz) (Ping timeout: 240 seconds)
[23:05:13] *** Joins: mjf_ (~mjf@cst-prg-87-91.cust.vodafone.cz)
[23:09:21] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:14:28] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:19:25] *** Joins: jazzy (~jaziz@user/jaziz)
[23:19:48] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:40] *** Joins: Auron (~Auron956@user/auron)
[23:21:18] *** Quits: rufito (~phil@165.1.200.190) (Quit: Leaving)
[23:23:19] *** Quits: hodbogi (~fatalnix@user/fatalnix) (Quit: Lost terminal)
[23:24:16] *** Joins: tnewman8 (~tnewman@118.150.44.48)
[23:25:59] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 246 seconds)
[23:25:59] *** tnewman8 is now known as tnewman
[23:28:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:31:46] *** Joins: Rashad (~textual@2a01:9700:13d6:d000:f9a4:ee1a:ded0:358b)
[23:32:09] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[23:32:31] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[23:33:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[23:34:01] *** Quits: darutoko (~darutoko@37.21.218.242) (Quit: Leaving)
[23:42:57] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[23:43:43] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[23:44:15] *** Joins: Reiner_Unsinn_ (~quassel@p579d7cd9.dip0.t-ipconnect.de)
[23:44:20] *** Quits: Reiner_Unsinn (~quassel@p579d7cd9.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[23:47:47] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:c06:c5f:5435:411f) (Ping timeout: 250 seconds)
[23:50:13] <adlaistevenson> pg_upgrade from 9.3 to 14 a good idea, or better to use dump?
[23:50:13] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:1861:afad:270:b1c5) (Quit: Textual IRC Client: www.textualapp.com)
[23:50:45] <johto> it's not a bad idea
[23:50:55] <johto> can you afford to dump?
[23:50:59] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:f81b:729b:7ef0:993)
[23:51:53] *** Quits: tnewman (~tnewman@118.150.44.48) (Ping timeout: 246 seconds)
[23:53:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[23:56:08] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[23:56:59] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[23:57:55] *** Quits: austb_ (~austb@c-73-240-245-80.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
