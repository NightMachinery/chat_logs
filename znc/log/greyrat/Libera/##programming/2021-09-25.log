[00:03:34] *** Quits: anovick (~anovick@IGLD-83-130-87-24.inter.net.il) (Ping timeout: 260 seconds)
[00:04:08] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Ping timeout: 265 seconds)
[00:05:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:05:49] *** Joins: humky (~humky@user/humky)
[00:07:27] *** Joins: ralinux (~saje@37.156.188.75)
[00:07:32] *** Joins: snake (~snake@user/snake)
[00:07:39] *** Joins: mmfood (~mmfood@45.135.187.94)
[00:08:43] *** Quits: cm007magnum (~Rheanna@101.89.207.55) (Remote host closed the connection)
[00:09:31] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:e8a3:a17d:cfd3:4ee9) (Remote host closed the connection)
[00:09:43] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[00:11:42] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:12:51] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:17:02] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com) (Quit: Leaving.)
[00:17:17] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com)
[00:17:48] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-ed5a-86df-2069-0e7f.res6.spectrum.com) (Client Quit)
[00:19:56] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:21:09] *** Joins: yinghua_ (~yinghua@2800:2121:1400:1db:c0c5:a435:cabe:dd29)
[00:21:38] <vdamewood> I wonder how long it will take before everyone upgrades OpenSSL to 3.0.
[00:21:52] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:22:14] *** Joins: flaknet99 (~0x100@32.211.211.39)
[00:23:31] *** Quits: yinghua (~yinghua@2800:2121:1400:1db:68a8:baa5:f71b:a8b5) (Ping timeout: 252 seconds)
[00:24:25] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:24:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:24:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:25:18] *** Joins: eddof13 (~textual@189.178.0.178)
[00:26:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:26:56] *** Quits: guest378 (~guest@2001:5b0:2a66:61f8:97dc:1e96:4ddb:ec0c) (Quit: quit)
[00:27:39] *** Joins: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de)
[00:28:32] *** Quits: mmfood (~mmfood@45.135.187.94) (Ping timeout: 252 seconds)
[00:29:26] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:29:34] *** Quits: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu) (Remote host closed the connection)
[00:31:23] *** Quits: ralinux (~saje@37.156.188.75) (Quit: Leaving)
[00:31:46] *** Quits: xff0x (~xff0x@2001:1a81:5287:3100:76b:e505:93a5:449f) (Ping timeout: 252 seconds)
[00:32:21] *** Joins: xff0x (~xff0x@2001:1a81:5287:3100:96a7:c495:38fd:b41b)
[00:33:08] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[00:35:23] *** Quits: Tazy (~Tazmainia@102.39.92.119) (Read error: Connection reset by peer)
[00:36:00] <pulse> i wonder what programming language a vampire would use
[00:36:31] <relmnight[m]> haskell
[00:36:59] <Pajus> ( o o) 
[00:37:32] <vdamewood> Byte code
[00:37:39] <flaknet99> booooooom!
[00:38:12] <flaknet99> one octet, ah, ah ah
[00:38:28] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[00:38:33] <pulse> time for sandwich, code, and coffee
[00:38:36] <pulse> not necessarily in that order
[00:38:37] <vdamewood> BATch?
[00:39:00] <pulse> i think a vampire would use something ancient, outdated, and somewhat unstable
[00:39:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:40:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:41:56] <vdamewood> PHP?
[00:42:08] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:59] <pulse> i think vampires have better taste than that
[00:46:04] <pulse> judging by their taste in clothing at least
[00:46:12] <deniska> Visual Basic 5.0?
[00:46:50] <pulse> nice
[00:49:43] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:50:02] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:50:14] *** Quits: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de) (Ping timeout: 260 seconds)
[00:50:14] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 260 seconds)
[00:50:14] *** Joins: flaknet99 (~0x100@32.211.211.39)
[00:53:59] *** Joins: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de)
[00:54:11] *** Quits: Akuli (~Akuli@213.216.208.69) (Quit: Leaving)
[00:56:14] *** Joins: ralinux (~ralinux_4@37.156.188.75)
[00:58:45] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[00:58:45] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[01:00:26] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[01:01:14] *** Quits: ralinux (~ralinux_4@37.156.188.75) (Remote host closed the connection)
[01:01:26] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 260 seconds)
[01:01:39] *** Quits: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de) (Ping timeout: 265 seconds)
[01:01:51] <flaknet99> if the origins of dracula are dragon then most definitely LLVM byte-code  https://en.wikipedia.org/wiki/Saint_George_and_the_Dragon
[01:01:52] <bayaz> Title: Saint George and the Dragon - Wikipedia 
[01:03:23] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[01:05:26] *** Quits: eddof13 (~textual@189.178.0.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:06:21] *** Quits: Uhino (~Uhino@ti0095q160-2777.bb.online.no) (Quit: Client closed)
[01:09:14] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:b15e:6fbf:2848:1ba2)
[01:14:47] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com)
[01:15:23] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:15:41] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:17:19] *** Joins: soetz (~soetz@2a01:cb14:ab4:6700:c97c:6e38:cb98:8ef0)
[01:18:14] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[01:20:41] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[01:20:56] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[01:25:24] *** Joins: src (~src@user/src)
[01:27:06] *** Joins: zaher (~zaher@37.48.159.144)
[01:30:34] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:32:21] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.3)
[01:33:11] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:36:24] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:37:35] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:37:57] *** Joins: horseface_ (~horseface@125-63-6-2.ip4.superloop.com)
[01:38:46] <vdamewood> Someone should make a programming language what's completely classless and call it marx.
[01:38:52] <vdamewood> s/what's/that's/
[01:39:55] *** Quits: horseface (~horseface@125-63-6-2.ip4.superloop.com) (Ping timeout: 252 seconds)
[01:40:11] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[01:41:50] *** Joins: inky (~inky@46.36.119.235)
[01:42:07] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:42:58] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[01:44:16] *** Quits: normskal (~normskal@101.175.64.73) (Quit: Client closed)
[01:44:29] <flaknet99> https://en.wikipedia.org/wiki/List_of_peasant_revolts  rarely ends well  *looks at javascript*
[01:44:29] <bayaz> Title: List of peasant revolts - Wikipedia 
[01:45:32] *** Quits: inky_ (~inky@5.77.194.44) (Ping timeout: 252 seconds)
[01:47:11] *** Joins: vysn (~vysn@user/vysn)
[01:47:22] *** Joins: hexingb (~hexingb@111.30.224.85)
[01:49:13] *** Quits: cm007magnum (~Rheanna@101.91.214.30) (Remote host closed the connection)
[01:49:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:51:57] *** Joins: cm007magnum (~Rheanna@101.89.197.243)
[01:52:10] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:52:19] <flaknet99> i'm surprised the bronze age collapse isn't on here
[01:52:43] *** Joins: Quietwalker (~X@191.96.67.98)
[01:53:08] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[01:54:53] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[01:55:56] *** Parts: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) ()
[02:00:23] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:00:45] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:01:22] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 252 seconds)
[02:01:58] *** Quits: xff0x (~xff0x@2001:1a81:5287:3100:96a7:c495:38fd:b41b) (Ping timeout: 252 seconds)
[02:02:10] *** Quits: zaher (~zaher@37.48.159.144) (Read error: Connection reset by peer)
[02:02:33] *** Joins: xff0x (~xff0x@2001:1a81:5287:3100:448c:6d89:40d5:fb1d)
[02:05:52] <zzz> speaking of the bronze age collapse, i just learned today about the sea peoples
[02:05:56] <zzz> https://www.worldhistory.org/Sea_Peoples/
[02:05:57] <bayaz> Title: Sea Peoples 
[02:06:52] *** Joins: zaher (~zaher@37.48.183.249)
[02:08:21] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:08:47] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[02:09:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:12:22] *** Quits: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[02:13:29] *** Quits: Guest2222 (birkoff@birkoff.thunderirc.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:19:08] <tane> zzz, thanks for sharing, but now I wanna know where they came from
[02:19:36] <pulse> the sea, duh
[02:23:15] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[02:23:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[02:24:23] *** Joins: birkoff (birkoff@thunderirc.net)
[02:24:23] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[02:24:23] *** Joins: birkoff (birkoff@user/birkoff)
[02:24:43] *** Joins: normskal (~normskal@101.175.64.73)
[02:25:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:26:33] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:27:19] <zzz> https://en.wikipedia.org/w/index.php?title=Sea_Peoples&action=edit&section=11
[02:27:21] <bayaz> Title: View source for Sea Peoples - Wikipedia 
[02:28:43] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[02:28:54] <zzz> wrong url
[02:28:57] <zzz> https://www.wikiwand.com/en/Sea_Peoples#/Hypotheses_about_origins
[02:32:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:33:24] <jeaye> vdamewood: Yes, D3D means Direct3D.
[02:33:49] <jeaye> vdamewood: Also, "Modern OpenGL" is specifically a term, like "Modern C++".
[02:34:39] <jeaye> Notably, modern OpengGL moves away from the fixed functionality pipeline into a fully programmable one.
[02:38:44] *** Quits: cm007magnum (~Rheanna@101.89.197.243) (Remote host closed the connection)
[02:38:52] <pulse> the problem with naming things modern is that in a few years they're not all that modern anymore
[02:38:53] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 252 seconds)
[02:41:01] <[itchyjunk]> heh
[02:41:09] <[itchyjunk]> or it already isn't the most "modern" thing
[02:41:27] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[02:41:31] <[itchyjunk]> like "Modern algebra" being a lot about stuff from 80 years ago
[02:42:01] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:42:23] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[02:43:02] <jeaye> Yeah, it's not the best term. It's till a useful categorization, though. "Modern C++" is now a decade old, since it came out with C++11, but it's still useful, since the term has grown to refer to the ongoing modernization of C++, in terms of language and also paradigms and methodologies.
[02:44:07] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 265 seconds)
[02:47:04] *** Joins: pizdets (~pizdets@183.182.110.56)
[02:52:00] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[02:53:43] *** Joins: pilcrow (~pilcrow@45.76.227.43)
[02:54:02] *** Quits: Guest3273 (~Guest@181.91.158.206) (Remote host closed the connection)
[02:57:12] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:57:13] <cthulchu_> huh... what's the chan for VSC? I'm trying to install a spell checker and I'm failing MISERABLY
[02:58:09] *** Quits: dan01 (~dan01@109.166.136.188) (Read error: Connection reset by peer)
[03:01:29] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[03:01:32] *** Joins: cth (~Cthulchu@193.194.107.250)
[03:02:12] *** Joins: Guest3722 (~Guest37@171.121.36.172)
[03:02:45] <[itchyjunk]> what's VSC?
[03:04:11] *** Quits: Guest3755 (~Guest37@171.121.107.25) (Ping timeout: 252 seconds)
[03:07:59] <rtypo> perhaps "visual studio code"
[03:09:58] *** Joins: masber (~masber@213.55.224.30)
[03:10:28] *** fdauihfu is now known as irado
[03:12:34] *** Quits: soetz (~soetz@2a01:cb14:ab4:6700:c97c:6e38:cb98:8ef0) (Quit: Client closed)
[03:12:51] <[itchyjunk]> ah perhaps
[03:12:58] *** Quits: kmh (~kmh@p200300df5f04ef0001b8ec8105a9b237.dip0.t-ipconnect.de) (Quit: Leaving)
[03:12:59] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 252 seconds)
[03:16:49] *** Parts: pilcrow (~pilcrow@45.76.227.43) ( )
[03:16:55] *** Joins: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[03:17:31] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[03:18:28] *** Joins: quartz (~quartz@user/quartz)
[03:19:43] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:20:00] *** Joins: flaknet99 (~0x100@32.211.211.39)
[03:21:28] *** Joins: jazzy (~jaziz@2600:380:8426:9919:5895:c92b:8b8c:8b81)
[03:23:22] *** Quits: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:23:33] *** Joins: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[03:23:52] *** night_wulfe_ is now known as night_wulfe
[03:24:27] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8dd5:65e7:4991:216e)
[03:29:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[03:29:04] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[03:29:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:29:25] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Quit: Leaving.)
[03:30:37] *** Joins: xsperry (~as@user/xsperry)
[03:30:38] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[03:30:43] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Read error: Connection reset by peer)
[03:31:03] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[03:37:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:37:19] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:40:05] *** Quits: masber (~masber@213.55.224.30) (Quit: Client closed)
[03:45:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:46:24] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:02:17] *** Joins: paravida (~myChateau@71.215.86.34)
[04:02:28] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[04:04:01] *** Quits: snake (~snake@user/snake) (Ping timeout: 252 seconds)
[04:05:32] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:14:59] *** Joins: rvgate (~rvgate@user/rvgate)
[04:17:09] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[04:17:34] *** Joins: paravida (~myChateau@71.215.86.34)
[04:18:51] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[04:19:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:20:53] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[04:21:24] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[04:22:14] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 265 seconds)
[04:22:53] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[04:23:05] *** Joins: snake (~snake@user/snake)
[04:23:16] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[04:23:49] *** Quits: snake (~snake@user/snake) (Client Quit)
[04:23:56] *** Quits: zaher (~zaher@37.48.183.249) (Ping timeout: 252 seconds)
[04:26:24] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[04:26:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 250 seconds)
[04:28:11] <[itchyjunk]> man i am slacking offf
[04:29:08] <flaknet99> lol me too someone started talking about sea peoples and now i'm looking up atlantis related topics
[04:30:27] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[04:31:16] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:32:23] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[04:32:53] <[itchyjunk]> I am not doing anything productive. drank coffee in the morning, got hyperand didn't accomplish anything
[04:33:19] <arahael> it's 11am here.  havent woken up yet.  had a coffee and a bath...
[04:35:54] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:36:48] <[itchyjunk]> yeah coffee really makes me crash
[04:36:56] <[itchyjunk]> wait you aren't awake after a coffee and bath?
[04:36:59] <[itchyjunk]> hmm
[04:37:07] <[itchyjunk]> got my midterm back, i did decent!
[04:37:19] <[itchyjunk]> looks like i fucked up some stuff but he didn't reduce much points wow
[04:37:47] <arahael> [itchyjunk]: i didnt clarify that i have completed my bath, but this is entering TMI topics... ;)
[04:38:23] *** Joins: frost (~frost@59.71.244.36)
[04:39:37] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[04:39:43] <[itchyjunk]> had a bath, sounds like past tense
[04:39:44] *** Joins: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net)
[04:39:56] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[04:40:18] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[04:44:11] *** Joins: prime (~prime@173.213.88.248)
[04:47:15] <arahael> hmm...
[04:49:11] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[04:49:48] *** Joins: kmh_ (~kmh@p200300df5f32ed00e9e24169dc5a56fc.dip0.t-ipconnect.de)
[04:51:55] *** Quits: kmh (~kmh@p200300df5f04ef00e9e24169dc5a56fc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:54:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:55:50] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[05:01:06] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[05:01:26] *** Quits: emf (~emf@2620:10d:c090:400::5:38ea) (Quit: emf)
[05:01:40] <JimmyRustles> in game development, should key presses be detected once per a fixed time to avoid issues with the game behaving differently at different framerates?
[05:01:49] <JimmyRustles> as opposed to on every frame
[05:02:13] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[05:02:19] *** Quits: Guest3722 (~Guest37@171.121.36.172) (Quit: Ping timeout (120 seconds))
[05:02:26] <flaknet99> input should be polled as frequently as possible
[05:03:01] <[itchyjunk]> would depends on the game, i assume
[05:03:29] <[itchyjunk]> but i agree, should get it as ferquently as possible
[05:03:36] <[itchyjunk]> and figure out balancing mechanism later if needed
[05:03:58] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:04:35] <JimmyRustles> thanks
[05:04:39] *** Joins: brabrax (~brabrax@user/brabrax)
[05:04:48] <JimmyRustles> so if i do that, it'll avoid the game inputs being slower on slower framerates?
[05:05:19] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[05:06:00] <arahael> i would decouple it from frame rates, i think.
[05:08:02] <flaknet99> people often go on and on about how powerful egypt was but barely ever mention india, https://www.youtube.com/watch?v=rMeAw-gZ1PQ#t=3m3s  who built this crazy bridege across the sea to sri lnka 7000 years ago
[05:08:04] <bayaz> Title: Rama Setu (Adam's Bridge) Scientific explanation with proof 
[05:09:31] <[itchyjunk]> indias development came some time after egypt, more or less
[05:10:15] <flaknet99> yet the first giant structure they built is thousands of years after this bridge
[05:10:15] <[itchyjunk]> sumarian tablets are quite a bit detailed too
[05:10:30] <[itchyjunk]> bridge that doesn't exist but is supposed to?
[05:10:39] <[itchyjunk]> it will be impressive once it's found
[05:10:57] <flaknet99> its right there in the ivideo
[05:11:11] <[itchyjunk]> there are aliens in the videos too
[05:11:15] <flaknet99> sea level has raised since it's time
[05:11:17] <[itchyjunk]> i mean actual bridge
[05:11:24] <[itchyjunk]> sounds like excuses
[05:11:28] <flaknet99> sounds like science
[05:11:43] <[itchyjunk]> yes science is that part that says "the text talked about building a bridge"
[05:11:52] *** Quits: prime (~prime@173.213.88.248) (Quit: and then my friend you die)
[05:12:59] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:17:13] *** Quits: xff0x (~xff0x@2001:1a81:5287:3100:448c:6d89:40d5:fb1d) (Ping timeout: 252 seconds)
[05:17:19] <flaknet99>  It was reportedly passable on foot until the 15th century when storms deepened the channel. Rameshwaram temple records say that Adam's Bridge was entirely above sea level until it broke in a cyclone in 1480.[3][4]
[05:17:25] <flaknet99> i guess a cyclone knocked it out
[05:18:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:18:28] <JimmyRustles> i don't understand how this works, if i poll the keypresses every 20ms but my game is running at 10fps, the keypresses will get polled once every 100ms and run differently than at 60fps
[05:18:45] *** Joins: xff0x (~xff0x@2001:1a81:52a2:cc00:4234:2859:27a7:60ed)
[05:19:28] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[05:19:41] <flaknet99> if you poll at 60 fps  that should be roughly 20ms
[05:20:17] <flaknet99> why are you thinking to tie it to some arbirary timeslice
[05:20:41] <flaknet99> it should be as fast as possible, and the only way around the frame latency is to use another thread
[05:21:24] <flaknet99> it's not going to make the simluation any smoother
[05:22:55] <JimmyRustles> ok i've just changed it to poll every frame
[05:23:13] <JimmyRustles> but i've got a bug in my game where my ships move much slower at 10fps than at 60fps
[05:23:26] <JimmyRustles> even though i'm doing a physics tick function based on the delta between the last tick
[05:24:31] <JimmyRustles> https://bpa.st/2U3A
[05:24:33] <flaknet99> position += velocity * delta?
[05:24:33] <bayaz> Title: View paste 2U3A 
[05:24:51] <JimmyRustles> line 360 is where the physics tick happens
[05:24:58] <JimmyRustles> myship.x += (myship.vel) * math.sin(rotation_rads) * time_since_phys_tick
[05:25:01] <JimmyRustles> and same but with cos for y
[05:25:53] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:25:57] <InPhase> JimmyRustles: Fix this rotation lock error:  if myship.rotation > 360: myship.rotation = 0
[05:25:57] <PlanckWalk> Variable-sized physics ticks is often a recipe for woe and pain.
[05:26:06] *** Joins: flaknet99 (~0x100@32.211.211.39)
[05:26:17] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:26:25] <JimmyRustles> InPhase: what should it be?
[05:26:30] <JimmyRustles> PlanckWalk: how else should i do it?
[05:26:40] *** Joins: flaknet99 (~0x100@32.211.211.39)
[05:27:10] <JimmyRustles> oh
[05:27:13] <JimmyRustles> it should be rotation - 360?
[05:27:14] <InPhase> JimmyRustles: If you want to cap it from 0 to 360, then:  if > 360, subtract 360.  if < 0, add 360.
[05:27:19] <JimmyRustles> got it, thanks
[05:27:45] <InPhase> JimmyRustles: That is valid assuming the change will not exceed going to 720 or under -360.
[05:28:10] <JimmyRustles> maximum rotation is 120 degrees per second
[05:28:18] <JimmyRustles> so unless it's running at 3 seconds per frame it should be fine
[05:28:37] <InPhase> JimmyRustles: Next you'll want to abstract your physics update so that player and ship are updated by the same function.
[05:28:52] <InPhase> JimmyRustles: Using a base class will help with that.
[05:29:09] <JimmyRustles> i'm not sure what you mean by that
[05:29:18] <Thedarkb-Desktop> On my RPG I just tie everything to the frame rate because I don't think it really matters for a 2D game.
[05:30:20] <InPhase> JimmyRustles: And next, last_phys_tick is not set correctly.  Do cur_time = time.time(); time_since_phys_tick = cur_time - last_phys_tick; last_phys_tick = cur_time
[05:30:54] <InPhase> JimmyRustles: Then your delta time is always exactly the time between loops.  Since you call time.time() twice in your logic, you are actually ignoring all the processing time in the middle.
[05:31:33] *** Joins: Samian (~Sami@user/samian)
[05:32:23] <JimmyRustles> ok i've done that
[05:32:29] <InPhase> JimmyRustles: If you think carefully you'll discover this will result in differing movement rates with changing framerate, although they will not scale exactly proportional to frame rate.
[05:32:55] <InPhase> Locking it to a single clock call synchronizes your physics to the real world.
[05:33:03] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:33:17] <JimmyRustles> it's still running slower at 10fps after that change
[05:33:30] <InPhase> Show the updated version.
[05:33:54] <JimmyRustles> https://bpa.st/JPMQ
[05:33:56] <bayaz> Title: View paste JPMQ 
[05:34:22] <JimmyRustles> i guess i should take the enemyaitick code out of that block and put it after or before
[05:34:24] <InPhase> Of the whole file?
[05:34:45] <InPhase> Oh, but you still have last_phys_tick = time.time()
[05:34:53] <JimmyRustles> https://bpa.st/JNVA
[05:34:54] <bayaz> Title: View paste JNVA 
[05:35:00] <InPhase> You missed the most important part.  :)
[05:35:01] <JimmyRustles> oh ok
[05:35:04] <JimmyRustles> i understand now
[05:35:39] <JimmyRustles> still moving slowly at 10fps
[05:35:41] <JimmyRustles> this is the updated code
[05:35:42] <JimmyRustles> https://bpa.st/UTEQ
[05:35:44] <bayaz> Title: View paste UTEQ 
[05:37:33] *** Joins: Guest3273 (~Guest@host13.190-137-37.telecom.net.ar)
[05:38:48] <InPhase> JimmyRustles: Oh.  You're not moving more slowly, you're accelerating more slowly.  myship.vel = myship.vel + myship.accel * time_since_phys_tick
[05:40:45] <JimmyRustles> wouldn't they accelerate the same at different frame rates since it's based on the delta?
[05:41:15] <InPhase> Nope.  v = v0 + a*t is the physics equation
[05:41:43] <InPhase> Your units don't even balance in what you wrote.
[05:42:38] *** Quits: yinghua_ (~yinghua@2800:2121:1400:1db:c0c5:a435:cabe:dd29) (Quit: Leaving)
[05:43:41] <JimmyRustles> isn't that what i'm using?
[05:44:30] <InPhase> Well you don't have the t.
[05:44:50] <JimmyRustles> i thought the t was the physics delta, since it's the time since the last tick
[05:44:57] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:45:01] <InPhase> Yes.  Which is missing from your line.
[05:45:25] <JimmyRustles> myship.vel = myship.vel + myship.accel * time_since_phys_tick, that's what i've got, the time_since_phys_tick at the end is the t, right?
[05:46:43] <InPhase> Well if you have that now, that's correct.  You didn't in your last paste.
[05:47:40] <JimmyRustles> oh you're right
[05:47:43] <JimmyRustles> i didn't realise it was missing
[05:47:53] <InPhase> If you're curious about the math I wrote out an explanation of why it has that form a few years back:  https://physics.stackexchange.com/questions/165388/position-velocity-and-acceleration-relations/165522#165522
[05:47:54] <bayaz> Title: Position, Velocity And acceleration relations 
[05:48:19] <JimmyRustles> https://bpa.st/BP7Q
[05:48:20] <bayaz> Title: View paste BP7Q 
[05:48:28] <JimmyRustles> that's the code now, but it still accelerates slowly at 10fps
[05:48:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[05:49:10] <InPhase> Well the enemy ships are still wrong on acceleration.  (This is why you need a common function for both.)
[05:49:27] <JimmyRustles> yeah i noticed that
[05:49:35] <JimmyRustles> i was just trying to get the code right on the player ship before changing the enemy code
[05:50:12] <JimmyRustles> i'll be back in a couple of minutes, thanks for helping me
[05:54:54] <JimmyRustles> back
[05:54:55] <JimmyRustles> any ideas?
[05:56:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:58:58] <InPhase> Are you sure it is going faster?  I ran it, and it looks the same speed to me.
[06:00:16] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[06:01:41] <InPhase> JimmyRustles: You didn't provide the image files, so I made my own high quality artwork.  ;)  https://i.imgur.com/5kkiJ0d.png
[06:01:41] <bayaz> Type: image/png Size: 18.2 kB 
[06:01:50] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[06:02:07] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[06:02:11] <JimmyRustles> oh actually you're right, it works now
[06:02:14] <JimmyRustles> thanks a lot for your help inphase
[06:02:39] <JimmyRustles> https://i.imgur.com/dgmGsTx.mp4 - that's what it looks like with the proper graphics :)
[06:02:40] <bayaz> Type: video/mp4 Size: 1.0 MB 
[06:02:48] <JimmyRustles> though i like yours
[06:03:35] *** Joins: CoderGuy2 (~CoderGuy@2601:644:101:4f20:9050:6a84:997b:9611)
[06:03:48] <InPhase> :)
[06:03:58] *** Quits: lllh (~llh@198.48.244.21) (Ping timeout: 252 seconds)
[06:04:06] <flaknet99> nice
[06:06:33] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:07:01] <Guest3273> what platform/tech for developing are you using?
[06:07:10] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 240 seconds)
[06:07:32] <InPhase> JimmyRustles: Now if you want space dynamics, turn velocity into a vector, so that you get an inertia effect.
[06:08:59] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[06:09:45] <JimmyRustles> Guest2756: python on windows
[06:09:55] <JimmyRustles> InPhase: i might consider that later, i want to keep it simple for now
[06:10:40] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Quit: Leaving)
[06:13:49] *** Joins: Guest65 (~Guest65@p200300c8cf120f0005b7136424d736de.dip0.t-ipconnect.de)
[06:14:02] <JimmyRustles> InPhase: i might consider that later, i want to keep it simple for now
[06:14:07] <JimmyRustles> sorry, didn't mean to send that again
[06:14:47] <InPhase> No problem.  And, good luck with the rest of the game.  :)
[06:15:45] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:15:57] *** Joins: flaknet99 (~0x100@32.211.211.39)
[06:16:12] <flaknet99> what's next on the agenda, asteroid mining outposts?
[06:18:41] <flaknet99> investigating abandoned ships for treasure?
[06:20:22] *** Joins: masta`` (~n0rd@80.49.200.59.ipv4.supernova.orange.pl)
[06:24:16] *** Quits: masta`` (~n0rd@80.49.200.59.ipv4.supernova.orange.pl) (Quit: ( www.nnscript.com :: NoNameScript 4.22 :: www.esnation.com ))
[06:26:52] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[06:28:30] <JimmyRustles> combat with enemies, then starbases where you can buy upgrades
[06:29:06] <flaknet99> why are they fighting?
[06:29:06] *** Quits: Guest65 (~Guest65@p200300c8cf120f0005b7136424d736de.dip0.t-ipconnect.de) (Quit: Client closed)
[06:29:24] <flaknet99> a rogue AI !?
[06:29:49] <Guest3273> JimmyRustles: nice; and looks nice too
[06:30:46] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:30:49] <flaknet99> is this the unicron origins story?
[06:30:55] <Guest3273> (you tabbed other user but no problem)
[06:36:04] <JimmyRustles> thanks
[06:36:20] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:36:30] <JimmyRustles> they're fighting because they each have money and supplies that the other wants
[06:40:43] <flaknet99> i guess they're not taking any prisoners then?
[06:40:53] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[06:40:57] *** Quits: jtgd (~jtgd@068-186-050-156.res.spectrum.com) (Changing host)
[06:40:58] *** Joins: jtgd (~jtgd@user/jtgd)
[06:41:33] *** Joins: xiongxin (~quassel@119.123.100.167)
[06:42:03] * flaknet99 activates ships self destruct sequence and pods out into hyperspace
[06:43:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:44:15] *** Joins: masta`` (~oyster@80.49.200.59.ipv4.supernova.orange.pl)
[06:44:24] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:44:39] *** Joins: flaknet99 (~0x100@32.211.211.39)
[06:44:44] <flaknet99> SPACE PIRATES!
[06:45:12] <flaknet99> you infiltrate the enemy ships through diplomatic channels
[06:45:31] <flaknet99> to deactivate their self destruct
[06:46:56] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 252 seconds)
[06:50:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:53:57] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:04:54] *** Quits: masta`` (~oyster@80.49.200.59.ipv4.supernova.orange.pl) (Changing host)
[07:04:54] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[07:05:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[07:08:18] <arahael> Anybody here uses the fish shell? If so, would you happen to know what the fish version of `declare -xp` is?
[07:12:16] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[07:13:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:13:51] *** Joins: dre (~dre@2001:8003:c932:c301:91f3:44d0:e7a2:4247)
[07:15:07] *** Quits: Guest3273 (~Guest@host13.190-137-37.telecom.net.ar) (Remote host closed the connection)
[07:17:43] *** Joins: Russ[m] (~russrussn@2001:470:69fc:105::1:131)
[07:24:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:26:24] *** Parts: Russ[m] (~russrussn@2001:470:69fc:105::1:131) ()
[07:32:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[07:34:22] *** Quits: xff0x (~xff0x@2001:1a81:52a2:cc00:4234:2859:27a7:60ed) (Ping timeout: 260 seconds)
[07:34:58] *** Joins: xff0x (~xff0x@2001:1a81:52a2:cc00:afd6:85eb:5a44:1d7e)
[07:38:31] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[07:39:13] *** Joins: xiongxin (~quassel@113.116.32.113)
[07:39:14] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[07:39:55] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[07:40:41] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[07:42:10] *** Joins: password2 (~password@user/password2)
[07:46:42] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[07:54:15] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:01:38] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[08:03:22] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[08:05:28] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Client Quit)
[08:11:28] *** Joins: hexingb (~hexingb@2409:8902:7ba3:ac7c:6909:943c:33c7:f38e)
[08:14:12] *** Joins: node1 (~node1@user/node1)
[08:15:34] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[08:15:54] *** Quits: hexingb (~hexingb@2409:8902:7ba3:ac7c:6909:943c:33c7:f38e) (Ping timeout: 260 seconds)
[08:18:55] *** Joins: hexingb (~hexingb@2409:8902:7ba7:279d:746e:1dd4:3d4f:efc4)
[08:21:19] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[08:24:18] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:24:28] *** Joins: Buttercat (~Buttercat@user/buttercat)
[08:28:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[08:28:53] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[08:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:05] *** Joins: cm007magnum (~Rheanna@218.78.88.163)
[08:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:31:53] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:33:02] *** Joins: emf (~emf@2620:10d:c090:400::5:f81e)
[08:34:55] *** Quits: emf (~emf@2620:10d:c090:400::5:f81e) (Client Quit)
[08:47:01] *** Joins: Samian (~Sami@user/samian)
[08:49:19] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[08:49:53] *** Joins: mei (~mei@user/mei)
[08:52:54] *** Quits: LiftLeft (~LiftLeft@172.83.47.124) (Ping timeout: 265 seconds)
[08:54:21] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[08:54:38] *** Quits: jazzy (~jaziz@2600:380:8426:9919:5895:c92b:8b8c:8b81) (Ping timeout: 260 seconds)
[08:55:06] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[08:58:13] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[08:58:14] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[08:58:14] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[09:01:49] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:02:06] *** Joins: img (~img@user/img)
[09:02:46] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[09:03:41] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Quit: Quit)
[09:11:16] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[09:13:30] *** Joins: jinsun (~quassel@user/jinsun)
[09:19:17] *** Quits: cm007magnum (~Rheanna@218.78.88.163) (Remote host closed the connection)
[09:19:39] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:79ae:6d91:1946:70f1) (Read error: Connection reset by peer)
[09:19:59] <beaky> i like the fish shell but i find it being slow and non-default so i quit using it
[09:21:05] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[09:21:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:21:17] <dunkeln> yeah agreed, It's been a year with fish and I still prefer bash over it.
[09:21:36] <dunkeln> sometimes it just....stops
[09:24:53] <dodo> you stuck to it for a year despite prefering bash?! 
[09:24:58] *** Joins: kobalt (~rsonx@user/kobalt)
[09:25:24] *** Joins: CucumberSalad (~CucumberS@2601:182:280:bde0:21cc:7842:d2e9:5f29)
[09:26:54] <arahael> It seems generally saner, I find it's quite decent on my home systems, but more painful at work where we have an antivirus installed.
[09:29:15] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[09:31:42] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:32:30] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[09:32:30] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[09:32:30] *** Joins: BenLand100 (~bland@user/benland100)
[09:34:56] <CucumberSalad> Any old-school programmers here?
[09:35:38] <kobalt> you mean old programmers?
[09:35:50] <flaknet99> like FORTRAN?
[09:35:55] <flaknet99> or ... older?
[09:36:36] <CucumberSalad> Fortran or older yes
[09:37:08] <flaknet99> are you trying to use one of those babbage machines?
[09:37:34] <CucumberSalad> I don't know what that is but I want to know what they think about program languages like Go, Typescript and Rust
[09:39:18] <arahael> CucumberSalad: There are a few. What do you want to know?
[09:39:54] <arahael> CucumberSalad: Ah, what they thin about Go, Typescript, Rust...  It really depends.  Some of us like Go, actually - it's relatively simple, and developers don't try to do complicated shit.
[09:39:56] <CucumberSalad> Like comparing languages such as C#, Python, Java to those newer languages are the older ones still better and if so, why?
[09:40:27] <InPhase> lol.  Are we counting C# and Python as old languages now?
[09:40:34] <arahael> CucumberSalad: Rust is vastly better than C++, as an example, becuase it has less undefined behaviour, so it works, but we don't really like Rust as such because it's relatively complicated and developers try to do complicated shit.
[09:40:40] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[09:40:47] <arahael> CucumberSalad: I'm not truely old-school, mind you - I just mix in circles who are.
[09:41:23] <arahael> CucumberSalad: Oh, and as for C# and those new-fangled kids who use python...  Get outa my lawn!
[09:41:50] <beaky> nice i like python
[09:42:03] * arahael yells at beaky to get outa his lawn!
[09:42:45] <InPhase> In college, I admit we kind of poked fun at one of my classmates for liking to use Python, a new fringe language without much support.
[09:42:45] * beaky picks up his tea set and exits the lawn
[09:43:10] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[09:43:25] *** Joins: gggp (~textual@221.219.74.187)
[09:43:27] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Changing host)
[09:43:27] *** Joins: AMG (ghebo@user/amg)
[09:43:47] * arahael finds teaspoon that was already there when beaky invaded, and throws that at him hard: "And take it all with you!" :)
[09:44:14] <arahael> Heh, well, python does get a lot of stuff right.  Just not everything. :(
[09:44:30] <beaky> what are the main things that python gets wrong 
[09:44:37] <arahael> The distribution story.
[09:44:47] <arahael> ANd the package dependency story.
[09:44:56] <flaknet99> i HATE the : after else in python
[09:44:59] <arahael> pip is too naive, and not terribly secure either.
[09:45:16] <flaknet99> or just in general
[09:45:27] <arahael> beaky: But as for the dev experience itself, python is... Fine.
[09:45:48] <arahael> flaknet99: The : indicates the start of a block in python, so the else needs it.
[09:45:57] <arahael> An indentation block, I mean.
[09:45:59] <flaknet99> why not the if then
[09:46:18] <arahael> It does, where it indicates teh start of the indentation block.
[09:46:25] <arahael> if blah blah: <-- See that?
[09:46:40] *** Quits: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[09:46:59] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:47:38] <flaknet99> oh yeah my B
[09:47:48] <flaknet99> my only python experience is the script someone pasted last night
[09:47:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[09:48:45] <flaknet99> but isn't it a pointless token? you could parse the block without it
[09:49:04] <pyzozord> I'm not sure about rust. I asked once in the rust channel how to do something that's easy to do in typescript and the result was quite ugly https://ideone.com/0clZ9a
[09:49:08] <bayaz> Title: Ideone.com 
[09:49:30] <arahael> flaknet99: Indeed you probably can.
[09:49:34] <beaky> nice i like rust
[09:49:48] <pyzozord> python alternatives to things often turn out beautiful
[09:50:22] <beaky> yes soon python will get an alternative for sum types and pattern matching
[09:50:25] <smallville7123> is it normal for a lambda argument to become invalidated?   https://gist.github.com/mgood7123/5af9651367c4ac81dd9c015ec2d4d0c2
[09:50:26] <bayaz> Title: a.cpp 
[09:51:38] *** Quits: mei (~mei@user/mei) (Quit: mei)
[09:51:53] <InPhase> CucumberSalad: Personally, I think Go was a misfire of a language which has been losing popularity; TypeScript seems to be an attempt to fix JavaScript but I'm not sure it can be fixed in a backwards compatible way; Rust has a lot of potential and mostly needs more production ready library development; C# is still just MS Java (created for market positioning) and seems to have already been abandoned 
[09:51:59] <InPhase> as a target goal by MS; Python is now the top beginner language and also one of the top ways to rapidly write smaller bits of code for scientific analysis, server side web code, and system administration, but remains limited for large applications or high performance code; Java remains a mono-paradigmatic language which gives it some assets for training up new programmers using it, but which hinders 
[09:52:04] <arahael> pyzozord: What are you doing with the rust example? Are you trying to elegantly unpack the structure, or are you trying to get the 'foo' element for whatever you've provided?
[09:52:05] <InPhase> its flexible and clean usage.  Caveat, although I've held onto some of those positions for a very long time, my evaluations do sometimes change with time.  :)
[09:52:14] <arahael> pyzozord: Which is basically row typing, arguably.
[09:53:07] <arahael> InPhase: I dunno, in the devops space, Go seems quite good, and it solves the distribution story *very* nicely: Write it, and in the bog standard typical dev flow, you get a binary that works on any system you just copy over to.
[09:53:16] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[09:53:45] *** Joins: node1 (~node1@user/node1)
[09:54:08] <smallville7123> is it normal that, for a lambda A that returns a lambda B that uses lambda A argument, lambda A's argument can become invalid inside of lambda B? https://gist.github.com/mgood7123/50aa6e2615e716b5ff7872a7b0cf855b
[09:54:09] <bayaz> Title: lambda.cpp 
[09:54:45] <arahael> InPhase: With Rust, as an example, you often have to do things in a particular way, and if you're building on say, Ubuntu, it might not run on someone's Redhat system unless you take pains to make it statically linked, and even then you have issues, unless you use musl...
[09:55:02] <pyzozord> I have real life example of python doing heavy lifting as virtually the only language for entire microservice architecture for a leading media company in the internet space
[09:55:27] <pyzozord> python is very capable of large scale projects
[09:55:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[09:55:47] <arahael> smallville7123: You've got a fairly large paste there, it's difficult to see, at a glance, what the issue is.
[09:55:50] <pyzozord> i don't know about go, but I suspect the same is true, it was literally designed for this purpose
[09:56:04] <dunkeln> dodo: what can i say, some faetures were good
[09:56:11] <InPhase> arahael: I suppose it's reasonable to add toolchain development next to libraries on the list of things Rust could use work on.
[09:56:17] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:56:29] *** Joins: flaknet99 (~0x100@32.211.211.39)
[09:56:49] <arahael> InPhase: Sure, but part of the problem is that Rust tries hard to interact with teh system libraries, etc.  As opposed to a typical go package, which does not depend on anything outside of Go.
[09:57:11] <pyzozord> arahael: I don't really know what that rust example is doing, I was hoping maybe someone here would explain it. Someone in the ##rust channel gave it to me when I asked "how can you do this typescript example in rust". After they gave me this example they said "but I promise usually things in rust are elegant"
[09:57:32] <pyzozord> so I'm having my doubts about how comfortable it is to write in rust
[09:58:16] <arahael> pyzozord: The difficulty with your typescript example is that it isn't really clear what it's an example of, and I think the Rust example was reading more into the typescript example than he needed to.
[09:59:12] <arahael> pyzozord: Ie, maybe he tried to hack on row typing in his rust example, which is what that pattern often does in typescript.  But you don't typically use row typing when you're just unpacking something in Rust.
[10:00:09] <arahael> pyzozord: Row typing, to simplify, is where you have types A, and B, which both just happen to have a member called 'foo', and so the type system can just see that both have 'foo', for whatever artibrary type you provide in - if it has 'foo', it type checks and you can query it.
[10:00:22] <arahael> pyzozord: Row typing is unusual.
[10:01:45] <pyzozord> the focus of my original question was on "can you do things like Pick<> in typescript"
[10:02:03] <pyzozord> *in rust
[10:02:50] <flaknet99> rust could take a few clues from COBOL
[10:02:56] <arahael> pyzozord: That's difficult in the majority of static type systems. Ironically, that's fairly easy in Go.
[10:03:06] <arahael> (With limitations)
[10:03:28] <pyzozord> don't get me wrong, part of me wants to like rust, but from all I heard so far (without trying it) I heard it's quite cumbersome
[10:04:23] *** Joins: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[10:04:44] <pyzozord> I'm not sure what static type system is, but wikipedia says that typescript is it
[10:04:46] <beaky> yes for Pick<> on steroids you need row polymorphism
[10:05:06] <flaknet99> who want to rewrite my collatz conjecture search program in rust and post the benchmarks  you have to compile mine with gcc though so i know the right optimizations are getting set
[10:05:19] <arahael> pyzozord: typescript tries to hack on a static type system in an ecosystem that largely doesn't do it.  It does so remarkably well, but it's a cludge, and isn't perfect.
[10:05:55] *** Quits: Quietwalker (~X@191.96.67.98) (Ping timeout: 252 seconds)
[10:05:55] *** Quits: CucumberSalad (~CucumberS@2601:182:280:bde0:21cc:7842:d2e9:5f29) (Quit: Client closed)
[10:06:02] *** Quits: hexingb (~hexingb@2409:8902:7ba7:279d:746e:1dd4:3d4f:efc4) (Ping timeout: 260 seconds)
[10:06:06] *** Joins: TiredGuy (uid193337@id-193337.tinside.irccloud.com)
[10:06:16] *** Quits: TiredGuy (uid193337@id-193337.tinside.irccloud.com) (Client Quit)
[10:06:26] <arahael> pyzozord: And in practice, needing to use Pick<> is unusual.
[10:06:35] *** Joins: hexingb (~hexingb@2409:8902:7ba5:ca1c:e1e6:1d20:6121:8191)
[10:07:10] <arahael> pyzozord: You could have just used a.foo instead, in that particular case, as an example.
[10:07:11] *** Joins: MJCD (uid193337@user/mjcd)
[10:07:38] <pyzozord> from my experience we constantly use derived types things like "these fields from this type plus fields from the return type of the promise which is return by this function, but never with this field, and always not nullable"
[10:08:08] <arahael> pyzozord: Right, that's a javascript-ism, which is weird and unusual almost everywehre else.
[10:08:56] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:08:56] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[10:09:04] <jeaye> pyzozord: Rust and TypeScript are very different languages with very different use cases. Rust is a systems language with the perf characteristics of C and C++, so working with it is going to be more cumbersome than TS if you're trying to do JavaScript-like code. If you're writing high performance systems, though, you'll have a hard time beating Rust in terms of both safety and elegance.
[10:09:22] <arahael> pyzozord: The rust example does it like this: Hmm, so your problem space requires a type that has a particular member.  Lets define that type.  Then state that types A and B conform to that type.  Now you can use that member for anything that conforms to that type (that is, A and B).
[10:09:30] <jeaye> i.e. game engines, OS kernels, high frequency trading, etc
[10:10:01] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[10:10:53] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 264 seconds)
[10:11:01] <pyzozord> arahael: so that sounds much more like C really
[10:11:03] <beaky> yes if you want something like Pick in rust there are crates to help cut down the boilerplate and provide macros to present sorta-rowtypes
[10:11:10] <arahael> pyzozord: Not really, C can't do this *at all*.
[10:11:12] <pyzozord> "just define types you need, no derived types"
[10:11:57] <arahael> pyzozord: For an arbitrary type, how do you know that the 'foo' member is the same as a 'foo' member on some other type?
[10:12:36] <pyzozord> arahael: oh ok, well I guess that's more C++ than C, something like inhertiance or features or traits or some other c++ism
[10:12:42] <beaky> indeed that is one limitation of just relying on picking field names
[10:13:21] <arahael> pyzozord: C++ can sort of do this with templates, as can rust (with macros), but the preference in rust is to actually properly express this in the type system.
[10:14:19] <beaky> but still useful for like structural subtyping (so if you want to specify that you work only with the set of fields you need)
[10:14:25] <arahael> pyzozord: This reminds me of a bug in yaml a while back.  In yaml, if you use the word "No", it's interpreted as false, even though you actually meant "the two-letter iso code for norway".  Javascript people just don't care, anything that happens to have the same name is fair game.
[10:14:27] <pyzozord> arahael: what's the proper expression? I think the typescript example is quite clearly expressed in it's typesystem
[10:14:45] <arahael> pyzozord: The typescript example concisely expresses a *pattern in javascript*.
[10:14:47] *** Joins: audiofreeze (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com)
[10:15:14] *** Quits: Matt|home (~matt@adsl-74-233-58-156.mia.bellsouth.net) (Read error: Connection timed out)
[10:15:50] *** Quits: hexingb (~hexingb@2409:8902:7ba5:ca1c:e1e6:1d20:6121:8191) (Ping timeout: 260 seconds)
[10:16:02] <pyzozord> arahael: it just says "there is an object A with fields foo and bar, and there is an object B with field foo that is the same field as field foo in object A"
[10:16:26] <arahael> pyzozord: It's really a matter of the type system.  Lets say you're implementing a function that expects a type A, and all teh function needs to do is get the 'foo' member of that value. Why are you suddenly passing in a type B instead?
[10:16:28] <pyzozord> i'm not sure what's javascript about it really
[10:16:39] *** Joins: mmfood (~mmfood@45.135.187.59)
[10:16:50] <arahael> pyzozord: The javascripty-aspect of it is because javascript completely blurs the line between a map/dictionary, and a type.
[10:17:18] <arahael> And yeah, in typescript, it doesn't look like you ever properly state that the 'foo' in those two objects are the same.
[10:17:44] <arahael> But it's a pattern so heavily used in javascript that it's pointless trying to ensure it's type safe.
[10:17:47] <pyzozord> types and objects are completly separate, all type information disappears after compilation. Not sure what do you mean about bluring the line
[10:18:20] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[10:18:28] <arahael> pyzozord: You're still keeping the tyep system in your head a bit there when you say "there's an object with field foo that is the same field as field foo in object A".
[10:18:58] *** Joins: hexingb (~hexingb@111.30.224.85)
[10:19:15] <pyzozord> I'm investigating deeply because I think there is some mindset/point of view difference and I can't figure out what is it
[10:19:32] <arahael> This is even more dynamic than python's famous 'ducktyping' - at least in python, the objects are expected to actually be equivalent, but here, you're looking at the specific fields, so what you want is proper row typing.
[10:20:13] <pyzozord> yes, you can pass any object that would have field "foo: string"
[10:20:14] <beaky> yes one mindset difference is 'nominal type system' vs 'structural type system' 
[10:20:27] <pyzozord> aah, that could be it
[10:20:32] <arahael> pyzozord: The specific example in rust would normally be done by simply extracting the member you want before calling the function.
[10:20:42] <pyzozord> rust is not duck-typing system, and typescript is
[10:20:43] <arahael> beaky: Very good keywords to point out - thanks.
[10:21:11] <beaky> and the idea is that with row polymorphism you can get the structural typing (which says 'if it has these fields then it typechecks') in nominal type system
[10:21:54] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[10:22:20] *** Joins: xiongxin (~quassel@119.123.102.171)
[10:22:33] <beaky> and typescript happens to be one of those languages with row types (which i think pick does and i guess typescript has proper row polymoprhic records which most other statically-typed languages like rust or haskell lacks even tho you can sorta get them with macros and lenses and stuff)
[10:22:44] <arahael> pyzozord: The better example is what happens when you have an object that has 'foo' defined as a member, but is categorically NOT equivalent to 'foo' in the other types you're using?
[10:23:06] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[10:23:06] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[10:23:06] *** Joins: BenLand100 (~bland@user/benland100)
[10:23:37] <arahael> beaky: Indeed, though I'll point out that *purescript* has row typing, if I recall; I suspect mostly as a side effect of being implemented in the javascript ecosystem that so heavily requires the pattern.
[10:23:50] <beaky> o yes purescript too 
[10:23:57] <beaky> i think that one is what inspired typescript
[10:24:04] <arahael> Oh, wow.
[10:24:07] <pyzozord> arahael: yes that's the fundamental anti-duck-typing argument "if my grandmother had wheels she would be a bike"
[10:24:36] <arahael> pyzozord: It's not anti at all, sometimes you do need it, and in Rust or Haskell, the typical approach is to state as such explicitly.
[10:25:02] <beaky> no wait typescript and purescript came out around the same time i think
[10:25:11] <arahael> pyzozord: ie, to define a trait "HasFooMember" and ensure that types explicitly conform to it.
[10:25:22] <pyzozord> go tit
[10:25:25] <pyzozord> got it
[10:25:26] <beaky> so i think frustration of haskell's lack of them inspired row types
[10:25:47] <beaky> they'll just say 'just use lenses bro' but lenses are like monads 2.0
[10:25:58] <arahael> Heh.
[10:26:06] <pyzozord> I'm not sure what is row types
[10:26:08] <arahael> lens works surprisingly well for this.
[10:26:18] <arahael> pyzozord: Ok, a quick summary of the type systems...
[10:26:38] <arahael> pyzozord: You have your well, crude basic types. Int. String. Float...
[10:26:40] <pyzozord> in typescript we can do Record<string, number> that defines an object that has only fields which have string key and number value
[10:27:09] <arahael> pyzozord: And then you have *product types*, eg, Record<string, number> is a product type, you have Record<n*m> types there, ie, a product of n and m.
[10:27:13] *** Joins: mrig (~mrig@user/mrig)
[10:28:07] *** Joins: user51 (~user51@176.228.115.184)
[10:28:08] <arahael> pyzozord: You also have sum types, which are usually called enums in various ways, "This type can be this, or this, or that, and nothing else".  Eg, you can have 1 + 1 + 1 + 1 possible variations.
[10:28:35] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[10:28:39] <pyzozord> ooh i start to see some pattern
[10:28:55] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[10:28:59] <arahael> pyzozord: Some languages have quite complex sum types, so you can say "This type can be this set of types... Or that set of types...  Or...", but this is still say, 3 + 6 + 2, so you're still summing the types.  Ie, still a sum type.
[10:29:19] <pyzozord> yep, got that
[10:29:35] <arahael> pyzozord: Some languages, like haskell, lets you combine the two, so you can have say, a set of product types.  Eg, (n*m)+(x*y), that's a sum type, still, consisting of product types.
[10:29:42] <pyzozord> you can have a sum type of product types
[10:29:50] <arahael> Right...
[10:30:03] <arahael> Now, in this case, you've got types, and you're listing the members in columns.
[10:30:44] <arahael> With each member in a unique row. "So, see here, you've got all these types, and they just happen to have a member called foo... Lets suggest that these foo's are the same type"...  That's row typing.
[10:31:50] <pyzozord> I lost it on the previous sentence
[10:32:23] <pyzozord> "you've got types, and you're listing the members in columns"
[10:32:45] <arahael> pyzozord: Yeah, lets say you're documenting your types in MS Excel, lets say. Each struct in a column, with the members below in rows.
[10:33:32] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[10:33:36] <pyzozord> ooh, so row types are like structs?
[10:33:58] <pyzozord> kind of complex/compound types?
[10:34:08] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[10:34:36] <pyzozord> meaning types that have fields and each field is a type
[10:34:38] <arahael> No, you wouldn't have row types with *one* struct.
[10:35:12] <flaknet99> wildly offtopic: yo [itchyjunk] i found atlantis! https://archaeologyonline.net/artifacts/cambay
[10:35:15] <bayaz> Title: Gulf of Cambay: Cradle of Ancient Civilization 
[10:35:25] <arahael> Lets say you have multiple structs, say `struct person { String name... }`, `struct vehicle { String name ...}`, `struct book { String name...}`...
[10:35:56] <arahael> pyzozord: Then, you might rightly say: "I want to define a function that expects a TypeWithName, and these types are anything that has 'name' in the member".
[10:36:05] <arahael> THAT is row typing.
[10:36:14] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Remote host closed the connection)
[10:36:23] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[10:36:37] <arahael> But "A function that expects just a person, and nothing else" - isn't using any rowtyping at all.
[10:36:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[10:37:12] <pyzozord> arahael: if you would indulge me for a moment, can we table the row types for a moment, and first figure out what a single struct type would be? It's not a product type and it's not a sum type
[10:37:42] <arahael> pyzozord: structs are regarded as product types; because you have N numbers, with M types.
[10:37:50] <arahael> N *members* with M types.
[10:37:51] <pyzozord> ah I see clear now
[10:38:12] <arahael> beaky: Is that right?
[10:38:38] <pyzozord> so row types are really kind of polymorphism, that lets you switch particular field types in a product type
[10:38:44] <arahael> pyzozord: Yes, they are.
[10:39:04] *** Joins: Randolf (~randolf@184.70.10.188)
[10:39:09] <arahael> pyzozord: You're ultimately specifying how you do polymorphism.
[10:39:13] <pyzozord> cool! I learned something very cool, thanks arahael!
[10:39:48] <pyzozord> and it's clear now why the typescript example was so ugly in rust, it was literally the case of unfortunate literal translation which should never be done
[10:39:52] <arahael> pyzozord: And again, in javascript, they do row type polymorpism so frequently that you're working against the grain if you insist that developers explicitly specify which types can be polymorphic in this way, so they just let you do it anywyehere.
[10:40:00] <arahael> *anywhere.
[10:40:02] <arahael> And yes, indeed.
[10:40:25] <pyzozord> yes all we do in javascript is duck-typing, that's all we know
[10:40:35] <arahael> Now, as beaky implied, there are ways of working around this in Haskell and Rust - and this involves basically telling the compiler how to generate all that code for you explicitly.
[10:40:44] <arahael> Yeah, well, this isn't really duck-typing, either.
[10:41:16] <arahael> With ducktyping, you have the "if it quacks like a duck, walks like a duck, and looks like a duck, then it's a duck", here, you've got "It quacks... Freaking good enough, lets use the quacky bit".
[10:41:29] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[10:41:42] <pyzozord> :D
[10:42:06] <pyzozord> yeah that's exactly what it is
[10:42:18] <pyzozord> "i just need quacking, give me anything that quacks"
[10:42:25] <flaknet99> can you teach a platypus to quack?
[10:42:27] <arahael> And that, is exactly what a trait is in Rust.
[10:43:37] <arahael> flaknet99: You say platypus, but javascript here says that's a freaking duck, dude.  They know how to quack.
[10:43:47] <pyzozord> cool, I'll need to reevaluate my position on rust, certainly my previous one has been largely invalidated
[10:44:26] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[10:44:36] <arahael> :)
[10:45:03] <pyzozord> js folks don't really care what is it really, they don't say "it's a duck!" they just say "it quacks! good enough"
[10:46:15] <pyzozord> you never have certainty what kind of object you are dealing with, and really all objects can be mutated at any time, so the meaning of object being of type kind of loses some of it's meaning
[10:46:47] <arahael> Right.
[10:47:03] <arahael> In Rust, you're absolutely certain, always.
[10:47:55] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[10:48:26] <pyzozord> yes, I am so in the javascript mindset that I kind of cant see much outside. The structural typing system is so natural to me that my brain kind of accidentally falls back to structural typing system even when I think about nominal typing system
[10:48:41] <pyzozord> (i think that's what it's called)
[10:49:11] *** Joins: brabrax (~brabrax@user/brabrax)
[10:49:27] <arahael> Yeah, perhaps.
[10:49:30] <pyzozord> arahael: thanks again for taking the time to open my mind
[10:49:39] <arahael> No worries, glad I've had the opportunity. :)
[10:51:18] *** Quits: irado (~irado@177.12.221.62) (Ping timeout: 260 seconds)
[10:52:27] <arahael> pyzozord: As an extension...  I often complain that Java and C don't have sum types.  Do you know why?
[10:52:37] <arahael> (And why it annoys me)
[10:53:05] <pyzozord> arahael: they do have unions, isn't that a sum type?
[10:53:29] <pyzozord> and enums
[10:53:43] <arahael> pyzozord: Unions are a product type, but the enums in C and Java could be a sum type except for one fatal flaw...
[10:54:23] <pyzozord> it can only do numbers?
[10:54:27] <arahael> pyzozord: An enum in C is essentially an integer, you can easily have integers that aren't defined by that enum, and when you do a switch (enumValue), you're not forced to cover every single possible enum.
[10:54:51] <arahael> And yes, also the enums are very limited, but even if they were only numbers, that's not the worst of it.
[10:55:24] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (Quit: WeeChat 3.2)
[10:55:25] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[10:55:29] <arahael> There are linters and good warnings that increasingly patch on this, but if you interface with a library that returns a value defined by that enum, that library is perfectly able to return any value it likes.
[10:56:10] <arahael> I'm off for a walk. Back after a bit!
[10:56:15] <pyzozord> cheers!
[10:56:29] <smallville7123> why does this crash? https://gist.github.com/mgood7123/423c20aea80b24e15a81ae6f921b799f        a C++ equivilant (without Qt) does not crash  https://wandbox.org/permlink/N9r4M6uVsz5qAJir
[10:56:31] <bayaz> Title: main.cpp 
[10:56:32] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[11:00:03] *** Joins: immibis (~hexchat@62.156.144.218)
[11:02:35] *** Quits: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[11:04:26] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[11:05:29] <flaknet99> is this a quiz or are you debugging something
[11:05:51] <flaknet99> what line vaults
[11:05:52] <flaknet99> faults
[11:05:53] <smallville7123> im trying to figure out why this crashes
[11:06:05] <flaknet99> add printfs or run a debuffer
[11:06:30] <smallville7123> flaknet99: look at output.txt   -_-
[11:06:51] <smallville7123> flaknet99: (which means scroll down)
[11:07:14] *** Joins: Twipply (~Twipply@user/twipply)
[11:07:45] *** Quits: xiongxin (~quassel@119.123.102.171) (Ping timeout: 265 seconds)
[11:07:49] <flaknet99> k now what
[11:08:13] <smallville7123> -_-
[11:08:24] <smallville7123> pointer:        0x7fcc46d07e50
[11:08:24] <smallville7123> passed_pointer: 0x7fcc46d19820
[11:08:24] <smallville7123> ASSERT: "pointer == passed_pointer" in file ../testCase/main.cpp, line 12
[11:08:28] <smallville7123> ^
[11:08:31] <smallville7123> that
[11:08:46] <flaknet99> is that where it crashed or the assert triggers
[11:08:49] <flaknet99> does assert crash the program?
[11:09:02] <flaknet99> how the f am i supposed to know what the macro does
[11:09:15] <smallville7123> -_-
[11:09:17] <Sqaure> I realized i want to make a program that given a (board game) hex board of specified and terrain and crude geometry make a as realistic map. So i guess you could call it procedurally generated terrain many hard constraints. Ie, house hex adjacent to woods hex surrounded by roads. Im thinking, either i learn shaders and tinker with that or someone prolly has done this and there are existing techniques to do it. 
[11:09:36] <Sqaure> of specified terrain*
[11:09:45] <smallville7123> why does this assert trigger? https://gist.github.com/mgood7123/423c20aea80b24e15a81ae6f921b799f        a C++ equivilant (without Qt) does not trigger the same assertion  https://wandbox.org/permlink/N9r4M6uVsz5qAJir
[11:09:46] <bayaz> Title: main.cpp 
[11:09:47] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[11:11:25] <Sqaure> Anyone know anything about ^
[11:11:41] <flaknet99> temple OS has a hex tile game
[11:11:59] <beaky> nice i like hex tiles they are more elegant than square tiles
[11:12:02] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:12:21] <beaky> too bad every roguelike game insistso n square tiles for some reason when hex tiles are just so much better
[11:13:00] <flaknet99> does Q_ASSERT crash the program?
[11:13:14] <pyzozord> smallville7123: what happens when you do anim->setDuration(255) and 256 in the qt versions?
[11:13:52] <pyzozord> also 127 and 128
[11:14:04] <smallville7123> beaky: probably cus square is easy asf to subtile, where hex is not since it cannot completely fit inside a square texture (most maps are square)
[11:14:11] <beaky> o right
[11:14:15] <beaky> i like square tiles they look nice
[11:14:43] <beaky> but then transport tycoon deluxe uses hex it looks nice too
[11:15:18] <Sqaure> i just dont know what to search for. 
[11:15:40] <flaknet99> hexagon ?
[11:15:56] <Sqaure> i feel what i want is actually mild procedural generation and learning how to write shaders
[11:15:56] <beaky> 'hexagonal grids' https://www.redblobgames.com/grids/hexagons/
[11:15:57] <bayaz> Title: Red Blob Games: Hexagonal Grids 
[11:15:59] <smallville7123> or rather, most objects are rectangular which can be represented via two polygons, where as a hex requires more than 2 polygons and thus takes up more memory 
[11:16:08] <deniska> Sqaure: well, seems like you want some sort of procedural generation
[11:16:43] <smallville7123> pyzozord: why would that have any effect?
[11:17:32] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[11:17:32] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[11:17:32] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[11:17:40] <Sqaure> deniska, the input to the generator will look like this map https://www.aslscenarioarchive.com/uploads/39.2020/pacman-ghost:1601180269%7Cauto-generated.jpg
[11:17:41] <bayaz> Type: image/jpeg Size: 229.2 kB 
[11:17:48] <pyzozord> smallville7123: maybe that auto fails and assumes a char
[11:17:55] <smallville7123> pyzozord: they all crash btw, even 1
[11:18:14] <Sqaure> so every hex and heightmap is fixed. I just want them too look more realistic
[11:18:26] <smallville7123> which is expected as duration is the number of ms that should be taken to animate from start to end
[11:18:27] <Sqaure> .../not unrealistic 
[11:18:28] <pyzozord> smallville7123: huh? but this seems to work https://gist.github.com/mgood7123/423c20aea80b24e15a81ae6f921b799f#file-output-txt-L3
[11:18:28] <bayaz> Title: main.cpp 
[11:18:40] <deniska> Sqaure: but frankly this task you have is more of an art than science. Try making a few variations of each terrain tile/building/unit/etc, picking one at random when generating a map, you can throw a slight terrain height variation with noise, not affecting the major component of the height
[11:18:53] <deniska> Sqaure: rotate buildings around randomly when placing them
[11:19:04] <smallville7123> yes, and it ALWAYS crashes on the third loop thing
[11:19:25] <Sqaure> deniska, well this "algorithm" needs to work with 1000s of maps
[11:19:26] *** Joins: BGL (fifty@75-149-171-58-washington.hfc.comcastbusiness.net)
[11:19:29] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[11:19:32] <Sqaure> ...like the one i showed you
[11:19:33] <pyzozord> what happens if you remove the setLoopCount line?
[11:19:33] <smallville7123> also it seems to always trigger on the third loop thing   *
[11:19:36] *** Joins: vysn (~vysn@user/vysn)
[11:19:53] <smallville7123> pyzozord: that is just the number of times to repeat the animation
[11:19:58] <deniska> Sqaure: sure, but still, first you have to make something work, than to make it fast
[11:20:25] <pyzozord> smallville7123: oh sorry i misunderstood the code
[11:20:35] <Sqaure> it doesnt need to be realtime at all. Can take 10 seconds if it must. 
[11:21:17] <pyzozord> too much c++ stuff
[11:21:32] <pyzozord> bends my brain
[11:22:18] <deniska> smallville7123: try stepping it through in the debugger
[11:22:19] <pyzozord> i'd run debugger and see why is it passed different value
[11:22:44] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[11:23:02] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[11:23:02] <pyzozord> i bet the error is somewhere in your other files
[11:23:10] <pyzozord> some problem with logic in the loop
[11:23:32] <pyzozord> the example in pure c++ doesnt use any of your code
[11:23:39] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[11:23:49] <pyzozord> make qt example that doesnt use any of your code, i bet it will not crash
[11:24:26] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:24:28] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:24:32] <pyzozord> god that c++ really is kind of nasty tbh
[11:24:41] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:24:43] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[11:24:44] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[11:24:44] *** Joins: BenLand100 (~bland@user/benland100)
[11:24:47] <pyzozord> look what they have to do to achieve fraction of javascripts power
[11:26:05] <smallville7123> if i set the loop count to 0 it does not trigger the assert but it also does not play the animation
[11:27:00] <pyzozord> even more reason to believe the real bug is in the looping logic that's not provided in the snippet
[11:28:12] <smallville7123> or rather, if the loop count is 0, then "updateCurrentValue" gets called twice, with the start value, and the passed pointer is valid,   and if the loop count is 1, then "updateCurrentValue" gets called twice, with the start value, and the passed pointer is valid, and then it gets called again in which the animation actually starts, but the passed pointer is now different from the original pointer whic
[11:28:12] <smallville7123> h is still the same
[11:28:57] <pyzozord> well I said my piece
[11:29:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 260 seconds)
[11:29:10] <smallville7123> "17:54:47 pyzozord: look what they have to do to achieve fraction of javascripts power" Invincible LMAO
[11:29:39] <pyzozord> :D
[11:30:09] <smallville7123> "17:52:19 pyzozord: i'd run debugger and see why is it passed different value" do it
[11:30:09] <deniska> not being particularly used to reading/writing C++, lambdas in it weird me out greatly :)
[11:30:56] <deniska> smallville7123: I mean, it's you who wants to know the answer, not us, and it's much easier for you to set the debugger up considering that you already have facilities to compile the program and run it
[11:31:14] <pyzozord> smallville7123: lol you do it :P I don't have your code
[11:31:31] <flaknet99> qglobal.h
[11:31:39] <smallville7123> download and install Qt, then you do :)
[11:31:39] <flaknet99> QtCore/qglobal.h
[11:32:47] <smallville7123> https://www.qt.io/download-qt-installer
[11:32:49] <bayaz> Title: Download Qt: Get Qt Online Installer 
[11:32:52] <smallville7123> pyzozord:  ^
[11:32:53] <smallville7123> :)
[11:32:57] <flaknet99> #    define Q_ASSERT(cond) ((!(cond)) ? qt_assert(#cond,__FILE__,__LINE__) : qt_noop())
[11:33:02] <flaknet99> wut
[11:33:27] <pyzozord> smallville7123: in your snippet your test case inherits from code that is not included in the snippet
[11:33:48] <smallville7123> QGuiApplication is part of Qt
[11:33:50] <pyzozord> smallville7123: also eww, I'm not touching c++, and qt
[11:34:08] <smallville7123> also QVariantAnimation is also part of Qt
[11:34:34] <flaknet99> so if condition is true its a noop
[11:34:53] <smallville7123> flaknet99: yup, that is usually how an assertion works :)
[11:35:15] *** Joins: Lyn (~Lyn@user/law)
[11:35:39] <TJ-> smallville7123: without seeing what is in test.h there's no way to know what 'test' class actually does
[11:35:49] <smallville7123> TJ-: scroll down
[11:35:59] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[11:36:53] <smallville7123> to everyone, A GIST CAN CONTAIN MORE THAN ONE FILE
[11:37:00] <TJ-> smallville7123: grrr @ javascript
[11:37:24] <flaknet99> the condition is false in your case
[11:37:34] <flaknet99> so ....
[11:37:36] <smallville7123> flaknet99: i know
[11:37:52] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[11:38:10] <pyzozord> looks like https://doc.qt.io/qt-5/qvariantanimation.html has some interpolation schemes, maybe you missunderstand how QVariantAnimation actually works?
[11:38:12] <bayaz> Title: QVariantAnimation Class | Qt Core 5.15.6 
[11:38:20] <smallville7123> i have no idea why the passed pointer changes when the animation actually starts as it shouldnt
[11:39:16] *** Joins: RandolfR (~randolf@184.70.10.188)
[11:39:51] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:40:00] *** Quits: Randolf (~randolf@184.70.10.188) (Read error: Connection reset by peer)
[11:40:02] <pyzozord> study the implementation https://code.woboq.org/qt5/qtbase/src/corelib/animation/qvariantanimation.cpp.html
[11:40:03] <bayaz> Title: qvariantanimation.cpp source code [qtbase/src/corelib/animation/qvariantanimation.cpp] - Woboq Code Browser 
[11:40:16] <smallville7123> pyzozord: updateCurrentValue is simply a function to update the current value of whatever is to be animated, the animation itself computes what value to pass to the function based on many things such as duration, start value, end value, interpolation, easing curve, and possible others
[11:40:43] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[11:40:43] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[11:40:45] <smallville7123> for example:
[11:40:50] <smallville7123> val           : 8
[11:40:51] <smallville7123> val           : 27
[11:40:51] <smallville7123> val           : 29
[11:42:04] <smallville7123> void QVariantAnimation::updateCurrentValue(const QVariant &value)
[11:42:04] <smallville7123> This virtual function is called every time the animation's current value changes. The value argument is the new current value.
[11:42:04] <smallville7123> The base class implementation does nothing.
[11:43:21] *** Joins: xiongxin (~quassel@113.116.32.113)
[11:43:37] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:43:49] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:43:58] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:44:16] <flaknet99> IDK what to tell ya, add some printfs
[11:44:27] <pyzozord> well i don't know for some reason the standard library passes you a different pointer, there are only a few ways to figure out why that is
[11:44:55] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[11:44:56] <pyzozord> read the documentation, read the implementation, debug and see for yourself
[11:45:21] <pyzozord> maybe there is some qt expert then they can help, but otherwise you are kind of on your own
[11:45:30] <smallville7123> pyzozord: the passed pointer is from the lambda itself
[11:45:57] <flaknet99> is that what auto func means?
[11:46:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 252 seconds)
[11:46:48] <smallville7123> auto is simply a type that does stuff too complex to explain here to figure out the correct type of whatever it is being assigned to
[11:46:54] <flaknet99> this syntax is comedic
[11:48:04] <deniska> that's what happens when you make a language mostly compatible with another language, any new syntax you bolt on will be… of debatable beauty :)
[11:48:29] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[11:48:34] <flaknet99> auto func = [&](int * passed_pointer) {auto func = [&](int * passed_pointer) {
[11:48:42] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[11:48:45] <flaknet99> this line is enough to make me never want to touch c++ again
[11:48:52] *** Joins: Pickchea (~private@user/pickchea)
[11:49:11] <smallville7123> basically i create a lambda that takes the argument of int * and then returns another lambda to that makes use of this argument
[11:49:11] <flaknet99> like, this is disgusting
[11:49:21] <smallville7123> flaknet99: nope
[11:49:27] <flaknet99> yeah
[11:49:31] <flaknet99> it truly is vile
[11:49:48] <smallville7123> https://en.cppreference.com/w/cpp/language/auto
[11:49:49] <bayaz> Title: Placeholder type specifiers (since C++11) - cppreference.com 
[11:50:09] <flaknet99> c++99 still alright in my book though
[11:50:25] *** Quits: X-Scale (~ARM@31.22.200.105) (Ping timeout: 252 seconds)
[11:50:34] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 260 seconds)
[11:50:38] <TJ-> smallville7123: looks to me like you're calling a super-class QAbstractAnimation::setLoopCount() from QVariantAnimation() so there's a copy of the value passed so the address of passed_pointer is in the instantiated object
[11:51:08] *** X-Scale` is now known as X-Scale
[11:51:20] <smallville7123> flaknet99: basically this is why it is used    https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html
[11:51:21] <bayaz> Title: clang-tidy - modernize-use-auto — Extra Clang Tools 14 documentation 
[11:51:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:51:44] <flaknet99> autoMATIC
[11:52:05] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[11:52:14] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[11:52:15] <smallville7123> specifically:
[11:52:19] <smallville7123> Iterator type specifiers tend to be long and used frequently, especially in loop constructs. Since the functions generating iterators have a common format, the type specifier can be replaced without obscuring the meaning of code while improving readability and maintainability.
[11:52:37] <deniska> type inference is nice
[11:52:44] <smallville7123> for (std::vector<int>::iterator I = my_container.begin(), E = my_container.end(); I != E; ++I) { }
[11:52:44] <smallville7123> // becomes
[11:52:44] <smallville7123> for (auto I = my_container.begin(), E = my_container.end(); I != E; ++I) { }
[11:52:52] <deniska> makes statically typed languages much more palatable :)
[11:54:18] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[11:54:19] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[11:54:19] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[11:54:47] <smallville7123> also imagine is the type happens to be very very long for some stupid or complex reason
[11:54:48] <smallville7123> my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h = new my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h()
[11:54:52] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[11:54:56] <smallville7123> this can be creately simplified to
[11:55:02] <pyzozord> why do you even need the outer lambda there? you just execute it right away
[11:55:09] <smallville7123> wait no
[11:55:26] <smallville7123> my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h MY_VERY_LONG_TYPE = new my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h()
[11:55:28] <smallville7123> this can be creately simplified to
[11:55:35] <smallville7123> auto MY_VERY_LONG_TYPE = new my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h()
[11:55:49] <pyzozord> I'd keep removing and checking things by binary search divide and conquer method
[11:55:51] <smallville7123> greatly *
[11:55:52] * pyzozord shrugs
[11:56:08] <smallville7123> or even better
[11:56:45] <flaknet99> yes printfs plz
[11:56:48] *** Joins: aradesh (~aradesh@user/aradesh)
[11:56:50] <flaknet99> they solve everything
[11:56:52] <smallville7123> typedef my::class::very::long::foo::void_apple_prog::my_class::fooo:::tuke::h long_type_name;
[11:56:52] <smallville7123> long_type_name MY_VERY_LONG_TYPE = new long_type_name
[11:57:02] *** Joins: Matt|home (~matt@adsl-74-233-58-155.mia.bellsouth.net)
[11:57:08] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[11:57:34] *** Quits: xff0x (~xff0x@2001:1a81:52a2:cc00:afd6:85eb:5a44:1d7e) (Ping timeout: 260 seconds)
[11:57:44] <smallville7123> pyzozord: because this is for a class function which passes "this"
[11:57:51] <smallville7123> for example
[11:58:07] *** Joins: xff0x (~xff0x@2001:1a81:52a2:cc00:e5a6:b6dd:762:ffad)
[11:58:11] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[11:58:15] <smallville7123> ->addAnimation([&](MyClass * tv) {
[11:58:22] <flaknet99> wtf is that
[11:58:35] <pyzozord> keep removing things and checking if it works, once it starts working you know what causes the problem, then you can investigate that thing deeper
[11:58:37] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:58:50] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:58:53] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[11:58:53] <smallville7123> or rather, to simplify
[11:58:58] <smallville7123> ->addAnimation([&](auto * tv) {
[11:59:03] <flaknet99> ahhhh my eyes
[11:59:06] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:59:19] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:59:20] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[12:00:08] <smallville7123> tho   ->addAnimation([&](MyClass * tv) {    is just a convineant way to access "this" if it is unavailable
[12:00:12] <smallville7123> for example
[12:00:15] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:00:27] *** Joins: flaknet99 (~0x100@32.211.211.39)
[12:00:43] <smallville7123> (new myClass())->addAnimation([&](MyClass * tv) { /* ... */ }
[12:00:49] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:01:02] *** Joins: flaknet99 (~0x100@32.211.211.39)
[12:01:13] <smallville7123> in which addAnimation returns MyClass to continue method chaining
[12:01:16] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:02:20] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com)
[12:03:05] <smallville7123> flaknet99: you hate this :)
[12:03:46] <pikapika> has anyone used freebsd here
[12:03:58] <pikapika> (as a desktop)
[12:04:15] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[12:04:36] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[12:04:36] *** Joins: BenLand100 (~bland@user/benland100)
[12:05:25] <deniska> pikapika: I used netbsd very briefly
[12:05:44] <pikapika> deniska, ok
[12:05:44] *** Joins: pulse (~pulse@user/pulse)
[12:05:51] <deniska> but it was on a weirder old computer, so it almost doesn't count :)
[12:05:55] *** Quits: baloona (~baloona@mail.baloona.de) (Quit: WeeChat 2.3)
[12:05:55] <mrig> I've felt tempted to try, but as yet have not.
[12:05:56] *** Quits: gggp (~textual@221.219.74.187) (Ping timeout: 252 seconds)
[12:06:12] *** Joins: baloona (~baloona@mail.baloona.de)
[12:06:25] <mrig> I can't believe how excited I am learning to read a new script :)
[12:06:51] <flaknet99> i hate seeing what they've done to c++
[12:07:06] <flaknet99> i've long since jumped ship though
[12:07:06] *** Joins: gggp (~textual@60.10.194.42)
[12:07:13] <mrig> Curious thing, because your eye's to brain parsing does not happen in the same way.
[12:07:14] <pikapika> flaknet99, what do you use now
[12:07:29] <flaknet99> back to C for a few more months
[12:07:55] <mrig> Seems to me that this script is designed for folks who like 8 space tab indentation :D
[12:08:33] <mrig> logical chunks rather than a continuous stream of similarity.
[12:09:04] <mrig> flaknet99: who are they? :D
[12:09:26] <flaknet99> whoever decided [&] makes any sense
[12:09:36] <pavonia> smallville7123: I would bet this has to do with one of the lambdas getting destroyed when leaving the scope of existence, though it's not obvious to me where it happens exactly
[12:09:41] <pikapika> whats weird about capturing vars for a lambda?
[12:09:45] *** Quits: nrl^ (~nrl@12.203.127.82) (Remote host closed the connection)
[12:09:46] *** Joins: immibis (~hexchat@62.156.144.218)
[12:09:50] <smallville7123> yea
[12:09:54] <smallville7123> if a pointer A points to pointer B, then if pointer A becomes invalid, it may be reused and have a different value, right?
[12:09:59] <mrig> just throw in some more symbols, its not got enough barnacles yet!
[12:10:00] <flaknet99> did i say weird?
[12:10:08] <deniska> flaknet99: well, they needed some piece of syntax to specify how things are captured in a lambda
[12:10:39] <deniska> flaknet99: and this one… is as good as any they could probably come up with
[12:10:46] <pikapika> Most combinations of symbols already have a meaning in C++, and there is already too much "syntax overloading" so I think its not a bad choice
[12:10:51] <arahael> flaknet99: Probably a good  thing, too. :)  Do you know how C++ has "the rule of 3"?
[12:10:51] <pikapika> It makes intuitive sense really
[12:10:54] <flaknet99> it's filthy
[12:10:56] <pyzozord> ({[&]}) would make it better
[12:10:58] <pikapika> that & implies the lambda is going to capture the vars
[12:11:03] *** Quits: baloona (~baloona@mail.baloona.de) (Remote host closed the connection)
[12:11:15] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[12:11:19] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:11:21] <mrig> the whole shebang seems broken to me.
[12:11:24] <pyzozord> oh, I thought this just says "get address of this function"
[12:11:33] <mrig> Learning this script is exemplifying that.
[12:11:41] <mrig> confirmation without bias.
[12:11:43] <pikapika> mrig, farsi?
[12:11:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:11:50] <mrig> pikapika: devanagari
[12:11:53] <pikapika> Oh
[12:11:57] <mrig> it is awesome.
[12:11:58] *** Joins: baloona (~baloona@mail.baloona.de)
[12:12:11] <mrig> Has 8 char indentation built in :D
[12:12:21] <deniska> flaknet99: no one would argue that C++ is not a very unwieldy language, but as they say… There're two kinds of languages, and people always complain about one of the kinds :)
[12:12:26] <death916> isnt 8 char alot
[12:12:39] <death916> in python youd get like 2 loops in before lines started wrapping due to indents
[12:12:53] <mrig> death916: it works in a syllable to syllable way, not by using whitespace.
[12:13:00] <mrig> ingenious.
[12:13:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:13:23] <death916> lol hmm
[12:13:27] <mrig> makes reading more efficient, at least I think that it will. Still early stages and testing.
[12:13:35] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[12:13:36] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[12:13:36] *** Joins: BenLand100 (~bland@user/benland100)
[12:13:43] <death916> i shall keep an eye out
[12:14:44] <pikapika> mrig, the arabic/persian script is quite interesting
[12:15:01] <mrig> pikapika: I've not had any experience of that.
[12:15:19] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:15:47] <mrig> fascinating to see the difference here, can't imagine another being better designed than this though
[12:16:08] <mrig> but it's grammar came before its script, I think this is why.
[12:16:32] <pikapika> Isn't devnagri a family of scripts?
[12:16:33] <mrig> curious, will continue on and consider writing it up eventually.
[12:17:04] <mrig> well it emerged from bhrami script so far as I am aware.
[12:17:46] <mrig> there are many others that have been mapped to the phonetic verbal sanskrit but this is the most commonly used one that I'm aware of.
[12:18:27] <mrig> death916: the script has 54 letters so words are intrinsically shorter.
[12:18:39] <mrig> everything is slightly compressed.
[12:20:15] <mrig> I wonder what C++ would look like it it? Certainly could not be worse.
[12:20:32] <pikapika> mrig, I think many indian languages use devanagri like scripts
[12:20:47] <pikapika> Its not a "single" script
[12:21:07] <pikapika> There is much less variation in the arabic script
[12:21:14] <mrig> sure yes, I'm just admiring the way that the alpha syllabary has been mapped graphically.
[12:21:39] <mrig> pikapika: I'm doubting that the Arabic script is an alpha syllabary though.
[12:21:47] <mrig> This is the key advantage.
[12:21:56] <pikapika> Whats an alpha syllabary?
[12:22:13] <mrig> phonems are atoms
[12:22:22] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[12:22:56] <mrig> sound not mental constructs.
[12:23:00] <mrig> way more logical.
[12:23:32] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[12:25:28] <pikapika> what?
[12:25:39] <mrig> pikapika: those would be dialects, no, more so than languages?
[12:26:08] <pikapika> Not really, as my understanding goes the region has multiple properly distinct languages not dialects
[12:26:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:26:37] <mrig> some do, sure, it's a big place.
[12:27:11] *** Quits: RandolfR (~randolf@184.70.10.188) (Quit: Leaving)
[12:27:37] <mrig> anyhow it is the graphical structure that is fascinating and that I find really exciting at the moment.
[12:28:00] <mrig> no idea if other scripts do the same or not, it is the first time that i've come across it :)
[12:28:05] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[12:29:15] <pikapika> mrig, arabic has an interesting graphical structure
[12:29:18] <pikapika> Each letter has four forms
[12:29:48] <mrig> are those similar sounds?
[12:30:14] <mrig> a 'letter' when speaking of the glyphs here, denotes a phonem.
[12:30:29] *** Joins: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu)
[12:30:44] <mrig> well the phonems are constructed from sub sounds actually, I am likely not using quite the right terminology.
[12:31:08] <mrig> the consonants and vowels, map one to another to make the phonems.
[12:31:17] <mrig> in logical units.
[12:31:32] <mrig> the consonants are grouped into similar types.
[12:31:39] <mrig> it is awesome.
[12:31:44] <deniska> mrig: it's cursive, so depending on the position of a letter, it may take different forms
[12:32:01] <mrig> sure yes, logical blocks.
[12:32:18] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[12:32:18] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[12:32:18] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:32:27] <mrig> but the form remains still. It is this facet of it that makes its reading so interesting.
[12:32:32] *** Joins: zaher (~zaher@37.48.179.114)
[12:32:51] <mrig> well, as a first impression that is, just starting.
[12:33:04] <deniska> cyrillic and latins cursive scripts do that too, but in a less pronounced way
[12:33:10] <pikapika> mrig, yes, the sounds become half sounds when joined to other letters
[12:33:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[12:33:25] <mrig> gives it a meta level that is readable at a glance that you can then focus in on.
[12:33:51] <mrig> just as large tabs spacing gives a form to code.
[12:34:15] <mrig> which was why the analogy popped into mind, this is why I like large tab spaces for readability.
[12:34:18] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:34:28] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[12:35:15] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:35:23] <mrig> dang, someone pointed this out to me years ago, stating that learning to read this would really help me out, it has taken until now to understand what they meant :)
[12:35:32] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[12:36:26] <mrig> pikapika: do the letters in arabic make use of the same shapes for different sounds?
[12:36:39] <mrig> as is the case in latin scripts?
[12:36:46] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[12:37:10] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[12:37:49] <mrig> right yes cursive scripts from the latin fonts are the hand written ones, in which the order of the letters must effect what is displayed.
[12:37:56] <mrig> If memory serves.
[12:38:35] <deniska> there're non-cursive arabic fonts and they look really funky
[12:38:43] <mrig> called cursive perhaps due to the cursing involved when writing the code to display them :D
[12:38:44] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[12:39:15] <pikapika> mrig, like latin some sounds have multiple letters for them. Actually the sounds themselves are sometimes subtly different for each letter
[12:39:18] <pikapika> Like k vs q
[12:39:44] <pikapika> In other cases like the z sound, less so. And just like latin there are some standard spellings to delineate exactly which z is used in a particular word.
[12:39:45] <deniska> k vs q vs c 
[12:39:48] <mrig> sounds like a nightmare for the logical learns.
[12:39:56] <deniska> (sometimes)
[12:39:59] <mrig> would favor only the calculative mind.
[12:40:06] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[12:40:07] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[12:40:07] *** Joins: BenLand100 (~bland@user/benland100)
[12:40:16] * mrig shudders at the thought of enslavment.
[12:40:24] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[12:40:39] <mrig> learners rather.
[12:41:16] <Sqaure> Im looking at shadertoy.com. I feel i understand the basics of how these "shaders" work. Is that how game programmers can accomplish everything down to subsurface scattering and all the magic they do these days?
[12:41:18] <pikapika> deniska, but isn't naskh considered less cursive than nastaliq
[12:41:21] <mrig> that would be an interesting addition to a civilisation game, one in which you set the language type used and it alters the population distribution :)
[12:42:01] <mrig> I suppose that is already in D'n'D as you have the magical scripts and such.
[12:42:26] <mrig> that only some people can read.
[12:43:06] <mrig> Sqaure: I've yet to get further into shaders, looks like an amazing thing though.
[12:43:08] <deniska> pikapika: I'm may remember 3 or 4 arabic letters, I'm not too familiar with various calligraphy schools :)
[12:43:26] <pikapika> I think persians prefer a more cursive form
[12:43:33] <pikapika> and arabs a slightly more rigid one
[12:43:55] <mrig> urdu is an interesting language too, learned a little about that recently.
[12:43:57] <Sqaure> mrig, yeah. Im basically a newb at it too
[12:44:10] <mrig> created during a really scholarly period.
[12:44:24] <mrig> Sqaure: which API are you using?
[12:44:32] <mrig> openGL or vulcan, something like that?
[12:44:38] <deniska> pikapika: by non-cursive arabic script I mean something along these lines: https://i.pinimg.com/originals/04/27/c2/0427c286cf5f90101bd2e8da07b2c422.png
[12:44:38] <bayaz> Type: image/png Size: 510.3 kB 
[12:45:09] <Sqaure> mrig, none. Im just getting into it. Because of constraints, i need to do it in java. No realtime requirements, so i guess thats fine.
[12:45:40] <mrig> deniska: yikes, that looks tricky to read, they all do though I suppose until you construct a little familiarity.
[12:46:25] <mrig> Sqaure: oh right, oh I'd no idea that there was any java lib that could read shaders and display them.
[12:46:29] <mrig> cool
[12:46:50] <deniska> mrig: first time I saw a font like this, it looked like really weirdly stylized hebrew at the first glance
[12:47:04] <deniska> mrig: opengl is accessible from java
[12:47:23] <mrig> oh cool, yes you're right it does1
[12:47:25] <mrig> !
[12:47:41] <deniska> they wrote a game in java, minecraft, maybe you heard about it :D
[12:47:46] <mrig> ah ok, bindings for openGL that makes sense.
[12:48:12] <mrig> yes never played it though, I gather that it has experienced some success :D
[12:48:52] <user51> then they wrote a minecraft in minecraft
[12:48:56] <pikapika> deniska, yeah I don't mean that extreme
[12:49:13] <pikapika> deniska, theres that qr code arabic meme
[12:49:37] <mrig> recursive gameing, I suppose you become a gamer in your gaming world.
[12:49:43] <pikapika> "Kufic" script
[12:49:49] *** Quits: mmfood (~mmfood@45.135.187.59) (Ping timeout: 252 seconds)
[12:50:04] <user51> javacraft, the new (and improved!) javascript
[12:50:21] <pikapika> Java is an excellent and well liked language
[12:50:45] *** Joins: independent56 (~independe@51.15.187.53)
[12:50:47] <deniska> pikapika: heh, I've seen it used in flags :)
[12:50:50] <mrig> user51: cool, so using it is a crafty pastime, rather than plain old scripting then.
[12:50:54] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:51:14] *** Joins: flaknet99 (~0x100@32.211.211.39)
[12:51:54] <independent56> I thought ubuntu could only support 24 versions because of it's naming scheme, but then i looked at the names and realized that they went alphabetically and looped back.
[12:52:36] <mrig> I'm more into the sound and pronunciation really though, rather than the way that it is displayed, the exciting thing about the devanagari, is that I think it will help in reading.
[12:52:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[12:52:52] <mrig> and thus preserving and aiding in pronunciation.
[12:52:59] *** Joins: zaher_ (~zaher@37.48.184.172)
[12:53:03] <deniska> independent56: quite observant ocelot of you
[12:53:20] *** Quits: diophantoz (~diophanto@user/diophantoz) (Quit: Leaving)
[12:53:22] <mrig> of course not all are perhaps conscious enough to hear the nuances though.
[12:53:35] <mrig> curious aspect of this really.
[12:54:04] <mrig> or not paying enough attention.
[12:54:34] *** Quits: zaher (~zaher@37.48.179.114) (Ping timeout: 265 seconds)
[12:54:57] <pulse> youbuntu? me buntu!
[12:55:41] *** Joins: hassoon (hassoon@user/hassoon)
[12:56:09] <hassoon> 'morning
[12:56:23] <deniska> ourbuntu
[12:57:03] <mrig> webuntu <- cloud version?
[12:57:06] <mrig> :p
[12:57:11] <mrig> hello hassoon 
[12:57:26] <pyzozord> lol, commubuntu
[12:57:28] *** Quits: independent56 (~independe@51.15.187.53) (Ping timeout: 265 seconds)
[12:57:51] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:57:51] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:57:51] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:58:08] <flaknet99> you jhoke but these probably all exist
[12:59:53] <pikapika> Ubuntu is a popular and well liked os
[13:00:55] <Sqaure> i use to read Minecraft creator Notch twitter feed sometimes. Interesting to read about the ultimate programmer rockstar fate.
[13:01:46] <Sqaure> He seems to stay inside all day and play videogames, eat fast food and do different drugs (mainly weed i guess). 
[13:01:49] <mrig> What does he have to say about life?
[13:01:52] <pyzozord> i hear he didn't end up well, money messed with his head and felt he sold out his soul kind of
[13:02:03] <Sqaure> ...in his LA mansion
[13:02:13] <flaknet99> lol oh no poor guy
[13:02:17] <pyzozord> well that's kind of what I do :P
[13:02:23] <pyzozord> except drugs
[13:02:36] <Sqaure> Its our destiny
[13:02:38] <pyzozord> I should cut out on the fast foods though
[13:02:47] <flaknet99> did he sign a deal with microsoft to not remake minecraft, some noncompete agreement?
[13:02:59] <Sqaure> i have no clue
[13:03:29] <pyzozord> did he create any games after that btw?
[13:03:33] <mrig> I've heard tales of people who have won the lottery and it destroyed them.
[13:03:46] <deniska> I doubt it, considering minecraft itself is not *exactly* too original of a game idea
[13:03:53] <mrig> others who have won several times but every time lost it all.
[13:04:17] *** Joins: exvicesindaco_ (~exvicio@host-80-180-186-62.retail.telecomitalia.it)
[13:04:20] <mrig> Seems like a 3D terminal in design.
[13:04:28] <mrig> quite a cool idea
[13:05:04] <pyzozord> mincraft when it came out it was very original
[13:05:10] <deniska> pyzozord: Mojang pre microsoft acquirement tried making one game, but it wasn't hugely succesful
[13:05:17] <mrig> less faffing about with visual design and more focus upon gameplay.
[13:05:17] <pyzozord> or at least an idea that wasn't popular for at least 10-15 years
[13:05:23] <deniska> pyzozord: Notch also made some prototypes and gamejam games here and there
[13:05:47] *** Joins: kobalt (~rsonx@user/kobalt)
[13:05:49] *** zaher_ is now known as zaher
[13:06:59] <deniska> pyzozord: Minecraft kinda copied the idea of gathering and placing blocks from infiniminer
[13:07:03] <mrig> I need to workout how to get this cursive script to work from a single charmap :D
[13:07:07] * mrig curses
[13:07:23] <mrig> pretty sure that it is doable that way though.
[13:07:48] <mrig> pyzozord: I might need to borrow your terminal for this :D
[13:07:50] <flaknet99> minecraft, the ultimate digdug/qbert mashup
[13:07:55] <deniska> pyzozord: but inifniminer wasn't too succesful, I guess minecraft had a more hooking core gameplay loop and a color scheme easier on the eyes :)
[13:08:20] <mrig> then an awesome keyboard mapping for typing.
[13:08:23] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:35] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 265 seconds)
[13:08:35] *** exvicesindaco_ is now known as exvicesindaco
[13:08:58] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[13:09:46] <deniska> (Infiniminer author then went on making some niche but fairly succesful games, founding the company called Zachtronics, but not 3 billions usd kind of succesful)
[13:10:01] *** Joins: xiongxin (~quassel@113.116.34.58)
[13:10:36] <pyzozord> mrig: be my guest, let me know if you'd like a newer version, it is much improved now
[13:11:50] <mrig> pyzozord: That would be awesome, thank you, I'm intrigued to learn about the use of freetype in sdl for the initialising and such.
[13:12:20] <mrig> I'd be interested to see how you've developed since the last one too.
[13:12:21] <Sqaure> I played some Minecraft on xbox 360 when it was released there. At the time i was blown away about the survival mode. Best Robinson Crusoe experience ever. I have very limited patience with computer games so it was max 10h.
[13:12:50] <user51> i built some stuff in minecraft nutil i realized it felt lonely
[13:12:51] <deniska> Minecraft is certainly up there in the list of games I spent a considerable time and effort on
[13:12:53] <mrig> I noticed that we can set the charset in the freetype lib
[13:13:09] <deniska> user51: I almost exclusively played multiplayer
[13:14:17] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[13:15:15] <kobalt> I have created a game too, maybe for someone's inspiration. https://imgur.com/a/iXaYocH
[13:15:15] <bayaz> Title: imgur.com 
[13:15:19] *** Joins: cm007magnum (~Rheanna@101.91.180.110)
[13:15:31] <deniska> I think our group started playing circa beta 1.4.something which puts it somewhere in 2011 :)
[13:16:00] <deniska> kobalt: godot ♥
[13:17:50] <user51> deniska: weren't there a lot of modding problems when new versions was released?
[13:18:20] <kobalt> one thing that I dislike about game engines is that they work with scripting languages sometimes thier own's. I mean I could write better logic in less bloated compiled language instead.
[13:18:41] <user51> kobalt: battle city?
[13:20:00] <flaknet99> you're using the wrong game engines
[13:20:08] <deniska> user51: early modding scene was really… something :)
[13:20:30] <deniska> user51: but we played vanilla plenty of times as well
[13:21:28] <pyzozord> mrig: I've made some quick changes to Makefile (you should see changes with git diff) and removed the sdl2 and sdl2_ttf source directories, so you'll have only greyscale emojis
[13:21:36] <deniska> I certainly remember crafting modpacks in these dark times, involving copying into the minecraft.jar files from ModloaderMP (later renamed to forge?), and removing meta-inf from it :)
[13:22:00] <kobalt> user51: yes actually. I was trying to create a clone of Battleground which was inspired by battlecity, it was a game for handheld  JXD 1000 devices which were psp clones and ran on spmp8000.
[13:22:10] <user51> deniska: it's a start 
[13:22:33] <pyzozord> mrig: oh and you need apt install libsdl-dev libsdl2-gfx-dev libsdl2-ttf-dev
[13:22:42] <user51> when did you graduate from the dark times?
[13:23:25] <mrig> pyzozord: Thank you, I have it now.
[13:23:43] <pyzozord> clear
[13:23:53] <user51> roger that
[13:23:55] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 252 seconds)
[13:24:28] <mrig> I've got those libs installed already, may investigate compiling them though, as you say, to use the fuller features.
[13:24:43] <kobalt> you won't find about battleground on google or anywhere on internet idk why
[13:26:07] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[13:30:58] <pyzozord> it doesn't seem like notch suffered terrible fate honestly
[13:31:29] <pyzozord> he pretty much won life and does what he wants now which is mostly play games and get fat
[13:31:33] <pyzozord> that sounds amazing to me :P
[13:32:03] <GeDaMo> Didn't he say something controversial? Racist, sexist, something like that
[13:33:03] <pyzozord> hmm could be, I can't really remember if I heard anything
[13:33:14] <GeDaMo> https://en.wikipedia.org/wiki/Markus_Persson#Controversy
[13:33:15] <bayaz> Title: Markus Persson - Wikipedia 
[13:34:45] <pyzozord> yeah that was a stupid thing to say for an e-celebrity on a social media platform in the current climate
[13:36:07] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[13:36:41] <pyzozord> calling people "cancer" doesn't really say anything good about you
[13:37:47] <pyzozord> btw in dutch cancer is a bad swearword, kind of similar intensity to fuck
[13:37:52] <mrig> oh saying anything in the gossipshpere is asking for trouble; a PC editor would be a useful app to write in these eggshell floored times.
[13:39:10] <mrig> rather like grammarly, but for gossip correctness.
[13:39:43] *** Joins: exvicesindaco_ (~exvicio@host-80-180-186-62.pool80180.interbusiness.it)
[13:40:05] *** Joins: masber (~masber@213.55.224.30)
[13:40:37] <pyzozord> (not that i particularly agree with his views)
[13:40:37] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com) (Quit: Leaving.)
[13:40:51] <flaknet99> seems like it was his goal to sellout from the beginning so yeah, can't feel bad for the guy. https://news.ycombinator.com/item?id=2938055
[13:40:53] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com)
[13:40:58] *** Quits: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu) (Ping timeout: 252 seconds)
[13:42:44] *** Quits: xiongxin (~quassel@113.116.34.58) (Ping timeout: 252 seconds)
[13:43:11] *** Joins: xiongxin (~quassel@113.116.32.113)
[13:43:30] *** Quits: exvicesindaco (~exvicio@host-80-180-186-62.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[13:43:39] *** exvicesindaco_ is now known as exvicesindaco
[13:43:44] <pyzozord> it always fasciantes me when megacorps make such purchases
[13:44:06] <pyzozord> it was already quite few years, maybe the mincraft craze was fading
[13:44:22] <pyzozord> how did they know it would stay popular and is not just a fluke?
[13:44:36] <pyzozord> like pokemon go
[13:45:25] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-84f5-6d99-e289-b6f4.res6.spectrum.com) (Ping timeout: 252 seconds)
[13:46:37] <flaknet99> maybe they paid sony to not clone it who knows
[13:46:50] <flaknet99> some kind of mutual agreements
[13:47:19] <flaknet99> the game is painfully basic and theres no reason for another alternative to not exist
[13:47:53] <pyzozord> hmm yeah maybe they make their own luck, and they just buy "mindshare" / peopl's awareness of the name
[13:48:02] <[itchyjunk]> How does one restrict how much cputto use for a qemu
[13:48:14] *** Joins: Rounin (~david@84.212.130.215)
[13:48:19] <[itchyjunk]> i could restrict to a core but 2 core is all i have to begin with and it using 100% on one kinda sucks
[13:48:56] <GeDaMo> nice?
[13:51:51] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[13:51:54] *** Quits: xiongxin (~quassel@113.116.32.113) (Ping timeout: 260 seconds)
[13:52:39] <pyzozord> [itchyjunk]: doesn't it let you set fraction of a cpu?
[13:54:18] <flaknet99> what CPU is that
[13:54:50] <[itchyjunk]> I scrolled through `qemu-system-riscv64 --help` but can't tell which one would let me do that
[13:54:53] <flaknet99> and what code is qemy running
[13:55:12] <flaknet99> is it in an infinite loop?
[13:55:12] <[itchyjunk]> i pass it my hello world
[13:55:16] *** Joins: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu)
[13:55:19] <[itchyjunk]> oh
[13:55:25] <[itchyjunk]> let me check
[13:56:37] <[itchyjunk]> https://bpa.st/5PMA
[13:56:38] <bayaz> Title: View paste 5PMA 
[13:56:42] <[itchyjunk]> this is the code 
[13:56:42] <pyzozord> pikapika: maybe this but this seems like a lot of work https://qemu-project.gitlab.io/qemu/system/cpu-hotplug.html
[13:56:43] <bayaz> Title: Virtual CPU hotplug — QEMU documentation 
[13:57:50] <pyzozord> [itchyjunk]: ^
[13:57:53] <flaknet99> it's running linux ?  how many processes on the system
[13:58:01] <flaknet99> is there stuff in the background running?
[13:58:05] <[itchyjunk]> the qemu? running nothing
[13:58:07] <[itchyjunk]> it's baremetal
[13:58:12] *** Joins: eem (~eem@user/eem)
[13:58:15] <flaknet99> the comments say its linux
[13:58:26] *** Quits: xff0x (~xff0x@2001:1a81:52a2:cc00:e5a6:b6dd:762:ffad) (Ping timeout: 260 seconds)
[13:58:32] <TJ-> [itchyjunk]: use the cpu control group (cgroups)
[13:59:00] <[itchyjunk]> ah shit, the comment does say that
[13:59:07] <pyzozord> right there are probably multiple ways of controlling the qemu process cpu usage, with the nice value, cgroups, cpu limits
[13:59:18] <[itchyjunk]> TJ-, hmmmm
[13:59:20] *** Joins: xff0x (~xff0x@2001:1a81:52a2:cc00:e316:3cc6:4da2:e9d8)
[13:59:34] <flaknet99> emulation is expensive work
[14:00:27] <[itchyjunk]> i thought i had a different hello world, gyess i am running the wrong piece of code to begine with
[14:00:36] <flaknet99> theres like a zillion things that could be wrong
[14:00:42] <[itchyjunk]> in any case, i'll play with this browser emulator first
[14:01:02] <[itchyjunk]> i bet it was that code, since it needs linux to terminate it
[14:01:07] <[itchyjunk]> and i ran it in baremetal
[14:01:17] <flaknet99> did it actually print?
[14:03:44] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-2d33-f081-24f7-adef.res6.spectrum.com)
[14:03:45] <[itchyjunk]> the hello world? no
[14:03:54] <flaknet99> lol
[14:03:56] <[itchyjunk]> baremetal has no drivers to talk to screen and such so it cant
[14:04:06] <flaknet99> its just running wild in the emulator
[14:04:18] <flaknet99> probably trips an exception
[14:04:43] <flaknet99> causing 100 percent utilization
[14:04:54] <[itchyjunk]> so question on that part
[14:05:02] <[itchyjunk]> if it's bare metal, what find this exception?
[14:05:14] <[itchyjunk]> there is just hardware with no code then it sees my code right?
[14:05:15] <pyzozord> looks like there is an easy way out with "cpulimit" program
[14:05:26] <flaknet99> theres a vector somewhere (usually)
[14:05:40] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-2d33-f081-24f7-adef.res6.spectrum.com) (Client Quit)
[14:05:40] <flaknet99> where you setup the handlers
[14:05:49] <flaknet99> thats step1 of osdev
[14:06:35] <[itchyjunk]> Hmm not sure what that means..
[14:06:44] <pyzozord> looks like kvm doesn't have any setting for that, and using nice value or cgroups is recommended
[14:06:47] <flaknet99> exceptions need to be handled
[14:06:49] <[itchyjunk]> i also dont know what this low bit hight bit business is 
[14:06:51] <pyzozord> that's probably what cpulimit uses under the hood
[14:06:55] <flaknet99> otherwise kaboom
[14:07:41] <[itchyjunk]> pyzozord, so cgroups will be what i will have to look at 
[14:07:47] <[itchyjunk]> but that's a future me problem!
[14:07:54] <flaknet99> https://www.google.com/search?q=riscv+exceptions
[14:07:55] <bayaz> Title: riscv exceptions - Google Search 
[14:07:56] <[itchyjunk]> the current me is trying to do the most basic thing posisble
[14:08:42] <pyzozord> [itchyjunk]: using nice can be a fast and easy way to do most of what you want
[14:09:02] <pyzozord> if you just want it to have kind of lower priority
[14:09:14] <pyzozord> but i'm mixing words, I think priority is another concept in linux
[14:10:09] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:11:08] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:11:56] <arahael> pyzozord: Btw, this is how you'd normally 'unpack' in rust: https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html#destructuring-structs
[14:11:57] <bayaz> Title: Pattern Syntax - The Rust Programming Language 
[14:12:42] <flaknet99> https://wiki.osdev.org/RISC-V_Bare_Bones
[14:12:42] <arahael> pyzozord: And if there's a part of that pattern you don't care about, you use _
[14:12:44] <bayaz> Title: RISC-V Bare Bones - OSDev Wiki 
[14:13:19] <pikapika> pyzozord, what
[14:13:32] <flaknet99> that doesn't setup exceptions though, i can't find one quickly that does
[14:15:03] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com)
[14:15:28] <pyzozord> arahael: cool looks pretty familiar, except seems the type must be stated
[14:15:54] *** Joins: Klinda (~klinda@2.227.251.209)
[14:15:59] <arahael> pyzozord: That's an artifact of using sum types, you're really using a "pattern match", and becomes very very natural once you get used to sum types.
[14:22:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:22:34] *** Quits: masber (~masber@213.55.224.30) (Quit: Client closed)
[14:23:04] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[14:23:08] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[14:23:17] *** Joins: Guest_7788 (~Guest@223.189.39.132)
[14:24:52] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[14:25:55] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 265 seconds)
[14:26:58] <pyzozord> oh cargo uses toml, i like toml
[14:28:35] <death916> pamneofetch
[14:31:52] *** Joins: cadmio1 (~cadmio@151.25.156.194)
[14:31:56] <cadmio1> Hello
[14:32:20] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[14:32:21] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[14:32:21] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:32:32] <cadmio1> I'm having a free(): double free detected in tcache 2 https://paste.gnome.org/pniszttc2#line-139
[14:32:34] <bayaz> Title: GNOME Pastebin 
[14:34:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:35:23] *** Joins: euouae (~euouae@user/euouae)
[14:35:35] <euouae> Hello I am downloading plantuml for uml diagrams, is that a good one?
[14:35:41] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:36:14] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:36:26] *** Joins: flaknet99 (~0x100@32.211.211.39)
[14:36:46] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[14:37:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[14:39:38] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[14:39:56] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:40:48] *** Joins: hexingb (~hexingb@2409:8902:7ba5:38ee:b0d9:3698:477e:283c)
[14:41:03] *** Joins: plastico (~plastico@neomutt/plastico)
[14:41:10] *** Quits: Guest_7788 (~Guest@223.189.39.132) (Remote host closed the connection)
[14:41:18] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[14:42:39] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[14:43:13] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[14:43:50] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[14:43:50] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[14:43:50] *** Joins: BenLand100 (~bland@user/benland100)
[14:44:21] <arahael> euouae: It works.
[14:44:38] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:44:44] <euouae> arahael ok nice. I like beign visual about long functions... that's what I hope to use it for
[14:44:54] *** Joins: gggp (~textual@60.10.194.42)
[14:45:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:45:28] *** [_] is now known as [itchyjunk]
[14:46:13] *** Quits: zwr (~zwr@2804:d45:b966:fb00:fbd0:e7ec:a9ff:7615) (Remote host closed the connection)
[14:46:26] <[itchyjunk]> Having to even think about Swing now makes me anxious, great!
[14:49:46] *** Quits: hexingb (~hexingb@2409:8902:7ba5:38ee:b0d9:3698:477e:283c) (Ping timeout: 260 seconds)
[14:49:58] *** Joins: hexingb (~hexingb@111.30.224.85)
[14:52:57] *** Joins: xiongxin (~quassel@113.116.34.58)
[14:53:15] <GeDaMo> You just put things inside other things then they display :P
[14:54:21] <Rounin> Don't you know things are much simpler these days, GeDaMo... You just publish a Kafka event to instruct your Kubernetes cluster to spin up a Window displayer Docker image in the cloud
[14:55:14] <GeDaMo> :|
[14:55:44] <GeDaMo> I preferred it when everything was just pixels :P
[14:55:59] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:56:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:57:06] *** Joins: gggp (~textual@60.10.194.42)
[14:57:28] <euouae> Is there any good way to visualize functions?
[14:58:05] <phogg> source code
[14:58:18] <euouae> I want drawings phogg 
[14:58:26] <euouae> source code is nice but I have a 15'' screen
[14:58:42] *** Quits: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it) (Quit: Konversation terminated!)
[14:58:49] <phogg> drawings will be more verbose, not less
[14:58:52] <Rounin> Hmm... Won't ill... yes
[14:58:53] <[itchyjunk]> what does a function mean?
[14:58:54] <euouae> I could write up my own notes, but a semi-standard solution might be more acceptable
[14:59:09] <Rounin> Isn't a 24" monitor like $100-120 now though
[14:59:12] <euouae> phogg /could be/. 
[14:59:25] <Rounin> Perhaps the best solution is a bigger monitor
[14:59:26] <phogg> euouae: will be, unless your language is pretty bad
[14:59:40] <euouae> Rounin I don't believe in buying things I don't need, bad for environment 
[14:59:52] <euouae> phogg "my language is pretty bad" is bad language 
[15:00:01] <phogg> the only standard way of visually representing functions would be something like a flow chart
[15:00:16] <euouae> Are flow charts like uml diagrams? 
[15:00:23] <[itchyjunk]> First thing to do when visualizing function is to define it
[15:00:32] <[itchyjunk]> what is it?
[15:00:40] <phogg> euouae: a bit yes
[15:00:44] <euouae> I'm trying to define functions of source code I'm reading [itchyjunk]
[15:00:55] <euouae> visualize* not define 
[15:01:08] <[itchyjunk]> you want to visualize something you can't even define?
[15:01:11] <dunkeln> euouae: i think you are looking for something like flamegraphs...or snakeviz in python....?
[15:01:17] <mrig> euouae: a dynamic window that contains all scoped functions can be useful.
[15:01:18] <phogg> euouae: do you just want a "big picture" of how parts of the program connect?
[15:01:29] <euouae> dunkeln thanks!
[15:01:32] <mrig> ironically this simply reforms the old c header.
[15:01:40] <euouae> phogg yup
[15:01:51] <euouae> phogg parts of the function. It's a long function...
[15:02:03] <euouae> idk if you guys have seen C gnu style before, it's verbose 
[15:02:05] <phogg> euouae: first trivial programs this is feasible, but it grows insane pretty fast as the size and complexity increase
[15:02:11] <mrig> to assist in simple navigation, I use a 12" screen, find this to be a solution.
[15:02:11] <euouae> dude
[15:02:18] <euouae> I don't need you to explain this asinine stuff to me phogg lol
[15:02:23] <euouae> like for real, what the heck, just answer my question
[15:02:40] <euouae> I don't need to be told that there's ways in which what I'm asking for might lead me to places that I shouldn't be, stop treating me like someone clueless 
[15:02:44] <mrig> the way that you format your code, also makes a  considerable difference.
[15:02:53] <euouae> I'm not a 1st year undergrad that just walked in to ##programming ffs
[15:02:53] <phogg> euouae: You want a simple answer? OK: don't want this.
[15:03:09] <euouae>  That's not an answer phogg, you're confused.
[15:03:28] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[15:03:30] <euouae> Look man, I appreciate what you're trying to do, but it would help if you asked some questions of me first.
[15:03:31] <[itchyjunk]> I am sure that attitude helps you get a lot of good answers.
[15:03:46] <phogg> euouae: I keep trying, but your answers are confusing
[15:04:00] <mrig> phogg is in a fog :)
[15:04:18] <euouae> Like, this is stuff that /maybe/ you'd tell someone clueless. I know what helps me -- I like visualization. If you've never been in an industry/project where those are used, then that's on you. Ever heard of z notation?
[15:04:19] <phogg> euouae: do you want to visualize how different functions in a program connect (that is, call) each other? You said yes. But then you said you want to visualize different parts of one function. I don't know what that could mean, other than a flow chart.
[15:04:26] <euouae> NO I SAID NO
[15:04:28] <phogg> but if you have a function that big the flow chart will be too big to be useful
[15:04:45] <euouae> Listen, you are misreading what I've said. Let' sstop
[15:04:48] <euouae> I'm putting you on ignore
[15:04:53] <flaknet99> loooool
[15:05:11] <flaknet99> boxes n arrows man boxes an arrows
[15:05:27] * mrig scurries off to look up z notation.
[15:05:30] *** Joins: gggp (~textual@221.219.74.187)
[15:06:01] <euouae> z notation has to do with program correctness mrig, you want to specify the API in a meta language 
[15:06:32] <euouae> all I want to do -- I think it's fair, is to shrink down the ridiculously verbose C function I'm looking at, to something basic
[15:06:54] <euouae> I thought, heck, maybe it'd be fun if I did it in a diagramatic way, and hence my question. No need to lecture me like I'm completely clueless.
[15:07:03] <flaknet99> get a pencil and some paper
[15:07:11] <mrig> well as mentioned, boxes are pretty good for that.
[15:07:13] <euouae> flaknet99 That was my approach but I'm a bit messy with pencil/paper
[15:07:35] <[itchyjunk]> eraser.
[15:07:38] <flaknet99> code is messy
[15:07:40] <mrig> I would like to get a drafting board for this, me too, very messy on a page otherwise.
[15:07:42] <phogg> I don't see how you get something "shrunk down" (read: smaller) that way. You could rewrite it in some kind of pseudo-code to emphasize the high level instead of the mechanics,.
[15:07:54] <euouae> mrig thanks but unfortunately I'm on the go often :) 
[15:08:02] <euouae> Yes, /ideally/ I'd have a huge whiteboard. I know :) 
[15:08:16] <[itchyjunk]> Yeah, paper and pencil doesn't shrink down the complexity in anyways
[15:08:23] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[15:08:32] <[itchyjunk]> if it's a large function, better get a giant piece of paper
[15:08:35] * mrig loves perspective drawing by hand.
[15:08:40] *** Quits: cm007magnum (~Rheanna@101.91.180.110) (Remote host closed the connection)
[15:08:46] <euouae> and based on the answers (flamegraph/snakeviz) I think my question is completely misunderstood anyway
[15:08:55] <euouae> I'll just use a markdown file, gosh
[15:09:05] <mrig> euouae: you will use code an love it.
[15:09:06] <phogg> If it's a large *and complex* function I'll bet dollars to doughnuts it's a design mistake.
[15:09:19] <[itchyjunk]> heh
[15:09:27] <mrig> I do, so must everyone else. If they don't there must be something wrong with them!
[15:09:33] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com) (Quit: Leaving.)
[15:09:48] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com)
[15:10:00] <mrig> simplifying and scaling UML is one of the most misunderstood practices in programming, it would seem.
[15:10:10] <mrig> sketching something.
[15:10:19] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-65af-9ed1-e7d9-e937.res6.spectrum.com) (Client Quit)
[15:10:26] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[15:10:43] <euouae> I don't know what your (plural) experiences are with UML. I've never worked professionally in programming, maybe you hate your stupid bosses or something
[15:10:45] <phogg> mrig: I've never found UML to be helpful. But, I suspect I can keep more state in my head than most people.
[15:10:48] <euouae> or your annoying professors 
[15:11:04] <euouae> but I simply want to distil this gnu C function
[15:11:20] <phogg> euouae: to what end?
[15:11:32] <euouae> I'm not trying to inflict harm on my coworkers or employees
[15:11:40] <mrig> I'm just looking for sane tools to help express and to work through complicated ideas.
[15:11:54] <user51> i recommend the c language with a healthy dose of pointers
[15:12:05] <user51> mrig: ^
[15:12:06] <flaknet99> add comments?
[15:12:19] <flaknet99> comments + boxes + arrows
[15:12:23] <flaknet99> = ???
[15:12:27] <mrig> phogg: I think it caters for people who work bottom up and need a tool to help them get into thinking top down.
[15:13:04] <euouae> man this channel ...
[15:13:28] <mrig> so a sketch to help find and eliminate those bad patterns, to settle on a good design.
[15:13:38] <flaknet99> this is sound advice, whats the alternative to arrows? pseudocode goto's ?
[15:13:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:14:35] <mrig> user51: great up to a point.
[15:14:57] <mrig> if you use UNIX philosophy to bolt pieces of code together.
[15:15:21] <euouae> nothing great about C 
[15:15:26] <mrig> then that lends itself to a diagram too. You see those everywhere.
[15:15:34] <pikapika> C is very pleasant
[15:15:47] <flaknet99> some might call it well-liked
[15:15:48] <euouae> nothing to do with being pleasant
[15:16:23] <euouae> Nowadays it's a bad choice for most software developed
[15:16:32] <flaknet99> haha
[15:16:53] *** Parts: cadmio1 (~cadmio@151.25.156.194) (WeeChat 3.0)
[15:16:59] <pikapika> flaknet99, yeah its very well liked
[15:17:18] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[15:17:20] <euouae> phogg I'm unignoring you now ... I'm sorry if I was flustered previously, :) 
[15:19:27] <CoderGuy2> I can't think
[15:19:34] <[itchyjunk]> same
[15:19:37] <flaknet99> the difficulties you are describing can be experienced in almost every language
[15:19:38] <CoderGuy2> hold on one sec
[15:19:49] *** Quits: CoderGuy2 (~CoderGuy@2601:644:101:4f20:9050:6a84:997b:9611) (Changing host)
[15:19:49] *** Joins: CoderGuy2 (~CoderGuy@user/coderguy)
[15:19:54] *** CoderGuy2 is now known as CoderGuy
[15:20:00] <CoderGuy> that's better
[15:20:16] <euouae> flaknet99 I'm claiming C is a bad language irrespective of the discussion preceding my claim
[15:20:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[15:20:49] <flaknet99> what makes a good language
[15:21:01] <euouae> flaknet99 a tool is good for a purpose
[15:21:03] <CoderGuy> okay, I know that I want my GUI objects to have style attributes, the problem is "what if they don't have style attributes" in the case of say a headless browser or a text based program....does that mean I would have a different set of objects that don't have style attributes, or would I just have null values for the style properties?
[15:21:08] <euouae> flaknet99 C has a very limited purpose in todays world
[15:21:20] *** Quits: audiofreeze (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com) (Quit: Leaving)
[15:21:27] <flaknet99> lol what does that mean, todays world is no different than when C was created
[15:21:34] <euouae> you're clueless
[15:21:36] *** Joins: audio (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com)
[15:21:37] <flaknet99> hahahha
[15:21:37] <mrig> euouae: it worked well for git
[15:21:59] <CoderGuy> flaknet99, todays world is highly different we have much more knowledge and many more ways to code etc
[15:22:00] <flaknet99> explain what has changed
[15:22:01] <mrig> seems to be quite a modern application.
[15:22:02] <euouae> mrig git is actually one of the software that could benefit from C
[15:22:18] <mrig> sure yes, very elegant code.
[15:22:20] <euouae> mrig although don't fool yourself, git could've been written in Rust too, e.g.
[15:22:33] <flaknet99> other than just saying "im right you're wrong"
[15:22:40] <mrig> but the author is not likely to be using rust.
[15:22:44] <euouae> flaknet99 you're an idiot, try to unexplain that
[15:22:46] <flaknet99> a common tool around this channel it seems
[15:22:59] <mrig> the authors mind is more important than the language.
[15:23:28] <mrig> and you are right, it is not good to put razor sharp tools in the menial workplace.
[15:23:29] <Rounin> Yeah, hm... I've ported Python/Ruby/D programs to C and have had them turn out almost as concise and readable
[15:23:32] <flaknet99> if you can't explain it, maybe you should open your mind a bit more
[15:23:45] <Rounin> C gives many opportunities to write complex code, but it can be written in more than one way
[15:23:58] <euouae> that's an asinine statement Rounin 
[15:24:03] <Rounin> Well, no, actually.
[15:24:05] <euouae> what does it even mean that C gives opportunities?
[15:24:15] <user51> Rounin: that's the same thing they say about perl :)
[15:24:23] <mrig> complex code is naff in any language though, elegance is something else.
[15:24:29] <[itchyjunk]> Are you gonna call everyone names?
[15:24:31] <Rounin> user51: Yeah... I'm sure you can write readable Perl too, but that's not an experience I've had yet.
[15:24:44] <euouae> [itchyjunk] to my surprise there's no reasonable opinions right now
[15:25:00] <mrig> simplicity is really difficult to do.
[15:25:01] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[15:25:06] <[itchyjunk]> No ones getting paid to produce opinions you like though.
[15:25:06] <euouae> so yeah. unfortunately... I think I'm going to leave actually and probably won't come back, maybe this channel is the wrong channel for me 
[15:25:08] *** Parts: euouae (~euouae@user/euouae) ( )
[15:25:18] <user51> i think that before you start discussing languages you should rubber duck yourself before you wreck yourself
[15:25:19] <[itchyjunk]> good riddence
[15:25:41] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[15:25:44] <flaknet99> o h  they'll be back
[15:25:59] <mrig> why would you expect everyone to have the same point of view in a channel?
[15:26:01] <Rounin> How did that happen, though... This person came in and seemed quite reasonable, then I went away for a few minutes...
[15:26:04] <user51> c has crap string handling, but so much string stuff was written in c anyway
[15:26:06] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[15:26:10] <computerquip> At the risk of saying rust is good, Rust can "prove" to a certain extent that a program is valid where as C and C++ cannot.
[15:26:16] <flaknet99> they came in looking for a fight
[15:26:27] <CoderGuy> computerquip, P != NP 
[15:26:31] <user51> computerquip: what does the proof mean tho?
[15:26:57] <mrig> computerquip: yes this is a pretty interesting feature for learning.
[15:27:08] <[itchyjunk]> P = NP => N = 1.
[15:27:17] *** audio is now known as audiobirb
[15:27:27] <mrig> would be nice to be given the time and opportunity to acquire this skill in more traditional ways though.
[15:27:52] <mrig> It is simply a really complicated thing to learn how to do.
[15:28:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:21] <mrig> My fears of some of the modern tech, is that it actively stops you from needing to learn the essentials.
[15:28:40] <[itchyjunk]> Rust can do formal proofs for a type system?
[15:28:49] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[15:28:58] *** Quits: eem (~eem@user/eem) (Ping timeout: 260 seconds)
[15:29:02] *** Joins: flaknet99 (~0x100@32.211.211.39)
[15:29:39] <mrig> then you end up with a lot of monkeys beating on the one monkey that tries to climb the ladder to get at the tasty bananas.
[15:29:44] <mrig> :D
[15:30:09] <computerquip> https://plv.mpi-sws.org/rustbelt/popl18/paper.pdf for those interested.
[15:30:10] <bayaz> Type: application/pdf Size: 998.3 kB 
[15:31:01] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[15:32:39] <user51> can rust prove itself?
[15:32:46] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:33:48] <novns> user51, rust can rust itself
[15:34:34] *** Quits: audiobirb (~audio@2603-8081-1800-b44d-a5a4-5683-9a21-3df2.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:34:40] <user51> anyway, my programming language will not have X
[15:34:52] <user51> dogmatic application is better than pragmatic application
[15:35:07] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[15:35:25] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[15:35:25] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[15:35:25] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:35:37] <computerquip> Not really sure what that means in this context. 
[15:35:56] *** Joins: zaher_ (~zaher@130.180.145.2)
[15:36:04] <user51> yeah its a pretty abstract joke
[15:38:49] <phogg> computerquip: I haven't read it, but wouldn't it only work if there were no unsafe sections?
[15:38:57] <phogg> and aren't unsafe sections essentially required?
[15:38:58] <user51> i'd link to the page i got it from, but it'll be too flamey
[15:39:52] *** Quits: zaher (~zaher@37.48.184.172) (Ping timeout: 265 seconds)
[15:40:14] <phogg> mrig: just means more work for the few who bother to learn the reality, and more power as well.
[15:41:06] <mrig> Yes I suppose so.
[15:41:07] <computerquip> phogg, that paper addresses that extensively. I would read section 1.1 (it's not a big read)
[15:41:47] <phogg> computerquip: I have it open now, perhaps I'll have time for that this evening
[15:42:47] <mrig> and those who define it too, progress is all about reshaping reality, it would be difficult to make progress if you are confined to a subset of known reality.
[15:43:07] <mrig> a limited scope.
[15:44:45] *** Joins: cadmio1 (~cadmio@151.25.156.194)
[15:46:08] <pikapika> Most C hate is on an irrational basis
[15:46:16] *** Parts: cadmio1 (~cadmio@151.25.156.194) (WeeChat 3.0)
[15:46:22] <computerquip> As a C developer, no. 
[15:46:25] <computerquip> It really isn't lol
[15:46:37] <merijn> Most people who *don't* hate C, hate for irrational reasons >.>
[15:46:49] <pikapika> computerquip, I am not saying there aren't valid criticisms of C< I am saying that most haters cite irrational reasons
[15:47:09] <merijn> Show me someone who understands the C11 spec at a reasonable level *and* likes C >.>
[15:47:16] <flaknet99> they should just stick with attacking c++, where they could actually win an argument
[15:47:53] <merijn> Somewhere deep inside C++11 is an elegant language, struggling to get out the rotting corpse of it's mother >.>
[15:48:00] <pikapika> Reading the spec doesn't matter, when most C haters aren't on that level at all. Most of them are completely bullshit and irrational.
[15:48:03] <Rounin> I think they could improve it a lot if they replaced a lot of undefined behaviour (and whatever that other thing is) with implementation-defined behaviour, or some speficic behaviour
[15:48:09] <pikapika> Rational criticism of C exists, but it doesn't come from those quarters
[15:48:21] <Rounin> After all, who wants their optimizer to decide the program should do the wrong thing
[15:48:40] <pikapika> It doesn't help that a lot of the hate these days is coming from FP fanatics
[15:48:41] <Rounin> I wonder if the other thing was unspecified behaviour... Either way
[15:48:44] <merijn> pikapika: Mostly because everyone sufficient understanding of C already realises the billion things that are terrible about it and only use it for legacy reasons
[15:49:06] <pikapika> merijn, no. People can and do cite legitimate criticisms of the language. But most the C hate isn't that.
[15:49:06] <merijn> Which is fine, sometimes switching isn't worth the effort
[15:49:39] <[itchyjunk]> Man i can't keep myself motivated to learn about swing
[15:49:47] <pikapika> For example someone claiming compile time string literals should be printed with %s
[15:49:53] <mrig> fanatics are the issue, not any language. Also the notion that programming should be made simple for all, despite elegance code.
[15:49:53] <[itchyjunk]> fells like i am not learning programming and learning some framework i dont care about
[15:49:53] <pikapika> I have seen that argument in the wild
[15:50:19] <pikapika> like printf("%s","Hello world\n");
[15:50:30] <Rounin> [itchyjunk]: Many of these GUI libraries are roughly the same, though... You put some things inside a window, maybe you use objects in one language and callbacks in the other
[15:50:52] <[itchyjunk]> Rounin, ah so i can generalize this to other stuff
[15:50:56] <[itchyjunk]> that's hopeful
[15:51:06] <[itchyjunk]> what about that tk something that was being mentioned yesterday?
[15:51:14] *** Joins: quazimod1 (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au)
[15:51:14] *** Joins: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au)
[15:51:15] <[itchyjunk]> is that also similar? i learn this and that will make sense
[15:51:24] <Rounin> [itchyjunk]: Yeah, more or less... I've done Windows Forms and Mac System 7, and it wasn't super different (except the Mac had a menu bar)
[15:51:30] <merijn> pikapika: You should interact with less stupid people xD
[15:51:41] <Rounin> Ah, tk... I haven't done that one
[15:51:41] <pikapika> merijn, I can't help that most C hate is of that caliber
[15:52:31] <merijn> see, I see tons of C hate that's infinitely higher quality :p
[15:52:38] <[itchyjunk]> "However, if you ever need to intercept mouse clicks or paint over multiple components, you should get acquainted with root panes."
[15:52:44] <[itchyjunk]> so mouse based game is out of the question
[15:52:54] <pikapika> merijn, those people are much rarer
[15:52:58] <[itchyjunk]> has to be keyboard based game, else i have to learn more stuff
[15:53:16] <pikapika> [itchyjunk], gui is a very subtle topic
[15:53:24] <Rounin> [itchyjunk]: It sounds a bit like you just need to have a sort of "master window" to get the mouse position from, though... It might not interfere with the rest of the code very much
[15:53:43] <pikapika> And whats wrong with wrapping the whole thing in a jpanel anyways
[15:53:51] <pikapika> it won't make any difference to the appearance
[15:54:06] <user51> pikapika: i wonder if c is the new asm
[15:54:15] <pikapika> user51, I'd say probably not
[15:54:29] <pikapika> asm is still the new asm due to the backends of the C compilers
[15:54:54] <user51> anyway, the whole idea is to use the right langauge
[15:54:59] <pikapika> though javascript seems a popular target for transpiles these days, for reasons that should be obvious
[15:55:07] <Rounin> [itchyjunk]: No relation to what you're doing, but are you using the system look and feel, by the way? try {javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());} catch (Exception e) {}
[15:55:24] <Rounin> It can make Swing GUIs look more like native applications... I like it a lot
[15:55:24] <pikapika> why would changing the laf make a difference Rounin 
[15:55:29] <pikapika> oh ok
[15:56:10] <merijn> user51: Not really, one of the problems is that lots of C things aren't as predictable as you'd like in a compiler
[15:56:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:56:52] *** Quits: dre (~dre@2001:8003:c932:c301:91f3:44d0:e7a2:4247) (Ping timeout: 252 seconds)
[15:56:56] <merijn> pikapika: Sometime you use C as IR if you need to compile stuff across architectures and can't be bothered to do cross-compilation yourself
[15:56:56] *** Quits: quazimod1 (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[15:56:59] <merijn> eh
[15:57:02] <merijn> s/pikapika/user51
[15:57:13] <merijn> But then you'd probably just opt for LLVM instead anyway
[15:57:22] <user51> time for some metalanguage
[15:57:29] *** Quits: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[15:58:07] <flaknet99> gcc backend essentially takes C as it's input
[15:58:17] <flaknet99> subset of C
[15:58:59] <[itchyjunk]> Rounin, Gtk-Message: 06:28:43.621: Failed to load module "canberra-gtk-module"
[15:59:00] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[16:00:05] <Rounin> [itchyjunk]: Ah... So it's using GTK for theming, and either libcanberra-gtk-module isn't installed, or it needs some other version of it
[16:00:05] *** Joins: macaw (~macaw@176.221.120.196)
[16:00:20] <Rounin> Anyway, it isn't super important, I just think Swing looks nicer with the system look and feel
[16:00:36] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[16:00:38] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[16:03:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:03:19] <pikapika> Swing is quite popular and well liked
[16:03:22] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[16:03:34] *** Joins: flaknet99 (~0x100@32.211.211.39)
[16:03:35] <pikapika> Don't let the js people fool you into thinking electron is everything
[16:05:00] *** Joins: MarcoFe (~marcofe@5.170.17.175)
[16:05:17] *** Joins: eem (~eem@user/eem)
[16:07:12] <computerquip> I sure hope not.
[16:07:43] *** Joins: Maaaanu (~manuel@ip5b41c183.dynamic.kabel-deutschland.de)
[16:08:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:08:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:10:59] *** Quits: MJCD (uid193337@user/mjcd) (Quit: Connection closed for inactivity)
[16:12:07] <pikapika> computerquip, swing is very popular
[16:12:11] <pikapika> Many java ides use swong
[16:13:04] <computerquip> I was speaking more on my dislike of Electron :P
[16:13:15] <computerquip> In case that wasn't clear
[16:13:23] *** Joins: zaher__ (~zaher@37.48.189.181)
[16:15:07] <austincheney> anybody familiar with websocket protocol?  when I launch a websocket server I am writing when I client connects I am getting a close frame whose payload is 2 binary bytes of 3 and 233.  Any idea about that?
[16:15:28] <austincheney> I have tested on large text payloads and I am properly receiving and unmasking them.
[16:15:50] <flaknet99> iirc theres some nonce thing in the spec that needs to be setup
[16:17:17] *** Quits: zaher_ (~zaher@130.180.145.2) (Ping timeout: 252 seconds)
[16:17:36] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[16:17:38] <austincheney> I am properly establishing the handshake as far as I can tell
[16:17:59] <austincheney> maybe I am not though
[16:19:32] *** Joins: qbt (~edun@user/edun)
[16:19:43] <pikapika> Networking is an extremely subtle topic
[16:20:00] *** Joins: paravida (~myChateau@71.215.86.34)
[16:20:11] <flaknet99> masking key?
[16:20:29] <pyzozord> subtle?
[16:20:45] <pikapika> pyzozord, there are many many cases to consider
[16:20:49] <pikapika> compared to non-networked software
[16:21:35] <pyzozord> pikapika: what kind of cases do you have in mind?
[16:21:41] *** Joins: rtypo (~alex@user/rtypo)
[16:22:22] <pikapika> Lost packets, packets arriving in the wrong times, lots of checking to ensure correct sequence of actions etc
[16:22:44] <pikapika> Buffer and queue sizes management
[16:22:45] <pikapika> etc
[16:22:47] <pikapika> A network code is always harder than a non-network code
[16:22:54] <pyzozord> isnt tcp layer kind of taking care of the lost packets?
[16:23:09] <pikapika> Sometime
[16:23:11] <pikapika> Sometimes
[16:23:33] <flaknet99> "all frames sent from client to server have this bit set to 1"
[16:23:42] <merijn> eh, not sometimes. TPC guarantees that either 1) packets arrived or 2) connection is terminated
[16:23:50] <merijn> It does not "sometimes" lose packets
[16:23:53] <pikapika> then you have to check and retry
[16:23:54] <pikapika> exactly
[16:23:57] <pikapika> its a subtle thing
[16:24:08] <computerquip> also tcp guarantees order
[16:24:48] <pikapika> computerquip, not the kind of order I am spaeking of
[16:24:57] <pikapika> the order of accessing apis/urls
[16:25:11] <pikapika> which is important in a complex multi page operation
[16:25:18] <pikapika> its all subtle stuff
[16:26:04] <pyzozord> ok so it sounds like those are very similar problems to some class of problems in multithreading
[16:26:05] *** Joins: node1 (~node1@user/node1)
[16:26:19] <pyzozord> just inherit complexity of parallel things
[16:26:19] <pikapika> Multithreading is also extremely subtle
[16:26:43] <pikapika> The human brain isn't suited for these problems
[16:27:13] <node1> Does anyone good in github actions > selfhosted runner?
[16:27:28] <TheArchitect> what are the best man pages to use for posix
[16:27:36] <node1> Is there anyway to get the self hosted runners ip address? something like ${{runner.ip}} ?
[16:28:00] <pyzozord> TheArchitect: I use apt install manpages-posix manpages-poix-dev
[16:28:10] <pyzozord> *manpages-posix-dev
[16:28:13] <TheArchitect> pyzozord, sweet
[16:28:50] *** Quits: gggp (~textual@221.219.74.187) (Ping timeout: 252 seconds)
[16:29:15] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[16:29:23] *** Quits: _inky (~inky_@46.36.119.235) (Ping timeout: 250 seconds)
[16:29:48] <edgar-rft> I think zero-threading would simplify programming a lot
[16:30:05] *** Joins: sedeki (~textual@user/sedeki)
[16:30:34] <pyzozord> i dont know guys, i did some threads recently and it was very simple, didnt even have to use any atomics or mutexes etc
[16:30:51] <beaky> what is zero-threading
[16:31:28] <mrig> pyzozord: sounds racy :)
[16:31:30] <merijn> Multi-threading is super easy*
[16:31:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[16:31:37] <computerquip> edgar-rft, and it does. Using a single threaded event loop like what JS does does simplify things. 
[16:31:42] *** Joins: gggp (~textual@60.10.194.42)
[16:31:44] <merijn> * - if your language is immutable and pure by default
[16:31:44] <pyzozord> paralel algorithms, now that is tough, yes
[16:31:48] <TheArchitect> threading in general is super easy :)
[16:32:02] *** Joins: inky_ (~inky@5.77.149.211)
[16:32:04] <pyzozord> mrig: you can avoid race conditions if you design things right
[16:32:08] <computerquip> No concern for mutexes, no concern for per-operation race conditions, etc.
[16:32:41] *** Quits: inky (~inky@46.36.119.235) (Ping timeout: 252 seconds)
[16:32:51] <computerquip> Threading is not "super easy", especially at scale. 
[16:33:03] <pyzozord> i even did one thread decoding gif and nother thread animating the same gif even when its not finished decoding
[16:33:44] <mrig> race conditions can be really subtle though.
[16:33:57] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[16:34:00] <pyzozord> wul yeah, nothing is easy at scale, that's the scale problem
[16:34:26] <computerquip> Some things are certainly easier than others. 
[16:35:07] <mrig> I mean the thing might work fine 99.9999% of the time, and then once in a blue moon it blows up in your face.
[16:35:46] <pyzozord> yep that happens
[16:35:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 240 seconds)
[16:35:52] <mrig> unless you perform the correct ritual and say the magic words before using.
[16:36:01] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[16:36:01] <pyzozord> but it happens with everything
[16:36:06] <mrig> ^ what those that use the code end up doing :D
[16:36:14] <edgar-rft> computerquip: where have you learned counting? "single" is minimum one more than zero
[16:36:22] <mrig> There is a great sean parent talk in which he brings this up.
[16:36:41] <mrig> he is discussing conditional state in UI
[16:36:46] <computerquip> edgar-rft, it runs in the main thread, all applications have a single thread dickhead. 
[16:36:56] <computerquip> Also, I was agreeing with you. 
[16:37:16] <mrig> Love his criticism of threads in C++
[16:37:26] <merijn> The core problem of threading is "shared mutable state", the more of that you have, the more fucked you are
[16:37:44] <edgar-rft> computerquip: you agreed by saying the opposite :-)
[16:37:53] <merijn> Inversely, if you have no shared, mutable state, threading is trivial
[16:38:34] <mrig> but using threading to solve a problem concurrently is were most of the performance gains are.
[16:38:46] <computerquip> edgar-rft, then you're wrong since everyone application must have one thread. 
[16:38:51] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[16:39:02] <pyzozord> mrig: which one?
[16:39:17] <mrig> so state has to concur at some point if this is to pay off.
[16:39:36] <edgar-rft> computerquip: no threads = no app = most simplified programming ever
[16:39:51] <computerquip> Clever. 
[16:40:20] <edgar-rft> ...what I said right from the beginning :-)
[16:40:21] <pyzozord> merijn: precisely just dont have any shared mutable state or if you must, make sure you update that state atomically
[16:40:46] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[16:40:48] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[16:40:49] <mrig> pyzozord: which criticism? 
[16:40:56] <pyzozord> mrig: which talk
[16:41:01] *** Joins: flaknet99 (~0x100@32.211.211.39)
[16:41:38] <edgar-rft> which life
[16:42:02] <pyzozord> mrig: https://www.youtube.com/watch?v=0WlJEz2wb8Y&disableadblock=1?
[16:42:04] <bayaz> Title: CppCon 2018: Sean Parent “Better Code: Human Interface” 
[16:42:39] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[16:44:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[16:44:25] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[16:45:06] <mrig> pyzozord: I'm pretty sure that it was this one : https://www.youtube.com/watch?v=zULU6Hhp42w
[16:45:06] <bayaz> Title: Better Code: Concurrency - Sean Parent 
[16:45:10] *** Joins: _inky (~inky_@5.77.149.211)
[16:45:23] <pyzozord> thanks!
[16:45:27] <pyzozord> i'll watch this one
[16:45:39] <pyzozord> maybe it will convince me that parallel stuff is so bad
[16:45:50] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[16:45:54] <mrig> He gives a great description of why it is an advantage to have coroutines at runtime.
[16:46:29] <mrig> how the graph does not require being remade each iteration when you have them, and how it is recreated when you don't.
[16:46:46] <mrig> All done with much hand waving in a really explicit way.
[16:47:12] <mrig> made a penny drop for me. :)
[16:48:30] <pyzozord> "algorithms goal: no raw loops" looks intriguing
[16:48:39] <pyzozord> I'll look up that book
[16:48:46] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[16:49:09] <beaky> whats wrong with raw for looops
[16:49:39] <pyzozord> that's what intrigued me
[16:49:43] <mrig> Yes that is a nice one, gives a good example of some poor code in the chrome browser.
[16:49:57] <edgar-rft> beaky: cooked for loops taste much better
[16:50:10] <pyzozord> oh I think I watch that talk, but I don't remember
[16:50:43] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[16:50:44] <mrig> atrocious things hidden inside of loops, when the logic is fractobunt
[16:51:03] <mrig> impossible to reason about and modify.
[16:51:20] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[16:51:49] *** Joins: cm007magnum (~Rheanna@101.89.197.243)
[16:51:51] <pikapika> Complete bullshit
[16:52:34] <edgar-rft> finally someone with an argument :-)
[16:53:17] <mrig> pikapika: what is?
[16:53:27] <pikapika> how is any alternative going to make it easier to reason about any give block of code
[16:53:47] <mrig> pikapika: would you like to listen to that part of the lecture to see his point?
[16:53:57] <pikapika> I'll bookmark it
[16:54:15] <mrig> It is a working example, from an actual code base.
[16:54:26] <mrig> from a real world situation.
[16:54:33] <pikapika> timestamp me
[16:54:36] <pikapika> that video
[16:54:43] <mrig> could not move tabs in chrome as a group because of it.
[16:55:38] *** Joins: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr)
[16:55:46] <mrig> pretty sure this was in the datastructurs talk
[16:58:13] *** Joins: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net)
[17:00:04] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[17:00:55] <mrig> pikapika: https://youtu.be/W2tWOdzgXHA?t=134
[17:00:56] <bayaz> Title: GoingNative 2013 C++ Seasoning 
[17:01:11] <pikapika> Thanks I'll check it out later
[17:02:02] <mrig> you're welcome, I've always found his talks to be really useful.
[17:02:04] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[17:02:47] *** Joins: snake (~snake@user/snake)
[17:03:12] <alycidyne> Hello, I just realized I have practically no affinity with the very vast majority not just of humanity, but of life as well. What do I do now?
[17:04:04] <flaknet99> join a monestary?
[17:04:50] <alycidyne> Not gonna lie I did think of that at times
[17:05:09] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:06:58] <alycidyne> I only really stay with humans because I like tech - I don't even think about sci-fi
[17:10:58] <mrig> alycidyne: learn why this is so.
[17:11:44] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[17:14:54] <alycidyne> mrig: my theory is that, because my father was very disrespectful in the past, I'm tired of interaction
[17:17:22] <alycidyne> More specifically, I'm interested only in engineering and optimization of solutions - to the exclusion of almost everything else
[17:17:23] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[17:17:35] <mrig> you'd be surprised just how deep this rabbit hole can go; Known as latent impressions is mind (the term for a collection of 3 previously detailed elements) in sanskrit, not really sure how to translate that into English though.
[17:17:38] <user51> well, why not apply that to your life
[17:17:42] <mrig> in mind
[17:17:50] <alycidyne> user51: I can't apply it any more than I already do lol
[17:17:56] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[17:18:10] <mrig> alycidyne: apply it to better understanding the current question.
[17:18:11] <alycidyne> I just didn't realize how far the consequences of this went
[17:18:26] <user51> there should be a compiler optimization you haven't applied to your life yet
[17:18:31] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[17:18:43] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[17:18:47] <mrig> perhaps the problem are the optimisations?
[17:19:12] * alycidyne whistles to himself
[17:19:26] <pikapika> mrig, did you used to read sanskrit in latin before you started learning devanagri
[17:19:28] <alycidyne> Well... where do I go now?
[17:19:39] <user51> just do what you want
[17:19:41] <mrig> pikapika: no, I've never read latin.
[17:19:50] <pikapika> mrig, we are writing in latin here
[17:19:54] <pikapika> Latin as in the script
[17:20:05] <mrig> oh I see, using latin script
[17:20:15] <mrig> yes, but find that a bit troublesome.
[17:20:33] <pikapika> I am planning on learning the arab script
[17:20:44] <mrig> It is curious learning the mappings now, shows up how badly the latin letters map to sounds.
[17:21:05] <mrig> cool, always a good thing to broaden horizons.
[17:21:24] <mrig> You certainly can not understand other cultures without doing this.
[17:22:01] <mrig> alycidyne: I don't know, you could always look for another perspective to see the same thing in a different light.
[17:22:27] <mrig> alycidyne: what consequences?
[17:23:38] <alycidyne> mrig: the consequences of my overwhelming interest in optimization
[17:23:54] <mrig> pikapika: I mostly listen to it, curiously I started noticing that i find it easier to spell sanskrit words than English words.
[17:24:01] <Rounin> alycidyne: Do you have to go somewhere, though? If you can find a way to be happy in your life, perhaps that's enough
[17:24:28] <alycidyne> Honestly, I've tried to arouse even the tiniest interest in so many different things - with no success whatsoever
[17:25:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[17:25:34] <alycidyne> Really, the only thing that *always* makes me happy is an optimal solution.
[17:26:03] <Rounin> Sounds like you're pursuing the right hobby at least
[17:26:26] <alycidyne> Rounin: my problem is that it's the *only* one for me
[17:26:37] <mrig> why is that a problem?
[17:26:51] <mrig> who says that it is a problem?
[17:27:04] <alycidyne> mrig: society :-|
[17:27:12] <mrig> oh ignore the rat pack
[17:27:22] <alycidyne> mrig: well not when they feed me
[17:27:27] <mrig> they will eat the sidliners and edgecases.
[17:27:40] <mrig> alycidyne: food grows on trees and in the ground.
[17:27:59] <mrig> it is the earth that is feeding both you and them.
[17:28:12] <mrig> only fools forget that.
[17:28:30] <alycidyne> mrig: I know, I could live straight off the bush
[17:28:35] *** Joins: independent56 (~independe@195-154-105-157.rev.poneytelecom.eu)
[17:28:49] <alycidyne> Not all foods need to be cooked or preserved
[17:29:00] <mrig> so do you think that focusing on one thing is a problem?
[17:29:01] <beaky> become a code hermit composing artisinal lisp in a netbook in a mountain jungle
[17:29:10] <mrig> social norms aside.
[17:29:17] <beaky> using elon musk's starlink 
[17:29:19] <mrig> Good old norm, where would we be without him.
[17:29:21] <alycidyne> beaky: that did cross my mind at one point lol
[17:29:25] * mrig ponders psycho.
[17:29:44] <alycidyne> F--- starlink though.
[17:29:46] <mrig> but hermits are squatters,
[17:30:01] <mrig> they don't even grow their own shells!
[17:30:26] <flaknet99> poor hermits, they're doing the best they can!
[17:30:28] <Rounin> They don't even create their own universe, I mean come on
[17:30:29] <mrig> alycidyne: sounds to me like you need a project.
[17:30:52] <mrig> flaknet99: yes I was being a rather satirical, love hermits, more power to them!
[17:31:07] * mrig loves all crabs.
[17:31:13] <alycidyne> mrig: I have one... but I know in advance that perhaps most programmers will have no affinity with it
[17:31:39] <mrig> alycidyne: ah, so a prophecy you make.
[17:32:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:32:21] <Rounin> I think it's easier to appreciate other people by also accepting that they have different interests and values and agendas... Just like we have our own little world, they have theirs, and there's beauty in that as well.
[17:32:55] <mrig> Rounin: surely if they make their own universe it has to be a multiverse, just because it is?
[17:33:07] <alycidyne> Rounin: I accept it to the point where I do things which don't involve people
[17:33:09] * mrig nests universes.
[17:33:15] <Rounin> mrig: A multiverse is preferable... Possibly more tax-efficient as well
[17:33:26] <mrig> alycidyne: not everyone are social types.
[17:33:33] <mrig> nothing wrong with that.
[17:34:40] <mrig> If everyone were the same, it would be a darned drab world.
[17:34:51] <independent56> Take a sample JSON of {value: "string}. Is there any JS function which is valid for "var value = JSON(filePath, value);", which takes the sample JSON, finds the value, and places it in the variable? 
[17:34:57] <mrig> The blackhole sun video pops into mind.
[17:35:28] <alycidyne> mrig: for me it's not a problem of everyone being the same, it's a problem of not interacting
[17:36:03] <Rounin> independent56: Hmmmm... So a core JS function that reads a file from the harddrive of... of the machine it's running on?
[17:36:14] <Rounin> independent56: That seems like any browser would disallow it
[17:36:26] <Rounin> If you'd said "URL", then perhaps, but still probably not
[17:36:27] <alycidyne> mrig: case in point, I would perhaps never meet someone with my affinity because we have no incentive to discover each other
[17:36:48] <flaknet99> independent56 what if there are duplicate values? maybe that doesn't matter, but wouldn't a boolean work?
[17:36:50] <independent56> Ok, JSON(data,value); works just as well
[17:36:51] <mrig> alycidyne: timing is the essence here.
[17:37:18] <mrig> that is reveled by extensive research into why we are the way that we are.
[17:37:20] <alycidyne> mrig: but then that means I can't do anything to solve this problem :-|
[17:37:21] <Rounin> independent56: Oh, if the data is in a string, then even eval() should do that, though that's a massive security problem... There are functions to parse JSON in JavaScript, for sure
[17:37:37] <independent56> flaknet99,  I would like a function similar to my example. I can change it in my code. I wil let the function do it's own thing
[17:37:41] <Rounin> independent56: (a security problem, because the "json" could actually contain runnable code)
[17:37:49] <mrig> alycidyne: It means that it will resolve itself naturally when the time is right.
[17:38:01] <Rounin> independent56: JSON.parse() apparently
[17:38:06] <independent56> Thanks
[17:38:11] <alycidyne> mrig: except that time might not be within my lifetime...
[17:38:50] *** Quits: cm007magnum (~Rheanna@101.89.197.243) (Remote host closed the connection)
[17:39:05] <Rounin> independent56: It might not do exactly what you asked for, though, now that I look at it again... JSON.parse() will just return an object containing {value: "string"}, so it won't create a variable called "value" and put "string" in it
[17:39:13] <mrig> alycidyne: The time cycles on any sensible calendar are far shorter than that.
[17:39:29] *** Joins: MJCD (uid193337@user/mjcd)
[17:39:30] <mrig> perhaps you are using the wrong one?
[17:40:06] <alycidyne> mrig: well I do hope my probabilities are overly pessimistic...
[17:40:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:40:23] <alycidyne> I'm just not counting on anything favorable
[17:40:26] <mrig> alycidyne: those shift in time, without our even being aware of them.
[17:40:40] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[17:40:46] <mrig> alycidyne: did you ever try keeping a journal, captains log sort of thing?
[17:40:58] <mrig> I find that works really well for this sort of navigation.
[17:41:25] <mrig> you are probably counting the wrong things.
[17:41:27] <alycidyne> mrig: I've lost count of how many times I've thought of that... in the end, that's not what matters to me.
[17:41:29] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:41:44] <mrig> well, your perspective will be ever limited then.
[17:42:03] <alycidyne> I only care about what can repeat
[17:42:14] <mrig> heh
[17:42:22] <mrig> so do it ritually then.
[17:43:05] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[17:43:14] <alycidyne> I only care about sequences of repeatable events... heh. Much how I am obsessed with optimal grammars.
[17:43:39] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[17:43:41] <alycidyne> Yeah, I probably wouldn't even care if I were a machine.
[17:43:49] <mrig> alycidyne: sounds like you need to get away from your calendar, it is giving you false expectations!
[17:44:00] * mrig chuckles.
[17:44:18] *** Quits: independent56 (~independe@195-154-105-157.rev.poneytelecom.eu) (Ping timeout: 260 seconds)
[17:45:20] <mrig> seriously keep a journal, and write down what it is that you are doing at any time. Then when you start getting philosophical and asking the deeper questions, you will have something to use scientifically to grok the whys.
[17:46:06] <alycidyne> mrig: what "calendar" is this? Are you talking about those insanely long cycles I've seen in some (correct me if I am wrong) Hindu systems?
[17:46:32] <mrig> in astronomy, nothing to do with anything other than the cosmos.
[17:46:41] <Rounin> var somejson = '{"variable1": "things"}'; var stuff = JSON.parse(somejson); Object.keys(stuff).forEach(function(key) { eval(key + " = " + JSON.stringify(stuff[key]) + ";")})
[17:47:06] <Rounin> I wonder how that might horribly break... I'm not so sure about the JSON.stringify
[17:47:47] <Rounin> Fun exercise, though
[17:47:50] <alycidyne> mrig: I do write down thoughts, but for me the events that cause them are irrelevant.
[17:48:16] <alycidyne> Or, rather, the specific event
[17:48:17] <mrig> alycidyne: that is perhaps why you don't yet see the causes.
[17:48:36] <mrig> other than a few vague connections.
[17:48:40] <alycidyne> mrig: the causes of what?
[17:49:11] <mrig> alycidyne: what you have currently stated, that to your current belief, is the problem in your life at the moment.
[17:49:16] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:49:20] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[17:49:20] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[17:49:20] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[17:49:30] <mrig> I'm just recommending a shift in perspective.
[17:49:50] <mrig> journals help with this immensely, as one possible way to go about it.
[17:50:00] <mrig> takes time though of course.
[17:50:20] *** Joins: paravida (~myChateau@23.31.187.1)
[17:51:28] <alycidyne> mrig: I would rather say my problem is that I don't see not the cause, but the consequences
[17:51:36] <mrig> ... but then time is exactly what this is all about.
[17:51:44] <mrig> Yes exactly, seems that way from here.
[17:52:27] <mrig> mistaking symptoms for causes is a common thing, really does not help in resolving things.
[17:53:03] <mrig> makes for some consequential markets though.
[17:54:14] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[17:55:05] <alycidyne> mrig: What I meant is that often I see the cause to one situation, but then it can take a long time for me to realize another situation may also be a consequence of it
[17:55:26] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[17:55:44] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[17:55:44] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[17:55:44] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[17:56:31] <mrig> sounds as though putting all your possible futures onto the table could be a good thing, work out what you want.
[17:56:42] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[17:57:16] <mrig> if you cant see the bigger picture, it does not mean that it is not there.
[17:58:03] <mrig> a novice sees only the chessmen ... etc.
[17:58:24] <alycidyne> mrig: also depends on which timescale you're doing that >_>
[17:59:23] <mrig> oh that is an interesting thought, I wonder how the visual aspect of chess moves could be related to written language.
[17:59:51] <mrig> a matrices instead of a linear script
[18:00:21] <mrig> alycidyne: yes we are very much back to calendars again aren't we.
[18:00:36] <mrig> greatly underestimated as a topic.
[18:01:03] <mrig> even put up atop the ladder with the bananas by some.
[18:01:47] <alycidyne> mrig: case in point, computus lol
[18:01:52] <mrig> abandon hope all ye who enter here ;)
[18:02:00] <mrig> it is utter rubbish of course.
[18:02:14] <mrig> what is computus?
[18:02:23] <mrig> oh computers generally?
[18:02:48] <alycidyne> mrig: no, computus is the formal name for the procedure of calculating the date of Easter :D
[18:02:56] <mrig> oh I see :)
[18:05:56] *** Quits: inky_ (~inky@5.77.149.211) (Remote host closed the connection)
[18:06:02] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[18:06:05] *** Joins: inky_ (~inky@5.77.149.211)
[18:06:24] <alycidyne> Anyway, I guess I'll go back to the Apollo Telecommunications System which I'm currently studying. I've seen quite a few switches to delete off that mess of a panel.
[18:07:03] <alycidyne> Your opinions have been interesting to hear.
[18:07:26] *** Joins: X-Scale` (~ARM@83.223.233.176)
[18:07:51] <alycidyne> Take care everyone.
[18:07:54] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[18:07:57] <Rounin> Bye for no.....
[18:08:04] *** Joins: cadmio (~cadmio@151.47.140.183)
[18:08:06] <cadmio> Hello
[18:08:28] <cadmio> I've this problem https://paste.gnome.org/pihz1y961#line-1
[18:08:30] <bayaz> Title: GNOME Pastebin 
[18:09:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[18:10:08] <Rounin> cadmio: My immediate impression is that it's saying that you're reading memory you've already freed... I don't use C debuggers much, though
[18:10:11] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[18:10:12] *** Joins: mmfood (~mmfood@45.135.187.59)
[18:10:23] <cadmio> Rounin: exactly
[18:10:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:10:35] <cadmio> I'm messing up something with pointers and this should be the issue https://paste.gnome.org/pkdi1cvw0#line-306 
[18:10:36] <bayaz> Title: GNOME Pastebin 
[18:10:38] *** X-Scale` is now known as X-Scale
[18:10:55] <cadmio> delNextNode frees a 2nd time but I don't understand why
[18:11:27] <Rounin> cadmio: The line seems to be trying to read head->value ... There's also another line that does free(head) ... That seems risky
[18:12:04] <Rounin> Could it be that it thinks that it's reaching the end of the expression before it does the rest?
[18:12:59] <Rounin> There's also no obvious call to malloc there, so I'm not sure where the allocation takes place
[18:13:11] <Rounin> What is it freeing, I wonder
[18:13:50] <Rounin> add_item() seems to be doing the allocation... Perhaps
[18:14:00] <Rounin> But it doesn't show add_item()
[18:15:03] <cadmio> indeed I changed that part when it return head->value and now I've =1521== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
[18:16:05] <cadmio> here there's add_item and delNextNode https://paste.gnome.org/peuv5kda6
[18:16:06] <bayaz> Title: GNOME Pastebin 
[18:16:57] <[itchyjunk]> In java, why do i always inherit JFrame?
[18:17:03] <Rounin> cadmio: Ah, so add_item() does do the malloc... delNextNode also does a free, though... That's interesting
[18:17:05] <computerquip> You should probably be setting things to null after you free them cadmio
[18:17:11] <[itchyjunk]> public class MyClass extende JFrame {}
[18:17:28] <computerquip> It would make the problem a bit more clear probably as well, if that isn't the problem to begin with
[18:17:31] <Rounin> cadmio: So perhaps it's not prematurely ending the parsing, but delNextNode tries to free a node, and then the end of the parsing tries to free it again
[18:17:53] <Rounin> cadmio: Perhaps if you temporarily disabled the free in delNextNode, it would at least avoid the segfault... Even if the other problem that causes the confusion is still there
[18:18:07] <deniska> [itchyjunk]: dunno, why do you always inherit from JFrame? :P
[18:18:31] <Rounin> [itchyjunk]: JFrame probably contains tons of code that determines what a window should do
[18:18:40] <Rounin> Respond to events in certain ways, etc.
[18:19:02] <Rounin> And then you add to that default behaviour by overriding it
[18:19:12] <[itchyjunk]> ah
[18:19:30] <[itchyjunk]> there seems to also be Canvas to inheret from
[18:19:34] <cadmio> Rounin: that function works well for this input '5*5' not for '5+5' I've to understand why it's essential to move forward in the list and compute the result
[18:19:36] <[itchyjunk]> not sure what i need to make a "game"
[18:19:55] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:20:27] <Rounin> [itchyjunk]: In a game, you'd probably make a drawing surface somewhere, and then not use the GUI components that heavily... Not to mention, a lot of games use fullscreen and only optionally use a window
[18:21:04] <[itchyjunk]> i am having to write a game for an introductory class so i imagine i need to do the bare minimum
[18:21:13] <[itchyjunk]> "full screen" seems more complciated no?
[18:21:24] <Rounin> cadmio: Your calculate() function has some special handling there for '*', but not for '+' or '-' or '/'
[18:21:41] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:21:58] <Rounin> cadmio: parse_evaluate_expr has something about "*" too
[18:22:31] <mrig> can anyone help me to understand this implication truth table : https://youtu.be/f5UsHQW7-9w?t=336
[18:22:32] <bayaz> Title: Better Code: Relationships - Sean Parent [ ACCU 2021 ] 
[18:22:45] <cadmio> Rounin: yes becaues I read the numbers like '-5', '12' and then I add them tmp->value = tmp->value + tmp->next->value; head->value at the end  should be -5+12, right?
[18:22:50] <mrig> the video starts where the table is displayed.
[18:23:37] <Rounin> cadmio: I'm not sure what the question is there, but the code handles * differently from all other operators
[18:24:23] <Rounin> It could just be for dereferencing pointers; I don't know
[18:24:37] <Rounin> But in that case, how come it's in calculate()?
[18:24:44] <mrig> Would 1 in a truth table be false, and 0 true?
[18:25:28] *** Joins: LiftLeft (~LiftLeft@66.115.145.206)
[18:27:04] <user51> not?
[18:28:30] <deniska> mrig: 1 means true
[18:28:38] <mrig> I need to find a decent set of lectures on logic, or some such.
[18:28:46] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[18:28:54] <mrig> it is horrible to study from text alone.
[18:29:31] <cadmio> Rounin: for the fact that operators are handled differently and there are no errors with / and * I'm sure the problem is in calculate https://paste.gnome.org/prepmmyrg#line-276
[18:29:32] <bayaz> Title: GNOME Pastebin 
[18:29:41] <mrig> deniska: if that is so, how should I understand  0 -> 1 = 1 ?
[18:30:30] <user51> inverse of false is true, and the inverse
[18:30:30] <Rounin> cadmio: And on line 284, it goes "        if (tmp->op == '*')", right... So how come there's no handling for other operators?
[18:30:35] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[18:30:44] <Rounin> cadmio: Why does it need a special case for * and not for the others?
[18:31:04] <[itchyjunk]> I have additional question : If i want straight lines, i use g.drawArc() ? And is there a way to set color of this specifically? I've figured out how to set background forground colors
[18:31:28] <deniska> mrig: implication is a binary operation which is defined to be true when the first input is false and the second is true
[18:31:33] <cadmio> Rounin: because when I read the numbers  here if (1 == sscanf(jac->buf, "%Lf%n", &number, &n)) I can read also the operators like -5 the op is -
[18:31:42] <Rounin> [itchyjunk]: g.setColor, apparently
[18:31:45] *** Joins: wwilly (~wwilly@cpc92794-cmbg19-2-0-cust589.5-4.cable.virginm.net)
[18:31:47] <deniska> mrig: the word "implication" is frankly confusing to describe what that operation means
[18:31:48] <[itchyjunk]> oh..
[18:32:13] <GeDaMo> [itchyjunk]: drawLine exists
[18:32:26] <deniska> mrig: https://en.wikipedia.org/wiki/Material_conditional
[18:32:27] <bayaz> Title: Material conditional - Wikipedia 
[18:32:31] <GeDaMo> Oh wait, I'm looking at AWT
[18:32:34] <Rounin> cadmio: So how does your code handle the other operators?
[18:32:54] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 265 seconds)
[18:33:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:33:28] *** Quits: MarcoFe (~marcofe@5.170.17.175) (Quit: Konversation terminated!)
[18:33:29] <mrig> deniska: oh of course, thank you!
[18:33:30] <cadmio> it reads the numbers and then sum up everything e.g read '-5' then '+6' final result tmp->value = tmp->value + tmp->next->value;
[18:33:39] <Rounin> I don't actually see '+' mentioned anywhere in the code... '-' is mentioned once
[18:33:54] <Rounin> '/' is mentioned once as well
[18:34:08] <Rounin> But there's no evidence that the code supports the '+' operator
[18:34:24] <Rounin> Which might be why addition doesn't work
[18:35:10] <GeDaMo> [itchyjunk]: where are you seeing drawArc?
[18:35:18] <cadmio> it should do them here https://paste.gnome.org/prepmmyrg#line-301
[18:35:19] <bayaz> Title: GNOME Pastebin 
[18:35:40] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:35:52] <Rounin> cadmio: The entire file doesn't contain '+' anywhere, though
[18:35:54] <[itchyjunk]> oh no.. i think i am no longer using swing
[18:35:59] <[itchyjunk]> GeDaMo, i was using some google example
[18:36:03] <Rounin> cadmio: So how does it know what + is?
[18:36:07] <[itchyjunk]> https://www.javatpoint.com/Graphics-in-swing
[18:36:08] <bayaz> Title: Java Graphics in swing - javatpoint 
[18:36:16] <[itchyjunk]> didn't realize i was no longer following swing turorial
[18:36:38] <GeDaMo> [itchyjunk]: I can see a drawLine method there
[18:36:49] <pikapika> [itchyjunk], why?
[18:36:50] <[itchyjunk]> they use drawArc
[18:36:52] <cadmio> tmp->value = tmp->value + tmp->next->value; in this line you find the '+'
[18:36:56] <[itchyjunk]> i have tried it and it seems to wkr
[18:36:57] <pikapika> You are painting with a Graphics object?
[18:37:02] <[itchyjunk]> oh wait, is graphics still swing?
[18:37:03] <pikapika> How is that not a part of gui
[18:37:16] <GeDaMo> Seems to be from java.awt
[18:37:16] <Rounin> cadmio: But what use is that, since the code doesn't handle + in any way
[18:37:19] <[itchyjunk]> its gui, idk if its the JFrame stuff i was doing
[18:37:22] <GeDaMo> But it can be used with Swing
[18:37:26] *** Quits: user51 (~user51@176.228.115.184) (Remote host closed the connection)
[18:37:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[18:37:36] <pikapika> awt doesn't mean much. I think swing reuses interfaces and events from awt
[18:37:43] <cadmio> Rounin: if you sum up two values that's an addition
[18:37:44] <Rounin> cadmio: There's no code on that line that handles addition
[18:38:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:38:02] <GeDaMo> If it's a curved line, you can use drawArc, if it's a straight line, you can use drawLine
[18:39:32] <Rounin> cadmio: Ah, right... Yes, that code will add numbers together if it's called... But there's no code there to decide when it does get called... It's just placed after the code that does multiplication
[18:39:33] <[itchyjunk]> right, i want a straight line and so i'm switching to drawLine.
[18:39:41] <Rounin> cadmio: And the code that does subtraction and addition is placed somewhere else
[18:39:56] <[itchyjunk]> reading the manual now to figure out how to draw line at 0 degree 45 degree 90 degree etc
[18:39:59] <pikapika> Subtraction is very difficult
[18:40:04] <Rounin> Most likely, the code should be restructured a bit, so that related operations are handled in related functions, but never mind that
[18:40:21] <Rounin> The immediate problem is that there's no code do recognize the '+' operator anywhere
[18:41:36] <cadmio> I'm adding all values in the list by moving wiht tmp = tmp->next;
[18:42:02] <Rounin> cadmio: Yes... Why are you doing that, if you don't know if you should or not?
[18:42:25] <Rounin> Shouldn't you do addition when there's a "+" operator there, and not do addition when there's no "+" operator there?
[18:42:43] <Rounin> The code has to know if it should do addition or not
[18:43:02] *** Quits: zaher__ (~zaher@37.48.189.181) (Ping timeout: 252 seconds)
[18:43:18] <Rounin> Right now it just seems to add up things for no reason... I don't see the logic behind that
[18:43:34] <cadmio> at the end in the list you'll have some numbers resulting from other operations so you just need to add them all and evaluate the final result
[18:45:03] <Rounin> cadmio: I suppose that's possible... To say that "+" is the default operator, and anything that isn't any other operation is addition, but it seems a little too complicated to me... What happens if someone types "3 ☺ 3", does that become 6?
[18:45:05] *** Joins: DasBrain (DasBrain@user/dasbrain)
[18:45:12] <Rounin> Not to mention the fact that it's not working
[18:45:27] <cadmio> yes it should
[18:46:12] <[itchyjunk]> I have additional questions.. the paint method gets a Graphics g object passed to it and it draws stuff
[18:46:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:46:33] <[itchyjunk]> say i want to do my work outside this paint method and then call pait with specific value
[18:47:02] <[itchyjunk]> i do public void myMethod() { g.drawLine();} but what's g and where is it?
[18:47:03] <mrig> Is there any goto literature on logic, a foundational work perhaps?
[18:47:09] <GeDaMo> I think the system calls your paint method to cause a redraw
[18:47:10] <pikapika> [itchyjunk], use class members
[18:47:13] <[itchyjunk]> its getting created outside my code somewhere
[18:47:29] <pikapika> for example set a flag if you wanna draw so and so
[18:47:32] <pikapika> and inside the paint method
[18:47:39] <pikapika> if(flag) { draw(); }
[18:47:56] <[itchyjunk]> so a lot of my code would go inside the paint method?
[18:47:56] <pikapika> and use other class data for the coordinates etc
[18:47:59] <deniska> [itchyjunk]: typically GUI frameworks want you to do the drawing at the specific times they call your "OnPaint" or a similar function
[18:48:09] *** Joins: user51 (~user51@176.228.115.184)
[18:48:34] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:48:51] <[itchyjunk]> what i want to do is : draw line of length l, turn 90 degrees, draw line of length l, turn 90 degrees , draw line of length l, turn 90 degrees.
[18:48:56] <deniska> [itchyjunk]: you can prepare data you'll be using for drawing in the different place, and share it with the drawing procedure via class members as was mentioned 
[18:49:05] <[itchyjunk]> if that makes sense. i want to end up with a square looking thing
[18:49:20] <[itchyjunk]> I guess i don't understand what class member is
[18:49:27] <deniska> [itchyjunk]: there's also typically a way to tell a UI framework "I want this widget to be redrawn as soon as possible"
[18:49:27] <[itchyjunk]> I know what fields are and methods are.
[18:49:34] <deniska> [itchyjunk]: yeah, fields
[18:49:38] <[itchyjunk]> ah
[18:50:03] <pikapika> I think you can force an immediate repaint
[18:50:05] <pikapika> I don't remember how
[18:50:15] <pikapika> whenever you want an immediate updation according to some event
[18:50:18] <deniska> probably called "invalidate" or something
[18:50:32] <pikapika> and then the paint method would read in the values you have set in your class members and draw accordingly
[18:50:32] <deniska> at least it's the name I remember from winforms land :)
[18:50:45] <[itchyjunk]> hmm
[18:50:52] <[itchyjunk]> think i am still unsure though
[18:50:56] <[itchyjunk]> i'll look for examples
[18:50:59] *** Joins: paravida (~myChateau@23.31.187.1)
[18:51:02] <GeDaMo> repaint()
[18:51:02] *** Quits: password2 (~password@user/password2) (Ping timeout: 260 seconds)
[18:51:50] <[itchyjunk]> yes but to whom to i pass my data and where?
[18:51:57] <deniska> [itchyjunk]: if your drawing procedure is complex enough that you want to refactor it into multiple functions, nothing prohibits you from calling other methods from the `paint` method and passing them this `g` object
[18:51:57] <[itchyjunk]> whence and wither
[18:52:11] <pikapika> deniska, yes
[18:52:18] <pikapika> but remember the paint is still in charge
[18:52:24] <pikapika> if you wanna invert control
[18:52:25] <GeDaMo> [itchyjunk]: you implement the drawing in your paint method
[18:52:26] <[itchyjunk]> deniska, ah so my paint does behave as my main place to put codes
[18:52:31] <pikapika> and have other methods paint shit
[18:52:32] <[itchyjunk]> ahh okay
[18:52:38] <[itchyjunk]> so i think of paint almost as main
[18:52:39] <deniska> [itchyjunk]: paint is the method which does the drawing
[18:52:40] <pikapika> you have to coordinate it using class members and repaints likem entioned
[18:52:46] <GeDaMo> The system will call your paint method to draw the component(s)
[18:53:12] <[itchyjunk]> ahh okay. a bit trippy. i saw main() {} so i thought all this would go into main
[18:53:19] <[itchyjunk]> but it's actually paint() {} in this case
[18:53:26] <[itchyjunk]> okay i'll have a gander at it
[18:54:23] <pikapika> You have to understand
[18:54:32] <pikapika> gui programming is completely different from terminal apps
[18:54:33] <[itchyjunk]> i refuse
[18:54:36] <spynxic> Ever use the html canvas to draw on?
[18:54:40] <deniska> [itchyjunk]: main is the first function which gets called when a program starts, it's used to set everything else up
[18:54:44] <pikapika> Completely different flow of control
[18:54:48] <pikapika> User events guide everything in a gui app
[18:54:49] <[itchyjunk]> ive not use html canvas either
[18:54:56] <pikapika> You can only respond to them
[18:54:58] <pyzozord> I just reinvented the worst algorithm for adding: while(--b>0) a++
[18:55:07] <deniska> [itchyjunk]: paint is what happens each time you (or the system) wants a component to be redrawn
[18:55:07] <[itchyjunk]> pikapika, right. my issue is i barely understand terminal apps
[18:55:31] <deniska> pyzozord: that's basically [->+<] in BF :)
[18:55:37] <spynxic> [itchyjunk]: know what fps is in gaming terms?
[18:56:05] <spynxic> Those are repaints in fractions of seconds
[18:56:18] <pikapika> Video games are very subtle
[18:56:26] <pyzozord> deniska: BF? [->+<] looks haskelly
[18:56:31] <deniska> pyzozord: brainfuck
[18:56:41] <pyzozord> oh haha, close enough I suppose
[18:56:43] <Rounin> [itchyjunk]: You can pass objects around as well, right... So rather than putting all of your code inside the innermost parts that have access to g and access to your JFrame, you can pass g around, and pass the window around, or go the other way and pass things in to the innermost code
[18:56:54] <pikapika> Rounin, yes but
[18:57:00] <pikapika> That still is paint() in charge
[18:57:03] <pikapika> his problem is that
[18:57:08] <pikapika> he wants other methods to be in charge
[18:57:11] <pikapika> such as an onclick handler
[18:57:17] <pikapika> which is a subtler problem
[18:57:28] <pikapika> and as mentioned requires coordinating actions via class fields
[18:58:03] * deniska started with GUI programming and only much later discovered the beauty of programming console apps
[18:58:09] <spynxic> pikapika: can you imagine a case for using global variables to interact between functions
[18:58:22] <Rounin> Ah... Now that you mention it, this API might not be the best one for games either... After all, does a Swing / AWT drawing API have suffucient framerate etc.?
[18:58:27] <pikapika> spynxic, what is the laternative
[18:58:34] *** Joins: independent56 (~independe@195-154-105-157.rev.poneytelecom.eu)
[18:58:40] <Rounin> Maybe there's some OpenGL API or whatever that I don't know about
[18:58:52] <spynxic> pikapika: I hoped my asking that would coax out an alt from you heh
[18:58:53] <Rounin> (which is a whole new can of worms but OK)
[18:58:59] <deniska> Rounin: these ones weren't made with games in mind :)
[18:59:00] <spynxic> I dislike doing so
[18:59:17] <pikapika> Yeah its ugly but it is how it is when you are already using a gui framework
[18:59:33] <pikapika> Its not so bad if you can wrap up your state into their own classes etc
[18:59:39] <pikapika> which is what I used to do
[18:59:44] *** Joins: hexfive (~eric@50.35.83.177)
[18:59:56] <independent56> What's the name for the JS feature that allows you  to do "obj.count" or "obj.result"? I would like to look further into it.
[19:00:00] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[19:00:17] <spynxic> With javascript it seems like bad practice to have an entire application's model available as a global variable
[19:00:46] <pyzozord> oh another interesting fact log2(10^12) == 40 so O(n) and O(n log n) is only 40 times slower for inputs <= 10^12
[19:01:14] <pyzozord> that's a good heuristic to keep in mind when designing algorithms
[19:01:26] <pikapika> spynxic, my paint method in a non-trivial application often ends up a god method unfortunately
[19:01:35] <pyzozord> O(n) + bad cache < O(n log n) + good cache
[19:01:40] <pikapika> well not in java, in a different language and framework but same idea
[19:01:57] <pikapika> but as I said
[19:02:05] <pikapika> the state object can be bound into classes
[19:02:05] <pyzozord> < as in "worst than"
[19:02:17] <pikapika> spynxic, for example lets say you are making a vector editor
[19:02:24] <spynxic> pikapika: ever attempt to come upon an alternative to clearRect for repainting?
[19:02:28] <deniska> independent56: seems like just accessing a field in an object?
[19:02:33] <independent56> Thanks
[19:02:37] *** Quits: cadmio (~cadmio@151.47.140.183) (Read error: Connection reset by peer)
[19:02:48] <pikapika> spynxic, in some cases we can calculate partial updates
[19:02:54] <spynxic> Ya
[19:02:58] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[19:03:04] <deniska> independent56: if you have `let a = {count: 5, result: 10}` then you can do `a.count` and `a.result`
[19:03:40] <pikapika> But as I was saying, you can have a class that contains a list of all items inside, each item can be either a straight line, a bezier curve or whatever other types your editor needs to support
[19:03:44] <independent56> So it's a bit like a Lua table. Intresting
[19:03:50] <[itchyjunk]> Rounin, oh i can pass g around to my methods?
[19:03:52] <pikapika> So the state itself can be easily divided into separate classes and objects
[19:03:58] <alycidyne> Hello again, more practically speaking, are there linguistic games based on dice?
[19:04:00] *** Quits: normskal (~normskal@101.175.64.73) (Ping timeout: 256 seconds)
[19:04:23] <alycidyne> More specifically, I need a game which can be played on a spacecraft for extended periods
[19:04:53] <Rounin> [itchyjunk]: Sure... Though it seems like paint() is the trigger that actually starts drawing the frame, so I guess whatever painting code you have has to be called by paint() when paint() runs
[19:05:16] *** Quits: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr) (Quit: WeeChat 3.2.1)
[19:05:50] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[19:05:54] <GeDaMo> alycidyne: https://en.wikipedia.org/wiki/Musikalisches_W%C3%BCrfelspiel
[19:05:54] <bayaz> Title: Musikalisches Würfelspiel - Wikipedia 
[19:06:01] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[19:06:10] <spynxic> pikapika: here's a tip for you, when doing gui stuff in the browser it's easier to ask for a mouse over listener than to manually write a condition to check if the mouse is over a set of elements 
[19:06:17] *** Joins: cadmio (~cadmio@151.35.0.90)
[19:06:23] <pikapika> Oh
[19:06:24] <spynxic> Idk if the performance is any different though
[19:06:32] <pikapika> I'll try to remember that if I do gui in a browser
[19:06:33] <pikapika> Thanks
[19:06:37] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[19:06:41] <alycidyne> GeDaMo: wow that is *exactly* what I had in mind :D
[19:06:46] <alycidyne> Thanks!
[19:06:55] <Rounin> [itchyjunk]: Anyway, perhaps breaking up the structure of the program is a bit premature
[19:06:55] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[19:07:04] <Rounin> But it can be done in different ways
[19:07:18] <[itchyjunk]> yeah i will work inside paint()
[19:07:29] <[itchyjunk]> i refarcored my brain to think of paint() as my main()
[19:07:34] <[itchyjunk]> makes more sense that way
[19:07:42] <pikapika> its not a main()
[19:08:03] <pikapika> and remember in graphicsl programming the relationship of control is inverted
[19:08:10] <spynxic> pikapika: oh are you familiar with how variable scoping works in javascript?
[19:08:20] <pikapika> the user and the framework generate events and you are only free to fill up the handlers
[19:08:23] <cadmio> Rounin: I'm not sure if you could read my last message
[19:08:26] <Rounin> You could totally do something like this, thuogh: public void paint(Graphics g) { MyTotallyCoolFrameDrawer.drawAFrameForMe(g); } , let's say
[19:08:29] <pikapika> spynxic, function scoped
[19:08:32] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:08:39] <pikapika> declare anywhere, visible throughout function
[19:08:51] <pikapika> would be undefined if used before lexical position
[19:09:04] <Rounin> paint only has to be the trigger, and where the code goes after that is up to the programmer
[19:09:05] <pikapika> 'let' is more traditional block level scoped
[19:09:14] <spynxic> pikapika: If I place a paint function within a main function then the paint can access all the variables declared in the main function even though they aren't global
[19:09:16] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[19:09:20] <spynxic> It's amazing
[19:09:28] <pikapika> spynxic, yes
[19:09:38] <pikapika> an inner method can read all vars from the outer method
[19:09:39] <[itchyjunk]> uhh do i get to work in polar coordinate?
[19:10:10] <pikapika> [itchyjunk], x=x0+r*cos(theta),y=y0+r*sin(theta)
[19:10:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[19:10:15] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:10:34] <alycidyne> Or should I just amuse myself with SCIGen? XD
[19:10:38] <Rounin> cadmio: I don't remember it. Are you still having the use-after-free problem? It's probably best if you print out the contents of your entire list before it tries to do the addition, and see what the list actually contains
[19:11:23] <Rounin> cadmio: If it fails to even print out the list, then there's a problem with the structure of the list ... Perhaps calculate() does something incorrect when it calls delNextNode, for instance
[19:11:34] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Ping timeout: 265 seconds)
[19:11:56] <cadmio> no I changed to this https://paste.gnome.org/p1iuighwf#line-283 and I removed the double free
[19:11:57] <bayaz> Title: GNOME Pastebin 
[19:12:52] <cadmio> but I cannot compute the correct result
[19:13:01] *** Quits: independent56 (~independe@195-154-105-157.rev.poneytelecom.eu) (Ping timeout: 265 seconds)
[19:13:19] <Rounin> cadmio: What calculation is going wrong, and how and where?
[19:13:33] *** Joins: snake (~snake@user/snake)
[19:13:46] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:13:53] <cadmio> e.g ./jac "5+6" I get '6'
[19:14:20] <Rounin> cadmio: Right... Then my recommendation is to do what I said above
[19:14:32] *** Quits: snake (~snake@user/snake) (Client Quit)
[19:14:45] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[19:14:47] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[19:15:02] <Rounin> cadmio: On line 300... Where it says /* Add up etc.
[19:15:59] <cadmio> I think it's the list which is not in the proper order
[19:15:59] *** Joins: snake (~snake@user/snake)
[19:16:14] <[itchyjunk]> oh shit forgot java doesn't use standard cartisian cordinates
[19:16:16] <cadmio> I should take that after reverse(&tmp);
[19:16:19] <[itchyjunk]> no wonder i am confused
[19:16:21] <[itchyjunk]> poop
[19:16:23] <pikapika> Java uses cartesian
[19:16:26] <pikapika> what are you talkng about
[19:16:26] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:16:32] <pikapika> y axis is inverted
[19:16:38] <pikapika> as is common in 2d computer graphics
[19:16:46] <Rounin> cadmio: Yes, you could really print out the list several times in calculate() , as long as you keep track of which printout you're looking at
[19:16:48] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[19:16:58] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Read error: Connection reset by peer)
[19:17:19] <[itchyjunk]> origin isn't 0,0 in java
[19:17:29] <[itchyjunk]> and there is no negative axis
[19:17:33] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:17:37] <[itchyjunk]> it's definately not standard cartisian
[19:17:50] <pikapika> origin is 0,0
[19:17:57] <Rounin> Hmmmmmmmmmmmm... Isn't origin per definition 0,0?
[19:18:01] <[itchyjunk]> "center" isn't 0,0.
[19:18:02] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[19:18:10] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[19:18:10] <pikapika> a coordinate system can be placed anywhere
[19:18:17] <pikapika> 0,0 isnt a center of your sheet of paper
[19:18:24] <Rounin> Ah, well... Center being 0,0 isn't that common anywhere
[19:18:25] <[itchyjunk]> idk what part of "standard" cartisian you're not understanding
[19:18:30] <Rounin> It's usually top left or bottom left
[19:18:34] <pikapika> its all standard cartesian
[19:18:36] <[itchyjunk]> but not every coordinate system is "standard" cartasian
[19:18:38] <[itchyjunk]> it's not
[19:18:40] <pikapika> there is no "center" in the world
[19:18:46] <pikapika> all coordinate systems are affixed to some point
[19:18:46] <Rounin> Oh, I suppose in math, if you show both the positive and negative side of the graph
[19:19:06] <[itchyjunk]> Rounin, yes, "standard" is pretty well understood
[19:19:23] <[itchyjunk]> where "below" decreases y axis negatively
[19:19:37] *** Joins: cm007magnum (~Rheanna@101.89.207.55)
[19:19:44] <Rounin> It wouldn't work for drawing surfaces with an even number of pixels, though, since you'd get half-pixels everywhere
[19:19:49] <[itchyjunk]> while you can increase increase values in java and only ever take positive ints
[19:19:56] <Rounin> So you'd need to use floats for your pixels
[19:20:10] <[itchyjunk]> the coord's only take int i thought
[19:20:15] <pikapika> the screen has discrete pixels [itchyjunk] 
[19:20:23] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:20:25] <[itchyjunk]> abstract void	drawLine​(int x1, int y1, int x2, int y2)
[19:20:28] <cadmio> Rounin: I got it!
[19:20:30] <[itchyjunk]> yeah ints
[19:20:34] <Rounin> Right, but then if it's even numbers in both directions, which of the four center pixels is 0,0?
[19:20:42] <Rounin> cadmio: That's very good to hear! :)
[19:20:55] <[itchyjunk]> Rounin, i tought you were gonna tell me
[19:21:35] <pikapika> there is no center anywhere
[19:21:39] <Rounin> [itchyjunk]: Ask Rounin not what is the center of your screen, but how your screen can center you.
[19:21:45] <[itchyjunk]> i think i can roughly set some (x,y) as my origin
[19:21:51] <pikapika> any time you use a coordinate system you have to fix up its origin and orientation somewhere
[19:22:04] <pikapika> [itchyjunk], translation
[19:22:18] <deniska> "y down" coordinate system many UI systems use is a quirk of history
[19:22:20] *** Quits: cadmio (~cadmio@151.35.0.90) (Quit: WeeChat 3.0)
[19:22:23] <pikapika> x'=x0+x,y'=y0+y
[19:22:36] <pikapika> It is not a quirk deniska 
[19:22:44] <pikapika> Man writes from top left to bottom right
[19:22:54] <[itchyjunk]> (x,y) |-> (x+a,y) |-> (x+a,y+a) |-> (x,y+a) draws a square on standard cartesian
[19:22:54] <spynxic> Western man
[19:23:06] <[itchyjunk]> on java cartesian, it draws a 7
[19:23:08] <pikapika> spynxic, well yes
[19:23:16] <pikapika> Arabic is top right to bottom left
[19:23:19] <pikapika> still same concept
[19:23:57] <deniska> pikapika: if engineers making first CRTs decided that the beam should go up rather than down, every UI framework would have Y up :)
[19:24:11] <GeDaMo> Also increasing memory addresses
[19:24:32] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Ping timeout: 260 seconds)
[19:26:04] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 265 seconds)
[19:26:14] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:b15e:6fbf:2848:1ba2) (Remote host closed the connection)
[19:26:30] <Rounin> Let's not forget old school east Asian writing, which goes top to bottom, right to left
[19:26:44] *** Joins: quartz (~quartz@user/quartz)
[19:27:15] <pikapika> Yeah
[19:27:19] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[19:27:33] <[itchyjunk]> you mean arabic?
[19:27:53] <Rounin> We~ll, Arabic goes right to left first, right? Whereas Chinese, say, used to have vertical lines
[19:27:54] <[itchyjunk]> regular sanskrit srcipt is left to right
[19:28:17] <Rounin> Mongolian still does, even though it's supposedly derived from Arabic... So it's sort of rotated 90 degrees
[19:28:43] <Rounin> Depending on the script it's written in, that is... Mongolian is written in more than one way
[19:29:20] <Rounin> (that is, Mongolian has a script that resembles Arabic, not the language)
[19:29:30] *** Joins: plotinus (~plotinus@122.175.247.240)
[19:29:56] *** Quits: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[19:32:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[19:32:05] <spynxic> I find the lack of negative numbers for the coordinate plane is helpful because your range is naturally [0,screen size] in each dimension 
[19:32:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:33:44] <Rounin> Mm... Though there's nothing wrong with making a custom draw method and adding screenWidth/2 and screenHeight/2 to every call, of course... Even though it'll be off by one for every screen size that's an even number
[19:34:23] <Hash> There is.
[19:34:27] <Rounin> :D
[19:34:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:47] <Hash> It is unwise to joke around like that, as inexperienced programmers might take you for real.
[19:35:00] <Hash> Try to avoid giving wrong information
[19:35:06] *** Quits: xiongxin (~quassel@113.116.34.58) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:35:28] <Rounin> Hash: Try to avoid making the wrong comments, or inexperienced programmers might take you for real!
[19:35:32] <Rounin> Perhaps lay off the hash for a while
[19:35:42] <Hash> Being defensive isn't the correct response here.
[19:35:42] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:35:47] <Hash> Being mature is.
[19:35:49] <plotinus> while designing a single-page application, it's often suggested that one should make all the routes serve `index.html` and then make requests from the browser using JavaScript `fetch()`, etc. how are the requests made normally if they are all going to serve `index.html` anyway. is using a different domain for API request common?
[19:35:49] <Hash> Try again.
[19:36:04] <Rounin> Hash: I look forward to seeing your new mature self in the future!
[19:36:13] <Rounin> Best of luck to you.
[19:36:14] <Hash> *sigh*
[19:36:26] <Hash> Rounin: this is all it took for you to behave in a sub-par manner?
[19:36:49] <Rounin> You're not quite there yet, I think, but keep trying
[19:36:54] <Hash> Really? Just one thing, please be responsible with your speech? And that challenging was enough to make you behave this way
[19:36:58] <Hash> That's uncanny.
[19:37:10] <Hash> Now I know how easy you are to emotinoally manipulate. 
[19:37:32] <Rounin> Still a way to go.
[19:38:31] <Hash> Well folks. "Try to avoid giving wrong information" "It is unwise to joke around like that, as inexperienced programmers might take you for real." <- was enough to make him defensive, sarcastic, mean spirited, sub-par.
[19:38:39] <Hash> :)
[19:38:44] <Hash> Please carry on.
[19:39:04] <Rounin> We'll disagree to disagree then.
[19:39:06] <Hash> plotinus: usually the front controller design pattern is employed to serve the main index or route everything through there.
[19:39:09] <Rounin> Wait... Well, yes.
[19:39:10] <spynxic> plotinus: I think there's a config file on the server that generally points to an index.html file if no file is specified in the request
[19:41:02] <Hash> plotinus: you can use any domain for talking to an api, that is fine
[19:41:38] <Hash> But if you're talking to an external api on each request, that might increase your load time
[19:43:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[19:45:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[19:45:31] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:46:46] *** Joins: brabrax (~brabrax@user/brabrax)
[19:46:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:47:20] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Ping timeout: 265 seconds)
[19:49:31] <plotinus> i'm talking in reference to a SPA.
[19:50:01] <plotinus> i mean in an SPA, every request is supposed to serve `index.html`, correct?
[19:50:28] <plotinus> and then when the assets are loaded, the `index.js` itself fetches the appropriate url.
[19:51:30] <quartz> I'm doing this simple coding exercise and I don't understand where the input is being stored. I'm writing my code in Java. All I have to do is literally square a number... but I don't know where the number is! https://i.ibb.co/VSxHxWp/image.png
[19:51:30] <bayaz> Type: image/png Size: 200.4 kB 
[19:51:59] *** Joins: paravida (~myChateau@23.31.187.1)
[19:52:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:52:35] <GeDaMo> You're reading the input as a String, the input is in 'line'
[19:52:55] <plotinus> quartz: convert `line` into an integer and then square it, i think.
[19:53:38] <quartz> But how does that make sense to store an int in a string? lol 
[19:54:01] <quartz> Wow what a dumb question. But thanks for the help, sorry for venting
[19:54:02] <plotinus> quartz: digits are characters too.
[19:54:09] <GeDaMo> You might want to check if the input is actually a number and report an error message
[19:54:27] *** Joins: Guest2869 (~Guest@host72.181-14-187.telecom.net.ar)
[19:55:54] <quartz> OK
[19:56:22] *** Joins: jazzy (~jaziz@2600:380:854a:af07:5c15:5702:68a5:4b72)
[19:57:20] <GeDaMo> If you know for sure your inputs will always be valid integers, I suspect the BufferedReader will have a method for reading an intger directly
[19:57:38] *** Joins: brickfat (~brickfat@user/brickfat)
[19:58:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:59:02] <GeDaMo> Ah, you need a Scanner for number conversions
[19:59:42] <quartz> Sorry I'm not sure what I'm doing wrong here: https://bpa.st/P6BQ
[19:59:43] <bayaz> Title: View paste P6BQ 
[19:59:59] <quartz> It says I'm not providing an output
[20:00:43] <GeDaMo> You're reading a single line, converting it, squaring it then you're looping over reading and printing
[20:00:51] <GeDaMo> You ignore the squared value you calculated
[20:01:30] <GeDaMo> Take out the loop at the end and print num instead
[20:02:48] <quartz> But that loop was in the problem before I started.
[20:03:16] <GeDaMo> Then maybe you need to put the convert / square inside the loop
[20:03:30] *** Joins: magla (~gelignite@55d42346.access.ecotel.net)
[20:03:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:07:00] <quartz> GeDaMo: So I need to use a scanner object rather than a BufferedReader?
[20:07:03] <quartz> TO collect the input
[20:07:05] <plotinus> Hash: what i meant was, since i've referred all the routes to `index.html` how can i possibly make a request for any resource JSON/HTML from the browser if i'm making an SPA?
[20:07:26] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:07:50] <plotinus> Hash: do i need to have a separate private domain for API calls which they use internally?
[20:07:59] <GeDaMo> quartz: not necessarily, what you have should work
[20:08:50] *** Quits: cm007magnum (~Rheanna@101.89.207.55) (Remote host closed the connection)
[20:10:28] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[20:14:51] <quartz> GeDaMo: https://bpa.st/5NPQ   This works, but oddly enough, the String line is never initilized. So I don't get why it works.
[20:14:52] <bayaz> Title: View paste 5NPQ 
[20:15:15] <GeDaMo> It's assigned in the while loop condition
[20:15:33] <quartz> omg
[20:15:41] <GeDaMo> "line = in.readLine()"
[20:15:47] <quartz> You're right. Sorry
[20:15:51] <GeDaMo> :)
[20:16:01] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 250 seconds)
[20:17:35] *** Joins: Guest7118 (~Guest71@66-203-186-206.ded.execulink.com)
[20:17:50] <Guest7118> If I delete tables often should I not use autoincrement in mysql
[20:18:04] <Guest7118> or should I write some sort of system that manages index?
[20:18:29] <Guest7118> for the primary key
[20:20:16] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:21:07] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[20:21:59] *** Joins: zwr (~zwr@2804:d45:b966:fb00:444d:93c6:eb87:79af)
[20:22:15] *** Quits: cth (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[20:24:15] *** Joins: Auron (~Auron956@user/auron)
[20:24:33] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[20:25:06] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[20:28:05] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[20:29:52] *** Quits: Guest2869 (~Guest@host72.181-14-187.telecom.net.ar) (Remote host closed the connection)
[20:31:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:31:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[20:33:10] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[20:33:51] <Guest7118> well the answer is that mysql marks delete columns as reusable
[20:33:55] *** Quits: Guest7118 (~Guest71@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[20:36:49] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[20:36:49] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[20:36:49] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:37:34] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 250 seconds)
[20:39:49] *** Quits: exvicesindaco (~exvicio@host-80-180-186-62.pool80180.interbusiness.it) (Quit: Going offline, see ya! (www.adiirc.com))
[20:42:08] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[20:42:49] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[20:44:29] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 264 seconds)
[20:46:20] *** Joins: diophantoz (~diophanto@user/diophantoz)
[20:53:22] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[20:54:16] *** Joins: gamara (~gamara@66-203-186-206.ded.execulink.com)
[20:54:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2.1)
[20:55:36] <gamara> So I have two php servers, one is a socket server, and another is in charge of serving up an authentication iframe to my front-end, they are both on the same domain. Will I be able to access session data on both servers?
[20:56:39] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[20:56:39] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[20:56:39] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:57:07] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[20:58:45] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[21:00:55] *** Joins: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de)
[21:01:09] *** Joins: cm007magnum (~Rheanna@218.78.88.163)
[21:02:18] <pyzozord> I think it could be possible if you can set up your php servers to store session in files
[21:02:44] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 265 seconds)
[21:02:48] <pyzozord> otherwise I'd recommend storing the session in some shared place maybe database
[21:03:00] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-104D-static.midco.net)
[21:03:47] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[21:04:34] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[21:05:48] <[itchyjunk]> in assembly, can i only load from memory?
[21:05:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:05:58] *** Quits: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-104A-static.midco.net) (Ping timeout: 252 seconds)
[21:06:01] <[itchyjunk]> or can i directly but "2" into a register?
[21:06:32] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:06:36] <vdamewood> It's called an immediate value, and it's built into the instruction.
[21:06:46] <mercenary> unless you are on an IBM360, load immediate is a thing
[21:06:47] <vdamewood> mov eax, 2
[21:07:06] <vdamewood> movl $2 %eax
[21:07:12] <pyzozord> i wonder if 2 in this case is part of instruction of part of data
[21:07:24] <[itchyjunk]> ah `li` is doing that then
[21:07:26] <[itchyjunk]> makes sense
[21:07:31] <vdamewood> Instruction.
[21:07:39] <GeDaMo> An immediate value is part of the instruction
[21:08:18] <GeDaMo> 83 c0 64  add eax,0x64
[21:08:31] <pyzozord> ah right, x86 instructions have variable length
[21:09:00] <mercenary> ehm, CPU dependent. Some arches have the constant as part of the instruction for small values, and a different instruction for ldi Rx,constant. And then there is x86
[21:09:38] <vdamewood> pyzozord: In many systems with fixed-size instructions you can have immediates in the instruction, too. You just get weird limits on size, such as only being able to load a 12-bit immediate.
[21:10:00] <[itchyjunk]> hmm what does rd mean? :(
[21:10:11] <[itchyjunk]> does the code `li x2, 0` make sense?
[21:10:21] <vdamewood> [itchyjunk] context?
[21:10:22] <[itchyjunk]> i wanted to load the immidate value 0 into the register x2
[21:10:26] <[itchyjunk]> in riscv
[21:10:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[21:10:45] <[itchyjunk]> no context @_@ thats all i want to do
[21:10:53] <[itchyjunk]> oh rd
[21:10:54] <[itchyjunk]> https://web.eecs.utk.edu/~smarz1/courses/ece356/notes/assembly/imgs/pseudo.png
[21:10:56] <bayaz> Type: image/png Size: 203.7 kB 
[21:10:58] <[itchyjunk]> in this image 
[21:11:02] <[itchyjunk]> forgot to paste it lil
[21:11:06] <GeDaMo> Doesn't RISC-V have a dedicated zero register?
[21:11:12] <[itchyjunk]> yes x0
[21:11:13] <vdamewood> GeDaMo: Yes.
[21:11:43] *** Quits: gamara (~gamara@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[21:11:49] <GeDaMo> 'rd' means destination register
[21:12:09] <[itchyjunk]> I get a `unsupported Op : li` https://www.cs.cornell.edu/courses/cs3410/2019sp/riscv/interpreter/
[21:12:10] <bayaz> Title: RISC-V Interpreter 
[21:12:23] <[itchyjunk]> but in that image, li is listed as OP
[21:13:28] <vdamewood> Looks like li is a peudo op.
[21:13:29] <GeDaMo> Unsupported could just mean this emulator doesn't support it, not that it's not valid
[21:13:33] <[itchyjunk]> :O
[21:13:51] <[itchyjunk]> okay so i need to find a list of actual op codes
[21:13:53] <[itchyjunk]> not sudo ones
[21:13:59] <vdamewood> The first image (pseudo.png) looks like a list of pseudo operations, and that they're really mapped to.
[21:14:03] <GeDaMo> The supported instructions are listed on that page
[21:14:13] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[21:15:01] *** Joins: aradesh (~aradesh@user/aradesh)
[21:15:02] <vdamewood> For example, there is no mv instruction, instead you just add the immediate 0 to a value in a register, and store the result in another.
[21:15:03] <[itchyjunk]> oh it is
[21:15:35] <vdamewood> You could also add r0 to a register and store its value.
[21:16:21] <vdamewood> Interesting, there's no not instruction, instead you xor with -1.
[21:16:38] *** Quits: eem (~eem@user/eem) (Ping timeout: 260 seconds)
[21:16:55] <Rounin> Truly RISC.
[21:17:34] <Rounin> I remember having this feeling with the Motorola 68 000, that some of the instructions were actually the same one, just with different parameters
[21:17:42] <Rounin> Not that that's a RISC processor, but still
[21:18:00] *** Quits: plotinus (~plotinus@122.175.247.240) (Quit: leaving)
[21:18:03] <Rounin> You'd have one instruction that took some parameters, and then another one (supposedly) with the exact same code, and a different parameter set
[21:18:11] <[itchyjunk]> i still don't understand how to put a 1 into x1
[21:18:18] <[itchyjunk]> i can add x1, x0, ?
[21:18:29] <GeDaMo> addi x1, x0, 1
[21:18:41] *** Joins: paravida (~myChateau@23.31.187.1)
[21:19:01] *** Joins: extern (~archer@141.226.72.172)
[21:19:02] <[itchyjunk]> Incorrect argument type [line 1] for 'add rd, rs1, rs2'
[21:19:06] <[itchyjunk]> oh addi
[21:19:16] <vdamewood> Or, are RV registers identified as xN?
[21:19:21] <vdamewood> s/Or/Oh/
[21:19:25] <GeDaMo> on x86 jz (jump if zero) and je (jump if equal) are just different mnemonics for the same opcode
[21:19:34] <Rounin> Ah, cool
[21:19:36] <[itchyjunk]> why did addi work but not add ? :(
[21:19:48] <GeDaMo> addi is for adding an immediate value
[21:19:48] <deniska> vdamewood: some of them have aliases, but x0 through x31 works
[21:19:57] *** Joins: ralinux (~saje@37.156.188.75)
[21:19:59] <vdamewood> add adds two registers
[21:20:01] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:20:04] <GeDaMo> add is for adding two registers and storing into a third register
[21:20:07] *** Joins: snake (~snake@user/snake)
[21:20:10] <vdamewood> add x1, x0, x2
[21:20:17] <[itchyjunk]> oh take immidate value 1 and add it to some register and store it in some otherregister?
[21:20:36] <GeDaMo> Yes
[21:20:36] <[itchyjunk]> okay this makes sense
[21:20:44] <user51> how many registers could a cpu have before reaching dimnishing returns?
[21:20:59] <vdamewood> user51: At least 2.
[21:21:04] <pyzozord> heh
[21:21:21] <pyzozord> I'd say 0
[21:21:23] <vdamewood> the MMIX has 256 registers, FWIW.
[21:21:30] <user51> knuths?
[21:21:32] <[itchyjunk]> oh shit i did it 
[21:21:37] <[itchyjunk]> i added 2 + 1 
[21:21:40] <GeDaMo> current x86 has hundreds of physical registers onto which the architectural registers (eax etc) are mapped
[21:21:41] <vdamewood> user51: Yeah, the second one.
[21:22:13] <deniska> the count of general purpose registers seems to be around 16-32 in modern'ish architectures
[21:22:15] <Rounin> Say,  GeDaMo: What do you do if you want to load something and you don't have a 0 in some register somewhere? Do you first XOR a register with itself to get the 0 or what
[21:22:27] <deniska> but as was mentioned, they may have many more physical registers
[21:22:33] <pyzozord> I think the single threaded non-vectorised performance of modern cpu is 0.25% of it's entire performance
[21:22:44] <GeDaMo> RISC cpus often have a register which always contains zero
[21:22:46] <deniska> and modern architectures also have many specialized registers, for vector operations for example
[21:22:53] <GeDaMo> But xor is the other way, yes
[21:23:11] *** Joins: shalora (~quassel@2a02:810a:b40:9f4::178f)
[21:23:30] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:23:37] <vdamewood> I forget, how many registers does the x87 have?
[21:24:07] <user51> vdamewood: quite a bit of registers
[21:24:11] <[itchyjunk]> hopefully 87
[21:24:12] <GeDaMo> x87 uses a stack
[21:24:23] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:24:26] <user51> wonder where i can find the design reasons
[21:24:37] <user51> hope that's big enough for chuck moore!
[21:25:08] <GeDaMo> "The x87 family does not use a directly addressable register set such as the main registers of the x86 processors; instead, the x87 registers form an eight-level deep stack structure[14] ranging from st0 to st7, where st0 is the top." https://en.wikipedia.org/wiki/Intel_8087#Registers
[21:25:08] <bayaz> Title: Intel 8087 - Wikipedia 
[21:25:23] <user51> vdamewood: aw man, thanks for the mention of it
[21:25:29] <user51> i'm having fun readong about stuff again
[21:25:50] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[21:25:57] <vdamewood> Ah, so 8.
[21:26:27] <pyzozord> interesting that they are mini stacks
[21:27:39] <user51> huh knuth seems to have al ot of stuf
[21:27:53] <user51> i had a note to look at metafont in the future
[21:27:57] <mrig> It's quite some irony that Sean Parent is an anti copyright and anti patent person. :)
[21:30:41] <pyzozord> mrig: I rewatch the concurency and data structures talks. But I can't find online the algorithsm talk. Have you seen that one?
[21:31:27] <mrig> I'm not sure, he certainly discusses some algorithms in the 'relationships' talks. But not in any particular depth.
[21:31:54] <mrig> Would love to learn logic and math from him, as a programmer rather than a mathematician.
[21:32:30] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:32:33] <mrig> Would be great if he would talk more on this. The relationships lecture are pretty good on this as an introduction though, already.
[21:33:32] <mrig> pyzozord: What was that one about more specifically?
[21:34:59] *** Joins: Pickchea (~private@user/pickchea)
[21:35:02] <pyzozord> the algorithms one? I don't know, but it had the "no raw loops" goal, that intrigued me
[21:35:39] <mrig> The no raw loops is in the video that I linked earlier for pikapika
[21:36:00] <mrig> It is in several, but I think that one may have been the fullest.
[21:36:51] <mrig> I just watched His latest offering, he gives some nice info into the structure of the photoshop architecture.
[21:36:54] *** Joins: kariosfox (~kariosfox@176.221.124.146)
[21:36:59] <mrig> How it does compositing.
[21:37:03] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Ping timeout: 265 seconds)
[21:38:30] <pyzozord> interesting title of "principle scientist"
[21:38:47] <pyzozord> in adobe
[21:39:27] <pyzozord> must be crazy smart
[21:39:30] <mrig> Yes, he makes me want to learn C++, rare that I get that thought. :)
[21:39:57] <pyzozord> heh, yeah it crossed my mind when I was watching his talks too
[21:40:18] <mrig> Nice to think of a language being in the hands of a structure that does pay that much attention to the quality of the code.
[21:40:29] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[21:40:40] <pyzozord> but look, C is very capable. Linux kernel is written in C. Blender is written in C. Look how beautiful blender C code is https://developer.blender.org/diffusion/B/browse/master/source/blender/editors/interface/
[21:40:42] <bayaz> Title: interface · rB 
[21:40:53] *** Joins: gamara (~gamara@66-203-186-206.ded.execulink.com)
[21:40:55] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:41:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:41:18] <pyzozord> (I'm toying with an idea of stealing blender's user interface code)
[21:41:47] *** Quits: _inky (~inky_@5.77.149.211) (Ping timeout: 252 seconds)
[21:42:09] <mrig> Yep that is very true.
[21:42:11] <gamara> If I have a static webpage (assets are delivered directly from nginx server), that contains an iframe delivered by a php server, can I access the session data in the static webpage?
[21:42:23] <gamara> the iframe would be used for authentication
[21:42:23] <pyzozord> if provably, both languages can do virtually anything, why would you ever chose the more complex language? That just sounds like masochism
[21:43:11] *** Joins: eem (~eem@user/eem)
[21:43:32] <mrig> elegance it key I think.
[21:43:36] <mrig> aesthetics.
[21:44:13] <pyzozord> unless you are one of those people who simply enjoy complexity - I don't understand how anyone would, but I do respect if someone does
[21:44:32] <pyzozord> I got to small a brain to fit complex stuff in it
[21:45:12] <gamara> Some languages are better at things than others, more syntax can provide more control to the developer
[21:45:14] <mrig> Parent just said in the talk that I'm listening to, "you can write yourself a C machine inside a Haskell function, and code terrible C inside of that, the language will only help you so much." I find his analogies to be really cool.
[21:45:16] <pyzozord> I got in my head a fiat not a ferarri :P
[21:46:02] <gamara> programming languages are tools, and each is designed with different applications in mind
[21:46:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:46:09] <pyzozord> I imagine people with ferraris get bored with the simple stuff I guess. Like knuth said some people just need more intelectual stimulation
[21:46:23] <mrig> Well raw memory is not that which is best for reproducible portable code, and that says a lot about utility and longevity perhaps.
[21:47:03] <gamara> if I need a dirty script that does something really quick I am going to pick up python, if I need performance I will use C/C++
[21:47:26] *** Quits: mmfood (~mmfood@45.135.187.59) (Ping timeout: 260 seconds)
[21:47:36] <pyzozord> gamara: I already answered your session question before
[21:47:36] <mrig> gamara: go is pretty productive for terminal apps.
[21:47:37] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-9c3e-79ce-5e92-d571.res6.spectrum.com)
[21:48:15] <gamara> yeah I know you did pyzozord
[21:48:21] <gamara> I guess I should just dig up the link you sent me
[21:48:25] <mrig> gamara: the session data should be in an http only cookie.
[21:48:34] *** Joins: pulse (~pulse@user/pulse)
[21:48:39] <gamara> yeah so as long as you are on the same domain it should be shared between resources
[21:48:44] *** Joins: immibis_ (~hexchat@2a02:3032:409:ff71:ee8b:96c:f1e7:b0cb)
[21:48:44] *** Quits: cm007magnum (~Rheanna@218.78.88.163) (Remote host closed the connection)
[21:48:49] <gamara> since it is included in the header of each request right
[21:48:54] <mrig> well I suppose that is not really true, in a same site only rather.
[21:49:14] <mrig> If the iframe is the same site, it would be accessible, if it is not then it would not.
[21:49:17] <pyzozord> gamara: https://stackoverflow.com/questions/36753513/how-do-i-save-php-session-data-to-a-database-instead-of-in-the-file-system
[21:49:18] <bayaz> Title: How do I save PHP session data to a database instead of in the file system? 
[21:50:13] <pyzozord> you could have two servers share the same filesystem for sessions, but that is probably a bad idea because of race conditions
[21:50:20] <mrig> gamara: so it also depends if your client needs to have any access to the cookie or not.
[21:50:21] <gamara> I am using memcache
[21:50:33] <mrig> the session cookie, not all situations require this.
[21:50:40] <cncr04s> I save it to redis
[21:50:43] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[21:51:03] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[21:51:29] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[21:51:41] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[21:52:52] <pyzozord> can I compile python to binary executable?
[21:53:04] <EtherNet> pyzozord: ypc
[21:53:08] <EtherNet> pyzozord: sorry, pyc
[21:53:11] <pyzozord> I mena real executable not python interpreter with python source baked into the .data section
[21:53:50] <mrig> all of the disadvantages of compiling with only a subset of the advantages; why would you want to do that?
[21:53:59] <jelly> what's your definition of "real executable" 
[21:54:01] <oldlaptop> PyPy maintains an AOT toolchain for a restricted subset of python in which PyPy itself is written; in practice I don't think that's useful for much other than compiling PyPy itself
[21:54:38] <oldlaptop> that is, the way to use it to get "better performance" is to build PyPy with it and run your code with PyPy's JIT
[21:54:40] <pyzozord> jelly: no bytecode, not jit, only real raw opcodes
[21:54:52] *** Joins: Ben10 (~Ben10@37.120.130.28)
[21:55:00] <oldlaptop> when last I looked they called the whole thing (with great originality) 'RPython'
[21:55:10] <jelly> turbo pascal that I grew up with wouldn't make "real executables" then
[21:55:13] *** Joins: node1 (~node1@user/node1)
[21:55:18] <tane> pyzozord, it will contain an interpreter anyway due to https://docs.python.org/3/library/functions.html#eval
[21:55:18] <bayaz> Title: Built-in Functions — Python 3.9.7 documentation 
[21:55:39] <pyzozord> oh
[21:55:42] <GeDaMo> Turbo Pascal did make real executables
[21:55:56] <pyzozord> yeah I thought turbo pascal made real executables too
[21:56:00] <jelly> he said no bytecode
[21:56:11] <GeDaMo> TP didn't use bytecode
[21:56:29] <pyzozord> btw turbo pascal is actually super cool
[21:56:33] <gamara> Here is a diagram of the my setup https://i.imgur.com/Muut4i4.png the question I am asking in particular
[21:56:33] <bayaz> Type: image/png Size: 21.0 kB 
[21:57:01] <oldlaptop> pyzozord: https://rpython.readthedocs.io/en/latest/
[21:57:02] <bayaz> Title: Welcome to RPython’s documentation! — RPython Documentation 
[21:57:21] <oldlaptop> it's all very much targeted at the needs of PyPy, or theoretically something that does a similar job
[21:57:26] <pyzozord> gamara: just store the session in the db then both servers can use it
[21:57:30] <oldlaptop> but it is fundamentally more or less what you're asking about
[21:57:43] <gamara> pyzozord that isnt my problem
[21:57:57] <gamara> I am just confused if I can access the session from the client side code
[21:58:25] <gamara> code that isnt touching the server
[21:58:32] *** Joins: _inky (~inky_@46.36.119.235)
[21:58:37] <gamara> besides making api calls
[21:59:03] <pyzozord> gamara: no, session data is stored and kept on the server side, but there is some session identifier (usually in the cookie) stored on the client
[21:59:39] <pyzozord> gamara: but you can make your servers render session data into json and embed that in the html, then js will have access to that
[22:00:13] <node1> Hi can i get any help with github actions?
[22:01:07] <pyzozord> Hmm I guess forcing python to a compiled code is a bad idea. I just thought that I wouldn't want to ship a python script as a game. I feel shippable games need an executable
[22:01:44] <gamara> Thanks so much pyzozord
[22:01:58] <pyzozord> no worries
[22:01:59] <deniska> pyzozord: nuitka worked well when I tried it
[22:02:29] <oldlaptop> For what reason? For user-convenience purposes the "binary-with-python-code-in-.data" (or a tclkit-like "binary-with-a-virtual-filesystem-tacked-onto-the-end" approach) is functionally identical
[22:02:43] <mrig> gamara: you would normally be accessing a unique identity in the session cookie each time that you access a page, the server side code will check that id against its VIP list to see if you have the access privileges for the resource that you have requested.
[22:03:01] <oldlaptop> for obfuscation purposes, (a) eeew (b) shipping bytecode should be more or less similar in effect
[22:03:52] <mrig> Rather the server would be accessing this, so if you are writing the server code you would be doing so. Sorry I am not being particularly clear :)
[22:04:01] <gamara> this setup should work though right?
[22:04:20] <gamara> I could just make an api call to the server after the cookie has been loaded into the browser to get user data
[22:04:23] *** Quits: extern (~archer@141.226.72.172) (Quit: WeeChat 3.2.1)
[22:04:26] <mrig> yes, for restricting access.
[22:04:38] <mrig> or permitting it.
[22:04:44] <pyzozord> yeah I guess so. I guess I could make make a custom build of cpython with only the features I need and link game bytecode into .data
[22:04:53] <gamara> I heard it is good practice to isolate authentication from the main javascript
[22:05:09] <gamara> to reduce exploit domain
[22:05:21] <oldlaptop> I don't know how CPython is in this regard, but the Tcl interpreter is actually a C library, not really a C program
[22:05:48] <oldlaptop> the "tclsh" program itself is very little more than a call to the "do an interactive REPL" function in libtcl
[22:06:11] <pyzozord> cpython c code is very elegant and clean, I'm sure even less experienced developers can do a lot with it
[22:06:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:06:22] <oldlaptop> I get the general impression CPython is a similar-ish architecture; certainly C programs can embed a Python interpreter
[22:06:52] <mrig> gamara: the authentication does not require javascript either, if the server is not running on node.js. For other things you might want to have state that is being passed back and forth using a session, php uses this a great deal for example.
[22:07:18] *** Parts: Ben10 (~Ben10@37.120.130.28) ()
[22:07:22] <oldlaptop> and CPython is going to be much less of a hog to distribute if you don't feel the need to drag along that astonishingly huge standard library
[22:07:46] <pyzozord> yeah that was my point, cut most of that out
[22:07:52] <oldlaptop> (of course if your goal is to let modders write their own scripts to extend your game, maybe you do want to give them at least most of the standard library)
[22:08:30] <oldlaptop> then again the python standard library is so amusingly huge it includes a whole tcl interpreter :D
[22:08:38] <pyzozord> oh no, no interest in modders, if I wanted modders I'd just open source the whole thing let them build their own builds
[22:09:26] <oldlaptop> supporting modding is probably the best way to give your $product a chance to remain in use for a long time
[22:09:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:e8cb:df45:c587:6435)
[22:09:39] <pyzozord> maybe just kept original game python scripts closed source since that would be the content, rest is technology that could be open source
[22:09:49] <oldlaptop> freespace 2 is a semi-good example (I say semi- because they did eventually release the engine source)
[22:10:35] <oldlaptop> but the open-source development on that grew from the existing modding community, not the other way around
[22:11:06] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:11:09] *** Joins: dan01 (~dan01@2a02:2f09:381b:db00:19ad:8022:fc85:4de7)
[22:11:18] <pyzozord> anyone is familiar with VTTs (virtual table tops) like roll20? That's a web app. I'm wondering what kind of language and library would be good to achieve something similiar outside the browser
[22:11:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:11:57] <pyzozord> what it is is really a system of windows, forms and media management, and a chat with extras
[22:12:07] <pyzozord> so there is a lot of gui features really
[22:12:38] <oldlaptop> obviously I think that looks like a nail to hit with my tk hammer
[22:12:46] <pyzozord> :D
[22:13:02] <pyzozord> would tk be a good fit for a desktop vtt?
[22:13:19] <pikapika> The moon is made of green cheese
[22:13:40] <user51> what's the green cheese made of
[22:14:16] <EtherNet> user51: worms
[22:14:36] <oldlaptop> that might depend on: (a) how much of it needs to be a free-form canvas and not buttons/labels/comboboxes/etc., (b) how much the author likes [canvas] for the free-form canvas part of the proceedings
[22:15:21] *** Joins: karios_fox (~kariosfox@176.221.124.146)
[22:15:42] <pyzozord> there is not a lot of canvasing around, just overlaying and moving around images with with transparency
[22:16:07] <pyzozord> the only real feature there is handling say 100mb-2gb images
[22:16:32] *** Quits: kariosfox (~kariosfox@176.221.124.146) (Quit: Quit)
[22:16:32] <pyzozord> meaning if you have a massive resolution map and you just zoom in to some tiny part of it
[22:16:38] *** Quits: karios_fox (~kariosfox@176.221.124.146) (Client Quit)
[22:16:56] *** Joins: kariosfox (~kariosfox@176.221.124.146)
[22:17:41] <oldlaptop> your repetoire is mostly a free-form canvas (https://www.tcl.tk/man/tcl8.6/TkCmd/canvas.html), a very fancy rich-text editor (https://www.tcl.tk/man/tcl8.6/TkCmd/text.html), and a sparse-but-useful collection of standard GUI widgets (technically two such collections, the old-style unthemed widgets that fit in with motif back in the '90s, and the newer themed widgets that render with a generalized theming engine, or by calling out to the native win32
[22:17:41] <oldlaptop>  or aqua widgets on windows/macos)
[22:17:55] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:17:58] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 252 seconds)
[22:20:28] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[22:21:14] <oldlaptop> writing your own widgets as sort of combinations of these is a possibility, often using one of the various tcl object systems; tklib (which unfortunately has some tumbleweeds rolling through it) has some interesting examples, such as https://core.tcl-lang.org/tklib/file?name=modules/widget/dateentry.tcl&ci=tip 
[22:21:15] <bayaz> Title: Tk Library Source Code: dateentry.tcl at tip 
[22:22:34] <oldlaptop> (references to widget::calendar in there are another custom widget ultimately based on [canvas]: https://core.tcl-lang.org/tklib/file?name=modules/widget/calendar.tcl&ci=tip)
[22:23:38] <pyzozord> tk looks interesting but I'm not sure I'm ready for that commitment
[22:24:02] <[itchyjunk]> When you are, buy her a diamond from Shaneco!
[22:24:12] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[22:24:17] *** Joins: euouae (~euouae@user/euouae)
[22:24:44] *** Parts: euouae (~euouae@user/euouae) ()
[22:26:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[22:28:13] *** Joins: Guest2869 (~Guest@host110.190-137-39.telecom.net.ar)
[22:28:36] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Read error: Connection reset by peer)
[22:32:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[22:36:54] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 260 seconds)
[22:37:36] *** Joins: Stefan_dev (~Stefan_de@31.223.156.152)
[22:37:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[22:38:42] *** immibis_ is now known as immibis
[22:38:45] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[22:38:57] <Stefan_dev> Good evening, my name is Stefan, I am Software engineer and Full Stack web developer.
[22:38:59] *** Joins: karios_fox (~karios_fo@176.221.124.146)
[22:39:18] <GeDaMo> Hi Stefan_dev :)
[22:39:32] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 252 seconds)
[22:39:56] <Stefan_dev> Fun fact: I am coding now and I watching messages in libera.
[22:40:46] <Stefan_dev> How many programming channels there are?
[22:40:52] *** Joins: cm007magnum (~Rheanna@101.91.232.94)
[22:40:53] <diophantoz> hi Stefan_dev 
[22:41:30] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[22:41:35] *** Quits: karios_fox (~karios_fo@176.221.124.146) (Client Quit)
[22:41:52] <GeDaMo> Libera is mostly open source related
[22:41:58] <GeDaMo> So ... a lot :P
[22:42:00] <Guest2869> Stefan_dev: Hi; type /list
[22:42:32] <GeDaMo> You can search channel names with /msg alis list *pattern* -min 10 and channel topics with /msg alis list * -topic *pattern* -min 10
[22:42:37] <pyzozord> are there any other irc networks with good programming channels?
[22:42:47] <Guest2869> Stefan_dev: and take care because sadly all IP info is generally disclosed here then it is no a paradise :)
[22:42:52] <GeDaMo> There used to be one called Freenode :|
[22:42:53] <Stefan_dev> Guest2869 thnaks
[22:43:01] <Guest2869> (not happen on other networks)
[22:43:12] <diophantoz> GeDaMo, you went there
[22:43:30] *** Joins: tangy (~tangy@user/tangy)
[22:43:51] <GeDaMo> You can /join #libera-cloak and type !cloakme to get a cloak which will hide your IP address (mostly)
[22:44:09] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:44:12] <Stefan_dev> ok
[22:44:19] <Guest2869> pyzozord: yes, are organized by region: europe, latin people, etc. as far as I know
[22:44:28] <diophantoz> Stefan_dev, there are many specific programming channels for specific languages, projects etc
[22:45:04] <Stefan_dev> I need channel for C, C++ and C#.
[22:45:08] <Stefan_dev> thanks
[22:45:28] <GeDaMo> There are programming channels on other channels but this looks like the biggest https://netsplit.de/channels/?chat=programming
[22:45:36] <GeDaMo> Er, on other networks
[22:45:42] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790:5864:aa6d:7835:d0f2)
[22:45:51] <Stefan_dev> I mostly work in C, C++, C#
[22:46:01] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790:5864:aa6d:7835:d0f2) (Client Quit)
[22:46:18] <pyzozord> oh cool
[22:46:23] <Guest2869> GeDaMo: tho you need registration, which is not the best
[22:46:31] *** Joins: paravida (~myChateau@23.31.187.1)
[22:47:11] <GeDaMo> #csharp #c #C++
[22:47:16] <GeDaMo> Stefan_dev: ^
[22:47:30] <Stefan_dev> What ^ means?
[22:47:39] <GeDaMo> I was pointing you to the line above
[22:47:42] <diophantoz> the power of
[22:47:50] <diophantoz> joooke
[22:47:53] <Stefan_dev> okay
[22:48:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:48:00] <spynxic> ^
[22:48:40] <GeDaMo> Also #C++-general #c++-basic #c-basic
[22:49:15] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:49:21] <pyzozord> looks like our programming channel is one of the largest
[22:49:24] *** Quits: Stefan_dev (~Stefan_de@31.223.156.152) (Quit: Client closed)
[22:50:12] <pyzozord> I wouldn't be surprised if some folks from my current company are actually here
[22:50:44] <pyzozord> especially that our company slack culture is very similar to irc, they don't like threading, don't use emojis or reactions
[22:51:05] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 252 seconds)
[22:51:28] <Guest2869> do they use email lists  maybe?
[22:51:38] <pyzozord> dunno, don't think so
[22:51:56] <Guest2869> "threading" as in forums?
[22:52:21] <pyzozord> slack allows you to respond to messages, that creates a thread
[22:52:46] <Guest2869> which system? internal one?
[22:53:13] <pyzozord> huh? slack, that popular corporate communicator app
[22:53:33] <diophantoz> irc is the superior communication protocol
[22:54:21] <pyzozord> I like irc but mostly not for the protocol, but for the people who hang around
[22:54:36] <GeDaMo> Slack is owned by Salesforce
[22:54:50] <diophantoz> pyzozord, for me it's vice versa
[22:55:04] <GeDaMo> "On January 1, 2021, Slack and Salesforce announced an agreement for Salesforce to acquire Slack for a value of approximately $27.7 billion" https://en.wikipedia.org/wiki/Slack_(software)
[22:55:04] <bayaz> Title: Slack (software) - Wikipedia 
[22:55:06] <diophantoz> just kidding
[22:55:12] <diophantoz> it's both the protocol and the people
[22:55:22] *** Quits: LiftLeft (~LiftLeft@66.115.145.206) (Ping timeout: 252 seconds)
[22:55:32] <Guest2869> pyzozord: didn't know it
[22:55:46] <pyzozord> huh, 28 bilion bucks for a electron chat app
[22:56:11] <diophantoz> all other chat protocols have emojis and ever changing interfaces and popups and so on
[22:56:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:e8cb:df45:c587:6435) (Remote host closed the connection)
[22:56:32] <Guest2869> pyzozord: fyi I don't use cellulars as well :)
[22:56:41] <diophantoz> i tried a newsreader recently but most newsgroups i went to were old and empty
[22:56:49] <Guest2869> cellulars didn't trap me :)
[22:56:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[22:57:01] <diophantoz> maybe was on the wrong server, not sure how that works
[22:57:09] <pyzozord> diophantoz: irc has emojis too 🙋
[22:57:13] <Guest2869> but I like IRC a lot, yes
[22:57:21] <Guest2869> the best way at start
[22:57:40] <pyzozord> diophantoz: people just don't use it traditionally
[22:57:42] <Guest2869> what is internet? web pages, emai an IRC :)
[22:57:47] <Guest2869> emails
[22:57:55] <Guest2869> and* silly USB keyboard
[22:57:58] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[22:58:22] <Guest2869> what is cellulars? calls, SMS and internet
[22:58:24] <Guest2869> are*
[22:58:49] <gamara> what are frogs
[22:59:09] *** Quits: gamara (~gamara@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[22:59:18] <diophantoz> pyzozord, yes but i don't see them as bitmaps :)
[22:59:45] <GeDaMo> I see them as boxes with hex values in :P
[22:59:45] <diophantoz> i think you can reach newsgroups through google somehow
[22:59:46] <pyzozord> Damn I feel I am not on my best manners here. I should act better, if this is the biggest programming channel on irc I should try to make it better by my presence not worse
[22:59:50] <Guest2869> (basically talking)
[23:00:12] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[23:00:27] <Guest2869> GeDaMo: cellulars nowadays are mini computers; its scary
[23:00:30] <pyzozord> I literally spend weeks to see nice emojis so I'm the opposite
[23:00:37] <pyzozord> *spent
[23:01:17] <pyzozord> making sure my terminal emulator loads fonts dynamically, renders color emojis, does filtered scaling of emojis, detects the width properly for all glyphs
[23:01:24] <Guest2869> you can just use normal IRC smileys
[23:01:39] <diophantoz> pyzozord, i have been on that track too
[23:01:50] <diophantoz> but i decided verbose was the best
[23:01:55] <Guest2869> simple text format is beautiful (and useful)
[23:02:12] <pyzozord> I mostly wanted good emojis support because my bash prompt is a random emoji
[23:02:41] <Guest2869> apart that IRC doesn't require (and it's useful too) to be registered as default
[23:02:58] <GeDaMo> https://www.emojicode.org/
[23:02:58] <bayaz> Title: Emojicode 
[23:03:13] <pyzozord> bash prompt random emoji has a nice effect or instantly and intuitively recognizing on which window/session you are currently without any concious thinking
[23:04:10] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:04:43] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:05:16] <Guest2869> furthermore: "emoji" is just a modern term
[23:07:20] <pyzozord> I understand that sentiment of not liking emojis. It forces you to put more effort and intent in your text
[23:09:15] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[23:11:21] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:14:27] *** Quits: ralinux (~saje@37.156.188.75) (Quit: Leaving)
[23:14:28] *** Joins: zaher (~zaher@37.48.179.162)
[23:14:37] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (Ping timeout: 252 seconds)
[23:14:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[23:15:45] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:18:06] *** Joins: irado (~irado@177.12.221.62)
[23:21:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:21:37] <edgar-rft> I like old-schoold emojis like %&$#$! :-)
[23:22:08] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:22:29] <Guest2869> pyzozord: at the end it is something like ASCII drawing :P (joke)
[23:22:30] <Sqaure> those are the best
[23:22:37] *** Joins: snake (~snake@user/snake)
[23:23:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[23:24:59] <edgar-rft> §%$ you, you &$%#$#!!!
[23:25:53] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[23:26:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[23:26:37] <edgar-rft> now try that in unicode :-)
[23:27:27] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:27:32] <GeDaMo> ł¶ŧ←↓→øþ
[23:28:24] <tane> does anyone know of a program like dmenu, but for images? Use-case: I need to select an image from a folder in a command line process / bash script/ whatever. So I want a program that takes a folder/list of images, shows these in a gui. When I hit <enter> or other key on a specific image it returns its path on STDOUT an quits.
[23:29:12] *** Quits: cm007magnum (~Rheanna@101.91.232.94) (Remote host closed the connection)
[23:29:40] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[23:29:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:29:57] <zzz> tane: feh?
[23:30:02] <Guest2869> tane: at first sight sounds like you would need to code it on your own
[23:30:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:30:13] <edgar-rft> tane: zenity has a file selector dialog 
[23:30:51] <tane> totally forgot about zeh. good recommendations, thanks! I will look into these
[23:30:59] <tane> feh* :)
[23:31:18] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[23:31:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:32:56] <pyzozord> ł is not an emoji :P
[23:33:37] <pyzozord> oh sorry you changed subject to unicode, ok that's fair
[23:34:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:34:28] <edgar-rft> originally I meant unicode emojis, but you're right, I didn't say it
[23:34:48] <pyzozord> I noticed that in ubuntu with my keyboard layout I can press right alt and 2 to get ²
[23:34:57] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[23:35:17] <GeDaMo> I typed those characters using AltGr
[23:35:17] <pyzozord> I wish unicode actually handled math symbols much better
[23:35:40] <GeDaMo> Like × and ÷? :P
[23:35:52] <Guest2869> depends on our keyboard/keyboard layout too
[23:35:58] <edgar-rft> ² works with debian, too, and it's even printed on the key of my keyboard
[23:36:21] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:36:57] <GeDaMo> AltGr+Shift+2 gets me ⅛
[23:37:05] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[23:37:15] <pyzozord> I mean having the big Σ²₂ have both superscript and subscript at the same level, have much more symbols in superscript and subscript, have proper division line support etc
[23:37:15] <edgar-rft> makes sense :-)
[23:37:53] <pyzozord> I get ¿ for altgr+shift+2
[23:39:27] <edgar-rft> let's type with altgr+shift letters only
[23:39:46] <GeDaMo> Øĸ
[23:39:48] <pyzozord> ÓK
[23:39:52] <GeDaMo> :D
[23:41:08] <edgar-rft> found it, altgr+ß -> ¿
[23:42:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:42:23] <edgar-rft> dammit, I meant altgr+shift+ß -> ¿
[23:42:53] <edgar-rft> let's try to press more than three keys at once :-)
[23:45:10] <mawk> I don't have ß on my keyboard
[23:45:12] <GeDaMo> Shift followed by AltGr is my combine key: o then ' gets me ó
[23:45:15] <mawk> but altgr + b is ß
[23:45:23] <mawk> and uppercase is the most ugly ẞ
[23:45:29] <GeDaMo> AltGr+s gets me ß
[23:45:31] <mawk> which looks like a retarded β
[23:45:34] <mawk> yeah
[23:45:37] <mawk> no
[23:45:37] <mawk> why
[23:45:45] <edgar-rft> mawk: you're clearly disadvantaged by your keyboard
[23:45:49] <mawk> ß is just a weird b it belongs on the key b
[23:45:51] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[23:45:54] *** Joins: zyweo (~Svew@user/zyweo)
[23:46:02] <mawk> altgr+s is ø which also makes perfect sense
[23:46:07] <pyzozord> oh cool i get „” with altgr+v/b
[23:46:13] <Pajus> ß == ss 
[23:46:21] <mawk> eszett
[23:46:32] <edgar-rft> ß = beta in greece
[23:46:39] <mawk> no it's β
[23:46:42] <mawk> the tail goes down lower
[23:47:19] *** Joins: Cashlin (~hp@user/cashlin)
[23:47:21] <edgar-rft> but the real german sz from handwriting looks like β, not like ß
[23:47:27] <GeDaMo> AltGr+z/x gets me «»
[23:47:43] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[23:47:52] <mawk> no it's w/x
[23:48:06] <mawk> since we all have azerty keyboards
[23:48:08] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[23:48:13] <edgar-rft> no it's y/x :-)
[23:48:17] <GeDaMo> Pfft! Weirdo :P
[23:48:47] <mawk> [ is altgr+5, ] is altgr+-
[23:48:50] <mawk> I love coding with that thing
[23:48:54] <mawk> it muscles the hand
[23:49:17] <edgar-rft> beware, you'll get popeye arms
[23:49:20] *** Joins: password2 (~password@user/password2)
[23:51:35] <edgar-rft> it's not real unicode without using your nose!
[23:51:51] <user51> 32 keys. 16 for the high bits, 16 for the low bits
[23:52:30] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 260 seconds)
[23:53:09] <GeDaMo> https://en.wikipedia.org/wiki/Chorded_keyboard
[23:53:10] <bayaz> Title: Chorded keyboard - Wikipedia 
[23:54:07] <edgar-rft> I had an amiga mouse driver where I could write by typing morse code on the mouse buttons
[23:54:54] <Guest2869> fun/funny :)
[23:55:31] *** Joins: zaher_ (~zaher@188.160.138.251)
[23:55:54] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:56:58] <pyzozord> what does Gr stand for in AltGr?
[23:57:09] <pyzozord> Alt Great? because it makes awesome symbols?
[23:57:15] <GeDaMo> Graphic, I think
[23:57:15] *** Joins: Guest9911 (~Guest99@171.121.36.171)
[23:57:41] <mawk> graphic
[23:57:42] <GeDaMo> https://en.wikipedia.org/wiki/AltGr_key "IBM states that AltGr is an abbreviation for alternate graphic"
[23:57:43] <bayaz> Title: AltGr key - Wikipedia 
[23:57:51] <pyzozord> that actually makes a lot of sense, I thought it stands for "gear" for some reason
[23:59:30] *** Quits: zaher (~zaher@37.48.179.162) (Ping timeout: 260 seconds)
