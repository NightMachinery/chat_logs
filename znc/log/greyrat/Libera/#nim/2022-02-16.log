[00:06:07] <FromDiscord> <johndo3> Hey does anyone have any good docs for nimpy?  The GitHub examples are straight forward but not thorough. Implementation is simple enough but when you start to get in the weeds all they have is a ‚Äúfaq‚Äù section‚Ä¶
[00:20:16] <FromDiscord> <leorize> a thread proc can only receive one argument
[00:23:19] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3PI7
[00:29:40] <FromDiscord> <reilly> Normally I would just pass these values into IMGUI and let it handle everything, but I need to populate the `content` field ahead of time.
[00:49:40] <PMunch> Safely? Don't use a cstring..
[01:19:00] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[02:00:49] <FromDiscord> <reilly> I don't really have a choice, so I'll take what I can get.
[02:06:04] <FromDiscord> <Mysterysib> Hi
[02:06:15] <FromDiscord> <Mysterysib> Is anyone using IntelliJ Idea / Jetbrains for nim?
[02:06:20] <FromDiscord> <Mysterysib> I need help getting it to work
[02:11:58] <FromDiscord> <JSONBash> what are the supported `--os:` options?
[02:12:56] <FromDiscord> <JSONBash> i am looking for the macos one
[02:19:36] <FromDiscord> <JSONBash> i think it is `--os:macosx`
[02:51:28] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (*.net *.split)
[02:51:28] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[02:51:28] *** Quits: ox (~oz@crystal/user/oz) (*.net *.split)
[02:51:28] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (*.net *.split)
[02:51:28] *** Quits: drewr (~drew@user/drewr) (*.net *.split)
[02:51:28] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[02:51:28] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[02:53:46] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[02:53:46] *** Joins: dom96 (~dom@mail.nim-lang.org)
[02:53:46] *** Joins: ox (~oz@crystal/user/oz)
[02:53:46] *** Joins: enyc (~enyc@user/enyc)
[02:53:46] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[02:53:46] *** Joins: drewr (~drew@user/drewr)
[02:53:46] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[02:53:47] *** Quits: enyc (~enyc@user/enyc) (Max SendQ exceeded)
[02:54:03] *** Joins: enyc (~enyc@user/enyc)
[03:32:41] <FromDiscord> <JSONBash> I am trying to get an arm64 linked dynmaic library, and i can only get an x86_64, i am using `--cpu:arm64` and result is `Mach-O 64-bit dynamically linked shared library x86_64`
[03:33:21] <FromDiscord> <JSONBash> sent a code paste, see https://play.nim-lang.org/#ix=3PIP
[03:33:21] <FromDiscord> <JSONBash> is my nim.cfg file
[04:09:13] <arkanoid> here it says to initialize FutureVar[string] to 46. How can I pre-allocate a value in a FutureVar[T]? https://nim-lang.org/docs/asyncnet.html#recvFrom%2CAsyncSocket%2CFutureVar%5Bstring%5D%2Cint%2CFutureVar%5Bstring%5D%2CFutureVar%5BPort%5D
[04:10:28] <arkanoid> `value` of Future[T] is not exported either
[04:49:46] <arkanoid> solved with some convoluted code
[04:59:47] <FromDiscord> <treeform> In reply to @JSONBash "I am trying to": we are able to do this with this commands: https://github.com/treeform/pixie/blob/master/pixie.nimble#L25-L27
[05:00:54] <FromDiscord> <treeform> then we use lipo to glue them together to form a super dylib that works everywhere
[05:10:08] <arkanoid> how to stop/conclude nimble develop?
[05:14:42] <NimEventer> New post on r/nim by Ether-naut: Processing a sequence on multiple threads, see https://reddit.com/r/nim/comments/stjljr/processing_a_sequence_on_multiple_threads/
[05:16:59] <FromDiscord> <JSONBash> In reply to @treeform "we are able to": That worked like a charm! thanks so much!
[05:17:08] <FromDiscord> <JSONBash> I can finally sleep lol
[05:20:07] <FromDiscord> <auxym> In reply to @arkanoid "how to stop/conclude nimble": My undersanding is `nimble uninstall`
[05:20:33] <arkanoid> auxym, it deletes the one in .nimble folder, not the local one
[05:21:41] <FromDiscord> <auxym> not sure I follow, nimble develop creates a symlink in .nimble that points to some local copy of a library, no? So nimble uninstall deletes the symlink
[05:24:47] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:38:43] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Quit: Leaving)
[05:42:02] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[05:48:52] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[05:52:45] *** Joins: xet7 (~xet7@user/xet7)
[06:17:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[06:27:22] <FromDiscord> <Rika> nimble uninstall package@#head
[06:34:55] *** ox is now known as oz
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:45:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[08:26:23] <FromDiscord> <ajusa> Anyone know a good package to implement reading and writing binary data structures? I know of binary lang, curious if there are others
[08:30:31] <rockcavera> ajusa https://github.com/treeform/flatty
[08:31:35] <FromDiscord> <ajusa> Hm, not sure how good it is for certain schemas, but I'll check it out, thanks!
[08:46:47] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:54:16] <FromDiscord> <Elegantbeef> It's only really good for Nim serialization of objects
[09:11:25] <FromDiscord> <ajusa> yeah, I'm trying to use varints (want to do some minecraft protocol stuff)
[09:11:53] <FromDiscord> <ajusa> it looks like flatty and frosty are good, but they both store length prefixes as normal ints, so I'd probably need to fork or modify the libraries in some way
[09:16:25] <FromDiscord> <ajusa> any other ideas or libraries I could consider?
[09:16:45] <FromDiscord> <Rika> What‚Äôs wrong with what you just said
[09:18:55] <FromDiscord> <ajusa> absolutely nothing, just wondering if there are better options lol. flatty has a really solid API I could extend for the Minecraft data types
[09:19:25] <FromDiscord> <Rika> If there was no issue then what would constitute as ‚Äúbetter‚Äù?
[09:21:01] <FromDiscord> <ajusa> hm, I guess an existing library that supports the varint format? or some sort of macro magic I'm unaware of?
[09:25:20] <FromDiscord> <Elegantbeef> Making your own is another alternative üòú
[09:26:02] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> @leorize\:envs.net thanks, i thought so; as i did not see any doc on TArg, i can not be sure when i ask.
[09:26:07] <FromDiscord> <Rika> Making beef make one for you is another
[09:26:13] <FromDiscord> <ajusa> I like that idea
[09:26:15] <FromDiscord> <Elegantbeef> Lol
[09:26:50] <FromDiscord> <ajusa> "if you complain enough, Elegantbeef or PMunch will create a library for you" - Sun Tzu
[09:27:50] <FromDiscord> <Elegantbeef> Also the hell are you talking about with frosty?
[09:27:51] <FromDiscord> <Elegantbeef> It allows you serialize however you want
[09:28:29] <FromDiscord> <ajusa> it defaults to using ints for strings and objects rather than varints I think?
[09:28:30] <FromDiscord> <Elegantbeef> In my case it's more "will answer a question and get enthused by an idea and implement it"
[09:28:43] <FromDiscord> <Elegantbeef> Cool, but you know you can do it yourself right?
[09:29:15] <FromDiscord> <Rika> Why do it yourself if you can get someone else to do it for you
[09:29:26] <FromDiscord> <Elegantbeef> No i more mean that you can serialize it however you want
[09:29:30] <FromDiscord> <ajusa> don't think you can do it without modifying the library?
[09:29:49] <FromDiscord> <ajusa> (I might be completely wrong about that)
[09:29:50] <FromDiscord> <Elegantbeef> You can write your own hooks
[09:30:07] <FromDiscord> <Elegantbeef> https://github.com/disruptek/frosty#easily-customize-serialization-for-types
[09:30:36] <FromDiscord> <ajusa> oh
[09:31:01] <FromDiscord> <Elegantbeef> It does support all primitives out of the box but you can always make your own serialization
[09:31:34] <FromDiscord> <ajusa> see this is the kind of response I was looking for @Rika, me not reading docs properly and beef kindly explaining how I can solve my problem. thanks!
[09:31:50] <FromDiscord> <Elegantbeef> I think you can technically do the same with flatty
[09:33:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PJH
[09:33:37] <FromDiscord> <Elegantbeef> then use `MyString` in place of `string` in your object so you can override the serialize just for these specific cases
[09:33:48] <FromDiscord> <Elegantbeef> Dont know if frosty supports overriding primitives, it might
[09:34:26] <FromDiscord> <ajusa> so that way I retain string operations (like strutils) while being able to do custom serialization. sounds pretty good
[09:34:42] <FromDiscord> <Elegantbeef> Yep
[09:47:34] <FromDiscord> <Rika> Well I have no idea what you were even talking about until you explained it which by then I was busy
[09:47:57] <FromDiscord> <Elegantbeef> In other words, rika dont give no fucks
[09:49:36] <FromDiscord> <Rika> In reply to @ajusa "it defaults to using": I missed seeing this message xd
[09:49:46] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:58:30] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:06:38] <FromDiscord> <ITR> Are there any alternatives to synthesis for statemachines yet?
[10:07:02] <FromDiscord> <ITR> (edit) "statemachines yet?" => "statemachines?"
[10:09:31] <FromDiscord> <Rika> Any issues with synthesis?
[10:17:52] <FromDiscord> <Bloss> has anyone else tried adding GC hooks to fixed-size array types with `ptr UncheckedArray[T]`? for me some memory corruption happens if `T` is a ref type
[10:25:40] <FromDiscord> <Elegantbeef> You will probably need to use the `trace` and `GcRef`
[10:30:30] <FromDiscord> <Bloss> yeah it is probably related to ref counting at some point the value of my pointer was 1
[10:33:37] <FromDiscord> <ITR> In reply to @Rika "Any issues with synthesis?": it'd be interesting to see different takes on it. IIRC synthesis doesn't support statecharts and has limited async support
[10:34:27] <FromDiscord> <Bloss> found this <https://github.com/nim-lang/Nim/issues/16274>
[10:34:57] <FromDiscord> <Rika> State charts? You mean visualisation?
[10:39:33] <FromDiscord> <ITR> In reply to @Rika "State charts? You mean": Simply explained, statecharts are statemachines with support for subcharts and parallel statemachines
[10:39:50] <FromDiscord> <ITR> I'd recommend looking into talks about xstate, which goes a bit more into it
[10:41:06] <FromDiscord> <Rika> That‚Äôs much deeper than a regular FSM would be wow
[10:41:22] <FromDiscord> <ITR> it's pretty interesting, and I think it might have a positive effect on programming going forward
[10:42:47] <FromDiscord> <Rika> It‚Äôs more complex though
[10:46:47] <FromDiscord> <ITR> yeah, and pretty foreign given that most people don't even use regular FSMs, so it's not very widespread yet
[10:47:02] <FromDiscord> <ITR> (edit) "so" => "two reasons for why"
[10:49:44] <FromDiscord> <ITR> One thing that's interesting is that statecharts themselves are fairly old
[11:11:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[11:48:08] *** Joins: rwb (~augh@209.141.39.190)
[11:49:43] *** Quits: rb (~augh@209.141.39.190) (Read error: Connection reset by peer)
[11:55:02] *** Joins: PMunch (~PMunch@user/pmunch)
[12:01:39] <FromDiscord> <Rika> I suppose it wouldn‚Äôt be too hard to make this GIVEN that the restrictions are loosened from synthesis, since synthesis was aimed for embedded and restrained resource environments
[12:02:10] <FromDiscord> <Rika> Actually this might not need the loosening
[12:02:51] <FromDiscord> <Rika> Yeah okay maybe I‚Äôll look into it
[12:36:17] <FromDiscord> <Valdar> is there some rule that a ref object has to have its type defined in the same module as the variable?
[12:36:31] <FromDiscord> <Elegantbeef> No
[12:36:45] <PMunch> What variable?
[12:36:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PKa
[12:37:02] <FromDiscord> <Elegantbeef> export even
[12:37:31] <PMunch> I always exprort my variables
[12:37:47] <FromDiscord> <Valdar> I'm just doing import. Do I have to export too?
[12:38:00] <FromDiscord> <Elegantbeef> Yes
[12:38:08] <FromDiscord> <Elegantbeef> Nim defaults to unexported
[12:38:15] <PMunch> If you want to use a type definition defined in one module from another module which imports it you need to export that definition
[12:38:19] <FromDiscord> <Elegantbeef> Which means that any top level symbol is not accessible from an `import`
[12:38:38] <FromDiscord> <Valdar> I never do with anything else. just when i changed it to ref
[12:39:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:39:11] <FromDiscord> <Valdar> k, thx. I'll try that
[12:39:21] <FromDiscord> <Elegantbeef> ref doesnt change anything
[12:39:28] <FromDiscord> <Elegantbeef> So are you talking about a different issue?
[12:39:55] <FromDiscord> <Elegantbeef> `let` is immutable
[12:39:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3PKb
[12:42:13] <FromDiscord> <Valdar> I'm using var
[12:42:28] <FromDiscord> <Elegantbeef> Showing the code will give a more concise answer to the issue üòÄ
[12:46:40] <FromDiscord> <Valdar> yeah, I'll have another look. maybe I'm missing something.  I'll post it if I don't find the issue. I gotta run out for a bit anyways. I'll go at it again when i get back
[12:49:21] <FromDiscord> <Valdar> by export, you mean "export", right. I'm just using SomeOject = object
[12:49:32] <FromDiscord> <Elegantbeef> `` is the export marker
[12:49:49] <FromDiscord> <Valdar> yeah, i'm doing that
[12:49:50] <FromDiscord> <Elegantbeef> It exports the top level statements or fields
[12:50:01] <FromDiscord> <Elegantbeef> Then there is another issue
[12:51:01] <FromDiscord> <Valdar> and it has always worked fine, but when i changed to SomeOject = ref object, it was no longer accessible
[12:51:35] <FromDiscord> <Elegantbeef> well `ref object` doesnt change anything so either you found a bug or are doing something wrong
[12:52:31] <FromDiscord> <Valdar> Maybe I did something else to bugger it up, but I don't think so.
[12:54:35] <FromDiscord> <Elegantbeef> Not using any macros are you?
[12:56:07] <PMunch> What is the actual error you're getting @Valdar?
[12:57:09] <PMunch> Hmm, is there a way to echo out a compile-time stack trace? I'm debugging where in my code the `os` module is imported (it just errors out the program when not run on a supported OS (even if you only use it for macros (yay...)))
[13:02:55] <FromDiscord> <Valdar> Neer mind. I'm an idiot. I was using tuples before, so now I have to export each field since changing it to ref object Thx to you both for the help
[13:04:42] <FromDiscord> <Elegantbeef> Yep tuples suck
[13:04:54] <FromDiscord> <Elegantbeef> Dont use them like types, only as return values or for unpacking!
[13:05:00] <FromDiscord> <Elegantbeef> like objects\
[13:05:44] <FromDiscord> <Valdar> Oh, Beef. i meant to ask you yesterday.... you said linked lists sucked. did you mean in general, or Nim's implementation?
[13:05:51] <FromDiscord> <Rika> In general
[13:05:53] <FromDiscord> <Elegantbeef> General
[13:06:01] <FromDiscord> <Valdar> yep, k
[13:06:21] <FromDiscord> <Rika> Their use is essentially limited to ‚Äúlearning ‚Äú
[13:06:52] <FromDiscord> <Elegantbeef> They have their applications
[13:07:17] <FromDiscord> <Elegantbeef> Any situation you need a cheap remove/add it's golde
[13:07:38] <FromDiscord> <Elegantbeef> I do speak in hyperbole a lot, but most of the time there is some basis of truth there üòÄ
[13:08:06] <FromDiscord> <Valdar> Just because the data gets scattered all over? or is there another reason
[13:08:42] <FromDiscord> <Elegantbeef> length is `O(n)`, not good for the cache
[13:09:02] <FromDiscord> <Rika> I‚Äôd say that it‚Äôs rare to need a constant time remove and insert while having random access unimportant
[13:09:25] <FromDiscord> <Elegantbeef> But when you do need it you'll be happy to know it's there üòõ
[13:09:34] <FromDiscord> <Elegantbeef> Like most data types they exist for a reason
[13:11:52] <FromDiscord> <Valdar> true. I'll be back in a bit. I think my problem is solved though. Stupid VS Code didn't give me the red squiggles right away, only after if changed it to ref, but the issue was actually not exporting the fields after changing from tuples
[13:12:17] <FromDiscord> <Valdar> thx again
[13:17:18] <FromDiscord> <Rika> In reply to @Rika "Yeah okay maybe I‚Äôll": I thought about it for a moment and it‚Äôs gonna be messy as hell
[13:17:22] <FromDiscord> <Rika> Needs more thought
[13:23:29] <PMunch> Of course you could implement a mixed implementation that would alleviate some of the issues with linked lists
[13:23:58] <PMunch> E.g chunked pieces of memory strung together in a linked list
[13:25:02] <PMunch> With some clever logic you could also keep an updated length field somewhere and avoid the O(N) length issue
[13:25:46] <PMunch> For random access you could store a pointer to each chunk in a sequence, bit more overhead, but essentially works as a finger table
[13:26:13] <PMunch> Now of course you might have to implement some chunk rebalancing if you do a lot of inserts and deletes in specific patterns
[13:26:27] <FromDiscord> <Rika> Then it‚Äôs not a linked list anymore.
[13:26:32] <FromDiscord> <Rika> It‚Äôs a different data type
[13:26:36] <PMunch> Sure
[13:26:47] <PMunch> That's why I called it a mixed implementation
[13:47:29] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[13:48:23] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[13:49:31] <PMunch> The way the OS module prevents its own import is really annoying and dumb.. https://github.com/PMunch/ratel/issues/4
[14:02:39] <FromDiscord> <abdu> what's difference `assert` and `doassert` ?
[14:02:57] <FromDiscord> <haxscramper> `assert` does not run with `-d:release` or `-d:danger`
[14:03:10] <FromDiscord> <Rika> It does in release though?
[14:16:42] <NimEventer> New question by congusbongus: Pop first element of OrderedSet, see https://stackoverflow.com/questions/71140344/pop-first-element-of-orderedset
[14:43:38] <FromDiscord> <mratsim> In reply to @ITR "it'd be interesting to": you can compose statemachines in Synthesis, just call your inner state machines from the hig-level state machine
[14:44:28] <FromDiscord> <mratsim> In reply to @ITR "it'd be interesting to": async/await is just implemented using state machines inside.
[14:44:41] <FromDiscord> <mratsim> what kind of support do you need?
[14:48:20] *** Joins: advesperacit (~advespera@h-155-4-32-25.A182.priv.bahnhof.se)
[14:48:38] <PMunch> @Rika, it does now, but it didn't before `release` and `danger` got split into two flags
[14:49:34] <FromDiscord> <Rika> In reply to @mratsim "you can compose statemachines": Well yeah but I assumed he wanted more consistent support since from what I‚Äôm reading state charts have more than just composition
[14:49:55] <FromDiscord> <Rika> In reply to @PMunch "<@259277943275126785>, it does now,": Well that doesn‚Äôt matter nowadays does it lol
[14:53:05] <PMunch> Haha, not really
[14:53:18] <PMunch> Unless you for some reason are targeting really old versions :P
[14:58:51] <NimEventer> New question by itil memek cantik: Nim cannot do check regex object with captured group, see https://stackoverflow.com/questions/71140968/nim-cannot-do-check-regex-object-with-captured-group
[14:59:36] <FromDiscord> <mratsim> sent a code paste, see https://play.nim-lang.org/#ix=3PKw
[15:00:07] <FromDiscord> <mratsim> That's what substates boil down to if I understood correctly.
[15:00:20] <FromDiscord> <Rika> Let me think, it seems perfect yes
[15:01:22] <FromDiscord> <Rika> Yeah I don‚Äôt know it seems good
[15:04:27] <FromDiscord> <Rika> You can have machines in machines for synthesis right?
[15:04:32] <FromDiscord> <mratsim> I think you can use synthesis as a backend for a statechart lib, there shouldn't be anythng missing
[15:04:43] <FromDiscord> <mratsim> state machines are just proc in synthesis
[15:04:52] <FromDiscord> <mratsim> as long as you can have procs in procs yes
[15:04:53] <FromDiscord> <Rika> Okay
[15:05:14] <FromDiscord> <Rika> Why proc? Traditionally (and personally) it would be a type right?
[15:05:32] <FromDiscord> <BhamidipatiNikhil> sent a code paste, see https://paste.rs/Zoe
[15:05:33] <FromDiscord> <BhamidipatiNikhil>  https://media.discordapp.net/attachments/371759389889003532/943470654416642138/unknown.png
[15:05:35] <arkanoid> just heard araq fosdem presentation on parallel programming, and now I'm more unsure if I should async or thread channels
[15:05:45] <FromDiscord> <mratsim> you can't execute proc on a CPU
[15:06:00] <FromDiscord> <Rika> In reply to @mratsim "you can't execute proc": You mean type on CPU?
[15:06:28] <FromDiscord> <Rika> Well I was just thinking because traditionally you‚Äôd be pushing transitions to the machine instead of the machine doing transitions itself, dunno. Just what I usually know
[15:06:38] <FromDiscord> <Rika> In reply to @arkanoid "just heard araq fosdem": What‚Äôs your bound
[15:06:44] <FromDiscord> <Rika> Determine what you are bound by first
[15:06:47] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[15:07:47] <arkanoid> I/O bound, but async is weird when trying to don't abuse your ram
[15:08:03] <FromDiscord> <Rika> What are you programming for?
[15:08:07] <FromDiscord> <Rika> Embedded? Or what
[15:08:28] <FromDiscord> <Rika> What leads to RAM abuse?
[15:09:13] <arkanoid> It is difficult to control allocations when passing around Future[T]|FutureVal[T]
[15:09:35] <FromDiscord> <Rika> Fair I guess
[15:12:14] <FromDiscord> <BhamidipatiNikhil> In reply to @BhamidipatiNikhil "I want to create": I don't know where to begin working on this... I know i have to learn some regex and some image creating library.... I need some guidance if possible....
[15:12:33] <FromDiscord> <BhamidipatiNikhil> What should i start learning from?
[15:12:38] <arkanoid> Rika, just look how weird it gets to receive UDP data with recvFrom {.async.} when trying to don't allocate a buffer for each returned packet: https://play.nim-lang.org/#ix=3PKy
[15:12:52] <FromDiscord> <enthus1ast> @BhamidipatiNikhil\: regex is not needed imho
[15:13:57] <FromDiscord> <enthus1ast> think about your data types‚Üµbuild a text parser/lexer‚Üµrender your data
[15:14:58] <FromDiscord> <BhamidipatiNikhil> so which libraries should i learn....?
[15:15:31] <FromDiscord> <enthus1ast> for lexing none (maybe strutils, parseutils, strscans)
[15:15:48] <FromDiscord> <enthus1ast> for rendering i would give pixie a try
[15:17:07] <FromDiscord> <Rika> In reply to @arkanoid "<@259277943275126785>, just look how": I‚Äôm not sure what‚Äôs weird or how it would look less weird if it were sync
[15:17:29] <FromDiscord> <BhamidipatiNikhil> Thx enthus1ast..... I am on it.....! I will start learning those libraries!!
[15:17:54] <FromDiscord> <Rika> In reply to @enthus1ast "for lexing none (maybe": I really like parseutils lol
[15:18:06] <arkanoid> Rika: data.mget() = newString(bufferLen) is just horrible
[15:18:42] <FromDiscord> <enthus1ast> @Rika\: i mean it gets the job done and is fast
[15:19:06] <FromDiscord> <Rika> In reply to @arkanoid "<@259277943275126785>: data.mget() = newString(buff": How so? You could just replace that part by another call to reset futures too no?
[15:19:32] <FromDiscord> <gerwy> just some quick and dumb question‚Üµwould it be possible to make nim's arc usable in C?‚Üµlike just lets say arc.h and i could use all of the malloc's and stuff there?
[15:20:00] <FromDiscord> <Rika> Probably?
[15:20:11] <FromDiscord> <Rika> But why?
[15:20:43] <FromDiscord> <Rika> The point of ARC is that the compiler does that for you, otherwise you‚Äôre just better off doing the malloc free calls yourself like usual
[15:21:57] <FromDiscord> <gerwy> well im writting like a toy language that also emits code and it needs some GC‚Üµi have one mark and sweep example but if it ironically looks like nim a lot i might even just use arc for it
[15:22:08] <FromDiscord> <gerwy> buut maybe its not the best idea, right...
[15:22:50] <FromDiscord> <Rika> Well yeah ARC isn‚Äôt a ‚ÄúGC‚Äù it‚Äôs analysis + reference counting from what I know
[15:23:02] <PMunch> Yeah, it won't be possible to have arc.h
[15:23:11] <FromDiscord> <gerwy> what about orc/
[15:23:13] <FromDiscord> <gerwy> (edit) "orc/" => "orc?"
[15:23:15] <FromDiscord> <Rika> Same thing
[15:23:19] <FromDiscord> <Rika> But with a cycle collector
[15:23:22] <PMunch> It is built into the Nim compiler and essentially outputs free statements whenever things go out of scope
[15:23:23] <FromDiscord> <BhamidipatiNikhil> Wait, but i don't know which functions i will find useful.... Should i start learning the whole library? https://media.discordapp.net/attachments/371759389889003532/943475140887478302/unknown.png
[15:23:34] <arkanoid> adding wings to a car doesn't make it a plane
[15:23:36] <PMunch> So it is basically doing manual memory management, just automatically :P
[15:23:49] <FromDiscord> <Rika> That‚Äôs what I said yes haha
[15:24:07] <FromDiscord> <gerwy> hmmmm‚Üµif well if i were emitting c++ code i would just use smart pointers that would be super easy solution‚Üµbut now, i guess i will use the mark and sweep one because i don't care about stop the world thingy that much\
[15:24:08] <FromDiscord> <gerwy> (edit) "much\" => "much"
[15:24:09] <PMunch> If you need a GC for C code though you can have a look at Boehm
[15:24:10] <FromDiscord> <Rika> In reply to @BhamidipatiNikhil "Wait, but i don't": There are examples in the repository from what I recall
[15:24:51] <FromDiscord> <gerwy> üëÄ i will‚Üµi saw it in the recommended articles when reading about Mark and Sweep
[15:24:59] <FromDiscord> <gerwy> thanks!
[15:27:47] <PMunch> @BhamidipatiNikhil, you could use npeg for parsing those sentences, then Pixie for drawing stuff. Try to first draw something like that manually with Pixie, reading the examples and such, then try to parse your grammar with npeg into some kind of logical representation, then glue those two halves together.
[15:29:01] <FromDiscord> <BhamidipatiNikhil> In reply to @PMunch "<@764483963422375946>, you could use": Got it! I will surely practice Pixie first~!
[15:29:14] <FromDiscord> <haxscramper> In reply to @BhamidipatiNikhil "I want to create": https://forum.nim-lang.org/t/8499
[15:29:53] <FromDiscord> <haxscramper> I think that  is exactly what you need
[15:30:06] <FromDiscord> <haxscramper> animation, text etc.
[15:30:07] <FromDiscord> <BhamidipatiNikhil> In reply to @haxscramper "https://forum.nim-lang.org/t/8499": Wait, i know manim.... it converts code to animation.... i want to convert text to animation!
[15:30:26] <FromDiscord> <haxscramper> text is just a code in some language
[15:30:55] <FromDiscord> <haxscramper> do you have a grammar for your sentences?
[15:31:03] <FromDiscord> <haxscramper> otherwise this is a NLP territory
[15:31:24] <FromDiscord> <BhamidipatiNikhil> In reply to @haxscramper "otherwise this is a": Yes, you are right!
[15:31:50] <FromDiscord> <BhamidipatiNikhil> Its a bit NLP territory, but not completely!
[15:32:34] <FromDiscord> <haxscramper> are sentences freeform of you have some fixed set of supported inputs?
[15:33:19] <FromDiscord> <haxscramper> AS in `<sent> ::= <name> ("is" | "is a") <name>`, `<name> ::= \w+`?
[15:33:40] <FromDiscord> <BhamidipatiNikhil> Initially i want to restrict myself to minimal english... consisting of just 200 or so words
[15:34:12] <FromDiscord> <Rika> English‚Ä¶ you won‚Äôt have a good time trying to deal with that
[15:34:15] <FromDiscord> <haxscramper> amount of words does not mean anything, if you can build complex sentences not bounded by rigid grammar it is a NLP
[15:34:36] <PMunch> @Rika, implement it in Lojban! :P
[15:35:05] <FromDiscord> <haxscramper> If there is a grammar you can use npeg/re/strscans/lexbase/handrolled parser
[15:35:17] <FromDiscord> <haxscramper> If there is no schema/grammar/spec on what you expect it is a NLP stuff
[15:35:24] <FromDiscord> <abdu> Anyone used to cope object returned in find ‚ÜµHow solve:‚Üµ`Error: unhandled exception: Group '1' was not captured [IndexDefect]`‚Üµas the group really not match
[15:35:42] <FromDiscord> <haxscramper> https://github.com/penrose/penrose
[15:35:46] <FromDiscord> <haxscramper> this is a mix
[15:35:52] <FromDiscord> <haxscramper> but they have a grammar
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:27] <FromDiscord> <dom96> wowzers at these designs https://forum.nim-lang.org/t/8920
[15:38:41] <FromDiscord> <haxscramper> For `A "is" B` it can be as simple as `let split = sentence.toLowerAscii().strip({'.', '!', ' '})` and `let (A, B) = (split[0], split[^1])`
[15:39:13] <FromDiscord> <Rika> In reply to @dom96 "wowzers at these designs": It‚Äôs good but I got clickbaited because I thought it was for nimble not the directory hahaha
[15:40:20] <FromDiscord> <dom96> lol, what were you imagining as a better look for Nimble? A nicer CLI? üôÇ
[15:40:47] <FromDiscord> <haxscramper> Look-wise it is just about what you could expect for any CLI tool
[15:41:22] <FromDiscord> <haxscramper> you can do `clap!`-tier formatting for `--help` maybe
[15:42:39] <PMunch> Haha, I was also expecting more visuals for the CLI :P
[15:43:11] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[15:43:27] <FromDiscord> <haxscramper> "Invalid CLI flag, maybe you meant ..."
[15:43:47] <FromDiscord> <haxscramper> or "invalid value - expected A/B/C, but found G, maybe you meant ..."\
[15:43:51] <FromDiscord> <haxscramper> (edit) "..."\" => "...""
[15:44:08] <FromDiscord> <Rika> In reply to @dom96 "lol, what were you": I don‚Äôt know lmao
[15:44:46] <FromDiscord> <Rika> Now I‚Äôm imagining Nim with elm style errors damn it see what you did to me @ Hax
[15:47:20] <FromDiscord> <haxscramper> "PRs are welcome"
[15:48:41] <FromDiscord> <Rika> Soon! When I feel like it, or when I make myself feel like it
[15:48:50] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[15:48:53] <FromDiscord> <Rika> Usually the latter
[15:59:30] <arkanoid> Damn, I was benchmarking without --d:useMalloc and my results were just wrong
[15:59:52] <arkanoid> it seems that both recvFrom procs from asyncnet allocates memory
[16:00:16] <arkanoid> so there's no way to receive udp packets asynchronously without allocating buffer for each packet received?
[16:06:26] <Zevv> use posix.recv
[16:06:40] <Zevv> but, that's not async, so no
[16:07:15] <PMunch> I don't really get the hype around Elm style error messages
[16:10:29] <FromDiscord> <enthus1ast> imho for udp async is not that critical
[16:11:09] <FromDiscord> <enthus1ast> nearly the same code for async or not async
[16:12:18] <FromDiscord> <Rika> In reply to @PMunch "I don't really get": They just look nice that‚Äôs it hahaha
[16:14:27] <PMunch> But they're so verbose!
[16:15:12] <FromDiscord> <dom96> In reply to @arkanoid "so there's no way": you can use the FutureVar variant
[16:15:23] <FromDiscord> <dom96> https://nim-lang.org/docs/asyncnet.html#recvFrom%2CAsyncSocket%2CFutureVar%5Bstring%5D%2Cint%2CFutureVar%5Bstring%5D%2CFutureVar%5BPort%5D
[16:15:32] <PMunch> The one time I tried it a little bit I found my brain just learning the shape of an error and where to find the information that was actually needed for understanding within it
[16:15:54] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[16:18:19] <FromDiscord> <mratsim> In reply to @Rika "Well I was just": sorry was held up by baby. Basically proc composes and I needed composition.
[16:18:29] <FromDiscord> <Rika> I see
[16:18:48] <FromDiscord> <mratsim> The type are just helpers and then I codegen a proc completely type-erased
[16:20:55] <FromDiscord> <mratsim> sent a long message, see http://ix.io/3PKO
[16:21:10] <FromDiscord> <Rika> Yeah I got that now I was wondering why it was designed like that was all
[16:21:55] <FromDiscord> <mratsim> I needed zero-alloc, lowest overhead, composable. So that it could be used as a building-block for other stuff
[16:22:40] <FromDiscord> <mratsim> The type approaches usually use callbacks/inheritance so that it can be manipulated at run-time
[16:23:31] <FromDiscord> <mratsim> For my use-case I don't need dynamic state-machines, they are known at compile-time and don't "self-modify"
[16:23:56] <FromDiscord> <Rika> Type approach could also be compile time only
[16:24:38] <FromDiscord> <mratsim> do you have an example/pseudocode, maybe in another lang?
[16:24:41] <FromDiscord> <ITR> In reply to @mratsim "async/await is just implemented": I think I remembered incorrectly and it is possible. Use case is ui or games, where a transition would have to run an animation in transitions, and also not hold up the main thread while waiting for user input until a state changes.
[16:25:34] <FromDiscord> <mratsim> In reply to @ITR "I think I remembered": async/await uses closure iterators and iterators are equivalent to state machines.
[16:26:27] <FromDiscord> <Rika> In reply to @mratsim "do you have an": I‚Äôm just thinking about this wholly in my head, but I don‚Äôt see why a macro can‚Äôt generate a case statement for ‚Äúthis proc gets called on this event‚Äù inside the ‚Äúemit‚Äù proc which is called to dispatch an event to the FSM
[16:26:44] <FromDiscord> <Rika> It can prolly even inline the proc
[16:26:45] <FromDiscord> <mratsim> In reply to @ITR "I think I remembered": Use a pushdown automaton then not a FSM
[16:27:20] <FromDiscord> <Rika> Man I love automata it‚Äôs pretty fun thinking about it lmao
[16:27:27] <FromDiscord> <mratsim> you represent all inputs as a stack, and in the `while true` loop you first check if the stack of input is empty, if not, proces user input, otherwise carry on your task.
[16:27:53] <FromDiscord> <mratsim> (edit) "proces" => "process"
[16:27:58] *** Joins: arkurious (~arkurious@user/arkurious)
[16:30:57] <FromDiscord> <ITR> And the other thing I was looking for is parallel state https://media.discordapp.net/attachments/371759389889003532/943492145703190570/parallel.png
[16:31:05] <FromDiscord> <ITR> bleh, lemme put htat on a white bg real quick
[16:31:46] <FromDiscord> <mratsim> while True: wrapping 2 calls to synthesized FSMs
[16:31:59] <FromDiscord> <ITR>  https://media.discordapp.net/attachments/371759389889003532/943492402088386560/unknown.png
[16:32:04] <FromDiscord> <mratsim> the while True can itself be a FSM.
[16:32:13] <FromDiscord> <ITR> hmm
[16:32:37] <FromDiscord> <mratsim> or you use async/await, or if you're adventurous you use CPS (COntinuation Passing Style)
[16:32:43] <FromDiscord> <Rika> You can really make a library that does this which utilises synthesis within
[16:32:49] <FromDiscord> <mratsim> yes
[16:33:52] <FromDiscord> <ITR> How would the inner state machines have to be set up? If I first call one FSM, won't it hold the thread until it exits?
[16:34:39] <FromDiscord> <Rika> You call one FSM and it suspends when it doesn‚Äôt have any work, right? Or is my brain a bit too melted today
[16:35:05] <FromDiscord> <mratsim> In reply to @ITR "How would the inner": you're inner state machine doesn't need to never exit.
[16:35:16] <FromDiscord> <mratsim> (edit) "you're" => "your"
[16:35:56] <FromDiscord> <mratsim> For example this one declines steal request in a multithreading runtime: https://github.com/mratsim/weave/blob/master/weave/state_machines/decline_thief.png
[16:36:01] <FromDiscord> <mratsim> there is no loop
[16:36:17] <FromDiscord> <mratsim> and it's wrapped in a higher loop.
[16:36:49] <FromDiscord> <mratsim> it's called by https://github.com/mratsim/weave/blob/master/weave/state_machines/handle_thieves.png
[16:37:17] <FromDiscord> <mratsim> and this one is the higher loop: https://github.com/mratsim/weave/blob/master/weave/state_machines/sync.png
[16:37:39] <advesperacit> does nimble support retrieval from a ssh/git@.. location?
[16:37:54] <FromDiscord> <Rika> Okay the issue I see here is that the FSMs get from the same input right? But the outer FSM can change state and the inners should terminate no matter what by then
[16:38:05] <FromDiscord> <Rika> I can see how that would work with iterators but not synthesis
[16:38:40] <FromDiscord> <mratsim> iterators are just an implicit FSM
[16:38:50] <FromDiscord> <Rika> Yes yes
[16:38:52] <FromDiscord> <ITR> In reply to @ITR "": in terms of this, if both start in state B and "flick" happens, then the top one should have state C, and the bottom one should have state D. ‚Üµ‚ÜµThen if "1 second passes" happens, the first one should go back to B, but the second should remain in D.
[16:39:04] <FromDiscord> <ITR> I'm trying to wrap my head around it
[16:39:07] <FromDiscord> <mratsim> you can have many params to state machines.
[16:39:12] <FromDiscord> <Rika> In reply to @ITR "in terms of this,": They would be represented by two different events
[16:39:24] <FromDiscord> <ITR> I need to take my corona shot, so brb
[16:39:27] <FromDiscord> <Rika> Okay
[16:47:07] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[16:57:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[16:58:09] <FromDiscord> <ITR> In reply to @mratsim "you can have many": params = startup params, right? wouldn't that just end up losing a lot of the benefits?
[17:00:35] <FromDiscord> <ITR> In reply to @Rika "They would be represented": Could you clarify what you mean?
[17:00:38] <FromDiscord> <mratsim> they are procs, you can pas as many parameters as you want.
[17:00:48] <FromDiscord> <mratsim> (edit) "pas" => "pass"
[17:01:11] <FromDiscord> <Rika> I might be thinking too much in iterators than in synthesis
[17:01:20] <FromDiscord> <mratsim> For me the benefits are easier to debug the state flow thanks to the diagram, and make sure all cases are handled.
[17:02:19] <FromDiscord> <mratsim> I had issues when writing my multithreading runtime with deadlocks, that I solved thanks to seeing in diagrams some race conditions where requests for tasks were sent when a thread was actually asleep.
[17:05:20] <FromDiscord> <ITR> hmm
[17:12:34] <FromDiscord> <ITR> sent a long message, see http://ix.io/3PKU
[17:13:20] <FromDiscord> <mratsim> that's how you get concurrency on a single processor
[17:13:35] <FromDiscord> <mratsim> you give each FSM some time-slice to run.
[17:13:48] <FromDiscord> <mratsim> and they all make a little bit of advance before you swap to another.
[17:16:40] <FromDiscord> <ITR> right, but in terms of ui/games, it's not necessarily concurrency that's the goal. It's usually more to avoid needing 16 states to describe 2 statemachines with 4 states each, for example.
[17:16:49] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:21:48] <FromDiscord> <ITR> and though it _can_ be described as several statemachines that use different parameters, it can end up messy/bloated
[17:22:38] <FromDiscord> <ITR> hmm, unless I had an implicit transition from entry to any state, and from any state to exit, maybe?
[17:28:02] <FromDiscord> <ITR> In reply to @Rika "Okay the issue I": Oh, I missed this. From what I understand, the outer one can only transition when the inner ones are in a "final state" https://statecharts.dev/concepts.html‚Üµ‚ÜµSo without parallel states, synthesis as already supports this
[17:29:21] *** Joins: rockcavera (~rc@192.12.112.205)
[17:29:21] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[17:29:21] *** Joins: rockcavera (~rc@user/rockcavera)
[17:29:33] <FromDiscord> <ITR> Here's their page on parallel states: https://statecharts.dev/glossary/parallel-state.html
[17:29:59] <FromDiscord> <Rika> Okay then that's totally doable
[17:31:23] <FromDiscord> <ITR> And here's the xstate page on it: https://xstate.js.org/docs/guides/parallel.html#api
[17:33:12] <FromDiscord> <ITR> In reply to @Rika "Okay then that's totally": do you have a pseudo example/or can you explain your thought process?
[17:35:03] <FromDiscord> <Rika> I mean without parallel
[17:35:36] <FromDiscord> <Rika> With parallel I still have trouble seeing how this would be done since synthesis isn't iterator based
[17:35:53] <FromDiscord> <Rika> I wonder if there's an operation that can combine fsms
[17:35:57] <FromDiscord> <Rika> I believe there is...
[17:36:38] <FromDiscord> <ITR> mhm
[17:36:57] <FromDiscord> <Rika> https://stackoverflow.com/questions/11201643/how-to-merge-two-finite-state-automata#11201991
[17:37:00] <FromDiscord> <Rika> Lol
[17:37:23] <FromDiscord> <Rika> It's gonna be large unless minimised
[17:37:33] <FromDiscord> <Rika> Unless further minimised
[17:42:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:43:59] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:44:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:45:00] <FromDiscord> <ITR> In reply to @Rika "It's gonna be large": yea, state charts are meant partially to prevent that when implementing
[17:45:09] <arkanoid> Dom96: I'm using it, it allocates buffer anyway on every recvFrom
[17:46:00] <FromDiscord> <Rika> In reply to @ITR "yea, state charts are": Well I don‚Äôt know, I can only imagine the iterator/type version of FSMs working well with this
[17:46:11] <FromDiscord> <ITR> maybe I should take a go at implementing xstate
[17:46:44] <FromDiscord> <Rika> I was thinking of doing so too but cannot as I am away from my computers
[17:46:45] <arkanoid> dom96: unless you spot any error in this example https://play.nim-lang.org/#ix=3PLb 
[17:46:55] <FromDiscord> <Rika> I mean, I prolly could program on my phone but I would rather not
[17:47:20] <FromDiscord> <ITR> there are a few implementations in other languages, and I could probably check how synthesis was implemented too
[17:47:58] <FromDiscord> <ITR> tho i am also on my phone
[17:48:14] <arkanoid> running valgrind on binary compiled with --gc:orc --d:userMalloc results in constantly increasing mallocs
[17:50:03] <PMunch> -d:userMalloc?
[17:50:07] <PMunch> It should be -d:useMalloc
[17:51:48] <FromDiscord> <ITR> maybe nim should complain if you use invalid params, lol
[17:53:25] <FromDiscord> <Rika> It's not an invalid param
[17:53:33] <FromDiscord> <Rika> Define parameters are arbitrary
[17:53:52] <FromDiscord> <mratsim> Synthesis is really simple, it's about 500k lines
[17:53:53] <PMunch> Yeah but a hint would be nice if you define something which is never checked
[17:53:56] <FromDiscord> <mratsim> 500 lines
[17:54:13] <PMunch> "Really simple", "500k lines" :o
[17:54:14] <FromDiscord> <Rika> > 500k‚Üµüòì hahaha
[17:54:20] <FromDiscord> <mratsim> but yeah if it get complex, I think iterators to build an implicit state machine are easier.
[17:54:55] <FromDiscord> <Rika> I'd  question your humanity if you thought 500k lines were simple
[17:54:56] <FromDiscord> <mratsim> endgame would be continuation passing style
[17:55:51] <arkanoid> PMunch: sure, just a typo. valgrind is catching the problem so it works
[17:57:53] <FromDiscord> <mratsim> In reply to @Rika "I'd  question your": I recently saw a project to count lines of code with a Japanese-like name, something like Tokkei or whatever, it seemed to have unique features but can't find it again
[17:59:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:59:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:59:53] <FromDiscord> <mratsim> haha, it was this: https://github.com/XAMPPRocky/tokei
[17:59:57] <FromDiscord> <mratsim> with a single k
[18:00:44] <FromDiscord> <Rika> Clock
[18:00:48] <FromDiscord> <Rika> Why did they name it that
[18:01:11] <FromDiscord> <ct.clmsn> hello everyone, i'm new to the language and community - is this an appropriate forum to ask questions?
[18:01:35] <FromDiscord> <mratsim> Arraymancer: https://media.discordapp.net/attachments/371759389889003532/943514952919044186/unknown.png
[18:01:36] <FromDiscord> <enthus1ast> hi @ct.clmsn
[18:01:38] <FromDiscord> <ct.clmsn> i'm trying to find a datatype that is capable of acting as a byte buffer
[18:02:08] <FromDiscord> <mratsim> In reply to @ct.clmsn "i'm trying to find": seq[byte]
[18:02:11] <FromDiscord> <Rika> seq[byte]
[18:02:24] <FromDiscord> <mratsim> why do I have 170k lines of C++ in Weave? wtf, where? https://media.discordapp.net/attachments/371759389889003532/943515158569971712/unknown.png
[18:02:34] <FromDiscord> <ct.clmsn> so one could do something like a ostream in c++ using seq[byte]?
[18:02:45] <FromDiscord> <ct.clmsn> to write serialization routines?
[18:03:04] <FromDiscord> <mratsim> import std/streams for serialization
[18:03:10] <FromDiscord> <ct.clmsn> (edit) "in" => "an"
[18:03:15] <FromDiscord> <ct.clmsn> (edit) "an" => "in"
[18:03:18] <FromDiscord> <mratsim> or faststreams
[18:03:21] <FromDiscord> <ct.clmsn> ah ok
[18:03:43] <FromDiscord> <mratsim> seq[byte] is like std::vector<uint8_t>
[18:04:33] <FromDiscord> <ct.clmsn> yep! i was hoping to get something like an ostream over bytes to avoid flattening to strings but, it looks like faststreams is the solution i was hoping to find
[18:04:34] <FromDiscord> <ct.clmsn> thanks!
[18:06:13] <FromDiscord> <b4mbus> does nim have a build system?
[18:06:18] <FromDiscord> <b4mbus> is `nimble `one?
[18:06:20] <FromDiscord> <b4mbus> (edit) "`nimble `one?" => "`nimble` one?"
[18:06:27] <FromDiscord> <b4mbus> I think its only a package manager
[18:06:29] <FromDiscord> <ct.clmsn> @mratsim supports kernel bypass?  very nice
[18:07:01] <FromDiscord> <mratsim> In reply to @b4mbus "does nim have a": you can do nimble build and nimble install and nimble test and create your own tasks
[18:07:10] <FromDiscord> <b4mbus> cool
[18:07:13] <FromDiscord> <mratsim> You can also replace cmake if you want
[18:07:36] <FromDiscord> <b4mbus> and how do I manage external dependencies? on Nimbles page theres nothing about it, theres only how to create a package
[18:07:36] <FromDiscord> <mratsim> Replacing cmake with Nim: https://github.com/numforge/agent-smith/blob/master/third_party/ale_build.nim#L40-L83
[18:07:48] <FromDiscord> <Rika> There was this dude a while back shilling some make alternative called xmake
[18:08:01] <FromDiscord> <ITR> nimmake
[18:08:21] <FromDiscord> <b4mbus> In reply to @Rika "There was this dude": there are so many alternatives to cmake :kek
[18:08:22] <FromDiscord> <mratsim> In reply to @b4mbus "and how do I": "requires foo >= 1.0.0"
[18:08:47] <FromDiscord> <b4mbus> yeah but whats the name of the file I put it in??
[18:08:47] <PMunch> Or do you mean external dependencies like a non-Nim dependency?
[18:08:48] <arkanoid> PMunch: do you remember that flag to dump the async result?
[18:09:03] <FromDiscord> <mratsim> In reply to @PMunch "Or do you mean": mypackage.nimble
[18:09:05] <FromDiscord> <b4mbus> In reply to @PMunch "Or do you mean": nim dependencies, dimscord for example
[18:09:10] <FromDiscord> <b4mbus> https://github.com/nim-lang/nimble
[18:09:14] <arkanoid> nim --fullhelp | grep -i async doesn't return anything
[18:09:23] <FromDiscord> <b4mbus> maybe Im blind but I see no docs on how to manage dependencies for my own project
[18:09:27] <FromDiscord> <b4mbus> only how to create packages
[18:09:43] <FromDiscord> <mratsim> In reply to @b4mbus "maybe Im blind but": your own project is a local package
[18:09:51] <PMunch> https://github.com/nim-lang/nimble#dependencies
[18:10:04] <PMunch> Yeah, when you create a Nimble project it is a package
[18:10:26] <PMunch> arkanoid, uhm maybe --expandMacro:async will work?
[18:11:23] <FromDiscord> <b4mbus> In reply to @PMunch "Yeah, when you create": oh?
[18:11:35] <FromDiscord> <b4mbus> okay well that makes sense
[18:11:37] <arkanoid> no, I remember there was n explicit thing. If I remember correctly, you told me about that :P
[18:11:42] <FromDiscord> <b4mbus> thanks
[18:11:57] <PMunch> @arkanoid, ah it's `-d:nimDumpAsync`
[18:12:17] <PMunch> Found it through peeking at the source: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/asyncmacro.nim#L262-L263
[18:12:23] <FromDiscord> <mratsim> Would be nice to have a way to dump all the flags that exist.
[18:12:27] <arkanoid> oh
[18:12:33] <FromDiscord> <mratsim> they are all freefloating
[18:12:45] <PMunch> @mratsim, the defines that exists are a bit hard to define
[18:12:49] <FromDiscord> <enthus1ast> @b4mbus\: you can install packages by their name (only if thei're in the long json there\: https://github.com/nim-lang/packages    or you can install them by their git url
[18:13:07] <PMunch> Does the world flag exist here `when defined(hello): when defined(world):`?
[18:14:18] <FromDiscord> <ct.clmsn> thanks everyone for your time and assistance
[18:14:23] <PMunch> But I agree, defined should be able to track everything that is checked against, and --define should track everything which is defined. Then it should be a useful little hint when something is in --defined but not in the set of checked options, and you would be able to list out all the things which can be defined.
[18:15:12] <PMunch> That long JSON can also be searched here: https://nimble.directory/
[18:15:30] <PMunch> @ct.clmsn, thank you for your appreciation :)
[18:16:57] <arkanoid> the `while true:` here is constantly calling malloc, but I don't see where and how: https://play.nim-lang.org/#ix=3PLb
[18:17:29] <PMunch> What is that tool @mratsim, maybe it's looking at your Git tree files?
[18:18:25] <PMunch> arkanoid, probably either the clean or the setLen
[18:18:54] <PMunch> Maybe even the mget I guess
[18:19:22] <arkanoid> this is `clean`: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/asyncfutures.nim#L135
[18:19:40] <arkanoid> `mget`: https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/asyncfutures.nim#L135
[18:19:54] <PMunch> Yeah I just had a look at those, probable not triggering a malloc
[18:20:18] <PMunch> Oh wait, I guess it's actually the await/async part
[18:20:27] <arkanoid> and setLen is setting a len <= the newString(initialSize)
[18:20:48] <PMunch> socket.recvFrom essentially calls a procedure which returns a closure iterator, and closure iterators are heap allocated
[18:20:55] <PMunch> So that would cause a malloc
[18:21:23] <FromDiscord> <cs> Hey, I am pretty new to Nim and I am wondering: what the recommended gui library? I am looking for something that can be customized (so, non-native)
[18:21:26] <FromDiscord> <dom96> futures are also heap allocated
[18:21:37] <PMunch> @cs, it really depends on what you need
[18:21:42] <arkanoid> what's the point of defining an alternative recvFrom "to save memory" and then make it consuming it? Weird
[18:21:44] <PMunch> Nim has bindings to a lot of things
[18:22:01] <FromDiscord> <dom96> In reply to @arkanoid "what's the point of": 3 allocs vs. 2 is still an improvement üôÇ
[18:22:12] <PMunch> Exactly
[18:22:38] <PMunch> If you where receiving large chunks of a file then rewriting the same buffer over and over is better than allocating and freeing the same buffer every time
[18:23:28] <FromDiscord> <dom96> if you have some use case that does a lot of small reads then you might want to handle the IO readiness yourself
[18:23:42] <FromDiscord> <cs> In reply to @PMunch "@cs, it really depends": At the moment I would like to create a little vector graphics editor (probably using pixie)
[18:23:50] <arkanoid> ok, but I was not expecting a code like this to alloc on every await. My code is optimized to not consume memory, it does just by calling await in a loop
[18:24:14] <PMunch> I guess ImGUI might be a good fit then
[18:25:19] <PMunch> Or Fidget, from the same person who wrote Pixie
[18:25:58] <PMunch> @cs ^
[18:28:49] <FromDiscord> <mratsim> In reply to @PMunch "What is that tool": https://github.com/XAMPPRocky/tokei
[18:29:33] <FromDiscord> <cs> Okay, thanks for the suggestions. Those are both immediate mode. Is there one retained mode (like Qt, etc)? I have used ImGUI before (in another language) so I am familiar with that, but not sure I want to do that for this.
[18:29:48] <FromDiscord> <mratsim> In reply to @cs "Okay, thanks for the": You can use QML or gintro
[18:33:23] <PMunch> There aren't a lot of retained mode UI libraries which aren't system libraries I think
[18:33:25] <arkanoid> warning: NimQML leaks with arc/orc, stick with refc
[18:34:09] <FromDiscord> <cs> In reply to @arkanoid "warning: NimQML leaks with": Ok, good to know
[18:34:34] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:36:21] <FromDiscord> <cs> Also, if you don't mind. Could someone give a quick rundown on how to compile multiple files? I get the ``nim c -r myfile.nim`` for a single file, but why does ``nimble build`` only work sometimes?
[18:37:30] <FromDiscord> <cs> example:
[18:37:34] <FromDiscord> <cs>  https://media.discordapp.net/attachments/371759389889003532/943524011722293258/unknown.png
[18:38:45] *** Quits: advesperacit (~advespera@h-155-4-32-25.A182.priv.bahnhof.se) ()
[18:39:52] <FromDiscord> <cs> Oh, wait. I see
[18:52:13] <FromDiscord> <BhamidipatiNikhil> Does anyone have any idea how to do web scraping using nim?
[19:08:15] <FromDiscord> <jmgomez> Can be nim compiled and into cpp and then include the cpp files into another cpp project? Or it will be better to create a dll?
[19:08:24] <FromDiscord> <jmgomez> (edit) "and" => ""
[19:15:51] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[19:20:41] <FromDiscord> <Rika> You could but I don‚Äôt know if it would be any good
[19:21:20] *** Joins: {cms} (~user@zgw.beatworm.co.uk)
[19:26:36] <FromDiscord> <mratsim> In reply to @jmgomez "Can be nim compiled": just create a DLL, otherwise you will have to hunt for nimbase.h
[19:26:59] <FromDiscord> <mratsim> or create a static library .lib/.a
[19:31:45] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[19:32:07] <FromDiscord> <jmgomez> In reply to @mratsim "just create a DLL,": ok, I wanted to take advantage that the import sources already compiles it based on OS and arch. Thanks!
[19:50:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[20:09:05] <FromDiscord> <VVX7> important question: what are Nim programmers called?
[20:09:56] <FromDiscord> <Zajt> I am automating some Nim stuff in Python which writes text to a file, but nim compiler says ‚Üµ`Error: identifier expected, but found 'passC: "-masm=intel"'` even though that line is on a new-line but with a tab in, like in the picture. Is there any way I can make it come to the left or is this not a Nim question? https://media.discordapp.net/attachments/371759389889003532/943547256055951400/unknown.png
[20:11:23] <FromDiscord> <enthus1ast> ...automating some Nim stuff in Python... crazy
[20:12:03] <FromDiscord> <enthus1ast> why don't you use nim to automate nim? \:)
[20:13:04] <FromDiscord> <huantian> In reply to @VVX7 "important question: what are": Nimers?
[20:14:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[20:24:26] <NimEventer> New Nimble package! otplib - Easy to use OTP library for Nim, see https://github.com/dimspith/otplib
[20:29:15] <FromDiscord> <VVX7> In reply to @huantian "Nimers?": Nimby?
[20:34:31] <FromDiscord> <huantian> What about Nimologers
[20:38:09] <FromDiscord> <Valdar> I like Nimions
[20:40:32] <FromDiscord> <VVX7> oh, Nimion.  I think I've heard that one, actually.  I like it.
[20:43:07] <FromDiscord> <dom96> We should really settle on one and make it official
[20:43:17] <FromDiscord> <dom96> anyone wanna set up a poll? üôÇ
[20:46:08] <FromDiscord> <Rika> In reply to @Zajt "I am automating some": Is it a tab or spaces
[20:46:28] <FromDiscord> <Rika> Tabs should be rejected, if it's spaces then it should work...
[20:48:40] *** Joins: PMunch (~PMunch@user/pmunch)
[21:32:02] *** Joins: vicfred (~vicfred@user/vicfred)
[21:34:45] *** Joins: vicfred_ (~vicfred@user/vicfred)
[21:37:35] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 256 seconds)
[21:39:05] *** Quits: vicfred_ (~vicfred@user/vicfred) (Client Quit)
[22:33:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[22:34:54] <FromDiscord> <TurtleP> this is a dumb question, because I'm sure the answer is going to be "the file is safe, add an exclusion", but my anti-virus keeps having issues when I try updating nim: https://media.discordapp.net/attachments/371759389889003532/943583737126453289/unknown.png
[22:35:31] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[22:35:43] <FromDiscord> <haxscramper> This is a known issues, and yes, the answer is just as you guessed
[22:36:39] <FromDiscord> <haxscramper> It would also help if you report it as a false positive, because it is sadly not uncommon (although I've seen less of it recently) for AV to have a false triggers on
[22:37:06] <FromDiscord> <haxscramper> nimble/nimsuggest/choosenim and even the code people just compiled
[22:37:24] <FromDiscord> <Goel> @TurtleP https://github.com/nim-lang/Nim/issues/17820
[22:37:58] *** Quits: PMunch (~PMunch@user/pmunch) (Ping timeout: 272 seconds)
[22:38:35] <FromDiscord> <TurtleP> haha
[22:38:39] <FromDiscord> <Goel> > even the code people just compiled‚ÜµYeah, never trust your own code üòÑ
[22:38:57] <FromDiscord> <TurtleP> I once built a python exe and it would yell at me, purely because of the app name
[22:39:18] <FromDiscord> <demotomohiro> https://internet-of-tomohiro.netlify.app/nim/faq.en.html#nim-compiler-is-nimslashnimble-virus-or-malwareqmark
[22:42:03] <FromDiscord> <haxscramper> In reply to @demotomohiro "https://internet-of-tomohiro.netlify.app/nim/faq.en": 1. Why my list of languages/vms is in here? The https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6 one ‚Üµ2. I think you can also write a tl;dr version and mention this stupid year-old article https://thehackernews.com/2021/03/researchers-spotted-malware-written-in.html (or any similar)
[22:55:12] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> after `channel.close()`, new `channel.send()` will err, but new `channel.recv()` will not; IMO that's strange‚Üµand those blocking `channel.recv()`s that exist before `channel.close()` stay blocking; i think this behavior leads to blocking forever problem easily
[22:58:19] <FromDiscord> <demotomohiro> In reply to @haxscramper "1. Why my list": 1. I'm sorry, it is mistake. I will fix it soon.‚Üµ2. Thx! I will add some text to the answer.
[23:19:38] <FromDiscord> <jmgomez> So I got this working and I was wondering if there is a tool/compiler argument that could output the extern "C" part in the cpp side of things? https://media.discordapp.net/attachments/371759389889003532/943594995036868608/unknown.png
[23:21:52] <FromDiscord> <ynfle> Any good async tutorials for nim? Like not the concept of async per se but how nim does it
[23:21:54] <FromDiscord> <ynfle> (edit) "it" => "it?"
[23:22:57] <FromDiscord> <haxscramper> In reply to @jmgomez "So I got this": `extern "C"` can be used in prefixed form IIRC - `extern "C" int multiply ...` and you can use `{.codgendecl.` pragma to manipulate the codegen for a procedure
[23:23:30] <FromDiscord> <haxscramper> `{.codegenDecl: "extern \"C" $# $#$#".}`
[23:23:34] <FromDiscord> <haxscramper> (edit) "\"C"" => "\"C\""
[23:24:03] <FromDiscord> <haxscramper> And you can put this in `{.pragma exc, codegenDecl: "extern \"C\" $# $#$#".}` to save on typing, and annotate procs simply with `{.exc.}`
[23:24:10] <FromDiscord> <haxscramper> (edit) "$#$#".}`" => "$#$#", exportc.}`"
[23:24:15] <FromDiscord> <haxscramper> I think that should work
[23:28:07] <FromDiscord> <jmgomez> @haxscramper that sounds great! will give it a shot. Thanks
[23:43:33] <FromDiscord> <ynfle> In reply to @ynfle "Any good async tutorials": Never mind
[23:58:12] <FromDiscord> <jmgomez> sent a code paste, see https://play.nim-lang.org/#ix=3PN9
[23:58:41] <FromDiscord> <jmgomez> nim suggest: https://media.discordapp.net/attachments/371759389889003532/943604822769303562/unknown.png
[23:59:42] <FromDiscord> <jmgomez> ohh it needs :
