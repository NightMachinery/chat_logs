[00:00:17] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:00:21] <LordKalma> I saw on reddit that someone made a frontend for gdb that even plots vectors
[00:00:44] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:01:04] <Friithian> interesting
[00:01:16] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:20] <Alipha> Friithian: the quote database is pretty small, so i'm adding everything that is at least mildly entertaining
[00:01:49] <Friithian> well, glad I could help
[00:02:33] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:02:39] <Alipha> Friithian: you'll forever be known now as the person who doesn't use a debugger ;-)
[00:03:07] <Friithian> I don't, so, it is accurate
[00:03:27] <rpav> is that imgui
[00:03:39] <m_ben> at least use printf() ;-)
[00:03:43] <Friithian> ew
[00:03:55] <Friithian> what's the program that checks for mem leaks? I used that once, for glass
[00:03:57] <Friithian> class*
[00:03:58] <Friithian> vagrant?
[00:03:58] <rpav> printf is terrible
[00:04:03] <Friithian> no that's a build system, shit what was it
[00:04:13] <rpav> Friithian: valgrind, or asan/lsan
[00:04:14] <m_ben> valgrind
[00:04:18] <Friithian> valgrind, that's it!
[00:04:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:05:05] <rpav> worse than imgui, what appears to be a ~6kloc single-header-only ui library thing
[00:05:14] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:05:17] <rpav> like a worse imgui-style gui
[00:05:55] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:06:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:07:19] <Raziel> wait, are we comparing imgui and... printf?
[00:07:48] <Friithian> given we are using c++ printf isn't even considered
[00:07:58] <Friithian> at least for me
[00:08:24] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:08:41] <Raziel> fmt::print :^)
[00:09:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:10:45] <Friithian> std::format
[00:10:57] <Raziel> same thing really, ain't it
[00:11:16] <Friithian> one is part of the std, one isn't
[00:11:28] <Friithian> one you can actually compile with a sane compiler, one you cannot (yet)
[00:11:47] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:12:25] <rpav> i use a `say(V(foo), V(bar), ...)` whihc prints "foo = ... bar = ..."
[00:12:44] <rpav> like "std::vector<int>{1, 2, 3, ...}"
[00:12:49] <Friithian> I just do whatever cout/cerr I want
[00:13:12] <rpav> also i have some blockwise indentation and stuff now
[00:13:25] <rpav> debugger not really handy in cases where you're dealing with tons of data
[00:13:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:14:14] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:15:15] <johnny> fmtlib i good
[00:15:16] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:16:10] <rpav> it's ok at best
[00:16:27] *** Joins: zy (~cc@user/zy)
[00:16:39] <rpav> writing custom formatters is a huge pain in the ass and way more boilerplate than it ought to be
[00:17:11] <rpav> and they rely on things like parsing text in {} instead of altering format through composition
[00:17:23] <Friithian> that's what std::format is for! other than no real compiler supports it fully yet
[00:17:38] <johnny> "way more boilerplate than it ought to be" this seems to be the C++ way tho!
[00:17:56] <rpav> johnny: yeah but it's entirely unnecessary
[00:18:09] <johnny> that's what i can say about most of the "way more boilerplate than it ought to be"
[00:18:58] <johnny> hmm.. i wonder how rust's format string stuff is, especially for embedded cases..
[00:19:09] <johnny> makes me think i might rather compile it as a static library and use that..
[00:19:15] <rpav> like why the hell would you write code to parse `print("{#0b}", i);` for binary when you could have like `radix<2>(i)`
[00:19:36] <rpav> or whatever it is, i can never remember their stupid formatting codes either
[00:19:42] <johnny> parse the print() ?
[00:19:48] <johnny> i mean parse the word print?
[00:19:59] <rpav> no i mean it's illustrating the whole call
[00:20:09] <rpav> vs like `print(radix<2>(i))`
[00:20:14] <johnny> no thank you :)
[00:20:17] <johnny> i like the way it is right now
[00:20:50] <rpav> ¯\_(ツ)_/¯ nothing accounting for poor taste
[00:20:53] <Shell> johnny: rust's format string stuff is not very useful for embedded stuff.
[00:21:13] <rpav> parsing {#0b} is just like .. ew
[00:21:17] <Shell> there's a handful of options with different tradeoffs there.
[00:21:22] <johnny> i imagine
[00:21:46] <johnny> right now i'm just using a minimal-printf implementation, although i might switch to picolibc's
[00:21:55] <johnny> i do hate printf though
[00:21:59] <rpav> using types to wrap values doesn't require _any_ parsing beyond the C++ we already have, and can trivially be specialized on the type, and is indefinitely extensible
[00:23:15] <johnny> it sounds like it owuldn't be hard to write that on top of the fmtlib primtives
[00:23:20] <rpav> also can more or less be optimized away
[00:23:31] <rpav> yeah, or you could just just dispense with fmtlib entirely
[00:24:12] <johnny> i find value in the entire api though beyond the format strings
[00:24:14] <rpav> it really _wouldn't_ be that easy to write on top though, becuase fmtlib custom formatters require a class specialization with a bunch of boilerplate and you can't inject into a trivial case to make it easier
[00:24:47] <rpav> eh
[00:24:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:24:58] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:25:08] <rpav> you don't need fmtlib for like join(), and what else of value is there
[00:25:14] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:25:19] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[00:25:19] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[00:25:19] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:25:43] <johnny> pinting to any filedescriptor without thinking about streams
[00:26:35] <rpav> i definitely don't argue that iostreams ought to be replaced
[00:27:03] <rpav> or rather, i do? i mean, it ought to be replaced by a nice static transforming pipeline
[00:27:58] <rpav> auto out = stream<char,FD>(fd); print(out, ...); or something
[00:28:31] <johnny> sure that might be great and all.. i just find it incredibly unpleasant that it assumes input is text due taking locale into consieration at the base layer
[00:28:54] <johnny> that by itself i can't get past
[00:30:10] <rpav> auto out = stream<char, latin1_in, utf8_out, stdout>();
[00:30:58] <CarloWood> OMG
[00:31:01] <CarloWood> I found it
[00:31:09] <CarloWood> *bang head agaist wall*
[00:31:13] <CarloWood> bangs*
[00:31:37] <johnny> rpav, isn't that what the text library by thephd does?
[00:31:45] <johnny> maybe i'm misremembering
[00:32:38] <CarloWood> I generate new positions by copying the old position to a new State (board) and then make changes... that caused m_reachable_from to be accumulated because it was constantly being copied :/.
[00:33:09] <rpav> johnny: not familiar with
[00:34:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:34:53] <rpav> like the idea should be you have a compile-time, even constexpr character transformation "stream" and probably you don't even need anything virtual
[00:35:11] <johnny> std::u16string utf16_output = ztd::text::transcode(utf8_input, ztd::text::utf16{});
[00:36:00] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:36:29] <rpav> yeah but you should be able to arbitrarily string transformations
[00:36:39] <johnny> i think you missed a word there
[00:37:09] <rpav> you ought to be able to have an arbitrary static set of transformation listed
[00:37:25] <johnny> isn't that expected?
[00:37:30] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:37:55] <johnny> maybe you mean something different than i'm thinking you mean
[00:38:28] <johnny> because what i pasted looks like that to me
[00:38:28] <rpav> i'm trying to find the actual effing repository
[00:38:41] *** Quits: proller (~p@2a02:6b8:b081:b70d::1:e) (Ping timeout: 252 seconds)
[00:39:03] <rpav> it looks like one transform to me and it doesn't necessarily look like a stream-like interface
[00:42:36] <johnny> depends on how "stream" like you want it. is a range good enough?
[00:43:22] <rpav> a range is not a stream, and no
[00:43:26] <rpav> a range is not good enough for much
[00:44:40] <rpav> like what's good about a stream is you expect it to more or less transform things on demand and assume not much about the input/output mechanisms; you could tie it to a buffer or not, but ultimately you can have a DAG and do interesting things if it's nice enough
[00:44:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:45:16] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:45:59] <rpav> e.g. convert to utf-8, normalize, then split into utf-16/output and utf-8/output
[00:45:59] <johnny> well a range isn't a a literal stream, but you do slide through the input .that's all i was tryint to figure out
[00:47:17] <johnny> but here is the post about it https://thephd.dev/any-encoding-ever-ztd-text-unicode-cpp and here's the api docs https://ztdtext.readthedocs.io/en/latest/api.html
[00:47:44] <johnny> i played around with it to convert back and forth betwen shift-jis and utf8
[00:49:39] <rpav> well it probably does the _job_, but we _could_ have a nicer, composable API which can integrate similar functionality
[00:50:09] <rpav> glancing at the docs that definitely does not count as "nice api"
[00:50:44] <johnny> where does C++ have a nice api in anything :) hah
[00:51:00] <rpav> bah, it _can_ ;/
[00:51:18] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[00:51:23] <rpav> i mean there are definite limits, but we don't begin to approach them for most stuff
[00:51:36] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:51:45] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[00:53:58] <ville> johnny: turns out, lot of things aren't "nice", for some definition of "nice", from human perspective if you go for performance
[00:54:13] <johnny> sure, but i think that's what rpav was just referring to
[00:54:39] <johnny> the "definite limits"
[00:56:35] <ville> at least for me this happens a lot when it's something i've not at some point implemented my self, thus it's very easy to underestimate the details/difficulties of the domain.
[00:56:59] <johnny> that's what i think whenever it comes anything related to unicode!
[00:57:21] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:57:35] <johnny> text handling in general is not simple
[00:57:41] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[00:57:41] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[00:57:41] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:57:48] <johnny> i mean text beyond ascii not simple
[00:59:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 256 seconds)
[00:59:23] <johnny> i was looking for somethig that woudl do the conversion i wanted, but it was hard because  windows doesn't have the C++ api of icu, windows doesnt ship iconv, iconv isn't licensed reasonably for static linking, and both are a lot for one simple transformation
[00:59:35] <johnny> s/simple//
[01:00:45] <johnny> and of course icu is a lot if i wanted to try to compile for one of thevarious wasm posix implementations.. although they do at least offer iconv
[01:02:43] *** Joins: seninha (~seninha@user/seninha)
[01:04:03] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[01:05:48] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[01:08:33] *** PJBoy is now known as Guest3051
[01:08:33] *** Quits: Guest3051 (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[01:08:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:09:02] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[01:11:12] *** Joins: markong (~kvirc@213.146.188.203)
[01:20:10] *** Quits: robod34 (~Username@79.113.213.133) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:20:43] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[01:21:03] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[01:21:03] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[01:21:03] *** Joins: RoKenn (~RoKenn@user/rokenn)
[01:21:12] <ville> if you just want conversions that shouldn't be too difficult?
[01:22:01] <ville> i mean utf8 <=> utf16 and such conversions, not case conversions
[01:22:31] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:32:04] <johnny> how so?
[01:32:14] <johnny> it's not a current project of mine though
[01:32:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[01:32:50] <johnny> if you want to convert between shift-jis and utf-8 bidirectionally then you need to store a mapping table
[01:33:02] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:33:15] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[01:33:21] <johnny> me personally, i'd prefer to use an existing battle tested api rather than having more code to maintain
[01:34:12] <johnny> i think the iconv implementation is pretty simple internally
[01:34:40] <johnny> doesn't mean i wanna copy the table into my program tho
[01:34:48] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[01:35:16] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[01:38:44] *** Joins: proller (~p@80.240.216.69)
[01:40:54] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[01:43:55] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[01:44:49] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[01:45:44] *** Quits: proller (~p@80.240.216.69) (Remote host closed the connection)
[01:47:37] *** Joins: proller (~p@80.240.216.69)
[01:48:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:79f4:f87:5445:4cc6)
[01:51:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:52:25] *** Quits: paul424 (~tom@ip-5-172-239-15.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:52:38] *** Quits: jackblasted (~quassel@173.239.197.19) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:57:04] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[01:59:57] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:02:32] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:79f4:f87:5445:4cc6) (Quit: Quit)
[02:06:40] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd)
[02:09:23] *** Joins: proller (~p@2a02:6b8:b081:32::1:2d)
[02:17:24] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:20:19] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[02:21:07] *** Quits: proller (~p@2a02:6b8:b081:32::1:2d) (Remote host closed the connection)
[02:21:15] <rpav> i'd rant here about textual syntax causing not-niceness but we're not even really at that barrier .. "typologically" we could have a lot nicer APIs just to start with for a lot of these things
[02:22:04] *** Joins: proller (~p@80.240.216.69)
[02:23:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:25:30] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:27:45] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[02:30:28] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[02:32:13] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 246 seconds)
[02:32:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[02:34:36] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:40:19] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:44:15] *** Joins: proller (~p@2a02:6b8:b081:b505::1:31)
[02:44:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:44:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:44:42] *** ChanServ sets mode: +v npaperbot
[02:46:28] *** Quits: calcul0n (~calcul0n@2a01:e0a:150:6030:7d85:9901:c4f9:1225) (Ping timeout: 260 seconds)
[02:52:54] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 252 seconds)
[02:55:34] *** Joins: badone (~badone@209.132.189.152)
[02:58:07] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[02:58:31] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[02:59:28] *** Joins: johnny_ (~johnny@user/johnny)
[03:01:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[03:01:47] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 260 seconds)
[03:05:08] *** Joins: slavfox (~slavfox@93.158.232.111)
[03:22:39] *** Quits: proller (~p@2a02:6b8:b081:b505::1:31) (Ping timeout: 256 seconds)
[03:24:13] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd)
[03:25:08] *** Joins: Juliu__ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd)
[03:26:18] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[03:26:46] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[03:27:32] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd) (Ping timeout: 252 seconds)
[03:28:53] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd) (Ping timeout: 256 seconds)
[03:31:28] *** Quits: magla (~gelignite@d53668d6.access.ecotel.net) (Quit: Stay safe!)
[03:31:49] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:35:18] *** Joins: proller (~p@80.240.216.69)
[03:37:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:44:26] *** Joins: faya_ (~faya@90-228-194-182-no542.tbcn.telia.com)
[03:47:03] *** Quits: vaasu (~faya@90-228-194-182-no542.tbcn.telia.com) (Ping timeout: 260 seconds)
[03:47:45] *** Parts: Xardas (~Xardas@149.233.51.127) ()
[03:50:43] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Quit: Leaving)
[03:50:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:53:35] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[03:54:59] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[03:55:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00) (Ping timeout: 260 seconds)
[03:56:08] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[03:59:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00)
[04:03:02] <antto> !fact
[04:03:03] <nolyc> antto: The scope of a label is the function in which it appears.
[04:04:12] <antto> or is the function of a scope to have a label which appears in it..
[04:07:37] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:08:27] *** Joins: proller (~p@2a02:6b8:b081:14::1:4)
[04:22:21] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:24:37] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925)
[04:24:37] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925) (Changing host)
[04:24:37] *** Joins: skapata (~Skapata@user/skapata)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:34:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:36:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:38:01] *** Quits: Juliu__ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd) (Ping timeout: 256 seconds)
[04:40:28] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[04:43:44] *** Quits: LordKalma (~LordKalma@server.portaldoradioamador.pt) (Quit: Ping timeout (120 seconds))
[04:43:59] *** Joins: LordKalma (~LordKalma@server.portaldoradioamador.pt)
[04:44:43] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[04:45:00] *** Joins: cpuid (~cpuid@co5.at)
[04:45:00] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[04:45:00] *** Joins: cpuid (~cpuid@user/cpuid)
[04:46:57] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[04:47:14] *** Joins: kevr (~kevr@user/kevr)
[04:49:36] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[04:49:39] *** Joins: teepee (~teepee@openscad/teepee)
[04:50:09] *** Quits: tobs (~tobs@taboege.de) (Quit: o/)
[04:51:38] *** Joins: tobs` (~tobs@taboege.de)
[04:51:38] *** tobs` is now known as tobs
[04:55:25] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[05:00:34] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[05:11:18] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[05:11:51] *** Quits: nebula_moe (sid259061@id-259061.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[05:11:54] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:15:02] *** Joins: nebula_moe (sid259061@id-259061.uxbridge.irccloud.com)
[05:17:57] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:18:41] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 245 seconds)
[05:39:29] *** Joins: hfsoulz_ (~hfsoulz@user/hfsoulz)
[05:39:43] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 240 seconds)
[05:40:00] *** Quits: smeso (~smeso@user/smeso) (Ping timeout: 272 seconds)
[05:41:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:42:19] *** Quits: emerent (~quassel@p200300cd5743c33bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:43:01] *** Joins: smeso (~smeso@user/smeso)
[05:44:34] *** Joins: emerent (~quassel@p200300cd5743c3a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:44:36] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:47:18] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00) (Ping timeout: 260 seconds)
[05:48:27] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 260 seconds)
[05:52:44] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:58:42] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[05:58:57] *** johnny_ is now known as johnny
[06:02:30] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[06:03:12] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[06:16:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:18:53] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[06:21:27] *** Joins: jose_ (~goose@111.199.80.15)
[06:21:31] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:23:11] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:24:05] *** Quits: gooooose (~goose@111.199.80.15) (Ping timeout: 252 seconds)
[06:25:31] *** Joins: Inline__ (~Inline@p200300cd470f690069ffd8a9e8710708.dip0.t-ipconnect.de)
[06:28:03] *** Quits: Inline (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:29:56] *** malloy is now known as suki
[06:38:03] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[06:44:35] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:44:43] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:44:43] *** ChanServ sets mode: +v npaperbot
[06:51:57] *** Joins: gooooose (~goose@111.199.80.15)
[06:52:59] *** Quits: jose_ (~goose@111.199.80.15) (Read error: Connection reset by peer)
[06:57:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:07:34] *** Joins: Juliu__ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd)
[07:08:29] *** Joins: adeliktas9 (~adeliktas@i59F527CA.versanet.de)
[07:10:31] *** Quits: adeliktas (~adeliktas@i59F4DE4D.versanet.de) (Ping timeout: 260 seconds)
[07:10:31] *** adeliktas9 is now known as adeliktas
[07:11:38] *** Joins: pulse (~pulse@user/pulse)
[07:18:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:21:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:24:13] *** Joins: DrMax_ (~DrMax@207.96.159.130)
[07:32:31] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[07:32:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:50:50] *** Joins: gnomesort_ (~gnomesort@user/gnomesort)
[07:51:29] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 256 seconds)
[07:53:15] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[07:53:39] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[08:01:05] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54)
[08:03:49] *** Quits: Cyp (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[08:04:05] *** Joins: Cyp (~cyp@213.237.84.236)
[08:05:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa) (Ping timeout: 250 seconds)
[08:05:26] *** Joins: smeso (~smeso@user/smeso)
[08:13:01] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[08:13:36] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[08:20:57] *** Joins: jose_ (~goose@111.199.80.15)
[08:21:34] *** Quits: gooooose (~goose@111.199.80.15) (Read error: Connection reset by peer)
[08:28:59] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:39:11] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[08:39:37] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[08:51:28] *** Joins: gooooose (~goose@111.199.80.15)
[08:51:50] <paule32> hello
[08:52:05] *** Quits: jose_ (~goose@111.199.80.15) (Read error: Connection reset by peer)
[08:52:35] <paule32> is it possible to have a static "int" for a instance of a class, that is increment each call of ctor ?
[08:55:19] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[08:57:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:58:11] <Raziel> sure
[08:59:07] <Raziel> you just make a static int and increment it in your constructors
[08:59:08] <Raziel> v:
[09:03:00] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd)
[09:06:03] *** Quits: Juliu__ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd) (Ping timeout: 256 seconds)
[09:07:52] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:a456:8e8c:a778:29bd) (Client Quit)
[09:12:36] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[09:13:20] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[09:13:20] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[09:13:20] *** Joins: AssKoala (~asskoala@user/asskoala)
[09:19:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f0cf:f5b0:60ea:907f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:20:56] *** Joins: jose_ (~goose@111.199.80.15)
[09:24:12] *** Quits: gooooose (~goose@111.199.80.15) (Ping timeout: 272 seconds)
[09:27:52] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[09:29:01] *** Joins: Praise (~Fat@user/praise)
[09:32:02] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[09:32:15] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[09:32:15] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[09:32:15] *** Joins: AssKoala (~asskoala@user/asskoala)
[09:33:38] *** Quits: jose_ (~goose@111.199.80.15) (Ping timeout: 260 seconds)
[09:44:29] *** Joins: halberd (~halberd@user/causative)
[09:45:23] *** Quits: causative_ (~halberd@user/causative) (Ping timeout: 256 seconds)
[10:04:05] *** Joins: nshire (~nshire@user/nshire)
[10:06:48] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:11:05] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88)
[10:14:42] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[10:15:05] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[10:30:48] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[10:32:45] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[10:32:53] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:7d85:9901:c4f9:1225)
[10:34:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[10:44:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:44:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:44:45] *** ChanServ sets mode: +v npaperbot
[10:44:47] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:44:57] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:46:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00)
[10:53:24] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[10:54:25] *** Quits: letto (~letto@188.27.114.171) (Quit: Konversation terminated!)
[10:54:36] *** Joins: unyu (~pyon@user/pyon)
[10:55:10] *** Quits: DrMax_ (~DrMax@207.96.159.130) (Quit: Leaving)
[10:56:58] *** Joins: letto (~letto@188.27.114.171)
[11:02:51] *** Joins: plastico (~plastico@neomutt/plastico)
[11:06:01] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[11:09:44] <Kill-Animals> Hey I have moved some of hy headers/sources into different folders. I avoided doing this before because that meant I had to go like this: `#include "../QFileToolkit/qsignature.h"` -- This is wrong, correct?
[11:10:27] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[11:11:15] <vdamewood> Kill-Animals: Why not use -I to specify include directories?
[11:11:53] <johnny> oh boy... HE came back
[11:12:10] *** Quits: hfsoulz_ (~hfsoulz@user/hfsoulz) (Quit: leaving)
[11:12:22] <Kill-Animals> vdamewood: Im not configuring from the commandline, but yeah that sounds about right. I'll play around with my qbs file
[11:12:30] <Kill-Animals> johnny: You talking about me?
[11:12:36] <johnny> yes indeed
[11:12:56] <Kill-Animals> johnny: What can I do for you?
[11:13:02] <johnny> absolutely nothing
[11:13:29] <Kill-Animals> ...?
[11:13:31] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[11:14:12] <vdamewood> Too bad you're using QBS. I could help with CMake.
[11:14:55] <Kill-Animals> vdamewood: hey thanks lol. I wish cmake died but it looks like its going to be around forever.
[11:17:11] <vdamewood> Kill-Animals: Well, good luck.
[11:17:49] <Kill-Animals> vdamewood: ah I see you are also in #qt. Thought I recognized the name. Thanks. Just out of curiousity, what are you workign on these days?
[11:18:28] <vdamewood> Nothing specific.
[11:19:30] <Kill-Animals> neat.
[11:26:02] *** Quits: letto (~letto@188.27.114.171) (Remote host closed the connection)
[11:26:52] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:28:28] *** Joins: letto (~letto@188.27.114.171)
[11:29:33] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:30:02] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:34:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:37:38] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[11:38:02] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:43:30] *** Joins: xiongxin1 (~Thunderbi@117.136.40.181)
[11:46:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88) (Ping timeout: 250 seconds)
[11:47:40] *** Quits: xiongxin1 (~Thunderbi@117.136.40.181) (Ping timeout: 246 seconds)
[11:48:23] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:48:59] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:49:26] *** Joins: jsbach (~jsbach@2a01:c23:6468:3200:42e8:59db:f661:f100)
[11:51:11] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:53:03] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ace2:b4ed:9f9:d737)
[11:53:59] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:54:38] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[11:55:02] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:59:30] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[12:03:46] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[12:04:08] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[12:10:13] *** Quits: faya_ (~faya@90-228-194-182-no542.tbcn.telia.com) (Quit: Leaving)
[12:11:12] *** Joins: robod34 (Username@79.113.213.133)
[12:17:08] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:19:23] *** Joins: zy (~cc@user/zy)
[12:21:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:22:16] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410)
[12:22:16] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410) (Changing host)
[12:22:16] *** Joins: skapata (~Skapata@user/skapata)
[12:22:20] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[12:24:27] *** Joins: zy_ (~cc@user/zy)
[12:24:32] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[12:36:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:37:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:38:14] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[12:38:24] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[12:38:58] * Haohmaru deinterlaces nolyc
[12:38:59] <Haohmaru> !rq
[12:38:59] <nolyc> Haohmaru: <ville> it would be a good interview question: "do you know how to use std::launder() and what it does?", if someone claims yes you can dismiss them straight up for being dishonest
[12:39:15] <Haohmaru> >:)
[12:40:19] <johnny> by name it sounds like it can fudge types.. but i've never looked at it
[12:40:27] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:44:29] <pulse> !rq
[12:44:29] <nolyc> pulse: <LordKalma> C++ programmers wanted. Must be CV-qualified
[12:44:51] * pulse doesn't get it
[12:44:57] <pulse> !rq
[12:44:57] <nolyc> pulse: <vpw> :)
[12:45:11] <pulse> weak quotes today
[12:46:11] <pulse> as for std::launder you know a feature is weird when you read a full SO thread about what it does and you still have no idea what it does
[12:46:24] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:51:23] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:f136:f9d6:17ab:1405) (Ping timeout: 260 seconds)
[12:53:54] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[12:55:02] *** Joins: arch_angel (~arch-ange@user/arch-angel)
[13:00:08] <LordKalma> pulse, it's a joke between curriculum vitae qualification and CV-qualification, a C++ term for const/volatile qualification
[13:04:31] *** Joins: xiongxin (~Thunderbi@117.136.33.134)
[13:11:28] *** Joins: ivii (~ivan@user/ivii)
[13:17:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:18:18] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:19:45] <paule32> does someone of you use notepad++ ?  how can i use the enter key to complete the auto completer? also to press enter, and the word is filled to the editor ?
[13:20:22] <paule32> at the moment, i press enter, and the auto completer disappears, so i can not fasten the typing of code
[13:27:40] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c)
[13:28:28] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[13:28:52] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[13:29:33] <Haohmaru> i use notepad++ only because notepad.exe pretends it doesn't schprachen linux text files, but i don't really write my code in it
[13:29:53] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 260 seconds)
[13:30:28] <ville> johnny: yes to an extent, but perhaps not to an extent "people" think you can
[13:30:34] *** Quits: xiongxin (~Thunderbi@117.136.33.134) (Ping timeout: 272 seconds)
[13:30:35] *** xiongxin1 is now known as xiongxin
[13:31:24] <Haohmaru> it's amazing how notepad.exe basically has like zero changes over so many years, and you have to use a 3rd-party text editor if you're serious
[13:31:52] <ville> johnny: you can't std::launder() just any pointer and get valid access to an object that way
[13:31:57] <LordKalma> there's a new notepad in win 11
[13:31:59] <LordKalma> but... win 11
[13:32:07] <Haohmaru> LordKalma who even uses win11
[13:32:27] <Haohmaru> how many years before win11 did notepad.exe stay the same?
[13:32:28] <LordKalma> too many people
[13:32:42] <LordKalma> https://store.steampowered.com/hwsurvey/Steam-Hardware-Software-Survey-Welcome-to-Steam
[13:33:41] <LordKalma> namely https://store.steampowered.com/hwsurvey/directx/
[13:33:44] <ville> std::launder() is the constexpr of "casting". it's far weaker than what people wanted it to be when they first heard about it
[13:34:06] <LordKalma> !std::launder
[13:34:07] <nolyc> LordKalma: Error: "std::launder" is not a valid command.
[13:35:08] <ville> also its one more of those "you can never reimplement this, but we'll gate it behind an include anyway" feature
[13:35:39] <Raziel> LordKalma, did they add labels and ungrouping back to the taskbar?
[13:35:52] <LordKalma> don't you love that half of the std::lib is actually core language?
[13:36:08] <Raziel> I do, this is why I include half of stdlib in my precompiled header
[13:36:10] <Raziel> >_>
[13:36:33] <ville> personally i think anyone proposing such features should be knee-capped with a baseball bat
[13:36:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:36:52] *** Quits: proller (~p@2a02:6b8:b081:14::1:4) (Ping timeout: 260 seconds)
[13:37:19] <LordKalma> std::lib features that need compiler extensions to work?
[13:38:03] <ville> that's not quite accurate characterization but close enough
[13:38:55] <paule32> so nobody use notepad++ and can tell me the trick, btw: notepad++ is a cross tool
[13:39:25] <paule32> but, under the console, i use nano very often
[13:39:31] <Haohmaru> paule32 on linux i use geany, but again, i don't write my code in it
[13:39:40] <Raziel> paule32, do you insist on this path of pain?
[13:39:56] <paule32> Raziel: you mean windows ?
[13:40:07] <Haohmaru> paindows
[13:40:09] <Raziel> no, I mean using improper tools for the job
[13:40:17] <Haohmaru> why not get an IDE
[13:40:18] <Raziel> I use notepad++ too, but not really for writing code
[13:41:21] <Haohmaru> there's a bunch of things that really annoy me in notepad++
[13:41:30] <paule32> notepad++ is good under windows, but the lazy developer is masked with the facts of other os's, because then, if ypu have work with other os, before
[13:41:37] <Haohmaru> but i use it rarely enough that i don't bother doing anything about it
[13:41:45] <Raziel> paule32, breathe and try again
[13:41:47] <Raziel> lol
[13:42:16] <PJBoy> notepad++ is my primary text editor at work >_>
[13:42:19] <johnny> ville, if std::launder let you do that then we'd see tons of people actually use it woulnd't we?
[13:42:31] <johnny> thus it can't actually do that
[13:42:47] <paule32> ah PJBoy you made my day
[13:42:49] <paule32> : )
[13:42:51] <ville> johnny: do what? transmorgify pointer of one type to completely unrelated one legally?
[13:42:56] <johnny> yes
[13:43:10] <Raziel> pretty sure people who do that just do it through void*
[13:43:43] <ville> johnny: yes. think that's a fair presumption
[13:43:46] <johnny> well sure, but one way looks more C++
[13:43:50] <ville> Raziel: of course nothing about that makes it anyway legal
[13:44:21] <ville> just because you are able to make the compiler to stop complaining is not indicating it's legal
[13:44:39] <johnny> well if it was realy illegal compilers wouldn't allow it..
[13:44:47] <johnny> right now it's just pinky promise illegal
[13:44:56] <ville> no. it's just ub
[13:45:07] <paule32> reinterpret_cast< void* > o_O;
[13:45:20] <ville> ...and ub requires no effort on the part of the compiler to tell you it's illegal
[13:45:33] <Raziel> except it's not really UB, except when it is UB
[13:46:04] <Haohmaru> sometimes UB, sometimes crash
[13:46:18] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[13:46:21] <paule32> i like: try catch
[13:46:41] <Raziel> paule32, most people don't like try catch
[13:46:46] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[13:46:48] <Raziel> :p
[13:46:56] <paule32> yes, i know, because debbugin ?
[13:47:22] <Raziel> because of a whole slew of technical and political reasons
[13:47:35] <Raziel> don't even get into it :p just use em if you think they're fine
[13:48:42] <ville> let's say you had this sort of sequence: int x = 0; void* vp = (void*)&x; float* fp = (float*)vp; float y = *fp; the compiler won't tell you it's illegal because it's just straight ub. but that's the kind of transmorgifying people would like to do, and i guess sort of expect std::launder() allows when they first hear about it
[13:48:51] <paule32> i use it at my compiler project, so i can catch my own exception like ENoError or ESyntaxError, which i use, to not "close" the application, but in the middle of code, to display a message box wich indicates e.Message
[13:50:34] <ville> http://coliru.stacked-crooked.com/a/f31e1f98910474da if you don't wish to read code jammed on one line
[13:50:41] <LordKalma> the wikipedia page for the fast isqrt has valid c++ implementations of it
[13:51:16] <ville> LordKalma: the types used wasn't particularly important
[13:51:28] <ville> just that the sequence ends up beng ub
[13:51:30] <LordKalma> I'm just commenting on a concrete example
[13:51:30] <LordKalma> https://en.wikipedia.org/wiki/Fast_inverse_square_root#Avoiding_undefined_behavior
[13:52:09] <Raziel> In C++ the usual method for implementing this function's casts is through C++20's std::bit_cast
[13:52:16] <Raziel> so the usual method is one that didn't exist until recently?
[13:52:17] <Raziel> :^)
[13:52:17] <paule32> the inverse of 1 is 1/n
[13:52:41] <ville> and again another example of gating fundamental language feature behind a header as a pseudo-function
[13:53:24] <LordKalma> !grab paule32
[13:53:24] <nolyc> LordKalma: The operation succeeded.
[13:53:29] <LordKalma> ville, indeed
[13:53:33] <paule32> why did you outsource templates in headers, and not code ? a style, or design thing ?
[13:53:35] <LordKalma> Raziel, only by memcopy
[13:54:55] <Raziel> paule32, headers are code
[13:55:38] <paule32> Raziel: yes, i know, but yo can write code in template class, and outside the template
[13:56:04] *** Joins: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net)
[13:56:50] <ac_slater> guys, what's the name of the idiom where a software project is like 99% "library" and the executable is a thin usage of said library functions? I read about this all the time and it's all over in posix/linux land. It has to have a name
[13:57:16] <paule32> ac_slater: you looking for tinyELF ?
[13:57:25] <ac_slater> wut
[13:57:26] <paule32> i have such thing on my git
[13:57:50] <ac_slater> no no - "idiom", should I say "concept" or "workflow"
[13:58:01] <ac_slater> "pattern", may work even
[13:58:01] <paule32> no, joke, i dont know a answer to your request, but tinyELF can produce 1024 bytes tiny elf apps
[13:58:05] <ac_slater> dude
[13:58:07] <ac_slater> read
[13:58:42] <LordKalma> Raziel,  https://godbolt.org/z/9bKcv6Wcj
[13:58:47] <Raziel> this conversation is great
[13:58:50] <LordKalma> an "old" implememntation would be something like that
[13:58:56] <LordKalma> but fixed
[13:59:00] <LordKalma> because I can't be arsed today
[13:59:39] <PJBoy> library oriented design?
[13:59:48] <LordKalma> !grab PJBoy
[13:59:49] <nolyc> LordKalma: The operation succeeded.
[14:00:02] <ville> ac_slater: can't say i've come across it if there is one
[14:00:07] <Haohmaru> "the librarian method"
[14:00:13] <Raziel> LordKalma, I don't really see why that would be more or less UB than union type punning or even void casting
[14:00:39] <Raziel> I guess since you're memcpying directly it's assumed you know what you're doing on a bit-by-bit level? v:
[14:00:45] <ville> Raziel: because the language says so
[14:00:59] <ac_slater> PJBoy: hell yea https://en.wikipedia.org/wiki/Library_Oriented_Architecture
[14:00:59] <Raziel> ville, well the language can UB deez nutz
[14:01:13] <PJBoy> memcpy allows implicit creation of a new object of different type at the destination
[14:01:17] <ville> Raziel: some functions have "magic" on them
[14:01:45] <Raziel> oh, why didn't you say so, I can understand magic
[14:02:05] <Raziel> PJBoy, in that it doesn't really care about the type at all?
[14:02:08] <ac_slater> paule32: curious of the use of 1024byte ELFs now.
[14:02:39] <ville> Raziel: std::memcpy() is again an example of a pseudo-function representing a language feature
[14:03:18] <Raziel> ville, so when are we moving new and delete into std::new and std::delete?
[14:03:25] <PJBoy> yeah it's a blessed function
[14:03:30] <Raziel> we need some consistency at least eh
[14:03:30] <LordKalma> PJBoy, Raziel it's not UB, but it's not the memcpy that allows the object to be created
[14:03:35] <LordKalma> you create the object with float i;
[14:03:38] <PJBoy> std::allocator::allocate/deallocate are blessed
[14:03:45] <PJBoy> and there's std::construct/destroy
[14:03:50] <PJBoy> so you're not far off the truth
[14:03:51] <LordKalma> you can copy the bytes from elsewhere and replace the float ones with memcpy
[14:03:54] <ville> Raziel: well they sort of are already. placement-new syntax is gated behind including the "new" header
[14:04:07] <Raziel> ville, stop, I was merely shitposting
[14:04:10] <Raziel> y u do dis
[14:04:28] <ville> Raziel: don't hate the player, hate the game
[14:04:32] <Raziel> lol
[14:04:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[14:05:00] <PJBoy> shitpost oriented design
[14:05:19] <LordKalma> !grab PJBoy
[14:05:19] <nolyc> LordKalma: The operation succeeded.
[14:05:47] <Haohmaru> sh*tpost increment operator
[14:10:51] *** Joins: paul424 (~tom@ip-5-172-236-176.multi.internet.cyfrowypolsat.pl)
[14:12:06] <Raziel> my shitpost refcount is too damn high
[14:13:30] *** Joins: Mat_42 (~mat_42@194.12.157.96)
[14:15:35] <paule32> ac_slater: i would point to tinyELF, because you can produce linux elf apps that do not need libc
[14:15:46] <ac_slater> but why though
[14:16:25] <ac_slater> I guess just for assembly-only applications. I think NASM's elf output produces something sensibly small
[14:16:27] <paule32> i dont know idoms in english area, only: "go, and jump into the lake"
[14:16:35] <paule32> yes, asm
[14:16:35] <LordKalma> speaking of libc
[14:16:40] <LordKalma> let's talk about glibc.
[14:16:46] <ac_slater> love glibc
[14:17:22] <paule32> or "boomle out"
[14:17:52] <LordKalma> "oh let's make a library that's **not** in the GNU ecosystem" "what should we call it?" "glibc".... for fucks sake
[14:17:59] *** Quits: Mat_42 (~mat_42@194.12.157.96) (Ping timeout: 260 seconds)
[14:18:38] <paule32> libc is an extented app, based on kernel
[14:18:45] <paule32> int 0x80
[14:18:57] <Haohmaru> isn't glibc gnu-ish?
[14:19:01] <LordKalma> oh wait, I might be thinking of musl libc
[14:19:04] <LordKalma> disregard
[14:19:12] <Haohmaru> musl isn't gnu-ish
[14:19:16] <ac_slater> paule32: dude, what are you talking about.
[14:19:45] <ac_slater> and musl-libc is weird. I've been using pico-libc on some embedded things
[14:19:47] <paule32> ac_slater: you mean my idoms ?
[14:19:48] <LordKalma> Haohmaru, yeah, I was thinking of musl libc and somehow calling it glibc
[14:19:57] <LordKalma> I didn't have a great night
[14:20:07] <Haohmaru> LordKalma what about musl?
[14:20:13] <ac_slater> paule32: "concept"
[14:20:14] <LordKalma> nothing :)
[14:20:31] <LordKalma> other than alpine linux docker images are sometimes slow as all hell :) :p
[14:20:47] <Haohmaru> who even uses alpine linux tho
[14:20:57] <Raziel> mountain people
[14:20:58] <LordKalma> lots of people on docker
[14:21:08] <Haohmaru> who even uses docker ;P~
[14:21:10] <ac_slater> yea, distroless deb11 all the way
[14:21:13] <paule32> ac_slater: i read "idoms", so i have fasten overread you request, and i have wrong translate it into my language, english is not my thing
[14:21:17] <LordKalma> half the docker tutorials tell you to use the alpine linux docker
[14:21:19] <LordKalma> and like... NO
[14:21:19] <TinoDidriksen> Alpine is often used as a Docker base to have a minimal image. It's a bit silly.
[14:21:24] <LordKalma> ^that
[14:21:27] <LordKalma> it's totally silly
[14:22:11] <TinoDidriksen> With btrfs copy-on-write, just base everything on the same. And it if gets disconnected, deduplicate.
[14:22:15] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c) (Ping timeout: 256 seconds)
[14:22:34] <Haohmaru> i used btrfs once.. it was a mistake
[14:23:00] <LordKalma> idc, I just base them on debian 11 or whatever buster is
[14:23:10] <ac_slater> buster is 10
[14:23:14] <LordKalma> that
[14:23:18] <Haohmaru> it sounded kewl untill the harddisk started dying
[14:23:39] <LordKalma> I have some here based on bullseye tho
[14:23:57] <Raziel> I installed arch with btrfs once
[14:24:04] <ac_slater> LordKalma: if you want small, distroless from google is awesome. I use deb11-slim as the builder and distroless-deb11 as the runner. The runner is like ~30mb
[14:24:06] <Raziel> I dunno why, it was a vm anyway, but I did it, so I get the nerd cred
[14:24:24] <PJBoy> using Alpine as a docker base because it's small sounds... sensible?
[14:24:28] <LordKalma> I just don't care
[14:24:32] <paule32> LordKalma: i run ubuntu in a box under windows, it is based on debian, and i would ask, why did they change eth0: to enps03: ?  also the name of the nic's
[14:24:38] <LordKalma> PJBoy, except then like python performance is halved
[14:24:46] <Haohmaru> Raziel it turned out you can't make it like scan and mark bad sectors so the data can be moved
[14:24:49] <PJBoy> oh what
[14:25:00] <ac_slater> PJBoy: nah man, different libc, not binary compatible if you don't use an alpine builder
[14:25:19] <LordKalma> there's a web page dedicated to pitfalls in dockerizing python
[14:25:22] <LordKalma> lemme see if I can find it
[14:25:23] <PJBoy> ah ok
[14:25:42] <Haohmaru> paul424 because enumeration wasn't very predictable with the old "eth0" scheme
[14:26:00] <paul424> aha ;)
[14:26:18] <PJBoy> you can change it back fortunately
[14:26:23] <paule32> oh a paul - you my sister or brother or duble ?
[14:26:34] <paule32> a another paul
[14:26:38] <paule32> : )
[14:26:47] <Haohmaru> pauloverflow
[14:26:51] <paule32> hehe
[14:27:08] <LordKalma> PJBoy, https://pythonspeed.com/articles/alpine-docker-python/
[14:27:39] <LordKalma> https://superuser.com/questions/1219609/why-is-the-alpine-docker-image-over-50-slower-than-the-ubuntu-image
[14:28:32] <paule32> microsoft magic things - the black power
[14:28:42] <paule32> it can be only one
[14:28:43] <Haohmaru> hm, does C++ use a different preprocessor (or set of rules) from the C one?
[14:28:44] <paule32> : )
[14:29:12] <PJBoy> some
[14:29:15] <PJBoy> but mostly the same
[14:29:27] <paule32> Haohmaru: yes, pre-processort is changed a little bit, so you can not use the placeholders for signs anymore
[14:29:45] <PJBoy> only one that comes to mind is related to modules
[14:30:09] <Haohmaru> C++23 says supposedly: "New preprocessors: #elifdef and #elifndef"
[14:30:13] <PJBoy> maybe some of the string literal concatenation with the different suffices
[14:30:19] <PJBoy> yeah that happened
[14:30:36] <ville> Haohmaru: it does
[14:30:38] <PJBoy> C23 too
[14:30:44] <Haohmaru> so C++ can have its own custom rules in the preprocessor
[14:30:47] <paule32> gnu c 12 ?
[14:31:06] <ville> Haohmaru: it does
[14:31:33] <LordKalma> lets get ISO to sit both comitees on the same room, conclave style
[14:31:41] <LordKalma> and only get out of there when there's white smoke
[14:31:42] <Haohmaru> kewl, not the preprocessor but that this is one more aspect where we aren't entirely tied to ugly C
[14:31:43] <paule32> i hope that llvm does not swipe c++
[14:33:36] *** Joins: pulse (~pulse@user/pulse)
[14:33:53] <pulse> LordKalma, ah, i see :p
[14:40:10] <Haohmaru> anything new in C++23 coming that could be very useful for baremetal?
[14:43:30] *** Joins: markong (~kvirc@213.146.188.203)
[14:44:15] <LordKalma> https://twitter.com/TartanLlama/status/1505927950516076549
[14:44:17] <PJBoy> some more powers for constexpr functions
[14:44:18] <LordKalma> I didn't know about this
[14:44:19] <LordKalma> :O
[14:44:35] <PJBoy> struct layout order is mandated now
[14:44:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:44:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:44:46] *** ChanServ sets mode: +v npaperbot
[14:45:08] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[14:45:24] <PJBoy> std::byteswap if you're into that
[14:45:28] <LordKalma> std::expected could be useful
[14:45:41] <Haohmaru> PJBoy is that for endiannes stuff?
[14:45:43] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[14:45:56] <PJBoy> it's for byte swapping, which is arguably endian related
[14:46:35] <LordKalma> could make implementing endian-related libs easier I guess
[14:46:51] <LordKalma> Sy gives you the full overview https://twitter.com/TartanLlama/status/1505918874583248900
[14:47:26] <PJBoy> one thing that flew under my radar is std::reference_constructs_from_temporary
[14:47:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e935:9ea8:7be4:9173)
[14:48:29] <PJBoy> so now we can have const lvalue references
[14:48:39] <PJBoy> that we can check actually bind to lvalues
[14:50:11] <ville> LordKalma: so sg22?
[14:50:22] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[14:50:31] <LordKalma> dunno which one that is
[14:50:36] <ville> that's the study group for c and c++ liason
[14:50:47] <PJBoy> one of the things I'm looking forward to is std::ranges::to
[14:50:50] <LordKalma> let's hope C++23 and clang get along :D
[14:51:24] <PJBoy> clang's seemingly done almost everything in C++23 so far
[14:51:40] <PJBoy> I guess it's all relatively easy stuff compared to C++20
[14:52:38] <PJBoy> libstdc++ and MS stdlib seem to be competing reasonably
[14:53:02] <PJBoy> MS slightly ahead as you would expect
[14:55:45] <PJBoy> there's some more wording on integer class types in C++23
[14:55:50] <PJBoy> which I didn't even know were a thing
[14:56:02] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:56:47] <LordKalma> 40 years later, we're close to a useful programming language
[14:57:12] <PJBoy> yeah C# is pretty close now
[14:57:28] <PJBoy> oh you meant rust
[14:57:32] <LordKalma> hahaha
[14:57:42] * PJBoy bans himself
[14:57:44] <LordKalma> if only C# was better in the x-platform game...
[14:58:04] <LordKalma> it's like... it has a lot of things, but then you want something as simple as audio... back to wrapping C
[14:58:20] <LordKalma> at least wrapping C is natural in C++ :D
[14:58:36] <LordKalma> and C++23 will have in[ou] unique-_ptr
[14:58:48] <LordKalma> sorry [in]out unique_ptr
[14:59:02] <PJBoy> it's just in[out]_ptr
[14:59:51] <PJBoy> which is a factory function for in[out]_ptr_t
[15:01:08] <LordKalma> the point is
[15:01:21] <PJBoy> and it's not even in
[15:01:21] <LordKalma> less custom destructors just because you wanted to wrap some BS C thing
[15:01:26] <PJBoy> it's [in]out_ptr >_>
[15:01:36] <LordKalma> yes
[15:01:40] <LordKalma> in_ptr doesn't make sense
[15:01:49] <LordKalma> just use a unique_ptr and pass it the value
[15:02:10] <LordKalma> .get() or whatever
[15:02:26] <LordKalma> the whole point is write access from the C api
[15:02:34] <PJBoy> only saves you a little bit of effort to use [in]out_ptr
[15:02:45] <LordKalma> think of the custom deleters
[15:02:53] <LordKalma> not the amount of code itself
[15:02:59] <LordKalma> deletes for wrapper classes
[15:03:01] <LordKalma> like in RAII
[15:03:14] <LordKalma> fuck destructors, I mean destructors
[15:03:15] <LordKalma> ffs
[15:03:18] <PJBoy> unique_ptr handles that
[15:03:20] <Haohmaru> ooh, constexpr mathz
[15:03:33] <PJBoy> [in]out_ptr just handles calling release() temporarily for you
[15:03:50] <PJBoy> and putting the result of the thing you give the raw pointer to back into the unique_ptr after
[15:03:58] <Haohmaru> {} constexpr double pi = atan(1.0) * 4.0;
[15:03:59] <geordi>  
[15:04:02] <Haohmaru> kewl
[15:04:21] <PJBoy> gcc was non-conformingly making cmath constexpr anyway
[15:04:26] <LordKalma> PJBoy, you'd have to use release and a copy-constructor
[15:04:39] <PJBoy> copy ctor?
[15:04:46] <Haohmaru> PJBoy yeah but now it will be legal ;P~
[15:04:51] <LordKalma> you can't change a unique_ptr's object, can you?
[15:05:04] <PJBoy> sure you can
[15:05:16] <PJBoy> you can do anything you can with a raw pointer
[15:05:44] <PJBoy> mostly because unique_ptr has release() and reset()
[15:06:26] <LordKalma> reset takes a new pointer?
[15:06:28] <LordKalma> didn't know that
[15:06:54] <PJBoy> it's kinda pointless because you can just use unique_ptr::operator=
[15:06:57] <PJBoy> but yeah
[15:07:31] <PJBoy> actually it saves you from redundantly assigning the deleter
[15:07:40] <PJBoy> so marginally better than operator=
[15:09:56] <PJBoy> although having said that
[15:10:18] <PJBoy> releasing a smart pointer temporarily means you potentially leak on thrown exception temporarily
[15:10:46] <PJBoy> so there adapters also save you having to do a try-catch
[15:10:49] <PJBoy> *these
[15:12:00] <PJBoy> or you'd hope so at least
[15:12:31] <PJBoy> waiting for "reinterpret_­cast<void**>(static_­cast<Pointer*>(*this)) can be a viable implementation strategy for some implementations." to make it into the nolyc fact database
[15:14:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e935:9ea8:7be4:9173) (Quit: Quit)
[15:20:29] *** Joins: xkuru (~xkuru@user/xkuru)
[15:20:55] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:22:01] <PJBoy> man
[15:22:13] <PJBoy> C style error handling without goto fail is rough
[15:23:02] <PJBoy> freeing all resources made so far in every if(error) statement
[15:26:03] <Haohmaru> so "C ......... is rough"
[15:27:56] *** Joins: proller (~p@2a02:6b8:b081:15::1:f)
[15:29:13] <paule32> hello
[15:30:02] <paule32> i get error on lines 113, and 116,  but ideone use -std=c++14 but i use g++ 10  -std=c++17
[15:30:04] <paule32> https://ideone.com/DfVonf
[15:30:43] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:e568:4309:ec69:3fba)
[15:30:52] <PJBoy> ideone is terrible
[15:30:53] <paule32> so, the question is, how to set "int" to a argument ?
[15:31:36] <PJBoy> ideone is the cplusplus.com of paste sites
[15:31:36] <Haohmaru> "error." .. like, one of the most important thing about errors is what they are saying
[15:31:52] <Haohmaru> * things
[15:32:09] <paule32> sorry
[15:32:57] *** Quits: paul424 (~tom@ip-5-172-236-176.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:34:48] *** Joins: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce)
[15:39:14] *** Quits: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce) (Client Quit)
[15:40:16] <paule32> https://godbolt.org/z/6hcTazbhP
[15:40:39] *** Joins: xiongxin (~Thunderbi@117.136.39.213)
[15:41:52] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[15:42:42] <paule32> i dont know what is wrong with wandbox.org on my side
[15:43:16] <paule32> i click the share button, then the share windows pops, and wandbox switch to application error
[15:43:28] <PJBoy> wandbox is broken
[15:43:44] <paule32> ok
[15:44:03] *** Quits: proller (~p@2a02:6b8:b081:15::1:f) (Ping timeout: 260 seconds)
[15:45:07] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[15:48:50] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:49:49] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[15:49:55] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:50:21] <paule32> i solve the first part: Arguments[ 1 ] = 1;
[15:53:11] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:54:20] *** Quits: xiongxin (~Thunderbi@117.136.39.213) (Ping timeout: 272 seconds)
[15:56:10] *** Quits: robod34 (Username@79.113.213.133) (Ping timeout: 246 seconds)
[15:57:31] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 250 seconds)
[15:57:54] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[16:03:00] *** Joins: robod34 (~Username@92.81.151.141)
[16:06:35] <paule32> so, next problem: https://godbolt.org/z/3c7qKnYz7
[16:06:40] <paule32> in line 90
[16:06:53] <paule32> template argument 2 is invalid
[16:08:46] <paule32> how can i do it in right case ?
[16:11:29] *** Quits: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[16:20:58] <paule32> hmm, godbolt.org does not know std::variant
[16:21:14] <TinoDidriksen> Raise the -std
[16:24:16] *** Joins: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net)
[16:25:15] <paule32> https://godbolt.org/z/dP76WzMMr
[16:35:40] *** Joins: jose_ (~goose@111.199.80.15)
[16:43:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[16:50:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:58:00] <rpav> paule32: -std=c++17
[17:01:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:04:06] <paule32> thx
[17:04:12] <paule32> i solve it: https://godbolt.org/z/5jvd1Y98c
[17:04:54] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:05:43] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 260 seconds)
[17:09:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:16:15] *** Joins: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce)
[17:17:53] *** Joins: proller (~p@2a02:6b8:b081:1232::1:0)
[17:19:10] *** jose_ is now known as Luciana
[17:22:06] *** Quits: Luciana (~goose@111.199.80.15) (Quit: Leaving)
[17:37:17] *** Joins: Fairy (~Fairy@ti0004a400-5707.bb.online.no)
[17:37:18] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[17:38:08] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[17:38:29] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54) (Ping timeout: 250 seconds)
[17:38:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:39:35] <paule32> here is a pimped version: https://godbolt.org/z/61j9qajba
[17:43:59] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:45:47] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[17:50:13] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[17:50:40] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:55:11] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[18:01:50] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:03:12] <rpav> hmm what ridiculous and/or useful thing can we do with c++ this week
[18:06:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:17:40] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[18:22:08] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[18:22:49] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[18:37:34] *** Joins: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[18:40:45] *** Quits: miklcct (~quassel@vps.miklcct.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:40:59] *** Joins: miklcct (quasselcor@vps.miklcct.com)
[18:42:01] *** Joins: meator (~meator@user/meator)
[18:44:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:44:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:44:46] *** ChanServ sets mode: +v npaperbot
[18:47:58] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:51:38] *** Joins: john99 (~john99@134.238.107.162)
[19:01:37] *** Quits: rg (~r-g@51-15-187-53.rev.poneytelecom.eu) (Read error: Connection reset by peer)
[19:02:13] *** Joins: badfilms (~badfilms@user/badfilms)
[19:11:57] *** Quits: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce) (Quit: Leaving)
[19:15:49] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[19:19:48] *** Joins: plastico (~plastico@neomutt/plastico)
[19:25:36] *** Joins: paul424 (~tom@ip-5-172-237-202.multi.internet.cyfrowypolsat.pl)
[19:27:20] *** Joins: Jeegh (~brute@176.33.66.185)
[19:28:22] *** Joins: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[19:28:22] *** Quits: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[19:28:22] *** Joins: Elbeeo (~asskoala@user/asskoala)
[19:28:44] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[19:36:29] *** Elbeeo is now known as AssKoala
[19:45:32] *** Joins: [o (~istupy@2620:0:1003:206:7555:dc53:8a25:a389)
[19:54:00] <xkoncek> !rq
[19:54:00] <nolyc> xkoncek: <PJBoy> oh god even rpav is a browser now
[19:55:20] <Haohmaru> we lost rpav
[19:55:32] <Haohmaru> :~(
[19:56:24] <rpav> 🤔
[19:59:39] <rpav> !fact
[19:59:41] <nolyc> rpav: The decl-specifier-seq shall contain only the type-specifier auto and cv-qualifiers.
[19:59:58] <rpav> boring
[20:00:28] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:03:44] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[20:06:38] <Alipha> we need that repaste bot that ##c++ had and use it just for wandbox :-/
[20:08:35] <Alipha> paule32: why is HelpNDocAPI_ArgumentMap a std::map instead of just a std::vector?
[20:12:44] *** Joins: AmR (~AmREiSa@102.44.191.208)
[20:15:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:18:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:22:08] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:26:00] *** Joins: seninha (~seninha@user/seninha)
[20:30:03] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:32:58] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:34:17] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d)
[20:34:17] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d) (Changing host)
[20:34:17] *** Joins: skapata (~Skapata@user/skapata)
[20:34:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:37:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:38:12] *** Quits: paul424 (~tom@ip-5-172-237-202.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[20:43:46] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Remote host closed the connection)
[20:44:09] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ac35:8160:2b6:e011)
[20:48:24] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:52:12] <Haohmaru> we need the old quotes, the classics
[20:53:10] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[20:55:10] *** Joins: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:55:10] *** Quits: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:55:10] *** Joins: Elbeeo (~asskoala@user/asskoala)
[20:55:33] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[20:56:33] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:57:38] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[21:04:04] *** Quits: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[21:18:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[21:36:48] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[21:38:45] *** Quits: john99 (~john99@134.238.107.162) (Quit: Client closed)
[21:40:38] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Remote host closed the connection)
[21:41:11] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[21:43:18] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 272 seconds)
[21:45:57] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Ping timeout: 256 seconds)
[21:46:40] *** Joins: pulse (~pulse@user/pulse)
[21:53:48] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Remote host closed the connection)
[21:55:38] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:05:34] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[22:06:02] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[22:06:09] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[22:06:47] *** Quits: pa (~pah@user/pah) (Ping timeout: 252 seconds)
[22:07:11] *** Joins: Praise (~Fat@user/praise)
[22:07:35] *** Joins: pah (~pah@user/pah)
[22:08:47] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Quit: Leaving)
[22:09:02] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:09:36] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:09:48] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:11:11] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:11:38] *** Joins: paul424 (~tom@ip-5-172-239-80.multi.internet.cyfrowypolsat.pl)
[22:11:43] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:12:01] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:12:15] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:51] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:51] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:13:53] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:15:06] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[22:18:17] <rpav> "how do i append arrays" should not be something i have to look up every time i want to do it ;P
[22:18:28] *** Joins: sbrothy (~george@192038130202.mbb.telenor.dk)
[22:18:51] <rpav> i.e. not something i do often enough to remember, but should be trivial
[22:19:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Ping timeout: 250 seconds)
[22:21:51] <Alipha> rpav: how DO you append arrays, as they're fixed sized?
[22:23:23] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[22:23:37] *** Quits: sbrothy (~george@192038130202.mbb.telenor.dk) (Quit: leaving)
[22:24:04] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[22:24:18] <PJBoy> tuple_cat and apply obviously
[22:24:19] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[22:26:15] <rpav> err, vectors ;P but you could array_cat
[22:26:17] <rpav> too many languages
[22:26:23] <PJBoy> << apply([](auto... args) { return array{args...}; }, tuple_cat(a, b)); array a{1, 2, 3, 4}; array b{5, 6, 7};
[22:26:23] <geordi> {1, 2, 3, 4, 5, 6, 7}
[22:26:37] <Alipha> the world needs a tuple_cat meme
[22:26:53] <PJBoy> vector you just use range insert
[22:27:06] <rpav> i was thinking before i wanted a t-shirt with a cat pile and `std::tuple_cat` on it
[22:27:59] <Alipha> i just had a horrible image: human centipede but with cats
[22:28:15] <PJBoy> { a.insert(end(a), RANGE(b)); cout << a; } vector a{1, 2, 3, 4}, b{5, 6, 7};
[22:28:16] <geordi> Same output.
[22:28:23] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[22:28:37] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[22:29:10] <rpav> Alipha: i jumped from that to geordi's "Same output"
[22:29:14] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[22:30:20] *** pah is now known as pa
[22:32:43] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[22:34:18] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) (Ping timeout: 252 seconds)
[22:34:21] <PJBoy> ahaha
[22:44:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:44:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:44:48] *** ChanServ sets mode: +v npaperbot
[22:46:35] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[22:55:57] *** Quits: proller (~p@2a02:6b8:b081:1232::1:0) (Remote host closed the connection)
[23:06:57] *** Joins: k8yun (~k8yun@user/k8yun)
[23:13:33] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) ()
[23:20:28] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[23:20:32] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[23:22:52] *** Elbeeo is now known as AssKoala
[23:23:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[23:26:01] *** Joins: sbrothy (~george@192038130202.mbb.telenor.dk)
[23:32:53] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:883b:c0af:767b:beac)
[23:32:53] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:883b:c0af:767b:beac) (Changing host)
[23:32:53] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:45:28] <rpav> vectors of vectors ;/
[23:47:47] *** Quits: sbrothy (~george@192038130202.mbb.telenor.dk) (Read error: No route to host)
[23:48:08] *** zy_ is now known as zy
[23:51:14] *** Quits: badfilms (~badfilms@user/badfilms) (Ping timeout: 272 seconds)
[23:53:03] *** Joins: badfilms (~badfilms@user/badfilms)
[23:53:14] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:54:21] <johnny> please don't stop with the vectors
[23:54:27] <johnny> how deep can it go
[23:54:43] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[23:55:29] <johnny> i wonder how the compile time increases with a program in which the only content in main is an increasing number of vector of vectors
[23:55:37] <johnny> i mean within one vector..
[23:55:46] <Alipha> Women are always impressed by my vector. Maybe not the std part.
[23:56:53] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[23:57:47] <johnny> hmm.. i bet a fair number of folks are working on this space
[23:57:49] <johnny> https://github.com/Wilfred/difftastic
[23:57:58] <johnny> Difftastic is an experimental diff tool that compares files based on their syntax.
[23:58:28] <paule32> hello, give it a c++ std:: container for handling application arguments ?
[23:58:41] <paule32> please not, boost
[23:58:57] <TinoDidriksen> vector<string>
[23:59:24] <paule32> ah okay
