[00:00:46] <Nasp> MatthiasVance:  Don't you use the game ready drivers
[00:02:28] <MatthiasVance> Nasp: Hm?
[00:02:48] <Nasp> The drivers without nvidia software crap?
[00:03:01] <Nasp> Drivers only
[00:03:01] <MatthiasVance> I don't have that installed
[00:03:10] <MatthiasVance> Indeed only the drivers
[00:03:16] <Nasp> Thouht you used those
[00:03:23] <Nasp> I thought that was geforce now
[00:03:28] <MatthiasVance> Ah no
[00:06:56] <Nasp> Ohh so it was as a service
[00:09:11] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Ping timeout: 256 seconds)
[00:10:50] <GetShwifty> yeah
[00:11:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed88:aae9:3bf6:fcb5) (Ping timeout: 240 seconds)
[00:12:07] <GetShwifty> 26 lines of sql but i can finally restore a database to a database (that isn't the same name) and ensure it goes to the correct files of the different db in one click
[00:12:08] *** Joins: alguien_ (~alguien@user/alguien)
[00:12:37] *** Quits: highrate (~presonic@user/highrate) (Ping timeout: 240 seconds)
[00:13:30] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7863:b6d6:f0d1:5a66)
[00:13:57] <GetShwifty> 3 seconds to destroy the database, 101 seconds to restore it lol
[00:13:57] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[00:16:53] <Suchiman> GetShwifty: neat :P
[00:20:31] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:28:40] <xb0o2> If you use semicolons you might be able to get it into less than 26 lines.
[00:29:17] <GetShwifty> i  feel like it's already got enough issues following what's going on without resorting to that :-D
[00:29:53] <xb0o2> I dunno, Clean Code or something told me anything longer than 10 lines is bad.
[00:30:24] <GetShwifty> yeah but like all rules they're meant to be bent / broken at varying times :)
[00:30:52] <xb0o2> It doesn't say that in the book...
[00:30:54] <GetShwifty> honestly with this almost 10+ lines is just declaring variables that build the apprpropriate db / logical / file names
[00:31:12] <GetShwifty> yeah, there's a lot of things the book doesn't tell ya about.. its the diff between book smart and street smart ;)
[00:31:17] <xb0o2> I did mean to send a /s but it obviously got slurped as an IRC command.
[00:32:35] <GetShwifty> lol
[00:36:03] <xb0o2> So here's a question, am I the first person to want to use Microsoft.Extensions.DependencyInjection for DI in old-school ASP.NET or does someone want to link to me to a package that takes care of it for me?
[00:36:33] <xb0o2> I don't particularly want to have to write the scoping code
[00:38:25] <GetShwifty> in theory you just grab the code for creating a host builder?
[00:39:28] <xb0o2> Hmm?
[00:39:31] <GetShwifty> my platform no longer compileson .net fw so can't say much more beyond that. i forget if i started using
[00:39:40] <GetShwifty> ms DI before or after i jumped shark
[00:41:02] <xb0o2> To be honest, it's all the lovely wiring of request scoping that is the only thing that stands out to me as missing from a straight swap
[00:41:37] *** Joins: cheetahw26 (~cheetahw2@14.150-pool-xdsl-mi.sccoast.net)
[00:42:26] <GetShwifty> oh for asp.net mvc razor http requests?
[00:42:29] <xb0o2> I'd imagine it's not too difficult to sort out generating a scope and disposing it on Begin/EndRequest but I can't really be bothered
[00:42:51] <GetShwifty> i would actually expect that to work OOB
[00:43:10] <GetShwifty> if the appropraite thing that WebHostBuilder is in is available
[00:43:15] <Nasp> "thank you for your email, here is an automated answer to your question, if neither of these work please contact us"
[00:43:22] <Nasp> Geh thanks, why do you think i contacted you
[00:43:36] <xb0o2> HostBuilders aren't a thing in ASP.NET
[00:43:59] <xb0o2> We're talking old school ASP.NET
[00:44:22] <xb0o2> Global.asax.cs & HttpApplications and co.
[00:44:23] <GetShwifty> i've seen MS  DI in .net fw asp.net code so
[00:44:27] <Suchiman> Nasp: i suppose most people just randomly write in like "uh"
[00:44:29] <Nasp> xb0o2:  Just look at how Autofac hooks in and copy that
[00:44:55] <Nasp> Suchiman:  When submitting a ticket it same up with "help articles that might be related to your issue"
[00:44:59] <Suchiman> Nasp: always remember, if you consider yourself only average intelligence, that means that 50% of people are guaranteed dumber than you :P
[00:45:02] <Nasp> Neither of these fitted well
[00:45:06] <Nasp> So i choose the submit ticket
[00:45:16] <Nasp> Then 3 hours later i get an tuomated response that no human has really looked into it
[00:45:35] <xb0o2> Nasp: presumably Begin/EndRequest scope initiation and disposal but yeah reasonable shout
[00:45:40] <Nasp> My domain havent worked for 8 days since i started moving
[00:45:51] <xb0o2> Just wondered if anyone else had standardised on it and written the integration code already.
[00:45:59] <Nasp> xb0o2:  It's probably done in a module
[00:47:08] <xb0o2> Nasp: yeah, it's EndRequest hookups
[00:47:09] <xb0o2> https://github.com/autofac/Autofac.Mvc/blob/develop/src/Autofac.Integration.Mvc/RequestLifetimeHttpModule.cs
[00:47:35] <xb0o2> Initiated through a module but I don't think that'd be necessary if it's not library code :)
[00:48:01] <Nasp> xb0o2:  Looks like it does a bit more than that https://github.com/autofac/Autofac.WebApi/tree/develop/src/Autofac.Integration.WebApi
[00:48:09] <Nasp> Ohh there's an mvc package as well
[00:51:44] <Nasp> Suchiman: So far just not great success with moving my domain to cloudflare
[00:51:46] <xb0o2> Just surprised there's not something floating around already to be honest.
[00:52:00] <Nasp> I would assume nobody would bother writing it for old shit
[00:52:13] <Nasp> Do like the cool kids and convert it to core
[00:52:41] <Nasp> Suchiman:  I just find it so annoying when you create a customer support ticket and no human really wants to look at it
[00:53:34] <xb0o2> Nasp: I would *love* to.
[00:53:48] <Suchiman> Nasp: hobby project?
[00:55:16] <xb0o2> The 4 projects in question are so low priority that it's a "yeah, ok spend some time to get them on a standard set of packages" but not "ok let's bring them out of the dark ages"
[00:55:21] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:55:46] <xb0o2> Useful enough to keep around but not useful enough to spend any actual manhours on.
[00:57:55] <Nasp> Suchiman: yes
[00:58:06] <Nasp> Else i couldn't live with a domain being down for over a week
[00:58:23] <Nasp> But this sounds like the "support" you get at whatever vendor
[00:58:34] <Nasp> Just like Azure when you throw a few million euros at them
[00:58:42] <Nasp> "Ohh sorry, it must be a wrong configuration on your end"
[00:58:52] <Nasp> But it's worked for 3-4 years like this
[00:58:56] *** Joins: k8yun (~k8yun@user/k8yun)
[00:59:17] <Nasp> xb0o2:  Is it a small project?
[00:59:37] *** Joins: highrate (~presonic@user/highrate)
[01:06:37] <GetShwifty> lol
[01:07:11] <xb0o2> Nasp, no, not really.
[01:08:10] <Slade> oh florida, why do you import so many interesting people. https://old.reddit.com/r/NoStupidQuestions/comments/snppah/what_are_florida_ounces/
[01:09:31] <GetShwifty> lol
[01:10:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:11:03] <Slade> this might be lost on you euros
[01:11:18] *** Quits: cheetahw26 (~cheetahw2@14.150-pool-xdsl-mi.sccoast.net) (Quit: Client closed)
[01:11:40] <GetShwifty> Or it would be like an ounce, but a bit bigger, like a baker's dozen
[01:11:47] <GetShwifty> ^^ best comment imho
[01:15:23] <lz_> is there something to sandbox processes in windows
[01:15:48] <GetShwifty> sandboxie?
[01:16:05] <lz_> GetShwifty: thx i'll look it up
[01:16:08] <Nasp> xb0o2: Then why do you want to add ms di?
[01:16:52] <GetShwifty> maybe the project needs to evolve?
[01:17:01] <Nasp> Clearly not it sounded like
[01:17:20] <GetShwifty> ? making a .net fw project behave more like a .net core project?
[01:17:38] <Slade> GetShwifty: FL OZ is best unit of measurement for measuring ounces of florida orange juice
[01:17:38] <GetShwifty> sounds a bit like an evolution. not every evolutionary step is a 'new species' some are in-between
[01:17:45] <GetShwifty> Hah Slade
[01:17:55] <GetShwifty> that's prolly the funniest one :-D
[01:18:21] <Nasp> xb0o2:  Also can you give a number on how many controllers?
[01:21:15] <Slade> GetShwifty: i jut made it up :P
[01:21:46] <GetShwifty> still funny as heck
[01:22:16] <GetShwifty> just gotta throw in added bonus of "to account for the Florida OJ Pulpiness .. or something
[01:24:54] <GetShwifty> xb0o2:  from a quick cursory glance yeah i would imagine that a lot of the service locator should understand / be aware of asp.net fw requests and scoping them
[01:25:25] <GetShwifty> cause asp.net mvc 3 started seeing support for it
[01:25:33] <GetShwifty> thats circa 2010
[01:25:46] <GetShwifty> imagine you guys would be on 5 or whatever v6 became)
[01:29:19] <lz_> great, I used the vs2017 installer and it installed vs2019
[01:29:22] <lz_> fuck that shit
[01:29:29] <GetShwifty> lmao
[01:29:45] <GetShwifty> just be thankful it didn't decide to bless you withthe latest 2022 .1 preview  5 :-d
[01:29:57] <Nasp> Do you need 2017?
[01:30:23] <lz_> no I'm trying to install an old version just for fun
[01:30:25] <lz_> yes I do
[01:30:25] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[01:30:45] <GetShwifty> i know if you were building certain azure projects - there were some breaking changes that made existing projects work in one version of vs but not the other
[01:31:02] <GetShwifty> so i kept having to jump back and forth from 2017 and 2019 for  one of my clients
[01:31:52] <GetShwifty> might also be some older uprade paths that 2017 might handle that 2019 might not support iono.
[01:31:54] <GetShwifty> what you need it for lz?
[01:32:16] <lz_> some shit project that requires it
[01:33:15] *** Joins: gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:f4:9e8:643a:d32f)
[01:33:31] <GetShwifty> maybe google and see if you can find a vs 2017 offline installer?
[01:33:40] <GetShwifty> or try again and see if there was just a sneaky setting ms defaulted to
[01:34:04] <lz_> yeah i tried to launch the installer again just to check i didn't miss sth but it only lists vs2019 in the "available" things
[01:34:21] <lz_> it took me a fucking hour to install i'm pissed off
[01:34:46] <Nasp> Hmm not sure if cloudflare was the best choice, seems like they may have next to zero support
[01:34:50] <GetShwifty> well Or it would be like an ounce, but a bit bigger, like a baker's dozen
[01:34:59] <GetShwifty> Or it would be like an ounce, but a bit bigger, like a baker's dozen
[01:35:00] <GetShwifty> grr
[01:35:05] <Nasp> lz_:  IS the project older then 2017?
[01:35:18] <Nasp> Because 2019 should be abe to read and upgrade it
[01:35:23] <GetShwifty> not sure who DeveloperInsider.CO is but they claim to have 2017 installer / iso downloads available
[01:35:48] <lz_> Nasp: I don't even get to open the project, some shitty .bat files fail because it can't find vs2017
[01:36:01] <lz_> one that generates the projects
[01:36:07] <GetShwifty> oh that sounds like the type of thing that will faill even if 2017 is installe
[01:36:13] <GetShwifty> just because it's not in the exact location it expects lol
[01:37:27] *** Quits: gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:f4:9e8:643a:d32f) (Ping timeout: 250 seconds)
[01:39:26] <teegee> just symlink your VS root directory to 2017. done
[01:39:37] <GetShwifty> hahaha
[01:39:41] <Nasp> lz_:  Damn
[01:39:52] <GetShwifty> that's prllly very dangerous but .. also.. an ingenious idea. lol
[01:39:55] <Nasp> non-SDK based i take it
[01:39:55] * GetShwifty salutes teegee
[01:40:15] <teegee> I'll take it while I can :>
[01:41:31] <GetShwifty> my SIL gave me this wooden 'foot roller'
[01:41:48] <lz_> hot take: microsoft shouldn't hide older versions and make them hellish to find
[01:41:50] <GetShwifty> and omfg it is an ingenious concept for rolling out certain muscles
[01:42:10] <lz_> if they're afraid people won't switch to newer versions, they have other problems
[01:42:22] <GetShwifty> hot take: please install Windows 11 Home with dowgraded taskbar, mandatory Microsoft Account signin AND please put in +S Mode to only get MS approved software from MS Store
[01:42:38] <GetShwifty> AND ONLY USE EDGE AND OUR CHOSEN DEFAULT APPS
[01:43:02] <Nasp> Any recommendations for a DNS provider?
[01:43:28] <GetShwifty> the same team that resets ms default apps to ms approved apps, installs ms approved 3rd party games  , constantly nags you if you're not using ms approved software (perhaps you forgot about it).. has infected other parts of mS :D
[01:43:38] <GetShwifty> hmm i looked at  one a while back Nasp
[01:44:26] <edcba> Nasp: the root dns servers ?
[01:44:28] <GetShwifty> what's the purpose Nasp? just free / basic stuff? or are you looking for a backup dns in case primary failure?
[01:44:59] <Nasp> GetShwifty:  Just basic dn for hobby stuff
[01:45:08] <Nasp> I have a feeling i may need to switch away from l
[01:45:12] <Nasp> Cloudflare already
[01:45:18] <GetShwifty> namescheap offers free dns hosting even if your domain isn't with them
[01:47:37] <lz_> https://social.msdn.microsoft.com/Forums/vstudio/en-US/4920652a-5681-4972-a724-58c7a71ecf87/blocked-dll-from-another-computer-quotan-attempt-was-made-to-load-an-assembly-from-a-network?forum=clr
[01:47:52] <lz_> isn't there some global flag I can enable on the machine so it just works?
[01:48:13] <Nasp> GetShwifty:  I was thinking maybe one of the other big ones? https://en.wikipedia.org/wiki/List_of_managed_DNS_providers
[01:48:41] <lz_> oh there's a "maching config" file, ok
[01:48:57] <GetShwifty> Nasp my argument to that is
[01:49:06] <GetShwifty> 1/2 of those have had 1 - 10 global outaches in the past 5 years
[01:49:11] <GetShwifty> ^those listed
[01:49:19] <GetShwifty> sometimes "bigger" is not "better"
[01:49:28] <GetShwifty> oh yeah
[01:49:31] <Nasp> Sure bit i have never heard of Namescheap
[01:49:41] <Nasp> Our local danish DNS provided stopped or rather merged with another company
[01:49:42] <GetShwifty> and amazon / cloud flares / etc their SLA is shit
[01:49:50] <Nasp> They have provided free dns for 20 or so years
[01:49:52] <GetShwifty> namechepa is pretty big
[01:50:01] <Nasp> SLA as in uptime or response times
[01:50:09] <GetShwifty> both
[01:50:10] <Nasp> Because so far it seems like support is non existant
[01:50:15] <GetShwifty> hah yeah
[01:50:23] <Nasp> Although i think my domain may be locked for 60 days before i can move it again
[01:50:41] <GetShwifty> should still be able to edit the nameserver though
[01:50:52] <GetShwifty> like i siad namecheap should be able to host dns even if you're not with them
[01:51:06] <Nasp> Yeah like most are
[01:51:09] <GetShwifty> google free dns hosting bynamecheap
[01:51:13] <Nasp> But i need a registrar as well
[01:51:27] <GetShwifty> they're a decent reputable registrar too
[01:51:57] <GetShwifty> if iwasnt 2 decades entrenched with godaddy i'd actually migrate to namecheap
[02:05:30] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[02:06:46] <edcba> Nasp: if you want to have uninterrupted dns access just run your own resolver
[02:06:50] *** Joins: moose (~moose@user/moose)
[02:07:55] <edcba> oh you want to run a server
[02:08:05] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[02:08:07] <edcba> well then dunno
[02:12:23] <Nasp> Run my own nameserver?
[02:12:31] <Nasp> Sounds a bit insane
[02:12:34] <GetShwifty> lol
[02:12:57] <Nasp> Oh well seems the issue is due to dnssec
[02:13:30] <GetShwifty> sometime in the distant Future Nasp is being interviewed, "Well this whole thing started beacuse i was looking for an alternate DNS provider.. and somebody was like "why don't you run your own nameserver" and at first we thought that was a crazy idea but then i was like.. yeah hwy not run my own nameserver.. and now we're here..
[02:19:57] <GetShwifty> and the company Nasp setup is like a Space Explorarion company :-p
[02:20:20] <GetShwifty> "so how does the nameserver thing fit into your company's.. " oh it doesn't, it's just an interesting bit that jumped into my head
[02:20:35] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[02:20:57] <Nasp> It seems like most DNs providers are a bit lazy regarding DNSSEc and some just want you to disable it because it can cause issues
[02:20:58] <Nasp> yay
[02:21:05] <Nasp> Hurray for security features
[02:21:46] <GetShwifty> i think it was one of those things that they invented but iended up sort of not quite being worth the hassle?
[02:23:22] <GetShwifty> yeah 5%
[02:23:57] <GetShwifty> huge startup cost, huge ongoing maintenance osts
[02:24:52] <Nasp> I wish they would add security to phone numbers as well
[02:24:56] <Nasp> Something cert based
[02:25:17] <GetShwifty> the Caller id?
[02:25:57] <GetShwifty> i feel that caller id should be signed would cut down on probably 80-90% of caller spam
[02:26:26] <GetShwifty> but i really feel like the world lets it go because it's like drugs.. the money and information stolen as a result makes the world go 'round
[02:27:02] <Nasp> GetShwifty: yeah caller id
[02:27:10] <Nasp> It would cut down a lot of spam
[02:27:14] <GetShwifty> yup
[02:27:32] <Nasp> And then block all "insert whatever name you want here" text messages as well
[02:27:43] <GetShwifty> but from my perspective the world/telcos  doesn't really have much interest in that
[02:27:44] <Nasp> If i was an ISP i would block all text messages like that
[02:27:51] <Nasp> Nah it's too expensie for them
[02:27:53] <GetShwifty> most telcos i know have attempted to fight any attempt to make that happen
[02:28:03] <Nasp> There was some EU charter in progress where they would make the telcos fix it
[02:28:15] <Nasp> Make the spam their problem and they should just fix it
[02:28:34] <Nasp> It's just strange how we can live with any phonenumber can be faked
[02:28:40] <GetShwifty> yeah
[02:32:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7863:b6d6:f0d1:5a66) (Ping timeout: 250 seconds)
[02:34:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c103:4132:3411:10c1)
[02:34:34] <brianonymous> nap time yet?
[02:34:59] <GetShwifty> yes!
[02:35:04] <GetShwifty> you came just in time
[02:35:05] <brianonymous> well hot damn
[02:35:17] <GetShwifty> local functions are so god damn useful when you need them
[02:38:59] <GetShwifty> pretty sure my dog has more fun trying to bury his food in his dog bed by covering it up with his towel / toys than he does actually eating it lol
[02:47:48] <brianonymous> our cats like to hide shit under the slip rugs in the kitchen
[02:48:06] <GetShwifty> nice
[02:48:20] <brianonymous> its usually toys tho, not foods
[02:48:33] <brianonymous> one of the bastards like to put springs in my shoes
[02:48:39] <GetShwifty> toys prolly go 'ouch' a bit more if unsuspectingly step on them
[02:49:13] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[02:49:58] <GetShwifty> i mixed a NLP linq query with a Functional linq query
[02:50:16] <brianonymous> nlp? natural lang?
[02:50:22] <GetShwifty> yeah
[02:50:32] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:50:40] <brianonymous> whats that look like
[02:51:04] <GetShwifty> .where(..).Groupby(...).Where(...)_.ToDictionary(..... (from .... n in .. from o in .... ))
[02:51:12] <brianonymous> oooh
[02:51:50] <brianonymous> i didnt realize the inner bits where called nlp
[02:51:52] *** Joins: constxd (~brad@142.134.79.191)
[02:52:33] <GetShwifty> not sure what the official phrasing is. i jsut call it natural language acuse its fairly natural
[02:52:46] <brianonymous> yeah, i dont either
[02:52:57] <brianonymous> id just call it the other linq
[02:53:05] <GetShwifty> i guess they officicaly call it Query syntax and method syntax are semantically identical, but many people find query syntax simpler and easier to read.
[02:53:10] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[02:53:46] *** Joins: jamea22 (~jamea@201.77.110.253)
[02:54:05] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 256 seconds)
[02:54:07] <merced> yeah i'm not a fan of nlp
[02:54:13] <GetShwifty> i use both
[02:54:21] <GetShwifty> i find myself now using method syntax a lot
[02:54:21] <merced> but in the same stroke i'm not much a fan of sql
[02:54:28] <GetShwifty> but there are some things that are just easier to describe in query syntax
[02:54:35] <GetShwifty> like doing inclusions/exclusions etc
[02:55:14] <GetShwifty> not even really sure what the method syntax equiv of that is  (from n in item where !(from o in PrimaryDuplicateApps select o).Contains(n) select n)
[02:55:39] <merced> if i don't know how to describe it in linq i just write the logic out manually with loops and let resharper fix it
[02:55:41] <merced> ol
[02:55:43] <merced> lol*
[02:56:09] <GetShwifty> You like to live on the edge don't you? :-p
[02:56:28] <merced> ugh you should see how many problems i have with the Java streams API
[02:56:31] <merced> such obtuse language
[02:56:44] <merced> i still cant figure out flatMap in a way that's easier than just writing a fuckin loop
[02:56:55] <merced> i just want my SelectMany goddamnit
[02:57:02] <GetShwifty> hah wow no select many
[02:57:02] <GetShwifty> jeez
[02:57:05] <GetShwifty> failmuch
[02:57:21] <merced> yeah, its a huge improvement over the last time i did java professionally tho
[02:57:56] <merced> that all said i'm playing with latest version of C# finally in my free time
[02:58:00] <GetShwifty> i've had the luck of not touching java dev in over a decade
[02:58:11] <merced> i'm loving some of the synactic sugar
[02:58:20] <GetShwifty> yeah
[02:58:30] <merced> the nullable stuff is annoying and confusing though
[02:58:35] <GetShwifty> oh i hate that
[02:58:41] <GetShwifty> i still to this fucking day think they got it ass bacwkwards
[02:58:41] <merced> fucking objects have always been nullable
[02:58:46] <merced> why do i need nullable references that doesnt make sense
[02:58:50] <GetShwifty> I DONT WANT TO FUCKING MICRO MANAGE EVERY FUCKING PROPERTY OR PARAMETER
[02:59:00] <merced> lmfao yeah exactly
[02:59:07] <GetShwifty> .000001% of the time i WANT TO MAKE SURE something IS NOT NULL
[02:59:21] <GetShwifty> the other 99.999999 % of the time I DONT fucking care
[02:59:38] <GetShwifty> every single project i basically disable all of the nullable shit
[03:00:07] <GetShwifty> i also disable using directives. I THOUGHT that was going to be a cool feature i'd use but right now , the way they did their defaults i don't feel in control and i'd just rather keep managing using directives the way i do
[03:00:34] <GetShwifty> from best i can tell there is no visibility , possibly little to no actual control
[03:00:45] <GetShwifty> it's a feature i would tell them to go back to the drawing board with
[03:01:22] <GetShwifty> possibly 25% giving me actual control the rest 75% giving me actual ease of access to visibility without having to hunt 8 billion google results to figure out 'how to di see what's being included, control, what's bieng included, set defautls, , etc
[03:01:28] <merced> _sometimes_ i have a disposable that i don't want to indent for
[03:01:40] <merced> but that's been.. like, once
[03:01:47] <GetShwifty> you use the new using syntax?
[03:01:53] <merced> fuck yeah
[03:01:53] <GetShwifty> that's kind of  convenient
[03:02:01] <GetShwifty> dont use using too much but when do its nice
[03:02:11] <merced> esp with dictionarys n stuff private ConcurrentDictionary<UUID, OwnedObject> _ownedObjects = new();
[03:02:20] <GetShwifty> and ^ syntax while bugging me beause its 1-based index instead of 0-based
[03:02:39] <GetShwifty> oh the new default syntax
[03:02:43] <GetShwifty> well constructor syntax
[03:02:52] <merced> OH
[03:02:56] <merced> "new _using_ syntax"
[03:02:58] <merced> no, i hate it
[03:03:00] <GetShwifty> i was meaning replacing using (var INeedtoBeDisposed = new STreamWriter() ) { ... }
[03:03:10] <GetShwifty> with using var INeedToBeDisposed = ...
[03:03:27] <GetShwifty> then it auto magically disposes once deemed of out of scope
[03:04:06] <merced> yeah like the one time i like it is uh
[03:04:18] <merced> using var optimer = new MethodTimer();
[03:04:31] <GetShwifty> yeah, don't use using much but its ocnvenient
[03:04:46] <GetShwifty> msainly cause you often times end up having to next multiple usings when you do use it lol
[03:05:45] <GetShwifty> puppers keeps poking my leg with his wet nose cause he wants to go outside NOWWW and not in 10 minutes like i keep telling him
[03:05:59] <merced> awwww
[03:06:13] <merced> my doggo just sits on the couch and stares at me until i let her out or feed her
[03:06:15] <merced> mostly feed her
[03:06:20] <GetShwifty> lol
[03:06:37] <GetShwifty> he'd love it if my setup was in the living room and he could reign supreme from the couch
[03:20:16] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[03:25:44] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (Quit: ERR_NOWITTYQUITMESSAGE)
[03:33:02] <lz_> to whoever implemented this: FUCK YOU https://i.imgur.com/o2fmskV.png
[03:37:41] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[03:39:16] *** Joins: ASUS (~ASUS@user/ASUS)
[03:39:51] <ASUS> What is an "event" keyword and a "delegate" keyword
[03:40:10] <lz_> seriously wtf https://answers.microsoft.com/en-us/windows/forum/all/no-permission-to-disable-a-task-in-task-scheduler/4ec2c460-7c2f-4593-b84f-c9b1687ae797
[03:40:27] <lz_> don't reboot my computer while I'm doing stuff with it for fuck sake
[03:42:40] <Suchiman> ASUS: what you mean, they're keywords :P
[03:44:37] *** Quits: jamea22 (~jamea@201.77.110.253) (Ping timeout: 240 seconds)
[03:45:39] *** Joins: jamea (~jamea@201.77.110.253)
[03:49:22] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[03:50:39] <lz_> preventing me from pausing updates for 7 days just makes me disable updates completely, good job
[03:54:28] <lz_> there has to be an engineer at microsoft whose sole job is to find more and more ways to fuck the user experience
[03:57:07] <lz_> it's a fresh install and windows waited like 3 hours before telling me it really wanted to update, only after I started a 20 hour job of course
[04:10:04] <GetShwifty> lmao
[04:10:32] <GetShwifty> lz_:  when you run windows 10 and greater on your hardware
[04:10:42] <GetShwifty> Your hardware automatically becomes Microsoft and they lease it back to you
[04:10:49] <GetShwifty> their EULA literallyh tells you
[04:11:03] <GetShwifty> that they can at their discretion dictate WHAT software AND Hardware you use
[04:11:30] <GetShwifty> and they have demonstrrated this with global uninstallation of targeted software that affected decently noticeable sized people aka more than 1k people
[04:11:40] <GetShwifty> by uniunstalliong various power tools that (they deemed they didn't like?)
[04:12:04] <GetShwifty> i think they apologized and said it was accidental but it was very targeted becaues they chose  very specific piece of software
[04:14:53] <GetShwifty> Windows 10 should never have been allowed (by way of mass adoption) in the same way IOS should not haver been allowed. IT was a nod to "super walled gardens of h/w and software" and opened the path to mass dictation of what software you u se, what people are allowed to make money with the platform, how, etc
[04:15:27] <GetShwifty> in ios case it got to the point where it's now getting some significant lawsuits over some of the things (like the payment providers)
[04:15:43] <merced> gross why bother with win11
[04:15:46] <GetShwifty> in windows 10 case ms is just martching towards the same playground iOS is in with MS Pluton and Windows 11
[04:16:11] <GetShwifty> merced:  because it's everything that failed in Windows X + mandatory TPM for future walled in protection :)
[04:16:56] <GetShwifty> honestly amusingly enough the bigest thing that is a 'showstopper' for me for windows 11 is the taskbar and how they simplified it into a "this is how 80% of the people use it and we are ripping out all of the features that the other 20% may have used that have been in windows for 2+ decades
[04:17:12] <GetShwifty> that's a "well when the time comes i"ll use windows 10, but not 11"
[04:17:33] <GetShwifty> sadly nobody seems to be creating a proper taskbar replacement that replicates  the functionality that i've seen to date
[04:23:53] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[04:24:25] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:41] <GetShwifty> oh merced and the reason for Windows 11 is basically because that was the only way they could mysteriously change the requirement to mandatory TPM and for Home, mandatory Internet connection with forced MS Account and connect to the internet i believe once every 30 days / When setting up Windows 11
[04:31:25] <GetShwifty> andthe TPM they are actually looking for/aiming is not the current state of TPM but the one that is shipping with all future computer Intel / AMD processors
[04:31:37] <GetShwifty> which is basically the equiv of TPM 2.0
[04:31:48] <GetShwifty> with some hidden interesting  little gems in there
[04:32:18] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 260 seconds)
[04:40:00] <merced> yeah, literally nothing about win11 is appealing in the least to me
[04:40:26] <merced> i mean TPM is kinda cool in theory
[04:40:32] <merced> not really sure what they'd get out of it
[04:41:39] <merced> well i guess, are they planning to lock down UEFI?
[04:55:29] <merced> GetShwifty: https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/file-scoped-namespaces this is cool though
[04:56:47] *** Quits: alguien_ (~alguien@user/alguien) (Ping timeout: 250 seconds)
[04:59:04] *** Joins: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net)
[04:59:18] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Read error: Connection reset by peer)
[05:23:34] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[05:26:11] <vim_fans> hi，there. I just encountered a problem. I create a model which is exactly as same as the interface's parameters. one of the parameters is readonly which is conflict with C# key words. how could i to resolve this problem?
[05:30:14] <vim_fans> never mind. I already found the solution  :D
[05:30:45] <vim_fans> JsonProperty("readonly") would be helped in my case
[05:33:13] <merced> ^
[05:34:32] <GetShwifty> i honestly tried it for a second
[05:34:36] <GetShwifty> and i did not really like it
[05:34:41] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:35:07] <GetShwifty> just seemed kind of weird and pointless
[05:35:10] <Suchiman> vim_fans: the alternative is naming the property @readonly, the @ escapes the keyword
[05:35:53] <vim_fans> Suchiman: thank you very much ..
[05:37:00] <GetShwifty> is externa alias the stuff to make pinvoke work?
[05:37:15] <GetShwifty> well to define pinvoke calls
[05:37:29] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[05:40:14] <Suchiman> GetShwifty: no extern alias allows you to resolve namespace / type conflicts by assemblies
[05:40:25] <GetShwifty> ahh
[05:40:37] <Suchiman> e.g. if A.dll and B.dll both contain Name.Type then you can extern alias them and use A::Name.Type and B::Name.Type
[05:40:53] <GetShwifty> i thinkgt you did that with using statement
[05:41:05] <GetShwifty> or is "extern" just code for using using like that?
[05:41:13] <jonp> `extern alias Foo;`
[05:41:15] <GetShwifty> *code/spec
[05:41:16] <Suchiman> by default everything is in global::Name.Type and Name.Type is just a shortcut for global::Name.Type
[05:41:20] <jonp> so a different context for `extern`
[05:41:23] <GetShwifty> yeah
[05:43:56] <vim_fans> what does + symbol before people's name mean like +Sunchiman?
[05:45:23] <jonp> "op", or "op-like" permissions
[05:45:27] <Suchiman> vim_fans: *achem* it means IRC mode, + like voiced
[05:45:37] <Suchiman> Sunchi... pah :P xD
[05:45:47] <jonp> it means "do not anger the admin" ;-)
[05:46:48] <GetShwifty> way to flex irc ban around low-key like it's 1990 and this is efnet lol
[05:47:56] <jonp> 'cause this is always a fun read: http://www.bofharchive.com
[05:55:06] *** Quits: malt (~malt@user/malt) (Quit: WeeChat 2.8)
[05:56:18] *** Joins: malt (~malt@user/malt)
[06:01:25] <mtj> hi peeps, can anyone suggest how to write an array of bytes to a file, on this example -> https://dotnetfiddle.net/2hSWoo
[06:01:49] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c103:4132:3411:10c1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:14] <mtj> ^ ..i have an 'array of strings' working ok, but can't get an 'array of bytes'
[06:04:30] <jonp> mtj: so you want the same "byte array" as you'd get if you took ^^ and then did `File.ReadAllBytes(filePath)`?
[06:06:54] <Slade> https://usercontent.irccloud-cdn.com/file/TmOpYSP7/image.png
[06:06:54] <Slade>  huh, people go through 2.8 miles of toilet paper a year
[06:07:01] <mtj> jonp: i want to write 'byte[] arr = { 0x1, 0x2, 0x3 }' to a file
[06:07:11] <Slade> https://usercontent.irccloud-cdn.com/file/TmOpYSP7/image.png
[06:07:37] <jonp> mtj: File.WriteAllBytes()?
[06:14:37] *** Quits: Xenoprimate_Surf (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 240 seconds)
[06:22:31] <mtj> jonp: cheers, i think thats it ❤️
[06:23:35] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:23:47] <khanred>  o/
[06:24:35] <bkool> \o/
[06:26:28] <GetShwifty> Slade get a bidet
[06:30:40] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:31:00] *** Joins: k8yun (~k8yun@user/k8yun)
[06:31:06] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[06:43:26] <irwiss> to be fair square feet is probably the weirdest toilet paper measure possible, unless someone manages to somehow wipe in an even rectangle-ish pattern
[06:54:47] <bkool> so i found out today someone was building an internal application in net 5 blazor and we'll deploying it. (5 cause 6 wasn't out at the time)
[06:55:08] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:56:24] <GetShwifty> fun
[06:56:41] <GetShwifty> I'll make a note to come back in 5 years and ask you guys how that went lmao
[06:56:46] <bkool> I haven't seen any of the code yet.
[06:57:00] <bkool> it's a guy that doesn't write web code and it's internal application
[06:57:05] <bkool> so not going to fight it.
[06:57:08] <GetShwifty> see if you guys will be crying the cry of the abandoned WPF, Silverlight, WP7, WP8, Pre UWP , UWP and Post UWP
[06:57:10] <bkool> kinda curious myself.
[06:57:22] <GetShwifty> yeah honestly thats 'about the only people i actually ever see using it bkool
[06:57:33] <bkool> it's wasm right?
[06:57:38] <GetShwifty> it can be
[06:57:46] <bkool> i mean that does appear to be the future
[06:58:01] <GetShwifty> it's 'so many things' it's a confused transgendered teenager going through puberty
[06:58:03] <bkool> it's not like blazor is the only compile to wasm framework.
[06:58:08] <bkool> heh
[06:58:14] <GetShwifty> i honestly don't think wasm is really going anywhere mainstream
[06:58:27] <GetShwifty> iut's been sitting around for
[06:58:27] <bkool> it think it'll be 3-5 years.
[06:58:31] <bkool> if at all.
[06:58:58] <GetShwifty> 5~-7ish years~
[06:59:04] <bkool> some of the perf increases are really good over js
[06:59:22] <GetShwifty> yeah but the problem is few people care about that for 99% of what we use the web for
[06:59:36] <bkool> so i see video applications and other web applications taking advantage of it.
[06:59:37] <GetShwifty> node/ js / html/css is the near lowest level of barrier entry that you can get to
[07:00:04] <GetShwifty> webasm is more or less nearly one of the highest that you can get
[07:00:22] <GetShwifty> till it's 'transparent' and seamless to the average js-er
[07:00:42] <GetShwifty> what chrome does with transpiling js to an asm/il in the browser is good enough for most things
[07:01:21] <GetShwifty> you could argue there might be a future for it in games , but let's face it ms is going to force you to build games in THEIR platform
[07:01:25] <bkool> wasm is about letting you write in whatever language and getting into into a performant package that runs on any browser and faster than js.
[07:01:26] <GetShwifty> IOS is gonna force you to build games in THEIR platform
[07:01:36] <GetShwifty> Android is going to force you to build games in THEIR platform
[07:01:53] <GetShwifty> and webasm isn't any of those 3 preferred platforms when you're pushing apps to their stores  ;)
[07:01:55] <bkool> so that's a big upside. not saying it's going to be a huge thing overnight. but it could have a big impact.
[07:02:08] <GetShwifty> bkool we've always had that
[07:02:14] <GetShwifty> everybody chose JS for everything, including server side lmao
[07:02:22] <GetShwifty> and in case you've not tried webasm
[07:02:27] <GetShwifty> it's not really about letting you 'write in wahtever language' lol
[07:03:03] <GetShwifty> what ms tried to do with blazor is probably arguably the lowest barrier that i've seen anybody turn webasm into something usable
[07:03:16] <GetShwifty> but you try to intgerface that with ANYTHING else in the world and you will faceplant
[07:03:39] <GetShwifty> which is why i don't think that blazor or webasm really has much place in the  'mainstream' world
[07:03:44] <GetShwifty> more a 'niche' type of thing
[07:04:06] <GetShwifty> and todate neither have debuted anything that really answers the 'why can't i be mainstream'
[07:04:24] <bkool> i've seen python -> wasm and plenty of other transpilers not that i'm saying that get a lot of use.
[07:04:38] <GetShwifty> i have too. actually try DOING something with them
[07:04:57] <GetShwifty> it's a bit of a learning curve / jumping through hoops
[07:05:24] <GetShwifty> like i said, i hnd it to ms for making it probably the easiest way to go from proprietary syntax (razor) and code that (you BETTEr know) C# to webasm in the click of a button
[07:05:25] <bkool> i haven't. so you're probably right. i think if you need perf boost over js for some applications it'll have it's uses for now.
[07:05:32] <GetShwifty> but
[07:05:37] <GetShwifty> nobody knows razor syntax
[07:06:01] <GetShwifty> the people you hire to build your UX when you have a "team" and not a a few backend devs doing interfaces for internal tools DO NOT know C#
[07:06:21] <GetShwifty> so you're doing a 1% of 10% of .
[07:06:43] <GetShwifty> that imho classifies it as 'niche'
[07:06:59] <GetShwifty> e.g. internal tools that you work on, if you know razor and C#. bam. perfect match to get something out
[07:07:18] <GetShwifty> if you're hiring a team of UX people who are going to interact with marketing / design... guess what..
[07:07:54] <GetShwifty> they'll be doing 'modern stack development' which is node/babel/js/css/html/scss/sass , etc
[07:10:41] <bkool> oh, not saying i'm going to go all in on blazor. definitely not allowing it in our prod apps. but i was like. hmm...well, let's see how this works in our internal app.
[07:11:00] <bkool> cause they already built it.
[07:12:23] <GetShwifty> i somehow have 20+ notepad instnaces open lmao
[07:13:30] *** Joins: k8yun_ (~k8yun@user/k8yun)
[07:13:57] <bkool> and not notepad++ !?
[07:14:12] <GetShwifty> notepad++ is a horrible "scratch" pad
[07:14:18] <bkool> i disagree
[07:14:33] <GetShwifty> a scratch pad needs to havea small foot print
[07:14:54] <GetShwifty> notepad++ when small 1/5 of its ux is devoted to tabs/toolbars that you don't need for a quick dirty scratchpad
[07:15:12] <GetShwifty> even in multiple instance  it opens up all the prior open documents in the new instance
[07:15:17] <bkool> i want my syntax formatted for when i need to have "scratch" js
[07:15:22] <bkool> or scratch xml
[07:15:31] <GetShwifty> this is more shit that doesnt need syntax
[07:15:43] <Slade> GetShwifty: you running 800x600 or something?
[07:15:52] <GetShwifty> no
[07:16:15] <GetShwifty> but you want a scratch pad/ sticky note to be small so you can tear it off somewhere visible  but not cover everything up
[07:16:48] <GetShwifty> and yes i'm aware using notepad as a version of sticky notes is not great but also most instances of sticky note software make it hard to cleanup , etc
[07:17:11] <GetShwifty> they also generally try tooo hard to "stay on top' when you don't need them but dont want to get rid of them in case you ened them again
[07:17:14] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:18:16] <Slade> sticky notes built into windows
[07:18:41] <bkool> yeah, i was about to say that. windows has sticky notes. notepad++ is not that use case.
[07:18:42] <GetShwifty> nope
[07:18:46] <GetShwifty> well maybe
[07:18:49] <GetShwifty> no
[07:18:53] <GetShwifty> cause one instance of sticky notes
[07:18:57] <GetShwifty> brings all sticky notes to the top
[07:19:03] <GetShwifty> shitty ux
[07:19:42] <GetShwifty> so 5 sticky notes open, one taskbar icon. click it all 5 come to the surface
[07:19:53] <GetShwifty> a) i knew which one i wanted and wantd to click ONLY that one
[07:22:22] <GetShwifty> pupper woke up.. without getting up. finds a kibble within range without moving,  munches on  it and goes back to sleep
[07:24:48] <bkool> lol. adorable.
[07:34:13] <bkool> GetShwifty: there should be a better sticky notes application out there if the windows one isn't good.
[07:34:54] <GetShwifty> really it's l,ess a matter of "better" and more just something that meets everybody's differences
[07:35:28] <GetShwifty> and i honestly think sticky notes is just one of those way too varying use cases
[07:37:39] <GetShwifty> think if i would improve on the one in windows i'd get rid of the one taskbar for all notes. so you can individualy click each  one without bringing THEM ALL to the surface, make the icons more visible, get rid of the annoying / distrubing cancel prompt and make it so when you close it you can recover the contents for an X # of days threshold you have configured. so you can see all past notes, when you closed them, etc
[07:38:15] <GetShwifty> oh and a systray icon that lets you get access to manage / etc
[07:38:48] <mtj> folks, whats the best way to write a 'List of bytes' to a file?
[07:39:02] <mtj> var list = new List<byte>() { 0x031, 0x32, 0x33 };
[07:39:31] <GetShwifty> File.WriteAllBytes
[07:39:48] <GetShwifty> https://www.geeksforgeeks.org/file-writeallbytes-method-in-csharp-with-examples/
[07:41:44] <GetShwifty> hmm service hub keeps dying with an OOM error and i've got 10GB that it's not chewed up
[07:42:03] <GetShwifty> oh its using up 3.2GB and is a 32-bit process
[07:42:34] <mtj> GetShwifty: thanks.. but my problem is that File.WriteAllBytes want an array of bytes, not a List of bytes
[07:43:00] <GetShwifty> either change it to new Byte[] { } or add .ToArray() after the } of your existing code
[07:43:11] <GetShwifty> and you may need to import System.Linq iirc
[07:43:14] <GetShwifty> for .ToArray
[07:43:22] <GetShwifty> (if it's not already imported)
[07:48:21] <mtj> GetShwifty: merci -  .ToArray did the trick :)
[07:48:36] <GetShwifty> np
[07:52:31] *** Quits: Kog (~Kog@about/csharp/kog) (Read error: Connection reset by peer)
[07:54:47] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[07:56:17] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[08:04:00] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[08:11:05] <khanred> This iPad Pro is such a dumb piece of shit
[08:11:51] <GetShwifty> how so?
[08:12:01] <khanred> IOS
[08:12:24] <GetShwifty> yeah not a fan of a lot of the design / interaction decisions made in ios
[08:12:43] <GetShwifty> onestly the only nod i'll give them is the h/w seems pretty pro/high quality
[08:12:56] <GetShwifty> which it sort of better be given you basically need a 2nd mortgage to get one
[08:12:59] <khanred> I used to be an iOS user but I switched to Android a few years back and now iOS just feels antiquated
[08:13:05] <GetShwifty> lol
[08:28:59] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[08:30:45] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[08:33:28] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 250 seconds)
[08:46:57] <bkool> Android and Apple feel so feature compatible outside of small diffs. although i hear Apple notifications are still a mess compared to Android.
[08:48:07] <bkool> it wasn't the case in like 2014-2015 but Android added good iPhone features and iPhone implemented ideas from Android.
[08:58:49] <bkool> I'm getting an Android update tomorrow or the next day and I'm dreading it.
[08:59:13] <GetShwifty> honestly for me its the ux/workflow/interactions
[08:59:32] <GetShwifty> android isn't perfect , i actually liked a lot of what samsung did around kitkat /4 era
[08:59:36] <bkool> Can I just not get the upgrade. i don't want any upgrades or new features outside of security updates
[08:59:39] <GetShwifty> and ios is just plain dumdum
[08:59:56] <GetShwifty> lol bkool no, google needs to give you the most 'personalized os' :-D
[09:00:14] <GetShwifty> (263 No Expectation Setup of 294 (89.46 %))
[09:00:15] <GetShwifty> feels good
[09:01:07] <bkool> Android 5 on my galaxy S5 was the worst upgrade i ever experienced almost made my phone unusable for 6 months. i'm like never push updates to my phone unless it's security i don't care.
[09:01:36] <bkool> btw i also had other non-tech people tell me that too.
[09:01:45] <GetShwifty> i never took 5 :D
[09:01:52] <GetShwifty> but i hated what i saw onother peoples phones
[09:02:03] <bkool> android 4 was so great
[09:02:04] <GetShwifty> im on pixel 4a 5g with android 11
[09:02:15] <GetShwifty> not really the hugest fan of google's apps
[09:02:20] <bkool> and 5 ruined everything.
[09:02:44] <GetShwifty> if i knew somebody who could help me root and install lineage / aosp i would
[09:02:56] <bkool> and even Samsung's like oh shit we gotta totally apply some changes on top of what Google just did.
[09:03:32] <GetShwifty> i only didnt go with samsung this time cause i feel like samsung has gotten a little evil
[09:03:35] <bkool> but also i'm like vanilla Android is awful. there's a reason Samsung and other put stuff on top of it it's bad.
[09:03:37] <GetShwifty> and more 'stayu in our sandbox'
[09:08:32] <bkool> Android reached its feature completeness IMO in like 2015 with like a few additions to privacy permissions or perms control that it borrowed from Appple
[09:09:33] <GetShwifty> now it's just about personalizing it which is basically spying on you for fme little value add except to let google know more about you
[09:09:34] <GetShwifty> lol
[09:09:44] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[09:09:57] *** Joins: bomb (~bomb@user/bomb)
[09:12:02] <GetShwifty> Google has basically become a vampire. Every time it prompts you to 'try this new feature' it's promprting you because whatever it's planning on doing is something that impacts your privacy in a way that they have to prove to the court and say "well they opted in to use this feature thus we have rights to all of this additional info we collected'
[09:12:12] <GetShwifty> aka the vampire needs to be invited INTo your house
[09:12:35] <bomb> I have nothing to hide.
[09:24:53] <MatthiasVance> Is there a good tool to validate a JSON payload against a Avro schema? And what might even help more .. generate sample data from an Avro schema?
[09:25:54] <Nasp> OK i can not recommend moving to cloudflare
[09:26:00] <Nasp> Support is non existant
[09:26:07] <Nasp> "Can you share a screenshot of your dns problems"
[09:26:09] <Nasp> Ehm, what
[09:27:22] <MatthiasVance> Can you?
[09:28:23] <Nasp> Should i show him a blank webpage or a picture of a console window that nothing can be resolved?
[09:31:49] <MatthiasVance> xD
[09:33:38] <Nasp> I hate generic support messages
[09:34:50] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[09:35:32] <ASUS> I just pushed into the deep end today at work
[09:35:40] <ASUS> I had to complete a method by myself
[09:35:56] <ASUS> I finished it, although it was a bit hacky and cheating
[09:37:03] <bomb> no need to worry privacy unless you're sexting your friends wife or watching elephant porn on your phone
[09:41:22] <Nasp> complete an entire method by yourself?
[09:51:40] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[09:59:31] *** Quits: ASUS (~ASUS@user/ASUS) (Read error: Connection reset by peer)
[10:03:46] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c24:b4c4:1785:5632)
[10:08:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c24:b4c4:1785:5632) (Ping timeout: 250 seconds)
[10:18:06] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[10:28:12] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[10:28:25] <ap5> Why is the first thing i read this morning, "elephant porn"
[10:30:49] <Nasp> Ask bomb and is drugs
[10:35:01] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[10:55:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:57:57] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[11:01:35] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:03:28] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:116f:8251:b1b1:3325)
[11:03:58] <Nasp> MatthiasVance:  I figured ut what to do, i took a screenshot of the first support request i sent explaining the details :D
[11:07:39] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[11:09:03] <Nasp> I wonder if these are specific domain rules or just cloudflare rules
[11:09:25] <Nasp> That there's a 2 month grace period between moving your domain
[11:09:55] <Nasp> Hmm ok it's a ICANN thing so it applies to everyone, damn
[11:11:14] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:19:08] <ap5> Nasp, moving how?
[11:20:21] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:24:52] <Nasp> ap5:  It's locked the next 2 months before i can move it again
[11:27:07] <ap5> Oh. By moving, you mean NS?
[11:27:27] <Nasp> Registrar
[11:27:40] <Nasp> But since my current registrar can't manage my domain it means two months where it doesnt work at all
[11:32:22] *** Joins: ASUS (~ASUS@user/ASUS)
[11:32:26] *** Quits: ASUS (~ASUS@user/ASUS) (Client Quit)
[11:33:07] <ap5> Nasp, oh :)
[11:33:40] <MatthiasVance> Nasp: Why can't they manage your domain?
[11:33:58] *** Joins: ASUS (~ASUS@user/ASUS)
[11:34:07] <ap5> MatthiasVance, do many letters xD
[11:34:12] <MatthiasVance> Also Cloudflare is amazing, I host everything there. Even do some CNAME flattening :D
[11:34:14] <ap5> nvarchar(52) in db
[11:34:17] <MatthiasVance> xD
[11:34:58] <ap5> MatthiasVance, i also use CF for everything. The lattening is really nice. Take the load of the initial "redirect", so you get real load distribution
[11:35:21] <ASUS> Is jetbrains rider better than visual studio
[11:35:29] <MatthiasVance> It's similar
[11:35:30] <ASUS> Or just.... different
[11:35:32] <MatthiasVance> Yes
[11:35:53] <ASUS> I convinced my boss to let me switch from Vs2017 to rider
[11:35:57] <ASUS> Is that a bad move
[11:35:58] <ap5> ASUS, i use Rider, and it isn't that much better (i have used vanilla VS for 10 years - no resharper)
[11:36:03] <ap5> No
[11:36:14] <MatthiasVance> ASUS: No it's not a bad move, unless you need cutting-edge support for stuff
[11:36:22] *** Joins: gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:69ce:4b02:8735:1022)
[11:36:25] <ASUS> He says we won't buy vs2022 until 2024
[11:36:31] <MatthiasVance> Wow okay why not?
[11:36:37] <ASUS> Tightass company
[11:36:37] <MatthiasVance> You can do a monthly subscription
[11:36:56] <ap5> ASUS, like: you have a sql string, and you get hilight on that and if you connect rider to the database, you also get completion
[11:37:05] <ASUS> Oh
[11:37:26] <ap5> You need extensions for that in VS, and i actually doesn't know if that gives you completion
[11:37:43] <ASUS> Is the AI completion worth it
[11:37:45] <ASUS> In Vs
[11:38:07] <ap5> Please note that you the SELECT needs to be on the same line as the intialitaion etc. Fx: string sql="SELECT .... " etc, but it is quite nice
[11:38:09] <jmer> the AI Completion is pissing me off
[11:38:12] <ap5> No
[11:38:15] <ap5> Turn that off
[11:38:28] <ASUS> Ok
[11:38:31] <ap5> Seventeen, nineteen,tenteen
[11:38:33] <ASUS> Sorry I'm a big noob
[11:38:34] <ap5> xD
[11:38:53] <ASUS> Today was the first time I ever wrote code in a job that was usefuk
[11:38:57] <ASUS> Useful
[11:39:02] <ap5> :O Congrats :)
[11:39:22] <ap5> I have been in this for 15 years. I still need to do that
[11:39:36] <ASUS> I basically just created a lot of directories and dot files
[11:39:49] <ASUS> Using xml files as a schema
[11:40:01] <jmer> oh god...
[11:40:05] <jmer> they wanted to present new hires
[11:40:14] <jmer> and it's a powerpoint with a table view of all new positions
[11:40:18] <jmer> and he's reading them up...
[11:40:39] <jmer> one by agonizing one
[11:41:40] <ASUS> I'm getting paid $40AUD/hr as an entry dev job. Is that ok?
[11:41:56] <ASUS> This is Australia
[11:42:15] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:42:30] <ASUS> Dollar here isn't as strong as usa
[11:42:37] <jmer> ASUS: I know an IT supporter, newly minted from school,, that is getting paid the same
[11:42:50] <ASUS> Which country
[11:42:57] <jmer> But comparing salaries across borders is hard
[11:42:57] <ASUS> It support?
[11:42:58] <jmer> Denmark
[11:43:02] <ASUS> Oh
[11:43:07] <ASUS> But you have advantages
[11:43:30] <ASUS> Like free everything
[11:43:42] <jmer> let's not go there again xD
[11:43:50] <ASUS> Prison is Nordic countries is a paradise
[11:43:57] <jmer> ASUS: Can you live for that wage in AU?
[11:43:58] <ASUS> Inge:
[11:44:10] <ASUS> Um
[11:44:13] <ASUS> Yes
[11:44:58] <jmer> I am getting worried... there's a "SCALE AGILE" point in the agenda for this "state of the union" meeting :/
[11:45:20] <biberu> jmer: release the trains /o/
[11:45:24] <ASUS> Before I had this job I was living below minimum wage
[11:45:53] <ASUS> So yes I can live on this dev salary
[11:46:07] <jmer> biberu: you know.. I've experienced a couple of software processes... I've given all of them a chance... but I just can't see the damn point with "SAFe"
[11:46:30] <Inge> jmer: BUT IS IT WEBSCALE??
[11:46:31] <jmer> ASUS: I was more thinking "in general"
[11:46:33] <ASUS> I'm very good at living on almost no money at all, rent a cheap studio, cook all my food
[11:46:43] <jmer> Inge: We don't have mongoDB in our stack so that's a no
[11:46:45] <ASUS> Use public transport
[11:47:00] <jmer> ASUS: cooking all your food is the norm here xD
[11:47:28] <ASUS> In Australia and USA many people buy all their meals
[11:47:41] <ASUS> Australia and USA are culturally close
[11:47:49] <jmer> ASUS: THat would be extremely expensive here.
[11:48:23] <ASUS> Yeah
[11:48:28] <ASUS> I've never been to europe
[11:48:49] <ASUS> I know a lefty guy who married a girl from Denmark
[11:49:01] <biberu> it'll just be confusing, the moon appears upside down from here
[11:49:02] <ASUS> He married her so she could get aussie citizenship
[11:49:05] <jmer> yesterdat we had burgers and fries (good ones) and it cost us 45 AUD
[11:49:19] <ASUS> They are both anarchist communists
[11:49:23] <ASUS> :)
[11:50:12] <ASUS> Anders hedjelberg is danish
[11:50:17] <ASUS> And a leftie
[11:50:18] <ASUS> Hehe
[11:50:29] <ASUS> He hates trump supporters
[11:50:36] <jmer> So is Bjarne Stoustrup (at least danish, not sure about his political views)
[11:50:54] <jmer> ... let's not talk about Trump, I'm in a good mood today.
[11:50:59] <ASUS> Yeah
[11:51:11] <ASUS> Welll I'm ecstatic I was productive at work
[11:51:18] <ASUS> I'm actually sleeping at night
[11:51:32] <ASUS> Before I would play games all night
[11:51:53] <ASUS> Sleep alll day
[11:52:04] <jmer> playing games all night is one of my favourite activities
[11:52:17] <ASUS> I can't cope at work the next day
[11:52:27] <ASUS> If I game all night
[11:52:39] <jmer> well... I don't do it before a work day xD
[11:52:45] <ASUS> Oh
[11:52:56] <jmer> 7 hours of sleep is a minimum for me
[11:52:59] <jmer> 8-9 is better
[11:53:02] <ASUS> Yeah
[11:53:26] <ASUS> In got to bed anywhere from 9-11pm and wake at 7am
[11:53:28] <jmer> I can get by on 5-6 but then I will be miserable and grumpy
[11:53:33] <ASUS> Yeah
[11:54:11] <ASUS> I wonder if switching from vs2017 to rider will be a downgrade
[11:54:11] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:54:19] <ASUS> I just read rider is good
[11:54:48] <jmer> depends on your needs
[11:55:04] <ASUS> Just old fashioned dotnet
[11:55:05] <jmer> I tried Rider, it was fine enough until I had to modify an exisiting ressource file
[11:55:06] <biberu> does 2017 even support 5/6?
[11:55:23] <ASUS> The code I'm using is .Net framework
[11:55:27] <jmer> in other words; for old crappy shit I had to use VS
[11:55:46] <ASUS> Does rider support .Net framework?
[11:55:59] <jmer> I used it for .net framework code
[11:56:03] <jmer> but that's...
[11:56:11] <jmer> damn... that'ssomething like 3-4 years ago now xD
[11:56:17] *** Quits: ASUS (~ASUS@user/ASUS) (Remote host closed the connection)
[12:04:09] *** Joins: MaNa2k (~MaNa2k@109.247.79.178)
[12:04:16] <MaNa2k> yo
[12:04:35] <MaNa2k> is this cron exp correct for running something every night 00:01
[12:04:37] <MaNa2k> 1 0 * * *
[12:15:26] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:15:40] <teegee> ooft, man crontab?
[12:16:47] <teegee> but yes
[12:20:33] *** Joins: OrangePanda (~numv@h2887988.stratoserver.net)
[12:21:34] <ap5> MaNa2k, depends on the format. That one is not legal when doing Azure functions
[12:21:56] <MaNa2k> ah right, forgot to put the extra parameter
[12:22:06] <MaNa2k> * 1 0 * * *
[12:24:11] <ap5> What are you trying to do?
[12:24:44] <ap5> Run once a day at midnight?
[12:24:47] <MaNa2k> ap5, run a piece of code every day at 00:01
[12:24:53] <ap5> Ah
[12:25:18] <ap5> Shoudn't it be 0 1 0 * * * then?
[12:25:42] <MaNa2k> hmm, dont know, dont have any tools to verify it
[12:26:13] <MaNa2k> ap5, it your does sound more correct though
[12:26:35] <ap5> https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-timer?tabs=csharp#ncrontab-expressions
[12:26:48] <MaNa2k> are there no expression validators out there ?
[12:26:51] <ap5> This is what Azure uesesE: https://github.com/atifaziz/NCrontab
[12:27:03] <ap5> i had a console program to verify it when i did azure
[12:27:10] <MaNa2k> ah cool
[12:27:35] <ap5> MaNa2k, not for NCronTab. Al others uses another format, but Azure Functions is ofc special :)
[12:28:32] <ap5> I can actually see that one is made here: https://ncrontab.swimburger.net/. Nice
[12:29:28] <MaNa2k> cool thanks
[12:29:33] <ap5> * 0 1 * * * will trigger every second when the clock is 00:01 to 00:01:59
[12:29:44] <MaNa2k> yes, i see it now
[12:29:52] <MaNa2k> thanks. that link was awesome
[12:30:06] <ap5> Np :) I can delete my console program now :D
[12:32:19] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[12:33:06] <lz_> so I asked a question to a seller on amazon
[12:33:11] <lz_> guess where his answer arrived ?
[12:33:22] <lz_> yup, junkmail
[12:33:51] <lz_> maybe we should all admit defeat and stop using emails completely
[12:34:21] <canton7> Let's all switch to Teams! Yay
[12:34:39] *** Joins: Babbage (~Babbage@94.11.27.96)
[12:34:43] <jmer> canton7: you haven't been forced to allready?
[12:34:56] <ap5> I am forced to use Teams, and i hate it
[12:35:19] <jmer> ap5: just compare it to Skype 4 Business and it doesn't seem that bad at all
[12:35:24] <canton7> I meant for everything. Completely replace all email with Teams
[12:35:33] <canton7> I can't think what could go wrong
[12:35:38] <jmer> lol
[12:35:45] <Babbage> hey
[12:35:57] <biberu> jmer: i never worked with SAFe, but took a course on it with $previousjob, and it sure felt like it had potential for overhead...
[12:36:05] <ap5> jmer, you are comparing two turds
[12:36:06] <interop_madness> i think we should replace everything with twitter dm
[12:36:18] <jmer> ap5: one is a bit more polished
[12:36:42] <jmer> ... I am not sure about this, but I just assume that a turd polished to a sheen, stains less than a non polished turd
[12:37:18] <canton7> At least Teams delivers your messages most of the time
[12:37:55] <canton7> That was my biggest annoyance with Skype for Business -- you'd send a quick message and then shut the lid on your laptop, and because the whole sodding thing was peer-to-peer noone would receive it
[12:38:04] <ap5> jmer, i actually dont know :D
[12:38:10] <jmer> canton7: indeed!
[12:38:34] <jmer> and storing the chat history as a series of emails was also pretty horrible
[12:38:40] <ap5> canton7, and most of the time, Teams also ... i cant describe it. You have an unread message, you read it, and teams still says it is unread
[12:38:54] <jmer> ap5: you need to click the message and then click something else
[12:39:06] <ap5> Absoulutly shite
[12:39:10] <canton7> Argh, the worst is when someone deletes a message. Then you have an "Unread message" notification you can't get rid of
[12:39:17] <ap5> yes
[12:39:20] <ap5> hate it
[12:39:27] <jmer> what is better?
[12:39:30] <ap5> Turd'ing
[12:39:32] <jmer> than Teams I mean
[12:40:11] <ap5> Slack, IRC, Matrix, Mattermost
[12:40:29] <jmer> I don't think slack is better
[12:40:33] <ap5> SMS
[12:40:39] <jmer> Slack is still fucking annoying on many parameters
[12:40:42] <ap5> You click a SMS and it gets marked as read
[12:40:51] <ap5> :D
[12:42:10] <ap5> I really want to try Mattermost, but ... i dont want to set it up etc
[12:42:23] <jmer> I've never heard about it
[12:42:44] <ap5> https://mattermost.com/
[12:44:41] <MaNa2k> why the fuck does this feature in visual studio always crash for me?  EditAndContinue
[12:45:59] <jmer> MaNa2k: crash in what way?
[12:46:35] *** Joins: Tobbi_ (~Thunderbi@31.209.188.226)
[12:47:04] <MaNa2k> during debugging session, when i ex. hover my mouse over a variable, it crashes always the first time, then the second time when i hover it works. Also if i drag drop the yellow debug point, it also crashes sometimes
[12:47:06] * petererer grumbles at omnisharp
[12:47:32] <MaNa2k> in works meaning, i can see the value in that variable
[12:49:27] *** Joins: xsperry (~xs@user/xsperry)
[12:50:11] <ap5> Sounds strange
[12:52:07] <MatthiasVance> By crashing, what do you mean?
[12:52:14] <MatthiasVance> You just get an exception in the watch of that value?
[12:53:10] <MaNa2k> MatthiasVance, visual studio crashing
[12:53:14] <MaNa2k> not the actual code
[12:53:16] <MatthiasVance> Oh completely!
[12:53:19] <MaNa2k> no
[12:53:23] <MaNa2k> just giving some errors
[12:53:30] * jmer slaps MaNa2k 
[12:53:34] <MatthiasVance> lol
[12:53:38] <MaNa2k> then when i rerun the code it works
[12:53:38] <MatthiasVance> Be more specific
[12:53:42] <MaNa2k> it happens very often
[12:53:45] <MaNa2k> lol
[12:53:49] <MatthiasVance> Share the error so we have context? :P
[12:54:17] <MaNa2k> well i closed it now, so, ill paste it if it happens again
[12:54:27] <MaNa2k> this started in vs22 though
[12:54:33] <MaNa2k> wasnt an issue in 2019
[12:54:48] <MatthiasVance> I don't like the principle of E&C :)
[12:55:03] <jmer> Yeah I've never trusted E&C
[12:55:08] <MatthiasVance> No I mean it as a concept
[12:55:10] <MatthiasVance> It's almost a synonym for "trial and error"
[12:55:15] <MatthiasVance> Why would you code by trial and error??
[12:55:21] <OrangePanda> uh i hade vs22 crashes too, turns out it was some plugin not fully ported over
[12:55:35] <jmer> what? you don't headbang your face into the keyboard until valid C# is output? MatthiasVance
[12:55:51] <MaNa2k> hmm, i have lots of plugins, maybe ill turn them off
[12:56:00] <MatthiasVance> MaNa2k: Or you find out what the actual issue is first??
[12:56:40] <MaNa2k> MatthiasVance, ofc, that would be the optimal solution
[12:56:40] <canton7> Everyone codes by trial and error. Noone runs an application for the first time when it's been completed, and has it run successfully at that
[12:56:58] <MatthiasVance> canton7: Sorry, what?
[12:57:54] <canton7> Development is iterative. Write a bit, check it works, write another bit, etc. You don't do everything in one go, then hit "Build"
[12:58:01] *** Quits: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au) (Read error: Connection reset by peer)
[12:58:10] <MatthiasVance> Sure, but at runtime?
[12:58:11] <ki9a> I had that accidentally the other day
[12:58:17] <ki9a> worked at once
[12:58:23] <MatthiasVance> I guess then it doesn't matter if it's compile time or runtime
[12:58:28] <ki9a> you just know there's another error but it ends up biting you later
[12:58:50] <MatthiasVance> canton7: I get your point. Hrm. Maybe my gripe is just doing it while the code is running instead of writing a test. :D
[12:58:57] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Ping timeout: 256 seconds)
[12:59:05] <canton7> I did have to do it once as well -- 3 months development before the target hardware was available. Worked on the 3rd try -- which was irritating, as I'd promised to bring champagne into the office if it worked on the 1st
[12:59:27] <MatthiasVance> But building is different from *running* though
[12:59:36] <MatthiasVance> I build all the time, but almost never run
[12:59:48] <canton7> Ish. There's a spectrum of errors, and different sorts of compilers catch different bits of the spectrum
[12:59:59] <ki9a> Logic errors are trickiest anyway
[13:00:04] <ki9a> and those you mostly find debugging
[13:00:10] <MatthiasVance> Yes nothing wrong with debugging
[13:00:22] *** Joins: alguien_ (~alguien@user/alguien)
[13:00:28] <MatthiasVance> But if I find something wrong during debugging I'll write a test usually
[13:00:33] <ki9a> there are people that claim to just use writeLine/pritnf debugging
[13:00:35] <ki9a> I like that
[13:00:40] <ki9a> Especially when they work at a competitor
[13:00:44] <jmer> lol
[13:00:45] <MatthiasVance> haha
[13:00:56] <MaNa2k> im doing lots of coding during runtime
[13:01:03] <MatthiasVance> MaNa2k: Why is that?
[13:01:28] <jmer> ki9a: I have a couple of friends who likes that approach but they aren't working as devs...
[13:01:37] <canton7> MatthiasVance, I find it particularly useful for UI stuff
[13:02:26] <MaNa2k> i think its because you have all the values available in variable, which makes things easier to code next stuff to see what happens further without starting new build all the time
[13:02:31] <MatthiasVance> I guess in that regard it's the same as using "dotnet watch" or hot reload
[13:02:52] <MatthiasVance> MaNa2k: What about just writing a test?
[13:02:59] *** Quits: alguien_ (~alguien@user/alguien) (Client Quit)
[13:03:04] <jmer> MatthiasVance: you're assuming the code base is actually testable
[13:03:06] <MatthiasVance> Then you can iterate very quickly without having all the runtime restrictions
[13:03:09] <MaNa2k> as i said yesterday, we dont do any unittesting
[13:03:15] <MatthiasVance> But you .. can?
[13:03:27] <MatthiasVance> I'm just asking from your perspective, why don't *you* write a test
[13:03:30] <jmer> it's extremely hard writing tests for a code base not designed with tests in mind
[13:03:33] <MatthiasVance> jmer: Yes!
[13:03:39] <MatthiasVance> That sucks, I wonder what situation MaNa2k is in
[13:04:05] <jmer> MatthiasVance: judging by other of his stories he's exactly int hat very situation, most likely because of that senior dev that loves her DataTables
[13:04:06] <jmer> xD
[13:04:43] <MaNa2k> MatthiasVance, id love to write tests, but i wouldnt konw what to test. as someone said here yesterday i think, that its not easy to test stuff coming from external erps
[13:05:05] <MaNa2k> we are mainly doing erp to erp data conversing and transfer
[13:05:13] <MatthiasVance> We get a lot of external data and what we usually do is take one or more responses / payloads and set up a test with that and continue
[13:05:14] <jmer> Ofc. you can test that
[13:05:32] <MatthiasVance> We use type providers on top of those payloads so we have can access payloads in a statically typed manner
[13:05:55] <MaNa2k> by using whatever api the external erp has and integrating it with a different erp
[13:06:15] <MaNa2k> hmm
[13:06:20] *** Joins: ASUS (~ASUS@user/ASUS)
[13:07:04] <MaNa2k> whats a type provider
[13:07:25] <MatthiasVance> Sorry, that's a F# thing ;)
[13:07:30] <MaNa2k> oh oki
[13:07:36] <MatthiasVance> But basically it takes X as input and provides a strongly typed interface for X
[13:07:42] <MatthiasVance> Whatever X is
[13:07:47] <MaNa2k> we usually just offload the some data from external api
[13:07:49] <ap5> Type providers is a nice thing
[13:07:54] <MaNa2k> and use that to code
[13:08:09] <MaNa2k> MatthiasVance, hmm
[13:08:26] <MaNa2k> MatthiasVance, sounds like generics
[13:08:29] <MatthiasVance> If you generate code in VS for "external API" it's kind of the same
[13:08:40] <MatthiasVance> It's nothing like generics :) More like C# code generators
[13:08:52] <MatthiasVance> The newer concept, at build time
[13:08:54] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[13:09:25] <MaNa2k> ah i see
[13:09:29] <MaNa2k> sounds cool
[13:10:10] *** Joins: alguien (~alguien@user/alguien)
[13:10:28] <jmer> I pulled in master into my feature branch yesterday
[13:10:35] <jmer> and it broke my configuration files
[13:11:13] <MatthiasVance> I hate it when that happens :D
[13:11:24] <jmer> someone has moved the location of our configuraton files
[13:11:25] <MatthiasVance> That's why I set stuff in environment variables usually
[13:11:32] <jmer> and modified the code that builds the connectionstring
[13:11:55] <jmer> and made it in such a way that if you provide a username in the connection string it will disable integrated security
[13:12:05] <jmer> and the username is provided in appSettings.json
[13:12:09] <jmer> so it's ALWAYS there
[13:12:16] <jmer> ... which makes zero sense
[13:12:58] <Tobbi_> Morning.
[13:13:14] <jmer> MatthiasVance: we have 4 configuration providers
[13:13:29] <MatthiasVance> Hi Tobbi_ !
[13:14:02] <jmer> MatthiasVance: the appSettings.json, the appSettings.<environemtn>.json, the Environment variables provider and a custom developed configuration provider connected to an external system with a web interface where "global" configurations can be made (except if that system is offline)
[13:29:50] <MatthiasVance> Okay so if you put it in environment variables you will never have an issue
[13:29:52] <MatthiasVance> :D
[13:30:14] <jmer> MatthiasVance: the values change based on environment
[13:30:22] <jmer> i.e. the environment name is part of the DB's name
[13:30:40] <jmer> but the environment variable name doesn't...
[13:30:46] <MatthiasVance> I think we introduced prefixes (for the environment variables) for that
[13:30:49] <MatthiasVance> ahh
[13:30:56] <jmer> same with DB users
[13:31:03] <jmer> and DB adresses and instance names
[13:31:07] <jmer> it's... a mess
[13:34:37] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[13:35:18] <Jonopoly> What would be best approach to create web api in .net standard 2.0
[13:37:08] <OrangePanda> why not use .net6
[13:37:43] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:41:15] <Nasp> MatthiasVance:  Well it doesnt work due to DNSSEC
[13:41:20] <Nasp> And they have no support it seems
[13:41:25] <Nasp> Just standard replies
[13:41:58] <MatthiasVance> I use DNSSEC with cloudflare
[13:42:02] <MatthiasVance> For all domains
[13:45:07] *** Quits: Bradley32110_ (~IceChat95@071-013-010-066.biz.spectrum.com) (Quit: The early bird may get the worm, but the second mouse gets the cheese)
[13:45:42] <MatthiasVance> Nasp: What is your issue with DNSSEC?
[13:46:50] <MatthiasVance> Jonopoly: Why do you want to use .NET Standard 2.0?
[13:50:56] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[13:55:47] *** Joins: Klinda (~superleag@user/klinda)
[13:58:55] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[13:59:10] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[14:04:15] <Jonopoly> MatthiasVance: because our current project is .net framework 4.6.1 (We plan on converting it to .net 6 this year)
[14:04:37] <MatthiasVance> But if you're creating a *new* API.. why don't you use .NET 6?
[14:04:38] <Jonopoly> but API has a higher priority atm sadly
[14:04:57] <MatthiasVance> It doesn't make sense to want to create an *API* with .NET Standard
[14:05:14] <Jonopoly> Because It's in same project as current
[14:05:34] <MatthiasVance> What is the "new" part then?
[14:05:36] <MatthiasVance> Just new routes?
[14:05:46] <MatthiasVance> Because you're specifying .NET Standard which is a *project* level thing
[14:06:03] <Jonopoly> Yeah basically we've got helpers and projects all wrapped in .net framework
[14:06:24] <Jonopoly> So API needs to be able to be used by both
[14:06:37] <Jonopoly> .net framework and core 6
[14:07:27] <Jonopoly> The helpers we've got to database calls are written in .net framework 4.6.1
[14:08:26] <OrangePanda> you can try copy the whole project to a new folder, change the .csproj file, and switch to .net6 it worked for me
[14:08:31] <Jonopoly> *We've got are to help with database calls
[14:08:53] <Jonopoly> OrangagePanda: haha yeah i've tried that this is a massive project
[14:09:23] <Jonopoly> With SessionManager, Authorisation, ApplicationInsights, Bundles and crap
[14:10:38] <OrangePanda> well. i only had db conn in that project since session handling is then the api *shrug*
[14:10:41] <Nasp> MatthiasVance:  That my domain doesnt work due to Cloudflare doesn't have the keys after the move
[14:11:27] <Nasp> jmer:  Do you actually use connection strings?
[14:12:22] <jmer> Nasp: Well... Usually I just have a connection string in the configuration files. And if I need to modify this string I use the ConnectionStringBuilder....
[14:12:38] <Nasp> Jonopoly:  I dont get it either why you would create a web api project
[14:12:51] <jmer> Nasp: right now we have like "Instance" and "Server" and "Database" configuration values and these are overlapping.
[14:13:29] <Nasp> Jonopoly:  You should use AspNetCore instead
[14:13:39] <jmer> and it's made in such a way that I can't really force it to use Integrated Security without modifying the AppSettings.json which is supposed to be "values used across all environments"
[14:13:44] <jmer> but obviously it's not
[14:14:10] <jmer> Nasp: also, why wouldn't I use a Connectionstring? It lets you change database connection specific things without writing lots of code to handle those settings.
[14:14:57] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[14:16:33] <Nasp> Sure but actual connection string?
[14:16:38] <Nasp> I build them of the parts myself, it's much easier
[14:16:55] <jmer> Nasp: but then you need to mirror every connection string setting in some kind of code?
[14:17:45] <Jonopoly> Nasp: So how would you expect your current .netframework project to interact with .netcore api project
[14:17:51] <jmer> I just read it from the config file and if I need to access parts of it I just use the ConnectionStringBuilder
[14:17:54] <MatthiasVance> Jonopoly: But you don't use an API directly...
[14:18:18] <jmer> but usually I just pass on the string to whatever needs it to create valid database connections.
[14:18:32] <MatthiasVance> Jonopoly: You don't reference an API project in other projects, but you reference other projects in the API project..
[14:18:54] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[14:19:06] <Jonopoly> :MatthiasVance: Well the way it's been planned is we'd have DAL methods which interact with Database and new projects would make api calls to access it, but our current project would reference those methods directly
[14:19:17] <Jonopoly> Which is guess is the problem
[14:19:21] <MatthiasVance> Sounds like those don't belong in the API project
[14:19:32] <MatthiasVance> Put those in a .NET Standard project and make your API .NET 6
[14:21:34] <Jonopoly> I mean this is out of hands really, I'm just a junior developer at the company haha
[14:21:45] <MatthiasVance> Nasp: Where did you move them to?
[14:21:47] <Jonopoly> Task is to move DAL calls into API .net standard2
[14:22:10] <Jonopoly> Thanks though MatthiasVance, Nasp
[14:22:20] <MatthiasVance> Jonopoly: But .. you can't
[14:22:35] <Jonopoly> Can't create a web api in .net standard?
[14:23:08] <MatthiasVance> Exactly, that makes no sense.
[14:23:24] <MatthiasVance> .NET Standard is just a *reference* for what should be there, not the actual implementation
[14:23:35] <MatthiasVance> So you need to use something that *implements* that specification
[14:23:40] <MatthiasVance> Like .NET Framework or .NET 6
[14:24:16] <jmer> Nasp: the whole approach with splitting up the conncetion string into discrete configuration values is what broke my setup in the first place... xD
[14:24:45] <Jonopoly> Wait.. so I could create api in .net 6? and a .net standard let me communicate between .netframework and .netcore 6?
[14:24:58] <Jonopoly> Or am i misunderstanding completely, lol
[14:25:03] <jmer> Nasp: there's code, that with this current configuration setup, will NEVER be hit because every configuration file will have a user specified in the connection string thus effectively removing the possibility to use integrated security.
[14:25:04] <MatthiasVance> You can use .NET Standard 2.0 libraries from both .NET 6 and .NET Framework yes
[14:25:08] <MatthiasVance> Jonopoly: ^
[14:29:59] <Jonopoly> Hmm okay I think i may be misunderstanding
[14:30:11] <Jonopoly> I think I need to create .net standard for database access
[14:30:24] <Jonopoly> so we can use it on current project
[14:30:29] <Jonopoly> and then new API can use it in future
[14:30:36] <Jonopoly> which makes more sense now
[14:30:43] *** Joins: MaNa3k (~MaNa2k@109.247.79.178)
[14:30:57] <OrangePanda> Jonopoly: maybe you should ask the person who gave you the task ;)
[14:31:01] <Jonopoly> haha
[14:31:10] <Jonopoly> Yeah gonna book meeting
[14:31:19] <Jonopoly> But thanks for clearing it up though
[14:31:32] <Jonopoly> makese a lot more sense now
[14:34:09] *** Joins: MaNa4k (~MaNa2k@109.247.79.178)
[14:34:26] *** Quits: MaNa2k (~MaNa2k@109.247.79.178) (Ping timeout: 250 seconds)
[14:37:54] *** Quits: MaNa3k (~MaNa2k@109.247.79.178) (Ping timeout: 250 seconds)
[14:41:37] <irwiss> https://old.reddit.com/r/funny/comments/so4pyf/dakota_has_been_on_stall_rest_for_months_due_to/
[14:41:52] <irwiss> looks really similar to js users when PM decides to use strict typescript
[14:53:41] <biberu> which is exactly why you should enable those flags
[14:55:35] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:07:11] <Nasp> MatthiasVance:  I moved it to CF like i said
[15:07:38] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:07:49] <Nasp> Jonopoly:  Yeah i would, if you many anything new now, dont do it in old legacy stuff
[15:08:15] <Nasp> jmer:  I just have a builder that creates it, but the config consists of individual parts which makes it a lot easier to manage
[15:08:20] <Suchiman> irwiss: haha
[15:08:46] <Suchiman> yes, typescript in maximum strictness, nullability on and such lovelyness
[15:15:51] <Nasp> Jonopoly: Regardless of the outcome, you can still go with AspNetCore 2.1 which can run on framework, that way you have very minimal work to go for .NET 5/6
[15:16:08] <Nasp> Even though it's kinda out of support, Web API is even older and out of support
[15:16:29] <JakeSays> bitches
[15:20:21] <jmer> Nasp: so how do you handle if you need a setting (that a connection string supports) but you didn't account for in your code that reads the config?
[15:26:54] <jmer> Nasp: and how is your approach easier than a single configuration file entry?
[15:28:54] <Nasp> jmer:  Then i change my code to support it?
[15:29:10] <jmer> Nasp: if you just pass around the connectionstring you have no need for such code?
[15:29:16] <Nasp> jmer:  I can't parse a conenctionstirng in my head
[15:29:18] <Nasp> It's too complicated
[15:29:22] <jmer> what
[15:29:36] <Nasp> Also t he connectionstring should usually be protected since it can contain credentials
[15:29:38] <JakeSays> bought me a new hamemr
[15:29:44] <JakeSays> er, hammer
[15:29:48] <Nasp> In that case your entire connectionstring is a secret in some vault and you can't see what it is
[15:30:00] <Nasp> So when you look in config you cna't see what database it connects to
[15:30:10] <jmer> Nasp: then you put the connectionstring in a ConnectionStringBuilder and add the password through whatever mechanism stores your secrets.
[15:30:34] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:32:30] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:16] *** Joins: csrf (~csrf@user/csrf)
[15:37:27] <JakeSays> interesting. bitwarden offers self hosting
[15:45:54] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[15:53:52] <MatthiasVance> Someone has fucked up VAT calculation, charging 0,01 too many
[15:53:58] <MatthiasVance> They say 21% but it's not
[15:54:02] <MatthiasVance> In no world is it 21%
[15:56:33] <ki9a> MatthiasVance: no context/
[15:59:14] <MatthiasVance> ki9a: Hm? Invoice is 18,11 and they supposedly add 21% VAT at 3,81 but it's really 3,80
[15:59:17] <MatthiasVance> I don't care about that 1 cent
[15:59:27] <MatthiasVance> But it's weird
[15:59:41] <MatthiasVance> 3,8031 is the actual value
[16:00:02] <ki9a> ah
[16:00:11] <ki9a> That's the real Dutch spirit I guess
[16:00:13] <ki9a> ;)
[16:00:52] <MatthiasVance> Yeah but .. it's not allowed :D
[16:01:06] <MatthiasVance> oh wait
[16:01:14] <MatthiasVance> Apparently it is but now *I'm* fucked?
[16:01:19] <MatthiasVance> https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/zakelijk/btw/administratie_bijhouden/facturen_maken/btw-bedrag_afronden
[16:01:33] <MatthiasVance> Ah no, they are not allowed to do that :D
[16:01:43] *** Quits: alguien (~alguien@user/alguien) (Remote host closed the connection)
[16:02:07] *** Joins: alguien (~alguien@user/alguien)
[16:02:43] <ki9a> You could do like Mediamarkt
[16:02:48] <ki9a> give "btw" korting
[16:03:04] <ki9a> but then not really do it
[16:04:32] <MaNa4k> anyone tried this service? https://elmah.io/
[16:04:45] <MaNa4k> its about error logging and uptime monitoring for .net
[16:11:22] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[16:11:58] *** Quits: blezz (~blez@213-130-92-213.ip.btc-net.bg) (Read error: Connection reset by peer)
[16:16:26] <MatthiasVance> ki9a: Well this is about an invoice that I'm paying :)
[16:16:40] <MatthiasVance> MaNa4k: Yes
[16:17:20] <Nasp> MaNa4k:  Yes like 10 years ago
[16:17:21] <MaNa4k> MatthiasVance, how is your experience ?
[16:17:27] <MaNa4k> Nasp, lol
[16:17:33] <MatthiasVance> Also a long time ago :P
[16:17:34] <MaNa4k> what do you guys think about it ?
[16:17:36] <Nasp> Dunno can't remember
[16:17:40] <Nasp> It was good then
[16:17:44] <Nasp> I dont think i would use it now
[16:17:47] <Nasp> Also back then it was free
[16:17:48] <MaNa4k> mhm
[16:17:48] <MatthiasVance> I don't see a reason to use it over whatever cloud you're using :D
[16:17:53] <Nasp> Same
[16:18:04] <MaNa4k> were on azure though
[16:18:10] <MatthiasVance> Application Insights
[16:18:20] <MaNa4k> i know azure has its ows stuff, but its such a pain getting what you want
[16:18:22] <MatthiasVance> It's even more powerful than GCP by default in that you can actually query things
[16:18:23] <ki9a> MY EYES
[16:18:27] <ki9a> AI is really terrible gui wise
[16:18:29] <MatthiasVance> MaNa4k: What!
[16:18:32] <ki9a> and notification wise
[16:18:45] <MatthiasVance> ki9a: Worse than GCP?
[16:18:56] <ki9a> Never used GCP's insight equiavelent.
[16:18:57] <MaNa4k> MatthiasVance, you have to deep dive into lots of links\menues to get to where you want with azure
[16:19:09] <MatthiasVance> People keep saying that, but it's not different in GCP
[16:19:25] <MatthiasVance> (for example)
[16:19:35] <MatthiasVance> What helps is pinning things :)
[16:20:25] <MatthiasVance> ki9a: It's almost the same, but at least with AI you get querying capabilities
[16:20:30] <MatthiasVance> I think with GCP you have to route it into another product first
[16:21:57] <ki9a> same with AI then?
[16:22:00] <ki9a> AI is a product
[16:22:03] <ki9a> not a standard feature
[16:26:02] <MatthiasVance> ki9a: No I mean, when you use AI you get logging + monitoring + querying, with the GCP equivalent you get logging + monitoring
[16:26:15] <ki9a> ah
[16:26:21] <ki9a> the monitoring with AI sometimes works
[16:27:06] <MatthiasVance> MaNa4k: Imagine you using Elmah for your application logging, how are you going to correlate that with infrastructure logs in Azure?
[16:27:31] *** Quits: Babbage (~Babbage@94.11.27.96) (Remote host closed the connection)
[16:28:13] <MaNa4k> MatthiasVance, hmm, i see your point.
[16:28:45] <MaNa4k> that we would become dependand on 2 services for logging
[16:28:54] <MaNa4k> for errors*
[16:29:07] <MaNa4k> the infrastructure in azure, the source code stuff in the external service
[16:29:27] * jmer is pissed about how often he ses SQL Authentication used over AD authentication
[16:29:36] <MatthiasVance> jmer: YES
[16:29:47] <MatthiasVance> Start a migration!
[16:29:59] <MatthiasVance> MaNa4k: Yeah and it's not nessarily better
[16:30:07] <MaNa4k> jmer, its not just with sql, its the same shit problem everywhere you use ms stuff
[16:30:25] <jmer> MaNa4k: how is that related to MS?
[16:30:31] <MatthiasVance> 🤷‍♂️
[16:30:51] <MaNa4k> jmer, arnt you talking about 2fa nagging from all the ms apps ?
[16:30:56] <MaNa4k> all the time
[16:31:13] *** Joins: jamea (~jamea@177.239.81.39)
[16:31:40] <MatthiasVance> Sounds like misconfiguration? :D
[16:32:10] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:32:12] <MaNa4k> feel like every day or two theres one or more ms apps nagging for authentication
[16:32:51] <MaNa4k> office apps on pc, teams, visuaol studio, mssql, even office 365 apps on web.
[16:33:03] <jmer> MaNa4k: ... No... No I'm talking about when people set up their apps to use SQL Authentication (Auth controlled by the database server) instead of using Active Directory authenticaton (i.e.  a service account that is managed through active directory)
[16:33:06] <MatthiasVance> Did your IP change MaNa4k ?
[16:34:18] <jmer> MaNa4k: But based on your comments; no I fucking love MS' authenticator app it beats everything else I've used so far in terms of ease of use.
[16:34:26] <jmer> every service that supports it, I have it activated.
[16:39:04] <MaNa4k> MatthiasVance, dont think so
[16:39:17] <MaNa4k> jmer, yea i use authenticator app
[16:39:31] <MaNa4k> from ms
[16:40:18] <MaNa4k> i used to have lots of different authenticator apps, then i found out that you dont need soo many, you can just need the 2fa key to authenticate
[16:52:11] *** Joins: humanface (~humanface@20014C4E1C48A2003D23CB6ECEAF7ACE.dsl.pool.telekom.hu)
[16:59:00] <Nasp> MaNa4k:  Azures own monitoring is also horrible
[16:59:07] <Nasp> Its sloooow
[17:00:30] <MaNa4k> Nasp, that it is, and also i feel like everytime i need some logs, i have to wate time on diving deep into the inifinate deep menues\links
[17:01:34] <Nasp> Bah we just ran into some culture issues
[17:01:41] <Nasp> Why do people insist on sending localized datetimes
[17:01:44] <Nasp> It's always datetimes
[17:03:26] <MaNa4k> Nasp, we live in a messy world
[17:03:45] <jmer> Nasp: because it's longer to type datetimeoffset
[17:04:15] <MaNa4k> dosnt DateTime.UtfNow also work ?
[17:04:17] <jmer> sadly I'm not even kidding I am willing to bet you a beer that someone chose DateTime over DateTimeOffset for that very reason >.<
[17:04:20] <MaNa4k> *Utc
[17:04:45] <jmer> MaNa4k: that doesn't carry the information that this is a UTC based DateTime.
[17:04:57] <MaNa4k> *DateTime.UtcNow;
[17:04:57] <MaNa4k>  ?
[17:05:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[17:05:24] <jmer> MaNa4k: if you send that to somewhere else they have to have the knowledge UTC is used everywhere. Nothing in that date will tell you it's a UTC datetime
[17:06:01] <MaNa4k> jmer: what aobout this one? DateTimeOffset.UtcNow
[17:06:07] <Nasp> jmer:  But the worst is we use a mix
[17:06:18] <jmer> Nasp: yeah... That sucks
[17:06:18] <Nasp> Also i have no idea what the right solution is
[17:06:24] <Nasp> Set Thread culture and uiculture
[17:06:30] <jmer> using DateTimeOffset and a convention that everything is saved as UTC
[17:06:31] <Nasp> There's also Requestlocalization
[17:06:47] <jmer> localizing a datetime is UI responsibility imho
[17:06:51] <Nasp> Yes
[17:06:54] <MaNa4k> theres a mix here as well, never know when the logs were actually created
[17:06:56] <Nasp> And this is a pure api
[17:07:01] <Nasp> But someone decided datetimes should be strings
[17:07:02] <canton7> Storing everything as UTC doesn't always work
[17:07:09] <Nasp> And then the controller maps them using DateTime.Parse
[17:07:14] <canton7> Think about a calendar appointment...
[17:07:18] <jmer> canton7: no but it's a hell of a lot better than storing Dates as whatever xD
[17:07:30] <Nasp> Atleast sent it in iso
[17:07:39] <Nasp> ISO 8601 should always e the wire format
[17:10:31] <canton7> That doesn't support sending a timezone though, does it, for where that's required?
[17:10:58] <Nasp> It can send an offset?
[17:11:08] <Nasp> But my issue is actually always only Date related i never need the time format
[17:11:19] <Nasp> But we keep running into issue because it's never been switched to a smarter data type
[17:11:21] <canton7> That's different -- Europe/London isn't alwayts +00:00 for example
[17:11:30] <Nasp> And still sending it in issue would never make DAteTime parsing fail
[17:11:57] <jmer> canton7: if you store it internally as UTC you can always convert to whatever timezone that is tied to the user?
[17:12:00] <Nasp> I wonder if i should set UseRequestLocalization or ThreadCulture
[17:12:23] <Nasp> jmer:  No you need the timezone like canton7  example for a calendar
[17:12:37] <canton7> jmer, you don't store an alarm as "8am UTC" though -- you store it as "8am, in whatever timezone the user happens to be in at the time"
[17:12:42] <jmer> But with a meeting invite I would need the timezone of all users involved?
[17:13:14] <canton7> With a recurring meeting invite, you want it to always be at 9am in the organiser's timezone, even as the organiser swithes between daylight savings and not
[17:13:34] <edcba> i think it depnds on user, user may want to store it as local or internation if he is traveling
[17:13:38] <canton7> (but you probably don't want it to change if the organiser goes on a business trip to another country)
[17:13:43] <Nasp> Or better yet 9am and the organizer can decide the timezone
[17:13:50] <Nasp> Because DST makes people miss meetings
[17:14:04] <xb0o2> For full accuracy you'd want the date & time of the planned meeting, the timezone of the user and the version of tzdata at the time it was planned
[17:14:06] <Nasp> I think the entire world should agree on the same DST date atleast
[17:14:26] <canton7> What about the southern hemisphere?
[17:14:32] <xb0o2> For when countries are fun and change their timezone
[17:14:35] <jmer> brb
[17:15:46] <Nasp> canton7:  Well atleast the same hemisphers should agree
[17:16:00] <Nasp> Is it 5 different DST times we have?
[17:16:21] <xb0o2> What do you mean by DST time?
[17:16:28] <Nasp> The date you change dst
[17:16:31] <xb0o2> The dates people swap between their original timezone and dst?
[17:16:32] <xb0o2> Ah
[17:18:17] <canton7> Yeah I would like that -- the UK and US being a week apart is just annoying
[17:20:22] <Inge> you say that...
[17:20:44] <Inge> but there was a period of time when Norway and Sweden where like 2 weeks diff from each other due to different calendars being in use or something
[17:24:42] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[17:25:26] <canton7> Heh, it's worse than that. They started off switching from Julian to Gregorian, slowly, by skipping a day every 4th year for 40 years. Then that paused for a bit during a war, and was abandoned afterwards, so they went back to the Julian. 40 years later they switched back to the Gregorian, in one jump.
[17:26:11] <edcba> let's start a war so we don't have to mess with dates
[17:26:16] <irwiss> fuck me, springboot rest controllers are fucking singletons.... why the fuck
[17:32:43] <edcba> well that avoid a lot of problems
[17:33:08] <edcba> but yeah i'm wondering whether i should have scoped controllers or not...
[17:33:19] <edcba> not springboot
[17:34:03] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:7197:27da:6481:ec85)
[17:34:11] <Nasp> Oh well lets just set this culture shit and hope it works
[17:35:58] <edcba> i mean something seems wrong when either i have a not singleton controller either i need to inject IServiceProvider
[17:36:11] <edcba> i'm missing something
[17:41:32] <Nasp> Controllers are scoped by default
[17:41:36] <Nasp> Why would you change that
[17:41:46] <Nasp> OR are we talking java?
[17:44:54] *** Joins: alguien (~alguien@user/alguien)
[17:45:52] <lz_> how can I make money out of my anxiety? I have a ton of it, there has to be a way of using it
[17:46:15] <edcba> haha
[17:46:22] *** Joins: Roughy (~mdaw45ns@user/roughy)
[17:52:45] <jmer> lz_: Paradise Hotel, Big Brother...
[17:53:04] <jmer> lz_: you could start a career as a youtuber promoting shitty products to shitty people.
[17:54:39] <edcba> i mean if you have controller calling service calling some dal and only dal is dependent on http request that seems wasteful to instantiate controller and service for each request
[17:54:46] <Nasp> canton7:  Isn't it 3 weeks apart or something
[17:55:08] <lz_> jmer: actually I thought I could start a twitch channel, where I just cry on stream h24. I haven't seen anyone use this concept before
[17:55:23] <jmer> lz_: there are streams with people who sleep so why not.
[17:55:39] <jmer> "Misery stream" - tip 500 for snot choking
[17:56:07] *** Joins: DiabloD3 (foobar@exelion.net)
[17:56:21] *** Quits: Diablo-D3 (foobar@exelion.net) (Ping timeout: 250 seconds)
[17:56:58] <MaNa4k> anyone tried Serverless360 for infrastructure error loggings ?
[17:57:01] *** DiabloD3 is now known as Diablo-D3
[18:02:26] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 250 seconds)
[18:04:00] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[18:14:54] <edcba> Nasp: ok you're right i don't care about controller allocations
[18:16:00] * edcba proceeds to allocate hundred of gigabytes in controller ctors
[18:17:37] <edcba> so it seems a place you still care about singletons are middlewares
[18:20:03] <Nasp> edcba: But if you make controllers singleton, then everything has to be singleton
[18:20:12] <Nasp> And remember controllers have the request set in it's base
[18:20:17] <Nasp> That doesn't work well for other requests
[18:21:48] <edcba> well you just inject a lot of providers factories and a httpcontextaccessor
[18:22:15] <edcba> but yeah probably just making life complicated for nothing
[18:22:24] <Nasp> Just dont bother
[18:22:36] <edcba> well tell that to me 2 years ago
[18:23:19] <edcba> can't that pose problems with memory fragmentation though ?
[18:23:55] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[18:29:19] *** Joins: Fiji (~Fiji@user/fiji)
[18:30:54] <MaNa4k> so i have around 60000 lines of insert sql queries in a text file. is it somehow possible to remove some lines where id field is ex. 1 ?
[18:31:02] *** Quits: Fiji (~Fiji@user/fiji) (Read error: Connection reset by peer)
[18:31:17] <jmer> 60k lines of inserts?
[18:31:23] <jmer> is each line an insert?
[18:31:33] <MaNa4k> well not the first few, they are create
[18:31:38] <jmer> ....
[18:31:41] <MaNa4k> but i can just remove them and run it seperately
[18:31:45] <jmer> is each line a statement in itself?
[18:31:52] <MaNa4k> yes
[18:32:00] <MaNa4k> each line is a single insert
[18:32:10] <MaNa4k> or wait a minute
[18:32:13] <jmer> powershell has "Select-String" that can do some nifty stuff
[18:32:19] <jmer> apart from that I would probably say "regex"
[18:32:44] <jmer> and then strongly recommend not to store data as SQL statements xD
[18:32:54] <MaNa4k> yes, thats what it is, each line is a insert. but after every 100 lines there a GO cmd
[18:33:35] <MaNa4k> its probably there so that the process dosnt timeout or something i bet
[18:34:10] <MaNa4k> jmer, i konw, but i couldnt find any better way to transfer data from one table in db1 to db2
[18:34:52] <jmer> MaNa4k: you could use powershell to select all the data you need and insert it into the target database
[18:34:59] <jmer> hell, you could do that with C# as well.
[18:35:00] <MaNa4k> mhm
[18:35:08] <jmer> or use SQL Server Integration Services to move the data.
[18:35:09] <MaNa4k> i suppose i could
[18:35:16] <MaNa4k> was actually looking for a quick solutiokn
[18:35:18] <jmer> if it's an entire table you could make a .BACPAC file
[18:35:23] <MaNa4k> and im not too good with ps
[18:35:32] <jmer> or you could script out the contents and run the SQL statements against the target DB
[18:37:01] *** Quits: brianonymous (~int19h@user/brianonymous) (Read error: Connection reset by peer)
[18:37:11] <jmer> MaNa4k: actually why aren't you just running those statements against the target DB?
[18:37:19] <BSaboia> MaNa4k, if you have WSL installed, you could make use of GNU tools to do that job for you
[18:37:32] <BSaboia> awk / sed / grep would do what you want
[18:37:43] <MaNa4k> WSL
[18:37:45] <MaNa4k> ?
[18:37:54] <MaNa4k> im not a linux user
[18:39:12] <BSaboia> MaNa4k, but do you use Windows 10?
[18:39:16] <BSaboia> Or newer?
[18:39:26] <MaNa4k> win10
[18:39:27] <BSaboia> WSL is a Windows thing, not a Linux thing
[18:40:06] <BSaboia> So you can pop up a bash terminal and do something like grep -v 'WHERE id = 1' sql_file > new_sql_file
[18:40:14] *** Joins: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net)
[18:40:14] *** Quits: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net) (Changing host)
[18:40:14] *** Joins: brianonymous (~int19h@user/brianonymous)
[18:40:41] <BSaboia> MaNa4k, you can do the same with Select-String, as jmer suggested. It is the POSH equivalent of GNU's grep
[18:41:08] <jmer> having used both I think select-string is easier to use.
[18:41:09] <edcba> you should install ripgrep even if not a linux user
[18:41:25] <edcba> that helps a lot finding code
[18:41:34] <BSaboia> jmer, in this case I think that both are pretty easy
[18:42:02] <BSaboia> I don't recall the Select-String equivalent of grep -v (invert), which outputs everything _except_ if there is a match
[18:42:19] <BSaboia> But I am pretty sure that there is one, easy
[18:42:20] <edcba> ripgrep, everything and wiztree are tools that are fast
[18:42:27] <edcba> that you should install imo
[18:43:41] <BSaboia> ripgrep is written in rust, so +1 for that
[18:44:38] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[18:44:39] <edcba> if you are searching for files location, everything is a must
[18:45:19] *** Quits: MaNa4k (~MaNa2k@109.247.79.178) (Ping timeout: 250 seconds)
[18:45:25] *** Joins: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[18:45:25] <jmer> I'm amazed at how large the market for "Disk space analyzer" software is
[18:45:54] <edcba> well until microsoft decides to include it in windows
[18:46:09] <edcba> everything is a must because explorer sucks at file search
[18:46:30] <edcba> caveat being everything works only on ntfs
[18:46:36] <jmer> if I need to recursively search for something I just use powershell
[18:47:53] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[18:51:14] *** Joins: k8yun (~k8yun@user/k8yun)
[18:52:42] <interop_madness> windows actually had a pretty smart idea with indexing files for search using IFilter
[18:52:53] <interop_madness> but they did not commit to it heavily enough
[18:54:01] <edcba> yeah especially if you compared to google desktop
[18:55:24] <interop_madness> how did they do it?
[18:57:30] <edcba> dunno but they knew how to index things
[18:57:45] <edcba> never installed that on my machines, just saw some colleague using it
[19:04:10] *** Quits: ezio (~ezio@user/ezio) (Read error: Connection reset by peer)
[19:04:42] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Remote host closed the connection)
[19:06:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:09:43] *** Joins: Xenoprimate_Surf (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[19:13:31] *** Quits: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 256 seconds)
[19:23:32] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[19:28:54] *** Joins: Fiji (~Fiji@user/fiji)
[19:32:11] <lz_> can someone reminds me why windows isn't free already, with all the ad garbage they have in it?
[19:33:03] <lz_> either make a pro license $300, or have candy crush installed by default, but I don't get why they do both
[19:34:34] <lz_> wild prediction: when linux finally makes a dent in desktop OSes, they will make windows free
[19:46:13] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[19:47:50] <jonp> lol
[19:48:09] <jonp> "linux" itself won't make a dent, unless considered as part of e.g. ChromeOS or Android
[19:50:35] <GetShwifty> Windows is technically free already
[19:50:41] <GetShwifty> go install windows and never activate it
[19:50:48] <GetShwifty> you can use it 'forever how long you want'
[19:50:52] <GetShwifty> you just can't 'personalize' it
[19:51:20] <GetShwifty> i ran the trial version of windows for i think 2 years before i bothered activating it
[19:51:26] <GetShwifty> *windows 10+
[19:51:35] <GetShwifty> i assume you can do the same with 11 but who knows on that one
[19:52:24] <GetShwifty> such a shitty os, the only thing more amusing is that windows 10 is still better than *nix as a desktop because even after almost 25 years of screaming 'the year of the linux dekstop' they still have not a fucking clue what you need to do to build a user friendly desktop
[19:55:17] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:7197:27da:6481:ec85) (Ping timeout: 250 seconds)
[19:59:54] <gandhibobandhi> i wouldn't recommend it to my grandad just yet but i've been using kubuntu on my personal pc for 3 years and i think its nice
[20:01:03] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[20:01:58] <Slade> linux has plenty of usable desktops.. i wouldnt use any, but for the vast majority of people just looking for email and webbrowsing, its fine
[20:02:59] <gandhibobandhi> i play lots of games too, there's sometimes a bit of fiddling involved but 80-90% of my steam library is playable. plus rider for .net dev works nice on linux
[20:03:42] <gandhibobandhi> am hoping that the steam deck helps make linux gaming a bit more mainstream
[20:08:57] *** Joins: Fiji_ (~Fiji@user/fiji)
[20:10:01] <GetShwifty> yeah slade
[20:10:08] <GetShwifty> its the 'refinement' that linux is missing
[20:10:30] <GetShwifty> the every time network disconnects or you log off, or it farts you have to re-log all NFS/samba shares
[20:10:37] <GetShwifty> and they have to be re-logged a very specific way otherwise ...
[20:10:53] <GetShwifty> somethign that for the most part you take for granted on windows
[20:11:59] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[20:14:11] *** Joins: jinsun__ (~quassel@user/jinsun)
[20:14:43] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[20:18:00] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Quit: Leaving)
[20:29:23] *** Joins: hseg (~hseg@195.192.229.41)
[20:30:36] *** Joins: biberu (~biberu@user/biberu)
[20:32:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:32:24] <hseg> idle bikeshedding exercise: how would you design a system report that needs to report on n things' status, assuming the codepath to check each differs, in a way that's extensible in having new things to check on/changing ways to check things?
[20:33:18] <canton7> Build some sort of abstraction which encompasses the "Checking status" and "Creating status report" requirements, stick a bunch of them in a list, run them, generate a combined report
[20:33:46] <hseg> fits with what I was going for
[20:34:45] <hseg> would make the list of reports to check a system-report-level constant, eg by making it a static member
[20:34:58] <hseg> thanks!
[20:35:06] *** Joins: Kog (~Kog@about/csharp/kog)
[20:35:06] *** ChanServ sets mode: +v Kog
[20:36:46] <hseg> oh, so I don't even want/need an enum of the types. just a system of self-checkable objects, along with a self-description protocol and a list of known self-checks
[20:37:00] <hseg> that's one element of the design I can scrap
[20:37:51] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:40:11] <canton7> You could have it both ways -- you add the list of reports to the manager in some sort of bootstrapper, or reports add themselves to the manager
[20:41:17] *** Joins: jinsun (~quassel@user/jinsun)
[20:42:30] <hseg> hrm. might not be what I'm looking for, but would be nice to be able to reflect at compile-time "these are all the known subclasses/implementations of X"
[20:42:48] <hseg> and then just populate the list from that
[20:42:48] <canton7> Sure, stick an attribute on them, find them with reflection
[20:42:56] <hseg> wait, what?
[20:42:59] <hseg> that's possible?
[20:43:01] <canton7> (or just go for "everything which implements this interface", but IMO that's a bit too magic a lot of the time)
[20:43:35] <canton7> Sure. typeof(SomeType).Assembly.GetTypes().Where(x => x.GetCustomAttribute<MySpecialAttribute>() != null), then `Activator.CreateInstance(type)` to instantiate each Type
[20:43:46] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:44:15] <canton7> (most people do end up preferring explicit registration though, as it's less magic and easier to figure out what's going on)
[20:44:25] <hseg> where SomeType is the base class/interface?
[20:44:41] <canton7> Just some type that's in the assembly you want to search -- it's a nice way of getting the right Assembly reference
[20:44:55] <canton7> So if the implementations of the interface are in the same assembly as the interface, sure
[20:45:15] <hseg> hrm. I'll keep it in mind, but I suspect this is too much magic for my team
[20:45:25] <canton7> "What assembly do you want to search in?" "The one which contains SomeType, whatever it is"
[20:45:43] <Nasp> I would argue the class itself shouldn't know how it's registered
[20:45:45] <hseg> though that didn't stop my predecessors from reflecting a cloner
[20:46:03] <Nasp> Don't use attributes for everything just because you can
[20:46:16] <canton7> Yeah, depends whether you want to apply DI or not. Swings and roundabouts
[20:46:18] <jonp> assembly-level attributes >> scanning every type in the assembly
[20:46:22] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:7197:27da:6481:ec85)
[20:46:25] <jonp> opt-in better than opt-out
[20:46:43] <canton7> True, assembly-level attributes are a bit quicker
[20:47:07] <Nasp> If you want compile time go with some source gen
[20:47:21] <hseg> what would that look like?
[20:47:22] <canton7> If reflection is overkill for their team, I suspect SGs are way too far ><
[20:47:42] <Nasp> Probably
[20:47:53] <hseg> we have some reflection, just don't know if it'd be too much magic/overengineering
[20:47:59] <hseg> to add more
[20:47:59] <Nasp> But what's the issue with just using normal registration
[20:48:05] <canton7> hseg, e
[20:48:10] <canton7> * https://github.com/dotnet/roslyn/blob/main/docs/features/source-generators.cookbook.md
[20:48:37] <hseg> Nasp: as in, just having a list of all known instances?
[20:48:55] <canton7> Yeah personally I won't bother. As a developer it's easier to find the list of reports by finding the array which contains them all / method which adds them, rather than searching the codebase for all uses of an attribute
[20:48:56] <Nasp> Sure
[20:49:16] <canton7> "What reports are there?" "new[] { ServerXReport(), ServerYReport() }" "Oh"
[20:49:21] <Nasp> Or if they have a common Interface scan for that
[20:49:34] <Nasp> But attributes can just add too much magic
[20:49:37] <hseg> fair enough, was wondering if there was a cleaner/better way of doing things
[20:49:49] <hseg> but tbh that might be premature atm
[20:50:06] <canton7> I think every goes through the "Boilerplate is bad! Get rid of it at all costs" "Oh wait, the boilerplate let me easily see what was going on. I quite liked it" journey
[20:50:19] <canton7> *everyone goes through
[20:51:14] <hseg> also, the "eliminating this boilerplate would actually make this longer/more complex/harder to maintain" moment
[20:54:33] <hseg> thanks
[21:03:45] *** Joins: Bradley32110 (~IceChat95@071-013-010-066.biz.spectrum.com)
[21:08:35] <DevJohnC> idk, code generators have their place over boilerplate; the LogMessage code generation stuff pretty great, for example
[21:09:28] <jonp> "LogMessage code generation stuff"?
[21:10:31] <DevJohnC> the LoggerMessageAttribute will generate performant logging methods for you, to avoid doing the `if (logger.IsEnabled(...)) ...` stuff yourself
[21:11:09] <DevJohnC> and it takes actual proper types as arguments to your logging methods rather than object[] so you avoid boxing
[21:11:26] <DevJohnC> (until it has to call the underlying logging stuff)
[21:16:34] <canton7> DevJohnC, note that the interpolated string handler stuff lets you write interpolated strings, where the holes are only filled if the logger is enabled. It also avoids boxing
[21:16:53] <canton7> E.g. Debug.Assert(condition, $"Thing: {SomeVeryExpensiveMethodCall()}")
[21:20:23] *** Joins: jamea22 (~jamea@10.189-202-213.bestelclientes.com.mx)
[21:22:57] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[21:35:44] <irwiss> https://i.redd.it/p79n7c3u9qg81.jpg 🤔
[21:38:09] <jonp> irwiss: well, sometimes you're still alive and have a death certificate…
[21:38:17] <jonp> e.g. they couldn't find you for 7 years or whatever
[21:38:42] *** Quits: Kog (~Kog@about/csharp/kog) (Read error: Connection reset by peer)
[21:43:13] *** Joins: alguien_ (~alguien@user/alguien)
[21:44:53] * JakeSays wonders if $170k/year is worth working with go
[21:45:06] <jonp> what's _that_ wrong with Go?
[21:45:09] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[21:45:20] <JakeSays> i don't know
[21:45:43] <JakeSays> i've only briefly looked at it and wasn't all that impressed
[21:46:59] <jonp> not that i'm trying to say that language choice has *no* importance, but at $170k, how much *should* that have?
[21:47:12] <jonp> guess that depends on how much more is that than you're current making?
[21:47:57] *** Joins: Fiji- (~Fiji@user/fiji)
[21:48:36] <ben> also depends on cost of living
[21:48:56] <ben> that goes a lot further in the midwest compared to california etc
[21:50:20] <jonp> presumably a move isn't involved here, due to the joy of remote work
[21:50:24] <jonp> but that is a good point to verify
[21:50:57] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[21:52:30] *** Quits: alguien_ (~alguien@user/alguien) (Remote host closed the connection)
[21:52:44] <ben> i would take it cause that'd be a good raise for me and i don't have any strong feelings about golang lol
[21:52:55] *** Joins: alguien_ (~alguien@user/alguien)
[21:55:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:11:03] <JakeSays> jonp: right - no move
[22:11:21] <JakeSays> if it were python... no fucking way
[22:11:32] <JakeSays> would prefer if it were rust
[22:15:49] <jonp> i'm "meh" on Rust
[22:16:32] <jonp> "zig" looks kinda interesting: https://ziglang.org/
[22:17:18] <JakeSays> so far rust is the only language that has caught my attention
[22:17:39] <jonp> Rust has interesting attributes, and annoying ones, from what i've seen in passing
[22:17:42] <jonp> haven't used it
[22:18:16] <JakeSays> zig looks familiar
[22:19:08] <JakeSays> jonp: what about zig interests you?
[22:19:38] <jonp> still range checks & type checks
[22:19:42] <jonp> but conceptually "simple"
[22:19:58] <jonp> no "mass" over semi-overlapping syntax that is similar but not the same
[22:20:08] <JakeSays> i don't like zig's multi-line literal syntax
[22:20:38] <JakeSays> unless that's syntax for inline json
[22:20:45] <jonp> `\\` as a token.  hm…
[22:21:28] <JakeSays> metaprogramming looks interesting though
[22:22:15] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[22:22:35] *** Joins: hseg (~hseg@195.192.229.41)
[22:45:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:22] <Suchiman> i have a grief with any language that uses std over Standard
[22:45:24] <Suchiman> and such
[22:46:49] <hseg> hrm. So I'm trying to do the equivalent of having a bunch of static classes inherit from an abstract base class. Have found a workaround (since statics can't inherit) - dip the abstract fields and compose a private instance into the static classes. Is there a better way?
[22:47:10] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:56] <JakeSays> very interesting article: http://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/
[22:52:09] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[22:52:26] *** Joins: hseg (~hseg@195.192.229.41)
[22:54:13] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:7197:27da:6481:ec85) (Ping timeout: 240 seconds)
[22:55:23] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:56:26] <hseg> ie what I have in mind is http://ix.io/3Pa6
[22:59:30] <JakeSays> hseg: i'm sure you're aware that the second definition of Resource1 won't compile
[23:07:54] <hseg> Why?
[23:11:25] <jonp> why won't the first definition of Resource1 compile?
[23:11:32] <hseg> ok, so I needed to add static modifiers to Query and Status
[23:12:01] <hseg> http://ix.io/3Paa
[23:12:11] <hseg> jonp: because static classes must inherit from object
[23:12:27] <jonp> so remove `static` from the Resource1 definition
[23:12:54] <hseg> except I don't want to have to instantiate what is essentially a parametrized bag of functions
[23:13:12] <biberu> why all that static? what problem are you trying to solve?
[23:13:58] <hseg> have a collection of functions with shared logic. want to template out the logic
[23:14:19] <hseg> in this (simplified) case, Query()
[23:15:01] <biberu> there's nothing about that that required it to be static?
[23:15:27] <hseg> no, but considering the class has no state, why should I have to instantiate it?
[23:15:30] <biberu> what are are getting are hidden dependencies and code that's harder to test and configure
[23:15:43] <biberu> you are*
[23:15:44] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:16:14] <hseg> oh?
[23:17:40] <biberu> hseg: have to? that makes it sound like an issue ^^
[23:17:47] <JakeSays> biberu: what hidden dependencies?
[23:18:10] <biberu> JakeSays: Base, Logger, Http
[23:19:14] <JakeSays> biberu: we don't know of those are also static
[23:19:16] <hseg> biberu: yes? a bag of stateless functions shouldn't need an instance to be used
[23:19:22] <JakeSays> er, except for base
[23:19:25] <biberu> hseg: what if you just consider your instance a closure? configure it with what it needs, pass it to whatever needs to call query
[23:20:10] <biberu> hseg: clients can just depend on an interface or function signature, much easier to change and test
[23:20:13] *** Joins: Taddeusz (~Taddeusz@ip72-198-57-203.ok.ok.cox.net)
[23:20:25] <hseg> clients already depend on an interface
[23:20:50] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:5502:3f50:21ba:ca4a)
[23:21:28] <biberu> hseg: or a variation on that perspective, the constructor can be considered a way to partially apply a function that you need to pass somewhere else
[23:21:33] <JakeSays> hseg: i think your goal is flawed
[23:21:45] <hseg> biberu: so basically you're saying to instead turn Resource into a factory for Base?
[23:21:54] <biberu> hseg: I don't see why you don't want to instantiate it just because it's stateless
[23:22:20] <JakeSays> i would argue that it's not stateless
[23:22:34] <jonp> see also the "Singleton" design pattern
[23:22:44] <jonp> singletons still have state
[23:22:57] <hseg> for exactly the same reason as you don't instantiate Math
[23:22:59] <biberu> if something needs to call query just pass it the function?
[23:23:02] <JakeSays> and there can be state w/o having fields
[23:23:30] <JakeSays> hseg: but Math isn't as complex as what you're trying to do
[23:23:39] <hseg> fair
[23:23:45] <biberu> hseg: sure, but you're doing a whole lite more there
[23:23:51] <biberu> lot*
[23:24:31] <biberu> you can't make it work without configuring e.g. that http dep
[23:24:55] <JakeSays> biberu: why is that?
[23:25:05] <JakeSays> we don't know enough to make that assumption
[23:25:16] <hseg> sure I can, all of this is local definitions inside an enclosing class
[23:25:22] <biberu> return HTTP.Get(UrlKey)
[23:25:24] <hseg> which has already configured all the state I need
[23:25:33] <JakeSays> biberu: HTTP.Get could be static
[23:25:33] <biberu> that appears to be another static something?
[23:26:07] <biberu> yes, so now he needs to configure that before using Base, and the compiler can't help him to ensure that everything is done in the right order
[23:26:29] <hseg> ah...
[23:26:35] <biberu> same argument for Logger
[23:26:45] <JakeSays> well, you can't assume that other parts of the design don't deal with that
[23:26:46] *** Joins: Guest2 (~Guest2@47.184.35.232)
[23:26:54] *** Guest2 is now known as _genuser_
[23:27:05] <hseg> don't know the whole design, this codebase is too large for me to conceptualize
[23:27:11] <JakeSays> it could also be that HTTP.Get() will perform init if needed
[23:27:22] <biberu> there might be code that does it, it may even work, but it'll be brittle and hard to use correctly
[23:27:30] <hseg> all I know is that the HTTP.Get function I have takes care of the config, idem logging
[23:27:34] <JakeSays> biberu: you can't say that
[23:27:47] *** Quits: _genuser_ (~Guest2@47.184.35.232) (Changing host)
[23:27:47] *** Joins: _genuser_ (~Guest2@user/genuser/x-7507041)
[23:28:05] <biberu> why not? there's temporal coupling there
[23:28:19] <JakeSays> that's not always bad
[23:28:19] <biberu> and how is he going to test it?
[23:28:21] <_genuser_> hey people
[23:28:28] <JakeSays> test what?
[23:28:41] <biberu> Resource1
[23:28:56] <hseg> what, how am I going to mock against differing HTTP/logging backends?
[23:29:04] <_genuser_> biberu you let testers worry about it!
[23:29:23] *** Joins: eurogos (~jongoslin@2a00:23a8:4cca:5901:a54e:10c2:8985:318c)
[23:29:24] <hseg> I won't. this codebase was too shitty to do that before I came here
[23:29:30] <JakeSays> biberu: by mocking HTTP.Get(), etc.
[23:30:02] <hseg> at best, I can run API tests against Resource1.Query, Resource1.Status etc
[23:30:05] <JakeSays> biberu: my point is that you can't assume a design is bad based on what you see.
[23:30:22] <JakeSays> er, what you see in that small example
[23:30:33] <_genuser_> one of the applications I used to work on 20 years ago, I hated the design. I thought it was the worst design.
[23:30:38] <JakeSays> my money is it probably is bad, but i won't make that assumption
[23:30:59] <_genuser_> until I started working with it more and more and started appreciating the way the devs had laid out the code to make everything easy to extend and isolate.
[23:31:01] <biberu> JakeSays: but the call to that is hidden inside Base, and he can't control how that is created
[23:31:17] <hseg> especially considering the small example is a reduction of the real-world example
[23:31:20] <biberu> fair, the example may not be representative of the real thing
[23:31:28] <_genuser_> JakeSays hehe, you can say that eyes-closed about most applications. the design always starts out being nice then goes to heck
[23:31:48] <JakeSays> _genuser_: in my experience the design rarely starts out being nice
[23:31:53] <eurogos> just upgraded a razor pages project from .net5 to .net6 and am getting weird DirectoryNotFoundException using app.UseStaticFiles();
[23:32:16] <hseg> anyway, think I'll just go for the "static children as base factories" approach from above
[23:32:22] <JakeSays> eurogos: off had i'd say a directory can't be found
[23:32:29] <JakeSays> *off hand
[23:32:46] <eurogos> something to do with Microsoft.Extensions.FileProviders.PhysicalFileProvider picking up local path even though it should be running in a docker host
[23:33:19] <JakeSays> does the path exist in the docker container?
[23:33:35] <eurogos> no not at all...
[23:33:41] <JakeSays> well there ya go
[23:33:47] <hseg> hrm. it will need to instantiate the base anyway. might as well bite the bullet and drop the static
[23:33:47] <_genuser_> JakeSays at least that's how I think. I have good plans. have good framework in mind. By the time the requirements evolve, I find myself writing workarounds that I hate. But a re-architect would take longer than customer is willing to wait for, etc. etc. So you start promising that the next one would be really done right.
[23:33:58] <eurogos> I dont know where its getting the path from though
[23:34:09] <hseg> and if I insist on the "staticness" just make it singleton
[23:34:30] <_genuser_> at least you can sayt you've used a "design pattern" if you implement that singleton.
[23:34:58] <eurogos> I'm expecting it to use the path /app/wwwroot which is in the docker container
[23:35:00] <JakeSays> eurogos: that's the thing you need to figure out
[23:36:12] <eurogos> but its picking up the path which is relative to the solution
[23:36:34] <hseg> all this faff for what I'd rather write as a Func<ConfigData, IResource> and a set of ConfigData
[23:36:54] <eurogos> ive tried to specify on the CreateWebHostBuilder .UseContentRoot("/app/wwwroot/")
[23:37:20] <eurogos> but no joy, and when i downgrade to dotnet5 all works fine
[23:37:24] <hseg> but that doesn't look like what the language wants me to be doing here
[23:38:22] <biberu> hseg: i probably didn't scroll far enough up for context, but what's the problem with func<>?
[23:39:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[23:40:21] <hseg> just that it doesn't seem to be the idiomatic design here
[23:40:33] <hseg> but then again, my design is apparently not idiomatic either
[23:41:02] <hseg> so that might be a better approach to take
[23:42:06] <biberu> as long as the context is right i pass functions around ¯\_(ツ)_/¯
[23:42:37] <GetShwifty> you pass functions like you pass gas?
[23:43:12] <JakeSays> hseg: idiomatic secondary to a better solution
[23:43:25] <hseg> fair enough
[23:43:34] <JakeSays> fucking keyboard
[23:43:56] <hseg> thanks for the push
[23:43:58] *** Joins: Kog (~Kog@about/csharp/kog)
[23:43:58] *** ChanServ sets mode: +v Kog
[23:44:37] *** Quits: humanface (~humanface@20014C4E1C48A2003D23CB6ECEAF7ACE.dsl.pool.telekom.hu) (Quit: Client closed)
[23:48:51] *** Joins: Fiji_ (~Fiji@user/fiji)
[23:50:02] <hseg> ironically, this solution ends up looking like I made myself a dsl, especially if I use named arguments
[23:52:34] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[23:58:13] *** Quits: hseg (~hseg@195.192.229.41) (Remote host closed the connection)
[23:58:32] *** Joins: hseg (~hseg@195.192.229.41)
[23:59:47] *** Joins: MaNa4k (~MaNa2k@224.81-166-66.customer.lyse.net)
