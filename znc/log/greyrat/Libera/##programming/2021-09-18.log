[00:00:09] <InPhase> user51: For example, I'm on the OpenSCAD team, and I had previously declared that OpenSCAD is a bad language for artistic models, and mostly suitable for mechanical design work.  Then we created a challenge for ourselves at the end of each year, to make visually appealing demos.  This was one of my submissions for the first year of these challenges, and then I changed my mind, when I realized how 
[00:00:15] <InPhase> easy this was to do.  https://imgur.com/a/G6CaUAy
[00:00:15] <bayaz> Title: OpenSCAD detailed tree animation 
[00:00:51] <CoJaBo> So uh. How does IT/CS/networking attract sOOO MANY CREEPS o_O
[00:01:05] <dodo> projecting much?
[00:01:16] <user51> InPhase: nice! l-system?
[00:01:22] <InPhase> user51: It was 148 lines of code, in a language that I previously thought wasn't good for doing that.
[00:01:55] <InPhase> user51: Not directly, although an l-system has been implemented for it.
[00:02:18] *** Joins: flaknet99 (~0x100@32.211.211.39)
[00:02:21] *** Joins: kariosfox (~kariosfox@176.221.124.54)
[00:02:37] *** Quits: kmh_ (~kmh@p200300df5f138a008577b55c1b15cf90.dip0.t-ipconnect.de) (Quit: Leaving)
[00:02:50] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[00:02:52] <user51> perhaps a better way to think about the question is to simply divide-and-conquer the problem, and see how to map it to the language at hand
[00:04:01] *** Joins: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1)
[00:04:02] <user51> i did a little proof of concept for pointers in awk a while ago. i figured that you simply create a memory cell for whatever input you have, then snprintf("%08d") for the address
[00:05:09] <pyzozord> CoJaBo: https://www.youtube.com/watch?v=XFkzRNyygfk :P
[00:05:10] <bayaz> Title: Radiohead - Creep 
[00:05:33] <user51> this allows you to use concatenation as if it was pointer concataenation - then since the addresses are equal in size, you can loop over them too
[00:05:48] *** Joins: quartz (~quartz@user/quartz)
[00:06:22] *** Joins: trace987 (~trace@dynamic-002-247-249-044.2.247.pool.telefonica.de)
[00:06:24] <user51> granteed, this takes a loop that extracts a substring from the pointer-string
[00:06:48] <InPhase> user51: I mostly find awk painful to work with.  But a nice thing about it, is that it seems to always be there even on tiny space-starved systems.
[00:07:07] <InPhase> user51: So there is potential in those efforts for some edge cases.
[00:07:12] <Hash> Awk is useful. I findmyself using it al ot when parsing text for simple column stuff
[00:07:48] <InPhase> Word splitting of lines makes up probably 99% of my awk usage.  :)
[00:07:56] <Hash> yup
[00:08:10] <user51> at that point i was wondering if the approach really scales - i managed to do some of the early 99 prolog problems with that POC
[00:08:10] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:08:28] <user51> if you want a nice but cryptic awk program, '!x[$0]++'
[00:08:58] <InPhase> On any serious non-space-starved system, I used to use perl, and now use python, if it gets more serious than word splitting.
[00:09:23] <GeDaMo> Does busybox have an awk implementation?
[00:09:26] <InPhase> Yeah.
[00:09:40] <pyzozord> i think awk is part of posix
[00:09:51] <GeDaMo> Probably explains why it's always there :P
[00:09:53] *** Joins: kmh (~kmh@p200300df5f138a0021639dd591b39146.dip0.t-ipconnect.de)
[00:10:13] <Hash> I drank a lot of coke and now I will stufy
[00:10:14] <InPhase> Maybe someday we can wrap python into posix.
[00:10:19] <Hash> study* ok bye o/ 
[00:10:29] *** Quits: derpy (~quassel@dslb-002-201-164-114.002.201.pools.vodafone-ip.de) (Read error: No route to host)
[00:10:36] <user51> there's also gawk
[00:10:44] *** Joins: derpy (~quassel@dslb-002-201-164-114.002.201.pools.vodafone-ip.de)
[00:10:47] <user51> it has some nice features, like bignum, and function pointers
[00:10:51] <Hash> There is also mawk*
[00:10:54] <Hash> minimal awk
[00:11:08] <InPhase> I would be very happy if we could count on Python being available on 100% of computing devices beyond the microcontroller level.
[00:11:10] <user51> writing an awk is on my towrite list
[00:11:11] *** Joins: torstenvl (~torstenvl@2600:1003:b117:5bb6:e5d9:bf79:e2:c8b3)
[00:11:35] *** Joins: Cashlin (~hp@user/cashlin)
[00:11:40] <Hash> https://github.com/EONRaider/100-redteam-projects
[00:11:41] <bayaz> Title: GitHub - EONRaider/100-redteam-projects: A small list of projects for students of programming for cybersecurity 
[00:11:43] <Hash> This is what I want to go through
[00:11:57] <Hash> Write code for each challenge, and make a tool at the end.
[00:12:09] <Hash> Find out a tool needed in the security industry, write it, fill a need, be a good dude.
[00:12:17] <user51> but awk is a weak stringly typed language, e.g you can't have 'str = "string"; goto str;' or 'str(whatever)'
[00:12:42] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:12:46] *** Joins: guest734 (~guest@host7.181-14-184.telecom.net.ar)
[00:12:55] *** Joins: flaknet99 (~0x100@32.211.211.39)
[00:12:59] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:13:03] <Hash> Someone should take this 100 redteam project coding channelge with me
[00:13:20] <user51> in fairness it was written a long time ago and keeping the language small, especially for shell pipelines was their main goal
[00:14:12] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:15:01] <Hash> I want to write one multiplatform/cross platform swiss army knife toolkit for pen testing (maybe). Just another idea I have.
[00:15:25] <Hash> All essential things in one pckage.No more installing 2 dozen programs to do one analysis.
[00:15:59] <GeDaMo> https://en.wikipedia.org/wiki/Metasploit_Project
[00:16:00] <bayaz> Title: Metasploit Project - Wikipedia 
[00:16:08] <Hash> That's exploit specific.
[00:16:17] <Hash> It doesn't do network vuln analysis, port scanning etc. etc. 
[00:16:22] <flaknet99> it's too complex a topic for a single project to handle
[00:16:35] <Hash> Perhaps. 
[00:16:36] *** Joins: inky (~inky_@46.36.114.205)
[00:16:59] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[00:17:19] <flaknet99> unlessyou're just looking for known issues
[00:17:21] <Hash> I am not trying to rewrite the whole thing from scratch you know. I might need to clarify
[00:17:44] <Hash> Say for example, my tool will pullin all thre already inventex required tools from git or whomever, and if I need to write some custom ones np
[00:18:06] <Hash> But going to try to reuse stuff already there, and have one universal interface for everything easily accessible in one program
[00:18:08] <flaknet99> ah
[00:18:11] <Hash> Yeah
[00:18:17] <user51> maybe a forth in awk might work.
[00:18:32] <user51> what would i need for a simple forth implementation?
[00:18:46] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[00:20:38] <GeDaMo> Two stacks, name lookup, simple arithmetic and stack operators
[00:21:13] <pyzozord> oh wow
[00:21:32] <GeDaMo> (?)
[00:21:56] <pyzozord> i wonder what's smaller minimal lisp interpreter implementation of minimal forth interpreter implementation
[00:22:05] <GeDaMo> Forth can be much smaller
[00:22:08] <flaknet99> no functions?
[00:22:10] <pyzozord> I should write both instead of wondering
[00:22:23] <GeDaMo> Forth doesn't need a garbage collector for one thing
[00:22:59] <pyzozord> I heard that the original lisp book had the basic implementation of lisp on a single page
[00:23:15] <user51> i prefer the c implementation
[00:23:38] <GeDaMo> https://www.kimsereylam.com/racket/2019/05/23/metacircular-evaluator-in-lisp.html
[00:23:39] <bayaz> Title: Metacircular Evaluator In Lisp 
[00:24:50] *** Quits: torstenvl (~torstenvl@2600:1003:b117:5bb6:e5d9:bf79:e2:c8b3) (Ping timeout: 260 seconds)
[00:25:24] <user51> (meta)+circular evaluator!
[00:25:34] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[00:27:29] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 265 seconds)
[00:28:22] *** Joins: torstenvl (~torstenvl@2600:1003:b129:7ff9:c08b:a576:6942:1cb7)
[00:29:20] <GeDaMo> http://jimbrooks.org/archive/programming/forth/FIG-FORTH_internals.php "outer interpreter"
[00:29:21] <bayaz> Title: FIG-FORTH internals 
[00:29:58] <pyzozord> here, I heard page 13 of this book has the most minimal lisp implementation https://archive.org/details/lisp1.5programmersmanual/page/n19/mode/2up 
[00:29:58] <bayaz> Title: LISP 1.5 Programmers Manual : Free Download, Borrow, and Streaming : Internet Archive 
[00:30:15] <pyzozord> it's only a story though, I didn't really read the book, and don't understand that page
[00:31:20] <pyzozord> hmm forth's may be smaller
[00:31:25] <pyzozord> but they are both very minimal
[00:32:08] <GeDaMo> Lisp has a whole lot of hidden stuff behind the meta interpreter
[00:32:21] <GeDaMo> Forth is really basic
[00:32:36] <khanred> what about fith
[00:32:55] <pyzozord> oh ok, so that lisp interpreter in few lines one can write _only in lisp_ and forth's one can be written in any language
[00:33:09] <pyzozord> yeah that makes forth much smaller
[00:33:36] <GeDaMo> You could write a Lisp in something like Python or JS which has a garbage collector and rely on the implementation language for that
[00:33:53] <GeDaMo> You can write a Forth in a few K of machine code
[00:34:26] <GeDaMo> https://github.com/nornagon/jonesforth/blob/master/jonesforth.S
[00:34:28] <bayaz> Title: jonesforth/jonesforth.S at master Â· nornagon/jonesforth 
[00:34:54] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[00:35:19] <pyzozord> hah I should read that
[00:35:40] <pyzozord> I suspect it will be a good refresher of assembly and good forth tutorial :D
[00:36:24] <user51> maybe i can avoid all this stack juggling by using shunting yard..
[00:37:35] *** Quits: torstenvl (~torstenvl@2600:1003:b129:7ff9:c08b:a576:6942:1cb7) (Remote host closed the connection)
[00:40:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:41:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[00:43:59] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:45:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[00:46:08] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:47:56] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:48:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:51:10] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 265 seconds)
[00:52:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[00:53:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:54:36] *** Quits: magla (~gelignite@55d4cb04.access.ecotel.net) (Quit: Stay safe!)
[00:54:40] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:6db6:cc2b:202b:1329) (Ping timeout: 240 seconds)
[00:55:01] *** Joins: speckz_ (~speckz@2600:1700:ce0:bf00:a8e9:6960:b221:8ec5)
[00:55:43] *** Quits: speckz_ (~speckz@2600:1700:ce0:bf00:a8e9:6960:b221:8ec5) (Client Quit)
[00:58:26] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 260 seconds)
[00:59:01] *** Quits: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1) (Quit: Leaving)
[01:01:04] *** Quits: tlaxkit (~hexchat@170.253.35.150) (Ping timeout: 252 seconds)
[01:02:04] <user51> > Now youâll probably ask rhetorically, âIf Forth is so efficient, how come Iâm not using it?â The answer is that you, like most people, donât know what Forth is.
[01:02:13] <user51> does this count as a straw man?
[01:02:20] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 268 seconds)
[01:02:31] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[01:02:33] *** Quits: trace987 (~trace@dynamic-002-247-249-044.2.247.pool.telefonica.de) (Ping timeout: 268 seconds)
[01:03:03] <pulse> i really hate updates
[01:03:13] *** Quits: eddof13 (~textual@static-201-163-9-58.alestra.net.mx) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:03:14] <pulse> i wish software could be developed perfectly so that you wouldn't have to update it ever again
[01:03:49] <flaknet99> oh it's possible
[01:04:29] *** Joins: pavonia (~user@user/siracusa)
[01:05:25] <pulse> i know, it's possible - that's what makes it even worse that we're not doing it xD
[01:05:35] <pulse> of course in practice it's very impossible for the most part
[01:05:38] <pulse> but still, a person can dream
[01:05:50] <MrMobius> "Forth is a religion." that's a quote by the creator not a critic
[01:05:51] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[01:05:55] <pulse> imagine if you did QA on the level of car industry for some software
[01:06:02] <pulse> you would release it once and it would be damn near perfect
[01:06:18] <flaknet99> hah
[01:06:36] <flaknet99> their product lifecycle moves too fast
[01:06:54] *** Joins: eddof13 (~textual@static-201-163-9-58.alestra.net.mx)
[01:07:00] <MrMobius> and it depends on what you mean by efficient. forth is not very efficient for a lot of things. you should be careful with people online who are still advocating forth. a lot of them are real zealots - forth is the one true language and C or python are only used by imbeciles
[01:07:13] <pyzozord> MrMobius: small religions are more "cults"
[01:07:27] * pyzozord takes sacrifical dagger out of the sleeve of his robe
[01:07:39] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[01:07:40] <MrMobius> ya cult is more like it
[01:07:51] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[01:07:53] * pyzozord stabs MrMobius
[01:08:02] <MrMobius> and starwman is the name of the game
[01:08:18] * MrMobius dies in sacrifice to the OTL
[01:08:25] <MrMobius> (One True Language)
[01:08:29] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:08:41] *** Joins: tlaxkit (~hexchat@170.253.35.150)
[01:09:55] *** Quits: rofl (~rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8) (Remote host closed the connection)
[01:10:14] *** Joins: rofl (rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8)
[01:10:20] <pyzozord> never met anyone who was advocating forth who would say anything like that
[01:10:48] <pyzozord> but there are bad apples on every tree
[01:11:05] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[01:11:09] <pyzozord> well I don't know about the trees and apples but you get what I mean
[01:12:07] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[01:12:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[01:14:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:14:58] *** Joins: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[01:15:14] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[01:17:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:17:17] <MrMobius> pyzozord, I dont think that's the same thing. if you go to the python or R channels you may find someone saying they prefer one over the other but you probably wont find many people saying the other is complete trash and youre only using it because youre unenlightened. you do find a high percentage of people saying that kind of stuff in the forth community
[01:17:19] *** Quits: tlaxkit (~hexchat@170.253.35.150) (Quit: Leaving)
[01:18:18] <MrMobius> it seems the people who reasonably think "forth is a tool with advantages and disadvantages like any language" dont stick around in the community too long since they probably moved on to something else
[01:18:39] *** Joins: nromsas (~nromsas@101.175.64.73)
[01:18:40] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[01:19:48] *** Quits: xSavitar (~xSavitar@user/xsavitar) (Read error: Connection reset by peer)
[01:20:47] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[01:21:14] <pyzozord> MrMobius: I've never interacted with forth community. Only ever heard about forth in this channel, and mostly from very reasonable people
[01:21:31] <pyzozord> MrMobius: what you describe sounds more like Rust community to me :P
[01:22:32] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 245 seconds)
[01:22:49] <pyzozord> But again, genrealizations are always (by definition) hurtful to some
[01:23:03] <pyzozord> some Rust folks are quite great
[01:23:52] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[01:25:23] <pyzozord> I think very nieche communities generall can have a tendency for loving and defending their thing stronger so I do believe you could have ran into sam bad apples, doesn't change a thing though that it sounds like a very valuable language to learn
[01:25:36] <pyzozord> at least for me, next to lisp, haskell, agda and apl
[01:26:22] <pyzozord> although I'd like to add one more non-functional language to this list to have three functional and three imperative languages
[01:27:06] <pyzozord> maybe just assembly is the third imperative one
[01:27:39] <pyzozord> hmm or something extremly object oriented like smalltalk or something
[01:28:02] <pyzozord> so many language so little time
[01:28:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[01:28:22] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[01:31:11] <nromsas> Hey I am trying to find this Block #11834380 on the Ethereum Blockchain that was mined on Febuary 11th at 9:12:59 AM UTC. What is the address of the miner who validated this block? 
[01:31:50] *** Quits: jsmooth (~quassel@user/rapid16) (Quit: jsmooth)
[01:31:58] *** Joins: snake (~snake@user/snake)
[01:33:02] *** Joins: vysn (~vysn@user/vysn)
[01:34:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[01:34:32] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:34:50] *** Quits: eddof13 (~textual@static-201-163-9-58.alestra.net.mx) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:36:33] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[01:36:33] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[01:36:33] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[01:39:52] <deniska> Sounds oddly specific. There're various blockchain explorer sites
[01:43:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:43:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:45:47] <guest734> what about C/C++?
[01:45:51] <guest734> pyzozord
[01:46:44] *** Joins: innominate (~innominat@cpc76566-dals22-2-0-cust169.20-2.cable.virginm.net)
[01:47:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:48:10] *** Parts: innominate (~innominat@cpc76566-dals22-2-0-cust169.20-2.cable.virginm.net) ()
[01:49:35] *** Joins: martums3 (~martums@user/martums)
[01:51:40] *** Quits: jootoi (~jootoi@130.61.158.197) (Ping timeout: 268 seconds)
[01:51:59] *** Joins: jootoi (~jootoi@130.61.158.197)
[01:52:54] *** Quits: martums (~martums@user/martums) (Ping timeout: 268 seconds)
[01:52:54] *** martums3 is now known as martums
[01:53:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[01:53:46] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:54:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:54:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:56:29] *** Quits: Shiva (LordShiva@user/one39dev) (Read error: Connection reset by peer)
[01:56:37] <rannnn8888> Hey i can save my login in selenium by cookies?
[01:56:49] *** Joins: Shiva (LordShiva@user/one39dev)
[01:58:33] <pyzozord> guest734: what about it?
[01:58:46] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:58:59] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:59:04] <pyzozord> those languages are the absolute reverse of nieche programming languages :P
[01:59:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[02:00:15] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[02:01:04] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[02:01:37] <pulse> i prefer nietzsche programming languages
[02:02:02] <guest734> what is your calification for it? you sounded like pefering those languages over all
[02:02:11] <guest734> prefering*
[02:04:43] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[02:05:00] <pyzozord> Ãberlangsch should be a thing
[02:06:07] <pyzozord> oh that's an actual german word
[02:06:12] <guest734> pyzozord: then I assume you like C/C++ too
[02:06:24] <pyzozord> guest734: I like C, i don't really like C++
[02:06:51] <beaky> nice do you like rust
[02:07:05] <pyzozord> nah, but I understand it's appeal
[02:07:25] <pyzozord> but I feel haskell/agda take this stuff more seriously
[02:08:19] <guest734> python?
[02:08:26] <guest734> java?
[02:08:29] <pyzozord> rust I think is too overcomplicated to be speedy development, too simplistic to be truly safe
[02:08:32] *** Quits: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[02:08:34] <pyzozord> I like python, I don't like java
[02:09:07] <pyzozord> guest734: I'm not sure what your point is
[02:09:35] <beaky> but do haskell and agda have rust features such as zero-cost abstractions, move semantics, guaranteed memory safety without garbage collection, threads without data races, trait-based generics, pattern matching, type inference, minimal runtime, and efficient c bindings
[02:09:40] <pyzozord> I mean there are some things I like about every language
[02:09:51] <pyzozord> I never hate all of language
[02:09:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:10:14] *** Joins: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[02:10:45] <pyzozord> beaky: I'm not sure but I think haskell and agda do have type inference
[02:11:13] <guest734> pyzozord: well, you seemed to like those languages over all, but yes, I guess one needs to choose the language depending on the context. I like C/C++ in general, tho.
[02:11:14] <pyzozord> beaky: c has more minimal runtime and more efficient c binding
[02:11:43] <pyzozord> beaky: regarding memory safety, meh, if you wanna be safe just prove your programs
[02:12:19] *** Joins: System12_ (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[02:12:28] <pyzozord> beaky: I guess I just like the freedom of c pointers more than memory safety
[02:12:33] <beaky> yes just have the borrow checker automagically guarantee memory safety
[02:13:20] <pyzozord> it sounds very accounty to me you need to borrow you need to give back and turn around three times and dance macarena
[02:14:01] <pyzozord> I might as well be dancing waltz if I'm dancing (aka agda/haskell)
[02:14:56] *** Joins: ralinux (~saje@37.156.188.75)
[02:15:15] <pyzozord> That's all very personal opinion though, and I never ever wrote a line in rust, haskell or agda. So that's really all not worht anything until I get some actual experience with these languages. My opinon may change quite drastically
[02:15:54] *** Quits: System123 (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[02:16:03] <pyzozord> I'm just speculating based on what I heard about these languages and what I like about C
[02:16:15] <Izem> remind me why fast gc is not a solution?
[02:17:04] <pyzozord> gc is generally giving away control of some memory aspect of your program
[02:17:22] <Izem> yeah
[02:17:39] <pyzozord> depending on your definition of problem, it might be the solution
[02:17:41] <Izem> most applications don't need that much memory control
[02:18:10] <pyzozord> I personally belive that line of though lead to 25k allocations on each keystroke in omnibox in chrome
[02:18:11] <Izem> but rust does seem practical, so why not
[02:18:26] <Izem> that
[02:18:30] <Izem> s a different problem
[02:18:35] <Klinda> hello, can you advise me some basic resource on neural networks
[02:18:37] <Izem> it will happen regardless
[02:18:47] <pyzozord> no
[02:19:09] <Izem> chrome and firefox are famous for consuming memory both done in c++
[02:19:12] <Izem> etc
[02:19:27] <pyzozord> well yes, if developers are fulled into thinking they don't need to worry about memory
[02:19:27] *** Joins: JavaBean (~javabean@user/javabean)
[02:19:44] <Izem> if it was done in java I doubt the memory usage would be so different
[02:19:58] <pyzozord> yeah it would be much worse
[02:20:06] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[02:20:26] <pyzozord> problem is that modern c++ doesn't really want developers to manage memory
[02:20:28] <Izem> having a gc doesn't make you dumb
[02:20:34] <pyzozord> using raw pointers is bad etc
[02:20:41] <Izem> the people that waste memory will do it regardless
[02:20:55] <pyzozord> oh I didn't say it makes anyone dumb
[02:20:58] *** Joins: jamea (~jamea@189.154.238.192)
[02:21:12] <pyzozord> smart people can make dumb decisions :P
[02:21:21] <pyzozord> doesn't make them dumb
[02:21:25] <Izem> s/dumb/memory inconsiderate/
[02:21:42] <Izem> makes me have to buy new hardware so I guess it's works out
[02:21:55] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:22:03] <pyzozord> we've officially ran out of the moore's law
[02:22:08] <pyzozord> so not anymore
[02:22:43] <pyzozord> also notice how slow and unreliable software really is
[02:23:00] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 265 seconds)
[02:23:04] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[02:23:10] <pyzozord> we've been focusing on producing more software not better software over the past 50 years
[02:23:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:23:50] *** Joins: EtherNet (~Gerardo@user/ethernet)
[02:24:06] <pyzozord> gc is great for producing more software
[02:24:18] <Izem> what does that mean?
[02:24:19] <pyzozord> at least the kind of gc that's in python
[02:24:57] <pyzozord> it means it lets you don't worry about memory, so you can worry about producing more software
[02:25:49] <pyzozord> it takes decisions for you, but it cannot make as good decisions as a developer who understands what this code is intended to do
[02:26:13] <pyzozord> the only gc I accept and, I actually really like, is call stack
[02:26:43] <Izem> using a gc means you have to know how it works ...
[02:27:00] <Izem> along with the rest of your compiler
[02:27:06] <pyzozord> well and you know python/javascript etc are fine doing what they are doing. Except I wish websites stopped tried to be applications and went back to being websites
[02:27:21] <pyzozord> Izem: no that's absolutely not true
[02:27:56] <Izem> news to me, how else do you expect to get performant code?
[02:28:18] <pyzozord> you don't care about perofmant code, you care about producing more code faster
[02:28:28] <pyzozord> that's why you use a gc
[02:28:41] <Izem> weird explanation
[02:28:56] <guest734> pyzozord: I wish websites stopped tried to be applications and went back to being websites --> I agree
[02:29:06] <pyzozord> if you care about performance you need to have better control over memory, either by directly manipulating it, or manipulating gc to do what you want it to do
[02:29:08] <Izem> we use no gc languages since they make applications faster than assembly ...
[02:29:54] <Izem> I program in machine code for optimal control
[02:30:19] <guest734> I realy like desktop applications (in opposition to browser ones)
[02:30:23] <guest734> really*
[02:30:25] <Izem> yeah app websites are pretty sad
[02:30:31] <Izem> part of the death of ui
[02:30:35] <Izem> I think
[02:30:45] <pyzozord> mobile apps on android are terrible too
[02:30:46] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[02:31:00] <Izem> mobile or mobile web apps?
[02:31:10] <guest734> nothing like a powerful desktop machine B) (as a general use)
[02:31:12] <pyzozord> I ment native but both
[02:31:19] <Izem> oof
[02:31:29] <pyzozord> ios native apps are better because obj-c uses reference counting for gc
[02:31:43] <pyzozord> which is deterministic, which is more like call stack
[02:31:54] <Izem> how did you determine that?
[02:32:11] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:32:21] <Izem> I'm guessing you mean better memory wise?
[02:32:33] <pyzozord> memory wise?
[02:32:40] <pyzozord> I mean better control wise
[02:32:54] <pyzozord> for better performance you must be in control
[02:33:49] <pyzozord> gc lets you trade control for conveniance, to various degrees
[02:34:51] *** Quits: jess (~jess@libera/staff/jess) ()
[02:35:05] *** Quits: jamea (~jamea@189.154.238.192) (Ping timeout: 265 seconds)
[02:36:40] <pyzozord> faster programs <0%----(gc)----100%> faster developers
[02:36:57] <pyzozord> it's not iron clad rule though, of course a lot depends on the developer :P
[02:37:48] *** Quits: Akuli (~Akuli@82-203-160-13.bb.dnainternet.fi) (Quit: Leaving)
[02:38:26] <pyzozord> it's a corelation not causatoin but experienced developers on average can work with or without gc, while less experienced developers have more trouble without gc
[02:38:52] <guest734> pyzozord: I also agree that good developers can make good code and then manage memory well (pointers etc)
[02:39:22] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2.1)
[02:40:17] <guest734> pyzozord: "we've been focusing on producing more software not better software over the past 50 years" --> I agree somewhat
[02:41:20] <pyzozord> well yeah, it's a generalisation, it's not going to be 100% true
[02:41:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:42:59] <guest734> yes, I understand, just I myself was not totally sure :) but I get the point
[02:43:11] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:45:13] <guest734> and nowadays it seems more and more developers are needed; I wonder what is that so much software needed... where will the world end? machine control? :) (tho I like programming). But, also, there are important manual methods, analogic systems, too.
[02:45:46] <guest734> not all is informatized
[02:46:03] <guest734> and it seems some people dont get this
[02:47:48] <pyzozord> I haven't verified it but Bob Martin said that universities pump out so much developers that amount of developers in the industry doubles roughly every 5 years
[02:48:03] <pyzozord> that means that at any time 50% of developers have less than 5 years of experience
[02:48:16] <pyzozord> leaving the industry in perpetual inexperience
[02:48:51] <pyzozord> gc languages are really needed in that environment, given exponentially growing demand for software
[02:50:44] <pyzozord> all these fresh developers can recite theroms out of memory, but they can't solve real life problems because they never met them before
[02:51:26] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[02:53:15] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:53:20] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:53:55] <guest734> in South America we have more generalistic professionals; on North America they have more specialistic ones. A degree here takes about 5 years. And there, 3. (And I am not talking of "short degrees" like colleges.)
[02:54:35] <guest734> all is about education level (public education involved too)
[02:54:59] <guest734> lately education came more and more low on level
[02:55:11] <kodah> guest734: are you thinking of a bachelors? that takes 4 years.
[02:55:20] <guest734> and surely tends to become less generalistic
[02:55:44] <pyzozord> I don't know anything about the education system
[02:55:49] <rannnn8888> print(driver.find_element(By.XPATH, '/html/body/section/section/action-bar/nav/section/div[1]/a').text) where i wrong
[02:56:00] <pyzozord> but it seems to me that universities prepare studens to be come professors, not professional programmers
[02:56:50] <kodah> they teach fundamentals, which you may not need at the beginning of your career
[02:56:50] <guest734> kodah: on USA?
[02:56:54] <kodah> guest734: yes
[02:57:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:58:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[02:59:00] <guest734> kodah: here computing ingeniery started being 6 years, then became 5, then new short degrees appeared all over the world... I am glad there is 4 then. But I think I remember some of 3.
[03:00:19] <pyzozord> I'd say something like 1 year work 1 year study sandwich would be much better
[03:00:23] <kodah> there's currently not a right wayâ¢ to teach a programmer
[03:01:05] <kodah> which is probably in part why this industry has so much attrition
[03:02:46] <guest734> but as I said, not all is programming: ingeniery means more, also designing systems with no informatics involved. Computer science involves more as well. Nowadays high school teaches programming and seem to be wishing young people to just go to work and stop studying. As an example. Education is power.
[03:03:26] <kodah> guest734: there's some debate as to the difference between a programmer and a software engineer
[03:04:53] <guest734> pyzozord: yes, I think laboral experience while studying is important too, unless it interferes too much
[03:04:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:05:15] <pyzozord> guest734: I'd say if studing interfers it should be paused
[03:05:48] <pyzozord> unless you are aiming at becoming a professor in which case indeed, work should be paused if it interferes with study
[03:06:01] <guest734> universities have added a subject/class/credit course about doing real work experience into study plans
[03:07:22] <guest734> pyzozord: but you (supposedly) study to get a degree and then be a better professional :)
[03:07:42] <guest734> or (better) professional*
[03:07:44] <kodah> guest734: i don't think the world is that orderly
[03:07:56] <kodah> i don't have a degree and i work in a fairly mathematical field
[03:08:27] *** Quits: System12_ (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Remote host closed the connection)
[03:08:50] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[03:09:03] <pyzozord> I don't have experience of studying, but as an outsider it seems to me that universities are preparing students for becoming professors much more than professionals
[03:09:09] <guest734> yes, lot of informal work, I know; also corruption into the education system. We need to find the best for us and society, of course.
[03:09:18] <guest734> educational*
[03:09:20] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[03:09:55] <pyzozord> and there is unwritten assumption "if you fail at reaching the professor level you can use what you learned at being a professional, plus you have this ticket with high social signaling power"
[03:09:59] <kodah> the things you need to know to be a good SWE aren't tremendously difficult to learn imo
[03:10:12] <pyzozord> well the truth is that professors and professionals need to kind of know some different things
[03:10:21] <kodah> that said, you don't really need to have anything beyond a very trivial understanding of math to be a programmer
[03:10:51] <guest734> professors tend to be researchers too in some way; there is this profile/tendency on some students/professionals yes. Others go to enterprises.
[03:10:54] <pyzozord> professors for example need to know how to communicate science to each other, professionals on the other hand need to get program working before deadline
[03:11:29] <pyzozord> s/professors/scientists/ 
[03:12:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[03:13:02] <pyzozord> I have to say I have short patience to cocky studens.
[03:13:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:13:38] *** Quits: Narrat (~omnius@p200300df5f0ee16206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:14:14] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 265 seconds)
[03:14:53] <guest734> it is good to know that students are still teenagers until 21 :) . Then, not totally mature.
[03:15:07] <guest734> (growing)
[03:15:19] <pyzozord> yeah that's true
[03:15:36] <pyzozord> i kinda treat everone equal like they are my age
[03:15:53] <guest734> but now politics what says? they can vote at age of 16 :(
[03:16:08] <guest734> even without ending the school
[03:16:24] <pyzozord> freaking teenagers man, when I was 19 I had shit for brains
[03:16:57] <pyzozord> I can only imagine what would happen if you'd give me a book and told me I'm smart
[03:17:50] <guest734> in the other hand, a teeneager is learning things; he is not totally innocent :) . We all were young :) .
[03:18:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:03] <pyzozord> Partially it's also my fault for feeling so insecure about not having proper education
[03:19:36] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:19:51] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[03:20:03] <guest734> I saw the movie Gifted Hands, which has some interesting parts about education and encouragement on childs, yes (I didn't agree with all the movie but extracted the good things)
[03:20:04] *** Joins: Salt_Pepper (~Salt_Pepp@c-68-62-42-123.hsd1.mi.comcast.net)
[03:20:44] *** Joins: brabrax (~brabrax@user/brabrax)
[03:21:16] *** Joins: tracey (~trace@95.90.106.112)
[03:21:39] <guest734> the key is studying; knowledge; and vocation too. Self education is important too. 
[03:22:03] <guest734> specially if the system is corrupt in some way
[03:22:56] <PamiPetteri> kodah: this is a simple python program I made to compare two input values and to report (output) the smaller one of the two values (the program also tells whether the values are equal to each other): http://paste.dy.fi/OHo
[03:22:59] <bayaz> Title: pastebin 
[03:23:24] <guest734> time to go; was a nice chat; see you!
[03:23:39] *** Joins: quartz (~quartz@user/quartz)
[03:24:23] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[03:24:27] *** Quits: guest734 (~guest@host7.181-14-184.telecom.net.ar) (Remote host closed the connection)
[03:24:47] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[03:24:58] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Ping timeout: 260 seconds)
[03:26:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:26:26] *** Joins: yaboiburner (~yaboiburn@static-68-235-44-10.cust.tzulo.com)
[03:27:05] *** Quits: quartz (~quartz@user/quartz) (Client Quit)
[03:27:56] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[03:28:24] *** Quits: Lyn (~Lyn@user/law) (Read error: Connection reset by peer)
[03:29:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:31:41] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:33:00] *** Quits: pizdets_ (~pizdets@183.182.110.72) (Ping timeout: 250 seconds)
[03:33:23] *** Quits: ralinux (~saje@37.156.188.75) (Quit: Leaving)
[03:34:03] *** Joins: pizdets (~pizdets@183.182.114.179)
[03:35:10] <Izem> what does offset mean in the context of files and bytes?
[03:39:57] <Izem> undocumented code is such a timer waster
[03:40:08] <Izem> better than no code I guess
[03:40:24] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[03:41:04] *** Joins: Atque (~Atque@user/atque)
[03:41:07] <jeaye> offset will mean a position in the file, typically offset from the start of the file, but it may be from the end of the file or the current read/write position in the file.
[03:43:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[03:45:21] *** Quits: tracey (~trace@95.90.106.112) (Ping timeout: 268 seconds)
[03:47:21] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:48:16] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 252 seconds)
[03:55:00] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[03:57:05] *** Joins: quartz (~quartz@user/quartz)
[03:58:12] *** Quits: TechTest (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:59:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[04:02:04] <[itchyjunk]> day 500, still can't install this
[04:02:25] *** Quits: kariosfox (~kariosfox@176.221.124.54) (Remote host closed the connection)
[04:02:35] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:04:35] <arahael> "this"?
[04:04:37] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:06:20] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:07:34] <[itchyjunk]> qemu for RISCV
[04:07:49] <[itchyjunk]> `make`in it for all off it failed yesterday (got stuck)
[04:08:13] <[itchyjunk]> been waiting on #qemu to give me the commands i need but no luck so far
[04:08:40] <[itchyjunk]> i just want to `make` qemu so i can run `qemu-system-riscv(32/64/whatever)`
[04:09:20] *** Quits: zwr (~zwr@191.47.94.157) (Ping timeout: 265 seconds)
[04:10:30] <arahael> [itchyjunk]: You might be better off with a mailing list or similar.
[04:10:43] <[itchyjunk]> :(
[04:10:45] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[04:10:49] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b227:f558:54b0:1a3c)
[04:10:52] <[itchyjunk]> someone will eventually know i hope
[04:10:59] *** Joins: rtypo (~alex@user/rtypo)
[04:12:31] <arahael> Might have to do research.
[04:12:33] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:13:12] *** Quits: Tazy (~Tazmainia@102.39.80.61) (Ping timeout: 265 seconds)
[04:13:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[04:13:39] <[itchyjunk]> i followed google links and such but i couldn't find exactly what i wanted
[04:13:41] *** Quits: Burgundy (~yomon@5-12-93-128.residential.rdsnet.ro) (Ping timeout: 265 seconds)
[04:13:52] <[itchyjunk]> i can make everything but taht takes too long and it froze yesterday
[04:14:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:14:15] <[itchyjunk]> surely this is a common enough problem that someone will just know the solution!
[04:14:50] <arahael> I'd have to say it probably isn't /that/ common.
[04:15:47] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2.1)
[04:18:57] *** Quits: zwr (~zwr@2804:d45:b966:fb00:b227:f558:54b0:1a3c) (Remote host closed the connection)
[04:19:09] <[itchyjunk]> :)
[04:19:11] <[itchyjunk]> :(
[04:25:14] *** Joins: hexfive (~eric@50.35.83.177)
[04:26:10] <[itchyjunk]> :D the osdev people finally gave up and helped ha
[04:27:30] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[04:28:35] *** Joins: zaher_ (~zaher@37.48.148.93)
[04:28:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:29:01] *** Quits: zaher (~zaher@37.48.159.53) (Ping timeout: 252 seconds)
[04:30:07] *** Joins: Usr07 (~Usr07@c-73-67-203-220.hsd1.or.comcast.net)
[04:30:16] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:30:17] <Usr07> you get no snuggles or cuddles now!!!
[04:34:54] <Usr07> but seriously you guys. I need programming help. How do I open the text editor.
[04:35:17] <Usr07> how do you type really fast to get things done fast?
[04:35:29] <Usr07> how do you turn on the computer?
[04:35:37] <Usr07> how do you give a computer power?
[04:35:53] <Usr07> how do you open your eyes and look at a screen?
[04:36:06] <Usr07> how do you escape the baby crib?
[04:36:18] <Usr07> how do you get out of the womb?
[04:36:26] <[itchyjunk]> how do i get banned from a channel?
[04:41:50] <[itchyjunk]> Hi, what is the use of openocd or (on chip debugger) in general?
[04:42:07] <[itchyjunk]> it's hard to tell from just the website https://openocd.org/pages/about.html
[04:42:09] <bayaz> Title: About 
[04:43:21] <Usr07> [itchyjunk]: I'm 0.3%sure it's about setting up a runtime on your system to test microchips.
[04:43:41] <[itchyjunk]> hmm isn't that why i am getting qemu ?
[04:43:47] <[itchyjunk]> do i need both?
[04:44:15] <Usr07> [itchyjunk]: I'm 0.2% sure just getting qemu will solve all of your problems.
[04:44:46] <[itchyjunk]> ah okay. the tutorial i am reading installed a few different thing including openocd so was curious
[04:45:21] <Usr07> [itchyjunk]: I'm 0.2%sure that using openocd allows qemu to overclock the CPU
[04:46:17] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 245 seconds)
[04:46:47] <nitrix> With that kind of precision, you'll want to provide +/- error ranges for uncertainties.
[04:47:10] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:48:05] <Usr07> nitrix: I respect the feedback but I try use as minimal style as possible, I'm 98%sure. and I'm 99% sure of that. and I'm 99%sure of that.
[04:48:27] <[itchyjunk]> uh.. the tutorial is magically using some riscv c compiler now
[04:48:29] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 265 seconds)
[04:49:03] <Usr07> [itchyjunk]: I'm 0.2% sure they're creating executables for a microchip on another machine.
[04:49:41] <nitrix> It's important that people know exactly how sure you are, you can't leave room for misunderstandings.
[04:49:49] <Usr07> lol
[04:50:24] <[itchyjunk]> riscv64-unknown-elf-gcc add.c -O0 -g
[04:50:31] <[itchyjunk]> so i need this specific gcc installed too?
[04:51:31] <Usr07> I'm so freakin' depressed you guys. The only thing that makes me happy is downloading things from the Internet.
[04:51:45] <[itchyjunk]> Just download the internet then
[04:52:04] <Usr07> [itchyjunk]: but first I need to download more RAM. </just kidding>
[04:52:49] <Usr07> [itchyjunk]: I'm 7%-12%sure you'll need to download a custom gcc installation
[04:53:13] <[itchyjunk]> :(
[04:53:21] <[itchyjunk]> why can't i just write asm ?
[04:53:37] <[itchyjunk]> but i'll get that gcc i guess after this qemu is done making
[04:54:13] <Usr07> [itchyjunk]: you're my hero
[04:54:25] <[itchyjunk]> i'll be an hero at this rate
[04:54:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:54:33] <PamiPetteri> https://pastebin.com/XtbVUe5v
[04:54:35] <bayaz> Title: Python: Euclidean distance - Pastebin.com 
[04:56:07] <Usr07> [itchyjunk]: you 0.2%can write asm. It's 900%hard though I'm 7%sure.
[04:56:46] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[04:57:14] <pulse> Usr07, stop behaving like a badly coded markov chain please
[04:57:35] <[itchyjunk]> my only issue is that I don't know C
[04:57:44] <[itchyjunk]> and this is the 3rd tutorial that's using C code to teach asm
[04:58:05] <pulse> [itchyjunk], you can learn C in 3 days (enough to be able to work with it)
[04:58:07] <Usr07> pulse: but I'm depressed
[04:58:16] <pulse> Usr07, have you tried meditation and chamomile tea
[04:58:24] *** Joins: qaph (~weechat@user/qaph)
[04:58:28] <[itchyjunk]> yeah i vaguely understand the code so i'll pretend i know what it is and move on
[04:58:36] <Thedarkb-Desktop> You can learn how to make stuff in C in about three days and then spend three years learning about the errata.
[04:58:43] <pulse> true
[04:58:47] <[itchyjunk]> i just need a riscv-gcc compiler and i'll be good
[04:58:49] <pulse> but C is a very simple language
[04:59:01] <pulse> it's not like C++ where you'll study it for 10 years and still know only 15%
[04:59:12] * Usr07 sips some chamomile tea as instructed. +2 wisdom granted.
[04:59:35] <Thedarkb-Desktop> I keep looking at other people's C++ and coming to the conclusion that I'll never be able to learn it.
[04:59:49] <Thedarkb-Desktop> Everyone uses a different subset of C++.
[05:00:12] <[itchyjunk]> subset of C++?
[05:00:17] <[itchyjunk]> is C++ like lisp then?
[05:00:22] <[itchyjunk]> commonlisp etc etc
[05:01:01] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 252 seconds)
[05:01:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:01:03] *** qaph is now known as kron
[05:01:27] *** Joins: Common-Lisp (~user@107-128-158-46.lightspeed.bcvloh.sbcglobal.net)
[05:01:39] <Usr07> more than one way to use it
[05:02:35] <quartz> I suppose to write a program that squares a number, yet I'm not sure why this does not work in Java: https://bpa.st/EPPA
[05:02:37] <bayaz> Title: View paste EPPA 
[05:02:52] <quartz> I make two classes, and run the main program through main.
[05:03:19] <quartz> But I get the error line 33: cannot find symbol squareInt
[05:03:29] *** Joins: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com)
[05:03:55] <tachoknight> change to square.squareInt
[05:04:07] <tachoknight> it's a static method inside the class square
[05:04:21] <Usr07> I wish I could program in Java. I'm too depressed to do any coding.
[05:04:48] <Common-Lisp> programming in Java would make me depressed 
[05:05:16] <[itchyjunk]> Hi, i have installed the gcc compiler but when i try to compile my add.c i get this error :: https://bpa.st/XJ2A
[05:05:17] <bayaz> Title: View paste XJ2A 
[05:05:59] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:06:08] <[itchyjunk]> I am programming in java
[05:06:16] <tachoknight> what does add.c look like?
[05:06:17] <[itchyjunk]> the class i have to pass is in java
[05:06:44] <[itchyjunk]> https://bpa.st/7QUA
[05:06:45] <bayaz> Title: View paste 7QUA 
[05:07:28] *** Joins: jamea (~jamea@177.239.82.231)
[05:07:43] <[itchyjunk]> the content is copy pasted from the tutorial so i'd imagine it's fine?
[05:07:58] <tachoknight> the issue is in the linking, i'm guessing the compiler toolchain is not fully set up
[05:08:04] <tachoknight> ld is the linker
[05:08:13] <[itchyjunk]> oh no
[05:08:37] <[itchyjunk]> `sudo apt install gcc-riscv64-unknown-elf` is all i've done.
[05:08:40] <Usr07> oh no
[05:08:56] * Usr07 watches [itchyjunk] 's house explode
[05:09:50] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:09:56] <Usr07> [itchyjunk]: apt-cache search riscv64
[05:10:26] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 260 seconds)
[05:10:43] *** Quits: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 265 seconds)
[05:11:34] <[itchyjunk]> 100's of results
[05:11:40] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[05:12:08] <Usr07> smoke dope. drink chamomile tea. meditate. smoke dope. download the Internet. My life is great.
[05:13:26] <quartz> Sorry to ask again, but I'm writing this simple program that is suppose to square a number. I keep failing the test cases and I"m not sure why. https://bpa.st/ZOUA
[05:13:27] <bayaz> Title: View paste ZOUA 
[05:13:36] <quartz> I'm writing it in Java.
[05:14:27] <Usr07> quartz: you're doing something wrong.
[05:14:34] <quartz> Usr07: No kidding
[05:15:00] <Usr07> quartz: fix your problem and do it right.
[05:15:50] <Usr07> make sure your syntax is right/valid. then make sure your semantics makes clear purposeful sense.
[05:17:05] <quartz> It literally just prints out the same value as the input.
[05:17:23] <[itchyjunk]> i have done goofed following the tutorial
[05:17:25] <[itchyjunk]> this sucks
[05:17:46] <Usr07> [itchyjunk]: bad tutorials are everywhere. believe in yourself [itchyjunk]
[05:18:09] <[itchyjunk]> is lineRead() turning it into int?
[05:18:21] <[itchyjunk]> idk how input stream reader works
[05:18:32] <[itchyjunk]> Scanner s = new Scanner(System.in)
[05:18:40] <[itchyjunk]> int n = s.nextInt();
[05:18:52] <quartz> Yeah the way they set up the main function is so bad
[05:18:54] <quartz> it's confusing
[05:19:14] <[itchyjunk]> Usr07, i didn't get all the took chains 
[05:19:26] <Usr07> took chains?
[05:19:51] <[itchyjunk]> https://twilco.github.io/riscv-from-scratch/2019/04/27/riscv-from-scratch-2.html
[05:19:52] <bayaz> Title: RISC-V from scratch 2: Hardware layouts, linker scripts, and C runtimes 
[05:19:52] <Usr07> you mean tool chains?
[05:20:32] <[itchyjunk]> yeah
[05:20:34] <Usr07> omg you guys I'm gonna die.
[05:20:40] <[itchyjunk]> we are all gonna die
[05:20:42] <[itchyjunk]> eventually
[05:20:51] <Common-Lisp> probably
[05:22:28] <quartz> This has to be the worse programming environment ever. They use this stupid main function
[05:22:56] <Usr07> I could write a book about how much I hate programming syntax and semantics.
[05:23:20] <[itchyjunk]> what stupid main function?
[05:23:35] <Usr07> public static void main(String[] args){} //?
[05:24:07] <[itchyjunk]> isn't that the bread and butter of java? how do you run java without that main method?
[05:24:26] *** Joins: rtypo (~alex@user/rtypo)
[05:24:38] <[itchyjunk]> my 2 int brain can't handle this
[05:24:50] <[itchyjunk]> google says the gcc is broken
[05:24:51] <[itchyjunk]> https://github.com/riscv-software-src/riscv-tools/issues/343
[05:24:52] <bayaz> Title: Quickstart failed Â· Issue #343 Â· riscv-software-src/riscv-tools 
[05:27:29] * Usr07 falls on the ground and dies
[05:27:53] * [itchyjunk] writes some java code to get rid of dead bodies
[05:28:04] <[itchyjunk]> i assume this kinda stuff will happen more than once
[05:28:17] <Usr07> write once execute everywhere
[05:28:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[05:29:25] <InPhase> [itchyjunk]: Test the bool IsDead() carefully.  Don't want skynet.
[05:29:48] <[itchyjunk]> InPhase, is the gcc broken or did i do something wrong?
[05:30:07] <InPhase> [itchyjunk]: The first rule is it's never the compiler.
[05:30:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:30:19] <InPhase> [itchyjunk]: Sometimes it's the compiler, but it's a good rule.
[05:30:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:30:35] <Usr07> what if it was always the compiler?
[05:30:39] <[itchyjunk]> okay in that case, does the compiler need to be run on the specific hardware to compile for it?
[05:30:56] <[itchyjunk]> can i by on hardware X and tell the compiler to compile for hardware Y?
[05:30:59] <InPhase> Usr07: Then you switch from MSVC to gcc.  Problem solved.
[05:31:27] <arahael> In more than a decade of enterprise software development, I've only had a showstopping bug due to a compiler... Once.
[05:31:38] <[itchyjunk]> i installed the rsicv-gcc but what more do i need to do to make it compile
[05:31:44] <arahael> And enterprise software often uses weird compilers.
[05:32:21] <InPhase> [itchyjunk]: Which of your many links has an error you're dealing with?
[05:32:43] <[itchyjunk]> https://bpa.st/XJ2A
[05:32:44] <bayaz> Title: View paste XJ2A 
[05:33:29] <arahael> Looks like [itchyjunk] isn't seting up the cross compilation _environment_ correctly.
[05:34:03] <[itchyjunk]> so i need to do more to compile it can't just gcc it
[05:34:12] <[itchyjunk]> what kind of environment does gcc want?
[05:34:32] <Common-Lisp> presumably a riscv one
[05:34:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:34:59] <InPhase> [itchyjunk]: And where is the crt0.o file?
[05:35:04] <[itchyjunk]> does it have anything to do with on chip debugger?
[05:35:10] <[itchyjunk]> InPhase, never heard of her
[05:35:19] <[itchyjunk]> i apt-get installed the compiler
[05:35:23] <[itchyjunk]> and have a add.c
[05:36:11] <Usr07> [itchyjunk]: what you need to do is install $something-here;
[05:36:18] <[itchyjunk]> lol
[05:37:08] <Usr07> [itchyjunk]: maybe check the recommends and suggested packages by your risc deb package.
[05:37:41] <InPhase> [itchyjunk]: Pastebin ls -l /usr/lib/riscv64-unknown-elf/lib/
[05:37:47] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:38:09] <arahael> [itchyjunk]: InPhase's tip is a very good suggestion.  Read the messages.  Research them. If it's complaining about a missing object file, learn about it. Find out where it is, find out where the speicfic one you need is on your system or if you have to build it yourself, etc.
[05:38:16] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 252 seconds)
[05:38:20] <Usr07> [itchyjunk]: just pretend everything is working and pretend to be happy.
[05:38:34] <[itchyjunk]> https://bpa.st/66LQ
[05:38:35] <bayaz> Title: View paste 66LQ 
[05:39:12] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:41:47] <Usr07> alright I downloaded the Internet. Everything loo--omg FBI cars showed up. OMG *runs out the window and sprints into an open field and gets sniped*
[05:42:12] <InPhase> [itchyjunk]: Well crt0.o is not there, and should be.  What went wrong with your installation process?
[05:42:16] *** Quits: xff0x (~xff0x@2001:1a81:52ad:c900:b704:3c1b:6bea:6e62) (Ping timeout: 252 seconds)
[05:42:58] <arahael> [itchyjunk]: Which distribution?
[05:43:19] <Usr07> [itchyjunk]: let me guess. Ubuntu 20.04
[05:43:44] <[itchyjunk]> here is the output of the install : https://bpa.st/QDVQ
[05:43:45] <bayaz> Title: View paste QDVQ 
[05:43:56] *** Joins: xff0x (~xff0x@2001:1a81:52ed:4100:e126:e3d0:8698:438)
[05:43:56] <[itchyjunk]> i don't see any reds and what not to suggest installation was stalled
[05:44:02] <arahael> Ah, ubuntu.
[05:44:06] <[itchyjunk]> wrong paste
[05:44:11] <[itchyjunk]> ubuntu 20.04
[05:44:50] <[itchyjunk]> here is the installation : https://bpa.st/65SA
[05:44:51] <bayaz> Title: View paste 65SA 
[05:44:53] <Usr07> [itchyjunk]: did you follow-through with my idea to check your package's recommended/suggested packages to install?
[05:45:04] <[itchyjunk]> nope the list was too long
[05:45:11] <Usr07> omg *dies again*
[05:45:34] <arahael> [itchyjunk]: Looks like it's part of the picolibc-riscv64-unknown-elf package.
[05:45:50] <arahael> [itchyjunk]: Or alternatively maybe the gcc-riscv64-unknown-elf package.
[05:46:13] <[itchyjunk]> `sudo apt install gcc-riscv64-unknown-elf` is what i have.
[05:46:31] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[05:46:37] <Usr07> [itchyjunk]: since the tutorial is back in 2019, you may want to check ubuntu 18.04's packages installed and try to get those.
[05:46:50] <arahael> [itchyjunk]: Does "gcc-riscv64-unknown-elf" contain the libc?
[05:46:57] <InPhase> [itchyjunk]: What do you have in /usr/lib/riscv64-unknown-elf/ itself?
[05:47:56] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:48:05] <[itchyjunk]> bin and lib in there
[05:48:44] <[itchyjunk]> arahael, not sure how to check
[05:48:50] <arahael> This is insightful: https://packages.ubuntu.com/focal/amd64/gcc-riscv64-unknown-elf/filelist
[05:48:51] <bayaz> Title: Ubuntu â File list of package gcc-riscv64-unknown-elf/focal/amd64 
[05:49:30] <[itchyjunk]> InPhase, this is what's in there https://bpa.st/SUMQ
[05:49:31] <bayaz> Title: View paste SUMQ 
[05:57:09] <InPhase> [itchyjunk]: Try installing libc6-dev-riscv64-cross
[05:58:38] <[itchyjunk]> installed, same error when compiling
[05:59:08] <InPhase> Now convince it to look in /usr/riscv64-linux-gnu/lib/ and to use crt1.o instead of crt0.o
[05:59:26] <[itchyjunk]> hmm
[06:01:11] <Usr07> why can't you just be happy [itchyjunk] ? all you need is a blank text file and all of the Software Development Kits installed.
[06:01:36] <[itchyjunk]> idk how to make it look in there and use that
[06:01:50] <InPhase> Me either.  But I'm going to call that one your job.  :)
[06:02:01] <[itchyjunk]> Usr07, there is no happiness, only suffering
[06:02:55] <Usr07> [itchyjunk]: eesh. That's depressing. *dies*
[06:03:24] *** Quits: Salt_Pepper (~Salt_Pepp@c-68-62-42-123.hsd1.mi.comcast.net) (Quit: Leaving)
[06:03:26] <[itchyjunk]> To live is to suffer and to survive is to find meaning in that suffering. - neitchzhe guy
[06:03:46] <Usr07> snap out of your loophole and smoke the air
[06:04:35] *** Joins: kk (~kk@ns1003916.ip-51-81-154.us)
[06:04:57] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[06:05:28] *** Joins: jazzy (~jaziz@2600:380:c03c:c2e6:bd81:c730:db73:37a)
[06:06:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[06:12:31] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:13:13] <Usr07> what would you find in the most perfect building?
[06:13:21] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:13:21] *** brabrax_ is now known as brabrax
[06:14:35] *** Quits: gitgood (~gitgood@85.210.186.158) (Ping timeout: 268 seconds)
[06:15:11] *** Quits: Klinda (~klinda@2.227.251.209) (Quit: Leaving)
[06:16:23] *** Quits: Usr07 (~Usr07@c-73-67-203-220.hsd1.or.comcast.net) (Quit: Client closed)
[06:21:16] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[06:23:27] <edgar-rft> there is no less perfect building
[06:23:51] <[itchyjunk]> time to give up, this is too exhausting
[06:24:14] <arahael> [itchyjunk]: You could consider a different language ecosystem that prioritises this, but there's still going to be learning and research involved.
[06:25:09] <[itchyjunk]> yup! easier to give up
[06:28:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:30:27] *** Quits: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu) (Remote host closed the connection)
[06:30:32] *** Joins: hexingb (~hexingb@101.236.65.176)
[06:30:33] *** Quits: hexingb (~hexingb@101.236.65.176) (Read error: Connection reset by peer)
[06:30:51] *** Joins: hexingb (~hexingb@101.236.65.176)
[06:33:42] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[06:35:14] *** Quits: hexingb (~hexingb@101.236.65.176) (Read error: Connection reset by peer)
[06:37:29] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[06:37:59] *** Quits: Common-Lisp (~user@107-128-158-46.lightspeed.bcvloh.sbcglobal.net) (Quit: ERC (IRC client for Emacs 27.2))
[06:39:46] *** Quits: tangyQED (tangy@user/tangy) (Quit: Quit)
[06:41:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:44:02] *** Joins: kmh_ (~kmh@p200300df5f35250021639dd591b39146.dip0.t-ipconnect.de)
[06:45:25] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Ping timeout: 268 seconds)
[06:45:25] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Quit: Leaving)
[06:45:34] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[06:45:49] *** Quits: kmh (~kmh@p200300df5f138a0021639dd591b39146.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:48:27] *** Joins: pavonia (~user@user/siracusa)
[06:49:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:55:08] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:61c4:f819:716b:e549)
[06:57:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[07:03:54] *** Joins: CoderGuy2 (~CoderGuy@2601:644:101:4f20:4930:51a7:e3f6:90d5)
[07:05:42] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:07:34] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 260 seconds)
[07:10:10] *** Joins: soapsudsxx (~soapsudsx@141.193.188.134)
[07:11:47] *** Joins: jinsun (~quassel@user/jinsun)
[07:15:01] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[07:15:58] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[07:19:18] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:21:24] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[07:21:34] *** Joins: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com)
[07:22:30] *** Joins: zaher (~zaher@37.48.157.113)
[07:22:40] *** Quits: zaher_ (~zaher@37.48.148.93) (Ping timeout: 265 seconds)
[07:23:26] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 268 seconds)
[07:23:40] *** Joins: hexingb (~hexingb@101.236.65.176)
[07:26:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:33:56] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:34:40] *** Joins: frost (~frost@59.71.243.104)
[07:37:19] *** Joins: andrei-n (~andrei-n@109.130.156.104)
[07:37:45] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[07:40:47] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:48:01] *** Joins: diamondbond (~diamondbo@175.157.224.60)
[07:49:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[07:50:13] *** Quits: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 265 seconds)
[07:50:44] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:52:42] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[07:53:27] *** Quits: nctcf^ (~nctcf@68.101.54.227) (Remote host closed the connection)
[07:59:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:05:40] *** Quits: diamondbond (~diamondbo@175.157.224.60) (Ping timeout: 252 seconds)
[08:07:28] *** Joins: diamondbond (~diamondbo@175.157.224.60)
[08:07:36] *** Quits: diamondbond (~diamondbo@175.157.224.60) (Read error: Connection reset by peer)
[08:07:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:09:43] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[08:10:02] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[08:15:17] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[08:23:52] *** Quits: kk (~kk@ns1003916.ip-51-81-154.us) (Ping timeout: 252 seconds)
[08:25:25] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[08:31:51] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:36:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:36:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:36:43] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[08:38:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:39:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:40:48] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:41:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:43:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:46:41] *** Quits: humky (~humky@user/humky) (Ping timeout: 268 seconds)
[08:51:51] *** Quits: ricky_clarkson (~rjclarkso@240.111.247.35.bc.googleusercontent.com) (Killed (NickServ (GHOST command used by pi___!~pi@c-98-35-32-160.hsd1.ca.comcast.net)))
[08:52:21] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:56:33] *** Joins: dre (~dre@2001:8003:c932:c301:4db3:5aed:63c6:cc67)
[08:59:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:59:34] *** Quits: jamea (~jamea@177.239.82.231) (Ping timeout: 252 seconds)
[08:59:37] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:01:26] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 260 seconds)
[09:01:29] *** Quits: hexingb (~hexingb@101.236.65.176) (Ping timeout: 268 seconds)
[09:02:29] *** Joins: hexingb (~hexingb@2409:8900:282f:2ec9:c1d5:f17d:cb58:f6f7)
[09:04:10] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 265 seconds)
[09:09:00] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[09:09:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:11:18] *** Quits: andrei-n (~andrei-n@109.130.156.104) (Quit: Leaving)
[09:13:45] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[09:16:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[09:17:53] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[09:18:16] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[09:19:45] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[09:21:04] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[09:26:01] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[09:26:40] *** Quits: hexingb (~hexingb@2409:8900:282f:2ec9:c1d5:f17d:cb58:f6f7) (Ping timeout: 240 seconds)
[09:29:16] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:35:26] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 252 seconds)
[09:38:20] *** Joins: Burgundy (~yomon@5-12-93-128.residential.rdsnet.ro)
[09:44:29] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:47:04] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[09:48:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:50:33] *** Joins: user51 (~user51@176.228.90.248)
[09:53:28] *** Quits: zaher (~zaher@37.48.157.113) (Ping timeout: 265 seconds)
[09:55:09] *** Joins: hexingb (~hexingb@101.236.65.176)
[09:56:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:56:39] *** Joins: flaknet99 (~0x100@32.211.211.39)
[09:57:55] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:58:08] *** Joins: flaknet99 (~0x100@32.211.211.39)
[10:08:54] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[10:09:37] *** Quits: yaboiburner (~yaboiburn@static-68-235-44-10.cust.tzulo.com) (Read error: Connection reset by peer)
[10:10:10] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[10:10:18] *** Joins: zaher (~zaher@37.48.144.155)
[10:13:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:15:42] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 268 seconds)
[10:16:28] *** Quits: Samian (~Sami@user/samian) (Killed (NickServ (GHOST command used by Samian_!~Sami@174.27.107.153)))
[10:17:04] *** Joins: Samian (~Sami@user/samian)
[10:18:36] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 265 seconds)
[10:20:38] *** Quits: kmh_ (~kmh@p200300df5f35250021639dd591b39146.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:20:50] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[10:21:13] *** Joins: kmh (~kmh@p200300df5f378d0021639dd591b39146.dip0.t-ipconnect.de)
[10:21:14] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[10:23:34] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 260 seconds)
[10:23:56] *** vinleod is now known as vdamewood
[10:26:03] <vdamewood> Hi, people etc.
[10:30:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:31:05] <user51> gday!
[10:31:41] <user51> i've been thinking about forth since yesterday. i'm just wondering how much forth.
[10:33:11] <user51> for example, i have an ALU for the gameboy. i think you could do it quite neatly if you pass the op as an argument. but then i just wonder why not do it the dumb way, without a jump table.
[10:33:33] *** Joins: DaPinkOne (~Dap@user/dap)
[10:34:19] *** Joins: nrl^ (~nrl@68.101.54.227)
[10:36:12] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:61c4:f819:716b:e549) (Read error: Connection reset by peer)
[10:39:29] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[10:41:09] <user51> i think i'm slightly mistaken here - you could put them inside a : then do the rest, will probably work
[10:42:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:43:40] *** Quits: JavaBean (~javabean@user/javabean) (Quit: oh bother)
[10:44:16] *** Joins: lain_ (~lain@81.163.47.192)
[10:44:52] *** Joins: JavaBean (~javabean@user/javabean)
[10:45:42] *** Joins: euouae (~euouae@user/euouae)
[10:45:59] <euouae> Hello what is 'pending' in a github comment? What is the meaning of it?
[10:47:57] <flaknet99> 1640s, "during, in the process of, for the time of the continuance of," a preposition formed on the model of French pendant "during," literally "hanging," present participle of pendere "to hang, cause to hang" (from PIE root *(s)pen- "to draw, stretch, spin").
[10:48:13] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[10:48:30] *** Joins: mrig (~mrig@user/mrig)
[10:51:01] *** Joins: vysn (~vysn@user/vysn)
[10:51:37] <dodo> euouae: is it your own? sounds like it needs to be approved first
[10:52:04] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[10:52:24] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[10:52:27] <euouae> dodo, I'm trying to reply to someone on github. That's what I thought. I'm a bit shocked. Looks like someone put me on an 'approved' list after I PRed some fixes. 
[10:53:01] <euouae> It's really strange, I was always polite and just went for bugfixes and it looks like I already offended someone?
[10:53:21] <dodo> eh, who cares.. could be the default for the project
[10:53:30] <euouae> It wasn't like that 7 days ago
[10:53:37] <dodo> configs can change
[10:54:03] <euouae> So I submit 4 PRs and then configs change?
[10:54:34] <dodo> the world doesn't revolve around you? the config changed, no reason to assume because of you?
[10:55:03] <euouae> Oh well
[10:55:48] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[10:55:48] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[10:55:48] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:58:37] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[10:59:58] *** Quits: src (~src@user/src) (Quit: Leaving)
[11:00:01] <droid3> hey guys a minor issue tonight. Why does the html sqrt character have hardly no horizontal bar â
[11:00:36] <euouae> Because it's just a character
[11:00:54] *** Joins: palasso (~palasso@user/palasso)
[11:01:04] <droid3> I am not using latex,tex or any picture/gift. And there is one place i want to use the sqrt symbol on my html page. Yet it looks like shit when it doesnt strech over the expression.
[11:01:27] <euouae> You need to use katex
[11:01:30] <droid3> so is there way a to work around this?
[11:01:32] <euouae> https://katex.org/ 
[11:01:33] <bayaz> Title: KaTeX â The fastest math typesetting library for the web 
[11:01:41] <euouae> Try \sqrt{123} to see for yourself
[11:02:11] <droid3> O ok curious can you currently embed latex in your webpages or does latex commands not support yet?
[11:02:25] <euouae> That's not a thing
[11:02:52] <euouae> You can use katex or mathjax
[11:03:11] <euouae> Is it your website or a page hosted somewhere? If the latter, there may be instructions on how to use the above.
[11:03:54] <droid3> O you know what the wcc or who ever comes out with html5 ...etc versions there next biggest feature would be to support tex/latex with a latex tag to allow one to embed science /math /logic symbols in there webpage without having to take pictures of them.
[11:05:00] *** Quits: zaher (~zaher@37.48.144.155) (Ping timeout: 265 seconds)
[11:05:05] <droid3> I know they have ml and i have used that bit its not a standard thing in all webservers/html/browsers at least one i was playing with it.
[11:06:09] <droid3> and latex/tex is the way to go if they only standardized it in html and browser standards then we have no more effort in setting up latex in are forums or on are webpages ...etc
[11:06:43] <euouae> Doesn't sound like you know what you're talking about :P
[11:07:07] <droid3> I am rambling because i just wanted something quick to get the readme up but realized i have to really setup some latex or ml on the server side or install in browsers ...etc
[11:07:18] <euouae> In what page?
[11:07:28] <euouae> Are you hosting your own server or is your page somewhere else?
[11:08:06] <droid3> Ya i am not very knowledgable in latex/tex never got into using it should have though because i got lots of cool math ideas i could formally write up just i have to really learn how to use it well.
[11:08:30] <droid3> Well its on github in a readme.md file
[11:09:13] <droid3> So i dont have access to what they support but in general its not only for github i run into liking to have good math typeset available quickly.
[11:09:36] <droid3> And its not so easy to do if you dont know latex/tex well enough to be quick with it.
[11:09:42] <euouae> Are you talking about github pages?
[11:10:23] <droid3> No just the readme.md files but curious does github pages support it because eventually all need it for those pages as well.
[11:10:40] <euouae> Yes github pages supports mathjax
[11:10:55] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:11:23] <droid3> My work around is use some online latex to gif converter then just embed the image. But it sure is a pain to go thru all this for just small things like a readme file.
[11:11:59] <euouae> That's a bad solution, just use https://www.mathjax.org/#gettingstarted
[11:11:59] <bayaz> Title: MathJax 
[11:12:06] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[11:12:29] <droid3> Ok all look into that. thanks for the help. I just wished latex was more standard in any browser/host sort of like how css and javascript in very browser/webserver now.
[11:12:48] <droid3> aka someday maybe latex will be universal in browsers and webservers support.
[11:12:56] <euouae> It won't be.
[11:13:05] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[11:13:08] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[11:13:13] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 265 seconds)
[11:13:24] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[11:13:42] <euouae> First, 'tex' and 'latex' are different; second, there's no chance they'll have it, it's a massive complicated thing and nobody wants it
[11:14:31] <euouae> droid3 take a look at the setup of https://github.com/Quuxplusone/blog if you want to see a way to have math in your blog
[11:14:32] <bayaz> Title: GitHub - Quuxplusone/blog: https://quuxplusone.github.io/blog 
[11:14:48] <euouae> Note that the blog I linked uses older versions of mathjax. You should follow the latest instructions from mathjax.org instead
[11:14:55] <droid3> bayaz this is what i am talking about
[11:14:57] <droid3> https://github.com/nate-fidalgo/MathComputations/blob/master/ContinuedFractions/Readme.md
[11:14:58] <bayaz> Title: MathComputations/Readme.md at master Â· nate-fidalgo/MathComputations 
[11:15:39] <droid3> And this is the pretty cool class for continued fraction expansion
[11:15:40] <droid3> https://github.com/nate-fidalgo/MathComputations/blob/master/ContinuedFractions/ContinuedFractions.java
[11:15:41] <bayaz> Title: MathComputations/ContinuedFractions.java at master Â· nate-fidalgo/MathComputations 
[11:16:06] <droid3> Anyway i should take the time to become good at writting math as much as i am with discussing it and teaching it.
[11:16:30] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[11:16:46] <droid3> Latex is where i lack but i learn it well if its going to be the standard that all math typeset for the internet uses.
[11:17:12] *** Joins: immibis_ (~hexchat@62.156.144.218)
[11:17:35] <droid3> Other then that it defeats the purpose of learning it if its for the internet because there tons of other options flying around.
[11:18:10] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:18:22] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[11:18:32] <droid3> Anyway thanks and yes i be so much better if either others wrote up my proofs from the board or from piece of paper i did them on.
[11:18:57] <pikapika> Hey droid3 
[11:19:05] <droid3> Aka translated them for the internet website or for the pdf publishing.
[11:19:10] <pikapika> have you worked with glass
[11:19:22] <euouae> Just use a WYSIWYG editor for tex droid3, like https://www.lyx.org/ 
[11:19:24] <bayaz> Title: LyX | LyX â The Document Processor 
[11:19:56] <droid3> Actually it be nice to know how to do math typeset well like latex because i love to write short books on different topics.
[11:20:03] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[11:20:43] <droid3> I just suck at typeset and suck even more at proper english writting. For people that write books i imagine they have some typesetter guys and proof readers 
[11:21:26] <droid3> Anyway maybe someday as of current i just want to kind of express things more mathematical for my code and math ideas i put it.
[11:22:01] *** Joins: gggp (~textual@60.10.194.42)
[11:22:14] <pikapika> Math is very hard
[11:24:38] <droid3> euouae thanks i might try some of these out maybe just using pdf and gif/pictures is the way to go fast. If these wysiwym are good because many times i had problems with latex \document tags and layout stuff screwing up because of my lack of knowing how to use them well.
[11:25:27] <droid3> If there like a mathematica programs palette where you just select a matrix , sqrt , integral ....etc symbol and type that be cool.
[11:25:52] <droid3> But formating the heading , document , font  and other stuff was problematic for me when using latex.
[11:26:28] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[11:27:44] <euouae> No, gif/pictures and pdf are not the way to go fast
[11:27:49] <euouae> Why don't you just listen to what I'm saying dude lol
[11:28:50] *** Quits: soapsudsxx (~soapsudsx@141.193.188.134) (Remote host closed the connection)
[11:29:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[11:30:26] <pikapika> Just use nano bro
[11:30:39] <pikapika> They used to make papers with literally just a typewriter
[11:30:44] <pikapika> nano is a step above that
[11:32:15] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[11:32:51] *** Joins: Lyn (~Lyn@user/law)
[11:34:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:35:24] <Hash> This is one thing you will have to learn: an attack on your work is not an attack on you.
[11:35:37] <Hash> Any work is fair game. If somebody proposes something, it is an automatic invitation to attack it. If you break one of our systems, we will applaud the attack and tell everybody about it.
[11:35:40] <pikapika> Just use a typewriter bro
[11:35:52] <Hash> We constantly look for weaknesses in any system because that is the only way to learn how to make more secure systems.
[11:35:57] <Hash> I love that phrasing.
[11:36:01] <pikapika> Just use hand crafted font stamps bro
[11:36:50] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 260 seconds)
[11:37:42] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[11:38:07] <jtgd> just use a linotype and a printing press bro
[11:39:20] <pikapika> Woodcutting is fun
[11:41:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[11:41:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:44:02] *** Joins: immibis_ (~hexchat@62.156.144.218)
[11:45:23] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:45:25] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[11:49:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:54:40] *** Joins: xiongxin8802 (~quassel@2409:8955:3818:4d04:f171:bdd2:3f54:ffdc)
[11:55:05] *** Quits: nromsas (~nromsas@101.175.64.73) (Ping timeout: 256 seconds)
[11:55:32] *** Joins: gggp (~textual@60.10.194.42)
[11:55:36] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:56:08] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[11:59:35] *** Quits: lain_ (~lain@81.163.47.192) (Quit: Lost terminal)
[12:00:15] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[12:01:11] *** Joins: frost (~frost@59.71.243.104)
[12:01:14] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[12:03:33] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:07:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:16:58] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 268 seconds)
[12:17:59] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[12:18:08] <vdamewood> So, looks like OpenSSL 3.0.0 has finally released, and the new license is in place and has no NOTICE file.
[12:18:24] <vdamewood> Which means the new license is a lot less of a pain in the ass than it was before.
[12:18:56] *** Joins: gggp (~textual@60.10.23.159)
[12:24:12] *** Joins: ^-^hi (~^-^hi@user/-hi/x-1729478)
[12:25:11] *** Joins: aradesh (~aradesh@user/aradesh)
[12:26:13] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:26:49] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[12:26:49] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[12:26:49] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:28:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:29:33] *** Joins: dericku7 (~dericku7@user/dericku7)
[12:32:41] *** Quits: dericku7 (~dericku7@user/dericku7) (Quit: Leaving)
[12:40:00] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[12:42:52] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 268 seconds)
[12:45:22] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:45:45] <arahael> vdamewood: I've noticed Alpine has gone all out in adding it.
[12:46:03] <vdamewood> Okay... what exactly is Alpine?
[12:46:11] *** Joins: Samian (~Sami@user/samian)
[12:47:44] <arahael> It's a musl-based distro, they also avoid systemd, I believe. Supposed to be good for docker images.
[12:48:09] <vdamewood> Ah, okay. That explains why I see it all over the place for 'cloud' tools.
[12:48:37] <vdamewood> What's musl?
[12:49:44] *** Quits: gggp (~textual@60.10.23.159) (Quit: Textual IRC Client: www.textualapp.com)
[12:50:17] <user51> i hate the fact that thinking forth starts with criticsm about other programming methodologies.
[12:50:27] <vdamewood> Oh, It's not glibc, that's what it is.
[12:51:16] <user51> i take it back: it starts with a rorscarch test
[12:51:56] <vdamewood> ð What do you see in this emoji?
[12:52:27] <user51> 01f450
[12:53:07] <vdamewood> I see.
[12:53:14] <vdamewood> And how does that make you feel?
[12:53:41] <user51> redpilled
[12:54:47] <vdamewood> better red pill than chemo I guess.
[12:55:02] *** Quits: xiongxin8802 (~quassel@2409:8955:3818:4d04:f171:bdd2:3f54:ffdc) (Read error: Connection reset by peer)
[12:55:47] <pyzozord> my first thought was "hand bird, dove or eagle?"
[12:56:08] <pyzozord> I never seen it before
[12:56:40] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 252 seconds)
[12:56:40] <sandman13> Waluigi's mustache
[12:56:42] <vdamewood> pyzozoI just picked one at random from my touch bar.
[12:58:08] <user51> goddamnit, this feels like a propaganda document
[12:58:10] <vdamewood> s/pyzozoI/pyzozord I/
[12:58:14] <user51> now it talks about 'information hiding'
[12:58:16] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[12:58:23] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[12:58:29] <vdamewood> user51: What propaganda are you reading?
[12:58:37] <user51> 'thinking forth', by leo brodie
[12:58:40] <pyzozord> I heard there is really a lot of thought put into design of emojis. They intentionally can be interpreted in multiple ways. It's no accident that zoomers use ð for ass
[12:59:06] <dodo> pyzozord: the name for that emoji is open hands
[13:00:31] <pyzozord> Or the whole water gun situation from few years ago
[13:00:45] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:00:59] <vdamewood> Bang bang squirt!
[13:01:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[13:01:07] <vdamewood> (That came out wrong.)
[13:01:32] <sandman13> pyzozord: have you seen a peach? it looks like an ass :P
[13:01:45] *** Joins: brabrax (~brabrax@user/brabrax)
[13:02:22] <vdamewood> Princess Peach is not an ass.
[13:02:40] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 240 seconds)
[13:02:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[13:02:44] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[13:02:59] <sandman13> She is not, but peach (fruit) looks like an ass
[13:03:07] *** Joins: Rounin (~david@84.212.130.215)
[13:03:38] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 260 seconds)
[13:03:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:04:04] <pyzozord> just saying they try to design those emojis to be versitile so they can have many meanings
[13:04:11] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[13:04:41] <^-^hi> versatile
[13:05:20] <sandman13> never felt the need to use emojis except for ð¤·
[13:05:32] <^-^hi> Fixing people's so they fix those of mine
[13:06:07] *** Quits: rwb (~augh@theguntretort.com) (Ping timeout: 252 seconds)
[13:06:24] <^-^hi> /join #android
[13:07:02] *** Joins: rwb (~augh@theguntretort.com)
[13:07:11] <^-^hi> Wtf should it send the command verbatim?
[13:07:39] <pyzozord> you had a space before /
[13:11:16] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[13:17:42] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:18:04] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[13:18:43] *** Joins: brabrax (~brabrax@user/brabrax)
[13:25:31] <arahael> pyzozord: My favorite emoji is "hairy heart". :)
[13:28:48] <pikapika> arahael, show
[13:29:08] <arahael> pikapika: I was joking, but let me find the context. It's hilarious.
[13:29:20] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[13:29:26] <pikapika> I have a hairy thing between my legs
[13:29:33] *** Joins: gggp (~textual@60.10.194.42)
[13:29:52] <arahael> pikapika: That's literally what people said it looked like!  Witness https://thenextweb.com/news/pink-hairy-hart-emoji
[13:29:54] <bayaz> Title: This bizarre emoji was a thing thanks to a fuck up by Google 
[13:30:03] <pikapika> I knew it
[13:30:09] *** Quits: mehrdad2000[m] (~mehrdad20@2001:470:69fc:105::dbc2) (Quit: You have been kicked for being idle)
[13:31:15] <pikapika> arahael, I knew people would be comparing to the other thing lol
[13:32:37] *** Quits: gggp (~textual@60.10.194.42) (Client Quit)
[13:33:40] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 240 seconds)
[13:34:33] <arahael> :)
[13:36:01] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[13:36:31] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:36:33] <alycidyne> Hello, should logging be considered a particular mode of execution as opposed to a function?
[13:37:06] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[13:37:16] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[13:37:53] <arahael> alycidyne: I dunno, what do you mean by a "function" in this case?
[13:37:58] *** Joins: brabrax (~brabrax@user/brabrax)
[13:38:28] <alycidyne> arahael: like a particular product's functions
[13:39:47] <alycidyne> I talk about this mainly in the view of debasing aspect-oriented development
[13:39:52] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[13:40:44] *** Joins: eson123 (~eson123@118.69.128.37)
[13:41:28] <alycidyne> Logging is often given as the prime example of a cross-cutting concern, but what I think is that "cross-cutting concerns" aren't even concerns at all - they're simply parts of the environment which have been inappropriately put in the application
[13:41:28] <eson123> is there any database where the data is stored in the form of a queue ? i am trying to do some messaging programs and Queue seems to be the best option for messages
[13:41:30] <arahael> alycidyne: Well, you're not really using the term "function" as they are in programming languages.
[13:42:34] <deniska> eson123: in-memory or persistent?
[13:42:57] <alycidyne> arahael: I'm talking more about architecture as opposed to programming
[13:43:30] <arahael> alycidyne: Right, but in terms of aspect oriented development it's still ambigious. :)
[13:43:44] <eson123> deniska: persistent 
[13:44:18] <arahael> alycidyne: In my opinion, logging is something that happens throughout an application.
[13:44:28] <arahael> alycidyne: Usually for diagnostic purposes.
[13:44:43] <deniska> eson123: well, once in a while I read about kafka, which seems something along the lines of a persistent queue, but I'm not *too* sure on what kafka actually is :)
[13:44:59] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:45:14] <eson123> deniska: "Apache Kafka
[13:45:14] <eson123> " you mean ? so far that is the only thing Google gives me 
[13:45:45] <deniska> eson123: yeah, that
[13:45:55] *** Joins: brabrax (~brabrax@user/brabrax)
[13:46:05] <alycidyne> arahael: yes, ergo it's actually part of the "execution environment", not the application
[13:46:17] <arahael> alycidyne: I agree.
[13:46:19] <deniska> eson123: I've used redis for queue-like stuff, but in in-memory mode, although it seems they have some support for persistency too
[13:46:52] <alycidyne> Basically, specifying that an application logs something should be "considered harmful"
[13:46:57] <deniska> and then there's some persistency mode in rabbitmq
[13:47:11] <arahael> alycidyne: How so?
[13:47:15] <eson123> deniska: huh didn't know redis also supports persistency 
[13:48:04] <deniska> eson123: if you already have an sql database around which supports `select .. for update skip locked`, that's also a queue, in a pinch, if you don't need super high throughput :)
[13:48:05] <alycidyne> arahael: because it shouldn't be part of the application
[13:48:20] <arahael> alycidyne: Depends on the purpose of teh logging.
[13:48:29] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:48:40] <arahael> alycidyne: I'd say it often can be. (In my case, always - then again, I do apps, not websites)
[13:49:05] <eson123> deniska: yea i do have a sql database, but not very sure what u means by "super high throughput"
[13:49:54] <arahael> eson123: Do you have to update records at like, 1 GB per second.
[13:50:01] <alycidyne> arahael: and I'll say that, in my case, I'm trying to debase aspect-oriented programming by calling into question the notion of a cross-cutting concern :-)
[13:50:16] <deniska> eson123: I'd ask, will a queue-table accumulate rows many orders of magnitude faster than other tables?
[13:50:17] <eson123> arahael: oh no, my messaging program isn't that powerful yet
[13:50:20] <eson123> hardly ever will
[13:50:21] <deniska> if not, database might be fine
[13:50:37] <arahael> alycidyne: I think you should first describe and define what you mean by logging, then, as in, the purpose of logging.  I think there are several concerns logging addresses.
[13:51:21] <alycidyne> Though, to be honest, I'm having difficulty distinguishing logging and tracing
[13:51:52] <arahael> alycidyne: Consider the users of the logs, then.
[13:52:13] <arahael> alycidyne: Eg, as intended for the business analyst, the system admin, or the software developer.
[13:52:49] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:53:00] *** Quits: xeno (~xeno@user/xeno) (Quit: Textual IRC Client: www.textualapp.com)
[13:53:08] <eson123> arahael: also just imagine that in case of 1GB per second as you said, what would u recommend instead
[13:53:10] <alycidyne> arahael: I see
[13:53:45] <arahael> eson123: I'd recommend benchmarking and testing much more and perhaps implement and test several options.
[13:53:49] *** Joins: brabrax (~brabrax@user/brabrax)
[13:55:06] <arahael> eson123: At the high end, the options get much more specialised with respect to what you're doing.
[13:55:07] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:56:22] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:56:22] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:56:22] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:58:06] <pyzozord> arahael: I regret checking out that link with that emoji :D
[13:58:26] <arahael> pyzozord: Feel free to complain in the -ops channel. ;)
[13:58:35] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:58:51] <arahael> pyzozord: But yeah, that emoji situation was insane!
[13:58:56] <arahael> How's things?
[13:59:07] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:59:17] * pyzozord write formal complaint letter, signs with a hairy heart emoji
[13:59:58] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 265 seconds)
[14:00:05] <pyzozord> good on this side of the internet, I've slept only 4h for some reason
[14:00:06] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:00:08] * arahael will pass it on as soon as he finds someone appropriate to hand it off to.
[14:00:12] *** Joins: brabrax (~brabrax@user/brabrax)
[14:00:19] <pyzozord> I stayed up until 3am sorting through 3rd edition d&d pdfs
[14:00:23] <arahael> 4h is nowhere nearly enough!
[14:00:38] <arahael> I've yet to get into d&d.
[14:00:47] <pyzozord> yeah that was stupid, I couldn't get myself to sleep
[14:00:55] <arahael> Heh. :)
[14:01:03] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:01:28] <pyzozord> arahael: do you know that nethack i based on ad&d first edition rules?
[14:01:46] <arahael> It doesn't surprise me!
[14:02:23] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[14:02:23] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[14:02:23] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:02:47] <pyzozord> 6 ability scores, magic items +1, and the staple: lower armor class is better
[14:03:18] <arahael> Ah, neat!
[14:03:24] <arahael> Also the lack of pants?
[14:03:33] <pyzozord> I wouldn't be surprised if nethack also has simulation for "thac0" "to hit armor class zero"
[14:03:51] <pyzozord> yes I'm sure that too :D
[14:04:09] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[14:05:24] <arahael> I'm not sure what that is.
[14:07:34] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[14:07:50] <pyzozord> just a first and second edition d&d-ism. It's your characters score they need to roll to hit target if target had armor class 0
[14:08:02] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[14:08:21] <pyzozord> in magic sword +1, the +1 refers to thac0+1 not damage+1 usually
[14:09:51] <arahael> Ah, that might be there too, then.
[14:11:43] *** Joins: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu)
[14:11:47] <pyzozord> I wish there were som irc based d&d game channels. That would be amazing
[14:12:04] <pikapika> pyzozord, d&d is very hard
[14:12:16] <pyzozord> unfortunately I think people mostly play over skype or over email (or irl)
[14:12:28] <^-^hi> Pyzozord check idlerpg
[14:12:59] <pyzozord> ^-^hi: that's very differnet, I'm talking about actual d&d sessions over irc
[14:13:08] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[14:14:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:14:47] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[14:14:48] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:15:06] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[14:15:13] <X-Scale> pyzozord: check #intfiction to see if they know of some channel/irc channel with it
[14:15:59] *** Joins: zaher (~zaher@37.48.144.155)
[14:16:50] <pikapika> D&D is a very difficult game
[14:16:53] <pyzozord> will do, thanks
[14:17:02] <pikapika> It leaves most of the gameplay to imagination
[14:17:11] <pikapika> Its more like story writing than playing a video game
[14:17:42] <pyzozord> yes that's the point
[14:18:35] <pyzozord> funny thing about imagination, I heard, is that our brain doesn't see the difference between it and reality
[14:18:38] <pyzozord> it feels the same
[14:19:04] <pyzozord> there is some other part of the brain that reminds us "hey that's not real"
[14:19:15] <pyzozord> but other than the reminder, the brain processes it all the same
[14:19:19] <pyzozord> at least so I heard
[14:20:01] <user51> GeDaMo: i think i wrote forth before i discovered forth :D
[14:20:22] <user51> it kind of hits on a few topics i've thought or experimented with
[14:20:45] <GeDaMo> :D
[14:21:12] <user51> surprising how a single project was such a ogod investment. i didn't even finish it.
[14:21:38] <jtgd> user51: If you used an HP RPN calculator you wrote Forth :) 
[14:21:42] <user51> it was a cpu emulator, which used an array of function pointers, so you get somewhat close to forth's small definitions
[14:21:53] <GeDaMo> Threaded code
[14:22:06] <user51> jtgd: i did write shunting yard once
[14:22:43] <pikapika> user51, there is no need
[14:22:48] <user51> GeDaMo: so since the functions were small, they kinda map nicely to forth
[14:22:53] <pikapika> switch statements use jump tables for consecutive integers
[14:23:16] <user51> pikapika: no need for what?
[14:23:23] <pikapika> function pointer table
[14:24:05] <user51> in this case there's a significant need, since each instruction mapped to a table entry, i could also set the flags to set after the instruction, and disassembly
[14:24:37] <pikapika> Flags can be just local vars outside the switch
[14:24:50] *** Quits: steam (~steam@user/steam) (Ping timeout: 260 seconds)
[14:24:56] <pikapika> Thats the point user51 
[14:25:02] <pikapika> switch automatically builds that table for you
[14:25:17] <pikapika> switches are interesting
[14:25:25] <user51> also, if you screw up the c switch you get a fallthrough, but if you screw up the closing } of the function, it's a syntax error :)
[14:25:33] <user51> pikapika: fwiw, i tried but never completed a switch version
[14:26:20] <user51> it's just that the jmptab version was shorter. but imo there was a lot of stuff that wasn't quite discrete there.
[14:26:47] <pyzozord> jtgd: what's HP? is the caluclator from k&r hp? I know it was RPN
[14:27:09] <GeDaMo> Hewlett Packard
[14:27:18] <jtgd>  ^
[14:27:35] <GeDaMo> https://en.wikipedia.org/wiki/HP_calculators
[14:27:37] <bayaz> Title: HP calculators - Wikipedia 
[14:27:51] <GeDaMo> "HP calculators are well known for their use of Reverse Polish Notation (RPN)."
[14:28:05] <pyzozord> never used one
[14:28:17] <GeDaMo> https://en.wikipedia.org/wiki/RPL_(programming_language)
[14:28:17] <bayaz> Title: RPL (programming language) - Wikipedia 
[14:28:21] <pyzozord> but it seems to be similar to the rpn calculator from K&R
[14:28:36] <pyzozord> lol "reverse polish language"
[14:28:45] <pyzozord> just polish people speaking backwards
[14:29:25] <user51> GeDaMo: i also think the historical perspective is very important
[14:29:49] <pyzozord> I think K&R calulator falls a bit short of that. It implements few functions and variables and that's it
[14:29:55] <user51> while i don't claim to be any better than horrible in asm, i could sort of see how it maps to it
[14:30:01] <pyzozord> but it could be easily extended with if conditions etc
[14:30:19] <pikapika> rpn just removes the responsibility of building the stack from the tree from the calculator and places the burden on the user
[14:30:26] <pikapika> its a nice trick for a low resource equipment
[14:30:31] <user51> pyzozord: they do infix (internally rpn) calc in the unix programming language
[14:30:37] <pikapika> that they got people used to writing in rpn
[14:31:08] <user51> pikapika: yeah that's something i've wondered about - could you parse say, c operators and output rpn?
[14:31:17] <pikapika> Of course
[14:31:21] <pikapika> Thats how compilers work
[14:31:26] <GeDaMo> That's what the shunting yard algorithm does
[14:31:32] <pikapika> Yes
[14:31:49] <user51> brain boof. but you stil need to handle locals and stuff.
[14:31:55] <pikapika> what locals
[14:31:59] <pikapika> Thats a different problem
[14:32:03] <pikapika> much easier problem
[14:32:04] <user51> that's also an angle i've been thinking about, forth as an output language
[14:32:08] <pikapika> just needs a stack of lists
[14:32:10] <pikapika> conceptually
[14:32:36] <pikapika> Variable scoping is handled by a stack of lists type concept
[14:32:44] <pikapika> there is no translation or conversion needed
[14:32:54] <GeDaMo> "PEG-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_PEG.pdf uses a stack language as an intermediate form
[14:32:54] <bayaz> Type: application/pdf Size: 351.0 kB 
[14:33:18] <user51> GeDaMo: my god, not again! :)
[14:33:40] <GeDaMo> Have you actually read it? :P
[14:33:44] <GeDaMo> It's only 12 pages
[14:33:58] <user51> i'll read it now
[14:34:20] <GeDaMo> I /knew/ you hadn't read it! :P
[14:34:31] <user51> i recognized the cogs :D
[14:35:20] <pyzozord> I'm not sure how pegs fit in with the rest of parsing like ll(k) parsers etc
[14:35:45] <pyzozord> is it kind of seems like it's an alternative to the whole classic way of parsing
[14:36:04] <pyzozord> I'm not really sure what I'm talking about though
[14:36:36] <pikapika> Parsing is the simpler part
[14:37:45] <bjs> pyzozord: I mean LL and LR and stuff are a type of grammar,  they're all just a syntactic restriction on arbitrary CFGs. PEGs are the the same kind of thing, a restricted form of CFG
[14:37:47] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 268 seconds)
[14:38:28] <bjs> In this case the main decision is to order the choice operator, to remove ambiguity
[14:40:43] <GeDaMo> I like PEGs because they're simple enough for me to understand :P
[14:40:50] <pyzozord> I'm not sure if I'm using the word "ontology" right, but: so in in ontological-sense pegs grammars and are below cfgs, and on the same lelve as ll and lr grammars
[14:41:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:41:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:41:33] <pyzozord> I just realized that that PEG paper is from the Alan Kay's research institute
[14:42:00] <GeDaMo> Have I not mentioned that before? :|
[14:42:15] <GeDaMo> http://www.vpri.org/writings.php
[14:42:15] <bayaz> Title: Viewpoints 
[14:43:31] <pyzozord> don't recall anyone connecting alan kay with pegs before
[14:44:11] <pyzozord> I wonder what other research insitutes are out there like viewpoints that have amazing papers liek this. I bet the bell labs institute still exists
[14:44:21] <GeDaMo> He's mentioned several times being a fan of Shorre's META II system
[14:44:35] <GeDaMo> Which was the inspiration for that PEG paper
[14:44:45] *** Joins: spacecraft (spacecraft@98.50.16.116)
[14:44:55] <GeDaMo> https://en.wikipedia.org/wiki/META_II
[14:44:56] <bayaz> Title: META II - Wikipedia 
[14:45:21] <GeDaMo> The paper itself is a wonderful gem which includes a number of excellent  examples, including the bootstrapping of Meta II in itself (all this  was done on an 8K (six bit byte) 1401!)."âAlan Kay
[14:45:24] <user51> damn it, they replaced right recursion with regex
[14:46:31] <pyzozord> That's crazy. Huh, I gess I can start my journy into grammars and parsers with pegs
[14:46:48] <bjs> pyzozord: I think the fully general PEGs are allowed to have an arbitrary lookahead operator, similar to lots of regex libraries, which would move the grammars that allow them out of the world of context-free
[14:46:58] <pyzozord> That's crazy. Huh, I guess I can start my journey into grammars and parsers with pegs. There, that feels better...
[14:47:07] <GeDaMo> PEGs are a formalization of recursive descent
[14:49:00] <pyzozord> I still remmber my idea of loop while anything unresolved: backtracking + recursive descent
[14:49:57] <pyzozord> bjs: does that mean that PEGs are context-sensitive?
[14:49:58] <pikapika> pyzozord, I had started with jacks book
[14:50:27] <pyzozord> bjs: oh right I think we discussed that and the conculsion was "no, it's more of a 'context-free with extras'"
[14:50:56] <pyzozord> pikapika: Let's Build a Compiler?
[14:51:02] <bjs> pyzozord: the truth is the chomsky-hierarchy is kind of arbitrary and languages can happily lie in between things
[14:51:04] <pikapika> Yes
[14:51:36] <pikapika> bjs, its a mathematically defined thing. So if something is more general than a cfg but not as much a turing machine, then yes it is a context sensitive lang
[14:51:50] <pikapika> the practical significance of the distinction is a different matter
[14:52:12] <pyzozord> well I'll read that PEG paper cold turkey now. See if I can make sense of it
[14:52:13] <bjs> pikapika: well context-sensitive means something specific, I'm not sure if PEGs really are equivalent to a context-sensitive grammar or whether there are context-sensitive languages you cannot represent with a PEG
[14:52:30] <pikapika> bjs, context sensitive subsumes all cfgs
[14:52:33] <bjs> I don't really know context-sensitive languages all that deeply, and I'm not sure anyone has done research
[14:52:35] <user51> reading the paper is surprisingly hard
[14:52:43] <bjs> pikapika: yes I'm not sure what your point is
[14:52:47] <pikapika> even if there is one production that is like AB -> xyz
[14:52:51] <pikapika> it is context sensitive
[14:53:08] <bjs> pikapika: PEGs do not have productions like that,  they have a different set of operators
[14:53:24] <pikapika> I meant if we are looking at it from pov of equivalent grmmars
[14:53:27] <bjs> It's not clear that PEGs exactly match what we call "context-sensitive" languages or whether they lie somewhere else
[14:53:50] <pikapika> if a peg can handle all cfgs plus some more, then it is at least a context sensitive lang
[14:53:52] *** Joins: steam (~steam@user/steam)
[14:53:54] <pikapika> in the chomsky table
[14:53:56] <bjs> pikapika: yes as far as I know nobody has proven that PEG grammars are equivalent to context-sensitive ones,  it seems reasonable they may be
[14:54:25] <pikapika> It is "one" vs "it can handle all" are also different statements I just realized
[14:56:22] <beaky> nice i like parser combinators
[14:56:31] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 252 seconds)
[14:56:31] <bjs> pikapika: I mean it's not true, you've got the argument backwards.  It's always "at least" what's above it.  Regexs are "at least" context-free.  You cannot say that a context-free language is also a regular one
[14:56:44] <pikapika> bjs, of course
[14:57:00] <pikapika> What I stated was that if your thing can handle all cfgs as well as some things that are not cfg
[14:57:06] <pikapika> then it is at least one step above
[14:57:52] <pikapika> but the problem here is that, while you claim this peg can handle some grammars that are context sensitive it is not known if it can handle all context sensitive grammars
[14:58:01] <bjs> pikapika: yes but I think you're taking the hierarchy a bit too seriously,  one step above does not mean you automatically gain *all* of context-sensitivity, not necessarily.
[14:58:03] <pikapika> Which indeed places it as a different chart
[14:58:11] <bjs> yes
[14:58:32] *** Quits: hexingb (~hexingb@101.236.65.176) (Ping timeout: 268 seconds)
[14:58:38] <pikapika> So a particular peg can be context sensitive
[14:58:48] <pikapika> but it is not known if pegs in general can handle all context sensitive grammars
[14:58:54] <pikapika> if what you said is right
[14:59:01] <bjs> A particular grammar can be a grammar for a context-sensitive language,  is a more accurate way of saying it
[14:59:07] <pikapika> Yes
[15:00:05] *** Joins: hexingb (~hexingb@101.236.65.144)
[15:00:13] <bjs> pikapika: a classic is the non-context-free {a^n b^n c^n | n > 1} language, which is really easy to do with lookaheads
[15:01:09] <pikapika> Yeah thats the thing really. When we have a full turing language at our disposal. Many of the "harder" languages can sometimes have simple parsing solutions.
[15:03:02] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[15:03:02] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[15:03:02] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:03:16] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[15:04:44] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 265 seconds)
[15:05:41] *** Joins: hexingb (~hexingb@2409:8900:282f:2e92:db8:83b6:abfc:75bd)
[15:05:47] <bjs> the truth is there's not that much interesting in understanding the space between context-free and Turing complete, as most languages are built using fairly context-free grammars with extra stuff ontop as pyzozord mentioned
[15:06:17] <bjs> rather than trying to squash the type system and scoping rules and name lookups into the grammar itself during parsing, you keep parsing context-free (or very close to context-free) then do some very simple passes over the top
[15:07:17] <pikapika> yeah turing in this case meant the power of the lang not the grammar
[15:07:19] <pikapika> if it was confusing
[15:07:28] <pikapika> its funny isn't it
[15:07:35] <bjs> pikapika: what's funny?
[15:07:51] <pikapika> that the power of a language and the language itself can be different categories
[15:07:56] <pikapika> parsing regex is cfg
[15:08:06] <pikapika> the resulting regex itself is well regular
[15:08:15] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[15:08:35] <bjs> I suppose but that's how language works,  simple sentences convey complex meanings :)
[15:08:49] <pikapika> asm can be regular I think
[15:08:58] <pikapika> and its power is obviously full turing
[15:09:25] <bjs> well,  depends how pedantic you want to be
[15:10:21] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:12:06] <pyzozord> ]
[15:12:11] <bjs> If you take something like Arm assembly, you have a finite number of registers (~32 of them) of finite size (64 bits), a finite amount of memory (2^64 bytes if we're overly generous), all the finite-ness is pretty baked in to an assembly language and kind of kills the "Turing complete"ness of it.  although I'm happy to be loose here and say that 2^64 is big enough to be 'practically infinite' ;)
[15:12:52] <pikapika> A finite memory machine isn't even context free
[15:13:04] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[15:13:07] <bjs> Yep, hardware is a finite state machine :)
[15:13:11] <pikapika> These are mathematical concepts, we can understand what it means to actually implement it
[15:13:45] <bjs> pikapika: assembly is where the two blur though. high-level languages can get away with the languaeg definition allowing unbounded memory
[15:14:07] <bjs> but an assembly language really cannot, and so it's even harder to fight off the pedants for asm languages for Turing completeness
[15:14:29] <pikapika> The pedants are equalyl wrong in both cases
[15:14:31] <pikapika> So its a non issue
[15:14:36] <bjs> pikapika: uh, what do you mean?
[15:15:06] <user51> GeDaMo: the paper made my head spin
[15:15:15] *** Joins: nromsas (~nromsas@101.175.64.73)
[15:15:24] <bjs> pikapika: Take Arm assembly, it definitely is not Turing complete.  It really does bake-in the fixed-sizeness of everything.
[15:15:28] <pikapika> Both are equally finite on real hardware, and when talking about "mathematical hardware" both are infinite
[15:15:52] <GeDaMo> user51: it's good, isn't it? :P
[15:15:54] <pikapika> The definition does not matter because if we theoretically wanted 128-bit ram the assembler would have 128 bit ints
[15:16:08] <bjs> pikapika: ... but you would need a different assembly language for it
[15:16:11] <pikapika> and so on
[15:16:20] <bjs> take Arm assembly for example,  the size of things is baked-in very very hard
[15:16:49] <bjs> Arm assembly (A64 to be specific let's say) is not Turing complete because everything is finite and fixed-size regardless of the underlying hardware
[15:16:52] <pikapika> Yes but as I said, the pedants argument is just as wrong if he were referring to java as he is to arm asm
[15:16:57] <pikapika> So its a moot point
[15:17:05] <bjs> pikapika: no, if they were talking about Java they would be wrong by some definitions
[15:17:13] <bjs> but not when talking about assembly (or in some respects, C)
[15:17:35] <pikapika> In java in fact the language specification mandates the sizes of the ints
[15:17:55] <bjs> yes but iirc it doesn't mandate the total size of a reference or how many objects you can have
[15:18:29] <bjs> A64 (Arm assembly) *does*, it puts real, honest, fixed-size constraints on all the things in the *language spec* not just in the implementation.  You could have a magical machine with infinite memory but if you wrote an A64 program you cannot use it all.
[15:18:36] <pikapika> It limits how many of an array you can reference. It does not matter having infinite objects if you can\t handle them at runtime like you would array refs.
[15:18:39] <pikapika> but then
[15:18:48] <pikapika> likewise you could make an argument that in any language you can make a hashmap
[15:18:59] <pikapika> you have theoretical turing completeness
[15:19:07] <pikapika> all of that boils down to is that the pedants are wrong
[15:19:13] <pikapika> They are confusing mathematics and physics
[15:19:17] <bjs> pikapika: no,  most languages do not put hard limits on sizes of things. The languages usually are Turing complete (up to very pedantic point)
[15:19:25] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[15:19:29] <bjs> pikapika: if they're talking about .e.g Java then sure, but not if they're talking about assembly
[15:19:59] <pikapika> It doesn't mean anything. They are trying to find a pure mathematical entity in a physical system.
[15:20:02] <pikapika> They will never succeed.
[15:20:14] <pikapika> *pure mathematical entity that can be potentially infinite
[15:20:22] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[15:20:32] <bjs> pikapika: no, take my argument for example.  That A64 specifically, its specification, does not allow infinities anywhere. Everything is fixed size.
[15:20:42] <pikapika> I know what you are trying to say
[15:20:59] <bjs> Both the theoretical language, *and* any implementation, both have fixed limits on everything and therefore is not Turing complete
[15:21:37] <pikapika> I can define a lisp that has no limits on integers
[15:21:49] <pikapika> And its still only something that exists on paper
[15:21:51] <user51> GeDaMo: it's more about a language issue
[15:21:53] <bjs> pikapika: yes, what's your point? making a new lisp doesn't change the power of the A64 language
[15:22:00] <user51> a bit hard for me to process
[15:22:00] <pikapika> The moment it is actually brought into existence, it is finite
[15:22:06] <GeDaMo> user51: ah
[15:22:13] <pikapika> bjs, my lisp would be an example of something "theoretically turing complete"
[15:22:17] <bjs> pikapika: yes and the A64 specification/language is not Turing complete, and neither is the implementation.
[15:22:27] <pikapika> And as I said, that is a moot point
[15:22:33] <bjs> pikapika: yes,  lots of languages are theoretically Turing complete. Of course you cannot have any *implementation* that is
[15:22:35] <Donitz> what do you currently use in c++ program to make dynamic arrays
[15:22:41] <Donitz> I remember Vector being a thing like a decade ago
[15:22:56] <pikapika> Because both the concept of a turing complete, and a language spec that is mathematically turing complete only exist on paper
[15:23:07] <pikapika> The moment it is brought into existence it all becomes a moot point
[15:23:30] <Donitz> it's quite easy to make something turing complete
[15:23:33] <bjs> pikapika: it's not really a moot point,  because languages have specifications.  A language can choose to not give a maximum size to anything (e.g. Python).  And we can happily talk about the language in terms of Turing completeness and it all works out fine
[15:23:39] <Donitz> maybe we should have a metric for turing practical :D
[15:23:40] *** Quits: Shiva (LordShiva@user/one39dev) (Ping timeout: 240 seconds)
[15:24:03] <pikapika> bjs, it is fine only as long as we are talking about a pure mathematical entity that exists on paper
[15:24:07] <bjs> pikapika: yes but the point here is you're saying "Take language that is theoretically TC, and then the implementation is restricted so we may as well just forget the fact it got restricted"
[15:24:27] <pikapika> It does not matter at all, because all languages are living on an asm
[15:24:30] <bjs> but the point is that for something like A64 it's different because that finiteness restriction exists at every level, it's not an artefact of the real world it's baked into the language
[15:24:52] <bjs> (obviously it's baked into the language *because* it's a real-world language)
[15:24:58] <pikapika> Yse but that point is really meaningless because as long as we are talking about theoretical tc, we are talking about an entity that only exists on paper
[15:25:14] <user51> GeDaMo: i've only read half of it, but from my understanding, it uses formal grammar to handle the compilation steps
[15:25:33] <bjs> pikapika: I'm confused, are you arguing that asm *is* Turing complete or *is not* ?
[15:25:55] <pikapika> I am arguing that whether a language spec is tc or not is moot
[15:26:04] <bjs> pikapika: then why did you say asm is tc earlier
[15:26:07] <pikapika> As long as we are talking about theoretic tc, we are talkiung about something that only exists on ppaer
[15:26:11] <GeDaMo> user51: there's a tool which applies transforms: one transform goes from a Scheme-like language to a Forth-like language; another goes from the Forth-like to asm
[15:26:11] <Donitz> an ant colony is turing complete, given the right instructions
[15:26:24] <GeDaMo> user51: the interesting thing for me was it's the same tool at each stage
[15:26:28] <pikapika> As long as we actually implementing things, then the practical definition of tc comes into play which is very different
[15:26:52] *** Joins: jsmooth (~quassel@068-186-087-058.res.spectrum.com)
[15:26:52] *** Quits: jsmooth (~quassel@068-186-087-058.res.spectrum.com) (Changing host)
[15:26:52] *** Joins: jsmooth (~quassel@user/rapid16)
[15:26:57] <bjs> pikapika: I'm confused, once you start implementing things tc is irrelevant
[15:27:02] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[15:27:02] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[15:27:02] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:27:03] <bjs> because you cannot implement a turing complete thing
[15:27:11] <pikapika> Of course you can't
[15:27:19] <pikapika> Yet there is a difference between strict grep and C
[15:27:24] <GeDaMo> user51: it goes from string to tree to string
[15:27:31] <bjs> pikapika: yes, and asm is like grep not like C
[15:27:38] <pikapika> asm is like C
[15:27:41] <user51> GeDaMo: i'll might just need to think about it
[15:27:46] <pikapika> You can do anything in it
[15:27:54] <pikapika> And practically everything is actually de facto asm
[15:28:01] <pikapika> Java is asm too
[15:28:12] *** Joins: spacecraft (spacecraft@98.50.16.116)
[15:28:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:28:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:28:40] <bjs> pikapika: I feel like you've just made up your own definition of Turing completeness which means "pikapika thinks it kinda looks like C" :P
[15:28:57] <user51> >  Each stage usuallyuses a specialised grammar and parser/generator generator.
[15:29:01] <pikapika> bjs, I can do everything in C
[15:29:03] <pyzozord> which dialect of assembler do you prefer intel or att?
[15:29:07] <pikapika> All real software is de facto asm
[15:29:14] <bjs> pyzozord: what if you write Arm :P
[15:29:17] <pikapika> Strict mode grep on the other hand is restricted to regular langs
[15:29:21] <bjs> pikapika: okay so you do have your own made-up definition of TC
[15:29:28] <pyzozord> bjs: I mean syntax
[15:29:31] <pikapika> bjs, no
[15:29:38] <bjs> pyzozord: what if you write Arm though
[15:29:39] <pikapika> The fact that real life machines are finite memory
[15:29:41] <user51> > Our experiment applies a single parsing mechanism, drivenby a uniform grammar, to all three compilation stages. 
[15:29:48] <pikapika> Does not mean there is no difference between strict grep and C/asm
[15:29:55] <pyzozord> bjs: does it have different syntax?
[15:30:05] <bjs> pyzozord: think about it, why would Arm assembly have a syntax called "Intel" :P
[15:30:16] <bjs> That's only for Intel/x86 asm
[15:31:05] <GeDaMo> user51: do you know about sed? This is like sed but it uses tree re-writing instead of search and replace
[15:31:06] <pyzozord> I don't mean which instructions
[15:31:24] <bjs> pyzozord: AT&T and Intel are two different syntaxes for Intel (x86) asm
[15:31:38] <bjs> pyzozord: Arm is not Intel, they make totally different chips with different assembly languages
[15:31:50] <GeDaMo> I suspect pyzozord is asking about operand order
[15:32:10] <GeDaMo> Intel uses destination, source; AT&T uses source, destination
[15:32:34] <bjs> I feel like pyzozord had been listening to pikapika and didn't realise Arm assembly just wasn't the same language
[15:32:38] *** Joins: gggp (~textual@60.10.194.42)
[15:32:46] *** Quits: gggp (~textual@60.10.194.42) (Client Quit)
[15:33:02] <pyzozord> I mean how do you like to write your registers with or without %
[15:33:05] <bjs> Arm assembly looks more like Intel syntax than AT&T
[15:33:15] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 265 seconds)
[15:33:20] <bjs> pyzozord: Arm looks like `STR X0, [X1]`
[15:33:49] *** Joins: Auron (Auron956@user/auron)
[15:34:11] <user51> GeDaMo: similar to a shift-reduce parser?
[15:34:22] <pyzozord> bjs: how do you make comments in arm?
[15:34:26] <pyzozord> bjs: http://staffwww.fullcoll.edu/aclifton/courses/cs241/syntax.html
[15:34:27] <bayaz> Title: Intel vs. AT&T syntax 
[15:34:45] <bjs> pyzozord: Arm does not Intel or AT&T, those are both syntaxes for X86.
[15:34:53] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[15:35:38] <pyzozord> I'm not sure if we are talking about the same thing, I'm not talking about which instructions are available
[15:36:01] <GeDaMo> user51: uh, not sure
[15:36:04] <bjs> pyzozord: the instructions are irrelevant
[15:36:08] <bjs> they're just not the same language, they don't have the same syntax
[15:36:47] <bjs> pyzozord: Intel and AT&T are syntaxes for the language called "x86".  Here is what (modern 64-bit) Arm asm looks like https://github.com/torvalds/linux/blob/master/arch/arm64/kernel/entry.S
[15:36:48] <bayaz> Title: linux/entry.S at master Â· torvalds/linux 
[15:37:35] <bjs> It's the same style as x86's Intel syntax, `MOV DEST,SRC`
[15:38:10] <pyzozord> yeah I see, looks like arm has it's own syntax indeed
[15:38:23] <pyzozord> kind of similiar to the intel one
[15:38:38] <bjs> pyzozord: yes it's just not the same language,  it will end up looking similar because well most assembly languages look similar
[15:39:13] <bjs> pyzozord: but asking if Arm uses the AT&T syntax or Intel syntax is like asking which C syntax Java has :P
[15:39:16] <GeDaMo> Except Chuck Moore's Forth chips where the asm looks like Forth :P
[15:39:32] <bjs> pyzozord: the answer is "Java isn't C, it has its own syntax, even if does look similar with the curly braces"
[15:41:11] <pyzozord> I think I was under the impression that all assembly languages can be expressed in a syntax that looks either like intel or at&t x86 syntax
[15:41:33] <pyzozord> except of course different processors or architectures have different features and instructions
[15:41:36] <bjs> pyzozord: no,  each assembly language is its own language.  Some look totally wild.  Arm is fairly "boring"
[15:41:50] <bjs> I guess it's syntax "looks" like Intel,  in the same way that Java's syntax "looks" like C.
[15:42:17] <pyzozord> yeah, but that is indeed to far away to generalize
[15:42:31] *** Joins: gitgood (~gitgood@85.210.186.158)
[15:42:36] <bjs> pyzozord: have you written Arm assembly before?
[15:42:43] <pyzozord> yes
[15:42:58] <bjs> pyzozord: so you know that Arm is a risc-y architecture
[15:43:07] <bjs> its quite different to writing x86 code
[15:43:10] <pyzozord> looks like arm has .if some things with #
[15:43:23] <pyzozord> yeah that makes sense
[15:44:14] <^-^hi> Does vector drawing (like all the icons being in svg) add significant overhead?
[15:44:16] <pyzozord> althoug you know, people don't use those hundreds of x86 instructions, they use like 20 of these instructions most of the time
[15:44:25] <bjs> pyzozord: people certainly do...
[15:44:32] <pyzozord> s/people/compilers/
[15:44:53] <bjs> people do too
[15:45:12] <bjs> that's why the instructions are there, for when they need to use them :)
[15:45:27] <pyzozord> I'd guess that people are more likely to use some less known instructions than compilers
[15:45:57] <^-^hi> Like, would it be of any help replacing them with raster on old computers?
[15:46:01] <bjs> pyzozord: well it also goes the other way that compilers are more likely to use weird instructions that people wouldn't write
[15:46:16] <pyzozord> how come arm is risc but it's assembly looks more high level than x86 assembly
[15:46:17] <arahael> found something curious about my bank transactions from an american company - there's multiple charges. is that normal for american companies? (i mean, separate transactions for taxes, etc)
[15:46:22] *** Joins: Twipply (~Twipply@user/twipply)
[15:46:48] <bjs> pyzozord: because it's not the same language, and *because* it's risc it's extra cumbersome to write by hand so you need more support
[15:47:01] <bjs> whereas x86 has the higher-level baked right into the instructions (e.g. it has a push instruction...)
[15:47:40] <pyzozord> i see so th elanguage is higher level because the actual instructions are lower level
[15:47:49] <pyzozord> can you drop down to the lower level instructions if you want to?
[15:47:51] *** Joins: One39Dev (LordShiva@user/one39dev)
[15:47:56] <pyzozord> meaning does the language allow that?
[15:48:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:48:16] <bjs> pyzozord: this is just RISC vs CISC
[15:48:25] <bjs> RISC means you need lots of instructions to do simple things
[15:49:06] <pyzozord> I know I know. But the arm assemlby is higher level, so it compiles to more opcodes. I'm curious does it let you use those simple instructions directly, or does it force you to use it's higher level constructs
[15:50:19] *** Joins: exvicesindaco_ (~exvicio@37.163.138.204)
[15:50:49] <bjs> pyzozord: it's not that high level, they're mostly dumb macros
[15:51:43] <pyzozord> yeah that's what I imagined
[15:51:57] <pyzozord> still curious if I'm forced to use them
[15:52:03] <bjs> pyzozord: no
[15:52:08] <bjs> of course not
[15:52:19] <GeDaMo> There might be pseudo instructions like mov r1, r2 => add r1, r2, $0
[15:52:30] <pyzozord> I mean I could write my own assembler of course, just curious specifically about the arm assembler
[15:52:31] <GeDaMo> You can write the add directly if you want
[15:52:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:53:07] <pyzozord> oh interesting, there is no mov in arm?
[15:53:11] <bjs> pyzozord: it'd be a pretty terrible assembler if it stopped you using some instructions
[15:53:39] <GeDaMo> I'm not sure, that's just an example of the sort pseudo instruction it might have
[15:53:41] <bjs> pyzozord: there is a MOV mnemonic 
[15:53:45] <pyzozord> bjs: i was thinking along the lines of "standard c doesn't let you write inline assembly"
[15:53:49] <bjs> pyzozord: but it's compiled to the ORR instruction
[15:53:52] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[15:53:55] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[15:53:56] *** exvicesindaco_ is now known as exvicesindaco
[15:53:59] <bjs> pyzozord: it'd be pretty terrible if an assembler didn't let you write assembly
[15:54:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:54:32] <pyzozord> ok, well thanks
[15:54:38] <bjs> pyzozord: (Arm's MOV is very simple and nothing like x86's MOV)
[15:55:05] * pyzozord updates his model about risc/arm assemlby languages
[15:55:20] *** Joins: zaher_ (~zaher@37.48.186.219)
[15:55:42] * ^-^hi waits for a mention of movsfucator
[15:55:46] <bjs> pyzozord: for e.g. Arm has a couple different MOVs: MOV X0,#42  to load 42 into a register.  MOV X0,X1  to copy X1 into X0.  MOV X0,SP  to read the stack pointer.
[15:56:54] <bjs> pyzozord: the assembler will "compile" these to MOVZ X0,#42 and ORR X0,XZR,X1  and ADD X0,SP,#0  -- you write "MOV" but there isn't actually a MOV opcode
[15:56:56] *** Quits: zaher (~zaher@37.48.144.155) (Ping timeout: 265 seconds)
[15:57:53] <bjs> and something like `MOV X0,[X1]` is just invalid syntax in Arm because MOV cannot move from memory.
[15:57:56] <pyzozord> huh, one would think that move is one of those elementary instruction that would be kept in a reduced set
[15:58:13] <bjs> pyzozord: well you have MOVZ which literally loads a value into a register
[15:58:14] <pyzozord> but yeah no need for move, you can indeed just add 0
[15:58:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:58:46] <bjs> but that's all it does, unlike x86's MOV :P
[15:59:15] <pyzozord> do riscs have simd?
[15:59:20] <bjs> sure
[15:59:52] <bjs> pyzozord: Arm has vector instructions -- it's perhaps not as RISCy as it could be :P
[16:00:05] <pyzozord> I guess my idea of what they would "reduce" from an instruction set 
[16:00:20] <pyzozord> is not the idea risc/arm had
[16:00:25] *** Joins: zaher__ (~zaher@37.48.186.219)
[16:00:32] <bjs> pyzozord: well it's certainly reduced compared to x86
[16:00:34] <bjs> but it still has to be practical
[16:00:46] <GeDaMo> RISC and CISC aren't really separate things any more, most CPUs use ideas from both
[16:00:49] *** Quits: inky_ (~inky@46.36.114.205) (Ping timeout: 268 seconds)
[16:02:03] *** Joins: pulse (~pulse@user/pulse)
[16:02:07] *** Joins: plastico (~plastico@neomutt/plastico)
[16:02:22] *** Quits: inky (~inky_@46.36.114.205) (Ping timeout: 260 seconds)
[16:02:22] *** Quits: audio (~audio@2603-8081-1800-6a6f-01cb-ecb6-e5c5-d0dc.res6.spectrum.com) (Ping timeout: 260 seconds)
[16:02:24] *** Joins: rsx (~dummy@ppp-188-174-135-127.dynamic.mnet-online.de)
[16:02:44] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[16:03:26] <user51> god bless wisc
[16:03:42] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[16:04:07] *** Quits: zaher_ (~zaher@37.48.186.219) (Ping timeout: 268 seconds)
[16:06:44] *** Joins: inky_ (~inky@46.36.119.235)
[16:09:23] *** Joins: inky (~inky_@46.36.119.235)
[16:10:27] *** Joins: spacecraft (spacecraft@98.50.16.116)
[16:10:46] <pyzozord> What does this mean? https://www.nsf.gov/awardsearch/showAward?AWD_ID=0639876&HistoricalAwards=false
[16:10:48] <bayaz> Title: NSF Award Search: Award # 0639876 - Steps Toward the Reinvention of Programming 
[16:11:21] <pyzozord> it looks like usa government awarded 5 mil to the Viewpoints institute, but I can't figure out for what paper specifically
[16:12:46] <pyzozord> or is this not award for a paper, it's more a "funding"?
[16:13:35] <pyzozord> but in the peg paper in the first paragraph there is an annotation that says basically "these are autor's opinions, but they are supported by this award"
[16:14:06] <pyzozord> "This material is based upon work supported in part by the National Science Foundation under Grant No. 0639876. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author and do not necessarily reflect the views of the NSF."
[16:14:15] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[16:14:15] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[16:14:15] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:14:24] <GeDaMo> It was for a whole project
[16:15:22] <GeDaMo> "Proposal to NSF Granted on August 31; 2006" http://www.vpri.org/pdf/rn2006002_nsfprop.pdf
[16:15:23] <bayaz> Type: application/pdf Size: 1.2 MB 
[16:16:24] <GeDaMo> Every year there was a progress report
[16:16:39] <pyzozord> oh that's very interesting
[16:16:59] <GeDaMo> If you look at the list of papers, they're all "STEPS Toward The Reinvention of Programming"
[16:17:22] <GeDaMo> Or if you search for "progress"
[16:18:34] <pyzozord> I should probably read all the papers from this project
[16:18:59] <pyzozord> if they had such a cool reinvention for parsing, there might be some other great ideas there
[16:19:40] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 240 seconds)
[16:20:20] *** Joins: wei2912 (~wei2912@112.199.250.21)
[16:21:52] <GeDaMo> The STEPS project was about building a complete system (OS, dev tool applications) in less than 20,000 lines of code
[16:22:05] <[itchyjunk]> funding is awarded
[16:22:10] <GeDaMo> One of the tools they used was DSLs which is where that PEG transformer came in
[16:22:11] <[itchyjunk]> grants are awarded 
[16:23:12] <[itchyjunk]> sounds like typical project
[16:23:25] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[16:24:10] <pyzozord> OS+IDE in <20k sounds amazing
[16:24:24] <pyzozord> sounds like there are likely to be other gems in that project
[16:27:14] <pyzozord> This gets too abstract for me "The tree rewriter can also be generated from a grammar that describes output structure (trees) generated for particular statements of an input lan- guage (patterns in a tree)."
[16:27:39] <GeDaMo> ... yeah, I don't know what that means either :P
[16:28:22] <pyzozord> so there are some grammars that can describe opreations that take in trees and output trees
[16:30:50] <pyzozord> "Code generators can be implemented with
[16:30:50] <pyzozord> grammar-driven bottom-up tree rewriting, a well-known example
[16:30:52] <pyzozord> being the BURG [3] family of code generators."
[16:30:58] <pyzozord> http://drhanson.s3.amazonaws.com/storage/documents/iburg.pdf
[16:30:58] <bayaz> Type: application/pdf Size: 160.5 kB 
[16:31:07] *** Quits: inky (~inky_@46.36.119.235) (Ping timeout: 252 seconds)
[16:31:41] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[16:32:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:32:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:32:28] *** Joins: gggp (~textual@60.10.194.42)
[16:33:23] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[16:33:55] *** Quits: X-Scale (~ARM@31.22.160.28) (Ping timeout: 252 seconds)
[16:34:08] *** X-Scale` is now known as X-Scale
[16:35:42] *** Joins: Klinda (~klinda@2.227.251.209)
[16:35:45] <pyzozord> I can see how thise papers might be a bigger rabit hole than wikipedia
[16:35:53] <pyzozord> s/thise/these/
[16:36:04] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[16:36:19] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[16:36:19] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[16:36:19] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:36:29] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:37:16] <[itchyjunk]> they generally have several teams working on a project and each team writes their own papers and such
[16:37:17] <pyzozord> mrig: I think you might be interesed in this last paper I linked it's title is "Engineering a Simple, Efficient Code Generator Generator"
[16:37:23] <[itchyjunk]> so i imagine it would be informatio ndence
[16:38:10] <pyzozord> yeah, I'll ignore the BURGs for now
[16:38:37] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[16:39:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[16:39:58] <pyzozord> but I can see how I should approach these papers. Slowly and methodically. And don't be emberassed for taking a day or two on reading a 12 page paper
[16:41:14] *** Joins: exvicesindaco_ (~exvicio@host-79-54-88-79.retail.telecomitalia.it)
[16:41:50] <Donitz> is there a c++ lib for getting named virtual key codes
[16:41:52] <Donitz> for SendInput
[16:42:08] *** Quits: dre (~dre@2001:8003:c932:c301:4db3:5aed:63c6:cc67) (Ping timeout: 268 seconds)
[16:43:22] <Donitz> oh
[16:43:23] <Donitz> nevermind
[16:43:26] <Donitz> it already exists
[16:43:33] *** Joins: inky (~inky@46.162.254.222)
[16:43:35] <Donitz> vs2019 just didn't feel like telling me
[16:43:46] *** Quits: exvicesindaco (~exvicio@37.163.138.204) (Ping timeout: 252 seconds)
[16:43:51] *** exvicesindaco_ is now known as exvicesindaco
[16:44:38] <[itchyjunk]> 2 days to read a paper sounds pretty good.
[16:44:56] <[itchyjunk]> people who read paper for a living generally allocate a week or more on the ones they are itnerested in
[16:46:31] *** Quits: inky_ (~inky@46.36.119.235) (Ping timeout: 252 seconds)
[16:47:07] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:47:08] <user51> GeDaMo: i'm going through starting forth right now
[16:47:41] <user51> the math exercises seem folly
[16:49:04] <[itchyjunk]> math?
[16:49:07] <[itchyjunk]> what are you doing?
[16:50:20] <user51> some of the exercies ask you to convert math expressions to forth
[16:50:27] <user51> e.g a^2 + ab + c
[16:52:54] <[itchyjunk]> what's forth? a language?
[16:53:56] <Thedarkb> Forth is an experience.
[16:54:21] <mrig>  pyzozord thanks, will take a look.
[16:54:55] <user51> [itchyjunk]: yeah
[16:56:09] <edgar-rft> Forth is a language, a city, and a river.
[16:56:31] <[itchyjunk]> it's also a quantity of drugs
[16:57:28] <Valware> that would be called a quarter
[16:57:39] <Valware> for drugs
[16:57:40] <Valware> lmao
[17:04:01] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[17:04:20] *** Quits: nrl^ (~nrl@68.101.54.227) (Ping timeout: 268 seconds)
[17:04:42] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[17:07:46] *** Joins: xiongxin8802 (~xiongxin@113.116.33.45)
[17:13:55] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[17:14:17] <^-^hi> is the vector rendering overhead (something like all the icons are svg) significant?
[17:16:23] <pulse> no because every competent vector renderer will pre-render and update on changes only
[17:17:22] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:17:48] <^-^hi> i dont get your context
[17:19:00] <pyzozord> Ok I can't really read "PEG-based transformer provides front-, middle and back-end stages in a simple compiler" paper. I thought I'd learn what PEG's are, but this paper assumes I know what are PEGS and what are transformers.
[17:19:38] <pyzozord> I first need to read "Parsing Expression Grammars: A Recognition-Based Syntactic Foundation"
[17:21:07] <^-^hi> i mean in ui and such stuff. were we use vector icons, vector fonts (i know the glyphs only get calculated once) etc.
[17:21:26] <[itchyjunk]> pyzozord, you're getting into compilers now?
[17:22:30] <pyzozord> [itchyjunk]: well not praticularly, I just decided to read a paper on pegs
[17:22:46] <pyzozord> not more than usual, except I decided to actually read a paper now
[17:26:51] <^-^hi> svg is not something i see people complaining about, but it doesn't look right. i am curious how much could be saved without bulky xml and all the math.
[17:27:57] <^-^hi> searches brought nothing about the impact it has
[17:28:06] <[itchyjunk]> yes lets "save" by getting rid of the math
[17:28:12] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[17:29:57] <pyzozord> A
[17:29:57] <pyzozord> linear-time parser can be built for any PEG, avoiding both the com-
[17:29:57] <pyzozord> plexity and fickleness of LR parsers and the inefficiency of gener-
[17:29:59] <pyzozord> alized CFG parsing
[17:30:14] <pyzozord> sorry about that, I keep forgetting it will break it into multiple lines.
[17:31:02] <pyzozord> Anyway that is a dense statement. Is there some way to figure out prerequesites to read a paper? Like I didn't spend time with competetive programming I would have no idea what "linear-time" means, and how deep that concept goes
[17:31:42] <^-^hi> i mean cpu time, ram etc. it takes to parse xml and then draw all the curves and gradients and more, [itchyjunk]. on places where it is not vital like icons.
[17:32:00] <[itchyjunk]> pyzozord, first pass of paper you hilight all the words you dont know and look them up
[17:32:05] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[17:32:06] <[itchyjunk]> second pass you go through the abstract
[17:32:15] <[itchyjunk]> 3rd pass you loo at all the graphs and pictures etc etc
[17:32:20] <[itchyjunk]> is how papers get approached
[17:32:47] <^-^hi> useful approach
[17:32:56] <pyzozord> oh is it?
[17:33:01] <[itchyjunk]> ^-^hi, somenoe somewhere probably has looked into that. just need to figure out what keyword to give to the overlord google
[17:33:15] <[itchyjunk]> also probably search google scholars instead of regular google
[17:33:34] <pyzozord> so I read the paper 3 times?
[17:33:56] <user51> wi
[17:34:01] <user51> my bad!
[17:34:52] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:37:18] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:37:21] <no_gravity> Good Afternoon
[17:37:24] *** Joins: Inari (~Pinkishu@p4fe7e8f8.dip0.t-ipconnect.de)
[17:37:26] <^-^hi> got no luck with google scholars
[17:37:29] <no_gravity> What could be a good name for a variable that is true when for a given product it is unclear which exact product it is?
[17:37:44] <^-^hi> unclearp
[17:38:17] <pyzozord> unknownProduct or "someProduct"
[17:38:29] <^-^hi> the p things was once trendy
[17:38:40] <no_gravity> pyzozord: Hmm.. the product is not really unknown. But we don't know exactly which one it is. 
[17:38:46] <no_gravity> (This usually happens when a product listing does not include a part number. Or the part number is unknown in the manufacturers database.)
[17:39:05] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Read error: Connection reset by peer)
[17:39:26] <^-^hi> misc?
[17:39:29] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[17:39:41] <[itchyjunk]> productUnspecified
[17:39:54] <pyzozord> if you don't know exactly which one is it, then it is unknown
[17:39:59] <[itchyjunk]> depends on your naking scheme in general probably
[17:40:03] *** Joins: rtypo (~alex@user/rtypo)
[17:40:10] <[itchyjunk]> you know it's a shampoo
[17:40:15] <[itchyjunk]> you don't know which shampoo
[17:40:20] <mrig> ^-^hi: you might have more success if you search for comparisons between vector and raster graphic performance.
[17:40:27] <mrig> throws up this sort of thing https://ieeexplore.ieee.org/abstract/document/59039
[17:40:27] <pyzozord> known product type of unknown product
[17:40:29] <[itchyjunk]> shampooGeneric might work
[17:40:29] <bayaz> Title: Vector versus raster: a functional comparison of drawing technologies 
[17:40:50] <no_gravity> pyzozord: Well, the offer might be "Used BMW. Built in 2014. Green. 200000km.". So we know the product. It is a green BMW :) But we don't know which model it is.
[17:41:40] <pyzozord> incompleteProduct?
[17:42:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[17:42:36] <pyzozord> partialProduct, or others https://www.thesaurus.com/browse/incomplete
[17:42:37] <bayaz> Title: Synonyms of incomplete | Thesaurus.com 
[17:42:43] <[itchyjunk]> have a product array
[17:42:49] <[itchyjunk]> the variable should be called product
[17:42:57] <[itchyjunk]> and one of the field should say unknown
[17:43:08] <[itchyjunk]> or custom data structure. call it product at that point
[17:43:21] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:45:29] <no_gravity> I tend to call it "unidentified".
[17:45:52] *** Quits: Leone (~Leo@69-165-143-205.dsl.teksavvy.com) (Read error: Connection reset by peer)
[17:46:01] <pyzozord> what does "Îµ" stand for in https://en.wikipedia.org/wiki/Top-down_parsing_language#Examples
[17:46:02] <bayaz> Title: Top-down parsing language - Wikipedia 
[17:46:12] *** Quits: inky (~inky@46.162.254.222) (Remote host closed the connection)
[17:46:19] *** Joins: inky_ (~inky@46.162.254.222)
[17:46:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:47:42] <[itchyjunk]> epsilon?
[17:48:09] <pikapika> pyzozord, empty string I think
[17:48:19] <[itchyjunk]> idk formal language theory though
[17:48:23] <[itchyjunk]> that's a strictly CS thing
[17:48:25] <pikapika> Yes
[17:48:27] <pikapika> empty string
[17:48:39] <pyzozord> pikapika: thank you
[17:48:43] *** Joins: Leone (~Leo@69-165-143-205.dsl.teksavvy.com)
[17:48:52] *** Joins: zwr (~zwr@2804:d45:b966:fb00:880a:1efd:a4cd:a70f)
[17:49:15] <pyzozord> Ah you got that from "A <- Îµ, where A is a nonterminal and Îµ is the empty string." right?
[17:49:23] <pikapika> Yes
[17:49:34] <mrig> pikapika: It think that shows up when you have a non determinate finite state machine, and there is a choice.
[17:49:36] <pyzozord> I need to learn to read
[17:49:43] <pikapika> pyzozord, no
[17:49:44] <mrig> pyzozord: rather.
[17:49:45] <pikapika> I hadn't read that part
[17:49:54] <pikapika> Its just a common notation in language theory texts
[17:50:09] <pyzozord> Oh, yeah I suspected that is some kind of common notation
[17:50:20] <pikapika> mrig, it specifically comes when there is a choice to go to the next state without consuming any input
[17:50:42] <pikapika> Which is agreeable with its meaning as an empty string
[17:52:26] <mrig> ah my bad, its Îµ epsilon and others Î» lambda, to denote the null or nil value.
[17:53:03] <mrig> which translate to a choice in state drawings.
[17:53:20] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[17:53:26] <pikapika> A choice can also be between multiple non-empty symbols
[17:53:34] <pikapika> the eps is when you can move without reading any input
[17:53:39] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[17:54:10] <mrig> yep, I have it as the starting choice in some drawings, which is the empty string; Thus my confusion there.
[17:54:47] <mrig> would only ever be one when a machine is simplified though I think.
[17:55:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[17:55:52] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:56:14] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Ping timeout: 260 seconds)
[17:58:07] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[18:00:40] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 268 seconds)
[18:03:03] *** Joins: X-Scale` (~ARM@83.223.227.181)
[18:04:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:04:10] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[18:05:16] *** X-Scale` is now known as X-Scale
[18:06:02] *** Joins: Uhino (~Uhino@ti0095q160-2777.bb.online.no)
[18:11:38] *** Joins: tangy (~tangy@user/tangy)
[18:12:06] *** Quits: hexingb (~hexingb@2409:8900:282f:2e92:db8:83b6:abfc:75bd) (Ping timeout: 260 seconds)
[18:13:02] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[18:14:06] *** Joins: hexingb (~hexingb@2409:8902:f40:cf6:14f4:b3e8:d022:30c4)
[18:14:18] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[18:17:49] *** Quits: ^-^hi (~^-^hi@user/-hi/x-1729478) (Read error: Connection reset by peer)
[18:19:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[18:20:39] <pyzozord> Oh wow, I think I just experienced a bit of usefulness of formal notation
[18:21:15] <pyzozord> "imple languages can be expressed easily in either paradigm. For example, {s â a â | s = (aa) n } is a generative definition of a trivial language over a unary character set, whose strings are âconstructedâ by concatenating pairs of aâs. In contrast, {s â a â | (|s| mod 2 = 0)} is a recognition-based definition of the same language, in which a string of aâs is âacceptedâ if its 
[18:21:21] <pyzozord> length is even."
[18:21:43] <pyzozord> I kinda get what is the difference between generative definition and recognition-based definition
[18:23:23] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 265 seconds)
[18:23:40] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[18:24:00] *** Joins: lain_ (~lain@81.163.47.192)
[18:24:29] *** Joins: snake (~snake@user/snake)
[18:27:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[18:27:58] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[18:28:10] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[18:28:11] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[18:28:11] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[18:29:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:29:22] *** Quits: jazzy (~jaziz@2600:380:c03c:c2e6:bd81:c730:db73:37a) (Ping timeout: 260 seconds)
[18:31:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:31:55] <pikapika> pyzozord, the second is just a common set theory notation
[18:31:59] <pikapika> the first provides a construction
[18:34:23] *** Joins: Atque (~Atque@user/atque)
[18:38:03] <pyzozord> yep, well I did't know that but I knew there a "such that", 'where", "absolute value", and "modulo" in these
[18:39:05] <GeDaMo> https://en.wikipedia.org/wiki/Set-builder_notation
[18:39:05] <bayaz> Title: Set-builder notation - Wikipedia 
[18:43:32] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[18:43:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[18:44:41] <user51> what about set breaker notation? :D
[18:46:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:47:07] *** Quits: hexingb (~hexingb@2409:8902:f40:cf6:14f4:b3e8:d022:30c4) (Ping timeout: 252 seconds)
[18:47:33] *** Joins: hexingb (~hexingb@111.30.224.165)
[18:47:43] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[18:48:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[18:48:40] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:3475:50b1:8fcd:e401) (Ping timeout: 240 seconds)
[18:49:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:50:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:50:29] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:51:05] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:a484:fed4:af15:fa66)
[18:54:51] *** Quits: xiongxin8802 (~xiongxin@113.116.33.45) (Remote host closed the connection)
[18:55:36] <pyzozord> I admit that I like that mathematicians tend to borrow notation from other mathematicians in different fields
[18:55:58] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[18:56:28] <pyzozord> they could have come up with something completly different for set builders and I'd need to learn it. But they borrow symbols and try to preserve the meaning
[18:56:52] <pyzozord> so with limited knoweledge I can guesstimate what some things mean
[18:57:10] <user51> operator overloading
[18:57:52] <[itchyjunk]> GeDaMo, does killing the `make` halfway break something such that when i remake it, things don't work?
[18:58:08] <pikapika> does it have a make clean or something like that
[18:58:27] <GeDaMo> Hmmm ... it might set the data/time on an incomplete file which would prevent it being built properly, I guess
[18:59:10] <[itchyjunk]> that might be why my eqmu is broken. i need to something maybe as pikapika suggests
[18:59:33] <pikapika> What were you trying to build
[18:59:42] <pikapika> Building things is scary
[18:59:43] <[itchyjunk]> eqmu
[18:59:46] <pyzozord> user51: with great power etc, I think mathematicians wield the overloading power much more carefully than c++ folks. cout<<EOF
[18:59:50] *** Joins: quartz (~quartz@user/quartz)
[18:59:50] <pikapika> [itchyjunk], I'd try to use a prefix directory
[18:59:59] <pikapika> So that it does not interfere with system files
[19:01:09] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:03:54] <user51> cout << NULL
[19:04:30] *** Joins: xsperry (~as@user/xsperry)
[19:04:33] <[itchyjunk]> pikapika, idk what that means
[19:04:45] <[itchyjunk]> but make clean is what i ran
[19:04:52] <[itchyjunk]> now i am rebuilding this
[19:04:56] <[itchyjunk]> fingers crossed
[19:05:00] <pyzozord> is there some standard c linux/linux library with some standard data structures like hashmaps?
[19:05:06] <pikapika> [itchyjunk], it will install it within a folder
[19:05:11] <pikapika> rather than onto the system files
[19:05:15] <pikapika> *folders
[19:05:19] <deniska> pyzozord: glib is fairly popular for that
[19:05:32] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:05:46] *** Parts: jsmooth (~quassel@user/rapid16) ()
[19:07:00] <pyzozord> deniska: thanks!
[19:07:17] <pyzozord> I'm not sure how I feel about including gnome stuff in program tbh
[19:07:42] <pyzozord> I was hoping maybe for something more generic linux or gnu
[19:07:56] <pyzozord> but if I won't find anything I'll use the glib
[19:09:12] *** Parts: nulleip (~luiz@189.34.167.234) ()
[19:10:03] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:11:13] *** Joins: rany (~rany@user/rany)
[19:11:21] *** Joins: nulleip (~luiz@189.34.167.234)
[19:11:50] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[19:13:02] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[19:15:30] *** Joins: Guest52 (~Guest52@93-172-101-61.bb.netvision.net.il)
[19:15:53] <pyzozord> someone says I could maybe use hsearch/tsearch/bsearch from glibc
[19:16:30] <pyzozord> https://linux.die.net/man/3/hsearch "hcreate, hdestroy, hsearch, hcreate_r, hdestroy_r, hsearch_r - hash table management" sounds hopeful
[19:16:30] <bayaz> Title: hsearch(3): hash table management - Linux man page 
[19:16:59] <pyzozord> sorry I didn't specify, I just need a hashtable
[19:19:27] *** Quits: zaher__ (~zaher@37.48.186.219) (Ping timeout: 265 seconds)
[19:21:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:22:25] <pikapika> Hash tables are very subtle
[19:24:08] *** Joins: vysn (~vysn@user/vysn)
[19:25:00] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:26:15] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:27:08] *** Joins: Salt_Pepper (~Salt_Pepp@c-68-62-42-123.hsd1.mi.comcast.net)
[19:39:40] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[19:41:14] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[19:43:07] <[itchyjunk]> anyone wanna hear what the solution to my problem was?
[19:43:12] *** Quits: rofl (rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8) (Read error: Connection reset by peer)
[19:43:16] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[19:43:29] *** Joins: rofl (rofl@2603:3016:1e01:b980:20b3:fc15:12c5:30d8)
[19:44:09] *** Joins: Atque (~Atque@user/atque)
[19:45:13] <jinsun> the latest thing you tried?
[19:48:05] <[itchyjunk]> yes
[19:48:20] <[itchyjunk]> apparently i need to `make install` after `./configure` and `make`
[19:48:21] <[itchyjunk]> ..
[19:48:35] <[itchyjunk]> that's why it was not finding the software
[19:52:10] <jinsun> cool, now figure out how to make a package that your package manager can install, instead of doing make install
[19:52:29] <pikapika> jinsun, yes
[19:52:35] <pikapika> That is very important
[19:52:48] *** Quits: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[19:53:09] <[itchyjunk]> jinsun, pikapika recommended that but too tired for that
[19:53:32] <[itchyjunk]> next would be to figure out how to actually run a qemu-system-riscv64
[19:53:45] <[itchyjunk]> i already have some asm i can run on it once i get to that point
[19:55:05] <jinsun> [itchyjunk]: what guide are you following?
[19:57:38] <[itchyjunk]> the one i was following asked me ot use the efl cross compiler which is apparently broken
[19:57:48] <[itchyjunk]> which someone in riscv mentioned today
[19:57:51] <[itchyjunk]> https://smist08.wordpress.com/2019/09/07/risc-v-assembly-language-hello-world/
[19:57:52] <bayaz> Title: Risc-V Assembly Language Hello World 
[19:58:03] <[itchyjunk]> this one is working but this one requires me to set up TinyEMU
[19:58:09] <[itchyjunk]> but i have qemu instead
[19:58:22] <[itchyjunk]> so i am stuck and not following either guide
[19:58:23] *** Joins: Dababy (~igloo@223.235.211.241)
[19:58:29] <[itchyjunk]> because i have half of one thing and half of another
[19:58:47] <[itchyjunk]> so i will need to figure out how to run qemu myself and run the asm on it
[19:58:58] <user51>  GeDaMo: i gave up on forth. reading lisp now.
[19:59:51] <[itchyjunk]> lol
[20:01:08] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[20:01:08] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[20:01:08] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:06:37] <GeDaMo> :/
[20:07:27] <[itchyjunk]> try 3rd maybe it's easier
[20:07:46] <user51> nth :)
[20:08:41] <tangy> possibly "Family Circle"
[20:08:55] *** Quits: Dababy (~igloo@223.235.211.241) (Ping timeout: 252 seconds)
[20:10:40] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c5f:e9b1:6dd5:a47f)
[20:12:54] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[20:13:39] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:1c5f:e9b1:6dd5:a47f) (Ping timeout: 268 seconds)
[20:15:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:16:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[20:16:55] *** Joins: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com)
[20:18:17] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:18:21] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:19:39] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:19:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:23:13] *** Joins: mindraj (~crispr@217.138.254.60)
[20:23:21] * tangy writes, 'comics aren't funny in this channel...'
[20:23:27] *** Joins: Guest96 (~Guest96@113.26.37.175)
[20:24:44] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[20:27:11] <pyzozord> Any idea why might the "belongs to" glyph render so badly? https://imgur.com/a/65QnoOw
[20:27:13] <bayaz> Title: imgur.com 
[20:27:21] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Quit: Konversation terminated!)
[20:28:56] <GeDaMo> Does it look better at a larger size?
[20:31:22] <pyzozord> yes, but still seems there is something off about it, this is 40px height https://imgur.com/a/I2aWZkz
[20:31:22] <bayaz> Title: imgur.com 
[20:31:47] *** Joins: rtypo (~alex@user/rtypo)
[20:32:08] *** Joins: Tazy (~Tazmainia@102.39.80.61)
[20:32:08] <pyzozord> *30px
[20:35:29] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:35:37] <pyzozord> ah I see. I just implemented dynamic font loading in my terminal emulator. And this glyph uses different font. And that font has different width and height, and I'm just doing nearest-neighbour bitmap scaling on it
[20:36:07] <pyzozord> sadly vanilla sdl2 doesn't support bilinear bitmap scaling on software bitmaps
[20:37:08] *** Quits: rsx (~dummy@ppp-188-174-135-127.dynamic.mnet-online.de) (Quit: rsx)
[20:37:31] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[20:39:17] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[20:39:49] <pyzozord> something weird is going on with libfontconfig though if I ask it for 20px font it says it got me a 20px font, and then I check that font is 24px
[20:40:35] <GeDaMo> Closest available size?
[20:42:28] *** Joins: Auron (~Auron956@user/auron)
[20:42:38] <pyzozord> hmm, maybe that font it loads DejaVuSans.ttf cannot do 20px? That would be strange though
[20:44:43] *** Joins: inky (~inky@46.71.170.253)
[20:46:06] *** Quits: inky_ (~inky@46.162.254.222) (Ping timeout: 260 seconds)
[20:47:28] *** Quits: One39Dev (LordShiva@user/one39dev) (Remote host closed the connection)
[20:47:53] <pyzozord> That's what fc-scan says about this font https://termbin.com/tvml
[20:47:54] <bayaz> Type: text/plain; charset=utf-8 
[20:49:21] *** Joins: inky_ (~inky@46.162.254.222)
[20:51:53] *** Quits: inky (~inky@46.71.170.253) (Ping timeout: 268 seconds)
[20:52:12] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[20:53:44] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[21:00:25] *** Joins: inky (~inky@46.71.170.253)
[21:00:25] *** Quits: inky (~inky@46.71.170.253) (Read error: Connection reset by peer)
[21:03:15] *** Joins: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net)
[21:03:35] *** Joins: menace (~someone@ppp-93-104-170-108.dynamic.mnet-online.de)
[21:03:51] *** Quits: inky_ (~inky@46.162.254.222) (Ping timeout: 265 seconds)
[21:04:19] *** Quits: menace (~someone@ppp-93-104-170-108.dynamic.mnet-online.de) (Changing host)
[21:04:19] *** Joins: menace (~someone@user/menace)
[21:04:23] *** menace is now known as Deknos
[21:05:35] *** Joins: defiant (~defiant@user/defiant)
[21:05:35] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[21:09:06] *** Quits: lain_ (~lain@81.163.47.192) (Quit: Lost terminal)
[21:10:08] *** Quits: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 265 seconds)
[21:10:25] *** Joins: salitos (~salitos@197.156.137.182)
[21:13:12] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[21:13:38] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[21:13:56] *** Joins: contagious_meow (~salitos@197.156.137.159)
[21:14:24] *** Quits: salitos (~salitos@197.156.137.182) (Read error: Connection reset by peer)
[21:14:28] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[21:14:44] *** Quits: contagious_meow (~salitos@197.156.137.159) (Client Quit)
[21:14:57] *** Joins: contagious_meow (~salitos@197.156.137.159)
[21:14:59] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:15:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:15:20] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[21:17:22] *** Joins: defiant (~defiant@user/defiant)
[21:20:04] *** Quits: contagious_meow (~salitos@197.156.137.159) (Quit: Leaving)
[21:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:23:53] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[21:25:14] *** Joins: inky (~inky@46.162.254.222)
[21:25:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:28:19] *** Joins: gareppa (~gareppa@user/gareppa)
[21:29:07] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[21:33:02] <pyzozord> hmm, using smooth bitmap scaling from sdl2_gfx doesn't help much
[21:34:35] <pyzozord> I guess that's the best I can do https://imgur.com/a/DnLwO4D
[21:34:35] <bayaz> Title: imgur.com 
[21:36:22] *** Joins: dunkeln (~dunkeln@94.128.209.190)
[21:36:22] *** Quits: dunkeln (~dunkeln@94.128.209.190) (Changing host)
[21:36:22] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[21:36:44] *** Joins: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com)
[21:37:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:42:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:42:35] *** Joins: Atque (~Atque@user/atque)
[21:44:03] *** Joins: Stryykert (~stryyke1@about/windows/staff/stryyker)
[21:45:45] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Ping timeout: 268 seconds)
[21:49:36] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[21:50:07] *** Quits: Guest52 (~Guest52@93-172-101-61.bb.netvision.net.il) (Quit: Client closed)
[21:53:34] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[21:55:25] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:55:37] *** Quits: varioust (varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 252 seconds)
[21:57:45] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:01:19] *** Quits: exvicesindaco (~exvicio@host-79-54-88-79.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[22:02:24] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[22:03:34] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:06:04] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[22:06:16] *** Joins: Leo_V (~Leo@45.72.238.133)
[22:06:59] <user51> wow, what is happening to me, i wanted to do a recursive lambda function..
[22:08:28] <GeDaMo> https://en.wikipedia.org/wiki/Fixed-point_combinator#Fixed-point_combinators_in_lambda_calculus
[22:08:28] <bayaz> Title: Fixed-point combinator - Wikipedia 
[22:09:10] *** Quits: Leone (~Leo@69-165-143-205.dsl.teksavvy.com) (Ping timeout: 260 seconds)
[22:09:33] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1036-static.midco.net)
[22:12:53] *** Quits: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-1030-static.midco.net) (Ping timeout: 268 seconds)
[22:13:08] <pyzozord> This is what I have right now, I thought youd' find this entertaining https://imgur.com/a/No4PUYB
[22:13:09] <bayaz> Title: imgur.com 
[22:13:33] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[22:14:41] <pyzozord> manage to render that "belongs to" glyph nicely, however discovered that stterm logic incorrectly identifies that character as single width not double width, so temporarly disabled scaling
[22:18:32] *** Parts: dstein64 (~dstein64@dannyadam.com) ()
[22:21:05] <pyzozord> ok I found the culprit, for some reason wcwidth things that â  is 1 width
[22:21:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:21:54] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[22:23:42] *** Joins: Akuli (~Akuli@82-203-165-143.bb.dnainternet.fi)
[22:27:29] *** Joins: dstein64 (~dstein64@dannyadam.com)
[22:30:51] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:32:23] *** Parts: dstein64 (~dstein64@dannyadam.com) ()
[22:34:01] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[22:38:13] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Read error: Connection reset by peer)
[22:44:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:44:59] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[22:46:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[22:48:35] *** Quits: mindraj (~crispr@217.138.254.60) (Changing host)
[22:48:35] *** Joins: mindraj (~crispr@user/mindraj)
[22:49:47] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:53:46] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Quit: Leaving)
[23:04:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:06:17] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:17:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[23:18:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:20:02] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[23:23:41] *** Joins: snake (~snake@user/snake)
[23:24:10] *** Joins: Narrat (~omnius@p200300df5f0ee19006ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:27:54] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[23:28:22] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:b16d:d359:384:92aa)
[23:29:34] *** Joins: diamondbond (~diamondbo@175.157.224.60)
[23:30:36] *** Quits: yinghua (~yinghua@2800:2121:1400:1db:b16d:d359:384:92aa) (Quit: Leaving)
[23:32:52] *** Quits: diamondbond (~diamondbo@175.157.224.60) (Client Quit)
[23:34:03] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:b16d:d359:384:92aa)
[23:35:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:36:46] *** Quits: mindraj (~crispr@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[23:39:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[23:40:03] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:40:31] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[23:40:54] *** Joins: src (~src@user/src)
[23:41:06] *** Joins: anovick_ (~anovick@IGLD-83-130-139-184.inter.net.il)
[23:42:30] *** Joins: Core2249 (~linkerage@c-73-116-75-217.hsd1.ca.comcast.net)
[23:42:54] *** Quits: Klinda (~klinda@2.227.251.209) (Quit: Leaving)
[23:43:52] <Core2249> is adding an hdmi to usb-c hub a software problem or a hardware problem?
[23:44:24] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[23:44:35] <Hash> Hardware and softwre both depending on what it does
[23:51:34] <mawk> adding to what Core2249 
[23:51:51] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[23:53:30] *** Quits: anovick_ (~anovick@IGLD-83-130-139-184.inter.net.il) (Ping timeout: 265 seconds)
[23:54:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:54:33] <InPhase> Core2249: Neither, because it's usually not a problem.  :)
[23:56:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:59:47] *** Joins: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0)
