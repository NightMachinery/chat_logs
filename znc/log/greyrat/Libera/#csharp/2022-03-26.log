[00:03:15] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[00:04:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[00:06:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:06:51] <smallville7123> is LINQ as fast as using the standard equivilant methods?
[00:07:38] <jonp> smallville7123: no.
[00:07:50] <smallville7123> ok
[00:07:53] <smallville7123> :)
[00:07:55] <jonp> it tends to be more productive, and you don't always need max speed everywhere
[00:08:46] <smallville7123> :)
[00:23:55] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:24:33] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:28:13] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[00:35:01] *** Joins: pitfall (~pitfall@pool-72-94-35-232.phlapa.fios.verizon.net)
[00:39:14] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:40:54] <lz_> is it the end of the world yet
[00:42:16] <pitfall> close
[00:42:30] <pitfall> just wait a little longer
[00:43:23] <lz_> tbh between now and the day I die, there isn't much I'm interested in seeing
[00:44:58] <bomb> https://www.youtube.com/watch?v=qNT6rjJOwKA
[00:45:00] <bomb> try this
[00:45:23] <lz_> it's a rip from ozzyman :/
[00:50:15] <Guest87> lz_: ?
[00:56:25] *** Quits: Assault (~Assault@87-95-118-72.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[00:57:25] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:01:21] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:01:59] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:06:03] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:11:09] <pitfall> does anyone else just merge their commits instead of waiting for review because nobody ever seems to review PRs?
[01:12:45] <Dean> MatthiasVance: how many years of C# experience do you have?
[01:12:52] <MatthiasVance> 13 I think now
[01:13:06] <Dean> oosh. that is many years.
[01:13:25] <MatthiasVance> I am now doing F# mostly
[01:13:37] <MatthiasVance> Less typing :D More strictness!
[01:13:42] <pitfall> heh
[01:13:46] <Dean> i don't know what F# is. i am going to look it up now.
[01:14:11] <pitfall> I still haven't bothered to learn F#, it's been on my todo list since at least 2015 or so
[01:14:27] <MatthiasVance> pitfall: The first time around I got scared but the second time it really clicked
[01:14:35] <pitfall> cool
[01:14:38] <MatthiasVance> It helps if you already like to write LINQ :D So you are used to turning shit around
[01:15:02] <pitfall> ah, yea, I have a love-hate relationship with linq
[01:15:31] <pitfall> I've never gotten into super complex linq, but for the simpler things, I love it
[01:15:43] <pitfall> for the more complex stuff, it hurts my head and I just unroll it
[01:22:48] <MatthiasVance> Yeah that's easier to do with F#, primarily because it also feels more natural to compose more
[01:23:04] <MatthiasVance> You can of course do the same with C#, but .. more typing
[01:24:32] <bomb> pitfall don't listen to him, F# is practically dead
[01:26:41] <MatthiasVance> lol
[01:27:20] <MatthiasVance> Microsoft is expanding the F# team actually
[01:28:07] <bomb> with vending machines? :P
[01:28:30] <bomb> I'm hungry
[01:28:34] <bomb> I'd love a snackbar right now
[01:31:22] <JakeSays> just got a job posting for an embedded software engineer with bsp/bringup experience. pay $80k. wtf
[01:31:36] <brianonymous> 2022 does some really weird shit sometimes
[01:31:44] <brianonymous> both the VS and the year
[01:31:52] <JakeSays> yermom does too
[01:31:55] <brianonymous> sometimes
[01:32:13] <brianonymous> i just had a stack trace window pop up......randomly... with my clipboard buffer in it
[01:32:24] <pitfall> lol
[01:32:28] <JakeSays> brianonymous: LOL
[01:32:49] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:32:53] <JakeSays> MatthiasVance: stop spreading that f# poison
[01:33:25] <MatthiasVance> brianonymous: Was there a stack trace on your clipboard?
[01:33:38] <MatthiasVance> JakeSays: F### you? :D
[01:33:47] <brianonymous> there was not
[01:33:48] <JakeSays> you wish
[01:33:54] <MatthiasVance> JakeSays: No thanks
[01:34:00] <MatthiasVance> I hope Santa knows
[01:34:02] <brianonymous> it was a paragraph i had copied from a confluence doc...
[01:34:13] <brianonymous> all up there in a stack trace window
[01:34:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[01:35:02] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:35:43] <JakeSays> i have yet to hear anything good about '22
[01:35:47] <bomb> look at this shit lol https://bpa.st/VI2Q
[01:36:12] <bomb> JakeSays covid ended in '22 what else do you want??
[01:36:35] <brianonymous> i like how he phonetic'ed SQLize
[01:36:40] <JakeSays> fucking awaits everywhere
[01:37:23] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[01:37:31] <bomb> Sequelize is a Node.js ORM, apparently
[01:37:37] <brianonymous> o
[01:37:53] <JakeSays> it's a stupid name for an orm
[01:38:07] <brianonymous> should be ormize
[01:38:15] <JakeSays> sqlize
[01:38:24] <bomb> > Sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, eager and lazy loading, read replication and more.
[01:38:43] <JakeSays> sequelize sounds like you're writing the next version of something
[01:39:19] <bomb> it has a flat vector art logo too
[01:39:19] <bomb> https://sequelize.org/v7/manual/asset/logo.png
[01:39:41] <bomb> that logo alone is instant 2k bump with Github stars
[01:40:00] <JakeSays> stupid logo. makes no sense.
[01:40:12] <bomb> holy shit 25k upvotes on Githubgram
[01:40:13] <bomb> https://github.com/sequelize/sequelize
[01:40:51] <JakeSays> well, it is node so the fanboiz vote it up
[01:41:03] <bomb> dipshits
[01:41:49] *** Joins: CoderGuy2 (~CoderGuy@2601:644:102:2820:5506:272d:1c9c:f908)
[01:42:10] <MatthiasVance> Just say No to Node
[01:42:15] <MatthiasVance> No node need
[01:42:22] <MatthiasVance> You can do it too
[01:42:23] * bomb nods
[01:42:38] <MatthiasVance> You can nod to node but not do node
[01:42:54] <bomb> anyway, I'm gonna pass out. stay safe, bulldogs!
[01:42:56] *** Quits: bomb (~bomb@user/bomb) (Quit: â€Ž)
[01:43:02] <MatthiasVance> That was fast
[01:43:10] <brianonymous> he likes to vaporize like that
[01:43:52] <MatthiasVance> Playing ping pong with his ding dong for sure
[01:44:00] <brianonymous> honest question to you 2022 users tho.. do you have oddities happen? or is my machine getting weird
[01:44:05] <MatthiasVance> Nope
[01:44:07] <brianonymous> i cant remember the last time i repaved
[01:44:26] <MatthiasVance> Better restore from your 2006 backup
[01:44:33] <brianonymous> lol
[01:44:51] <JakeSays> brianonymous: repaved what?
[01:44:56] <brianonymous> this here machine
[01:45:13] <JakeSays> ah
[01:45:25] <JakeSays> i want to repave this machine to de-ubuntu it
[01:45:44] <brianonymous> in faaact, its getting so old that its actually the same exact OS bits i was running when i had the 3930k
[01:45:44] *** Quits: CoderGuy (~CoderGuy@2601:644:102:2820:4d9c:2d04:dc9e:a5cb) (Ping timeout: 260 seconds)
[01:46:01] <brianonymous> i had to have an MS guy log in and re-enable stuff when i went to this 1950x
[01:46:37] <JakeSays> brianonymous: he wouldn't tell you how to do it?
[01:46:47] <brianonymous> i was watching and it was all powershell based
[01:47:06] <brianonymous> i didnt know that switching platforms bonks your license
[01:47:13] <brianonymous> well, i know now at least
[01:47:46] <brianonymous> he did like a 4 line mega script thing, and presto
[01:52:29] <JakeSays> ya should've captured it
[01:53:39] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[01:54:29] <JakeSays> man clarance thomas's wife is a total wack job
[01:57:33] <maroon> i'm currently loading an entire file like 'byte_array = File.ReadAllBytes("filename")', but since the file is over 100megs, it uses a lot of ram until i can release it by settng the array to null. what's the best/fast way to load the file into byte_array 10 million bytes at a time until i'm done with the whole file?
[01:58:11] <ben> you might want a FileStream instead https://docs.microsoft.com/en-us/dotnet/api/system.io.filestream?view=net-6.0
[02:05:23] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[02:06:10] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:06:24] <MatthiasVance> brianonymous: If it doesn't want to activate you can always do the manual activation by phone :)
[02:06:48] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:10:39] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[02:12:53] *** CoderGuy2 is now known as CoderGuy
[02:12:56] *** Quits: CoderGuy (~CoderGuy@2601:644:102:2820:5506:272d:1c9c:f908) (Changing host)
[02:12:56] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[02:13:54] <JakeSays> i have one opensource project. it's an embedded terminal for qt creator. i wrote it because i needed it and it's only 'opensource' because i didn't bother marking the repo private. now some asshat keeps expecting me to update it for every version of qt creator. this is why i don't do open source
[02:14:45] *** Joins: alguien (~alguien@user/alguien)
[02:27:55] <Guest87> rip
[02:30:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[02:30:46] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[02:35:13] <Suchiman> JakeSays: why don't you make use of your incredible talent to tell people to get off your lawn
[02:35:41] <JakeSays> Suchiman: heh. i just might reply "get off my lawn!" :D
[02:36:04] <JakeSays> that's actually an excellent idea
[02:36:14] <Suchiman> xD
[02:38:35] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:39:27] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[02:39:57] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[02:40:14] <Guest87> I want to get on your lawn.
[02:40:28] <Guest87> Can you please add how to the readme?
[02:41:22] <MatthiasVance> JakeSays: Haha yeah the only issue on my VS extension is "Can you please update it for VS 2022? It is great to use!"
[02:41:27] <MatthiasVance> I can't be fucking bothered
[02:41:40] <JakeSays> MatthiasVance: exactly
[02:41:56] <JakeSays> i've already been asked for a mac version.
[02:42:09] <MatthiasVance> You should just tell them your fees
[02:42:13] <MatthiasVance> That'll shut them up
[02:42:40] <JakeSays> something tells me they'd just bitch louder
[02:43:00] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[02:44:26] <lz_> lol https://youtu.be/I3cWMQUmBXQ?t=361
[02:45:26] <lz_> you can't convince me I'm not living in a really really bad movie
[02:49:40] <lz_> when I was a student I had a coworker just like kim jong un, with the sunglasses and all. He was looking really good but he never did shit
[02:49:58] <lz_> he was probably here because he had really rich parents
[02:53:40] <lz_> hahahahaha https://www.youtube.com/watch?v=Gp_orBM2VkQ
[02:57:25] <BSaboia> lz_, if you think that Kim Jong Un is good looking, then perhaps you are indeed on a really bad movie
[02:57:55] <lz_> BSaboia: who am I to judge really. He was dressed as if he thought he was good looking anyway
[02:58:22] <lz_> you know, like people who put hair gel etc
[02:59:19] <lz_> lol I just checked, indeed kim jong un has hair gel lmao
[02:59:22] <BSaboia> JakeSays, I heard a similar story where the guy just stopped contributing to open source altogether
[02:59:39] <BSaboia> lz_, He does I guess
[03:04:37] *** Joins: sysRPL (~sysRPL@097-101-210-085.res.spectrum.com)
[03:05:07] <sysRPL> i jsut had the worst experience with buying from the univeristy of central florida
[03:05:33] <MatthiasVance> That's where you get your drugs from?
[03:05:59] <sysRPL> 1) their contact information leading to the surplus warehouse location was very wrong
[03:06:04] <Guest87> Well, I mean, it's Florida
[03:06:24] <MatthiasVance> "Florida man tries to buy drugs from police officers"
[03:06:33] <sysRPL> 2) the yokels working at the warehouse were learning how to drive forklifts rather than helping people at the pickup counter
[03:07:09] <sysRPL> 3) they couldn't find the items i had already purchased
[03:07:28] <sysRPL> 4) they couldn't remem,ber who i was asking me my name no less that 5 times
[03:08:31] <sysRPL> 5) they absolutely refused to allow me to verify the items worked by plugging them in
[03:09:12] <sysRPL> 6) they said if the lsited said it work and had photos of them turned on then the items did work and that was that ... no customer veficiation at their warehosue allowed
[03:09:31] <sysRPL> 7) i spent 5 house driving and waiting on them in total
[03:09:46] <sysRPL> 8) when i got home i found out none of the items work
[03:10:30] <sysRPL> oh yeah and the items asset ids of what i pciked didn't match my invoices
[03:12:53] *** Joins: MaNa2k (~MaNa2k@213.236.160.63)
[03:14:10] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:16:19] <lz_> < sysRPL> 5) they absolutely refused to allow me to verify the items worked by plugging them in
[03:16:28] <lz_> if you're talking about dildos it makes sense
[03:17:52] <MaNa2k> is there any simple way to get list of all ip addresses used in azure ?
[03:18:00] <MatthiasVance> MaNa2k: For what purpose?
[03:18:29] <MaNa2k> not sure, someones probably gonna do a security check im guessing
[03:18:39] <MaNa2k> i was asked to get em
[03:18:44] <MatthiasVance> "all ip addresses in azure"
[03:18:49] <MatthiasVance> Is too vague
[03:18:52] <MaNa2k> no everyones
[03:18:55] <MaNa2k> just ours
[03:19:27] <MaNa2k> our resoures, weather it be an api, or blazor page, or other that needs ip
[03:20:36] <MaNa2k> to norrow it dows some more, every ip inside a rg
[03:21:04] <MaNa2k> MatthiasVance, btw, you always on irc or something? do you ever rest ?
[03:21:17] <MatthiasVance> I haven't been on IRC for most of the day actually xD
[03:21:24] <MaNa2k> oh oki, me neither
[03:21:30] <MaNa2k> been driving for 9hours straight
[03:21:45] <MaNa2k> back and forth to capital city
[03:22:01] <MatthiasVance> Wow, what for?
[03:22:10] <MaNa2k> some personal stuff, so i skipped work today
[03:22:13] <MatthiasVance> Ah
[03:22:19] <MatthiasVance> omfg almost midnight
[03:22:23] <MatthiasVance> why the fuck did I agree to help my dad
[03:22:26] <MatthiasVance> tomorrow
[03:22:38] <MatthiasVance> Instead of spending money I have to come help :')
[03:22:46] <MatthiasVance> *am expected to come help
[03:23:11] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[03:23:28] <MaNa2k> well i live in a different town, so i rarely get to help mine, usually my older bro takes care of that who lives in same town as my dad
[03:24:58] <MatthiasVance> Maybe I should move :P
[03:25:22] <MatthiasVance> Was planning to be in a different country for a few months every year so ... just don't know how to practically do that with kids
[03:28:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[03:30:12] <JakeSays> sounds like someone wants to use azure to ddos azure
[03:30:47] <JakeSays> MatthiasVance: you should be printing, not helping your dad, dammit
[03:31:15] <MatthiasVance> JakeSays: I have no printing inspiration :D
[03:31:23] <MatthiasVance> Maybe after renovation planning is completed
[03:32:49] <JakeSays> my brother got in to the water business
[03:33:35] <MaNa2k> JakeSays, hope its not water boarding business :P
[03:33:51] <JakeSays> lol no. water supply
[03:34:06] <MaNa2k> :P
[03:45:43] <Nasp>  MaNa2k  What do you neeed all azure addresses for?
[03:45:48] <Nasp> Sounds like you are doing security wrong
[03:46:16] <MatthiasVance> This is the test
[03:46:17] <MaNa2k> Nasp, i dont need em, someone else needs em, im supposde to figure out how to list em
[03:46:24] <MatthiasVance> If MaNa2k delivers them, security test failed
[03:46:34] <Nasp> But it still is wrong
[03:46:35] <MaNa2k> im guessing, its probably for checking security stuff
[03:47:13] <MaNa2k> anyway, looking at this https://mihai-albert.com/2020/10/01/get-the-list-of-all-azure-vms-with-all-their-private-and-public-ips/
[03:47:20] <MaNa2k> none of the queries seems to work
[03:47:50] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:48:42] <MaNa2k> hes trying to list ips belonging to microsoft.compute/virtualmachines , microsoft.network/networkinterfaces and microsoft.network/publicipaddresses
[03:49:00] <Nasp> Yes, but why
[03:49:02] <MaNa2k> none of them gives me anything
[03:49:15] <Nasp> He can't have any use for it, and tell him to find them himself
[03:49:19] <MaNa2k> we actually have serverless apps running
[03:49:51] <MaNa2k> Nasp, maybe hes gonne block external access to them
[03:49:54] <MaNa2k> who knows
[03:50:03] <MaNa2k> lots of them are just timetriggers
[03:50:07] <MaNa2k> functions
[03:50:09] <Nasp> Block external access to Azure?
[03:50:15] <MaNa2k> which can be trigered via webhook i htink
[03:50:15] <Nasp> So his service can't contact Azure datacenters?
[03:50:52] <MaNa2k> Nasp, no block  externals pc from sending requests to these services i guess
[03:51:00] <Nasp> ?
[03:51:06] <Nasp> That doesn't make sense
[03:51:14] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[03:52:37] <MaNa2k> Nasp, basically what we need is to list all the ip addresses that we have assigned to different appservices, apis, functions apps, etcc
[03:53:01] <MaNa2k> or more like, azure has automatically assign
[03:53:09] <MaNa2k> *assigned
[03:53:42] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[04:01:55] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[04:03:50] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:7495:30c4:96e6:e598) (Quit: Textual IRC Client: www.textualapp.com)
[04:06:52] <maroon> i cant find any decent examples of using filestream. im trying to change https://mypastebin.com/FhjS8GZ from 'old' to something like 'new'. with filestream would i have problems if multiple threads are trying to access the same file at the same time? and im guessing i need to explicitly close the file unlike file.readallbytes that does that for me?
[04:08:19] <JakeSays> maroon: multiple threads can read from the same file simultaneously
[04:08:59] <maroon> good, same is so for file.readallbytes, but wasnt sure
[04:10:23] <maroon> or would it be simpler for my code if i just chopped my huge file into 10 meg files and then just used file.readallbytes to process each individually?
[04:15:03] <JakeSays> that would not be simpler
[04:17:27] <JakeSays> maroon: what are you doing with the contents of the file?
[04:18:20] *** Quits: MaNa2k (~MaNa2k@213.236.160.63) (Ping timeout: 272 seconds)
[04:20:23] <maroon> the file is a shortcut to creating a list of uint32's, where the Nth item is the total of all bytes [0,N]. I'm only accessing them one time, so i don't need to go back and create the 99999th item later by adding all 99999 items again. after i get the Nth byte to update my variable, i then { do stuff } based on the new total
[04:21:58] <maroon> so if the byte array has [1,2,3,4] its the same as having a uint32array with [1,3,6,10]
[04:23:42] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:c93e:f33d:df5:a660)
[04:27:33] <maroon> i could've stored it on disk as a uint32 array, but then it would have the slowdown of somehow casting the byte array into a uint32 array, and then the file would be 4x larger
[04:30:41] *** Quits: EternalMan (~Belgarath@user/belgarath) (Quit: I couldn't be bothered to put a nice leave message)
[04:31:07] *** Joins: EternalMan (~Belgarath@user/belgarath)
[04:31:22] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[04:32:00] <brianonymous> "so if the byte array has [1,2,3,4] its the same as having a uint32array with [1,3,6,10]" <- wut
[04:32:40] <brianonymous> lemme reread all the things
[04:33:25] <maroon> value = 0; index = 0; while (index < bytearray.Length) { value += bytearray[index]; do stuff; index++; }
[04:34:10] <brianonymous> oic
[04:34:30] <brianonymous> 'same as having' i read that in a very deep, byte level kind of way
[04:34:32] <lz_> can someone explain me why there's no seek bar on tiktok videos? and more recently on youtube shorts?
[04:34:52] <lz_> why the actual fuck?
[04:35:22] <brianonymous> im more mad when players dont have volume knobs
[04:35:38] <lz_> you can still adjust the main volume though, even if it's not ideal
[04:35:46] <lz_> but no seekbar? no workaround
[04:35:48] <brianonymous> or just a toggle from mute to f18
[04:36:14] <brianonymous> my main volume stays at 100, no touchy
[04:37:06] <brianonymous> if it outputs sounds, it should have its own mix level control, imho.
[04:38:12] <brianonymous> maroon: filestream has size and position
[04:38:24] <maroon> i hate when the system volume level is the max, and the app's volume level is a percent of the system volume level, so the only way to get 1 app to be louder is to expose yourself to the potential that a different app is loud too
[04:38:35] <brianonymous> maroon: https://docs.microsoft.com/en-us/dotnet/api/system.io.filestream?view=net-6.0
[04:38:55] <lz_> maroon: one of my biggest fear in life is having to adjust app volumes in windows mixer; once they're not leveled, there's no going back
[04:39:24] <lz_> even if you set them all to 0 and take the main one up again, they're still not leveled
[04:39:29] <irwiss> maroon: just ReadByte() and add that up... readbyte will also advance position by 1
[04:39:29] <brianonymous> thats what i mean.. that main output should be the global send value, or unity gain
[04:39:39] <Suchiman> lz_: the trick is to set them all to 100%, that resets them
[04:39:46] <Guest87> lz_: it's all just a weird, crap approximation for what was actually interesting in the form of vine
[04:39:48] <brianonymous> each app is a mix bus, going into main out
[04:39:49] <lz_> Suchiman: but you have to do it for every single ones :(
[04:39:53] <maroon> irwiss, isn't it going to be horribly slow to read 100 million bytes 1 at a time?
[04:40:16] <irwiss> yeah windows mixer is probably the most turd like ux in the entire windows, and that's a feat considering control panel
[04:40:29] <Suchiman> lz_: no, if you adjust the main volume, all will raise to 100%, except for the ones you messed with manually, so once you've set main volume to 100%, you'll see all the ones that are not 100% and then you can just up them to 100% as well to bring them back into sync
[04:40:39] <lz_> irwiss: lol at the "new" control panel that only lets you have one window of it :D
[04:40:44] <irwiss> maroon: if performance is an issue then read into a few kilobytes of buffer and run over that buffer as a normal array
[04:41:19] <lz_> Suchiman: ok, still annoying
[04:42:01] <irwiss> lz_: i swear most of windows ux team is practically bottom of the barrel in competence, don't think there was a decent ui designed since windows xp or so
[04:42:18] <brianonymous> maroon: dont you think you will pop your uint if you sum 30million bytes?
[04:42:39] <lz_> irwiss: it went downhill because they wanted (i think) to design the ux both for desktop and tablets at the same time, which explains the shit we have now
[04:42:59] <irwiss> lz_: yeah but that was win8, been a while since that shitshow and could've been fixed a few times over
[04:43:02] <JakeSays> brianonymous: lol i read it in the same way
[04:43:10] <lz_> and no one is selling tablets anymore and there's no windows for phones anymore either
[04:44:14] <maroon> brianonymous, it would if the file were random bytes, but i've created the file so that the grand total is < 2^31, and i have a 2nd file nearly as large that brings the total to nearly 2^32
[04:44:35] <brianonymous> i guess it wont pop. 30mil * 0xFF = 7,650,000,000
[04:44:59] <JakeSays> that's a bit over the capacity of a uint
[04:45:08] <brianonymous> oh yeah. 4,294,967,295
[04:45:13] <irwiss> maroon: fwiw you could just memory map the file and read it as normal array
[04:45:28] <brianonymous> i had to put in the commas do i dont confuse myself
[04:45:45] <JakeSays> irwiss: he's having issues with FileStream. mapping might be too much
[04:45:47] <Guest87> https://docs.microsoft.com/en-us/dotnet/api/system.uint64?view=net-6.0
[04:45:54] <brianonymous> maroon: i need to ask, what in the actual heckin heck are you doin
[04:45:55] *** Quits: alguien (~alguien@user/alguien) (Quit: Leaving)
[04:45:59] <JakeSays> ^^
[04:46:02] <maroon> irwiss, that's the 'old' method i'm currently using with file.readallbytes. but i'm running out of ram when i've got multiple threads doing the same thing
[04:46:12] <irwiss> JakeSays: yea but... until you cross 4gb boundary flat mmap might be easier than filestream
[04:46:22] <maroon> brianonymous, it's a list of prime numbers
[04:46:38] <brianonymous> in that case, summing bytes wont do no good.
[04:46:54] <irwiss> maroon: that's not memory mapped, readallbytes allocates the array and reads, mmap is doing tricks with virtual memory addressing to represent your file as memory
[04:47:27] <brianonymous> the second you hit prime 257 you make a trip to shortvill
[04:47:30] <JakeSays> irwiss: no, a mmap would be better regardless of size. i meant that he can't figure out filesream - he's not ready for mapping yet
[04:47:35] <Nasp> brianonymous:  I just fixed DataDogs tracing library
[04:47:37] *** Quits: pitfall (~pitfall@pool-72-94-35-232.phlapa.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:47:38] <Nasp> It generates horrible traces
[04:47:42] <brianonymous> Nasp: sell it back to them!
[04:47:55] <irwiss> JakeSays: i mean, it will be better, but once you cross 4gb boundary you need to move the view and it becomes more complex than filestream :P
[04:48:07] <Suchiman> maroon: so.... what is the end result of that function anyway? reading in bytes from a file and producing a uint[] that contains the running sum of the elements?
[04:48:10] <maroon> brianonymous, it's not, since my previous total was 251, and the next byte 6 updates my total to the new prime
[04:48:22] <JakeSays> irwiss: lol i think we're saying the same thing
[04:48:45] <maroon> it's for sieving large numbers against small-ish prime factors
[04:48:47] <brianonymous> maroon: so clearly this file is not an array of bytes, it cant be, unless they are all 32/64 bit datas
[04:49:03] <brianonymous> is it a delimited text file instead?
[04:49:20] <maroon> brianonymous, as my example above value is updated at each byte position, adding the increment from the old total
[04:49:34] <brianonymous> so all primes are under 8bit?
[04:49:47] <maroon> no, a file of 100k would allow building a list of the 1st 100k primes
[04:50:15] <brianonymous> thats what im trying to say, if binary, a byte wont hold that.. so the storage of bytes is confusing me
[04:50:25] <Nasp> brianonymous:  It's quite an easy fix
[04:50:31] <Nasp> They said they will write back when they have a "plan"
[04:50:41] <Nasp> And it's 9 months or so ago according to their Github
[04:50:45] <maroon> the primes are all even distance from each other above 3, so newvalue = byte << 1 + next-byte
[04:50:49] <Nasp> Also their onboarding team's fucking useless tbh
[04:51:11] <maroon> newvalue is a uint32
[04:51:18] <brianonymous> nasp: yikes man
[04:51:46] <JakeSays> Suchiman: so was there ever any progress made on a 64 bit decimal in .net?
[04:51:50] <irwiss> hmm apparently prime gaps are relatively small, didn't realize they were this small https://en.wikipedia.org/wiki/Prime_gap
[04:52:05] <Suchiman> JakeSays: doesn't ring any bell
[04:52:20] <brianonymous> i think im missing some level of detail or thinking about something entirely dif
[04:52:21] <JakeSays> hmm.
[04:52:31] <Nasp> brianonymous:  I haven't testd the latest fix, but i think it will be good
[04:52:44] <Nasp> Instead of having 300 databases it will report the correct account of 5
[04:52:48] <brianonymous> nasp: well at least i know who to poke if we come across it :D
[04:53:06] <Nasp> Well they have "decided" that a http-client is a service
[04:53:09] <JakeSays> poke yermom
[04:53:09] <maroon> yeah, most primes are pretty close to each other until the numbers get really big. it's not until the 400 millions or so before there's a gap above 255
[04:53:21] <Nasp> A database is also a service, but a unique one for each service
[04:53:26] <Nasp> So i just overwrite the names to be the same
[04:53:59] <brianonymous> maroon: you trying a Riemann hypothesis thing or somethin
[04:54:01] <Nasp> Why are we talking primes?
[04:54:29] <maroon> brianonymous <maroon> it's for sieving large numbers against small-ish prime factors
[04:54:59] <brianonymous> i dunno what it means to sieve stuff
[04:55:10] <maroon> we're talking prime because people were asking why i was wanting to read a large file from disk without running out of ram when several threads were doing it at the same time
[04:55:10] <Nasp> maroon:  Are you doing prime checking?
[04:55:26] <JakeSays> somoeone port 1200 lines of x64 assembly to c# for me
[04:55:27] <Nasp> Gigabyte sized primes?
[04:55:50] <brianonymous> JakeSays: that should end up as like 9 lines, ill do it
[04:55:59] <maroon> Nasp, im doing this to eliminate not-primes from a range so they wont need to be slow-tested
[04:56:20] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[04:56:25] <Nasp> Ahh
[04:56:28] <Nasp> Yeah got it
[04:56:37] <JakeSays> brianonymous: LOL only 9?
[04:56:42] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:56:45] <maroon> if by gigabyte you mean the exponent, no more kilobyte
[04:56:52] <Guest87> I'm still very confused because your sample code appeared to be adding the difference between consecutive primes to a single value
[04:56:56] <Guest87> Which is going to overflow
[04:57:10] <Nasp> maroon:  I did some prime numbering recently and found out that it takes way to long to check a single number
[04:57:11] <Suchiman> maroon: anyway, is dis what you want? https://gist.github.com/Suchiman/7fb5889578ec4844dc26762c43da691b
[04:57:17] <brianonymous> overflow has been my big beef \o/
[04:57:36] <Nasp> Also i think i read the way i was checking could potentially be faulty in case of bitflips
[04:57:47] <brianonymous> but im only participating at a 54% level due to lack of scroll back
[04:57:58] <Guest87> I'm participating at a 53% level because drunk
[04:58:17] <JakeSays> i'm at 4% due to lack of interest
[04:58:19] <brianonymous> i appreciate that level of contribution
[04:58:39] <JakeSays> brianonymous: get busy https://github.com/douglascrockford/DEC64/blob/master/dec64.asm
[04:58:45] <brianonymous> Suchiman: never seen uhhh whats it called.. used like that before
[04:58:49] <JakeSays> you have 10 minutes
[04:58:54] <Suchiman> brianonymous: pattern matching?
[04:58:56] <brianonymous> ya
[04:59:14] <Suchiman> brianonymous: be thankful i didn't use while (file.Read(buffer, 0, buffer.Length) is int read and > 0)
[04:59:19] <brianonymous> JakeSays: i hate all of this
[04:59:33] <JakeSays> LOL
[04:59:58] <JakeSays> there was a time when i would've ate that shit up
[05:00:17] <brianonymous> this type of asm, and anything involving stuff like coprocessors.. i hate
[05:00:47] <Nasp> maroon:  I checked 2^132,049-1 and i quickly realized it iddn't scale well :D
[05:00:51] <JakeSays> brianonymous: lol what kind of asm do you not hate?
[05:01:07] <maroon> thans Suchiman, this looks good. in order to zap my buffer, do i need to close the input file?
[05:01:18] <brianonymous> all the other ones that dont implement complex floating point math
[05:01:18] <Suchiman> maroon: "zap my buffer"?
[05:01:32] <Guest87> I would *love* to know what is being talked about with this prime difference byte file stuff.
[05:01:40] <JakeSays> brianonymous: yeah but this is decimal math.
[05:01:50] <brianonymous> JakeSays: snoozy
[05:01:55] <JakeSays> lol
[05:02:01] <JakeSays> well you're no help
[05:02:05] <brianonymous> at that point its just grunt work
[05:02:10] <Nasp> maroon:  How fast is your checker?
[05:02:12] <JakeSays> indeed
[05:03:20] <JakeSays> brianonymous: i'll just run it through a decompiler to get nasty C, then convert that to c#
[05:03:39] <brianonymous> maybe you can get it into IL
[05:03:51] <maroon> Suchiman, if i have buffer[10,000,000], and i do "buffer = null" do i need to 'close' the File in order to allow garbage collect to recover the buffer[]
[05:04:35] <Suchiman> maroon: i chose 4096 as buffer size because that's usually sector size so that's a good amount of bytes to read at once
[05:04:39] <maroon> Nasp, it depends on the bit length
[05:04:53] <JakeSays> brianonymous: ohh someone else has already ported it to C.
[05:05:22] <maroon> Suchiman, is it faster to read 4096000 at once, rather than reading 4096 1000 times?
[05:05:30] <brianonymous> JakeSays: that works
[05:05:35] <Nasp> maroon 132049 bit length?
[05:05:51] <JakeSays> the C source is exactly 50% of the assembly source
[05:06:03] <Suchiman> maroon: doing buffer = null does nothing, unless it is a field with a longer lifetime, if it's scoped to the method, the GC will be ABLE TO reclaim it as soon as the instruction pointer has passed the last reference to buffer. But the GC will only actually reclaim it once a GC is triggered which usually happens by another allocation
[05:06:27] <Suchiman> maroon: closing the file has no effect on the buffer but releases the file handle to the OS
[05:06:53] <maroon> Nasp, i'm searching for safe primes ranging from 2048-16384 bits. the prime-test is already starting to get slow. when i tested how long it takes to test a prime at 32k bit length, each test was taking like 90 seconds
[05:06:57] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[05:07:20] *** Quits: sysRPL (~sysRPL@097-101-210-085.res.spectrum.com) (Remote host closed the connection)
[05:07:39] <Suchiman> maroon: "4096000 at once" marginally at best
[05:07:51] <Nasp> Ahh i just did mersenne prime
[05:09:18] <maroon> Nasp, yeah when the primes are of special form like small*2^humongous, there's shortcuts to do fast calc on humongous number, but it's horribly slow if you try to do it on random[2^humongous,2^(humongous+1)]
[05:10:00] <Nasp> Yeah like 20000 bits mersenne primes takes just a few seconds
[05:10:11] <brianonymous> is this for some kinda crypto purpose? im legit curious
[05:10:32] <Nasp> I wanted to see how hard it was to find a big prime :D
[05:10:52] <brianonymous> 2^32k is legit big
[05:10:56] <Guest87> I think it *might* be hard to find a large prime.
[05:11:20] <Nasp> Nope
[05:11:25] <Nasp> Not in the prime world
[05:11:32] *** Joins: bomb (~bomb@user/bomb)
[05:11:49] <brianonymous> i broke calc.exe trying to get its full 1 max
[05:11:50] * JakeSays lives in the ultima prime world
[05:12:07] <bomb> what did I just walk into??
[05:12:13] <Guest87> ultima prime world? lmao. i was born in the ultima prime prime world.
[05:12:42] <Guest87> We've since rebranded to ultima amazon prime amazon prime world for legal reasons.
[05:12:43] <brianonymous> step aside.. omega ultra prime^3 coming thru
[05:12:59] <JakeSays> lame
[05:13:07] <Nasp> The scaling of how long it takes to compute is just hard to understand
[05:13:09] *** Parts: brianonymous (~int19h@user/brianonymous) (Leaving)
[05:13:17] *** Joins: brianonymous (~int19h@user/brianonymous)
[05:13:20] <brianonymous> wrong button.
[05:13:25] <bomb> hahhhaha that's funny
[05:13:28] <maroon> Guest87, depends what kind of primes you're looking for. if you look at a list of the largest known primes they always have a simple formula
[05:13:37] <bomb> dude, that's the best joke I've read in this channel for AGES
[05:13:42] <bomb> LOL brian missed it
[05:13:52] <JakeSays> bomb: what joke
[05:13:54] <brianonymous> i hit the wrong damn [x]
[05:14:19] <bomb> you were trying to delete us instead?
[05:14:26] <Guest87> maroon: looking at lists of largest known primes isn't going to find you a large prime number.
[05:14:35] <maroon> density of primes is cut in half each time you double the bit length, so when you double the size enough times, they get really rare - in addition to being slow to test them
[05:14:37] <JakeSays> he can try but we will never go away
[05:15:01] <bomb> not sure about myself. high blood pressure just woke me up
[05:15:11] <maroon> Guest87, i was mentioning the list as the easiest types of huge primes to look for
[05:15:15] <bomb> one day I will not wake up
[05:16:07] <JakeSays> hmm. i wonder how i could run two instances of rider on linux.
[05:16:13] <Guest87> maroon: I dunno whether there's a definition issue here but Nasp said he was curious how hard it was to find prime numbers. By find I don't think he meant looking up existing known primes.
[05:16:24] <JakeSays> maybe a cgroup or something
[05:16:30] <Nasp> Guest87:  i meant trying myself
[05:16:43] <Nasp> And i got stuck at 132049 in bit length
[05:16:50] <Guest87> Yes... that's what I'm saying.
[05:17:06] <Nasp> I've always wonder how big those integers are and if the search could be optimized
[05:17:25] <Nasp> Like when you see some projects where matematicians want to brute force a problem, it's not always the nicest code they produce
[05:17:34] <Nasp> But with primes there have been a lot of smart people on the problem
[05:17:41] <bomb> JakeSays it's in the system settings
[05:17:42] <Guest87> Yeah, that's the takeaway.
[05:18:22] <Guest87> There has been a lot more brainpower applied to the problem than you or I could ever hope to apply in a lifetime.
[05:18:43] <Nasp> Yeah i think i should try some of the other math problems out there :D
[05:18:53] <maroon> Guest87, im trying to say that it's easier to find huge primes of the style you find in the huge primes list. nobody is trying to find a prime near a random 123456789 bit number, it's always something like random*2^123456789 -1
[05:19:09] <JakeSays> bomb: what is?
[05:19:14] <brianonymous> but why \o/
[05:19:17] <Nasp> maroon:  It still take a month to check each mersenne prime
[05:19:17] <brianonymous> is it like sport?
[05:19:35] <Nasp> Yes
[05:19:37] <Guest87> Nasp: millenium prize?
[05:19:41] <brianonymous> ok, i can respect that
[05:19:53] <Nasp> Guest87:  Why not
[05:19:56] <JakeSays> Guest87: little late for that
[05:20:09] <Guest87> JakeSays: ?
[05:20:11] <bomb> JakeSays checkbox says "open projects in new window" or something, so you can open multiple jetbrains
[05:20:35] <JakeSays> Guest87: the millennium passed 22 years ago :p
[05:20:48] <Guest87> Oh, yeah, they decided on the problems then
[05:20:51] <JakeSays> bomb: they all run in the same process
[05:20:52] <Guest87> There's still 6 to solve
[05:20:59] <JakeSays> Guest87: ah ok
[05:21:09] <Guest87> 1/7 so far... it's going great.
[05:21:17] <JakeSays> lol
[05:21:38] <bomb> why do you care which process they're running on?
[05:21:49] <Guest87> I jest, they are slightly difficult problems.
[05:22:23] <JakeSays> bomb: because when you open a dialog in one window, all the other "instances" are frozen
[05:22:57] <bomb> that's not how Swing works JakeSays
[05:23:13] <JakeSays> bomb: that's how rider works
[05:23:20] <bomb> different project in different window means different JFrame in its own thread
[05:23:37] <bomb> you're just too stubborn to try that
[05:23:45] <JakeSays> try what
[05:24:54] <JakeSays> bomb: i have two rider projects open. i bring up the 'open...' dialog in one, the other one is totally frozen
[05:24:55] <bomb> check the "open projects in new window" checkbox, Uncle Alzheimer
[05:25:10] <JakeSays> i HAVE that selected, you putz
[05:25:36] <maroon> Suchiman, is there a method for closing a File.Open, or i'm just supposed to leave it open until the thread exits?
[05:25:45] <bomb> weird. that shouldn't happen
[05:26:10] <Suchiman> maroon: the closing brace of the using closes the file
[05:26:17] <Suchiman> maroon: or Dispose
[05:26:18] <JakeSays> bomb: also, when a dialog is open and you switch focus to a different app, then switch back to rider, every rider instance is brought forward
[05:26:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:27:12] *** Quits: spinningcat (~spinningc@94.54.210.37) (Remote host closed the connection)
[05:27:24] <bomb> JakeSays did you just reveal that you use GNOME?
[05:27:34] <bomb> that takes courage, coming out. kudos to you, brave man.
[05:27:40] <Guest87> I farted.
[05:28:04] <JakeSays> bomb: i'm on kde
[05:28:19] <bomb> wowow now, society isn't ready for that one yet
[05:28:44] <JakeSays> so there's got to be a way to sandbox rider
[05:29:10] <Nasp> Is it KDE or Gnome that's the good one?
[05:29:21] <bomb> Xfce is the good one
[05:29:24] <bomb> GNOME is the worst one
[05:29:37] <JakeSays> Nasp: well, kde is the less bad oneeeeee
[05:30:01] <JakeSays> xfce is primitive
[05:30:18] <Nasp> What's the one Ubuntu uses?
[05:30:25] <JakeSays> gnome
[05:30:36] <JakeSays> kubuntu uses kde
[05:30:41] <Guest87> dwm is the good one btw
[05:30:51] <JakeSays> Guest87: that's not a desktop
[05:31:01] <Guest87> desktops are for newbs
[05:31:09] <Guest87> sorry
[05:31:10] <Guest87> newbies
[05:31:33] <JakeSays> well, a window manager on it's own isn't all that fun
[05:31:41] <Guest87> i have so much fun
[05:31:55] <Guest87> when i use dwm i sit there giggling
[05:31:58] <Nasp> I've really considered ditching Windows
[05:32:17] <maroon> i see Suchiman, does 'using' also avoid the need to have the try/catch structure, or i still need to have that in case the file isn't there?
[05:32:30] <JakeSays> even given all the shit i've had to deal with using ubuntu, i don't regret moving from windows
[05:32:42] <bomb> https://i.imgur.com/iKUPom7.gif
[05:33:20] <bomb> I switched from Ubuntu to Fedora (KDE) and then OpenSUSE Leap (Xfce)
[05:34:04] <JakeSays> Guest87: i suppose one could get a lot done with just a wm and a terminal
[05:35:22] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[05:36:19] <bomb> who is Guest87 again jonp ?
[05:37:36] <Suchiman> maroon: using(a) { b } is syntax sugar for try { a; b; } finally { a?.Dispose(); }
[05:38:28] <maroon> ah thanks, i've not been using using, pun intended
[05:41:58] <Suchiman> maroon: basically, to put it into a function that manages everything correctly and only outputs the uint[], this is it all https://gist.github.com/Suchiman/7fb5889578ec4844dc26762c43da691b
[05:42:32] <Suchiman> (using the `using` statement form)
[05:49:47] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:54:08] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:7921:1c31:e1df:8102) (Quit: Client closed)
[05:58:06] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:06:34] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[06:10:33] <JakeSays> Suchiman: does .net have something similar to C builtins? specifically __builtin_clzll, etc
[06:10:58] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Client Quit)
[06:15:10] <brianonymous> yer lucky if you can ask it a favor for inlining yer stuff
[06:17:07] <JakeSays> brianonymous: i just figured that there'd be some new fangled optimized shit
[06:18:46] <brianonymous> can we inline IL yet?
[06:18:53] <JakeSays> lol no
[06:19:06] <JakeSays> would be interesting though
[06:19:20] <brianonymous> https://xoofx.com/blog/2016/05/25/inline-il-asm-in-csharp-with-roslyn/ <- isnap
[06:19:22] <brianonymous> osnap.
[06:19:44] <JakeSays> brianonymous: oh cool
[06:19:54] <brianonymous> its clever trickery, i like it
[06:20:38] <JakeSays> too bad it never made it mainline
[06:21:48] <JakeSays> brianonymous: hmm. i bet you could create a source generator that would parse a comment block of IL
[06:22:23] <brianonymous> i want it like delphi used to do.. asm keyword
[06:24:19] <JakeSays> mathy C is a bitch to rewrite in c#
[06:26:27] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:15ce:85e4:37c1:7d9f)
[06:26:43] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[06:27:01] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:30:43] <bomb> Suchiman https://www.youtube.com/watch?v=qD0W_JyhNrg
[06:30:45] <bomb> she's cute isn't she
[06:34:41] <bomb> her body is full of tattoos
[06:35:00] <bomb> and she's from Dresden
[06:38:37] <JakeSays> a body full of tatts kinda lessens the cuteness
[06:39:11] <bomb> yeah that leans toward hotness
[06:39:34] <JakeSays> not for me
[06:39:58] <bomb> not enough hair for you?
[06:40:16] <JakeSays> i just don't find tatts attractive
[06:40:40] <bomb> me neither, but they're not disgusting either
[06:41:00] <JakeSays> i didn't say they were (although some are)
[06:43:40] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:44:01] <JakeSays> brianonymous: system.runtime.intrinsics
[06:46:33] <irwiss> tatoos move the person up on the crazy scale tbh
[06:46:58] <JakeSays> irwiss: i've noticed a tendency
[06:48:36] <bomb> crazy == good sex
[06:48:55] <JakeSays> bomb: i've noticed that tendency as well
[07:01:09] <maroon> scribbling all over something tends to ruin it :)
[07:03:21] <bomb> y'all only making love to nuns or what
[07:06:24] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:07:30] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:10:59] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:21:20] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[07:24:25] <JakeSays> hmm. c# needs Int128
[07:33:05] *** Quits: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se) (Ping timeout: 256 seconds)
[07:33:26] <JakeSays> bah. this is a pita
[07:44:13] <bomb> try this        https://www.youtube.com/watch?v=ekPKt1AEjSg
[07:44:35] *** Quits: bomb (~bomb@user/bomb) (Quit: bye)
[07:45:22] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[07:46:41] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[07:51:01] <brianonymous> whoa.. taylor hawkins died
[07:55:05] <JakeSays> brianonymous: oh wow
[07:55:38] <JakeSays> wow he od'd
[07:56:01] <brianonymous> was it? i was looking but couldnt find anything
[07:56:56] <JakeSays> it's on his wikipedia page
[07:57:18] <JakeSays> also here https://www.smh.com.au/culture/music/taylor-hawkins-foo-fighters-drummer-dead-at-50-20220326-p5a86r.html
[07:57:37] <JakeSays> oh. disregard the last link
[08:04:17] *** Joins: Jck_true1 (~jcktrue@user/jck-true/x-0200799)
[08:04:49] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 256 seconds)
[08:04:49] *** Jck_true1 is now known as Jck_true
[08:18:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:20:20] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:15ce:85e4:37c1:7d9f) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:23:32] <smallville7123> hmmm why does this return false?
[08:23:34] <smallville7123> EqualityComparer<ArrayList>.Default.Equals(this.list, list.list)
[08:24:33] <smallville7123> this.list   Count = 1    [0]: "OS_MOUSE"
[08:24:35] <smallville7123> list.list   Count = 1    [0]: "OS_MOUSE"
[08:25:51] <smallville7123> its documentation states that
[08:25:53] <smallville7123> "The Default property checks whether type T implements the System.IEquatable<T> interface and, if so, returns an EqualityComparer<T> that uses that implementation. Otherwise, it returns an EqualityComparer<T> that uses the overrides of Object.Equals and Object.GetHashCode provided by T."
[08:27:14] <smallville7123> is it simply calling this.list.Equals(list.list);   instead of calling Equals on each list element ?
[08:28:33] <smallville7123> i dont want to use list.Intersect as i dont need the overhead of a new list being created and items being added to it just to see if it's count == this.count
[08:28:44] <WillPittenger> I'm trying to serialize a class to JSON.  However, I need to create a sample file before the class can write.  If there's an array of instances, how does .NET know which classes is being deserialized?  Does `JSONSerializer.Serialize` output a class indicator?
[08:28:59] <smallville7123> (as if it does then all items have matched in the intersect method)
[08:29:39] <smallville7123> WillPittenger: usually the class would implement ISerializable
[08:29:50] <smallville7123> i think
[08:29:58] <WillPittenger> I'm talking about what's in the JSON file.
[08:30:22] <smallville7123> reflection maybe?
[08:31:08] <WillPittenger> The generic sample JSON files don't tell .NET which class to create when deserializing.
[08:31:34] <smallville7123> (assuming it would be equivilant to android's XML inflation that basically "deserializes"/inflates an XML file into a valid class/object heirarchy with correct classes as specified in the XML
[08:31:57] <WillPittenger> Example: The sample JSON in the first post here >>> https://stackoverflow.com/questions/19307752/deserializing-polymorphic-json-classes-without-type-information-using-json-net
[08:32:31] <smallville7123> WillPittenger: then you need to inflate manually
[08:33:05] <smallville7123> eg you choose the structure to use that best matches all the possible values in the json you are deserializing assuming an expected format
[08:33:12] <WillPittenger> I was hoping the serializer would spit out a class name that the deserializer would read in.
[08:34:10] <smallville7123> eg, struct ITEM { string id; string title; bool is_album; int images_count; ArrayList<ITEM> children; }
[08:34:29] <smallville7123> as a possible struct to deserialize the data into
[08:36:10] <smallville7123> but generally you would use the same structure as the one that has been serialized in order to correctly deserialize it
[08:36:36] <smallville7123> (eg if you serialized a FOO and you need to deserialize into a FOO)
[08:37:08] <WillPittenger> Well, the problem might be that you have an array of `object`.  Now which derivation of `object` should be created?
[08:37:38] <smallville7123> you can use GetType to store type info if possible
[08:37:56] <smallville7123> GetType will ALWAYS return the type that the object was INSTANTIATED as
[08:38:16] <smallville7123> eg object foo = new ITEM(); // foo.GetType() returns ITEM
[08:38:18] <WillPittenger> Yes, but that doesn't help `System.Text.JSON.JSONSerializer.Deserialize()`.
[08:40:38] <smallville7123> maybe this? https://stackoverflow.com/a/9809872
[08:42:00] <WillPittenger> Interestingly enough, I don't want to--nor should I need to--reinvent anything.
[08:42:06] <smallville7123> tho you would probs need to serialize TWICE,  first serialize the type information for the class being serialized, then serialize the class itself
[08:42:27] <smallville7123> then deserialize the type information and use it to correctly deserialize the class
[08:43:20] <smallville7123> assuming you cannot modify the resulting JSON of the class serializion
[08:43:44] <smallville7123> otherwise you would store the type information along side the class serialization
[08:44:32] <smallville7123> for example, "TYPE": "System.String", "id": "OUHDm"
[08:45:33] <smallville7123> otherwise the class CANNOT be correctly deserialized (other than blindly assuming the types based on the values based on the contents of each field)
[08:45:47] <smallville7123> values of the *
[08:46:51] <smallville7123> such as this "struct ITEM { string id; string title; bool is_album; int images_count; ArrayList<ITEM> children; }"  which could incorrectly deserialize the class as the wrong type that it was serialized from
[08:47:23] <smallville7123> "struct ITEM { string id; string title; bool is_album; int images_count; string link; ArrayList<ITEM> children; }"  *
[08:50:33] <smallville7123> much like https://stackoverflow.com/a/19308474 which is ironically the answer of[14:01] <WillPittenger> Example: The sample JSON in the first post here >>> https://stackoverflow.com/questions/19307752/deserializing-polymorphic-json-classes-without-type-information-using-json-net
[08:51:40] <WillPittenger> I didn't see anything in that thread that helped.
[08:52:15] <smallville7123> why not?
[08:53:28] <JakeSays> smallville7123: arraylist doesn't implement IEquatable<T>
[08:53:48] *** Joins: sysRPL (~sysRPL@097-101-210-085.res.spectrum.com)
[08:53:50] <smallville7123> JakeSays: :/
[08:54:04] <smallville7123> rip Equals generation from VS
[08:54:32] <JakeSays> smallville7123: why are you using ArrayList?
[08:54:51] <smallville7123> cus it is simple
[08:55:12] <JakeSays> as you can see it's not
[08:55:21] <smallville7123> and it posseses https://docs.microsoft.com/en-us/dotnet/api/system.collections.arraylist.contains?view=netstandard-2.0#system-collections-arraylist-contains(system-object)
[08:55:51] <JakeSays> why are you messing with untyped lists?
[08:56:26] <sysRPL> some of these university surplus auction staff are cheats ... i went to inspect their items yesterday and they were selling thngs like busted fluke scopemeters as if they were working for $500
[08:56:34] <sysRPL> they are ripping off customers
[08:57:46] <sysRPL> https://www.ebay.com/itm/265603695517
[09:00:10] <sysRPL> their descriptions are written to feign ignorance related to any disputes `this item was working when pulled from use after we bought a newer model`
[09:00:14] <smallville7123> also ArrayList contains the Intersect method which List<object> does not
[09:01:24] <JakeSays> smallville7123: why are you using object?
[09:02:14] <JakeSays> and iirc there is an extension method for intersection of List<T>'s
[09:10:41] <smallville7123> is there an alternative to this?   this.list.Intersect(list.list).Count() == this.Count
[09:17:12] *** Joins: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net)
[09:20:57] *** Quits: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 252 seconds)
[09:23:27] <smallville7123> specifically one that does not allocate a new object
[09:25:12] <DevJohnC> holy shit, Taylor Hawkins died :(
[09:26:56] <smallville7123> would this do?
[09:26:58] <smallville7123> list.list.All((object element) => list.Contains(element))
[09:27:28] <smallville7123> list.list.All((object element) => list.list.Contains(element))         *
[09:28:12] <smallville7123> this.list.All *
[09:28:34] <smallville7123> ughhhh
[09:29:22] <smallville7123> https://gist.github.com/mgood7123/8abe62ea12efe26373c46ef27660c91c would this be correct for checking if the CONTENTS of two list's are equal
[09:31:37] <smallville7123> assuming the order of such elements do not matter
[09:31:50] <smallville7123> eg, {1, 2, 3, 4} should be equal to {4, 2, 3, 1}
[09:32:23] <smallville7123> JakeSays:
[09:33:55] <irwiss> just use a hashmap like a normal person, or don't if you don't care about performance
[09:46:53] <JakeSays> smallville7123: no
[09:47:27] <JakeSays> smallville7123: it won't because the 1 in the left list doesn't equal the 1 in the right list
[09:47:41] <JakeSays> and so for the other three elements
[09:47:42] <smallville7123> https://gist.github.com/mgood7123/8abe62ea12efe26373c46ef27660c91c *
[09:47:58] <smallville7123> JakeSays: [15:01] <smallville7123> assuming the order of such elements do not matter
[09:48:28] <JakeSays> smallville7123: order has nothing to do with it
[09:48:49] <JakeSays> the 1's on each side are not equal to each other
[09:49:17] <smallville7123> would it be equial if it was a set instead?
[09:49:36] <JakeSays> no, because you're using object as the type
[09:50:11] <JakeSays> which means that each instance of a 1 will be boxed to its own object, and the references won't be equal
[09:51:04] <JakeSays> smallville7123: your method would work for two List<int>'s
[09:51:58] <JakeSays> smallville7123: you need to get away from using object
[09:55:59] <smallville7123> heh, this works https://dotnetfiddle.net/guLM7G
[09:56:31] <smallville7123> :)
[09:59:33] <smallville7123> "[14:31] <JakeSays> smallville7123: why are you using object?"
[10:00:02] <smallville7123> becuase my list must be able to store both integer's (short, int, long, float, double) and strings
[10:00:08] <JakeSays> yes, i know it works, but i was trying to get you to not use object
[10:00:49] <smallville7123> as well as object's themselves from unmanaged code
[10:01:08] <JakeSays> huh?
[10:01:30] <smallville7123> (such as objects from Objective-C bindings)
[10:04:11] <JakeSays> i seriously doubt that will work
[10:04:32] <smallville7123> why?
[10:05:08] <JakeSays> because an object in objective-c will most likely be wrapped in a c# class
[10:05:42] <smallville7123> yes, except when it is for example, an opaque object
[10:06:02] <smallville7123> for example, one returned by NSTouch.identity or similar
[10:06:06] <JakeSays> https://sharplab.io/#v2:EYLgHgbALANALiATgVwHYB8ACAmAjAWAChMAGAAk1ygG4iBIBhozAZguwtwHYiBvenGQAa9foQathACgCWqOGQBuigJT06YxorIBeJYtri6AX3Xq5Cg/VPiB2bKPWUAnFIBEACQCmAGx8B7MgB1f0QfABMyNxVDBn9gACsvAGMFAENdMlQvAHdpXBj1eKTUsmBMrNzpbEKjYpSFZIrsvKEpFlq4xIaySL1K1qkoTrp60rSAfWaqtuHY0e7S4Cn+lukO+bHGlbIB6pGt3p29toL59QAZGQBnOAAeLYA+Mh8MvTWr24fFuEepEdeADoAILhcJSNIAtIgsFSYBQmHg5II0Hg8Io2FuABiAHkcdFDJcbvcni9yu8qp8ST8/gDgIiIRM6QzsXiCeofPTUXCmfNOQzkryOVz
[10:06:06] <JakeSays> YeEhUZ1AAzUJeNLJAAWZCkhxkcC8AFsyHIXpD1JoGDJJUqAIT8gDC/nkaTk11kavVKjURg06gkuFcbleZDSqEinN6gVQ/gUwGDiuSlrg1tQUTIAGotfaRiZXb5rl5Xfq3R6vT6/eUI1btW544mNcmbAxKzZjEA
[10:06:16] <JakeSays> wtf
[10:06:22] <smallville7123> oof
[10:07:37] <JakeSays> what does NSTouch.identity return
[10:07:42] <smallville7123> object
[10:07:58] <JakeSays> well, here's why it won't work: https://dotnetfiddle.net/4iAVQc
[10:08:02] <smallville7123> https://developer.apple.com/documentation/appkit/nstouch/1535399-identity
[10:09:26] <smallville7123> or rather https://docs.microsoft.com/en-us/dotnet/api/appkit.nstouch.identity?view=xamarin-mac-sdk-14
[10:09:46] <smallville7123> "public virtual Foundation.NSObject Identity { [Foundation.Export("identity", ObjCRuntime.ArgumentSemantic.Strong)] get; }"
[10:16:22] <smallville7123> "Fatal Error: System is too busy now and there is no free workers to handle your request. Please try again later"
[10:16:23] <smallville7123> oof
[10:18:53] <smallville7123> " [15:37] <JakeSays> well, here's why it won't work: https://dotnetfiddle.net/4iAVQc " it does if you override Equals https://dotnetfiddle.net/2Yf9hd
[10:19:20] <JakeSays> i am aware
[10:20:43] <smallville7123> :P
[10:24:38] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:29:57] *** Quits: knmae (~knstmnpn9@91-159-126-116.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[10:32:06] *** Joins: knmae (~knstmnpn9@91-159-127-215.elisa-laajakaista.fi)
[11:06:15] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[11:25:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:34:55] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:37:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:55:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:58:48] <smallville7123> i discovered that you can recover from an exception by moving the execution point in the gutter to a return location o.o
[12:02:25] <irwiss> kek https://www.reddit.com/r/funny/comments/tohej1/shes_just_trying_her_best/
[12:11:11] <smallville7123> ummm
[12:11:20] <smallville7123> MSB3026: Could not copy "D:\IMPORTANT\source\repos\WindowsProject1\AndroidUI\bin\Debug\netstandard2.0\AndroidUI.dll" to "bin\Debug\net6.0-windows\AndroidUI.dll". Beginning retry 1 in 1000ms. The process cannot access the file 'bin\Debug\net6.0-windows\AndroidUI.dll' because it is being used by another process. The file is locked by: "Microsoft Visual Studio 2022 (8132)" @@@SOURCE BUILD @@@TYPE WARNING @@@URL <<<4808:5>>> C:\
[12:11:21] <smallville7123> Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\amd64\Microsoft.Common.CurrentVersion.targets @@@URL.INFO https://www.bing.com/search?q=WARNING MSB3026 @@@COMMENT.HINT <[[[Project Name]]]> [[[[File Name]]]] @@@COMMENT <Windows> [Microsoft.Common.CurrentVersion.targets]
[12:11:35] <smallville7123> oof
[12:12:43] <smallville7123> irwiss: lmao
[12:13:06] <smallville7123> "i got little legs" XD
[12:19:27] *** Joins: Lazenca (~lazenca@user/lazenca)
[12:25:20] <ap5> Herrrloooo
[12:28:43] <smallville7123> hi
[12:32:54] * smallville7123 has been debugging dispatchTouchEvent for hours ;-;
[12:33:56] <ap5> :D
[12:34:00] <ap5> On a saturday
[12:35:06] <ap5> well ... i am trying to get rustic and flycheck to work in emacs :D
[12:36:05] * smallville7123 is very tired of it not working :(
[12:36:23] * smallville7123 is very tired of it not working correctly :(          *
[12:36:24] <ap5> I can relate :D
[12:41:23] <ap5> Well ... i think mine is working!!
[12:47:47] <smallville7123> nice
[12:50:47] * smallville7123 watches The Flash           <3
[12:52:30] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:52:37] <Dean> hello
[12:55:27] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[13:01:48] <MichaelLong> hi
[13:02:01] <ap5> Dean, hello
[13:15:18] *** Joins: MaNa2k (~MaNa2k@213.236.160.63)
[13:15:45] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 268 seconds)
[13:19:29] <MatthiasVance> Oh! So not helping my dad today!
[13:19:35] <MatthiasVance> It all works out
[13:21:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:34:24] <Dean> MatthiasVance: coding day?
[13:37:16] <MatthiasVance> Dean: Hm, idk yet
[13:40:45] <Dean> MatthiasVance: you had many years of experience with c#? and you now do f# yes? how long do you think it will take for someone with adhd to learn c# at a productive level. such that, i can apply for a job in it and contribute to the company?
[13:41:22] <MatthiasVance> Dean: "It depends"
[13:42:30] <MichaelLong> had my first company internal hackaton in one of our other locations
[13:42:54] <MatthiasVance> MichaelLong: Did you have fun? What did you build?
[13:43:19] <MichaelLong> yeah it was fun, but traveling is a bit strange after 2 years.
[13:44:16] <MichaelLong> we build some internal product for measurement purposes (LTE / 5G client functionality) on commodity hardware with .NET (core) and a REST api.
[13:44:59] <MichaelLong> but we need more preparation time and improved organization
[13:57:44] <irwiss> manager: sounds like it's ready for release
[14:00:14] *** Quits: MaNa2k (~MaNa2k@213.236.160.63) (Quit: Leaving)
[14:03:12] <MatthiasVance> Haha, this
[14:06:18] <MichaelLong> :>
[14:09:45] *** Joins: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de)
[14:09:45] *** Quits: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de) (Changing host)
[14:09:45] *** Joins: Ducki (~ducki@user/ducki)
[14:19:05] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[14:21:42] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:22:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:26:54] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:28:26] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[15:00:16] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[15:00:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:08:48] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:29:42] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:59] *** Joins: csrf (~csrf@user/csrf)
[15:44:27] *** Joins: Klinda (~superleag@user/klinda)
[15:48:53] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:29b1:3f11:d96d:65f3)
[15:55:18] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:29b1:3f11:d96d:65f3) (Quit: Client closed)
[15:56:32] *** Joins: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se)
[16:00:13] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:38de:4830:9ce5:38a6)
[16:02:11] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[16:09:04] <Suchiman> JakeSays: https://docs.microsoft.com/en-us/dotnet/api/system.numerics.bitoperations.leadingzerocount?view=net-6.0#system-numerics-bitoperations-leadingzerocount(system-uint32)
[16:12:35] <Suchiman> JakeSays: https://github.com/dotnet/runtime/issues/67151
[16:17:49] <Suchiman> JakeSays: that BitOperations helper class is cross platform, you could also call the platform specific https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.x86.lzcnt.leadingzerocount?view=net-6.0#system-runtime-intrinsics-x86-lzcnt-leadingzerocount(system-uint32)
[16:28:46] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:29:27] *** Quits: eto (~eto@S010690724005a172.vc.shawcable.net) (Quit: ZNC - http://znc.in)
[16:30:16] <canton7> (BitOperations delegates so the intrinsics where possible)
[16:39:20] *** Quits: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se) (Ping timeout: 272 seconds)
[16:49:01] *** Joins: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se)
[17:07:55] *** Joins: eto (~eto@S010690724005a172.vc.shawcable.net)
[17:16:44] *** Joins: Tazy (~Tazmainia@2001:1c02:170a:4000::1003)
[17:24:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[18:01:18] *** Joins: Guest8752 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02)
[18:01:31] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:38de:4830:9ce5:38a6) (Ping timeout: 256 seconds)
[18:08:13] *** Joins: bomb (~bomb@user/bomb)
[18:10:36] <MatthiasVance> Does anyone have a good hammock they can recommend? :D
[18:11:08] <bomb> lol
[18:11:26] <MatthiasVance> bomb: Finally ticking items off my to-buy list :)
[18:13:01] <bomb> do they sell steel rope hammocks?
[18:13:23] <bomb> I broke a normal hammock once, and that was 30 kilograms ago :\
[18:15:50] <MatthiasVance> bomb: I plan to get one with stand, idk
[18:16:59] <bomb> MatthiasVance that was the kind I broke
[18:17:09] <bomb> and I hurt my back falling on the stand
[18:18:22] <MatthiasVance> bomb: Ah shit =/
[18:21:28] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:21:30] <bomb> MatthiasVance I'd get a garden swing instead. they're million times better
[18:22:03] <MatthiasVance> I don't like the way they look but you have a really good point :o
[18:22:35] <MatthiasVance> I wonder if you fall off that if you go lie down?
[18:23:00] <MatthiasVance> Ah they are titled back a bit usually so not a problem
[18:24:28] <bomb> they don't swing that much
[18:24:56] <bomb> I slept on it numerous times, I never woke up on the ground
[18:25:18] <MatthiasVance> Yeah the seats are tilted back so you won't fall out in "the front"
[18:35:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:36:35] *** Quits: EternalMan (~Belgarath@user/belgarath) (Quit: I couldn't be bothered to put a nice leave message)
[18:39:38] *** Joins: EternalMan (~Belgarath@user/belgarath)
[18:40:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[18:46:39] <bomb> fucking Ukraine. their naval mines are free floating the sea now
[18:53:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:09:05] <edcba> maybe they wanted to add transponders to them but got caught by chip shortage
[19:14:52] *** Joins: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[19:57:00] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:58:09] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:01:25] <bomb> https://github.com/icculus/SDL_sound/releases/tag/v2.0.1
[20:03:28] <irwiss> lmao https://www.reddit.com/r/funny/comments/toiggn/bro_thinks_hes_slick/
[20:18:48] <bomb> wonderful news https://phys.org/news/2022-03-scientists-microplastics-blood.html
[20:33:31] <lz_> "We have moved to CMake" fuck cmake
[20:34:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:34:44] *** Quits: bomb (~bomb@user/bomb) (Quit: â€Ž)
[20:36:09] *** Joins: bomb (~bomb@user/bomb)
[20:41:49] <MichaelLong> nah nah
[20:43:09] *** Quits: Guest8752 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02) (Quit: Client closed)
[20:43:28] <MatthiasVance> nah nah nah nah
[20:43:30] <MatthiasVance> 'nanana
[20:43:31] <MatthiasVance> na na
[20:43:38] <bomb> why would anyone choose cmake today when meson is available?
[20:43:51] <MatthiasVance> or FAKE
[20:46:42] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[20:47:50] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:48:59] <blezz> if I make a public api, how can I protect it? From spamming for example?
[20:49:29] <bomb> API key provision
[20:50:00] <bomb> if you don't want that, rate limiting might or might not help
[20:51:43] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Client Quit)
[20:52:03] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:52:33] <blezz> bomb but the service will be public, so no api keys?
[20:53:03] <irwiss> service can be public and still have api keys, like how 90% public services with rate limits or billing operate
[20:53:56] <blezz> for example I have a browser extension that calls my API, how is this key generated if the user has no profile?
[20:55:29] <blezz> do I need cloudflare for rate limiting or ddos protection
[20:56:09] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02)
[21:13:23] <irwiss> cloudflare has it's own ddos filters but that'd work for api with no auth
[21:18:53] <bomb> are you saint or something? just make devs create API keys, so you'll know who abuses your API
[21:20:26] <blezz> it's not targeted to devs
[21:20:47] <blezz> I'll use it only (or that's the idea)
[21:21:16] <MatthiasVance> blezz: Where are you hosting it?
[21:21:39] <blezz> MatthiasVance AWS or digitalocean. I was thinking digitalocean
[21:21:54] <MatthiasVance> You could look into Polly to have something in-process
[21:21:57] <bomb> ah it's for your own use?
[21:22:08] <bomb> https://contabo.com/en/vps/
[21:22:13] <MatthiasVance> And do it based on IP or whatever :)
[21:22:23] <MatthiasVance> If you're using AWS pretty sure they have an API gateway with this built in
[21:22:26] <bomb> yeah, you have a lot of option there
[21:22:38] <bomb> and it can be private, no need to go public
[21:23:16] <bomb> if it's not a browser extension like your example, you can even use binary protocols like gRPC or ZeroMQ
[21:24:44] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[21:25:04] <blezz> I guess, I'll just use digitalocean, node, express. With some rate-limiter which works with redis. And I'll force the users to create account in order to have a userid for each one
[21:25:47] <bomb> you're sending a lot of mixed messages
[21:25:58] <bomb> like Zelensky
[21:26:07] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:26:23] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:27:13] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[21:27:58] *** Joins: bomb (~bomb@user/bomb)
[21:29:54] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:33:01] <irwiss> blezz: userids won't help with a traffic based ddos btw, so you might as well place it behind cloudflare unless you have sensitive data
[21:37:15] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::23f5)
[21:39:14] <blezz> irwiss but digitalocean don't have traffic limit
[21:40:42] <bomb> Nginx does
[21:41:16] <bomb> HAProxy too
[21:41:32] <bomb> https://www.youtube.com/watch?v=3MmZul0Aj0E
[21:43:12] <smallville7123> how would i translate this for use with a LinkedList ?
[21:43:13] <smallville7123> https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/view/ViewGroup.java;l=2792?q=ViewGr
[21:43:38] <smallville7123> how would i translate this block of code for use with a LinkedList ?        *
[21:47:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[21:54:10] <bomb> carefully
[21:57:17] <irwiss> blezz: ddos is a denial of service, doesn't have much to do with traffic limit... also the providers who claim to have "no limit" are bullshitting you
[21:57:42] <irwiss> once you cross the invisible limit they'll boot you for whatever reason, also most of them including DO have somewhat of their own ddos filters
[21:57:50] <bomb> smallville7123 try #android-dev
[21:58:22] <irwiss> unless you have a superlong list and you need to insert smack dab in the middle most of the time don't even bother with linked lists
[22:00:16] *** Joins: exvicesindaco_ (~exvicio@host-82-54-188-22.retail.telecomitalia.it)
[22:01:04] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02) (Quit: Client closed)
[22:02:22] <blezz> irwiss I just did a rate limiter, won't that help about ddos-ing?
[22:02:57] <blezz> I return status 429 Too Many Requests without any data and I'll have my service autorebooting if it crashes
[22:03:48] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[22:03:53] *** exvicesindaco_ is now known as exvicesindaco
[22:07:25] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:07:48] <irwiss> blezz: rate limiter only works against mistakes by mostly-honest actors, ddos isn't a mistake(usually, it can be accidental but mostly not), it's an attack by some hostile that tries to overwhelm your server's resources so it can't serve legit users, so it doesn't care what you return
[22:13:35] *** Joins: Assault (~Assault@87-95-118-97.bb.dnainternet.fi)
[22:13:57] <blezz> irwiss so should I use cloudflare + mine rate limiter?
[22:16:32] <MatthiasVance> I try not to worry about those concerns on the application level
[22:16:49] <MatthiasVance> Only business concerns in the application that you have to manage, the rest as a service
[22:17:09] <blezz> not sure what you mean
[22:17:34] <BSaboia> Is there a more efficient way to do this? People are complaining that Dapper is causing this query to be slow, but I think that it can be optimized further (it was even worse when I started looking at it): https://dbfiddle.uk/?rdbms=postgres_11&fiddle=ce9b3640bf23204077e131fd79f57f17
[22:18:05] <blezz> MatthiasVance I write the service and the consumer
[22:18:29] <MatthiasVance> Yes but I mean rate limiting etc
[22:18:40] <BSaboia> The idea is to use the value of foo if there is any row, for a given other_table_id, in which foo > 0
[22:18:49] <BSaboia> https://dbfiddle.uk/?rdbms=postgres_11&fiddle=328fb0c0d696560889f97a4110b47127 perhaps this version is better to understand
[22:19:14] <Suchiman> smallville7123: yeah linked lists are not great, LinkedList<T> in C# where T is a reference type will cost you 5 * IntPtr.Size for each element added in memory vs. just 1 * IntPtr.Size for List<T> (for a 64bit process, that is 40 bytes vs. 8 bytes). Additionally you cannot access them by index but instead have to traverse them in O(n) time and they strain the GC as the GC has to walk this huge graph of objects in O(n) time as well. The only
[22:19:14] <Suchiman> advantage of Linked Lists is that you can remove and insert elements between any two elements in O(1) time.
[22:19:56] <BSaboia> Suchiman, isn't it O(1) only if you are removing the edges?
[22:20:04] <BSaboia> Otherwise you have to traverse it
[22:20:47] <Suchiman> BSaboia: well, inserting and removing is O(1), i carefully worded it as "between any two elements" assuming you did the O(n) walk first to get to the point where you want to do the insertion / removal xD
[22:21:06] <BSaboia> Ah, OK (:
[22:23:19] *** Quits: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se) (Ping timeout: 256 seconds)
[22:28:13] *** Joins: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se)
[22:32:59] *** Quits: edcba (~edcba@user/edcba) (Quit: bye)
[22:33:50] <irwiss> you also take a potential cache miss on every walk, so the theoretical O(n) of linked list is by far heavier than O(n) of array walk
[22:41:22] <Nasp> 3 political parties want to lower the speed limits due to the price increase of gasoline
[22:41:55] <bomb> JakeSays Ubuntu is deep into Flutter https://github.com/orgs/canonical/repositories?q=&type=all&language=dart&sort=
[22:45:53] <smallville7123> oof
[22:47:07] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02)
[22:47:39] <MichaelLong> Nasp, people cannot drive slower on their own? Price is probably still to low.
[22:55:09] <MatthiasVance> Nasp: They already lowered the speed limit here because of pollution
[22:55:22] *** Quits: _genuser_ (~Guest53@user/genuser/x-7507041) (Quit: Connection closed)
[22:55:47] <MatthiasVance> Nasp: What is the speed limit now and what do they want to lower it to?
[22:56:02] <MichaelLong> here they wanted to restrict the speed to improve the range of electric cars. that was seriously discussed at one time.
[22:57:25] <Suchiman> MichaelLong: legally enforced hypermiling, nice, lol
[22:59:53] <Suchiman> MichaelLong: but hey, driving your eletric car at around only 40kph will double your range ;)
[23:00:33] <MichaelLong> yeah great isn't it. what the discussion was more about the autobahn restriction
[23:02:25] <MichaelLong> I mean most of the automaker already restrict themselves to rediculous slow speeds with their electric cars
[23:06:20] *** Quits: exvicesindaco (~exvicio@host-82-54-188-22.retail.telecomitalia.it) (Remote host closed the connection)
[23:19:28] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[23:32:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[23:37:52] <bomb> https://www.tomshardware.com/news/nvidia-unveils-144-core-grace-cpu-superchip-claims-arm-chip-15x-faster-than-amds-epyc-rome
[23:37:55] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:39:02] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:42:39] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[23:44:57] <sysRPL> i found an old movie i made in the 1980s -> https://cache.codebot.org/videos/tiger-hunt.mp4
[23:45:11] <bomb> I'm vegan, I can't watch it
[23:51:41] <Lizard_> "I'll just setup a quick WIFI proxy server on Linux" I will be simple I said
[23:51:49] * Lizard_ forgot how much of a pita wifi on linux was
[23:52:44] <Lizard_> works great as an AP tho, windows is even more retarded you need terminal server license for each ICS connection, so by default 2 only
[23:53:20] <lz_> bomb: if you're vegan then I'm part of qanon
[23:53:42] <bomb> what's so surprising about it?
[23:53:44] <Lizard_> and I do not even want "ICS" or routing between the interface, it's an application level proxy
[23:54:42] *** Joins: edcba (~edcba@user/edcba)
