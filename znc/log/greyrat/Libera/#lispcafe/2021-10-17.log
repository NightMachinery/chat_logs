[00:00:04] <selwyn> well, for example, though i have very little experience with ps
[00:00:51] <gilberth> The common API like begin-path, move-to, line-to, ... end-path, stroke is PostScript.
[00:01:05] <selwyn> ok
[00:03:36] <gilberth> The graphics APIs with BASIC, CP/M-80, Turbo Pascal, X11 are more like CLIM, where you just say draw-line. PostScript won.
[00:47:26] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[00:48:01] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[00:49:33] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[01:13:39] <pl> FSVO "won". Even OSX uses PDF model these days 
[01:24:16] *** Quits: dra (~dra@2a04:4540:641a:ef00:f09a:5895:b098:1e62) (Remote host closed the connection)
[01:29:25] <kakuhen> i haet pdf
[01:29:30] <kakuhen> we should return to postscript
[01:36:39] <Qwnavery> "hey you, yes you. you wanna execute this remote javascript embedded in that pdf document you're looking at?"
[01:42:02] *** Quits: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net) (Remote host closed the connection)
[01:49:01] <selwyn> i had to spend a whole day debugging a pdf
[01:49:14] <selwyn> terrible
[01:51:55] <hayley> Apparently some people think that you simply can't share memory ever without locks, and the computer explodes or smth.
[02:06:57] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:08:12] <gilberth> kakuhen: In which way is PostScript better than PDF?
[02:08:37] <kakuhen> no embeddable javascript of flash, or any that i know of
[02:08:41] <kakuhen> javascript or flash*
[02:09:03] <gilberth> pl: OSX is based on NEXTStep, which used Display PostScript.
[02:09:20] <kakuhen> also kinda curious how pdf is supposed to be a bit unmodifiable for sake of reproducibility across different printers
[02:09:21] <kakuhen> yet....
[02:09:33] <kakuhen> there is some vaguely defined PDF/A standard in order to have something good for archival purposes
[02:09:39] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:09:56] <gilberth> kakuhen: Then you should have said, you don't want embedded javascript or flash, not PDF per se.
[02:09:58] <kakuhen> I dont know if I'd call postscript "better" than pdf, but it's definitely simpler.
[02:10:05] <kakuhen> and that's what I like
[02:10:27] <kakuhen> i feel like pdf is overkill for a lot of documents, especially if you dont make use of things like transparency
[02:10:33] <kakuhen> so for instance, every paper I've ever typeset.
[02:10:54] <gilberth> Simpler? With a whole Turing complete language on board?
[02:11:40] <kakuhen> sure, you can view it that way, but i like to view it in terms of "what is necessary to implement in order to be fully compliant with specs"
[02:11:44] <gilberth> Fonts defined in many ad hoc ways, no page structure at all, no alpha channel? No, thanks, I prefer PDF.
[02:11:46] * hayley uploaded an image: (217KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pqPdsrbBCFxTEzgofPRRMiJB/evil-cliff-click.jpg >
[02:12:44] <gilberth> kakuhen: Sure, be compliant to the spec, won't give you a useful PS viewer then.
[02:13:23] <kakuhen> Qwnavery: the reason javascript is embeddable in PDFs is probably because DRM was an afterthought for Adobe
[02:13:33] <kakuhen> or at least that's the one and only legitimate use case for javascript in a pdf
[02:13:43] <kakuhen> everything else is either playing breakout with the google chrome pdf viewer or exploiting something
[02:13:53] <gilberth> And the graphics model is the same, and you want to raster fonts with both formats. So you don't save much.
[02:14:48] <Qwnavery> I like epub.
[02:15:21] <hayley> Well, I can't compile C to PDF.
[02:16:50] <copec> orrrr can you????
[02:19:38] <gilberth> Is JavaScript even mandated by the PDF spec?
[02:22:28] <pjb> There's a C to postscript compiler around there…
[02:22:49] <pjb> https://news.ycombinator.com/item?id=12668668
[02:22:50] -ixelp- PDB – ANSI-C to PostScript compiler (1993) | Hacker News
[02:26:14] <hayley> pjb: C -> WASM -> PS
[02:27:14] <pjb> IIRC, somebody ported Doom to Postscript.
[02:28:24] <pjb> or perhaps not.
[02:28:29] <pjb> Somebody should.
[02:29:33] <gilberth> Is the Display PostScript patent still in force?
[02:32:35] <kakuhen> probably not
[02:32:45] <gilberth> Good.
[02:32:57] <kakuhen> when was the patent filed? at least in the US, assuming it was filed around the 90s, it should have already expired or be expiring very soon
[02:33:16] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[02:34:25] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[02:48:50] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[02:51:23] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[02:54:21] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[03:05:11] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[03:08:50] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[03:19:56] *** Quits: random-nick (~random-ni@87.116.165.220) (Quit: quit)
[03:20:55] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 265 seconds)
[03:36:23] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Ping timeout: 264 seconds)
[03:37:21] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 265 seconds)
[03:39:08] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[03:49:35] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[03:49:48] *** Joins: christophergray (~christoph@190.148.52.216)
[03:50:07] *** Joins: rogersm (~rogersm@90.166.177.48)
[03:55:50] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[04:16:40] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[04:17:17] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[04:24:25] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[04:25:24] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[04:46:22] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[04:49:30] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[04:54:40] * Qwnavery dips his gingernut biscuit in water.
[04:58:02] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net)
[05:03:28] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:04:39] * hayley runs a poll to see if people want BMH for substrings or a DFA interpreter.
[05:05:17] <hayley> So far people only seem to want faster runtime. But I guess substring search kills off more states and avoids grep[]...
[05:06:43] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:08:17] <gilberth> We you need to search for substrings use an index.
[05:12:16] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[05:14:08] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[05:22:12] *** Quits: christophergray (~christoph@190.148.52.216) (Quit: WeeChat 3.3)
[05:36:59] <hayley> I assume the client is too cheap for indexes.
[05:37:13] <hayley> Else, they could specialize the compiler to look up their index for substrings.
[05:46:38] <mfiano> Morning
[05:46:53] <hayley> Hey mfiano
[05:48:17] <mfiano> Mondenkind: I found something else I don't like
[05:48:20] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 265 seconds)
[05:48:31] <mfiano> This one is purely syntactical though
[05:50:15] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:50:46] <mfiano> "class Z is A is B is C does D does E does F {}" is lame. Why not use commas like the rest of the syntax? This reads like B is associated with A and C is associated with B...and it's very verbose for a language that tries hard not to be.
[05:55:27] <mfiano> For the on-lookers, "is foo" means inherit from foo. Rather than a list for multiple inheritance, you repeat pairs of "is x" "does" is the same but for mixins.
[05:59:56] *** Quits: APic (apic@apic.name) (Ping timeout: 265 seconds)
[06:00:05] <hayley> Taking the constant a off (a|ab|aba)^3 takes compilation time down from 90ms to 65ms. I haven't tested removing the GREP still...it probably makes things way faster.
[06:02:27] <hayley> Yeah, removing the GREP takes it down to 35ms.
[06:12:32] *** Joins: APic (apic@apic.name)
[06:13:53] <hayley> Huh, Netfarm turned three two days ago.
[06:19:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[06:32:11] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 264 seconds)
[06:32:40] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[07:04:19] * hayley uploaded an image: (644KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/WMpPHJUjAtcDeStSHHiMkzxf/evil-robert-strandh.jpg >
[07:06:16] <hayley> https://mail.python.org/archives/list/python-dev@python.org/thread/ABR2L6BENNA6UPSPKV474HCS4LWT26GY/
[07:14:32] <hayley> "What a surprise! Multiple cores work if your runtime does not block them."
[07:19:31] * Mondenkind still wonders who thought the gil was a good idea
[07:19:39] <Mondenkind> like, wouldn't it be easier to just...not offer threading at all?
[07:20:19] *** Quits: robin (~robin@user/terpri) (Ping timeout: 265 seconds)
[07:25:14] *** Joins: robin (~robin@user/terpri)
[07:26:21] <hayley> The suggestions to use multiprocessing from some are just hilarious.
[07:27:18] * hayley resists the urge to grab quotes to mock await-as-synchronisation-primitive people
[07:31:25] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:32:55] <hayley> portability.cl doesn't mention that SICL is supported by closer-mop now.
[07:34:16] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[07:36:21] *** Quits: robin (~robin@user/terpri) (Ping timeout: 245 seconds)
[07:36:33] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[07:39:54] <kakuhen> send an update to the maintainer perhaps
[07:40:52] <hayley> I would, but it is probably pointless.
[07:41:10] <hayley> "We don't even have a working image" "yeah but closer-mop has #+sicl"
[07:41:12] <Mondenkind> I mean, no one is looking at this list to decide whether to use sicl for a production project
[07:41:22] <Mondenkind> and by the time sicl is so usable, it will support plenty of other features too
[07:41:55] * hayley uploaded an image: (55KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BUhAcpHoiAFJFmcjXdsKfOnC/Screenshot_2021-10-16_22-14-46.png >
[07:41:57] <hayley> Lamport on C++
[07:42:26] <Mondenkind> hehe
[07:42:36] *** Quits: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354) (Ping timeout: 245 seconds)
[07:43:08] <kakuhen> also trivial-cltl2 claims CCL has 0 compatibility, but I have it imported just fine in CCL right now
[07:43:30] <kakuhen> it's also not clear what the percentages in portability.cl mean, or the asterisks
[07:43:44] <hayley> "Some readers may need reminding that numbers are not strings of bits, and 2^33 * 2^33 equals 2^66, not *overflow error*."
[07:43:49] <kakuhen> is it measuring what percentage of files compiled before an error appears? or?
[07:44:05] <hayley> I think it's not really measuring anything.
[07:45:01] *** Joins: semz (~none@user/semz)
[07:49:24] <kakuhen> it'd probably be better to use three tiers: no support, limited support, and full support; "limited support" is equally ambiguous as a non-zero percentage below 100, but it doesn't pretend to measure how much is actually supported
[07:49:40] <kakuhen> but that's probably not changing; too much to rewrite each entry, and im certainly not going to send a PR that does this.
[07:56:32] *** Joins: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354)
[08:02:47] *** Joins: robin (~robin@user/terpri)
[08:13:03] <kakuhen> decided to look at libao source for fun
[08:13:16] <kakuhen> is it just a C thing to never check for errors, even when calling tons of functions that can signal errors
[08:13:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:13:50] <dave0> maw
[08:14:09] <kakuhen> so for instance, close() can fail for at least three different reasons
[08:14:20] <kakuhen> and ao_plugin_close() will invoke this, yet always report a success
[08:14:31] <hayley> Job security?
[08:14:38] <kakuhen> so even if close() failed when ao_plugin_close() was invoked; it'll appear as if it succeeded to the programmer using libao
[08:17:11] *** Quits: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354) (Ping timeout: 264 seconds)
[08:17:44] <kakuhen> OK I was giving the xiph guys a break and thinking "well, maybe the manpage says to check errno rather than the return value of ao_plugin_close"
[08:17:45] <kakuhen> NOPE
[08:18:05] <kakuhen> It says the function will return 1 on success and 0 on failure, but the ALSA, OSS, Sun, and Core Audio plugins all constantly return 1
[08:18:30] <kakuhen> in other words, the function is fucked for 99% of linux users and 100% of mac users
[08:19:30] <kakuhen> well, at least it does the right thing for sndio :)
[08:19:41] <kakuhen> Usually the OpenBSD related stuff ends up doing the right thing, doesn't it :3c
[08:20:44] <dave0> there's not much you can do when a "release" something function fails
[08:21:51] <kakuhen> dunno, even Core Audio itself makes tons of these release functions typed with OSStatus
[08:22:18] <kakuhen> then you can make a dummy function that checks if OSStatus gives an error, then you can do whatever you want with that error
[08:22:24] <kakuhen> so im surprised ao doesn't make use of this
[08:22:38] <kakuhen> I suppose a similar situation holds for ALSA (maybe not OSS and Sun I guess)
[08:23:21] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:23:50] <kakuhen> regarding the dummy function: what I really mean is check the value of the OSStatus; anything that is not noErr (= 0) will be a pretty concise description of what exactly went wrong.
[08:24:34] <hayley> https://www.youtube.com/watch?v=3kdefBY9-PU
[08:24:35] -ixelp- Replicas (Remastered) - YouTube
[08:29:42] <gilberth> Well, CPL^WB^WC as designed to be trivial to compile and on the assumption that the programmer knows what he is doing. So what do you expect?
[08:30:56] *** Joins: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354)
[08:31:01] <dave0> maybe the programmer knows what he's doing, but as a human we make mistakes :-(
[08:31:31] <dave0> and CPL^WB^WC doesn't tell us when we do
[08:31:40] <dave0> bad human?
[08:31:51] <dave0> bad language!
[08:32:28] <gilberth> Well, C is just tedious to use, and in case of an error, all evidence is covered, so that everybody could look innocent. At first.
[08:34:21] <dave0> gilberth: c seems easy at first but then not
[08:36:11] <gilberth> And overflows are just not detected, because a programmer who knows what he does(TM), doesn't write one. As well as "integer" overflows, a programmer who knows what he is doing, doesn't have any. And manual memory management is better than any GC, because the programmer knows way better than the machine, when object cannot be referenced again. The consequences are well known. Sad state of the industry, really.
[08:36:53] <gilberth> dave0: Compiling C is easy, that's the point. The language is not easy to use in a safe and robust way.
[08:37:19] <dave0> gilberth: i heard good things about rust
[08:37:45] <gilberth> Really? Does it have a GC yet? Have I missed something?
[08:37:59] <dave0> no idea :-)
[08:38:32] <gilberth> Don't get our lady started.
[08:38:34] <hayley> dave0: Does Rust handle integer overflows in release mode?
[08:38:52] <gilberth> Speaking of the devil, there she is.
[08:38:52] <hayley> Does it detect anything more than the most bland kinds of "data races"?
[08:39:03] <dave0> ut oh
[08:40:14] <dave0> hayley: i liked your story on collecting garbage once a year!
[08:40:34] <gilberth> Speaking of which, I really want to brush up this CADR simulator, just to show, that even in '78 we were more advanced than today.
[08:41:12] <gilberth> dave0: The one hayley posted? Renting the extra disks need for a two space collector?
[08:41:17] * hayley tries to escape TeX mode in jupyter Markdown with a backslash before the dollar symbol.
[08:41:23] <hayley> Doesn't work. Who wrote this shit?
[08:42:01] <hayley> Eh, TWO backslashes? What the fuck?
[08:42:05] <dave0> gilberth: yep it said disks are so big you just wait until you fill up the disk, then collect garbage
[08:42:18] <dave0> but cos disks are so big it takes a year to fill them
[08:42:30] <gilberth> hayley: Add more slashes until you arrive at that level, which cares.
[08:42:56] <hayley> Also, -$1,500 or $-1,500?
[08:43:12] <gilberth> dave0: Locality? No, I want my memory compacted all the time. But the machine could do more work while I sleep.
[08:43:56] <Mondenkind> have I mentioned my 2^n backslash shenanigans?
[08:44:02] * hayley also still plays the game of "how many references can you stuff into the paper".
[08:44:10] <hayley> "We need two bits for three states (Shannon, 1948)."
[08:44:43] <dave0> shannon is very famous
[08:44:50] <dave0> claude i think his name is
[08:45:02] <hayley> Can't be that famous if you only think that.
[08:45:29] <dave0> more famous than me :-(
[08:45:44] <gilberth> Look at page 8: <http://bitsavers.org/pdf/symbolics/software/genera_8/Symbolics_Common_Lisp_Dictionary.pdf>
[08:46:09] <Mondenkind> :D
[08:47:29] <gilberth> Type that without completion!
[08:50:38] <hayley> "In case you think you already know how a CPU works and don't need to watch this, you don't actually know how a CPU works and you do need to watch this." Fite me
[08:51:22] <hayley> Just sit in #sicl for 5 minutes on a good day and you will learn everything about CPUs
[08:52:37] <kakuhen> gilberth: i guess this reminds me of some guy who claims to love C a lot, yet not produce anything with it
[08:52:49] <kakuhen> he told me the ideal compiler should be "as dumb as possible," whatever that means
[08:53:08] <hayley> Okay, so no liveness, no copy propagation...
[08:53:14] <kakuhen> and he also seriously believed C mapped closely to how computers work all the way down
[08:53:17] <hayley> No vectorisation, no dead code elimination...
[08:53:38] <kakuhen> but it's ok, in #math on libera I met a guy who wanted to use C++ to teach high school algebra
[08:53:47] <kakuhen> my first reaction: "jesus christ at least use a language with a proper numeric tower"
[08:53:53] <gilberth> kakuhen: Does he use a PDP-11?
[08:54:02] <gilberth> With pcc?
[08:54:09] <hayley> It is a day ending in -y, time to put https://www.youtube.com/watch?v=PcsumKaIXEs on the jukebox
[08:54:10] -ixelp- Gary Numan (London 1981) [07]. The Aircrash Bureau - YouTube
[08:54:18] <kakuhen> gilberth: probably not
[08:54:35] <kakuhen> and the guy i met on #math made outlandish claims like that too
[08:55:06] <kakuhen> I proceeded to tell him, "not even assembly accurately represents what's going on inside a modern processor"
[08:55:11] <kakuhen> goal posts then shfited to something lie
[08:55:16] <kakuhen> shifted to something like*
[08:55:23] <kakuhen> "Oh, well C++ is the highest level language that is close to the machine"
[08:55:32] <kakuhen> and because of that you should do symbolic computation with it
[08:55:35] <kakuhen> wonderful.
[08:55:41] <hayley> Pfft. Come back with LOGCOUNT
[08:55:50] <hayley> Oh, they have std::popcount. Well, C doesn't.
[08:55:58] <kakuhen> The language that has no native support for rationals, has a retarded type system, and will make simple things like parsing a basic math equation a bitch
[08:56:06] <kakuhen> Oh b-but it's closer to bare metal than lisp!!! Parentheses and GC bad !!
[08:56:12] <hayley> Then again, std::popcount and other bit fiddly things are only C++20.
[08:56:31] <kakuhen> in either case, his idea was absurd from the beginning
[08:56:42] <kakuhen> He also told me something like
[08:56:44] <gilberth> kakuhen: Perhaps they also believe that while (n--) *(d++) = *(s++); is faster than for (i = 0; i < n; i++) d[i] = s[i];
[08:56:54] <kakuhen> "If a student gave me a recursive function, I would give him an F and tell him to do better next time. Recursion should never be used"
[08:57:10] <kakuhen> Like ok genius what do you do when you have to solve a recurrence relation in combinatorics then
[08:57:19] <hayley> A mathematician with no recursion? Maybe they want set comprehensions.
[08:57:22] <kakuhen> Do you magicaly convert the equation to soething not recursive?
[08:57:25] <kakuhen> something*
[08:57:29] <gilberth> Heh? C has recursion unlike FORTRAN.
[08:57:56] <kakuhen> I even asked him "why not use FORTRAN or a language that makes expressing math convenient?"
[08:58:03] <kakuhen> I forgot his excuse, but I can always check IRC logs
[08:58:26] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[08:58:32] <kakuhen> You see, on the dark corners of the internet, there's a joke about "C-niles," and I didn't expect them to be real, breathing people.
[08:58:43] <kakuhen> Maybe my conversation on ##math a few weeks ago was actually a GPT-3 bot. Idk
[08:59:02] <gilberth> This is funny because series in mathematics are often specified in a recursive fashion. Also: No proofs by induction?
[08:59:17] <kakuhen> I brought up those points too
[08:59:26] <kakuhen> He proceeded to say something like "well, do you have a practical example of that?"
[08:59:29] <hayley> What, do you think we founded the aircrash bureau for no reason?
[08:59:35] <kakuhen> I was almost splitting hairs
[09:00:03] <kakuhen> fuckign day 1 of combinatorics will show you pascal's identity, among other things that are recursive
[09:00:30] <gilberth> kakuhen: Well, I hope you at least enjoyed your time over there.
[09:00:30] * hayley looks up famous proofs by induction
[09:00:37] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[09:00:55] <Mondenkind> the primes one is classic
[09:01:03] <kakuhen> gilberth: honestly, he was kinda fun to debate with
[09:01:03] <hayley> Yeah, primes come up.
[09:01:16] <kakuhen> but my gosh I can't believe what some programmers out there think about math education
[09:01:40] <gilberth> Primes? I only know the iterative proof that all odd numbers are prime.
[09:01:52] <kakuhen> yes, let's make algebra  simpler to understand for programmers by applying our ad hoc rules about code conventions and using an ill-suited language that can't even represent arbitrarily large integers out-of-the-box
[09:02:20] <kakuhen> oh that reminds me
[09:02:30] <kakuhen> for some reason he said "good code never has more than two lines of indentation"
[09:03:02] <gilberth> Then he would enjoy BASIC, it has no indentation.
[09:03:18] <kakuhen> b-but it's not close to bare metal like C++ is :))
[09:03:25] <Mondenkind> gilberth: suppose there were only n prime numbers.  Then P0*P1*...*Pn + 1 would be prime, and so there would in fact be n+1 prime numbers.  Therefore there are infintely many prime numbers
[09:03:48] <gilberth> kakuhen: Assembler also has no indentation. So I could offer that.
[09:04:08] <kakuhen> you see, i NEED my std::__1::hell<std::yeah::buddy<std::__1::deeply::nested::horrors, std::__1::at::least::theres::no::gc::amirite>>
[09:04:57] <hayley> https://www.youtube.com/watch?v=FTuVB5-19FE
[09:04:57] -ixelp- Crash - YouTube
[09:05:35] <gilberth> Mondenkind: I have vague memories. Sounds familiar.
[09:05:52] <kakuhen> yeah, that's a famous proof for the fact there are infinitely many primes
[09:06:12] <kakuhen> it's often misattributed to Euclid
[09:06:15] <gilberth> kakuhen: And no parenthesis either.
[09:06:24] <kakuhen> but Euclid's proof was slightly different from that one
[09:07:16] <kakuhen> So the popular form is what Mondenkind posted -- it uses a proof by contradiction
[09:08:25] <kakuhen> and euclid wrote his slightly differently; it didn't originally assume "we have n primes p_1,...,p_n"
[09:09:29] <kakuhen> but eh, (mis)attributions are frequent in math and there's always a huge historical debate behind "who founded X first?"
[09:09:53] <kakuhen> even with broad consensus, someone will dig up artifacts 20 years later that completely change the way historians view these events
[09:10:02] <kakuhen> ito integrals come into mind; ive mentioned them before
[09:10:23] <hayley> .oO(Can't they afford underscores in df.make.isin(some_set).astype(int)?)
[09:10:38] <kakuhen> Wolfgang Doeblin had much of the same results as Ito Kiyoshi did, except he hid all of them somewhere and during WWII he was executed for being Jewish
[09:10:51] <kakuhen> And these documents werent uncovered until decades after Ito's work was published and became famous
[09:11:58] <kakuhen> To give more perspective: Ito's landmark paper was published ca 1945; Doeblin's work (which was done before 1940), wasn't uncovered until 2000.
[09:16:44] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[09:19:10] <gilberth> I shouldn't play with the CADR, bugs haunt me. This SW isn't very good. I just had a blinking cursor at the modeline of ZWEI and a steady cursor in the buffer, while I could type fine.
[09:21:06] <gilberth> But then, perhaps the machines were slow, the code is full of micro-management of state, instead of going through a cycle modify internal state, update what is needed, rinse and repeat.
[09:29:03] <Mondenkind> https://pbs.twimg.com/media/EzQ5i68UYAknlbU.jpg
[09:46:00] <hayley> It seems I've written my statistics report completely backwards: I start with a small model, then keep adding features and comparing them, and then come to a conclusion. Whereas the template assumes you start with the largest model, then prune.
[09:46:22] <hayley> But, in my defense, the pruning technique the lecturers suggested to us wouldn't work: nothing has a high enough P-value that I can prune it. Fun.
[09:47:44] *** Joins: kakuhen_ (~kakuhen@user/kakuhen)
[09:48:20] *** Joins: kakuhen__ (~kakuhen@user/kakuhen)
[09:51:23] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 264 seconds)
[09:52:35] *** Quits: kakuhen_ (~kakuhen@user/kakuhen) (Ping timeout: 264 seconds)
[10:00:40] *** kakuhen__ is now known as kakuhen
[10:03:52] <hayley> It's sorta funny that the paper in #commonlisp tells you to act as if the military application were just a video game, given knowledge of https://half-life.fandom.com/wiki/Manhack_Arcade 
[10:03:53] -ixelp- Manhack Arcade | Half-Life Wiki | Fandom
[10:08:45] <pl> gilberth: Display Postscript got kicked out before OSX got named OSX, I think last DPS release was Rhapsody 
[10:10:58] <gilberth> pl: Are you sure? You still find function entry points named DPS...
[10:11:43] <pl> gilberth: Apple was pretty explicit about it back around 2001
[10:12:11] <pl> And unconfirmed reason for it might have been postscript license costs 
[10:12:28] <gilberth> Ah. ok.
[10:14:39] <kakuhen> Yeah, the first (or second?) release of OS X Server was already boasting Quartz and its PDF-based glory
[10:15:21] <kakuhen> The consensus is that Apple ditched DPS precisely because the high licensing costs and virtually no benefit.
[10:15:39] <gilberth> This would imply that the graphics API itself is not patented. Good.
[10:15:40] <pl> The function names might remain for backwards compat - at the time Apple still cared about that and was getting the small Next Step market onto mac 
[10:16:28] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[10:16:43] <kakuhen> patenting APIs seems a bit tough
[10:16:52] <kakuhen> or at least the outcome of Oracle vs Google makes me believe so.
[10:18:17] <kakuhen> and yeah, I think pl is right here; in some rare instances you can still see the NX prefix being used in some Apple internal functions
[10:18:58] <gilberth> Now then, what is DPS more than an API?
[10:19:08] <pl> Also, DPS was blamed for some of the failure of "portable YellowBox" idea 
[10:19:34] <pl> gilberth: it's not just an API but quite concrete executive stack 
[10:20:20] <pl> (and the name itself is copyrighted and there were uncertainties about reimplementijg it free, probably patents) 
[10:30:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[10:31:31] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:33:16] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[10:35:06] <hayley> Quick show of hands: who wants SIMD/BMH string search first, and who wants a DFA interpreter (which should be faster than cl-ppcre still) first?
[10:39:00] <Mondenkind> simd is sexier
[10:40:51] <hayley> Guess I also have to think about $ and ^ some time. The one at the start is easy: just search from the start of buffer, or from a newline. The one at the end is also doable, but I need to think about it.
[10:43:12] *** Joins: selwyn_ (~selwyn@user/selwyn)
[10:48:31] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[11:02:22] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[11:04:05] <selwyn> manhack arcade lol
[11:04:32] <selwyn> no-one would think to ask 'why have the combine given us computer games to play'?
[11:04:40] <mfiano> BMH?
[11:04:50] <hayley> selwyn: I got the blast furnace from the guy on craigslist in minecraft and now I have too much iron
[11:04:52] <hayley> what do I do
[11:05:00] <hayley> mfiano: Boyer-Moore-Horspool, a string searching algorithm
[11:05:49] <mfiano> If that isn't a tongue-twister...
[11:06:43] <mfiano> DFA interpreter for sure since it is implementation independent
[11:15:22] <dave0> hayley: you could mix your iron with carbon and make steel !
[11:15:44] <hayley> No steel in Minecraft, sadly. But then what would I do with the steel?
[11:16:09] <hayley> BMH is also implementation independent, hence why I did it first. Guess I should do that then.
[11:18:51] <selwyn> hayley: no such thing as too much iron
[11:18:56] <selwyn> increase pig iron production
[11:19:12] <hayley> 4 stacks?
[11:20:50] * hayley watches someone use FORMAT to generate HTML (but in Java of course)
[11:21:01] <hayley> So people really do lap up the bad advice.
[11:36:03] * Mondenkind writes an LD_PRELOADed so to interpose the x keyreading functions because some app doesn't support key rebinding
[11:36:05] <Mondenkind> so dumb
[11:36:12] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:21] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[11:39:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:01] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:56:28] <easye> Ah.  It has moved to <https://orgmode.org/manual/Structure-Templates.html> as a more general solution.  Nice.
[11:56:37] <easye> Pays to read the Fine Info sometimes...
[12:08:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:12:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[12:16:07] <hayley> https://twitter.com/RealYouTubeKids/status/1449144149568106497
[12:19:30] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:20:18] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[12:24:44] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[12:33:09] <mfiano> Anyone know how the symmetric difference works in set theory?
[12:33:45] <hayley> Looks like XOR.
[12:33:47] <mfiano> 1..5 SD (3..7) => (1 2 6 7)
[12:33:53] <mfiano> No idea how that is derived
[12:34:06] <mfiano> err (1..5) on the left
[12:34:54] <hayley> Alternately, a SD b = (a \ b) union (b \ a)
[12:35:54] <mfiano> what is \
[12:37:40] <mfiano> oh difference
[12:37:44] <pjb> https://www.math-only-math.com/symmetric-difference-using-Venn-diagram.html
[12:39:19] <mfiano> Got it
[12:39:30] <pjb> Notice the difference between ∖ and \
[12:40:05] <pjb> a △ b = (a ∖ b) union (b ∖ a)
[12:40:27] <pjb> a △ b = (a ∖ b) ∪ (b ∖ a) ; even.
[12:42:31] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:42:42] <mfiano> Weird how they use delta
[12:43:29] <Mondenkind> delta = difference, but symmetric? idk
[12:43:37] <mfiano> Usually its ⊖
[12:44:45] <mfiano> Ah wikipedia says both are common
[12:44:53] <mfiano> TIL
[12:47:15] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:47:41] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:48:30] <mfiano> Ok so I understand it as (set-difference (union a b) (intersection a b)) OR (union (set-difference a b) (set-difference b a))
[12:49:11] <hayley> Yes, UNION is to OR as SD is to XOR.
[12:49:15] <mfiano> I've used the former a lot just never knew it had an operator
[12:49:25] <mfiano> Just always called it "the union without the intersection"
[12:53:51] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 245 seconds)
[12:57:11] <mfiano> "What can be finished in 5 years in Language X can be finished in 3 months in Language Y" -- I wonder if IRC, Reddit, and social media distractions were a thing when that paper was written.
[12:57:19] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[12:57:38] <hayley> Well, just add some constant factor to both.
[12:58:04] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[12:58:12] * mfiano has been learning about X with a 45 minute YT video for 3 hours
[12:58:16] <hayley> Though you can use social media as fuel for spite-driven development, which makes working in both faster.
[12:58:44] <hayley> Hey, a website https://www.spitedrivendevelopment.com/
[13:00:12] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:00:32] <pjb> In term of performance, I think that (union (set-difference a b) (set-difference b a)) might be better than  (set-difference (union a b) (intersection a b)).
[13:00:38] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:00:43] * hayley thinks about connecting hoppers to the composter and calling it a GC.
[13:00:46] <pjb> Since the cost of symetric-difference and of intersection should be the same.
[13:04:00] * hayley uploaded an image: (1289KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/iuLMuvCbxcXOjFlJnYBmqyKd/2021-10-17_20.40.45.png >
[13:17:11] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:17:35] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:20:49] <mfiano> Hmm, the roll method seems to be incredibly uniform in distribution
[13:22:09] <mfiano> histogram of occurences of choosing a letter 1 million times https://gist.github.com/mfiano/4473fe1ac3051146bb1094230b73597d
[13:22:09] -ixelp- gist:4473fe1ac3051146bb1094230b73597d · GitHub
[13:23:16] <dave0> oh i thought you asked 1,000,000 people to pick a letter lol
[13:24:27] <mfiano> edited with 10 million under that
[13:24:41] * mfiano was expecting more random
[13:47:47] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:48:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[14:17:43] <ck_> so, 'e' voted most popular letter. Just like the typesetters observed and predicted
[14:21:12] <mfiano> :)
[14:22:01] *** Joins: random-nick (~random-ni@87.116.183.117)
[14:41:18] *** Joins: rusua (uid124537@id-124537.uxbridge.irccloud.com)
[14:58:42] <mfiano> Mondenkind: https://raku-advent.blog/2020/12/22/draft-whats-the-point-of-point-free-programming/
[15:24:22] <dave0> nite all
[15:25:10] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:37:56] *** Joins: selwyn_ (~selwyn@user/selwyn)
[15:38:09] *** Quits: selwyn_ (~selwyn@user/selwyn) (Remote host closed the connection)
[15:48:53] <selwyn> delta is definitely not a square
[15:48:56] <selwyn> right hayley?
[15:49:15] <selwyn> suspect this is again down to scientists/mathematicians not learning greek properly
[16:01:39] <hayley> selwyn: Right.
[16:03:56] <selwyn> we need mandatory greek orthodox sunday school for everyone
[16:04:18] * hayley did Greek school on Wednesday afternoons
[16:05:56] <selwyn> was it worth it?
[16:07:05] <selwyn> i know someone who only spoke greek as a kid, forgot it by age 10 and had to go to greek school every weekend to learn it again
[16:08:24] <hayley> I guess?
[16:10:52] <selwyn> relearning a language at school must suck
[16:23:48] <hayley> https://www.youtube.com/watch?v=nDXHtFw6Gm8
[16:23:48] -ixelp- Bela Lugosi Is Dead (Live @ Hammersmith Palais, London) - YouTube
[16:46:17] * hayley uploaded an image: (260KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ullBtWfwfavgxWHbkVecuaBE/alan-kay-on-dweb.jpeg >
[17:00:06] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Ping timeout: 245 seconds)
[17:06:06] <mfiano> Raku is such an amazing language. After learning all the features this week I decided I'm going to start writing scripts and maybe more with it.
[17:06:51] <Gnuxie> Lol
[17:07:16] <Gnuxie> Stark contrast to the start if the week :) 
[17:07:26] <selwyn> return to perl
[17:07:28] <mfiano> Hmm?
[17:09:24] <mfiano> I am not going to argue about the semantics of the suffix 'end' in weekend, if that's what you're after.
[17:09:49] <mfiano> and no thanks, I learned Perl 20 years ago and didn't like it then or anytime thereafter.
[17:10:58] <Gnuxie> No I meant at the beginning of the week you seemed really unimpressed with that guy shilling Raku
[17:11:15] <mfiano> Which guy?
[17:12:28] <Gnuxie> In the blogposts we discussed in #sicl
[17:13:37] <mfiano> Oh. I was unimpressed with writing Raku like Lisp, just as that guy was himself. Raku's strength is expressivity, not conforming to one style like that.
[17:15:37] <Gnuxie> Ahh ok
[17:16:23] <mfiano> What that article doesn't mention is how similar Raku is to Common Lisp, syntax aside.
[17:17:11] <mfiano> Such as Raku having a Meta Object Protocol, and it having generic functions that let you write the dispatching predicate yourself (instead of just class name or EQL)
[17:17:29] <mfiano> It also has special variables and a lot of other features originating in Lisp
[17:19:37] <mfiano> But I'm replacing Julia as my scripting language for now, and maybe some smaller projects I would normally write in CL later. I am by no means abandoning interactive programming with CL though :)
[17:26:13] <selwyn> does that mean raku as a more powerful mop than cl?
[17:26:19] <selwyn> *has
[17:26:35] <mfiano> I don't even know how you implied that
[17:27:18] <selwyn> can you write a dispatching predicate in common lisp?
[17:28:08] <selwyn> oh you can write a method combination yourself
[17:28:34] <selwyn> didn't know that
[17:28:34] <mfiano> You can, with a lot of MOPery; see for example, filtered-functions by Pascal Constanza.
[17:28:46] <mfiano> It is slow though, as it has to use a hash table.
[17:30:22] <selwyn> will beach's fast generic dispatch help with that?
[17:30:51] *** Quits: rusua (uid124537@id-124537.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:31:52] <mfiano> That uses a call site optimization technique for generic function metaobjects. This would need more than that to be fast, since it would be a different metaobject.
[17:32:08] <selwyn> ok
[17:32:48] <mfiano> But I am not claiming Raku is "faster" or "more powerful"
[17:33:05] <selwyn> yes i see that
[17:33:07] <selwyn> thanks
[17:33:10] <mfiano> I do not like using subjective adjectives like "faster" or "more powerful" when describing my tools, because it isn't so black and white.
[17:35:28] <mfiano> It looks like this month's Raku release made methods with where clauses (custom dispatch predicates) about 30x faster.
[17:35:56] <mfiano> It was commited, but a release won't be cut for another week or two.
[17:36:55] <mfiano> Or I should say the Rakudo implementation's JIT compiler/VM runtime
[17:37:31] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:37:54] <mfiano> https://6guts.files.wordpress.com/2021/09/graph-1.png
[17:48:00] *** Joins: makomo_ (~makomo@user/makomo)
[18:26:21] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 265 seconds)
[18:28:22] <gilberth> Good morning #lispcafe!
[18:39:02] *** Joins: notzmv (~zmv@user/notzmv)
[18:43:05] <gilberth> Dammit, why would my MacMini always forget about its Display Port?
[18:47:41] <selwyn> good morning gilberth
[18:48:23] <gilberth> Hello selwyn! Something to cheer me up?
[18:51:57] *** Joins: makomo_ (~makomo@user/makomo)
[19:00:46] <selwyn> well
[19:00:57] <selwyn> i can give you a real apple instead one of these shitty macs
[19:01:01] <selwyn> just picked over 100 of them
[19:01:32] * selwyn gives gilberth a 🍎
[19:06:24] * gilberth eats the apple gets a shock from all the vitamins.
[19:06:49] <gilberth> selywn: You have a garden?
[19:07:35] <selwyn> there is a tree growing in the local park
[19:07:47] <gilberth> We could offer apple pie at Lisp Café.
[19:07:49] <selwyn> very few others are interested in picking them
[19:07:58] <selwyn> i am going to make a lot of apple juice today
[19:08:07] <selwyn> they are surprisingly good for 'city apples'
[19:08:12] <gilberth> selwyn: Ah and you were free to pick those?
[19:08:21] <selwyn> yeah i got up to the tree line
[19:09:15] <gilberth> Well, my apple tree didn't survive the last storm. My wife send me a depressing photo.
[19:09:30] <selwyn> :((
[19:09:50] <gilberth> I don't there anymore, anyway. /me shrugs.
[19:09:58] <selwyn> apple pie is a very good idea actually
[19:10:05] <selwyn> did a lot of pie making earlier this year
[19:10:12] <ck_> I thought you needed to first construct the universe or something
[19:10:27] <ck_> I get all my education from very short video clips so I can't be sure though
[19:12:49] <ck_> oh, it's "invent" actually, my mistake I retract everything
[19:13:41] <selwyn> lol
[19:13:53] <selwyn> i never got into cosmology so i have no hope
[19:15:09] <ck_> just don't make it "from scratch" -- you already have the apples so there is hope
[19:18:37] *** Joins: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net)
[19:22:12] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[19:34:30] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:46:13] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[19:55:50] *** Quits: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net) (Remote host closed the connection)
[19:57:53] <selwyn> also going to make cider
[19:57:57] <selwyn> have to sterilise everything sigh
[20:18:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:20:00] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[20:27:05] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[20:28:15] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[20:30:10] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:8d5f:78c6:cd1:4a9b) (Quit: WeeChat 3.2)
[20:34:40] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:ed38:680c:308b:2321)
[20:34:55] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:ed38:680c:308b:2321) (Client Quit)
[20:35:19] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:ed38:680c:308b:2321)
[20:58:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[21:21:13] <gilberth> selwyn: I'm back, I believe I got everything but apples for nice apple pie, could you spare a little basket?
[21:21:34] <selwyn> 🍎🍎🍎
[21:21:48] <mfiano> I just made 4 pies myself
[21:21:54] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[21:22:03] <gilberth> mfiano: Apple pie?
[21:22:03] <mfiano> The one with added cranberries came out the best :)
[21:22:07] <mfiano> Yes
[21:22:15] <selwyn> nice
[21:22:21] * gilberth rinses the apples.
[21:22:30] <humasect> am i too late for dinner
[21:24:50] <gilberth> hayley! Have you misplaced the knives again?
[21:25:05] * gilberth searches all the drawers.
[21:25:46] <gilberth> .oO(She perhaps is asleep and can't hear me.)
[21:25:59] * humasect pulls up favorite chair
[21:26:26] * gilberth finds forks, scissors, a screw driver, a hammer, and a soldering iron. No knives yet.
[21:26:33] <humasect> honestly chairs are kind of wierd. like pretend thrones in euroland, mostly we sit on floor/ground/rug
[21:27:02] <humasect> funny. just thinking this morning to get my own tool set. i got gifted a drill, and working on electric guitars now. thinking to make my own 
[21:27:42] <gilberth> humasect: I can't sit on the floor. I mean, I can, but I am too weak to get up again. Have seen a knife?
[21:28:04] * gilberth sighs, while he also found a file.
[21:28:07] <humasect> no knives, mine is missing =(  
[21:28:15] <humasect> oh i also need to get a wood file (to scallop some frets)
[21:28:32] <humasect> at the least, for chairs without arms, i can sit cross-legged 
[21:28:38] <gilberth> They must be on the knife planet.
[21:29:03] <humasect> hhe. i have a cat (name Plato) so limited seating options afterforthwith
[21:29:23] <gilberth> I, can, not, work this way.
[21:29:55] * gilberth slams drawers shut.
[21:30:06] <humasect> hehe start sharpening something else 
[21:30:25] <gilberth> The screw driver with the file?
[21:30:41] <humasect> i would like to build shelving and woodwork and a raised bed thing but no space(garage)
[21:30:43] <humasect> yes 
[21:30:48] <gilberth> Or I use the hammer and just smash the apples.
[21:30:59] <humasect> make sure not to turn it else you will be filing foreer 
[21:31:01] <humasect> forever
[21:31:14] <humasect> apple sauce =) 
[21:31:21] * gilberth thinks.
[21:32:25] <humasect> cant afford car, computer boring, so back to electric guitar/music stuff. one needs a healthy obsession in life, and i cant stare at the screen that long so coding is out at least temporarily (but for making music, got some ideas)
[21:32:54] <humasect> learning a bit about wood and crude/primitive electronics (basic analog) 
[21:33:28] * gilberth uses the screw driver to disassemble the pair of scissors into two scissors and glances at the blade, it glaces back.
[21:33:34] <gilberth> That will do.
[21:33:38] <humasect> haha
[21:33:56] * gilberth cuts apples.
[21:34:16] <humasect> where is that from, "it glances back" hehe its gold =) 
[21:34:52] <gilberth> It's from nowhere.
[21:35:40] <humasect> thats a fine place to be from
[21:35:53] <humasect> i recommend the brewery
[21:37:17] * gilberth finds some pizza that stiff it would do for a melee weapon in the oven.
[21:37:39] <gilberth> Gosh! This place is a mess.
[21:38:40] * humasect looks around
[21:40:35] <gilberth> * As the oven heats some pungent smell fills the room.
[21:41:29] <MichaelRaskin> It is at least widespread to ascribe «And if you gaze long enough into an abyss, the abyss will gaze back into you.» to Nitzsche.
[21:41:38] <gilberth> .oO(I guess, someone should clean that oven sometime. Hayley?! Nope.)
[21:42:16] <humasect> brbr
[21:42:17] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[21:42:21] * gilberth opens a window to vent some of the almost smoke.
[21:42:42] <gilberth> It'll pass, no worries.
[21:44:50] * gilberth continues cutting apples with a scissor.
[21:47:50] * gilberth puts the pie in the oven.
[21:48:44] <gilberth> Folks! I case I forget about the pie, wake me in like 3/4 of an hour, pie should be ready by then.
[21:49:14] * gilberth goes for a cigarette leaving yet more mess behind.
[21:49:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:59:30] <gilberth> I wonder why Brad Parker formulated some bit manipulation in non-obvious way? Like a bit left rotate. Instead of just saying "(v << n) | (v >> (32-n))", which the compiler would recognize and use a rotate instruction, he was computing some mask with "if (n == 0) mask = 0; else mask = (int)0x80000000 >> k;" and then do "(v << n) | ((v & mask) >> (32-n))", which the compiler doesn't recognize. But then 'v' was declared signed.
[22:19:16] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Ping timeout: 245 seconds)
[22:19:54] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:30:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[22:37:55] * gilberth thinks the pie is well done, puts it on the counter and shuts oven off.
[22:38:45] <gilberth> * lovely and sweet apple pie smell fills the café.
[23:07:35] *** Joins: notzmv (~zmv@user/notzmv)
[23:08:24] *** Joins: drbluefall (~drbluefal@pool-162-83-177-90.nycmny.fios.verizon.net)
[23:08:43] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:09:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:11:57] *** Quits: drbluefall (~drbluefal@pool-162-83-177-90.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:20:58] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[23:21:39] <Qwnavery> morning all
[23:23:53] <gilberth> Hello Qwnavery, selwyn picked some apples and made some pie. Want so? And have you seen our knives at Lisp Café?
[23:24:42] <gilberth> some, rather.
[23:28:09] <Qwnavery> I have not seen your knives, pray tell. Apple pie is good.
[23:28:43] * gilberth passes a pie piece.
[23:29:04] * Qwnavery slowly eats, enjoying with a side of icecream and custard.
[23:29:23] <Qwnavery> you spoil me. :D
[23:29:48] * gilberth shrugs.
[23:30:23] <Qwnavery> It's 6:00AM and I'm eating dessert. :D
[23:30:42] <Alfr> gilberth, did you cull my experiment in the oven? I think they were about to learn to speak. oO
[23:31:08] <gilberth> Qwnavery: I haven't found our knives to cut the apples, but a screw driver and a pair of scissors. That's no pair anymore. Otherwise: Perfect breakfast, I'd say.
[23:32:17] <gilberth> Alfr: Sorry about that. I sure, pretty sure, you find other experiments in the fridge. And that pizza was just dry and hard as rock, can't imagine it speaking in that shape.
[23:32:28] <kakuhen> It's 1pm and I barely finished my breakfast; I woke up 3 hours ago.
[23:32:31] <Qwnavery> the only rational solution is to sharpen the screwdriver of course.
[23:32:56] <Alfr> gilberth, the pizza was only the food for it. ;)
[23:33:08] <gilberth> Qwnavery: Yes, I found a file, too. And a soldering iron.
[23:33:45] <gilberth> Alfr: Oooops! So I burned your experiment? That was what the smoke came from. Gosh.
[23:34:17] <Qwnavery> A soldering iron! You could sharpen that too.
[23:34:24] <gilberth> Alfr: Next time, put a sign up, please.
[23:35:15] <gilberth> Qwnavery: You'd ruin it that way. I'll need it for my building my TTL CPU.
[23:36:24] <Qwnavery> Ah yes, photolithography has no place here I see.
[23:36:51] <gilberth> No, that would be cheating. At least for me.
[23:37:15] <Qwnavery> I take it you have a spare room?
[23:37:57] <gilberth> I have no spare room, and only a tiny desk. This is why I claim all the spaces dave0 drops.
[23:38:23] <Alfr> gilberth, why? Those have to be terminated regularly anyway, can't have them discover inanities like labor unions or democracy ...
[23:38:54] <Qwnavery> Do you stake your desk with a little lisp flag?
[23:39:27] <gilberth> Alfr: Ok, then, good to know. Not they discover communism and start a revolt.
[23:39:51] <gilberth> Qwnavery: I didn't. Should I?
[23:43:11] <gilberth> Qwnavery: I have a whole house available, but that house was built at the very wrong spot and wants to kill me. Thus I hide at my cousin's place, where I only have one room available.
[23:43:29] <Qwnavery> It's the right thing to do in an imperial cult.
[23:44:30] <Qwnavery> Oh dear. A murderous house is quite unnerving.
[23:44:49] <gilberth> cult? Nah, my family has its very own coat of arms. You may spot it on my web site.
[23:45:16] <Qwnavery> Oh wow, that's pretty neat.
[23:48:33] <gilberth> This CADR emlator code is curious. Ok, it wasn't written with speed in mind, but you find spots and comment, that attempts were made to speed it up, but not at those places, you'd attack first. Like things done on every instruction and avoiding conditional branches. Hmm.
[23:49:17] <Qwnavery> I still haven't managed to find the time to read the source and try and get it going.
[23:49:57] <gilberth> I ought to share. Damn perfectionism of mine, I cannot get over with.
[23:50:17] <Qwnavery> I've been doing a bit of work on second-climacs (hehe) and I'd like to have a viable IDE environment before I continue with any other programming projects.
[23:50:53] <gilberth> I am not very motivated today, they sold me a used day. Tomorrow I sure get a fresh day.
[23:51:11] <Qwnavery> Get a refund.
[23:51:46] <Qwnavery> Leave a bad review.
[23:51:50] <gilberth> It would be suffice when I get interest on the damn hour they stole in spring calling it DST.
[23:52:14] <gilberth> Qwnavery: Oh! Where could I leave that review?
[23:52:34] <Qwnavery> It's on the Akashic Records homepage.
[23:53:03] <gilberth> hmm.
[23:53:20] <Qwnavery> If you scroll past all the fine print, there's a little button at the bottom of the page where you can post.
[23:53:48] <gilberth> Is that real?
[23:53:55] <Qwnavery> No lmao.
[23:54:49] <Qwnavery> In all seriousness, thank goodness we don't have daylight savings time where I'm at.
[23:55:06] <gilberth> And I have my trouble to deal with K&R indention style. Well, I manage, but I just hate it.
[23:55:09] <Qwnavery> Everytime there's talk of it happening, it sorta just doesn't.
[23:55:29] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:55:50] <gilberth> Qwnavery: Yes, I never got why it would be a good thing to get up one hour earlier in summer.
[23:55:53] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:56:26] <Qwnavery> I will admit though, my sleep schedule has completely changed.
[23:56:29] <gilberth> But, luckily it doesn't matter for me as I don't work. At least not for pay.
[23:57:27] <Qwnavery> For the past week I've inadvertently been getting up at 4:30 - 5:00AM through no choice of my own and have had to accomodate it by going to bed earlier. Yesterday I had a siesta aswell where I slept from 1:00 til 4:00
[23:58:33] <gilberth> It's insane to get up at 04:30.
[23:58:42] <Qwnavery> It's liberating.
[23:58:51] <Qwnavery> Also sunrise is at 5:00 here.
[23:59:24] <gilberth> Yep, that's the problem. Sunrise => /me gets to bed.
[23:59:50] <Qwnavery> How do you function? What sort of job accomodates night hours only??
