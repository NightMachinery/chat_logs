[00:00:46] <Hecate> hi waleee o/
[00:02:21] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:03:07] *** Joins: hamflask (~hamflask@2600:1700:1bd8:b00f:ea60:30f6:60ab:8120)
[00:03:10] <waleee> Hecate: ?
[00:04:14] *** Joins: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net)
[00:04:27] <waleee> (but hi to you too, even if I can't remember the nick)
[00:04:53] *** Quits: xff0x (~xff0x@port-92-193-253-16.dynamic.as20676.net) (Ping timeout: 256 seconds)
[00:04:56] *** Quits: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net) (Client Quit)
[00:04:58] <boxscape> Hecate: people seem to be confused a lot by your cordiality today :D
[00:05:12] *** Joins: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net)
[00:05:49] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:9887:9cf7:56de:2525)
[00:05:51] *** Joins: deadmarshal (~deadmarsh@95.38.119.253)
[00:05:55] <monochrom> Next time use "may the odds be ever in your favour" >:)
[00:06:06] <Hecate> boxscape: yeah I have a reputation :')
[00:06:13] *** Quits: benin (~benin@183.82.179.164) (Quit: The Lounge - https://thelounge.chat)
[00:06:15] <Hecate> waleee: you just joined the channel and I was feeling cordial :)
[00:06:18] <Rembane> "May you love in interesting times." > "good luck"
[00:06:18] <Hecate> monochrom: hehehe
[00:06:51] <dsal> Love in interesting times sounds like a sitcom situation.
[00:07:34] <geekosaur> love in the time of covid
[00:07:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:08:22] *** Joins: vysn (~vysn@user/vysn)
[00:09:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[00:09:53] <Rembane> That typo made the quote so much more concerning. :D 
[00:10:12] <Rembane> s/concerning/disconcerting/
[00:10:19] <Rembane> My fingers arne't doing my bidding today 
[00:12:40] <Hecate> "May you leave the Thunderdome" 
[00:16:00] *** Quits: fresheyeball (~fresheyeb@c-76-25-93-164.hsd1.co.comcast.net) (Quit: WeeChat 2.9)
[00:17:12] <Rembane> That's a good one 
[00:17:23] <Rembane> "Two enters, three leaves."
[00:17:52] <Hecate> :)
[00:19:10] <monochrom> Sounds like something like the LHC. Which are like Thunderdomes for particles.
[00:20:15] <Rembane> Indeed, with extra speed added. :)
[00:20:31] *** Joins: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com)
[00:21:06] <Hecate> monochrom, Rembane: btw, what are you doing with Haskell these days?
[00:21:58] <Rembane> Hecate: I'm only doing Advent of Code, and it's blissful. At work I'm working in Elixir which is surprisingly good but it has too much and too weird syntax imo. 
[00:22:14] <monochrom> Yesterday I was reading https://link.springer.com/chapter/10.1007/978-3-662-54434-1_21
[00:22:39] <monochrom> So now I am learning representable functors and the Yoneda lemma again.
[00:22:56] <Hecate> Rembane: yes I'm very familiar with Elixir, my first job was with it :)
[00:23:06] <Hecate> monochrom: oooh!
[00:23:19] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[00:24:20] <Rembane> Hecate: Sweet! What are you doing with Haskell these days? 
[00:24:35] <Hecate> $dayjob technically
[00:24:44] <Hecate> I've also joined the Cabal dev team
[00:24:58] <Hecate> still doing my job as Board Member for the Haskell Foundation
[00:25:35] <Hecate> Started an alternative Hackage repository called Flora: https://twitter.com/TechnoEmpress/status/1465713784945659906
[00:25:42] <Rembane> Cool! 
[00:25:52] <Hecate> I try
[00:26:14] <Rembane> Was it you who was the force behind adding good stuff to the Haskell docs? 
[00:26:33] <boxscape> "Namespaces for packages" what does this mean in practice?
[00:26:54] <boxscape> Oh I'm seeing it
[00:27:00] <Hecate> boxscape: https://www.npmjs.com/package/@purescript/node-path
[00:27:01] <boxscape> e.g. @haskell/bytestring
[00:27:03] <Hecate> yes
[00:27:11] <Hecate> Rembane: Yes :) :) :)
[00:27:14] <Hecate> 'tis me
[00:28:08] <boxscape> hmm namespaces do seem nice
[00:29:31] <Rembane> Hecate: Then it's you I'm sending grateful thoughts to when I see useful examples in base! :D
[00:29:37] <Rembane> Hecate: Thank you for doing that work! 
[00:30:02] *** Joins: benin (~benin@183.82.179.164)
[00:30:18] <Hecate> Rembane: <3 <3 <3
[00:30:26] <Hecate> thank you as well, it really warms my heart
[00:30:49] *** Quits: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com) (Remote host closed the connection)
[00:31:04] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186)
[00:33:19] <Rembane> Hecate: ^^ no worries, may the slugs hand you fresh lettuce 
[00:33:23] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[00:33:23] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[00:33:26] *** allbery_b is now known as geekosaur
[00:36:23] <Hecate> awww
[00:36:25] <Hecate> this is very cute
[00:39:46] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186) (Remote host closed the connection)
[00:40:02] *** Quits: hamflask (~hamflask@2600:1700:1bd8:b00f:ea60:30f6:60ab:8120) (Ping timeout: 256 seconds)
[00:40:50] *** Quits: benin (~benin@183.82.179.164) (Quit: The Lounge - https://thelounge.chat)
[00:41:07] *** Joins: benin (~benin@183.82.179.164)
[00:41:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186)
[00:41:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:42:01] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Quit: gone to sleep. ZZZzzz…)
[00:44:32] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:44:50] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:46:37] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[00:46:40] *** Quits: jess (~jess@libera/staff/jess) ()
[00:46:56] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:48:13] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:9887:9cf7:56de:2525) (Ping timeout: 252 seconds)
[00:48:15] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:4cc1:c671:40b5:6186) (Remote host closed the connection)
[00:49:01] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:d75b:ca2f:7cd3:f39)
[00:50:33] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a)
[00:52:52] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a) (Remote host closed the connection)
[00:54:39] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[00:57:22] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e85247d18c27da64632.dip0.t-ipconnect.de)
[00:59:17] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[00:59:58] *** Joins: hamflask (~hamflask@2600:1700:1bd8:b00f:11a7:e1ed:d710:a4af)
[01:00:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[01:00:32] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:01:33] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[01:02:24] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:02:30] *** Joins: mvk (~mvk@2607:fea8:5cc1:fa00::4702)
[01:02:38] *** Joins: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com)
[01:03:14] *** Quits: hamflask (~hamflask@2600:1700:1bd8:b00f:11a7:e1ed:d710:a4af) (Client Quit)
[01:03:27] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[01:03:31] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Client Quit)
[01:04:58] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[01:05:13] *** Joins: hamflask (~hamflask@2600:1700:1bd8:b00f:8fba:5075:a126:c2f)
[01:05:51] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[01:06:19] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[01:06:33] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:10:26] *** Joins: xkuru (~xkuru@user/xkuru)
[01:10:52] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Client Quit)
[01:13:53] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:19:23] *** Quits: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[01:20:52] *** Quits: imdoor (~imdoor@balticom-142-78-50.balticom.lv) (Quit: imdoor)
[01:22:41] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[01:25:02] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:30:13] *** Quits: michalz (~michalz@185.246.204.33) (Remote host closed the connection)
[01:33:57] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[01:36:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:38:52] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[01:39:06] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[01:43:33] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[01:44:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:45:55] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:46:45] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:47:15] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:49:52] <Hecate> omfg
[01:50:02] <Hecate> Flora.pm appears in the Haskell Weekly newsletter
[01:50:03] <Hecate> https://haskellweekly.news/issue/292.html
[01:50:04] <Hecate> :D
[01:50:34] <Rembane> Yay! :D
[01:50:55] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:51:17] *** Quits: benin (~benin@183.82.179.164) (Quit: The Lounge - https://thelounge.chat)
[01:57:31] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:58:04] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[01:59:43] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 252 seconds)
[02:00:22] *** Joins: benin (~benin@183.82.179.164)
[02:03:01] *** Quits: monochrom (trebla@216.138.220.146) (Ping timeout: 252 seconds)
[02:05:33] *** Quits: benin (~benin@183.82.179.164) (Quit: The Lounge - https://thelounge.chat)
[02:10:04] *** Joins: monochrom (trebla@216.138.220.146)
[02:10:55] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:b4e0:9d38:46ba:cc41) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:50] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[02:14:01] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Remote host closed the connection)
[02:15:29] *** Quits: deadmarshal (~deadmarsh@95.38.119.253) (Ping timeout: 252 seconds)
[02:15:43] <dsal> Hecate: I love the response to the "why don't you just" on that post.
[02:16:55] <Franciman> congrawts Hecate 
[02:18:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[02:19:09] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[02:20:46] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:a968:658b:9652:428a)
[02:22:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[02:24:02] *** Quits: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com) (Remote host closed the connection)
[02:24:36] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[02:24:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:25:20] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[02:25:25] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[02:29:03] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[02:32:41] <sm> yes, nice answer
[02:33:16] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[02:33:36] <Hecate> dsal, sm haha thanks :)
[02:33:39] *** Quits: juri_ (~juri@178.63.35.222) (Ping timeout: 250 seconds)
[02:33:40] <Hecate> Franciman: thanks :3
[02:36:25] <jackdk> hey cool, the amazonka RC got into HWN too. Wish the call-to-action made it in also - if you're using it, please upgrade and test. I promise to respond promptly to issues etc
[02:37:28] <Axman6> The translation to v2.0 for one of my packages ended up being less painful than I expected
[02:40:06] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:40:09] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 256 seconds)
[02:40:33] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:40:42] *** Joins: juri_ (~juri@79.140.120.193)
[02:40:51] <Axman6> Also, getting to use generic-lens was fun, definitely cleaner than the new lenses (which I suspect have intentionally been given very long, annoying names to disuade people from using them)
[02:44:18] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[02:45:44] <monochrom> https://xkcd.com/1105/ applies.
[02:47:01] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 245 seconds)
[02:47:15] *** Quits: cosimone (~user@93-44-186-55.ip98.fastwebnet.it) (Remote host closed the connection)
[02:48:29] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 252 seconds)
[02:48:43] <monochrom> Also, IDEs use auto-completion to solve all long, annoying name problems.
[02:49:31] <EvanR> all?
[02:49:50] <EvanR> what about the "have to read the code" part of the problem xD
[02:50:09] <hpc> when has reading code ever been necessary to write code? :P
[02:50:09] <EvanR> "without being too annoyed"
[02:50:18] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:51:22] *** Quits: max22- (~maxime@2a01cb0883359800118b3200b4a756c8.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[02:51:27] <monochrom> I thought syntax highlighting solved all reading problems.
[02:51:57] <monochrom> I mean, I thought people made that claim.
[02:52:54] <hpc> maybe 256 colors was enough for 80x24 characters of code
[02:53:07] <hpc> in today's world of portrait-oriented 4k screens, nothing less than emoji and helvetica is required
[02:53:09] <geekosaur> syntax gaslighting
[02:56:35] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:d75b:ca2f:7cd3:f39) (Ping timeout: 268 seconds)
[02:57:13] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:c8d5:d64b:ba01:92ce)
[02:59:24] *** Joins: AlexNoo_ (~AlexNoo@178.34.151.83)
[03:02:15] *** Quits: AlexZenon (~alzenon@178.34.160.14) (Ping timeout: 256 seconds)
[03:02:19] *** Quits: Alex_test (~al_test@178.34.160.14) (Ping timeout: 256 seconds)
[03:02:49] *** Quits: AlexNoo (~AlexNoo@178.34.160.14) (Ping timeout: 256 seconds)
[03:03:05] *** Quits: jasonmason (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[03:03:20] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[03:04:37] *** Quits: juri_ (~juri@79.140.120.193) (Ping timeout: 252 seconds)
[03:05:33] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[03:05:51] *** Joins: namkeleser (~namkelese@101.175.102.188)
[03:06:35] *** Joins: juri_ (~juri@178.63.35.222)
[03:07:29] *** Joins: Alex_test (~al_test@178.34.151.83)
[03:08:09] *** Joins: AlexZenon (~alzenon@178.34.151.83)
[03:11:19] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:15:23] <shapr> I was gonna complain about this paper https://well-typed.com/blog/2019/10/nonmoving-gc-merge/ but then I found https://www.cs.unh.edu/~dietz/appendix/pldiws20ismmmain-p64-p-18fdc64--final.pdf
[03:15:28] <shapr> thanks bgamari for doing awesome stuff!
[03:16:14] <bgamari> shapr, no worries ;)
[03:16:20] <bgamari> shapr, let me know if you have any questions
[03:19:30] *** Quits: hamflask (~hamflask@2600:1700:1bd8:b00f:8fba:5075:a126:c2f) (Quit: Ping timeout (120 seconds))
[03:20:32] <shapr> bgamari: only one I have at the moment is whether the non-moving GC became parallel since its merge in 8.10 ?
[03:20:45] <bgamari> shapr, I have a branch
[03:20:49] <bgamari> it currently segfaults
[03:20:51] <shapr> oh exciting!
[03:20:53] <shapr> oh no!
[03:20:55] <bgamari> I haven't had time to investigate why
[03:21:06] <bgamari> Perhaps for9.4
[03:21:09] <shapr> yay!
[03:21:21] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:21:29] *** Quits: kuribas (~user@ptr-25vy0i85jcl6zvp0ziu.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[03:21:33] <shapr> five of us are reading the alligator paper for our weekly meeting, I'll ask if anyone has interesting questions
[03:21:45] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:54db:f79f:90dc:3ee5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:22:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:54db:f79f:90dc:3ee5)
[03:29:47] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[03:31:41] <EvanR> you have a weekly meeting about haskell? jelly :(
[03:34:42] <shapr> several!
[03:34:56] <shapr> one for recurse center, two for work (SimSpace)
[03:35:25] <shapr> EvanR: we could have one for here
[03:41:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:41:35] <geekosaur> "recurse center"
[03:42:04] <EvanR> a weekly meeting, on IRC?
[03:42:45] <monochrom> Actually I'm curious too.  Does it mean https://www.recurse.com/ ?
[03:43:24] <monochrom> "Never graduate" haha do you know how nightmarish that sounds to grad school survivors >:)
[03:46:34] <dsal> shapr: Ah, that's you?  I've got a tab open.  heh
[03:46:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:49:42] *** Joins: anyone (~filler@a4.inai.de)
[03:50:08] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[03:51:28] <shapr> dsal: have you attended recurse center?
[03:51:31] <shapr> it's good stuff
[03:51:46] <dsal> I've never heard of recurse center.
[03:51:48] <shapr> EvanR: sure, we could organize a weekly video chat
[03:52:12] <shapr> dsal: it's in my top two favorite communities
[03:52:28] <dsal> That looks like a thing I'd like, though.
[03:55:56] <shapr> I liked it enough to spend six months there.
[03:56:09] <shapr> wrote some blog posts: https://shapr.github.io/
[03:56:20] <shapr> learned about SMT solvers and all kinda things
[03:56:41] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:57:35] *** Parts: anyone (~filler@a4.inai.de) ()
[04:03:03] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[04:05:14] <boxscape> is there any package that allows you to generate TH expressions for quickcheck?
[04:06:13] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[04:06:46] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[04:07:40] <boxscape> in other words
[04:07:54] <boxscape> a package that provides an instance `Arbitrary Language.Haskell.TH.Exp`
[04:10:59] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 252 seconds)
[04:14:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:14:47] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 256 seconds)
[04:16:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[04:16:46] *** Joins: renzhi (~xp@2607:fa49:6500:b100::5cef)
[04:19:39] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[04:22:19] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[04:24:29] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[04:39:54] *** Joins: boxscape_73 (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de)
[04:40:08] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[04:42:31] *** Quits: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:42:43] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[04:45:05] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e85247d18c27da64632.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:46:11] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 252 seconds)
[04:47:43] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:48:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:49:16] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[04:53:45] *** Joins: notzmv (~zmv@user/notzmv)
[05:00:13] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a968:658b:9652:428a) (Quit: Textual IRC Client: www.textualapp.com)
[05:14:32] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[05:16:28] <Axman6> that sounds horrible D:
[05:16:41] <Axman6> you're gonna make AI monsters man
[05:17:40] <boxscape> that's the plan
[05:18:36] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[05:27:33] *** Quits: mmhat (~mmh@55d45251.access.ecotel.net) (Quit: WeeChat 3.3)
[05:29:51] *** Joins: jakalx (~jakalx@base.jakalx.net)
[05:32:06] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:32:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[05:32:26] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[05:36:57] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[05:37:29] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[05:38:38] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[05:38:53] *** Joins: yauhsien (~yauhsien@2402:7500:4e5:d897:6d8a:b7a6:6ceb:da56)
[05:40:21] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[05:42:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:54db:f79f:90dc:3ee5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:42:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:54db:f79f:90dc:3ee5)
[05:45:01] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[05:46:41] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[05:47:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:51:10] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[05:52:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:53:48] *** Joins: neurocyte0132889 (~neurocyte@IP-185189141046.dynamic.medianet-world.de)
[05:53:49] *** Quits: neurocyte0132889 (~neurocyte@IP-185189141046.dynamic.medianet-world.de) (Changing host)
[05:53:49] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[05:57:27] *** Joins: fef (~thedawn@user/thedawn)
[05:58:18] <boxscape> is there a nicer way to write (escape @Exp . escape @Type . escape @Dec . escape @Pat)?
[06:00:58] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:c8d5:d64b:ba01:92ce) (Ping timeout: 268 seconds)
[06:01:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:02:25] *** Joins: xff0x (~xff0x@2001:1a81:5394:4100:b17b:62d7:7f1e:4d8a)
[06:04:02] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[06:05:03] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[06:05:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[06:05:49] <boxscape> maybe in the glorious future of DH I'll be able to write `alaf foldMap Endo escape [Exp, Type, Dec, Pat]`
[06:06:29] *** Quits: arahael (~arahael@27-32-144-20.tpgi.com.au) (Ping timeout: 252 seconds)
[06:08:04] *** Joins: arahael (~arahael@27-32-144-20.tpgi.com.au)
[06:09:37] <Axman6> feels like a nice haskell challenge
[06:10:54] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[06:11:02] *** Joins: unyu (~pyon@user/pyon)
[06:11:26] *** Joins: burnsidesLlama (~burnsides@client-8-73.eduroam.oxuni.org.uk)
[06:16:03] *** Quits: burnsidesLlama (~burnsides@client-8-73.eduroam.oxuni.org.uk) (Ping timeout: 256 seconds)
[06:17:35] *** Joins: Stotteren (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[06:17:39] *** Joins: Gestotterd (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net)
[06:18:40] *** Parts: Gestotterd (~Stotteren@pool-108-20-79-41.bstnma.fios.verizon.net) ()
[06:19:09] *** Joins: namkeleser (~namkelese@101.175.102.188)
[06:20:16] *** Joins: Kiori (~Kiori@179.235.95.59)
[06:22:33] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2909868c7bbf0c5b488.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:22:44] *** Joins: ub (~Thunderbi@p200300ecdf0ba299f01739553a033620.dip0.t-ipconnect.de)
[06:23:21] *** Quits: yauhsien (~yauhsien@2402:7500:4e5:d897:6d8a:b7a6:6ceb:da56) (Ping timeout: 252 seconds)
[06:23:29] <Kiori> hey guys, what is the current state of haskell on Android(and mobile generally)? I've had a hard time finding information on compiling and general development for these arm based platforms.
[06:24:45] *** Joins: cheater (~Username@user/cheater)
[06:25:03] *** ub is now known as ubert
[06:26:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:28:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:30:02] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[06:31:30] *** Joins: sander (~sander@user/sander)
[06:33:26] <sm> difficult
[06:35:07] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:35:45] <sm> some company sells a toolkit for it (keera studios ?)
[06:38:03] *** Joins: Xnuk (~Xnuk@14.33.159.252)
[06:38:58] <Xnuk> @pl \x -> x
[06:38:58] <lambdabot> id
[06:43:25] *** Quits: Kiori (~Kiori@179.235.95.59) (Quit: Leaving)
[06:43:57] <davean> heres also a nix expression out there that just does it? I forget where
[06:44:11] <davean> and Obsidian Systems also dealt with it I think?
[06:45:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:45:36] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[06:48:59] *** Quits: Xnuk (~Xnuk@14.33.159.252) (Quit: Client closed)
[06:54:19] *** Joins: pfurla (~pfurla@201.17.118.230)
[06:58:54] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:59:32] <boxscape> The composition I asked about above was actually wrong, it now looks like this https://paste.tomsmeding.com/CUEbLR49
[06:59:36] <boxscape> still kind of verbose
[06:59:42] <boxscape> not sure if there's a better way
[07:00:53] <boxscape> hmm I might be able to split that pattern out into a function call actually
[07:06:29] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[07:07:03] *** Quits: td_ (~td@muedsl-82-207-238-002.citykom.de) (Ping timeout: 256 seconds)
[07:08:45] *** Joins: td_ (~td@94.134.91.231)
[07:08:54] <boxscape> indeed I can https://paste.tomsmeding.com/x7GghwV1
[07:12:47] *** Quits: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 256 seconds)
[07:14:42] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[07:14:59] <boxscape> (admittedly actually less readable than before)
[07:19:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:22:30] *** Quits: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0) (Quit: ZNC - http://znc.in)
[07:23:29] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[07:24:20] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:24:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:24:20] *** finn_elija is now known as FinnElija
[07:28:32] *** Joins: Lycurgus (~juan@98.4.112.204)
[07:29:31] <boxscape> (final version - https://paste.tomsmeding.com/yUd2TelK - going to bed, good night)
[07:30:17] *** Joins: yauhsien (~yauhsien@2402:7500:4e5:d897:5d9d:1dde:33ff:788f)
[07:32:01] *** Quits: yauhsien (~yauhsien@2402:7500:4e5:d897:5d9d:1dde:33ff:788f) (Remote host closed the connection)
[07:34:45] <EvanR> is there something like juicy pixels but for sound files
[07:34:50] <EvanR> juicy samples
[07:42:52] <Lycurgus> bindings to things
[07:44:56] *** Quits: boxscape_73 (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:47:35] <Axman6> libsndfile?
[07:49:40] <Axman6> http://www.mega-nerd.com/libsndfile/ is writtne be Erik de Castro Lopo, who is definitelyt an active haskeller... trying to see if he has haskell bindings
[07:50:50] <EvanR> there's simply bindings to C libs, and there's the juicy pixels secret sauce that's like file -> thing of pixels and tells you the format too without any real configuration
[07:50:59] <EvanR> in one api call
[07:52:15] <EvanR> I see libsndfile doesn't want to touch MP3
[07:54:24] <Axman6> does anyone?
[07:57:50] *** Joins: Sgeo (~Sgeo@user/sgeo)
[07:57:51] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[08:00:53] *** Quits: pfurla (~pfurla@201.17.118.230) (Quit: gone to sleep. ZZZzzz…)
[08:02:21] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[08:08:13] *** Quits: renzhi (~xp@2607:fa49:6500:b100::5cef) (Ping timeout: 252 seconds)
[08:11:39] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[08:12:15] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[08:15:21] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[08:18:04] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[08:19:45] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[08:27:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:46:20] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:47:38] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[08:50:01] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 252 seconds)
[08:55:55] *** Joins: nautical (~nautical@2601:602:900:1630::396f)
[09:07:26] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[09:09:27] *** Quits: monochrom (trebla@216.138.220.146) (Ping timeout: 252 seconds)
[09:12:24] <opqdonut> roast my advent of code day 3: https://gist.github.com/opqdonut/eedde3377492334ba7074130e9e52653
[09:12:31] *** Joins: monochrom (trebla@216.138.220.146)
[09:15:47] <int-e> :t foldl' (\a b -> 2*a + b) 0
[09:15:48] <lambdabot> (Foldable t, Num a) => t a -> a
[09:15:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:17:11] <int-e> opqdonut: are you running this in ghci? (no main)
[09:18:01] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[09:19:05] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:22:13] <opqdonut> int-e: yeah
[09:23:07] <opqdonut> I just wrote out `bin` in anger when I realised the version of base I happened to be on didn't have Numeric.readBin :)
[09:23:24] <opqdonut> but yeah now that I look at it it's an obvious foldl'
[09:26:06] <int-e> bin xs | [(v, s)] <- readInt 2 (`elem` "01") digitToInt xs = v -- ouch
[09:27:50] <int-e> `readBin`, oh that's new in ghc-9.2... hmm. Not enough of a reason to switch :P
[09:28:27] <int-e> (base-4.16 but it's tied to ghc anyway)
[09:28:42] *** Joins: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0)
[09:29:08] <xerox> it was for me xD
[09:37:19] *** Quits: mvk (~mvk@2607:fea8:5cc1:fa00::4702) (Ping timeout: 252 seconds)
[09:39:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:41:15] *** Joins: n8ess163 (~b@pool-72-80-171-162.nycmny.fios.verizon.net)
[09:43:53] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[09:43:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[09:44:07] <dmj`> hard keeping up with the big dogs on day 3
[09:47:51] <c_wraith> I spent a lot of time solving the wrong problem in part 2 because I didn't read the example.  Then I read the example, threw out all my code, and spent a lot less time solving the right problem.
[09:50:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:56:56] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 252 seconds)
[09:58:04] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[09:58:06] <EvanR> I feel so dumb taking an hour on part 2
[09:58:11] <EvanR> stupid bugs
[09:58:49] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[09:59:56] <EvanR> on part 1, i momentarily checked if there was some algebraic jibber jabber that could solve x times not x without a computer xD
[10:00:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[10:01:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:03:24] <dmj`> c_wraith: did the same exact thing yesterday
[10:04:53] <dmj`> Part 2 you had to select the right column in the transpose, and then use that to filter out the rows from initial, and iterate until a single element.
[10:06:05] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[10:06:15] <EvanR> no point in transposing if your transpose is invalidated at each step xD
[10:13:59] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[10:17:05] <EvanR> opqdonut, after the first day, I got a 2 terminal setup where I had a source file where I could put functions, and ghci in the other that I :reload to test or just run the damn thing by typing main
[10:17:33] <int-e> :r works
[10:18:39] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[10:19:05] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[10:19:09] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[10:19:28] <EvanR> good call
[10:19:41] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[10:19:44] <EvanR> was hoping for a control + something combo xD
[10:22:15] <dmj`> EvanR: true, guess I only transpose on part 1
[10:23:14] <int-e> EvanR: I guess you could play with https://github.com/judah/haskeline/wiki/KeyBindings
[10:23:37] <int-e> (I've never done that though, not sure how well that works.)
[10:23:53] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[10:24:18] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:24:21] <int-e> https://github.com/judah/haskeline/wiki/KeyBindings is a better link
[10:24:51] <xerox> EvanR: if you're looking for compilation errors check out ghcid, it's beautiful
[10:25:05] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[10:26:21] <iqubic> HLS is also great too.
[10:38:00] <int-e> EvanR: hmm, this doesn't look so bad, though I do wonder why it doesn't recognize f5 out of the box for me: http://paste.debian.net/1221780/
[10:38:30] *** Quits: EvanR (~evan@user/evanr) (Remote host closed the connection)
[10:38:47] *** Joins: EvanR (~evan@2600:1700:ba69:10:87af:d76a:1197:e8dd)
[10:38:50] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[10:39:03] <int-e> there's also a blog post doing something similar, https://blog.rcook.org/blog/2018/ghci-custom-key-bindings/
[10:42:35] <dmj`> EvanR: despite it being invalidated, the transpose offers a convenient way to get a column, however inefficient.
[10:44:59] *** Joins: chele (~chele@user/chele)
[10:45:30] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at)
[10:46:13] *** Joins: imdoor (~imdoor@balticom-142-78-50.balticom.lv)
[10:57:17] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Write error: Connection reset by peer)
[10:57:34] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[10:58:51] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:00:31] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:00:50] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:02:30] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:02:48] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:04:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:04:44] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:05:20] *** Joins: michalz (~michalz@185.246.204.43)
[11:07:38] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[11:09:34] *** Joins: max22- (~maxime@2a01cb088335980065dae87f91b73dea.ipv6.abo.wanadoo.fr)
[11:11:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:11:32] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:11:51] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[11:12:35] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:12:47] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:acfd:d7bd:8c5c:5aef)
[11:12:53] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:14:58] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:15:16] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:16:42] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:54db:f79f:90dc:3ee5) (Ping timeout: 268 seconds)
[11:16:59] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:17:06] *** Joins: notzmv (~zmv@user/notzmv)
[11:17:18] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:19:07] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:21:05] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 252 seconds)
[11:21:46] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[11:22:25] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:24:53] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:25:11] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:26:06] *** Quits: n8ess163 (~b@pool-72-80-171-162.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:28:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:29:07] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:32:53] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[11:33:01] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:2293:2037:bf6e:4ea5)
[11:34:01] <siers> how can I write Endo (a, a) for (a -> a, a -> a)? I found uncurry bimap. But how do I do that for an 3-tuple or 4-tuple? Do I need something like scrap your boilerplate
[11:36:33] <siers> if I could turn tuples into lists with generic programming, then it's just a map (uncurry ($)) (zip funcTuple dataTuple)
[11:36:41] <dminuoso> Just do the pattern matching by hand?
[11:36:47] <siers> yes, that's an option
[11:36:53] <siers> just curious about how to do it generically
[11:37:02] <siers> I already wrote the version by hand :)
[11:37:07] <dminuoso> There's no elegant, expressive, idiomatic way to do it.
[11:37:19] *** Joins: jakalx (~jakalx@base.jakalx.net)
[11:37:52] <dminuoso> You can use any of: a) typeclass-based generic uncurry, b) Generic-based generic uncurry or c) TH-based uncurry
[11:38:26] <dminuoso> Though, you can use `lens` or `optics` if you want.
[11:38:34] <dminuoso> If you have these as dependencies already.
[11:38:54] <dminuoso> Both come with an Each typeclass that gives you that expressivity
[11:39:05] <dminuoso> For up to ~10 tuples I think
[11:40:05] <siers> wouldn't each be like map f list instead of map uncurry (zip a b)?
[11:40:46] <dminuoso> Functor does not work because of the kindness of the types
[11:40:59] <dminuoso> Also, you'd have to line up those tuples, you cant uniformly apply `f`
[11:41:10] <dminuoso> i.e. you want to compose component-wise
[11:41:32] <siers> right, that's why I'm saying Each shouldn't work
[11:42:18] <dminuoso> Sorry, with Ixed you could
[11:42:55] <dminuoso> Let me try and cook it up
[11:43:38] <dminuoso> Ah no, we'd need something like IEach
[11:44:02] <siers> I don't know so much about lens, but enough to make me suspect I couldn't do it with lens
[11:44:54] *** Joins: almight (~almight@103.142.31.135)
[11:45:37] <almight> Iam trying to run my haskell servant server in a docker container.
[11:45:38] <almight> FROM ubuntu
[11:45:38] <almight> WORKDIR /app
[11:45:39] <almight> RUN apt-get update
[11:45:39] <almight> RUN apt-get install libpq-dev -y
[11:45:40] <almight> RUN apt-get install ca-certificates -y
[11:45:40] <almight> #Copy the binary generated during build
[11:45:41] <almight> COPY --from=build /app/build_output .
[11:45:41] <almight> # Expose a port to run our application
[11:45:42] <almight> EXPOSE 8080
[11:45:42] <almight> # Run the executable
[11:45:43] <almight> CMD ./my-app-exe
[11:45:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:45:49] <almight> this here is stage 2 of my docker build
[11:46:04] <almight> the app works fine but none of the logs get printed
[11:46:09] <siers> 🤦🏼
[11:48:40] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:48:58] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:49:45] <dminuoso> siers: Okay I think we can do this.
[11:53:06] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:53:24] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:54:16] *** Quits: almight (~almight@103.142.31.135) (Quit: Client closed)
[11:54:54] *** Joins: vpan (~0@212.117.1.172)
[11:57:10] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:57:29] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:59:09] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:59:15] *** Quits: MasseR (~MasseR@51.15.143.128) (Quit: The Lounge - https://thelounge.chat)
[11:59:27] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:00:00] *** Joins: MasseR (~MasseR@51.15.143.128)
[12:01:40] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:01:58] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:02:00] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[12:02:59] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[12:08:09] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:08:27] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:08:34] <arahael> I'm looking for a `String -> Int -> Int` where the function converts the string as a number at a specified base to an int.
[12:08:56] *** Joins: vysn (~vysn@user/vysn)
[12:09:02] <arahael> Eg, `toInt "12341234" 4` should result in whatever is the correct value for that number in base 4.
[12:09:32] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[12:10:16] <iqubic> arahael: I assume this is for AoC? Is that right?
[12:10:24] <arahael> iqubic: Good guess. :)
[12:10:41] <xerox> :t readInt
[12:10:42] <lambdabot> Num a => a -> (Char -> Bool) -> (Char -> Int) -> ReadS a
[12:11:11] <dminuoso> % let x = ((+1), (+2)); y = ((+10), (+20)); (a, b) = x & indexing each %@~ (\i f -> fromJust (y ^? ix i)); in (a 0, b 0)
[12:11:11] <yahb> dminuoso: (10,20)
[12:11:12] <xerox> a build-your-own version
[12:11:20] <dminuoso> siers: ^- this is just a first version, notoriously unsafe with the fromJust
[12:11:22] <int-e> :t digitToInt
[12:11:23] <lambdabot> Char -> Int
[12:11:25] <arahael> xerox: That works nicely.
[12:11:30] <siers> dminuoso, is that with lens?
[12:11:33] <dminuoso> siers: Yes.
[12:11:53] <siers> ah, I think I know what it means
[12:12:00] <dminuoso> siers: this will work over two arbitrary Ixed even. Be sure to match arity, or you will get either a crash or mishbehave.
[12:12:07] <siers> right
[12:12:17] <dminuoso> The crash you can fix of course, the misbehaving not.
[12:12:46] <dminuoso> And I didnt compose, but that's just a small thing to fix.
[12:13:08] <dminuoso> % let x = ((+1), (+2)); y = ((+10), (+20)); (a, b) = x & indexing each %@~ (\i f -> f . fromJust (y ^? ix i)); in (a 0, b 0)
[12:13:08] <yahb> dminuoso: (11,22)
[12:13:20] <siers> kind of simple in hindsight, but that's because it's not safe :D
[12:13:35] <siers> cool
[12:13:46] <dminuoso> Well, you can cook up your own traversal that behaves safe if you want.
[12:13:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:8149:2184:782c:2882)
[12:14:00] <dminuoso> It's not too much extra work
[12:14:24] <dminuoso> siers: The cool thing here is that you can even do this across two incompatible types. Say compose a tuple of functions with a tree of functions.
[12:14:33] <dminuoso> As long as their arity matches, of course.
[12:14:49] <siers> haha, that is really whack
[12:15:35] <siers> what do you mean, a safe traversal? I don't understand at all what you might be hinting at
[12:15:49] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[12:16:46] *** Quits: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[12:16:49] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:acfd:d7bd:8c5c:5aef) (Ping timeout: 252 seconds)
[12:18:04] <dminuoso> Well so consider this:
[12:18:07] <dminuoso>  % let x = ((+1), (+2)); y = ((+10), (+20)); crazyCompose x y = x & indexing each %@~ (\i f -> f . fromJust (y ^? ix i)); in (0 &) <$> crazyCompose [(+1), (+2)] ((+10), (+20))
[12:18:09] <dminuoso> % let x = ((+1), (+2)); y = ((+10), (+20)); crazyCompose x y = x & indexing each %@~ (\i f -> f . fromJust (y ^? ix i)); in (0 &) <$> crazyCompose [(+1), (+2)] ((+10), (+20))
[12:18:09] <yahb> dminuoso: [11,22]
[12:18:23] <dminuoso> So this works fine, even composing a tuple of functions with a list of functions
[12:18:29] <dminuoso> But what if we mismatch arity?
[12:18:33] <dminuoso> % let x = ((+1), (+2)); y = ((+10), (+20)); crazyCompose x y = x & indexing each %@~ (\i f -> f . fromJust (y ^? ix i)); in (0 &) <$> crazyCompose [(+1), (+2), (+3)] ((+10), (+20))
[12:18:33] <yahb> dminuoso: [11,22,*** Exception: Maybe.fromJust: Nothing; CallStack (from HasCallStack):; error, called at libraries/base/Data/Maybe.hs:148:21 in base:Data.Maybe; fromJust, called at <interactive>:143:97 in interactive:Ghci48
[12:18:40] <dminuoso> % let x = ((+1), (+2)); y = ((+10), (+20)); crazyCompose x y = x & indexing each %@~ (\i f -> f . fromJust (y ^? ix i)); in (0 &) <$> crazyCompose [(+1), (+2)] ((+10), (+20), (+30))
[12:18:41] <yahb> dminuoso: [11,22]
[12:18:50] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[12:19:27] <dminuoso> So you could do something as naive as:
[12:19:29] <siers> ah, one that would bubble the Option to the top, you mean
[12:20:07] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[12:20:24] <dminuoso> well we can fix it like this for example
[12:20:27] <dminuoso> % crazyCompose x y = x & indexing each %@~ (\i f -> maybe f (f .) (y ^? ix i))
[12:20:27] <yahb> dminuoso: 
[12:20:35] <dminuoso> % 
[12:20:35] <yahb> dminuoso: 
[12:20:39] <dminuoso> % (0 &) <$> crazyCompose [(+1), (+2), (+3)] ((+10), (+20)
[12:20:39] <yahb> dminuoso: ; <interactive>:148:56: error: parse error (possibly incorrect indentation or mismatched brackets)
[12:20:45] <dminuoso> % (0 &) <$> crazyCompose [(+1), (+2), (+3)] ((+10), (+20))
[12:20:45] <yahb> dminuoso: [11,22,3]
[12:20:57] *** ehamberg_ is now known as ehamberg
[12:21:00] *** Joins: Erutuon (~Erutuon@user/erutuon)
[12:21:30] <dminuoso> Note that this type of "you have to make sure yourself" you have frequently in various lens combinators
[12:22:05] <dminuoso> For example:
[12:22:08] *** Quits: chele (~chele@user/chele) (Ping timeout: 252 seconds)
[12:22:14] <dminuoso> % "Sony Playstation" & partsOf (traverse . filtered isUpper) %~ reverse
[12:22:14] <yahb> dminuoso: "Pony Slaystation"
[12:22:22] <dminuoso> This is a pretty old and cool example.
[12:22:46] *** Joins: std_mutex[m] (~stdmutexm@2001:470:69fc:105::1:4534)
[12:22:53] <dminuoso> But what if we used set and mismatched arity?
[12:23:16] <dminuoso> % ('a', 'b', 'c') & partsOf each .~ ['A','B','C','D']
[12:23:16] <yahb> dminuoso: ('A','B','C')
[12:23:23] <dminuoso> % ('a', 'b', 'c') & partsOf each .~ ['A','B']
[12:23:23] <yahb> dminuoso: ('A','B','c')
[12:23:46] <dminuoso> siers: Note that this behaves similarly to crazyCompose, in fact.
[12:24:12] *** Joins: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net)
[12:24:18] <dminuoso> We probably could implement crazyCompose in terms of partsOf too
[12:24:45] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[12:24:51] <dminuoso> Heck, this could even be more expressible
[12:26:31] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:26:50] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:26:57] *** Joins: Escanor (~Escanor@103.142.31.135)
[12:27:00] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:27:17] *** Quits: Escanor (~Escanor@103.142.31.135) (Client Quit)
[12:27:39] <dminuoso> Oh yes!
[12:27:44] <dminuoso> % crazyCompose' x y = x & partsOf each %~ zipWith (.) (toListOf each y)
[12:27:44] <yahb> dminuoso: 
[12:27:47] <dminuoso> siers: ^- this is it.
[12:28:06] <dminuoso> % :t crazyCompose'
[12:28:06] <yahb> dminuoso: (Each a1 b1 (a2 -> b2) (a2 -> b2), Each s s (b2 -> b2) (b2 -> b2)) => a1 -> s -> b1
[12:28:15] <dminuoso> % (0 &) <$> crazyCompose [(+1), (+2), (+3)] ((+10), (+20))
[12:28:16] <yahb> dminuoso: [11,22,3]
[12:28:20] <dminuoso> Beautiful. :)
[12:28:24] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e85247d18c27da64632.dip0.t-ipconnect.de)
[12:30:44] *** Joins: chele (~chele@user/chele)
[12:32:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:33:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:34:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:35:07] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:37:00] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:37:18] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:38:35] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[12:41:22] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:41:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:45:20] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[12:45:37] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[12:47:10] *** Joins: dignissimus (~dignissim@88-104-68-62.dynamic.dsl.as9105.com)
[12:47:22] <dignissimus> I haven't used IRC in ages!
[12:47:27] <siers> not any more
[12:47:36] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:36] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:39] *** allbery_b is now known as geekosaur
[12:48:47] <dignissimus> I'm having trouble with today's advent of Code, the issue is monads. I'm just about to paste it somewhere, hopefully I can get some help
[12:49:41] <arahael> dignissimus: Have you considered doing it without monads? :)
[12:49:48] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:49:56] <merijn> I...may have overengineered my solution to part 1 >.>
[12:50:19] <arahael> merijn: So did I.  I had a really really clever implementation. :(
[12:50:30] <siers> I foldMaped into Endo's to do yesterday's :)
[12:50:38] <merijn> Mine is really unclever :p
[12:50:46] <arahael> merijn: In retrospect, so's mine. :D
[12:50:48] <siers> (apostrophe wasn't necessary)
[12:51:12] <xerox> arahael: do you put those online somewhere?
[12:51:16] <siers> did you two get all stars?
[12:51:38] <arahael> xerox: I haven't done mine yet. Actually still doing it, but it's slow - had to cook pizza, I was starving, and I'm sooo sleepy.
[12:52:19] <merijn> The description of part 2 seems to apply I can't just blindly collapse all predicate into one filter, because "stop at one" probably means if you apply all predicates your set will be empty
[12:53:31] <arahael> merijn: Yeah, I had to read it several times.
[12:54:29] <dignissimus> arahael: I'm too much of a beginenr to know if I don't have to XD
[12:54:40] <dignissimus> https://paste.tomsmeding.com/TTGkZhpo
[12:54:47] <dignissimus> This doesn't compile because of typing
[12:55:03] <dignissimus> The `map (\x -> ())` is me being very desperate
[12:55:26] <merijn> dignissimus: eh...have you considered no trying to have everything on a single line with no type annotations? xD
[12:55:32] <dignissimus> hmmmmmm
[12:55:38] <dignissimus> No XD
[12:55:54] <merijn> No wonder your errors are unhelpful :p
[12:56:02] <arahael> dignissimus: And also specify types - I'm not lookign at any possible solutions yet until I've submitted mine, but another tip is always to add types.
[12:57:48] <dignissimus> I think I can state my question as I have something of type IO String and I'd like to print it out
[12:58:13] <dignissimus> Also would the better way to write all that to create many functions?
[12:58:35] <dignissimus> Or is there syntax sugar I should probably use
[12:59:37] <merijn> Eh, just write out functions? in either where or just top level?
[13:03:55] <arahael> Ok, done mine.  Taking my contacts out, drinking port, and oh man, what a day.
[13:03:58] * arahael clicks on dignissimus's paste.
[13:04:37] <arahael> Oh, yeah.  Write a whole bunch of helper functions instead for that. :)
[13:05:29] <dminuoso> If you have to employ a horizontal scrollbar, its too much.
[13:06:27] <merijn> my Day2 solution is, like, 3 times that size :p
[13:07:04] <arahael> Mine is...  30 times merijn's size. :D
[13:07:17] <dminuoso> By merijn's size, do you mean in terms of characters of his name?
[13:07:29] <dminuoso> Or in terms of his physical height?
[13:07:40] * dminuoso is unsure
[13:07:57] <arahael> dminuoso: That's a strike against my implementation, seeing as I did it in literate haskell. It should have been clear! :(
[13:08:15] * arahael burns it.
[13:09:11] <arahael> merijn: I managed to not implement part of the specification, and I still got the correct answers. :/  I suspect I was "lucky".
[13:09:20] <arahael> (For day3)
[13:11:42] <merijn> oh, shite
[13:11:47] <merijn> I misread the 2nd part >.>
[13:14:30] * [exa] writes an oneliner on a 600col line
[13:14:35] <arahael> merijn: I ignored part of it and still got it right! So I still got my stars.
[13:14:53] <merijn> arahael: Naah, I just did the entirely wrong thing :p
[13:15:30] <arahael> merijn: Nice. :)  I'm really bad at code tonight so I'm pretty chuffed I got it done. :)  Only had one of my three coffees today. :(
[13:15:34] <arahael> Day was too busy.
[13:15:47] <arahael> (And if I disrupt my coffee intake, my tinnitus goes haywire)
[13:15:50] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at) (Quit: WeeChat 3.3)
[13:20:55] <merijn> bleh...the inelegant way is easy, but I can't quite get the elegant solution to work >.>
[13:21:52] <arahael> merijn: I do them all the inelegant way!  Less thinking involved!
[13:23:08] <arahael> Plus, the sooner I get AoC done, the sooner I can get into nethack again!
[13:27:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[13:28:08] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[13:28:36] *** Joins: x_kuru (~xkuru@user/xkuru)
[13:31:15] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[13:31:20] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:31:26] <dignissimus> I've solved it!!
[13:31:39] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at)
[13:31:47] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at) (Client Quit)
[13:34:04] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[13:34:21] <siers> merijn, as always
[13:34:22] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[13:35:15] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:36:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:36:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:38:30] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[13:38:49] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[13:38:54] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:715b:47ca:3928:db8d) (Remote host closed the connection)
[13:39:06] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[13:39:40] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:45] <arahael> dignissimus: Congrats!
[13:41:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:45:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[13:46:46] <merijn> Well, it works. But it sucks :p
[13:50:10] <arahael> I'm still pleasedd that mine worked for me. :)
[13:50:45] <arahael> The detail I ignored is the bias bit - ie, if you have equal 1's and 0's, you're supposed to pick one or the other.
[13:50:54] <arahael> I just went with whatever was the default for my algorithm.
[13:51:13] <arahael> Pretty sure I got the correct answer by luck.
[13:53:54] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[13:54:11] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[13:57:57] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[13:58:05] <merijn> I'm sure mine could've been way simpler, but I'm too foggy for that :p
[13:58:16] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[13:58:18] <merijn> arahael: https://github.com/merijn/AdventOfCode/blob/master/Day3.hs
[13:58:48] <arahael> merijn: Woah.  Let me show you mine.
[13:59:05] <arahael> https://github.com/arafangion/super-eureka/blob/main/app/Day3.md
[13:59:46] <arahael> merijn: As you can tell, I'm very very lazy today. On multiple counts. :)
[14:00:14] <arahael> Nice use of megaparsec, though.  I'm tempted to start using that, but blegh. Not tonight.
[14:00:43] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[14:01:34] <merijn> Not sure if Vector was worth the effort in the end :p
[14:01:47] <merijn> I was expecting a different twist in the 2nd part :p
[14:03:10] <arahael> Yeah, that's the trouble - impossible to predict. :)
[14:03:35] <arahael> I did mine the most lazy way I could think of.  As soon as I got the valid answer, I stopped.
[14:03:48] <arahael> Mine is particularly inefficient, I suspect.
[14:09:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:09:33] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:10:15] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:11:26] <hololeap> did anyone else use the NonEmpty comonad for day 1?
[14:12:47] *** Joins: wei2912 (~wei2912@116.88.103.128)
[14:12:49] <xerox> hololeap: what does that look like?
[14:13:09] <opqdonut> sooooo GHC 8.10 and windows, segfaults, anyone else bump into this? I just find the old bug that was fixed in 8.8.4
[14:13:58] <hololeap> xerox: http://sprunge.us/G6o22G
[14:14:04] *** Joins: mmhat (~mmh@55d45bca.access.ecotel.net)
[14:16:17] <xerox> :t (=>=)
[14:16:18] <lambdabot> error:
[14:16:18] <lambdabot>     • Variable not in scope: =>=
[14:16:18] <lambdabot>     • Perhaps you meant one of these:
[14:17:07] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[14:17:08] <hololeap> % import Control.Comonad
[14:17:08] <yahb> hololeap: 
[14:17:14] <hololeap> % :t (=>=)
[14:17:14] <yahb> hololeap: Comonad w => (w a -> b) -> (w b -> c) -> w a -> c
[14:17:20] <xerox> neat
[14:17:43] <xerox> do they use w because it's kinda of an upside down m
[14:17:49] <hololeap> yeah
[14:17:52] <xerox> hilarious
[14:18:30] <hololeap> % :t \f g -> extend (f =>= g)
[14:18:31] <yahb> hololeap: Comonad w => (w a -> b1) -> (w b1 -> b2) -> w a -> w b2
[14:18:38] <xerox> is there also pure :: a -> w a ?
[14:18:48] <hololeap> it's called extract
[14:18:52] <hololeap> % :t extract
[14:18:52] <yahb> hololeap: Comonad w => w a -> a
[14:18:53] <merijn> xerox: That's the wrong way around
[14:19:01] <merijn> xerox: it's "w a -> a"
[14:19:01] <hololeap> everything is reversed
[14:19:06] <xerox> I was wondering how the 'b' became 'w b'
[14:19:11] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:19:50] <merijn> tbh, my brain still doesn't grok comonad :p
[14:20:05] <dignissimus> merijn: Your solution looks amazing
[14:20:06] * arahael hands merijn some more wine.
[14:20:15] <hololeap> % :t duplicate
[14:20:16] <yahb> hololeap: Comonad w => w a -> w (w a)
[14:20:21] <dignissimus> arahael: I like your mostCommon implementation
[14:20:24] <xerox> cool
[14:20:40] <arahael> dignissimus: There's a bug in it.
[14:20:43] <hololeap> % :t \f fmap f . duplicate
[14:20:44] <yahb> hololeap: ; <interactive>:1:11: error: parse error on input `.'
[14:20:44] <xerox> so you expand the universe instead
[14:20:49] <hololeap> % :t \f -> fmap f . duplicate
[14:20:49] <yahb> hololeap: Comonad f => (f a -> b) -> f a -> f b
[14:21:07] <dignissimus> oh what's the bug?
[14:21:15] <arahael> dignissimus: have you done part 2 yet?
[14:21:23] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[14:21:30] <merijn> dignissimus: The goal is to keep them relatively simple for beginners :)
[14:21:42] <dignissimus> No, just part 1
[14:21:45] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[14:21:49] <arahael> dignissimus: There's no bug yet, then. :D
[14:21:49] <merijn> (But also, no "skip handling errors" shortcuts!)
[14:21:50] <dignissimus> I don't know if I want to do part 2 HAHAHAH
[14:21:52] <arahael> dignissimus: Keep going!
[14:22:10] <hololeap> whenever you read "sliding window", chances are comonads are a good fit
[14:22:15] <hololeap> at least in theory...
[14:22:24] <dignissimus> There's so much to read!
[14:22:27] <dignissimus> I might do it later
[14:22:51] <arahael> hololeap: What does Day2 look like using comonads, then? :)
[14:23:54] <merijn> hololeap: Whenever I read sliding windows I read "zip + drop" :p
[14:24:09] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[14:24:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[14:24:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[14:25:43] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[14:27:28] * arahael considers a third glass of port.
[14:29:08] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:29:26] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:33:34] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:33:52] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:35:32] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:35:50] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:36:29] <siers> merijn, but you needed to do it two times, I guess?
[14:36:44] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at)
[14:36:55] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-39.mrsn.at) (Client Quit)
[14:37:47] *** AlexNoo_ is now known as AlexNoo
[14:39:19] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[14:42:01] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[14:43:51] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Ping timeout: 252 seconds)
[14:46:05] *** Joins: kuribas (~user@ptr-25vy0i9sci02rkc3ssb.18120a2.ip6.access.telenet.be)
[14:48:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:48:54] *** Joins: namkeleser (~namkelese@101.175.102.188)
[14:49:09] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:50:49] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:51:07] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:52:47] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:53:05] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:54:45] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[14:55:03] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[14:55:14] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:56:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:01:00] <kuribas> I saw this book: https://www.manning.com/books/data-oriented-programming
[15:01:08] <kuribas> I wonder if it is applicable to FP?
[15:01:27] <kuribas> Or is it just another technique to make up for the lack of flexibility in OO.
[15:03:36] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:03:54] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:05:34] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:05:52] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:08:41] <dminuoso> I have two versions of a datatype, one that has `[(K, V)]` in one particular field, and the other uses `Map K V`.
[15:09:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:09:58] <dminuoso> I tried parametrizing this data type over type `LookupList k v = [(k, v]`, such that I'd have `type Validated = Skeleton Map` and `type Unvalidated = Skeleton LookupList`, but GHC wont accept that, it requires the type alias to be expanded
[15:10:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:28] <dminuoso> What other options do I have without using DataKinds + TyFams?
[15:10:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[15:11:06] <kuribas> dminuoso: newtypes?
[15:11:27] <dminuoso> Oh. Mmm.
[15:11:32] <dminuoso> Yeah I guess that works
[15:11:52] <kuribas> and some liberal use of "coerce".
[15:12:00] <kuribas> if needed.
[15:12:27] *** Quits: iqubic (~user@2601:602:9502:c70:7d14:3ce3:e8b8:8f59) (Ping timeout: 252 seconds)
[15:14:22] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:14:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:14:40] *** Quits: hrdl (~hrdl@mail.hrdl.eu) (Quit: Lost terminal)
[15:15:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:16:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:18:11] *** Joins: hrdl (~hrdl@mail.hrdl.eu)
[15:22:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:23:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:26:14] <dminuoso> % data Foo a = Foo { foo :: a }
[15:26:15] <yahb> dminuoso: 
[15:26:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:26:25] <dminuoso> % x = Foo { foo = 'c' }
[15:26:25] <yahb> dminuoso: 
[15:26:32] <dminuoso> % y = x{ foo = "bar" }
[15:26:32] <yahb> dminuoso: 
[15:26:43] <dminuoso> Im quite amazed this is possible. :)
[15:26:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:55] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e85247d18c27da64632.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[15:29:06] <dminuoso> For some reason I did not expect this to work
[15:29:31] *** Quits: dignissimus (~dignissim@88-104-68-62.dynamic.dsl.as9105.com) (Quit: Bye!)
[15:29:39] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[15:30:24] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[15:30:35] <hololeap> arahael: couldn't find a use for comonads on that one https://gist.github.com/hololeap/7bafa6592902de52fb7b4e2e9bedc1b8
[15:32:27] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a)
[15:32:33] <arahael> hololeap: Oh, I must've been thinking of day1. :(
[15:33:12] <arahael> hololeap: Interesting implementation - very production grade.
[15:34:18] <kuribas> dminuoso: polymorphic record update?
[15:35:42] *** Quits: retroid_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[15:36:04] *** Joins: retroid_ (~retro@97e2ba2e.skybroadband.com)
[15:37:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:38:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:38:19] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[15:40:30] <kuribas> % data Foo a = Foo { foo :: a, bar :: a}
[15:40:30] <yahb> kuribas: 
[15:40:47] <kuribas> % x = Foo { foo = 'c', bar = 'd' }
[15:40:47] <yahb> kuribas: 
[15:40:59] <kuribas> % y = x { foo = "bar"}
[15:40:59] <yahb> kuribas: ; <interactive>:171:15: error:; * Couldn't match type `[Char]' with `Char'; Expected: Char; Actual: String; * In the `foo' field of a record; In the expression: x {foo = "bar"}; In an equation for `y': y = x {foo = "bar"}
[15:44:58] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:45:16] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:46:14] <kuribas> yahb: good boye
[15:46:42] *** Joins: chisui (~chisui@2001:16b8:661d:7600:f248:3361:5fc2:82d9)
[15:48:56] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[15:48:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:49:14] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[15:49:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:50:06] <kuribas> what's so bad about BlockArguments?
[15:50:48] <geekosaur> many people seem to find them hard to read
[15:51:10] <siers> they can read haskell and it's this that trips them up? D:
[15:51:31] <hpc> they're just in it for the $
[15:52:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[15:52:22] <hololeap> lol
[15:52:56] <kuribas> siers: yeah, my thought also...
[15:53:40] <hpc> also, i find ruby's block arguments perfectly readable
[15:54:11] <hpc> so there's already an example of it not being an issue, once you go into it without preconceptions
[15:54:15] <geekosaur> admittedly ruby's are somewhat limited
[15:54:26] <hpc> sure, but they're structurally the same
[15:54:31] <siers> ruby is somehwat limited
[15:54:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:54:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:54:55] <hpc> function do block <=> function do block
[15:55:08] <hpc> function \arg -> block <=> function do |arg| block
[15:55:35] <hpc> function case expr of ... <=> function do lots of if-then-else block
[15:55:48] <hpc> etc
[15:56:03] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[15:57:27] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Quit: gone to sleep. ZZZzzz…)
[15:58:37] *** Joins: jakalx (~jakalx@base.jakalx.net)
[15:58:42] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[15:58:52] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[15:58:53] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[15:59:43] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Client Quit)
[15:59:54] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[16:00:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:00:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:02:17] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:02:48] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[16:03:19] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[16:04:31] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[16:05:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:06:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:08:06] *** Joins: alzgh (~alzgh@user/alzgh)
[16:08:49] <dminuoso>   pure UserNonValidated{..}{_unvPerms = PermSet{ .. }}
[16:09:12] <dminuoso> What a cute way to defeat faulty ApplicativeDo logic
[16:09:38] <dminuoso> Sadly this still triggers an undefined fields warning.
[16:11:18] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:11:36] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:11:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:12:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:13:12] *** Joins: Benzi-Junior (~BenziJuni@88-149-66-61.du.xdsl.is)
[16:15:34] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:15:52] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:17:32] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:17:49] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:21:52] *** Joins: _bo (~bo@79.171.122.236)
[16:23:32] *** Quits: max22- (~maxime@2a01cb088335980065dae87f91b73dea.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:26:41] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:26:58] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:30:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:31:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:32:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:33:08] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:34:48] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:35:06] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:36:46] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:37:04] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:37:20] *** Quits: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:38:36] <aplainzetakind> Does hls provided by ghcup have brittany?
[16:41:04] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:41:22] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:42:47] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[16:45:02] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:45:09] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[16:45:20] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:47:00] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:47:18] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:48:58] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[16:49:16] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[16:49:31] <jneira[m]> yeah, for all ghcs but 9.0.1
[16:50:59] <jneira[m]> ghcup downloads hls from hls repo releases
[16:52:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:57:02] <aplainzetakind> But that's just support and brittany itself needs to be installed right?
[16:59:46] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:00:04] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:01:07] *** Joins: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it)
[17:02:55] *** Joins: deadmarshal_ (~deadmarsh@68.235.32.241)
[17:03:45] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[17:05:33] *** Joins: Lycurgus (~juan@98.4.112.204)
[17:06:14] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[17:07:37] *** Joins: hololeap (~hololeap@user/hololeap)
[17:10:41] *** Joins: max22- (~maxime@2a01cb0883359800d8b0a223a3eaa461.ipv6.abo.wanadoo.fr)
[17:13:19] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:13:38] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:13:49] *** Quits: deadmarshal_ (~deadmarsh@68.235.32.241) (Ping timeout: 252 seconds)
[17:14:45] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[17:17:24] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:17:42] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:18:49] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Quit: gone to sleep. ZZZzzz…)
[17:21:18] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:21:36] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:23:16] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:23:34] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:24:09] *** Quits: alx741 (~alx741@181.196.68.155) (Ping timeout: 256 seconds)
[17:28:32] *** Joins: ph88 (~ph88@ip5f5af068.dynamic.kabel-deutschland.de)
[17:30:12] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:30:31] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:32:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:32:45] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:33:58] *** Quits: kritzefitz (~kritzefit@debian/kritzefitz) (Remote host closed the connection)
[17:34:35] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[17:35:17] *** Joins: kritzefitz (~kritzefit@debian/kritzefitz)
[17:35:39] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[17:36:07] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[17:36:33] *** Joins: alx741 (~alx741@186.178.108.253)
[17:38:56] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:39:58] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[17:43:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:45:29] *** Joins: ether_ (~a@p200300ef970235268185de4e61219232.dip0.t-ipconnect.de)
[17:47:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[17:53:37] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[17:55:17] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[17:55:36] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[17:56:59] *** Quits: imdoor (~imdoor@balticom-142-78-50.balticom.lv) (Quit: imdoor)
[17:57:27] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:04:43] *** Quits: ether_ (~a@p200300ef970235268185de4e61219232.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[18:05:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[18:05:19] *** Quits: Feuermagier_ (~Feuermagi@2a02:2488:4211:3400:b6fd:ec18:acf6:f1a8) (Quit: Leaving)
[18:05:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[18:08:26] <zincy> Is it just me or is state machine testing with Hedgehog a pretty nasty experience
[18:08:49] <zincy> Using Vars is tricky
[18:10:36] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:10:53] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:12:33] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:12:51] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:13:51] *** Joins: zebrag (~chris@user/zebrag)
[18:16:03] <[exa]> zincy: perhaps testing state machines with anything is a nasty experience in general
[18:16:18] <zincy> Yeah it is hard
[18:16:38] *** Joins: mud (~mud@user/kadoban)
[18:21:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:22:09] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:23:18] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:25:14] *** Joins: alzgh (~alzgh@user/alzgh)
[18:30:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:30:44] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:32:16] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[18:33:10] <kuribas> oh, "s" will popup a searchbox!
[18:33:19] <kuribas> (in hackage)
[18:36:40] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:36:57] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:37:25] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[18:37:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[18:39:26] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:40:33] <maerwald> yeah... it's a bit rough though
[18:41:23] *** Joins: alzgh (~alzgh@user/alzgh)
[18:42:25] *** Joins: ether_ (~a@p200300ef970235b38185de4e61219232.dip0.t-ipconnect.de)
[18:43:38] <kuribas> Better than nothing?
[18:44:03] *** Quits: chisui (~chisui@2001:16b8:661d:7600:f248:3361:5fc2:82d9) (Quit: Client closed)
[18:47:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:47:44] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:49:24] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:49:42] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:50:13] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[18:52:43] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[18:54:11] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[18:54:16] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[18:54:22] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[18:54:46] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[18:55:12] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[18:55:19] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[18:55:26] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[18:55:56] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[18:56:17] *** Joins: cheater (~Username@user/cheater)
[18:57:22] *** Quits: vpan (~0@212.117.1.172) (Quit: Leaving.)
[18:59:12] *** Quits: EvanR (~evan@2600:1700:ba69:10:87af:d76a:1197:e8dd) (Quit: Leaving)
[19:01:44] *** Joins: EvanR (~evan@user/evanr)
[19:02:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:03:12] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[19:05:30] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[19:05:49] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:08:39] <merijn> maerwald: Is there any language that has something better?
[19:08:51] <ether_> I want to do a in place QuickSort. Do I need STM?
[19:09:04] <merijn> ether_: Not necessarily
[19:09:05] <maerwald> merijn: rust
[19:09:10] *** Joins: jakalx (~jakalx@base.jakalx.net)
[19:09:27] <merijn> ether_: But you do need some form of mutability (STM, IO, or ST)
[19:10:01] <merijn> ether_: And probably want to use Vector (assuming you weren't already)
[19:10:36] <ether_> merijn: Which is used normally? STM IO or ST?
[19:11:25] <merijn> ether_: IO (if you're already in IO anyway) or ST
[19:11:53] <merijn> ether_: ST is nice, because you can encapsulate it in pure code
[19:11:59] <ether_> Is STM used if I try to parallelize quicksort?
[19:12:39] <merijn> ether_: You could, but I don't think there's currently any STM vectors/arrays (or at least, I'm not aware of one)
[19:12:43] <merijn> Could be a neat project
[19:13:45] <ether_> Is parallel quicksort possible with ST (sorry, still a beginner)?
[19:13:55] *** Joins: jgeerds (~jgeerds@55d45b75.access.ecotel.net)
[19:14:06] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 245 seconds)
[19:14:19] <merijn> ST is only single-threaded
[19:14:32] <merijn> One of the reasons you can encapsulate it in pure code :p
[19:14:51] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:15:20] *** Joins: fizbin_ (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[19:15:33] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[19:15:54] <ether_> Ok, so first project could be in sort quicksort with st. And parallel quicksort is not possible right now.
[19:16:29] <merijn> ether_: Sort is actually a nice example of this. Consider: a function that has "list goes in" -> "sorted list goes out" is pure, even if you use mutability inside *IFF* you can guarantee no one can observe your mutability outside that function call
[19:17:07] <merijn> Because, how could you even tell if it used mutability internally?
[19:17:15] <ether_> So it's ok because the mutability is local.
[19:17:24] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[19:17:46] <merijn> ether_: The ST monad allows mutable references inside it, but statically prevents any of the mutability leaking out of scope
[19:18:32] <merijn> ether_: Which is why (unlike IO) there is a (safe!) "unST :: ST a -> a" function (type is a partial fib, because the type is slightly more complicated)
[19:19:08] *** Joins: samhh (7569f027cf@2604:bf00:561:2000::e4)
[19:19:45] <ether_> If nobody else knows about it and nobody else can use it then mutability is ok :-)
[19:20:17] *** Joins: n8ess163 (~b@pool-72-80-171-162.nycmny.fios.verizon.net)
[19:21:16] <merijn> For more details than you ever wanted to know about ST (and pure mutability), this is a good explanation of how it works: https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.45.3718&rep=rep1&type=pdf
[19:22:28] *** Quits: xsperry (~xs@user/xsperry) ()
[19:22:30] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[19:22:45] <geekosaur> mutability is ok as long as nothing else can prove you did it :)
[19:23:58] <merijn> @hackage vector
[19:23:58] <lambdabot> https://hackage.haskell.org/package/vector
[19:24:27] <merijn> ether_: The Vector package's Mutable modules support ST based reads/writes of vectors
[19:24:47] <merijn> Actually...I think i used that for AoC in 2019, maybe I have an example :p
[19:24:55] <ether_> How does Haskell solve parallel mutable array access if ST is single threaded and there is no STM vector?
[19:25:17] <merijn> Ah, no, I did it using IO :)
[19:25:55] <merijn> ether_: I mean, vector is just a library, there's nothing that prevents you from implementing an STM vector, I just don't think anyone has, because designing a good API is hard
[19:25:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[19:26:08] *** Joins: hiruji (~hiruji@user/hiruji)
[19:26:13] <merijn> ether_: IO based Vector can be used in a parallel setting, though
[19:26:28] <merijn> ether_: There's also "sparks" which allow for pure parallelism too
[19:26:48] <merijn> Simon Marlow's "Parallel & Concurrent Haskell" book explain those, iirc
[19:27:49] <ether_> Is this the normal model with threads and locks?
[19:27:51] <merijn> You could even make a regular vector of individual TVar's that you can then update individually
[19:28:13] <merijn> ether_: The IO approach would just be the regular threads and locks kinda deal, yeah
[19:29:46] <merijn> ether_: sparks are entirely different, in that they're basically "deterministic parallelism". Consider the example of "map (*2) someList", it is (obviously) safe to perform the multplications in parallel, because obviously no one can tell whether you did or not. But I don't think there is a lot of stuff written about how to use sparks effectively, though
[19:30:08] <merijn> I think Athas was playing with them for a class a while back, but I dunno if he has any pointers
[19:30:08] *** Quits: xosdy[m] (~xosdyalet@2001:470:69fc:105::31f7) (Quit: You have been kicked for being idle)
[19:30:21] *** Joins: xosdy[m] (~xosdyalet@2001:470:69fc:105::31f7)
[19:30:22] *** Parts: xosdy[m] (~xosdyalet@2001:470:69fc:105::31f7) ()
[19:30:46] <ether_> I don't know much about mutability and parallelism in Haskell. My idea was to make a parallel in place quicksort to learn real world Haskell better. But I think this is too advanced for me. I will try the in place ST quicksort though.
[19:32:10] <EvanR> how about immutability and parallelism
[19:32:49] <EvanR> https://hackage.haskell.org/package/parallel-3.2.2.0/docs/Control-Parallel.html
[19:32:58] <merijn> ether_: Parallel & Concurrent Haskell is a very nice book for getting familiar with the basic parallelism/concurrency primitives in GHC
[19:33:26] <merijn> ether_: But a single-threaded ST and/or IO based first implementation is probably an easier starting point
[19:33:46] <merijn> Also, allow me my usual hot take: Why quick sort, the worst of all sorts? :p
[19:34:27] <merijn> A pox upon whoever thought of that name, misleading generations of programmers into thinking it's a good sort >.>
[19:38:28] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[19:38:40] <ether_> I like merge sort better too. It's just an excuse for using parallel mutable arrays in haskell. an then i have an answer to the people who say haskell's quicksort is not a real quicksort. and it's only toy language
[19:38:55] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[19:39:13] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:39:20] *** Quits: nabaiste^ (~nabaiste@68.101.58.90) (Remote host closed the connection)
[19:39:42] <merijn> You can do parallel merge sort too ;)
[19:39:42] *** Joins: notzmv (~zmv@user/notzmv)
[19:39:56] *** Quits: n8ess163 (~b@pool-72-80-171-162.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[19:40:25] <merijn> Even in-place! (Well, with constant extra memory...)
[19:40:46] <merijn> Although that implementation is a bit harder
[19:41:35] *** Quits: xff0x (~xff0x@2001:1a81:5394:4100:b17b:62d7:7f1e:4d8a) (Ping timeout: 252 seconds)
[19:42:02] <merijn> ether_: tbh, a proper mutable quicksort should be easy enough. In IO you can probably do it right now, just looking at the Mutable vector API: https://hackage.haskell.org/package/vector-0.12.3.1/docs/Data-Vector-Mutable.html#g:10
[19:42:20] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:42:31] <merijn> (Just pretend 'PrimState m' says either 'IO' or 'ST')
[19:42:41] *** Joins: xff0x (~xff0x@2001:1a81:5394:4100:724:71c4:c7ef:b5ba)
[19:43:34] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[19:45:30] <ether_> merijn: thank you
[19:49:39] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:49:58] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[19:52:23] *** Joins: alzgh (alzgh@user/alzgh)
[19:52:30] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:2293:2037:bf6e:4ea5) (Quit: WeeChat 2.8)
[19:53:31] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: Leaving)
[19:53:54] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[19:57:50] *** Joins: son0p (~ff@181.136.122.143)
[20:01:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:02:19] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:02:27] *** Joins: erts (~erts@user/erts)
[20:02:58] *** Quits: ubert (~Thunderbi@p200300ecdf0ba299f01739553a033620.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:02:59] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[20:03:15] *** Joins: Techcable (~Techcable@168.235.93.147)
[20:03:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:03:35] *** Joins: fef (~thedawn@user/thedawn)
[20:04:56] *** Joins: ubert (~Thunderbi@p200300ecdf0ba299e6b318fffe838f33.dip0.t-ipconnect.de)
[20:05:39] *** Quits: chele (~chele@user/chele) (Ping timeout: 256 seconds)
[20:06:53] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[20:09:15] *** Parts: erts (~erts@user/erts) (.)
[20:10:11] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:10:24] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:12:04] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:12:22] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:12:59] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[20:13:53] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[20:17:19] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[20:17:33] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[20:19:16] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[20:20:33] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[20:22:15] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Quit: Leaving)
[20:22:26] *** Quits: wei2912 (~wei2912@116.88.103.128) (Quit: Lost terminal)
[20:22:43] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[20:23:09] *** Quits: _bo (~bo@79.171.122.236) (Read error: Connection reset by peer)
[20:25:39] *** Quits: ubert (~Thunderbi@p200300ecdf0ba299e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:30:25] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Quit: Konversation terminated!)
[20:32:54] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[20:33:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:34:22] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:35:07] *** Quits: jgeerds (~jgeerds@55d45b75.access.ecotel.net) (Ping timeout: 256 seconds)
[20:35:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:37:22] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:38:43] *** Quits: Unhammer (~Unhammer@user/unhammer) (Ping timeout: 250 seconds)
[20:40:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:42:19] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Quit: gone to sleep. ZZZzzz…)
[20:43:54] *** Quits: ether_ (~a@p200300ef970235b38185de4e61219232.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[20:50:07] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:51:00] *** Joins: econo (uid147250@user/econo)
[20:52:17] *** Joins: Unhammer (~Unhammer@user/unhammer)
[20:53:57] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:59:46] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[21:00:53] *** Joins: zaquest (~notzaques@5.130.79.72)
[21:02:37] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 252 seconds)
[21:05:41] <EvanR> I rewrote my day3 part2 solution so it only goes through the original list once
[21:05:57] <EvanR> and other lists once
[21:06:28] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:07:45] *** Quits: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[21:08:56] *** Joins: fabfianda (~fabfianda@mob-5-90-243-109.net.vodafone.it)
[21:11:48] *** Quits: fabfianda (~fabfianda@mob-5-90-243-109.net.vodafone.it) (Read error: Connection reset by peer)
[21:11:50] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:11:57] *** Joins: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it)
[21:13:06] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[21:18:19] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:21:17] <EvanR> does my use of seq seem cromulent here https://paste.tomsmeding.com/TA5yfS2w
[21:21:46] <dsal> EvanR: Maybe BangPatterns would be clearer?
[21:21:53] <EvanR> would it?
[21:22:34] <dsal> I find `seq` weird.  Though you're keeping the part you're not working with a bit lazier.  I can't tell if that's intentional or not.
[21:23:06] <EvanR> if I don't add 1, there's nothing to seq...
[21:23:41] <EvanR> basically I am thinking it gets evaluated the next time a + comes up
[21:23:51] <dsal> If you did bang patterns, you'd declare both it for both z and o.
[21:24:02] <EvanR> yes that's what I originally had
[21:24:21] <EvanR> maybe that's better for the compiler
[21:24:36] <dsal> I'd think you'd want them all evaluated by the end, so having thunks along the way probably isn't helping you.
[21:25:33] <dsal> I don't know how this stuff optimizes, though.  Conceptually, it doubles the `seq`s.  For those kinds of things, I just let the a profiler or benchmark guide me.
[21:26:10] <dsal> But the use of seq here looks like what I'd think seq would make sense for.  I just almost never use it.
[21:27:14] <EvanR> I guess it's less noisy https://paste.tomsmeding.com/NdDixLWt
[21:27:51] <EvanR> so now the function is more strict? :thonk:
[21:28:25] <EvanR> before the tuple can be scrutized, the sums are done
[21:28:51] <EvanR> so infinite lists are out right xD
[21:29:51] <dsal> I don't think this has any effect on infinite lists, does it?  (other than the part where you don't terminate until you get to the end)
[21:29:57] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:30:15] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:30:48] <EvanR> if you try to use part on an infinite list, now you can't possibly get the first item from either partition (or anything in the tuple at all, the tuple can't exist)
[21:31:20] <boxscape> EvanR: personally I'd use LambdaCase here, as in https://paste.tomsmeding.com/XKupxSUx - just to avoid having to write all those arguments/bang patterns twice
[21:31:58] <EvanR> that's real slick
[21:34:01] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[21:34:35] <EvanR> sorry, the tuple can't exist anyway since there is no end
[21:34:38] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[21:35:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:38:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:42:31] *** Joins: rkrishnan (~user@122.171.92.146)
[21:42:57] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 252 seconds)
[21:42:59] *** Quits: rkrishnan (~user@122.171.92.146) (Remote host closed the connection)
[21:46:39] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:47:11] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Read error: Connection reset by peer)
[21:48:24] *** Joins: hiruji (~hiruji@user/hiruji)
[21:50:07] *** Joins: deadmarshal (~deadmarsh@68.235.38.176)
[21:52:51] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[21:53:03] *** Joins: shiraeeshi[m] (~shiraeesh@2001:470:69fc:105::1:77)
[21:54:03] *** Quits: kuribas (~user@ptr-25vy0i9sci02rkc3ssb.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:00:47] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[22:01:33] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:59] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a)
[22:02:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:02:58] *** Quits: res0nat0r8 (~Fletch@dia.whatbox.ca) (Ping timeout: 268 seconds)
[22:04:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[22:04:58] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a)
[22:05:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[22:09:27] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Quit: Konversation terminated!)
[22:13:19] *** Quits: deadmarshal (~deadmarsh@68.235.38.176) (Read error: Connection reset by peer)
[22:15:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:23:22] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[22:25:49] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[22:26:45] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a) (Remote host closed the connection)
[22:27:57] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:30:17] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Remote host closed the connection)
[22:33:13] *** Quits: hololeap (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[22:34:02] *** Quits: max22- (~maxime@2a01cb0883359800d8b0a223a3eaa461.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:34:32] *** Joins: hololeap (~hololeap@user/hololeap)
[22:35:49] <boxscape> https://wiki.haskell.org/Idiom_brackets has some ugly typeclass hackery to approximate idiom brackets, but here's what I'm wondering: It introduces a mechanism to insert joins anywhere in an applicative sequence, e.g. `join (f <$> x <*> y) <*> z`. Is this commonly useful? I've never felt the need to use join in such a context
[22:36:27] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[22:36:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:25] <EvanR> while applicativing you could possibly feel the urge to monad
[22:39:09] *** Quits: nautical (~nautical@2601:602:900:1630::396f) (Quit: WeeChat 3.3)
[22:39:14] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a)
[22:40:46] <awpr> that particular approach looks a bit inscrutable to me based on a short look, but as for the urge to introduce joins: if you have a monadic API where it's reasonable to think about expression trees of monadic actions rather than "imperative" sequences of actions, then joins show up at every level of nesting
[22:41:55] <boxscape> hm, I see
[22:43:03] <awpr> e.g. if you have a DSL where each operation is constructed by a monadic action: `add, mul :: p Int -> p Int -> DSL p (p Int)` and `lit :: Int -> DSL p (p Int)`, then imperative-style looks a bit unwieldy: `do { x <- lit 2; y <- lit 4; z <- lit 6; xy <- add x y; xyz <- mul xy z }`
[22:44:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[22:45:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[22:45:17] <awpr> and expression style with only the stuff in `base` is unwieldy, too: `join (mul <$> (join (add <$> lit 2 <*> lit 4)) <*> lit 6)`   (so unwieldy that I probably got it wrong, but it gets the idea across)
[22:45:40] <boxscape> okay, yeah, that makes sense, thanks
[22:47:15] <awpr> my preferred way to deal with that is an operator `=*< :: Monad m => m (a -> m b) -> m a -> m b` that does both the `<*>` and the `join` together, so: `mul <$> (add <$> lit 2 =*< lit 4) =*< lit 6`
[22:48:00] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:654a:7e1b:4ab5:b4bb)
[22:48:27] *** Joins: tfeb (~tfb@88.98.95.237)
[22:48:30] <boxscape> ah, neat
[22:49:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[22:49:32] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[22:49:38] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:49:41] <awpr> there was some discussion of this operator a while ago, and I think ski preferred a different name for the same operator.  I don't remember what that name was, though, something with multiple stars or extra angle brackets like `<***>` or `<<*>>` or something
[22:50:40] <boxscape> okay
[22:51:20] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:8149:2184:782c:2882) (Ping timeout: 252 seconds)
[22:51:46] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[22:52:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[22:52:59] *** Quits: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[22:53:43] *** Joins: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it)
[22:54:01] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 256 seconds)
[22:56:15] <boxscape> I suppose in Idris you could write `mul !(add !(lit 2) !(lit 4)) !(lit 6)` (haven't done Idris in years though)
[22:57:57] <awpr> hmm, I do remember Idris having that kind of notation, but I'm unsure whether it implicitly joins the subexpressions or whether it's only for applicative-style expressions
[22:58:22] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[22:58:56] <boxscape> the documentation is https://idris2.readthedocs.io/en/latest/tutorial/interfaces.html#notation
[23:01:54] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:02:21] <awpr> so the exclamation point syntax was replaced with bracket notation in idris2?  as far as I can tell that doesn't appear to handle the joins for you, only the applicative part
[23:03:28] <boxscape> awpr: erm, not sure but I don't it was replaced? Since the link points to !-notation of idris 2
[23:03:32] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[23:03:32] *** Joins: max22- (~maxime@2a01cb0883359800e7fc8fc683bf0760.ipv6.abo.wanadoo.fr)
[23:03:48] <boxscape> (they've had idiom brackets in parallel)
[23:04:06] <awpr> oh, I missed that.  I was on the same docs page already and just assumed the link was to the section I was reading
[23:04:10] <boxscape> s/don't/don't think
[23:04:32] <boxscape> fair
[23:04:38] *** Joins: puke (~puke@user/puke)
[23:05:27] <awpr> ok yeah, that looks like it probably does behave how you'd want for this sort of nested joins
[23:05:38] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:05:38] <boxscape> right, okay
[23:08:06] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:08:24] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:09:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[23:09:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:12:04] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:12:22] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:14:02] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:14:20] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:15:20] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:15:39] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:15:58] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[23:16:59] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[23:19:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:19:44] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:21:30] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:23:03] *** Joins: nvmd (~nvmd@user/nvmd)
[23:28:32] *** Joins: xsperry (~xs@user/xsperry)
[23:32:14] <zincy_> Anyone know how to fix this type error? https://gist.github.com/therewillbecode/b181a9951f2b6309a64cc88c65fc0acc
[23:35:03] <monochrom> Ugh, is this analogous to the beginner mistake of "x :: forall a. a; x = False"?
[23:35:09] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 252 seconds)
[23:35:14] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:36:52] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[23:37:07] <zincy_> monochrom: Why is that a mistake?
[23:37:28] <zincy_> oh because a isn't instantiated
[23:37:39] <dmj`> ^ that and you're also saying v on GPlayers is the same as v on GToAct. One is a Maybe, the other a Vector. 
[23:37:44] <monochrom> "x :: forall a. a" means that user of x --- that's me --- chooses whichever type I want for "a".
[23:38:03] *** Joins: simendsjo (~user@84.211.91.241)
[23:38:04] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:05] <monochrom> So, what if I choose to use x in "x + 4"?
[23:38:37] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:44] <zincy_> dmj`: Hmm I thought v had to be the same here 
[23:39:10] <zincy_> Since v is just carrying info about whether we are at "runtime" or "execution" time
[23:40:05] <zincy_> monochrom: then x :: Int
[23:40:14] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[23:40:23] <dmj`> zincy_: you're right, I read it as Vector v, and not Vector (Var a v)
[23:40:23] <monochrom> Yes.
[23:40:36] <monochrom> I can have (x::Int) + length (x::String).
[23:40:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:41:00] <monochrom> So whoever wrote "x = False" was not understanding "forall".
[23:41:41] <zincy_> Is rankNTypes about "delaying" the choosing?
[23:41:49] <monochrom> No.
[23:42:21] <monochrom> RankNTypes is about allowing "forall" in more places, most notably more nesting.
[23:42:49] <monochrom> For example "(forall a. a) -> Int" which is intuitively "exists a. a -> Int"
[23:44:02] <monochrom> "foo :: exists a. a -> Int" means that the provider of foo chooses "a". Therefore the user doesn't choose.
[23:44:12] <monochrom> The opposite of "forall a. a -> Int"
[23:44:32] <monochrom> The same can be said of "foo2 :: (forall a. a) -> Int"
[23:44:43] <zincy_> So the choice of parameter instantiation is inverted
[23:44:44] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[23:45:01] <zincy_> Well who chooses producer/consumer
[23:45:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[23:46:11] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[23:46:30] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:47:14] <boxscape> much like in `f :: (String -> Int) -> Int`, f gets to choose which String to use, but in `f :: String -> (Int -> Int)`, the caller of f gets to choose which String to use
[23:47:20] <monochrom> Programming is the dialectic class struggle between the producer and the consumer.
[23:48:40] <zincy_> haha
[23:49:43] <zincy_> monochrom: Do you find CT fruitful for programming?
[23:49:59] <monochrom> No.
[23:50:09] <monochrom> Why CT?
[23:50:28] <monochrom> I lied. Sometimes yes.
[23:50:30] *** Joins: __monty__ (~toonn@user/toonn)
[23:50:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:50:59] <monochrom> https://link.springer.com/chapter/10.1007%2F978-3-662-54434-1_21 is an example I recently found.
[23:51:12] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[23:51:31] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a)
[23:51:38] <boxscape> I just recently watched Conal Elliott's talk about compiling to categories, which I think is another good example
[23:51:42] <monochrom> A little bit of representable functor to explain why APL makes so much sense, and it doesn't have to be just arrays.
[23:51:58] <zincy_> I hear type theory is more useful
[23:52:58] <zincy_> boxscape: How is there a choice about which String to use are you talking about which value of type String?
[23:53:10] <monochrom> Yes.
[23:53:11] <boxscape> yes, which value of type String
[23:53:21] <zincy_> Ah ok
[23:57:26] *** Joins: iqubic (~user@2601:602:9502:c70:f6f0:c69f:f066:4465)
