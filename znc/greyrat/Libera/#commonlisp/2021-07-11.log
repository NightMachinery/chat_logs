[00:01:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[00:05:19] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[00:06:56] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[00:12:02] *** Joins: pjb (~pjb@user/pjb)
[00:15:54] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[00:17:35] *** Joins: akoana (~ah@user/akoana)
[00:24:36] <char> shka: That took me a bit to understand, but I think I get it now. It is neat, but I don't think it is right for this project, since once of the goals is that non-tail-recursive functions should still function properly.
[00:28:02] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[00:30:49] *** Quits: kpoeck42 (~kpoeck@87.140.194.0) (Ping timeout: 246 seconds)
[00:33:37] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[00:42:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[00:44:52] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:46:25] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:51:00] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Read error: Connection reset by peer)
[00:52:08] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[01:11:06] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[01:13:15] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[01:13:51] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[01:20:54] *** Quits: ggoes (~gregf@user/ggoes) (Quit: WeeChat 2.3)
[01:22:44] *** Joins: ggoes (~gregf@user/ggoes)
[01:31:33] *** Quits: mariari (~mariari@user/mariari) (Quit: WeeChat 3.2)
[01:32:08] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[01:32:19] *** Joins: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com)
[01:34:32] *** Quits: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[01:37:32] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 255 seconds)
[01:39:55] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 268 seconds)
[01:40:32] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[01:49:20] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 265 seconds)
[01:55:31] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[01:59:30] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[02:02:27] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:04:56] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[02:10:34] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca)
[02:11:30] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[02:17:46] *** Quits: nature (~nature@mail.blazebone.com) (Quit: Lost terminal)
[02:19:31] *** Joins: selwyn_ (~selwyn@user/selwyn)
[02:19:41] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:22:20] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 252 seconds)
[02:25:35] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[02:28:35] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:32:18] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[02:33:09] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 258 seconds)
[02:44:08] *** Joins: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd)
[02:50:42] *** Quits: joeyxl (~joeyxl@2607:fea8:339f:d8a0:e5c0:e465:f863:43dd) (Ping timeout: 240 seconds)
[02:55:00] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Remote host closed the connection)
[02:55:39] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[03:02:27] *** Joins: srhm (~ascii@user/srhm)
[03:11:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca) (Ping timeout: 265 seconds)
[03:13:47] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 258 seconds)
[03:20:45] *** Quits: lotuseater (~user@p200300e787091b00dd87cc9c4ffe1d4b.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[03:21:50] *** Quits: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[03:21:56] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 255 seconds)
[03:24:17] *** Joins: deckard (~deckard@ec2-3-129-211-221.us-east-2.compute.amazonaws.com)
[03:29:44] *** Joins: pve_ (~pve@37-33-6-13.bb.dnainternet.fi)
[03:30:17] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[03:33:11] *** Quits: pve (~pve@87-93-251-224.bb.dnainternet.fi) (Ping timeout: 255 seconds)
[03:35:25] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[03:37:41] *** Joins: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[03:37:58] *** Quits: pve_ (~pve@37-33-6-13.bb.dnainternet.fi) (Quit: leaving)
[03:38:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 244 seconds)
[03:38:52] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[03:39:59] *** Quits: rgherdt (~rgherdt@ip5f5af43c.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:56:23] *** Quits: random-nick (~random-ni@87.116.179.201) (Ping timeout: 252 seconds)
[04:10:47] *** Joins: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com)
[04:13:18] *** Joins: Oladon (~olad@98.43.81.226)
[04:15:20] *** Joins: IAmRasputin (~ryan.gann@c-71-192-113-162.hsd1.ma.comcast.net)
[04:17:44] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 255 seconds)
[04:20:22] *** Quits: IAmRasputin (~ryan.gann@c-71-192-113-162.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[04:21:11] *** Quits: svillemot (~sebastien@rama.villemot.name) (Quit: WeeChat 3.0)
[04:21:22] *** Joins: svillemot (~sebastien@rama.villemot.name)
[04:22:24] *** Quits: luis (~luis@lisp/luis) (Ping timeout: 258 seconds)
[04:24:49] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:30:23] *** Joins: mariari (~mariari@user/mariari)
[04:31:14] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 255 seconds)
[04:41:15] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[04:47:49] *** Quits: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[04:57:11] *** Joins: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[05:09:40] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[05:09:55] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[05:31:43] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:40:27] *** Joins: srhm (~srhm@user/srhm)
[05:40:32] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 255 seconds)
[05:46:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[06:07:55] *** Joins: beach` (~user@2a01:cb19:150:3400:f6c1:2990:be56:e904)
[06:11:54] *** Quits: beach (~user@2a01:cb19:150:3400:4b61:8432:27c1:6ac0) (Ping timeout: 240 seconds)
[06:17:06] *** Joins: JoshYoshi (~user@143.244.54.31)
[06:17:08] *** Quits: JoshYoshi (~user@143.244.54.31) (Remote host closed the connection)
[06:18:07] *** Quits: Josh_2 (~user@37.25.47.130) (Ping timeout: 246 seconds)
[06:26:41] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[06:30:08] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:34:30] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[06:36:38] *** Joins: jp (~jp@24-233-185-117.miami.fl.bluestreamcable.net)
[06:38:31] *** Joins: ldb (~user@user/ldb)
[06:38:39] <ldb> goodmorning
[06:54:00] *** Joins: Devon7 (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[06:54:16] *** Quits: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 272 seconds)
[06:54:47] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 255 seconds)
[06:55:08] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[06:55:17] *** Devon7 is now known as Devon
[07:00:58] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[07:09:53] *** Joins: Devon7 (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[07:09:55] *** Quits: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 246 seconds)
[07:11:30] <kakuhen> good evening
[07:13:04] *** Quits: Devon7 (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Client Quit)
[07:14:23] *** Joins: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net)
[07:14:42] *** Devon is now known as Devon7
[07:14:49] *** Devon7 is now known as Devon
[07:18:55] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Remote host closed the connection)
[07:21:21] *** beach` is now known as beach
[07:22:31] *** ChanServ sets mode: +o beach
[07:23:55] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 246 seconds)
[07:25:08] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[07:25:37] *** beach sets mode: -o beach
[07:29:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:30:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[07:31:35] <beach> Good morning everyone!
[07:34:00] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[07:34:39] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[07:37:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:41:20] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[07:41:45] *** Joins: amb007 (~a_bakic@99.106.204.77.rev.sfr.net)
[07:42:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[07:59:18] *** Quits: jp (~jp@24-233-185-117.miami.fl.bluestreamcable.net) (Quit: Client closed)
[08:00:16] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:03:45] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:03:55] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:04:41] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[08:07:49] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Remote host closed the connection)
[08:08:12] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[08:10:37] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Remote host closed the connection)
[08:11:45] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[08:18:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:28:23] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 255 seconds)
[08:33:02] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[08:33:46] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[08:56:30] <leo_song> pjb: thanks, the only concern is just related to the mitm attack, I'm wondering the if the quicklisp check the signature of the dists or packages.
[08:58:59] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[09:00:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:03:51] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 265 seconds)
[09:04:15] *** Joins: Mandus (~aasmundo@85.112.154.250)
[09:04:50] *** Quits: ldb (~user@user/ldb) (Ping timeout: 255 seconds)
[09:10:04] *** Joins: ldb (~user@user/ldb)
[09:15:30] *** Quits: ldb (~user@user/ldb) (Ping timeout: 272 seconds)
[09:16:21] *** Joins: ldb (~user@user/ldb)
[09:17:34] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 258 seconds)
[09:19:33] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[09:30:19] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (*.net *.split)
[09:30:19] *** Quits: hirez- (~hirez@2602:ffc5:20::1:512e) (*.net *.split)
[09:30:19] *** Quits: markasoftware (~quassel@107.161.26.124) (*.net *.split)
[09:30:19] *** Quits: sukaeto (~sukaeto@sharona.moonpearltech.com) (*.net *.split)
[09:30:19] *** Quits: thonkpod (~thonkpod@user/thonkpod) (*.net *.split)
[09:30:19] *** Quits: loke (~loke@junk.nocrew.org) (*.net *.split)
[09:30:33] *** Joins: sukaeto (~sukaeto@sharona.moonpearltech.com)
[09:30:49] *** Joins: markasoftware (~quassel@107.161.26.124)
[09:30:54] *** Joins: thonkpod (~thonkpod@2001:19f0:ac01:b46:5400:1ff:fec7:d73d)
[09:30:57] *** Quits: thonkpod (~thonkpod@2001:19f0:ac01:b46:5400:1ff:fec7:d73d) (Signing in (thonkpod))
[09:30:57] *** Joins: thonkpod (~thonkpod@user/thonkpod)
[09:31:15] *** Joins: hirez (~hirez@2602:ffc5:20::1:512e)
[09:32:26] *** Joins: loke (~loke@junk.nocrew.org)
[09:42:06] *** Quits: amb007 (~a_bakic@99.106.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[09:42:15] *** Joins: amb007 (~a_bakic@99.106.204.77.rev.sfr.net)
[10:03:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[10:05:42] *** Joins: dsk (~dsk@user/dsk)
[10:11:08] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[10:24:34] <MichaelRaskin> leo_song: how strong is your threat model? I think it checks hashes, but it seems to only use weak hashes…
[10:25:31] <leo_song> if it has some signature mechanism, I'll be happy
[10:25:34] <leo_song> :-(
[10:33:03] <MichaelRaskin> Well, signatures don't add that much over strong checksums downloaded over a safer connection (or verified across two connections)
[10:33:22] <MichaelRaskin> But checksums used are not strong
[10:34:15] <moon-child> how weak is weak?
[10:34:42] <moon-child> md4 weak, or sha1 weak?
[10:39:39] <MichaelRaskin> Hmm, weird, I am now not sure it actually checks the checksums
[10:40:06] <MichaelRaskin> It has a sha1 and and md5 for releases, but I cannot find where it checks either
[10:43:07] *** Joins: pjb (~pjb@user/pjb)
[11:08:02] *** Quits: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[11:21:40] *** Joins: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com)
[11:40:32] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 255 seconds)
[11:45:53] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[11:52:56] *** Joins: treflip (~user@95.79.32.99)
[12:01:26] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:03:30] *** Joins: pve (~pve@188-67-212-101.bb.dnainternet.fi)
[12:07:38] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[12:15:38] *** Joins: shka (~herr@109.231.62.239)
[12:22:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[12:25:08] *** Joins: rgherdt (~rgherdt@ip5f5af43c.dynamic.kabel-deutschland.de)
[12:28:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 258 seconds)
[12:36:34] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:46:24] *** Quits: amb007 (~a_bakic@99.106.204.77.rev.sfr.net) (Ping timeout: 272 seconds)
[12:46:42] *** Joins: amb007 (~a_bakic@108.104.204.77.rev.sfr.net)
[12:48:08] *** Joins: utis (~utis@telia-5908af-225.connect.netcom.no)
[12:48:35] <utis> is there a library that can convert an xml document to an sexp?
[12:51:52] <shka> utis: yes, but usually using selectors is handier
[12:52:28] *** Quits: samebchase (~samebchas@51.15.68.182) (Quit: The Lounge - https://thelounge.chat)
[12:52:37] <utis> shka: ok, i had a look at lquery, but i guess i don't know enough about xml to make sense of the documentation
[12:52:56] <shka> lquery is excellent
[12:53:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:53:29] <shka> gimme a second, i will show you blog post with good example
[12:54:16] <utis> shka: thanks!
[12:54:22] <shka> html is not exactly the XML but you should get the point https://lispcookbook.github.io/cl-cookbook/web-scraping.html
[12:55:10] *** Quits: leo_song (~leo_song@1.156.52.78) (Ping timeout: 268 seconds)
[12:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[12:55:41] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: akanouras (~akanouras@user/akanouras) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: luis` (~luismboma@2001:470:69fc:105::cc7) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[12:55:47] *** Quits: JooTvora[m] (~joaotavor@2001:470:69fc:105::b9ad) (Quit: Bridge terminating on SIGTERM)
[12:55:52] *** Quits: etimmons (~etimmons@2001:470:69fc:105::5d5) (Quit: Bridge terminating on SIGTERM)
[12:56:01] *** Lord_of_Life_ is now known as Lord_of_Life
[12:56:40] <shka> utis: anyway, for just parsing xml you would want just plump
[12:58:07] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[12:58:48] *** Joins: leo_song (~leo_song@1.156.52.78)
[12:59:29] *** Quits: utis (~utis@telia-5908af-225.connect.netcom.no) (Read error: Connection reset by peer)
[13:00:09] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[13:00:09] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[13:00:09] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[13:00:09] *** Joins: akanouras (~akanouras@user/akanouras)
[13:00:09] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[13:00:09] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[13:00:09] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[13:00:21] *** Joins: luis` (~luismboma@2001:470:69fc:105::cc7)
[13:00:21] *** Joins: JooTvora[m] (~joaotavor@2001:470:69fc:105::b9ad)
[13:01:13] *** Quits: amb007 (~a_bakic@108.104.204.77.rev.sfr.net) (Ping timeout: 246 seconds)
[13:01:46] *** Joins: amb007 (~a_bakic@82.196.23.93.rev.sfr.net)
[13:09:37] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 246 seconds)
[13:29:59] *** Joins: selwyn (~selwyn@user/selwyn)
[14:00:15] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:03:24] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[14:03:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:07:42] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[14:35:14] *** Joins: utis_ (~utis_@telia-5908af-225.connect.netcom.no)
[14:40:18] *** Joins: nature (~nature@mail.blazebone.com)
[14:46:52] *** Joins: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it)
[14:47:13] <utis_> Looked at plump, but when i evaled the sexps in the doc, (serialize *)   Says no applicable meth   and with root as arg, it returns nil (sry abt the messed up kbd
[14:53:14] *** Quits: utis_ (~utis_@telia-5908af-225.connect.netcom.no) (Quit: Client closed)
[14:54:24] *** Joins: utis_ (~utis_@telia-5908af-225.connect.netcom.no)
[14:57:33] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[14:59:17] *** Joins: random-nick (~random-ni@87.116.179.201)
[15:00:34] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:05:23] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[15:06:20] *** Quits: utis_ (~utis_@telia-5908af-225.connect.netcom.no) (Quit: Client closed)
[15:07:41] *** Joins: samebchase (~thelounge@51.15.68.182)
[15:11:12] *** Joins: utis_ (~utis_@telia-5908af-225.connect.netcom.no)
[15:18:21] *** Quits: utis_ (~utis_@telia-5908af-225.connect.netcom.no) (Quit: Client closed)
[15:23:06] <nature> Hi all! In my current project I have made a `run.lisp` file which contains three s-exp, `(asdf:make...)(in-package ...)(start-server)` and when I want to start working on it I open emacs, open this run.lisp and compile each s-exp one by one and have to wait for the previous to finish before compiling the next one. Once I reach the `(start-server)` I can finally start working on my project.
[15:23:37] <nature> This workflows seems suboptimal, is my intuition correct?
[15:24:20] <nature> If yes, what should I do to improve/automate a bit more my bootstraping of development
[15:26:30] <pve> nature: ideally you'd want to run those automatically when you start slime
[15:26:38] <susam> nature: How about C-c C-l to load the entire run.lisp file in one shot?
[15:27:01] <pve> nature: let me show you my setup
[15:27:47] <pjb> nature: (define-symbol-macro run (load "run.lisp")) in your rc file, and just type  run RET in the REPL!
[15:29:47] *** Joins: utis_ (~utis_@telia-5908af-225.connect.netcom.no)
[15:35:44] *** Quits: utis_ (~utis_@telia-5908af-225.connect.netcom.no) (Quit: Client closed)
[15:36:49] <pve> nature: Here's what I use. It can obviously be improved on, but works well enough for me.
[15:36:52] <pve> https://plaster.tymoon.eu/view/2548
[15:37:43] <pve> nature: the idea is to visit a "session" lisp file (like the one you have) and call M-x pve-slime-and-load-this-file
[15:40:32] <pve> I have an "easy-menu" with an entry for that, but you could also just bind it to a key
[15:44:36] <_death> may want to check out defslime-repl-shortcut
[15:47:56] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:50:49] *** Quits: amb007 (~a_bakic@82.196.23.93.rev.sfr.net) (Ping timeout: 265 seconds)
[15:51:30] *** Joins: amb007 (~a_bakic@193.18.23.93.rev.sfr.net)
[15:51:48] <nature> susam: That's another thing that puzzles me, when I do C-c C-k it fails, I thought C-c C-l would fail too, but I just tried and it works... I am not sure I understand well enough the diff between compilation and loading of files
[15:53:55] <susam> nature: What failure do you see with C-c C-k? I believe the failure would be to do with the fact that the file is unable to compile neatly perhaps due to some existing definitions in your REPL?
[15:54:04] <nature> pjb: which rc file are you talking about? I haven't customized much regarding my dev environment yet
[15:54:28] <susam> nature: I just use C-c C-l to load the entire file. Never had issues with it. Find it quite straightforwrad, in fact.
[15:54:31] <_death> compilation and loading is separate.. when run.lisp is compiled, the asdf form is compiled, but not evaluated.. because the system is not loaded, the package is not available, and in-package (which sets *package* during compile time) fails
[15:54:51] <nature> susam: the failure comes from the fact that the `(in-package ..)` targets a package that doesn't exists, as if sexp where not compiled sequentially
[15:55:13] <susam> nature: That makes sense.
[15:55:17] <nature> aaaaah, makes sense, thanks
[15:55:25] *** Joins: dsk (~dsk@user/dsk)
[15:58:31] <_death> nature: if you're using sbcl, there is ~/.sbclrc .. if you want your code uses slime/swank, there's ~/.swank.lisp
[15:58:55] <_death> -you want
[15:58:59] <pjb> nature: each implementation uses its own rc file.  In each of them, I have (load (merge-pathnames (make-pathname :directory '(:relative "RC") :name "COMMON" :type "LISP" :case :common) (user-homedir-pathname) nil))
[15:59:11] <pjb> nature: so I can put all my common lisp initialization in ~/rc/common.lisp
[16:00:47] <nature> pve: thanks for showing your setup
[16:01:06] <nature> _death: pjb: Okok I see
[16:01:32] <pjb> nature: more can be seen at http://github.com/informatimago/rc/
[16:01:35] <nature> But the idea of having a "run.lisp" is not completely alien then?
[16:01:42] <pjb> nature: it is not.
[16:01:54] <pjb> you have to make things practical for yourself.
[16:01:55] <nature> It's just a matter of how you run that file
[16:02:02] <nature> I see
[16:02:38] <pjb> nature: the lisp REPL is like emacs: you can write lisp code to customize it.
[16:03:08] <pve> nature: no problem
[16:05:46] <pve> nature: in many of my session files, the last expression is something like (asdf:test-system "my-system), which means I lazily end up hitting F7 all the time to restart my slime session and rerun the tests in a fresh image :)
[16:07:50] *** Joins: utis_ (~utis_@telia-5908af-225.connect.netcom.no)
[16:08:13] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[16:10:57] *** Quits: utis_ (~utis_@telia-5908af-225.connect.netcom.no) (Client Quit)
[16:11:56] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[16:17:25] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:24:13] <nature> Thank you all :)
[16:46:50] *** Quits: amb007 (~a_bakic@193.18.23.93.rev.sfr.net) (Ping timeout: 258 seconds)
[16:47:17] *** Joins: amb007 (~a_bakic@37.105.23.93.rev.sfr.net)
[16:57:55] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[17:02:40] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:07:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[17:35:58] *** Quits: amb007 (~a_bakic@37.105.23.93.rev.sfr.net) (Ping timeout: 252 seconds)
[17:36:51] *** Joins: amb007 (~a_bakic@187.251.23.93.rev.sfr.net)
[17:37:28] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:39:21] *** Joins: frgo (~frgo@p200300deef181d00ac44e00ba785ec23.dip0.t-ipconnect.de)
[17:53:15] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:57:23] <beach> So, we (mainly scymtym) have started working on Well-Specified-Common-Lisp (WSCL, pronounce it as "whistle") the purpose of which is to specify many more currently unspecified situations in the standard.  This work will be done in the form of X3J13 "issues" so that they integrate nicely into the specification.
[17:57:37] <beach> So I wrote this one: https://github.com/s-expressionists/wscl/blob/main/wscl-issues/proposed/aref-accessor-type-error and I could use some help.  We are asking people with access to implementations other than SBCL to check the behavior of the test cases in those implementations, add that to the document, and send us a pull request.  Thanks in advance.
[17:57:38] <beach> Other remarks are welcome too, of course.
[18:11:11] <beach> Oh, I should add that the key problem here is:
[18:11:18] <beach> clhs 1.4.4.3
[18:11:19] <specbot> The ``Arguments and Values'' Section of a Dictionary Entry: http://www.lispworks.com/reference/HyperSpec/Body/01_ddc.htm
[18:12:14] <beach> "Except as explicitly specified otherwise, the consequences are undefined if these type restrictions are violated."
[18:12:43] *** Joins: kpoeck (~kpoeck@87.140.195.0)
[18:26:22] *** Quits: kpoeck (~kpoeck@87.140.195.0) (Ping timeout: 246 seconds)
[18:32:04] *** mingus_ is now known as mingus
[18:35:21] *** Joins: kpoeck (~kpoeck@87.140.195.0)
[18:37:35] <jcowan> beach: Well, I think this is a substantive change to the spec and should not be made lightly at all.  There are a great many such cases, and I assume that this one is a trial ballon.
[18:37:40] <jcowan> balloon, even
[18:39:58] <jcowan> First, the term SHOULD means this (per RFC 2119; ISO style guide is similar):  "SHOULD   This word, or the adjective "RECOMMENDED", mean that there may exist valid reasons in particular circumstances to ignore a  particular item, but the full implications must be understood and carefully weighed before choosing a different course."  So it is stronger than people often suppose.
[18:40:30] <beach> The error terminology is specified.
[18:41:12] <beach> clhs 1.4.2
[18:41:12] <specbot> Error Terminology: http://www.lispworks.com/reference/HyperSpec/Body/01_db.htm
[18:41:19] <jcowan> Next, consider a "C-style CL compiler" (or in principle any compiler with (declare (optimize (compilation-speed 3) (safety 0) (debug 0)))
[18:41:25] *** Quits: kpoeck (~kpoeck@87.140.195.0) (Ping timeout: 246 seconds)
[18:41:35] <beach> jcowan: I am not making it "lightly".
[18:41:52] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca)
[18:41:54] <beach> The error terminology means "in safe code".
[18:42:26] <beach> And, as I have said before, the purpose is to document existing practice, and not to introduce new practice.
[18:43:52] <beach> And, yes, there are many cases like this, so many situations in the current standard where the behavior is undefined.  I consider that unfortunate for a language that is considered "safe".
[18:44:15] <jcowan> In that case using "issue" format defineitely suggests to me that a change is proposed, if only in some indefinite future.
[18:45:07] <beach> I have clearly stated that the purpose is to define a separate standard called WSCL.
[18:46:04] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:46:16] <beach> And I have clearly stated that the purpose is that every major implementation of Common Lisp should already be a conforming implementation of WSCL, barring strange exceptions of course.
[18:46:22] <jcowan> The definition of "an error should be signaleds" is a bit curious: it defines the term, but the example is for "should signal an error"  Obviously examples are not normative unless they are claimed to be (I've fought that battle in the Scheme community).
[18:47:02] <beach> Thank you!  Would you mind writing an "issue" for that terminology?
[18:47:12] <jcowan> (I mean, *I* know about the passive transformation, but "grep" does not.)
[18:50:46] <scymtym> jcowan: the use of the X3J13 issue format will allow annotating WSCL with issue references in a similar way to how CLHS is annotated with references to X3J13 issues. that way, changes compared to the draft specification will be clearly indicated and also come with a rationale and possibly discussion
[18:52:53] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[18:56:39] <shka> ... someone should make "Evil Common Lisp" using the undefined behavior space to specify the most confusing and weird semantics while still being pure ANSI superset
[18:57:06] <shka> the opposite of WSCL
[18:58:12] <beach> BOCL might come close. :)
[18:58:23] <shka> i wonder how bizarre this could get
[18:58:30] <beach> A lot.
[18:59:13] <beach> (aref 234 0) => Some standard class gets redefined.
[18:59:20] <shka> :D
[18:59:32] <shka> oh yes, aref
[18:59:46] <shka> we don't need stinking type checks
[18:59:50] <beach> That's what this "issue" that I posted is about.
[19:04:07] <jcowan> Demons can fly out of your nose, that's how bizarre.
[19:04:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[19:05:37] <shka> Hieronymus Bosch
[19:07:54] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 240 seconds)
[19:10:55] <jcowan> In protest against he considered an excessive amount of "MUSTard" in the Scheme R6RS, Will Clinger threatened to have a mode of his compiler Larceny which implemented the R6RS strictly but uselessly.  IIRC the only float was 0.0, for example, and strings wre limited to 50 characters or so.  Eventually Will took the simpler step of resigning from the editorial committee and taking his name off the spec.
[19:12:06] *** Quits: amb007 (~a_bakic@187.251.23.93.rev.sfr.net) (Ping timeout: 272 seconds)
[19:12:14] <shka> jcowan: this really happened?
[19:12:50] <jcowan> In the sense that he wrote a post saying he would do it, yes.  In the sense that he actually added such a mode, I *think* not.
[19:13:22] <jcowan> The result is that the R6RS does not have any terminology like "is an error", unlike the R[57]RS.
[19:13:39] <jcowan> As such, it favors portability over interoperability.
[19:15:42] <shka> so it wa effective
[19:18:17] *** Joins: lotuseater (~user@p200300e787091b00dd87cc9c4ffe1d4b.dip0.t-ipconnect.de)
[19:19:32] <jcowan> A standard without UB?  Yes.
[19:19:39] *** Joins: zacts (~zacts@user/zacts)
[19:19:58] <jcowan> But I recommend reading section 1 of Clinger's paper at http://andykeep.com/SchemeWorkshop2015/papers/sfpw1-2015-clinger.pdf
[19:20:12] <jcowan> It's about the general tension between portability and interoperability.
[19:21:26] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[19:22:26] <jcowan> Also this passage from the Larceny manual:  "Larceny is R6RS-compatible but not R6RS-conforming. When Larceny is said to support a feature of the R6RS, that means the feature is present and will behave as specified by the R6RS so long as no exception is raised or expected. Larceny does not always raise the specific conditions specified by the R6RS, and does not perform all of the checking for portability problems that is
[19:22:26] <jcowan> mandated by the R6RS. These deviations do not affect the execution of production code, and do not compromise Larceny’s traditional safety."
[19:38:23] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca)
[19:50:25] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[19:53:39] *** Joins: zacts (~zacts@user/zacts)
[20:04:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[20:13:35] *** Joins: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi)
[20:20:08] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[20:21:38] *** Joins: zacts (~zacts@user/zacts)
[20:28:06] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[20:50:25] *** Joins: IPmonger (~IPmonger@172.58.203.173)
[20:50:40] *** Quits: IPmonger (~IPmonger@172.58.203.173) (Remote host closed the connection)
[20:54:02] *** Quits: Devon (~user@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 255 seconds)
[20:57:56] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-10-70-54-112-49.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[20:58:36] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[21:04:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:08:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[21:13:56] <jcowan> beach: I don't want to write issues (spec writing is hard, and Scheme consumes my energy).  But I will mention two other points:
[21:14:37] <jcowan> 1) There seems to me no reason why all the relevant functions shouldn't just be enumerated in a single changeset.  People are unlikely to vote for aref and against vref.
[21:15:24] *** Joins: reb (~brown@2603-7000-d93b-e900-9955-145f-7a53-2b25.res6.spectrum.com)
[21:15:28] <jcowan> 2) I note that except in the special phrases we've been talking about, "must/should/may/must not/should not" don't seem to be defined anywhere.  Perhaps they belong in the glossary.  RFC 2119 is a good source of well-tested definitions.
[21:18:25] <jcowan> and to recap so they are all in the same place, 3) eliminate the discrepancy between "an error should be signaled" and "should signal an error"
[21:19:11] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:23:14] *** Joins: kpoeck (~kpoeck@87.140.193.0)
[21:32:11] *** Joins: dsk (~dsk@user/dsk)
[21:35:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca)
[21:37:35] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[21:51:51] *** Joins: pjb (~pjb@user/pjb)
[21:52:07] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[22:15:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-156.dsl.bell.ca) (Ping timeout: 272 seconds)
[22:18:58] <shka> jcowan: wait a second
[22:19:05] *** Joins: amb007 (~a_bakic@187.251.23.93.rev.sfr.net)
[22:19:12] <shka> there is a technical difference between these two statements?
[22:19:49] <jcowan> One is defined on the error terminology page, but the other is used in the only example given there.
[22:20:00] *** Joins: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca)
[22:20:19] <shka> i was scarred there for a minute
[22:20:51] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[22:23:44] *** Quits: peterhil (~peterhil@mobile-access-5672d5-10.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:34:46] <jcowan> I would be too
[22:37:05] <jcowan> It's not often used in either guise: "should signal" gets 16 hits in the Body pages, "should be signaled" gets 5.
[22:42:52] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 252 seconds)
[22:45:49] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:51:18] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[22:53:42] *** Joins: char (~Srain@cpe-76-186-124-165.tx.res.rr.com)
[23:17:59] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[23:18:54] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[23:20:54] *** Quits: paulapatience (~paul@23-233-104-4.cpe.pppoe.ca) (Ping timeout: 258 seconds)
[23:25:29] *** Quits: joeyxl (~joeyxl@cpea84e3fc46da3-cma84e3fc46da0.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[23:31:58] *** Quits: mariari (~mariari@user/mariari) (Quit: WeeChat 3.2)
[23:32:10] *** Joins: mariari (~mariari@user/mariari)
[23:40:12] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 268 seconds)
[23:45:03] *** Quits: cage (~cage@dynamic-adsl-78-15-46-179.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[23:59:47] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
