[00:08:48] <ash_worksi> olle: what do you mean
[00:08:49] <ash_worksi> ?
[00:09:24] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[00:10:55] *** Quits: guidoc (~guido@151.57.180.148) (Quit: WeeChat 3.2)
[00:16:31] <olle> ash_worksi: the internal implementation, in the engine.
[00:20:25] *** Quits: inoas (~ionas@aftr-37-201-194-213.unity-media.net) (Quit: Leaving...)
[00:21:08] <__adrian> ash_worksi: depends on context
[00:21:27] <__adrian> serialize(), i doubt. that's usually the wrong thing to rely on.
[00:21:53] <__adrian> json, or maybe just an id (a (natural?) primary key sort of thing) might be fine
[00:27:09] *** Quits: maroloccio (~marolocci@37.100.40.252) (Quit: WeeChat 3.0)
[00:29:42] *** Quits: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch) ()
[00:33:01] *** Joins: junktext (~junktext@77.247.181.211)
[00:34:05] *** night_wulfe_ is now known as night_wulfe
[00:37:17] *** Quits: junktext (~junktext@77.247.181.211) (Ping timeout: 250 seconds)
[00:40:47] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:40:58] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:47:38] *** Joins: junktext (~junktext@109.201.152.171)
[00:49:27] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[00:55:55] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[00:58:49] *** Joins: Tach (~Tach@user/tach)
[00:59:43] <ash_worksi> __adrian: thanks
[01:02:15] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[01:10:19] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Leaving)
[01:10:40] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[01:11:07] *** Quits: genom (~g@37.214.44.252) (Remote host closed the connection)
[01:11:57] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Client Quit)
[01:12:14] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[01:16:23] *** Bitflux is now known as Byteflux
[01:28:48] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[01:29:01] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[01:31:05] *** Joins: alexia (~Alexia@81-11-16-190.fibertel.com.ar)
[01:31:21] <alexia> Good afternoon, a bit of a newbie question (I'm taking a course on php)
[01:31:21] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) ()
[01:31:30] <alexia> how can I echo the result or content of a function?
[01:31:38] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:33:17] <__adrian> echo
[01:33:29] *** Quits: Northwoods (~Northwood@103.223.8.125) (Ping timeout: 248 seconds)
[01:33:40] <__adrian> assuming the return value is a string or can be converted to string
[01:36:12] <alexia> https://pastebin.ubuntu.com/p/JwBZ5YYFQ2/
[01:36:22] <alexia> I'd like to echo the result of that function
[01:36:41] <__adrian> that function returns an array.
[01:36:58] <alexia> I haven't got that far in the course yet haha
[01:36:59] <__adrian> it doesn't make sense to echo an array.
[01:37:38] <__adrian> so, you have (seems) an array of strings. think of it like a list of lines.
[01:38:33] <__adrian> if you want to echo each line, then you might   foreach(getOSInformation() as $line) { echo $line, "\n"; }
[01:38:52] <__adrian> you could also _assign_ the return value to a variable, using =
[01:38:57] <__adrian> $lines = getOSInformation();
[01:39:05] <__adrian> foreach($lines as $line) { echo $line, "\n"; }
[01:39:16] <alexia> Interesting! let me try
[01:39:40] <alexia> I won't bother you asking what does the foreach function do I'll read on it in a bit
[01:39:48] <__adrian> it's avery easy answer
[01:40:09] <__adrian> foreach  iterates over an array.  _for each item in the array, do {something}_.
[01:40:10] <alexia> I just want to comprehend what every little thing does and why so I get a good knowledge as I go learning
[01:40:30] <alexia> ahhh perfect. Makes sense
[01:40:56] <__adrian> foreach is the most common type of loop you'll end up using in php. like, 95% of the time, if not more.
[01:42:17] <__adrian> bbl
[01:43:02] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:43:33] <alexia> Thank you! Take care
[01:44:11] *** Joins: Northwoods (~Northwood@103.223.8.125)
[01:44:55] <relipse> What is a good way to practice full stack developer questions geared for a PHP developer
[01:45:31] <alexia> I'm actually doing a full stack course and we have just begun with php. We did html, css, javascript, bootstrap first
[01:45:38] <alexia> (frontend)
[01:46:08] <relipse> Url?
[01:46:41] <alexia> oh it's in real life. A paid one in an institute nearby. But I'm sure there are dozens of places which offer a similar course in your area of residence
[01:48:13] <relipse> I need to study to prepare for an interview
[01:54:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[01:57:07] *** Quits: olle (~olle@mue-88-130-56-098.dsl.tropolys.de) (Ping timeout: 240 seconds)
[01:58:12] <__adrian> bummer how so many people think of interviews like a "test"
[02:03:20] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) ()
[02:03:30] <lord4163> aren't they? mini exams about data structures and algorithms?
[02:03:41] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[02:04:34] <__adrian> if you have a php interview that focuses on algos, the company is a little off-target
[02:05:00] <__adrian> but point is: interviews are about meeting each other and deciding if you want to work with each other
[02:05:16] <__adrian> i.e., the interview belongs to YOU as much as it does to the company.
[02:05:36] <alexia> yeah but I guess some people, usually the worker, is at a great disadvantage, because at the end of the day what you want is money
[02:05:55] <__adrian> programming is a buyer's market
[02:06:15] <__adrian> if you're good at programming, even if you're just a beginner, you can get a job.
[02:06:42] <Albright> Hmm. I don't think it's quite that way anymore, especially in web dev.
[02:06:51] <Albright> Too many of us now.
[02:07:24] <__adrian> if the company treats you like a commoddity, then you're either applying for a job out of your ability range, or the employer is crap and you should go somewhere else.
[02:07:44] <__adrian> Albright: there are crap companies where it's not true, yes.
[02:08:52] <Albright> I mean, I don't think being just a beginner dev with only academic experience will land you a great job anymore.
[02:08:52] <alexia> I guess it depends on the job and your country. Here its quite hard to land a good job without references
[02:09:27] <Albright> I have fourteen years of professional experience and an IT degree and I'm having trouble finding new client work for the last couple years.
[02:09:55] <Albright> Even though my rates are well under market for that level of experience.
[02:09:59] <__adrian> > new client work  // finding clients is different too
[02:10:07] <alexia> freelance?
[02:10:26] <Albright> I think the whole "networking" thing is very important too, and that's something I'm very bad at. I'm trying to improve.
[02:10:32] <Albright> But it's taking conscious effort.
[02:10:38] <__adrian> freelancing, yeah, there's a lot of effort involved in not being treated like garbage.
[02:10:51] <__adrian> this is part of why i don't freelance anymore  :p
[02:11:00] <alexia> I am a linux jr analyst, but I work for a bank, not on my own. i don't know if I would dare to quit and go freelancing. But I'm almost 40. It's hard to get a job at this age
[02:11:06] <alexia> I agree with that
[02:11:07] <__adrian> it's lots and lots of work outside of the actual fun part.
[02:11:57] <alexia> I'm learning php just for the joy of learning something new. I don't think I'd get a financial redit out of this
[02:12:43] <biberu> alexia: learning php, or learning programming?
[02:13:30] <__adrian> re: freelancing v. garbage: raise your rates, fire bad clients.
[02:13:47] <__adrian> sounds like it would be bad but it's not.
[02:16:47] *** Joins: karstensrage (~karstensr@user/karstensrage)
[02:27:14] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:44] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:38:25] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:915d:a826:785c:4336)
[02:58:13] *** Joins: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com)
[02:58:53] *** Quits: yuckey2d (~yuckey2d@195.246.120.52) (Quit: The Lounge - https://thelounge.chat)
[03:03:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[03:04:11] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[03:10:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:11:07] <BadAdviceCat> > re: freelancing v. garbage: raise your rates, fire bad clients.
[03:11:38] <BadAdviceCat> I can not stress enough on the " fire bad clients" part. Not worth stressing over imo.
[03:12:31] <Albright> Well, find good clients first. Then fire the bad ones.
[03:12:44] <Albright> I'd rather have bad clients than no clients.
[03:13:06] <Byteflux> Debatable.
[03:13:13] <__adrian> "raise your rates"  // if you can handle good clients, this _is_ how you find them.
[03:13:38] <__adrian> well, part of it. but a much bigger part than you might imagine.
[03:15:11] <Byteflux> But yeah establishing a portfolio/creating a reputation might mean starting out with bad clients / bad rates.
[03:15:17] <__adrian> having bad clients can seriously limit your ability to have good clients
[03:15:38] <Byteflux> In some cases, doing work for free.
[03:15:49] <Byteflux> As an investment to your future.
[03:16:26] <da_wunder> and one thing is to spot those "bad clients" and just skip those totally - they might be just waste of your time and money
[03:18:52] <__adrian> Byteflux: it doesn't turn out that way. if you start with low rates, the only way to raise them is to drop the clients that know about them.
[03:18:57] <__adrian> i.e., start over.
[03:20:02] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Read error: Connection reset by peer)
[03:20:12] <Byteflux> Growth without word of mouth is seemingly impossible these days with how saturated the market is.
[03:20:17] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[03:20:49] <__adrian> this is true
[03:20:50] <Byteflux> So unless you plan on competing with $5/hr rates with Indian devs on freelance websites, you need some way to attract clients.
[03:20:56] *** Joins: yuckey2d (~yuckey2d@195.246.120.52)
[03:20:57] *** Quits: yuckey2d (~yuckey2d@195.246.120.52) (Remote host closed the connection)
[03:21:00] <__adrian> you don't want your word-of-mouth to be "they're cheap!"
[03:21:12] *** Joins: yuckey2d0 (~yuckey2d@195.246.120.52)
[03:21:19] <da_wunder> that is not so true, eg. our company raises prizes per year (sometimes even often) - if customers doesn't want to pay that - then that contract is ended
[03:22:18] <__adrian> a company has more power in that regard (and probably has higher rates to start) than a freelancer does
[03:22:41] <da_wunder> and usually you can just say that those prizes are going higher because hr stuff cost more and so one
[03:22:57] <Byteflux> I think it's okay if your reputation is initially built on "these guys are cheap" because you it's a doorway to demonstrating your value and justifying raising costs.
[03:23:41] *** Quits: Junxter (~Junxter@222.94.36.195) (Ping timeout: 250 seconds)
[03:25:58] <Byteflux> Clients may have initially chosen you based on cost but they stay with you because of quality and rapport. I mean... don't go hiking rates substantially from one year to the next, be reasonable.
[03:27:34] *** Quits: pmercado (~pmercado@186.107.57.118) (Ping timeout: 252 seconds)
[03:28:25] <da_wunder> yearly based raises to those rates are quite common - working people will get some salary raises, inflation and so on
[03:28:58] <da_wunder> but those raises should be reasonable and not something insane
[03:29:29] <__adrian> "Byteflux> I think it's okay if..."  it doesn't work that way  ;)
[03:36:36] <Byteflux> __adrian: ¯\_(ツ)_/¯ maybe things changed. I don't freelance anymore but from 05-08 this model seemed to work alright for me.
[03:38:56] <Sammitch> if you're desperate and want to devalue your work just to compete with $5/hr copy/paste monkies that's your prerogative, but maybe use an alternative account/alias to separate your actual business from your shameful scrounging
[03:40:03] *** Joins: Junxter (~Junxter@114.221.66.47)
[03:41:32] <Blondie101010> freelancing is primarily a marketing job
[03:41:39] <__adrian> in very broad terms, the freelancing industry is the way it is because people decide it's better/is their only option to compete on price rather than value.
[03:42:04] <__adrian> in doing so, you teach every smb that they're _supposed_ to treat you like garbage else they're get swindled.
[03:42:29] <__adrian> if this didn't hit you, that's fantastic
[03:42:40] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[03:43:43] <da_wunder> or maybe people should just try to go to work some company first and see how things are handled there - and learn with that that
[03:44:05] <__adrian> if i had known, i might have tried to get an enterprise job first
[03:44:24] <__adrian> not sure it would have been better _for me_, but i would have thought about it
[03:45:16] <__adrian> ofc i mentioned "bad companies" earlier - same deal as bad clients.
[03:45:25] <__adrian> there are good ones, there are abusive ones.
[03:45:42] <da_wunder> and working with "bad companies" will also teach you
[03:45:52] <__adrian> hopefully the right things  :)
[03:45:53] <Blondie101010> yeah, jobs can reduce some stresses but increase others
[03:46:04] <da_wunder> yeah, true :D
[03:46:20] *** Joins: de-facto (~de-facto@user/de-facto)
[03:52:07] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[04:08:55] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[04:17:37] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[04:18:48] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[04:20:26] *** Joins: de-facto (~de-facto@user/de-facto)
[04:20:41] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[04:20:44] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:20:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:915d:a826:785c:4336) (Read error: Connection reset by peer)
[04:25:27] *** Quits: yuckey2d0 (~yuckey2d@195.246.120.52) (Ping timeout: 240 seconds)
[04:44:06] *** Joins: ferdna (~ferdna@user/ferdna)
[04:51:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:55:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:56:10] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 240 seconds)
[04:57:32] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Leaving)
[04:59:43] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[05:01:00] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[05:01:21] *** Joins: karstensrage (~karstensr@user/karstensrage)
[05:03:28] *** Parts: karstensrage (~karstensr@user/karstensrage) (Leaving)
[05:11:27] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:12:09] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (Ping timeout: 248 seconds)
[05:12:17] <celphi> is it more common to use env variables or config file
[05:12:56] <celphi> or both ?
[05:13:36] <Blondie101010> env variables are usually loaded from config files
[05:14:28] *** Joins: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa)
[05:14:57] <Blondie101010> the SAPI and purpose both define how you define those variables
[05:15:10] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Leaving)
[05:20:21] <Blondie101010> and then again, config files could be done in numerous formats
[05:21:39] <Blondie101010> celphi:  I consider env variables to have special case uses as it doesn't allow much flexibility
[05:22:32] <celphi> k-- but is it better to store the db info in apache conf files or in .env file
[05:22:59] <Blondie101010> if there is an intruder, they will know the password either way
[05:23:20] <__adrian> there's a lot of "depends" and not much "always do it this way."
[05:23:26] <celphi> but a programmer can accidently upload a env file not so much on apache
[05:23:38] <__adrian> there's no one answer that you can always do and will always be "best."
[05:23:43] <celphi> k
[05:23:46] <Blondie101010> celphi:  if you do something stupid, you get the results that go with it
[05:23:52] <celphi> true
[05:24:03] <__adrian> ^ this is why you code review and have deploy procedures
[05:24:08] *** Quits: Cyberg33k (~Cybergeek@2001:678:9ec:ff04:4811:692c:1801:c0f) (Quit: This computer has gone to sleep)
[05:24:34] <da_wunder> for that maybe something like "don't store your vendor libraries in vcs - use composer to install those"
[05:25:10] <Blondie101010> very unrelated, but ok
[05:25:14] <celphi> i was referring to like using git but i guess as long as they add to gitignore it's not an issue
[05:25:40] <Blondie101010> celphi:  yeah, don't commit your passwords
[05:25:55] <Blondie101010> at least not inside the project
[05:26:06] <__adrian> yeah, put them in the README instead.
[05:26:24] <Blondie101010> is that a joke?
[05:26:26] <celphi> aight- thanks for feedback. you both are always very insightful ad helpful
[05:26:34] <__adrian> :)  not a very good joke, apparently.
[05:26:40] <Blondie101010> :)
[05:26:43] <da_wunder> :D
[05:26:44] <__adrian> no, it was NOT serious.
[05:26:45] <celphi> :D
[05:27:43] <celphi> i  like how Blondie101010 was questioning a possible benefit to adding it to readme
[05:27:57] <celphi> even for a split second :D
[05:28:12] <__adrian> my humor is infrequent and very dry
[05:28:19] <celphi> hehe
[05:28:37] *** Joins: Artea (~Lufia@artea.com.pt)
[05:30:38] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:33] *** Joins: vlm (~vlm@user/vlm)
[05:35:25] *** Quits: bobdobbs (~user@150.107.174.237) (Ping timeout: 250 seconds)
[05:36:40] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[05:40:09] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[05:41:33] *** Joins: pmercado (~pmercado@186.107.57.118)
[05:45:21] <celphi> why is this invalid? https://3v4l.org/FfRV8
[05:45:58] <__adrian> constants are evaluated at compile time, not at runtime. variables don't exist yet.
[05:46:15] <celphi> properties === constants?
[05:46:27] <__adrian> *constant expressions
[05:46:29] <__adrian> sorry
[05:46:39] <celphi> k ty
[05:46:44] <__adrian> that includes the default values for properties, yes
[05:47:04] <celphi> so to achieve this code i would hve to use $this-> iside constructor?
[05:47:20] <__adrian> yes
[05:47:28] <celphi> k
[05:47:30] <__adrian> this is _exactly_ the sort of thing __construct() is for.
[05:47:40] <celphi> right on
[05:52:39] <__adrian> now, to clarify a bit
[05:53:03] <__adrian> do not write  $this->example = ['test' => $_SERVER['REQUEST_URI']]
[05:53:07] <__adrian> in your constructor
[05:53:47] <__adrian> $_SERVER is a (super)global. don't use globals. when your code needs $something, then $something should be an argument.
[05:54:35] <__adrian> class X { protected $x; public function __construct(string $request_uri) { $this->x = ["test" => $request_uri]; }}
[05:54:57] <__adrian> then you create the object like   $x = new X($_SERVER["REQUEST_URI"]);
[05:56:41] <da_wunder> I would really recommend that person to look some battle tested frameworks and how those are doing stuff like that
[06:09:12] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[06:14:47] *** Quits: pmercado (~pmercado@186.107.57.118) (Ping timeout: 240 seconds)
[06:29:51] *** Joins: molt (~molt@79.140.150.225)
[07:04:19] *** Quits: junktext (~junktext@109.201.152.171) (Quit: junktext)
[07:07:59] *** Joins: Flikker (Flikker@pool-173-49-228-23.phlapa.fios.verizon.net)
[07:10:52] *** Parts: Flikker (Flikker@pool-173-49-228-23.phlapa.fios.verizon.net) ()
[07:19:28] *** Joins: guidoc (~guido@151.47.218.16)
[07:20:02] *** Joins: Rockwood (~Rocky@user/rocky)
[07:24:29] *** Quits: alexia (~Alexia@81-11-16-190.fibertel.com.ar) (Remote host closed the connection)
[07:31:03] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:32:44] *** Quits: AllenJB (~AllenJB@user/allenjb) (Quit: The Lounge - https://thelounge.github.io)
[07:34:35] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[07:42:05] *** Joins: AllenJB (~AllenJB@user/allenjb)
[08:14:42] *** Joins: impliednude (~impliednu@104.232.118.176)
[08:15:38] <impliednude> I have never had this happen before. I am running an application from console and when I add a option via --option_name=whateverhere it drops me to bash aka >.
[08:16:08] <impliednude> is it something I am doing or should I alert the application's developer's
[08:17:09] <Blondie101010> if you didn't write that code, yes consult those who did
[08:18:33] <impliednude> That's what I thought.
[08:26:47] *** Quits: guidoc (~guido@151.47.218.16) (Read error: Connection reset by peer)
[08:31:54] *** Joins: guidoc (~guido@151.47.159.245)
[08:49:12] *** Joins: Rockwood (~Rocky@user/rocky)
[08:49:59] *** Quits: guidoc (~guido@151.47.159.245) (Ping timeout: 250 seconds)
[08:51:43] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 250 seconds)
[08:54:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:58:18] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[09:18:23] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[09:22:33] *** Joins: guidoc (~guido@151.57.146.52)
[09:28:54] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:29:45] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:30:07] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[09:34:14] *** Joins: Akimb (~Akimb@86.100.13.100)
[09:35:03] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[09:35:13] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:40:34] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[09:52:48] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[10:11:58] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[10:17:08] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[10:18:04] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:19:38] *** Joins: CyberCr33p (~chris@bnc.cretaforce.gr)
[10:32:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[10:45:48] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:48:43] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[10:55:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:55:47] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[10:57:49] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[10:58:24] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:59:15] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:00:05] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:00:28] <undefined_bob> does the forwarding from ##php doesnt work anymore?
[11:01:38] <gry> undefined_bob: no; on purpose
[11:02:07] <undefined_bob> too bad. May I ask why?
[11:16:31] <gry> undefined_bob: in libera, single-# are 'collaborative project' channels (like it was in freenode before) and also they allow 'community channels' to be single-# . the other channels like ##physics are still double hashed as they are not considered a foss-related community
[11:17:59] *** Quits: guidoc (~guido@151.57.146.52) (Quit: WeeChat 3.2)
[11:43:06] <undefined_bob> gry: yes, I understand that. What I'm wondering is that, somehow I have ##php in my autojoin list and that worked well until recently. ##php forwarded me to #php and all fine. but now ##php give me 'you're kicked. invite only' and no forward anymore
[11:43:26] <undefined_bob> I know, I just have to get my autojoin list right but
[11:43:55] *** Quits: TheCapitalistPun (~Capitalis@liledevil.xs4all.nl) (Quit: Leaving)
[11:44:11] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[11:44:49] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:46:06] *** Quits: nbin (~nbin@user/nbin) (Ping timeout: 268 seconds)
[11:46:16] *** Joins: nbin_ (~nbin@user/nbin)
[11:53:03] <gry> undefined_bob: oh, forward should work, i guess someone forgot to /msg chanserv set ##php guard on
[11:53:09] <gry> undefined_bob: i will check it
[11:53:53] *** Joins: keypusher (keypusher@user/keypusher)
[12:00:53] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:03:17] <undefined_bob> thank you gry
[12:21:27] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1)
[12:22:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[12:42:29] *** Quits: mishehu (~mishehu@2001:470:b9db:b00b::f36d:9d3) (Quit: brb kernel update)
[13:03:01] *** Joins: Cyberg33k (~Cybergeek@2001:678:9ec:ff04:3dc0:6d53:3ba3:2d4d)
[13:03:02] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[13:03:32] <mishehu> glad that redirect works.  I still type ##php out of habit.
[13:12:18] *** Joins: Anticom (~Anticom@87.190.49.75)
[13:13:39] *** Quits: Anticom (~Anticom@87.190.49.75) (Client Quit)
[13:20:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[13:29:10] *** Quits: Miles8of9 (~obrien@93-34-146-123.ip50.fastwebnet.it) (Quit: Leaving)
[13:45:18] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[13:47:07] *** Quits: nbin_ (~nbin@user/nbin) (Ping timeout: 240 seconds)
[13:47:51] *** Joins: nbin (~nbin@user/nbin)
[13:52:55] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:53:27] *** Joins: WishBoy (~WishBoy@user/wishboy)
[13:54:20] *** Joins: MrTrick (uid181961@id-181961.highgate.irccloud.com)
[14:16:43] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 250 seconds)
[14:16:57] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:20:23] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Client Quit)
[14:20:48] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:35:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:38:21] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[14:40:13] *** Quits: molt (~molt@79.140.150.225) (Ping timeout: 252 seconds)
[14:41:02] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:54:07] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:11:31] *** Joins: keypushe- (keypusher@user/keypusher)
[15:12:09] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 248 seconds)
[15:14:45] *** keypushe- is now known as keypusher
[15:21:15] *** Joins: molt (~molt@79.140.150.225)
[15:22:08] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[15:37:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:44:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:46:13] *** Quits: molt (~molt@79.140.150.225) (Ping timeout: 252 seconds)
[15:49:22] *** Joins: gefd_ (~Geoff@user/gefd)
[15:53:46] *** Joins: guidoc (~guido@151.57.236.129)
[16:10:48] *** Joins: biberu\ (~biberu@user/biberu)
[16:11:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:14:28] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 250 seconds)
[16:14:29] *** biberu\ is now known as biberu
[16:15:10] <celphi> __adrian: why does it matter is it because it decouples the config to the variables inside?
[16:22:40] <Blondie101010> the last point was about using superglobals directly in your class, instead of organizing your code properly by passing the dependencies to those who need them
[16:22:47] <Blondie101010> it's a "global" problem
[16:25:44] <biberu> celphi: are you writing unit tests?
[16:26:39] <celphi> nope. it's for constructing pdo- i need to use the server global to create an instance
[16:27:07] <biberu> more likely you need some parameter from it?
[16:27:29] <celphi> yes several. so i made a config class to store the values
[16:27:54] <celphi> but it seems his recommendation is to do new Config($_SERVER) ?
[16:28:03] <celphi> im not really sure
[16:28:13] <biberu> did you paste the config class somewhere?
[16:28:23] <celphi> it's pretty basic one sec
[16:29:15] <celphi> https://bpa.st/T72A
[16:29:25] <biberu> (phone)
[16:31:50] <celphi> to me if i wanted to change config settings i would go to config file,. not searching for the file that instantiated it
[16:32:46] *** Joins: olle (~olle@p5785bfee.dip0.t-ipconnect.de)
[16:37:07] <olle> Which architecture is best for testability? Or it doesn't affect it?
[16:39:47] *** Quits: Cyberg33k (~Cybergeek@2001:678:9ec:ff04:3dc0:6d53:3ba3:2d4d) (Quit: This computer has gone to sleep)
[16:42:38] <Blondie101010> celphi:  why?  you set those in your Apache config just because you're afraid to commit it to git?
[16:43:54] <Blondie101010> either way, the problem was VERY clearly described in Adrian's example and you just redid the exact same thing
[16:44:12] <Blondie101010> so if you don't want to listen, pay attention, or care about what we tell you, then don't ask
[16:45:45] *** Joins: Poboy (~Poboy@user/poboy)
[16:46:06] <__adrian> "celphi> to me if i wanted to change config settings i would go to config file,. not searching for the file that instantiated it"  good thinking
[16:46:08] <celphi> I'm not refusing to listen. I'm asking
[16:46:13] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 250 seconds)
[16:46:27] <__adrian> but my example wasn't specifically about where to access  $_SERVER
[16:46:37] <__adrian> it was about not doing it inside a constructor
[16:47:00] <__adrian> as blondie said, _dependencies_.
[16:47:32] <Blondie101010> celphi:  what do you think of this: function addNums() { global $num1, $num2; return $num1 + $num2; } $num1 = 2; $num2 = 3; echo $addNums();
[16:47:39] <Blondie101010> do you think that's looks intelligent?
[16:47:53] <celphi> nope
[16:47:58] <Blondie101010> exactly
[16:48:12] <celphi> config file is not exception to rule then?
[16:48:17] <celphi> guess not
[16:48:27] <Blondie101010> you're not reading a config file in your code
[16:48:35] <Blondie101010> you're using a super global out of context
[16:49:05] <Blondie101010> not even sure why you'd make a class for something you'll ever only have one of
[16:49:23] <Blondie101010> it certainly makes it unreusable for sure
[16:50:29] <celphi> so then this? https://bpa.st/ZXIA
[16:50:46] <Blondie101010> sure
[16:50:52] <__adrian> now you might _get_ values from server vars. e.g.,  $config->db = ["host" => $_SERVER["DB_HOST"], ...]  etc.
[16:51:22] <__adrian> your example is better because it passes dependencies as arguments, yes
[16:51:38] <__adrian> but it's also "not great" because you pass a lot of things you don't need.
[16:52:04] <__adrian> $_SERVER is not your dependency, here. your dependencies are $_SERVER["DB_HOST"}, etc.
[16:52:26] <celphi> i need more than just db_host
[16:52:26] <__adrian> what you're doing is giving your kid your whole wallet so they can get their $5 allowance.
[16:52:36] <__adrian> you don't need _all_ of $_SERVER
[16:52:47] <celphi> oh
[16:52:50] <celphi> true
[16:56:16] <celphi> https://bpa.st/WE4Q
[16:56:20] <celphi> this better then?
[16:57:03] <celphi> seems kinda redundent
[16:57:23] <Blondie101010> it'd be fine if you removed $_SERVER from your constructor
[16:57:43] <Blondie101010> oh sorry
[16:57:48] <__adrian> yeah. re: "seems kind of redundant": but what does this change accomplish?
[16:57:50] <Blondie101010> need my glasse
[16:58:39] <Blondie101010> it makes the class independent and reusable
[16:58:43] <celphi> or is this better? https://bpa.st/UADA
[16:59:22] <Blondie101010> I wouldn't call the connection information 'db' but otherwise sure
[16:59:56] <celphi> "database" is clearer right?
[17:00:07] <Blondie101010> not the point at all :)
[17:00:19] <celphi> i usually miss those lol
[17:00:25] <Blondie101010> $this->dbInfo perhaps or similar
[17:00:46] <celphi> $this->dbInfo->prepare(...) ?
[17:00:51] <Blondie101010> no
[17:00:58] <__adrian> your $db is an array
[17:01:05] <__adrian> you can't $db->prepare() at all
[17:01:07] <celphi> oh you mean for the options
[17:01:39] <celphi> im sorry- im still kinda waking up  and meshing my database class idea into one
[17:01:57] <celphi> ty for the feedback! very helpful
[17:02:02] <__adrian> re: database class: these are generally wrong ideas
[17:02:04] <Blondie101010> why do you need a db class?
[17:02:19] <celphi> to inject into my app class
[17:02:34] <__adrian> here's your "database class":  https://php.net/pdo
[17:02:46] <__adrian> don't make your own. you won't make it better.
[17:03:06] <celphi> to make wrapper functions
[17:03:34] <__adrian> to wrap what?
[17:03:45] <celphi> like to dynamically build prepare statements
[17:03:53] <__adrian> build statements that do what?
[17:04:06] <celphi> select, insert CRUD?
[17:04:13] <__adrian> no
[17:04:19] <__adrian> you don't need that. that's just sql.
[17:04:36] <__adrian> there _are_ statements that your app _will_ need to build, though.
[17:04:43] <__adrian> can you imagine what they might be?
[17:05:18] <Blondie101010> if you want a query builder, get one...  don't go spending 6 months on improving a new eternally bad query builder...  work on your project instead
[17:05:19] <celphi> then wouldnt all my sql be housed in each individual class? isnt it better they come to one central place to execute the sql?
[17:06:01] <__adrian> "one central place" ≠ literally one class that does everything
[17:06:22] <__adrian> but my question is about what kind of "building" your app needs to do
[17:06:35] <__adrian> it's not like ->build Select($table, $fields, $...)
[17:07:10] <jaguart> and then there were stored procedures...
[17:07:25] <Blondie101010> that's a different story
[17:07:25] <__adrian> it's like your business logic. e.g., if your app stores to-do lists, then it might be like  ->findItemsFor($list)
[17:08:17] <celphi> ya no,. it would be like $pdo->queryFetch($sql, $params); where it would build your query string and dynamically add the params
[17:08:41] <__adrian> nope. that's not what you need.
[17:09:18] <__adrian> that has nothing about your app in it. it's _all_ database words.
[17:09:37] <celphi> i see
[17:09:40] <__adrian> that means the "app" part of your code has to be outside of that method/class.
[17:09:51] <__adrian> that means it's _not_ all in one place. it's leaking everywhere.
[17:10:01] <__adrian> consider  ->findItemsFor($list)
[17:10:06] <__adrian> no database words at all.
[17:10:11] <celphi> ok
[17:10:17] <celphi> i like that approach for sure-
[17:10:20] <__adrian> you don't give or recieve an sql statement
[17:10:24] <__adrian> nothin
[17:10:56] <celphi> but how would you get the data in the database so that ->findItems gets the data
[17:10:56] <__adrian> you ask for what you want, and that's what you get. all the "database" stuff is _inside_, all in one place, and you never see it from the outside.
[17:11:29] <__adrian> that's up to your TodoStorage (or whatever you call it) class
[17:11:46] <__adrian> e.g., it might be like  $storage = new ListStorage($pdo);
[17:12:13] <celphi> ListStorage?
[17:12:19] <__adrian> whatever you call it
[17:12:24] <__adrian> my example was to-do lists
[17:12:34] <__adrian> but this is key: it's not a generic name
[17:12:40] <__adrian> it's _specific_ to my app
[17:13:13] <__adrian> if the name is generic (like "DbUtil" or something) then it's wrong. because it's not about your app.
[17:15:15] <jaguart> @__adrian: Do you have lots of XXStorage classes then? Each understanding the parts of XX and how they should be persisted/retrieved?
[17:15:29] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[17:16:58] <jaguart> A lot of frameworks provide Model helpers that intermediate between objects and their persistence
[17:17:05] <celphi> so if i customers and I needed to get their domain names from database to  use for comparison and i needed to be able record submitted ajax requests in a status table.. are you saying i would something like  $Customers->getDomains()->list() and $RequestForm->fromCustomer($customer)->code($code)->update()?
[17:18:01] <celphi> i also do see where storage class plays a role in this
[17:18:24] <biberu> jaguart: i'm going a step further and have separate classes / functions for each operation
[17:19:40] <biberu> (perhaps functions is confusing in here, just scratch that and think class, i'm usually writing more fp oriented code in other languages)
[17:21:52] <jaguart> biberu: what is your list of operations? create, read, update, delete? How do you operate efficiently on collections? Do you ever use things like query-cache?
[17:22:34] <jaguart> and what about things like lazy loading?
[17:22:38] <Blondie101010> celphi:  if you get customers, their code should not interact with other customers...  unless you're offering a service and people only pay you to use it, they should not even live in the same environment
[17:23:08] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:23:17] <celphi> code would be the status code of the send form Blondie101010
[17:23:33] <celphi> to track forms submitted
[17:23:35] <biberu> jaguart: the operations are what the domain (ddd) needs doing, e.g. "find all todo items"
[17:23:46] <Blondie101010> I think it was a mistake to show you method chaining
[17:24:05] <biberu> jaguart: do you mean lazy loading as in fetching relations as they are needed?
[17:24:11] <celphi> whys that
[17:24:40] <Blondie101010> because you should organize your code, and that tends to lead to the opposite
[17:25:11] <jaguart> biberu: no - I mean making slow calls only when you need to - for example a rarely used set of attributes is not fetched from storage until actually accessed/needed.
[17:26:14] <__adrian> "jaguart> @__adrian: Do you have lots of XXStorage classes then?"  yes
[17:26:49] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[17:26:58] <biberu> jaguart: hard to say, depends so much on the context, but it sounds like i might simply have those extra attributes as a separate type and operation
[17:27:03] <__adrian> "celphi> so if i ..."  maybe. not quite sure i follow your example, but sounds like the right idea
[17:27:23] <celphi> ok cool ty
[17:27:53] <celphi> where can i read up on storage classes?
[17:28:05] <celphi> how they should work and be implemented
[17:28:25] <__adrian> jaguart: re: lazy fetching: don't optimize until you actually have a problem  :)  if fetching object properties is that expensive, maybe your object has too many properties
[17:29:18] <biberu> which in turn might suggest that it's used in different ways in different contexts, and maybe should be several smaller types
[17:30:53] <__adrian> celphi: not really. and implementation, "depends" :)    https://3v4l.org/dZasv
[17:30:55] *** Joins: pmercado (~pmercado@186.107.57.118)
[17:32:50] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[17:33:51] <__adrian> jaguart: "lazy loading as in fetching relations as they are needed" is the more likely place to start.
[17:34:54] <jaguart> I was thinking more along the lines of $sig_pages = $customer->accounts( year => '1983' )->signature_pages()
[17:38:04] <biberu> i'd do that rather differently, but gtg for a bit
[17:38:49] <__adrian> jaguart: you don't want customers, there. you want signatures.
[17:39:01] <jaguart> @__adrian: In your example, FooStorage is fully encapsulated by Foo? Or do you use them as siblings?
[17:39:13] <__adrian> $signatures->forCustomers($customers)
[17:39:42] <__adrian> a thing doesn't do its own storage. that's like putting the filing cabinet inside one of the folders.
[17:40:54] <__adrian> think of  $foo->save() /*problem solved*/  like  $drowningVictim->saveYourself() /*problem solved*/
[17:42:41] <jaguart> Hmmm - so $signature_pages->forYearEnding('1983')->forAccounts->forCustomer($customer) ??
[17:43:13] <__adrian> don't know what ->forAccounts is but looks sensible
[17:44:53] <celphi> like this __adrian ? https://3v4l.org/5SJFm
[17:44:57] <jaguart> I think our current way is much clearer in meaning?  $sig_pages = $customer->accounts( year => '1983' )->signature_pages()
[17:45:23] <__adrian> how so? you don't see the thing you want until the end.
[17:45:47] <__adrian> you're giving driving directions but i don't know where i'm going, how long it will take, or what i'm doing when i get there.
[17:48:06] <__adrian> it probably matches how you're thinking better - but that's because you're thinking procedurally (you're thinging about giving instructions, rather than giving orders)
[17:48:15] <__adrian> you're "micromanaging."
[17:48:40] <__adrian> don't tell me  left, right, right, 10miles, right, left, left, u-turn, stop
[17:48:50] <__adrian> tell me "go to the grocery store."
[17:49:09] <jaguart> no - its more about limiting the scope as soon as possible - rather than searching through millions of archived signature pages, we first narrow it to a single customer, then to a single year, then to the pages I want
[17:49:49] <__adrian> ah - you think we're _actually fetching_ all the records from the DB and then filtering them in php.
[17:49:53] <__adrian> yeah. hell no.
[17:50:07] <__adrian> inside that $signatureStorage class, there's sql.
[17:50:17] <__adrian> it only fetches the things you actually want.
[17:50:35] <__adrian> that's just a detail we don't know about. it's hidden inside the class/methods.
[17:50:51] <jaguart> even logically in the developers thinking - its more efficient to reduce the complexity as soon as possible rather than folding it backwards at the end. Maybe we need a different example / context?
[17:51:23] <__adrian> this example is fine.  you're doing the opposite, though - you're putting all the complexity upfront.
[17:51:39] *** Quits: gefd_ (~Geoff@user/gefd) (Ping timeout: 250 seconds)
[17:51:47] <__adrian> in order to do  $sig_pages = $customer->accounts( year => '1983' )->signature_pages()  i have to know all the details first.
[17:52:13] <jaguart> you have to know the customer and the year, and what you are looking for
[17:52:34] <__adrian> i'm already thinking about "signature pages." start there.
[17:52:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[17:53:23] <__adrian> say it in conversational language. what makes more sense?  "customer X's accounts in year Y, those sig pages."  or "sig pages for customer X's year Y accounts."  ?
[17:53:37] <jaguart> So one of the customers has asked to see the signature pages on the accounts from 1983 to see who signed them. They are OCR/PDF scans.
[17:53:43] <__adrian> sure
[17:53:55] <__adrian> they want sig pages.
[17:54:06] <jaguart> and the first element of the statement is $sig_pages
[17:54:21] <__adrian> yes
[17:54:37] <celphi> that's a cool example __adrian
[17:54:52] <__adrian> was jaguart's  ;)
[17:54:55] <celphi> (what you want)->describe details
[17:55:08] <__adrian> brb
[17:55:39] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:58:21] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[17:59:52] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Client Quit)
[18:04:49] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[18:06:39] <jaguart> I dont grok it :) the signature-pages are a part of a set-of-accounts(for a specified year) that belong to a customer...
[18:07:01] <jaguart> so I dont have $signature_pages to invoke anything - that's the result I am looking for
[18:07:30] <jaguart> and usually followed by the balance-sheet for the same year etc
[18:08:07] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 252 seconds)
[18:08:25] <jaguart> so: $accounts = $customer->accounts( year => 1983 ) and $accounts->signature_pages(), $accounts->balance_sheet() etc
[18:10:12] <jaguart> I can do things like: email_attachments( $customer->email, 'Signature pages for 1983 attached', $customer->accounts( year => 1983)->signature_pages() );
[18:14:11] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:18:03] <jaguart> This seems clearer than: $signature_pages->for_accounts( year => 1983 )->for_customer( $customer )
[18:19:13] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[18:25:34] *** Joins: Poboy (~Poboy@user/poboy)
[18:30:12] <__adrian> "the signature-pages are a part of a set-of-accounts..."  you're thinking in terms of nested data structures. think in terms of objects, and how they relate to each other.
[18:30:31] *** Joins: hmmhesays (~hmmhesays@167.88.62.87)
[18:31:15] <jaguart> ok - the signature-pages are specific fragments from documents in a set of accounts
[18:31:20] <biberu> jaguart: that would mean $accounts not only has to be aware of signature pages, but also how to find them
[18:31:33] <jaguart> other document sets also have signature pages - like leases and contracts
[18:31:42] <__adrian> now, $sigs->for($customer)->accounts($year) is a way to _implement_ finding those sig pages, BUT you can have methods that uses this.
[18:31:57] <jaguart> yes - a set of accounts has a clear collection of attributes including signature pages
[18:32:04] <__adrian> no
[18:32:06] <biberu> jaguart: would pretty much only do that if it's an aggregate, and that would also ensure that the accounts and signatures are consistent in the loaded data, if you load them later something may have changed
[18:32:10] <__adrian> objects are not data collections
[18:32:27] <__adrian> they are _behavior_, with state. they _do things_.
[18:33:03] <jaguart> I was always under the impression that they have behaviours, state and attributes
[18:33:42] <__adrian> attributes (properties) are implementation details
[18:33:51] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[18:33:52] <__adrian> they're important _inside_ the class but not outside.
[18:34:04] <__adrian> YOU don't use those properties. the object uses them, internally.
[18:34:12] <__adrian> they _don't matter_ to outside code.
[18:34:47] <__adrian> e.g., you might have  class Customer { public function getAccountSignaturePages($year) { return $this->sigs->for($customer)->accounts($year); } }
[18:35:00] <__adrian> correction   class Customer { public function getAccountSignaturePages($year) { return $this->sigs->for($this)->accounts($year); } }
[18:35:57] <jaguart> that happens when I want to ask the accounts another question? e.g. are they draft or final?
[18:36:24] <jaguart> as in if ( $customer->accounts(year=>1983)->finalised ) { ... }
[18:37:05] <__adrian> "signature-pages are specific fragments from documents" // so this might change your approach slightly; you might have a DocumentStorage->getSignaturePages(...)
[18:37:33] <__adrian> "what happens when ..."  // this would also probably be served by a DocumentStorage
[18:37:51] <biberu> ^ that would have some interface for the kind of criteria you can use
[18:38:13] <__adrian> but note, it's still not a Customer. documents "belong to" a customer. they are not literally _part of_  customer. it's a relationship, not a characteristic.
[18:38:28] <jaguart> yes true
[18:39:19] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 250 seconds)
[18:39:42] <__adrian> i do understand everything you're describing  :)  they are very common approaches. and they're backwards  :)
[18:39:47] <jaguart> and some documents belong to more than one customer so its a m2m relationship
[18:40:52] <__adrian> yes
[18:41:03] <__adrian> excellent reason why docs should not be a property of a customer
[18:41:04] <jaguart> this feels like it moves the code to new places - and in fact concentrates it in the higher level classes e.g. $cusomer becomes hude if all accounts methods move there...
[18:41:22] <__adrian> they certainly don't have to all move there
[18:41:37] <__adrian> in fact your email example might be its own class.
[18:44:21] <__adrian> $emailer = new SignaturePagesEmailer($documentStorage); $emailer->sned($customer);
[18:44:25] <__adrian> *send
[18:45:50] <jaguart> One of the things that the current hierarchy ensures is that a customer cannot access accounts / docs / signatures they shouldnt have access to... as $this is always used to filter the data
[18:46:23] <jaguart> so $customer->accounts() - no year filter - only returns accounts for this customer
[18:46:24] <__adrian> this doesn't have to be ensured by hierarchy
[18:46:40] <__adrian> make your stroage interface require a customer
[18:46:54] <__adrian> $docs = new DocumentStorage($customer);
[18:47:59] <__adrian> (also note i'm not trying to convince you to rewrite an entire existing application)
[18:50:20] *** Joins: Nomikos (~nemo@about/web/climber)
[18:50:41] <Nomikos> is there _any_ difference in password strength between a string and it's base64_encoded counterpart?
[18:52:06] <AllenJB> Nomikos: No. base64 is not encryption (or hashing) - it's trivially reversible with no other information required
[18:52:19] <celphi> is this what you're talking about __adrian https://3v4l.org/5SJFm
[18:52:56] <Nomikos> thx
[18:52:58] <AllenJB> base64 is an encoding designed to allow binary / arbitrary data to be transmitted other a medium that may only support ASCII text
[18:53:13] <AllenJB> s/other/over/
[18:53:26] <Nomikos> yeah I'm familiar with it, figured there might be attacks that were optimized for alphanumeric or something
[18:53:54] <Nomikos> just a silly argument at work here >.<
[18:53:54] <celphi> https://3v4l.org/8IpSu forgot where uses ad ot ,
[18:54:01] <Naktibalda> base64 would turn your password to 30% longer alphanumeric string
[18:56:01] <__adrian> celphi: that's the general idea.
[18:56:26] <celphi> then you're saying i put all my application functions inside that class?
[18:56:34] <biberu> i'd even have e.g. class FindCustomerByDomain { }
[18:56:59] <celphi> seems like that would be a mega size class
[18:58:31] <biberu> celphi: that's just for one type though, supposedly your app would have a bunch of different things to persist
[18:58:49] <celphi> i dont know what you mean
[18:59:06] <biberu> __adrian's example is for your Foos
[18:59:12] <celphi> im trying to understand this pattern
[18:59:24] <biberu> you'll probably also have Bars, Bazs, ...
[18:59:34] <celphi> for storage names?
[18:59:41] <biberu> so it's not your entire application unless it's a trivially small aplication
[18:59:46] <biberu> class FooStorage {
[18:59:54] <biberu> ^ Foo is what it's storing
[18:59:57] <celphi> Yeah i dont get what fooStorage is
[19:00:03] <biberu> BananaStorage
[19:00:04] <celphi> CustomerStorage?
[19:00:07] <biberu> AppleStorage
[19:00:11] <biberu> OrangeStorage
[19:00:12] <biberu> etc.
[19:00:33] *** Quits: Northwoods (~Northwood@103.223.8.125) (Ping timeout: 250 seconds)
[19:00:43] <__adrian> yes
[19:00:44] <celphi> but how does CustomerStorage class do anything? it just houses the methods?
[19:00:52] <__adrian> you'd have one for each of your domain models
[19:01:03] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:01:05] <biberu> when your domain needs something it'd call it
[19:02:22] <__adrian> so you have FooStorage->findCustomerByDomain()  you should probably have  CustomerStorage->findByDomain()
[19:02:48] <__adrian> "foo" (and "bar", "baz", etc.) are just example names
[19:03:02] <biberu> https://en.wikipedia.org/wiki/Foobar
[19:07:59] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[19:08:50] <celphi> like this ? https://3v4l.org/AfaTk
[19:10:58] *** Parts: Nomikos (~nemo@about/web/climber) ()
[19:14:28] <__adrian> that has some ...interesting... behaviors that you probably don't expect, but it's the general idea
[19:15:22] <celphi> so basically create a storage class for each group of items
[19:15:26] <celphi> or main entity
[19:15:45] <celphi> and create methods inside those to do something with those entities
[19:17:35] <celphi> and if i decide to add an extra way to insert data, i can then make an interface for that storage class which enforces the same methods for both
[19:17:46] <celphi> is that right?
[19:18:13] <celphi> is there not any books that go over this pattern?
[19:18:41] <__adrian> i'm sure there are, but i don't know them offhand.
[19:23:43] *** Joins: genom (~g@37.214.44.252)
[19:24:35] <celphi> does this pattern have a name?
[19:25:12] <celphi> also why do people use `SiteController::class` over just using the string?
[19:28:13] <__adrian> i'm sure it has a name
[19:28:21] <__adrian> it's kinda like DAO but not exactly
[19:28:22] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Leaving)
[19:29:00] <__adrian> re: ::class : because this makes intent more obvious, reduces the chances of typos, and allows static analysis to undertstand what's going on
[19:32:00] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::3f1) (Remote host closed the connection)
[19:45:05] *** Joins: undefined_bob1 (~undefined@user/undefined-bob/x-5411918)
[19:48:11] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 244 seconds)
[19:52:07] *** Quits: guidoc (~guido@151.57.236.129) (Read error: Connection reset by peer)
[19:52:18] <celphi> does this pattern omit "models" all together then?
[19:53:32] <celphi> bc ive always seen it as RegisterModel { public $firstname; public $lastname; ect... }
[19:54:03] <celphi> with the posted data inserted in
[19:54:21] <mrtnt> If I make a "curl 'https://example.com/data.php' --data-raw 'nr=18101:001:3320'" request, then I get a reply from the web server. If I try to convert it to HTTP GET("curl 'https://example.com/data.php?nr=18101:001:3320'"), then I don't get a reply. Does this most likely mean that either the web server or PHP application is configured to process only the POST requests?
[19:55:29] *** Joins: guidoc (~guido@151.37.248.124)
[19:56:11] <celphi> what do you get when you do "curl websitehere"
[19:57:37] <celphi> --data posts your data as Content-Type: application/x-www-form-urlencoded
[19:57:55] <mrtnt> celphi: if I execute "curl 'https://example.com/data.php'", then I also get nothing
[19:58:23] <celphi> what about curl -d "nr=18101:001:3320" domain_here
[19:59:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[19:59:46] <celphi> should be same as --data but without the special interpretation of the @ character
[20:00:19] <mrtnt> with "curl -d 'nr=18101:001:3320' 'https://example.com/data.php'" I do get the reply. However, "-d" should send the POST request.
[20:00:54] <celphi> so did you check your logs?
[20:01:03] <celphi> specifically the access.log
[20:01:11] <__adrian> "celphi> does this pattern omit "models" all together then?" no, not at all. $customerStorage->findByWhatever()  would return a list of Customer models
[20:01:31] <__adrian> !+domain ≠ storage
[20:01:42] <__adrian> hmm...
[20:02:22] <Naktibalda> celphi: add -v flag to  your curl command to see what it is sending
[20:02:26] <__adrian> !+model ≠ storage
[20:02:26] <php-bot> the domain model is NOT the storage model. write your domain models as if there's no such thing as a "database." http://blog.sapiensworks.com/post/2012/04/07/Just-Stop-It!-The-Domain-Model-Is-Not-The-Persistence-Model.aspx
[20:02:34] <celphi> mrtnt: your web server will log any attempts of which resources are requested
[20:02:38] <Naktibalda> mrtnt: add -v flag to  your curl command to see what it is sending
[20:04:05] <celphi> __adrian: i dont understand what the article means by persistence model
[20:04:34] <__adrian> "persistance" means "storage." e.g., a record in a database
[20:06:22] <celphi> ok so how should a model be designed if you dont use properties that match the fields you want-- so for an example a person submits a regsiter form,. would i have a RegisterModel that has properties that match what is on the form?
[20:07:18] <__adrian> "Yes, they do resemble and sometimes can be identical (when the domain is very simple) but that's nothing more than a mere coincidence."
[20:07:44] <__adrian> how you _collect data from users_ (e.g., a form) is also not the same as _how you store data_.
[20:08:20] <mrtnt> celphi, Naktibalda: unfortunately, I don't manage the server. Both the "curl 'https://example.com/data.php' --data-raw 'nr=18101:001:3320'" and "curl 'https://example.com/data.php?nr=18101:001:3320'" requests return the HTTP code 200, but only in case of POST request the application return some data. I suspect that this application supports only the POST requests, but I just wanted to be sure because I might do
[20:08:22] <mrtnt> something wrong here.
[20:08:22] <celphi> so if my form had firstname, lastname, email, option1, option2 my model would not only validate but have those same fields as properties?
[20:09:41] <__adrian> i don't see modeling html forms as useful. you'd have a controller that needs some set of inputs - modeling those inputs can be useful. the inputs may or may not match the properties on the model, though.
[20:10:10] <celphi> mrtnt: i dont see why post would work and not get unless it's programmed that way
[20:10:51] <__adrian> they might be completely different. e.g., maybe your model needs an ip address, but your form accepts a domain name. your input model would validate a domain name, the controller would look up the domain's IP, and then the model would take the IP.
[20:11:21] <celphi> too many possibilities -- there could be mod-rewrite rules that remove the `?` so you really need to be able to see from server logs
[20:12:15] <__adrian> and then for storage, you'd keep the IP in numeric form (as opposed to human-readable form (dotted decimal))
[20:12:16] <mrtnt> celphi: ok, thanks! I just wanted to be sure that my "convertion" from the POST request to GET request was correct.
[20:12:22] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[20:12:59] <__adrian> you've got at least three models there - input, domain, and storage - and they're all different. because they serve different purposes.
[20:13:29] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 248 seconds)
[20:13:50] <axisys> upgraded httpd from 2.4.6 to 2.4.46 . my php files are not displaying data .. any suggestion on how to troubleshoot this?
[20:14:32] <__adrian> input == model == storage (all models the same) is a common-ish idea, and seems to work so long as the application is trivial and/or so long as there's a lot of extra application logic to keep things straight. but again, coincidence.
[20:14:34] <celphi> that's where im lost. i dont know their roles in your example.
[20:14:43] <axisys> not seeing any log in error_log
[20:14:56] <celphi> axisys: what do you mean not displaying?
[20:15:10] <__adrian> axisys: that's a downgrade, not an upgrade. also, it has little (if anything) to do with php - it's an apache issue. suggest looking at your config.
[20:15:27] *** Quits: impliednude (~impliednu@104.232.118.176) ()
[20:15:35] <axisys> celphi: the /register/index.php should open the form and allow new user to register .. all grayed out
[20:15:56] <__adrian> axisys: needs to be more specific than that :)
[20:16:07] <celphi> so it's prints on page but disabled?
[20:16:20] <axisys> on php is there a way to enable it to generate some error?
[20:16:21] <__adrian> look at the actual html body. is it full of php code?
[20:16:30] <celphi> ^
[20:16:35] <__adrian> again, this is very likely _nothing_ to do with php
[20:16:36] <axisys> __adrian: yes
[20:16:44] <__adrian> then apache isn't running php.
[20:16:57] <__adrian> you need to fix your apache config. this has _nothing at all_ to do with php.
[20:16:59] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[20:17:01] *** Parts: olle (~olle@p5785bfee.dip0.t-ipconnect.de) ()
[20:17:13] <celphi> ya you want to try the apache room
[20:17:35] <__adrian> i'd try google first  :)
[20:17:55] <celphi> so let me rephraase the flow __adrian
[20:18:29] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[20:19:37] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:19:39] <celphi> client form -> server app -> server app starts up -> validates values in post -> stores into models -> then uses controllers and routes to find content to reply back -> uses storage class to display appriopate page/values
[20:19:50] *** Joins: Anticom (~Anticom@87.190.49.75)
[20:20:18] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:20:23] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:22:31] <axisys> __adrian: httpd -M shows php_module loaded
[20:24:48] <celphi> client requests page from server -> server replies back based on url -> client sends ajax to server -> server validates values and stores validated values into model class -> routes ad controller direct which storage class to run -> the storage class uses the model data to request data from database|or whatever storage -> then controller replies with response
[20:24:54] <celphi> would that be right?
[20:25:00] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[20:34:21] <axisys> In the form <?php echo $register->get('categoryOptions'); ?> not giving anything in dropdown list
[20:34:48] <axisys> I need find a way to generate error or debug .. (newbie here)
[20:37:33] <__adrian> axisys: this is NOT a php problem. php is not being run at all. you need to configure apache to run php. you should research how to do this, and ask on a appropriate apache channel/forum/etc. if you find questions.
[20:38:39] <__adrian> you might start with SetHandler:  https://httpd.apache.org/docs/2.4/handler.html
[20:39:11] <axisys> __adrian: httpd channel says not to use mod_php and use php-fpm instead.. but I have all these codes stop working when upgrade from 2.4.6 to 2.4.46
[20:39:36] <axisys> I can't just convert to php-fpm with a switch
[20:40:41] <celphi> axisys: 2.4.6 to 2.4.46 is not an upgrade
[20:40:50] <celphi> 60 > 46
[20:40:55] <__adrian> php-fpm is generally good advice, but suggest starting with SetHander
[20:41:17] <__adrian> celphi: 6, not 60
[20:41:22] <__adrian> i misread that too
[20:41:30] <celphi> oh
[20:41:43] <celphi> haha trick on eyes
[20:44:16] <axisys> __adrian: I am using SetHandler .. this php code was working yesterday before the upgrade
[20:44:33] <axisys> I did not modify any code
[20:46:56] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[20:51:03] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[20:55:08] <celphi> __adrian: did you see my earlier text?
[21:00:04] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:00:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:06:49] <__adrian> celphi: which comment?
[21:06:53] <axisys> __adrian: #httpd says go back to #php .. not a http issue.. lol
[21:06:58] <__adrian> axisys: the code is not the problem
[21:07:14] <axisys> if I only could run it in debug mode
[21:07:24] <__adrian> you say you see actual php code when you view source, yes?
[21:07:29] <axisys> not a php person..
[21:08:10] <__adrian> that means nothing is running the php code. apache is _showing_ you the php code instead of _running it_ via the php engine.
[21:08:15] <celphi> __adrian: client requests page from server -> server replies back based on url -> client sends ajax to server -> server validates values and stores validated values into model class -> routes ad controller direct which storage class to run -> the storage class uses the model data to request data from database|or whatever storage -> then controller replies with response
[21:08:52] <celphi> is that correct flow
[21:09:04] <__adrian> that's at least two flows
[21:09:12] <__adrian> ...and hard to read  :p  moment
[21:10:00] <celphi> im trying to visualize the flow
[21:10:41] <__adrian> so to start, you're describing 2 separate http requests: the initial page load, and then an ajax request.
[21:10:48] <celphi> yes
[21:10:49] <__adrian> don't think of these as "related" in any way.
[21:10:56] <__adrian> they're completely independent.
[21:10:58] <celphi> ok the plz focus on ajax one
[21:11:11] <celphi> *then
[21:11:33] <__adrian> so when your ajax request comes in, your router should choose a controller to handle it.
[21:11:42] <celphi> right
[21:11:48] <axisys> __adrian: I do not see the actual php code in view page source
[21:12:26] <__adrian> axisys: k. what _do_ you see? compare to what you expect
[21:12:31] *** Quits: Anticom (~Anticom@87.190.49.75) (Quit: Leaving)
[21:12:35] <celphi> so- let's say handleRegister($request)
[21:13:14] <axisys> __adrian: in between <select> .. </select> I have this line <?php echo $register->get('categoryOptions'); ?> and it does not show in view page source..
[21:13:15] <celphi> how does model and validation fit into this process
[21:13:43] <axisys> the output should show probably? but there is nothing between those <select>s
[21:14:13] <celphi> then likely your database is not connecting correctly
[21:14:24] <__adrian> axisys: if there's no output, but no error (and the page keeps going past that point), that implies that there was nothing returned from that method
[21:14:44] <__adrian> suggest inspecting it.  do  var_dump($register->get('categoryOptions')); exit;
[21:15:26] <__adrian> what might be wrong depends on what that method does, and we can't answer that
[21:16:05] <axisys> ok let me var_dump .. one sec
[21:16:26] <__adrian> celphi: let's start by specifying which "model" you're talking about
[21:16:37] <__adrian> as discussed, there might be three or more of them in this flow
[21:16:46] <__adrian> i suspect you're thinking "domain model"
[21:17:01] <celphi> what would be a domain model
[21:17:01] <__adrian> i.e., the model your code uses to do things.
[21:17:11] <__adrian> it's the _behavior_
[21:17:28] <__adrian> what's the thing we're doing with this ajax?
[21:18:06] <celphi> storing it and sending it to another server
[21:18:16] <__adrian> no - what is "it"
[21:18:22] <__adrian> e.g., updating someone's email address, ...?
[21:18:35] <celphi> storing the data in form
[21:18:50] <__adrian> that's non specific
[21:18:57] <__adrian> you caould say that about basically naything
[21:18:58] <celphi> customer data info?
[21:19:08] <celphi> name , email, ect
[21:19:16] <celphi> it's a customer
[21:19:27] <celphi> ook service request info
[21:19:28] <__adrian> ok. so "create new customer"?  "update customer address"?  what would best describe the action
[21:20:01] <celphi> it's a form that a customer fills out to start a service request
[21:20:12] <__adrian> so they're requesting an appointment, or simliar?
[21:20:28] <__adrian> "new service request"
[21:20:29] <celphi> similar yes
[21:20:33] <__adrian> ok
[21:21:22] <__adrian> so this might have two parts also. e.g., if they're an existing customer, i imagine they'd be logged in already. if they're not, maybe you're also creating a new customer account?
[21:22:03] <celphi> ok a better explaination -- the form is from a customer but the person filling out the form is the customer's customer
[21:22:17] <__adrian> not sure that matters
[21:22:18] <celphi> so the customer will always be existing
[21:22:22] <__adrian> ok
[21:22:25] <celphi> but the customer customer is new
[21:22:27] <__adrian> that sounds good  :)
[21:22:37] *** Parts: steve (~steven@li677-71.members.linode.com) ()
[21:22:53] <__adrian> for simplicity, let ignore the "new customer customer" bit for now and assume that's already handled
[21:23:02] <celphi> ok
[21:23:09] <__adrian> so let's talk about the input first.
[21:23:29] <axisys> __adrian: var_dump of that was NULL..
[21:23:30] <celphi> ok. a form that is sent as json
[21:23:53] <__adrian> your input model might have {customer_id, customer_customer_id, requested_date_time, request_description}
[21:23:56] <__adrian> close enough?
[21:24:46] <__adrian> this model isn't the form, exactly, but it's the values the controller needs from the form.
[21:24:52] <celphi> we dont store the customer_customer in the sense of giving them ids. it's moreso of storing their request
[21:25:05] <__adrian> customer_customer_name then
[21:25:09] <__adrian> whatever it would be
[21:25:31] <celphi> so that- if our customer wants to know who sent a request we'd know by from the domain sent
[21:25:41] <celphi> and the data passed
[21:25:42] <__adrian> k
[21:26:05] <__adrian> the input model is for collecting and validating the inputs. e.g., make sure it's a valid date/time, make sure they filled in the description, etc.
[21:26:40] <celphi> ok so it's a class called InputModel? or is there a common naming?
[21:27:34] <__adrian> probably more like  ServiceRequest\Input\Create  but that's a different question
[21:27:55] <__adrian> the controller would then use those inputs to create a _domain model_
[21:28:26] <celphi> domain model is a class right?
[21:28:48] <__adrian> yes. the domain model represents a servicerequest in your application, and is what has all the things your app would want to _do_ with servicerequests.
[21:28:53] <celphi> So like ServiceRequestModel ?
[21:29:13] <__adrian> e.g.,  $servicerequest->setCustomer(), $servicerequest->verifyAppointment(), etc.
[21:29:31] <__adrian> naming things with their type is clunky
[21:30:10] <__adrian> i.e.,  you don't name models  "...Model", you don't name interfaces "...Interface", and so forth
[21:30:23] <__adrian> just name it what it is. it's a ServiceRequest
[21:31:12] <celphi> k
[21:32:30] <__adrian> "the controller would then use those inputs to create a _domain model_"  you might have a "factory" method or object that knows how to do this, given the particular inputs involved. like the example i gave above, you might want to accept one value (a domain name) that's easier for users to provide than the value you actually need (an ip address).
[21:32:52] <__adrian> in many cases, it might be a 1:1 mapping. but that's not "the rule."
[21:34:05] <__adrian> so now you have a $servicerequest object and you need to store it. your controller would do something like  $serviceRequestStorage->store($serviceRequest);
[21:34:54] <__adrian> that would probably have a $db and know how to make the proper INSERT query
[21:35:21] <__adrian> (but we don't know about how it works. just that it does work.)
[21:35:36] <celphi> ok
[21:35:40] <celphi> processing what you're saying
[21:36:16] <celphi> do i do the validation inside the domain model class?
[21:36:24] <__adrian> you mentioned notifying another server, so you might do that next  $newServiceRequestNotifier->tellEveryone($serviceRequest)
[21:36:36] <__adrian> "validation" of what?
[21:36:45] <celphi> of form values
[21:37:02] <celphi> like name is a string
[21:37:13] <celphi> or date is valid
[21:37:15] <__adrian> think back to the input model - that's where we validated the input values. BUT consider  requested_date_time
[21:37:31] <__adrian> we validated it so we know the date/time is valid. but do we know that it's _available_?
[21:38:15] <celphi> so the input model wouldnt check for validating ranges?
[21:38:23] <celphi> it would just validate types?
[21:38:47] *** Quits: Poboy (~Poboy@user/poboy) (Quit: Client closed)
[21:38:57] <__adrian> it could validate ranges. e.g., it might validate that the requested appointment time isn't "yesterday." but this isn't a "range" question.
[21:39:08] <__adrian> how would we find out if that time slot is available, or conflicts with someone else's service request? what part of the application knows about that?
[21:39:26] <celphi> i would assume the controller
[21:40:02] <celphi> im goig to make a miro board
[21:40:08] <__adrian> the controller is like a marble track. it gets inputs and they roll down through trap doors, etc., and come out in the right place. the controller doesn't "know" anything.
[21:40:38] <__adrian> it's the storage layer that can tell you if an appoinment time is available.
[21:41:32] *** Joins: Rockwood (~Rocky@user/rocky)
[21:41:50] <__adrian> so if you try to  ->store()  then you'll get an error because the appointment slot is already used.
[21:42:10] <__adrian> the controller would catch that and send an error response, asking the user to pick a different time.
[21:42:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Read error: Connection reset by peer)
[21:42:23] <Rockwood> __adrian, sir hi how are you?
[21:42:51] <__adrian> my point is that different things you think of as "validation" belong to different steps
[21:43:10] <Rockwood> hi
[21:44:21] <__adrian> you validate inputs. your domain model might validate that the values you give make sense. the storage layer might validate that they don't conflict with anything already stored.
[21:44:31] <__adrian> hi
[21:44:54] <Rockwood> __adrian, hows you sir?
[21:45:02] <__adrian> axisys: so you need to find out what that means. do you have documentation for the code you're using?
[21:45:09] <__adrian> doing fine, thanks
[21:45:30] <Rockwood> __adrian, what is IOS development?
[21:45:39] <__adrian> axisys: e.g., i would expect that null means there were no options
[21:45:54] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[21:46:13] <__adrian> Rockwood: IOS meaning the iphone operating system
[21:46:19] <__adrian> an iphone app
[21:46:31] <Rockwood> and PWA?
[21:46:41] <__adrian> have you googled?  ;)
[21:46:50] <Rockwood> yeah
[21:46:52] <Rockwood> sure
[21:46:54] <__adrian> https://web.dev/progressive-web-apps/
[21:47:08] <Rockwood> yes me too found similar
[21:47:34] <Rockwood> dammit java needs :(
[21:48:02] <Rockwood> today i given a web app
[21:48:09] <Rockwood> but
[21:48:10] <__adrian> what needs java
[21:48:27] <Rockwood> mobile app
[21:48:36] <Rockwood> i hard word
[21:48:46] <__adrian> not for ios
[21:48:48] <Rockwood> worked
[21:48:56] <Rockwood> means
[21:48:59] <Rockwood> ????
[21:49:14] <__adrian> ios apps are usually swift or objective-c
[21:49:54] <Rockwood> is swift language?
[21:50:07] <__adrian> google  :)
[21:50:13] <celphi> like this __adrian https://usercontent.irccloud-cdn.com/file/iqEzUDUl/image.png
[21:50:15] <Rockwood> yeah sure
[21:50:59] <__adrian> celphi: Storage does not give responses. they don't know anything about http.
[21:51:19] <celphi> storage is inserting it in though isnt it?
[21:51:23] <__adrian> Storage would just error. the Controller would look at the error and decide what response to send.
[21:51:27] <Rockwood> celphi, ajax means url nothing else
[21:51:29] <celphi> ok
[21:51:29] <__adrian> yes
[21:52:35] <celphi> is the domain model calling the requestStorage?
[21:52:44] <celphi> or is the controller calling both
[21:53:19] <celphi> im assuming the controller is calling both
[21:53:20] <__adrian> interesting that you put an [Ajax] step in there. that's like an i/o "boundary"  https://jeremiahflaga.github.io/2017/09/07/architecture-is-the-art-of-drawing-lines/
[21:53:20] <Rockwood> celphi, again your mind is programming nothing else
[21:54:13] <__adrian> "who calls storage" depends a bit on how you organize things. i tend to prefer the domain model not knowing about storage at all, but it can be convenient.
[21:56:20] <axisys> __adrian: yes, trying to find out why it gives null
[21:56:34] <__adrian> axisys: you'd need to look at docs, or failing that, the code
[21:57:57] <__adrian> we can't tell you why. we don't know
[21:58:28] <axisys> __adrian: beginning of that code looks like this https://dpaste.org/DpSv and so backtracing would be next to see what's in settings.php
[22:00:16] <__adrian> no, you need to look at the Register->get() method
[22:00:44] <__adrian> see what it does, and under what conditions it returns null
[22:02:48] <Rockwood> __adrian, sir good night
[22:03:55] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:04:59] <__adrian> ...huh. i like that article. good summary
[22:05:08] <__adrian> !+boundaries
[22:05:08] <php-bot> software architecture is all about lines and arrows. https://jeremiahflaga.github.io/2017/09/07/architecture-is-the-art-of-drawing-lines/
[22:06:09] <celphi> so DomainModel($request) ?
[22:06:38] *** Joins: keypushe- (keypusher@user/keypusher)
[22:06:40] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[22:06:41] <__adrian> the domain model should not be tied to your request
[22:06:49] <celphi> im so confused
[22:07:24] <celphi> i may just have to do this the way im used to -- seem like i cant grasp the basic layout
[22:07:42] <celphi> of what you're describing
[22:08:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[22:08:12] <__adrian> sorry, when you wrote $request i assumed you meant the http request (the input)
[22:08:18] <__adrian> is that correct or did you mean something else
[22:08:19] <celphi> yes i aam
[22:08:32] <celphi> i dont get how $_REQUEST gets parsed and validated
[22:08:41] <celphi> in your model
[22:08:51] <__adrian> in the domain model: it doesn't.
[22:09:17] <__adrian> collecting and validating input is what we use the Input model for
[22:09:32] <celphi> i know there's like amillion what ifs but im just trying to visualize how data goes from client to database with it beig validated
[22:09:33] *** keypushe- is now known as keypusher
[22:10:26] <celphi> i created a storageRequest - that gets certain things i need from a service request
[22:11:04] <celphi> am i supposed to make a InputServiceRequest to process the $_REQUEST and validate it?
[22:17:29] <__adrian> https://gist.github.com/adrian-enspired/98d2849a882a26aea2ad74b5768af5cc
[22:17:49] <__adrian> regarding the request itself: look at  "PSR-15"
[22:18:01] <__adrian> many frameworks follow this design
[22:19:16] <__adrian> you can get the inputs from an object like this, or a more simplistic design might just gather the inputs from $_POST, etc.
[22:20:51] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[22:20:53] <__adrian> sorry, PSR-7
[22:21:37] <__adrian> e.g., $input = new ServiceRequestInput($_POST);  or  $input = new ServiceRequestInput(json_decode($psr7Request->getBody()));
[22:23:46] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.va.comcast.net) (Quit: zzzz)
[22:43:39] *** Joins: tangy (tangy@user/tangy)
[22:54:48] <axisys> __adrian: it shows 'categoryOptions' is null. I am not sure how to lookinto Register->get() method
[22:54:52] <axisys> https://dpaste.org/ydTj
[22:55:59] <__adrian> axisys: you need to look at _the code_
[22:56:07] <__adrian> find the  Request  class definition
[22:56:16] <__adrian> then fine the get() method definition
[22:56:20] <__adrian> *find
[22:56:47] <__adrian> without knowing what the codee does, that dump doesn't mean anything.
[22:56:52] <__adrian> s/ee/e/
[23:00:55] *** Joins: alkavan (~wdna@bzq-79-183-26-245.red.bezeqint.net)
[23:02:54] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[23:03:46] *** Joins: novns (~novns@user/novns)
[23:07:19] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[23:12:01] <axisys> __adrian: here is the sanitized code https://dpaste.org/cW3F
[23:12:28] <__adrian> do you understand what i mean by "class definition"?
[23:13:01] <__adrian> you have a file somewhere that starts similar to  "class Register { ..."
[23:13:06] <axisys> I think that class is defined somewhere else
[23:13:22] <__adrian> and is filled with method definitions like  "public function get(...)"
[23:13:27] <axisys> let me check .. I mostly work on python .. so that make sense
[23:13:45] <__adrian> grep 'class Register'
[23:14:55] <axisys> I see it in lib dir.. let me see if I can paste it
[23:15:09] <__adrian> just the one method definition should be enough to start
[23:15:22] <__adrian> "public function get() { ... }
[23:19:26] <axisys> https://dpaste.org/cabU
[23:21:45] <__adrian> so get() is a very simple "get the property value" method. that means, yes, the problem IS that $categoryOptions is empty.
[23:22:13] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[23:22:43] <__adrian> you _did_ do $register->loadCategories(), so look there. what's it do?
[23:23:53] <da_wunder> and those get/set methods would fail if you ask something that is not defined on that class
[23:24:23] <__adrian> i'm going to assume you didn't write this class so i won't harp too much on how bad it is
[23:24:38] <da_wunder> another thing that "smells" is that part "$this->javascript = 'var arrayset = {';" - create proper getter for that and create that string there
[23:25:00] <__adrian> just be aware that it's pretty gross for reasons like da_wunder describes
[23:26:47] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[23:29:00] <relipse> what's the best way to prepare for a php interview?
[23:29:25] <__adrian> (a) apply for a job you're qualified for  (b) relax
[23:32:27] <axisys> __adrian: yeap, the guy who wrote, left :-( .. so I am suppose to fig it out :P
[23:33:01] <axisys> aparently my team member thinks index.php is working .. never visited this page until today to know what is working and what is not.
[23:33:34] <__adrian> so read the code in that method. can you tell in broad terms what it's doing?
[23:33:34] <axisys> long story short, next would be loading php-fpm instead of mod_php since we want to use mod_http2
[23:33:57] <axisys> not sure how difficult would be to convert this code to work with php-fpm
[23:34:15] <__adrian> there's nothing involved in that
[23:34:23] <axisys> btw, all these are in staging.. prod is working with older apache still until we get all these working on php-fpm
[23:34:29] *** Quits: guidoc (~guido@151.37.248.124) (Quit: WeeChat 3.2)
[23:34:45] *** Quits: genom (~g@37.214.44.252) (Remote host closed the connection)
[23:34:48] <axisys> __adrian: really .. so this code will just work with php-fpm ?
[23:35:01] <__adrian> php-fpm is a sapi that runs php
[23:35:07] <__adrian> it's not php  itself
[23:35:45] <axisys> sapi? software api?
[23:35:49] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[23:35:50] <__adrian> server api
[23:35:54] <axisys> gotcha
[23:36:58] <__adrian> switching from mod_php to php-fpm is not difficult - and it's all server configuration, your actual php code doesn't care.
[23:37:21] <axisys> sweet!
[23:37:47] <__adrian> which goes back to the original point that, if you upgrade apache and you php script stops working, it's not a php problem. it's environmental.
[23:38:12] <__adrian> can you read loadCategories() and tell, in broad terms, what it's doing?
[23:38:29] <__adrian> https://dpaste.org/cabU#L31,32,33,34,35,36,37,38,39,40,41
[23:38:49] <__adrian> lol that's a crappy L format
[23:39:14] <__adrian> good thing i'm not selecting more lines
[23:39:38] *** Joins: molt (~molt@79.140.150.225)
[23:40:10] *** Quits: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[23:42:00] <axisys> __adrian: let me find out what loadCategories() doing.. I know it suppose to make sure a user do not request for access to a Jira project that is archived. but let me read more. give me a sec
[23:43:29] *** Joins: Poboy (~Poboy@user/poboy)
[23:44:12] <axisys> __adrian: yep it is to get list of projects generated by bamboo
[23:45:15] <__adrian> sure, but i mean step through the lines of code
[23:45:29] <__adrian> :33 does  foreach ($results as $category) { ...
[23:45:35] <__adrian> where's $results come from?
[23:47:37] <axisys> I do see list of projects on working copy in /register page.. so somehow it gets that list and feed into $results
[23:48:01] <axisys> I am not sure of more than that :-(
[23:49:41] <__adrian> find where $results is assigned. look up a few lines for   $results =
[23:51:57] *** Joins: kerunaru (~Jmcb@64.red-79-146-101.dynamicip.rima-tde.net)
[23:52:21] <axisys> yeah I do see $results = $this->projects->findCategories();
[23:52:46] <__adrian> so  var_dump($this->projects->findCategories());exit;
[23:53:30] <__adrian> guessing it's empty. if so, go to that method and find out what _it_ does.
[23:55:27] <axisys> I do not have php-cli to run lib/register/register.class.php
[23:57:00] <__adrian> you don't need to run it
[23:57:25] <__adrian> (and "running" it in that sense wouldn't do anything useful anyway)
[23:57:37] <__adrian> add that var_dump() and then reload your webpage
