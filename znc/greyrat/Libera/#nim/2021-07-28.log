[00:10:08] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[00:11:00] <FromDiscord> <ynfle (ynfle)> @\_discord\_237452759975067650\:t2bot.io I'm pretty sure it's a known issue
[00:24:47] <FromDiscord> <ynfle (ynfle)> To people on the other side of the bridges see the mention properly?
[00:36:55] <FromDiscord> <haxscramper> No, they are seen as `@_discord_237452759975067650:t2bot.io`
[00:38:21] <FromDiscord> <ynfle (ynfle)> @reilly  I'm pretty sure it's a known issue
[00:38:28] <FromDiscord> <ynfle (ynfle)> Did that come through properly?
[00:39:59] <FromDiscord> <haxscramper> No, this one does not work
[00:40:05] <FromDiscord> <haxscramper> @haxscramper\:
[00:40:26] <FromDiscord> <haxscramper> You need to do it via autocomplete from the matrix side I think
[00:43:44] <FromDiscord> <ynfle (ynfle)> @reilly#1078 I'm pretty sure it's a known issue
[00:43:49] <FromDiscord> <ynfle (ynfle)> Did that work?
[00:45:45] <FromDiscord> <haxscramper> No. There is a "nim bridge testing" room on the matrix
[00:46:03] <FromDiscord> <haxscramper> That is bridged to discord, so you can figure out things there
[00:46:41] <FromDiscord> <reilly> I just got back from grabbing lunch, so I wouldn't have seen it until now anyway.
[00:47:00] <FromDiscord> <reilly> `{.push warnings: off.}` did the job.
[00:47:04] <FromDiscord> <ynfle (ynfle)> Lol just testing
[01:02:54] <fn> <11ForumUpdaterBot99> New thread by Akito: String related Segmentation Faults, see https://forum.nim-lang.org/t/8276
[01:12:26] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[01:29:31] <FromDiscord> <Generational Me!> nim jobs? Can't find?
[01:29:54] <FromDiscord> <leorize> there's a jobs channel in this server
[02:17:40] *** Joins: thunder (~thunder@user/thunder)
[02:20:15] *** Quits: max22- (~maxime@2a01cb08833598007a1e380bc6c37102.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:44:56] <FromDiscord> <bOrEd> Pls use wish
[03:27:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[05:20:49] <FromDiscord> <Alea> why does --app:gui link a whole ton of win32 libs?
[05:21:02] <FromDiscord> <Alea> I just want to hide the cmd prompt that pops up
[05:23:55] <FromDiscord> <Alea> er actually it happens sometimes even without that option
[05:24:46] <FromDiscord> <Alea> sent a code paste, see https://play.nim-lang.org/#ix=3ugy
[05:31:42] <FromDiscord> <reilly> Trying to help my (less technically inclined friend) install Nim. They're unwilling to disable Windows Defender, which keeps flagging Testament as malicious, so I told him how to compile it himself. We're nearly there, it's just that nimble keeps throwing `could not load: (libcrypto-1_1-x64|libeay64).dll` every time he tries to run it. Not really sure what to do about this, since we're on Windows and can't just `apt-get` something.
[05:33:33] <FromDiscord> <ElegantBeef> The zips you can download should have the dlls you can plop down
[05:34:55] <FromDiscord> <juan_carlos> If is just learning probably wont need Testament just yet... :p
[05:39:31] <FromDiscord> <reilly> In reply to @ElegantBeef "The zips you can": In what folder, though?
[05:40:05] <FromDiscord> <Elegantbeef> Next to the nimble binary i'd imagine
[06:01:47] <FromDiscord> <reilly> In reply to @ElegantBeef "The zips you can": I have that DLL in Nim's bin folder now, but running `nimble` gives the same error... I don't have libeay64 (and I can't seem to find a download anywhere!) but I would at least expect it to only say libeay64 if it was able to find libcrypto...
[06:08:04] <FromDiscord> <reilly>  https://media.discordapp.net/attachments/371759389889003532/869755551255523398/libs.zip
[06:09:59] <FromDiscord> <reilly> Well, I solved the problem by just sending him every .dll in my nimble bin folder. That's one way of doing it, I guess.
[06:30:29] <FromDiscord> <generic linux user> 🙂.
[06:50:53] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:10:21] <FromDiscord> <SirJosh> In reply to @Alea "why does --app:gui link": if you specify you want a GUI application, nim will hook into the right libraries to ensure that you can use graphics libraries↵linking to those libs on windows shouldn't be an issue, especially anything win32 related (since those are pretty much guaranteed to be on all windows systems)
[07:14:13] *** Joins: vicfred (~vicfred@user/vicfred)
[08:08:33] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:48:44] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 265 seconds)
[09:13:23] <FromDiscord> <saem> Then that's recoverable, crashing out a users program isn't a great library decision. Basically always a bad idea.
[09:38:48] <FromDiscord> <bolino> Hello! Do you know how to transform a JsonNode into a string?
[09:39:28] <FromDiscord> <Rika> $
[09:39:32] <FromDiscord> <bolino> I tried `.getStr()` but it return an empty string.
[09:39:32] <FromDiscord> <Elegantbeef> you can do `$` or `pretty`
[09:39:47] <FromDiscord> <Rika> One is uglified the other is self explanatory
[09:40:01] <FromDiscord> <Rika> Pick your poison
[09:40:17] <FromDiscord> <bolino> Oh, OK! Stupid me. Thanks a lot.
[09:42:21] <FromDiscord> <Rika> Honestly though I think .string should work similarly to $
[09:42:40] <FromDiscord> <Rika> Hmm
[09:43:14] <FromDiscord> <Rika> It would be inconsistent with what Nim does with other types though I guess
[10:07:04] <FromDiscord> <reilly> Does anyone know how to handle collision (Area2D, CollisionShape2D) in Godot-Nim?
[10:10:02] <FromDiscord> <Rika> Might be more appropriate for #gamedev
[10:50:29] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:13:19] *** Joins: Kostrak (~Kostrak@176-74-132-138.netdatacomm.cz)
[11:19:10] <FromDiscord> <planetis> Well not sure about it if a signal fails and another thread is in a wait, then a sentinel will not be reached, i think so.
[11:20:56] <FromDiscord> <planetis> unless it is awaken somehow
[11:21:56] <FromDiscord> <planetis> I am not sure thats why i am asking here, in case someone knows
[11:24:02] <FromDiscord> <saem> My point is that, as a strong default, unless you know exceptionally well don't make these types of decisions in libraries.
[11:27:32] *** Joins: max22- (~maxime@2a01cb08833598001911e69b6cc442ab.ipv6.abo.wanadoo.fr)
[11:29:59] <FromDiscord> <Rika> You have to be really sure that you cannot recover before you raise a defect
[12:14:34] *** Quits: Kostrak (~Kostrak@176-74-132-138.netdatacomm.cz) (Quit: Leaving)
[12:59:06] <fn> <11ForumUpdaterBot99> New thread by Rforcen: PIG's, see https://forum.nim-lang.org/t/8278
[13:08:02] *** Quits: max22- (~maxime@2a01cb08833598001911e69b6cc442ab.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[13:26:35] *** Joins: pro (~pro@user/pro)
[13:35:23] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[13:45:15] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:17:49] *** Joins: pro (~pro@user/pro)
[14:48:44] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> Debian package for recent Nim version?  The recent stable Debian Bullseye version provides Nim-1.4.2 only. Is there any site where I can get a .deb package for Nim-1.4.8?  many thanks for a hint.
[15:01:14] <FromDiscord> <generic linux user> its not that hard to build though
[15:01:42] <FromDiscord> <generic linux user> and, you shall download the latest rpm from opensuse and use alien to convert it to deb and install
[15:04:42] <FromDiscord> <generic linux user> In reply to @@hjarausch_gitlab-5fa43a7bd73408 "Debian package for recent": do you really need a deb file specifically , you can get it installed from the nightlies
[15:08:11] *** Joins: max22- (~maxime@2a01cb0883359800ef828a565792e3bb.ipv6.abo.wanadoo.fr)
[15:15:44] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> Thanks, but Nim on OpenSuse is even older  (1.2)
[15:16:05] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[15:20:18] <FromDiscord> <generic linux user> then fedora
[15:20:27] <FromDiscord> <generic linux user> and also nightlies
[15:21:25] <FromDiscord> <generic linux user> <https://github.com/nim-lang/nightlies/releases>
[15:42:19] *** Quits: aeverr (~deodex@ai126197048203.18.access-internet.ne.jp) (Quit: i)
[16:09:36] *** Joins: arkurious (~arkurious@user/arkurious)
[16:14:51] <FromDiscord> <gerwy> does anyone know something similar to this https://github.com/gobuffalo/packr↵but made for nim?
[16:15:18] <FromDiscord> <gerwy> what i need is to include assets inside of the binary
[16:15:30] <FromDiscord> <gerwy> to have single exec with all the stuff inside
[16:20:01] <FromDiscord> <Rika> xmonader/nimassets
[16:20:38] <FromDiscord> <Rika> or just `const xxx = staticread("thefilename")` i guess would work too?
[16:20:56] <FromDiscord> <gerwy> In reply to @Rika "xmonader/nimassets": :OO
[16:21:24] <FromDiscord> <gerwy> the first one is cool
[16:21:42] <FromDiscord> <gerwy> i will try other one too i didn't know about that function thaaaanks
[16:22:07] <FromDiscord> <gerwy> there is idea for a game jam so i look for solutions already to not waste time hah
[16:22:27] <FromDiscord> <Rika> do game jams have limits other than time?
[16:22:41] <FromDiscord> <Rika> i remember some sort of game jam that had filesize limits, i forgot the name
[16:22:48] <FromDiscord> <Rika> one was 4kb and another was 1kb afaik
[16:22:51] <FromDiscord> <Rika> dont remember
[16:24:02] <FromDiscord> <gerwy> In reply to @Rika "do game jams have": yeah, im in community of (already finished sorry :< ) 4MB game jam where the limit was that the entire game couldn't be above 4mb including assets and everything
[16:24:38] <FromDiscord> <gerwy> and now because it ended we think about more ideas for games , the people there are so skilled i feel dumb there
[16:25:31] <FromDiscord> <gerwy> there is already a lot of ideas, one of the best i think is 1MB game jam
[16:25:53] <FromDiscord> <gerwy> but also 256KB game and only a single executable
[16:27:36] <FromDiscord> <Rika> 256kb sounds fun
[16:27:51] <FromDiscord> <enthus1ast> tja
[16:27:56] <FromDiscord> <Rika> tja?
[16:28:09] <FromDiscord> <gerwy> ye
[16:28:29] <FromDiscord> <gerwy> because 4MB was kinda a loot to work with haha, a lot of people did games below 100KB↵if i finished my game i would be in like 170KB with all the assets, code and some basic sfx
[16:29:06] <FromDiscord> <gerwy> it was a good opportunity to learn nim so thats how i started↵with all the compiler parameters i could to optimize by size and then use upx on it with lzma
[16:29:34] <FromDiscord> <gerwy> In reply to @Rika "256kb sounds fun": exactly i think it could be very cool, but the problem is that the lower you go the harder it gets to include any sfx or music
[16:30:34] <FromDiscord> <Rika> some games do away with such a thing and its ok
[16:30:46] <FromDiscord> <Rika> imo i would rather no bgm over a very repetitive one
[16:31:05] <FromDiscord> <gerwy> there was idea to make proc generated game jam↵where all the assets needs to be generated with code
[16:34:00] *** Quits: max22- (~maxime@2a01cb0883359800ef828a565792e3bb.ipv6.abo.wanadoo.fr) (Ping timeout: 276 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:47] <FromDiscord> <Rika> music cant easily be generated that way
[16:49:08] <FromDiscord> <gerwy> well thats your problem then, the size wouldn't be the limit then
[16:56:47] <federico3> @hjarausch_gitlab-5fa43a7bd73408 an updated package is in the Debian Experimental archive
[16:57:44] <federico3> (1.4.8)
[17:01:10] <FromDiscord> <generic linux user> experimental!!
[17:01:20] <federico3> what?
[17:09:14] *** Joins: pro (~pro@user/pro)
[17:23:39] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> @\_discord\_709044657232936960\_federico3  From my stable Debian release (Bullseye) it's not possible to use
[17:24:32] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> apt -t experimental install nim.   I have to search for a means to get a .deb file, or I will resort to build Nim from source (GIT)
[17:25:31] <federico3> Bullseye is not released yet. Once it is released I'll backport 1.4.8 to it
[17:26:26] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[17:27:07] <federico3> besides, I just tried installing it from experimental and it worked
[17:28:25] <federico3> you can also just grab the .deb from https://packages.debian.org/experimental/nim if you don't want to configure apt
[17:28:42] *** Joins: max22- (~maxime@2a01cb0883359800447e42d2a60e0643.ipv6.abo.wanadoo.fr)
[17:28:55] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (Read error: Connection reset by peer)
[17:28:56] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[17:29:12] <Freneticks> i'm discovering nim, so I just nimble install lib but when i run nim compile --run it's say : Error: cannot open file: sdl2. I'm confused, someone can show me the path ?
[17:29:19] <FromDiscord> <generic linux user> whyy backport
[17:33:51] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> Many thanks to frederico3
[17:44:00] <FromDiscord> <vindaar> Freneticks\: the nim library for sdl2 is only a wrapper around the C library that is sdl2. you need the shared library of that, which is then loaded at runtime. search for how to install sdl2 on your distribution
[17:48:19] <FromDiscord> <SolitudeSF> error indicates that nim cant find the module
[17:48:46] <Freneticks> it seems it's about the nim lib not the C lib (i already have it since i can compile CPP example)
[17:50:42] *** Quits: max22- (~maxime@2a01cb0883359800447e42d2a60e0643.ipv6.abo.wanadoo.fr) (Ping timeout: 276 seconds)
[17:56:47] <FromDiscord> <vindaar> ah, you're right. sorry on the phone and didn't read properly 🤦‍♂️
[17:58:27] <FromDiscord> <vindaar> what does `nimble path sdl2` say for you? if it can't find anything doing a `nimble install sdl2` should be all. just keep in mind that there's like 3 (or more) different sdl2 wrappers
[18:01:42] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[18:02:30] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[18:09:11] <Freneticks> vindaar working sdl2 but the wraper i use is not found -> sdl2_nim
[18:11:08] <Freneticks> I mean i can nimble install sdl2_nim, but  nimble path sdl2_nim : Error: At least one of the specified packages was not found
[18:15:40] <FromDiscord> <vindaar> but nimble install seems like it's working correctly?
[18:16:26] <Freneticks> yeah
[18:17:19] <FromDiscord> <vindaar> maybe there's some weirdness with the name of the package?
[18:18:58] <Freneticks> probably because there is some issue on the github about that but i'm too much ignorant about the nim way of handle this, so not sure what to do ><
[18:22:02] <FromDiscord> <vindaar> I'm seeing that the module needs to be imported as `sdl2nim`. so maybe `nimble path sdl2nim` would show the correct path
[18:22:08] <FromDiscord> <vindaar> eg here https://github.com/Vladar4/sdl2_nim/blob/master/examples/ex101_init.nim
[18:23:04] <FromDiscord> <vindaar> Also this seems related https://github.com/Vladar4/sdl2_nim/issues/35
[18:24:52] *** Joins: thunder (~thunder@user/thunder)
[18:38:16] *** Quits: Riceberry (~Riceberry@ppp-94-66-136-39.home.otenet.gr) (Quit: Client closed)
[18:49:30] *** Joins: rockcavera (~rc@192.12.115.195)
[18:49:30] *** Quits: rockcavera (~rc@192.12.115.195) (Changing host)
[18:49:30] *** Joins: rockcavera (~rc@user/rockcavera)
[19:00:18] *** Joins: max22- (~maxime@2a01cb0883359800c6da4a5e88c2af49.ipv6.abo.wanadoo.fr)
[19:01:22] <Freneticks> i have the same error with sdl2nim and yeah i already tried to compile the example
[19:01:27] <Freneticks> but i have the not found error
[19:04:19] *** Quits: max22- (~maxime@2a01cb0883359800c6da4a5e88c2af49.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:04:38] *** Joins: max22- (~maxime@2a01cb088335980065a24f30b6c4d982.ipv6.abo.wanadoo.fr)
[19:08:32] <fn> <11ForumUpdaterBot99> New thread by Xigoi: What is the difference between `quote do:` and just `quote:`?, see https://forum.nim-lang.org/t/8279
[19:23:31] <FromDiscord> <enthus1ast> Wrong channel 😁↵(@Rika)
[19:23:52] <FromDiscord> <Rika> ah i see
[19:27:25] <FromDiscord> <lamersc.com 🐧> Could someone explain what a cycle collector is?
[19:27:46] <FromDiscord> <konsumlamm> it collects reference cycles
[19:27:50] <FromDiscord> <lamersc.com 🐧> I’ve seen people saying orc has it, but don’t fully understand what it is
[19:27:56] <FromDiscord> <Rika> whats the part that you dont understand
[19:28:05] *** Quits: max22- (~maxime@2a01cb088335980065a24f30b6c4d982.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[19:28:59] <FromDiscord> <lamersc.com 🐧> What exactly is a reference cycle 😅
[19:29:33] *** Joins: max22- (~maxime@2a01cb088335980065a24f30b6c4d982.ipv6.abo.wanadoo.fr)
[19:29:40] <FromDiscord> <lamersc.com 🐧> Probably sound like an idiot, but just trying to make more sense of it
[19:30:43] <FromDiscord> <konsumlamm> if object A refers to object B and object B refers to A
[19:31:05] <FromDiscord> <Rika> In reply to @lamersc.com 🐧 "Probably sound like an": we all sound like idiots to at least someone in this world
[19:31:12] <FromDiscord> <konsumlamm> reference counting won't collect them, since the refcount of each object is at least 1
[19:31:37] <FromDiscord> <konsumlamm> so if noone else has a reference to A or B, it could be collected
[19:31:44] <FromDiscord> <konsumlamm> which is the job of the cycle collector
[19:32:16] <FromDiscord> <lamersc.com 🐧> Okay, that makes much more sense now
[19:32:50] <FromDiscord> <Rika> the catch with orc is that it makes it "nondeterministic" meaning that it's "unpredictable" in a way
[19:32:58] <FromDiscord> <Rika> because of the cycle collector
[19:33:44] <FromDiscord> <lamersc.com 🐧> That’s much more clear now 😅 I got so confused with it when originally reading on the docs
[19:33:44] <FromDiscord> <Rika> In reply to @Rika "the catch with orc": this makes it difficult to use in realtime systems, where if something doesnt happen at exactly this precise time, the system fails
[19:34:05] <FromDiscord> <Rika> which is why there's both arc and orc
[19:34:17] <FromDiscord> <lamersc.com 🐧> It’d be a better bet to use orc for something, say an HTTP server in that sense then
[19:34:21] <FromDiscord> <Rika> yes
[19:34:30] <FromDiscord> <lamersc.com 🐧> And arc in an embedded/OS environment?
[19:34:33] <FromDiscord> <Rika> yes
[19:34:47] <FromDiscord> <Rika> or audio processing
[19:35:13] <FromDiscord> <lamersc.com 🐧> Thanks for clearing things up for me 😅 I was searching around, but couldn’t find much straight forward answers
[19:35:23] <FromDiscord> <Rika> well, i guess audio processing is soft realtime (something happening late degrades the system but it does not fail)
[19:35:48] <federico3> or just ARC
[19:36:54] <FromDiscord> <lamersc.com 🐧> @Rika @konsumlamm thank for your explaining 😄
[19:57:23] <arkanoid> Just out of curiosity, which backend would you add to nim and why?
[19:58:36] <fn> <06Prestige99> As in, a _new_ backend?
[19:59:02] <FromDiscord> <Rika> i wouldnt, if i had the resources to add a backend i would fix bugs with it instead
[19:59:17] <fn> <06Prestige99> ^ agreed
[19:59:28] <FromDiscord> <PsychoClay> php maybe
[19:59:31] <fn> <06Prestige99> or maybe build out better js support
[19:59:47] <FromDiscord> <Rika> better js support could be nice but i cant see much issues with it now
[19:59:52] <FromDiscord> <Rika> In reply to @PsychoClay "php maybe": well why?
[20:00:13] <FromDiscord> <PsychoClay> because i dont like php syntax
[20:00:17] <FromDiscord> <PsychoClay> and prefer nim's
[20:00:25] <arkanoid> Why don't improve llvm support and then go from llvm to web via emscripten?
[20:00:29] <FromDiscord> <Rika> i mean you could jsut write to C...
[20:00:46] <FromDiscord> <Rika> php is a server language though
[20:01:17] <arkanoid> You should really hate yourself to start a php project in 2021
[20:01:48] <FromDiscord> <Rika> haha...
[20:01:48] <FromDiscord> <PsychoClay> well i was forced to use php sadly
[20:01:51] <FromDiscord> <Rika> hahahaha....
[20:01:59] <federico3> urgh :(
[20:02:01] <FromDiscord> <Rika> yeah hahahahahaha
[20:02:05] <FromDiscord> <PsychoClay> so i thought it would be nice to write it in a different lang
[20:02:17] <FromDiscord> <Rika> really nice to have to work on a php project hahahahahahahaa'
[20:02:30] <FromDiscord> <PsychoClay> and then just transpile to php
[20:02:40] <federico3> Rika: poor PsychoClay, have some mercy
[20:02:57] <fn> <06Prestige99> @Rika I haven't gotten into the js side much but I've heard people have issues interfacing with some dependencies
[20:03:02] <FromDiscord> <Rika> <--- also has to work on a php backend
[20:03:16] <fn> <06Prestige99> probably from having to write a bunch of wrappers
[20:03:30] <arkanoid> PsychoClay, please escape from that madness, but in the meantime https://haxe.org/
[20:03:49] <FromDiscord> <Rika> its a bit different from nim
[20:03:51] <FromDiscord> <Rika> haxe i mean
[20:03:56] <FromDiscord> <PsychoClay> i actually jsut started to use hace for game
[20:04:02] <FromDiscord> <PsychoClay> (edit) "hace" => "haxe"
[20:04:16] <FromDiscord> <PsychoClay> i dont think it compile to php tho right?
[20:04:23] <FromDiscord> <PsychoClay> (edit) "compile" => "compiles"
[20:04:45] <arkanoid> It does since 2016
[20:05:25] <FromDiscord> <PsychoClay> hmm i might try that then
[20:09:20] <arkanoid> Another wild option would be to compile php stack to LLVM IR via clang, nim to same via nlvm, then bind the two with some thing and produce your binary Frankenstein
[20:11:01] <arkanoid> This might make this mess easier https://www.graalvm.org/
[20:11:11] <FromDiscord> <PsychoClay> isnt php supposed to be used on a webserver not in binary form?
[20:11:16] <FromDiscord> <Rika> yes
[20:12:03] <arkanoid> Who cares? No browser is going to peek into your backend (hopefully)
[20:12:27] <FromDiscord> <Rika> xss exploiters be like pepega
[20:12:59] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/commit/35b0cc67e89a929270e77c07ecbf06f7cced3668
[20:13:05] <FromDiscord> <haxscramper> we had php backend
[20:13:31] <arkanoid> WHY
[20:14:29] <FromDiscord> <PsychoClay> maybe i should remake it
[20:14:51] <FromDiscord> <haxscramper> it is easy to make simple nim-\>X transpiler
[20:14:52] <FromDiscord> <haxscramper> I made a lua example somewher
[20:15:40] <arkanoid> I want nim to common lisp
[20:15:52] <FromDiscord> <haxscramper> https://github.com/haxscramper/hnimast/blob/ece4676973258330e323fefe15ea81f39ab2ed18/tests/tCompilerAux.nim#L15
[20:16:11] <FromDiscord> <Rika> arkanoid, why...
[20:16:19] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[20:16:32] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3ukl
[20:16:38] <FromDiscord> <PsychoClay> wouldnt you need to generate php stdlib nim binding things?
[20:16:39] <FromDiscord> <haxscramper> In reply to @Rika "arkanoid, why...": to not write lisp
[20:16:46] <FromDiscord> <Rika> LMAO i see
[20:16:51] <arkanoid> Because that's the only way to get even more powerful metaprogramming
[20:17:03] <FromDiscord> <haxscramper> In reply to @PsychoClay "wouldnt you need to": yes, I have php parser so
[20:17:34] <FromDiscord> <haxscramper> https://haxscramper.github.io/htsparse/src/htsparse/php/php_wrapper.html#parsePhpString%2Cptr.string%2Cbool
[20:18:04] <FromDiscord> <haxscramper> So you can make PHP -> nim wrapper, php backend
[20:18:47] <arkanoid> That's seriously scary
[20:18:50] <FromDiscord> <haxscramper> I made a java->nim transpiler with this library, implementation is pretty straightforward
[20:19:29] <FromDiscord> <haxscramper> and the fun part is - I did it to rewrite one single project from java to nim
[20:19:38] <FromDiscord> <haxscramper> and I think it was faster this way
[20:19:49] <arkanoid> haxscramper, what's your background, what gives you the confidence to wrap full languages with custom parsers?
[20:20:04] <FromDiscord> <haxscramper> this is a tree-sitter grammar
[20:20:28] <FromDiscord> <haxscramper> but tree-sitter is the best you can get for that sort of thing
[20:20:39] <FromDiscord> <haxscramper> even github uses it for semantic analysis
[20:21:30] <arkanoid> Nobody though me how to deal with grammars back in university :( I should really learn something in that direction. I also want to build my own hammers instead of googling them
[20:22:50] <FromDiscord> <haxscramper> After learning about different parsing algorithms I've come to the conclusion that I'm going to writer recursive descent by hand if needed, and use already existing tools for everything else
[20:23:01] <FromDiscord> <haxscramper> and latter one does not require any specific knowledge
[20:23:23] <FromDiscord> <haxscramper> well, it is preferable to know how GLR works to write tree-sitter grammars, but that's it
[20:23:30] <FromDiscord> <haxscramper> and LR/LALR for bison
[20:23:56] <FromDiscord> <haxscramper> But I haven't added support for bison grammars in htsparse yet, and they are not as good as tree-sitter anyway
[20:24:44] <FromDiscord> <@bracketmaster-5a708063d73408ce4> How do you prefer to do parsing in nim?
[20:25:06] <FromDiscord> <haxscramper> roll recursive descent parser by hand
[20:25:07] <arkanoid> But with tree sitter you mean a generic parsing strategy or this specific project? https://tree-sitter.github.io/tree-sitter/
[20:25:16] <FromDiscord> <haxscramper> this project
[20:25:37] <FromDiscord> <haxscramper> tree-sitter is just sqlite-tier level of quality project IMO, while bison looks like I would need a whole load of duct tape to make it usable
[20:26:42] <FromDiscord> <haxscramper> roll recursive descent parser by hand ... or more specifically I have recursive descent parser primitives in `hmisc`, and I base things on that
[20:27:43] <arkanoid> Would you suggest an introductory read for this topic?
[20:27:55] <FromDiscord> <haxscramper> recursive descent or tree-sitter?
[20:28:15] <FromDiscord> <Rika> what's wrong with tree-sitter?
[20:28:23] <FromDiscord> <haxscramper> nothing?
[20:28:42] <FromDiscord> <haxscramper> well, generating parser code is a pain in the as
[20:28:43] <FromDiscord> <haxscramper> ass
[20:28:48] <FromDiscord> <haxscramper> since it depends on npm
[20:28:49] <arkanoid> If I start with "parsers" I end up in MIT courseware and then though the rabbit hole till the death of the universe
[20:28:55] <FromDiscord> <Rika> oh i assumed "xxx-tier level" was negative
[20:29:30] <FromDiscord> <haxscramper> well, I used `xxx = sqlite`, and I don't think anyone would use it a negative example. But anyway
[20:29:34] <FromDiscord> <haxscramper> I learned RD mostly by example, with some theoretical background like dragon book
[20:29:37] <FromDiscord> <haxscramper> https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6#examples
[20:29:50] <FromDiscord> <haxscramper> Most of the languages written in nim use recrusive descent parsers
[20:30:12] <arkanoid> Do you have any idea where sqlite is installed? Sqlite is at the root of EVERYTHING nowadays
[20:31:13] <FromDiscord> <haxscramper> I wrote seveal project that involved parsers in one form or another, but right now I don't think I would want to put them on display as an example, so if you want a recommendation as to what projects can be used as referece
[20:31:15] <FromDiscord> <Rika> being used everywhere doesnt mean its good, i mean, look at php
[20:31:30] <FromDiscord> <haxscramper> You can see something by lqdev
[20:32:08] <FromDiscord> <haxscramper> of well https://github.com/liquidev/tsuki/commit/27c04d63216783126aeb9627121c4bf4aa5f44c5
[20:32:21] <FromDiscord> <haxscramper> things are getting rusty there
[20:32:31] <FromDiscord> <rishavs (Rishav Sharan)> I just added the nim stdlib http server in the techempower benchmark.↵https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/Nim/nim-stdlib↵As none of the nim frameworks have full suite done, my main motivation was to have at least one nim framework which has end to end tests
[20:32:42] <fn> <11ForumUpdaterBot99> New thread by Rishavs: Techempower entry for nim stdlib http server, see https://forum.nim-lang.org/t/8280
[20:32:52] <arkanoid> Thanks haxscramper
[20:33:29] <FromDiscord> <haxscramper> I personally spend too much time theorizing and reading about different parser algorithms
[20:33:48] <FromDiscord> <haxscramper> but with RD you can just start coding and learn by mistakes
[20:34:19] <FromDiscord> <haxscramper> I suppose. At least RD parsers tend to be pretty straightforward in terms of code, and you can kind of figure out that your implementation is bad
[20:34:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:28] <FromDiscord> <haxscramper> using the same approach as any regilar code
[20:34:55] <arkanoid> I am googling "recursive descend", just to let you know my level of knowledge on the topic. But I've also started writing Haskell so the word " recursive"  is much more familiar now
[20:37:29] <FromDiscord> <Split Toe Derby> is there a library to "tcpdump" and filter certain received packets in realtime ?
[20:38:54] <arkanoid> libpcap
[20:46:18] <FromDiscord> <haxscramper> https://wandbox.org/permlink/62xIk9LT2cJmHIi9
[20:46:50] <FromDiscord> <haxscramper> RD is just a collection of simple patterns like "parse token", "parse A+", "parse A?"
[20:50:57] <arkanoid> Seems like how I would write it. It still smells like a chain of "if" or "case"
[20:51:59] <FromDiscord> <Split Toe Derby> thanks arkanoid
[20:52:05] <arkanoid> Np
[20:52:26] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 256 seconds)
[20:53:35] <FromDiscord> <haxscramper> if you think there is some hidden complexity in RD that you just don't see - there is not. It really is just a lot of case/if/while loops
[20:53:36] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/devel/compiler/parser.nim#L2218
[20:54:14] <FromDiscord> <haxscramper> You need to embed pratt/shunting-yard parser for expressions, but it is a separate topic
[20:58:16] <arkanoid> It feels like "go functional is all about chaining pure functions!" and then you end up in category theory and even more higher typed kinds and you go meh
[20:59:15] <FromDiscord> <konsumlamm> you can perfectly fine learn/use FP withput ever learning about category theory
[20:59:25] <FromDiscord> <konsumlamm> (edit) "withput" => "without"
[21:06:07] <arkanoid> Sure, I was not complaining. Parsing is a complex matter and I do really think that learning how a parser is made can help me identify better the tokens in every programming language and paradigm
[21:39:02] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[22:03:40] <FromDiscord> <codic> i'm curious, why do people use a header pragma next to importc? why do you need the header if the prototype is right there?
[22:09:18] <FromDiscord> <woodgiraffe (woodgiraffe)> hi, can someone point me towards how to use seq's from C, like iterate over them, free them etc. - I'm using `--gc:arc`
[22:10:35] <FromDiscord> <dom96> In reply to @rishavs (Rishav Sharan) "I just added the": that's cool but I fear will just make Nim seem slow :/
[22:12:56] <FromDiscord> <dom96> yep, you're using db_postgres which isn't async
[22:16:49] <FromDiscord> <haxscramper> In reply to @codic "i'm curious, why do": It is mandatory in order for compiler to `#include` things correctly
[22:20:11] <FromDiscord> <codic> why does it need to #include anything at all
[22:20:24] <FromDiscord> <codic> we give the compiler the prototype, it spits out the equivalent C prototype
[22:20:32] <FromDiscord> <codic> header files are just lists of function prototypes
[22:24:29] <FromDiscord> <leorize> because there's a "hack" that Nim uses to wrap things faster, it's to use the definition in the headers themselves as not all of the prototypes can be replicated in Nim
[22:24:38] <FromDiscord> <haxscramper> In reply to @woodgiraffe (woodgiraffe) "hi, can someone point": https://wandbox.org/permlink/B60BTPAUIHn5Q5Cs
[22:24:56] <FromDiscord> <PsychoClay> is starting a thread from another not a thing you can do in nim?
[22:25:14] <FromDiscord> <haxscramper> freeing sequence etc. is probably done via some GC hackery, idk what exactly is needed
[22:25:41] <FromDiscord> <haxscramper> In reply to @codic "header files are just": because C function prototype does not exist in a vacuum
[22:25:53] <FromDiscord> <haxscramper> there are types, additional deps
[22:26:02] <FromDiscord> <haxscramper> If you don't need header then use `dynlib`
[22:26:26] <FromDiscord> <haxscramper> https://github.com/nimterop/nimterop#header-vs-dynlib
[22:26:29] <fn> <12R2D299> 4GitHub: 7"Nimterop is a Nim package that aims to make C/C++ interop seamless"
[22:26:47] <FromDiscord> <haxscramper> no the package itself, but the explanation in the readme
[22:27:57] <FromDiscord> <haxscramper> (edit) "no" => "not"
[22:28:23] <FromDiscord> <leorize> if you use `arc` then freeing seq is just `eqdestroy`
[22:30:24] <FromDiscord> <haxscramper> And if I want to construct a sequence from the C? I just need to use something like `typedef struct NimSeq { int cap, len; void payload; } NimSeq;` and `malloc`/cast it around?
[22:36:27] <FromDiscord> <codic> sent a long message, see http://ix.io/3ul0
[22:36:52] <FromDiscord> <haxscramper> If you dont' want header or dynlib then you don't need to importc as well
[22:36:56] <FromDiscord> <haxscramper> you need to exportc
[22:37:21] <FromDiscord> <haxscramper> you declare procedure prototype, nim will generate it as you wrote
[22:37:26] <FromDiscord> <haxscramper> and linker will figure it out
[22:37:46] <FromDiscord> <codic> oh ok
[22:38:07] <FromDiscord> <haxscramper> though this does not work
[22:38:16] <FromDiscord> <haxscramper> but the idea is somewhere along these lines
[22:38:27] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3ul1
[22:38:50] <FromDiscord> <haxscramper> make nim generate function declaration in C, then hope linker will do it's job
[22:39:22] <FromDiscord> <haxscramper> `proc seq_ops(seqData: pointer, len: cint) {.exportc, nodecl.} = discard`
[22:39:30] <FromDiscord> <haxscramper> https://wandbox.org/permlink/gfQkyktECy9iOdE2 I reused the same example from above
[22:39:42] <FromDiscord> <haxscramper> But I think now it does what you expect it to
[22:39:58] <FromDiscord> <leorize> export newSeq to C then use it
[22:40:17] <FromDiscord> <leorize> using malloc is dangerous since it's not the same as Nim's allocator
[22:40:26] <FromDiscord> <haxscramper> But `newSeq` is a generic procedure (https://nim-lang.org/docs/system.html#newSeq%2Cseq%5BT%5D%2CNatural), so I would have to explicitly instantiate it for all overloads?
[22:40:26] <FromDiscord> <leorize> to be perfectly safe just call out to Nim to get an initialized seq
[22:40:34] <FromDiscord> <leorize> yes
[22:41:13] <FromDiscord> <leorize> C is low-level and you ought to give up some data, unfortunately
[22:41:19] <FromDiscord> <leorize> though there might be a way for you
[22:41:51] <FromDiscord> <leorize> actually there aren't any \:P Nim infers these info at Nim's compile-time
[22:42:13] <FromDiscord> <codic> `proc abc(foo: cint): void {.exportc, .nodecl.}` like this to import an `abc` proc from C then??
[22:42:46] <FromDiscord> <leorize> no, use `proc abc(foo: cint) {.importc, cdecl.}`
[22:42:57] <FromDiscord> <haxscramper> Maybe just write horrible C macro that models after https://github.com/nim-lang/Nim/blob/devel/compiler/ccgexprs.nim#L1376
[22:43:23] <FromDiscord> <leorize> depending on Nim's internal data structures is never a good idea
[22:43:39] <FromDiscord> <leorize> one `--gc:` switch and you're dealing with a different data structure
[22:43:48] <FromDiscord> <codic> (edit) "then??" => "then?"
[22:44:18] <FromDiscord> <codic> so I can use importc there without a header ,that was my question, got it
[23:00:55] <FromDiscord> <planetis> One think I am trying to prevent is outofmem defect when trying to allocate a huge buffer. Anyone else ever dealt with it?
[23:07:55] <FromDiscord> <planetis> oh i actually have an idea
[23:09:40] <FromDiscord> <jfmonty2> Do strings have a lot of memory overhead? I tried defining a `const seq[string]` of 130k strings in my executable and it ballooned to over 12MB (source data file was only 1.2MB or so.) Switched to just a single `const string` that was parsed at runtime and the executable size dropped right down to <2MB.
[23:10:21] <FromDiscord> <jfmonty2> I can see that every string would involve a pointer and a len, which would be 16 bytes before you even get to the char data, but that's still only about 3.2MB total.
[23:14:39] <FromDiscord> <woodgiraffe (woodgiraffe)> > https://wandbox.org/permlink/gfQkyktECy9iOdE2 I reused the same example from above↵oh that's very nice, thank you for that
[23:52:03] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[23:52:28] *** Joins: rockcavera (~rc@192.12.115.195)
[23:52:28] *** Quits: rockcavera (~rc@192.12.115.195) (Changing host)
[23:52:28] *** Joins: rockcavera (~rc@user/rockcavera)
[23:54:54] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
