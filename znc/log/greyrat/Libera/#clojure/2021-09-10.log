[00:01:52] <EdwardIII> The hype has melted away now surely 
[00:03:16] <EdwardIII> Lambda Island looks interesting
[00:03:23] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[00:03:40] <EdwardIII> Not really news, but their updates and libs and free articles seem cool
[00:11:43] <Para> So we're the...morning after?
[00:16:29] <ridcully_> ... with a hangover
[00:20:21] <Para> The kind you get from the cheapest port wine.
[00:22:01] *** Joins: johanthoren (~jthoren@45.83.220.204)
[00:37:11] <shem> «sport wine» as we called the end product of the process of our student friend trying to produce consumable fortified wine 
[00:40:08] <ridcully_> sweaty process?
[00:41:51] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Remote host closed the connection)
[00:42:57] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[00:53:22] *** Quits: andreyorst_ (~u0_a177@176.59.55.246) (Remote host closed the connection)
[00:57:48] <shem> lots of side effects.
[01:07:31] <Para> I've angered an italian by drinking port from a coffee cup :D We told him to get cup as well, which he did, and shared the port. he kept complaining of course but it was like hugging an angry person.
[01:12:18] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[01:19:39] <ridcully_> should 'ave used a port cup then!
[01:23:02] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 260 seconds)
[02:04:10] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[02:09:33] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Quit: WeeChat 3.2)
[02:10:38] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[02:35:50] <sobel> EdwardIII: LambdaIsland is great. if you want to level up on the topics they have, it's good content. i don't know how often they add new stuff, but i've only been on for a couple weeks.
[02:37:38] <sobel> i get interesting clojure news from sites, but i get way more interesting insight here
[02:39:06] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 260 seconds)
[02:40:59] *** Quits: johanthoren (~jthoren@45.83.220.204) (Ping timeout: 252 seconds)
[02:42:22] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Ping timeout: 260 seconds)
[02:47:50] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[03:13:36] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[03:14:47] *** Quits: mmohammadi9812 (~Mohammad@2.178.201.78) (Read error: Connection reset by peer)
[03:30:20] * EdwardIII nod
[03:37:05] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 252 seconds)
[03:43:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[03:45:04] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:57:42] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[03:57:43] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Remote host closed the connection)
[04:07:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[04:09:44] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:12:32] *** Quits: harrigan (~harrigan@176.116.124.141) (Ping timeout: 245 seconds)
[04:13:02] *** Joins: harrigan (~harrigan@176.116.124.142)
[04:14:11] *** Joins: yoonkn (~user@175.197.208.79)
[04:14:59] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[04:17:49] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[04:20:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:30:40] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[04:31:06] *** Joins: hendursaga (~weechat@user/hendursaga)
[05:09:39] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-53.prtc.net)
[05:09:58] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 265 seconds)
[05:11:43] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:c3ab:c75d:f803:b354) (Ping timeout: 252 seconds)
[05:15:44] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-53.prtc.net) (Quit: Client closed)
[05:23:31] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[05:28:35] *** Joins: to-hu (~Thunderbi@p200300e9af022e004adddf3ee566ddce.dip0.t-ipconnect.de)
[05:33:19] *** Quits: xulfer (uid452788@id-452788.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:39:50] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[05:42:31] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 252 seconds)
[05:45:44] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[05:48:44] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[06:27:35] *** Quits: to-hu (~Thunderbi@p200300e9af022e004adddf3ee566ddce.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:29:55] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[06:36:10] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::fc2b) (Ping timeout: 260 seconds)
[06:52:02] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[07:10:50] *** Quits: jespada (~jespada@90.254.245.194) (Ping timeout: 260 seconds)
[07:13:02] *** Quits: sailorCa` (~user@p200300f6a70fade8c42b413f38b54576.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:13:14] *** Joins: jespada (~jespada@90.254.245.194)
[07:14:53] *** Joins: sailorCa` (~user@p200300f6a70fad03dd72f9abeb76a589.dip0.t-ipconnect.de)
[07:24:16] *** Quits: runejuhl (~runejuhl@185.166.122.161) (Ping timeout: 252 seconds)
[07:38:13] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[07:51:27] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[08:04:59] *** Joins: zmt01 (~zmt00@user/zmt00)
[08:07:58] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[08:08:06] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[08:08:12] *** Joins: yoonkn (~user@175.197.208.79)
[08:16:21] *** Joins: chenxuez_ (~chenxuezh@106.39.157.10)
[08:18:00] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Ping timeout: 265 seconds)
[08:49:04] *** Quits: chenxuez_ (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[08:59:54] *** Quits: dfreeman (~dfreeman@user/dfreeman) (Ping timeout: 260 seconds)
[09:02:15] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[09:03:52] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:08:49] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:09:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:09:37] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:09:37] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:10:13] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:10:46] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:11:00] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:11:02] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:11:37] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:12:05] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:14:54] *** Joins: struchu (~struchu@staticline-31-183-186-112.toya.net.pl)
[09:29:40] *** Quits: struchu (~struchu@staticline-31-183-186-112.toya.net.pl) (Quit: WeeChat 3.2)
[09:29:57] *** Joins: struchu (~struchu@staticline-31-183-186-112.toya.net.pl)
[09:56:21] *** Joins: wonko (~wjc@62.115.229.50)
[10:06:56] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[10:38:09] *** Quits: paul_j (~user@67.26.169.217.in-addr.arpa) (Quit: Asta la vista)
[10:49:59] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[10:51:37] <Para> https://www.juxt.pro/radar
[11:16:22] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:19:25] *** Joins: pflanze (~pflanze@2001:171b:226a:b651:789f:2806:3b96:5a60)
[11:59:45] *** Joins: to-hu (~Thunderbi@p200300e9af022e0087258800557ef55f.dip0.t-ipconnect.de)
[12:05:52] *** Quits: pflanze (~pflanze@2001:171b:226a:b651:789f:2806:3b96:5a60) (Ping timeout: 252 seconds)
[12:16:21] *** Quits: harrigan (~harrigan@176.116.124.142) (Quit: ZNC 1.8.2 - https://znc.in)
[12:19:49] *** Joins: harrigan (~harrigan@176.116.124.143)
[12:22:17] *** Joins: johanthoren (~jthoren@c-2ec29e69-74736162.cust.telenor.se)
[12:36:08] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:44:20] *** Quits: harrigan (~harrigan@176.116.124.143) (Ping timeout: 252 seconds)
[12:46:16] <EdwardIII> finally, sobel has a conclusive list of what's hot :D
[12:47:20] *** Joins: harrigan (~harrigan@176.116.124.143)
[12:47:31] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[12:53:58] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[13:50:17] <EdwardIII> looks like juxt.pro agree with you guys on this point: "After some debate, we’ve decided to move core.async to Hold. We recognise that this may be controversial, but through experience of working with systems that build heavily on core.async we’ve grown concerned that the results are often fragile due to incorrect error handling, hard to understand, and hard to debug. core.async and similar
[13:50:20] <EdwardIII> solutions are often used where a simple thread pool and blocking techniques would suffice."
[14:18:01] <opqdonut> ha! just what I've been saying all along
[14:19:33] <EdwardIII> that post is very instructive. good for noobs like me who sometimes see a bunch of similar libraries and have no clue how to go about assessing which to start with 
[14:20:23] <opqdonut> yeah tech radars are a good pattern
[14:23:36] <wink> if you trust the authors
[14:24:06] <wink> I always liked the thoughtworks one but... some fields were always a bit too enterprise-heavy
[14:24:46] <wink> like you could be using that tech for a year in your field/sector/bubble (not just your company) and then they'd slooowly switch to adapt
[14:25:54] <EdwardIII> sure
[14:26:53] <EdwardIII> like dunkey says, there's value when watching reviews when you kind of know the reviewer a bit and how their tastes align with yours
[14:32:42] <opqdonut> eggsactly
[14:33:19] <opqdonut> food for thought, not a prescription
[14:49:25] *** Joins: pflanze (~pflanze@2001:171b:226a:b651:789f:2806:3b96:5a60)
[15:01:58] *** Joins: pflanze_ (~pflanze@178.38.171.101)
[15:04:37] *** Quits: pflanze (~pflanze@2001:171b:226a:b651:789f:2806:3b96:5a60) (Ping timeout: 252 seconds)
[15:09:01] *** Quits: to-hu (~Thunderbi@p200300e9af022e0087258800557ef55f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:53:14] *** Quits: johanthoren (~jthoren@c-2ec29e69-74736162.cust.telenor.se) (Remote host closed the connection)
[15:57:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:293c:729f:ef0:fde4)
[16:32:37] *** Quits: parisienne (sid383587@id-383587.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:35:51] <sobel> Para: ahahaha i just came here with that juxt.pro URL in my paste buffer
[16:36:35] <sobel> agreed on tech radars being a good pattern
[16:37:24] <sobel> had a conversation with someone i work with, very junior, and i was spec'ing a task to fix a collection of variable names because their actual usage/implementation had drifted significantly
[16:37:38] *** Joins: cranium (~cranium@user/cranium)
[16:38:54] <sobel> i was trying to convey that we were making mistakes and this naming problems was the root cause of multiple errors, and as such, had to be fixed, but he was very slow to figure out that i didn't mean i was merely ok with being picky about nomenclature. i was addressing a pain point.
[16:39:38] <sobel> where do i send a noob like that to get accultured? our office is small and we work at home
[16:40:07] <sobel> JSX is his first/only language. physics background i think.
[16:41:04] <sobel> being the example and the source of virtue in this arrangement isn't having the leadership effect i hoped because he doesn't know what success looks like yet
[16:44:11] <sobel> juxt really runs a classy radar page. <yoink>
[16:44:33] <sobel> just the excuse i need to try out d3js, i suppose
[16:45:10] <sobel> and it doesn't hurt a bit to see my personal cljs radar mirrored there
[16:45:38] *** Joins: dfreeman (~dfreeman@user/dfreeman)
[16:52:59] <EdwardIII> sobel: it's a tricky one heh. in my experience that kind of mentorship just takes time, reptition, explanation and asking loads of questions to make the person think about their views
[16:53:34] <EdwardIII> e.g. when someone made a huge confusing piece of crap method here, i would typically suggest some lines to break ti down along and they'd say "you're just making me do abstraction for abstraction's sake, it works now, you're just making me waste time"
[16:55:06] <EdwardIII> so i would follow up with some questions like: "well why are we using TS not JS? and why JS not C? and why not asm?" also: "remember when you had to change x last month and it took you 3x your estimate, and it was hard to test, then when you released it you found y bug? if the code had been like <this> instead, would that have helped?"
[16:55:16] <EdwardIII> questions, examples, and repetition are my main tools in that area
[16:56:11] <EdwardIII> also occassionally i would do a refactoring and save that somewhere to use as a workshipping thing. walk through why it was done, ask them if they think it's better or worse etc etc
[16:56:33] <EdwardIII> *workshopping
[16:58:33] <sobel> tricky indeed
[16:59:11] <EdwardIII> also in the OO space i found that '99 bottles' was an awesome book because it showed: crap refactoring where you make the code more complicated for no benefit, making the code more obtuse but more concise, and a more compositional way of refactoring something. it also talked a lot about why and how. really good imo
[16:59:35] <EdwardIII> i don't know of any equivalent in the functional arena though
[16:59:44] <sobel> he's some distance from over-factoring. quite the opposite.
[16:59:52] *** Joins: cyberbanjo (~malik@2607:fb90:428b:5b32:e82e:8e68:f854:bb1c)
[17:00:01] <EdwardIII> :D
[17:00:25] <EdwardIII> what do you think the mean reason behind this confusion is? different culture/background? lack of respect for your viewpoint?
[17:01:01] <sobel> he is well aware my title is CTO and my role is senior/lead developer
[17:01:53] <sobel> but he definitely doesn't respect my authority in those roles and if he were a child it would be easy to explain but adults just don't take such explanations without feeling berated. thing is, that's basically what it comes to
[17:02:35] <cranium> hopping into the conversation, is there an age difference? How much and in what direction?
[17:02:42] <EdwardIII> :D
[17:03:28] <sobel> i have a pretty modern stack and a cloud operation. one-man show, and it's running well. he doesn't have the experience to recognize the scope of what facilitates his ability to just work in React and push a button to deploy
[17:04:12] <sobel> cranium: yeeeaaah, i'm estimating i'm 15ish years his senior
[17:05:26] <sobel> EdwardIII: hard to nail that one down. at some point you have to give yourself permission to call BS on a practice, even if it's your own practice, and reform it. he's not recognizing where a practice hurts him.
[17:07:00] <sobel> i instituted fixit-friday policy, so we're on review and refactoring fridays. no new feature development.
[17:07:32] <sobel> that may be a venue for culture transfer but we'll see
[17:08:14] <EdwardIII> good call
[17:08:33] <EdwardIII> i've done that sometimes too. also we try and roughly have a 'no new features until bugs are fixed' policy, but do fall down on that from time to time
[17:13:17] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Ping timeout: 252 seconds)
[17:21:49] *** Joins: zmt01 (~zmt00@user/zmt00)
[17:24:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[17:55:13] *** Joins: pflanze (~pflanze@178.38.171.101)
[17:56:13] *** Quits: pflanze_ (~pflanze@178.38.171.101) (Remote host closed the connection)
[18:15:08] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:15:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:16:53] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[18:20:31] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:3593:e920:b3b6:f6a4)
[18:21:46] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[18:25:14] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[18:25:14] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::fc2b)
[18:34:47] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[18:40:31] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::fc2b) (Read error: Connection reset by peer)
[18:45:41] *** Quits: struchu (~struchu@staticline-31-183-186-112.toya.net.pl) (Ping timeout: 252 seconds)
[18:48:57] *** Joins: janat08 (uid374565@id-374565.lymington.irccloud.com)
[18:49:38] <janat08> where are clojure packages at to look for? I remember theres something like clojars. You can't even google it. clojure packages shows nothing.
[18:52:07] <janat08> clojars isn't even in top 10 results fo duckduckgo, is no one using it?
[18:56:33] <ridcully_> ddg even has !clojars
[19:17:32] <ToxicFrog> janat08: when I google "clojure libraries" the first hit is the clojure.org page on libraries which includes a link to clojars front and center; same with "clojure packages" which additionally returns clojars as the fifth result
[19:19:27] <ToxicFrog> janat08: https://clojure.org/community/libraries additionally links to a few other places to find clojure libraries besides clojars.
[19:19:47] <Para> hm, ddg's first hit is clojars project's github org
[19:19:54] <Para> curious, but technically correct vOv
[19:40:45] *** Quits: jespada (~jespada@90.254.245.194) (Ping timeout: 252 seconds)
[19:41:42] *** Joins: jespada (~jespada@90.254.245.194)
[19:58:12] <sobel> janat08: https://clojure.zeef.com/vlad.bokov https://www.clojure-toolbox.com/ https://github.com/razum2um/awesome-clojure#awesome-clojure http://clojurewerkz.org/
[19:58:39] <sobel> there are enough libraries that having a good filter (endorsements!) is very useful
[19:58:56] <sobel> we were talking about https://www.juxt.pro/radar#deps-edn earlier
[19:59:15] <Para> I pinger clojars people on clojurians about this SEO peculiarity.
[19:59:17] <sobel> er, just the radar, https://www.juxt.pro/radar
[19:59:18] <Para> *pinged
[19:59:28] <Para> General consensus is "oh, dunno" :)
[19:59:43] <Para> Search engines, the magnets of Internet.
[20:01:26] <sobel> I guess I sorta feel like a juggalx asking how they work
[20:14:13] *** Joins: to-hu (~Thunderbi@p5b035c9b.dip0.t-ipconnect.de)
[20:14:14] *** Joins: op2 (~op@user/op2)
[20:19:48] <cyberbanjo> !clojars is used a lot & most clojure library github readmes have a clojars badge
[20:19:59] <cyberbanjo> *i use !clojars a lot
[20:21:52] <sandra> Kinda struggling with getting a value out of a promesa!
[20:23:01] <sandra> (let [jeans (p/deferred)]
[20:23:01] <sandra>   (p/resolve! jeans :hi)
[20:23:01] <sandra>   (p/let [top jeans]
[20:23:01] <sandra>     (prn (= top :hi))
[20:23:01] <sandra>     top))
[20:23:02] <sandra> This prints true but then still returns a promise, because p/let always returns a promise. Replacing the let with just jeans also returns a promise. It gets unpromised in the let binding but then repromised in the tail position of the let body (which, I checked the source code, expands to p/do!)
[20:23:19] <sandra> How can I just get the :hi value out?
[20:23:32] *** Quits: cyberbanjo (~malik@2607:fb90:428b:5b32:e82e:8e68:f854:bb1c) (Quit: Konversation terminated!)
[20:23:35] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 252 seconds)
[20:25:26] <sandra> p/extract gives me nil
[20:28:05] <chujev> try (deref the-promise), or shorter @the-promise
[20:28:35] <sandra> Ah, like atoms
[20:28:53] <sandra> That still nil
[20:34:29] <sandra> I mean I kinda have no protocol method IDeref.-deref defined for type object: [object Promise]
[20:36:19] <chujev> when I wrap the whole "let" in "deref" I get :hi
[20:38:47] <sandra> Even this prints :hi
[20:38:47] <sandra> (let [jeans (p/deferred)]
[20:38:47] <sandra>    (p/resolve! jeans :hi)
[20:38:47] <sandra>    (p/let [top jeans]
[20:38:47] <sandra>      (prn top)
[20:38:48] <sandra>      top))
[20:39:56] <sandra> But then this doesn't (again because p/let returs the tail val as a promise for composition purps):
[20:39:56] <sandra> (let [jeans (p/deferred)]
[20:39:56] <sandra>    (p/resolve! jeans :hi)
[20:39:56] <sandra>    (prn
[20:39:56] <sandra>     (p/let [top jeans]
[20:39:56] <sandra>       top)))
[20:39:56] <sandra> That's all great and so on so that we can chain and compose our promises but when we actually wanna get them it becomes kinda tricky
[20:41:24] <chujev> p/let will put the result in a promise, so you have to deref before printing
[20:41:34] <sandra> OK, the @ macro only works on JVM apparently
[20:42:25] <chujev> it works in cljs too
[20:42:51] <sandra> Maybe I have some other issue with my REPL here then
[20:43:59] <sandra> Because I get No protocol method IDeref.-deref defined for type object: [object Promise]
[20:45:52] *** Joins: seschwar (~seschwar@user/seschwar)
[20:49:03] <sandra> OK, I figured out one place I could put the @ and it worked.♥ Now not sure how to translate that into the minvia
[20:49:14] <chujev> ah actually you can't deref promises in cljs, you can't block the thread
[20:50:17] <sandra> Right
[20:59:20] <Para> What even is js multithreading model these days, service workers+
[20:59:22] <Para> ?
[21:00:26] <sandra> So wait, this means there is no way to get the actual value
[21:01:24] <Para> you can't deref but you can resolve, hmm...
[21:02:30] <chujev> use p/then or some of the other functions shown here: https://funcool.github.io/promesa/latest/user-guide.html
[21:07:21] <sandra> I've been reading that user guide all day and the promesa source code
[21:08:08] <Para> Sometimes it be like that.
[21:08:25] <Para> I don't know how many dozens of times I read through manifold until I finally sort of got it.
[21:08:37] *** Quits: janat08 (uid374565@id-374565.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:09:27] <sandra> For example,
[21:09:27] <sandra> (let [jeans (p/deferred)]
[21:09:27] <sandra>   (p/resolve! jeans :hi)
[21:09:27] <sandra>   (p/then jeans identity))
[21:09:27] <sandra> still just returns the promise
[21:12:23] <sandra> It's so frustrating. p/let waits for the promise, binds it, lets me do stuff to it... And then in the tail position jams whatever's there into a promise again. Great for chaining purposes with the existing combinators, not so hot when you wanna make new combinators.
[21:12:30] <chujev> you can only access the value inside the "then" (which may be run much later), otherwise you'd have to potentially block to get the value
[21:14:54] *** Quits: to-hu (~Thunderbi@p5b035c9b.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:15:32] <Para> If I had to guess, p/let really isn't like let but more like go block.
[21:15:42] <Para> That is, the form is put into some background magic thing and runs there.
[21:15:53] <Para> Which is why it can't "return" outside said form.
[21:17:00] <chujev> async is hard
[21:17:22] <Para> yep
[21:17:48] <Para> Most async things I've ever used have issues right at the point when the control flow should return from async back to sync.
[21:18:25] <Para> Latest I've encourtered this with was with Apache Kafka's Kafka Stream library just a week ago :) Even the official way felt like a huge hack.
[21:18:39] <Para> And ofc it boils down to "this is really just a threadlocal hashmap"
[21:19:04] <Para> (that said, kafka streams is pretty nice to work with)
[21:31:32] *** Quits: pflanze (~pflanze@178.38.171.101) (Remote host closed the connection)
[21:31:50] *** Joins: pflanze (~pflanze@178.38.171.101)
[21:39:03] *** Quits: pflanze (~pflanze@178.38.171.101) (Remote host closed the connection)
[21:39:15] *** Joins: pflanze (~pflanze@178.38.171.101)
[21:43:42] *** Joins: to-hu (~Thunderbi@p5b035c9b.dip0.t-ipconnect.de)
[21:45:01] *** Quits: pflanze (~pflanze@178.38.171.101) (Ping timeout: 252 seconds)
[22:18:22] *** Quits: obviyus (sid415299@user/obviyus) (Ping timeout: 250 seconds)
[22:18:23] <ToxicFrog> IME a lot of the hardness comes down to the fact that you're trying to use syntactic sugar (async/await) around continuation-passing style (i.e. callback chains) to accomplish something that's better done with coroutines (yield/resume)
[22:18:35] *** Quits: port9 (sid124217@id-124217.highgate.irccloud.com) (Read error: Connection reset by peer)
[22:18:48] *** Quits: rjk (sid809@id-809.highgate.irccloud.com) (Ping timeout: 250 seconds)
[22:18:50] *** Quits: dunc (sid16@id-16.highgate.irccloud.com) (Read error: Connection reset by peer)
[22:19:29] <ToxicFrog> Like, solving these problems doesn't have to be this hard, but for some reason (javascript?) a lot of languages have converged on "what if CPS but we gave it its own syntax" as the solution, and while that can be useful it's not a cure-all.
[22:21:26] *** Joins: rjk (sid809@id-809.highgate.irccloud.com)
[22:21:53] *** Joins: obviyus (sid415299@user/obviyus)
[22:22:11] *** Joins: port9 (sid124217@id-124217.highgate.irccloud.com)
[22:22:32] *** Joins: dunc (sid16@id-16.highgate.irccloud.com)
[22:23:10] <ToxicFrog> (for an effective practical demonstration of this, try writing browser code in Lua using something like Fengari; all the async functions turn into normal "blocking" functions that call yield() internally, async vs. non-async distinctions and restrictions on where and how you can call them vanish entirely, and for most applications this results in much cleaner code -- at the cost of like a 5-10x
[22:23:13] <ToxicFrog> performance hit, so it's a hard sell for production use, but that's an implementation issue, not a conceptual one)
[22:25:37] <technomancy> ToxicFrog: to be clear the performance hit is the fengari load time, not the coroutines vs callbacks right?
[22:27:53] <ToxicFrog> Yeah. Fengari is a fairly naive port of PUC-lua to JavaScript.
[22:28:18] <technomancy> calling a 2 second load time penalty a 5-10x performance hit is being very optimistic about the current performance of a given web app IMO =)
[22:28:19] <ToxicFrog> So you're running Lua inside a JS port of a non-optimizing Lua runtime originally written in C.
[22:28:33] <ToxicFrog> Oh no, this isn't just load time, it's actual execution speed
[22:28:38] <technomancy> like ... if that got added to jira/slack I probably wouldn't even notice
[22:29:07] <ToxicFrog> To be clear, Fengari isn't a lua-to-js compiler like clojurescript
[22:29:13] <ToxicFrog> It's a Lua runtime written in Javascript
[22:29:21] <technomancy> oh, right gotcha. you could maybe find a way to only use that for the parts that are I/O bound tho
[22:29:32] <technomancy> but yeah, that complicates things
[22:29:33] <ToxicFrog> So you feed it Lua code at runtime and it compiles it into Lua bytecode and then executes that bytecode in a VM which is itself written in Javascript.
[22:29:52] <ToxicFrog> So there is a significant performance penalty.
[22:30:29] <ToxicFrog> (I don't know if there are any compilers out there that ingest a language with coroutines and emit javascript or wasm; I picked Fengari because it's one I've actually used, and done side-by-side comparisons of the same code written in JS and in Lua using it)
[22:30:50] <technomancy> I think that's specifically why they wrote fengari that way, because they wanted coroutines to actually be usable
[22:31:08] <technomancy> and I'm really glad they did because it made the repl stuff I wrote *super* easy to do even though I'm clueless with web tech
[22:33:48] <technomancy> I guess you could maybe CPS your way out of that problem with a compiler... maybe
[22:38:25] <ToxicFrog> I suspect that a compiler that can properly handle coroutines while targeting JS as the backend would look less like "we translate this Lua (or whatever) code into equivalent JavaScript" and more like "we translate this Lua code into a series of JS function calls that correspond to Lua opcodes, and store the Lua stack etc in JS data structures"
[22:38:28] <ToxicFrog> Which is probably still going to be slow, but not as slow as reproducing all of the C datastructures in JS, and possibly more JIT-friendly as wel
[22:41:40] *** Joins: xsperry (~as@user/xsperry)
[23:00:30] <sandra> I solved the issue by passing a continuation into the p/let body
[23:00:32] <sandra> Like a boss
[23:01:11] <sandra> But I miss Scheme
[23:14:45] *** Quits: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru) (Remote host closed the connection)
[23:15:50] *** Joins: uncleyear (~ian@pppoe.178-66-156-158.dynamic.avangarddsl.ru)
[23:36:37] *** Joins: janat08 (uid374565@id-374565.lymington.irccloud.com)
[23:38:20] <janat08> https://pastebin.com/K2ntf5ZE How do I even use this in repl? apply worker.core or something?
