[00:04:51] *** Joins: supersandro20003 (~supersand@i5C74CE80.versanet.de)
[00:04:51] *** supersandro2000 is now known as Guest5533
[00:04:51] *** Quits: Guest5533 (~supersand@i5C74D72E.versanet.de) (Killed (copper.libera.chat (Nickname regained by services)))
[00:04:51] *** supersandro20003 is now known as supersandro2000
[00:07:15] *** Quits: sklv (~sklv@gateway/tor-sasl/sklv) (Remote host closed the connection)
[00:10:16] *** Quits: drobilla (~user@104-195-158-248.cpe.teksavvy.com) (Ping timeout: 246 seconds)
[00:12:42] <WilhelmVonWeiner> Does anyone recommend any books on devops or; how i learned to stop worrying and deploy a successful platform
[00:12:49] <WilhelmVonWeiner> ^ free blog title there
[00:13:04] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[00:15:51] *** Joins: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl)
[00:17:49] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[00:22:26] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 252 seconds)
[00:22:42] <mockturtle> Building Blocks of the Sasquach Type System [plt] (Pentlander) https://lobste.rs/s/oj8lul
[00:25:23] *** Joins: jmw (~jmw@user/jmw)
[00:28:27] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:b48d:fb65:abf:6e14) (Quit: Textual IRC Client: www.textualapp.com)
[00:37:47] *** Joins: jjonah (~jjonah@p200300d5d72a9300dea632fffeb3342f.dip0.t-ipconnect.de)
[00:44:43] <mockturtle> Tool to convert copyrighted music into fair use [ai] (candle) https://lobste.rs/s/knmuql
[00:45:55] *** Joins: mahmutov (~mahmutov@176.30.226.37)
[00:46:54] *** Quits: mahmutov_ (~mahmutov@37.155.69.195) (Ping timeout: 252 seconds)
[00:50:56] *** Joins: thelounge98 (thelounge@envs.net)
[00:56:34] *** Quits: rhn (~rhn@dynamic-093-132-093-152.93.132.pool.telefonica.de) (Ping timeout: 240 seconds)
[01:01:32] *** Quits: mahmutov (~mahmutov@176.30.226.37) (Ping timeout: 258 seconds)
[01:03:34] *** Joins: mahmutov (~mahmutov@176.30.226.37)
[01:10:00] *** Quits: mahmutov (~mahmutov@176.30.226.37) (Ping timeout: 252 seconds)
[01:11:56] *** Joins: mahmutov (~mahmutov@176.30.226.37)
[01:14:35] *** Quits: imode (~imode@user/imode) (Ping timeout: 255 seconds)
[01:23:20] <mockturtle> Using IceWM and a Raspberry Pi as my main PC, sharing my theme, config and some tips and tricks [linux] (raymii) https://lobste.rs/s/iy1rbz
[01:25:11] *** Joins: Guest22 (~Guest22@79.174.17.109.rev.sfr.net)
[01:25:14] <Guest22> hi
[01:28:24] <ngoldbaum> sup dawg
[01:29:14] <Guest22> nothin much, just bored :P
[01:29:42] <Xe> edgedb looks interesting
[01:30:26] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[01:30:51] *** Quits: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl) ()
[01:32:46] *** Joins: shredder (~user@user/shredder)
[01:44:43] *** Quits: thelounge98 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[01:44:54] *** Joins: Absalom (thelounge@envs.net)
[01:45:12] *** Quits: thelazyoxymoron (~thelazyox@49.207.201.152) (Ping timeout: 272 seconds)
[01:48:34] *** Joins: daviest (~daviest@dslb-002-205-183-066.002.205.pools.vodafone-ip.de)
[01:49:05] *** Joins: driib (~driib@185.195.233.163)
[01:54:10] *** __jmcantrell__ is now known as jmcantrell
[01:59:56] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[02:00:23] *** Quits: Guest22 (~Guest22@79.174.17.109.rev.sfr.net) (Quit: Connection closed)
[02:01:33] *** Joins: jmw (~jmw@user/jmw)
[02:03:56] <WilhelmVonWeiner> Xe: curl command to install - scary.
[02:04:15] <WilhelmVonWeiner> shame linux packaging isn't unified but also, i'm glad linux packaging isn't unified.
[02:17:09] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[02:22:23] <c355e3b> Is this another postgres based database?
[02:22:55] *** Quits: Maker (~maker@70.18.215.45) ()
[02:24:27] <riv> pacman -S fd
[02:24:31] <riv> https://github.com/sharkdp/fd
[02:24:31] <mockturtle> [ sharkdp/fd ] - github.com
[02:24:35] <riv> i have installed it
[02:24:43] <riv> i will no longer be held captive by finds lack of BFS
[02:26:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:27:33] <riv> er
[02:27:36] <riv> it doesn't support BFS nevermind
[02:27:40] <riv> that is disappointing
[02:28:43] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:29:06] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:29:31] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:31:34] <riv> ==> Creating zstd-compressed initcpio image: /boot/initramfs-linux-fallback.img
[02:31:41] <riv> cool, initcpio is zstd now
[02:32:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:33:31] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:34:01] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:34:31] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:35:11] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:35:31] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:36:38] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:37:31] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:39:59] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[02:42:18] *** Joins: arcatech (~arcatech@user/arcatech)
[02:42:30] *** Quits: jmw (~jmw@user/jmw) (Quit: jmw)
[02:42:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:43:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:45:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:46:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:47:30] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:48:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:50:19] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:50:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:51:03] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:51:05] *** Joins: drobilla (~user@104-195-158-248.cpe.teksavvy.com)
[02:51:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:52:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:52:52] <Foxboron> mkinitcpio does, yes
[02:53:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:54:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:55:00] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Remote host closed the connection)
[02:55:39] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[02:56:16] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:56:32] *** Joins: pyrorock (~Dont@37.222.8.156)
[02:57:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[02:58:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:01:35] <mockturtle> Announcing Arti, a pure-Rust Tor implementation | Tor Blog [privacy rust] (cyplo) https://lobste.rs/s/xyxubf
[03:01:43] *** Joins: driib3 (~driib@185.195.233.170)
[03:05:20] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[03:05:20] *** driib3 is now known as driib
[03:06:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:07:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:08:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:09:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:10:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:11:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:12:41] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:13:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:13:47] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 258 seconds)
[03:15:16] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:15:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:16:55] <mockturtle> People Staring At Computers [person art] (cyplo) https://lobste.rs/s/kto6kn
[03:16:59] <companion_cube> david_chisnall is awesome
[03:17:06] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[03:17:38] <drakonis> yes
[03:17:54] <companion_cube> otoh the Ada evangelism task force is annoying me today
[03:18:13] <drakonis> there's one for ada now?
[03:18:21] *** Joins: anonymouscoward (~dready@c-24-13-48-62.hsd1.il.comcast.net)
[03:18:21] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:18:22] <companion_cube> on lobsters, yes, it's small but vocal
[03:18:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:18:59] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:19:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:20:07] *** Joins: klardotsh (~klardotsh@97-113-192-99.tukw.qwest.net)
[03:21:11] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:21:29] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 255 seconds)
[03:21:34] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:22:56] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:23:34] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:25:48] *** Joins: misnor (~misnor@156.57.153.38)
[03:27:13] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:27:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:28:16] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:28:33] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:29:44] <ngoldbaum> ada: it’s not just for fighter jet avionics
[03:29:44] *** Quits: pyrorock (~Dont@37.222.8.156) (Read error: Connection reset by peer)
[03:30:09] <companion_cube> I mean I'm willing to listen to that
[03:30:22] <companion_cube> but "it's the perfect entreprise language" kind of caught me by surprise
[03:30:34] *** Joins: pyrorock (~Dont@37.222.8.156)
[03:30:53] *** ChanServ sets mode: +b *!~Dont@37.222.8.156
[03:30:53] *** pyrorock was kicked by ChanServ (Banned: fix your client)
[03:33:43] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:33:48] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Client Quit)
[03:35:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:37:45] <kline> companion_cube | otoh the Ada evangelism task force is annoying me today
[03:37:49] <kline> irony
[03:38:28] <companion_cube> kline: I use this term unironically :)
[03:40:33] <companion_cube> I wouldn't condone people saying about rust the kind of shit they say about Ada
[03:40:45] <companion_cube> even though, well, rust is already more mainstream and kind of more ergonomic
[03:40:54] <companion_cube> but this whole "ada is as expressive as F#" just kills me
[03:46:01] <kline> i mean, i reject the "Rust is ergonomic" thing when stuff as routine as "update a hashmap" requires a whole new api (Entry) to work contortions around the borrow checker
[03:46:36] <kline> likewise there were people in ##rust saying that it should genuinely be considered best practice to only compile rust in network-io isolated contexts because of the hazard of proc macros at build time
[03:47:18] <kline> they genuinely were saying to manage the risk of random untrusted code you should 1) get your crates downloaded, 2) disconnect your network io, 3) build, 4) reconnect
[03:47:33] <companion_cube> kline: that's just wrong
[03:47:40] <companion_cube> you can use `get` + `insert`
[03:47:47] <companion_cube> entry is just there for more efficient in place updates
[03:47:52] <companion_cube> (just like the crazy C++ iterator API)
[03:48:04] <kline> i have a snippet id be keen to see improvements on
[03:48:05] <kline> one sec
[03:48:25] <companion_cube> but otherwise: yeah, rust isn't the most ergonomic, but we're talking about Ada here :D
[03:48:33] <companion_cube> where malloc is opt-in and unsafe
[03:48:35] <companion_cube> so…
[03:50:36] <drobilla> Speaking of annoying and programming languages, oh my god is this "Goodbye C developers" article awful
[03:51:22] <drobilla> Let's consider "a simple, standard, procedure to copy a linked list:" <utter line noise>
[03:51:35] <companion_cube> the one from a few days ago?
[03:51:58] <kline> companion_cube, https://gist.github.com/AbstractBeliefs/00b4be8551e1e33b1642bda53d04e58b
[03:51:59] <mockturtle> [ main.rs ] - gist.github.com
[03:52:04] <drobilla> I guess you need a good straw man to prop up writing this fucking pompous, good grief
[03:52:20] <companion_cube> kline: ohno, async :D
[03:52:34] <drobilla> uh, yeah, 3 days old I guess.  Sorry I'm killing time by scrolling :)
[03:52:43] <kline> drobilla, ironically the presented C code they offer is 1) generated by their tool and 2) incorrect
[03:52:59] <kline> so yes, the C code is terrible and we should be removing that kind of software
[03:53:13] <kline> but the way to do that is to put their invalid and failing tool in the bin
[03:53:32] <kline> it writes code that is worse than a human programmer
[03:53:44] *** Quits: mahmutov (~mahmutov@176.30.226.37) (Ping timeout: 268 seconds)
[03:53:52] <drobilla> I also like the overall premise: C is the cause of all that is wrong and horrible in the world and stubborn idiots who refuse to not use it are why we can't have nice things.  So here is my work on *checks notes* writing C programs
[03:53:58] <kline> and it doesnt bring the benefits that it claims, in that the code might be _proven_ correct, but is not actually correct in practice because there are environmental conditions it fails to consider
[03:53:59] <drobilla> Uh..... okay?
[03:54:44] <kline> i mean, i get the point - C code is hard to write so lets use machine-assisted provers to ensure that we have to write less of it, and what is written is better
[03:54:59] <kline> just they fail to actually deliver a solution to that
[03:55:05] *** Quits: ji (uid72176@user/raj) (Quit: Connection closed for inactivity)
[03:55:33] <kline> (and what they do have is delivered in such a poor tone that its hard not to dislike them for it)
[03:55:39] <drobilla> Yeah that's kind of why I find this article morbidly fascination.  I agree with the basic points and premise and this general area of work and all, but reading this is just nuclear irritating
[03:56:00] <drobilla> fascinating*
[03:59:47] <drakonis> companion_cube: you must be having the time of your life right now
[04:00:37] <companion_cube> oh god
[04:02:43] <companion_cube> kline: I must say I've avoided async rust and it's indeed very complex. I don't think C would be simpler or cleaner, but yeah, yuck
[04:03:41] <companion_cube> (Ada doesn't even have an equivalent to that… grr)
[04:04:31] <companion_cube> why is this thing even async, actually, it's like one loop?!
[04:04:54] <kline> for now
[04:04:56] *** Joins: imode (~imode@user/imode)
[04:05:41] <kline> that said, the examples lean heavily into asynxc
[04:05:47] <kline> and tbh i dont really like the api
[04:05:57] <kline> but there is apparently not any better irc bot crate
[04:06:01] <companion_cube> oh, that
[04:06:13] <companion_cube> yeah it's a pity that `irc` moved to async altogether
[04:06:28] <companion_cube> as if bots were keeping millions of connections open…
[04:08:55] *** Quits: jjonah (~jjonah@p200300d5d72a9300dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:13:02] <kline> i mean
[04:13:16] <kline> my other `irc` codebase does keep open ~200 connections
[04:13:47] <kline> (it provides background noise for a test network where its useful to have a lot of bots chattering away to provide test targets)
[04:18:40] *** Quits: jess (~jess@libera/staff/jess) ()
[04:20:29] <companion_cube> you could have 200 threads :)
[04:20:34] <companion_cube> or use epoll manually, I imagine
[04:22:14] <kline> realistically im just spawning 200 tasks with tokio and letting the runtime deal with it
[04:22:29] <kline> and channels for communicating between them
[04:22:42] <kline> i basically use rust in this way like a middle ground between c and erlang
[04:24:27] <companion_cube> yeah good luck
[04:24:31] <companion_cube> tokio seems like a behemoth
[04:26:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 246 seconds)
[04:27:04] <kline> tokio is the least painful part about all of this
[04:27:16] <kline> i genuinely found hashmap more annoying
[04:27:19] <companion_cube> hmm
[04:27:38] <companion_cube> entry isn't bad, but did get + insert really not work for you?
[04:27:42] <kline> i have a friend (also a libera staffer) who writes rust professionally and it gave him 10 mins pause as well
[04:28:07] <kline> companion_cube, so i guess get pops it out of the hashmap and i can then re-insert it in a bit?
[04:28:15] <companion_cube> sure
[04:28:25] <companion_cube> ah, were you trying to hold onto a hashmap entry across a yield point?
[04:28:30] <companion_cube> the borrow checker wouldn't like that
[04:28:47] <kline> the core of this is that tattled needs to be written to
[04:28:48] <kline> thats all
[04:28:59] <kline> it worked fine until i wanted to track how long it was since i notified someone about a thing
[04:29:14] <kline> writing back to tattled means taking multiple mutuable borrows
[04:29:19] <kline> let me see if i have the old paste
[04:29:40] <kline> https://gist.github.com/AbstractBeliefs/ebec3290e0501dcf2530e27a17ce16b0
[04:29:41] <mockturtle> [ main.rs ] - gist.github.com
[04:30:26] <kline> you see i need to check and then update tattled here, working an entry where !(*tattled) and then later, after notifying, writing back in one where tattled is now true
[04:30:44] <kline> problem is that overdue.get_mut() gets one mutable borrow
[04:30:54] <kline> and then tattled is a second mutable borrow
[04:30:55] <companion_cube> well, I guess it's reasonable that it fails, no?
[04:30:59] <companion_cube> if you write into a hashmap
[04:31:05] <companion_cube> it might resize it, invalidating previous entries
[04:31:29] <kline> to be clear, all i want to do is update a boolean entry on a contained struct
[04:31:42] <kline> this guarantees that no changed size is required
[04:31:44] <companion_cube> ah, I see. but is the struct inline?
[04:31:48] <kline> but you cannot do this in rust
[04:31:49] <companion_cube> or behind a pointer
[04:31:56] <kline> you have to remove and then reinsert a hashmap item
[04:32:04] <companion_cube> if the item is inline in the map, yes
[04:32:06] <kline> you cannot update hashmap items in place
[04:32:16] <companion_cube> you can if you don't touch the hashmap in the mean time
[04:32:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:33:01] <kline> i need to check tattled to see if it needs updated
[04:33:10] <kline>     let mut overdue: HashMap<String, (u64, Instant, bool)> = HashMap::new();
[04:33:34] <kline> i need to read that bool, if its false and instant >10 mins in the past, then <do a thing> and make tattled true
[04:33:53] <kline> this should never be a drama, except in rust it is
[04:33:57] *** Parts: anonymouscoward (~dready@c-24-13-48-62.hsd1.il.comcast.net) ()
[04:34:28] <companion_cube> Should really work...
[04:34:28] <kline> what the borrow checker approves is only a subset of what is actually safe, and this appears to be one of the cases in that gap
[04:34:38] <kline> yes, but it does not, as the borrow checker is not sophisticated enough
[04:34:54] <meff[m]> Yeah I've run into this issue before myself and it's pretty annoying
[04:34:56] <companion_cube> Unless "do a thing" touches the HashMap or sth containing the hashmap
[04:34:56] <kline> this appears to be the exact purpose of the Entry api
[04:35:00] <kline> so its not just me doing it wrong
[04:35:00] <meff[m]> Most of the time I just remove the element and reinsert
[04:35:20] <companion_cube> The entry gives a &mut, yes
[04:36:43] <kline> https://stackoverflow.com/a/30414450
[04:36:43] <mockturtle> [ How can I update a value in a mutable HashMap? ] - stackoverflow.com
[04:36:45] <kline> this is the core of it
[04:37:30] <companion_cube> But it works, right?
[04:37:37] <kline> with the entry api?
[04:37:38] <kline> yes
[04:37:46] <meff[m]> right but the entry API is super verbose
[04:37:54] <companion_cube> It's just like c++'s iterator interface
[04:38:02] <kline> but the whole entry api seems to mostly exist to paper over issues with the borrow checker not being able to identify things that are safe
[04:38:17] <kline> theres a reality gap between what the borrow checker can prove is safe, and what is actually sage
[04:38:19] <companion_cube> And also to avoid get+insert
[04:38:23] <companion_cube> Which is twice as costly
[04:38:28] <companion_cube> I don't see the issue
[04:38:44] <kline> well, the correct response would be to have the IndexMut trait
[04:38:58] <companion_cube> Yeah but what if the item is absent
[04:39:00] <kline> but applying that to hashmap is apparently difficult to fit around the borrow checker
[04:39:09] <kline> i mean, look
[04:39:17] <kline> all i want to do is update a bool in an element
[04:39:23] <kline> every other language allows me to do this
[04:39:29] <kline> it can been seen that it is safe
[04:39:51] <kline> this is a problem with the borrow checker not realising that and you have to do incredible contortions and use another API to work around it
[04:40:32] <kline> you can justify it all you like, and the entry api does conveniently bring other cool stuff that i have absolutely no interest in using, but that doesnt mean that this is a good outcome
[04:40:39] <companion_cube> Did you try get_mut?
[04:40:51] <kline> yes: https://gist.github.com/AbstractBeliefs/ebec3290e0501dcf2530e27a17ce16b0
[04:40:51] <mockturtle> [ main.rs ] - gist.github.com
[04:41:02] <kline> this is actually the first thing i tried because it _seems_ to be what you should do
[04:41:11] <kline> but the borrow checker cannot correctly work around it
[04:41:40] <companion_cube> Ah yes, because you want to remove
[04:41:46] <kline> no, i dont want to remove
[04:41:48] <kline> i want to update
[04:42:02] <kline> but im not allowed to update a fixed-size bool in an element
[04:42:03] <companion_cube> There's a overdue. Remove in there
[04:42:10] <kline> so i have to remove and insert
[04:42:19] <companion_cube> (sorry, am on phone)
[04:42:24] <kline> in python i would just overdue["kline"]["tattled"] = true
[04:42:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 272 seconds)
[04:42:33] <companion_cube> There's a branch where you remove!
[04:42:39] <kline> yes, because i cant update in place
[04:42:52] <kline> the remove and insert should be an update in place
[04:42:56] <kline> but i cant do that so i have to remove
[04:43:01] <kline> and that means i have to get a mutable
[04:43:02] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:43:08] <companion_cube> No you just remove and don't reinsert?
[04:43:19] <kline> and that means i cant also get a mutable to _solely_ read a bool
[04:43:23] <companion_cube> You need to bind the tuple
[04:43:31] <companion_cube> And update it
[04:43:33] <companion_cube> I think
[04:44:10] <kline> please write back to me when you do because i taken this to my pal who does it, and to another rust community and they both said "ah yes this is some bullshit contortion you just have to do"
[04:44:32] <kline> (until someone implements IndexMut)
[04:45:07] <kline> (which has been punted into the long grass and might never happen since the Entry API allows you to do it in a very roundabout, but workable, way - the way i am using now)
[04:45:11] *** Quits: imode (~imode@user/imode) (Ping timeout: 255 seconds)
[04:45:50] <companion_cube> Hmm get_mut brings you all that indexmut would
[04:46:07] <companion_cube> Except with an option for correctness
[04:46:15] <companion_cube> I'll try and write a snippet yes
[04:46:38] <kline> thats true, it does give you all index mut would, but it means i cannot grab tattled like i need
[04:46:59] <kline> get_mut() works as long as i dont need to use tattled
[04:47:28] <kline> and its one of the really annoying bits because everything was 99% done until i got to using tattled to make sure i didnt alert on overdue repeatedly
[04:48:08] <kline> (basically every 1 minute the overdue list is looked at, if someone who is overdue has been overdue for 10 mins, you need to alert someone)
[04:48:26] <kline> without tattled, this would alert every minute, since thats how frequently it iterated
[04:48:39] <kline> so you need to add a bool that says "yes, we've already done this one"
[04:49:08] <kline> that tiny change required a fairly significant architectural change and a new API because you cant update an entry for this in-place
[04:50:49] <companion_cube> Yeah give me a sec, I ll try this
[04:50:52] <kline> if you can prove me wrong i will be ecstatic because it means i can use a simpler and more intuitive API, but so far 3 different competent rust people have told me this isnt just a beginning like me doing it wrong, this is a genuine issue with the borrow checker not being sophisticated enough :(
[04:54:15] <kline> these are the two key bits: https://gist.github.com/AbstractBeliefs/70b24f45e299d81c1ff874194dbcdbf3
[04:54:15] <mockturtle> [ main.rs ] - gist.github.com
[04:54:23] <kline> main.rs is the base "working but alerts every minute"
[04:54:39] <companion_cube> kline: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=850c330ff661191213753101d6db806f ?
[04:54:40] <mockturtle> [ Rust Playground ] - play.rust-lang.org
[04:54:40] <kline> patch.rs is a naive attempt at writing tattled up without using Entry
[04:54:43] <companion_cube> is something missing?
[04:56:53] <companion_cube> I can add `&& !*tattled` in the condition and it still works
[04:59:28] <kline> one sec
[04:59:37] <kline> i have the actual thing i have coming up
[05:00:01] <kline> https://github.com/AbstractBeliefs/scrutinyite/blob/tattler/src/main.rs
[05:00:01] <mockturtle> [ AbstractBeliefs/scrutinyite ] - github.com
[05:00:36] <kline> https://paste.debian.net/hidden/81c663b3/ is the resulting error
[05:00:38] <mockturtle> [ Debian Pastezone ] - paste.debian.net
[05:01:10] <companion_cube> what about directly modifying *tattled?
[05:05:16] <kline> it builds and i cant reproduce the same error
[05:05:29] <kline> but it doesnt appear to work as im still alerted
[05:05:37] <kline> is tattled/its container a copy somewhere?
[05:08:12] <companion_cube> in my snippet? there's no copy
[05:09:57] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[05:10:34] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 240 seconds)
[05:13:31] <kline> i dont know where then
[05:13:46] <kline> its 2am, ill look at this again tomorrow
[05:14:00] <kline> im supposed to be on duty at 7
[05:16:26] *** Joins: MerchantOfVenice (~patrick@user/merchantofvenice)
[05:18:00] <companion_cube> good luck
[05:18:00] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[05:22:32] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 255 seconds)
[05:25:14] *** Joins: imode (~imode@user/imode)
[05:36:53] *** Joins: tuxedo (~tuxedo@114.125.103.211)
[05:37:48] <companion_cube> kline: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f9354e55d27db9557c66019b056c075c with a remove, fyi
[05:37:48] <mockturtle> [ Rust Playground ] - play.rust-lang.org
[05:40:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:44:28] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[05:44:59] *** Quits: wmoxam (~wmoxam@li130-207.members.linode.com) (Ping timeout: 256 seconds)
[05:45:17] *** Joins: smitop (~smitop@user/smitop)
[05:50:44] *** Joins: wmoxam (~wmoxam@li130-207.members.linode.com)
[05:57:10] *** Joins: sklv (~sklv@gateway/tor-sasl/sklv)
[06:00:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[06:00:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:99b9:1812:a970:81db)
[06:02:06] *** Joins: vicfred (~vicfred@user/vicfred)
[06:10:41] *** Quits: h0m1 (~h0m1@user/h0m1) (Ping timeout: 255 seconds)
[06:11:59] *** Quits: tuxedo (~tuxedo@114.125.103.211) (Quit: Bye.)
[06:12:21] *** Joins: h0m1 (~h0m1@user/h0m1)
[06:25:05] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[06:27:02] *** Joins: supersandro20007 (~supersand@i5C7565C3.versanet.de)
[06:27:02] *** supersandro2000 is now known as Guest9138
[06:27:02] *** supersandro20007 is now known as supersandro2000
[06:27:14] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:31:07] *** Quits: Guest9138 (~supersand@i5C74CE80.versanet.de) (Ping timeout: 265 seconds)
[06:32:39] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:36:08] *** Joins: l__q (~modinfo@user/modinfo)
[06:44:32] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:52:24] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[06:57:02] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 255 seconds)
[07:00:30] *** Joins: tuxedo (~tuxedo@114.125.103.211)
[07:02:22] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[07:24:24] *** Joins: l__q (~modinfo@user/modinfo)
[07:24:56] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Quit: Leaving)
[07:35:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:99b9:1812:a970:81db) (Remote host closed the connection)
[07:37:12] *** Quits: misnor (~misnor@156.57.153.38) (Remote host closed the connection)
[07:49:17] *** Joins: diamondbond (~diamondbo@175.157.224.213)
[08:04:11] <ckie> just changed my email on lobsters and wasn't asked to confirm it or anything. spooky.
[08:14:47] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:18:25] *** __jmcantrell__ is now known as jmcantrell
[08:20:30] *** Joins: lucf117 (~lucf117@user/lucf117)
[08:21:33] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[08:37:07] *** Quits: Reinhilde (ellenor@vice-chairwoman.of.freenode.management) (Quit: Bye Open Projects!)
[08:37:23] *** Joins: timj_ (~timj@5-253-142-46.pool.kielnet.net)
[08:40:32] *** Quits: timj (~timj@user/timj) (Ping timeout: 255 seconds)
[08:43:07] <mockturtle> What I learned from Erlang about Resiliency in Systems Design [erlang distributed] (calvin) https://lobste.rs/s/wjceku
[08:44:52] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[08:46:08] *** Quits: diamondbond (~diamondbo@175.157.224.213) (Ping timeout: 258 seconds)
[08:48:32] <mockturtle> Best of .bashrc [unix] (bcongdon) https://lobste.rs/s/oev1k1
[08:53:18] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[08:58:24] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 272 seconds)
[08:58:28] <mockturtle> Project-Nested: An NES Emulator Running on the SNES [reversing games] (lorddimwit) https://lobste.rs/s/2gw3ho
[09:08:33] *** Ellenor is now known as Reinhilde
[09:09:00] *** Joins: thelazyoxymoron (~thelazyox@49.207.216.198)
[09:13:01] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:14:07] *** Quits: drobilla (~user@104-195-158-248.cpe.teksavvy.com) (Ping timeout: 258 seconds)
[09:30:19] *** Quits: dikiaap (~dikiaap@user/dikiaap) (*.net *.split)
[09:30:19] *** Quits: glacambre[m] (~glacambre@2001:470:69fc:105::1f5) (*.net *.split)
[09:30:19] *** Quits: siraben (~siraben@user/siraben) (*.net *.split)
[09:30:19] *** Quits: jryans (~jryans@2001:470:69fc:105::1d) (*.net *.split)
[09:30:19] *** Quits: bl1nk (~bl1nk@user/bl1nk) (*.net *.split)
[09:30:19] *** Quits: klu (~klu@user/klu) (*.net *.split)
[09:30:19] *** Quits: ivan (~ivan@user/ivan) (*.net *.split)
[09:30:19] *** Quits: AB49K (~AB49K@user/ab49k) (*.net *.split)
[09:30:19] *** Quits: jamie9898 (~jamie9898@173.199.70.206) (*.net *.split)
[09:30:19] *** Quits: arreyder (~arreyder@175.80.193.35.bc.googleusercontent.com) (*.net *.split)
[09:30:19] *** Quits: johnLate (~johnlate@lexington.scnr.net) (*.net *.split)
[09:30:19] *** Quits: DeeJayy (~deejayy@sedna.tilb.sze.hu) (*.net *.split)
[09:30:19] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (*.net *.split)
[09:30:19] *** Quits: mla (~mla@162.253.176.229) (*.net *.split)
[09:30:19] *** Quits: ario_ (~ario@159.65.220.102) (*.net *.split)
[09:30:19] *** Quits: sonnius (~sonnius@user/sonnius) (*.net *.split)
[09:30:19] *** Quits: LinuXY (~ian@45.63.71.180) (*.net *.split)
[09:30:24] *** Joins: jamie989- (~jamie9898@173.199.70.206)
[09:30:24] *** Joins: DeeJayy_ (~deejayy@sedna.tilb.sze.hu)
[09:30:25] *** Joins: ario (~ario@159.65.220.102)
[09:30:25] *** Joins: johnLate (~johnlate@lexington.scnr.net)
[09:30:32] *** Joins: klu (~klu@c-73-109-252-21.hsd1.wa.comcast.net)
[09:30:45] *** Joins: arreyder (~arreyder@175.80.193.35.bc.googleusercontent.com)
[09:30:47] *** Joins: bl1nk (~bl1nk@user/bl1nk)
[09:30:48] *** Joins: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de)
[09:30:54] *** Joins: sonnius (~sonnius@168.138.9.183)
[09:30:57] *** Quits: sonnius (~sonnius@168.138.9.183) (Signing in (sonnius))
[09:30:57] *** Joins: sonnius (~sonnius@user/sonnius)
[09:31:00] *** Quits: klu (~klu@c-73-109-252-21.hsd1.wa.comcast.net) (Changing host)
[09:31:00] *** Joins: klu (~klu@user/klu)
[09:31:02] *** Joins: AB49K (~AB49K@149.28.179.139)
[09:31:03] *** Quits: AB49K (~AB49K@149.28.179.139) (Changing host)
[09:31:03] *** Joins: AB49K (~AB49K@user/ab49k)
[09:32:44] *** Quits: fro (fro@humpty.dance) (Quit: EPIC5-2.1.5[1945] - amnesiac : Are we there yet?)
[09:34:10] *** Joins: ivan (~ivan@user/ivan)
[09:35:23] *** Joins: LinuXY (~ian@45.63.71.180)
[09:38:32] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[09:39:12] *** Joins: hub (~hub@user/hub)
[09:46:29] *** Joins: fro (fro@humpty.dance)
[09:55:20] *** Joins: rhn (~rhn@78.48.85.91)
[10:01:02] *** Quits: MerchantOfVenice (~patrick@user/merchantofvenice) (Quit: Konversation terminated!)
[10:03:53] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[10:52:16] *** Joins: ninjin (~ninjin@user/ninjin)
[10:54:12] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[10:59:22] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 272 seconds)
[11:00:29] <mockturtle> Cheat Sheet on Curl Latency Metrics: how to benchmark server latency with curl [networking] (raymii) https://lobste.rs/s/3puwzr
[11:01:59] <quanticle> x-posted from ##crustaceans, because it's on topic: https://github.com/tjdevries/vim9jit
[11:02:00] <mockturtle> [ tjdevries/vim9jit ] - github.com
[11:02:26] <drakonis> i'll say it again, this is neovim but worse
[11:02:35] <quanticle> Not wrong
[11:02:51] <drakonis> neovim is moving towards lua as the main choice it seems
[11:03:02] <drakonis> still does vimscript but its not the optimal choice anymore
[11:06:35] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 252 seconds)
[11:10:45] *** Quits: supersandro2000 (~supersand@i5C7565C3.versanet.de) (Quit: Ping timeout (120 seconds))
[11:11:39] *** Joins: supersandro2000 (~supersand@i5C7565C3.versanet.de)
[11:14:17] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 252 seconds)
[11:20:41] <dmc> I am a recent convert to Neovim and Lua
[11:22:51] <dmc> now that Neovim 0.5.0 is out, I've been working on switching to all Lua config and can get rid of conditionals for Vim support
[11:23:31] <dmc> and get rid of ~/.vim :D
[11:42:20] *** Quits: daviest (~daviest@dslb-002-205-183-066.002.205.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[11:45:29] *** Quits: tuxedo (~tuxedo@114.125.103.211) (Quit: Bye.)
[11:58:58] *** Joins: tobylane (~Nightly@user/tobylane)
[12:00:55] *** Quits: tobylane (~Nightly@user/tobylane) (Client Quit)
[12:06:53] *** Joins: tenshi (~red@user/tenshi)
[12:22:20] *** Quits: thelazyoxymoron (~thelazyox@49.207.216.198) (Ping timeout: 258 seconds)
[12:22:40] *** Joins: thelazyoxymoron (~thelazyox@vps-2478a83a.vps.ovh.us)
[12:44:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[12:46:30] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:55:06] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[12:55:41] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: meff[m] (~meffsunad@2001:470:69fc:105::1e5) (Quit: Bridge terminating on SIGTERM)
[12:55:41] *** Quits: stencil[m] (~stencilma@2001:470:69fc:105::995) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: Lomanic[m] (~lomanicma@2001:470:69fc:105::4b) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: nc[m] (~nncmatrix@2001:470:69fc:105::2d8d) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: AurlienDEROIDE[4 (~aureliarm@2001:470:69fc:105::6970) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: AurlienDeroide[m (~deroidaue@2001:470:69fc:105::b46e) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: dmc[m] (~dmcm]@archlinux/trusteduser/polyzen) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: wct (~weirdctor@2001:470:69fc:105::ad8) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: newsch[m] (~newschmat@2001:470:69fc:105::ca2) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: ymdatta[m] (~ymdattama@2001:470:69fc:105::4ec1) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: Michi[m] (~michimatr@2001:470:69fc:105::6da) (Quit: Bridge terminating on SIGTERM)
[12:55:47] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: Bridge terminating on SIGTERM)
[12:55:49] *** Quits: moats (~oats@user/oats) (Quit: Bridge terminating on SIGTERM)
[12:55:52] *** Quits: dvaun[m] (~dvaunmatr@2001:470:69fc:105::12d9) (Quit: Bridge terminating on SIGTERM)
[12:55:56] *** Quits: nikolap (~nikolap@2001:470:69fc:105::3432) (Quit: Bridge terminating on SIGTERM)
[12:55:56] *** Quits: kallog (~kallogmat@2001:470:69fc:105::30f5) (Quit: Bridge terminating on SIGTERM)
[12:55:56] *** Quits: kevincox (~kevincox@user/kevincox) (Quit: Bridge terminating on SIGTERM)
[12:55:57] *** Quits: inerthia[m] (~inerthiam@2001:470:69fc:105::828c) (Quit: Bridge terminating on SIGTERM)
[12:58:14] *** Joins: jryans (~jryans@2001:470:69fc:105::1d)
[12:59:54] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 258 seconds)
[13:02:03] *** Joins: Lomanic[m] (~lomanicma@2001:470:69fc:105::4b)
[13:02:03] *** Joins: kevincox (~kevincox@user/kevincox)
[13:02:03] *** Joins: meff[m] (~meffsunad@2001:470:69fc:105::1e5)
[13:02:03] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[13:02:03] *** Joins: wct (~weirdctor@2001:470:69fc:105::ad8)
[13:02:03] *** Joins: newsch[m] (~newschmat@2001:470:69fc:105::ca2)
[13:02:03] *** Joins: Michi[m] (~michimatr@2001:470:69fc:105::6da)
[13:02:03] *** Joins: moats (~oats@user/oats)
[13:02:03] *** Joins: nc[m] (~nncmatrix@2001:470:69fc:105::2d8d)
[13:02:03] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[13:02:03] *** Joins: dmc[m] (~dmcm]@archlinux/trusteduser/polyzen)
[13:02:03] *** Joins: mambang[m] (~mambang@user/mambang)
[13:02:04] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[13:02:04] *** Joins: siraben (~siraben@user/siraben)
[13:02:04] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[13:02:04] *** Joins: stencil[m] (~stencilma@2001:470:69fc:105::995)
[13:02:04] *** Joins: glacambre[m] (~glacambre@2001:470:69fc:105::1f5)
[13:02:04] *** Joins: dikiaap (~dikiaap@user/dikiaap)
[13:02:15] *** Joins: ymdatta[m] (~ymdattama@2001:470:69fc:105::4ec1)
[13:02:16] *** Joins: AurlienDeroide[m (~deroidaue@2001:470:69fc:105::b46e)
[13:02:16] *** Joins: inerthia[m] (~inerthiam@2001:470:69fc:105::828c)
[13:02:16] *** Joins: dvaun[m] (~dvaunmatr@2001:470:69fc:105::12d9)
[13:02:18] *** Joins: nikolap (~nikolap@2001:470:69fc:105::3432)
[13:02:18] *** Joins: AurlienDEROIDE[4 (~aureliarm@2001:470:69fc:105::6970)
[13:02:18] *** Joins: kallog (~kallogmat@2001:470:69fc:105::30f5)
[13:06:11] <mockturtle> My proposal for scaling open source: don’t [philosophy practices culture] (cyplo) https://lobste.rs/s/vjzty7
[13:08:50] *** Joins: mercerist (~mercerist@user/mercerist)
[13:12:53] *** Joins: jjonah (~jjonah@p200300d5d72a9300dea632fffeb3342f.dip0.t-ipconnect.de)
[13:21:09] *** Joins: Europa (~Europa@user/europa)
[13:25:35] <riv> Is there a name for that phenomenon where you forget something because you got it wrong once?
[13:26:31] *** Joins: Scrutinizer (Scrutinize@user/scrutinizer)
[13:35:29] *** Joins: sslatwork (uid492516@user/sslatwork)
[13:38:20] *** Quits: imode (~imode@user/imode) (Ping timeout: 272 seconds)
[13:39:40] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[13:39:57] *** Joins: ninjin (~ninjin@user/ninjin)
[13:41:06] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[13:42:51] *** Joins: Europa (~Europa@user/europa)
[13:46:27] <jj5> riv: oh, that happens to other people too? :P like, I have a friend, and I'm not sure if his girlfriend's name is Holly or Zoe, and it doesn't matter if he tells me again and again I can never be sure what her name is... :P
[13:46:35] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[13:47:04] <jj5> it's like a little bit of irreversible data corruption in my mind...
[13:47:06] *** Joins: Europa (~Europa@user/europa)
[13:47:07] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[13:47:19] <riv> haha
[13:47:25] <riv> i know right!
[13:47:51] *** Joins: Europa (~Europa@user/europa)
[13:48:34] <riv> i had this for a year about my age, we were joking that i was a year older or younger and i had to think every time to get it right
[13:50:29] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[13:51:11] *** Joins: Europa (~Europa@user/europa)
[13:51:54] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[13:53:17] <riv> was annoying tbh
[13:56:24] *** Joins: Europa (~Europa@user/europa)
[14:06:20] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[14:07:17] *** Joins: Europa (~Europa@user/europa)
[14:13:29] *** Quits: thelazyoxymoron (~thelazyox@vps-2478a83a.vps.ovh.us) (Ping timeout: 268 seconds)
[14:14:38] *** Joins: seschwar (~seschwar@user/seschwar)
[14:14:57] *** Joins: thelazyoxymoron (~thelazyox@49.207.216.198)
[14:17:49] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[14:18:46] *** Joins: Europa (~Europa@user/europa)
[14:19:04] *** Quits: supersandro2000 (~supersand@i5C7565C3.versanet.de) (Quit: Ping timeout (120 seconds))
[14:19:52] *** Joins: supersandro2000 (~supersand@i5C7565C3.versanet.de)
[14:24:08] *** DeeJayy_ is now known as DeeJayy
[14:29:16] <wink> jj5: some people can't get left and right correct, I've always had that problem with broccoli and cauliflower...
[14:52:23] *** Joins: daviest (~daviest@dslb-002-205-183-066.002.205.pools.vodafone-ip.de)
[14:56:00] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[14:58:21] *** Quits: daviest (~daviest@dslb-002-205-183-066.002.205.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[15:00:40] *** Quits: loc (~loc@174-045-102-241.res.spectrum.com) (Ping timeout: 272 seconds)
[15:04:49] *** Quits: Scrutinizer (Scrutinize@user/scrutinizer) (Quit: Bye!)
[15:22:14] *** Joins: loc (~loc@174-045-102-241.res.spectrum.com)
[15:36:26] <ngoldbaum> broccoflower enters the chat
[15:40:26] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[15:44:40] *** Joins: voltage_ (voltage@user/voltage)
[15:48:01] *** Quits: ninjin (~ninjin@user/ninjin) (Quit: quit)
[15:48:18] *** Joins: ninjin (~ninjin@user/ninjin)
[15:50:12] *** Joins: mahmutov (~mahmutov@176.30.226.37)
[16:01:53] *** Quits: ninjin (~ninjin@user/ninjin) (Quit: quit)
[16:02:04] <mockturtle> macOS: Show in Finder / Show in Emacs [mac emacs] (xenodium) https://lobste.rs/s/nig2ck
[16:02:08] *** Joins: ninjin (~ninjin@user/ninjin)
[16:20:13] *** Quits: Ticho (~Ticho@188-167-65-45.dynamic.chello.sk) (Changing host)
[16:20:13] *** Joins: Ticho (~Ticho@user/ticho)
[16:29:13] *** Joins: cdown (~cdown@89.32.122.5)
[16:29:20] *** Joins: JordiGH (~jordi@user/jordigh)
[16:37:45] *** Joins: hussein (~hussein@175.136.135.216)
[16:38:51] *** Joins: linuxgemini0 (~linuxgemi@user/linuxgemini)
[16:38:55] *** Joins: Mangy_Lobster1 (~Mangy_Lob@user/mangy-lobster/x-0099146)
[16:39:16] *** Quits: phroa (~phroa@user/phroa) (Quit: `)
[16:39:35] *** Joins: phroa (~phroa@user/phroa)
[16:40:09] *** Quits: Mangy_Lobster (~Mangy_Lob@user/mangy-lobster/x-0099146) (Read error: Connection reset by peer)
[16:40:10] *** Mangy_Lobster1 is now known as Mangy_Lobster
[16:40:10] *** Quits: nur (~hussein@175.136.135.216) (Ping timeout: 240 seconds)
[16:40:37] *** Quits: linuxgemini (~linuxgemi@user/linuxgemini) (Ping timeout: 256 seconds)
[16:40:38] *** linuxgemini0 is now known as linuxgemini
[17:08:24] <epilys> https://64.media.tumblr.com/62d7aaf6032d139619bf63a0384e9008/8ee8dd43e9011dd4-56/s1280x1920/3054d0f00b86472a4c6782d9c93b30fd3f418c60.png
[17:08:38] *** Joins: ymz-ncnk (~ymz-ncnk@46-133-189-98.mobile.vf-ua.net)
[17:16:44] *** Quits: mahmutov (~mahmutov@176.30.226.37) (Ping timeout: 258 seconds)
[17:16:51] *** Quits: sliced (~sliced@PC-91-201-17-116.tvk-net.pl) (Ping timeout: 265 seconds)
[17:20:15] *** Parts: Europa (~Europa@user/europa) (Textual IRC Client: www.textualapp.com)
[17:22:12] *** Joins: mahmutov (~mahmutov@176.30.226.37)
[17:27:16] *** Quits: ymz-ncnk (~ymz-ncnk@46-133-189-98.mobile.vf-ua.net) (Read error: Connection reset by peer)
[17:27:35] *** Joins: sliced (~sliced@PC-91-201-17-116.tvk-net.pl)
[17:37:12] *** Joins: tomato5 (~tomato@user/tomato)
[17:38:25] *** Quits: tomato (~tomato@user/tomato) (Ping timeout: 256 seconds)
[17:38:26] *** tomato5 is now known as tomato
[17:38:27] *** Joins: Europa (~Europa@user/europa)
[17:45:41] *** Quits: mercerist (~mercerist@user/mercerist) (Quit: mercerist)
[17:47:45] *** Joins: drobilla (~user@104-195-158-248.cpe.teksavvy.com)
[17:48:25] <mockturtle> Easy EdgeDB - The illustrated textbook | EdgeDB [databases plt] (Student) https://lobste.rs/s/igbzdk
[17:51:38] *** Joins: southerntofu (southernto@thunix.net)
[17:52:23] *** Quits: sliced (~sliced@PC-91-201-17-116.tvk-net.pl) (Ping timeout: 258 seconds)
[17:56:46] *** Quits: tomato (~tomato@user/tomato) (Read error: Connection reset by peer)
[17:57:17] *** Joins: missogra (~missogra@dynamic-077-003-000-251.77.3.pool.telefonica.de)
[18:10:41] <mockturtle> How To Add eBPF Observability To Your Product [linux programming] (calvin) https://lobste.rs/s/dpp9iu
[18:12:10] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[18:15:06] *** Joins: tomato (~tomato@user/tomato)
[18:21:23] *** Quits: thelazyoxymoron (~thelazyox@49.207.216.198) (Ping timeout: 268 seconds)
[18:23:14] *** Joins: thelazyoxymoron (~thelazyox@49.207.204.124)
[18:25:30] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[18:27:30] *** Joins: seschwar (~seschwar@user/seschwar)
[18:37:37] *** Quits: jjonah (~jjonah@p200300d5d72a9300dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:40:50] *** Quits: Retropikzel (~Retropikz@2001:999:202:4432:e8f7:c7b2:5e6e:e9f2) (Ping timeout: 255 seconds)
[18:53:58] <mockturtle> Changes on binary files [vcs] (ehamberg) https://lobste.rs/s/ixq6r8
[18:55:36] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[18:56:56] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[19:02:43] *** Joins: mercerist (~mercerist@user/mercerist)
[19:08:11] *** Joins: misnor (~misnor@156.57.153.38)
[19:15:14] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[19:24:29] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Ping timeout: 255 seconds)
[19:28:20] *** Joins: brumbo (~korowiow@89-70-222-177.dynamic.chello.pl)
[19:31:46] *** Joins: jess (~jess@libera/staff/jess)
[19:40:01] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[19:40:19] *** Quits: hussein (~hussein@175.136.135.216) (Quit: Leaving)
[19:40:33] *** Joins: nur (~hussein@175.136.135.216)
[19:53:38] *** Joins: arcatech (~arcatech@user/arcatech)
[20:05:54] *** Quits: missogra (~missogra@dynamic-077-003-000-251.77.3.pool.telefonica.de) (Quit: Leaving)
[20:10:20] *** Quits: mahmutov (~mahmutov@176.30.226.37) (Ping timeout: 252 seconds)
[20:14:10] *** Joins: micr0 (~micr0@ool-43561a4b.dyn.optonline.net)
[20:14:10] *** Quits: micr0 (~micr0@ool-43561a4b.dyn.optonline.net) (Changing host)
[20:14:10] *** Joins: micr0 (~micr0@user/micr0)
[20:15:28] *** Joins: CHG1730 (~CHG1730@35-247-208-87.ftth.glasoperator.nl)
[20:27:09] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Remote host closed the connection)
[20:43:53] *** Joins: juanfgarcia (~Juan@195.135.250.177)
[20:44:01] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:44:51] <juanfgarcia> Hi!
[20:45:16] <juanfgarcia> I've been reading lobste.rs quite frequently for a while. I would like to have an account, is there any chance to have an invitation?
[20:51:00] <kline> do you know anyone who can invite you?
[20:52:26] <juanfgarcia> No
[20:53:36] <kline> best thing to do is hang out here and make friends
[20:58:44] <juanfgarcia> Good to know
[21:00:40] <Church> kline: So watcha been writing in rust?
[21:00:46] <Church> Saw yah noodling last night.
[21:01:28] <kline> /stats p shows a list of "on call" staff, its useful to do a liveness check on people and see that theyve not fallen asleep while half the network tries to ping them for support
[21:01:55] <kline> a bot to track the idle time of on-call staff and request they prove liveness would be nice
[21:02:37] <Church> Ah got it, well that's nifty.
[21:02:38] <kline> also as mentioned, spinning many many irc connections to create just noise on a network so you dont have a sterile environment
[21:02:55] <kline> its useful to have an unending supply of willing victims to test stuff on
[21:07:51] <juanfgarcia> What are the topics of discussion in this chat. Should I introduce myself?
[21:08:32] <CHG1730> its a bit all over the place XD, most of the time i see people discuss the articles posted by mockturtle
[21:08:50] <misnor> can't hurt to introduce your self, might start a discussion!
[21:08:51] <CHG1730> but its a bit weird that if you want to interact with social system A you have to get an invitiation via social system B
[21:09:16] <edk> that is how invitations usually work
[21:13:56] <CHG1730> Ill be honest that I dont know what a better system would be, but as of know it seems to split the 'userbase' in to the website part and the IRC part if you get what I mean
[21:14:20] <kline> no, irc is just your "last resort" for if you want to get in but you dont know anyone
[21:14:26] <dsc_> lets be honest, the sole reason people are chatting in this channel is hoping to obtain an invitation
[21:14:43] <kline> dsc_, most people here already have accounts
[21:14:53] <Ticho> in my opinion, this channel is the best part about lobsters - it has way more interesting conversations, whereas the site does not have nearly enough dialogue going on, with not enough people participating, and is a little more than a link aggregator
[21:15:21] <CHG1730> Could be maybe im just in the wrong timezone ;P
[21:16:42] <Ticho> that's easy, just start sleeping less :)
[21:17:53] *** Joins: Guest9 (~Guest9@103.250.145.129)
[21:18:50] <pushcx> CHG1730: The site used to have a feature for requesting invites, but it didn't work out,people approved them so casually that we had problems with spam.
[21:19:11] <CHG1730> I need my beauty sleep ;)
[21:20:34] <CHG1730> pushcx: oh sorry i didnt know that. Maybe people hopping over from reddit or HN. Idk how large the userbase is, but usually the smaller newsgroups sites work pretty well with an honor system
[21:22:03] <misnor> at a certain community size the comments on articles are insufferable, i find the discussions on lobste.rs to be less common but infinitely more insightful
[21:22:32] <juanfgarcia> > might start a discussion! I see
[21:22:59] *** Joins: ksynwa (~ksynwa@v2202009129512127397.nicesrv.de)
[21:24:43] <ksynwa> Some time ago I saw a post on lobste.rs where a website's owner had their database dropped by a hacker who asked for bitcoins in return for their database. Anyone knows what I am talking about? I am trying to find it again but can't find it through searching.
[21:25:26] <Church> kline: Got code up anywhere for this bot?
[21:27:06] <juanfgarcia> >the sole reason people are chatting in this channel is hoping to obtain an invitation | It's true but the reason why I want an invitation (and probably more people too) is for getting involved in the community, and IRC is also a part of that.
[21:27:24] <dsc_> ksynwa: I remember reading that one...
[21:28:54] <ksynwa> Found it: https://blog.newsblur.com/2021/06/28/story-of-a-hacking/
[21:28:54] <mockturtle> [ How a Docker footgun led to a vandal deleting NewsBlur’s MongoDB database ] - blog.newsblur.com
[21:29:11] <dsc_> Yes, that one. :P
[21:29:15] <ksynwa> Was looking for it because my workplace has been affected by the same attack lol
[21:30:10] <dsc_> ksynwa: Also MongoDB and a Bitcoin ransom?
[21:30:28] <ksynwa> dsc_: mysql instead of mongo
[21:30:38] <ksynwa> But the ransom message is almost exactly the same
[21:30:52] <dsc_> Due to "the docker footgun" ?
[21:30:53] <ksynwa> So seems like the same strain of attack. Also Docker is involved heavily.
[21:31:05] <ksynwa> dsc_: Yeah I think so
[21:35:32] <juanfgarcia> Does lobsters have an API? It could be cool to download titles and abstracts in plain text and just grep it to find posts.
[21:36:26] <kline> Church, which one?
[21:36:39] <kline> juanfgarcia, it has rss feeds
[21:37:11] <kline> juanfgarcia, and you can whack .json to the end of urls and get json content for that
[21:37:43] <juanfgarcia> Ah didn't know, that's great thank you
[21:38:03] <kline> its the rss feed that drives the bot here
[21:38:29] <Church> kline: Your ops liveleness one
[21:38:38] <kline> yeah, but its terrible
[21:38:52] *** Quits: hub (~hub@user/hub) (Quit: ZNC 1.8.2 - https://znc.in)
[21:38:58] <Church> Eh still curious at looking. Can't be worse then my first foray into Rust code in ages
[21:39:32] *** Joins: hub (~hub@user/hub)
[21:42:02] <kline> Church, https://github.com/AbstractBeliefs/scrutinyite/blob/master/src/main.rs
[21:42:03] <mockturtle> [ AbstractBeliefs/scrutinyite ] - github.com
[21:42:03] <pushcx> Church: https://lobste.rs/stats
[21:42:04] <mockturtle> [ Stats | Lobsters ] - lobste.rs
[21:42:36] <pushcx> er, that should've been CHG1730:  https://lobste.rs/stats for stats
[21:42:36] <mockturtle> [ Stats | Lobsters ] - lobste.rs
[21:44:11] <kline> Church, the core of it is: every 5 mins, get the stats p list, then work through that list getting idle times. for every idle time you get, add them to the list if they arent there and ask them to write back to confirm liveness. if they were already in the list, check if its been >10 mins since we saw them. if it is, we alert the staff channel to suggest a human poke them and de-helper them if
[21:44:11] <kline> needed
[21:45:15] <kline> the architecture is clunky because it all sits in one big select
[21:45:25] <Church> Nod
[21:46:05] <kline> what i would really like is the ability to populate an IRCBot struct with callbacks and have the event loop moved out of my main() altogether
[21:46:45] <kline> realistically, every irc bot is going to have to handle the basic processing of incoming lines the same, so this should be a crate of its own that knows how to dispatch to user-provided callbacks and state
[21:47:08] <kline> i really dont like the api for the `irc` crate
[21:47:10] *** Quits: micr0 (~micr0@user/micr0) (Read error: Connection reset by peer)
[21:47:18] <companion_cube> you could use a trait object (object oriented stuff) I think
[21:47:25] *** Joins: micr0 (~micr0@ool-43561a4b.dyn.optonline.net)
[21:47:25] *** Quits: micr0 (~micr0@ool-43561a4b.dyn.optonline.net) (Changing host)
[21:47:25] *** Joins: micr0 (~micr0@user/micr0)
[21:47:27] <companion_cube> although async doesn't compose well with that I think
[21:47:33] <kline> companion_cube, thats the intention at some point
[21:48:05] <kline> to have trait that says you have a hashmap of <event, option<fn>>
[21:48:14] <kline> or such
[21:48:21] <companion_cube> did you find if my rust snippet fails to model your issue btw?
[21:48:32] <kline> i havent had time to dig into it
[21:48:51] <kline> spent most of the day on duty
[21:49:03] <epilys> kline, yesterday I setup sopel bot with my own custom plugin (to check a github repo for new commits and post them) and it was easy to use
[21:49:10] *** Quits: juanfgarcia (~Juan@195.135.250.177) (Ping timeout: 272 seconds)
[21:49:21] <kline> epilys, yeah, the python ecosystem is much more mature and developed
[21:49:34] <kline> its what is used for most libera bots
[21:49:56] <epilys> ye, just mentioned it in case you were looking for a fast solution
[21:50:02] <epilys> fast as in development wise
[21:50:05] *** Joins: juanfgarcia (~Juan@195.135.250.177)
[21:50:09] <kline> the current grail is to be able to write ircd modules in rust
[21:50:16] <kline> but its a real real faff
[21:50:43] <companion_cube> with w a s m
[21:50:58] <kline> solanum is a modular ircd, most of the interesting behaviour exist as plugins that hook the core api
[21:51:00] <epilys> I was looking for a reason to write my latest project in rust but couldn't (the lobste.rs like link aggregator)
[21:51:03] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 268 seconds)
[21:51:27] <kline> but they are implemented as standalone shared objects that are build against the core headers with libtool
[21:52:20] <kline> i have absolutely no idea how to correctly integrate rust into autotools in a fashion as to be able to create many single-source-file cdylibs
[21:52:47] <companion_cube> :s
[21:52:50] <kline> https://github.com/solanum-ircd/solanum/tree/main/extensions
[21:52:50] <mockturtle> [ solanum-ircd/solanum ] - github.com
[21:53:03] <kline> here are the in-tree extensions
[21:53:10] <kline> as a demo, you can look at drain.c - it's very simple
[21:53:23] <kline> ( https://github.com/solanum-ircd/solanum/blob/main/extensions/drain.c )
[21:53:23] *** Joins: juanfgarcia_ (uid508069@id-508069.stonehaven.irccloud.com)
[21:53:23] <mockturtle> [ solanum-ircd/solanum ] - github.com
[21:53:26] *** Quits: jjuran (~jjuran@c-98-231-147-29.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[21:53:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:53:39] *** Parts: juanfgarcia (~Juan@195.135.250.177) ()
[21:53:47] <epilys> kline, make autotools call cargo?
[21:54:01] <kline> it affixes 1 function to 1 hook: for every new user, check if they are ban-exempt (a staff member), and if not, reject their connection
[21:54:35] <kline> we use this to "drain" servers before maintenance - we take them out of the DNS pool and reject new connections. over a couple of days most users quit and the server comes down to just a few diehards we message and then reboot
[21:55:19] <kline> epilys, its even things like how to lay our the project - really i want to be able to say, in essence: for every .rs file in extensions/, compile that into a cdylib
[21:55:28] <kline> i dont think cargo is good at that
[21:55:39] <kline> i think there will need to be fuckery at every level
[21:55:53] <kline> autotools, libtool, cargo, build.rs
[21:55:59] *** Joins: juanfgarcia (~Juan@195.135.250.177)
[21:56:01] <epilys> you can define targets in the Cargo.toml and tell it to build as a cdylib
[21:56:12] <epilys> and then you can call cargo and tell it to compile only those targets
[21:56:32] <epilys> ive done similar stuff before with shared libraries
[21:56:40] *** Quits: juanfgarcia (~Juan@195.135.250.177) (Client Quit)
[21:56:40] *** juanfgarcia_ is now known as juanfgarcia
[21:57:10] <kline> fwiw, this is what cargo has to compete with: https://github.com/solanum-ircd/solanum/blob/main/extensions/Makefile.am
[21:57:11] <mockturtle> [ solanum-ircd/solanum ] - github.com
[22:00:09] *** Joins: jjuran (~jjuran@c-98-231-147-29.hsd1.md.comcast.net)
[22:05:29] *** Joins: voltage_ (voltage@user/voltage)
[22:06:30] <CHG1730> pushcx: Thnx. I can see why the queue didn't lead to the desired results :p
[22:07:21] <companion_cube> hu, what a .la file
[22:07:24] <companion_cube> what's*
[22:10:36] <kline> companion_cube, a libtool library specification
[22:10:40] <lep> probably something from singapore
[22:10:52] <kline> companion_cube, it sounds like you dont know much about autotools, in which case, fantastic
[22:11:06] <kline> let me get an example
[22:11:17] <companion_cube> :DDD my god
[22:11:23] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[22:11:24] <companion_cube> I've always stayed as far as possible from autotools
[22:12:19] <kline> https://paste.debian.net/1204098/
[22:12:22] <mockturtle> [ debian Pastezone ] - paste.debian.net
[22:12:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[22:12:34] <riv> i've spent so much time with autotools but I don't think I know anything about it
[22:13:13] <kline> anyway
[22:13:35] <companion_cube> so that's like the ancestor of cmake… 😅
[22:13:36] <kline> id settle for just something where i could say "turn every rust file in extensions into its own cdylib"
[22:13:49] <companion_cube> you could try to call rustc directly I suppose
[22:13:51] <kline> yeah, cmake and autotools are exactly the same solution
[22:13:59] <companion_cube> but with crates it might become harder and harder
[22:14:26] <kline> cargo is good if you have, fundamentally, a rust project
[22:14:35] <kline> but integrating rust into other projects continues to be difficult
[22:14:57] <companion_cube> seems like it, indeed
[22:15:24] <companion_cube> I've only ever done it by calling cargo to get a .a
[22:15:25] <ngoldbaum> autotools being basically the only thing that uses m4 is a bummer
[22:15:26] <kline> putting c stuff into rust is generally a lot easier
[22:15:56] <ngoldbaum> in that if you fuck with autotools you also need to learn this crazy macro language
[22:15:58] <kline> so adding rust as modules into a C project is a real nightmare
[22:16:20] <kline> but if you can get buy in to reframe it so you start from the inside out, its much easier to make it a rust project with a lot of C extensions
[22:16:40] <kline> but im not going to get buy in to turn solanum into a rust project, even if it would be nice to do more of the modules as rust
[22:16:49] <kline> but it looks like its not going to be a go-er
[22:17:14] <kline> rust requires too much administrative overhead
[22:17:31] <riv> would be cool to have a rust IRCd
[22:17:41] <kline> cargo make the easy things way easier, but the hard things way harder
[22:18:04] <kline> which is probably a fair balance as an applications language, but its another black mark against a systems language
[22:18:41] <companion_cube> kind of stupid idea, but could these modules be processes + IPC instead?
[22:18:50] <companion_cube> I probably underestimate the complexity of that on the C side
[22:18:51] <kline> nope
[22:19:04] <kline> too much data flows
[22:20:00] <kline> this is legacy, single threaded, extremely synchronous C network code
[22:20:15] <kline> everything expects to be able to reach everything
[22:20:52] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[22:21:00] <kline> its where rusts ideals as a systems language should shine, except for the fact its utterly unusable
[22:21:31] * companion_cube looks left, then right, then whispers "Ada?"
[22:21:58] <riv> kline, is this just something that the rust people haven't got to yet?
[22:22:01] <kline> ada is probably much easier to integrate, but i dont know what the C story is
[22:22:05] <riv> or is this like a fundamental problem in rust?
[22:22:43] <companion_cube> you could do an "ask" :D
[22:22:47] <kline> riv, its complicated. rust isnt just a language. this is a tooling issue, but in practice the modern trend is towards first class, canon tooling
[22:22:51] <companion_cube> I think it can call C
[22:22:57] <companion_cube> it _probably_ can be called by C?
[22:23:25] <companion_cube> https://gcc.gnu.org/onlinedocs/gcc-3.3.6/gnat_ug_unx/Creating-an-Ada-Library-to-be-Used-in-a-Non_002dAda-Context.html
[22:23:25] <mockturtle> [ Creating an Ada Library to be Used in a Non-Ada Context - GNAT User’s Guide for Unix Platforms ] - gcc.gnu.org
[22:23:31] <kline> riv, while this is really about cargo, what we call "rust" isnt just "rust-the-grammar", but the language itself and the tools that its bound to in context
[22:24:03] <companion_cube> riv: I think there's a todo item somewhere on how to get cargo to list compilation commands
[22:24:10] <companion_cube> so they can be done in a makefile or equivalent
[22:24:11] <kline> rust is an ecosystem of tooling around the language, and thats generally an improvement on the state of things before for application development, but not systems languages
[22:24:13] <companion_cube> but not sure it's done yet
[22:24:39] <riv> Thanks!
[22:24:51] <riv> I've been really wanting to get into rust recently
[22:24:53] <kline> companion_cube, its not just "can ada be called by C", its things like "ingesting C headers and generating bindings"
[22:24:57] <kline> which rust is actually good at
[22:25:15] <companion_cube> ah yes :s
[22:25:22] <kline> but "call c" or "be called by c" are one-way relationships, plugins are two-way
[22:25:28] <kline> 1) you must be able to call against the C api
[22:25:37] <kline> 2) you must produce an artifact that the C core can call into
[22:25:50] <companion_cube> https://www.adacore.com/gems/gem-59 hmm
[22:25:50] <mockturtle> [ Gem #59: Generating Ada bindings for C headers ] - www.adacore.com
[22:26:09] <kline> this is the kind of stuff i would like to read, yes
[22:26:20] <kline> like i said, i wasnt sure of the story, but this sort of stuff is a nice read on it
[22:26:26] <companion_cube> there's marin and glacambre I think who are big on Ada
[22:26:52] <glacambre[m]> Ada stronk
[22:28:34] *** Quits: winter_ (~quassel@user/winter) (Ping timeout: 240 seconds)
[22:28:55] <glacambre[m]> kline: GNAT has an `-fdump-ada-specs` (not sure about the name) flag that will let you generate Ada specs from C code
[22:29:12] <kline> cool
[22:29:19] <kline> fwiw
[22:29:34] <kline> solanum will never ever accept extensions in ada
[22:29:37] <kline> but i like that i can
[22:30:11] <kline> autotools will probably even understand ada
[22:31:29] *** Joins: lucf117 (~lucf117@user/lucf117)
[22:31:58] <glacambre[m]> It's a shame solanum won't accept Ada extensions, a crusty old language would make perfect sense for interacting with a crusty old protocol
[22:32:51] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:34:46] <companion_cube> IRC is too unsafe for Ada, obviously
[22:34:48] <glacambre[m]> I think I'm going to stop talking about Ada, I didn't think people would remember my pseudonym and associate it with Ada evangelism
[22:35:02] <companion_cube> it's just me, sorry :p
[22:35:16] <glacambre[m]> I'm (slightly) relieved
[22:35:25] <glacambre[m]> I'm not a fan of the language tbh
[22:35:51] <glacambre[m]> I just think it has a lot of neat ideas and it's a shame that they haven't been stolen by other languages
[22:35:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[22:37:01] <companion_cube> the concurrency story seems fun
[22:39:42] *** Joins: sliced (~sliced@pc-91-201-17-116.tvk-net.pl)
[22:44:42] *** Quits: thelazyoxymoron (~thelazyox@49.207.204.124) (Ping timeout: 268 seconds)
[22:48:21] *** Joins: imode (~imode@user/imode)
[22:51:01] *** __jmcantrell__ is now known as jmcantrell
[22:51:22] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[22:58:16] *** Quits: Guest9 (~Guest9@103.250.145.129) (Ping timeout: 268 seconds)
[23:07:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:10:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:28:53] *** __jmcantrell__ is now known as jmcantrell
[23:30:59] <rhn> finally, someone sharing my opinion of cargo - that it tanks Rust as a systems language
[23:33:13] <rhn> I hope that the attempts to include Rust in the Linux kernel will prompt someone to actually do something about the problem. Kernel should be able to use third party crates without a lot of hassle some day, otherwise what are nostd crates for?
[23:34:06] <companion_cube> it already is integrated in many programs, it shouldn't be that big a deal
[23:34:16] <companion_cube> (and for linux, not sure if crates are a good idea)
[23:36:39] <rhn> why not? 3rd party code is useful... although now I realize the kernel doesn't have external C dependencies either
[23:38:40] <companion_cube> yep
[23:50:38] <mockturtle> “Permissive licensing is wrong?” – No it’s not! (2018) [law] (emilengler) https://lobste.rs/s/i4cnlx
