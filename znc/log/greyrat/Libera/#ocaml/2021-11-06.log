[00:20:56] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[00:47:29] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[00:56:27] *** Joins: ansiwen_ (~sanders@vm1.a6n.de)
[00:57:00] *** Joins: Fardale1 (~Fardale@fuyukaidesu.fardale.eu)
[00:57:07] *** Quits: ansiwen (~sanders@vm1.a6n.de) (Ping timeout: 268 seconds)
[00:57:15] *** Joins: habnabit (habnabit@python/site-packages/habnabit)
[00:57:15] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: krnkktz (~krnkktzma@2001:470:69fc:105::74c) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: st (~ts@46.101.20.9) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (Ping timeout: 268 seconds)
[00:57:18] *** Joins: ts1 (~ts@46.101.20.9)
[00:57:26] *** Joins: greenbagels_ (~gb@user/greenbagels)
[00:57:36] *** Joins: dmbaturin_ (~dmbaturin@vyos/developer/dmbaturin)
[00:57:47] *** Quits: Fardale (~Fardale@fuyukaidesu.fardale.eu) (Ping timeout: 246 seconds)
[00:57:47] *** Quits: dmbaturin (~dmbaturin@vyos/developer/dmbaturin) (Ping timeout: 246 seconds)
[00:58:23] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 264 seconds)
[00:59:01] *** Joins: leah2 (~leah@vuxu.org)
[01:00:58] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[01:04:46] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[01:05:15] <d_bot> <hhugo> Can you open an issue for this I'm currently looking at better support for jsoo in dune
[01:05:30] *** Joins: krnkktz (~krnkktzma@2001:470:69fc:105::74c)
[01:09:42] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:16:29] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[01:33:20] *** Joins: bobo (~bobo@37.171.245.119)
[01:33:43] *** Fardale1 is now known as Fardale
[01:33:45] *** Quits: spip (~bobo@37.173.102.0) (Ping timeout: 268 seconds)
[01:57:20] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (Ping timeout: 260 seconds)
[01:58:21] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[01:58:53] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[02:14:48] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Hi
[02:14:50] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Where do I ask something about menhir ?
[02:20:03] <rgrinberg> Here is as good a place as any. There's also a menhir mailing list
[02:25:10] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Hi, I'm using menhir but I have this warnings :
[02:25:11] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ```
[02:25:12] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Warning: 3 states have shift/reduce conflicts.
[02:25:14] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Warning: 18 shift/reduce conflicts were arbitrarily resolved.
[02:25:15] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ```
[02:25:16] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> But I don't know which rule are concerned with these, how can i make menhir tell me ?
[02:25:18] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> I tried with `--list-errors --log automaton 1 --log-code 1 --log-grammar 2` but it's not written
[02:27:01] <d_bot> <NULL> `--explain` gives you a more readable conflicts explanation in a file
[02:27:26] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> Thanks, I will try it tomorrow
[02:29:54] <d_bot> <oconnor0> I haven't programmed in OCaml in like 15 years, but every once in a while, I run into a problem and think, "I could really use polymorphic variants" to solve this or "Structural typing would be really useful here".
[02:59:40] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:13:37] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:f33b:fde:6c61:c559) (Quit: Konversation terminated!)
[03:24:42] *** Joins: faultline (~christian@nat-eduroam-01.scc.kit.edu)
[03:25:35] *** Quits: faultline (~christian@nat-eduroam-01.scc.kit.edu) (Remote host closed the connection)
[03:26:55] *** Joins: faultline (~christian@nat-eduroam-01.scc.kit.edu)
[03:32:22] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[03:49:41] *** Quits: olle (~olle@i5E866D99.versanet.de) (Ping timeout: 256 seconds)
[03:51:43] *** Quits: faultline (~christian@nat-eduroam-01.scc.kit.edu) (Remote host closed the connection)
[03:52:30] *** Joins: faultline (~christian@nat-eduroam-01.scc.kit.edu)
[04:03:38] <d_bot> <Et7f3> structural typing => use object, ocaml has now polymorphic variant
[04:23:01] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[05:13:16] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[05:25:45] *** Joins: oriba (~oriba@dynamic-077-011-083-121.77.11.pool.telefonica.de)
[05:44:11] *** Quits: oriba (~oriba@dynamic-077-011-083-121.77.11.pool.telefonica.de) (Ping timeout: 264 seconds)
[05:58:00] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[06:05:34] <d_bot> <ams> what are the requirements for a language to have hm type inference? like why cant languages like java or typescript have it?
[06:05:43] <d_bot> <ams> even as like a linting step
[06:08:40] <companion_cube> typescript is a lot more advanced than HM, in many ways
[06:08:55] <companion_cube> and it's a lot more complicated because it has to accomodate crazy stuff
[06:09:06] <d_bot> <ams> oh interesting, like what?
[06:09:19] <companion_cube> all the kind-of-dependent stuff?
[06:09:35] <companion_cube> keyof, singleton types, unions, flow-sensitive typing
[06:21:27] *** Joins: xd1le (~xd1le@user/xd1le)
[06:36:28] *** Quits: faultline (~christian@nat-eduroam-01.scc.kit.edu) (Remote host closed the connection)
[07:17:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[07:43:35] *** Quits: bobo (~bobo@37.171.245.119) (Ping timeout: 264 seconds)
[08:17:02] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:30:35] *** Joins: gravicappa (~gravicapp@136.169.168.100)
[08:34:52] *** Joins: bobo (~bobo@37.171.149.207)
[08:49:10] *** Quits: cbarrett (sid192934@id-192934.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:11] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (Ping timeout: 264 seconds)
[08:50:32] *** Quits: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com) (Ping timeout: 260 seconds)
[08:50:32] *** Quits: jyc (sid40911@id-40911.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[08:51:30] *** Joins: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com)
[08:51:43] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[08:51:50] *** Joins: jyc (sid40911@ilkley.irccloud.com)
[08:52:14] *** Joins: cbarrett (sid192934@2a03:5180:f:1::2:f1a6)
[08:57:20] *** Joins: recherche (~recherche@bb119-74-93-26.singnet.com.sg)
[08:58:59] <recherche> is there is a way to get ocamldebug working well with code that is preprocessed using -pp (say, cppo)? i can't seem to set breakpoints accurately with line directives, sometimes get locations hundreds of lines away instead. and not using line directives exposes temporary filenames, so breakpoints can't be set at all
[09:12:59] *** Quits: recherche (~recherche@bb119-74-93-26.singnet.com.sg) (Quit: Ping timeout (120 seconds))
[09:46:07] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:59:33] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[10:05:58] *** Quits: gravicappa (~gravicapp@136.169.168.100) (Ping timeout: 260 seconds)
[11:14:40] *** Joins: recherche (~recherche@bb119-74-93-26.singnet.com.sg)
[11:17:48] <hornhack> hi, is ocaml code easier to read than common imperative code? like tail recursion vs common loop?
[11:35:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:38:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:45] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:47:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:57:33] *** Joins: bartholin (~bartholin@109.53.6.15)
[12:00:22] *** Quits: recherche (~recherche@bb119-74-93-26.singnet.com.sg) (Quit: Client closed)
[12:02:04] *** Joins: average (uid473595@user/average)
[12:09:02] *** greenbagels_ is now known as greenbagels
[12:13:17] *** Joins: wonko (~wjc@user/wonko)
[12:28:48] *** Joins: olle (~olle@i5E866D9D.versanet.de)
[13:03:52] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[13:12:45] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> I understand there is some problem with parsing applications rules (x y z is ambiguous), but how can I solve this ?
[13:12:45] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ```ocaml
[13:12:47] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token<string> VAR
[13:12:48] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token LAMBDA
[13:12:49] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token DOT
[13:12:51] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token LPAR
[13:12:52] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token RPAR
[13:12:53] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %token EOF
[13:12:54] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:12:56] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %start<expr> main
[13:12:57] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:12:58] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %%
[13:13:00] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:13:01] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> expr:
[13:13:02] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>   | v = VAR { Var v }
[13:13:04] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>   | LAMBDA ; x = VAR ; DOT ; y = expr { Abstraction (x, y) }
[13:13:05] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>   | x = expr; y = expr { Apply (x, y) }
[13:13:06] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>   | LPAR ; e = expr ; RPAR { e }
[13:13:08] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:13:09] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> main:
[13:13:10] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>   e = expr; EOF { e }
[13:13:11] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:13:13] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> %%
[13:13:14] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ```
[13:13:15] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ```
[13:13:17] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:13:18] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ** Conflict (shift/reduce) in state 7.
[13:13:19] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ** Tokens involved: VAR LPAR LAMBDA
[13:13:21] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ** The following explanations concentrate on token VAR.
[13:13:22] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> ** This state is reached from main after reading:
[13:13:23] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞>
[13:19:17] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[13:21:49] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[13:24:54] *** Joins: Guest8 (~Guest8@atoulouse-652-1-155-33.w90-11.abo.wanadoo.fr)
[13:25:06] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 245 seconds)
[13:33:18] <d_bot> <Et7f3> And you spammed IRC users
[13:33:21] *** Joins: spip (~bobo@37.171.254.33)
[13:33:38] *** Quits: bobo (~bobo@37.171.149.207) (Ping timeout: 260 seconds)
[13:33:50] <d_bot> <darrenldl> can irc bridge be configured to drop code blocks?
[13:34:09] <d_bot> <darrenldl> vaguely recall another server did something like that
[13:39:20] <d_bot> <Et7f3> Your parser generator might have %right/%left to force to shift or reduce and solve this conflict
[13:39:39] <d_bot> <Et7f3> (we can't delete message on IRC 😦 )
[13:40:40] <d_bot> <۞๑,¸,ø¤º`°๑۩ ןєคภ ๑۩ ,¸,ø¤º`°๑۞> oh, sorry 😔
[13:43:01] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[13:50:55] *** Quits: bartholin (~bartholin@109.53.6.15) (Ping timeout: 256 seconds)
[14:03:12] *** Joins: bartholin (~bartholin@109.53.4.122)
[14:03:24] *** Quits: bronsen (~bronsen@2a04:d480:0:1::3) (Quit: WeeChat 3.3)
[14:03:38] *** Joins: bronsen (~bronsen@2a04:d480:0:1::3)
[14:10:54] *** Joins: jlrnick (~josephler@2a01cb040a1594007c89c79693ecade1.ipv6.abo.wanadoo.fr)
[14:12:14] *** Quits: Guest8 (~Guest8@atoulouse-652-1-155-33.w90-11.abo.wanadoo.fr) (Quit: Client closed)
[14:26:06] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[14:27:36] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[14:30:45] *** Quits: jlrnick (~josephler@2a01cb040a1594007c89c79693ecade1.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[14:52:48] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[15:07:31] *** Joins: gravicappa (~gravicapp@145.255.0.200)
[15:10:00] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[15:30:59] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[15:42:25] *** Joins: mro_ (~mro@port-92-195-159-225.dynamic.as20676.net)
[15:44:15] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Ping timeout: 256 seconds)
[15:51:03] *** Quits: bartholin (~bartholin@109.53.4.122) (Ping timeout: 256 seconds)
[16:02:40] *** Joins: bartholin (~bartholin@109.53.7.160)
[16:02:49] *** Quits: mro_ (~mro@port-92-195-159-225.dynamic.as20676.net) (Read error: Connection reset by peer)
[16:03:03] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[16:06:41] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[16:11:48] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[16:12:40] *** Joins: oriba (~oriba@x4dbf7373.dyn.telefonica.de)
[16:14:34] *** Joins: favonia (~favonia@user/favonia)
[16:17:56] *** Quits: oriba (~oriba@x4dbf7373.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:18:21] *** Joins: oriba (~oriba@x4dbf7373.dyn.telefonica.de)
[16:27:43] <dmbaturin_> hornhack: You can write imperative code in OCaml. :)
[16:28:38] <hornhack> yeah, I just think they are not in the spirit of functional programming
[16:29:00] <dmbaturin_> Anyway, by now I find pure code easier to follow, generally. But there are many ways to make pure code hard to read, like breaking it into functions too small for their own good that obscure the data flow, or by excessive use of point-free style (the latter is harder in OCaml, for better or worse).
[16:29:11] *** dmbaturin_ is now known as dmbaturin
[16:30:16] <hornhack> ehh point-free style?
[16:30:26] <d_bot> <idkjs> hey folks. Doing this old ocaml course on udemy. the following is expected to print with comments but does not. Its probably been updated. How do you get print with comments in utop. This doesnt seem to work ```ocaml
[16:30:27] <d_bot> <idkjs> utop # print_string "Hello";; (* print string *)
[16:30:28] <d_bot> <idkjs> ```
[16:31:37] <dmbaturin> hornhack: Well, it's possible to a degree. The value restriction and strict evaluation make it hard to go overboard with it.
[16:31:54] <dmbaturin> idjks: Wait, what output do you _expect_ from that line?
[16:32:47] <hornhack> ah yeah, I see,
[16:33:13] <d_bot> <idkjs> I guess I expectdd a comment. Now that you ask i see the example is
[16:33:14] <d_bot> <idkjs> https://cdn.discordapp.com/attachments/436568060288172044/906529157083725905/Screenshot_2021-11-06_at_14.02.24.png
[16:33:49] <d_bot> <idkjs> I was thinking the comment would print. What is the point of the comment if it doesnt show?
[16:34:01] <dmbaturin> Well, it's just for the reader I guess.
[16:34:37] <d_bot> <idkjs> But I havent saved it anywhere. its just in utop so no one will ever see it i guess. Just for me?
[16:34:44] <dmbaturin> Like those cheesy martial arts movies where people call all their attacks. ;)
[16:35:54] <dmbaturin> I think the author of that example thought it will help students follow the utop session transcript.
[16:41:27] <d_bot> <idkjs> So this ```ocaml
[16:41:28] <d_bot> <idkjs> utop # let x = 10;;
[16:41:30] <d_bot> <idkjs> if x > 5 then print_string "greater than 5"
[16:41:31] <d_bot> <idkjs> else print_string "less than 5" (*conditional statement*);;
[16:41:32] <d_bot> <idkjs>
[16:41:33] <d_bot> <idkjs> ``` outputs ```ocaml
[16:41:35] <d_bot> <idkjs> val x : int = 10
[16:41:36] <d_bot> <idkjs> ``` when expected ```ocaml
[16:41:37] <d_bot> <idkjs> val x : int = 10
[16:41:39] <d_bot> <idkjs> # greater than 5- : unit = ()
[16:41:40] <d_bot> <idkjs> ``` what am i missing? Some config maybe?
[16:41:43] <dmbaturin> hornhack: The curious part is that pure code is a relatively recent fashion. A lot of old ML code looks like Pascal with first-class functions.
[16:42:16] <hornhack> dmbaturin, wow, really, I didnt know that
[16:42:45] <hornhack> I thought OCaml was born for functional programming
[16:44:30] <dmbaturin> idjks: That utop behaviour with two statements on the same input line is interesting... This will work as expected `let x = 10 in if x > 5 then print_string "greater than 5" else print_string "less than 5";;`. Writing `let x = 10;;` and then enxtering `print ...` as a separate command also works.
[16:44:47] <dmbaturin> Let me check something...
[16:46:14] <d_bot> <idkjs> That worked but not the same code as you seem to have noted ```ocaml
[16:46:14] <d_bot> <idkjs> greater than 5- : unit = ()
[16:46:16] <d_bot> <idkjs> ```
[16:46:30] <dmbaturin> Looks like utop ignores the part after ;; on the same line. Time for a bug report. :)
[16:47:49] <d_bot> <idkjs> Doesnt work with a comment either ```ocaml
[16:47:49] <d_bot> <idkjs> utop # let x = 10 in if x > 5 then print_string "greater than 5" else print_string "less than 5" (*conditional statement*);;
[16:47:50] <d_bot> <idkjs> greater than 5- : unit = ()
[16:47:52] <d_bot> <idkjs> ```
[16:49:05] <dmbaturin> hornhack: Well, in the 80's, the idea of first-class functions in a practical language was itself still sounded like radically functional programming I guess.
[16:49:36] <hornhack> woo, yeahh
[16:50:52] <dmbaturin> You may be interested in the "ZINC report". The group that made CAML Light (the direct predecessor of OCaml) came up with an efficient implementation of closures in the early 90's that allowed functional programming idioms to be fast.
[16:52:02] <hornhack> wow nice
[16:52:19] <hornhack> eh, let me check what is closure
[16:54:39] <dmbaturin> I'm not quite sure when the first non-toy programs in aggressively functional style appeared.
[16:55:41] <dmbaturin> A closure is a function stored together with its environment. That's how currying works, e.g. `let add1 x = (+) x 1`, here the `(+)` function will be stored with `x = 1` in its environment.
[16:56:37] <d_bot> <idkjs> should i do that? Or are you going to do that?
[16:57:01] <dmbaturin> I suppose their implementation of closures was the reason OCaml had everything curried by default. In StandardML, most stdlib functions take tuples instead, so it's `(+): int * int -> int` rather than OCaml's `(+) : int -> int -> int`.
[16:58:41] <hornhack> ah I see
[16:59:08] <hornhack> so functional works because they made closure fast
[16:59:31] <dmbaturin> idjks: I'll do that since I have a reproducing step handy now.
[16:59:34] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[17:00:00] <d_bot> <darrenldl> interesting development of fp : O
[17:00:21] <dmbaturin> idkjs: Do you have a link to that course? Could you take a screenshot of the example, are they actually using those statements on the same line? I wonder if it did work when the course was made.
[17:01:49] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[17:10:47] <dmbaturin> hornhack: https://github.com/SKS-Keyserver/sks-keyserver The SKS key server is one of the oldest OCaml programs in use. That code is mostly functional, but still more imperative than if it was written today. I'll try to remember of the more unashamerly imperative examples.
[17:11:19] <dmbaturin> * remember more unashamedly imperative
[17:11:58] <dmbaturin> Looks like I'm dyslexic today. ;)
[17:12:00] <octachron> The OCaml compiler is fairly imperative itself
[17:12:16] <hornhack> hehe interesting
[17:12:27] <hornhack> wow thats hypocritical, the compiler is imperative
[17:13:12] <octachron> Type inference is done using union-find, and generalization is implented as a form of GC on type variables.
[17:14:12] <octachron> Hypocritical??? Not at all. The compiler is never using OCaml feature not available to non-compiler program.
[17:15:40] <octachron> Using imperative features internally when it make sense for performance reason is a pretty common way to organize OCaml library/program.
[17:15:54] <dmbaturin> I think it's an advantage of the language that you can write it to make it look like either Pascal or Haskell and still end up with a reasonably fast program. ;)
[17:17:04] <d_bot> <Drup> The imperative features are there to be used. If not, they wouldn't be there. So the compiler (and many users) indeed do use them 🙂
[17:17:44] <Corbin> hornhack: Is it hypocritical to use a CPU wired up to mutable memory to implement immutable programs? Is it hypocritical for the values in the CPU registers to each be immutable?
[17:17:53] <dmbaturin> When I have time, I swear I'll make PoC stdlib that uses objects to make it look like Python.
[17:18:17] <dmbaturin> Hopefully this summer when (or if...) I graduate.
[17:18:49] <d_bot> <Drup> dmbaturin: people have done that previously! I don't remember the name though
[17:18:57] <d_bot> <Drup> it wasn't nice
[17:19:08] <dmbaturin> Wow, interesting. Let me know if you remember the name.
[17:19:20] <d_bot> <Drup> But A+ troll :p
[17:21:00] <d_bot> <Drup> mmh, @companion_cube Does that ring a bell ? of course there are pieces of batteries that are a bit weird like that (IO, notably), but not the whole thing
[17:22:30] <dmbaturin> Drup: Did it use a set of "magic methods" with standard types as an object communication protocol?
[17:23:31] <d_bot> <Drup> I don't remember the details, but it really looked liked python objects
[17:26:38] *** Quits: favonia (~favonia@user/favonia) (Remote host closed the connection)
[17:27:36] *** Joins: favonia (~favonia@user/favonia)
[17:28:50] *** Joins: jlrnick (~josephler@2a01cb040a159400e928261421e00c3c.ipv6.abo.wanadoo.fr)
[17:35:10] <companion_cube> Drup: rings a bell but was a long time ago
[17:35:35] <companion_cube> Sadly ocaml doesn't have great control flow primitives for imperative
[17:37:10] <dmbaturin> companion_cube: I'm pretty sure some would say s/sadly/thankfully/ :)
[17:37:22] <companion_cube> My own ocaml tends to be very imperative at places, so, no, sad :/
[17:50:47] *** Quits: bartholin (~bartholin@109.53.7.160) (Ping timeout: 264 seconds)
[18:02:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:03:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:03:18] *** Joins: bartholin (~bartholin@109.53.2.119)
[18:13:23] *** Joins: mro (~mro@2002:5cc3:9fe1:0:edbe:478e:e5c0:d7e8)
[18:15:13] *** Quits: oriba (~oriba@x4dbf7373.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:23:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:24:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:36:39] *** Quits: mro (~mro@2002:5cc3:9fe1:0:edbe:478e:e5c0:d7e8) (Remote host closed the connection)
[18:40:14] *** Quits: gravicappa (~gravicapp@145.255.0.200) (Ping timeout: 260 seconds)
[19:03:49] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:21:04] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[19:22:59] <d_bot> <rgrinberg> Unfortunately not.
[19:37:53] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[19:39:42] *** Quits: jlrnick (~josephler@2a01cb040a159400e928261421e00c3c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[19:42:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[19:42:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:43:47] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[19:47:09] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[19:50:47] *** Quits: bartholin (~bartholin@109.53.2.119) (Ping timeout: 264 seconds)
[20:19:52] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:19] *** Joins: gravicappa (~gravicapp@145.255.0.200)
[20:52:08] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:56:09] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[21:04:58] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:57] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:36:21] *** Quits: gravicappa (~gravicapp@145.255.0.200) (Ping timeout: 245 seconds)
[21:40:33] <d_bot> <Et7f3> Why I get this: ```
[21:40:33] <d_bot> <Et7f3> Makefile:415: .dep/skiplist.npic.d: No such file or directory
[21:40:35] <d_bot> <Et7f3> Makefile:415: .dep/codefrag.npic.d: No such file or directory``` when compiling master branch ?
[22:10:33] *** Joins: bartholin (~bartholin@109.53.7.206)
[22:18:05] *** Quits: olle (~olle@i5E866D9D.versanet.de) (Ping timeout: 256 seconds)
[22:25:30] *** Joins: mro (~mro@port-92-195-159-225.dynamic.as20676.net)
[22:30:36] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:35:53] *** Joins: rgrinberg (~textual@200.5.63.76)
[23:19:30] *** Joins: olle (~olle@i5E866D9D.versanet.de)
[23:33:20] *** Quits: mro (~mro@port-92-195-159-225.dynamic.as20676.net) (Remote host closed the connection)
[23:33:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:34:48] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:42:23] *** Quits: bartholin (~bartholin@109.53.7.206) (Ping timeout: 264 seconds)
[23:54:16] *** Joins: bartholin (~bartholin@109.53.3.93)
