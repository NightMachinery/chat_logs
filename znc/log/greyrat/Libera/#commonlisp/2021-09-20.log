[00:01:54] *** Quits: tfeb (~tfb@88.98.95.237) (Remote host closed the connection)
[00:02:18] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[00:02:46] *** Joins: srhm (~srhm@user/srhm)
[00:03:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[00:06:35] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[00:10:21] *** Joins: CptKirk (~CptKirk@97-118-72-33.hlrn.qwest.net)
[00:29:39] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:30:21] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:35:24] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[00:37:46] *** Quits: cosimone (~user@93-47-230-131.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[00:54:45] <pjb> pve: (the double-float x) (or (declare (type double-float x))) is actually more like:     { int x;    *(double*)&x=3.14d0; }
[00:55:00] <pjb> pve: I would definitely not do that!
[00:55:37] <pjb> pve: (coerce x 'double-float) is more like    {int x=314; (double)x; }   this can be acceptable.
[00:56:23] <pjb> aeth: (the double-float x) has nothing in common with (check-type x double-float).
[01:00:47] <lotuseater> pjb: one of those dirty c tricks :)
[01:11:14] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:12:21] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:15:45] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[01:22:02] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[01:32:43] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:4dee:bd1e:b1f:14f0)
[01:33:08] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:36:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[01:36:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:38:03] *** Joins: akoana (~ah@user/akoana)
[01:46:25] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[01:48:10] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[02:01:27] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[02:03:21] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:03:33] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Client Quit)
[02:13:39] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.2)
[02:15:20] *** Joins: cjb (~cjbayliss@user/cjb)
[02:17:10] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:18:11] *** Joins: anddam (~anddam@user/anddam)
[02:43:40] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:44:19] *** Quits: attila_lendvai (~alendvai@C2267416.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[02:46:23] *** Joins: attila_lendvai (~alendvai@c2267416.nat.pool.telekom.hu)
[02:47:16] *** Joins: selwyn (~selwyn@user/selwyn)
[02:48:19] *** Quits: attila_lendvai (~alendvai@c2267416.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[02:48:41] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:48:56] *** Joins: attila_lendvai (~alendvai@C2267416.nat.pool.telekom.hu)
[02:49:09] *** Joins: srhm (~srhm@user/srhm)
[02:53:32] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[02:53:55] *** Joins: selwyn (~selwyn@user/selwyn)
[02:58:40] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:4dee:bd1e:b1f:14f0) (Remote host closed the connection)
[03:03:58] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:14:58] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[03:15:23] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[03:28:04] *** Quits: frgo (~frgo@p200300deef0cee00f56ca7e43d8d7fca.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:28:32] *** Joins: frgo (~frgo@p200300deef0cee00f56ca7e43d8d7fca.dip0.t-ipconnect.de)
[03:29:08] *** Quits: Jach (~Jach@c-73-193-76-63.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:29:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:38:58] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Disconnected: Replaced by new connection)
[03:40:31] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[03:43:10] *** Quits: pve (~pve@37-33-19-105.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[03:46:40] *** Quits: rgherdt (~rgherdt@ip5f5af456.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:46:52] *** Joins: rgherdt (~rgherdt@ip5f5af456.dynamic.kabel-deutschland.de)
[03:51:50] *** Joins: asarch (~asarch@2806:10ae:7:34f1:7390:deaf:1a8f:32c4)
[03:53:49] *** Quits: rgherdt (~rgherdt@ip5f5af456.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[04:17:34] *** Joins: Oladon (~olad@98.43.81.226)
[04:21:02] *** Quits: asarch (~asarch@2806:10ae:7:34f1:7390:deaf:1a8f:32c4) (Quit: Leaving)
[04:25:32] *** Quits: CptKirk (~CptKirk@97-118-72-33.hlrn.qwest.net) (Ping timeout: 256 seconds)
[04:57:51] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:59:47] *** Quits: random-nick (~random-ni@87.116.180.139) (Ping timeout: 265 seconds)
[05:02:55] *** Joins: dstein64 (~dstein64@dannyadam.com)
[05:04:51] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:07:19] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Remote host closed the connection)
[05:07:34] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[05:09:33] *** Quits: dre (~dre@2001:8003:c932:c301:ecf5:7fa2:569b:3a9) (Quit: Leaving)
[05:24:40] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:29:33] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:43:49] *** Joins: ad-absurdum (~ad-absurd@2600:100a:b00a:1416:2baf:d671:cf03:74f7)
[06:02:05] *** Quits: gaqwas (~john@dynamic-077-009-038-109.77.9.pool.telefonica.de) (Ping timeout: 268 seconds)
[06:21:18] *** Joins: asarch (~asarch@2806:10ae:7:34f1:7390:deaf:1a8f:32c4)
[06:35:59] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[06:40:59] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[06:43:05] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:50:03] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[06:53:22] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[06:56:10] *** Quits: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:02:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:06:59] <aeth> pjb: Not really. Only SBCL with (safety 0) will possibly behave like you're talking about in practice. If you do want that sort of { int x;    *(double*)&x=3.14d0; } behavior you can get it, via abusing the CFFI
[07:07:09] <aeth> https://gitlab.com/-/snippets/1830092
[07:07:24] <aeth> no reason to because it'll be slow with the CFFI conversion
[07:07:29] <aeth> but that's how to do it
[07:11:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:17:19] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[07:23:29] <lotuseater> aeth: funny that you mention exactly this algorithm ^^
[07:23:29] <aeth> This kind of shows how pointless THE is, though
[07:24:36] <aeth> (pointless in that THE could behave many different ways, so there's always a better way to get the desired behavior in a more precise, specified way)
[07:29:19] <lotuseater> one told me that even more the good data structures were responsible that Quake 3 ran performant on small machines :)
[07:32:25] <beach> Good morning everyone!
[07:32:56] <Qwnavery> morning beach!
[07:33:02] <Qwnavery> hiyo lotuseater!
[07:33:03] <beach> If THE is pointless, then so are type declarations.
[07:33:24] <lotuseater> good morning beach and hi Qwnavery
[07:36:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:55:05] <_death> in this case you can just use float-features:single-float-bits/bits-single-float
[07:56:43] *** Quits: nature (~nature@mail.blazebone.com) (Ping timeout: 252 seconds)
[08:02:43] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:03:00] *** Quits: lisp123 (~lisp123@5.30.23.247) (Client Quit)
[08:11:29] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[08:12:49] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:15:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:21:21] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:25:23] *** Joins: semz (~none@user/semz)
[08:31:22] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Ping timeout: 260 seconds)
[08:51:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[08:55:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:58:10] *** Parts: akoana (~ah@user/akoana) ()
[08:59:58] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[08:59:58] *** Quits: markasoftware_ (~quassel@107.161.26.124) (*.net *.split)
[08:59:58] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[08:59:58] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (*.net *.split)
[08:59:58] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (*.net *.split)
[09:00:05] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[09:00:26] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[09:00:30] *** Joins: markasoftware (~quassel@107.161.26.124)
[09:00:34] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[09:01:08] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[09:09:50] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[09:11:38] *** Quits: gko (~user@user/gko) (*.net *.split)
[09:11:38] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: phoe (~phoe@user/phoe) (*.net *.split)
[09:11:38] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: ullbeking (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[09:11:39] *** Quits: jhi (sid81469@id-81469.lymington.irccloud.com) (*.net *.split)
[09:11:39] *** Quits: IlluminatedPileo (~heretical@2001:470:69fc:105::8054) (*.net *.split)
[09:11:39] *** Quits: hayley (~theemacss@user/hayley) (*.net *.split)
[09:11:39] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:11:39] *** Quits: ecraven (ecraven@user/nex) (*.net *.split)
[09:11:39] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (*.net *.split)
[09:11:39] *** Quits: thonkpod (~thonkpod@user/thonkpod) (*.net *.split)
[09:11:39] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:11:39] *** Quits: gin (~gin@user/gin) (*.net *.split)
[09:11:39] *** Quits: dale (dale@user/dale) (*.net *.split)
[09:11:49] *** Joins: susam (~susam@user/susam)
[09:11:50] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[09:11:52] *** Joins: phoe (~phoe@user/phoe)
[09:11:53] *** Joins: dale (dale@user/dale)
[09:11:57] *** Joins: gko (~user@user/gko)
[09:12:15] *** Joins: thonkpod (~thonkpod@2001:19f0:ac01:b46:5400:1ff:fec7:d73d)
[09:12:15] *** Joins: Shinmera (~shinmera@supersolid.equilibrium.tymoon.eu)
[09:12:19] *** Joins: gin (~gin@2400:8904::f03c:92ff:fe28:e8a7)
[09:12:20] *** Quits: gin (~gin@2400:8904::f03c:92ff:fe28:e8a7) (Changing host)
[09:12:20] *** Joins: gin (~gin@user/gin)
[09:12:20] *** Joins: ecraven (~ecraven@user/nex)
[09:12:21] *** Quits: thonkpod (~thonkpod@2001:19f0:ac01:b46:5400:1ff:fec7:d73d) (Changing host)
[09:12:21] *** Joins: thonkpod (~thonkpod@user/thonkpod)
[09:12:24] *** Joins: pl (sid98063@2a03:5180:f:1::1:7f0f)
[09:12:26] *** Joins: jhi (sid81469@2a03:5180:f:2::1:3e3d)
[09:12:30] *** ChanServ sets mode: +o pl
[09:12:55] *** Joins: ullbeking (sid5364@2a03:5180:f:3::14f4)
[09:13:38] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:16:01] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:18:53] *** Joins: hayley (~theemacss@2001:470:69fc:105::234)
[09:19:20] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:21:07] *** Joins: IlluminatedPileo (~heretical@2001:470:69fc:105::8054)
[09:24:11] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[09:28:32] *** Joins: ChanServ (ChanServ@services.libera.chat)
[09:28:32] *** molybdenum.libera.chat sets mode: +o ChanServ
[09:28:32] *** ChanServ sets mode: +o beach
[09:29:01] *** beach sets mode: -o beach
[09:29:32] *** Quits: hayley (~theemacss@2001:470:69fc:105::234) (Changing host)
[09:29:32] *** Joins: hayley (~theemacss@user/hayley)
[09:40:10] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (Ping timeout: 240 seconds)
[09:54:06] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:55:11] *** Quits: cjb (~cjbayliss@user/cjb) ()
[09:56:05] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:57:10] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:58:40] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[10:12:18] *** Joins: montxero (~user@149.167.149.74)
[10:12:28] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[10:15:07] <montxero> I'm having some trouble fetching data with dexador.  Specifically, the JSON returned from (dex:get "https://api.alternative.me/v2/listings/") is missing the final closing "}"
[10:15:51] <montxero> I may be using the library incorrectly.  Any ideas?
[10:17:33] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[10:23:40] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[10:25:06] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:29:22] *** Joins: spiaggia (~user@2a01:cb19:150:3400:2407:94e1:d68c:1cd1)
[10:30:01] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[10:33:31] *** Quits: Shinmera (~shinmera@supersolid.equilibrium.tymoon.eu) (Quit: WeeChat 2.8)
[10:33:48] *** Joins: Shinmera (~shinmera@shirakumo/shinmera)
[10:36:48] <montxero> Perhaps I'm missing something.  I get the same issue with drakma using the following snippet
[10:36:48] <montxero> (flexi-streams:octets-to-string (drakma:http-request "https://api.alternative.me/v2/listings/"))
[10:37:48] *** Joins: Nilby (~Nilby@c-67-160-81-88.hsd1.wa.comcast.net)
[10:38:10] <montxero> I don't have the same problem with the Python request library. Also the raw json from the link seems to be correct.
[10:39:10] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[10:40:16] *** Joins: amb007 (~a_bakic@170.39.22.93.rev.sfr.net)
[10:45:10] <flip214> montxero: the URL works for me, FF can parse the JSON.
[10:45:26] <raeda> wget isn't getting the closing bracket either. I'm guessing the server has a content length issue and Python is silently fixing it?
[10:45:44] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Read error: Connection reset by peer)
[10:45:54] *** Joins: ggoes_ (~gregf@pool-72-69-95-105.nycmny.fios.verizon.net)
[10:46:54] <flip214> montxero: but you're right, with drakma/flexi-streams the } is missing
[10:47:47] *** Joins: shka (~herr@109.231.62.239)
[10:47:51] <flip214> ah....   curl: (92) HTTP/2 stream 0 was not closed cleanly: PROTOCOL_ERROR (err 1)
[10:48:34] <flip214> so there are some upstream issues
[10:48:36] <raeda> curl --http1.0 closes cleanly, but without the final bracket
[10:54:16] *** Joins: asarch_ (~asarch@2806:10ae:7:af15:92ab:1cb7:d823:c634)
[10:55:00] *** Quits: asarch (~asarch@2806:10ae:7:34f1:7390:deaf:1a8f:32c4) (Ping timeout: 260 seconds)
[11:07:53] *** asarch_ is now known as asarch
[11:11:07] *** Joins: pve (~pve@178-55-35-188.bb.dnainternet.fi)
[11:14:48] *** Joins: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6)
[11:15:43] *** Joins: gaqwas (~john@dynamic-077-009-034-052.77.9.pool.telefonica.de)
[11:17:29] *** Quits: asarch (~asarch@2806:10ae:7:af15:92ab:1cb7:d823:c634) (Ping timeout: 264 seconds)
[11:20:07] <montxero> flip214: upstream with darkma, dex or the server?
[11:21:30] <montxero> raeda: That'd be interesting.  Chromium and firefox seem to read it just fine as well. Perhaps they are compensating for malformed JSON as well?
[11:22:46] *** Quits: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6) (Read error: Connection reset by peer)
[11:23:10] *** Quits: amb007 (~a_bakic@170.39.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[11:23:37] <montxero> For now, I shall band-aid the request to add the missing "}".
[11:23:38] *** Joins: amb007 (~a_bakic@217.36.22.93.rev.sfr.net)
[11:27:33] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:30:32] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[11:31:59] *** Joins: rgherdt (~rgherdt@95.90.244.86)
[11:35:00] <flip214> montxero: server
[11:36:08] *** Parts: spiaggia (~user@2a01:cb19:150:3400:2407:94e1:d68c:1cd1) (ERC Version 5.3 (IRC client for Emacs))
[11:42:06] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[11:42:06] *** Quits: amb007 (~a_bakic@217.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:42:10] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[11:42:34] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:45:17] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[11:46:06] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:51:13] *** Joins: selwyn (~selwyn@user/selwyn)
[11:51:29] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[11:51:53] *** Joins: selwyn (~selwyn@user/selwyn)
[11:52:47] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[11:56:33] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[12:01:09] *** Joins: cosimone (~user@151.14.38.15)
[12:03:09] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Quit: WeeChat 2.8)
[12:03:42] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[12:05:04] *** skn2 is now known as skn
[12:05:50] *** Joins: asarch (~asarch@2806:10ae:7:b23d:58c7:e39d:8f70:93ac)
[12:06:04] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Client Quit)
[12:10:04] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Read error: No route to host)
[12:29:20] *** Quits: gaqwas (~john@dynamic-077-009-034-052.77.9.pool.telefonica.de) (Ping timeout: 246 seconds)
[12:35:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:49:36] *** Quits: ad-absurdum (~ad-absurd@2600:100a:b00a:1416:2baf:d671:cf03:74f7) (Quit: Leaving)
[12:51:54] <shka> hi
[12:54:22] <beach> Hello shka.
[13:06:53] *** Quits: lotuseater (~user@p200300e7870566004b01295534bb48e2.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[13:14:36] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:17:03] <lukego> Hey what library do I want for writing binary values to a stream using more-or-less C datatypes e.g. little-endian 32-bit signed integer, etc?
[13:17:30] <saturn2> nibbles
[13:17:52] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[13:19:50] <lukego> thanks!
[13:28:10] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[13:28:22] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[13:59:53] <lukego> does the GC move function objects on any Linux platforms or are they always pinned?
[14:00:02] <lukego> (sorry, for #sbcl)
[14:00:08] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:09:31] *** Joins: sarab (~sarab@183.87.60.236)
[14:15:54] *** Quits: sarab (~sarab@183.87.60.236) (Quit: Leaving)
[14:17:54] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[14:29:43] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:64da:eb8a:ab76:7f8a)
[14:35:59] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Quit: WeeChat 2.7)
[14:38:25] *** Joins: lottaquestions (~nick@2607:fa49:503f:6400:8e8e:abad:4b46:881e)
[14:41:46] *** Joins: random-nick (~random-ni@87.116.183.65)
[14:46:53] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 246 seconds)
[14:47:28] *** Joins: amb007 (~a_bakic@217.36.22.93.rev.sfr.net)
[15:00:27] *** Joins: Everything (~Everythin@37.115.210.35)
[15:02:21] *** Quits: amb007 (~a_bakic@217.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:02:48] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:02:56] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:03:05] *** Joins: amb007 (~a_bakic@217.36.22.93.rev.sfr.net)
[15:03:05] *** Quits: amb007 (~a_bakic@217.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:06:18] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:28:04] *** Quits: frgo (~frgo@p200300deef0cee00f56ca7e43d8d7fca.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:28:32] *** Joins: frgo (~frgo@p200300deef0cee0040b7498668af8379.dip0.t-ipconnect.de)
[15:33:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:36:56] *** Quits: lottaquestions (~nick@2607:fa49:503f:6400:8e8e:abad:4b46:881e) (Ping timeout: 246 seconds)
[15:50:54] *** Joins: bitspook[m] (~bitspookm@2001:470:69fc:105::fcd4)
[16:47:50] *** Quits: cosimone (~user@151.14.38.15) (Remote host closed the connection)
[16:56:18] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[17:09:03] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[17:13:58] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:64da:eb8a:ab76:7f8a) (Remote host closed the connection)
[17:14:30] *** ec_ is now known as ec
[17:18:05] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 246 seconds)
[17:18:20] *** Joins: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b)
[17:36:47] *** Joins: nature (~nature@mail.blazebone.com)
[17:53:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[17:59:29] *** Joins: Bike (~Glossina@71.69.170.70)
[17:59:29] *** ChanServ sets mode: +o Bike
[18:13:01] *** Joins: jealousmonk (~user@2804:431:e7c4:4247:75cd:c27b:296a:fb0f)
[18:14:48] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[18:16:48] *** Quits: X-Scale (~ARM@46.50.5.115) (Ping timeout: 265 seconds)
[18:16:48] *** X-Scale` is now known as X-Scale
[18:20:29] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 264 seconds)
[18:23:53] *** Joins: selwyn (~selwyn@user/selwyn)
[18:25:01] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2.1)
[18:42:32] <shka> is there a way in slime to do eval-in-repl but without raising the REPL window?
[18:42:42] <shka> or shall i say, buffer
[18:43:08] *** Quits: taiju (~taiju@240b:253:ec40:2400:a8af:540:19a2:818b) (Ping timeout: 246 seconds)
[18:44:13] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[18:45:18] <shka> slime-eval-last-expression-in-repl <-
[18:48:05] <bitspook[m]> How about `slime-eval-last-expression` shka ?
[18:48:54] <shka> hmmm, thing is, i want the result to be bound to * and slime-eval-last-expression does not handle this
[18:49:35] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:52:43] <bitspook[m]> TIL about `*`. Thanks
[18:52:43] <bitspook[m]> If it is taking too much of your time, how about creating a function which call `slime-eval-last-expression` and kill the repl frame.
[18:54:08] <shka> well, that's what i am doing, but i was wondering if there is a better way
[18:54:14] <Bike> dumb option: eval (setf * form) instead of form
[18:54:38] <shka> Bike: well, this would work...
[18:54:39] <_death> or the usual, (defvar *foo* form)
[19:01:57] <shka> i went with Bike's solution
[19:02:12] <shka> for what i use it for, it is ok
[19:02:13] *** Joins: cuz (~user@38.140.58.234)
[19:08:02] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 265 seconds)
[19:08:44] *** Joins: amb007 (~a_bakic@249.36.22.93.rev.sfr.net)
[19:12:26] *** Quits: nick3000 (~user@2001:558:6040:1b:80cd:f8bf:5142:2cb0) (Ping timeout: 268 seconds)
[19:12:45] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:13:07] * shka has bought himself duckypad, and now he finally has the dedicated clouseau:inspect button
[19:24:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:25:05] <beach> How do you supply the object to inspect?
[19:27:28] <shka> beach: the crude way, (slime-interactive-eval (format "(clouseau:inspect %s)" (slime-last-expression)))
[19:27:53] <shka> but hey! it works!
[19:28:06] <beach> Sure.
[19:29:23] <shka> and is obviously useful, because clouseau is just so nice
[19:29:35] <beach> I totally agree.
[19:29:44] <beach> I never use the SLIME inspector anymore.
[19:30:22] <shka> heh, i might!
[19:30:36] <shka> because of tramp and remote slime sessions
[19:31:10] <shka> but otherwise, gotta need the dedicate clouseau button, it deserves it
[19:31:32] <beach> I see.  Well, we work on very different kinds of code, so it is normal that there is a difference.
[19:32:30] <shka> yeah, for development on a local machine, i don'tsee why i would use slime-inspector
[19:32:44] <beach> When something goes wrong in my SICL bootstrapping procedure, I get a CLIM-based backtrace inspector where I can click on SICL "stack frames", and then I get a display of the arguments to the stack frame.  I can then click on an argument and start Clouseau on it.
[19:32:47] <shka> but emacs tramp + slime is pretty nice combo
[19:33:35] <lisp123> Beach: Are you using Emacs or Climacs for your daily coding?
[19:33:59] <beach> Emacs.  (first) Climacs is not good enough, and Second Climacs is not ready.
[19:34:44] <Inline> welp, i try to use it at times when it's not buggy
[19:34:57] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[19:35:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:36:00] <Inline> but somehow clim developers don't care about it anymore it seems
[19:36:12] <Inline> so it's lagging behind
[19:36:22] <shka> given how CLIM is designed, i have a feeling that beach is making climacs... piece by piece
[19:36:43] <shka> right?
[19:36:43] <Inline> err, afaik he made a new reader for second climacs
[19:36:50] <Inline> not sure how far he has come with it
[19:37:29] <beach> shka: Actually, the main module is the Common Lisp code parser, and that one is done.  But I can't quite figure out how to do indentation, and I am too busy with other stuff to give it enough time.
[19:37:41] <shka> oh, ok
[19:37:48] <Inline> but afaik second climacs itself is not easy cause it has so many dependencies beginning with clasp etc.....
[19:38:21] <beach> Er, what?
[19:38:26] <Inline> acclimation etc
[19:38:30] <beach> Second Climacs does not depend on Clasp in any way.
[19:38:46] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:39:03] <Inline> ok!
[19:41:30] <shka> why would it anyway
[19:41:30] *** Joins: eddof13 (~textual@200-188-5-138.static.axtel.net)
[19:41:48] <shka> ... but can you run climacs apps in clasp?
[19:42:08] <Inline> sorry i thought of acclimation i think, which is or was a subdependency of clasp
[19:42:27] <Inline> that was a few years back tho, i haven't had a look since then what happened
[19:42:35] <beach> I see.
[19:42:57] <beach> shka: What is a "climacs app"?  Do you mean McCLIM?
[19:43:08] <shka> uh, yes
[19:43:16] <shka> i don't know why i wrote climacs
[19:43:25] <shka> i had CLIM in mind
[19:45:24] <shka> because it would be kinda cool to have the level of the interactivity CLIM and CL provides contrasted against the archetypic static language that C++ is
[19:46:51] <lisp123> I think I take the interactivity of CL for granted, its been about a year since I programmed in anything else materially
[19:47:03] <Bike> nothing beach writes is dependent on clasp, but clasp is dependent on several things beach wrote
[19:48:50] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:49:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:50:30] *** Joins: montxero` (~user@149.167.142.94)
[19:52:13] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[19:54:08] *** Joins: aeth (~aeth@user/aeth)
[19:54:10] *** Quits: montxero (~user@149.167.149.74) (Ping timeout: 240 seconds)
[20:06:31] *** Quits: montxero` (~user@149.167.142.94) (Ping timeout: 252 seconds)
[20:10:09] *** Joins: Oladon (~olad@98.43.81.226)
[20:22:34] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[20:33:33] *** Joins: cage (~cage@dynamic-adsl-94-34-15-17.clienti.tiscali.it)
[20:57:50] *** Joins: CptKirk (~CptKirk@97-118-72-33.hlrn.qwest.net)
[20:57:51] *** Quits: amb007 (~a_bakic@249.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:01:42] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:12:56] *** Joins: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com)
[21:22:33] *** Joins: asarch_ (~asarch@2806:10ae:7:481c:6ca3:fd7c:2b76:876b)
[21:24:50] *** Quits: asarch (~asarch@2806:10ae:7:b23d:58c7:e39d:8f70:93ac) (Ping timeout: 246 seconds)
[21:32:25] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 268 seconds)
[21:34:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 264 seconds)
[21:35:56] *** Joins: aeth (~aeth@user/aeth)
[21:38:10] *** Joins: cosimone (~user@93-44-187-68.ip98.fastwebnet.it)
[21:48:48] *** asarch_ is now known as asarch
[21:50:23] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 246 seconds)
[21:56:29] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[22:02:05] *** Quits: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[22:08:47] *** Joins: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com)
[22:09:49] *** Joins: lotuseater (~user@p200300e7870566004b01295534bb48e2.dip0.t-ipconnect.de)
[22:09:51] *** Quits: eddof13 (~textual@200-188-5-138.static.axtel.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:46] <lotuseater> Did I miss something interesting the last few hours?
[22:13:51] *** Joins: eddof13 (~textual@200-188-5-138.static.axtel.net)
[22:15:59] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:17:27] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[22:21:29] *** Parts: Everything (~Everythin@37.115.210.35) ()
[22:32:38] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2.1)
[22:36:44] *** Joins: gaqwas (~john@dynamic-077-009-034-052.77.9.pool.telefonica.de)
[22:39:37] <mfiano> logs in topic
[22:44:36] *** Quits: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[23:02:39] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:05:36] *** Quits: asarch (~asarch@2806:10ae:7:481c:6ca3:fd7c:2b76:876b) (Quit: Leaving)
[23:16:29] *** Quits: cosimone (~user@93-44-187-68.ip98.fastwebnet.it) (Ping timeout: 246 seconds)
[23:26:20] *** Joins: tfb (~tfb@88.98.95.237)
[23:30:58] *** Quits: speskk (~user@4133b417.cst.lightpath.net) (Remote host closed the connection)
[23:31:43] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[23:34:50] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Quit: Izem)
[23:38:37] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:45:54] *** Quits: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:46:11] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[23:50:12] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:52:48] *** Joins: xsperry (~as@user/xsperry)
[23:53:51] *** Quits: cage (~cage@dynamic-adsl-94-34-15-17.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[23:58:37] <pjb> aeth: it is simply NOT DEFINED! Implementations can do whatever they want. So if you write that, basically you're writing non-conforming code.
[23:58:46] *** Quits: Posterdati (~posterdat@host-95-235-15-123.retail.telecomitalia.it) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[23:58:58] *** Joins: _Posterdati_ (~posterdat@host-95-235-15-123.retail.telecomitalia.it)
[23:59:14] <pjb> beach: I'm not saying they're pointless, I'm saying they're undefined, and therefore dangerous.
