[00:00:10] *** Joins: nomic (~nomic@185.192.69.176)
[00:01:01] <ThePendulum> not sure if I'm following what you're trying to do in the end, alternative wise element? what do you need to do to the odd or even elements other than change color?
[00:01:29] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[00:02:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:02:39] <Rockwood> i wanna hide in number 50% spans at time
[00:03:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[00:03:04] <Rockwood> this is my main concern just
[00:03:28] <Rockwood> https://stackblitz.com/edit/react-nbr6jt?file=src%2Fstyle.css
[00:03:31] <Rockwood> like this
[00:03:49] <ThePendulum> like that, but what else?
[00:03:55] <ThePendulum> because you have that
[00:05:10] *** Joins: gehn (~gehn@user/gehn)
[00:06:29] <Rockwood> https://stackblitz.com/edit/react-nbr6jt?file=src%2FApp.js
[00:06:40] <Rockwood> its coming always odd
[00:06:54] <Rockwood> random not works prefect there
[00:06:59] <Rockwood> anyway its night
[00:07:10] <Rockwood> and very late night cya
[00:07:16] <Rockwood> tmro thanks for help
[00:07:37] <ThePendulum> alright, just not sure what you need the JS for if you have the CSS
[00:08:26] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:08:31] <Rockwood> https://stackblitz.com/edit/react-nbr6jt?file=src%2FApp.js
[00:08:45] <Rockwood> only odd text is showing
[00:08:57] <Rockwood> everytime on every reload
[00:09:00] <ThePendulum> don't really know enough React here but that Math.random function is using static values so I don't know why it would ever alternate
[00:09:14] <ThePendulum> oh nvm
[00:09:44] <Rockwood> yes
[00:09:47] <ThePendulum> what I meant to say is Math.random * 2 is always going to be between 1 and 1.999999999, if you flood that it's always going to be 1
[00:10:20] <Rockwood> 0 and 1
[00:10:36] <ThePendulum> let me see
[00:11:03] <ThePendulum> okay yeah nvm
[00:11:05] <Rockwood> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random
[00:11:11] <Rockwood> i verified from here
[00:11:40] <Rockwood> console.log(getRandomInt(2)); just try from here
[00:11:46] <GreenJello> ThePendulum, your math is off there; it's a coin flip
[00:12:05] <ThePendulum> yeah I confused myself a bit, normally I'd do > .5
[00:13:09] <Rockwood> what i am missing
[00:13:17] <ThePendulum> it seems to work though?
[00:13:26] <ThePendulum> half the time the class is locationFirst and the other half locationSecond
[00:13:37] <Rockwood> really
[00:13:42] <Rockwood> let me chk
[00:13:58] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[00:14:10] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[00:14:11] <Rockwood> yeah
[00:14:12] <ThePendulum> although I'm a bit confused right now, it seems to alternate perfectly, must be a coincidence
[00:14:23] <Rockwood> but text only coming odd there
[00:14:39] <ThePendulum> that's because you're hiding it with the same CSS rather than based on that class
[00:14:40] <Rockwood> always
[00:14:51] <ThePendulum> :nth-child(odd) and nth-child(even) aren't going to change order
[00:14:54] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:15:16] <Rockwood> oops i am confuse about it
[00:15:21] <Rockwood> what should be there?
[00:16:46] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[00:16:47] <ThePendulum> I think what you want is .locationFirst:nth-child(odd) { display: none; } .locationSecond:nth-child(even) { display: none; } or the other way around
[00:17:24] <ThePendulum> because right now the CSS has no connection to your JS alternation, it's just taking the full list and alternating through the same list every time
[00:17:34] <ThePendulum> you need to apply it to the class your JS is setting
[00:18:05] <ThePendulum> you can probably set that class on just the container though, rather than every single item, maybe it doesn't even work otherwise, not quite sure right now
[00:18:18] <ThePendulum> or well it could be .locationFirst > span:nth-child(odd) etc.
[00:18:32] <ThePendulum> guess my first example should work too
[00:18:38] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 260 seconds)
[00:18:43] <ThePendulum> sorry I barely slept for a week >.>
[00:19:38] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[00:19:55] <Rockwood> yes
[00:21:14] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:21:26] <ThePendulum> setting the class on the container will save you some template definition and calculations at least
[00:22:42] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[00:23:09] <Rockwood> should i inject another class name
[00:23:16] <Rockwood> on container?
[00:23:41] <ThePendulum> if I understand this correctly you only need to set that class on the container and not on any of the children, you can put a static class on those
[00:23:52] <ThePendulum> unless there's something else you'd like to do with the children using that JS logic
[00:23:55] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:24:15] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:24:37] <ThePendulum> .container.locationFirst > span:nth-child(even) with locationFirst set to .container should have the same effect as .locationFirst:nth-child(even) with .locationFirst set on every single child, I think
[00:25:09] <ThePendulum> just reduces the amount of logic and references needed in your template
[00:26:15] <Rockwood> https://stackblitz.com/edit/react-nbr6jt?file=src%2FApp.js
[00:27:03] <ThePendulum> hmm what am I missing
[00:27:37] <ThePendulum> not actually seeing that style being applied in my browser
[00:27:52] <Rockwood> still not getting correct result
[00:28:14] <ThePendulum> oh hold on, both those definitions need to be display: none;
[00:28:14] <Rockwood> once a time coming both text odd and even
[00:28:22] <Rockwood> ok
[00:28:54] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[00:29:25] *** Joins: WishBoy (~WishBoy@user/wishboy)
[00:29:29] * ThePendulum is feeling a bit 🤪
[00:29:43] *** Joins: onosendi (~onosendi@user/onosendi)
[00:31:49] <Rockwood> i think i need styling on layout page
[00:32:04] <Rockwood> instead external file
[00:34:14] <Rockwood> ThePendulum, thanks
[00:34:38] <Rockwood> have you got any solution?
[00:35:18] <ThePendulum> it's still not working?
[00:35:34] <Rockwood> not proper
[00:35:46] <ThePendulum> I'm getting odd one time and even the other, not sure what else you'd like
[00:35:50] <Rockwood> https://stackblitz.com/edit/react-nbr6jt?file=src%2Fstyle.css
[00:36:02] <Rockwood> really here not
[00:36:08] <Rockwood> let me chk kagain
[00:36:33] <ThePendulum> well that's working the way I thought you meant, otherwise I'm going to need more info
[00:36:38] <Rockwood> oh yes works \o/
[00:36:41] <ThePendulum> even even even even one load, odd odd odd odd odd the next
[00:36:42] <ThePendulum> nice
[00:37:00] <Rockwood> ThePendulum, thanks a lots
[00:37:05] <ThePendulum> np
[00:37:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[00:38:33] <ThePendulum> lol when I tried that random function I got 1 twenty times in a row, hence I thought there was something wrong with it
[00:38:45] <ThePendulum> confirmation bias from there on
[00:42:13] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:42:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:47:08] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[00:48:29] *** Quits: WishBoy (~WishBoy@user/wishboy) (Ping timeout: 265 seconds)
[00:51:08] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[00:51:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:52:58] *** Quits: tlaxkit (~hexchat@170.253.47.137) (Remote host closed the connection)
[00:53:22] *** Joins: tlaxkit (~hexchat@170.253.47.137)
[00:54:37] *** Quits: tlaxkit (~hexchat@170.253.47.137) (Remote host closed the connection)
[00:57:41] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[01:00:32] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:05:17] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[01:10:56] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f)
[01:11:09] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:cd3d:1c96:7976:899b)
[01:12:13] *** Joins: CiaoSen (~Jura@p200300c9571d3d002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[01:15:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:18:39] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:18:56] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[01:19:27] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[01:20:57] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:22:13] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) ()
[01:22:28] *** Joins: dachinat (~dachinat@37.232.98.166)
[01:22:35] *** Quits: CiaoSen (~Jura@p200300c9571d3d002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:23:25] *** Joins: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de)
[01:24:26] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[01:25:30] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[01:28:14] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[01:29:50] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[01:30:24] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[01:31:52] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[01:39:13] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:43:05] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[01:43:54] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[01:44:04] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[01:45:49] <amahl> hi
[01:46:19] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[01:46:22] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 260 seconds)
[01:46:22] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Ping timeout: 260 seconds)
[01:46:37] <theskillwithin> 👋
[01:46:48] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[01:51:58] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 260 seconds)
[01:52:23] *** defjam is now known as eblip
[01:54:49] *** Joins: b0nn (~shane@user/b0nn)
[01:55:02] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[01:55:56] <b0nn> I'm looking to learn jsonb stuffs™ Can anyone recommend a good tutorial (specifically I'm needing to understand manipulation/access of a json associative array in a blob in postgres
[01:56:30] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:57:05] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[01:57:24] <GreenJello> you might have better luck in a postgres channel
[01:57:42] <b0nn> hmm, I asked them last week and got radio silence
[01:57:48] <b0nn> But I'll try again
[01:57:50] <b0nn> thanks
[01:58:02] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:58:14] *** Joins: jess (~jess@libera/staff/jess)
[02:02:18] <ThePendulum> it's generally quite an active channel, just stick around there for a while
[02:02:29] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[02:03:46] *** Joins: nomic (~nomic@185.192.69.176)
[02:05:26] <onosendi> b0nn: they're usually pretty helpful there.
[02:05:39] *** Joins: goddard (~goddard@user/goddard)
[02:05:53] <b0nn> Someone has linked me to docs there (which are helpful)
[02:06:27] <onosendi> b0nn: that's the right answer for your question, since it's pretty broad ;)
[02:07:16] <b0nn> It's def a step up, and will help me figure out precisely what I want
[02:07:47] <ThePendulum> !next
[02:07:47] <jellobot> ThePendulum, Another satisfied customer! NEXT!!
[02:08:13] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[02:10:04] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:11:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:30] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[02:14:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:14:49] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:14:49] *** Joins: wroathe (~wroathe@user/wroathe)
[02:15:17] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:15:35] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[02:16:05] *** Joins: peirik (~peirik@84.215.176.70)
[02:16:17] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:16:25] *** Quits: peirik (~peirik@84.215.176.70) (Quit: WeeChat 2.8)
[02:19:58] *** Joins: peirik (~peirik@84.215.176.70)
[02:21:11] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[02:23:48] *** Quits: dmanto (~dmanto@host144.190-231-78.telecom.net.ar) (Remote host closed the connection)
[02:23:53] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[02:24:09] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[02:24:31] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 252 seconds)
[02:26:38] *** Joins: dmanto (~dmanto@host144.190-231-78.telecom.net.ar)
[02:28:48] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Client Quit)
[02:28:59] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[02:29:12] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[02:30:23] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[02:32:11] *** Joins: birkoff (birkoff@user/birkoff)
[02:34:25] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:39:06] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[02:42:10] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:42:51] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[02:44:21] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[02:44:36] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:52:35] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:57:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:57:32] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[02:58:40] <vqueiroz> Does emscripten supports OES_vertex_array_object?
[02:59:08] <lantech19446> are there any good javascript for real world application type videos out there?
[03:00:36] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[03:04:05] <theskillwithin> https://wesbos.com/courses
[03:11:18] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[03:11:43] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[03:12:52] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:17:17] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[03:20:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:21:08] <lantech19446> ty
[03:24:27] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[03:25:50] *** Joins: Joel (~jjshoe@user/joel)
[03:26:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[03:27:38] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[03:29:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:30:05] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[03:30:59] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:31:30] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[03:34:00] *** Joins: pizdets (~pizdets@183.182.110.187)
[03:34:34] *** Quits: pizdets_ (~pizdets@183.182.115.101) (Ping timeout: 250 seconds)
[03:35:34] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[03:35:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:36:40] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Ping timeout (120 seconds))
[03:37:34] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[03:41:01] <theskillwithin> https://youtu.be/9ix7TUGVYIo
[03:41:01] <skillbot> YouTube Title: The Matrix Resurrections – Official Trailer 1
[03:43:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[03:45:04] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:45:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:45:11] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:45:31] *** Joins: wroathe (~wroathe@c-75-72-98-163.hsd1.mn.comcast.net)
[03:45:31] *** Quits: wroathe (~wroathe@c-75-72-98-163.hsd1.mn.comcast.net) (Changing host)
[03:45:31] *** Joins: wroathe (~wroathe@user/wroathe)
[03:49:09] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:49:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:50:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:51:03] <peteyboy1> proptypes, yay or nay?
[03:52:00] <GreenJello> yay
[03:52:17] <peteyboy1> typescript in react, yay or nay?
[03:52:26] <GreenJello> meh
[03:52:31] <ljharb> TS itself is meg
[03:52:31] <peteyboy1> why?
[03:52:32] <ljharb> *meh
[03:52:40] <ljharb> if you're already using TS, it's silly not to use it in react too
[03:52:41] <theskillwithin> mas o menos
[03:53:37] <peteyboy1> i'm not using it. but i started looking into angular, and i can't say i dislike typescript and the clear structure angular has. every time i create a react project i think from scratch about how i'm going to do the folder architecture
[03:53:40] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[03:53:46] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[03:53:54] <peteyboy1> so yeah, if i keep going with angular, i might just get used to TS and keep using it in react too
[03:55:14] <wroathe> TS seems to be the best we've got if you need something like that, but in my opinion we could do with a type checker that's a little more "functional" syntax-wise. ADTs, parametric and ad-hoc polymorphism, better support for expressing curried functions, etc
[03:55:54] <GreenJello> wroathe, reasonml?
[03:56:05] <wroathe> !
[03:56:12] <wroathe> GreenJello: I was not aware of this. Looking.
[03:56:21] <peteyboy1> and isn't it also useful to use it if you already use things like C# or java?
[03:56:36] <peteyboy1> talking about TS
[03:57:17] <GreenJello> peteyboy1, there isn't much added value from your server using static types, no
[03:57:40] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[03:57:43] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Remote host closed the connection)
[03:57:45] <GreenJello> unless you're generating typescript code from your server side types
[03:57:55] <wroathe> GreenJello: This is awesome. A little more heavy-weight than I was thinking, but awesome.
[03:57:58] <peteyboy1> what i mean is, going from one to the other doesn't feel too weird, since they function similarly
[03:58:13] <GreenJello> they don't, though
[03:58:24] <peteyboy1> the syntax...
[03:58:38] <GreenJello> the type systems and best practices are very different
[03:58:40] <peteyboy1> public, private, declaring types, etc
[03:58:45] <wroathe> peteyboy1: If you're writing JS like it's Java or C# you're writing very poor JS
[03:58:53] <peteyboy1> i don't
[03:58:58] <peteyboy1> i don't even write java or C#
[03:59:50] <peteyboy1> nevermind
[04:00:41] <peteyboy1> and back to angular, why is it so disliked here?
[04:01:40] <peteyboy1> i get that react is more flexible, but that comes with its downsides too, no?
[04:02:01] <peteyboy1> at least when projects get bigger or have more people working on them
[04:03:04] <GreenJello> I don't have much of an opinion on it, just haven't seen anything that makes me want to look into it more
[04:03:31] <GreenJello> and some bias from angular 1.x being a train wreck of a framework
[04:03:37] <wroathe> ^
[04:03:52] <wroathe> My only experience with angular was the 1.x line for about 6 months at a contract
[04:04:18] <peteyboy1> we're talking angularjs then?
[04:04:18] <wroathe> I didn't hate it, but at the time I was less opinionated than I am now.
[04:04:45] <peteyboy1> ok yeah
[04:04:57] <peteyboy1> but that's basically a different framework altogether
[04:05:29] <wroathe> Last I looked at anything involving Angular it seemed very OOP driven
[04:05:35] <wroathe> And what's where my current set of opinions comes in :P
[04:05:39] <peteyboy1> is that a problem?
[04:05:46] <wroathe> Depends on who you are
[04:06:09] <wroathe> I've picked a side on the programming paradigm holy war :P
[04:06:23] <peteyboy1> i guess that neither framework is better than the other and that it all comes to opinion
[04:06:31] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[04:07:01] <peteyboy1> i do have a doubt that react being more popular doesn't actually have anything to do with it being "objectively" better, rather that it's so much easier to learn so all the novices start with that
[04:07:02] <GreenJello> that's still unclear to me
[04:07:30] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:08:05] <GreenJello> it might be mostly opinion, or not. Wouldn't jump to a conclusion there with what I know
[04:08:10] <wroathe> peteyboy1: The react API puts emphasis on functional reactive UI components. I can't speak to Angular, but I find that architectural approach to be superior
[04:08:57] <peteyboy1> i can't really opine either
[04:08:57] <wroathe> I.e. the fact that most components can just be expressed as a pure function of their props has all sorts of upsides for maintenance and testability and separation of concerns
[04:09:00] <peteyboy1> only ever done react
[04:09:28] <ljharb> peteyboy1: angular is the worse, avoid it regardless
[04:09:36] <ljharb> *worst
[04:09:57] <peteyboy1> do we have no angular devs here to play devil's advocate?
[04:10:57] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:11:29] <ljharb> they would indeed be advocating for the devil
[04:11:40] <GreenJello> lol
[04:11:57] <peteyboy1> all the react-leaning biases aside, is there any reasonable issue with using angular for not-so-big projects too?
[04:12:06] <peteyboy1> "don't ever use it for anything" is not an answer
[04:12:26] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[04:13:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:13:55] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 265 seconds)
[04:15:50] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[04:16:42] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:17:53] *** Joins: onosendi (~onosendi@user/onosendi)
[04:18:35] *** Joins: falafel (~falafel@2603-8000-d801-2d68-1d6d-bf72-eba2-a20e.res6.spectrum.com)
[04:19:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:19:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:19:12] *** Joins: wroathe (~wroathe@user/wroathe)
[04:21:30] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:22:25] <ljharb> peteyboy1: it's a perfectly correct answer
[04:22:41] <ljharb> not everything is nuanced
[04:22:44] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[04:23:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:25:24] <codebam> how do I properly use knex with import syntax? https://paste.sbehan.ca/2nr.txt
[04:29:48] <onosendi> Say you have a list of comments, and a reply button for each comment. Pressing the reply button would show a textarea underneath of that comment. Would something like this be the best way going about this? https://dpaste.org/efc4
[04:30:40] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[04:30:47] <GreenJello> onosendi, if you only want one to be open at a time, sure
[04:31:06] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:31:07] <GreenJello> oh wait
[04:32:07] <GreenJello> the code is wrong, but I assume you want them to open independently, so probably make the list item a separate component with its own state
[04:32:29] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[04:32:54] <GreenJello> and you might make the form its own component, if it should reset after being closed and opened again
[04:33:17] <onosendi> Gotcha.
[04:36:30] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[04:36:39] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:41:21] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[04:42:46] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[04:43:23] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:43:32] *** Joins: gggp (~textual@123.113.189.7)
[04:44:56] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[04:45:24] *** Joins: ferdna (~ferdna@user/ferdna)
[04:45:37] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:29] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[04:50:05] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[04:52:34] *** Quits: falafel (~falafel@2603-8000-d801-2d68-1d6d-bf72-eba2-a20e.res6.spectrum.com) (Ping timeout: 260 seconds)
[04:54:20] *** Joins: matsaman (~matsaman@user/matsaman)
[04:56:45] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:57:15] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:cd3d:1c96:7976:899b) (Ping timeout: 260 seconds)
[05:01:26] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[05:02:05] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:03:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f) (Ping timeout: 260 seconds)
[05:09:34] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[05:09:46] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-53.prtc.net)
[05:13:20] <codebam> I'm using nestjs with typescript, how do I get the request.body.whatever if typescript doesn't know the type?
[05:13:48] <codebam> it says property id doesn't exist on ReadableStream<Uint8Array>
[05:15:00] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[05:15:33] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:15:36] <codebam> oh I figured it out
[05:15:44] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-53.prtc.net) (Quit: Client closed)
[05:15:47] <codebam> I made an interface with optional types and then typecasted
[05:19:03] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Client Quit)
[05:19:38] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[05:20:55] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:21:57] <GreenJello> codebam, it's not good to assume the body is of some specific type
[05:22:10] <GreenJello> you can verify it with something like runtypes
[05:23:31] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[05:24:36] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490)
[05:24:53] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:25:52] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 252 seconds)
[05:28:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:31:51] <codebam> oh, okay
[05:32:02] <codebam> so I shouldn't typecast?
[05:33:15] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[05:33:45] <GreenJello> codebam, correct, and it's especially dangerous to do that with data that's coming from external sources
[05:34:04] <codebam> oh okay I see
[05:34:49] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:35:39] <GreenJello> codebam, with runtypes (or the many similar packages) you define the shape of the object in JS/TS, and it does some TS magic to work out the static types for the schema you've defined
[05:35:49] *** Joins: nord (~dnordstro@90-227-217-156-no62.tbcn.telia.com)
[05:36:14] <GreenJello> and then it verifies the data at runtime, and hands you the verified object with the correct TS type
[05:38:01] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[05:38:05] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[05:38:36] *** Joins: earendel (uid498179@user/earendel)
[05:41:25] *** Joins: k162 (~k162@user/k162)
[05:42:50] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[05:43:00] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:43:38] <ezzieyguywuf> well, I got disconnected so I missed if there was an answer (sorry!) so I'm going to re-ask my question: how come if I define `const d = {'one': 1, 'two': 2};` I can still re-assign `d.one = 2`?
[05:44:15] <wroathe> ezzieyguywuf: const doesn't make the entire object immutable
[05:44:18] *** Joins: gggpkm_ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[05:44:26] <wroathe> ezzieyguywuf: It just makes the reference that d holds immutable
[05:44:53] <wroathe> ezzieyguywuf: So you can't do const d = 'foo'; d = 3.14;, for example
[05:47:26] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[05:47:53] <ezzieyguywuf> ahh, sort of like a const pointer in c++
[05:48:18] <ezzieyguywuf> wroathe: thanks!
[05:49:12] *** Joins: sargon (~sargon@188.250.185.117)
[05:51:22] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[05:56:16] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[05:56:18] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[06:00:28] *** Joins: Jaran|zZZzZZZzz (~mail@p5b2c5172.dip0.t-ipconnect.de)
[06:00:28] *** Quits: Jaran|zZZzZZZzz (~mail@p5b2c5172.dip0.t-ipconnect.de) (Changing host)
[06:00:28] *** Joins: Jaran|zZZzZZZzz (~mail@user/jaran)
[06:01:12] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 256 seconds)
[06:07:15] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[06:09:38] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[06:10:23] *** Quits: gggp (~textual@123.113.189.7) (Ping timeout: 265 seconds)
[06:11:12] *** Joins: metadaemon (~metadaemo@user/metadaemon)
[06:11:42] *** Joins: WishBoy (~WishBoy@user/wishboy)
[06:11:51] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:11:55] <codebam> how do I fix CORS here? it's not letting me make this axios request to my local API? https://github.com/codebam/todo/blob/master/apps/todo/src/app/app.tsx
[06:12:08] <codebam> this is the API https://github.com/codebam/todo/blob/master/apps/api/src/app/app.service.ts
[06:12:12] <GreenJello> 404
[06:12:22] <codebam> oh sorry it's a private repo, will fix that
[06:12:50] <codebam> should be visible now
[06:13:19] <codebam> also you'll notice I haven't fixed the type casting yet... my bad
[06:13:38] <codebam> I will get to it
[06:14:15] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[06:16:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[06:17:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[06:18:01] <theskillwithin> codebam don't you have to await db calls?
[06:19:56] <codebam> oh um maybe? I don't know, it was working with curl
[06:20:34] <theskillwithin> i think so
[06:21:03] <theskillwithin> kinda like this https://github.com/theskillwithin/node-mysql/blob/master/controllers/apiController.js
[06:21:11] <theskillwithin> except thats using objectionjs
[06:21:18] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Remote host closed the connection)
[06:23:12] <codebam> oh okay yes
[06:23:22] <codebam> I fixed it, but how do I make CORS work?
[06:24:14] <theskillwithin> still having CORS problem after that?  whats the CORS error say?
[06:25:36] <codebam> theskillwithin: https://paste.sbehan.ca/twf.png
[06:25:38] <theskillwithin> https://docs.nestjs.com/security/cors#cors
[06:26:03] <codebam> oh okay let me make sure I did that
[06:26:48] <codebam> oh that worked
[06:26:50] <codebam> thank you
[06:27:51] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[06:29:38] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[06:32:37] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[06:37:34] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[06:46:05] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[06:46:17] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 252 seconds)
[06:50:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[06:52:02] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[06:54:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:55:40] *** Quits: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:56:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:58:09] *** Joins: gggp (~textual@60.10.23.169)
[07:04:25] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[07:05:57] *** Joins: Rockwood (~Rocky@user/rocky)
[07:06:40] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[07:10:14] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[07:11:08] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:12:38] *** Joins: onosendi (~onosendi@user/onosendi)
[07:17:05] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 252 seconds)
[07:24:32] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[07:29:22] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[07:30:28] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[07:31:18] *** Joins: onosendi (~onosendi@user/onosendi)
[07:32:27] *** Quits: onosendi (~onosendi@user/onosendi) (Client Quit)
[07:40:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:41:17] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:43:16] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[07:47:53] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[07:50:27] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:51:25] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[07:53:44] *** Joins: bitmega (~bitmega@user/bitmega)
[07:57:09] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:68d1:941f:ca9f:fdc6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:00:18] *** Joins: jamea (~jamea@177.239.87.39)
[08:00:34] *** Quits: gggpkm_ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[08:01:27] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[08:04:34] *** Joins: xant (~metadaemo@user/metadaemon)
[08:04:37] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[08:06:14] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[08:07:38] *** Quits: metadaemon (~metadaemo@user/metadaemon) (Ping timeout: 260 seconds)
[08:13:15] *** Quits: bitmega (~bitmega@user/bitmega) (Ping timeout: 260 seconds)
[08:15:37] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:16:19] *** Joins: chenxuez_ (~chenxuezh@106.39.157.10)
[08:18:00] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Ping timeout: 265 seconds)
[08:20:07] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[08:25:45] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f)
[08:25:45] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[08:36:15] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[08:37:35] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[08:37:58] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[08:38:56] *** Joins: bitmega (~bitmega@user/bitmega)
[08:40:18] *** Joins: gggp (~textual@111.63.44.6)
[08:41:18] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:42:38] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[08:46:22] *** Quits: bitmega (~bitmega@user/bitmega) (Ping timeout: 260 seconds)
[08:47:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:49:04] *** Quits: chenxuez_ (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[08:49:20] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[08:49:24] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[08:49:54] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[08:51:25] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:51:46] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[08:56:10] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[08:58:50] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[09:00:50] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[09:03:54] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 265 seconds)
[09:04:47] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:01] *** Joins: gggpkm_ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[09:08:47] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:09:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:09:35] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:09:37] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:10:10] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:10:46] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:10:58] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:11:02] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:11:34] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:12:05] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Read error: Connection reset by peer)
[09:14:48] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[09:16:20] *** Joins: bitmega (~bitmega@user/bitmega)
[09:16:42] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f) (Ping timeout: 260 seconds)
[09:16:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[09:16:45] *** Joins: gggpkm__ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[09:16:51] *** Quits: gggpkm_ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[09:18:05] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[09:18:20] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[09:19:11] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[09:19:51] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 265 seconds)
[09:20:08] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:21:25] *** Quits: bitmega (~bitmega@user/bitmega) (Ping timeout: 252 seconds)
[09:25:02] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[09:29:34] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:32:42] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[09:37:14] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[09:40:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[09:47:27] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[09:52:12] *** Joins: Doraemon (~NeoCron@p200300c4cf1c7e009d03f50373ebe753.dip0.t-ipconnect.de)
[09:54:30] *** Quits: NeoCron (~NeoCron@p200300c4cf1c95007f0aa1e4d57a6222.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:04:32] *** Joins: audio (~audio@2603-8081-1800-6a6f-5a5f-989b-0baa-80b7.res6.spectrum.com)
[10:13:18] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:18:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[10:30:32] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:30:50] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[10:34:03] *** Joins: kakashiAL (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de)
[10:39:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[10:41:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:42:29] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[10:43:46] *** Joins: mexen (uid495612@user/mexen)
[10:44:20] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[10:49:38] *** Joins: falafel (~falafel@2603-8000-d801-2d68-1d6d-bf72-eba2-a20e.res6.spectrum.com)
[11:04:13] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[11:08:13] *** Quits: nord (~dnordstro@90-227-217-156-no62.tbcn.telia.com) (Quit: WeeChat 3.2)
[11:09:15] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[11:09:54] *** Joins: dnordstrom (~dnordstro@90-227-217-156-no62.tbcn.telia.com)
[11:10:02] *** dnordstrom is now known as nord
[11:16:25] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:18:02] *** Quits: falafel (~falafel@2603-8000-d801-2d68-1d6d-bf72-eba2-a20e.res6.spectrum.com) (Ping timeout: 260 seconds)
[11:20:36] *** Quits: nord (~dnordstro@90-227-217-156-no62.tbcn.telia.com) (Quit: WeeChat 3.2)
[11:20:58] *** Joins: dnordstrom (~dnordstro@90-227-217-156-no62.tbcn.telia.com)
[11:23:13] *** Quits: Tabmow (~tabmow@user/tabmow) (Quit: ZNC 1.8.2 - https://znc.in)
[11:23:32] *** Joins: Tabmow (~tabmow@user/tabmow)
[11:24:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:10bb:6889:5d26:46b)
[11:25:05] *** Quits: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[11:31:51] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:34:05] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[11:35:27] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[11:35:57] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:36:08] *** Joins: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr)
[11:39:33] *** Joins: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de)
[11:40:30] *** Quits: kakashiAL (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[11:41:11] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[11:43:03] *** Joins: mei (~mei@user/mei)
[11:45:39] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[11:49:15] *** Quits: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr) (Quit: leaving)
[11:51:42] *** Joins: otisolsen70 (~otisolsen@212.97.248.183)
[11:56:55] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f)
[12:00:22] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[12:05:25] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[12:08:54] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Ping timeout: 260 seconds)
[12:11:00] *** Joins: bitmega (~bitmega@user/bitmega)
[12:12:34] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[12:13:07] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[12:13:37] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[12:13:58] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[12:15:55] *** Quits: bitmega (~bitmega@user/bitmega) (Ping timeout: 260 seconds)
[12:19:20] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:20:34] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:35:13] *** Joins: otisolsen70_ (~otisolsen@212.97.248.183)
[12:36:08] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:43] *** Quits: otisolsen70_ (~otisolsen@212.97.248.183) (Read error: Connection reset by peer)
[12:38:59] *** Quits: otisolsen70 (~otisolsen@212.97.248.183) (Ping timeout: 265 seconds)
[12:39:43] *** Quits: blez (~blez@213.91.182.96) (Remote host closed the connection)
[12:39:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:04] *** Joins: blez (~blez@213.91.182.96)
[12:40:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:41:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:50:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[12:52:31] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[12:55:32] *** Joins: lalitmee (~lalitmee@180.94.33.38)
[12:59:54] *** Joins: _hack_ (~hack@user/realhack)
[13:00:09] *** Joins: vysn (~vysn@user/vysn)
[13:01:40] *** Joins: Naan (~Naan@user/naan)
[13:19:20] <interop_madness> does anyone, by any chance, know if there is a yarn command which which I can output contents of the "resolutions { ... } property in package.json?
[13:24:12] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[13:24:45] <davidv7> are there any good resources on what transferring functions as arguments to other functions actually does
[13:36:11] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:36:17] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:44:54] *** Joins: lalitmee_ (~lalitmee@180.94.33.7)
[13:45:25] *** Quits: lalitmee (~lalitmee@180.94.33.38) (Ping timeout: 252 seconds)
[13:48:06] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[13:57:38] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[13:58:15] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 265 seconds)
[14:00:07] *** Joins: sQVe (~sQVe@user/sqve)
[14:00:54] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[14:02:42] *** Joins: Naan` (~Naan@user/naan)
[14:03:14] *** Quits: audio (~audio@2603-8081-1800-6a6f-5a5f-989b-0baa-80b7.res6.spectrum.com) (Ping timeout: 260 seconds)
[14:04:55] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[14:05:06] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f) (Ping timeout: 260 seconds)
[14:06:45] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[14:06:54] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f)
[14:11:23] *** Quits: gry (~quassel@botters/gry) (Quit: irc client migration)
[14:12:39] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:16:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f) (Ping timeout: 260 seconds)
[14:17:12] *** Quits: sargon (~sargon@188.250.185.117) (Quit: Ex-Chat)
[14:17:22] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[14:17:36] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[14:22:50] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Ping timeout: 260 seconds)
[14:22:57] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 245 seconds)
[14:23:44] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[14:23:46] *** Quits: brunodOut (~brunodOut@170.84.57.235) (Ping timeout: 260 seconds)
[14:25:55] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f)
[14:29:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[14:36:41] *** Joins: keypusher (keypusher@user/keypusher)
[14:36:51] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[14:39:52] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:46:42] *** Joins: dudek (~dudek@185.150.236.103)
[14:48:58] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[14:49:14] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[14:50:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[14:53:08] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:8d0f:8989:a047:bf14)
[14:56:12] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[14:59:50] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[15:04:38] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[15:04:42] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:06:17] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 245 seconds)
[15:06:52] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[15:06:53] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Quit: WeeChat 3.2)
[15:07:08] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[15:08:19] *** Quits: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[15:08:49] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[15:09:04] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[15:09:18] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:39] *** Joins: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de)
[15:12:25] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[15:13:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:15:06] *** Quits: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de) (Ping timeout: 260 seconds)
[15:18:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[15:18:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[15:19:45] *** Joins: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de)
[15:19:52] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[15:23:13] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:25:38] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[15:33:13] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:34:26] *** Quits: kakashiA1 (~kakashi@ppp-188-174-54-75.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[15:44:29] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:47:18] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c56:8b9b:3cee:678f) (Ping timeout: 260 seconds)
[15:47:54] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[15:50:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:04:23] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:09:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:10:37] *** Joins: salad (~cucumber@82.76.148.128)
[16:10:50] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:12:32] *** Joins: bitmega (~bitmega@user/bitmega)
[16:14:11] *** Joins: gggp (~textual@111.63.44.6)
[16:16:13] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:17:46] *** Quits: bitmega (~bitmega@user/bitmega) (Ping timeout: 252 seconds)
[16:21:14] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:30:05] *** Joins: pulse (~pulse@user/pulse)
[16:30:27] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:34:43] *** Joins: lalitmee__ (~lalitmee@180.94.33.246)
[16:35:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[16:37:01] *** Quits: lalitmee_ (~lalitmee@180.94.33.7) (Ping timeout: 252 seconds)
[16:37:17] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[16:38:12] *** Joins: gggp (~textual@123.113.189.7)
[16:38:19] <thykka> how to shave 2 characters from this? :D "checkRange=(a,x,y)=>a.filter(v=>x<=v&&v<=y).length"
[16:38:35] <thykka> besides changing checkRange to a shorter name
[16:39:07] <Kirjava> could you have uh
[16:39:20] <Kirjava> x>v||v<=y
[16:39:34] <Kirjava> to save one
[16:40:14] <Kirjava> alternatively you could replace && with & as the bools get treated like numbers and it'd still work
[16:40:46] <Kirjava> probably more readable too
[16:41:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:41:40] <Kirjava> also you can replace
[16:41:44] <Kirjava> (thing).length
[16:41:51] <Kirjava> with 0 in thing
[16:41:58] <Kirjava> to save more than 2
[16:42:30] <Kirjava> checkRange=(a,x,y)=>0 in a.filter(v=>x<=v&v<=y)
[16:42:55] <thykka> hmmm
[16:43:21] <Kirjava> 3 char saving for you ^_^
[16:43:38] <Kirjava> also ##jsgolf moved to libera too incase you missed the migration :^)
[16:44:17] <thykka> 0 in (thing) seems to return a boolean thougn
[16:44:27] <Kirjava> ooh right you need the actual length
[16:44:40] <Kirjava> back to looking for a char saving...
[16:47:08] *** Joins: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net)
[16:47:46] <nullbytes> Is it possible to have an HTML range slider with an infinitely small "step" or to calculate the optimal step so that sliding the range slider by 1 pixel always gives the most precise value for the slider's current position?
[16:48:23] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 265 seconds)
[16:49:04] <Kirjava> checkRange=(a,x,y)=>a.reduce((a,v)=>a+(x<=v&v<=y),0)
[16:49:07] <Kirjava> slightly longer >_<
[16:49:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi)
[16:50:52] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[16:51:53] *** Quits: wintersky (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:51:54] <Kirjava> checkRange=(a,x,y)=>(i=0,a.map(v=>i+=x<=v&v<=y),i)
[16:52:00] <Kirjava> same length, but room for improvement
[16:56:45] <Kirjava> thykka: checkRange=(a,x,y,i=0)=>a.map(v=>i+=x<=v&v<=y)[0] ?
[16:57:08] <Kirjava> wait it has to be the last item not the first, ignore >_<
[16:57:46] *** Joins: sam_1 (~sam_1@87.51.251.118)
[16:59:25] <Kirjava> nah, 1 char is the best I can do it seems
[16:59:52] *** Joins: cyberbanjo (~malik@2607:fb90:428b:5b32:e82e:8e68:f854:bb1c)
[16:59:56] <Kirjava> ignore that :D
[17:00:16] <Cork> umm so v needs to be less then, equal or biggen then x?!?
[17:00:40] <Cork> wouldn't that just mean (v<=y)
[17:00:53] <Kirjava> thykka: checkRange=(a,x,y,i=0)=>a.map(v=>i+=x<=v&v<=y)|i
[17:01:00] <Kirjava> this is *evil* but should work
[17:01:56] <Cork> ah, read wrong, fat arrow; ignore me
[17:02:39] <Kirjava> I knew there was a way to get 2ch :D
[17:03:58] <Kirjava> checkRange=(a,x,y,i=0)=>a.map(v=>i+=x<=v&v<=y)^i should also work
[17:07:02] *** Joins: bitmega (~bitmega@user/bitmega)
[17:07:07] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[17:08:00] <graingert[m]> has anyone ever seen `await { then(fn) { ...}}` syntax before?
[17:08:01] <graingert[m]> `const sleep = async (delay)  => (await ({ then(fn) { setTimeout(fn, delay) }}));`
[17:08:01] *** Quits: bitmega (~bitmega@user/bitmega) (Client Quit)
[17:08:50] <graingert[m]> I've always been doing new Promise
[17:09:04] <graingert[m]> or sleep = promisify(setTimeout)
[17:09:52] <Cork> graingert[m]: thats threadable objects
[17:09:59] *** Joins: wintersky (uid453465@id-453465.helmsley.irccloud.com)
[17:10:07] <graingert[m]> threadable?
[17:10:09] <Cork> { then(fn) {} }
[17:10:23] <graingert[m]> yeah it's a method object literal
[17:10:45] <graingert[m]> do you mean a thenable?
[17:10:50] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 260 seconds)
[17:11:00] <Cork> graingert[m]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await#thenable_objects
[17:11:51] <graingert[m]> right but is awaiting thenable literals now favoured over `new Promise`?
[17:12:30] <Cork> why do you think it is favoured
[17:12:31] <graingert[m]> I'm familliar with thenable objects and how this syntax works but it seems outlandish
[17:13:19] *** Joins: jamea (~jamea@187.185.190.209)
[17:14:28] <thykka> Kirjava, nice! I tried a similar approach with reduce, but yeah.. :D
[17:17:35] <thykka> wtf
[17:17:48] <thykka> > Code length should less than 48 characters.
[17:17:56] <thykka> 🤦‍♂️
[17:18:01] <Kirjava> the hell is this for, anyway
[17:18:12] <thykka> just a codewars excercise
[17:19:18] <thykka> classic bait n switch.. "Hmm, yeah this seems easy, just filter and .length! *cue 3hours forward to present*"
[17:19:37] <Kirjava> yeah I sunk about an hour into it and I'm not even doing it :P
[17:19:43] <Kirjava> golf too tempting
[17:24:24] <Kirjava> I think i found a 47
[17:24:28] <Kirjava> checkRange=(a,x,y,i=0)=>a.map(v=>i+=v<x|v<=y)^i
[17:24:31] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:24:50] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:8d0f:8989:a047:bf14) (Ping timeout: 260 seconds)
[17:25:22] <Kirjava> no way of testing so idk if it works
[17:25:27] <Kirjava> but it should!
[17:27:19] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:28:44] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Read error: Connection reset by peer)
[17:28:57] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[17:29:29] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[17:32:02] <hassoon> 'afternoon
[17:32:05] *** Joins: Naan` (~Naan@user/naan)
[17:34:18] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 265 seconds)
[17:34:28] *** Quits: Naan` (~Naan@user/naan) (Client Quit)
[17:35:25] <thykka> Kirjava, nope, consider v=5,x=4,y=6; v<x => false, but the |v<=y makes it true, breaking the lower bound check
[17:37:03] <Kirjava> hmm tru
[17:44:24] *** Quits: gggp (~textual@123.113.189.7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:48:53] *** Joins: jaboja (~ubuntu@51.83.248.227)
[17:49:05] *** Joins: mei (~mei@user/mei)
[17:50:15] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:50:50] *** Quits: dudek (~dudek@185.150.236.103) (Read error: Connection reset by peer)
[17:51:06] *** Joins: dudek (~dudek@185.150.236.103)
[17:51:18] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:52:10] *** Joins: mei (~mei@user/mei)
[17:53:28] *** Quits: kapil (~kapil@2a01:4f9:c010:c9c3::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:54:01] *** Joins: kapil (~kapil@o-k.website)
[17:54:45] <Kirjava> yeah i dont think I'm gonna beat 48
[17:54:58] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[17:55:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 265 seconds)
[17:55:27] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[17:57:04] *** Quits: mei (~mei@user/mei) (Quit: mei)
[17:57:38] *** Joins: mei (~mei@user/mei)
[18:01:18] *** Quits: gde35 (~kvirc@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:07:32] <ezzieyguywuf> trying to `npm install core-js-3.17.3.targ.gz`, I get this error "npm verb stack TypeError: Cannot destructure property 'name' of '.for' as it is undefined." could this be related to my node.js version?
[18:07:40] <ezzieyguywuf> I'm using v16.6.2
[18:07:46] *** Quits: gggpkm__ (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[18:14:46] *** Joins: _banana_ (~banana_@2603-6000-b500-9ce3-15e5-61bf-984a-f208.res6.spectrum.com)
[18:15:08] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:15:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:16:53] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[18:20:06] <ezzieyguywuf> hrm, weird, if I grab the tarball from npm it works fine, but using the tarball from github results in the error I listed
[18:20:09] <ezzieyguywuf> *shrug*
[18:21:58] *** Joins: earendel (uid498179@user/earendel)
[18:25:51] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[18:28:01] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 252 seconds)
[18:28:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:31:55] *** Joins: zebrag (~chris@user/zebrag)
[18:32:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:36:42] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[18:37:48] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:39:09] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[18:39:29] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[18:40:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:42:38] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Client Quit)
[18:42:56] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[18:44:04] *** Joins: paule32 (~paule32@user/paule32)
[18:49:12] *** Quits: _banana_ (~banana_@2603-6000-b500-9ce3-15e5-61bf-984a-f208.res6.spectrum.com) (Ping timeout: 245 seconds)
[18:50:58] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[18:51:00] *** Parts: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net) ()
[18:51:43] *** Joins: stiv3n (~stiv3n@68.235.43.124)
[18:54:48] *** Joins: nomic (~nomic@185.192.69.176)
[18:56:11] <shan> hai
[18:56:21] <shan> https://xyzshantaram.github.io/FlashlightOverlay/ how make work good mobile
[18:56:55] <shan> https://github.com/xyzshantaram/FlashlightOverlay/blob/main/flashlight.js it uses mouse events currently but like there's no stream of touch events like there is for mouse
[18:57:08] <shan> it just fires a mousemove every time i touch somewhere else on the screen
[18:57:44] *** Joins: voltage_ (voltage@user/voltage)
[18:58:10] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[19:00:09] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[19:01:22] *** Joins: gggp (~textual@111.63.44.6)
[19:01:23] *** Quits: gggp (~textual@111.63.44.6) (Client Quit)
[19:04:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:05:20] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[19:05:24] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[19:11:41] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:14:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[19:14:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[19:16:27] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:23:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[19:23:43] *** Joins: lalitmee_ (~lalitmee@180.94.33.42)
[19:26:16] *** Quits: lalitmee__ (~lalitmee@180.94.33.246) (Ping timeout: 252 seconds)
[19:27:25] <merpnderp> Anyone see a reason to not use EJS to output Latex?
[19:27:50] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[19:28:45] *** Joins: dehl^ (~dehl@68.101.54.227)
[19:29:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:29:49] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:29:49] *** Joins: wroathe (~wroathe@user/wroathe)
[19:30:49] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Ping timeout: 252 seconds)
[19:37:41] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[19:40:45] *** Joins: han-solo (~hanish@user/han-solo)
[19:43:10] *** Joins: Snyp (~Snyp@49.207.220.4)
[19:47:28] *** Joins: lalitmee (~lalitmee@180.94.33.13)
[19:47:53] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[19:48:10] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[19:49:22] *** Quits: lalitmee_ (~lalitmee@180.94.33.42) (Ping timeout: 252 seconds)
[19:51:10] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[19:51:56] *** Joins: _banana_ (~banana_@2603-6000-b500-9ce3-15e5-61bf-984a-f208.res6.spectrum.com)
[19:52:43] *** Joins: lalitmee_ (~lalitmee@180.94.32.246)
[19:55:27] *** Quits: lalitmee (~lalitmee@180.94.33.13) (Ping timeout: 265 seconds)
[19:56:05] *** Joins: Lynn (~Lyn@user/law)
[19:59:48] *** ruel is now known as lvlinux
[20:02:34] <samsch> merpnderp, It wouldn't be type-safe, so making syntax errors in the latex would be easy.
[20:03:15] <samsch> I'm not familiar with latex syntax to know how problematic that would be compared to generating html with ejs, which also suffers that issue.
[20:04:37] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[20:06:10] <merpnderp> samsch: how does EJS use type-safety for HTML?
[20:06:24] <samsch> It doesn't, that's what I was saying
[20:07:49] <samsch> With html it kinda sucks, because it's fairly easy to typo the xml-like structure, and you don't have any protection from the various incorrect things you can do. Compare that to React, where you *can't* generate invalid structure, and it complains at you for trying to use element properties that don't exist.
[20:08:00] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:09:14] <merpnderp> So you're saying I should be generating these in React?
[20:09:31] <merpnderp> I have to turn the latex into PDF so I'm going to do it server side.
[20:11:26] *** Quits: jazzy2 (~jaziz@2600:380:865d:911b:c128:d355:1b30:8490) (Ping timeout: 260 seconds)
[20:12:11] *** Joins: incognito (~relativit@user/incognito)
[20:12:30] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[20:15:29] <samsch> I am not saying you should use React. React doesn't support latex as far as I know.
[20:16:03] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: Textual IRC Client: www.textualapp.com)
[20:16:19] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[20:17:08] <samsch> You asked for a reason you might not want to use ejs to generate something, that's one of them. If I needed to generate latex I'd look around for a latex-specific generator. However, again, I'm not familiar enough with latex to know how much of a detriment using a non-type-safe string template engine would be for it.
[20:18:10] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 265 seconds)
[20:19:31] *** Jaran|zZZzZZZzz is now known as Jaran
[20:20:13] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[20:21:36] *** Joins: Rockwood (~Rocky@user/rocky)
[20:23:32] *** Quits: cyberbanjo (~malik@2607:fb90:428b:5b32:e82e:8e68:f854:bb1c) (Quit: Konversation terminated!)
[20:23:35] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 252 seconds)
[20:24:07] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:25:22] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:25:50] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:27:13] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:46] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[20:28:12] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:28:45] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[20:30:06] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 260 seconds)
[20:30:43] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[20:30:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[20:31:08] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[20:33:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:33:52] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:34:20] <DnzAtWrk> what's the proper way to encode an href tag output from javascript
[20:34:35] <DnzAtWrk> to prevent code injection
[20:35:29] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:36:08] <GreenJello> DnzAtWrk, the only href-specific thing is checking the protocol
[20:36:24] <DnzAtWrk> I mean to prevent it from messing with html
[20:36:32] <DnzAtWrk> I don't care whether the link is valid
[20:36:53] <earendel> right. use https.
[20:37:08] <GreenJello> depends on your code
[20:37:24] <DnzAtWrk> all other code I output I escape & < > " and ' for
[20:37:25] <GreenJello> also, the protocol is a risk because of the 'javascript:' protocol
[20:37:32] <DnzAtWrk> because that's what someone told me to do a long time ago here
[20:38:03] <GreenJello> yeah, if you're generating html strings those will cover the html issues
[20:38:11] *** Joins: jmft2 (~jmft2@213.31.248.255)
[20:38:16] <DnzAtWrk> Will it work just as well inside href?
[20:38:19] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:38:20] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:38:20] *** Joins: wroathe (~wroathe@user/wroathe)
[20:38:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[20:38:55] <GreenJello> yeah
[20:39:04] <DnzAtWrk> nice, so &amp isn't an issue in urls
[20:39:16] <earendel> but still the javascript inline would be delivered with the document. unless it is on itself injecting or evaling user links.
[20:39:26] <DnzAtWrk> it's fairly dynamic
[20:39:55] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[20:39:59] <earendel> you maybe mean src not href
[20:40:41] <DnzAtWrk> that's for images
[20:41:02] <DnzAtWrk> and audio
[20:41:25] <earendel> dataurls?
[20:41:28] <DnzAtWrk> '                       <th><a href="' + App.Sources._escapeHtml(entry.values[13]) + '"' + App.Sources._escapeHtml(entry.values[12]) + '</a></th>',
[20:41:47] <DnzAtWrk> whups
[20:41:50] <DnzAtWrk> forgot >
[20:42:05] <earendel> so its user input?
[20:42:13] <DnzAtWrk> it's from a csv file
[20:42:44] <earendel> but users create the content.
[20:42:49] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Quit: WeeChat 3.2)
[20:43:17] <DnzAtWrk> coworkers do
[20:44:05] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:44:17] <GreenJello> DnzAtWrk, you should really be using a template langauge
[20:44:37] <GreenJello> you want escaping by default, and readability would be quite nice
[20:44:41] <DnzAtWrk> meh, I just have a local filter
[20:44:47] <DnzAtWrk> I don't want the delay of making server requests
[20:45:05] <DnzAtWrk> Each letter you type changes the filter
[20:45:49] <DnzAtWrk> god I have unresponsive databases and search engines
[20:45:55] <DnzAtWrk> the ones where you type something and there is a massive delay
[20:46:00] <DnzAtWrk> REDDIT
[20:46:20] <DnzAtWrk> I hate*
[20:47:23] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:48:22] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 245 seconds)
[20:49:02] <ezzieyguywuf> in c++ they recently added something like `if(x = tryToGetX()){// use x in here}` is there something similar in javascript?
[20:51:32] *** Joins: nomic (~nomic@185.192.69.176)
[20:51:55] <DnzAtWrk> I honestly don't see why you would
[20:52:00] <DnzAtWrk> it only makes the code harder to understand
[20:52:10] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:52:18] <earendel> a=b=5 ... b=5 .. then a=b ... if x is 'truthy' (check !!x) it will jump into the if block
[20:53:11] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:53:13] <ezzieyguywuf> well, I have something like `let x = tryX(), y = tryY(), z = tryZ(); if(x !== null) { return x;} else if (y != null) { return y;}` etc...
[20:53:39] <ezzieyguywuf> but I guess as I think about it I can just `let x = tryX(); if (x !== null) {return x;} let y = ...`
[20:53:53] <GreenJello> return x ?? y ?? z;
[20:54:00] <ezzieyguywuf> but that's a situation in which I'd want to do the initializiation in the if-statement
[20:54:00] <earendel> that is the value of tryToGetX() is assigned to x.. then x is returned as boolean cast to if expression
[20:54:03] <DnzAtWrk> also, unless you change a value ever, use const
[20:54:08] <ezzieyguywuf> GreenJello: ah dope, I wasn't aware of ??
[20:54:12] <GreenJello> or return tryX() ?? tryY() ?? tryZ()
[20:54:21] <GreenJello> for your second example
[20:54:28] <ezzieyguywuf> earendel: good point thank you (I'm still pretty new to js)
[20:54:35] <DnzAtWrk> what happens if X is 0?
[20:54:38] <DnzAtWrk> Trap card!
[20:54:51] <ezzieyguywuf> hrm?
[20:54:58] <shan> ezzieyguywuf: i'd completely forgotten about ??'s existence too
[20:55:03] <shan> there's a lot of shit in JS damn
[20:55:10] <ezzieyguywuf> lol
[20:55:12] <earendel> wtf is ?? ^^
[20:55:25] <DnzAtWrk> n> null ?? null ?? 3
[20:55:26] <jellobot> (okay) 3
[20:55:28] <shan> i learned only recently after three years of doing js stuff that we have generators and stuff
[20:55:29] <DnzAtWrk> n> 0 ?? null ?? 3
[20:55:30] <jellobot> (okay) 0
[20:55:32] <DnzAtWrk> Ah
[20:55:43] <DnzAtWrk> n> undefined ?? 3
[20:55:43] <jellobot> (okay) 3
[20:55:45] <shan> earendel: return rhs if lhs is null/undefined, otherwise lhs
[20:55:54] <earendel> n> 0 || null || 3
[20:55:55] <jellobot> (okay) 3
[20:56:04] <DnzAtWrk> n> NaN ?? 3
[20:56:05] <jellobot> (okay) NaN
[20:56:10] *** ormaaj2 is now known as ormaaj
[20:56:13] <ezzieyguywuf> hm, I don't see ?? here https://www.w3schools.com/js/js_operators.asp
[20:56:15] <shan> unlike || which returns RHS if lhs is ANY falsy value
[20:56:23] <shan> ezzieyguywuf: that's because w3schools sucks ass
[20:56:23] <DnzAtWrk> Yes, falsy is crappy
[20:56:31] <ezzieyguywuf> shan: hah, what ref should I use?
[20:56:34] <shan> except as a quick reference for DOM functions
[20:56:40] <shan> ezzieyguywuf: can never go wrong with MDN
[20:56:45] <shan> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator
[20:56:47] <ezzieyguywuf> ah, https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators
[20:56:48] <earendel> n>!!NaN
[20:56:48] <jellobot> (okay) false
[20:57:05] <DnzAtWrk> n> !!null??
[20:57:06] <jellobot> (fail) SyntaxError: Unexpected end of input
[20:57:07] <DnzAtWrk> n> !!null??1
[20:57:08] <jellobot> (okay) false
[20:57:14] *** Joins: lalitmee__ (~lalitmee@180.94.33.113)
[20:57:43] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[20:57:50] <ezzieyguywuf> lol, no IE support
[20:57:55] <earendel> added another truthyism to the unpredictable bool casting table of js?
[20:58:06] <silly> !w3schools @ezzieyguywuf
[20:58:06] <jellobot> ezzieyguywuf, w3schools has spent over a decade subverting search engines to appear at the top of search results, and while it *appears* useful for newcomers, it is in fact of very low quality. Try !eloquent, https://github.com/freeCodeCamp/freeCodeCamp, and https://web.archive.org/web/20140102092833/http://www.w3fools.com/
[20:58:10] <shan> someone should make IE JS feature roulette
[20:58:14] <silly> try mdn
[20:58:27] <shan> silly: damn, til !w3schols is a thing
[20:58:28] <earendel> n> [NaN ?? 3, NaN || 3]
[20:58:29] <jellobot> (okay) [ NaN, 3 ]
[20:58:36] <shan> !eloquent
[20:58:36] <jellobot> shan, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[20:58:43] *** Quits: tonelo (~tonelo@host-79-30-17-24.retail.telecomitalia.it) (Quit: Connection closed)
[20:58:56] <shan> oh speaking of a built-in interpreter
[20:58:56] <DnzAtWrk> what was the name of that silly javascript quiz
[20:59:05] <DnzAtWrk> in which you had to understand all the insane quirks in javascript
[20:59:28] <shan> how do i make editable+runnable embeds for dom stuff
[20:59:41] <shan> i want to make a demo site for my new framework
[20:59:58] *** Quits: lalitmee_ (~lalitmee@180.94.32.246) (Ping timeout: 260 seconds)
[21:01:06] <shan> (https://github.com/xyzshantaram/campfire, roast me)
[21:01:29] <earendel> !downunder
[21:03:07] <earendel> i would roast your sister
[21:03:37] <ezzieyguywuf> is it possible to define a function prototype and then the implementation later? this way I can try to keep my more important stuff closer to the top of my file
[21:03:38] <earendel> for some bitcoin.
[21:03:46] <ezzieyguywuf> otherwise I can just separate the helper stuff into a separate module
[21:04:33] *** Joins: thetoloachekid (~ttk@2806:106e:1f:4447:232c:9139:dc9b:1c76)
[21:04:54] <shan> ezzieyguywuf: let foo = (args) => {}; ?
[21:04:59] <earendel> ezzieyguywuf: just dont implement function body.  would be the thread and bubbleegum approach
[21:05:41] <ezzieyguywuf> gotcha - is this a somewhat-idiomatic technique or is it weird?
[21:05:47] <earendel> of course you could try out fancy ide architecture software. then if u find somethig cool. come back to report.
[21:06:11] <ezzieyguywuf> heh?
[21:06:31] <earendel> no. its advanced. good!
[21:07:16] <ezzieyguywuf> dope
[21:07:16] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[21:08:28] <earendel> broader than broadway
[21:10:04] <earendel> n> "" ?? 1
[21:10:05] <jellobot> (okay) ''
[21:10:34] *** Joins: pavonia (~user@user/siracusa)
[21:11:30] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[21:11:32] <earendel> so only null or undefined?
[21:11:38] <ezzieyguywuf> hrm, so in typescript, I ended up with `let f = (x: Arg) => null` then later `f = function(x: Arg): null {//do stuff}`
[21:11:53] <ezzieyguywuf> is `f = function...` the right way to do this?
[21:12:27] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:13:26] <earendel> n> false ?? 1
[21:13:27] <jellobot> (okay) false
[21:14:12] <GreenJello> ezzieyguywuf, this probably isn't going to work with TS
[21:14:23] <ezzieyguywuf> GreenJello: well, as I wrote it out it worked
[21:14:30] <earendel> it would make sense where you need to assert a value.
[21:15:01] <GreenJello> ezzieyguywuf, well, it might work with null, because that's easy to mock
[21:15:14] <earendel> as for predicates you'd go for the boolean values temselves.
[21:15:26] <GreenJello> with more complex return types you can't easily provide them in a mock funciton
[21:15:28] <GreenJello> function*
[21:15:46] <ezzieyguywuf> GreenJello: well, my actual example is `let myFunc = (x: string) => MyType | null;`
[21:16:16] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[21:16:31] <GreenJello> you could just declare the variable with a type and no value, though
[21:16:55] <ezzieyguywuf> `let myFunc = MyType | null`?
[21:16:58] *** Quits: thetoloachekid (~ttk@2806:106e:1f:4447:232c:9139:dc9b:1c76) (Quit: ya me voy a la verga)
[21:16:59] <GreenJello> let myFunc: (x: string) => MyType;
[21:17:18] <GreenJello> ':', no '='
[21:17:35] <GreenJello> and then it'll require that you initialize it before calling it
[21:17:51] <GreenJello> which is probably what you want
[21:18:16] <ezzieyguywuf> ah hah, nice
[21:18:17] <systemfault> That's a lot of work to emulate C in JS.
[21:18:18] <ezzieyguywuf> it is
[21:18:43] <ezzieyguywuf> *shrug* not trying to emulate C, just trying to make my source code more logical with more important stuff closer to the top
[21:19:12] <ezzieyguywuf> hah, turns out I was already using `:` I just mis-typed it in here
[21:19:16] <DnzAtWrk> what hasn't been emulated in js?
[21:19:31] *** Parts: goddard (~goddard@user/goddard) (WeeChat 2.8)
[21:20:27] * wroathe prefers illogical code
[21:20:37] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[21:20:57] <earendel> btw var declarations will always be evaluated as if written on top of scope. same for function statements. (not expressions)
[21:21:08] <DnzAtWrk> hoist the sails!
[21:21:27] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:21:36] <DnzAtWrk> declerations yes, but not initial assignments obviously
[21:21:37] <ezzieyguywuf> earendel: hah, well look at that
[21:21:54] <earendel> n> f() + 3; function f() { return 39; };
[21:21:55] <jellobot> (okay) 42
[21:21:58] <ezzieyguywuf> so the only thing I lose is the documentation of the forward-decl, but maybe that's notsobad
[21:22:07] <wroathe> Man. It's been a long time since I used Slack, but now that I look at the App Store reviews for it it's really gone downhill
[21:22:17] <DnzAtWrk> n> i = 1; let i; i;
[21:22:17] <jellobot> (fail) ReferenceError: Cannot access 'i' before initialization
[21:22:18] <wroathe> I remember back in 2015 it was basically like the gold standard
[21:22:18] <earendel> n> f() + 3; var f=function() { return 39; };
[21:22:19] <jellobot> (fail) TypeError: f is not a function
[21:22:21] <DnzAtWrk> right
[21:22:26] <DnzAtWrk> still doesn't like that
[21:22:26] <earendel> see
[21:22:27] <ezzieyguywuf> especially since `let myFunc: (x: string) => MyType;` ended up compiling fine even if I never defined `myFunc`
[21:22:28] <earendel> yw
[21:22:51] <DnzAtWrk> n> i = 1; var i; i;
[21:22:52] <jellobot> (okay) 1
[21:22:58] <DnzAtWrk> n> i = 1; i;
[21:22:59] <jellobot> (okay) 1
[21:23:04] <earendel> exactly.
[21:23:40] <earendel> n> 'use strict'; i=1; var i;
[21:23:41] <jellobot> (okay) 1
[21:23:49] <earendel> n> 'use strict'; i=1; i;
[21:23:50] <jellobot> (fail) ReferenceError: i is not defined
[21:24:02] <DnzAtWrk> or just use modules
[21:24:15] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[21:24:24] <wroathe> ezzieyguywuf: type MyFunc = (x: string) => number; ... let x: MyFunc = x => Number(x);
[21:24:38] <wroathe> ezzieyguywuf: Use type aliases to create your "interface", instead of using let bindings.
[21:24:46] <ezzieyguywuf> or just use modules
[21:24:51] <wroathe> ezzieyguywuf: And, actually, don't use "let" here
[21:25:01] <wroathe> ezzieyguywuf: type MyFunc = (x: string) => number; ... const x: MyFunc = x => Number(x);
[21:25:10] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[21:25:29] <wroathe> ezzieyguywuf: Well, modules declarations get automatically generated by the typescript compiler in most cases
[21:25:37] <wroathe> ezzieyguywuf: It would be a pain to maintain them separately
[21:26:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0f7-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:26:23] <earendel> actually var x does nothing else as announce not to write to a possible x outside of scope .. similar to argument name in function.
[21:27:28] <systemfault> wroathe: Discord is just better than Slack at this point if you want an easy to use client with a ton of features.
[21:27:57] <wroathe> systemfault: Well, the kubernetes community has apparently decided to use slack
[21:27:58] <earendel> thats when u need it. for nothing else. in non strict mode, if x is not declared in outerscope it will be assigned to global object.
[21:28:12] <wroathe> systemfault: That said, it's a bit sad. Slack was one of the first to market, and now they're apparently languishing
[21:28:43] <systemfault> wroathe: Oh yeah, for sure... people who decided to use Slack a few years ago won't migrate to Discord unless they have no choice
[21:29:08] <wroathe> systemfault: They lost $150 million in 2019
[21:29:27] <ljharb> discord is in no way better than slack
[21:29:31] <wroathe> systemfault: Like I said, I remember back in 2015 Slack was the gold standard
[21:29:31] <ljharb> discord's UX is horrific
[21:29:47] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[21:29:47] <ljharb> discord is *chosen* more than slack because it doesn't have crippled premium features
[21:29:58] <earendel> gitter is 100% lynx compatible
[21:30:00] <Rockwood_> o/
[21:30:40] <Sven_vB> hi :) how do I check in a browser whether x is a Set or Map? I guess instanceof would not detect Sets and Maps from other frames?
[21:31:20] <GreenJello> I'm sure ljharb has a package for this
[21:32:25] <GreenJello> Sven_vB, https://www.npmjs.com/package/is-map
[21:32:42] <Sven_vB> indeed is-map and is-set exist. I had hope for more basic solutions. I'll check their source.
[21:34:30] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[21:35:59] <ljharb> Sven_vB: a more basic solution is not possible
[21:36:46] *** Joins: salad1 (~cucumber@82.76.148.128)
[21:36:46] *** Quits: salad (~cucumber@82.76.148.128) (Read error: Connection reset by peer)
[21:37:07] <Sven_vB> yeah. fortunately I have some additional guarantees about those values, which might allow me to use a heuristic.
[21:37:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:39:41] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:40:51] *** Joins: thetoloachekid (~ttk@2806:106e:1f:4447:232c:9139:dc9b:1c76)
[21:42:33] <ezzieyguywuf> I ended up doing modules
[21:46:13] <ljharb> Sven_vB: sure but you could also just use the package and not have to think about it :-)
[21:46:46] *** Parts: _hack_ (~hack@user/realhack) (Textual IRC Client: www.textualapp.com)
[21:47:06] <Sven_vB> oh, are they UMD?
[21:47:54] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[21:52:08] <ezzieyguywuf> I write my opening { on a newline. and I use 4-space tabs. am I going to be shot?
[21:52:14] *** Quits: _banana_ (~banana_@2603-6000-b500-9ce3-15e5-61bf-984a-f208.res6.spectrum.com) (Ping timeout: 260 seconds)
[21:52:53] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[21:53:38] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 260 seconds)
[21:54:47] *** Joins: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be)
[21:55:15] *** Joins: han-solo (~hanish@103.104.47.44)
[21:55:59] *** Quits: han-solo (~hanish@103.104.47.44) (Client Quit)
[21:56:46] *** Joins: han-solo (~hanish@user/han-solo)
[21:57:44] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 265 seconds)
[22:03:37] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[22:05:59] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:06:35] *** Joins: ttys000 (~ttys000@user/ttys000)
[22:07:02] *** Joins: Guest359 (~maldinipa@156.146.63.148)
[22:07:45] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[22:09:51] *** Quits: grkblood13 (~grkblood1@76.73.249.123) (Read error: Connection reset by peer)
[22:10:55] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[22:10:59] *** Joins: AMPed (~user@ip72-217-90-246.ph.ph.cox.net)
[22:12:09] *** Quits: nomic (~nomic@185.192.69.176) (Quit: Leaving)
[22:12:34] <Rockwood_> good night
[22:12:36] <Rockwood_> cya
[22:12:41] <Rockwood_> tc all
[22:12:45] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[22:12:49] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:14:58] *** Joins: grkblood13 (~grkblood1@76.73.249.123)
[22:16:46] *** Quits: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be) (Ping timeout: 252 seconds)
[22:18:42] *** Quits: systemfault (sid267009@id-267009.highgate.irccloud.com) (Read error: Connection reset by peer)
[22:18:48] *** Quits: jwpapi (sid502614@highgate.irccloud.com) (Ping timeout: 250 seconds)
[22:18:50] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Ping timeout: 260 seconds)
[22:19:06] *** Quits: SrPx (sid108780@highgate.irccloud.com) (Read error: Connection reset by peer)
[22:19:08] *** Quits: Puyo (sid500577@user/puyo) (Read error: Connection reset by peer)
[22:19:13] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[22:20:33] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[22:21:16] *** Joins: onizu (uid373383@highgate.irccloud.com)
[22:21:21] *** Joins: SrPx (sid108780@id-108780.highgate.irccloud.com)
[22:22:22] *** Joins: systemfault (sid267009@id-267009.highgate.irccloud.com)
[22:22:33] *** Joins: Puyo (sid500577@user/puyo)
[22:22:36] *** Joins: jwpapi (sid502614@id-502614.highgate.irccloud.com)
[22:22:39] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:23:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[22:23:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[22:24:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:27:14] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[22:27:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:27:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:27:56] *** Joins: wroathe (~wroathe@user/wroathe)
[22:30:36] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[22:31:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[22:31:09] *** Joins: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com)
[22:31:32] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[22:35:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:37:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[22:38:46] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:10bb:6889:5d26:46b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:47] *** Joins: linguist (~brunodOut@170.84.57.235)
[22:39:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:10bb:6889:5d26:46b)
[22:40:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[22:40:47] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:41:31] *** Joins: xsperry (~as@user/xsperry)
[22:41:33] *** Joins: brunodOut (~brunodOut@170.84.57.235)
[22:42:58] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:43:34] *** Joins: cachew[m] (~cachewmat@2001:470:69fc:105::e886)
[22:45:20] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[22:45:26] *** Quits: linguist (~brunodOut@170.84.57.235) (Ping timeout: 260 seconds)
[22:47:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2.1)
[22:49:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:49:25] *** Joins: guest_ (~babesfla@143.244.52.27)
[22:51:13] *** Joins: lalitmee_ (~lalitmee@180.94.32.150)
[22:53:16] *** Quits: babesfla (~babesfla@cicada-host.pilsfree.net) (Ping timeout: 256 seconds)
[22:53:22] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:53:46] *** Quits: lalitmee__ (~lalitmee@180.94.33.113) (Ping timeout: 252 seconds)
[22:54:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:54:15] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:54:15] *** Joins: wroathe (~wroathe@user/wroathe)
[22:55:30] *** Joins: kapil (~kapil@o-k.website)
[22:56:06] <silly> ezzieyguywuf, yes. shot. it's terrible, both of it. instead of 4-space tabs, just use tab-tabs and just try your opening curly brackets in new lines when returning objects from functions...
[22:57:17] *** Joins: daoudr (~daoudr@178.197.200.90)
[22:58:24] <daoudr> I've completed on codewars first kata on level 8 (kyu8) and when I clicked on next kata I got offered kyu6 instead of kyu7. why they jumped 2 steps in difficulty at once?
[22:58:28] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:59:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[22:59:18] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:59:48] *** Quits: kapil (~kapil@o-k.website) (Client Quit)
[23:00:21] *** Joins: kapil (~kapil@o-k.website)
[23:04:13] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[23:04:40] <shan> https://bin.readthedocs.fr/eimisc.ts how effective is this?
[23:05:02] *** Quits: thetoloachekid (~ttk@2806:106e:1f:4447:232c:9139:dc9b:1c76) (Quit: ya me voy a la verga)
[23:05:45] <shan> oh i guess i should do the & replacement first
[23:06:07] *** Quits: salad1 (~cucumber@82.76.148.128) (Quit: salad1)
[23:07:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[23:08:47] *** Joins: Betal (~Betal@user/betal)
[23:09:05] *** Joins: gehn (~gehn@user/gehn)
[23:10:47] <shan> oh and lt should be gt the second time
[23:10:50] <shan> ffs
[23:11:36] *** Joins: bgpepi (~quassel@ip-83-134-114-91.dsl.scarlet.be)
[23:12:41] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:17:45] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[23:21:14] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:21:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:22:13] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 252 seconds)
[23:24:41] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:26:48] *** Joins: thetoloachekid (~ttk@2806:106e:1f:4447:232c:9139:dc9b:1c76)
[23:28:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:28:23] *** Joins: Guest32 (~Guest32@63.146.155.7)
[23:29:31] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[23:31:19] <shan> so if something is matched by both include and exclude in tsconfig.json which takes preference?
[23:32:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[23:33:59] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[23:39:34] <GreenJello> I would guess exclude, but try it and see?
[23:44:38] *** Joins: g00fy7 (~g00fy@user/g00fy)
[23:45:09] <ezzieyguywuf> silly: dang, so I'm dead now.
[23:45:59] *** Joins: Heraes (~Heraes@user/romarain)
[23:46:10] *** Quits: g00fy (~g00fy@user/g00fy) (Ping timeout: 240 seconds)
[23:46:10] *** g00fy7 is now known as g00fy
[23:46:22] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[23:47:10] <ezzieyguywuf> shan: https://www.typescriptlang.org/tsconfig#exclude
[23:47:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:47:31] <shan> GreenJello: exclude won, yes
[23:47:35] <ezzieyguywuf> exclude is specifically only intended to negate something in include
[23:47:48] <shan> awesome
[23:48:10] <ezzieyguywuf> I guess if it is in exclude but is not in include, then nothing happens
[23:48:24] <ezzieyguywuf> (at least that's my interpretation of the docs)
[23:52:10] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[23:53:13] *** Joins: tex (~super@user/dix)
[23:53:34] *** Joins: Guest63 (~Guest63@ufr-132-230-194-126.eduroam-nat.uni-freiburg.de)
[23:58:53] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
