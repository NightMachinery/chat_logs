[00:01:42] <FromDiscord> <Zoom> K. Bear with me for a moment. See, the question in the way you formulated it looks like either you wanted to know a bit more than you asked or you don't completely understand how embedding things into your program works.↵(@hmmm)
[00:02:36] <FromDiscord> <Zoom> Slurping files with text data into your program is absolutely the same thing as storing the text directly inside your code, and modules don't matter.
[00:03:45] <FromDiscord> <hmmm> hmm basically it's really about like 2 paragraphs of strings, I can do it both ways I said or the boring one that is putting them down to disk. What I wanted to know is what for experienced programmers feels more natural since I have no idea of what looks normal and what looks weird as fug lol
[00:11:13] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 250 seconds)
[00:13:29] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[00:32:59] <FromDiscord> <Rika> one or the other looks weird as fuck in differing circumstances
[00:36:05] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:46:01] *** Joins: rez (~rez@user/rez)
[02:05:05] <FromDiscord> <tandy> yes, this work happens directly in nodejs lib now↵(@ajusa)
[02:05:14] <FromDiscord> <tandy> me and juan are main users of js backend it seems lol
[02:05:46] <FromDiscord> <tandy> use -d\:danger↵(@ajusa)
[02:05:55] <FromDiscord> <tandy> and closure compiler
[02:06:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:08:57] <FromDiscord> <tandy> i hope to have a big enough brain to be able to work on jsgen one day
[02:09:15] <FromDiscord> <Elegantbeef> Well when you get that brain feel free to clean it up 😛
[02:09:44] <FromDiscord> <Elegantbeef> One of my PRs caused a jsgen issue and i had some grand adventure making it generate the code properly
[02:13:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:14:04] <FromDiscord> <Elegantbeef> Damn for some reason my app launcher fails to launch some applications and i have 0 clue why
[02:25:02] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:f996:6b1c:bdf9:4370)
[02:25:25] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:26:52] *** Quits: rez (~rez@user/rez) (Quit: much snoozes...)
[02:29:04] <FromDiscord> <Phil> The pains people go through are fascinating
[02:29:22] <FromDiscord> <Elegantbeef> What do you mean?
[02:30:11] <nrds> <06Prestige99> Making an app launcher?
[02:32:51] <FromDiscord> <Phil> In reply to @Elegantbeef "What do you mean?": The pain of dealing with a js backend, meaning you get all the complexity of the original problem you wanted to solve, but now you also have to understand the conversion of your code to js if issues arise.↵↵That becomes moot ofc once the backend becomes so flawless you'll have all js features and no bugs, but until then dealing with compiling to js seems like a pain
[02:33:51] <FromDiscord> <Phil> (edit) "In reply to @Elegantbeef "What do you mean?": The pain of dealing with a js backend, meaning you get all the complexity of the original problem you wanted to solve, but now you also have to understand the conversion of your code to js if issues arise.↵↵That becomes moot ofc once the backend becomes so flawless you'll have all js features and ... no" 03added "(in practical use)"
[02:36:42] <FromDiscord> <Elegantbeef> It's a subset of Nim that compiles to JS and the jsgen is only like 3k loc
[02:37:09] <FromDiscord> <Elegantbeef> There is actually a complexity reduction going to JS instead of C since JS provides a ton of what you have to generate code for
[02:37:48] <FromDiscord> <Elegantbeef> The most complex thing about the jsbackend is the pointer/value emulation
[02:38:36] <FromDiscord> <Phil> Wait, nim manages to encompass the entirety of js fictionality in a compiler with just 3k loc?
[02:38:50] <FromDiscord> <Elegantbeef> jsgen.nim is roughly 3k loc
[02:38:52] <FromDiscord> <Phil> Functionality, damn you phone
[02:39:14] <FromDiscord> <Elegantbeef> Jsgeneration is the final path of Nim -\> JS
[02:39:46] <FromDiscord> <Elegantbeef> It's only a subset of Nim that can compiler to JS, but like i said going to JS is generally less complex than C/C++
[02:41:40] <FromDiscord> <Elegantbeef> From my recollection the most confusing part is how things how addressing goes in JS things like `ref T` appear as an array of a single element that's T
[02:41:57] <FromDiscord> <Phil> I mean that last bit I never would have doubted, my base assumption would just have been that the js backend would be more likely to contain bugs than the c /cpp path since I would assume one gets significantly more attention than the other
[02:42:25] <FromDiscord> <Elegantbeef> Well JS is also tested
[02:42:32] <FromDiscord> <Phil> But that was before I became aware that the complexity of the js backend is that much less
[02:44:10] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/959214046081593405/image.png
[02:45:14] <FromDiscord> <Recruit_main707> i swear vscode highlight issues with nim make me want to hang myself, how come the most used editor by far has the worst highlighting
[02:45:36] <FromDiscord> <Phil> Not that I want to express that going to js is easy, I just thought it only a minor league below going to c /cpp
[02:45:39] <FromDiscord> <Elegantbeef> Cause it doesnt have semantic highlighting
[02:46:07] <nrds> <06Prestige99> Beef do you know much about asyncdispatch in Nim? I have a collection of files that are downloading at the same time, I want to wait for all futures to complete
[02:46:20] <FromDiscord> <Recruit_main707> its wonky af either way
[02:46:25] <FromDiscord> <Elegantbeef> I know how it works and how to use it, i dont know how best to use it
[02:46:31] <FromDiscord> <Phil> Vscode has bad highlighting? I mean, the suggestions are terrible, but the highlighting seemed alright
[02:46:34] <FromDiscord> <Elegantbeef> Just use kate with nimlsp and be merry 😛
[02:49:04] <FromDiscord> <Recruit_main707> sent a code paste, see https://paste.rs/2Us
[02:50:08] <FromDiscord> <Recruit_main707> this kind of stuff only happens with nim
[02:50:21] <FromDiscord> <Phil> Can't watch that right now because phone but will lauter
[02:50:24] <FromDiscord> <Phil> I think
[02:50:51] <FromDiscord> <Phil> Assuming I don't forget
[02:50:57] <FromDiscord> <auxym> I don't have too many gripes with highlighting in vs code. What I miss the most is good completion... not sure if the issue is the extension or nimsuggest (I assume the latter), but autocomplete for python and c++ is like 10X better than nim in vsc
[02:51:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:51:26] <FromDiscord> <auxym> In reply to @Isofruit "Vscode has bad highlighting?": yeah that, I agree
[02:51:52] <FromDiscord> <Phil> I don't generally like Java, but damn if the suggestions there aren't really damn good
[02:52:35] <nrds> <06Prestige99> oh man I found this finally https://nim-lang.org/docs/asyncfutures.html#all%2Cvarargs%5BFuture%5BT%5D%5D
[02:52:36] <nrds> <06Prestige99> sweet
[02:53:49] <FromDiscord> <auxym> if java (and c#) win at one point it's definitely IDE support. refactoring support is also magic (in IDEA at least), and same with support for find usages / go to definition, and debugging is really good too
[02:54:29] <FromDiscord> <Phil> Though I guess generics, templates and macros throw a bit of a wrench into good auto completion
[02:55:28] <FromDiscord> <Elegantbeef> Yea prestige I manually implemented it just to mock you 😛 https://play.nim-lang.org/#ix=3TY1
[02:55:30] <FromDiscord> <Phil> I'm not sure how one would know if specific function exists pre compilation if you only know they're there after compilation
[02:55:42] <FromDiscord> <auxym> meh, I can't even get nimsuggest to complete pure enums most of the time, I'd settle for good completion except macros
[02:56:00] <nrds> <06Prestige99> I manually implemented it to, then found it immediately after. lol
[02:56:23] <FromDiscord> <Elegantbeef> Not really with UFCS and the fact the compiler knows they exist↵(@Phil)
[02:56:31] <FromDiscord> <WintonMc_twitter (WintonMc)> Pasando a saludar a todos
[02:56:34] <FromDiscord> <WintonMc_twitter (WintonMc)> me encanta el lenguaje
[02:57:01] <FromDiscord> <Elegantbeef> `doThing(a: SomeOrdinal)` when doing `doThing(` can show all symbols that are `SomeOrdinal` in scope
[02:57:36] <FromDiscord> <Elegantbeef> Macros, templates, and generics do not change basic procedure matching
[02:58:13] <FromDiscord> <Elegantbeef> Yea prestige i knew it existed but couldnt remember where it was
[02:58:17] <FromDiscord> <Phil> In reply to @Elegantbeef "Not really with UFCS": Then it's the only reason that we don't have good auto complete the fact that nobody is ~~masochistic~~ valiant enough to write is?!
[02:58:36] <FromDiscord> <Phil> (edit) "it's" => "is" | "is?!" => "it?!"
[02:58:45] <FromDiscord> <Phil> What a terrible fate!
[02:59:02] <FromDiscord> <Elegantbeef> Nimsuggest is relatively untouched
[02:59:47] *** Quits: gsalazar (~gsalazar@132.120.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[03:00:13] <FromDiscord> <Elegantbeef> There is an issue with how flexible Nim is for suggestions though
[03:00:23] <FromDiscord> <Elegantbeef> say you're doing `proc doThing(a: `
[03:00:48] <FromDiscord> <Elegantbeef> Any template/macro that returns `untyped` and `typeOf` are validd there
[03:01:45] <FromDiscord> <Elegantbeef> So it  should suggest all types, typeof, any template/macro that returns untyped
[03:02:39] <FromDiscord> <Elegantbeef> Though we could say it has to be all procedures that return `typedesc` and just all types in scope
[03:05:48] <FromDiscord> <Elegantbeef> Be the brave soul and go make it better 😛
[03:07:18] <nrds> <06Prestige99> Hm something weird is going on with futures.all
[03:08:56] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3TY3 it's getting stuck if I do more than 1 future
[03:09:13] <nrds> <06Prestige99> but if I only have 1 entry in the table, no matter which, it works fine
[03:09:55] <nrds> <06Prestige99> https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/asyncfutures.nim#L468 when T is void, wonder if there's something wrong here or if my code is not right
[03:10:56] <nrds> <06Prestige99> Doesn't that if statement on 493 look fishy? Like if any of these fail, would it actually exit the `all` proc?
[03:12:04] <FromDiscord> <Elegantbeef> Jesus you're using a table for this
[03:12:49] <nrds> <06Prestige99> it's going to get even worse, because a lot of these are symlinks on github I'll have to resolve, to find the actual files...
[03:13:19] <FromDiscord> <Elegantbeef> I'm mostly joking just cause there isnt any value with the present code with a table
[03:13:26] <nrds> <06Prestige99> hell maybe I'll just make a step that renames and tar's them
[03:13:48] <nrds> <06Prestige99> then I only have 1 download anyway
[03:13:50] <FromDiscord> <Generic> sent a code paste, see https://play.nim-lang.org/#ix=3TY5
[03:14:17] <FromDiscord> <Elegantbeef> You're using a single client for 4 requests
[03:14:21] <FromDiscord> <Elegantbeef> I dont know if that's valid
[03:14:26] <FromDiscord> <Generic> it will be in the next release with a few more highliting fixes
[03:14:58] <nrds> <06Prestige99> since it's an async client I thought it could handle multiple connections. But anyway, I think I don't need to do this, now
[03:15:48] <FromDiscord> <Elegantbeef> Also do you actually need the Key -\> val relation? 😛
[03:16:11] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3TY6 anyway joke aside this works for this demo
[03:16:14] <nrds> <06Prestige99> well I won't anymore
[03:16:34] <nrds> <06Prestige99> ah so the issue was multiple clients eh
[03:17:29] <FromDiscord> <Elegantbeef> Hey "eh" is my word
[03:17:38] <FromDiscord> <Elegantbeef> You have your words like burgers and freedom fries
[03:19:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:19:25] <nrds> <06Prestige99> I'm all over the place man
[03:23:17] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:60b7:1d07:d71a:f982) (Remote host closed the connection)
[03:48:52] *** Joins: nullsh (nullsh@user/nexeq)
[04:32:58] <FromDiscord> <Goat> Using pararules feels like I'm using some sort of internal database inside of Nim itself
[04:33:36] <FromDiscord> <Goat> Reminds me of Picolisp's integrated database
[05:10:03] <FromDiscord> <auxym> yeah zach's talk was really interesting. out of curiosity, are you using pararules for a game or something else?
[05:28:05] <FromDiscord> <Goat> I am considering using it for another game that isn't NimHack but right now I'm making a simple note managing thign with it to learn the ropes
[05:30:30] <FromDiscord> <Elegantbeef> Anyone have any more entries  for TMWN?
[05:49:25] *** Joins: neurocyte8614 (~neurocyte@user/neurocyte)
[05:51:32] *** Quits: neurocyte861 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[05:51:33] *** neurocyte8614 is now known as neurocyte861
[06:05:13] *** Quits: lumo_e (~enrico@151.29.53.201) (Ping timeout: 256 seconds)
[06:14:54] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:17:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[06:18:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:19:23] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[06:36:28] <FromDiscord> <grubarb> Hi, I'm new here and want to get more involved with the nim language, I have a use case to make a CLI and was wondering if Nim has any popular CLI frameworks like Click in Python?
[06:37:49] <FromDiscord> <Elegantbeef> https://github.com/c-blake/cligen is generally the goto nim CLI helper
[06:38:10] <FromDiscord> <Goat> Nim also has a port of docopt
[06:40:34] <FromDiscord> <Goat> https://github.com/docopt/docopt.nim
[06:40:53] <FromDiscord> <grubarb> awesome, thanks
[06:42:39] <FromDiscord> <huantian> https://github.com/iffy/nim-argparse↵argparse is also a decent one
[06:43:18] <FromDiscord> <ajusa> Nim doesn't have anything for gRPC right, just protobuf? I did a quick search and noticed there was a forum thread related to this recently
[06:43:51] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/959274363633426452/image.png
[06:44:49] <FromDiscord> <ajusa> Rip, thanks for the fairly conclusive answer
[06:45:33] <FromDiscord> <Elegantbeef> Just only use Nim and modify my RPC API
[06:46:02] <FromDiscord> <ajusa> But I want to use protocol buffers
[06:46:15] <FromDiscord> <Elegantbeef> I'm joking
[06:47:25] <FromDiscord> <ajusa> this is a slightly crazy route I'm taking, but rather than writing an openapi -> Nim library, turns out there is already openapi -> protobuf/gRPC. I can get all the types from that using the status library, but was making sure nobody already had a gRPC library.
[06:47:49] <FromDiscord> <ajusa> also I'll have something for TMWN next month probably
[07:00:43] <FromDiscord> <Goat> whats tmwn?
[07:00:56] <FromDiscord> <huantian> This Month With Nim
[07:00:57] <FromDiscord> <huantian> I think
[07:01:04] <FromDiscord> <Elegantbeef> This month with nim, a monthly collection of projects and libraries in development with Nim
[07:02:44] <FromDiscord> <Goat> Ah
[07:03:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:12:12] <nrds> <06Prestige99> hmm
[07:12:26] <FromDiscord> <Elegantbeef> mmh
[07:12:34] <nrds> <06Prestige99> Maybe I should submit something to that, sometime
[07:12:34] <FromDiscord> <huantian> hrmm
[07:13:04] <FromDiscord> <Elegantbeef> Perhaps
[07:16:33] *** Joins: s3govesus (~johns@072-176-163-168.res.spectrum.com)
[07:27:20] <FromDiscord> <Patitotective> shouldn't `a += 1` be a template for `a = a + 1`?
[07:27:37] <FromDiscord> <Patitotective> so i don't have to define a `+=` proc, only a `+` proc
[07:28:19] <FromDiscord> <Elegantbeef> You know you can do that right?
[07:28:43] <FromDiscord> <Patitotective> yea but, shouldn't that be the default behaviour?
[07:28:49] <FromDiscord> <Patitotective> (edit) "behaviour?" => "behavior?"
[07:29:07] <FromDiscord> <Patitotective> or is there some reason for not doing that
[07:29:12] <FromDiscord> <Elegantbeef> Do you always want a `+=` if `+` is defined is something i'd ask, perhaps i dont know
[07:31:37] <FromDiscord> <Patitotective> hmm, i think i get what are you saying↵maybe it should be in an additional useful templates stdlib
[07:32:57] <FromDiscord> <Patitotective> (edit) "hmm, i think i get what are you saying↵maybe it should be in an additional useful templates stdlib ... " 03added "(?)"
[07:33:27] *** Quits: s3govesus (~johns@072-176-163-168.res.spectrum.com) (Remote host closed the connection)
[08:16:55] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[08:18:41] <LuxuryMode> What are the best options for writing REST APIs in Nim. I've seen httpbeast, but not sure what else is out there. 
[08:19:50] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=rest I dont know anything about rest apis so can only point you here
[08:20:17] <LuxuryMode> Thanks
[08:20:40] <LuxuryMode> Looks like I missed jester https://github.com/dom96/jester which is built on top of httpbeast
[08:29:08] <FromDiscord> <spoon> ye, jester is great
[08:36:17] *** Quits: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113) (Ping timeout: 246 seconds)
[08:43:06] *** Joins: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113)
[08:43:22] <NimEventer> New thread by KerryC: Define proc that is called from imported module, see https://forum.nim-lang.org/t/9063
[08:46:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:51:47] <FromDiscord> <huantian> You might also find more info somewhere in the webdev channel↵(<@709044657232936960_=4cuxury=4dode=5b=49=52=43=5d>)
[09:24:46] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:f996:6b1c:bdf9:4370) (Read error: Connection reset by peer)
[09:45:10] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:21:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[10:37:38] <NimEventer> New thread by Araq: SiSix and Nim, see https://forum.nim-lang.org/t/9064
[11:18:17] *** Joins: PMunch (~PMunch@user/pmunch)
[11:20:07] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[11:43:27] *** Joins: gsalazar (~gsalazar@132.120.90.149.rev.vodafone.pt)
[11:48:43] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[12:04:23] <FromDiscord> <aph> is there a nim thing similar to this: https://docs.python.org/3/library/struct.html/ btw
[12:04:36] <FromDiscord> <aph> i wanna rewrite a parser or smth
[12:05:32] <PMunch> binaryparse/binarylang are both similar
[12:05:44] <FromDiscord> <aph> hmm, thanks! will look into it
[12:05:47] <FromDiscord> <aph> (edit) "it" => "it!"
[12:06:15] <PMunch> There's apparently also a struct module based off-on the Python one: https://github.com/OpenSystemsLab/struct.nim
[12:06:41] <FromDiscord> <aph> 👀
[12:06:45] <FromDiscord> <aph> nice, thanks!
[12:39:54] <FromDiscord> <qb> How would I convert a bytestring to a seq[byte] again? https://play.nim-lang.org/#ix=3TZE
[12:40:15] <FromDiscord> <qb> (edit) "bytestring" => "hex byte string"
[12:40:26] <FromDiscord> <Elegantbeef> you can cast it back
[12:41:19] <PMunch> @qb, why are you converting it to a string in the first place?
[12:41:48] <PMunch> To get that back you'd need a parser
[12:43:34] <FromDiscord> <qb> I'm still on my byte pattern scan thingy. I actually want to pass a hex byte string to that function and compare it to a huge seq[byte]. Casting that huge seq[byte] pages to a hex byte string leads into performance issues
[12:44:54] <FromDiscord> <Elegantbeef> `toOpenArray`?
[12:47:22] <FromDiscord> <Elegantbeef> I dont see why you need to cast it to anything
[12:50:10] <PMunch> @qb, what you should do instead is convert the small pattern to a seq[byte] instead and then write your pattern scanning based on seq[byte] instead
[12:50:54] <FromDiscord> <qb> Yea that's what I'm trying to do 😄
[12:51:14] <FromDiscord> <qb> So all I need is actually convert a byte hex string to a seq[byte]
[12:51:30] <FromDiscord> <Elegantbeef> What's a "byte hex string" in this case?
[12:51:40] <PMunch> "FA 05 7B"
[12:51:46] <FromDiscord> <qb> cast[string](seq[byte]).toHex()
[12:51:46] <FromDiscord> <Elegantbeef> Ah ok
[12:52:19] <FromDiscord> <Elegantbeef> This is a scanning algo?
[12:52:42] <PMunch> A loop with https://nim-lang.org/docs/strutils.html#parseHexInt%2Cstring where you first check if the two next characters are "??" should get you where you need
[12:53:03] <PMunch> Of course you'd need some way to store ?? positions
[12:53:51] <PMunch> @Elegantbeef, yes, from a previous paste they want to specify a pattern like "FA ?? 05 7B" and then pass in a sequence of bytes and find the first index which matches that.
[12:53:54] <FromDiscord> <qb> Yea I'm reading memory pages from a process and want to scan that memory with patterns. I'm currently using regex and casting the huge pages into string.toHex(). https://github.com/qb-0/PyMeow/blob/master/src/windows/memory.nim#L141
[12:54:09] <FromDiscord> <qb> Which performs pretty bad
[12:54:31] <PMunch> No surprise there :P
[12:54:51] <FromDiscord> <Elegantbeef> Ah ok
[12:54:57] <FromDiscord> <Elegantbeef> Yea dont use regex everererer 😛
[12:55:00] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:910b:bc27:5f67:53d3)
[12:55:07] <FromDiscord> <Elegantbeef> I'm kidding, pmunch put the pitchfork away
[12:55:26] <PMunch> Haha :P
[12:55:45] <PMunch> By the way, why did you close my Futhark this month in Nim thing?
[12:56:49] <FromDiscord> <Elegantbeef> Why do  you think
[12:56:57] <FromDiscord> <Elegantbeef> I added it and submitted the PR
[12:57:04] <PMunch> Ah right :P
[12:57:13] <PMunch> That's what I expected, just wanted to make sure
[12:57:25] <FromDiscord> <Elegantbeef> qb personally i'd use an iterator for this
[12:58:54] <PMunch> Just make sure not to do the parsing every iteration
[13:02:07] <FromDiscord> <Elegantbeef> Fill in the blank 😛
[13:02:12] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3TZJ
[13:02:52] <FromDiscord> <Elegantbeef> I'd personally make the needle a `seq[Option[byte]]`
[13:03:18] <FromDiscord> <Elegantbeef> pmunch you use arch right?
[13:09:21] <PMunch> Yup
[13:10:19] <FromDiscord> <Elegantbeef> wouldnt want to quickly try to cross compile a owlkettle program would you?
[13:10:27] <PMunch> Sure
[13:11:35] <FromDiscord> <Elegantbeef> You need the mingw-gtk3.0 package(which debian doesnt have, which is why i'm interested in seeing if it is simpler when it's there), but here's the code https://play.nim-lang.org/#ix=3TZL
[13:12:28] <FromDiscord> <Elegantbeef> I did find a bund of the build libraries, and compiled with it, but it didnt run so figured the setup i used was less than ideal
[13:18:17] <PMunch> Okay, installing that package and the trillion dependencies it has now
[13:18:21] <PMunch> Just give me a minute
[13:19:05] <FromDiscord> <Elegantbeef> Always weird hearing someone ask for time when they're doing something they could've said "no" to 😛
[13:40:44] <FromDiscord> <aph> which IDE do yall use for nim?
[13:41:14] <FromDiscord> <Elegantbeef> I'm presently using Kate with the Nimlsp as my editor, prior i was using vscodium and saem's extension
[13:41:31] <FromDiscord> <aph> hmm
[13:42:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[13:42:48] <FromDiscord> <Elegantbeef> hmm indeed
[13:45:03] <FromDiscord> <aph> meh, i'ma use the `cat` command to write nim files
[13:45:15] <FromDiscord> <Elegantbeef> Have fun
[13:47:06] <FromDiscord> <aph> "fun"
[13:50:43] <PMunch> I use Vim
[13:50:55] <PMunch> At least use sed :P
[13:51:09] <FromDiscord> <Elegantbeef> Just use echo and pipe to a file
[14:07:39] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3TZQ
[14:10:32] <FromDiscord> <Tanguy> sent a code paste, see https://play.nim-lang.org/#ix=3TZR
[14:11:22] <FromDiscord> <hmmm> lol you are right, I returned at the wrong ident point 😃
[14:11:23] <FromDiscord> <Zoom> It literally says what the matter is. Wording isn't great (you can read that "or" as "code after ... {.noReturn.} proc" ?)
[14:15:11] <FromDiscord> <hmmm> ah guys if I have a path C:\\thing\\file.jpg is there some strutils facility to get the dir C:\\thing
[14:18:11] <FromDiscord> <hmmm> oh we have os splitfile
[14:37:11] <FromDiscord> <enthus1ast> Do you have your vim config up somewhere?↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[14:37:46] <FromDiscord> <enthus1ast> I've only rudimentary nim support in my (n)vim
[14:38:28] <PMunch> Hmm, not really, but there's nothing secret in there so I can share it
[14:39:05] <PMunch> http://ix.io/3TZV
[14:39:27] <PMunch> Obviously a lot of stuff there which isn't Nim related
[14:40:19] <NimEventer> New thread by Didlybom: Choosing the nim installation folder used by choosenim, see https://forum.nim-lang.org/t/9065
[14:47:42] <FromDiscord> <Phil> beeeeeef (ElegantBeef), I've got a constructor question because I'm getting unexpected behaviour
[14:55:38] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3U01
[15:23:21] <PMunch> Hmm, I just Ctrl+z to put Vim in the background, then run whatever Nim command I need
[15:23:28] <PMunch> Then fg to bring it back
[15:27:23] <FromDiscord> <fbpyr> ahh.. so that was the "magic" 🪄 ✨ I saw in the aoc streams.. 🙂
[15:27:44] <PMunch> Magic?
[15:28:03] <PMunch> Oh when Vim just suddenly disappeared and reappeared?
[15:28:37] <FromDiscord> <fbpyr> exactly - well, the reappearing I understood, as I saw `fg`
[15:28:59] <FromDiscord> <fbpyr> but not the ctrl+z
[15:29:09] <PMunch> Yeah seeing people edit in Vim can be a bit confusing sometimes :P
[15:29:49] <PMunch> By the way, ctrl+z works for anything, have a long running process you want to pause for a while? Ctrl+z
[15:29:58] <PMunch> Want to see running tasks in your shell? jobs
[15:30:18] <PMunch> Want to resume a specific one? fg %2
[15:30:29] <PMunch> Send the current task to the background? bg
[15:30:47] <FromDiscord> <fbpyr> ah nice - thanks for the hint! so far I only hit ctrl+z accidentally.. 😂
[15:31:03] <PMunch> Haha :P
[15:31:28] <PMunch> By the way, background tasks will still write to the terminal, if you want to stop that you can use `disown -h %1`
[15:31:41] <PMunch> The % numbers are the numbers from `jobs`
[15:33:06] <FromDiscord> <fbpyr> cool! 🙂 now I need to figure out how to use this neat trick with my preferred terminal editor `micro`
[15:33:41] <FromDiscord> <fbpyr> ..it has ctrl+z mapped to undo.. 🙂
[15:33:54] <FromDiscord> <fbpyr> will fiddle with the keybindings..
[15:34:11] <PMunch> Ah yeah that won't work :P
[15:34:35] <FromDiscord> <Zoom> I tried to autocmd my Vim for Nim but was not entirely successful and was  tired of quickedit popping up. So, back to ctrl-z
[15:54:31] <NimEventer> New thread by Veksha: [Karax] "include" statement doesn't work correctly inside karax DSL, see https://forum.nim-lang.org/t/9066
[16:24:20] <PMunch> Soo, I just turned this into a library: https://github.com/PMunch/autotemplate
[16:33:04] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3U0m
[16:33:56] <FromDiscord> <Zoom> You don't have a name for your tuple argument
[16:33:57] <FromDiscord> <hmmm> ohhhhhhhhh
[16:33:59] <FromDiscord> <exelotl> sent a code paste, see https://play.nim-lang.org/#ix=3U0n
[16:34:00] <FromDiscord> <hmmm> ty
[16:34:48] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:51] <FromDiscord> <Rika> Imagine using burger though
[16:37:58] <FromDiscord> <hmmm> you know what, I'm using burger in production, and leaving a comment #ty exelotl, no one can stop me from doing what is right 😄
[16:42:31] <FromDiscord> <Zoom> Threading question. I'm passing a basic typed variable to some threads for signalling. The vars are written only by a parent thread and only accessed for reads by all other threads. Am I correct, that using `Atomic` is enough for this, and I can omit locking the vars?
[16:44:35] <FromDiscord> <Zoom> Also, not having explicit ownership or at least views make the code frail, if I ever forget the "one writer multiple readers" relationship.
[16:45:22] <FromDiscord> <Rika> In reply to @Zoom "Threading question. I'm passing": Sounds good to me
[16:50:43] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[16:52:48] <PMunch> Yeah that should be fine
[17:08:02] <FromDiscord> <Zoom> The more robust alternative for one-time signal would be waiting on a channel, with non-blocking `tryRecv`, am I right? Since we can't just open/close our impl, what would be the optimal dummy stuff to send? A bool?
[17:08:25] <FromDiscord> <Zoom> We can't use `void` for this...
[17:09:50] <PMunch> Sending a bool over a channel would certainly also work
[17:10:03] <PMunch> Although that probably has a bit more overhead than just setting an atomic bool
[17:19:10] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:910b:bc27:5f67:53d3) (Remote host closed the connection)
[17:26:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:33:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[17:34:59] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:f996:6b1c:bdf9:4370)
[17:37:03] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Client Quit)
[17:39:36] *** Joins: rockcavera (~rc@192.12.112.192)
[17:39:36] *** Quits: rockcavera (~rc@192.12.112.192) (Changing host)
[17:39:36] *** Joins: rockcavera (~rc@user/rockcavera)
[17:41:44] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:f996:6b1c:bdf9:4370) (Read error: Connection reset by peer)
[17:46:03] *** Joins: arkurious (~arkurious@user/arkurious)
[17:49:35] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[17:51:11] *** Joins: xet7 (~xet7@user/xet7)
[18:12:43] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:24:22] <NimEventer> New Nimble package! gimg - Google Images scraper lib and CLI, see https://gitlab.com/lurlo/gimg
[18:25:15] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[18:27:57] <PMunch> @Elegantbeef, I'm unable to install the package because the Gnome gitlab instance is currently down..
[18:31:23] <nrds> <06Prestige99> autotemplate looks cool PMunch
[18:31:34] <PMunch> Thanks :)
[18:32:56] <PMunch> It's quite a simple idea, now we only need automatic parsing of requests into types and we can have fully type-safe routes :)
[18:33:49] <PMunch> That is the idea behind this, you would write routes which return a type, not some formatted string. Then the logic for how to turn a type into a formatted string is done via templates
[18:34:04] <PMunch> Of course it could be used for anything, not only web servers
[18:34:16] <FromDiscord> <mratsim> In reply to @PMunch "<@145405730571288577>, I'm unable to": Mmmmh I tried to install a gnome package last weekend and it was already down
[18:34:52] <PMunch> I want to add Nimja support as well, but I'm not sure how I'd do it without requiring Nimja as an import
[18:35:13] <PMunch> Maybe I'll just give the user the ability to pass in any block as the formatter
[18:35:23] <PMunch> @mratsim, really? That's a bit strange
[18:36:25] <nrds> <06Prestige99> hm there aren't any nim "linters" are there?
[18:36:32] <nrds> <06Prestige99> or am I oblivious
[18:37:17] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:37:48] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:39:57] <PMunch> Depends on how you define linter I guess
[18:42:09] <nrds> <06Prestige99> looking for something that can enforce code style; like tell it to use camel case, maximum line length, etc
[18:42:28] <nrds> <06Prestige99> Wonder how crazy of a project it would be to try making a very useful linter..
[18:43:03] <FromDiscord> <enthus1ast> on windows everything (vim at least) will crash↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[18:43:24] <PMunch> nim c --styleCheck:hint project
[18:43:31] <PMunch> I believe that should give you some style hints
[18:44:17] <PMunch> There's also nimpretty
[18:44:27] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[18:44:52] <nrds> <06Prestige99> oh hmm
[18:45:33] <PMunch> @enthus1ast, Vim crashes on Windows?
[18:45:47] <FromDiscord> <Rika> In reply to @nrds "<Prestige> Wonder how crazy": Difficult as of now
[18:45:57] <PMunch> Oh well, I've gotta go
[18:45:58] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:45:59] <FromDiscord> <Rika> Style check isn’t a complete check naturally
[18:46:42] <nrds> <06Prestige99> hm would be nice to see these via nimlsp actually. The styleChecks
[18:46:47] <FromDiscord> <enthus1ast> windows cannot do this (is it sighub?) so on ctrl+z vim will suspend somehow, but can never be re awakened
[18:47:06] <FromDiscord> <enthus1ast> so on windows i mapped ctrl+z to noop
[18:58:35] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 246 seconds)
[19:01:04] <FromDiscord> <ShalokShalom> @PMunch: May you say something about that?
[19:01:05] <FromDiscord> <ShalokShalom> https://invent.kde.org/utilities/kate/-/merge_requests/680/diffs
[19:01:23] <FromDiscord> <ShalokShalom> Or somebody else, who knows. Its about including Kate LSP support for Nim by default. Thanks
[19:01:45] <FromDiscord> <ShalokShalom> (edit) "Kate" => "Nim" | "Nim" => "Kate"
[19:01:58] <FromDiscord> <hmmm> sent a code paste, see https://paste.rs/jpa
[19:02:16] <FromDiscord> <ShalokShalom> That is the kind of type declaration code smell I mean
[19:02:48] <FromDiscord> <ShalokShalom> Basically renders the top lines close to unreadable 😦
[19:12:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:13:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:13:33] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:17:59] <FromDiscord> <PMunch> @ShalokShalom if a user has added `.nimble/bin` to their path (as they should do) then just `nimlsp` will suffice
[19:19:02] <FromDiscord> <PMunch> And about that type declaration, definitely not a great way of doing it, that should just return an object..
[19:19:10] <nrds> <06Prestige99> oh he's back
[19:19:35] <FromDiscord> <PMunch> And realistically `burger` should just be replaced by `result`
[19:19:53] <FromDiscord> <ShalokShalom> I have nimble/bin in my PATH and VSCode cant find it
[19:20:15] <FromDiscord> <ShalokShalom> In reply to @PMunch "And about that type": I see these types of things all over the place
[19:20:34] <FromDiscord> <ShalokShalom> I mean, if types could be at least added on top of the actual function, I could look clean.
[19:20:40] <FromDiscord> <ShalokShalom> But that mess..
[19:21:24] <FromDiscord> <ShalokShalom> Its just not very elegant.
[19:21:45] <FromDiscord> <PMunch> Well then create an issue for VSCode, stuff in the PATH should be executable..
[19:21:57] <FromDiscord> <PMunch> On top?
[19:21:57] <FromDiscord> <ShalokShalom> Normal Nim code never goes that long and convoluted.
[19:21:58] <FromDiscord> <hmmm> burger is not negotiable since it's exy creation 🧐
[19:22:24] <FromDiscord> <ShalokShalom> In reply to @PMunch "On top?": Like Haskell
[19:22:37] <FromDiscord> <PMunch> @hmmm I'm pretty sure he'd agree it should be changed to result. His original example was an argument called burger
[19:23:03] <FromDiscord> <PMunch> Sorry, not that familiar with Haskell syntax
[19:23:12] <nrds> <03DarthOreo99> o/ Prestige
[19:23:18] <nrds> <06Prestige99> Hey DarthOreo, welcome
[19:23:23] *** Joins: vsantana (~Thunderbi@189.40.65.92)
[19:23:47] <FromDiscord> <Rika> ah you're back
[19:24:05] <FromDiscord> <ShalokShalom>  https://media.discordapp.net/attachments/371759389889003532/959465683702399017/Screenshot_79.png
[19:24:12] <FromDiscord> <Rika> In reply to @hmmm "ok boys the burger": i really think your tuple should be an object
[19:24:20] <FromDiscord> <ShalokShalom> The first line is the type declaration
[19:24:33] <FromDiscord> <ShalokShalom> So you get your own line for your type declarations
[19:24:47] <FromDiscord> <ShalokShalom> Instead of squeezing them into your code
[19:24:53] <FromDiscord> <Solitude> not once i've see you in this chat and you werent hardcore trolling
[19:25:01] <FromDiscord> <ShalokShalom> Thanks a lot
[19:25:04] <FromDiscord> <ShalokShalom> My pleasure
[19:25:08] <FromDiscord> <ShalokShalom> blushing
[19:25:18] <FromDiscord> <Solitude> respect
[19:25:40] <FromDiscord> <ShalokShalom> I can only give this back
[19:26:37] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:20] <FromDiscord> <hmmm> In reply to @Rika "i really think your": ty rika, but I'm wondering, what is the way the chaining two objects of the same kind? add or & or somth?
[19:28:32] <FromDiscord> <Rika> what do you mean chaining
[19:28:42] <FromDiscord> <hmmm> like you chain 2 seqs with &
[19:28:47] <FromDiscord> <Rika> yes
[19:29:01] <FromDiscord> <Rika> objects are not something you chain, you cant chain tuples either
[19:29:05] <FromDiscord> <Rika> theyre not "collections"
[19:29:09] <FromDiscord> <hmmm> hmm
[19:29:10] <FromDiscord> <hmmm> I see
[19:29:41] <FromDiscord> <hmmm> what about the fields of the objects?
[19:29:46] <FromDiscord> <hmmm> I can chain the same fields?
[19:30:25] <FromDiscord> <hmmm> can I
[19:30:39] <FromDiscord> <hmmm> lol english is failing me today harder than usual (and the usual is bad)
[19:31:27] <FromDiscord> <huantian> I mean there’s nothing stopping you from `myObj.someSeq & otherObj.someSeq`
[19:31:39] <FromDiscord> <hmmm> yea I was thinking the same
[19:34:08] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:2dac:47e:c172:e4b9)
[19:35:01] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[19:35:10] *** Joins: oprypin (~irc@pryp.in)
[19:41:47] *** Quits: vsantana (~Thunderbi@189.40.65.92) (Ping timeout: 260 seconds)
[19:43:49] <FromDiscord> <Rika> if theyre seqs/collections sure
[19:43:57] <FromDiscord> <Rika> what does it mean to chain objects?
[19:53:07] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[19:56:08] <FromDiscord> <PMunch> @ShalokShalom well I mean you can kinda do it with `using` https://nim-lang.org/docs/manual.html#statements-and-expressions-using-statement
[20:00:29] <NimEventer> New Nimble package! userdef - A more advanced adduser for your Alpine based Docker images., see https://github.com/theAkito/userdef
[20:10:01] *** Quits: lumidify (~lumidify@user/lumidify) (Remote host closed the connection)
[20:23:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:35:38] *** Joins: lumidify (~lumidify@user/lumidify)
[20:38:20] <FromDiscord> <slymilano> What is the recommended way to schedule and run background jobs in Nim? Something like Rails' sidekiq
[20:42:18] *** Quits: gsalazar (~gsalazar@132.120.90.149.rev.vodafone.pt) (Ping timeout: 260 seconds)
[20:43:26] *** Joins: rez (~rez@user/rez)
[20:45:39] <FromDiscord> <willyboar> maybe https://github.com/soasme/nim-schedules
[21:02:26] <nrds> <03DarthOreo99> i managed to get my bot to connect with sasl on nim 
[21:02:35] <nrds> <03DarthOreo99> now it nees logic lol.
[21:02:42] <nrds> <03DarthOreo99> vs sending raw commands to do it.
[21:02:51] <FromDiscord> <Rika> what does your bot do
[21:02:59] <nrds> <03DarthOreo99> absolutely NOTHING!
[21:03:00] <nrds> <03DarthOreo99> lol
[21:03:06] <nrds> <03DarthOreo99> sorry.  &help
[21:03:08] <nrds> <03DarthOreo99> thats it
[21:03:10] <nrds> <11sorcerer99> LOL
[21:03:27] <nrds> <03DarthOreo99> its a "START!"
[21:03:31] <nrds> <11sorcerer99> he means nothing yet, we'll find a use for it
[21:03:32] <nrds> <11sorcerer99> :P
[21:03:44] <nrds> <03DarthOreo99> send sheep to CT 24/7
[21:03:59] <nrds> <11sorcerer99> lol i mean, we could make a ascii trigger for sheep
[21:04:06] <nrds> <11sorcerer99> and cue it when computertech chats
[21:04:08] <nrds> <11sorcerer99> lolol
[21:07:15] <FromDiscord> <Rika> i didnt know teenagers still used irc
[21:08:23] <nrds> <06Prestige99> nice, bout time someone added sasl support
[21:08:36] <nrds> <03DarthOreo99> 0.4.1 irc lol
[21:08:39] <nrds> <03DarthOreo99> now with sasl!
[21:08:45] <nrds> <03DarthOreo99> XD
[21:08:57] <nrds> <03DarthOreo99> aleast works with unreal :)
[21:17:42] *** Joins: xet7 (~xet7@user/xet7)
[21:25:40] <FromDiscord> <exelotl> what happened to ircord :thonkang:
[21:27:11] <FromDiscord> <Rika> what about? this is a different bot
[21:27:22] <FromDiscord> <Rika> its discord <> irc <> another irc server
[21:27:45] <FromDiscord> <Rika> discord <-ircord-> irc <-nrds-> another irc server
[21:27:56] <FromDiscord> <exelotl> oh.. I thought nrds was a person lol
[21:28:46] <FromDiscord> <exelotl> (a person whos name had accidentally gotten "stuck" as the name of the bot, like what happens when you use Ripcord)
[21:29:04] <FromDiscord> <Rika> i see
[21:29:48] <FromDiscord> <exelotl> In reply to @hmmm "burger is not negotiable": I'm honoured lmao
[21:29:59] <nrds> <11sorcerer99> oh no, nerds is my irc network
[21:30:01] <nrds> <11sorcerer99> lol
[21:30:07] <nrds> <11sorcerer99> well irc-nerds to be precise
[21:30:32] <nrds> <11sorcerer99> i started it to gather nerds of all sorts and get a nice nerdy and/or social chats going on
[21:30:43] <nrds> <11sorcerer99> real goal was to help newbies in like linux
[21:31:12] <nrds> <11sorcerer99> im trying to expand with getting people to host their home channels on the network
[21:31:32] <nrds> <11sorcerer99> i got a few devs, and the linux distro; Garuda Linux, are hosted here so far
[21:37:09] <nrds> <03DarthOreo99> im a nerd in training.. code wise.. 
[21:37:14] <nrds> <03DarthOreo99> more admin of sorts :)
[21:39:18] <FromDiscord> <gerwy> guys i have a problem and i wonder how to solve it
[21:39:45] <FromDiscord> <gerwy> basically, lets say that i need to store some sort of virtual variables↵i know their name, their type and default value or value assigned to them
[21:39:52] <nrds> <11sorcerer99> im just the fearless skill-less leader ;x
[21:40:50] <FromDiscord> <gerwy> now question is, how would i store them? I thought of having a Table with their names as indexes, but that would be hard to do with multiple types of variables in one table or make it super big↵sooo, what about making that variable in nim and storing a pointer to it? Is it possible?
[21:40:56] <FromDiscord> <Rika> oh ok
[21:41:07] <FromDiscord> <Rika> i didnt actually know what network that bot bridged to
[21:41:20] <FromDiscord> <Rika> ~~not that i cared either, not really something to care too much about honestly~~
[21:41:54] <FromDiscord> <Rika> In reply to @Life Sucks "now question is, how": think of a different solution before resorting to pointers
[21:41:58] <nrds> <03DarthOreo99> now ya do \m/
[21:42:11] <FromDiscord> <Rika> pointer is almost never the correct option btw
[21:42:17] <FromDiscord> <federico3> the april fool is just... weird...
[21:42:55] <nrds> <06Prestige99> What do you mean federico3?
[21:43:08] <Amun-Ra> gerwy: like tables?
[21:43:59] <FromDiscord> <gerwy> In reply to @Rika "pointer is almost never": but for variables it sounds reasonable ://
[21:44:23] <FromDiscord> <Rika> have you tried an object variant?
[21:44:44] <FromDiscord> <Rika> if you know all of the types you can use object variants
[21:44:55] <FromDiscord> <gerwy> In reply to @Amun-Ra "<@347345994217816066>: like tables?": can they store multiple types of data instead of the one specified when declaring it?↵Like i know i could do [string,int] to store ints but what for otherse
[21:45:00] <FromDiscord> <gerwy> (edit) "otherse" => "others"
[21:45:59] <FromDiscord> <Rika> In reply to @Rika "have you tried an": can you look into this?
[21:46:14] <Amun-Ra> gerwy: I think I misunderstood your question
[21:46:15] <FromDiscord> <gerwy> In reply to @Rika "have you tried an": hmm well i thought of having like a Variable, tuple, that will store its actual type (in enum) and value, and the value would be another tuple with all the types i have, like int, float, string, char etc↵all of them being null except the type that the variable actually use with the value for this
[21:46:23] <FromDiscord> <gerwy> Buuut it sounds like it could be a pretty big...
[21:46:28] <FromDiscord> <gerwy> or idk
[21:46:34] <FromDiscord> <Rika> you know whats bigger? dealing with pointers
[21:46:55] <FromDiscord> <gerwy> In reply to @Rika "can you look into": yeah i will, it sounds like something i should do from the start heh, but i don't understand it fully
[21:47:13] <FromDiscord> <gerwy> In reply to @Rika "you know whats bigger?": maybe, dangerous coding is my second name
[21:47:15] <FromDiscord> <Rika> now you have to deal with manual memory and you still have to figure out how to determine what type it is
[21:47:29] <FromDiscord> <Rika> theres no reason here in my opinion
[21:47:32] <FromDiscord> <Rika> to use pointers
[21:47:35] <FromDiscord> <Rika> absolutely none
[21:47:46] <FromDiscord> <gerwy> i mean, they could have been GC'd and i would know which type it is when having a type specified as an enum
[21:48:01] <FromDiscord> <Rika> tell me how that would go
[21:48:06] <FromDiscord> <Rika> oop?
[21:48:12] <FromDiscord> <Rika> that's more annoying to me
[21:48:14] <FromDiscord> <Rika> but you do you ig
[21:48:34] <FromDiscord> <gerwy> no, more like having a table with ID's of variables and that tuple i talked about
[21:48:48] <FromDiscord> <Solitude> what the hell is he talking  about
[21:48:52] <FromDiscord> <gerwy> well idk, i will look into Object variants, its a Nim feature or is it like a universal thing among languages?
[21:49:20] <FromDiscord> <Solitude> https://nim-lang.org/docs/manual.html#types-object-variants
[21:49:28] <FromDiscord> <Rika> its a not-so-popular feature across languages
[21:49:35] <FromDiscord> <Rika> the more used name is "tagged union"
[21:50:00] <FromDiscord> <gerwy> oooh you mean the case thingy in object
[21:50:13] <FromDiscord> <gerwy> In reply to @Rika "the more used name": yeah yeah, my friend recommended it to me but i had no idea its this thing
[21:50:41] <FromDiscord> <gerwy> okay i might use it since its exactly what i want, enum of type and the value of that exact type
[21:50:47] <FromDiscord> <gerwy> and nim docs literally show it as an example hah
[21:51:03] <FromDiscord> <gerwy> Thaaanks Rika
[21:52:03] <Amun-Ra> mind you can only set the type during object creation
[21:53:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:53:33] <FromDiscord> <gerwy> yeah but i need to do it run-time, i have no idea what type its gonna be
[21:53:52] <Amun-Ra> that's not a problem
[21:55:14] <FromDiscord> <Rika> you cant do `thingy.kind = tInt` it has to be like `thingy = MyThing(kind: tInt)`
[21:58:34] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:02:04] <FromDiscord> <kevin> For Nimscript tasks is there anything special you need to do to run them?
[22:02:16] <FromDiscord> <kevin> I thought it was just `./script.nims <taskname>`
[22:02:43] <FromDiscord> <Rika> `nim e script.nims`
[22:02:54] <FromDiscord> <Rika> or do you mean nimble tasks?
[22:03:00] <FromDiscord> <kevin> nimscript tasks
[22:03:00] <FromDiscord> <Rika> nimble tasks go in the nimble file
[22:03:12] <FromDiscord> <Rika> theres no such thing as a "nimscript task" its just a file
[22:03:27] <FromDiscord> <Rika> its like nim code but run on the nimscript vm
[22:04:20] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3U1M
[22:04:25] <FromDiscord> <kevin> `./build.nims windows`
[22:04:31] <FromDiscord> <kevin> I think I have this all wrong
[22:05:33] <FromDiscord> <kevin> Maybe I have to parse the nimscript args manually and then call the appropriate tasks
[22:05:44] <FromDiscord> <kevin> I thought nimscript tasks did that for you though
[22:12:05] <FromDiscord> <Rika> nimble tasks
[22:12:17] <FromDiscord> <Rika> where did you hear of "nimscript tasks"
[22:15:46] <FromDiscord> <Solitude> In reply to @Rika "where did you hear": https://nim-lang.org/docs/nimscript.html#task.t%2Cuntyped%2Cstring%2Cuntyped one such place
[22:16:02] <FromDiscord> <Rika> let me look
[22:16:25] <FromDiscord> <Rika> oh this is for the config.nims
[22:18:20] <FromDiscord> <Rika> yeah i think this is for config.nims
[22:18:21] <FromDiscord> <Solitude> sent a code paste, see https://paste.rs/HHD
[22:19:25] <FromDiscord> <kevin> ahhhhh okay
[22:45:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[22:49:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Client Quit)
[23:04:02] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:2dac:47e:c172:e4b9) (Ping timeout: 260 seconds)
[23:04:08] *** Joins: DixieFlatline (~soryu@vps46179.public.cloudvps.com)
[23:05:08] <DixieFlatline> A bit of an amateur question: what is the meaning for arrays of arrayName.high ? I've looked and I can't quite find what it means
[23:05:14] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:910b:bc27:5f67:53d3)
[23:07:41] <FromDiscord> <auxym> it's the highest index in the array
[23:08:15] <FromDiscord> <auxym> so eg `arrayName[arrayName.high]` is the last element
[23:11:06] <DixieFlatline> Oh, so if it were C, it's like... array.high is equivalent to sizeof(array(maxLen)-1) [if the array is null terminated, or otherwise terminated]
[23:11:28] <DixieFlatline> erm
[23:12:14] <DixieFlatline> I forgot to cast but yeah, same sort of idea.
[23:14:47] <DixieFlatline> @Auxym: it returns the last element's indice, I assume from how I'm seeing it used.
[23:16:50] <DixieFlatline> if(inBits >= 13) or (i == inArray.high):
[23:19:06] <DixieFlatline> returns it as a integer, I mean. bounds checking it would appear
[23:27:53] <FromDiscord> <auxym> yes, but in Nim array indices can have arbitrary start and end, or even use enums as indices. https://nim-lang.org/docs/tut1.html#advanced-types-arrays
[23:33:41] <FromDiscord> <Rika> DixieFlatline: i see, a vocaloid fan
[23:36:03] *** Quits: rez (~rez@user/rez) (Quit: much snoozes...)
[23:36:51] *** Joins: rez (~rez@user/rez)
[23:38:28] *** Joins: vicfred (~vicfred@user/vicfred)
[23:38:48] <DixieFlatline> @Auxym : interesting feature
[23:38:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[23:39:53] <DixieFlatline> @Rika I'm afraid I didn't catch that at all. Are you a Higurashi no Naku Koro Ni fan?
[23:40:16] <FromDiscord> <Rika> oh, i believe theres also a producer using that name, might be correlated
[23:41:05] <FromDiscord> <kevin> Anyone run into errors trying to cross compile a Nim binary for `--cpu=i386`?
[23:41:19] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3U2a
[23:41:24] <FromDiscord> <Rika> oh this thing again
[23:41:29] <FromDiscord> <kevin> sorry! 😦
[23:41:31] <FromDiscord> <Rika> no no
[23:41:44] <FromDiscord> <kevin> this is my first time seeing this error
[23:41:47] <FromDiscord> <Rika> its more like we meet again, nim-c int error
[23:42:03] <FromDiscord> <Rika> it means the c compiler and nim dont agree with integer size
[23:42:12] <FromDiscord> <Rika> or pointer size
[23:42:31] <FromDiscord> <Rika> but idk why that happens since you set the cpu in nim anyway, might need to also set the compiler to a 32 bit one
[23:42:35] <FromDiscord> <Rika> (edit) "but idk why that happens since you set the cpu in nim anyway, ... might" 03added "you"
[23:42:43] <FromDiscord> <Rika> (edit) "but idk why that happens since you set the cpu in nim anyway, you might need to also set the ... compiler" 03added "c"
[23:43:28] <FromDiscord> <kevin> Looks like it's just using the standard `gcc` binary in my path
[23:43:38] <FromDiscord> <kevin> Doesn't gcc have an option for i386 already?
[23:43:43] <FromDiscord> <kevin> (edit) "i386" => "i386/x86"
[23:43:58] <FromDiscord> <Rika> not sure
[23:44:09] <FromDiscord> <Rika> ive never tried 32 bit compiling
[23:44:47] *** Quits: rez (~rez@user/rez) (Quit: much snoozes...)
[23:47:25] <FromDiscord> <auxym> quick google search yields `-m32` argument to gcc. maybe try adding `--passC:-m32` to your nim command line. Unfortunate though, I would've thought nim would have added that automatically based on the cpu option
[23:47:53] <FromDiscord> <auxym> maybe `passL` too
[23:48:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:49:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:49:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:53:23] *** Joins: kenran (~kenran@200116b82bd9b000bb30ac8fe29496f8.dip.versatel-1u1.de)
[23:56:19] <FromDiscord> <qb> any vcc optimization flags you guys know?
[23:59:19] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3U2d
