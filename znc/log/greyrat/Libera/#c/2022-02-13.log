[00:00:53] <SamuelMarks> Ok it's definitely after the memcpy but before it goes through the loop again back to running `bytes = read(…`
[00:01:44] <SamuelMarks> which means it's doing something in the outer while(true) I guess? - Or the OS itself is interrupting
[00:03:30] <clarity> I bet it's the memcpy but I'll let you find out
[00:08:00] <SamuelMarks> Literally did `puts("b4 memcpy");                 memcpy(*response + total_bytes, pipe_buf, bytes);                 puts("l8 memcpy");` and I got `l8 memcpy` in the console *before* it hung
[00:09:37] <clarity> What if you comment out the memcpy?
[00:12:03] <Xgc> SamuelMarks: Undefined behavior can do that.
[00:12:18] <SamuelMarks> :(
[00:12:54] <Xgc> SamuelMarks: If you overrun a buffer, anything could be corrupted, leaving the program in a very bad state.
[00:14:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:16:27] <NRK> I'd use a different variable for the while condition instead of overloading "bytes" btw
[00:18:01] <clarity> The condition seems kinda bogus anyway
[00:18:28] <clarity> .. but I'm not going there now
[00:24:50] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:26:16] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[00:26:40] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8039)
[00:26:59] <clarity> And they're gone again :_
[00:27:09] <clarity> I wonder what they're developing on
[00:27:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:27:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:27:29] *** Joins: wroathe (~wroathe@user/wroathe)
[00:28:06] *** Joins: ravella (~ravella@user/ryanavella)
[00:30:32] <NRK> earth, i would bet
[00:33:20] *** Joins: kts_ (~kts@103.73.237.228)
[00:33:50] *** Quits: kts_ (~kts@103.73.237.228) (Client Quit)
[00:34:55] *** Joins: kts_ (~kts@103.73.237.228)
[00:35:01] *** Quits: kts_ (~kts@103.73.237.228) (Client Quit)
[00:35:09] <ioxzev1z> Not entirely sure why people bother with plain sockets when there are so many good libraries around
[00:35:39] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:35:39] <ioxzev1z> Something that handles buffers such that you can simply read_line() rather than working on the (possibly broken) input yourself
[00:35:48] <SamuelMarks> clarity / NRK - What's a better solution
[00:36:05] <SamuelMarks> ioxzev1z - Just reconnected if you were messaging me
[00:36:24] <ioxzev1z> SamuelMarks, find a library that does what you want so you can actually make progress rather than reinventing (for the millionth time) another plain socket read loop.
[00:37:02] *** Quits: kts (~kts@103.73.237.228) (Ping timeout: 256 seconds)
[00:37:13] <SamuelMarks> The platform support I want is a little too extensive so I'm worried about that. Not to mention it increasing the build time, debug complexity, and binary package size
[00:37:40] <SamuelMarks> Also it's a chance to learn C and how to work with sockets in C
[00:38:19] <clarity> You need to learn to debug this, did you figure out the hang yet?
[00:38:35] <SamuelMarks> Xgc - So what should the `memcpy` be?
[00:39:08] *** Joins: Klinda (~superleag@user/klinda)
[00:39:26] <SamuelMarks> clarity - Well it must be an overrun, ^ he said that it's UB so that's why the `puts` didn't show me the issue
[00:39:49] <clarity> So you confirmed that memcpy is the problem?
[00:39:53] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 250 seconds)
[00:40:40] <SamuelMarks> the only things I'm doing in that loop that could possibly hang are `realloc` and `memcpy` but my debugger doesn't tell me where it hangs, let me run through the debugger again
[00:42:34] <SamuelMarks> There's no hang when I run it through the debugger, probably because I'm slow enough that the hang can't occur
[00:43:10] <NRK> SamuelMarks:  i like that learning mindset.
[00:43:39] *** Joins: kts (~kts@103.73.237.228)
[00:43:40] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[00:44:04] <clarity> SamuelMarks: So another thing I proposed is that you comment out any suspect code.  If you comment out everyhting except read and the loop condition, does it still hang?
[00:44:08] <SamuelMarks> The other thing is I'm probably off by 1 continuously because I want one extra byte for my NUL - const size_t new_size = total_bytes + bytes + 1;
[00:44:48] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[00:44:48] <clarity> Or, alternatively, comment out memcpy and see if it still hangs.  If it still hangs, comment out more.. until you're left with nothing that you can comment out.
[00:47:43] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[00:48:11] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:54:14] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[00:54:55] <De4n_Whit3> ChoHag thank you for looking at my code. It was actually intended for ski who wanted to take a look at it.
[00:55:20] <De4n_Whit3> I was attending a documentary streaming by the university sorry ski for being gone so long.
[00:55:23] *** Joins: tforever (~Terabyte@85.103.104.1)
[00:55:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:55:29] *** Quits: Hawker (~Hawker@user/hawker) (Ping timeout: 256 seconds)
[00:56:46] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[00:57:12] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[00:57:43] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e5c7:6df3:aa9d:dffa)
[01:01:07] *** Joins: tforever_ (~Terabyte@85.103.104.1)
[01:03:06] *** Quits: tforever_ (~Terabyte@85.103.104.1) (Client Quit)
[01:04:06] *** Quits: tforever (~Terabyte@85.103.104.1) (Ping timeout: 272 seconds)
[01:04:24] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[01:04:45] *** Joins: korg815 (~korg815@user/korg815)
[01:06:25] <Xgc> De4n_Whit3: Add more detail to the puts before the memcpy.  Show addresses, sizes, bytes, etc.  Everything you need to know to determine if those values appear sane.  Remember, you could have undefined behavior well before the memcpy and the mess isn't noticed until now.
[01:06:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:07:26] <Xgc> De4n_Whit3: Also, do you know the state of response before the call to serve?
[01:07:32] <De4n_Whit3> Xcg thanks. I tried to make a smaller sample program for merge sort purpose only for ski. I already submitted my assignment. If there are optimizations for my merge sort I am all ears.
[01:07:38] <clarity> :D
[01:07:39] <De4n_Whit3> I don't know what that means. Xgc
[01:07:44] <clarity> Wrong person
[01:07:47] <De4n_Whit3> I am like... so new to all this.
[01:08:08] <De4n_Whit3> Thanks clarity you are fast.
[01:08:30] <Xgc> De4n_Whit3: You seem to assume *response means something before this function (serve) is called.
[01:08:38] <clarity> Xgc: You're talking to SamuelMarks
[01:08:54] <Xgc> Oh. Sorry.  SamuelMarks
[01:09:04] <De4n_Whit3> clarity oh my god lol. I was so confused I'm like wait... what did I miss up this time.
[01:09:42] <De4n_Whit3> Until tomorrow!
[01:09:48] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[01:09:55] <Xgc> De4n_Whit3: Picked the wrong nick.
[01:10:25] <Xgc> SamuelMarks: Stepping away.  Check my comments.
[01:12:00] *** Quits: savolla (~quassel@95.10.239.64) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:12:26] *** Joins: wroathe (~wroathe@user/wroathe)
[01:12:47] *** Joins: AmR (~AmREiSa@41.46.119.250)
[01:13:14] <Xgc> SamuelMarks: The one call I see looks ok.
[01:14:27] *** Quits: AmR (~AmREiSa@41.46.119.250) (Client Quit)
[01:16:11] *** Joins: savolla (~quassel@95.10.239.64)
[01:16:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:17:50] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[01:18:23] *** Joins: z4kpi (~z4kpi@user/zacts)
[01:18:35] *** Quits: z4kpi (~z4kpi@user/zacts) (Client Quit)
[01:18:45] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:19:43] *** Joins: AmR (~AmREiSa@102.44.191.232)
[01:20:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:20:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:21:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[01:22:29] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:23:47] *** Joins: jsmolic (~quassel@gentoo/developer/jsmolic)
[01:24:52] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com)
[01:24:52] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[01:24:57] *** Quits: hiovoltage (~hiovoltag@176.88.87.168) (Quit: Client closed)
[01:25:06] *** Joins: tforever (~Terabyte@85.103.104.1)
[01:25:09] *** Quits: tforever (~Terabyte@85.103.104.1) (Client Quit)
[01:25:22] *** Joins: tforever (~Terabyte@85.103.104.1)
[01:25:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[01:26:12] *** Quits: savolla (~quassel@95.10.239.64) (Remote host closed the connection)
[01:28:17] <Xgc> SamuelMarks: >> if (new_size > current_size) {  ... when would that ever be false, with your current logic?
[01:29:41] <Xgc> SamuelMarks: :)  You should just add +1 to every calculation.
[01:29:51] <Xgc> s/calculation/expression/
[01:30:12] <Xgc> It seems to be a favorite thing to do.
[01:30:21] *** Joins: analognoise (~analognoi@185.229.59.36)
[01:31:23] *** Quits: analognoise (~analognoi@185.229.59.36) (Max SendQ exceeded)
[01:31:52] *** Joins: analognoise (~analognoi@185.229.59.36)
[01:34:21] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[01:34:21] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[01:38:40] *** Quits: tforever (~Terabyte@85.103.104.1) (Quit: Segmentation fault (core dumped))
[01:39:41] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[01:40:30] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[01:40:34] *** Parts: riff-IRC (~riff-IRC@user/riff-irc) (So long, and thanks for all the fish.)
[01:40:44] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[01:40:46] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Client Quit)
[01:42:02] <SamuelMarks> Xgc - if I read a smaller chunk from the `read` than was already allocated, e.g., my initial `malloc` is PIPE_BUF size
[01:42:21] *** Joins: glider (~glider@user/glider)
[01:43:27] <jrm> I'm struggling to find my mistake in this small library:  https://bpa.st/7HJA  I'm using it like this: https://bpa.st/QEAA.  It fails with the error, "<jemalloc>: jemalloc_extent.c:1195: Failed assertion: "p[i] == 0"".  If I put any type of print statement in main(), the program runs without problems.  This is the line in jemalloc that is referenced in the
[01:43:27] <jrm> error. https://github.com/freebsd/freebsd-src/blob/main/contrib/jemalloc/src/extent.c#L1195
[01:44:07] <jrm> Any idea would be greatly appreciated.  I've been pulling my hair out for hours.
[01:46:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:3851:118b:4a93:672e)
[01:46:52] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:48:49] *** Joins: hlauk (~hlauk@176.33.96.72)
[01:49:31] <Xgc> SamuelMarks: That's commented out.  I was asking about your posted code.
[01:51:23] *** Joins: NEYi (~NEYi@109.251.216.38)
[01:51:51] <Xgc> SamuelMarks: After the first read / realloc / etc, ... current_size = total_bytes;  and then on the next pass: const size_t new_size = total_bytes + bytes + 1; ... Even if bytes was 0 (and it's not), new_size could never be <= current_size, mainly due to the +1 fudge.
[01:54:20] *** Joins: sargon (~sargon@188.250.185.117)
[01:54:39] <Xgc> SamuelMarks: Also, if you uncomment the malloc, that isn't too helpful since you never track the size of the allocated buffer in a way where it could be larger than the number of bytes read from the stream.
[01:55:15] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:3851:118b:4a93:672e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:38] <Xgc> SamuelMarks: current_size is always based on total_size and total_size is always based on the bytes read from the stream.  There's no independent concept of size of allocated area.
[01:57:00] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:3851:118b:4a93:672e)
[01:57:48] <clarity> Why is the malloc commented out anyway?
[01:57:55] <Xgc> SamuelMarks: Note that sizeof(char) is 1 by definition.  No need to use sizeof here.
[01:58:25] <Xgc> The malloc was never helpful with the current logic.
[01:58:33] <clarity> I disagree
[01:58:38] <clarity> Well, it depends
[01:59:14] *** Quits: alch (~alch@ca-18-217-13.service.infuturo.it) (Read error: Connection reset by peer)
[01:59:23] <Xgc> He never tracks the size, independently.  He would need to add more logic to allow for that.
[01:59:30] <clarity> The malloc is still helpful.
[01:59:36] <fizzie> jrm: Run it under a memory access debugger (-fsanitize=address, Valgrind), that's usually good for finding out where things *actually* go wrong the first time. Also, either the allocation size or the type of `seq` on line 50 of the first paste is almost certainly wrong; it's an `int *` but you're doing `malloc(X*Y * sizeof (char))`.
[02:00:15] <Xgc> clarity: Not unless he keeps track.  The realloc would be triggered in any case, at the moment.
[02:00:26] <clarity> Xgc: See the initial value of current_size
[02:01:35] <jrm> fizzie: Thanks.  For the char/int issue, I was trying to make the example shorter, but screwed up.  There's actually a function that converts those to int.  I'll try valgrind.
[02:01:39] <Xgc> clarity: Well, momentarily, it helps, until the: current_size = total_bytes;
[02:02:09] <clarity> Yes, momentarily it helps a lot :)
[02:02:31] <Xgc> clarity: Until the next realloc truncates the buffer.
[02:02:59] <Xgc> It didn't really help, since realloc would have allocated enough.
[02:03:08] <clarity> The realloc wouldn't have been called
[02:03:22] *** Joins: alch (~alch@bo-18-136-25.service.infuturo.it)
[02:03:37] <Xgc> clarity: No. But he allocates too much (potentially) and then truncates the buffer on the next pass, most likely.
[02:04:08] <Xgc> current_size = total_bytes;  resets the size and the next realloc will truncate, most likely.
[02:04:13] <clarity> Sure
[02:04:39] <Xgc> It could be handled to help, but it probably does nothing helpful in this case.
[02:04:55] <clarity> Well it prevents UB on the very first memcpy..
[02:05:18] <Xgc> clarity: The realloc, before the memcpy, does that, if the logic is correct.
[02:05:33] <ghenry> Found my issue ChoHag. Linking to another copy of openssl that odesn't have these in
[02:05:39] <clarity> Xgc: The realloc isn't called on the first round
[02:05:42] <ghenry> nm --print-file-name --dynamic /home/linuxbrew/.linuxbrew/Cellar/openssl@1.1/1.1.1m/lib/libcrypto.so.1.1 | grep EVP_KDF_derive
[02:05:54] <ghenry> is empty. Uninstalling...
[02:05:56] <clarity> Xgc: If current_size == PIPE_BUF and new_size <= current_size
[02:05:59] <Xgc> clarity: That's part of the current mistake.
[02:06:17] <clarity> And then memcpy will hopefully crash the program
[02:06:22] <clarity> .. or hang, who knows
[02:06:24] <Xgc> clarity: Right. He pretends to have a buffer, but doesn't.  If he left current_size at 0, he would be fine.
[02:06:30] <clarity> :)
[02:06:47] <ghenry> This was very handy - https://www.uppmax.uu.se/support/faq/software-faq/undefined-reference-when-compiling-program--what-to-do/
[02:06:57] <clarity> I was really hoping he'd figure out how to pinpoint the hang, and only then ask what's causing it to hang
[02:07:36] <Xgc> clarity: Adding some detail to the first puts should have helped light the bulb.
[02:08:01] <Xgc> Noticing a NULL address might have helped.
[02:08:27] <clarity> I still don't know if he ever confirmed it's the memcpy.  But yes, that would've been the next thing: figure out what's going wrong with the memcpy
[02:09:12] <Xgc> clarity: He things the first pass was successful (he reported) and was assuming the second pass caused the problem.  Wrong assumption.
[02:09:29] <Xgc> s/things/thinks/
[02:10:30] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[02:10:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[02:11:28] <Xgc> People take so long to find obvious mistakes, mainly because they refuse to *look* at everything, even those values that "must be right".  It's almost always that kind of assumption that wastes time.  Just look, no matter what you think you know is right.
[02:11:43] <clarity> Yea.
[02:12:57] <Xgc> Some rather hard bugs can be uncovered by just looking at things you think will *never be a problem*.
[02:13:13] <clarity> Sure
[02:14:25] <Xgc> Interrupt service handlers with bugs can cause all kinds of unexpected problems in the state of the interrupted process.
[02:14:25] <clarity> In this case just narrowing down on the problem by commenting out bits of code and finding the place where it blows up would've been a good step.  Then you could look at the values and see which one is wrong.  But apparently I don't know how to teach a person to do that
[02:15:37] <clarity> I don't know what's going on, he's there for three minutes and then gone
[02:15:54] <Xgc> It's sometimes not the teacher.  The student has to listen and take the suggestion.
[02:16:07] *** Quits: alch (~alch@bo-18-136-25.service.infuturo.it) (Quit: leaving)
[02:16:53] <Xgc> Samuel has not been very responsive.  He might have other distractions.
[02:19:05] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[02:20:03] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:21:32] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:23:04] <SamuelMarks> Xgc / clarity - Thanks trying that solution now
[02:24:37] <SamuelMarks> Currently have: `const size_t new_size = total_bytes + bytes; if (new_size > current_size) *response = realloc(*response, new_size + 1)`
[02:24:54] * SamuelMarks first tries with `>=`
[02:25:31] <SamuelMarks> wait that wouldn't make sense, hmm, maybe a +1 there also
[02:25:50] <Xgc> SamuelMarks: You probably missed some of the conversation.
[02:26:44] <Xgc> SamuelMarks: Don't just try things.  Find the issue.  Look at every critical value of interest.
[02:27:10] <Xgc> SamuelMarks: Let your program report on every value it uses, before it is used, every time
[02:27:29] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[02:27:56] <Xgc> SamuelMarks: Do something to show every pass of the loop.
[02:27:57] <SamuelMarks> Oh and I use `-fno-omit-frame-pointer -fsanitize=address`
[02:28:35] <SamuelMarks> Xgc - Yeah I did a silly number of `puts` https://github.com/offscale/cauthflow/blob/d573aaf/cauthflow/tiny_web_server.c#L305
[02:28:51] <Xgc> SamuelMarks: Not enough puts's in the right places.
[02:29:12] <Xgc> SamuelMarks: With useful detail in those statements.
[02:29:32] <Xgc> SamuelMarks: Not just "I'm here."  Add useful values to the output.
[02:29:48] <SamuelMarks> Well it always hangs at the "l8 memcpy" stage, which I think you earlier said "yeah, because UB"
[02:30:06] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[02:30:50] <Xgc> SamuelMarks: Find out why.  Don't just try stuff.
[02:30:57] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[02:32:31] <Xgc> There are many ways to find these things. Since you're new, it might be best if you avoid valgrind and friends.  Do it the hard way and look everywhere (at everything) with every pass of the loop.
[02:32:33] * SamuelMarks is wrapping realloc in `printf("b4 sizeof *response: %ld", sizeof *response);` stuff
[02:32:50] *** Quits: pizdets_ (~pizdets@183.182.111.242) (Ping timeout: 250 seconds)
[02:32:51] <Xgc> SamuelMarks: Hint. Stop thinking only about the realloc.
[02:33:04] <SamuelMarks> yeah the `memcpy` you guys said earlier was the issue
[02:33:17] <Xgc> SamuelMarks:  You keep making bad assumptions, like realloc is the source of the issue.
[02:33:48] *** Joins: pizdets (~pizdets@183.182.114.255)
[02:33:51] <SamuelMarks> `read`, `memcpy` and `realloc` are the only 3 things that actually do something realistically blockable in that loop
[02:34:15] <Xgc> It might have problems, but don't restrict your focus too tightly.  Make sure you get to the realloc in a good state before diving into that.
[02:35:01] <Xgc> SamuelMarks: Stop making assumptions.  Just start tracking everything / everywhere, even in places you "know are correct".
[02:35:54] <Xgc> SamuelMarks: Post a link to the updated source with your tracking logic added.
[02:35:58] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:36:33] <Xgc> SamuelMarks: Your program is less important now.  Your ability to debug is the important issue.
[02:37:21] <Xgc> Show us what you are watching/tracking with puts calls.
[02:37:25] <SamuelMarks> ok posting link now
[02:37:43] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[02:37:52] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:38:15] <SamuelMarks> https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_5-c-L78
[02:38:16] <candide> Title of SamuelMarks's link: Experiments with simple HTTP socket server in C · GitHub
[02:38:28] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[02:38:31] * SamuelMarks is running the code now to confirm this'll find the bug
[02:38:37] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:39:06] <Xgc> SamuelMarks: sizeof *response ??  What do you think that tells you that you don't know before the compiler runs?
[02:39:30] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[02:39:37] <Xgc> SamuelMarks: Stop.  Don't run anything yet.  Discuss your debug approach.
[02:39:38] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:39:43] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:3851:118b:4a93:672e) (Ping timeout: 250 seconds)
[02:40:00] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[02:40:03] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[02:40:04] <Xgc> SamuelMarks: The most important value, you never check.
[02:40:09] <SamuelMarks> I am thinking that I can measure the previous size of the buffer and compare it to the size the buffer needs to grow to
[02:40:19] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com)
[02:40:20] <SamuelMarks> just to confirm my `total_bytes` is the right value
[02:40:33] *** Joins: langley_iskander (~langleyis@2001:470:69fc:105::1:bd3a)
[02:40:39] <Xgc> SamuelMarks: sizeof doesn't do that.   Lesson 1.
[02:40:41] <SamuelMarks> * `current_size` that is to say
[02:40:50] *** Joins: rgrinberg (~textual@187.194.14.9)
[02:41:03] <SamuelMarks> sizeof *response / sizeof (*response)[0] ?
[02:41:19] <Xgc> SamuelMarks: sizeof *response  is not helpful.  Nope.  Not that either.
[02:41:38] <Xgc> SamuelMarks: You can't check the allocated size with sizeof at all.
[02:41:56] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[02:41:59] <Xgc> SamuelMarks: But before that, there's a MUCH more important value to check.
[02:42:14] *** Joins: Torr (~Torr@user/torr)
[02:42:20] <Xgc> SamuelMarks: What does realloc and malloc do?
[02:42:33] <SamuelMarks> The logic to my debug is: I should allocate more memory if the buffer isn't big enough to hold what is `read`
[02:42:46] <SamuelMarks> but maybe my calculation on the sizes is wrong, so that's why I was printing a bunch
[02:42:53] <Xgc> SamuelMarks: You just made a huge mistake again.
[02:43:02] <Xgc> SamuelMarks: You keep skipping ahead.
[02:43:29] <SamuelMarks> Xgc - malloc requests some memory from the free store. - realloc can resize (grow, shrink) if grow then take from the free store and potentially move it (so that it stays contiguous)
[02:43:54] <Xgc> SamuelMarks: Right.  So what assumption are you making that malloc and realloc resolve for you?
[02:44:31] <Xgc> SamuelMarks: 1) ... what do they do?
[02:44:37] <SamuelMarks> Xgc - That I don't know how big a buffer to create in advance, so need to read chunks from the socket and allocate a bigger buffer each chunk
[02:44:46] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[02:44:50] <Xgc> SamuelMarks: 0) Did you check you have a buffer at all???
[02:45:05] <Xgc> SamuelMarks: How would you check that you have a buffer?
[02:45:55] <SamuelMarks> https://github.com/offscale/cauthflow/blob/d573aaf/cauthflow/tiny_web_server.c#L366
[02:46:13] <SamuelMarks> `char *response = calloc(PIPE_BUF, sizeof(char));` then `serve(&response)`
[02:46:21] * SamuelMarks forgot to add the NULL check there in case OOM
[02:46:47] <Xgc> SamuelMarks: You're getting closer.  But you missed something.
[02:47:36] <Xgc> SamuelMarks: Are we still reviewing the serve function?
[02:47:49] <SamuelMarks> yes
[02:48:02] <SamuelMarks> same function just I took it out into the gist for easier testing / review
[02:48:27] <SamuelMarks> PIPE_BUF+1 is what I need because NUL?
[02:49:02] <Xgc> SamuelMarks: Where's your call to serve?
[02:49:09] <SamuelMarks> `serve(&response)`
[02:49:17] <Xgc> In main, correct?
[02:49:34] <SamuelMarks> here - https://github.com/offscale/cauthflow/blob/d573aaf/cauthflow/tiny_web_server.c#L367
[02:49:53] <Xgc> SamuelMarks: That's new.  You didn't post that before.
[02:50:25] <SamuelMarks> yeah it's got a lot of crap unrelated to the debug
[02:50:34] <SamuelMarks> Oh right I need to update the main.c in my gist to match that, hold on
[02:50:45] <Xgc> You posted this: https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_5-c-L78
[02:50:46] <candide> Title of Xgc's link: Experiments with simple HTTP socket server in C · GitHub
[02:52:21] <SamuelMarks> yeh let me just update the main.c there
[02:52:48] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:52:59] <Xgc> That makes a big difference.
[02:54:18] <SamuelMarks> updated
[02:55:14] <Xgc> SamuelMarks: Now test once.
[02:56:37] *** Joins: langley (~langleyis@102.184.246.9)
[02:56:44] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[02:57:19] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[02:57:38] *** Quits: langley (~langleyis@102.184.246.9) (Client Quit)
[02:57:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[02:57:56] *** Joins: rgrinberg (~textual@187.194.14.9)
[02:59:09] <Xgc> SamuelMarks: You added a mistake sometime since the original paste.
[02:59:37] *** Quits: cosimone (~user@93-44-184-23.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:59:42] <SamuelMarks> heap-buffer-overflow on the `(*response)[total_bytes] = '\0';` line which means I didn't allocate enough, hmm maybe I removed one too many +1s
[02:59:53] <Xgc> SamuelMarks: Stop making assumptions.
[03:00:01] <Xgc> SamuelMarks: It doesn't mean that at all.
[03:00:42] <Xgc> SamuelMarks: It means you did something bad with your buffer or buffer pointer, most likely.
[03:00:48] <SamuelMarks> Ok that worked
[03:00:53] <Xgc> SamuelMarks: What worked?
[03:01:28] <Xgc> SamuelMarks: Your last source a serious mistake you didn't notice.  Which version of serve are you using?
[03:01:44] <SamuelMarks> So it's still hanging, but the heap-buffer-overflow is resolved
[03:02:06] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[03:02:14] <Xgc> SamuelMarks: You might want to remove the non-useful "attempts" from the paste.
[03:02:15] <SamuelMarks> All this +1 stuff at https://gist.github.com/SamuelMarks/3f386b61be78895ab8e93ad57b41e802#file-server_attempt_5-c-L85
[03:02:23] <SamuelMarks> (at there and below)
[03:02:38] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[03:02:39] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[03:02:49] *** Quits: strajder (~strajder@user/strajder) (Quit: gnite)
[03:03:12] <Xgc> SamuelMarks: Now adjust your printf statements to contain more useful detail.
[03:03:36] *** Quits: analognoise (~analognoi@185.229.59.36) (Quit: Leaving)
[03:04:03] <Xgc> SamuelMarks: Post the output somewhere.
[03:04:16] *** Joins: rgrinberg (~textual@187.194.14.9)
[03:05:53] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:06:07] <Xgc> SamuelMarks: I wonder why you wouldn't want to know which pass of the loop we're in and when we exit the loop.
[03:06:29] <SamuelMarks> because it's only reading twice in the loop and I can tell by number of bytes read
[03:07:00] <Xgc> SamuelMarks: Are sure you can tell, even when you don'?
[03:07:06] <Xgc> don't understand the behavior?
[03:11:57] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[03:13:03] *** Joins: soul-d (~uknown@user/soul-d)
[03:13:35] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[03:15:31] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[03:17:37] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 240 seconds)
[03:17:38] *** Joins: BUSY (~BUSY@user/busy)
[03:17:43] *** Quits: Akuli (~Akuli@87-94-109-79.bb.dnainternet.fi) (Quit: Akuli)
[03:20:16] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[03:20:40] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:20:45] *** Joins: off^ (~off@50.235.176.163)
[03:22:02] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:23:01] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:24:17] *** Quits: boB_K7IQ (~boB_K7IQ@174-26-254-41.phnx.qwest.net) (Ping timeout: 240 seconds)
[03:24:34] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[03:25:07] *** Joins: myon98 (~myon98@user/myon98)
[03:25:33] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[03:26:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:29:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-84f2-b625-d358-b449.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:30:33] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:31:18] <Xgc> SamuelMarks: Does main.c in the gist contain your actual test source?
[03:31:32] *** Joins: liba (~liba@user/liba)
[03:35:00] <SamuelMarks> the cauthflow project is my full thing
[03:35:16] <SamuelMarks> no params or secrets need to be set to test
[03:36:11] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[03:36:45] *** Quits: pulsar12 (~quassel@a95-92-49-154.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:36:48] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:38:33] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[03:38:53] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[03:39:56] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[03:40:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:41:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:f5fc:59c9:ba9b:990)
[03:42:44] <Xgc> SamuelMarks: main.c, server_attempt.c and server_common.h does not appear to be complete.  Some missing defines, like PIPE_BUF and a couple of other tings.
[03:44:40] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:48:37] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:f5fc:59c9:ba9b:990) (Ping timeout: 240 seconds)
[03:51:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:53:12] *** Joins: rgrinberg (~textual@187.194.14.9)
[03:53:28] *** Joins: jellie (~luv_panda@user/jellie)
[03:54:28] *** Quits: kts (~kts@103.73.237.228) (Ping timeout: 272 seconds)
[03:55:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:56:13] <rcf> PIPE_BUF is in unistd
[03:57:43] *** Joins: Wulf (~Wulf@user/wulf)
[03:57:57] *** Quits: liba (~liba@user/liba) (Quit: Leaving)
[03:58:54] <clarity> I wonder if you're even testing it right :-\
[04:01:05] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[04:01:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:18bd:1c0d:516:57be)
[04:04:53] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Remote host closed the connection)
[04:06:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:18bd:1c0d:516:57be) (Ping timeout: 250 seconds)
[04:06:56] *** Quits: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:07:08] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[04:07:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:08:31] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:89b6:75bb:9400:4d95)
[04:09:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:10:49] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Remote host closed the connection)
[04:12:32] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[04:12:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:8039) (Ping timeout: 240 seconds)
[04:13:13] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[04:14:04] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[04:19:44] *** Quits: mahmutov (~mahmutov@5.176.8.28) (Ping timeout: 256 seconds)
[04:21:02] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-234.cspire.com) (Read error: Connection reset by peer)
[04:23:18] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[04:26:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7d17-545b-7137-6b60.res6.spectrum.com)
[04:31:12] <Inline> "declaration does not do anything, multiple types in declaration #define ptrdiff_t int"
[04:31:34] <Inline> is that because internal types can't be defined in terms of each other or because the ptrdiff_t and int are exclusive ?
[04:31:54] <Inline> or because int is not a pointer at all ?
[04:32:34] <Inline> poor naming of the variable ?
[04:32:42] <clarity> I think you got the syntax wrong
[04:33:05] <Inline> that's in libcpp in gcc, only got it via enabling -dM
[04:33:33] <Inline> not my code, in charset.cc in libcpp in gcc
[04:33:39] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:36:26] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[04:37:14] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[04:37:30] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:37:46] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:39:32] <fizzie> That's just a macro. Getting any sort of warning/error about a *declaration* must relate to using it wrong, for example.
[04:39:42] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[04:39:49] <Inline> ok, i think i know why
[04:45:32] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:46:48] *** Joins: crashrep (~crashrep@user/crashrep)
[04:47:09] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[04:48:08] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[04:48:09] <jrm> I have two variables char *names and int *pn.  The are many substrings within names, but nothing is '\0' terminated.  Substring 0 goes from names[0] to names[pn[0]-1], substring 1 goes from names[pn[0]] to names[pn[1]-1] and so on.  Any suggestions for printing out each substring in names?
[04:49:02] *** Quits: MatthiasG2 (~matthias@i6DFA0382.versanet.de) (Quit: leaving)
[04:49:12] <ioxzev1z> If you know the lengths you could just loop over the chars and print them
[04:49:51] <fizzie> Or you could use the "%.*s" format, if you're using printf for other purposes anyway.
[04:50:25] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Client Quit)
[04:50:45] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[04:50:52] <fizzie> ,cc char *s = "foobarbaz"; int start = 3, end = 6; printf("%.*s", end - start, s + start);
[04:50:54] <candide> fizzie: bar
[04:51:02] <fizzie> Or even just fwrite.
[04:53:36] <fizzie> ,cc char *names = "foobarbazquux"; int pn[4] = {3, 6, 9, 13}; for (int i = 0; i < 4; i++) { int s = i > 0 ? pn[i-1] : 0; printf("[%.*s] ", pn[i]-s, names+s); }
[04:53:38] <candide> fizzie: [foo] [bar] [baz] [quux]
[04:54:49] <jrm> Thanks ioxzev1z, fizzie, candide. :)
[04:55:30] <fizzie> ,cc char *names = "foobarbazquux"; int pn[4] = {3, 6, 9, 13}; for (int i = 0, p = 0; i < 4; p = pn[i], i++) printf("[%.*s] ", pn[i]-p, names+p); // slightly streamlined
[04:55:32] <candide> fizzie: Same output.
[04:55:55] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Quit: Leaving)
[04:56:11] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[05:01:26] *** Quits: minto (~mintograd@47.201.5.61) (Quit: Leaving)
[05:14:27] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:14:48] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[05:15:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:19:12] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:89b6:75bb:9400:4d95) (Ping timeout: 250 seconds)
[05:20:38] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:9818:747d:186f:47b5)
[05:21:14] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[05:23:47] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:27:55] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[05:32:50] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 256 seconds)
[05:35:11] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:9818:747d:186f:47b5) (Ping timeout: 256 seconds)
[05:35:35] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Remote host closed the connection)
[05:37:26] *** Joins: vysn (~vysn@user/vysn)
[05:37:27] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:f0a2:d1c3:4490:2515)
[05:38:38] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[05:41:11] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[05:41:35] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Remote host closed the connection)
[05:41:58] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[05:42:37] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:f0a2:d1c3:4490:2515) (Ping timeout: 240 seconds)
[05:42:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:44:14] *** Quits: manx (xuew@p200300e18f1c3400022215fffe03cf97.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:44:18] *** Joins: manx- (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[05:47:27] <Inline> -dIMU solved it
[05:47:34] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 256 seconds)
[05:47:57] <Inline> when the includes are missing then it looks like symbols are generated on the lfy from nowhere
[05:48:25] <Inline> so an M requires at lest an I if not even an additional U (for expansion)
[05:49:16] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:4414:dfd5:8bde:213a)
[05:49:31] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Remote host closed the connection)
[05:52:39] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[05:52:56] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[05:53:53] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:4414:dfd5:8bde:213a) (Ping timeout: 256 seconds)
[05:54:25] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[05:56:16] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:69db:e827:4059:f439)
[06:01:48] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[06:05:42] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Ping timeout: 260 seconds)
[06:06:16] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 256 seconds)
[06:06:19] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[06:08:53] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:11:13] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[06:11:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[06:13:28] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[06:15:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:20:45] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:69db:e827:4059:f439) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:23:23] *** Joins: DSee (~DSee@173.237.207.12)
[06:28:03] *** Quits: soapsudsxx (~soapsudsx@209.221.40.136) (Remote host closed the connection)
[06:28:26] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[06:29:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:31:42] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:32:52] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 250 seconds)
[06:34:02] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[06:39:27] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 256 seconds)
[06:42:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:42:50] *** Joins: joolma (uid527699@id-527699.uxbridge.irccloud.com)
[06:43:59] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[06:46:15] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[06:52:39] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:52:57] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:55:56] *** Quits: DSee (~DSee@173.237.207.12) (Quit: Quit)
[06:57:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:00:56] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[07:03:34] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:69db:e827:4059:f439)
[07:07:23] *** Joins: Azem (~haise01@user/haise01)
[07:09:11] *** Parts: seninha (~seninha@user/seninha) (Leaving)
[07:09:18] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.69)
[07:10:13] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:12:17] *** Joins: seninha (~seninha@user/seninha)
[07:25:49] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:27:28] *** Joins: BinarySavior_ (~BinarySav@josh.vet)
[07:28:13] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Ping timeout: 240 seconds)
[07:30:37] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:69db:e827:4059:f439) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:38:41] *** Joins: Mocky_J (~jack@27.156.201.249)
[07:38:57] *** Joins: Mjjm (~jack@27.156.201.249)
[07:41:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-7d17-545b-7137-6b60.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:41:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:43:15] *** Quits: joolma (uid527699@id-527699.uxbridge.irccloud.com) ()
[07:45:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:45:26] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[07:45:41] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[07:46:32] *** Joins: nitrix (~nitrix@user/nitrix)
[07:48:35] *** Quits: Mjjm (~jack@27.156.201.249) (Ping timeout: 256 seconds)
[07:49:09] *** Quits: Mocky_J (~jack@27.156.201.249) (Ping timeout: 256 seconds)
[07:51:06] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[07:51:26] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[07:53:50] *** Joins: malina (~malina@user/malina)
[07:56:13] *** Joins: rgrinberg (~textual@187.194.14.9)
[07:57:05] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.69) (Ping timeout: 256 seconds)
[07:57:24] *** Quits: reset (~reset@user/reset) (Quit: reset)
[07:58:59] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:00:07] *** Joins: off^ (~off@50.235.176.163)
[08:03:13] *** Joins: Mocky_J (~jack@27.156.201.249)
[08:03:13] *** Joins: Mjjm (~jack@27.156.201.249)
[08:06:20] *** Joins: abrattic (~abrattic@182.70.173.19)
[08:08:11] *** Quits: abrattic (~abrattic@182.70.173.19) (Client Quit)
[08:08:41] *** Joins: abrattic (~abrattic@182.70.173.19)
[08:09:17] *** Parts: Mocky_J (~jack@27.156.201.249) ()
[08:10:05] *** Parts: Mjjm (~jack@27.156.201.249) ()
[08:13:04] *** Parts: abrattic (~abrattic@182.70.173.19) ()
[08:14:47] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:16:20] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:18:37] *** Joins: Dsee4 (~DSee@c-73-21-250-78.hsd1.fl.comcast.net)
[08:18:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[08:19:48] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[08:20:20] *** Joins: rgrinberg (~textual@187.194.14.9)
[08:20:34] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[08:21:07] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[08:21:45] *** Joins: rgrinberg (~textual@187.194.14.9)
[08:22:10] *** Joins: pizdets_ (~pizdets@183.182.115.101)
[08:22:50] *** Quits: pizdets (~pizdets@183.182.114.255) (Ping timeout: 256 seconds)
[08:23:40] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[08:24:09] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[08:33:22] *** Joins: rgrinberg (~textual@187.194.14.9)
[08:33:42] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:34:10] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[08:35:58] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[08:36:41] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[08:36:46] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[08:37:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:37:43] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a54b:13e2:82b5:a352)
[08:37:46] *** Joins: karakedi (~eAC53C340@user/karakedi)
[08:38:35] *** Joins: teepee (~teepee@openscad/teepee)
[08:38:59] *** Joins: mybbgirl (~mybbgirl@188.25.57.254)
[08:39:10] *** Joins: Atque (~Atque@user/atque)
[08:41:08] *** Joins: off^ (~off@50.235.176.163)
[08:42:17] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a54b:13e2:82b5:a352) (Ping timeout: 240 seconds)
[08:43:28] *** Quits: mybbgirl (~mybbgirl@188.25.57.254) (K-Lined)
[08:46:04] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[08:49:28] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[08:49:40] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:51:02] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:8d02:94d4:341b:3a0c)
[08:58:32] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.73)
[08:58:58] *** Joins: myusername (~myusernam@user/myusername)
[08:59:06] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[09:06:13] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.73) (Ping timeout: 256 seconds)
[09:08:44] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[09:13:20] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[09:16:25] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[09:16:55] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: quitter)
[09:20:59] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[09:25:44] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[09:27:36] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[09:29:21] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[09:33:14] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.68)
[09:33:26] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[09:33:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:33:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:33:52] *** Joins: wroathe (~wroathe@user/wroathe)
[09:34:19] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[09:35:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[09:35:18] *** Joins: m4v (~znc@ubuntu/member/m4v)
[09:38:22] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.68) (Ping timeout: 272 seconds)
[09:38:37] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[09:42:23] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[09:50:11] *** Quits: geeknix (~pi@2001:e68:5432:ee11:f781:3a04:b549:b877) (Quit: WeeChat 2.3)
[09:50:11] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:8d02:94d4:341b:3a0c) (Ping timeout: 256 seconds)
[09:50:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[09:56:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:56:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:56:07] *** Joins: wroathe (~wroathe@user/wroathe)
[10:00:56] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[10:01:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:02:18] *** Joins: geeknix (~pi@2001:e68:5432:ee11:f781:3a04:b549:b877)
[10:03:09] *** Joins: teepee (~teepee@openscad/teepee)
[10:04:20] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:07:37] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 240 seconds)
[10:09:25] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[10:16:12] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.68)
[10:20:05] *** manx- is now known as manx
[10:20:28] *** Quits: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[10:20:40] *** Joins: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[10:21:01] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.68) (Ping timeout: 256 seconds)
[10:24:15] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[10:28:52] *** Joins: off^ (~off@50.235.176.163)
[10:42:47] *** Joins: malina (~malina@user/malina)
[10:48:05] *** Joins: Hazza (~Haxxa@125-253-30-213.ip4.superloop.com)
[10:48:13] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[10:49:36] *** Quits: off^ (~off@50.235.176.163) (Ping timeout: 256 seconds)
[10:49:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[10:50:10] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[10:51:51] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[11:02:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:03:01] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[11:03:27] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[11:04:39] *** Quits: Hazza (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[11:10:00] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 256 seconds)
[11:11:06] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Read error: Connection reset by peer)
[11:13:00] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.75)
[11:16:55] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[11:19:50] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e5c7:6df3:aa9d:dffa) (Quit: Quit)
[11:21:29] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[11:22:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:27:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[11:27:34] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[11:30:19] *** Joins: aradesh (~aradesh@user/aradesh)
[11:31:15] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:50] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:34:54] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 272 seconds)
[11:35:07] *** Joins: lleo (~leo@188-206-105-150.mobile.kpn.net)
[11:38:12] *** Joins: terminalpusher (~terminalp@2a01:586:1e0e:1:24e8:c3d4:a32e:b10)
[11:41:10] *** Quits: lleo (~leo@188-206-105-150.mobile.kpn.net) (Ping timeout: 256 seconds)
[11:42:37] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.75) (Ping timeout: 256 seconds)
[11:42:59] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.75)
[11:43:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[11:46:41] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:47:40] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:49:28] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[11:51:48] *** Quits: aeplus (~steve@2603-8000-cf42-7ec1-162f-1996-0ae2-d7da.res6.spectrum.com) (Quit: leaving)
[11:52:56] *** Joins: mrig (~mrig@user/mrig)
[11:56:47] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.75) (Ping timeout: 256 seconds)
[11:57:50] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Quit: Leaving)
[11:58:23] *** Quits: terminalpusher (~terminalp@2a01:586:1e0e:1:24e8:c3d4:a32e:b10) (Remote host closed the connection)
[11:59:24] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[12:02:38] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[12:03:01] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[12:04:09] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:04:40] *** Quits: moberg (~moberg@luke.millenniumfalcon.org) (Quit: quit)
[12:05:13] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[12:13:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:13:53] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[12:15:26] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[12:17:51] *** Joins: meator (~meator@user/meator)
[12:23:21] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[12:24:37] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 240 seconds)
[12:24:57] *** Joins: mahmutov (~mahmutov@5.176.8.28)
[12:26:12] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[12:26:45] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:27:03] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Client Quit)
[12:27:46] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[12:28:24] *** Joins: soul-d (~uknown@user/soul-d)
[12:32:02] *** Joins: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl)
[12:33:10] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[12:34:02] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[12:35:01] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:35:10] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[12:35:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:44:49] <meator> Hello. How can I make a signal block itself when it's received but don't unblock it when the signal handler exits?
[12:44:51] <meator> I could establish the signal handler with the SA_NODEFER flag and do sigprocmask(SIG_BLOCK, ...) as soon as possible in the handler, but that might be too late.
[12:47:55] <dave0> hang on i gotta look up sigaction
[12:49:02] <dave0> meator: so when you recieve a signal, it blocks it, calls your handler, but keeps it blocked when you finish the handler?
[12:49:15] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[12:49:43] <meator> dave0: Yes.
[12:52:28] <pnbeast> Give it some opioids from the handler.  That'll block it right up.
[12:53:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[12:53:59] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:54:39] <dave0> can you call sigaction within a signal handler?
[12:55:05] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:56:27] *** Joins: chung (~lim@184.22.24.168)
[12:57:03] <dave0> meator: maybe you could set up your handler with sigaction (no flags) and then in your handler, call sigaction with SIG_IGN
[12:57:08] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[12:57:25] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[12:57:41] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[12:59:59] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[13:00:06] <De4n_Whit3> Hello everyone.
[13:00:48] <pnbeast> Even me, De4n_Whit3?
[13:01:01] <De4n_Whit3> Yes, pnbeast
[13:01:06] <pnbeast> Yay!
[13:01:18] <De4n_Whit3> :D
[13:01:28] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[13:02:15] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:05:10] <dave0> ,cc static struct sigaction sa; void handler(int signum) { write(1, "signal ", 7); sa.sa_handler = SIG_IGN; sigaction(SIGURG, &sa, 0); } int main(void) { sa.sa_handler = handler; sigaction(SIGURG, &sa, 0); raise(SIGURG); raise(SIGURG); write(1, "done ", 5); }
[13:05:12] <candide> dave0: signal done
[13:05:18] <dave0> meator: seems to work
[13:05:53] <dave0> it's simple enough you might not even need to use posix
[13:07:55] <rcf> As far as I know wg14 was unable to find a use of signals that would be allowed in strictly-compliant programs, so there's always POSIX.
[13:08:14] <meator> Hmm. Even if there is a solution to this problem, I think it wouldn't help me. I'm in a little bit complicated situation where I need to monitor two things at once.
[13:08:16] <meator> I'm doing a blocking read, and I'd like to get notified when my children die. My solution is to test if the read failed with EINTR because of SIGCHLD, but there are some problems with that.
[13:09:08] *** Joins: X-Scale` (~ARM@66.26.54.77.rev.vodafone.pt)
[13:09:42] <dave0> sigaction has the SA_RESTART flag
[13:09:46] <rcf> ^
[13:09:57] <rcf> I've always found it to work quite well for this purpose.
[13:11:18] *** Quits: X-Scale (~ARM@31.22.166.28) (Ping timeout: 260 seconds)
[13:11:19] *** X-Scale` is now known as X-Scale
[13:12:01] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Read error: Connection reset by peer)
[13:12:31] <meator> Then read wouldn't get interrupted and I won't be able to monitor my children. I want to do this in the program rather in the signal handler to make cleaning up easier.
[13:13:09] <meator> I want to do specific actions when my child processes die.
[13:14:11] *** Joins: masoudd (~masoudd@user/masoudd)
[13:23:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:26:12] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f8af:7e9a:b154:2753)
[13:26:19] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[13:28:29] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[13:28:48] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[13:29:36] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[13:29:52] <Dean> Hello everyone.
[13:30:38] <pnbeast> Dean, even... wait...
[13:31:01] <Dean> Yay! pnbeast I was connecting via a different client. Just wanted to make sure it works. :D
[13:32:51] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:34:23] *** Parts: chung (~lim@184.22.24.168) ()
[13:35:47] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:f5dd:19f9:12f7:7b9d)
[13:38:33] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 256 seconds)
[13:38:41] *** Joins: X-Scale` (~ARM@92.250.98.59)
[13:39:37] *** Quits: X-Scale (~ARM@66.26.54.77.rev.vodafone.pt) (Ping timeout: 240 seconds)
[13:39:42] *** X-Scale` is now known as X-Scale
[13:40:13] <Dean> I'm going to try and write merge sort from memory today.
[13:40:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:41:23] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[13:44:31] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[13:44:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:46:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.136) (Remote host closed the connection)
[13:48:32] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[13:52:43] <ChoHag> meator: I think the only way to do it is to not return from the handler.
[13:56:05] *** Joins: Rounin (~david@84.212.130.215)
[13:56:46] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[13:57:28] <meator> I think I should replace the blocking read with poll that will poll two file descriptors: the file descriptor I was doing a blocking read on and a read end of a pipe. I can write to the write end of the pipe in the signal handler to unblock it on SIGCHLD (which will solve my problem).
[14:01:09] *** Azem is now known as Emet-Selch
[14:01:50] *** Joins: plastico (~plastico@neomutt/plastico)
[14:03:29] <meator> Or do non-local gotos.
[14:06:30] *** Joins: oxfuxxx (~oxfuxxx@87.101.92.73)
[14:06:43] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[14:10:49] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[14:11:26] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:17:43] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[14:20:22] *** Joins: haliucinas (~haliucina@5.20.153.21)
[14:22:17] *** Joins: vysn (~vysn@user/vysn)
[14:22:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[14:23:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[14:23:34] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[14:24:55] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:30:32] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[14:31:02] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Quit: Leaving)
[14:31:24] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[14:32:57] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:33:29] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:33:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:33:59] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[14:34:17] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[14:34:18] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[14:34:52] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:35:12] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:36:18] *** Lord_of_Life_ is now known as Lord_of_Life
[14:37:16] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:39:55] *** Joins: reset (~reset@user/reset)
[14:41:06] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[14:41:51] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:42:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:44:37] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:44:49] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[14:45:01] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:46:29] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[14:47:50] *** Joins: terminalpusher (~terminalp@2a01:586:1e0e:1:7d2:f782:1265:49ea)
[14:51:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[14:54:08] *** Joins: random-nick (~random-ni@87.116.181.150)
[14:54:23] <Dean> is ski around today?
[14:57:06] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[15:00:38] *** Quits: mahmutov (~mahmutov@5.176.8.28) (Ping timeout: 256 seconds)
[15:05:46] *** Joins: kts (~kts@103.73.237.198)
[15:08:04] *** Joins: bancharo (~bancharo@103.10.31.37)
[15:08:23] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[15:10:12] *** Quits: bancharo (~bancharo@103.10.31.37) (Changing host)
[15:10:12] *** Joins: bancharo (~bancharo@user/bancharo)
[15:13:41] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:17:08] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[15:17:40] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[15:19:00] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:19:05] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:26:03] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[15:28:00] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[15:30:04] *** Joins: Guest455 (~Guest455@122.176.168.177)
[15:30:21] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:06] *** Joins: csrf (~csrf@user/csrf)
[15:31:30] *** Guest455 is now known as queenofspades
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:12] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c128:812:5c48:c0e3)
[15:36:12] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c128:812:5c48:c0e3) (Changing host)
[15:36:12] *** Joins: skapata (~Skapata@user/skapata)
[15:36:26] *** Quits: oxfuxxx (~oxfuxxx@87.101.92.73) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:07] <Dean> Is it still possible to ask for a cloak on irc?
[15:38:10] <vysn> you set it up if i recall
[15:38:25] <vysn> just look up libera documentation
[15:39:38] <Dean> thanks vysn
[15:40:30] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.104)
[15:41:37] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 240 seconds)
[15:41:51] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[15:42:19] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[15:42:36] <vysn> most welcome
[15:42:38] *** flashd[m] is now known as drflashd[m]
[15:43:52] *** Quits: bancharo (~bancharo@user/bancharo) (Quit: The Lounge - https://thelounge.chat)
[15:44:09] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:44:09] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[15:45:27] *** Joins: magla (~gelignite@d536720f.access.ecotel.net)
[15:46:11] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[15:46:58] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 272 seconds)
[15:48:05] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[15:52:18] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:53:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:55:08] *** Cyp_ is now known as Cyp
[15:55:57] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:56:43] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[16:00:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:02:53] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:03:54] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:05:41] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:12:04] *** Joins: savolla (~quassel@95.10.207.85)
[16:12:59] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[16:16:34] *** Joins: mahmutov (~mahmutov@5.176.8.28)
[16:19:25] *** Quits: snappy (~snappy@user/snappy) (Ping timeout: 240 seconds)
[16:19:43] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Remote host closed the connection)
[16:20:20] *** Quits: terminalpusher (~terminalp@2a01:586:1e0e:1:7d2:f782:1265:49ea) (Remote host closed the connection)
[16:20:34] *** Joins: terminalpusher (~terminalp@2a01:586:1e0e:1:7d2:f782:1265:49ea)
[16:21:39] *** Quits: queenofspades (~Guest455@122.176.168.177) (Quit: Client closed)
[16:22:07] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[16:22:14] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[16:23:22] *** Joins: Klinda (~superleag@user/klinda)
[16:23:36] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[16:23:42] *** Joins: Guest455 (~Guest455@122.176.168.177)
[16:25:45] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[16:27:43] *** Joins: pulse (~pulse@user/pulse)
[16:32:28] *** Joins: snappy (~snappy@user/snappy)
[16:33:11] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[16:33:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2)
[16:33:56] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:34:25] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:34:37] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[16:35:09] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:35:38] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:36:09] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[16:37:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[16:39:04] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:43:38] *** Quits: Guest455 (~Guest455@122.176.168.177) (Quit: Client closed)
[16:43:51] *** Joins: Guest455 (~Guest455@122.176.168.177)
[16:46:06] *** Joins: pulsar12 (~quassel@a95-92-49-154.cpe.netcabo.pt)
[16:49:01] *** Quits: kts (~kts@103.73.237.198) (Quit: Konversation terminated!)
[16:54:43] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:56:09] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[16:56:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[16:56:47] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[16:59:57] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Quit: leaving)
[17:00:32] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[17:01:19] *** Joins: lleo (~leo@188-206-105-150.mobile.kpn.net)
[17:05:10] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[17:08:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-198.cspire.com)
[17:10:03] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:10:06] *** Joins: kts (~kts@103.73.237.19)
[17:13:44] *** Quits: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[17:19:09] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Quit:  )
[17:23:22] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[17:25:10] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[17:25:14] *** Joins: Jong (~Jong@2620:10d:c090:400::5:8039)
[17:26:47] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[17:29:29] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:39:50] *** Quits: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:40:36] *** Joins: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29)
[17:41:48] <NRK> what's a good (doubly) linked list api?
[17:42:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:46:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:47:27] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[17:48:10] <shadowchaser> library?
[17:53:00] *** Quits: mahmutov (~mahmutov@5.176.8.28) (Ping timeout: 272 seconds)
[17:56:28] *** Joins: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl)
[17:57:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e5ab:a286:27f1:6ff2) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:00:48] *** Quits: krissmaster (~kriss@213.239.83.90) (Ping timeout: 268 seconds)
[18:01:01] *** Joins: krissmaster (~kriss@213.239.83.90)
[18:04:05] <sham1> sys/queue.h?
[18:05:38] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[18:06:53] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:07:23] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[18:08:43] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:08:58] *** Joins: hafat (~hafat@159.146.5.83)
[18:12:44] *** Joins: mahmutov (~mahmutov@5.176.8.28)
[18:14:15] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[18:15:35] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:16:35] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[18:24:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[18:24:56] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:27:10] *** Joins: mrig (~mrig@user/mrig)
[18:27:37] *** Quits: Guest455 (~Guest455@122.176.168.177) (Quit: Client closed)
[18:32:45] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-198.cspire.com) (Read error: Connection reset by peer)
[18:33:17] <shadowchaser> https://docs.gtk.org/glib/struct.List.html
[18:33:58] *** Joins: euouae (~euouae@user/euouae)
[18:34:21] <euouae> Hello, when using a local socket with a file name as address, if I want to close the socket, do I first unlink the file? Or the other way around?
[18:35:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:37:09] <fizzie> Either way you want.
[18:37:56] <euouae> got it, thanks fizzie
[18:38:05] <fizzie> Quoting from this system's man page: "The usual UNIX close-behind semantics apply; the socket can be unlinked at any time and will be finally removed from the filesystem when the last reference to it is closed."
[18:39:13] <ioxzev1z> euouae, the file stays open and can be written to even if you rm the file
[18:39:30] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[18:39:32] <ioxzev1z> But once you close the handle, if there is no fs name for the file the contents are not accessible
[18:39:35] *** Quits: hafat (~hafat@159.146.5.83) (Quit: Leaving)
[18:39:37] <NRK> sham1: shadowchaser: thanks, looks nice.
[18:39:59] <ioxzev1z> I think making tmp files works like that on linux, it will open a file, give you the handle, then immediately unlink it
[18:41:52] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:41:57] *** Joins: hlauk (~hlauk@176.33.96.72)
[18:43:01] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[18:45:35] *** Joins: kurahaupo__ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au)
[18:46:14] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:46:51] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:47:25] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[18:49:36] *** Quits: kurahaupo__ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[18:50:30] *** Quits: lleo (~leo@188-206-105-150.mobile.kpn.net) (Quit: institute budget)
[18:51:05] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au)
[18:51:14] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[18:52:12] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[18:52:21] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au)
[19:00:48] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:02:45] <euouae> depends on how you make the temporary file
[19:03:37] <euouae> mkstemp() seems to be the right way to do it, but then you get an open file descriptor
[19:03:58] <euouae> I want to create a socket and bind it to the address. I guess it's fine that the address has an open file descriptor already?
[19:04:11] <euouae> I'm also not sure how to get the file path from mkstemp()
[19:05:52] <kurahaupo_> euouae: How many connections do you expect to accept on this listener? Would socketpair() suffice?
[19:06:20] <euouae> I'm just playing around but sockpair won't do, I'll eventually try to rewrite a daemon service
[19:06:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:07:16] <kurahaupo_> How will you advertise the server's address (path)?
[19:07:31] *** Quits: terminalpusher (~terminalp@2a01:586:1e0e:1:7d2:f782:1265:49ea) (Remote host closed the connection)
[19:08:09] <euouae> It's not clear yet
[19:08:28] <euouae> I'm learning the protocols & implementation. Then I will make design choices
[19:08:50] <euouae> I think this implementation has a fixed file path that clients use to connect to the daemon
[19:09:10] <euouae> which seems reasonable so I'll probably keep it that way, but I don't really know
[19:15:25] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[19:15:57] <euouae> got to go now, thank you
[19:15:58] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[19:17:27] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[19:20:44] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:24:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:24:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:24:56] *** Joins: wroathe (~wroathe@user/wroathe)
[19:29:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:30:05] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: You have been kicked for being idle)
[19:31:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[19:35:35] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:39:52] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.191)
[19:43:41] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[19:43:55] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[19:45:25] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[19:45:26] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 250 seconds)
[19:45:56] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:46:35] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[19:48:13] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[19:48:49] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.104) (Ping timeout: 256 seconds)
[19:51:08] *** Joins: shivesh (~shivesh@user/shivesh)
[19:52:57] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[19:55:25] *** Quits: msk (~Thunderbi@89.205.124.59) (Ping timeout: 240 seconds)
[19:56:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[19:56:57] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[19:58:17] *** Joins: plastico (~plastico@neomutt/plastico)
[20:02:57] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[20:03:39] *** Joins: ferdna (~ferdna@user/ferdna)
[20:03:52] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: brb)
[20:04:24] *** Joins: [R] (~rs@genoce.org)
[20:06:15] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:07:38] *** Joins: mrig (~mrig@user/mrig)
[20:09:22] *** Quits: kts (~kts@103.73.237.19) (Quit: Konversation terminated!)
[20:11:40] *** Joins: crashrep (~crashrep@user/crashrep)
[20:12:27] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:6111:c808:a47f:41)
[20:16:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:8fa:f917:3ddb:7b76) (Ping timeout: 245 seconds)
[20:20:49] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[20:22:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:30:23] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.220)
[20:31:40] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:70e8:bae3:c5b2:7d1d)
[20:33:16] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.191) (Ping timeout: 256 seconds)
[20:33:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:34:48] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[20:35:37] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f8af:7e9a:b154:2753) (Ping timeout: 256 seconds)
[20:36:15] *** Joins: msk (~Thunderbi@89.205.124.40)
[20:36:37] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:38:58] *** Quits: savolla (~quassel@95.10.207.85) (Read error: Connection reset by peer)
[20:39:31] *** Joins: savolla (~quassel@95.10.207.85)
[20:40:37] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[20:40:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[20:46:34] *** Joins: pulse (~pulse@user/pulse)
[20:48:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:50:47] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[20:51:03] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[20:52:00] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:f931:4dd:828a:cfc2)
[20:53:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[20:53:43] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[20:54:57] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[20:55:24] * APic laughs magically.
[20:56:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:58:26] *** Joins: mven1 (~mven@ip68-104-39-54.lv.lv.cox.net)
[20:59:46] *** Joins: jellie (~luv_panda@user/jellie)
[20:59:58] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ed4e:5979:adfa:bb7b)
[21:00:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:00:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:00:47] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[21:00:47] *** mven1 is now known as mven
[21:01:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:01:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:02:06] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[21:02:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:02:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:03:45] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[21:04:37] *** Joins: smoke_ (~smoke@user/smoke)
[21:06:46] *** Joins: vysn (~vysn@user/vysn)
[21:07:14] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[21:08:04] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:08:48] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:f5dd:19f9:12f7:7b9d) (Quit: fe23)
[21:10:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:11:39] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[21:12:27] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:f931:4dd:828a:cfc2) (Ping timeout: 256 seconds)
[21:13:15] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.220) (Ping timeout: 256 seconds)
[21:13:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:14:12] *** Joins: rgrinberg (~textual@187.194.14.9)
[21:14:35] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[21:14:47] <Dean> Hello everyone.
[21:19:16] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[21:19:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:20:44] *** Quits: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net) (Ping timeout: 272 seconds)
[21:23:04] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.101)
[21:23:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:28:08] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 250 seconds)
[21:28:15] *** Joins: jfsimon1981 (~jfsimon19@218.96.128.77.rev.sfr.net)
[21:28:21] <pragma-> Poor Dean.
[21:28:35] <clarity> Poor.
[21:31:43] *** Joins: beencubed (~beencubed@209.131.238.248)
[21:37:02] *** Joins: Torr (~Torr@user/torr)
[21:37:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:37:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:38:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:39:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:39:32] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:39:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:40:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:40:12] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[21:42:00] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:42:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:44:00] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:44:44] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:45:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:47:07] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[21:48:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[21:48:39] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:9dd2:64b9:16ba:553d)
[21:51:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:01:26] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:70e8:bae3:c5b2:7d1d) (Read error: Connection reset by peer)
[22:03:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[22:04:01] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:9dd2:64b9:16ba:553d) (Ping timeout: 256 seconds)
[22:08:10] *** Joins: strajder (~strajder@user/strajder)
[22:11:03] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[22:11:12] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[22:15:28] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[22:16:12] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[22:16:20] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[22:22:16] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[22:23:30] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[22:25:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-c0be-54b3-db2c-85e9.res6.spectrum.com)
[22:32:33] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[22:32:56] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-30-31.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[22:34:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[22:34:51] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[22:36:45] *** Joins: jellie (~luv_panda@user/jellie)
[22:38:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:39:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:40:37] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 240 seconds)
[22:41:25] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:45:03] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:16] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:53:09] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[22:53:16] *** Joins: Atque_ (~Atque@user/atque)
[22:53:20] <nightstrike> is there a way to have sprintf skip a %s if the string is NULL?
[22:53:29] <nightstrike> or do I hav eto check that myself and build two separate strings?
[22:53:43] <nightstrike> my first attempt resultsed in seg faults :)
[22:53:57] <ChoHag> No. Yes.
[22:54:55] *** Quits: Atque_ (~Atque@user/atque) (Remote host closed the connection)
[22:55:03] <nightstrike> nuts
[22:55:06] <fizzie> You can make the argument `s ? s : ""` instead.
[22:55:20] <clarity> With a gcc extensino, s?:""
[22:55:36] <ChoHag> gcc %s prints NULL as "(null)" IIRC.
[22:55:45] <ChoHag> glib, sorry.
[22:55:48] <ChoHag> gli*c*
[22:55:55] <ChoHag> Yeah whatever.
[22:56:15] *** Joins: abcdadsas (~blah@43.252.113.66)
[22:56:19] *** Joins: Atque (~Atque@user/atque)
[22:56:39] <abcdadsas> can
[22:56:58] <nightstrike> yeah, well that's I guess the easier part.  The hard part is a nicer looking string...  something like...     void f(char * prefix) { char msg[1024]; sprintf(msg, "xxx  %s yyy zzz", prefix? : ""); }   that won't swallow the spaces around %s
[22:57:17] <ChoHag> Letting a NULL get that far is usually a bad idea.
[22:57:40] <nightstrike> I guess I could replace it with something other than ""
[22:57:55] *** Quits: smoke_ (~smoke@user/smoke) (Remote host closed the connection)
[22:58:08] <nightstrike> I'm as usual avoiding the real task at hand by getting distracted on this tiny piece of the overall work I have to get done :)
[22:58:23] <ChoHag> Well that's what programming is about.
[22:58:51] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[22:58:54] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 272 seconds)
[22:59:22] <nightstrike> if C had default arguments, I could make the default prefix be the name of the calling functions
[22:59:48] <nightstrike> void f(char * prefix = __func_name__)...   I feel like there's aspects of C++ that C could adopt while still being C
[23:00:24] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:00:57] <abcdadsas> Can you people see this?
[23:01:04] *** Joins: Atque (~Atque@user/atque)
[23:01:21] <nightstrike> abcdadsas: are you trying to poke fun at me?
[23:02:07] <ChoHag> No he's wondering if his IRC client works.
[23:02:16] <abcdadsas> no, not really. I just connected to libera using netcat instead of an irc client.
[23:02:26] <ChoHag> OK not IRC client then.
[23:02:32] <abcdadsas> I'm typing the IRC protocol by hand.
[23:02:42] <ChoHag> Some people like pain.
[23:03:47] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f425:fffb:4465:6325)
[23:03:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:04:14] *** Quits: vicfred (~vicfred@user/vicfred) (Remote host closed the connection)
[23:04:16] <nightstrike> oh, neat
[23:04:18] <fizzie> Oh, that explains the earlier "can" then. (Must've been a missing :.)
[23:04:37] *** Joins: vicfred (~vicfred@user/vicfred)
[23:07:38] <nightstrike> https://man7.org/linux/man-pages/man3/backtrace.3.html << neat!
[23:07:57] <nightstrike> ok, gotta focus
[23:10:36] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:11:22] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Ping timeout: 256 seconds)
[23:11:24] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:13:12] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[23:13:53] <abcdadsas> This IRC protocol is in plain English.
[23:13:57] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[23:14:27] <abcdadsas> No need to send binary.
[23:14:41] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:16:26] *** Quits: savolla (~quassel@95.10.207.85) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:18:01] *** Quits: sargon (~sargon@188.250.185.117) (Quit: Ex-Chat)
[23:20:19] <nightstrike> kinda adds overhead tho
[23:20:20] <APic> No Need, but also no Proscription
[23:20:27] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:20:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:20:59] <nightstrike> sending JOIN instead of.. like... 0x01... is 4 bytes instead of 1 bytes
[23:23:50] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[23:25:02] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:25:46] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:26:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[23:26:58] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:27:24] *** Quits: abcdadsas (~blah@43.252.113.66) (Ping timeout: 272 seconds)
[23:27:31] <ChoHag> Sometimes.
[23:27:42] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: charger)
[23:29:23] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[23:29:33] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:30:12] *** Joins: Atque (~Atque@user/atque)
[23:30:20] *** Quits: myusername (~myusernam@user/myusername) (Ping timeout: 250 seconds)
[23:41:47] *** Joins: Akuli (~Akuli@82-203-160-67.bb.dnainternet.fi)
[23:41:58] *** Joins: ReT (~ReT@c-73-186-91-85.hsd1.ct.comcast.net)
[23:42:18] <APic> 😸
[23:42:32] <APic> 7-Bit-ASCII > *
[23:42:33] <APic> srsly
[23:42:49] <APic> Not only according to my very own Numerology, 8 is the Evils ;)
[23:44:02] *** Joins: EAH_XxHeReTiKxX (~ReT@c-73-186-91-85.hsd1.ct.comcast.net)
[23:44:03] *** Quits: ReT (~ReT@c-73-186-91-85.hsd1.ct.comcast.net) (Read error: Connection reset by peer)
[23:44:47] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f425:fffb:4465:6325) (Read error: Connection reset by peer)
[23:45:16] *** Joins: jellie (~luv_panda@user/jellie)
[23:45:45] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[23:46:13] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:46:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[23:47:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:47:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[23:47:57] *** Quits: shailangsa (~shailangs@host109-159-108-227.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[23:48:08] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[23:48:56] *** Quits: EAH_XxHeReTiKxX (~ReT@c-73-186-91-85.hsd1.ct.comcast.net) (Ping timeout: 272 seconds)
[23:49:14] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[23:50:49] *** Joins: newpy (~newpy@206.168.231.90)
[23:51:54] <newpy> I know this is bad form, but I have a `typedef struct A {...} A;` and then a global variable `A* var;` in the same file. It's complaining about unknown type?
[23:55:57] <fizzie> Shouldn't. Unless your typedef was inside a block or something.
[23:56:20] *** Joins: Betal (~Betal@user/betal)
[23:57:23] <fizzie> ,cc typedef struct A { int x; } A; A *var; int main(void) { printf("var %s NULL", var ? "isn't" : "is"); } // no problems with this
[23:57:25] <candide> fizzie: var is NULL
[23:59:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
