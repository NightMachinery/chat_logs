[00:00:31] *** Joins: Charadon (~Charadon@155.138.164.183)
[00:01:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:03:10] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[00:08:01] *** Joins: MatthiasG2 (~matthias@i6DFA038C.versanet.de)
[00:08:43] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:09:17] *** Quits: tavares (~tavares@user/tavares) (Ping timeout: 240 seconds)
[00:09:37] *** Joins: inlight (~thomas@157.35.60.131)
[00:09:37] *** Quits: inlight (~thomas@157.35.60.131) (Changing host)
[00:09:37] *** Joins: inlight (~thomas@user/inlight)
[00:09:49] *** Joins: vandito (~vandito@131.0.224.113)
[00:10:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4) (Quit: Quit)
[00:10:32] <pragma-> ,cc --version
[00:10:33] <candide> pragma-: gcc (GCC) 12.0.1 20220129 (R﻿ed Hat 12.0.1-0)
[00:11:36] <pragma-> https://gcc.gnu.org/gcc-12/changes.html
[00:11:37] <candide> Title of pragma-'s link: GCC 12 Release Series — Changes, New Features, and Fixes - GNU Project
[00:15:15] <bnchs> why is there so many allocations done by gethostbyname
[00:15:54] *** Quits: vandito (~vandito@131.0.224.113) (Quit: vandito)
[00:16:14] <euouae> are you even supposed to use these functions?
[00:16:18] <euouae> I think they're deprecated
[00:16:18] <pragma-> Hm, time to make candide default to -std=c2x instead of -std=c11
[00:16:23] <bnchs> wait what?
[00:16:30] *** Joins: tavares (~tavares@187.19.213.50)
[00:16:49] <bnchs> ,bash touch shit
[00:16:50] <candide> bnchs: Success (no output).
[00:16:55] <bnchs> ,bash ls | grep shit
[00:16:56] <candide> bnchs: shit
[00:17:17] <euouae> bnchs look up some modern networking book/guide/etc
[00:17:33] <euouae> also look at getaddrinfo()
[00:18:50] <bnchs> i'm sorry for killing candide
[00:18:59] <candide> b﻿nchs, That's alright.
[00:20:27] <bnchs> am i gonna be banned
[00:21:38] <ski> doesn't look dead, to me
[00:21:57] <bnchs> i may or may not have filled shit with 5 GB full of random data
[00:22:20] <ski> ,bash rm shit
[00:22:21] <candide> ski: Success (no output).
[00:23:44] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[00:26:57] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 250 seconds)
[00:28:55] *** Joins: inlight (~thomas@82.221.128.46)
[00:28:55] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[00:28:55] *** Joins: inlight (~thomas@user/inlight)
[00:31:29] *** Quits: inlight (~thomas@user/inlight) (Client Quit)
[00:31:33] <pragma-> I am considering making multiple candide vms and creating an -os option for the cc command
[00:31:59] <pragma-> picture it: cc -os openbsd <code>.  cc -os alpine <code>.   cc -os win10 <code>.
[00:32:42] <ioxzev1z> bnchs, use getaddrinfo
[00:32:52] <ioxzev1z> nvm
[00:33:17] <bnchs> no i'm still considering
[00:33:26] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4)
[00:33:27] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[00:33:27] <bnchs> my code still uses inet_ntoa, or inet_aton
[00:33:32] <ChoHag> pragma-: ssh openbsd-bob cc <code>
[00:34:22] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:35:22] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:35:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:40:17] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:43:34] *** Quits: myth (~myth@173.233.125.203) (Remote host closed the connection)
[00:44:23] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Ping timeout: 256 seconds)
[00:44:51] *** Joins: Whatshisface (~jon@user/Whatshisface)
[00:46:17] *** Quits: tavares (~tavares@187.19.213.50) (Ping timeout: 240 seconds)
[00:49:06] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4db1:e3b:c0ba:c184) (Ping timeout: 245 seconds)
[00:50:12] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:51:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:52:11] <drew> if I have a struct that has a bunch of ints in it and I initialize a struct later with something like `struct mystruct;`, the ints won't be initialized, right? What does this answer mean? https://stackoverflow.com/a/330867/3888080
[00:52:19] *** Quits: Iarfen (~quassel@181.43.57.127) (Ping timeout: 256 seconds)
[00:53:41] *** Joins: vandito (~vandito@131.0.224.113)
[00:53:47] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[00:53:47] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[00:54:20] *** Quits: strajder (~strajder@user/strajder) (Quit: brb)
[00:54:41] *** Joins: strajder (~strajder@user/strajder)
[00:55:19] <sham1> The designated initializer one?
[00:55:30] <constxd> NRK: based
[00:55:33] <constxd> NRK: u been using em?
[00:56:02] *** Quits: vandito (~vandito@131.0.224.113) (Client Quit)
[00:56:12] <drew> yes sham1
[00:56:42] <sham1> Well it means that you can use a designated initializer to initialize mystruct
[00:57:07] <fizzie> It also means if you initialize *anything* in the structure (even just a handful of fields), all fields will be initialized; the ones you didn't mention explicitly will be initialized to zero.
[00:57:19] <sham1> Like if it's something like `struct mystruct { int foo; int bar };`, `struct mystruct foo = { .foo = 4, };`, bar is set to zero
[00:57:51] <fizzie> If you don't have an initializer at all, though, that doesn't apply.
[00:57:57] <drew> I see
[00:58:19] <drew> and it looks like `struct mystruct {};` wouldn't work either because it's a GNU extension?
[00:58:25] <fizzie> (Your `struct mystruct;` example kind of looks like it's also missing either the struct tag or a declarator naming the variable.)
[00:59:05] <fizzie> What's GNU extension is `struct mystruct foo = {};`, for which `struct mystruct foo = {0};` is a standard equivalent.
[00:59:50] <drew> I was missing a declarator, my bad
[01:00:02] <drew> ok if I can do `struct mystruct foo = {0};` then that's perfect
[01:01:28] <fizzie> Yes, `{0}` is a universally applicable initializer as far as the standard goes. I seem to remember running into a few compilers that would complain about missing braces if the first member of the struct is of aggregate type, but I think nowadays they don't do that either for the special case of {0}.
[01:01:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:01:58] *** Quits: Ap3 (~ape@kanonenjagd.panzer.ninja) (Quit: bye)
[01:03:08] <fizzie> ,cc struct mystruct { int arr[2]; int x; }; struct mystruct foo = {0}; // no warnings, initializes all members of the structure to zero (or null pointers) recursively
[01:03:10] <candide> fizzie: no output: foo = {arr = {0, 0}, x = 0}
[01:03:52] <fizzie> ,cc struct mystruct { int arr[2]; int x; }; struct mystruct foo = {1}; // also allowed by the standard, initializes .arr[0] to 1 and the rest to zero; but GCC thinks it's potentially misleading so warns about it
[01:03:53] <candide> fizzie: warning: missing braces around initializer [-Wmissing-braces]  warning: missing initializer for field 'x' of 'struct mystruct' [-Wmissing-field-initializers]  note: 'x' declared here  error: unknown type name 'but'
[01:04:14] <fizzie> ...well, it would have been valid code but I added a semicolon in the comment.
[01:04:31] <pragma-> lol
[01:04:57] *** Joins: tavares (~tavares@187.19.213.50)
[01:07:05] <pragma-> hmm
[01:07:09] *** Quits: diiirt9 (~diiirt@user/diiirt) (Quit: Ping timeout (120 seconds))
[01:07:10] *** Joins: Ap3 (~ape@kanonenjagd.panzer.ninja)
[01:07:20] *** Joins: diiirt (~diiirt@user/diiirt)
[01:08:18] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[01:08:33] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[01:10:12] * pragma- makes a note to not split on semi-colons within comments
[01:10:27] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[01:10:57] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[01:11:21] *** Quits: Akuli (~Akuli@213.216.208.156) (Quit: Akuli)
[01:12:06] *** Joins: joev (~joev@user/joev)
[01:15:42] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:18:36] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[01:21:16] <euouae> so .so are for dynamic linking and .o can be used with -static for static linking?
[01:22:14] <Inline> afaik static files have a .a suffix or so
[01:22:39] <euouae> where can I understand more about .a, .so and .o files? and in particular using gcc with them
[01:23:30] <Inline> ah yes, .a is just an ar archive file, a listing of .o files
[01:23:49] <euouae> isn't https://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html decent?
[01:23:59] <Inline> https://stackoverflow.com/questions/5965171/what-is-a-file-with-extension-a
[01:24:01] <euouae> okay Inline so I thought .a wasn't entering the picture
[01:25:25] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:30:09] *** Joins: inlight (~thomas@82.221.128.46)
[01:30:09] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[01:30:09] *** Joins: inlight (~thomas@user/inlight)
[01:31:02] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:35:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:35:39] *** Joins: neo (~Neo@user/neo)
[01:35:39] *** ChanServ sets mode: +o candide
[01:35:39] *** neo was kicked by candide (Evaded $a:h4x0r set by candide)
[01:35:40] *** candide sets mode: +b *!*@user/neo
[01:37:17] *** Quits: tavares (~tavares@187.19.213.50) (Ping timeout: 240 seconds)
[01:39:35] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[01:40:00] *** Joins: terminalpusher (~terminalp@2a01:586:9ed:1:6a37:3ad8:8d25:55f4)
[01:41:16] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[01:44:43] *** Quits: ccl (~ccl@user/ccl) (Quit: leaving)
[01:44:45] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[01:45:02] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[01:45:35] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:45:36] *** Joins: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it)
[01:46:27] *** Quits: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it) (Changing host)
[01:46:27] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[01:49:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[01:53:00] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[01:53:45] *** Quits: MatthiasG2 (~matthias@i6DFA038C.versanet.de) (Ping timeout: 256 seconds)
[01:54:21] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8)
[01:55:06] <hsv> Is it safe to do: unsigned u = fgetc(input); if (u == EOF) ... ?
[01:55:36] *** Joins: MatthiasG2 (~matthias@i6DFA03D9.versanet.de)
[01:56:08] <floatcomplex> should be a compiler warning
[01:56:23] <floatcomplex> ,cc unsigned u = fgetc(input); if (u == EOF)
[01:56:24] <candide> floatcomplex: error: 'input' undeclared
[01:56:28] <floatcomplex> whatevr
[01:56:41] <hsv> no warning with -Wall -W -Werror -Wextra
[01:56:52] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[01:56:53] <floatcomplex> ,cc unsigned u = fgetc(stdin); if (u == EOF) abort();
[01:56:55] <candide> floatcomplex: [warning: comparison of integer expressions of different signedness: 'unsigned int' and 'int' [-Wsign-compare]] no output: u = 66
[01:56:59] <floatcomplex> that warning
[01:57:44] <hsv> sure, but what bad thing could happen in this case?
[01:58:31] <floatcomplex> well, since you insist on using -Werror, the immediate effect is it doesn't compile at all with newer compilers than yours :)
[01:58:32] <hsv> does EOF get promoted to unsigned?
[01:59:07] *** Joins: nphard (~nphard@p200300cc0f22ca00e22ab3429e6fe2bb.dip0.t-ipconnect.de)
[01:59:18] <hsv> where do i *insist* on using -Werror, why are you evading the question? :p
[01:59:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:59:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[02:00:14] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[02:00:35] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:00:53] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[02:01:06] <fizzie> Yes, in `<unsigned> == <int>`, the operand with type `int` does get converted to `unsigned`.
[02:01:19] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[02:01:39] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[02:02:16] <fizzie> C11 6.3.1.8p1: "Otherwise [i.e., two integer types that, after promotion, have opposite signedness], if the operand that has unsigned integer type has rank greater *or equal* to the rank of the type of the other operand, then the operand with signed integer type is converted to the type of the operand with unsigned integer type."
[02:03:02] <fizzie> `int` and `unsigned` (int) are a pair of corresponding signed/unsigned types, so they have equal conversion rank (6.3.1.1p1), and the rule applies.
[02:03:09] *** Quits: nitrix (~nitrix@user/nitrix) (Ping timeout: 256 seconds)
[02:04:49] <hsv> And the return value of fgetc() also undergoes the same conversion.
[02:05:59] <nomagno> Is it safe to do something like the following? int *ptrarray[3] = {0, 1, 2}; if(ptrarray[1] == 2) /Flag Foobar is set/
[02:06:41] *** Parts: nphard (~nphard@p200300cc0f22ca00e22ab3429e6fe2bb.dip0.t-ipconnect.de) (WeeChat 3.0)
[02:06:47] <nomagno> ptrarray[2], in this example, sorry
[02:07:08] <nomagno> Of course this flies in the face of implementations that actually will leash out addresses 0, 1, and 2. But can I rely on this specific comparison always being true, no dereferences involved?
[02:07:10] *** Joins: nitrix (~nitrix@user/nitrix)
[02:07:17] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[02:07:42] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[02:08:20] <fizzie> hsv: Yes; for initialization, "the same type constraints and conversions as for simple assignment apply" (6.7.9p11). So I think it's "safe" in that sense. At least as long as (unsigned) INT_MIN > UCHAR_MAX. And if you're in the camp where that's *not* true, chances are it's also not true that INT_MAX >= UCHAR_MAX, and fgetc's whole convention of using "an unsigned char, converted to int" is very
[02:08:21] <fizzie> dubious.
[02:08:25] *** Joins: joev (~joev@user/joev)
[02:08:25] <hsv> nomagno: technically no, you may not operate on a pointer unless it points to valid memory or one-past end of array, i think.
[02:09:59] <fizzie> Well, to begin with, converting an integer to a pointer (6.3.2.3p5): "Except [null pointer constants], the result is implementation-defined, might not be correctly aligned, might not point to an entity of the referenced type, and might be a trap representation."
[02:10:19] <hsv> fizzie: i'm reading binary data from a file.  it makes it easier/safer to read in as unsigned, although i still need to compare against EOF.
[02:10:34] *** candide sets mode: -b *!*@user/neo
[02:11:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:11:24] <nomagno> I just need more NULL-like constants for this one data structure
[02:11:32] <fizzie> Personally, I'd just do `int c; while (c = fgetc(input), c != EOF) { unsigned char byte = c; /* work on byte */ }`.
[02:11:34] <euouae> hsv any reason not to use uint8_t?
[02:11:42] *** Joins: neo (~Neo@user/neo)
[02:11:56] <hsv> euouae: yes, it'll hide the EOF.
[02:11:58] <fizzie> nomagno: The portable choice is addresses of some sentinel objects that are dedicated for that purpose.
[02:12:16] <euouae> hsv I meant, use uint8_t with the functions that read uint8_t
[02:12:57] <hsv> euouae: in which case passing in 'int' c to a function that takes uint8_t is complains.
[02:13:06] <fizzie> As in, at file scope, `const int special, magic;` and then use &special and &magic as your null-pointer-like special values.
[02:13:07] <hsv> at *some* point it must be cast.
[02:13:25] <euouae> What I mean is, dont' use fgetc, use some other API that uses uint8_t
[02:13:37] <hsv> euouae: such as?
[02:13:40] <fizzie> (Yes, it "wastes" the storage allocated to two `int` objects, but seriously.)
[02:13:53] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[02:13:58] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[02:14:37] <euouae> fizzie you can save one object by using int special[1]; and pointing one-past for magic
[02:14:43] <euouae> :D
[02:14:45] <SamuelMarks> hsv - One before start of array also I believe
[02:15:02] <fizzie> euouae: Well... the one-past pointer may compare equal to some "real" pointer.
[02:15:02] <SamuelMarks> euouae - Good ol' ANSI C tricks
[02:15:40] <euouae> fizzie, oh yeah you're right! nevermind :)
[02:16:16] <fizzie> Obligatory standards reference, C11 6.5.9p6: "Two pointers compare equal if an only if [the usual cases], or one is a pointer to one past the end of one array object and the other is a pointer to the start of a different array object that happens to immediately follow the first array object in the address space."
[02:16:29] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:16:46] <fizzie> (And no, there's no "one before an array" pointer.)
[02:17:53] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[02:18:17] *** Quits: terminalpusher (~terminalp@2a01:586:9ed:1:6a37:3ad8:8d25:55f4) (Remote host closed the connection)
[02:19:51] <floatcomplex> ,cc size_t X = 10; float * x = ((float *)calloc(X, sizeof(float))) + 1; printf("%g\n", x[-1]);
[02:19:53] <candide> floatcomplex: 0
[02:20:00] <floatcomplex> fizzie: ^ ?
[02:20:13] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:20:30] <fizzie> I mean, there's no special support for constructing a pointer to one element "before" each array object, the same way there's one for one past the end.
[02:20:49] <nomagno> Unfortunately, I'm probably going to need to come up with something else
[02:21:19] <nomagno> Because I can't use a special pointer to mark read-only memory AND pretend to keep that memory functional
[02:21:25] <floatcomplex> nomagno: using pointers to unique global ints as sentinels is valid
[02:21:34] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[02:21:45] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[02:21:48] <nomagno> floatcomplex: I know, just realized it wouldn't work
[02:22:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[02:22:13] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:22:34] *** Joins: nitrix (~nitrix@user/nitrix)
[02:23:32] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[02:24:05] <nitrix> Well, that's a ride.
[02:24:07] <nitrix> How many times did my bouncer disconnect?
[02:24:36] <floatcomplex> idk you'd be mad to have joins parts quits not silenced in this channel
[02:24:53] <Inline> heh
[02:24:53] <ski> twice
[02:25:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:25:31] <Inline> i think you should all redirect all of those messages to a dedicated tab
[02:25:35] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[02:26:07] <Inline> makes only sense in combination with timestamps enabled tho
[02:26:19] <hsv> silenced except for nicks that have talked recently.
[02:26:31] <floatcomplex> at one point like two years ago i had a script that someone linked that would silenced...what hsv just said
[02:26:39] <nitrix> Interesting. The cluster is struggling, according to the events, GKE fired up 10 new nodes and decided to move the ZNC pod at the same time.
[02:26:56] <Inline> if you want later have to have a look ... otherwise it doesn't matter it's just clutter
[02:27:36] <fizzie> I know a bunch of people who do the "smart joins" thing, where joins/parts are hidden except until when a person starts talking for the first time, at which point it's shown. And maybe for parts if they've been talking recently, or something. I forget exactly how that goes.
[02:28:03] <Inline> joins/parts/nick-renames
[02:28:10] <floatcomplex> well it's not built into irssi that i know of so i can't be bothered
[02:28:33] <nitrix> I figured I wouldn't need a PodDisruptionBudget since the cluster rarely scales, but the pod got thrown around between nodes a lot in the last few days.
[02:28:37] <hsv> floatcomplex: it's there to be loaded in recent distro.
[02:29:02] <nitrix> candide even banned me once.
[02:29:03] <candide> No such factoid 'even'; Found 3 factoids containing 'even': [#c] c++ trigraph ub
[02:29:03] <hsv> buster.
[02:29:25] <Inline> you sense the absence of some nick anyway, if you can't write the nick or tab-complete....
[02:29:35] <floatcomplex> candide can't even
[02:29:48] <candide> f﻿loatcomplex, Yes.
[02:30:10] <Inline> no idea about irssi, i think i used that way way back, i use hexchat
[02:31:15] <Inline> hmmm, oh man, i thought CPPFLAGS was about CPP i.e. the compiler
[02:31:50] <Inline> it's about the pre processor, and it's the shared thing between CFLAGS and CXXFLAGS
[02:32:11] <Inline> and include directives make only sense there
[02:32:12] <twkm> ewww, CXXFLAGS.
[02:32:40] <euouae> Inline then again, noone calls C++ as CPP
[02:32:41] <euouae> :D
[02:32:43] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:32:43] <fizzie> CXXXFLAGS is where you put all the adult-only flags.
[02:33:12] <nomagno> HM... I have a bool array to mark if read-only or RW, and the uint8_t pointer array to map the memory to different 'chips' in the VM, where NULL indicates simply non-mapped
[02:33:25] *** Quits: pizdets (~pizdets@183.182.111.49) (Ping timeout: 256 seconds)
[02:33:57] <nomagno> Sounds good enough to me. Actually reduces the complexity of using extending my VM a fair bit
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.193)
[02:34:03] <Inline> now i just have to understand what PIE means
[02:34:07] <Inline> and PIC
[02:34:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:34:08] *** Viewday115 is now known as Viewday11
[02:34:11] <Inline> or pie and pic
[02:34:21] <ski> Position-Independent Code
[02:34:27] <hsv> peripheral interrupt enable
[02:34:34] <twkm> the documentation is probably on fire.
[02:34:41] <Inline> ooh, interrupt ?
[02:35:20] <hsv> Referenced in a makefile, probably not.
[02:41:07] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[02:43:08] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:43:43] *** Quits: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Ping timeout: 256 seconds)
[02:43:48] <SamuelMarks> piercing intellectual enterprise
[02:44:13] *** Joins: crashrep (~crashrep@user/crashrep)
[02:44:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:44:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:45:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:45:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:47:35] <bnchs> so w/o DNS resolution: 5kb~ heap, with DNS resolution 105kb~ heap
[02:47:44] <bnchs> i really hate gethostbyname
[02:48:52] *** Joins: epony (epony@user/epony)
[02:49:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:51:42] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[02:53:17] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[02:55:17] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[02:59:20] *** Quits: neo (~Neo@user/neo) (Quit: Leaving)
[02:59:26] <SamuelMarks> bnchs - Use `getaddrinfo` instead
[03:00:02] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[03:00:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:01:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:01:55] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[03:02:25] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[03:02:38] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[03:03:24] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[03:03:32] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:04:43] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:08:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[03:08:11] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:08:11] <twkm> it'll be just as bad, but at least you'll be using the not so ancient interface.
[03:08:48] <sham1> DNS in general is just terrible, but one learns to live with it
[03:09:44] *** Joins: NEYi (~NEYi@109.251.216.38)
[03:09:53] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[03:12:05] *** Joins: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[03:12:12] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:12:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:12:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[03:12:51] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[03:14:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:16:06] <bnchs> it's 104 kb heap
[03:16:24] <bnchs> 982 allocs, and most of it is by the DNS interface
[03:17:21] <bnchs> also it's causing some memory leaks
[03:17:38] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:19:28] <bnchs> i'm probably gonna make a cache so that i use the DNS interface less
[03:21:41] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 252 seconds)
[03:26:29] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:26:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:28:29] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[03:30:10] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:30:59] *** Quits: magla (~gelignite@d5361383.access.ecotel.net) (Quit: Stay safe!)
[03:32:07] <twkm> name to address mappings change more frequently than you might like.
[03:32:45] <bnchs> i just realized the memory leak was just the cache that the DNS interface made
[03:32:48] <bnchs> i feel stupid
[03:33:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[03:35:03] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:35:44] *** candide sets mode: -o candide
[03:38:30] *** Quits: bnchs (~bnchs@41.141.173.31) (Ping timeout: 250 seconds)
[03:39:56] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:40:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:41:11] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:43:26] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[03:44:10] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:44:18] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Read error: Connection reset by peer)
[03:50:43] *** Joins: nitrix (~nitrix@user/nitrix)
[03:53:39] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab)
[03:53:39] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19e7:ade0:dc6f:5dab) (Changing host)
[03:53:39] *** Joins: skapata (~Skapata@user/skapata)
[03:55:02] *** Quits: nitrix (~nitrix@user/nitrix) (Remote host closed the connection)
[03:56:24] *** Joins: nitrix (~nitrix@user/nitrix)
[03:57:57] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 240 seconds)
[03:59:25] *** Quits: nitrix (~nitrix@user/nitrix) (Client Quit)
[04:00:04] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[04:00:25] *** Joins: inlight (~thomas@82.221.128.46)
[04:00:25] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[04:00:25] *** Joins: inlight (~thomas@user/inlight)
[04:00:26] *** Joins: nitrix (~nitrix@user/nitrix)
[04:03:05] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[04:04:01] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:04:17] *** Quits: constxd (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[04:07:29] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[04:14:14] *** Quits: poprocks (~logan@bras-base-toroon1016w-grc-38-76-65-23-178.dsl.bell.ca) (Changing host)
[04:14:14] *** Joins: poprocks (~logan@user/poprocks)
[04:18:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:19:12] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[04:22:43] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:23:15] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[04:24:14] *** Joins: seninha (~seninha@user/seninha)
[04:25:50] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:29:07] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[04:30:24] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:31:12] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:31:17] <smallville7123> fizzie: so, basically,   the "base context" is the input, then it pushes the function content "9 foo(foo) 9" onto the stack and scans that until it is empty, and so on?
[04:32:18] <fizzie> Yeah. And in addition to the tokens, each context also captures which macros are turned off temporarily. Or something along those lines.
[04:32:50] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:32:57] <smallville7123> hmm alrighr
[04:33:01] <smallville7123> alright*
[04:33:48] <smallville7123> so in the case of this "Y(X)(z)"
[04:34:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:34:25] *** Viewday118 is now known as Viewday11
[04:35:14] <smallville7123> fizzie: when "Y(X)" is replaced with "X", the next input in the base context is "(X)", right?
[04:36:00] <smallville7123> in       #define X(a) a y \n #define Y(Z) Z  \n  Y(X)(z)
[04:36:08] *** Quits: Guest7572 (~luca0N@nautilus.luca0n.com) (Ping timeout: 250 seconds)
[04:36:25] <fizzie> No, the "Y(X)" has been consumed from the base context (well, strictly speaking the base context just reads directly from the lexer, it doesn't have an explicit list) and the only thing left in there is just the "(z)".
[04:36:42] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[04:36:46] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[04:36:48] <smallville7123> yea
[04:37:00] <smallville7123> i meant "(z)"
[04:37:37] <smallville7123> how does it expand "X(z)" when "(z)" is the next input from the lexer?
[04:38:26] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:39:27] <smallville7123> would it keep the expansion results from the last context pop and test to see if the expansion results pasted with the current input of the current context will form a valid macro?
[04:39:43] <smallville7123> eg "X" + "(z)" or similar?
[04:40:44] <smallville7123> tho a context may expand to "foo X" which "foo X" + "(z)"
[04:40:57] <fizzie> I don't think it's that explicitly, it's just treats input as a peekable (for lookahead) stream where you look at the top context; if it's exhausted, pop it off and look in the next one, and then all the way down to the base context.
[04:41:04] <smallville7123> what happens in that case, assuming #define foo foo X
[04:41:49] <smallville7123> as "foo" cannot be expanded twice from the base context
[04:41:54] *** Joins: hanzo (uid532183@user/hanzo)
[04:42:14] <smallville7123> or rather, from the current context
[04:42:59] <fizzie> So in your original Y(X)(z) example, after Y(X) has been expanded to "X", it will look at the pushed context, read "X", peek at the next token (which since the pushed context is exhausted will be the base context, i.e., the input), see that it's '(', and decide it needs to expand the X macro, and then keep reading tokens until the next ')', as a side effect popping off the empty context.
[04:43:16] <smallville7123> eg "foo(z)" -> { foo -> "foo X" } -> "foo X(z)" // foo is elegible for expansion again but it should not be expanded
[04:43:38] <fizzie> Can you write out that last example in full?
[04:43:43] <smallville7123> brb, breakfast
[04:44:49] <fizzie> (As in, the list of macros and the input.)
[04:46:36] *** Joins: qaluh (~qaluh___@p200300e61718b3006245cbfffea017b6.dip0.t-ipconnect.de)
[04:47:37] <qaluh> hello guys, just quick asking: is it a good approach to check a binary is installed to use popen and ls DIR and GREP the bin?
[04:48:42] *** Joins: tavares (~tavares@187.19.213.50)
[04:48:43] <BtbN> What if you run on an OS without ls/grep?
[04:48:44] *** Quits: tavares (~tavares@187.19.213.50) (Remote host closed the connection)
[04:48:57] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[04:49:47] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[04:50:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:50:52] <qaluh> so its better to directly execute and check return code? will it be always what i'm expecting?
[04:50:55] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:51:36] *** Joins: quartz (~quartz@user/quartz)
[04:53:07] <quartz> Trying to convert an int into hex by using << and & operators. My solution is off by a factor of 2, and I can't figure out why. https://godbolt.org/z/oEncodvb6
[04:53:08] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:54:13] <fizzie> Looks more like converting it into binary than hex.
[04:54:37] <quartz> binary sorry
[04:54:39] <quartz> Yeah
[04:54:45] <quartz> typo
[04:54:45] <fizzie> And it's off because you do shifts from `num >> 32` to `num >> 1`, while it should be `num >> 31` to `num >> 0`.
[04:55:02] <quartz> Ahh
[04:55:36] *** Quits: MatthiasG2 (~matthias@i6DFA03D9.versanet.de) (Quit: Lost terminal)
[04:55:40] *** Joins: crashrep (~crashrep@user/crashrep)
[04:56:24] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:56:54] <smallville7123> back
[04:57:30] <smallville7123> "11:13:38 fizzie: Can you write out that last example in full?" this one? 11:13:16 smallville7123: eg "foo(z)" -> { foo -> "foo X" } -> "foo X(z)" // foo is elegible for expansion again but it should not be expanded
[04:58:02] <fizzie> Well, whichever one you were curious about.
[04:58:19] <smallville7123> #define X(z) z b \n #define foo foo X \n foo(z)
[04:59:22] <qaluh> BtbN: ty, I got this: https://bpa.st/2L3Q
[04:59:53] <BtbN> Just do what you'd do if it exists, and catch the error if it doesn't?
[05:00:23] <BtbN> That link is a bash script?
[05:00:34] <qaluh> yes
[05:00:35] <BtbN> And the last two lines of it are superfluous
[05:01:11] <smallville7123> quartz: i know how to do that
[05:01:29] <qaluh> huh? how?
[05:01:49] <smallville7123> (in fact i have << functions specifically designed for binary and hex)
[05:02:40] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:05:00] <BtbN> I'm very confused how this relates to C
[05:05:05] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[05:05:17] <quartz> smallville7123: But why not just use %x?
[05:05:52] <quartz> FOr hex
[05:06:06] <BtbN> qaluh, what are you actually trying to do?
[05:06:29] <fizzie> smallville7123: Okay, so for that... we start with the base context conceptually containing "foo ( z )". It reads out foo. It's an object-like macro, so we push a context that contains its unexpanded tokens, so "foo X"; the base context has "( z )" remaining. Then we look at the next token of the topmost context. It's "foo", but in this context it's not eligible for expansion, so it's just copied to
[05:06:29] <BtbN> If you want to execute some external tool, just execute it. It either works, or fails and let you know about the failure
[05:06:31] <fizzie> output. The next token is X. It's a function-like macro, so we peek at the next token. Since the top context is exhausted, it comes from the base context, and is a '('. We pop off the `foo` context, read the '(', and then continue reading tokens up to the matching ')' as the macro parameters. This consumes the remaining "( z )" from the input. Then we push on a new context that contains X's body after
[05:06:33] <fizzie> argument substitution, so in this case from X(z) -> "z b". We resume reading/rescanning from the top context. The next token is z, which is not a macro, so it's copied to output. The token after that is "b", which is also not a macro, and is copied. The X's context is now exhausted and popped off. The base context is *also* empty. No more output is generated. We've  produced the token sequence "foo z
[05:06:35] <fizzie> b", which is what that should expand to.
[05:06:54] <fizzie> (I probably should have put that into a paste or something.)
[05:06:59] <smallville7123> quartz: tho for hex i just use std::hex in a temporary string stream
[05:07:09] <smallville7123> quartz: https://gist.github.com/mgood7123/ec3439bdf75c902df97fccb7c13c0b5e
[05:07:10] <candide> Title of smallville7123's link: binary.cpp · GitHub
[05:07:36] <smallville7123> class Number is simply a holder for all integer types
[05:08:02] <smallville7123> so just substitute it for say int or int64_t or long or whatever
[05:08:04] <TonyStone> I am having an odd issue... I have a C program that repeadetly prints to stdout.  Then i execute the C program and read it in my program with pipes.  But i am noticing when the C program has /dev/urandom open I cannot get what it prints in my other program
[05:08:50] <TonyStone> no if i close(dvRNDM); i can get what the C program is printf ing each time in its loop...
[05:09:05] <qaluh> BtbN: its ok, you helped me alot :) ty
[05:09:18] <smallville7123> also i just realized this is for C and not C++, but for binary you should be able to translate it to C, for std::hex i am not sure how to emulate that in C
[05:09:38] <quartz> smallville7123: yeah I"m trying to do something like that for C
[05:09:51] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[05:10:09] <smallville7123> and "XLOG_COMPILE_ENDIAN_IS_BIG_ENDIAN" is set by cmake
[05:10:11] <smallville7123> include(TestBigEndian)
[05:10:11] <smallville7123> TEST_BIG_ENDIAN(XLOG_COMPILE_ENDIAN_IS_BIG_ENDIAN)
[05:10:13] <quartz> Sorry but the spacing is off, and I can't figure out why: https://godbolt.org/z/v4xKT5hzz
[05:10:36] *** Parts: qaluh (~qaluh___@p200300e61718b3006245cbfffea017b6.dip0.t-ipconnect.de) (Leaving)
[05:10:45] <TonyStone> I cannot even properly form my question here... lol... I wrote a program in Lazarus that executes an external terminal program(written in C)
[05:10:56] <smallville7123> quartz: spacing was a tricky one for me to get right
[05:12:25] <TonyStone> My problem is there is a while loop in the C program that does printf("some strings"...    and i cannot get it piped into my other program unless i call close(devRandom) in that loop....
[05:13:02] *** Emet-Selch is now known as Azem
[05:13:06] <smallville7123> quartz: i do this for mine https://godbolt.org/z/dxoeqPz8E
[05:13:22] <TonyStone> dam it i have to go.  I will come back and try to think better how to form my question...  I am not a C programmer by any means!  I am learning Pascal currently so C is a bit different...
[05:13:50] <smallville7123> fizzie: *reads
[05:13:53] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[05:14:17] *** luca0N is now known as Guest8857
[05:14:46] <quartz> smallville7123: Hahaha nice solution, but can't I do it without the two extra ints:
[05:15:55] <smallville7123> fizzie: alright, i think i understand it now :)
[05:16:16] <smallville7123> quartz: it works tho
[05:16:33] *** Quits: Guest8857 (~luca0N@nautilus.luca0n.com) (Remote host closed the connection)
[05:16:54] <quartz> smallville7123: Yeah true, thanks.
[05:17:05] <quartz> I just wanted to get it to work without the additional ints
[05:17:20] <smallville7123> also binary should be printed in the host endian when possible unless you intend to convert to specific endian
[05:17:47] <quartz> smallville7123: Yeah true.
[05:17:58] <smallville7123> try to adapt mine to C
[05:18:03] <smallville7123> from the gist
[05:18:09] <smallville7123> binary.h and binary.cpp
[05:18:36] <quartz> OK
[05:18:37] <smallville7123> or optionally compile it as a C++ shared library and link to your C program
[05:18:46] *** Quits: koolazer (~koo@user/koolazer) (Remote host closed the connection)
[05:18:51] <smallville7123> (need to extern "C" in C++)
[05:19:51] <smallville7123> eg      extern "C" void foo_C () {};      void foo_CPP () {};      // foo_C can be used by C as it is not mangled, foo_CPP cannot as it will be mangled
[05:21:51] *** Joins: moog (~moog@107.126.53.132)
[05:22:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:22:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:22:05] *** Joins: wroathe (~wroathe@user/wroathe)
[05:23:21] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 250 seconds)
[05:25:19] <smallville7123> fizzie: hmmm i need to figure out how to adapt this to work with my parser combinator
[05:25:56] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:26:15] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[05:26:15] *** Quits: overrider (~overrider@user/overrider) (Read error: Connection reset by peer)
[05:26:50] *** Joins: overrider (~overrider@user/overrider)
[05:27:22] <smallville7123> for "foo ( z )"  i currently expand "Z" then expand "foo" as per C preprocessing specefication
[05:28:01] <smallville7123> in which    #define X(z) z b \n #define foo foo X \n foo(z)
[05:29:13] <smallville7123> "foo ( z )",    "z" -> "z",    "foo" -> "foo X",    "foo" -> "foo
[05:29:58] <smallville7123> "foo ( z )",    "z" -> "z",    "foo" -> "foo X",    "foo" -> "foo",    "X" -> "X",    "foo X ( z )"
[05:31:21] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 256 seconds)
[05:32:25] <smallville7123> wait no
[05:32:54] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[05:32:55] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[05:34:18] *** Joins: gig (~gig@user/gig)
[05:34:30] <smallville7123> in this case, foo is a object-like macro, so   "foo(z)" -> "foo" -> { "foo -> foo X" } -> "(z)" -> { no macro defined for "z" } -> "(z)" -> output "foo X(z)"
[05:34:42] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:41:09] <fizzie> A different mechanism (which I can't recall if I saw somewhere or just came up with) would be: have a single list of things that are either tokens or actions. Initially, initialize it to contain the entire input file's tokens. Then do the following as long as tokens remain: if the input starts with a macro, replace the `foo` or `foo ( ... )` macro invocation with a "disable `foo`" action, followed by
[05:41:11] <fizzie> its replacement list (for function-like macros, with a recursive side-step of fully expanding all the arguments), followed by an "enable `foo`" action. Otherwise, just remove the first item: if it's an action, execute it; else, output it.
[05:42:07] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 256 seconds)
[05:42:15] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[05:42:21] <smallville7123> in the case where foo is a function-like macro,    "foo(z)" -> "foo" -> argument check -> expansion -> { "z" -> { no macro defined for "z" } -> "z" } -> function argument { define x z } -> {"foo" -> "foo x" -> { foo -> blacklisted } -> { "x" -> "z" } -> output "foo z"
[05:43:07] <fizzie> Anyhow, sleeptime.
[05:43:12] <smallville7123> -> replace "foo(z)" with "foo z"
[05:43:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:44:07] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[05:44:51] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[05:44:58] *** retr0 is now known as k82k8
[05:45:09] *** k82k8 is now known as retro
[05:45:28] *** retro is now known as retr0
[05:47:38] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[05:49:16] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[05:49:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[05:50:51] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[05:52:32] <smallville7123> so, my first problem is getting more tokens
[05:53:10] <smallville7123> https://gist.github.com/mgood7123/0e73461516aafa43573252c264ec0525
[05:53:24] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:55:29] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:56:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab)
[05:56:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:492b:bea1:e3dc:aaab) (Changing host)
[05:56:06] *** Joins: skapata (~Skapata@user/skapata)
[05:56:17] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[05:56:43] <smallville7123> as currently i expand a function argument by "function_name->match(replacement);"
[05:57:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:57:45] <smallville7123> during which, the input stream gets "pushed" to be replacement
[05:57:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[05:58:36] *** Joins: ferdna (~ferdna@user/ferdna)
[05:58:59] <smallville7123> eg base input: "\nY(X)(z)\n"             pushed input: "X"
[05:59:45] <smallville7123> so to fix this i need a way to access the parent input (if any) from the current input
[06:00:12] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (Ping timeout: 250 seconds)
[06:00:29] <smallville7123> which will allow me to retrieve tokens from the parent input
[06:00:37] *** Joins: malina (~malina@user/malina)
[06:00:51] <wroathe> I don't buy it
[06:01:03] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:01:07] <smallville7123> wroathe: ?
[06:01:17] *** Parts: orc (sid509852@user/orc) ()
[06:01:45] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:02:34] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:04:53] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:06:28] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Client Quit)
[06:06:45] <smallville7123> tho i would also need a way to choose if the parser should retrieve tokens from the parent input or if it should ignore the parent input
[06:08:19] <smallville7123> tho im not sure where it would be appropriate to allow parent input, where it would be appropriate to disallow parent input
[06:08:36] <smallville7123> (eg in what cases each would be useful)
[06:08:43] <smallville7123> would each be*
[06:09:00] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[06:11:06] <omegatron> what is this obsession with macros anyway? why not write down plain c source code?
[06:13:50] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[06:13:57] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[06:16:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:17:18] <smallville7123> to avoid grabbing exessive input from parent, it should stop grabbing input when the rule succeeds, right?     eg if it needs only to grab "ab" from parent then it will obtain tokens "a","b" and then the rule will succeed, and "ab" will be consumed in parent input... tho how would this work when sub parsing?
[06:17:58] <omegatron> you don't understand - why do you use macros at all?
[06:18:04] <smallville7123> eg "12345" -> subparse "123" -> subparse "1" > needs "23" but current input has no more tokens, should we grab from "123" or "12345" ?
[06:18:24] <smallville7123> omegatron: i am making a macro preprocessor
[06:19:16] <omegatron> uh - what for? the gcc/clang-built-in is not good enough or for a completely other  language?
[06:19:21] <smallville7123> "123" is the logical parent to "1" so it should grab input from "123", right?
[06:21:16] <smallville7123> tho what happens if it needs more? "12345" is parent of "123" so it should grab an additional "45" so the input would need to be tracked in some way to ensure for example it does not grab whatever is after "12345" instead, right?
[06:21:39] <smallville7123> eg "12345" could be from a capture
[06:22:19] <smallville7123> omegatron: for fun
[06:22:22] *** Joins: Rynn_ (~rynn@216.30.158.198)
[06:22:40] <omegatron> you know of  gnu m4  ?
[06:22:47] <smallville7123> yes
[06:23:27] *** Quits: Rynn_ (~rynn@216.30.158.198) (Client Quit)
[06:25:30] <smallville7123> if i am using iterators to keep track of input, then by definition, if i put "12345" in an iterator A and then subparse "123" then the iterator A would have a next token of "4", and iterator "123" when subparsed "1" will have a next token of "2", so it should result in correctly grabbing tokens from the parent iterator input, right?
[06:25:39] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[06:26:27] *** Joins: seninha (~seninha@user/seninha)
[06:31:15] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:32:17] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[06:32:49] <AmR> Can I find function like printf work with unicode and ansi too ?
[06:33:36] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:33:57] <omegatron> AmR: the icu4c library might be useful:   https://unicode-org.github.io/icu/userguide/icu4c/
[06:33:58] <candide> Title of omegatron's link: ICU4C - ICU Documentation
[06:33:59] *** Quits: maladaptive_75 (~maladapti@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Read error: Connection reset by peer)
[06:34:06] <smallville7123> AmR: doesnt printf already work with unicode?
[06:34:30] <AmR> I mean take wchar_t
[06:34:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:34:32] *** Viewday113 is now known as Viewday11
[06:34:45] <smallville7123> eg  printf("<UNICODE HERE>\n");
[06:34:49] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:35:14] <AmR> Can Work with char* and wchar_t
[06:35:43] <smallville7123> try and see
[06:36:19] <smallville7123> ,c printf("test\n")
[06:36:21] <candide> smallville7123: test
[06:37:13] <smallville7123> ,c printf("test unicode: 🍎1🍌2\n")
[06:37:15] <candide> smallville7123: illegal backslash escape sequence in string, at character offset 41 (before "\\303\\260\\302\\237...") at /usr/local/bin/guest-gdb line 147, <GEN1> line 50.
[06:37:24] <smallville7123> ,c printf("%s", "test unicode: 🍎1🍌2\n")
[06:37:52] <smallville7123> ,c printf("do i still work?\n")
[06:37:55] <candide> smallville7123: do i still work?
[06:37:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[06:38:00] <smallville7123> hmm
[06:38:14] <smallville7123> ,c printf("%s\n", "test unicode: 🍎1🍌2")
[06:38:17] <candide> smallville7123: illegal backslash escape sequence in string, at character offset 52 (before "\\303\\260\\302\\237...") at /usr/local/bin/guest-gdb line 147, <GEN1> line 50.
[06:39:27] <smallville7123> works here https://godbolt.org/z/hr7Kj9a57
[06:39:32] <smallville7123> AmR:
[06:39:39] <AmR> Yea
[06:40:00] <smallville7123> AmR: https://godbolt.org/z/9j6fnxfPj  *
[06:40:27] <AmR> I want use arg as I want char* or wchar_t
[06:41:58] <AmR> And "" And L""
[06:43:49] <smallville7123> AmR: https://godbolt.org/z/YzhcxhGd6
[06:43:58] <smallville7123> im not sure how to make L"" work
[06:44:33] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[06:44:56] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[06:47:10] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[06:47:11] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[06:47:46] *** Joins: ipgd (~IPGD@180.254.226.48)
[06:49:48] *** Joins: sunny933 (~sunny93@wireguard/tunneler/sunny93)
[06:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:50:31] *** Quits: derelict (~derelict@user/derelict) (Quit: bye)
[06:50:32] *** Quits: ldlework (~hexeme@user/hexeme) (Remote host closed the connection)
[06:50:51] *** Joins: derelict (derelict@user/derelict)
[06:51:25] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Ping timeout: 240 seconds)
[06:51:25] *** sunny933 is now known as sunny93
[06:52:44] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:22] *** Joins: hexeme (~hexeme@user/hexeme)
[06:54:38] *** Joins: masoudd (~masoudd@user/masoudd)
[06:55:12] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:00:33] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[07:00:57] *** Quits: ominionx (~ominionx@172.58.136.5) (Read error: Connection reset by peer)
[07:01:56] *** Joins: masoudd_ (~masoudd@user/masoudd)
[07:03:57] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[07:04:03] *** Joins: ominionx (~ominionx@172.58.136.5)
[07:04:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:06:53] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:06:56] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:11:42] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:14:19] *** Quits: ominionx (~ominionx@172.58.136.5) (Quit: Leaving)
[07:15:54] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:17:33] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[07:17:39] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[07:17:51] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-22-55.pa.qld.optusnet.com.au)
[07:20:04] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:20:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[07:22:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:24:36] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[07:28:40] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[07:31:32] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:31:32] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:31:32] *** Joins: wroathe (~wroathe@user/wroathe)
[07:31:43] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[07:32:32] *** Joins: Oddity (~Oddity@user/oddity)
[07:34:08] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:34:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:48] <retr0> im monologuing here because the other channel is dead
[07:39:28] <retr0> when I was like 9 or 10 some shit stole my gameboy advance and 2 games
[07:39:34] <retr0> he was also my best friend
[07:39:41] <retr0> thats how fucked up my town is
[07:40:08] <retr0> they were pokemon gold and pokemon ruby & sapphire
[07:40:14] <retr0> iirc
[07:40:52] <retr0> I renember when I used to swap the rom cartriges while the game was running then the sound would go all garbled and id take a shit in my pants
[07:41:11] <retr0> but I got used to it so I no longer shitted myself
[07:41:38] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[07:42:01] <retr0> lemme put it this was, 99% of my ex-friends have turned out to be assholes
[07:45:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:46:00] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:46:08] <retr0> this way*
[07:46:16] <retr0> oh this channel is fucking dead too
[07:46:25] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:46:44] <retr0> ever heard of /part?
[07:46:49] <retr0> do you know what /part is
[07:46:52] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[07:46:56] <retr0> fricking sock chewing asses
[07:48:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[07:51:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:51:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:51:58] *** Joins: wroathe (~wroathe@user/wroathe)
[07:53:58] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[07:54:00] *** masoudd_ is now known as masoudd
[07:54:16] *** Joins: manjaroi3 (~manjaro-i@112.169.116.78)
[07:55:10] *** ChanServ sets mode: +o candide
[07:55:10] *** retr0 was kicked by candide (ever heard of /kick)
[07:55:29] *** Joins: mahmutov (~mahmutov@37.155.77.190)
[07:56:01] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:56:06] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[07:56:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:56:34] *** Joins: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com)
[07:57:03] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[07:58:57] *** Quits: BobTheTomato (~paul@141.217.247.7) (Ping timeout: 240 seconds)
[08:02:36] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[08:02:43] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[08:03:37] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[08:05:12] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[08:05:15] <retr0> rude but ok
[08:05:37] <retr0> you could have at least pitied me
[08:05:44] <retr0> POKEMON GOLD cmon
[08:05:54] <nitrix> ,mute retr0
[08:07:10] *** Joins: joolma (uid527699@id-527699.uxbridge.irccloud.com)
[08:07:53] <retr0> fine ill ask a C question then
[08:09:21] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[08:09:37] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[08:09:53] <retr0> is there anything wrong with my code https://onlinegdb.com/NXuQpdF6m
[08:11:12] <ski> looks ok
[08:11:20] <retr0> thanks
[08:11:29] <ski> perhaps cast those expressions to `(void)'
[08:11:38] <caze> return isn't a function.
[08:12:06] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[08:12:10] <retr0> (0) is an expression
[08:12:38] <retr0> I hate people who call functions like this printf ("");
[08:12:52] <retr0> should be illegal
[08:13:31] <retr0> and people who treat keywords as functions, if(){} instead of if (){}
[08:13:32] <no-n> yeah it's even worse than if()
[08:27:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:30:11] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[08:33:22] *** Joins: Guest13 (~Guest13@2601:845:c201:59b0::4c6a)
[08:33:31] *** Joins: Viewday110 (~Viewday@user/viewday)
[08:34:01] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:34:02] *** Viewday110 is now known as Viewday11
[08:34:36] *** Parts: Guest13 (~Guest13@2601:845:c201:59b0::4c6a) ()
[08:38:11] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[08:45:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:46:10] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[08:48:17] *** Quits: ipgd (~IPGD@180.254.226.48) (Read error: Connection reset by peer)
[08:50:21] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[08:52:07] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[08:52:51] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-22-55.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[08:57:00] *** Quits: Matt|home (~matt@adsl-74-233-58-56.mia.bellsouth.net) (Ping timeout: 250 seconds)
[08:58:20] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:03:25] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) ()
[09:04:14] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[09:06:52] *** Joins: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788)
[09:10:04] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4) (Quit: Quit)
[09:10:11] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Remote host closed the connection)
[09:11:08] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:12:37] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:16:13] <zwr> hmm, if I start my C program with `#if 0`, I can write a shell script between that and a corresponding `#endif` and still have a valid C source file...
[09:16:30] <zwr> and a valid shell script
[09:16:57] <zwr> what horrible thing could I do with this
[09:19:37] *** Joins: trampel (~trampel@2601:602:9a00:49d:811:d0fd:329f:c4cb)
[09:22:36] *** Joins: malina (~malina@user/malina)
[09:26:16] *** Joins: Betal_ (~Betal@user/betal)
[09:27:09] <rcf> zwr: self-compiling C is the obvious application.
[09:27:25] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[09:28:00] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:28:28] *** Parts: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[09:29:18] <retr0> what is the difference between a compiler and a Just in time compiler
[09:30:50] <retr0> hey girl I'd love to POP and RETN your CALL
[09:32:03] *** Quits: caze (~caze@user/caze) (Quit: caze)
[09:32:07] <no-n> hey baby were you returned from the heap or what
[09:33:58] *** Joins: Wulf (~Wulf@user/wulf)
[09:34:16] *** Joins: mkv (~znc@ubuntu/member/m4v)
[09:34:17] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 240 seconds)
[09:34:19] *** mkv is now known as m4v
[09:35:14] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:35:17] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[09:35:55] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[09:38:04] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:41:38] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[09:41:50] <zwr> https://paste.opensuse.org/view/raw/54b0d4cc
[09:42:35] *** Quits: trampel (~trampel@2601:602:9a00:49d:811:d0fd:329f:c4cb) (Quit: Leaving)
[09:43:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[09:43:44] <zwr> I guess there's tcc's dedicated -run command to make this more sensible, it has always annoyed me that a shebang is needed to make it as easy as `sh main.c`
[09:46:27] *** Joins: MsFoxyEmilySmith (~MsFoxEmil@S01069050ca4e3573.cg.shawcable.net)
[09:46:29] <MsFoxyEmilySmith> hey
[09:47:14] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 260 seconds)
[09:47:20] <MsFoxyEmilySmith> I want to ask a question about C that I've been thinking about for 40 years (I started programming in C in 1982 but never stopped) but am afraid of offending ppl here
[09:47:29] <MsFoxyEmilySmith> my Son just referred me to this channel
[09:47:55] <ChoHag> Don't worry you'll get it to compile one of these days.
[09:47:58] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[09:48:36] <ChoHag> Or did you just not work out how to quit vi yet?
[09:48:44] <MsFoxyEmilySmith> ^ what im afraid of hearing:(
[09:48:54] <MsFoxyEmilySmith> ChoHag: no not exactly!
[09:49:08] <MsFoxyEmilySmith> I think I found a very very subtle flaw in the C standard
[09:49:27] <ChoHag> The title page?
[09:49:30] <MsFoxyEmilySmith> but I'm worried if I voice it I'll face punishment
[09:49:32] <MsFoxyEmilySmith> or worse
[09:49:49] <ChoHag> Don't worry it's the internet.
[09:49:51] <MsFoxyEmilySmith> my son is a CS major
[09:49:55] <MsFoxyEmilySmith> and says to go for it but
[09:50:02] <ChoHag> They still didn't invent punch-in-the-face-over-tcp yet.
[09:50:56] <ChoHag> Honestly the web would have been a lot better if that had come first, but oh well.
[09:51:09] <dave0> MsFoxyEmilySmith: i don't think anyone will take it personally
[09:51:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.209)
[09:51:31] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:51:47] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[09:52:24] <retr0> yeah Im interested in hearing it
[09:55:11] *** candide sets mode: -o candide
[09:57:59] <dave0> ChoHag: maybe a tcp-slap would work?
[09:58:13] <ChoHag> We had that.
[09:58:19] <ChoHag> We used trout.
[09:58:37] <dave0> i read the trout was a monty python reference
[09:59:05] <ChoHag> I think Khaled (?) was just in a funny mood when he was writing mirc that day.
[10:01:21] <nitrix> MsFoxyEmilySmith, Which standard and what clause?
[10:02:10] <nitrix> We might be able to simply explain the clause without you "embarassing" yourself.
[10:02:44] *** Joins: Atque (~Atque@user/atque)
[10:02:50] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[10:05:13] <nitrix> On IRC, it's better etiquette to ask your question directly and not preface it with 40 years of nonsense.
[10:05:31] <ChoHag> Be fair. It's only been 20 minutes so far.
[10:05:52] <ChoHag> And the 80s weren't complete nonsense.
[10:05:55] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[10:06:00] <ChoHag> The 90s were fucked.
[10:08:55] <dave0> i don't remember a lot of the 90's
[10:10:35] *** Joins: Atque (~Atque@user/atque)
[10:10:52] <MsFoxyEmilySmith> nitrix: well im banned from #programming for sayinh it
[10:10:54] <MsFoxyEmilySmith> saying*
[10:10:56] <MsFoxyEmilySmith> so
[10:11:01] <MsFoxyEmilySmith> theres that
[10:11:33] <MsFoxyEmilySmith> they also are currently making things up to mask what I actually said
[10:11:34] <nitrix> The standard and the clause number is all you need to ask your question.
[10:12:08] <ChoHag> If you work at it you can probably tease out interest for a goot 30 minutes or more.
[10:12:12] <ChoHag> good
[10:12:22] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[10:13:03] <dave0> i hope it's controversial
[10:13:39] <dave0> i'll be disappointed if it's mundane after you built it up
[10:13:40] <ChoHag> Yeah I'm running out of things to read.
[10:13:43] <ChoHag> Weekends are always slow.
[10:14:28] *** megeve_ is now known as megeve
[10:15:14] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[10:17:33] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[10:18:24] <ChoHag> Can I use errno for myself provided I don't expect its value to survive beyond a syscall (or other library function which uses it)?
[10:20:41] <nitrix> You can, be the intention is to surface system errors, you're hijacking the mechanism.
[10:20:43] <dave0> i guess.. did you run out of variables?
[10:21:17] <dave0> i've seen code that does    errno = E2BIG; return NULL;
[10:21:19] <ChoHag> No I was just trying to figure out a way to reinvent exactly the thing it's used for and realised it's sitting there.
[10:22:11] <nitrix> I'm not a fan of error propagation happening implicitly behind the scenes.
[10:22:15] <dave0> if you eg. rolled your own atoi, you might put in    if(a > something) { errno = E2BIG; return INT_MAX; }
[10:23:15] <nitrix> I would much prefer a bool string_to_int(const char *s, int *i), reading from `s` and writing to `i`, with the return value telling you if it was successful.
[10:23:21] <ChoHag> That's more or less what I'm doing. Replacing if (length > INT_MAX / 2) abort(); with ... { errno = EOOPS; return NULL; }
[10:23:30] <nitrix> Make that an `int` if you have multiple failure scenarios.
[10:23:39] <ChoHag> Yes but why?
[10:24:01] <ChoHag> More values to pass around, more verbose code, all to avoid errno by replicating it?
[10:24:26] <ChoHag> I'm happy to hear a reason but I can't think of any off-hand apart from "here be dragons".
[10:25:06] *** Joins: _LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[10:25:37] <nitrix> If you're checking and handling errors as they happen, errno will have saved you no effort and just made the code more confusing.
[10:25:56] <dave0> the only thing i can think of is there's only a couple of E* things in c.. ERANGE and something else? .. i don't think you can roll your own error numbers for more accurate reporting
[10:26:38] *** Quits: joolma (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:26:51] *** Parts: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788) (WeeChat 3.4)
[10:26:58] *** Joins: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788)
[10:27:12] <dave0> like if your errors don't map nicely to errno
[10:27:37] <nitrix> It's not too uncommon to have logic that performs two operations and then having a conditional like if (a && b) or if (a || b), and now you have to save your errno into temporary variables.
[10:27:40] <ChoHag> My system has: #if __BSD_VISIBLE   #define ELAST           95      /* Must be equal largest errno */
[10:28:03] <nitrix> errno is thread_local and performance implications, especially with dynamic libraries.
[10:28:23] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Ping timeout: 256 seconds)
[10:29:09] <dave0> i'd assume errno would be on a slow path only when an error occured
[10:32:46] *** Joins: Viewday116 (~Viewday@user/viewday)
[10:34:17] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[10:34:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:34:21] *** Viewday116 is now known as Viewday11
[10:37:14] <zwr> perhaps a smarter solution would have been to add multiple return values to C, I mean, we're already returning multiple values with errno and pointer arguments, so might as well add nice looking syntax for it
[10:37:49] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[10:38:32] *** Joins: ipgd (~IPGD@180.254.226.48)
[10:38:51] *** Parts: ipgd (~IPGD@180.254.226.48) ()
[10:39:50] <dave0> you can nearly do it by returning structs.. a bit of syntax sugar would be nice
[10:42:38] <ChoHag> All functions can have the signature struct { _Generic fout; _Generic ferr; } foo (_Generic fin) { ... }
[10:43:30] <ChoHag> I believe that's more or less what go's done.
[10:46:22] <MsFoxyEmilySmith> -this story is about me
[10:46:24] <MsFoxyEmilySmith> http://www.tnellen.com/cybereng/harrison.html
[10:46:33] <MsFoxyEmilySmith> and I was banned from #programming for pasting it
[10:46:52] <MsFoxyEmilySmith> its story of dude that is 6'9
[10:46:57] <MsFoxyEmilySmith> and has 180 IQ
[10:47:03] <MsFoxyEmilySmith> but was outlawed from society
[10:47:07] <MsFoxyEmilySmith> for being too genius
[10:47:39] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[10:47:52] <ChoHag> I can see why the C standards body would need to know about this.
[10:49:05] <dave0> copyright 1961
[10:49:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:49:26] <ChoHag> Incidentally the vast majority of smart people I've ever met have been thick as shit.
[10:49:56] <ChoHag> And in general the more they crow about how highly their smarts have been measured and assessed, the thicker they are.
[10:50:21] <ChoHag> I assume anybody who knows their IQ is an idiot and anybody who reports it retarded.
[10:51:39] <MsFoxyEmilySmith> ChoHag well I had my IQ measured by a psychologist who incidentally was also a professor of CS and contributed to C standards body and he clocked me at 180
[10:52:17] <ChoHag> I had mine measured by a psychologist and I'm a certifiable genius [sic] but it was >30 years ago and I can't remember what it was.
[10:52:43] <MsFoxyEmilySmith> [sic] dude
[10:52:45] <ChoHag> It's likely you have me beat in the i-peen stakes.
[10:52:52] <MsFoxyEmilySmith> maybe we're related
[10:52:56] <MsFoxyEmilySmith> or [twins[
[10:53:32] <ChoHag> We share at least one common ancestor somewhere in the last ~15k years IIRC.
[10:53:50] <MsFoxyEmilySmith> ya for sure
[10:54:00] <MsFoxyEmilySmith> it's crazy when you think about it hey
[10:54:00] <ChoHag> Maybe longer. I don't recall the dates.
[10:54:29] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[10:54:33] <ChoHag> Not really, it's only genetics.
[10:54:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[10:55:00] <ChoHag> I share at least one common ancestor with the cat that's currently warming my lap and also with the grease that's not yet been washed out of my belly button.
[10:55:28] <dave0> isn't all air recycled?
[10:55:39] <ChoHag> It all got farted out of something.
[10:55:40] <dave0> i probably breathed the same air as someone else
[10:55:46] <dave0> ew
[10:55:53] <dave0> where do farts go?
[10:55:58] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[10:55:58] <ChoHag> They become air.
[10:55:58] <MsFoxyEmilySmith> i breathened same air as julius caesar
[10:56:08] <MsFoxyEmilySmith> haha
[10:56:18] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[10:56:21] <MsFoxyEmilySmith> figure that one out
[10:56:37] <ChoHag> Actually you possibly didn't.
[10:56:50] <ChoHag> The atmosphere is incredibly vast and the molecules within it are being constantly remade.
[10:57:09] <MsFoxyEmilySmith> that's insane
[10:57:13] <MsFoxyEmilySmith> maybe haha
[10:57:22] <MsFoxyEmilySmith> who even knows these days
[10:57:34] <ChoHag> Smart people and/or people who study.
[10:58:22] <ChoHag> It's basically statistics with a bit of basic physics/chemistry.
[10:58:50] <ChoHag> Biology looks in since it's what does most of the chemical conversions but biology is just applied chemistry so not worth thinking too hard about.
[11:01:18] <dave0> i kinda like earth... i'm not sure i'd like to colonise mars
[11:01:49] <ChoHag> I prefer to live in a place where I don't need the computers to work in order to be able to breathe.
[11:02:13] <ChoHag> And I know for a fact if I'm there I'll end up being the one maintaining it.
[11:04:07] <dave0> the air machines would probably run unix :-(
[11:04:59] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[11:05:41] <ChoHag> Not quite. They'd mostly run unix but obscure part would use a proprietary driver locking the entire base into a decades old release nobody can upgrade.
[11:05:47] <MsFoxyEmilySmith> ok so
[11:05:55] <MsFoxyEmilySmith> i know a dude on the C standards body
[11:06:01] <MsFoxyEmilySmith> and im jealous of him
[11:06:22] <ChoHag> Well kill him and take his place then.
[11:06:35] <MsFoxyEmilySmith> I feel like I know more than him and have *definitely* written more raw lines of code
[11:06:42] <MsFoxyEmilySmith> he often asks me for opinions
[11:06:47] <MsFoxyEmilySmith> but im *jealous*
[11:07:01] <MsFoxyEmilySmith> his name is all over the C standards body
[11:07:11] <MsFoxyEmilySmith> and hes not much older than me
[11:07:14] <dave0> is his name richard stallman?
[11:07:48] <MsFoxyEmilySmith> no
[11:08:04] <ChoHag> If you can do a better job then either have him removed or get placed alongside him, but do the job.
[11:08:23] <ChoHag> Here, you're basically whining at the bar.
[11:08:31] <MsFoxyEmilySmith> ChoHag: youre right
[11:08:35] <ChoHag> Barman's going to nod sagely and pour you another drink.
[11:08:40] <MsFoxyEmilySmith> but im scared
[11:08:43] <MsFoxyEmilySmith> of getting him replaced
[11:08:45] <MsFoxyEmilySmith> ugh
[11:08:48] <MsFoxyEmilySmith> you are right
[11:09:08] <MsFoxyEmilySmith> what you say scares me
[11:09:14] <ChoHag> Make it a double?
[11:09:24] <dave0> ,advice
[11:09:26] <masoudd> you have to beat him in a UB duel to replace him
[11:09:39] <candide> dave0: I recommend to do it.
[11:09:47] <dave0> MsFoxyEmilySmith: ^
[11:09:52] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[11:10:13] <ChoHag> Pistols or swords?
[11:10:19] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[11:10:28] <MsFoxyEmilySmith> here I have an opportunity of a lifetime within the next year or two to get my own name as a contributor on the C standards body but im just a scared pussy cat
[11:10:36] <MsFoxyEmilySmith> I wish I could pass along opportunity to someone else
[11:10:47] <dave0> MsFoxyEmilySmith: the robot recommends to do it
[11:10:47] <MsFoxyEmilySmith> im not cut out for this
[11:10:58] <nitrix> The working group isn't looking for more contributors.
[11:11:02] <ChoHag> Then your name will not be included as a contributor.
[11:11:04] <ChoHag> Simple really.
[11:11:19] <ChoHag> If you don't get your name put, it won't be.
[11:11:45] <ChoHag> I'm not really sure why that matters but that's the way to do it.
[11:12:52] *** Joins: mrig (~mrig@user/mrig)
[11:13:18] <MsFoxyEmilySmith> dave0: the robot?
[11:13:32] <ChoHag> candide is a robot.
[11:13:38] <candide> C﻿hoHag, I'm not sure, let me check.
[11:14:15] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:14:51] *** Quits: mahmutov (~mahmutov@37.155.77.190) (Ping timeout: 256 seconds)
[11:17:17] <rcf> I can't imagine why you'd want your name on the C standard unless you're preparing an insanity defense in an upcoming criminal trial
[11:19:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[11:20:19] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:20:31] *** imm__ is now known as imm_
[11:20:59] <MsFoxyEmilySmith> rcf: only because ive been wronged
[11:21:16] <MsFoxyEmilySmith> I was wrongfully banned from a programming channel on Libera chat
[11:21:29] <MsFoxyEmilySmith> where I had made a lot of friends but
[11:21:33] <MsFoxyEmilySmith> this one mod really hates me
[11:21:45] <MsFoxyEmilySmith> and now I have nothing to do on Friday nights :(
[11:22:00] <rcf> Being a contributor to the C standard means programmers will hate you even more
[11:22:01] *** Joins: turtlebee (~turtlebee@85.203.44.162)
[11:22:07] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[11:22:16] <dave0> MsFoxyEmilySmith: drink. that's what i do
[11:22:44] *** Joins: joev (~joev@user/joev)
[11:23:24] *** Quits: turtlebee (~turtlebee@85.203.44.162) (Client Quit)
[11:23:39] *** Joins: turtlebee (~turtlebee@85.203.44.162)
[11:25:47] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:26:12] <MsFoxyEmilySmith> dave0: lol you drink?
[11:26:16] <ChoHag> Drink until you can't code any more, and then carry on so you have something to do the next day.
[11:26:25] <MsFoxyEmilySmith> rumour is youre a fucking GOD around here
[11:26:30] <MsFoxyEmilySmith> I doubt you drink
[11:30:34] <MsFoxyEmilySmith> anyway im gonna end it for night
[11:31:17] <MsFoxyEmilySmith> one of you geniuses please unban me from #programming my main hub and ban whoever banned me
[11:31:27] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[11:31:33] <MsFoxyEmilySmith> ill owe you one and might even include your name on the C standards body committee
[11:31:38] <MsFoxyEmilySmith> thanks in advance
[11:31:41] <MsFoxyEmilySmith> goodnight!
[11:31:56] <MsFoxyEmilySmith> thank you for discussing ChoHag
[11:32:14] <MsFoxyEmilySmith> please pm PlankWalk and ask me be unbant
[11:33:38] <MsFoxyEmilySmith> honestly ppl in that channel think lowly of C
[11:33:42] <MsFoxyEmilySmith> but
[11:34:00] <MsFoxyEmilySmith> im only one that believes its the future
[11:34:47] <MsFoxyEmilySmith> im always like 'yeah, you should try mocking your function in C, it might help to remove the noise from the problem'
[11:35:58] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[11:35:59] <MsFoxyEmilySmith> if I get on C standards body committee id prolly just fuck it up
[11:36:02] <MsFoxyEmilySmith> so
[11:36:17] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[11:36:18] <MsFoxyEmilySmith> fuck it bro
[11:36:21] <MsFoxyEmilySmith> fuck it
[11:36:36] <MsFoxyEmilySmith> fuck it and forget it
[11:36:40] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:38:19] <MsFoxyEmilySmith> dude I cant even remember who else I'd ask you PM on my behalf to get me unbant from #programming
[11:38:20] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[11:38:27] <MsFoxyEmilySmith> besides PlankWalk
[11:39:06] <MsFoxyEmilySmith> theres a couple other dudes there that might unbant me too
[11:39:15] <MsFoxyEmilySmith> if I can remember their names lol
[11:39:58] <MsFoxyEmilySmith> shit bro, theyre there all the time
[11:39:59] <MsFoxyEmilySmith> 24/7
[11:40:15] <MsFoxyEmilySmith> think theyre Java programmers
[11:40:43] <MsFoxyEmilySmith> oh shit
[11:40:52] <MsFoxyEmilySmith> I just remembered
[11:40:58] <MsFoxyEmilySmith> half of them are in this channel!
[11:41:05] <MsFoxyEmilySmith> let me read off names
[11:42:00] <MsFoxyEmilySmith> names of fucking rats lol
[11:42:08] *** Joins: Satin (uid193953@user/Seten)
[11:42:19] <malina> well, it's not just the rabbits you know
[11:42:51] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[11:43:03] *** Joins: kts (~kts@103.73.237.122)
[11:44:45] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:44:58] <MsFoxyEmilySmith> dude
[11:45:01] <MsFoxyEmilySmith> I wont name names
[11:45:05] <MsFoxyEmilySmith> im not a fucking rat
[11:45:31] *** Joins: node1 (~hex@user/node1)
[11:45:35] <MsFoxyEmilySmith> i just hope dudes that are responsible for banting me from #programming realize how genius I am
[11:46:08] <ChoHag> "Hey #programming, this person's spamming #c because you kicked her out, can you let her back in so she can spam there instead?"
[11:46:13] <MsFoxyEmilySmith> phase fuck face, ant on fire, plank walk, etc.
[11:46:14] <ChoHag> Yeah I'm not seeing that being much of a success.
[11:46:15] <MsFoxyEmilySmith> fucking losers lol
[11:46:31] <MsFoxyEmilySmith> thought we were friends
[11:47:45] <Svitkona> "i won't name names"
[11:48:50] <MsFoxyEmilySmith> dude im famous 10000x over
[11:48:55] <MsFoxyEmilySmith> I dont need to name names
[11:49:09] <dave0> is your name andrew lee?
[11:49:34] <MsFoxyEmilySmith> my name is fuck off
[11:50:31] <MsFoxyEmilySmith> I honestly feel like im probably one of the most qualified people in this channel right now
[11:50:47] <MsFoxyEmilySmith> and the only one that could re-write the c standard here
[11:50:47] <ChoHag> CPUs don't really give a shit about feelings.
[11:51:01] <ChoHag> Go do it.
[11:51:05] <ChoHag> Stop moaning.
[11:51:20] <ChoHag> And put some of those immense IQ points you have to trying to figure out how you got yourself banned.
[11:51:26] <ChoHag> There's ample evidence. I'm sure you can work it out.
[11:52:22] <malina> lol dave0
[11:52:38] <malina> I happened to be looking at freenode activity today , and seems like it's absolutely dead indeed
[11:53:18] <malina> and also had a look at that erm.. rat? christel.. wow, tried running for gnome board of directors in 2019.. after selling freenode in 2017? some ppl have no shame
[11:53:21] <ChoHag> Is that why the amount of drama here is steadily increasing?
[11:53:23] <malina> to their name
[11:53:49] <malina> no idea. I just saw his commnt on 'rats shagging' and think it's not unreasnoable to expect more than rabbits feeling amorous
[11:53:51] <ChoHag> The gnome board of directors?
[11:53:53] <malina> anyway,
[11:53:57] <ChoHag> It's like these people seek out irrelevancy.
[11:54:05] <malina> ye? that desktop thing
[11:54:27] <malina> anyway, ye, weird. but stillm thankfully didn't get much votes else wouldbe ridiculous but some ppl just have no shame
[11:54:51] <ChoHag> Yes, well, welcome to the internet.
[11:55:02] <malina> well, that is also real life.
[11:55:20] <ChoHag> People are less shielded from ridicule in real life.
[11:55:28] *** MsFoxyEmilySmith is now known as DollarBillStern
[11:55:32] <malina> but ye, MsFoxyEmilySmith , are you from vietnam or thailand? just wondering.
[11:55:38] <DollarBillStern> huh
[11:55:43] <DollarBillStern> what
[11:55:53] <DollarBillStern> fuck are you talking about lol
[11:56:02] <malina> I just thknk I recall someone from one of the 2 countries using 'bant' as well,
[11:56:09] <ChoHag> Even politicians know to eventually slink away and disappear from publicity.
[11:56:14] <malina> it was a very simple question
[11:56:33] <DollarBillStern> malina: um
[11:56:37] <DollarBillStern> that term
[11:56:57] <DollarBillStern> isnt from either country
[11:56:59] <DollarBillStern> lol
[11:57:08] <DollarBillStern> are you new to internet?
[11:57:14] <malina> no, it's from nowhere.
[11:57:20] <DollarBillStern> lol
[11:57:22] <DollarBillStern> youre new
[11:57:22] <malina> I definitely am not new to the internet ocmpared to you
[11:57:23] <DollarBillStern> its ok
[11:57:32] <DollarBillStern> lol
[11:57:36] <DollarBillStern> jesus christ
[11:57:48] <ChoHag> It's like September all over again.
[11:57:54] <malina> how did a 2 IQ lad come into these chans, I ponder
[11:58:01] <DollarBillStern> kill me now
[11:58:02] <rcf> ChoHag is a proper old person
[11:58:13] <DollarBillStern> i want to die
[11:58:17] <rcf> rip usenet
[11:58:29] <ChoHag> rcf: Now I'm sad.
[11:58:36] <malina> given the low amount of brain cells you have, try holding your breath whilst counting to 3, should do it.
[11:58:50] <ChoHag> malina: No need to be rude.
[11:58:52] <ChoHag> Detectably.
[11:59:07] <DollarBillStern> i dont want live with ppl that think 'bant' is an obscure term
[11:59:16] <malina> ChoHag, you have a guy swearing like an absolute knobhead and you say , no need to be rude?
[11:59:16] <DollarBillStern> wtf
[11:59:23] <malina> not sure if I should laugh
[11:59:25] *** Quits: kts (~kts@103.73.237.122) (Quit: Konversation terminated!)
[11:59:35] <DollarBillStern> ChoHag: do you watch Billions?
[11:59:37] <ChoHag> Eh this is tame.
[11:59:38] <rcf> malina: less targeted hostility, perhaps.
[11:59:44] <DollarBillStern> you seem smart man
[11:59:46] <ChoHag> Mildly annoying but pretty dull on the whole.
[11:59:49] <DollarBillStern> maybe too smart
[11:59:51] <DollarBillStern> for my own good
[11:59:58] <malina> yes, I won't accept an internet, and the internet wouldn't allow me to allow idiots bringing in some absolute moronic terms like OMG WHY AM I BANTED
[12:00:00] <malina> and so on
[12:00:15] <DollarBillStern> malina: go fuck yourself lol
[12:00:20] <DollarBillStern> you are oblivious
[12:00:24] <malina> rcf, ye ok. because if the twat behaves lik that, it's better everyone else keeps in line? give me a break, sheesh
[12:00:28] <DollarBillStern> embarrassed for you
[12:00:29] <rcf> Due to exposure to commonwealth types I interpret 'bant' entirely differently.
[12:00:30] <malina> 2 IQ is 2 IQ, period.
[12:00:35] <ChoHag> Oblivious could be used to describe a lot right now.
[12:00:41] <malina> well sure, banter is fine
[12:00:49] <DollarBillStern> fuck right off malina
[12:01:09] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[12:01:15] <DollarBillStern> I just want be unbant from #programming
[12:01:17] *** Joins: mahmutov (~mahmutov@37.155.77.190)
[12:01:19] <DollarBillStern> where my homies at
[12:01:29] <ChoHag> Evidently they are not.
[12:01:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:01:40] <DollarBillStern> dude
[12:01:42] <DollarBillStern> they were
[12:01:45] <DollarBillStern> for a few months
[12:01:49] <DollarBillStern> I was King
[12:01:52] <ChoHag> Then why do they not help you?
[12:02:08] <DollarBillStern> ChoHag: they think im smarter than them
[12:02:10] <ChoHag> Why must you come begging --- badly --- in an unrelated place?
[12:02:18] <malina> had i been an op in any chan which literally had to do with something like computing or any other fairly non trolling stuff, you'd be permabanned in no time I suspect. I don't see why you'd want to be unbanned from anywhere on fre.. libera
[12:02:35] *** Joins: Atque (~Atque@user/atque)
[12:02:45] <ChoHag> The conclusion seems obvious to me but maybe I'm not smart enough to work it out.
[12:02:53] <rcf> ChoHag: generally such advocacy doesn't go over well... a better test is whether these people were willing to reach out via query
[12:03:04] *** Joins: kts (~kts@103.73.237.122)
[12:03:13] <DollarBillStern> ChoHag: dude not smart enough? you said yourself your IQ is north of 150+
[12:03:29] <DollarBillStern> why im banned from #programming is a mystery only you can figure out
[12:03:42] <ChoHag> Perhaps.
[12:03:47] <ChoHag> But on the other hand, I don't give a shit.
[12:04:08] <ChoHag> The only reason I could possibly want you unbanned from #Programming is so that you take your noise back there.
[12:04:29] <DollarBillStern> yea dude
[12:04:50] <DollarBillStern> its always worked that way
[12:04:51] <DollarBillStern> tbh
[12:04:56] <DollarBillStern> not sure why its taken this long
[12:05:04] <DollarBillStern> im kinda annoyed
[12:05:10] <DollarBillStern> usually someomne gets me unbant
[12:05:17] <DollarBillStern> in 10 mins
[12:05:31] *** Quits: node1 (~hex@user/node1) (Ping timeout: 256 seconds)
[12:05:46] <ChoHag> Because I have been on the internet long enough to be patient with the narcissistic self-entitled trolls it seems to produce by the thousand.
[12:05:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[12:06:06] <DollarBillStern> well fuck them
[12:06:15] <ChoHag> Also it's Saturday morning and I'm bored and, such as it is, you're the only entertainment going.
[12:06:16] <DollarBillStern> im the original narcissistic self-entitled troll
[12:06:24] <DollarBillStern> I'm the one
[12:06:34] <DollarBillStern> the one and only
[12:06:42] <DollarBillStern> the original
[12:06:57] <DollarBillStern> I always get unbant eventually
[12:06:57] <candide> DollarBillStern: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[12:07:11] <DollarBillStern> just not sure why is taking so long
[12:07:12] <ChoHag> Although frankly it got boring already which is why I'm not being subtle any more.
[12:07:13] *** Quits: manjaroi3 (~manjaro-i@112.169.116.78) (Ping timeout: 256 seconds)
[12:08:01] <rcf> malina: generally it is best to let people dig their own holes in channels where such monologuing will eventually trigger the bot.
[12:09:14] <DollarBillStern> did I mention that im a C fiend
[12:09:22] <ChoHag> Once or twice.
[12:09:25] <DollarBillStern> and
[12:09:30] <ChoHag> And little else.
[12:09:47] <DollarBillStern> I dont think that Linus Tovalds is Satoshi Nakamoto
[12:09:52] <DollarBillStern> lol
[12:09:53] <DollarBillStern> well
[12:09:56] <DollarBillStern> actually
[12:09:57] <DollarBillStern> I do
[12:09:58] *** ChanServ sets mode: +o candide
[12:09:58] *** candide sets mode: +b *!~msfoxemil@*.shawcable.net
[12:10:10] <sdk_> candide: \o/
[12:10:11] <ChoHag> malina: Like that.
[12:10:38] <rcf> Does this 'C' refer to the language, or is it some colloquial term for cocaine?
[12:10:53] <malina> ty
[12:11:07] <malina> I mean when he was going on like that, why even bother. :)
[12:11:10] <ChoHag> Cocaine doesn't do this. This is caused by "youth".
[12:11:16] <malina> hehe
[12:11:16] *** candide sets mode: -b *!~msfoxemil@*.shawcable.net
[12:11:25] <malina> fairly good call ChoHag
[12:11:37] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[12:11:51] <DollarBillStern> hell
[12:11:52] <malina> I'd agree although I do think it's a bit too 'idealistic' to think only the character will dictate how insane drug behavciour could pan out ,p
[12:11:53] <DollarBillStern> hello
[12:11:55] <DollarBillStern> am i still here
[12:11:56] <DollarBillStern> ?
[12:11:59] <rcf> Indeed.
[12:12:05] <DollarBillStern> dude
[12:12:08] <malina> wtf
[12:12:10] <DollarBillStern> I just said
[12:12:11] <rcf> It is best to heed candide's warnings.
[12:12:14] <ChoHag> For the time being.
[12:12:25] <DollarBillStern> Linus Tovalds
[12:12:27] <malina> to me it makes no sense to heed this warning of unbanning idiots?
[12:12:31] <DollarBillStern> is Satoshi Nakamoto
[12:12:40] <DollarBillStern> imo
[12:12:43] <malina> jesus, looks like I should start swearing like a cunt because that's cool
[12:12:49] <DollarBillStern> LOL
[12:12:53] <dave0> gasp
[12:12:58] <DollarBillStern> malina am I cool?
[12:13:02] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:05] <DollarBillStern> I want to be cool
[12:13:07] <malina> and that must be one of the dumbest things you've managed to say in the past 15 minutes kid
[12:13:23] <malina> no, you are not.. not to me but I mean, I'm sure you are to you and other 13 year olds
[12:13:24] <rcf> malina: no, the warnings are for those banned for ignoring fairly-straightforward conventions of conversation.
[12:13:37] <malina> doesn't seem like it to me
[12:13:40] *** Joins: Rounin (~david@84.212.130.215)
[12:13:47] <ChoHag> It was a bit short.
[12:13:48] <malina> a 12 second ban or somethong?
[12:13:59] <malina> thing* imagine some[one's] thong
[12:14:02] <DollarBillStern> 😎
[12:14:03] *** Joins: joev (~joev@user/joev)
[12:14:06] <malina> flung across the room
[12:14:11] <ChoHag> Perhaps it should be influenced by the amount of channel activity.
[12:14:12] <DollarBillStern> I feel really cool
[12:14:23] <rcf> malina: starts off short to make a point, then ratchets up I believe.
[12:14:23] <DollarBillStern> right now
[12:14:27] <malina> 1 second for each of our years of age?
[12:14:34] <ChoHag> That could explain it.
[12:14:40] <malina> holy, I'd so be at least in the upper half of bantime
[12:14:56] <ChoHag> Older people are expected to know how to behave?
[12:15:05] <malina> pfff. say that to Trump
[12:15:08] <rcf> You'd think so.
[12:15:10] <malina> or her dad
[12:15:24] <ChoHag> Well some people never get off youth.
[12:15:29] <DollarBillStern> https://www.youtube.com/watch?v=rgc_LRjlbTU&list=RDMM&index=14
[12:15:33] <malina> like jimmy savile
[12:15:35] <rcf> But people have a way of breaking your assumptions.
[12:15:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[12:16:16] <malina> better assumptons than hymens in the above context at least but anyway, I digress.
[12:16:41] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[12:17:00] <malina> I will iterally make a diary entry today . C bot today banned someone for __disciple_ seconds
[12:17:15] <malina> missed a _
[12:17:47] <ChoHag> It seems to have had some measure of success.
[12:18:07] <DollarBillStern> https://www.youtube.com/watch?v=umeWTEf4gFM
[12:18:11] <masoudd> DollarBillStern, How's the weather in Calgary?
[12:18:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[12:20:26] *** Joins: bindu (~bindu@user/bindu)
[12:20:44] <DollarBillStern> masoudd: hows weather in North Carolina?
[12:21:03] <masoudd> I wouldn't know tbh
[12:21:14] <DollarBillStern> haha
[12:22:20] <DollarBillStern> what are you saying
[12:22:29] <DollarBillStern> exactly lol
[12:23:17] <DollarBillStern> im not a good C programmer?
[12:23:31] *** Joins: turtlebe1 (~turtlebee@85.203.44.162)
[12:24:09] <DollarBillStern> cause im the fucking best, bro
[12:24:40] <DollarBillStern> just bant from my fav channels right now
[12:25:04] <DollarBillStern> just wanna be unbant
[12:25:09] *** Joins: masoudd_ (~masoudd@user/masoudd)
[12:25:21] <masoudd_> not cool dude
[12:25:44] <masoudd_> stop hacking my ethernet cable
[12:25:55] *** Quits: turtlebee (~turtlebee@85.203.44.162) (Ping timeout: 256 seconds)
[12:25:55] <turtlebe1> New to IRC here... Is this the norm? Not sure what I was expecting but it is somewhat entertaining...
[12:26:07] <ChoHag> It was about 20 years ago.
[12:26:09] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[12:26:25] <ChoHag> Or in general purpose channels.
[12:26:37] <DollarBillStern> wtf is ETHernet
[12:26:39] <DollarBillStern> wtf is that
[12:26:41] <DollarBillStern> dude
[12:26:51] <masoudd_> I know it was you
[12:26:55] <masoudd_> I saw you
[12:27:49] <malina> who will get the longest jail time in that corrupt country between avenatti and erm, the other massive fraduster, which is way worse
[12:27:51] <malina> I bet avenatti
[12:28:13] <malina> elizabeth holmes apparently, ye yikes
[12:28:23] *** Joins: turtlebee (~turtlebee@85.203.44.162)
[12:28:34] <malina> both will be sitting at their home as usual with a little anklet  thing and a lot of whiskey
[12:29:08] <DollarBillStern> dude, i just want to be unbant
[12:29:15] <DollarBillStern> from #programming haha
[12:29:53] <DollarBillStern> all my friends are in that channel
[12:30:37] *** Quits: turtlebe1 (~turtlebee@85.203.44.162) (Ping timeout: 240 seconds)
[12:30:58] <ChoHag> Have you tried being less annoying?
[12:31:03] <DollarBillStern> im dollar fucking Bill Stern
[12:31:10] <DollarBillStern> ChoHag: no but
[12:31:11] *** Quits: masoudd_ (~masoudd@user/masoudd) (Remote host closed the connection)
[12:31:22] <DollarBillStern> I secretly thought I was a genius
[12:31:27] <DollarBillStern> until I got bant
[12:31:30] <DollarBillStern> lol
[12:31:30] *** candide sets mode: +b *!~msfoxemil@*.shawcable.net
[12:31:42] <ChoHag> Consider it.
[12:32:04] * ChoHag makes coffee
[12:32:41] *** Joins: masoudd (~masoudd@user/masoudd)
[12:32:53] *** Joins: Viewday113 (~Viewday@user/viewday)
[12:32:57] *** Quits: mahmutov (~mahmutov@37.155.77.190) (Ping timeout: 256 seconds)
[12:33:33] *** Quits: turtlebee (~turtlebee@85.203.44.162) (Quit: WeeChat 3.4)
[12:33:48] *** Joins: turtlebee (~turtlebee@85.203.44.162)
[12:34:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:34:38] *** Viewday113 is now known as Viewday11
[12:36:53] *** Joins: turtlebe1 (~turtlebee@85.203.44.162)
[12:36:55] *** candide sets mode: -b *!~msfoxemil@*.shawcable.net
[12:38:37] *** Quits: turtlebee (~turtlebee@85.203.44.162) (Ping timeout: 256 seconds)
[12:41:57] <masoudd> holyshit my whole ISP is down
[12:42:18] <masoudd> That is some crazy coincidence
[12:42:31] <masoudd> Or you're still hacking me
[12:42:37] *** Joins: aradesh (~aradesh@user/aradesh)
[12:42:49] *** Quits: turtlebe1 (~turtlebee@85.203.44.162) (Quit: WeeChat 3.4)
[12:43:06] *** Joins: turtlebee (~turtlebee@85.203.44.162)
[12:44:03] *** Quits: sebag (~guest@91.245.82.2) (Ping timeout: 256 seconds)
[12:46:18] *** Quits: turtlebee (~turtlebee@85.203.44.162) (Client Quit)
[12:47:08] <NRK> constxd: not the one u shared. i wrote my own version and only included `vec_{push,pop,insert,remove}`
[12:48:00] <NRK> if you want to loop over it, then you directly use the counters. `for (i = 0; i < v.cnt; ++i)`
[12:48:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:48:34] <NRK> i think vec_reserve would be useful, so i'll probably add that. but nothing more.
[12:48:42] *** Quits: _LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[12:49:08] <ChoHag> And the other way - remove multiple.
[12:49:26] *** Joins: MatthiasG2 (~matthias@i6DFA03D9.versanet.de)
[12:51:11] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[12:51:13] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[12:51:32] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[12:51:57] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:cb1b:59a4:8a8b:230c) (Remote host closed the connection)
[12:52:30] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.209) (Remote host closed the connection)
[12:52:56] *** Joins: Kerr (~quassel@2601:602:ce00:c8d0:c6dd:f827:618b:869d)
[12:54:01] *** Joins: teepee (~teepee@openscad/teepee)
[12:54:40] *** Joins: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de)
[12:55:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[12:56:14] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:c6dd:f827:618b:869d) (Remote host closed the connection)
[12:57:50] <malina> nah, that was me masoudd
[12:57:56] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 250 seconds)
[12:58:03] <malina> I called your ISP though and said sorry and offered them some tea and cookies
[12:58:16] *** Joins: caze (~caze@user/caze)
[12:59:10] <masoudd> :\ thanks. but they are still down.
[13:02:25] *** Quits: Whatshisface (~jon@user/Whatshisface) (Ping timeout: 256 seconds)
[13:05:09] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[13:07:56] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:08:11] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[13:11:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[13:18:05] <malina> confirmed. [they] don't like cookies for some reason
[13:23:43] *** Quits: vboykox (~user@95.134.13.247) (Ping timeout: 256 seconds)
[13:25:08] *** Joins: vboykox (~user@95.134.44.64)
[13:26:37] <dave0> edibles
[13:27:00] *** Quits: Betal_ (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:28:59] *** Joins: ikumay (~ikumay@user/ikumay)
[13:29:59] *** Joins: namkeleser (~namkelese@124.188.192.57)
[13:33:33] *** Joins: voltron (~Adium@ip4d158509.dynamic.kabel-deutschland.de)
[13:35:37] *** Joins: bnchs (~bnchs@41.141.173.31)
[13:36:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:37:03] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:38:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:38:04] *** Quits: voltron (~Adium@ip4d158509.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[13:41:06] *** Joins: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd)
[13:41:37] *** Quits: marshmallow (~marshmall@user/marshmallow) (Remote host closed the connection)
[13:42:28] *** Joins: marshmallow (~marshmall@94.177.224.11)
[13:46:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc07:dd00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[13:47:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[13:49:04] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:49:28] *** Quits: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd) (Quit: Leaving)
[13:50:21] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:50:21] *** Quits: joev (~joev@user/joev) (Ping timeout: 250 seconds)
[13:51:22] *** Joins: joev (~joev@user/joev)
[13:51:34] *** Joins: kts_ (~kts@103.73.237.61)
[13:52:03] *** Quits: kts (~kts@103.73.237.122) (Ping timeout: 256 seconds)
[13:52:17] *** Joins: caveman__ (~caveman@gateway/tor-sasl/caveman)
[13:52:26] *** Joins: Klinda (~superleag@user/klinda)
[13:56:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[13:57:25] *** Joins: masoudd_ (~masoudd@user/masoudd)
[13:57:54] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[13:57:56] *** Quits: masoudd (~masoudd@user/masoudd) (Killed (NickServ (GHOST command used by masoudd_)))
[13:58:02] *** masoudd_ is now known as masoudd
[14:01:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6)
[14:01:49] <NRK> ,cc char *a[] = { "first", "second" }; printf("%s -- ", 0[a]); printf("%s", 1[a]);
[14:01:51] <candide> NRK: first -- second
[14:02:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:02:31] <NRK> ,oO( very cool )
[14:02:53] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[14:06:55] *** Joins: pehaef (~pehaef@user/pehaef)
[14:08:13] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:08:20] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[14:09:07] <hsv> Is there a modifier to printf %g that will force it to print decimal places even when the number can be represented as a int?
[14:09:58] <dave0> i think so
[14:10:05] *** candide sets mode: -o candide
[14:10:41] <dave0> ,cc float a = 5; printf("%.3f ", a);
[14:10:42] <candide> dave0: 5.000
[14:11:02] <hsv> that is %f
[14:11:16] <hsv> ,cc float a = 5; printf("%.3g ", a);
[14:11:18] <candide> hsv: 5
[14:11:19] <dave0> oh g right hang on
[14:11:31] <dave0> ,cc float a = 5; printf("%g ", a);
[14:11:33] <candide> dave0: 5
[14:11:37] <hsv> i don't think it can be done.
[14:11:38] <dave0> ,cc float a = 5; printf("%3g ", a);
[14:11:40] <candide> dave0:   5
[14:11:46] <dave0> ,cc float a = 5; printf("%5.5g ", a);
[14:11:48] <candide> dave0:     5
[14:13:08] <dave0> whoops i meant that as privmsg
[14:14:09] <dave0> ,cc float a = 5, b = 5678; printf("%#.3g %#.3g ", a, b);
[14:14:11] <candide> dave0: 5.00 5.68e+03
[14:14:23] <hsv> The need is to print the full range of floats, showing the decimal place, without overflowing a string.
[14:14:28] <dave0> # modifier makes it put a decimal point
[14:14:55] <hsv> ah that's nice, thank you!
[14:15:05] <hsv> ,cc float a = 5; printf("%#g ", a);
[14:15:07] <candide> hsv: 5.00000
[14:15:11] <hsv> perfect.
[14:15:38] <dave0> cool
[14:16:17] *** Joins: Kerr (~quassel@2601:602:ce00:c8d0:1f10:2cdc:eae4:98d8)
[14:17:06] <NRK> just how undefined is this: 0[a] ? because if it's equivalent to *(0+a) then i guess that should actually be fine?
[14:17:23] <hsv> 0% undefined.
[14:17:25] <dave0> NRK: yeah it's exactly like you said
[14:17:32] <sham1> It is *fine* according to the standard, but it's absolutely not something one should do
[14:18:16] <hsv> It won the obsfuscation contest, so it has uses.
[14:18:38] <NRK> yeah, +job security
[14:18:45] <dave0> i used to use it in macros    #define le16(x) (0[x] | 1[x] << 8)    until they added inline functions, now i don't
[14:19:08] <hsv> i may have used it once, in a macro i think.
[14:20:00] <ChoHag> It works. It's not fine.
[14:20:14] <ChoHag> It's only fine in the burning dog sense.
[14:23:47] <hsv> ,cc int array; char c; for (array = 0; (c = array["index"]); array++) putchar(c);
[14:23:49] <candide> hsv: index
[14:26:19] *** Joins: random-nick (~random-ni@87.116.167.125)
[14:27:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:28:10] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[14:28:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:28:29] * NRK takes notes
[14:31:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:31:32] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[14:32:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:33:13] *** Joins: Viewday111 (~Viewday@user/viewday)
[14:33:36] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:33:57] <dave0> ,cc for(char *c = "index"; *c; c++) putchar(*c);
[14:33:59] <candide> dave0: index
[14:34:07] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[14:34:37] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:34:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[14:34:47] *** Viewday111 is now known as Viewday11
[14:35:20] <hsv> ,cc puts("index");
[14:35:22] <candide> hsv: index
[14:35:28] <dave0> lazy :-)
[14:36:22] <rkta> when I have extern int func(Type *p); but int func(Type *volatile p) as definition, is the pointer volatile? And why is it not an conflicting types error?
[14:37:03] <dave0> i think p is volatile, but not what it points to
[14:38:28] <rkta> but shouldn't the volatile not also be present in the declaration?
[14:38:31] <dave0> oh are you also asking if the two declarations are compatible? idk .. we need a standards guy
[14:38:42] <rkta> yes :)
[14:39:20] <dave0> there's probably a rule that covers it... but you can't go wrong if you make them identical :-)
[14:39:40] <hsv> rkta: are these both in the same compilation unit?
[14:42:51] <rkta> hsv: the declaration is in a header, which is included in another header which is included in the c file. So, I guess it's a yes?
[14:43:06] <hsv> rkta: yes
[14:44:11] *** Quits: Jong (~Jong@163.114.132.5) (Ping timeout: 256 seconds)
[14:44:16] <hsv> rkta: the linker won't necessarilly catch stuff like that, but the compiler should.
[14:44:18] <dave0> rkta: it might be valid for one to have `volatile` and the other not, but it's for sure valid for both to be the same, and it's good style to keep them the same
[14:44:40] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[14:44:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:44:53] <NRK> if you use lto then this type of stuff can end up producing warning when it otherwise wouldn't
[14:45:02] <rkta> dave0: re identical, the question is to remove or to add the volatile. That's why I wanted to know what takes precedence.
[14:45:38] <rkta> NRK: good idea
[14:46:06] <dave0> i've never used volatile and i've never hacked on linux or device drivers
[14:46:13] <hsv> dave0: i think the question is why is it not warning?
[14:46:57] *** Quits: kts_ (~kts@103.73.237.61) (Quit: Konversation terminated!)
[14:47:00] <dave0> it's possible it's valid code.. it's also possible that you aren't required (in the standard) to give a warning
[14:47:12] <NRK> try compiling with `-Wmissing-prototypes`
[14:48:33] <hsv> rkta: it's an odd thing to do though, what makes you think the ptr should be declared volatile?
[14:49:57] <rkta> hsv: I don't think so. That's existing code. I only try to understand. And yes, it's odd.
[14:51:13] <hsv> rkta: volatile is often an naive attempt to fix misunderstood problems.
[14:51:50] <hsv> rkta: in that situation 'p' is a local copy anyway.
[14:52:22] <hsv> good question why is it not warning though.
[14:52:27] *** Joins: bnchs__ (~bnchs@41.141.173.31)
[14:54:55] *** Quits: bnchs (~bnchs@41.141.173.31) (Ping timeout: 250 seconds)
[14:55:39] <rkta> -Wmissing-prototypes doesn't warn either
[15:03:07] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:04:50] *** Joins: zcmrc (~zcmrc@user/zcmrc)
[15:05:09] <hsv> same is true with const.
[15:05:10] *** Quits: zcmrc (~zcmrc@user/zcmrc) (Read error: Connection reset by peer)
[15:06:17] *** Joins: r_n_d (~r_n_d@gateway/tor-sasl/rnd/x-30212483)
[15:06:54] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:07:37] *** Quits: bnchs__ (~bnchs@41.141.173.31) (Ping timeout: 240 seconds)
[15:09:12] *** Joins: strajder (~strajder@user/strajder)
[15:10:14] <hsv> ,cc int f(int n); int f(int const volatile n) { return n; } f(5);
[15:10:17] <candide> hsv:  f(5) = 5
[15:10:25] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[15:10:40] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[15:11:51] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[15:12:12] *** Joins: noonien (~noonien@user/noonien)
[15:15:45] <NRK> probably because const and volatile don't change the type. they're qualifiers.
[15:17:57] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[15:18:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:18:57] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[15:20:33] *** Joins: APic (apic@apic.name)
[15:26:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:29:17] *** micronnn is now known as micronn
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:50] <Xgc> rkta: Adding that to the declaration has no impact on the caller, since the function receives a copy of the pointer.  It's the copy that the function is declaring volatile.  No one really cares about that from an API perspective.
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:31:38] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:584f:e58d:f72a:96f)
[15:32:06] <rkta> Xgc: thanks, that makes sense.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:42] *** Joins: seninha (~seninha@user/seninha)
[15:37:42] *** Quits: caveman__ (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:43:00] <hsv> still probably a 'bug'.
[15:43:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[15:44:33] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:45:06] <rkta> That whole function has a lots of volatile for a function that loads a file. But it's working since 20 years. Not going to waste any more time on it.
[15:45:07] *** Joins: lucho666 (~admred201@45.178.2.1)
[15:45:14] *** Joins: benicocamela (~admred201@45.178.2.1)
[15:45:27] *** Quits: benicocamela (~admred201@45.178.2.1) (Remote host closed the connection)
[15:46:04] <caze> Crazy.
[15:46:05] <hsv> 20 yrs ago someone was fighting with the optimiser ;)
[15:46:57] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[15:47:06] <hsv> "it's not doing want i want, must be the compiler, lets declare everything volatile"
[15:47:10] <rkta> If someone is curios: https://git.sr.ht/~rkta/w3m/tree/master/item/file.c#L1692
[15:47:15] *** Joins: gjvc (~gjvc@user/gjvc)
[15:47:48] <hsv> l.o.l.
[15:48:58] *** Quits: gjvc (~gjvc@user/gjvc) (Client Quit)
[15:49:17] <ChoHag> Here's your problem: #include <setjmp.h>
[15:49:39] <ChoHag> Just say no.
[15:50:04] *** Joins: gjvc (~gjvc@user/gjvc)
[15:50:37] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[15:52:11] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[15:52:52] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:54:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[15:58:15] <rkta> I removed all the volatile stuff, let's see if things will blow up :)
[15:58:54] <hsv> rkta: noooo...
[15:59:55] <hsv> ,cc #define x "%#g " \n printf(x x x x x x x, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8);
[15:59:57] <candide> hsv: 100.000 1000.00 10000.0 100000. 1.00000e+06 1.00000e+07 1.00000e+08
[16:00:04] <hsv> How to convince printf to output at least something ater the '.' in all cases?
[16:01:04] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[16:05:19] <NRK> <Ctrl+f>"volatile" -> 46 matches
[16:05:21] <NRK> lol
[16:10:02] *** Quits: Beastie (~lcu@user/thebeastie) (Ping timeout: 252 seconds)
[16:12:37] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:12:52] *** Joins: Beastie (~lcu@user/thebeastie)
[16:13:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:13:23] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 256 seconds)
[16:15:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:17:50] *** Joins: hlauk (~hlauk@176.33.108.116)
[16:21:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[16:23:35] *** Quits: Phil-Work (~phil@62.3.100.20) (Ping timeout: 256 seconds)
[16:23:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[16:24:13] *** Quits: Sohaib[m] (~smalinux@2001:470:69fc:105::31b5) (Quit: You have been kicked for being idle)
[16:24:53] <caze> rkta: Usually the * goes to the right of the thing you want to be volatile.
[16:25:56] <caze> Err, the 'volatile' keyword goes to the right.
[16:27:18] <NRK> i've seen some `char const *s` but i don't think that's a common thing
[16:27:21] *** Joins: shivesh (~shivesh@user/shivesh)
[16:27:35] <NRK> though it does make things a bit more consistent
[16:27:49] <rkta> east-const vs west-const
[16:28:18] <caze> rkta: So when you have: ParsedURL *volatile current, the pointer is qualified as volatile, not the pointed-to object.
[16:29:00] <rkta> caze: like with const
[16:29:10] <caze> rkta: Yes, exactly like with const.
[16:30:59] <caze> rkta: But making the pointer volatile doesn't actually do anything.
[16:32:31] <rkta> caze: unless you modify the pointer in a way the compiler can't see?
[16:32:37] *** Joins: Viewday119 (~Viewday@user/viewday)
[16:33:07] *** Parts: ikumay (~ikumay@user/ikumay) ()
[16:33:11] <caze> rkta: The pointer is a variable that is local to the function.
[16:33:18] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[16:33:51] <rkta> true
[16:34:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:34:11] *** Viewday119 is now known as Viewday11
[16:34:20] <caze> It would be like if you did: void foo(int a) { volatile int b = a; }
[16:34:51] <caze> What good could volatile possibly be doing there?
[16:35:24] *** Quits: carlavilla (~carlavill@188.26.219.45) (Remote host closed the connection)
[16:35:51] *** Joins: caveman__ (~caveman@gateway/tor-sasl/caveman)
[16:36:23] <rkta> That whole function does nothing.
[16:37:07] <rkta> But working embedded I know it's usually not a good idea to remove volatile only because *I* think it's not needed.
[16:37:45] <caze> It would be one thing if it were the pointed to object that were qualified as volatile, but it's not.
[16:39:08] *** Joins: pulse (~pulse@user/pulse)
[16:40:12] <hsv> It was probably a misguided attempt to fix a problem which may or may not still be there.
[16:40:22] <rkta> caze: so, does the compiler ignore the volatile in that case?
[16:40:36] <caze> rkta: No, it's not allowed to.
[16:41:05] <rkta> well, than it does something at least ;)
[16:41:07] <hsv> It may suppress some optimisations.
[16:41:43] <hsv> The resulting machine code may be different, so you may uncover some other bug if you change it.
[16:42:03] *** Quits: caveman__ (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:42:13] <caze> rkta: Without volatile, the foo function I wrote above can be omitted by the compiler as dead code.
[16:42:24] *** Joins: bnchs__ (~bnchs@41.141.173.31)
[16:42:42] <caze> rkta: With volatile, the compiler must generate code that executes those instructions.
[16:43:58] *** Joins: carlavilla (~carlavill@2a0c:5a84:320d:6900:21f:16ff:fe0f:275a)
[16:45:11] *** Quits: marshmallow (~marshmall@94.177.224.11) (Changing host)
[16:45:11] *** Joins: marshmallow (~marshmall@user/marshmallow)
[16:45:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:45:27] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:47:59] *** Quits: joev (~joev@user/joev) (Ping timeout: 252 seconds)
[16:48:43] *** Joins: joev (~joev@user/joev)
[16:54:17] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 256 seconds)
[16:59:31] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7)
[16:59:31] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:178:7edf:7ae2:b6e7) (Changing host)
[16:59:31] *** Joins: skapata (~Skapata@user/skapata)
[17:10:03] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[17:10:09] *** Joins: plastico (~plastico@neomutt/plastico)
[17:10:30] *** Joins: joev (~joev@user/joev)
[17:12:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:14:00] *** Quits: DollarBillStern (~MsFoxEmil@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[17:15:22] *** Joins: touch-face (~touch-fac@117.176.106.101)
[17:16:46] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:30] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[17:22:52] *** Joins: mrig_ (~mrig@lfbn-cor-1-210-155.w86-211.abo.wanadoo.fr)
[17:22:59] *** Quits: mrig_ (~mrig@lfbn-cor-1-210-155.w86-211.abo.wanadoo.fr) (Client Quit)
[17:26:29] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[17:33:13] *** Joins: inlight (~thomas@82.221.128.46)
[17:33:13] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[17:33:13] *** Joins: inlight (~thomas@user/inlight)
[17:35:42] *** Quits: joev (~joev@user/joev) (Ping timeout: 250 seconds)
[17:36:27] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:36:49] *** Joins: joev (~joev@user/joev)
[17:40:35] *** Quits: bnchs__ (~bnchs@41.141.173.31) (Remote host closed the connection)
[17:41:19] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:41:30] *** Joins: bnchs (~bnchs@41.141.173.31)
[17:46:48] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[17:47:17] *** Joins: APic (apic@apic.name)
[17:48:13] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[17:49:46] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[17:50:16] *** Joins: Everything (~Everythin@37.115.210.35)
[17:51:43] *** Quits: nicode (~nic@2607:f2c0:9541:7100:1164:ccd2:17cc:5d1a) (Ping timeout: 250 seconds)
[17:52:35] *** Joins: badsektor (~badsektor@user/badsektor)
[17:53:56] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:54:26] *** Quits: Cyp (~cyp@213.237.88.120) (Read error: Connection reset by peer)
[18:01:05] *** Joins: Cyp (~cyp@213.237.88.120)
[18:04:10] *** Joins: terminalpusher (~terminalp@2a01:586:8792:1:d84e:90f7:6cd7:4a36)
[18:10:44] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[18:14:36] *** Joins: orthoplex64 (~crm@70.120.0.94)
[18:15:15] *** Joins: kts (~kts@103.73.237.119)
[18:16:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6) (Read error: Connection reset by peer)
[18:16:51] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a)
[18:18:56] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Remote host closed the connection)
[18:19:45] *** Quits: terminalpusher (~terminalp@2a01:586:8792:1:d84e:90f7:6cd7:4a36) (Remote host closed the connection)
[18:20:39] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[18:24:17] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[18:24:17] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[18:25:10] *** Joins: joev (~joev@user/joev)
[18:30:06] *** Joins: myth (~myth@173.233.125.203)
[18:32:46] *** Joins: Viewday113 (~Viewday@user/viewday)
[18:34:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:34:49] *** Viewday113 is now known as Viewday11
[18:41:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:42:01] *** Joins: tommy3 (~asdafassk@151.210.135.108)
[18:42:22] *** Quits: tommy3 (~asdafassk@151.210.135.108) (Client Quit)
[18:47:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:47:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:47:40] *** Joins: wroathe (~wroathe@user/wroathe)
[18:47:59] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[18:48:53] *** Quits: namkeleser (~namkelese@124.188.192.57) (Quit: Client closed)
[18:48:59] *** Joins: vysn (~vysn@user/vysn)
[18:49:04] *** Joins: Torr (~Torr@user/torr)
[18:51:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:54:52] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[18:56:19] *** Quits: touch-face (~touch-fac@117.176.106.101) (Quit: Ping timeout (120 seconds))
[18:59:17] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[19:00:03] *** Joins: imp (~imp@138-59-122-25.static.sumicity.net.br)
[19:07:10] *** Quits: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:08:59] <nomagno> switch(var) { case foo: do_stuff(); case bar: if (condition) goto foo; }
[19:09:02] <nomagno> Is this valid?
[19:10:33] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:10:38] <dave0> no you can't just to a case like that, but you can add another label
[19:11:12] <dave0> switch(var) { baz: case foo: do_stuff; case bar: goto baz; }
[19:11:30] <dave0> s/just/jump
[19:11:53] <nomagno> Ooooh, yes that seems good enough
[19:12:31] <nomagno> ... Just trying to cut down on boilerplate in a portable manner, and also minimize the use of functions. 'cuz it's fun
[19:12:58] <dave0> switch/case is like an "acceptable" computed goto
[19:13:30] <LeoNerd> C# adds a "goto case thing" syntax, which is useful there. But no such luck in C. You'll have to add a label
[19:13:54] <LeoNerd> I usually name the label something like   switch(var) { case foo: case_foo: do_stuff(); ...   goto case_foo }
[19:13:54] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[19:16:15] *** Joins: quartz (~quartz@user/quartz)
[19:17:19] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[19:20:07] <quartz> WHy does the following code produce 2 and not a runtime error? https://i.ibb.co/qp7FXrz/image.png
[19:21:11] <oldlaptop> quartz: Try expanding the macros on paper. What does ADD(3) / SUB(3) expand to?
[19:21:29] <quartz> 6 / 0
[19:21:40] <oldlaptop> No, expand the macros first.
[19:21:48] <NRK> no, expand the whole thing
[19:21:49] <oldlaptop> They don't do any math, they only do text substitution.
[19:22:32] *** Joins: touch-face (~touch-fac@117.176.106.101)
[19:23:07] <quartz> Uhhh
[19:23:16] <quartz> I thought I did expand them..
[19:23:17] <dave0> quartz: ADD(3) / SUB(3)   expanding add   3 + 3 / SUB(3)   expanding sub   3 + 3 / 3 - 3
[19:23:26] <quartz> Ohh
[19:23:33] <pragma-> smh, 12,6100 byte image to show 100 bytes of text.
[19:23:35] <quartz> 3 + 1 - 3
[19:24:03] <dave0> yeah it should have been a 3meg video :-p
[19:24:07] <oldlaptop> The preprocessor has no idea about addition or subtraction, all it does is copy/paste text.
[19:24:45] <oldlaptop> As you're learning, this can have surprising effects if the macros aren't written carefully.
[19:25:49] *** Joins: constxd (~brad@142.167.170.88)
[19:26:13] *** Joins: mrig (~mrig@user/mrig)
[19:27:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:27:51] <quartz> oldlaptop: Thanks
[19:31:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:32:05] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[19:32:33] *** Joins: jaavv[m] (~jaavvmatr@2001:470:69fc:105::1:37b1)
[19:33:17] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: reboot)
[19:33:37] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 240 seconds)
[19:33:45] *** Quits: touch-face (~touch-fac@117.176.106.101) (Ping timeout: 256 seconds)
[19:34:23] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[19:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:35:55] *** Joins: Satin (uid193953@user/Seten)
[19:36:05] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[19:36:10] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[19:36:59] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Remote host closed the connection)
[19:37:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:38:17] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[19:41:55] *** Joins: wroathe (~wroathe@user/wroathe)
[19:46:12] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Remote host closed the connection)
[19:46:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[19:48:39] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[19:52:13] *** Quits: bnchs (~bnchs@41.141.173.31) (Ping timeout: 256 seconds)
[19:52:17] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 240 seconds)
[19:52:20] *** Joins: bnchs__ (~bnchs@41.141.173.31)
[19:52:38] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[19:55:01] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:ec54:cd88:99c3:2b2f) (Read error: Connection reset by peer)
[19:56:08] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:5824:82b6:9b03:aa20)
[19:57:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:58:43] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:5824:82b6:9b03:aa20) (Client Quit)
[20:00:39] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[20:01:22] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[20:05:01] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[20:05:51] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:07:40] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[20:08:32] *** Joins: node1 (~hex@user/node1)
[20:09:02] <node1> Does anyone have used bcc - Bruce's C compiler ?
[20:16:56] <novns> node1, Bruce have used it possibly
[20:17:30] *** Joins: mahmutov (~mahmutov@37.155.62.39)
[20:18:30] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[20:19:00] <fizzie> The preprocessor does have an idea about addition and subtraction, but it only uses it when evaluating an #if condition. ;)
[20:20:52] *** Joins: sokan_ (~sokan@athedsl-303439.home.otenet.gr)
[20:21:25] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:21:34] <node1> What the best way in C to find whether the system is 16 bit or 32 bit?
[20:21:35] *** Quits: sokan (~sokan@85.73.227.251) (Ping timeout: 256 seconds)
[20:21:35] *** sokan_ is now known as sokan
[20:25:09] <fizzie> If you just mean the size of `int`, if you want something that works for conditional inclusion too, testing IN
[20:25:16] <fizzie> ...INT_MAX is one.
[20:25:19] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[20:25:41] <node1> I meant the size of void pointer on 64 bit and 32 bit
[20:26:03] <fizzie> Why'd you want to know that?
[20:26:10] <node1> I remember it is 8 bytes on 64 bit computers.
[20:26:41] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:26:43] <node1> And using google it says 32 bit has 4 byte. So 16 bit must be of 2 byte i believe.
[20:26:44] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[20:26:58] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:26:58] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:26:58] *** Joins: AssKoala (~asskoala@user/asskoala)
[20:27:19] <node1> And 8 is the common amongs everyone, correct?
[20:27:43] <fizzie> That really depends. For example, on 16-bit MS-DOS environments, there's a whole range of data models (tiny, small, medium, compact, large, huge), some of which have 2-byte pointers and others which have 4-byte ones.
[20:28:09] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[20:28:10] <fizzie> There isn't really even a universal definition for what it means for a system to be "16-bit".
[20:29:18] <fizzie> If you've got one where there's just 2**16 bytes of addressable memory and a byte size of 8 bits, then sure, a 2-byte pointer would be the natural choice. Not sure if C's really the common-est language in that space.
[20:29:25] *** Joins: sokan_ (~sokan@athedsl-304416.home.otenet.gr)
[20:29:28] <node1> So let me code in this way to get to know my system architecture. int main() { printf( "My system is %d bit OS"sizeof(void *) * 8); return 0; }
[20:29:54] *** Joins: de-facto (~de-facto@user/de-facto)
[20:30:02] <fizzie> %d is not the right type specifier for `size_t`, and CHAR_BIT isn't *necessarily* 8.
[20:30:04] <Rounin> You should at least decide whether you want the int size or the pointer size or both
[20:30:24] <Rounin> I don't know how one would find out the length of an instruction... Use assembly I suppose
[20:30:25] *** Quits: sokan (~sokan@athedsl-303439.home.otenet.gr) (Ping timeout: 256 seconds)
[20:30:25] *** sokan_ is now known as sokan
[20:30:47] <Rounin> I suppose a program might be allowed to read its own code, but how would it know where to find it
[20:30:50] <ioxzev1z> ,cc sizeof(void *)
[20:30:53] <candide> ioxzev1z:  sizeof(void *) = 8
[20:31:04] <Rounin> Ah
[20:31:07] <fizzie> And that would print 32 on an arguably 16-bit DOS system in the compact, large and huge memory models. And 16 for the tiny, small and medium ones. Even though (again, arguably) they're all "16-bit".
[20:31:10] <Rounin> ,cc sizeof(size_t)
[20:31:13] <candide> Rounin:  sizeof(size_t) = 8
[20:31:37] <node1> I'm on 16 bit DOS os
[20:32:03] <fizzie> Then what that code will print will depend on the selected memory model (typically).
[20:32:40] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:32:50] <node1> And what selected memory model does freedos has by default?
[20:33:01] <fizzie> It's not a property of the OS, it's a property of your program.
[20:33:30] <node1> But don't you think this model represent whole computational model?
[20:33:49] <fizzie> Tiny, small and medium models generate programs that use a single data segment and consequently make object pointers (like `void *`) 2 bytes; compact, large and huge use multiple data segments, and use 4-byte ("far") pointers that are a segment:offset pair.
[20:34:05] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[20:34:16] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:34:17] *** Viewday115 is now known as Viewday11
[20:34:18] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[20:35:27] <node1> But anyway my code prove that i'm on 16 bit operating system.
[20:35:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:35:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:35:56] *** Joins: wroathe (~wroathe@user/wroathe)
[20:36:53] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:37:20] <fizzie> Just saying, it won't print 16 for all compilers / compilation options that generate programs runnable in that environment.
[20:37:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:37:59] <fizzie> (Skimming the docs, looks like bcc is hardcoded to use the tiny/small models though.)
[20:38:56] <pragma-> ,cc -m32 sizeof(void *)
[20:38:58] <candide> pragma-:  sizeof(void *) = 4
[20:39:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:39:32] <fizzie> Must be a 32-bit operating system, clearly.
[20:40:12] <Rounin> ,cc -m8 sizeof(void*)
[20:40:13] <candide> Rounin: gcc: error: unrecognized command-line option '-m8'; did you mean '-k8'?
[20:40:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:40:15] <Rounin> Hehe
[20:40:49] <node1> https://ibb.co/NnZdgRT
[20:41:04] <fizzie> There is in fact a -m16, it's just not exactly akin to the -m32/-m64 pair.
[20:41:46] <fizzie> It generates the same code as -m32 but an extra directive that tells GNU as to emit operand/address-size overrides for everything so that it can run in 16-bit mode. Sort of.
[20:41:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:42:18] *** Joins: Akuli (~Akuli@82-203-162-15.bb.dnainternet.fi)
[20:43:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[20:43:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:44:15] <fizzie> ,cc -m16 sizeof (void *)  // shouldn't work, just curious
[20:44:18] <candide> fizzie: /usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-redhat-linux/12/libgcc.a when searching for -lgcc /usr/bin/ld: cannot find -lgcc /usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-redhat-linux/12/libgcc_s.so when searching for -lgcc_s /usr/bin/ld: cannot find -lgcc_s /usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-redhat-linux/12/libgcc_s.so when searching for -lgcc_s /usr/bin/ld... <truncated; https://0x0.st/oXoV.txt>
[20:44:30] <fizzie> (Even if it did, it would still have a 4-byte `void *`.)
[20:46:03] <node1> fizzie, May i know what you wants to say ?
[20:47:08] <fizzie> About what? That last bit (about GCC -m16) didn't really try to say anything in particular.
[20:47:34] <node1> okay so your speaking in context of GCC
[20:48:03] *** Parts: Elliot[m] (~elliotal_@2001:470:69fc:105::bb21) ()
[20:48:36] <fizzie> Yes, that last part was just in the context of <Rounin> ,cc -m8 sizeof(void*)
[20:50:27] <node1> ok
[20:50:41] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 250 seconds)
[20:52:11] *** Joins: bnchs___ (~bnchs@160.177.20.208)
[20:52:29] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[20:54:47] *** Quits: bnchs__ (~bnchs@41.141.173.31) (Ping timeout: 256 seconds)
[21:01:21] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:584f:e58d:f72a:96f) (Quit: fe23)
[21:04:50] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a5e1:d8fc:db8d:5548)
[21:06:21] *** Joins: ethrl (~ethereal@user/doforlove33)
[21:07:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:07:50] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[21:08:57] *** Quits: bnchs___ (~bnchs@160.177.20.208) (Ping timeout: 240 seconds)
[21:09:41] *** Joins: Betal (~Betal@user/betal)
[21:10:05] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[21:10:29] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[21:12:02] *** Quits: ethrl (~ethereal@user/doforlove33) (Quit: WeeChat 2.8)
[21:13:19] *** Joins: oriba (~oriba@dynamic-077-191-250-060.77.191.pool.telefonica.de)
[21:15:33] <sham1> void * could also very well be 2 bytes if it's a near pointer
[21:16:11] <sham1> But of course it'd require some implementation-specific specifier to have a near pointer Vs far pointer
[21:17:26] *** Joins: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com)
[21:18:07] <node1> bcc is quite different in terms of writing c code for it
[21:18:22] *** Quits: omegatron (~some@p5b056436.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:27:22] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[21:27:53] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4)
[21:28:04] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[21:29:15] <quartz> What advice would you give to Dennis Richie back in the 70's on the design of C?
[21:29:31] <retr0> NO MORE POMEGRANATES
[21:30:10] <pragma-> "design"
[21:30:21] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:5824:82b6:9b03:aa20)
[21:30:23] <NRK> bitwise operator precedence :)
[21:30:47] <retr0> add scoped breaks, zstrings and wstrings
[21:30:53] <retr0> the type keyword
[21:31:04] <retr0> instead of compound initializers
[21:31:19] <retr0> like freebasic has
[21:31:31] <twkm> not that there were compound initializers in the 70's.
[21:32:13] <NRK> maybe stronger enum typing as well
[21:32:14] <ioxzev1z> quartz, send him the C2x standard
[21:32:32] <quartz> ioxzev1z: Haha!
[21:32:55] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[21:32:57] <retr0> maybe an easier way to do COM though thats not C's fault
[21:33:03] <quartz> NRK: C does not have bitwise operator precedence?
[21:33:32] <quartz> What are zstrings?
[21:33:44] <retr0> dim mystring as zstring*64
[21:34:02] <twkm> quick, make c another basic!
[21:34:13] <sham1> C has bitwise operator precedence but it's stupid
[21:34:23] *** hexeme is now known as ldlework
[21:34:39] * sham1 grumbles about a&b==c being a&(b==c)
[21:34:42] <quartz> What about garbage collection?
[21:35:00] <quartz> sham1: Why is it stupid?
[21:35:11] <retr0> you dont need gc in the 70's lol
[21:35:16] <retr0> you do it yourself
[21:35:22] <sham1> Because I'd expect that to be (a&b)==c
[21:36:25] <quartz> Ohh it's actually a&(b==c)
[21:36:29] <quartz> I missed your comment
[21:36:32] <sham1> As I said
[21:37:09] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[21:38:00] *** Joins: nicode (~nic@2607:f2c0:9541:7100:7034:ab5c:4fd9:7549)
[21:38:18] <sham1> It makes sense if it was logical AND since a&&b==c makes sense that b==c is seen as the RHS of the operation
[21:38:39] <sham1> But because C didn't used to have logical AND, only bitwise AND, we have to deal with this mess
[21:39:20] <sham1> Same with a|b==c being a|(b==c)
[21:39:38] <ioxzev1z> sham1, no logical and? what did people use for && ?
[21:39:56] <sham1> ioxzev1z: &
[21:40:05] <sham1> So the bitwise version
[21:40:43] <NRK> kino
[21:40:48] *** Joins: Guest74 (~Guest74@12.168.100.2)
[21:40:50] <sham1> It wasn't short-circuited of course
[21:40:52] <Guest74> Hello
[21:41:12] <NRK> short circuiting is cringe anyways
[21:41:40] <sham1> So idioms like if (something_inexpensive() && something_heavy_with_side_effects()) couldn't be done because with bitwise AND you need to evaluate both sides
[21:41:55] <Guest74> I'm confused about something gdb is telling me just playing around with the debugger. I get two different hexadecimal values printed, but I don't know which one on the left and right mean. https://i.imgur.com/37EmJn5.png Can anyone help?
[21:42:28] <twkm> #gdb probably can.
[21:42:30] <sham1> I dunno, can we
[21:42:37] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[21:43:21] <quartz> I mean I think C is a pretty good langauge, it's still used today, so what else could he have done given the restrictions in the 70's on computing.
[21:43:37] <sham1> Lisp
[21:43:42] <quartz> I guess made C++ ? :P
[21:44:02] <Guest74> Hey bro I heard you liked parenthesis, so we put parenthesis in your parenthesis.
[21:44:26] <ioxzev1z> Guest74, A is 100 decimal, bp 18 is 100 decimal displayed as hex, 0x64
[21:44:31] <NRK> honestly pretty dissapointed at some of the modern "c insperied" langs
[21:44:54] <sham1> Most of them annoy me
[21:45:11] <NRK> they all look like they're c++ subset rather than C inspired
[21:45:13] <Guest74> Thanks ioxzev1z.
[21:45:22] * ski still wonders how the `entry' keyword was intended to be used
[21:45:32] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[21:45:58] <ioxzev1z> Guest74, the 0x7... is the address of A
[21:46:08] <ioxzev1z> The 0x64 after it is the value at that address
[21:46:21] <nomagno> http://termbin.com/lixm
[21:46:23] <HaMsTeRs> does anyone really do code with vim?
[21:46:25] <Guest74> Thank you. I'll make sure I remember that gdb can and probably will print decimal numbers as hexadecimal.
[21:46:50] <sham1> HaMsTeRs: I sometimes program in vim but I usually use emacs
[21:47:00] <ioxzev1z> Guest74, yeah hex is a good way to print, just noticed that my first comment didn't explain the question about left and right
[21:47:08] <nomagno> Is it too bad if I continue this reentrant main-loop macro-and-goto-based VM architecture?
[21:47:30] <HaMsTeRs> does it really speed up your work after your mastered it?
[21:47:34] <sham1> I mean, re-entrant is always nice
[21:47:48] <nomagno> I haven't ever really tried something like this, I just want to reduce boilerplate compared to my function-based current implementation
[21:47:56] <Guest74> Lets not start a vi vs emacs war like it's still 1979.
[21:48:09] <NRK> HaMsTeRs: i do. why?
[21:48:26] <HaMsTeRs> does it really speed up your work?  how about taking notes? do you use vim also?
[21:48:31] <sham1> Oh flamewar will continue until the heat-death of the universe
[21:48:43] <NRK> i don't know about speeding up work, but i like it cus of the bindings. it's cozy.
[21:48:43] <nomagno> sham1: the previous version was reentrant to. Talking about the style of the switch statemtn at the bottom of the file
[21:48:43] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[21:49:01] <nomagno> I use the POSIX subset of vi
[21:49:08] *** Quits: Guest74 (~Guest74@12.168.100.2) (Quit: Client closed)
[21:49:23] <nomagno> Sometimes. Other times the micro editor
[21:49:25] <nomagno> Polar opposites :D
[21:49:27] <sham1> I usually use that for editing config files on systems with an actual vi
[21:50:05] <NRK> i don't take notes, so dunno about that. but i use it for all kind of text editing, yes.
[21:50:33] <sham1> I've just switched to uses dead trees for notes
[21:50:38] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[21:50:55] <sham1> No matter how fast I type, I can get things like lecture notes faster with a pen&paper
[21:51:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:51:36] <nomagno> Modern text editors are essentially a mix of 'cat /dev/stdin' and GNU readline
[21:52:01] <nomagno> Functionality wise, anyways
[21:52:09] *** Joins: aradesh (~aradesh@user/aradesh)
[21:52:32] <sham1> Well not really, a lot of them give you a lot of layers between editing and the text
[21:52:34] <NRK> HaMsTeRs: although, if i programmed in one if these "modern" languages where people don't write manpages for their libs then i'd probably use something with LSP
[21:52:44] <sham1> Things like substitution of snippets and such
[21:53:08] <sham1> Sooo, vim?
[21:53:31] <sham1> I'm not a huge fan of LSP
[21:54:05] <NRK> vim doesn't have native LSP. neovim does, but i ditched that cus it was getting too bloated for my usecase.
[21:54:15] <sham1> Well native mayhaps
[21:56:12] <NRK> nice thing about C is that even if some lib doesn't provide manpage, you can just jump into the header file :D
[21:56:47] <nomagno> NRK: Except if we are talking about glibc
[21:57:02] <nomagno> But that does have manpages
[21:57:04] <nomagno> Fortunately
[21:57:25] *** Joins: ferdna (~ferdna@user/ferdna)
[21:57:41] <nomagno> In any case, is the thingy I linked above readable?
[21:58:16] <sham1> I'd say it is
[21:58:23] <sham1> Although I would avoid using errno
[21:58:48] <nomagno> As a variable name?
[21:58:55] <sham1> Yeah
[21:59:15] <nomagno> Fair
[21:59:27] <Inline> nother name ?
[21:59:40] <Inline> exceptional_exception_message ?
[21:59:43] <Inline> lol
[22:00:31] <sham1> error_value or something
[22:00:41] <Inline> ord1_error
[22:01:35] <ski> error_status
[22:02:08] <NRK> err
[22:02:56] <fizzie> e
[22:05:52] <sham1> error_number
[22:06:22] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[22:09:19] *** Joins: xiaomiao (~purrrr@gentoo/developer/patrick)
[22:11:28] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:11:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:12:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:13:44] <node1> quartz  Your said to me :( sorry i was away
[22:14:22] <quartz> node1: Huh?
[22:14:37] <ChoHag> If a library doesn't come with a manpage its authors are hardly going to be the type to produce a well laid out header file.
[22:14:47] <node1> oh sorry i thought something different.
[22:15:19] <node1> ty
[22:15:32] <koollman> ChoHag: I've seen it happen. Mostly tiny libs, though. the kind that fits in one header or one header + one source
[22:15:49] <ChoHag> Oh those are the rare few where the header file *is* the manpage.
[22:16:20] *** Quits: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 252 seconds)
[22:19:12] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:22:42] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:25:34] *** Joins: NEYi (~NEYi@109.251.216.38)
[22:25:57] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[22:28:13] *** Joins: trampel (~trampel@2601:602:9a00:49d:66c3:555c:839f:ad22)
[22:28:40] *** Quits: MatthiasG2 (~matthias@i6DFA03D9.versanet.de) (Quit: Lost terminal)
[22:29:21] *** kish` is now known as GoeJoran
[22:29:25] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[22:30:31] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:30:57] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Ping timeout: 240 seconds)
[22:33:00] *** Joins: Viewday116 (~Viewday@user/viewday)
[22:33:30] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[22:33:58] *** Quits: node1 (~hex@user/node1) (Ping timeout: 260 seconds)
[22:34:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:34:32] *** Viewday116 is now known as Viewday11
[22:35:08] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:35:31] *** Joins: node1 (~hex@user/node1)
[22:36:23] <sham1> I mean, I don't really *blame* people for not writing man-pages since roff is terrible, but having some sort of documentation is goos
[22:36:29] <sham1> Good
[22:36:39] <neshpion> i just write -h
[22:37:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:38:22] *** Joins: SaltHillStroller (~SaltHillS@199.249.111.186)
[22:41:14] *** Joins: vicfred (~vicfred@user/vicfred)
[22:41:59] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:42:02] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[22:42:15] <ChoHag> I totally blame people.
[22:42:22] <ChoHag> If you haven't documented your shit it's not finished.
[22:42:26] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:42:36] <ChoHag> Don't like the language? Tough. Suck it up and be a programmer.
[22:43:28] <ChoHag> The only valid excuse is that you don't really care about whatever it is you've made.
[22:44:30] <ChoHag> (It doesn't specifically have to be unix manpages but there should be documentation)
[22:44:39] * neshpion 's package installer injects `man() { $1 -h; }` into ~/.bashrc so that `man neshpions_program` works
[22:44:55] <xiaomiao> ChoHag: "chabuduo" ...
[22:45:53] <ChoHag> Nearly isn't good enough.
[22:46:48] <xiaomiao> yes, but on average most people don't care as much as you do. sigh.
[22:47:41] <ChoHag> It's appropriate in its place.
[22:47:50] <ChoHag> I don't worry too much about spelling, punctuation, etc. on IRC.
[22:48:14] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a5e1:d8fc:db8d:5548) (Ping timeout: 252 seconds)
[22:48:17] *** Quits: SaltHillStroller (~SaltHillS@199.249.111.186) (Ping timeout: 240 seconds)
[22:48:24] <ChoHag> I see code without documentation like a house repaired by cowboys.
[22:49:00] <ChoHag> Sure it works, but everything leaks and there's rising damp on one of the walls and occasionally something goes *CLUNK* for no reason.
[22:49:57] *** Quits: mahmutov (~mahmutov@37.155.62.39) (Ping timeout: 240 seconds)
[22:51:48] *** Joins: mahmutov (~mahmutov@5.176.26.76)
[22:52:03] <ChoHag> Oh and sometimes the electricity sparks while you're on holiday and burns the house down, or doesn't and kills everybody. But that only happens rarely so never mind.
[22:52:22] *** Quits: trampel (~trampel@2601:602:9a00:49d:66c3:555c:839f:ad22) (Quit: Leaving)
[22:52:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[22:52:58] <ChoHag> Was it here or the other place where I was complaining about programmers calling themselves engineers? This is why.
[22:53:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:53:45] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[22:56:46] *** Parts: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788) (WeeChat 3.4)
[22:59:32] *** Joins: Earnestly (~earnest@user/earnestly)
[22:59:54] *** Joins: Azem (~haise01@user/haise01)
[23:01:53] <neshpion> "software engineers" lol
[23:02:11] <neshpion> isn't "<anything else> engineer" some kind of legally protected term requiring licensing of some kind?
[23:02:19] <ChoHag> In most countries.
[23:03:17] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 240 seconds)
[23:03:21] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:b54:51f:6720:5b3c)
[23:03:54] *** Joins: cfr-wis (~cfr-wis@pd9e65e54.dip0.t-ipconnect.de)
[23:04:00] <neshpion> i might as well tack on "his majesty" to my office plaque
[23:04:13] *** Joins: defaced (~user@91.218.173.105)
[23:04:16] <defaced> do you see me
[23:04:16] <defaced> ?
[23:04:19] <neshpion> no
[23:04:27] <cfr-wis> yes
[23:04:28] <ChoHag> Got one over on you there. My name is actually King.
[23:04:52] <ChoHag> I'm a (self-proclaimed) engineer *and* his majesty.
[23:04:53] <defaced> lordivo?
[23:04:58] <cfr-wis> yes thats me
[23:06:09] <cfr-wis> now
[23:06:33] <neshpion> later
[23:06:36] <defaced> idk
[23:06:47] <cfr-wis> hm
[23:07:15] <cfr-wis> still
[23:07:33] *** defaced is now known as defaced123
[23:07:37] <defaced123> its works
[23:07:44] <defaced123> just pick something else
[23:07:47] <cfr-wis> It doesn't
[23:07:57] <defaced123> use /nick defaced123132
[23:08:15] *** cfr-wis is now known as lordivo
[23:08:18] <lordivo> now?
[23:08:21] <lordivo> YAY
[23:11:37] *** Joins: reset (~reset@user/reset)
[23:12:15] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[23:14:02] *** Quits: lordivo (~cfr-wis@pd9e65e54.dip0.t-ipconnect.de) (Quit: Lost terminal)
[23:14:05] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[23:14:25] *** Joins: chickfilla (~lastc@2607:fa49:553f:2200:2507:759a:1e53:cc02)
[23:16:26] *** Quits: nicode (~nic@2607:f2c0:9541:7100:7034:ab5c:4fd9:7549) (Ping timeout: 260 seconds)
[23:17:12] *** Joins: Charadon (~Charadon@155.138.164.183)
[23:17:49] * ski . o O ( <https://www.hillelwayne.com/post/are-we-really-engineers/> )
[23:17:50] <candide> Title of ski's link: Are We Really Engineers? • Hillel Wayne
[23:18:17] *** Joins: nicode (~nic@2607:f2c0:9545:ab00:3e60:8518:dd62:e6e8)
[23:18:38] <ChoHag> Yeah that's what triggered me I think. No. We are not.
[23:18:55] <sham1> Some are
[23:19:04] <ChoHag> Vanishingly few these days.
[23:19:18] <nitrix> Our entire field amounts to speculating and cargo-culting.
[23:20:06] <sham1> Eh, I feel that that's a bit reductive thing to say, although admittedly there is a lot of cargo-culting
[23:20:13] <nitrix> Lots of heresays, "good practices" and other idioms repeated ad nauseam.
[23:20:13] <neshpion> ##rust is the true `cargo` cult
[23:20:17] <sham1> hah
[23:20:41] <ChoHag> There's not a lot of cargo-culting, there's a *lot* of cargo-culting.
[23:21:25] *** Quits: oliverwood (~oliverwoo@node-1w7jra27sm79l0xu1l5l5nxry.ipv6.telus.net) (Remote host closed the connection)
[23:21:31] <sham1> I mean, good practices is a good thing to have. Those are also a thing in those more "actual engineering" disciplines
[23:22:12] *** Joins: oliverwood (~oliverwoo@2001:56a:f830:f600:6c98:4e15:f2c0:33be)
[23:22:30] <ChoHag> It's simple.
[23:22:34] <ChoHag> Engineers don't make mistakes.
[23:22:40] <ChoHag> And when they do, they fix them.
[23:23:00] <zwr> programmers do the kind of stuff that would have a doctor's license revoked daily
[23:23:26] <ChoHag> And when those mistakes have killed people, those licenses were not revoked.
[23:23:48] <neshpion> patient needs a lil extra blood? npm install bone marrow transplant
[23:24:12] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:24:12] <ChoHag> Sorry he's having a hissy fit because the work he gave away for free isn't being compensated for.
[23:24:15] <ChoHag> Dead patient.
[23:24:47] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[23:25:10] <sham1> Sure, but that's just NPM and the JS ecosystem
[23:25:12] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[23:25:16] <ChoHag> An engineer would have read the fucking contract.
[23:25:28] <nitrix> Except that programmers are endlessly chasing the ever moving target called "good practices" that isn't properly defined, changes from one person to another, and time to time.
[23:25:30] <nitrix>  It's great to push the boundaries, to hone your skills, mentor others or if you want to improve, though it also has the double edge of causing divides within our ranks.
[23:25:36] <sham1> To draw overarching conclusions from that is a bit odd
[23:25:50] *** Quits: defaced123 (~user@91.218.173.105) (Quit: leaving)
[23:26:02] <neshpion> it's every language with an 'ecosystem' imo
[23:26:05] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[23:26:09] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:26:14] <sham1> Even C?
[23:26:43] <neshpion> hard to say, C is old and huge and was created and used by actual engineers before "software engineers" became a hip thing
[23:26:45] <ChoHag> We never had ecosystems. We had software and, if we were lucky, we had manuals.
[23:26:50] <ChoHag> And we liked it.
[23:27:38] <sham1> No, there certainly is a C ecosystem with best practices and all
[23:27:44] <ChoHag> There is now.
[23:27:53] <nitrix> We went from 5-ish major languages, to the 30-ish major language, 300-ish relatively in use and probably 2000 or more special odd balls, without countain the 10k or more esoteric.
[23:28:21] <ChoHag> "The Next 700 Languages" (I think) was written in the 70s or 80s IIRC.
[23:28:39] *** Joins: crashrep (~crashrep@user/crashrep)
[23:28:42] <nitrix> Then consider all the duplicated work to recreate the same network libraries, http, json, config, whatever. The different APIs to learn, the implementation bugs to surface and get fixed...
[23:28:47] <theseb> Any tips on implementing multiple objects in memory that will grow to unknown lengths?  The basic problem I'm seeing is that if you give each object its own big part of memory, there is always the danger you won't give it enough.  I think the answer is you are forced to keep resizing the chunks of reserved memory unless you put everything in the same stack?
[23:29:20] <ChoHag> theseb: If things can grow in a way which will cause them to overlap another's space, they need to be movable.
[23:29:45] <theseb> ChoHag: yea..that's what i'm afraid of
[23:29:57] <neshpion> theseb: just wrap linked lists! :D
[23:30:09] <zdctg[m]> theseb: you basically just described the heap, so reading how malloc() and such works would probably be beneficial
[23:30:09] <ski> do they need to be contiguous ?
[23:30:18] <theseb> ChoHag: it feels like cheating to just ask for massive memory and give each object a massive amount of it but that would be a brainless solution
[23:30:25] <ChoHag> Why?
[23:30:34] <ChoHag> Most OSs provide that service for some value of free.
[23:30:39] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:30:48] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[23:30:55] <theseb> neshpion: what do you mean *wrap* linked lists?
[23:31:18] <nitrix> theseb, You can either use datastructures that can be split (like ropes for strings), or allocated memory when it needs to be contiguous. realloc is your friend. Modern systems have virtual memory and the pages will be stitched together to appear contiguous.
[23:31:45] <theseb> zdctg[m]: in my limited understand of the heap....it is just a region that can grow......it seems I need *multple* "heaps" if i want to have multiple objects that grow
[23:32:06] <ChoHag> No, they all exist independently within the heap.
[23:32:10] <sham1> Eh, C doesn't really have a concept of having multiple heaps
[23:32:22] <ski> why can't you have the multiple objects all allocated (with `malloc' or whatever) in the same memory arena ?
[23:32:31] <neshpion> theseb: i was thinking just a struct with a pointer to the head and the size, maybe that's all; just something to make it feel like what you're dealing with is one single thing instead of links in a chain
[23:32:36] <neshpion> maybe that's not even needed
[23:32:37] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:32:43] <sham1> Indeed, C doesn't really even have a concept of a heap in the first place. Instead you have allocated storage duration objects you allocate with malloc or equivalent and then free using, well, free (or equivalent)
[23:32:52] <nitrix> You were mislead. Prime example why we discourage people of thinking in terms of stacks or heaps.
[23:33:18] <ChoHag> The heap isn't really a thing in itself, it's more what you have left once you declare a stack.
[23:33:31] <theseb> btw, if curious...  implementing lisp....i need a region for the "environment".....(keys AND values)....also need another region or output of evaluator, etc.
[23:33:31] <ChoHag> It's just "everything else".
[23:33:42] <zdctg[m]> theseb: well you're sorta misunderstanding things, the heap ends up storing almost all of the various objects in a modern program. That said, some systems also have the concept of multiple heaps (e.g. windows)-- its why I suggested the topic, there are a lot of different implementations that are solving the same basic problem you've described, but the truth is your system allocator is probably better optimised and such and you might consider just
[23:33:42] <zdctg[m]> using it because that's what its for
[23:34:07] <sham1> theseb: you could put those into the garbage collection
[23:34:55] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:35:01] <ChoHag> Lisp needs a heap to contain its pairs.
[23:35:16] *** Joins: crashrep (~crashrep@user/crashrep)
[23:35:31] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[23:35:38] <ski> there's also <https://en.wikipedia.org/wiki/Region-based_memory_management>
[23:35:53] <ski> theseb : does the environment need to be "in one place" ?
[23:36:11] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[23:40:05] <sham1> What I'd do for the environment is that I'd have a stack of environments per-closure. So you have your closure's environment (maybe it's a flat closure or something else, doesn't really matter) and then you link to the next environment up from your closure, which may be another closure, or your evaluation environment (your global environment). It means that you can make your environments garbage collected and if your closure gets collected, so would its
[23:40:05] <sham1> environment and so on
[23:40:19] *** Quits: imp (~imp@138-59-122-25.static.sumicity.net.br) (Quit: imp)
[23:41:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:41:29] <ChoHag> The closure should link to the environment it executes in and that environment should link to the one it's created from, so that when the closure is still live both will be reached by the garbage collector.
[23:41:51] <sham1> Yes, exactly
[23:42:19] *** Joins: pulse (~pulse@user/pulse)
[23:42:20] <nitrix> http://www.newlisp.org/MemoryManagement.html
[23:42:27] <sham1> > newlisp
[23:42:29] <nitrix> NewLISP uses a region-based approach too.
[23:42:30] * sham1 squints
[23:42:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:42:42] <ski> SML/NJ does allocate its activation frames in a garbage-collected heap. Chicken compiles via (sorta) C, using CPS, so that the C functions never return. when automatic storage space runs out, GC is run on it to compact it (and then continue), treating it like a heap
[23:42:53] <sham1> Yeah
[23:43:00] <nitrix> The article does a good job explaining the usual implementation, theirs, and the tradeoffs.
[23:43:50] <ChoHag> I SEP the entire affair by writing my garbage collector with hooks that someone who's better at writing a garbage collector than me could replace with something good.
[23:44:14] <ChoHag> That problem's been solved already.
[23:44:39] <sham1> Boehm GC
[23:45:17] <nitrix> NewLISP allocates in a stack-like manner. When you enter a new scope/closure/whatever, the current location is saved, then when the function returns, the pointer gets readjusted to the saved location, so that everything that has been allocated past it is freed.
[23:46:06] <nitrix> It's completely deterministic, but it does require the semantic to change a little, you cannot do sharing. The variables are always copied.
[23:46:48] <nitrix> Which sounds like a problem but they have an entire paper with benchmarks to show that in practice it's actually faster.
[23:47:21] <sham1> Also no proper lexical scope which… yeah
[23:47:42] <nitrix> That's where zdctg[m] could improve :D
[23:48:06] *** Quits: chickfilla (~lastc@2607:fa49:553f:2200:2507:759a:1e53:cc02) (Quit: Leaving)
[23:48:56] <zdctg[m]> nitrix: ??
[23:48:59] <nitrix> (I believe there's an escape hatch for the pathological cases where you want to have sharing of a large object).
[23:49:19] <nitrix> zdctg[m], I don't understand your question.
[23:49:20] <ChoHag> It's a tough problem to solve for 100% of cases.
[23:49:31] <ChoHag> Ridiculously easy for the 99.9%.
[23:50:32] <zdctg[m]> nitrix: That's where I could improve what?
[23:51:30] <nitrix> The sentence relies on the context of the conversation to be understood. If you don't follow the conversation, you wont understand the context and therefore my sentence when I mentioned you.
[23:52:26] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 245 seconds)
[23:53:04] <zdctg[m]> nitrix: are you saying that you could improve the heap by like garbage collection or scope/closure related allocation stuff? and what does that have to do with me? Is it because I told him that whatever he was trying to do the system allocator probably already did it better?
[23:54:05] <nitrix> I think it was meant for theseb and I mixed you two.
[23:54:27] <zdctg[m]> Ah I see.
[23:54:29] <nitrix> No wonder we're all confused :P
[23:54:30] <zdctg[m]> That makes more sense
[23:55:01] *** Joins: Matt|home (~matt@adsl-74-233-58-26.mia.bellsouth.net)
[23:55:41] <ChoHag> Well I've read as much of that article as I can stand and the answer's still no.
[23:56:02] *** Joins: mac_n_cheese (~lastc@2607:fa49:553f:2200:2507:759a:1e53:cc02)
[23:56:28] <theseb> It just occurred to me that C doesn't really have the concept of arbitrary length arrays
[23:56:38] <theseb> even when you use malloc it has a fixed size
[23:56:46] <theseb> if you need more you have to manually do the realloc
[23:57:01] <theseb> there is no built in data structure that magically grows as you need it
[23:57:09] <nitrix> It does have Variable Length Arrays (VLAs) where the length gets determined during the execution of the program.
[23:57:09] <theseb> not complaining...just thinking out loud
[23:57:12] *** Joins: meator (~meator@user/meator)
[23:57:34] <ChoHag> No, just a pointer to a blob that you have to know the size of.
[23:57:44] <nitrix> Once the array is created though, it cannot be resized. You have to manually manage your own arrays with allocated memory if you want them to resize.
[23:58:03] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:58:43] <nitrix> And still, they don't actually resize. The old object is typically invalidated and you obtain a new object.
[23:59:34] <theseb> nitrix: if we made a structure that *appeared* to grow to arbitrarily lengths (we'd have to implement it with reallocs behind the scenes)....could we rightly claim we made a "virtual memory manager" ?
