[00:00:16] *** Joins: Auron (Auron956@user/auron)
[00:00:17] *** Quits: p-i- (~Ohmu@223.206.145.10) (Ping timeout: 240 seconds)
[00:00:34] <bjs> This is an area where it's easy to get things wrong if you "roll your own" but also everyones requirements are slightly different
[00:01:06] <teut> leader die, but system continues? isn t that the master slave thing?
[00:01:13] <bjs> teut: what?
[00:01:15] <teut> dies*
[00:01:38] *** Joins: _ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[00:01:46] <teut> nothing
[00:01:54] <bjs> teut: in distributed systems, where you have many computers working together over a network, individual computers can lose power or lose internet connection and disappear but the remaining ones should continue to work together anyway
[00:02:13] <bjs> for example, IRC networks :)
[00:02:15] *** Quits: aniketgm (~Aniket@2405:201:1007:4e71:c1d:1ac6:7baf:8a43) (Quit: leaving)
[00:02:20] <teut> ya and isnt it called master slave architecture?
[00:02:28] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Remote host closed the connection)
[00:02:32] <bjs> whose consensus algorithm sometimes fails in fun ways that we get to experience
[00:02:42] <bjs> teut: not really, here we call them "leaders"
[00:03:04] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[00:03:05] <bjs> leaders are usually just one of the other computers that are elected (or selected at least)
[00:03:06] <teut> is master slave architecture something else?
[00:03:13] <phy1729> The leader dying isn't the worst case scenerio either; it's usually split brain where there are multiple fragments of the network that can't talk to each other.
[00:03:17] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[00:03:17] <Evolver> teut: it's similar, e.g. in postgresql
[00:03:40] <bjs> phy1729: hence my comment about IRC,  maybe I should've actually said netsplit :)
[00:03:40] <Evolver> teut: in postgresql, if the master dies, the secondary node can be auto-promoted
[00:03:48] <teut> if one node fails, it selects a child as mater
[00:03:52] <teut> master*
[00:04:01] <teut> yse exactly
[00:04:12] <Evolver> teut: but in leader election, you don't configure the initial master (afaik)
[00:04:19] <phy1729> but then how do you know if the primary died or if you just can't talk to it right now?
[00:04:28] <phy1729> and now we get into the CAP theorem
[00:05:13] <bjs> teut: well you have to start by asking how do you even know if a node fails,  what happens if the node comes back later? what if the node that fails *is* the leader? etc  lots of things, quite easy to get wrong hence the body of work on consensus algorithms
[00:05:41] <teut> ya , I know , thats why we use aws
[00:05:51] <bjs> nvm
[00:06:01] <teut> monolith->microservice->serverless
[00:06:14] <teut> I dont but startups
[00:06:42] *** Joins: gusto (~Augustus@109.255.100.54)
[00:07:14] *** Quits: gusto (~Augustus@109.255.100.54) (Client Quit)
[00:07:54] <teut> these terminologies in CS suck, I cant even know if I know something or not
[00:08:06] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Quit: Quit)
[00:08:20] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:08:27] *** Joins: arinov (~arinov@213.194.126.155)
[00:08:28] *** Joins: gothicserpent (~gothicser@204.152.215.249)
[00:08:39] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Client Quit)
[00:08:53] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:09:29] <SnoopJ> teut, the terminology is frustrating, but that's all the more reason to choose your questions carefully and get the complete answers
[00:09:48] *** Quits: fuze (uid76888@id-76888.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:06] <teut> I said a person , I know threads, he asked due to know atomic, isolation ? I said yes
[00:10:14] <bjs> teut: there is this quote from Feynman, I can never remember it exactly, about how he never used to learn the names of things until he started to work with other people when he realised all the silly names were important in communicating with his collaborators about things
[00:10:17] *** Quits: Guest7318 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[00:10:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:10:35] <teut> he asked what is Phantom Read
[00:10:52] <lantech19446> last night was the first night my classes actually felt like programming, we finally got to functions lol granted very very very simple functions but progressing at least. I hope I understand loops in python more than I did in javascript
[00:11:11] <teut> and I didnt know it, when I read it afterwords its just a race condution
[00:11:18] <teut> condition
[00:11:26] *** Quits: delvian (~delvian@41.13.220.17) (Quit: Leaving)
[00:11:32] *** Parts: thisdude (~thisdude@pool-72-65-50-80.bflony.fios.verizon.net) ()
[00:11:45] <teut> yes, thats exactly what its all about bjs
[00:12:12] <bjs> teut: all the different names are just lubricant in a conversation,  they aren't the knowledge in of themselves, but they make things easier and more fluid to explain when everyone has the same set of terms
[00:12:47] <SnoopJ> lantech19446, Python's iteration is a lot more focused on "what you mean" than C-style languages like JavaScript, so hopefully it's easier to absorb those :)
[00:13:02] <teut> they allow you do  google search faster but
[00:13:27] <lantech19446> SnoopJ: I hope so, I need to learn this to get a career in devops and so far it's been my biggest obstacle
[00:13:46] <SnoopJ> perhaps it is not surprising that a field so focused on learning about syntax/semantics has such a tenuous grasp on either of those ;P
[00:13:58] <teut> the salary is same for devops and full stack engineer role
[00:14:05] <teut> why devops?
[00:14:28] <bjs> teut: surely if the salary is the same, you could ask, "why full stack engineer?"  just as easily
[00:14:30] <bjs> :)
[00:14:43] <SnoopJ> salaries vary per employer and phase of the moon and all sorts of other things
[00:14:54] <lantech19446> teut: I have 13yrs of experience as a sys admin it just seems like a more logical step
[00:14:57] <Evolver> Successful devs do their own devops
[00:15:30] <teut> full stack engineers deal with engineering problems
[00:15:48] <SnoopJ> lantech19446, that's a fairly natural progression in my (granted, limited) observation
[00:15:49] <teut> devops just figuring out versioning
[00:15:55] *** Joins: Macuser (~Macuser@72.sub-174-206-112.myvzw.com)
[00:15:56] <SnoopJ> teut, it is a lot more than "versioning"
[00:16:04] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[00:16:06] *** Quits: weedmic (~weedmic@109-186-195-63.bb.netvision.net.il) (Quit: Konversation terminated!)
[00:16:13] *** Joins: miromoto (~miromoto@p5b2ca740.dip0.t-ipconnect.de)
[00:16:21] <SnoopJ> but then, "devops" is one of those words that means "whatever the person saying it thinks it means"
[00:16:22] <phy1729> There are very few people who can build a whole house by themselves. I don't know why people expect that in software.
[00:16:24] <teut> yes ,I know ,they will figure out, docker, aws , nginx etc
[00:16:55] <teut> that stuff has lot more trouble setting it up
[00:17:00] <SnoopJ> phy1729, pathological infatuation with the myth of solitary excellence
[00:17:09] <lantech19446> yea like i just learned ansible i have a fair grasp on it right now i'm learning aws and python next is docker I have apache httpd experience
[00:17:22] <Evolver> phy1729: the reason is that it helps with moving forward quickly when there is an obstruction, otherwise you've to call a plumber and wait a month to fix a basic leak
[00:17:46] <SnoopJ> (I blame William Shockley in no small part)
[00:17:56] <teut> they may be packaging a PyQqt app for windows, and pyinstaller errors  are much much irritating that frontend/backend code errors
[00:18:36] <phy1729> Evolver: you say that as if the generalist will have the same knowledge as the dedicated plumber
[00:18:46] <SnoopJ> literally so mad at the success of Bardeen/Brattain's transistor that he invented the junction transistor in anger
[00:18:49] <Evolver> phy1729: with the internet, they've enough
[00:19:36] <Evolver> I think the exception is with security where is too much at risk.
[00:19:55] <phy1729> Ah but there's "devsecops" now!
[00:19:59] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:20:11] <phy1729> Just roll all the titles into one word
[00:20:21] <lantech19446> yea and devsysops apparently too
[00:24:17] *** Joins: BobShoes (~pi@user/BobShoes)
[00:25:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:26:11] *** Joins: Pixi (~Pixi@user/pixi)
[00:26:34] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[00:28:05] *** Joins: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb)
[00:28:39] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 268 seconds)
[00:29:34] <Evolver> I decided to use the https://pypi.org/project/locket/ package for file locking. It remains to be seen if it has any bugs that affect me.
[00:30:42] <Evolver> It uses `fcntl`.
[00:31:39] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Ping timeout: 250 seconds)
[00:32:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com)
[00:35:30] <Helenah> I'm not understanding asyncio.iscoroutine('foo'), asyncio.iscoroutinefunction('foo'), inspect.iscoroutine('foo'), inspect.iscoroutinefunction('foo') and inspect.isawaitable('foo) are always returning False even when the function 'foo' is asynchronous ie it starts with 'async def'.
[00:36:07] <Pilate> are you actually passing those functions strings instead of the actual function?
[00:36:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:36:47] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:4c54:44dd:f160:af33)
[00:36:48] <Pilate> its not like going to look up your function by name and check, you need to pass the function
[00:36:59] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:37:00] <Helenah> Pilate, I've passed an actual function, I just posted an example problem here.
[00:37:26] <SnoopJ> well, the example passes strings, hence the question
[00:37:37] <Swayze> :-p
[00:37:54] <SnoopJ> Helenah, maybe we could see a more complete code sample in a bpaste?
[00:38:46] <Pilate> iscoroutine would require an actual coroutine, like foo()
[00:40:16] *** trench_ is now known as trench
[00:40:24] *** Joins: luigibu (~luigi@80.30.201.209)
[00:40:44] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:40:55] <Helenah> I'm trying to dynamically call functions. https://termbin.com/s21n
[00:41:37] <Pilate> youre still passing 'iscoroutinefunction' a string instead of the function
[00:41:52] <Pilate> you need to give it the commandFunction
[00:42:00] <Helenah> Okay.
[00:42:59] *** Joins: Viewday112 (~Viewday@user/viewday)
[00:43:15] *** Quits: vuks (~Vuks69@87-206-7-209.dynamic.chello.pl) (Quit: Leaving)
[00:43:41] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[00:44:39] <Helenah> One problem, iscoroutinfunction seems to be calling it even if the function isn't asynchronous.
[00:44:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:44:57] *** Viewday112 is now known as Viewday11
[00:45:42] <bjs> Helenah: iscoroutinefunction shouldn't call anything
[00:45:44] <Helenah> Still returns False on an asynchronous function too.
[00:45:49] <SnoopJ> Helenah, show us your updated code
[00:46:02] <bjs> Helenah: can you share your code?
[00:46:30] <Helenah> Fixed!
[00:46:34] <Helenah> Thank you guys.
[00:47:58] *** _ELFrederich is now known as ELFrederich
[00:48:44] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[00:49:01] <ELFrederich> using pathlib how can I fell if a path ends with something like foo/bar.xml ... I don't want to do str(filepath).endswith("foo/bar.xml") because then it wouldn't work on Windows.
[00:49:02] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[00:49:43] <ELFrederich> Doing filepath.parts[-2:] == ("foo", "bar.xml") ... seems like too much, is there an easier way?
[00:49:45] *** Joins: dulanic (~dulanic@47.187.144.163)
[00:51:15] <SnoopJ> ELFrederich, why does it seem like too much?
[00:51:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:51:51] <ELFrederich> SnoopJ, I really don't like comparing slices... for instance I think if I were to check it against ["foo", "bar.xml"] it'd fail because one is a tuple and the other a list
[00:52:31] *** Joins: majorgreys (~majorgrey@ool-4a5af734.dyn.optonline.net)
[00:52:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:53:02] *** Quits: BobShoes (~pi@user/BobShoes) (Quit: WeeChat 2.8)
[00:53:10] <Pilate> you can compare it to whichever is appropriate?
[00:53:12] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[00:53:15] <parv> Compare againt 'foo/x.y'.split( '/' )?
[00:53:16] <SnoopJ> ELFrederich, you could feed .parts to your sequence of preference before comparing, although I think this adds complexity rather than removing it...
[00:53:23] *** Quits: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb) (Read error: Connection reset by peer)
[00:53:35] <SnoopJ> parv, that will fail on platforms that don't use '/' for a path separator (like Windows)
[00:53:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[00:54:01] *** Joins: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb)
[00:54:29] *** Quits: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb) (Read error: Connection reset by peer)
[00:54:40] *** Joins: fikran (~fikran@user/fikran)
[00:55:07] *** Joins: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb)
[00:57:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com)
[00:57:06] <parv> Right. ELFrederich  did mention that too; missed it. Also, there is no ".separator" attribute or method to use
[00:57:11] *** Quits: buzzard (~quassel@209.58.146.149) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:57:21] <parv> ... in pathlib
[00:57:37] <Helenah> I love coding, it just helps if code works (Just kidding about the if code works part, said it for kicks and giggles)
[00:58:15] <Helenah> Anyway, have a nice day people, human beings, cats, dogs, robots or whatever you are.
[00:58:29] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[00:59:14] <Helenah> You have a nice day too, Reinhilde.
[01:00:09] <ledtc> Hey any know how to "select * from FOO where 'bar' is distinct"  ?
[01:00:33] <yitz> group by bar, count == 1?
[01:00:59] <Reinhilde> Helenah: I don't even know you?
[01:02:20] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:226:6685:3dd4:7093) (Quit: Leaving)
[01:03:54] <SnoopJ> parv, the separator is in the _flavour, but I don't think it's accessible with public API.
[01:04:19] <SnoopJ> I think you'd just use os.sep
[01:04:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:04:43] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[01:05:03] <Helenah> Reinhilde, You don't? Well please could you explain the IRC server I'm hosting for you?
[01:05:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:05:17] <Helenah> Also I think we best talk in -offtopic
[01:05:27] <Reinhilde> I was expecting you to discontinue that.
[01:06:05] <parv> SnoopJ, Yeah, I saw "sep" attribute in pathlib.py per private-by-convention classes.
[01:06:09] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c19a:105d:2d96:4657)
[01:06:39] <jokoon> cant I do if (thing = get_thing()) != None:
[01:06:39] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[01:06:41] <jokoon> in python?
[01:06:56] <SnoopJ> parv, the whole idea of the library is that it does all the munging so you don't have to, so I guess you could just use os.path if you were going to care about that level of detail
[01:07:11] <parv> Indeed
[01:07:14] <deniska> jokoon: you can do `if (thing := get_thing()) != None:`
[01:07:28] <jokoon> mh
[01:07:29] <SnoopJ> jokoon, no, `name = value` is a statement unto itself. Since 3.8 you can use := in expressions as deniska points out, though.
[01:07:58] <deniska> jokoon: or even `if thing := get_thing()` if you are ok with other falsy values not getting through
[01:08:29] *** Joins: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[01:08:56] <jokoon> althought a := 1 alone doesn't work
[01:09:44] <SnoopJ> `(a := 1)` does, but I'm not sure why the expr needs to have parens
[01:10:09] <jokoon> because that's how parsers work I guess
[01:10:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:10:23] <deniska> or it was made on purpose so that people don't mix := and =
[01:10:26] <SnoopJ> it tokenizes it correctly, I'm guessing maybe it just excludes this case because it should be an assignment statement
[01:10:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:8370:a76b:ff1f:221c) (Ping timeout: 240 seconds)
[01:13:55] *** Joins: whaley (~whaley@2603-6080-a301-33d1-e627-917a-2dbe-22f7.res6.spectrum.com)
[01:14:43] <ELFrederich> Is there something in Python's standard library for comparing version strings?
[01:17:56] *** Quits: majorgreys (~majorgrey@ool-4a5af734.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[01:18:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:19:50] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761)
[01:20:50] *** Quits: teut (~teut@2401:4900:1c30:1de4:6df0:844a:8dde:d751) (Quit: Client closed)
[01:21:43] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:2507:1779:a1f7:5925)
[01:22:49] *** Quits: cosimone (~user@93-47-229-223.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:23:10] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:23:29] <SnoopJ> ELFrederich, PEP 440 offers some regexes that will with with `re`, or you can use PyPA's `packaging.version` package (which is *not* in the stdlib, but isn't uncommon)
[01:26:01] *** Quits: bpillman (~bpillman@ip70-179-135-215.fv.ks.cox.net) (Quit: Leaving)
[01:26:19] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 256 seconds)
[01:27:01] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[01:27:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[01:28:45] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[01:29:10] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[01:29:56] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Killed (NickServ (GHOST command used by Seto_Kaiba)))
[01:30:00] *** Seto_Kaiba is now known as Hunterkll
[01:31:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com)
[01:32:11] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[01:32:11] *** Quits: gidden (~gidden@adsl-dyn57.78-99-32.t-com.sk) (Quit: Leaving)
[01:33:50] *** Joins: canton7 (canton7@about/csharp/canton7)
[01:34:35] *** Joins: Guddu (~Guddu@pc-51-79-83-200.cm.vtr.net)
[01:34:59] <Guddu> Could someone please tell me what is this \xbf character? https://dpaste.com/4TD5264GW
[01:36:14] <bjs> Guddu: it's character 0xBF (aka Unicode codepoint #191 aka "INVERTED QUESTION MARK").  If your text isn't supposed to have an inverted question mark in it,  probably something has gone wrong in decoding
[01:36:25] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[01:36:26] *** Joins: devish (~devish@205.251.233.52)
[01:36:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:37:21] <bjs> Guddu: there is something strange about your paste, what is `row` exactly? where did it come from.
[01:37:45] *** Joins: redbull (~redbull@gateway/tor-sasl/redbull)
[01:37:51] <Guddu> bjs, I am reading it from a oracle database. row is the result of cursor.fetch()
[01:38:12] <bjs> Guddu: the repr suggests that someone has converted it to a string somehow/somewhere
[01:39:53] *** Quits: miromoto (~miromoto@p5b2ca740.dip0.t-ipconnect.de) (Quit: Leaving)
[01:40:05] *** Quits: devish (~devish@205.251.233.52) (Client Quit)
[01:40:19] *** Joins: devish (~devish@205.251.233.52)
[01:41:02] <bjs> SnoopJ: PEP 572 explicitly forbade using := as an unparenthesised expression on its own as a top-level statement.
[01:41:05] <bjs> There was much heated debate iirc
[01:41:32] *** Quits: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 240 seconds)
[01:41:41] *** Quits: devish (~devish@205.251.233.52) (Client Quit)
[01:42:09] <SnoopJ> bjs, aha!
[01:43:09] *** Joins: devish (~devish@205.251.233.52)
[01:43:17] *** Quits: jpic (~jpic@82.142.28.30) (Ping timeout: 268 seconds)
[01:44:21] <bjs> I remember habnabit taking offense to that particular part, and of course to the expression `x, y := 1, 2`
[01:44:43] *** Joins: jpic (~jpic@82.142.11.118)
[01:45:30] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:36] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:46:22] *** Quits: sazawal (~sazawal@122.161.88.88) (Quit: Leaving)
[01:47:04] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c19a:105d:2d96:4657) (Quit: Leaving)
[01:47:08] *** Joins: userHeni (~userHeni@bl23-48-219.dsl.telepac.pt)
[01:47:23] *** Quits: userHeni (~userHeni@bl23-48-219.dsl.telepac.pt) (Remote host closed the connection)
[01:48:14] <SnoopJ> I was only an egg back then, missed out on all the argument
[01:48:38] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.3)
[01:48:44] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:49:10] *** Joins: digilink (~digilink@user/digilink)
[01:49:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[01:49:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:50:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[01:50:52] <braxas> https://github.com/RDFLib/rdflib/pull/1498#issuecomment-996038324 - someone asks a question here that I don't really know how to answer well> we have "restricted" the type of lang to a string with the type annotations. Is it really necessary to do a runtime check when we already have the type annotations. This is a general question — it's not specific to lang.
[01:50:57] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:51:25] <braxas> To me, if I have a class like URI, I should not be able to construct that class without it being valid. If I get a URI class, it should be useable as a URI
[01:51:36] <braxas> If I get a URI object I mean
[01:52:43] <aphysically> braxas: fwiw pyright will actually give you an error in strict mode if you unnecessarily check something already restricted with annotations
[01:53:08] <braxas> mypy if you have warn unreachable on
[01:54:08] <bjs> SnoopJ: I stay out of the arguments, it's more fun as a spectator sport
[01:55:05] <SnoopJ> bjs, yea that was the sense I was thinking of, although given my residual predilection for argument, I probably would get sucked into something that fierce.
[01:55:55] *** Joins: ditiris (~ditiris@rrcs-98-6-97-186.sw.biz.rr.com)
[01:56:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:56:15] <ditiris> If I have a list of bytes how do I convert that to a list of integers?
[01:56:47] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[01:57:21] <The-Compiler> ditiris: perhaps   list(b"".join(your_bytes))
[01:58:59] <nedbat> ditiris: it depends how you want to convert the bytes to ints
[01:59:06] <The-Compiler> fair point
[01:59:07] <ditiris> ah i want to convert the list of bytes to 4-byte integers in little-endian
[01:59:28] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: Lost terminal)
[01:59:30] <The-Compiler> ditiris: it sounds like you want struct.unpack then
[02:00:58] *** Joins: Guest7318 (~vit@chello085216193138.chello.sk)
[02:01:55] *** Quits: devish (~devish@205.251.233.52) (Ping timeout: 256 seconds)
[02:03:06] <nedbat> ditiris: or:  [int.from_bytes(b[i:i+4], "little") for i in range(0, len(b), 4)]
[02:03:14] <ditiris> awesome, thanks. struct.unpack('I'*n, byte_array) is exactly what I was looking for
[02:04:01] <ditiris> nedbat: ooh i like that too thanks - that way i don't have to know the size of the byte array
[02:04:23] <ditiris> although i suppose len(b)/4 easy enough
[02:04:51] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Ping timeout: 268 seconds)
[02:05:21] <nedbat> ditiris: true dat
[02:05:57] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[02:07:34] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[02:08:12] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[02:10:25] *** Quits: ditiris (~ditiris@rrcs-98-6-97-186.sw.biz.rr.com) (Ping timeout: 256 seconds)
[02:10:25] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[02:11:32] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Read error: Connection reset by peer)
[02:11:34] *** Joins: darksun (~darksun@user/darksun)
[02:11:52] *** Joins: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03)
[02:11:56] *** Parts: ham5urg_ (~ham5urg@p5ddfd13d.dip0.t-ipconnect.de) (Leaving)
[02:12:02] *** Joins: audiobirb (~audio@user/audio)
[02:13:33] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:14:46] *** Joins: null23 (~null23@h-37-123-160-123.A251.priv.bahnhof.se)
[02:15:13] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[02:17:37] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[02:19:20] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[02:19:32] <null23> ok..i got this 2row example code, https://pastebin.com/1n5iiEuV ...the example works like charm but when i try it inside my own code.. i get "successfull" or "cryptography.fernet.InvalidToken" .. and i dont like that invalidtoken stuff
[02:19:37] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 240 seconds)
[02:19:43] <null23> what can i have done wrong..?
[02:19:52] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[02:20:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:20:15] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[02:20:28] *** Joins: amaenli (~amaenli@user/amaenli)
[02:20:37] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:32ec:add1:6eff:37fa) (Ping timeout: 240 seconds)
[02:21:17] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[02:21:48] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[02:22:02] *** Joins: arinov (~arinov@213.194.126.155)
[02:22:25] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[02:22:30] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:22:51] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:23:37] *** Quits: raphan1 (~raphan1@82-45-68-178.baltnet.ru) (Ping timeout: 240 seconds)
[02:26:19] *** Joins: jnrj (~d3user@187-41-67-231.user3p.veloxzone.com.br)
[02:27:04] <bjs> null23: i'm not sure I understand the question
[02:27:06] <bjs> what is wrong?
[02:28:50] <jnrj> hi, I have a timezone aware datetime object  (<class 'datetime.datetime'> 2021-12-16 23:00:52-03:00) how can I get this datetime object accounting with its timezone? I want it to return the datetime - 03h, or (<class 'datetime.datetime'> 2021-12-16 20:00:52) - any ideas?
[02:29:36] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:29:49] <phy1729> astimezone? https://docs.python.org/3/library/datetime.html#datetime.datetime.astimezone
[02:30:33] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[02:30:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:34:11] <jnrj> phy1729, not sure how to use it, tried a little but no success: `dt = datetime.strptime(response.headers['Date'], '%a, %d %b %Y %H:%M:%S %Z').replace(tzinfo=ZoneInfo('America/Bahia')).astimezone(ZoneInfo('America/Bahia'))`
[02:35:50] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com)
[02:35:55] *** Parts: rk4 (~r@user/rk4) ()
[02:37:03] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:37:47] *** Quits: Helenah (~s98259@user/helenah) (Quit: Helenah)
[02:37:51] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[02:38:14] <parv> jnrj, Make a time zone with UTC-03:00 (wherever that is), say in 'X/Y'; then: pytz.timezone( 'X/Y' ).normalize( dt )
[02:38:30] *** Joins: WarpedAI (~Warped@user/warped)
[02:38:48] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[02:38:49] *** Joins: spithash (~spithash@user/spithash)
[02:39:06] <jnrj> parv no way to avoid using pytz?
[02:39:42] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[02:39:50] <parv> jnrj, I prefer pytz; don't care for datetime for being too limited; there may be other ways
[02:40:09] <jnrj> alright, thanks parv
[02:41:03] <null23> bjs: i used the examplecode, it works fine... i replaced row2 with dataSU = fernetkey.decrypt(Data.encode()) and when i try a working key, console tells me "valid key".. but when i change key, i get "crypt....Invalidtoken" instead of "unvalid key"
[02:41:07] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 256 seconds)
[02:41:24] <null23> i cannot understand what can cause this
[02:41:26] <bjs> null23: can you show us it saying invalidtoken and the actual code?
[02:42:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761) (Ping timeout: 256 seconds)
[02:42:53] <null23> sure.. i need to remove some stuff first..
[02:43:34] <bjs> null23: make sure your removing of stuff doesn't make the error go away
[02:43:50] <bjs> we've had people try be helpful and remove things and accidentally remove the line of code that was *actually* causing the bug :)
[02:44:38] *** Quits: magla (~gelignite@55d46610.access.ecotel.net) (Quit: Stay safe!)
[02:45:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:45:39] *** Quits: redbull (~redbull@gateway/tor-sasl/redbull) (Ping timeout: 276 seconds)
[02:46:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:46:37] *** Joins: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net)
[02:49:32] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:51:53] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 256 seconds)
[02:52:04] *** Joins: Fiji (~Fiji@user/fiji)
[02:53:56] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[02:54:39] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:55:12] <null23> gosh.. i thought my code wasnt so bad until i started to look back and clean it, it will take some time but now i need to sleep.... i be back tomorrow its night over here now..
[02:56:11] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[02:56:38] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[02:57:01] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[03:00:01] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[03:01:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:03:42] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[03:04:00] *** Joins: fikran (~fikran@user/fikran)
[03:04:58] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:2507:1779:a1f7:5925) (Quit: Konversation terminated!)
[03:05:07] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:07:25] *** Joins: vladoski (~foo@2001:b07:add:d406:78f9:8795:af3e:8ae4)
[03:07:27] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[03:07:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:08:48] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:09:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:09:17] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[03:09:57] *** Quits: Guest7318 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:11:55] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[03:12:04] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[03:13:14] *** Quits: parv (~quass@user/parv) (Quit: parv)
[03:13:38] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Read error: Connection reset by peer)
[03:13:53] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Read error: Connection reset by peer)
[03:15:22] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[03:18:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:28] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:b5dc:6340:e41e:25a2) (Quit: Client closed)
[03:18:57] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 240 seconds)
[03:19:28] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[03:22:39] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[03:22:52] <mike18_> hi how can i render a template with flask and python?
[03:23:27] <mike18_> if user goes to home.html i need to call and api get ids and display it on the page
[03:24:26] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[03:26:34] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:26:59] <Pilate> you could start by reading the tutorial and examples
[03:28:52] *** Quits: Vornotron (~Vornicus@2603-8000-5d07-7ef0-905f-a794-ab8e-4d9a.res6.spectrum.com) (Read error: Connection reset by peer)
[03:32:06] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[03:32:36] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[03:37:53] *** Joins: Roey (~Roey@user/Roey)
[03:39:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:22] *** Joins: redbull (~redbull@gateway/tor-sasl/redbull)
[03:41:07] *** Joins: Terexen (~terexen@user/terexen)
[03:42:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[03:44:56] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.41)
[03:44:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:45:13] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:46:26] *** Joins: fearnoth1ng (~fearnothi@user/fearnothing)
[03:47:04] *** Joins: Wulf (~Wulf@user/wulf)
[03:47:29] <dale> If I have a function xs() -> t.Union[typing.List[int], int], in a statement like "for x in xs():" how do I tell the type checker that, in this case, xs() will be returning the iterable type from the union?  Is typing.cast really the only way?
[03:47:51] *** Quits: grimvar (~grimvar@i5C75F727.versanet.de) (Ping timeout: 245 seconds)
[03:48:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:48:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:49:07] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Ping timeout: 256 seconds)
[03:49:13] <The-Compiler> dale: what's "this case"? How does xs() determine whether to return a list or a single value?
[03:49:52] *** Joins: grimvar (~grimvar@i5C75F75A.versanet.de)
[03:50:19] *** Joins: jay-m1261 (~jay-m@129.0.226.29)
[03:51:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:52:12] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:52:25] *** Joins: Warped (~Warped@user/warped)
[03:53:06] <dale> The-Compiler: Wasn't aware that would matter, but in reality this is lxml.etree.Element.xpath which returns an unholy union of types: https://github.com/lxml/lxml-stubs/blob/master/lxml-stubs/etree.pyi#L42
[03:53:24] <dale> The-Compiler: So I would say that the interpretation of the XPath determines the return type.
[03:53:47] <dale> s/of the XPath/of the XPath expression/
[03:54:03] <The-Compiler> dale: that's not something representable in the type system then - in more trivial cases, the best solution would likely be overloads with typing.Literal e.g.
[03:54:19] <dale> The-Compiler: Yeah, that's kind of what I feared.
[03:54:23] *** Joins: newbie|2 (~Warped@user/warped)
[03:54:33] <The-Compiler> dale: but you'd usually use "assert isinstance(...)" rather than cast for such things
[03:54:47] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 256 seconds)
[03:54:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:55:06] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.41) (Read error: Connection reset by peer)
[03:55:12] *** Joins: bxsx (~x@37.30.53.245.nat.umts.dynamic.t-mobile.pl)
[03:55:18] <dale> The-Compiler: That had also occurred to me.  In this case I'm digging around in deeply nested XML so it would end up turning a bunch of "for child in parent.xpath(...)" into three separate statements, making the overall code much harder to read.
[03:56:00] <dale> Is typing.cast evaluated as a normal function call at runtime by CPython, with all the associated performance costs?  Last I heard it was just a simple identity function.
[03:56:24] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[03:56:31] <The-Compiler> as far as I know, yes - but I wouldn't worry about it unless you profile it and that turns out to be the culprit (I'd doubt it)
[03:56:45] *** Joins: ede (~ede@user/ede)
[03:56:55] <dale> In this case it will not be.  In other cases it could be, was more asking for future reference.  Thank you. :)
[03:57:11] <The-Compiler> see https://mypy.readthedocs.io/en/stable/type_narrowing.html for a general overview btw
[03:57:31] <dale> Oh, I have read a lot of mypy docs but never this one, thanks twice.
[03:57:42] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 268 seconds)
[03:57:59] <SnoopJ> typing.cast() is just the identity so it's not particularly expensive if it's evaluated
[03:58:39] <SnoopJ> https://github.com/python/cpython/blob/main/Lib/typing.py#L1720-L1728
[04:00:09] *** Joins: Warped (~Warped@user/warped)
[04:01:01] *** Quits: jay-m1261 (~jay-m@129.0.226.29) (Ping timeout: 256 seconds)
[04:01:11] <bxsx> So, list comprehension is generally faster than for-loop for building lists (thanks to the dedicated LIST_APPEND, avoiding lookups, func calls). I see dict comprehension use MAP_ADD but it's slower than building a dict with for-loop. Can anyone explain me why?
[04:01:56] <dale> SnoopJ: Right.  I just know I've gotten into cases where every function call overhead hurts.  They're few and far between (and about 50% of the time they end up with me writing in something other than Python anyway).
[04:02:43] *** Quits: newbie|2 (~Warped@user/warped) (Ping timeout: 256 seconds)
[04:02:56] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[04:03:15] <dale> I see PEP 604 is in Python 3.10, so A|B == Union[A, B] in type signatures I gather.  Is "A or B" (i.e. using logical "or") valid, or has it ever been valid for that matter?  I saw someone use it the other day and they swore it was valid.
[04:03:57] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[04:04:34] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.3)
[04:06:08] <SnoopJ> It's a valid expression but it probably doesn't do what they expect
[04:06:25] <SnoopJ> it's likely equivalent to just `A`
[04:06:54] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[04:08:37] <dale> Oh, ha, I hadn't considered that.
[04:09:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[04:10:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761)
[04:11:12] <dale> I wonder what non-Python type checkers like Pyright and Pyre do with it.
[04:11:30] <dale> Oh, I guess I have one right here...
[04:12:30] <dale> Heh, Mypy: "Invalid type comment or annotation"
[04:13:06] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[04:13:09] *** Joins: esther (~esther@2607:fb90:20d8:1633:13ce:2116:8eed:5ab6)
[04:13:53] <dale> Pyright indeed treats "str or int" as str.
[04:14:35] *** Joins: Helenah (~s98259@user/helenah)
[04:14:41] <Helenah> Does anyone here code for run?
[04:14:52] <Helenah> Or is it all about a job?
[04:14:55] <gothicserpent> @Helenah, yes
[04:15:07] <Helenah> :)
[04:15:30] <Helenah> gothicserpent, Me too.
[04:15:44] <gothicserpent> Admittedly I don't use a ton of py, but i do code a ton for gamedev convenience scripts, etc.
[04:15:46] <dale> Funny to think that 10-15 years ago it would have made much more sense to reverse the question.
[04:16:25] <Helenah> gothicserpent, I code code code code, huge programs, 1000 or more lines long.
[04:16:42] <gothicserpent> same, many of my batch, c# scripts are that long for my game stuff
[04:16:50] <Helenah> :)
[04:17:01] <gothicserpent> don't forget to put them into github so you can track changes
[04:17:30] <Helenah> gothicserpent, My current one is a BBS.
[04:17:45] <Helenah> I also like coding IRC bots.
[04:18:07] <gothicserpent> cool
[04:18:57] <gothicserpent> BBS is a server?
[04:21:05] <SnoopJ> gothicserpent, yes, it stands for "Bulletin Board System"
[04:21:16] <gothicserpent> ah
[04:21:40] <SnoopJ> They're even more retro than IRC is :)
[04:21:48] <gothicserpent> lol
[04:22:05] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[04:23:02] * SnoopJ recently trawled through a collection of recipes scraped from BBSes on the FidoNet
[04:23:18] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:23:56] <grym> my fun code is usually of pretty horrible quality
[04:24:09] <Swayze> lol @ SnoopJ's pillow talk
[04:24:14] <grym> but that's part of the ... fun ..
[04:24:19] <Swayze> pulling mad hoes with that kinda talk
[04:24:38] <SnoopJ> Swayze, excuse me?
[04:25:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[04:25:53] <Helenah> grym, Mine is as clean as I know of.
[04:26:01] *** Joins: snakey_hiss (~scott@101.100.131.108)
[04:26:38] <Helenah> Swayze, What?
[04:26:48] <gothicserpent> it's perfect code? :x
[04:26:55] <dale> Huh, TypeAlias support is not in Mypy released yesterday?  I had to check out master.
[04:26:58] *** Quits: vladoski (~foo@2001:b07:add:d406:78f9:8795:af3e:8ae4) (Quit: Textual IRC Client: www.textualapp.com)
[04:27:07] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.41)
[04:27:11] <grym> Helenah: the majority of my just hacking around code are things like fairly idiotic IRC bots,so there's a lot of slapdash oneoffs
[04:27:17] <Helenah> gothicserpent, It would be very silly of me if I was to clean a codebase (mine or someone elses) is perfect.
[04:27:22] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Quit: Leaving)
[04:27:29] <stwange> I have a problem where I'm trying to use dns.asyncresolver and I find that around 1 in 1000 lookups throws an exception that I can't catch with try: except: unless I edit the Python libraries. They all seem to be <Future cancelled>. Is there any way I can at least catch these exceptions and handle them cleanly? Test code here: https://pastebin.com/ANzgk6LP
[04:27:33] <Helenah> grym, Oh.
[04:27:39] <Helenah> s/clean/claim
[04:27:42] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[04:27:43] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[04:28:26] <Helenah> gothicserpent, It's not perfect but I'm currently performing a 7th rewrite.
[04:28:26] <gothicserpent> I'm assuming you patch your code together from existing bots, etc.?
[04:28:37] <Helenah> gothicserpent, No.
[04:29:06] *** Joins: zeden (~zeden@user/zeden)
[04:29:09] <gothicserpent> i usually start with a template unless i'm devving a game concept from scratch.
[04:29:48] <gothicserpent> such as a new character, custom character abilities etc. most of the stuff i do "extends" other classes anyways. so i always templatize everything
[04:30:04] <Helenah> hmm.
[04:30:12] <gothicserpent> isn't it too much work to dev it from scratch?
[04:30:22] <gothicserpent> seems like a lot of cases to check for.
[04:30:24] <Helenah> gothicserpent, I enjoy it.
[04:30:32] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:30:37] <gothicserpent> i would be afraid i would forget edge cases.
[04:30:57] <gothicserpent> i guess that's what iterations are for :>
[04:31:02] *** Quits: ubert (~Thunderbi@p200300ecdf1abb0334f3944fefcb567c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:31:17] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[04:31:35] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[04:31:51] <Helenah> Oh.
[04:33:39] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.41) (Read error: Connection reset by peer)
[04:33:44] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[04:34:03] <Helenah> gothicserpent, I got loads of cool stuff on the system I'm coding like for example a prompt, for my user looks like "s98259@helenaserv:/> " and per user .shellrc files, in them currently this can be set "PromptFormat = <username>@helenaserv:<currentdirectory>>", I coded the tag parser myself, it's also used to parse tags that are in the motd file.
[04:34:51] <gothicserpent> cool
[04:35:42] <gothicserpent> i did something a little similar with a backup script but it was in batch code
[04:35:51] <Helenah> I also coded my own argument flag parser so I can do something like "uadd <username> [-G [groupname]]"
[04:35:59] <gothicserpent> it had prompts and a bit of parsing to do progress bars, etc.
[04:36:26] <gothicserpent> yup parsing the arguments is always cool
[04:36:50] <Helenah> It's actually more work than just splitting an input.
[04:37:01] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:37:04] *** Quits: bomb-on_ (~bomb-on@213.220.127.153) (Quit: aллилѹіа!)
[04:37:29] <Helenah> Especially if you want to be able to put your flags in any order like I have them and have long and short options like I have for example long option could be -f and its short option --foo
[04:37:29] <gothicserpent> u done any stuff with math at all?
[04:37:53] <Helenah> gothicserpent, What do you mean by that? equations or some sort of math for maths processing?
[04:38:28] <Helenah> s/math/module
[04:38:28] <gothicserpent> numpy, scipy
[04:38:32] <Helenah> OH!
[04:38:51] <Helenah> No, regarding math I've just been adding up the items of lists.
[04:38:54] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[04:39:12] <Helenah> gothicserpent, It doesn't use anything like numpy or scipy.
[04:39:38] <gothicserpent> you just store the numbers in plaintext files right
[04:39:52] <Helenah> gothicserpent, define "numbers".
[04:40:16] <gothicserpent> for example number of users registered to a channel or user information for a registered user in the ircd
[04:40:45] *** Joins: mike18 (~geri@216.200.232.252)
[04:40:47] <mike18> hi
[04:41:10] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[04:41:15] <Helenah> gothicserpent, It isn't an IRCd and I've had no need to do that. I have a SQL database containing a users table, a groups table and a users and groups link table as well as a permissions table for giving permissions to users and groups.
[04:41:21] *** Joins: juno__ (~junebug@2600:1700:3db0:2540:c301:1f00:85dc:f710)
[04:41:22] <mike18> i have multiple form type submit on a page - how can i assign different ids to them using flask templates and python?
[04:41:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[04:41:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[04:41:38] <gothicserpent> ah ok cool. sql
[04:41:58] *** Quits: bxsx (~x@37.30.53.245.nat.umts.dynamic.t-mobile.pl) (Quit: leaving)
[04:42:05] <Helenah> gothicserpent, Also, storing like how many users are in an IRC channel in a plaintext file is a bad idea, this data isn't supposed to be permanent after a server restart.
[04:42:21] <gothicserpent> true
[04:42:37] <gothicserpent> not to mention password security if those are stored
[04:42:54] <gothicserpent> that's why i asked actually, to make sure no one was able to break into the passwds
[04:43:03] *** Joins: arinov (~arinov@213.194.126.155)
[04:43:30] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:19aa:25c0:f7b5:fe36)
[04:44:56] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[04:45:17] <Helenah> Passwords are encrypted, the uadd command can either be used like this "uadd <username> [-g | --genpasswd [true | false] [-G | --group [groupname]" if -g/--genpasswd is specified and set to true then a password will be generated otherwise you'll get a password prompt that doesn't echo back to you, there is a configuration file where you can either set passwords to be generated by default or not and
[04:45:19] <Helenah> -g acts as an override.
[04:45:19] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[04:45:45] <Helenah> <> is required and [] is optional.
[04:45:57] *** Quits: dulanic (~dulanic@47.187.144.163) (Ping timeout: 240 seconds)
[04:46:21] *** Joins: adeliktas26 (~adeliktas@2001:16b8:226f:d100:e165:6b49:a559:970f)
[04:46:40] *** Joins: dulanic (~dulanic@47.187.144.163)
[04:46:52] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:46:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:47:37] *** Quits: esther (~esther@2607:fb90:20d8:1633:13ce:2116:8eed:5ab6) (Ping timeout: 240 seconds)
[04:47:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:47:47] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[04:47:54] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[04:47:55] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[04:48:01] *** Quits: cognoscente (~cognoscen@75-164-195-169.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:48:04] <Helenah> gothicserpent, Passwords are encrypted.
[04:48:06] <SnoopJ> gothicserpent, numpy/scipy come up here fairly often
[04:48:47] <gothicserpent> ok. cool
[04:48:52] <Helenah> and the configuration file continues a directive where a cipher key can be set, this ensures that the same password twice has two different encrypted strings.
[04:49:39] *** Quits: adeliktas (~adeliktas@2001:16b8:226f:d100:e165:6b49:a559:970f) (Ping timeout: 256 seconds)
[04:50:06] <Helenah> gothicserpent, It even has the commands: cd, ls and pwd :)
[04:50:07] *** Quits: jnrj (~d3user@187-41-67-231.user3p.veloxzone.com.br) (Quit: Connection closed)
[04:50:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[04:50:17] *** adeliktas26 is now known as adeliktas
[04:50:55] <gothicserpent> cool. keep on codin'! :>~
[04:51:09] <Helenah> Yeh, I really do enjoy it. :)
[04:51:26] <gothicserpent> ever thought about gamedev? that's pretty fun to get into
[04:51:36] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:51:51] *** Quits: Forsaken87 (~quassel@2a02:908:1867:7d40:93ab:b917:6d2c:4af1) (Ping timeout: 250 seconds)
[04:51:57] *** Quits: emf (~emf@2620:10d:c091:480::1:7a0e) (Ping timeout: 240 seconds)
[04:52:00] <mike18> hi whats the diff between input type="submit" Vs button ?
[04:52:02] <Helenah> gothicserpent, https://i.imgur.com/K1SIEB9.jpg
[04:52:13] <gothicserpent> you can use python for automation in unreal / unity. works good
[04:52:13] <Helenah> gothicserpent, I'm more into backend non-game stuff.
[04:52:26] <Helenah> I like telecommunications, sockets.
[04:52:48] *** Joins: emf (~emf@2620:10d:c091:480::1:7a0e)
[04:53:07] <gothicserpent>  i like the helenaserv logo looks like something out of a nuclear bunker command terminal lol
[04:53:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:53:49] *** Quits: nomic (~nomic@185.192.71.70) (Remote host closed the connection)
[04:53:50] <gothicserpent> you have a /help command to get all commands right?
[04:53:53] <gothicserpent> so people won't be stuck
[04:54:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[04:55:27] *** Joins: theprophet (~theprophe@85.114.228.184)
[04:55:32] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[04:55:46] <gothicserpent> if you're into sockets you should check out arvidn on github. guy has changed the world. his codebase uses about 2.8% python
[04:55:53] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[04:55:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[04:56:15] <gothicserpent> i'm assuming mostly for automation tasks
[04:57:54] *** Quits: emf (~emf@2620:10d:c091:480::1:7a0e) (Read error: Connection reset by peer)
[04:58:11] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:58:36] <theprophet> guys, i am trying to upload a project to a github, but outside project i also have a 3 other files i want to upload in same repository , do i upload seperately in same repistory or is it possbile to do it at the same time? i am using pycharm
[04:58:53] *** Joins: emf (~emf@2620:10d:c091:480::1:7a0e)
[04:59:27] <gothicserpent> theprophet, set up a .gitignore for files to ignore. otherwise just merge the repos if it's desired
[04:59:44] <theprophet> ahh i see
[04:59:48] <theprophet> okay
[04:59:52] <dale> Hmmm, how can I get at easy_install nowadays.
[05:00:00] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[05:00:02] <theprophet> thank you
[05:00:05] <gothicserpent> yw
[05:00:14] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[05:01:06] <Helenah> gothicserpent, You think it's IRC, don't you?
[05:01:52] <gothicserpent> yeah sorry lol haven't used bbs before
[05:02:31] <gothicserpent> i've only messed with unrealircd in terms of servers
[05:02:39] <dale> Good lord, 2021 and it's still so hard to get GNU readline in Python on macOS.
[05:02:47] <Helenah> If you imagine the WWW or Gopher except there isn't those two aren't around and imagine dialing numbers, a modem on the other end picks up the signal.
[05:03:03] <Helenah> and then transmits a terminal which you can use for files, and other things, that's a BBS
[05:03:15] <Helenah> They used telnet, mine uses SSH.
[05:03:37] <Helenah> and obviously you don't dial it
[05:03:42] <gothicserpent> ah cool i use ssh all the time to get into my digital ocean droplets. i only use PuTTy tho
[05:03:48] <gothicserpent> i kinda get what you are saying
[05:04:13] <Helenah> This isn't traditional SSH, it's an implementation, it doesn't use PAM, it doesn't drop you to an OS shell.
[05:04:47] <Helenah> dale, That's... WEIRD
[05:05:00] <Helenah> I thought readline was common these days.
[05:05:17] <gothicserpent> did you re-invent everything including the BBS and the terminal and all entry points and connections?
[05:05:28] <Helenah> You can even easily write your own readline() function if you need readline to work differently.
[05:06:24] <Helenah> gothicserpent, I didn't re-invent SSH, I use Asyncio and AsyncSSH. I re-invented argument parser, shell, and a bunch of other things.
[05:06:32] <gothicserpent> maybe you should set up a public github repo so you can get some other people making pull requests and contributing, etc.
[05:06:42] <Helenah> Perhaps.
[05:06:46] <gothicserpent> unless you're planning on selling it or something. -_-
[05:07:00] <Helenah> gothicserpent, What if someone just wants a private system for a few friends to log into though?
[05:07:12] <gothicserpent> github has some limits on the free tier for that.
[05:07:25] <Helenah> I didn't mean github.
[05:07:28] <dale> Sometimes libedit sucks.
[05:07:32] <Helenah> I was meaning what I'm coding.
[05:08:08] <Helenah> Like it is possible that an application be soo personalised that it's no use to anyone else.
[05:08:39] *** Joins: quidnunc (~user@bas3-montreal02-65-94-9-48.dsl.bell.ca)
[05:08:53] <gothicserpent> i mean i tried doing that with my video games and it was hard to keep devving it due to lack of feedback from the public, so
[05:09:02] <gothicserpent> your milage may vary with that. idk
[05:09:28] <gothicserpent> i eventually opened up some of my code to the public and got a bit of feedback and it was helpful.
[05:09:30] <Helenah> gothicserpent, Why would someone look at my project or your project when there is probably one better that does the same thing?
[05:09:32] <dale> In fact, Emacs's python.el explicitly doesn't work with libedit-based "readline" module.
[05:10:00] <Helenah> I've watched peoples projects die no matter how good they are.
[05:10:13] <gothicserpent> sometimes it's just preference. i've seen similar repos on github that do the same thing and i liked the coder behind one a lot more because of style and efficacy.
[05:10:27] <Helenah> hmm.
[05:10:50] <quidnunc> I have an object that can be used like foo['a', 'b'] which I want to pass a list like foo[*mylist] where mylist = ['a', 'b'], but I get a syntax error. Do I have to use getitem or is there a way to do this?
[05:10:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:11:32] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[05:11:50] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[05:12:17] <dale> quidnunc: foo[tuple(*mylist)] might work.  IIRC foo['a', 'b'] just calls foo.__getitem__(('a', 'b')).
[05:12:21] <Helenah> dale, I wrote a readline() for IRC buffer.
[05:12:32] <Helenah> The other options weren't working.
[05:12:45] <Helenah> So I just coded the damn thing myself. lol
[05:12:58] <Helenah> Someone was like "Oh you can readline" but no, didn't work like that.
[05:13:20] *** Joins: fikran (~fikran@user/fikran)
[05:13:26] <SnoopJ> quidnunc, `foo['a', 'b']` and `foo[('a', 'b')]` are synonyms, so you probably would just `foo[mylist]` if the type doesn't care about the distinction between a tuple and a list
[05:14:02] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:15:06] <mike18> hi friends - does someone know html by chance - for something simple? i have 100-200 buttons how to assign only 1 function to them?
[05:15:35] <Helenah> mike18, Interesting.
[05:15:44] <Helenah> mike18, Why only one function?
[05:15:44] <mike18> Helenah: what you mean?
[05:16:09] <mike18> because i dont want to write 100 functions - they all do the same they will call an api with the id...
[05:16:20] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[05:16:23] <Helenah> Oh.
[05:16:25] *** Joins: rajkosto (~rajkosto@178.220.241.244)
[05:16:32] <mike18> i have an id in each row with a button - to trigger a manual run
[05:16:44] <mike18> and there are multiple rows - so there are multiple buttons than....
[05:17:09] <Helenah> I've never really combined Python and HTML.
[05:17:47] <mike18> i currently use flask with some templates
[05:17:49] <Helenah> You say A API though, right?
[05:18:06] <mike18> the form submit will call an api in the backend to start a manual run
[05:18:16] <mike18> the form submit of that button
[05:18:34] <mike18> i need some dynamic $('#button1').click(function (){ ...
[05:18:36] <mike18> for all buttons
[05:18:49] <Helenah> Do they all do different things on the API?
[05:18:51] <mike18> for example in jquery ou can do: $('#b1, #b2, #b3').click(function(){ }).
[05:19:02] <mike18> no they all do the same - but for a different id
[05:19:23] <Helenah> Yeah, a single function could easily be wrote for that.
[05:19:24] <mike18> each row is: id, some other infos, button
[05:19:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[05:19:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[05:19:47] <mike18> button click will take id and send that to the api...
[05:19:52] <Helenah> So can't you do something like function(id, info)?
[05:20:16] <mike18> i havnt seen anything useful so far except: https://iqcode.com/code/javascript/jquery-onclick-multiple-buttons
[05:20:41] *** Quits: Macuser (~Macuser@72.sub-174-206-112.myvzw.com) (Quit: Textual IRC Client: www.textualapp.com)
[05:20:57] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800793a285520014903.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:22:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:23:40] *** Quits: juno__ (~junebug@2600:1700:3db0:2540:c301:1f00:85dc:f710) (Remote host closed the connection)
[05:24:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3491:9fc6:cfd7:84b6)
[05:27:27] <theprophet> guys, why is my pycharm only showing one project?  https://ibb.co/J7rmH64
[05:27:52] <theprophet> i am trying to upload project to a github and its only showing me a single project
[05:27:59] *** Joins: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl487q2m5ixmn5rak.ipv6.telus.net)
[05:28:31] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:28:57] *** Quits: flokuehn (~flokuehn@87.123.247.77) (Ping timeout: 240 seconds)
[05:30:56] *** Joins: flokuehn (~flokuehn@87.123.247.66)
[05:31:04] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:31:28] <mike18> Helenah: https://jsfiddle.net/8tk06yb3/
[05:32:04] <quidnunc> SnoopJ: Thanks that worked (without the *)
[05:33:28] <Helenah> I really would help but I don't know how, just thought I'd try.
[05:35:29] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:4c54:44dd:f160:af33) (Quit: Textual IRC Client: www.textualapp.com)
[05:36:59] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Ping timeout: 268 seconds)
[05:37:10] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[05:37:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:37:18] *** Quits: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl487q2m5ixmn5rak.ipv6.telus.net) (Quit: Leaving)
[05:37:55] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[05:38:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:38:20] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:38:56] *** Joins: KvL (~KvL@130.95.254.80)
[05:47:38] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:47:43] *** Joins: ano (~ano@user/ano)
[05:48:52] *** Joins: waynew (~wayne@user/waynew)
[05:49:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:50:17] *** Quits: rajkosto (~rajkosto@178.220.241.244) (Ping timeout: 240 seconds)
[05:51:26] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Remote host closed the connection)
[05:53:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[05:54:20] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[05:59:42] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[06:02:26] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:02:33] *** Joins: Nact (~l@host-85-27-123-179.dynamic.voo.be)
[06:03:10] <dale> Trying this to use GNU readline installed by pip in a venv: https://bpa.st/ENXA
[06:05:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:06:36] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:07:01] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:08:34] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[06:08:53] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:08:56] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[06:09:29] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:09:29] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[06:09:29] *** brabrax_ is now known as brabrax
[06:09:37] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[06:10:09] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:12:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[06:14:31] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[06:14:48] *** Joins: lembron (~admin@user/lembron)
[06:16:38] <lembron> hi, am i missing something or is there kinda no way to force utf8-headers on a simple `python -m http.server 8080`?
[06:16:40] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[06:19:42] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Read error: Connection reset by peer)
[06:19:50] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[06:19:56] *** Quits: frodl (sid527064@user/frodl) (Ping timeout: 245 seconds)
[06:20:50] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[06:21:14] *** Joins: frodl (sid527064@user/frodl)
[06:22:04] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[06:23:08] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.41)
[06:23:27] *** Joins: Guest7318 (~vit@chello085216193138.chello.sk)
[06:23:52] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:24:00] *** Joins: qpdb (~qpdb@user/qpdb)
[06:24:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:25:08] <theprophet> what is this github secret key exposed?
[06:25:15] <theprophet> should i mind that?
[06:26:10] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:26:20] *** Joins: astroanax (~u0_a168@2406:7400:73:a088:2896:8c32:509b:af5e)
[06:26:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:26:36] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[06:26:50] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:27:02] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[06:27:13] <astroanax> according to https://stackoverflow.com/a/818541 ~(x&0) should flip all bits to 1, but it doesn't work for me. ~(5&0) for example, gives me -1
[06:27:23] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.145-10.dynamic.3bb.co.th) (Remote host closed the connection)
[06:27:26] *** Quits: neoweb (sid343200@id-343200.lymington.irccloud.com) (Ping timeout: 245 seconds)
[06:27:32] <astroanax> why does it not work?
[06:27:42] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:27:58] *** Joins: p-i- (~Ohmu@223.206.145.10)
[06:28:19] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[06:28:35] *** Joins: jposer (sid132110@id-132110.uxbridge.irccloud.com)
[06:28:37] *** Joins: neoweb (sid343200@id-343200.lymington.irccloud.com)
[06:28:39] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:28:45] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:30:42] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:11] *** Quits: KvL (~KvL@130.95.254.80) (Ping timeout: 256 seconds)
[06:31:19] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.41) (Read error: Connection reset by peer)
[06:31:24] <leduyquang753> `x&0` is `0`, flip all bits it's `-1` in two's complement.
[06:33:15] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[06:34:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:35:54] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[06:36:20] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[06:36:24] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:36:24] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:36:24] *** finn_elija is now known as FinnElija
[06:38:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[06:39:36] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[06:39:55] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[06:40:53] <astroanax> leduyquang753: how do i do "regular" bitwise not then?
[06:40:56] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:41:57] *** Joins: adeliktas62 (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[06:44:09] <nedbat> astroanax: that SO answer is about C probably
[06:44:17] <nedbat> astroanax: what are you trying to do?
[06:44:29] <astroanax> trying to flip all bits in a number to 1
[06:44:48] <astroanax> c doesnt have ~
[06:45:15] *** Quits: adeliktas (~adeliktas@2001:16b8:226f:d100:e165:6b49:a559:970f) (Ping timeout: 256 seconds)
[06:45:35] <nedbat> astroanax: C does have ~.
[06:45:41] <astroanax> oh didnt know that
[06:45:59] *** adeliktas62 is now known as adeliktas
[06:45:59] <nedbat> astroanax: python int's don't have "all bits", because they are arbitrary precision. why do you want to set all the bits to 1?
[06:46:31] <leduyquang753> That SO answer even applied to C is quite futile when one can just assign `-1` to it.
[06:46:35] <astroanax> so i can do x >> 1 and get greater n raised to 2 that is less than euqal to x
[06:47:37] *** Quits: Guest7318 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[06:47:39] <astroanax> i just wanted to get the greatest number that is a power of 2 which is less than or equal to x
[06:47:58] <astroanax> i found other ways but wanted to try bit logic
[06:48:40] <nedbat> astroanax: bit_length will be useful: https://docs.python.org/3/library/stdtypes.html#int.bit_length
[06:49:15] <astroanax> thanks will look into it
[06:49:49] *** Quits: KombuchaKip (~kip@192.252.230.5) (Remote host closed the connection)
[06:49:54] *** Joins: MercilessDeth (~brad@136.49.59.177)
[06:50:12] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:53:15] *** Quits: Archdave (~Archdave2@071-011-159-210.res.spectrum.com) (Quit: leaving)
[06:59:12] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:00:06] <velix> Oh, there's log4py?
[07:00:11] <velix> Sorry, just kidding ;)
[07:00:21] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Killed (NickServ (GHOST command used by Omega037-B)))
[07:00:21] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:00:49] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Quit: Leaving)
[07:02:24] <jinsun> even better, the stdlib logging is influenced by log4j https://www.python.org/dev/peps/pep-0282/#influences
[07:02:36] <jinsun> hence the java naming in that module
[07:03:20] <velix> :D
[07:03:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761) (Ping timeout: 256 seconds)
[07:03:51] <velix> We're using a software, which uses log4j ... so it's so old not to be affected \o/
[07:04:09] <lembron> ;-)
[07:04:10] <velix> erm "log4j v1.7"
[07:04:22] <velix> why did I type an ellipses? :D
[07:07:19] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[07:08:43] *** Quits: moog (~moog@107.242.124.157) (Remote host closed the connection)
[07:09:15] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[07:10:49] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[07:11:55] *** Joins: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net)
[07:12:28] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:12:44] <greentree> are there some good sandboxes to run python code and share with other users? is that primarily just repl.it or are there others
[07:13:53] *** Joins: mrlemke (~quassel@208.74.105.200)
[07:16:00] *** Joins: frost (~frost@user/frost)
[07:18:14] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Quit: Client closed)
[07:19:39] *** Joins: rurik (~rurik@129.143.130.248)
[07:21:13] *** Joins: rajkosto (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs)
[07:22:55] <rurik> Can anyone help me improve my code + help me understand what is going on? I wrote it but I still can't figure out how it works (if it works) https://0paste.com/343316-48bd1eb3#hl
[07:23:57] *** Quits: p-i- (~Ohmu@223.206.145.10) (Ping timeout: 240 seconds)
[07:30:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3491:9fc6:cfd7:84b6) (Ping timeout: 240 seconds)
[07:31:40] <waynew> you're not the first person I've heard of with the old log4j protection
[07:32:27] <waynew> rurik: `if not s:` is better than `if len(s) == 0`
[07:32:36] <Evolver> It depends
[07:32:46] <Evolver> Sometimes the more explicit check is a lot clearer.
[07:33:07] <Evolver> but generally, sure
[07:33:24] <waynew> "better... unless it isn't" :)
[07:33:28] <rurik> ok, changed. I was looking for making the code a bit clearer so I can memoize it (next task)
[07:33:31] <Evolver> greentree: github renders ipynb notebooks.
[07:33:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:33:40] <rurik> I'm completely stuck on that
[07:33:46] <snakey_hiss> some people I know were freaking out with the word "Apache" next to log4j vulnerabilities in the news, lol
[07:34:13] <waynew> Other than that I don't see anything obviously better
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:30] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[07:37:34] <rurik> waynew: Thanks, I don't know whether to be happy or sad :')
[07:39:01] <rurik> Any pointer on how to proceed? https://bpa.st/KTNA
[07:39:34] *** Joins: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net)
[07:42:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:42:45] *** Quits: Nact (~l@host-85-27-123-179.dynamic.voo.be) (Quit: Konversation terminated!)
[07:43:03] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[07:43:25] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[07:46:19] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[07:48:47] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:48:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:53:15] <rurik> https://bpa.st/A5PA Some progress
[07:53:49] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[08:02:25] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:07:36] *** Joins: maplefinger (~maplefing@user/lindis)
[08:08:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:09:54] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Quit: KvL)
[08:10:19] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:11:09] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 268 seconds)
[08:11:09] *** jmiehe1 is now known as jmiehe
[08:11:49] *** Quits: Guddu (~Guddu@pc-51-79-83-200.cm.vtr.net) (Quit: Leaving)
[08:12:44] *** Joins: Guddu (~Guddu@2800:150:120:2f13:391c:36a2:6700:b2fe)
[08:15:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761)
[08:16:08] *** Joins: nomic (~nomic@51.52.78.152)
[08:16:40] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:16:49] *** Joins: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[08:17:21] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Client Quit)
[08:17:45] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:bdf6:8e80:3874:783f) (Quit: Leaving)
[08:18:38] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: Reconnecting)
[08:18:53] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[08:19:00] *** Quits: sreve (~quassel@p4ff44859.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:19:01] *** Quits: astroanax (~u0_a168@2406:7400:73:a088:2896:8c32:509b:af5e) (Read error: Connection reset by peer)
[08:19:29] *** Parts: snakey_hiss (~scott@101.100.131.108) (WeeChat 1.9.1)
[08:19:47] *** Joins: sreve (~quassel@p4ff44eaf.dip0.t-ipconnect.de)
[08:21:13] *** ormaaj is now known as ormaaj2
[08:24:14] *** Joins: parv (~quass@user/parv)
[08:27:07] *** Quits: rajkosto (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[08:27:13] *** Joins: rajkohaxor (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs)
[08:28:37] *** Quits: computeiro (~Wender@186.210.226.119) (Ping timeout: 240 seconds)
[08:30:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:30:02] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[08:32:58] *** Joins: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[08:35:12] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 268 seconds)
[08:40:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[08:41:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com)
[08:42:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:45:17] *** Quits: rajkohaxor (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[08:51:00] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:52:29] *** Quits: redbull (~redbull@gateway/tor-sasl/redbull) (Killed (NickServ (Forcing logout redbull -> redbull)))
[08:53:38] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Quit: Client closed)
[08:54:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[08:55:01] *** Quits: Guddu (~Guddu@2800:150:120:2f13:391c:36a2:6700:b2fe) (Read error: Connection reset by peer)
[09:05:50] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:05:59] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[09:06:21] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:06:44] *** Joins: djapo (~archangel@user/djapo)
[09:09:51] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 256 seconds)
[09:10:44] *** Joins: junebug (~junebug@2600:1700:3db0:2540:d740:c638:c76a:37cb)
[09:13:49] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[09:14:10] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:15:13] *** Joins: p-i- (~Ohmu@2403:6200:8978:9416:8110:928c:e24d:ba03)
[09:16:16] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd)
[09:19:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:9416:8110:928c:e24d:ba03) (Ping timeout: 240 seconds)
[09:23:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:26:17] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:27:43] *** Joins: amrx (~amrx@access-63-249-98-253.static.cruzio.net)
[09:27:55] *** Joins: analoq (~yashi@user/dies)
[09:28:53] *** Joins: Atque (~Atque@user/atque)
[09:29:01] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:13] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[09:31:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:d740:c638:c76a:37cb) (Quit: Leaving)
[09:31:53] *** Joins: cheater (~Username@user/cheater)
[09:36:28] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[09:39:58] *** Joins: WarpedAI (~Warped@user/warped)
[09:40:54] *** Joins: devish (~devish@205.251.233.182)
[09:41:45] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 250 seconds)
[09:42:17] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[09:42:43] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 256 seconds)
[09:44:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:45:56] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:46:30] *** Quits: foxbox (~cammy@user/cammy) (Read error: Connection reset by peer)
[09:47:37] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[09:48:17] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0492-87fb-9804-d949.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:51:04] *** Joins: foxbox (~cammy@user/cammy)
[09:52:25] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Read error: Connection reset by peer)
[09:54:07] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[09:56:18] *** Joins: buzzard (~quassel@2.56.190.245)
[09:57:51] *** Quits: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb) (Read error: Connection reset by peer)
[09:58:28] *** Joins: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb)
[09:58:36] *** Joins: upsala (~zcb@185.213.155.232)
[09:59:25] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Read error: Connection reset by peer)
[09:59:49] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[10:00:19] *** Quits: upsala (~zcb@185.213.155.232) (Client Quit)
[10:00:59] *** Joins: upsala (~zcb@185.213.155.232)
[10:01:44] *** Joins: xardas (~xardas@149.233.51.127)
[10:03:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:05:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:06:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[10:06:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:08:42] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[10:09:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:09:26] *** Joins: giusb (~giusb@user/giusb)
[10:09:30] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:6af8:e1a0:7d14:3e3d)
[10:10:03] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[10:10:14] *** Quits: dmr (~rdumitru@user/dmr) (Read error: Connection reset by peer)
[10:10:28] *** Joins: Gerula (~Gerula@user/gerula)
[10:14:13] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:15:36] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[10:16:30] *** Quits: llh (~llh@user/llh) (Ping timeout: 260 seconds)
[10:18:05] *** Joins: guenhael (~Thunderbi@2a01cb008c3d58006c27fdf99cfcd982.ipv6.abo.wanadoo.fr)
[10:20:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:20:23] *** Joins: nicko (~iClass@222.211.31.34)
[10:20:47] *** Joins: llh (~llh@user/llh)
[10:20:54] *** Quits: guenhael (~Thunderbi@2a01cb008c3d58006c27fdf99cfcd982.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[10:21:11] *** Joins: guenhael (~Thunderbi@2a01cb008c3d58006c27fdf99cfcd982.ipv6.abo.wanadoo.fr)
[10:22:01] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[10:22:16] *** Joins: pepper (~pepper@user/pepper)
[10:23:17] <ksynwa> Is there a better version of Python's REPL? With better tab completion and such?
[10:23:35] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[10:23:56] *** Joins: pepper (~pepper@user/pepper)
[10:24:44] <avu> ksynwa: ipython is one popular option
[10:25:04] <ksynwa> avu: Thanks a lot. I have heard the name. Will give it a try.
[10:28:41] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:29:09] *** Joins: Douwd (~douwd@crux.bsdpro.net)
[10:30:16] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:31:14] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:31:39] *** Joins: chele (~chele@user/chele)
[10:32:45] *** Quits: buzzard (~quassel@2.56.190.245) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:34:51] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:35:22] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[10:35:39] *** Joins: bindu (~bindu@user/bindu)
[10:35:46] *** launchd is now known as BuddyTheElf
[10:36:05] *** Quits: guenhael (~Thunderbi@2a01cb008c3d58006c27fdf99cfcd982.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[10:37:41] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[10:38:15] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[10:39:06] *** Joins: carl- (~carl-@185.103.188.130)
[10:39:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:40:01] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[10:41:20] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:47:36] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:48:29] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[10:49:18] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[10:49:32] *** Joins: JanC (~janc@user/janc)
[10:49:35] *** Quits: effprime (~effprime@user/effprime) (Ping timeout: 256 seconds)
[10:49:41] *** Joins: sedeki (~textual@user/sedeki)
[10:50:05] *** Joins: tobybl (~tobybl@213.31.132.151)
[10:50:09] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[10:50:33] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[10:51:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[10:51:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[10:52:09] *** Joins: effprime (~effprime@user/effprime)
[10:52:17] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:52:37] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[10:54:30] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:37] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[10:54:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:55:27] *** Joins: tobybl (~tobybl@213.31.132.151)
[10:56:52] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[10:57:43] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:58:36] *** Joins: seednode (~seednode@user/seednode)
[10:59:47] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 256 seconds)
[11:00:21] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 256 seconds)
[11:00:23] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[11:00:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:53f:e301:83a6:4761) (Quit: Client closed)
[11:02:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[11:03:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:03:57] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 240 seconds)
[11:04:44] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[11:06:42] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[11:08:32] *** Joins: moto (~moto@user/moto)
[11:09:09] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:10:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:10:54] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[11:11:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:13:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:16:17] *** Joins: djapo (~archangel@user/djapo)
[11:16:36] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[11:16:43] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[11:17:26] <powftw> I've a string ```a = " this is some string     "
[11:17:34] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[11:18:07] <powftw> ```a = " this is some string    "```
[11:18:16] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.8)
[11:18:23] <powftw> I've to strip " " and then split on " "
[11:18:30] <powftw> I can do in multiple lines.
[11:18:42] <powftw> Striped = a.strip(" ")
[11:18:54] <powftw> Splitted = stripped.split(" ")
[11:19:24] <powftw> But, writing this way ```a.strip(" ").split(" ")```
[11:19:30] <powftw> Gave me same result
[11:19:51] <powftw> Is this the same as doing the same in 2 steps in mentioned above?
[11:19:56] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[11:20:12] <powftw> Is split or strip happening first?
[11:21:12] <bauripalash> First it gets stripped then it gets splited
[11:21:43] <powftw> Ok
[11:21:53] <powftw> That means, I don't need to lines..
[11:22:12] <powftw> I.e I can do that in one line
[11:22:14] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[11:23:29] *** Quits: xardas (~xardas@149.233.51.127) (Ping timeout: 256 seconds)
[11:23:29] *** Quits: rurik (~rurik@129.143.130.248) (Ping timeout: 256 seconds)
[11:23:31] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[11:23:39] *** Joins: nwe (~nwe@sigwait.se)
[11:24:07] <bauripalash> I think using the second option is better , because you can do the whole thing with using less variables
[11:24:48] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[11:24:54] <sedeki> powftw yes it is the same thing
[11:25:04] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[11:25:14] <deniska> powftw: doesn't just a.split() do what you want?
[11:25:18] <nwe> hello I have a stupid question.. I trying to usinng subproccess with ssh (but when I trying to get the output) I only got <_io.TextIOWrapper name=3 encoding='UTF-8'>  I using it like this output = cmd.stdout  print(cmd)
[11:25:30] *** Joins: hrm (~harm@nimbus.harmtemolder.nl)
[11:25:43] <nwe> I understand that I in someway need to convert the stream to text or something but how?
[11:25:59] <powftw> deniska: no, strip must be done forehand
[11:26:03] <deniska> nwe: consider using paramiko instead, interactive programs are hard enough to automate already
[11:26:12] <sedeki> nwe it is indeed a stream. you can .read it
[11:26:20] <rindolf> nwe: add ".read()"?
[11:26:21] <deniska> powftw: .split() without arguments pretty much does the stripping
[11:26:31] <powftw> Oh
[11:26:36] <sedeki> nwe in other words, it's like reading a file
[11:27:01] <deniska> powftw: if you are fine with `a = " this is some         string    "` becoming ['this', 'is', 'some', 'string'], just use .split()
[11:27:26] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:27:34] <powftw> sedeki: you have to use a colon : after mentioning the username like nwe:
[11:28:03] <nwe> sedeki: yes it´s a stream.
[11:28:28] <sedeki> powftw no i don't _have_ to do that
[11:28:39] <powftw> deniska: 😂 thanks man. That is brave
[11:28:58] <sedeki> powftw remember that .strip() only strips from left and right
[11:28:58] <powftw> sedeki: oh, okay 👍
[11:29:28] <powftw> sedeki: left and right, that's exactly what I need
[11:29:40] *** Joins: rendar (~rendar@user/rendar)
[11:29:49] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Ping timeout: 256 seconds)
[11:30:27] <powftw> ```a.split()``` does the same job
[11:30:36] <powftw> No need of strip then
[11:30:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:31:47] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[11:31:58] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:32:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:34:55] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:36:00] *** Joins: luigibu (~luigi@80.30.201.209)
[11:36:03] <aphysically> jinsun_: i broke advent of code
[11:36:27] <nwe> guys I hvae tried to add .read() / .readlines() but still some problems for me :P https://dpaste.org/D0cU Just to clearify Im really new to python3..
[11:36:48] *** jinsun__ is now known as jinsun
[11:37:22] <jinsun> aphysically: ah AoC itself this time? not pyright or mypy?
[11:38:12] <deniska> nwe: https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate read on what communicate does
[11:38:18] *** Joins: palasso (~palasso@user/palasso)
[11:38:24] <deniska> nwe: it reads the output and returns it to you
[11:38:49] <deniska> and waits for a process to finish
[11:38:56] <aphysically> jinsun: yes....quite humorously
[11:39:06] <aphysically> jinsun: read today's question for part 1 and get back to me
[11:39:12] <aphysically> https://adventofcode.com/2021/day/17
[11:39:37] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[11:41:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:42:29] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[11:42:33] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[11:42:59] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[11:43:16] *** Joins: luigibu (~luigi@80.30.201.209)
[11:43:17] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[11:44:15] *** Joins: xa0s (~xa0s@mab.sdf.org)
[11:44:53] <aphysically> just ping me when done
[11:45:01] <jinsun> okay, too long again :D, but looks like some trajectory optimization thing
[11:45:11] *** Joins: thiras_ (~thiras@user/thiras)
[11:45:58] <jinsun> which might be solvable with math instead of simulating it
[11:46:13] <aphysically> jinsun: sort of , but it's diophantine
[11:46:41] <aphysically> anyway, part 1 is ymin(ymin+1)/2
[11:47:12] <aphysically> try it on your input :)
[11:47:15] <jinsun> ah okay, yeah
[11:47:39] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[11:47:51] <aphysically> this is more like diophantine analysis masquerading as physics
[11:48:02] <aphysically> than physics masquerading as an AoC problem
[11:48:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:48:47] <jinsun> what is ymin?
[11:49:17] *** Joins: royaljelly (~royaljell@user/royaljelly)
[11:49:26] *** Parts: royaljelly (~royaljell@user/royaljelly) ()
[11:49:31] <jinsun> the target area's miimum y?
[11:49:41] <aphysically> yes
[11:50:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[11:50:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:50:46] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 245 seconds)
[11:51:12] <aphysically> this is an even sillier solution than the hardcoded lookup one
[11:53:09] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[11:54:19] *** Joins: alzgh (~alzgh@user/alzgh)
[11:54:39] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[11:54:55] *** Joins: luigibu (~luigi@80.30.201.209)
[11:57:37] <jinsun> okay, too much math for me to check now
[11:58:11] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[11:58:31] <jinsun> so I am guess by break you mean break your record of shortest solution
[11:58:34] *** Joins: parv (~quass@user/parv)
[11:58:52] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[11:58:56] <aphysically> well, also break the need to solve a programming problem with any programming
[11:59:06] <aphysically> even the lookup one you had to code it :P
[11:59:07] <jinsun> I was thinking this break the website itself :D, did it?
[11:59:15] *** Joins: nomic (~nomic@51.52.78.152)
[11:59:28] <aphysically> hmm not yet
[12:00:10] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[12:00:30] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[12:05:00] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[12:05:01] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[12:05:18] *** Joins: nomic (~nomic@51.52.78.152)
[12:05:29] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[12:06:36] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[12:07:04] <wyre> according to this https://docs.python.org/3/library/logging.html#logging.Formatter.formatTime have I to use something like logging.Formatter.formatTime(default_msec_format='%s.%03d') if I wan't to change the msec format?
[12:07:19] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:07:39] *** Joins: fling (~fling@user/fling)
[12:08:27] *** Joins: kosh (~kosh@user/kosh)
[12:09:36] <Swayze> https://tqdm.github.io/
[12:09:37] <Swayze> brilliant
[12:09:45] <Swayze> seen?
[12:10:42] <jinsun> yeah it is nice, and very popular
[12:10:52] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:10:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:11:24] <jinsun> conda uses it, so you get it by default in your base environement even if you use miniconda
[12:11:27] <Swayze> k first i heard of it
[12:11:33] *** Joins: tobybl (~tobybl@213.31.132.151)
[12:11:33] <Swayze> kk
[12:12:37] *** Joins: shad (~shad@user/shad)
[12:12:47] *** Quits: devish (~devish@205.251.233.182) (Ping timeout: 256 seconds)
[12:13:13] *** Joins: OPK (~OPK@user/opk)
[12:15:25] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[12:19:53] *** Quits: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb) (Read error: Connection reset by peer)
[12:20:32] *** Joins: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb)
[12:20:54] <hrm> I didn't know about tqdm, thanks for sharing
[12:21:55] <wyre> could I include that default_msec_format into my json for logging.config.dictConfig()?
[12:22:33] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[12:22:57] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Ping timeout: 240 seconds)
[12:23:24] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[12:23:25] *** Joins: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr)
[12:23:43] *** Joins: Deknos (~someone@user/menace)
[12:24:06] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[12:25:19] <wyre> I was thinking in something like this https://bpa.st/VSEA
[12:25:30] <wyre> is this the proper way to do it? 🤔
[12:25:47] *** Quits: Clackulator (~Clackulat@75.75.210.194) (Read error: Connection reset by peer)
[12:26:53] <wyre> apparently logging.Formatter.formatTime() will not accept default_msec_format as argument
[12:29:57] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:30:50] <AhmedAmerican> is there a way where i can remove `\` from HTML source ?
[12:32:03] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[12:32:35] <parv> wyre, doc of time.strftime(), mentioned in doc of logging.Formatter, does not mention factional seconds (though there are references to nanosecond)
[12:33:42] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:33:44] *** VaniaPy is now known as DagestanFighter
[12:35:22] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[12:35:25] <parv> wyre, OTOH I do see default_msec_format in the doc ... hmm ...
[12:36:08] *** Joins: luigibu (~luigi@80.30.201.209)
[12:36:16] *** DagestanFighter is now known as GeorgiosPasparak
[12:37:47] <powftw> Can I strip only the last white spaces of a string and not the first? ```a = "   some string   "```
[12:37:56] *** Joins: zaquest (~notzaques@5.130.79.72)
[12:38:05] <The-Compiler> powftw: .rstrip()
[12:38:14] <powftw> I only want to strip space before the string
[12:38:20] <powftw> And not after the string
[12:38:29] <The-Compiler> powftw: .lstrip() then
[12:38:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:38:55] <powftw> Oh.. that's cool
[12:39:07] <powftw> I didn't even think this function exist
[12:39:27] <powftw> The-Compiler: thank you for saving from a shitty for loop 😎
[12:39:54] *** Joins: Klinda (~superleag@user/klinda)
[12:40:09] <powftw> The-Compiler: are you from US of A ?
[12:40:27] <mrwick> powftw: the string method docs are a bit buried: https://docs.python.org/3/library/stdtypes.html#string-methods
[12:40:32] <The-Compiler> powftw: nope, Switzerland
[12:40:39] *** Quits: mat001 (~mat001@c-69-181-153-73.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:40:42] <powftw> Ahh 👍
[12:41:02] <powftw> mrwick: thanks man
[12:41:38] <GeorgiosPasparak> is MongoDb atlas a cloud based db?  i mean if i need a local database can i avoid that?
[12:41:38] *** Quits: Tashtari (~tashtari@user/tashtari) (Ping timeout: 252 seconds)
[12:41:55] *** Joins: xardas (~xardas@149.233.51.127)
[12:42:18] *** Joins: mozgalom (~mozgalom@213.220.127.153)
[12:42:54] <powftw> Can I ask, can nosql db do almost all things a SQL db does?
[12:43:42] <powftw> GeorgiosPasparak: i guess atlas is for Remote database
[12:43:54] <powftw> You need an account in mongo website
[12:44:03] <Swayze> thats like asking if a cow does the same thing as cheese
[12:44:25] <Swayze> they are not alike
[12:44:37] <powftw> Swayze: I'm not English. Can you simply it
[12:44:56] <Swayze> use a nosql db when you storing documents/json/unstructured data
[12:45:09] <Swayze> and use a relational db for strict data structures
[12:45:19] <powftw> Fine..  I understand
[12:45:21] <Swayze> they are not comparable because they are for different things
[12:45:38] <powftw> 👍
[12:46:09] <parv> wyre, logging.html does not say how an user could set default_msec_format (short of defining custom format() to invoke formatTime() with the desired millisecond format)
[12:46:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[12:47:25] <parv> I give up
[12:48:04] *** Joins: thevishy (~Nishant@2405:201:f005:c007:4c69:b93c:3bc3:9ff2)
[12:49:14] *** Joins: jazzy (~jaziz@user/jaziz)
[12:49:57] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[12:49:58] *** Joins: manti7 (~manti7@176.10.104.94)
[12:52:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:55:57] <wyre> parv, so that doc needs to be improved?
[12:58:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[12:58:16] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 245 seconds)
[12:58:45] <parv> wyre, Can't say as millisec format could work via formatTime() as mentioned; would prefer if there were a way to specify as one can set date-time format via 'datefmt'
[12:59:26] <parv> ... which can be set in basicConfig() or in Formatter() constructor
[12:59:33] *** Joins: iomari891 (~iomari891@197.210.52.72)
[13:01:57] *** Joins: carl- (~carl-@185.103.188.130)
[13:03:39] *** Joins: vd33 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[13:06:09] *** Quits: iomari891 (~iomari891@197.210.52.72) (Ping timeout: 256 seconds)
[13:06:48] *** Joins: iomari891 (~iomari891@197.210.52.72)
[13:06:51] *** Bitflux is now known as Byteflux
[13:06:57] *** Quits: goutly (~gitly@85.255.233.150) (Ping timeout: 240 seconds)
[13:07:45] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:07:46] <wyre> parv, but is datefmt a dictionary or list?
[13:07:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:07:57] <wyre> more a dict, I think
[13:09:38] <parv> wyre, That is just an attribute which takes a string in Formatter() or basicConfig().
[13:10:09] <wyre> parv, so I'm not sure where should I set default_msec_format
[13:10:48] *** Joins: percyc (~percyc@120.231.32.156)
[13:11:06] *** Parts: percyc (~percyc@120.231.32.156) ()
[13:11:25] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[13:13:15] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:13:28] <parv> wyre, "These strings are defined as class-level attributes which can be overridden at the instance level when desired" -- so try fiddling with Formatter().default_msec_format attribute
[13:14:23] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:33] <wyre> parv, and should I set that for my logger object? or for the whole logging module?
[13:14:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:14:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:15:16] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:16:13] <parv> wyre, That was mentioned in context of Formatter() class, so I would think that would apply to the logging instance which gets that Formatter instance
[13:16:38] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[13:16:51] <wyre> i see
[13:17:41] *** Joins: goutly (~gitly@185.69.144.130)
[13:18:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[13:18:59] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:7f37:d4df:3b9c:eeaa)
[13:19:04] <parv> wyre, Note that if datefmt was given, then millisec does not show; need to set Formatter().default_time_format instead
[13:19:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:19:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:46] <wyre> parv, I didn't define default_time_format
[13:20:03] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:20:08] <wyre> my point is that I'd like to set this from the .json that confDict() parses
[13:20:37] *** Quits: onichomp (~onichomp@2806:264:4404:8205:6de5:8759:c3b8:69fb) (Read error: Connection reset by peer)
[13:22:10] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:22:37] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:23:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Quit: Leaving)
[13:23:40] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:24:11] *** Quits: vd33 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:24:44] <parv> wyre, Doc says need to set instance attributes.
[13:25:01] *** Quits: goutly (~gitly@185.69.144.130) (Ping timeout: 240 seconds)
[13:25:19] <parv> Extract that from JSON data to set the attribute
[13:25:24] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:25:25] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[13:25:38] <parv> Else, I can't see any other way per doc
[13:25:58] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:26:23] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:27:19] *** Joins: computeiro (~Wender@189.15.201.113)
[13:27:43] *** Joins: legola (~legola@46.235.101.65)
[13:27:57] *** Joins: Naan (~Naan@user/naan)
[13:28:16] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[13:28:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:28:43] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:30:28] *** drizztbsd is now known as timothy
[13:30:32] *** Joins: gitly (~gitly@148.252.133.243)
[13:30:52] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:31:24] <parv> Awful lot of set up to get millisecond in log : https://termbin.com/tncxd
[13:32:53] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[13:33:34] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:40:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[13:41:18] *** Joins: alzgh (~alzgh@user/alzgh)
[13:42:32] *** Joins: upsala (~zcb@185.213.155.232)
[13:43:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:45:21] *** Quits: gitly (~gitly@148.252.133.243) (Ping timeout: 245 seconds)
[13:46:39] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:46:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[13:47:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:47:37] *** Joins: gitly (~gitly@85.255.233.150)
[13:49:02] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:49:29] *** Lord_of_Life_ is now known as Lord_of_Life
[13:49:46] *** Joins: wender (~Wender@189.37.65.226)
[13:51:29] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[13:51:57] *** Quits: computeiro (~Wender@189.15.201.113) (Ping timeout: 240 seconds)
[13:52:02] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 252 seconds)
[13:53:01] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:85b8:9078:b4ac:ca26)
[13:53:03] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:85b8:9078:b4ac:ca26) (Client Quit)
[13:53:58] *** Joins: gitly (~gitly@85.255.233.150)
[13:56:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:57:24] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:57:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:59:11] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 252 seconds)
[13:59:26] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[14:00:24] *** Joins: gitly (~gitly@85.255.233.150)
[14:00:27] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Quit: Quit)
[14:01:56] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 252 seconds)
[14:03:45] *** Joins: upsala (~zcb@185.209.196.166)
[14:03:49] *** Quits: wender (~Wender@189.37.65.226) (Quit: Leaving)
[14:04:37] *** Quits: gitly (~gitly@85.255.233.150) (Ping timeout: 240 seconds)
[14:04:51] <bjs> parv: there is logging.basicConfig and logging.dictConfig
[14:04:56] <bjs> uh logging.config.dictConfig sorry
[14:07:36] *** Joins: gitly (~gitly@148.252.133.169)
[14:08:23] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[14:08:24] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:32] <bjs> e.g. a simple basicConfig(format=<that>, level=logging.DEBUG) would be enough to create a stream handler on the root logger with the desired format.  If you want a hierarchy of loggers and handlers, then you can dictConfig to specify and build them.  Manual creation of Formatter() and Handler() objects is usually not needed
[14:09:46] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[14:10:33] <parv> bjs, The code I posted was to set up get millisecond in log; 'logging' doc mentions 'Formatter' instance attribute to fiddle. Yeah, otherwise basicConfig() would have been enough
[14:10:46] <parv> s/set up//
[14:10:59] <bjs> parv: well basicConfig has a `format` argument directly
[14:11:13] <bjs> and one of the other config functions is usually nicer/easier than manually making the objects
[14:12:05] <parv> bjs, OK, how would you specify millisecond? 'datefmt' refers to 'time.strftime()' which omits millisecond
[14:12:10] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 260 seconds)
[14:13:07] <parv> I did not a field in "format" to specify millisecond directly. Did I miss it?
[14:13:22] <parv> s/did not a/did not see a/
[14:13:47] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:14:13] <parv> In any case all that was an exercise for wyre
[14:15:17] <bjs> parv: isn't that what asctime does?
[14:16:22] <parv> bjs, millisecond is included by default, yes. But if 'datefmt' is given, millisecond goes away
[14:17:40] <parv> I personally had not needed millisecond yet; don't like default date-time anyway.
[14:18:31] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[14:19:19] *** Joins: gitly (~gitly@148.252.133.169)
[14:20:09] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[14:20:59] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[14:22:19] <bjs> parv: yes,  asctime is the field formatted by datefmt
[14:22:26] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Client Quit)
[14:23:37] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[14:24:21] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 256 seconds)
[14:25:40] *** Joins: gitly (~gitly@148.252.129.7)
[14:27:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:29:37] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[14:29:57] *** Quits: gitly (~gitly@148.252.129.7) (Ping timeout: 240 seconds)
[14:31:12] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:32:01] *** Joins: gitly (~gitly@85.255.236.137)
[14:32:03] *** Joins: tobybl (~tobybl@213.31.132.151)
[14:32:26] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[14:32:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:33:14] <flower_> hm, so when a list is passed to a function and the function changes the list, should the function return the list? The list is changed anyway right? Being a mutable object.
[14:33:22] <pseudonymous> I have a program I'll need to start (as a process) and whose output I'll need to monitor. Essentially, I'll need to start the process and wait/block until a certain line of output is printed in the program, then I want to continue my python script. Any ideas on how to accomplish ?
[14:33:35] <bjs> flower_: there's no need to return it.  Most Python functions try to not return something if they changed it
[14:33:55] <bjs> e.g. list.sort() (which mutates the list, and then doesn't return)
[14:34:02] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[14:34:33] <pseudonymous> flower_: though you may find your code easier to manage if you explicitly create a new list and return that - and generally adopt that principle across your code. No longer will you fear who has a reference of your data structure and what they might do with it.
[14:34:44] <flower_> bjs, hm, but doesn't make this the 'flow' in the program unclear? Something is passed to a function in a module, not idea what it does
[14:34:59] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:35:15] <bjs> flower_: not really. If I go `some_list.sort(); print(some_list)` it's pretty obvious what's going on
[14:35:42] <bjs> Can you write bad code that is unclear? Yes of course, you can always do that :P
[14:35:50] <flower_> bjs, in that case it is. But I'm dealing with pure functions, not classes  and methods
[14:36:16] <bjs> flower_: well same thing, `sort(some_list); print(some_list)` looks the same to me
[14:36:46] <flower_> hm, I'll think about it...
[14:37:00] <flower_> pseudonymous, I think that's what I do now
[14:37:18] <flower_> pseudonymous, I always return the list (when I don't use yield)
[14:38:57] <bjs> flower_: people say that when you mutate *and* return it is confusing because you can't tell how many things you have
[14:39:06] <bjs> flower_: if `new_list = sort(old_list)` how many lists do I have? 1 or 2? :)
[14:40:06] <pseudonymous> flower_ one thing is the return value - what I mean is that you should try not to modify the data structures themselves. It seems easy at the point in the code where it happens, but once you pass a list to some function a who passes it to b, then to c and then c sorts the list.. well, now a's list is arranged differently and you may have a bug afterwards. If you create a copy of the list, then sort it, then return that to the
[14:40:06] <pseudonymous> caller who wanted a sorted list, no problem for everyone else, their copy remains unchanged.
[14:40:36] <flower_> list_x = sort(list_x)
[14:41:09] <bjs> flower_: In Python lots of functions return new objects, some mutate old ones
[14:41:24] <bjs> it's often considered confusing if you had a function that mutates the old and returns the old
[14:41:56] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:42:46] <flower_> For now I'll put a NOTE in my code and I'll think about it, what the best thing to do.
[14:43:22] <flower_> didn't thought about it before
[14:43:25] <bjs> flower_: in a professional Python shop, a function that mutates something then returns it probably wouldn't pass review
[14:43:41] <bjs> it would be impolite to do it! :)
[14:43:45] <flower_> ok
[14:43:55] <flower_> then I'll change NOTE to FIXME
[14:44:11] <bjs> In languages where it's more obvious what functions can do re mutability (e.g. rust) it's less of a concern
[14:45:06] <bjs> because it's generally not possible for it to be ambiguous
[14:45:19] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:45:34] <lericson> psa: concurrent.futures.ProcessPoolExecutor.submit is incredibly slow
[14:45:43] <flower_> I read through a c programming book, that got me thinking
[14:45:52] <flower_> with the pointers and stuff
[14:46:00] <bjs> lericson: slow compared to what?  it'll be slow compared to a threadpool obviously
[14:46:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:46:19] <lericson> bjs: no, they should be as fast - submit submits, it does not run
[14:46:36] <lericson> i guess i see your point now that i think about it
[14:46:57] <bjs> lericson: I assume submit is doing some pickling
[14:47:19] <lericson> but even ThreadPoolExecutor.submit is surprisingly slow
[14:47:55] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[14:47:56] <bjs> lericson: what is "surprisingly" slow
[14:48:01] <bjs> can you quantify? maybe with some code
[14:48:21] <lericson> aha the actual worker threads are created in .submit
[14:48:57] <bjs> well if they weren't before
[14:49:11] <lericson> it's the only place that does it
[14:49:14] <bjs> it only creates the threads/processes on demand
[14:49:34] <bjs> lericson: yes but it only does it if it hasn't done it before, it's not like every submit will make a new thread/process
[14:49:49] <lericson> depends on your max_workers
[14:49:57] <lericson> it could
[14:50:27] <stwange> I have some code (async) within a try: except:, but it doesn't catch one particular exception (originally caused by Future cancelled). Is there anything I can do to catch the exception? https://pastebin.com/ANzgk6LP
[14:50:33] <lericson> reason being that i say this is that my loop is getting bogged down not by creating jobs, nor by executing them, but by submitting them to the work queue
[14:52:00] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:52:44] <bjs> lericson: if the time is dominated by sending the job to the queue, then maybe it's not a good use case for process pools :P
[14:53:02] <lericson> well then i'm SOL
[14:53:04] <bjs> there's quite a bit of overhead to actually get the job to the other process
[14:53:06] <lericson> because threading isn't going to help
[14:53:13] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 268 seconds)
[14:53:24] <lericson> even though the majority of the work is done in a nogil section of numba code
[14:53:34] <bjs> lericson: then why won't threading help?
[14:53:37] <lericson> for whatever reason, it's still behaving like a GIL
[14:53:55] <bjs> What does that mean?
[14:54:05] *** Parts: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) ()
[14:54:09] <lericson> that you might as well slap a global lock around the critical section, it runs as fast
[14:54:35] <lericson> no idea why, but process pools fix that
[14:54:56] <lericson> i already checked with CFFI if the GIL is released, and it is
[14:55:13] <bjs> lericson: maybe you're misattributing where the time is spent? if the "majority" of the time is in a nogil section then they should be able to run concurrently just fine
[14:55:20] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:55:27] <bjs> and if you have multiple cores, presumably the OS will happily give them each one
[14:55:29] <lericson> i'm not, i checked that also
[14:55:47] <lericson> my best guess is that some library is locking something
[14:55:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:56:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[14:56:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:59:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:01:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:02:03] *** Joins: somlis (~somlis@user/somlis)
[15:03:30] <wyre> /quit/quit
[15:03:37] <wyre> upss sorry 😆
[15:04:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[15:04:20] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:05:24] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:06:44] *** Joins: RiFo (~RiFo@user/rifo)
[15:08:39] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[15:12:13] <flower_> bjs, hm I now realize, that most of my lists are actual tuples
[15:12:37] *** Quits: nicko (~iClass@222.211.31.34) (Ping timeout: 240 seconds)
[15:13:26] <flower_> when you sort a tuple, you've to copy or overwrite it and return it I guess
[15:13:30] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:14:14] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:16:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:16:16] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:16:22] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd) (Remote host closed the connection)
[15:16:32] *** Joins: luigibu (~luigi@80.30.201.209)
[15:16:45] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[15:18:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[15:18:27] <jinsun> you cannot modify the tuple so you have no choice but to return a new thing
[15:19:07] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[15:19:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:19:22] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[15:19:27] <jinsun> returning a new object is nicer anyway,allows you to do chained method calls
[15:19:38] *** Joins: luigibu (~luigi@80.30.201.209)
[15:23:35] *** Joins: p-i- (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd)
[15:23:50] *** Joins: nicko (~iClass@222.211.28.136)
[15:25:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd) (Remote host closed the connection)
[15:26:11] *** Joins: szahid (~szahid@2a01:4f9:3a:1029::219)
[15:26:22] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:27:28] *** Joins: p-i- (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd)
[15:27:45] *** Quits: iomari891 (~iomari891@197.210.52.72) (Ping timeout: 268 seconds)
[15:27:49] *** Quits: DXR (~lyrical@193.92.178.179.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[15:29:01] *** Joins: iomari891 (~iomari891@197.210.77.160)
[15:29:44] *** Quits: p-i- (~Ohmu@2403:6200:8978:9416:c879:808e:729d:39cd) (Remote host closed the connection)
[15:31:25] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:31:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:31:57] *** Quits: nicko (~iClass@222.211.28.136) (Ping timeout: 240 seconds)
[15:32:33] *** Joins: nicko (~iClass@222.211.28.110)
[15:35:28] *** Joins: five6433 (~five6@8.40.26.52)
[15:35:33] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:10] <five6433> Hello. I am trying to install a pip package that gets compiled with GCC on aarch64, but I get a weird error about missing '.2-a+fp16+rcpc+dotprod+crypto'. Logs here: https://paste.debian.net/1223841/ Any ideas what's wrong? Thanks!
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[15:39:16] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[15:40:17] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:41:25] *** Quits: Andrynet1 (~Andrynet@190.152.206.29) (Read error: Connection reset by peer)
[15:41:49] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:42:23] <rindolf> five6433: hi, are you using conda?
[15:43:19] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[15:43:36] *** Joins: pepper (~pepper@user/pepper)
[15:43:52] *** Joins: MSSC (~MSSC@pd950eebb.dip0.t-ipconnect.de)
[15:43:58] *** Joins: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[15:44:08] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:44:32] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[15:47:11] *** Joins: Andrynet1 (~Andrynet@190.152.206.29)
[15:47:12] *** Joins: Everything (~Everythin@37.115.210.35)
[15:47:47] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:47:52] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:47:58] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:48:03] *** Joins: luigibu (~luigi@80.30.201.209)
[15:48:13] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:49:30] <Everything> Russell's (Barber) paradox explanation in Python https://yurichev.com/news/20211216_Russell/
[15:51:23] <five6433> rindolf: yes, I am
[15:52:22] <rindolf> five6433: ok. on linux?
[15:52:54] <five6433> linux aarch64, inside Docker
[15:53:15] <five6433> as far as I understand, there's prebuilt wheels for my package for amd64, but not aarch64, this is why it needs to be compiled
[15:53:56] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[15:54:28] <five6433> I think the package in question is "lmdb"
[15:54:53] *** Joins: luigibu (~luigi@80.30.201.209)
[15:55:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:55:57] *** Joins: bomb-on (~bomb-on@213.220.127.153)
[15:56:48] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:57:51] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[15:58:45] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:59:45] *** Joins: lethu (~lethu@user/lethu)
[16:01:49] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[16:01:55] *** Joins: shad (~shad@user/shad)
[16:02:15] *** Joins: luigibu (~luigi@80.30.201.209)
[16:02:57] *** Quits: gitly (~gitly@85.255.236.137) (Ping timeout: 256 seconds)
[16:03:32] *** Quits: iomari891 (~iomari891@197.210.77.160) (Ping timeout: 240 seconds)
[16:03:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[16:03:47] *** Joins: Ilyu (~quassel@78.202.228.230)
[16:04:02] *** Joins: Guest7318 (~vit@chello085216193138.chello.sk)
[16:04:47] *** Joins: gitly (~gitly@148.252.129.19)
[16:05:09] *** Joins: iomari891 (~iomari891@197.210.77.17)
[16:06:42] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:06:52] *** Joins: zeden (~zeden@user/zeden)
[16:07:06] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:07:41] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[16:08:31] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:09:02] *** Quits: bomb-on (~bomb-on@213.220.127.153) (Read error: Connection reset by peer)
[16:09:44] <rindolf> five6433: "pip3 install --no-binary :all lmdb" works here on fedora 35 x86-64
[16:10:15] *** jazzy is now known as test
[16:10:45] *** test is now known as Guest985
[16:11:08] *** Guest985 is now known as StNicksrv
[16:11:40] *** Joins: dez (uid92154@user/dez)
[16:13:42] *** Joins: moogs (~moogs@12.146.254.146)
[16:14:02] *** Joins: han-solo (~hanish@user/han-solo)
[16:14:20] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:15:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:15:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:16:52] *** Joins: bittin (~bittin@fedora/bittin)
[16:17:30] *** StNicksrv is now known as JingleJazzy
[16:24:29] *** Quits: gitly (~gitly@148.252.129.19) (Ping timeout: 268 seconds)
[16:25:34] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:26:23] *** Joins: gitly (~gitly@148.252.129.19)
[16:28:38] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[16:28:48] *** Joins: cdown (~cdown@163.114.131.1)
[16:29:52] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[16:29:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:29:57] *** Joins: slav0nic (slav0nic@python.su)
[16:30:48] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:31:37] *** Quits: gitly (~gitly@148.252.129.19) (Ping timeout: 240 seconds)
[16:31:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:32:21] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:32:23] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:32:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:32:49] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[16:34:58] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[16:35:07] *** Joins: gitly2 (~gitly@148.252.129.62)
[16:35:47] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[16:36:07] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[16:36:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[16:37:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:37:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:38:19] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:39:02] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:39:16] *** Joins: mat001 (~mat001@c-69-181-157-203.hsd1.ca.comcast.net)
[16:39:44] *** Joins: shad (~shad@user/shad)
[16:39:50] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:42:11] *** Joins: noob_on_rails (~kvirc@athedsl-166753.home.otenet.gr)
[16:42:56] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Quit: Farewell)
[16:42:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:43:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:43:54] <noob_on_rails> hey all, I'm trying to conditionally replace a columns value by changing it's own value so like i have my mask set and all: dflc.loc[is_anyOtherAmountOfYears, 'emp_length'] = but here i'd like to use the value from dflc['emp_lengt'] and do something like a .replace() or a multiplication by a number or something
[16:44:14] <noob_on_rails> tried some things but can't really nail it :p
[16:44:22] *** Joins: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com)
[16:44:37] *** Quits: gitly2 (~gitly@148.252.129.62) (Ping timeout: 240 seconds)
[16:45:02] *** Joins: llua (~llua@zsh/developer/llua)
[16:45:12] *** Joins: constxd (~brad@192.75.101.164)
[16:45:32] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[16:46:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:47:26] *** Joins: tobybl (~tobybl@213.31.132.151)
[16:48:04] <rindolf> noob_on_rails: hi
[16:48:24] <noob_on_rails> hey rindolf! :D
[16:48:32] <rindolf> noob_on_rails: pandas, right?
[16:48:35] <noob_on_rails> yeap!
[16:48:59] <noob_on_rails> i just want to say, if you find "bla hello" , replace "bla"
[16:49:05] <noob_on_rails> in that column
[16:49:25] *** Joins: gitly2 (~gitly@148.252.129.19)
[16:49:30] *** Quits: constxd (~brad@192.75.101.164) (Remote host closed the connection)
[16:49:36] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:49:44] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[16:51:07] <rindolf> noob_on_rails: maybe https://pandas.pydata.org/pandas-docs/stable/user_guide/cookbook.html
[16:51:21] <kek_> hi, I just restrucuted a program and now I get the error "TypeError: forward() got an unexpected keyword argument 'weight'" followed by "ImportError: sys.meta_path is None, Python is likely shutting down" all I did is put the bce loss function into its own file: https://bpa.st/IUTQ https://pytorch.org/docs/stable/generated/torch.nn.BCELoss.html clearly shows there's an argument weight. I also think passing it to *args should be fine, no?
[16:51:42] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:52:06] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:52:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:53:23] *** Joins: darksun (~darksun@user/darksun)
[16:53:25] <Yhg1s> kek_: the function on line 11 does take a 'weight' keyword argument, yes, because it takes any keyword argument. That doesn't mean the function you call on line 15 does, though. Can you show the code before and after the change that broke things, and the full traceback you get?
[16:53:44] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[16:53:48] <noob_on_rails> rindolf: yea, that's close, but instead of just assigning a flat value when the condition is met, i want to change the value instead, or use that value to come up with the new value i want to assign
[16:53:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:54:16] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[16:54:24] *** TDT_ is now known as TDT
[16:55:05] <rindolf> noob_on_rails: use a for loop then?
[16:55:22] <noob_on_rails> dflc.loc[is_anyOtherAmountOfYears, 'emp_length'] = 5 is ok, but instead of 5 i want to say, now that you found the correct value, take that string and replace the ("bla") in it all the examples assign raw values as far as i can understand
[16:55:31] *** Quits: baltazar (~baltazar@84-236-20-119.pool.digikabel.hu) (Ping timeout: 250 seconds)
[16:56:56] <noob_on_rails> if i could somehow bind the value and use it after the '=' operator.. dunno
[16:57:15] *** Joins: baltazar (~baltazar@84-236-9-28.pool.digikabel.hu)
[16:57:55] *** Quits: gitly2 (~gitly@148.252.129.19) (Ping timeout: 256 seconds)
[16:58:15] <kek_> Yhg1s, if I read the source correctly, this should be what I pass it to "def forward(self, input: Tensor, target: Tensor) -> Tensor:" so from what I see doing "return torch.nn.BCELoss.forward(self, transformed_input, target, *args, **kwargs)" is wrong (I didn't write that code). Before it worked, so I guessed I'm wrong. Here's more code and infos: https://bpa.st/LLXA
[16:58:15] *** Joins: gitly2 (~gitly@85.255.236.137)
[16:58:48] <kek_> ah no, so passing weight to forward() should be fine: https://pytorch.org/docs/stable/_modules/torch/nn/modules/loss.html#BCELoss
[16:59:48] <bjs> kek_: where does it say it is fine?
[16:59:52] *** Joins: DXR (~lyrical@194.219.251.132)
[17:00:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:00:11] <Yhg1s> kek_: for what it's worth, the error from line 16 onward is because a destructor somewhere is trying to do things while Python is shutting down.
[17:00:46] <kek_> Yhg1s, I figured that error is just a follow up error on the firsto ne but that can be. Let me check
[17:00:56] <Yhg1s> kek_: line 15 is really the thing to look at. torch.nn.BCELoss.forward doesn't take 'weight'. The documentation also doesn't say it takes 'weight'
[17:00:58] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[17:01:12] <Yhg1s> kek_: it's not so much a follow-up error as an unrelated one.
[17:02:15] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[17:02:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:02:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[17:02:37] <kek_> Yhg1s, why wouldn't it produce a error before then? Why does python let me pass argument when it doesn't fit the signature?
[17:03:31] <bjs> kek_: before when?  Python doesn't let you, that's why you're getting the TypeError right?
[17:04:36] <kek_> bjs yeah, before I had 1 file with several classes and all that and I just moved stuff to their own files. That's why I had this assumption (which I don't truly believe). I'm gonna have to figure out why the code before "seemed to work" i.e. didn't produce an error.
[17:05:03] *** Joins: homura (uid398348@user/homura)
[17:05:24] <GeorgiosPasparak> i'm trying to push an object to a mongo and i'm getting this connection error,does anyone have an idea? https://bpa.st/OS3A
[17:05:25] <bjs> kek_: did you share the "before" code?
[17:05:32] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:05:47] <GeorgiosPasparak> here's the code as well https://bpa.st/UBNA
[17:06:15] <kek_> bjs, nope, I'll in a minute.
[17:06:56] <GeorgiosPasparak> wrong paste https://bpa.st/BP6A
[17:07:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[17:07:33] <spaceone> when I use a multiprocessing.SyncManager().dict() proxy instance: I have to create the instance before forking any subprocesses right? otherwise I create a instance which is only available in one process and other subprocesses can't get any references to that specific instance.
[17:09:16] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[17:09:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:09:41] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[17:09:43] <spaceone> And there is no way to get the instances which are already created?
[17:09:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:10:17] <kek_> bjs, https://bpa.st/UWJQ so L238 defines reg_BCELoss(), L328 creates an object, L339 is where I call train() where I also pass it and L298 is wher I pass weights. This runs fine for me and this is the code which I'm currently cleaning up.
[17:10:57] <noob_on_rails> ok found it :D
[17:12:02] <kek_> bjs, ah I think I see my issue
[17:12:02] *** Joins: dob1_ (~dob1@user/dob1)
[17:12:13] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[17:12:19] <rindolf> noob_on_rails: how?
[17:12:22] <kek_> bjs, I got it, nevermind. No idea how that mistake happened.
[17:12:41] <kek_> thanks
[17:13:30] <noob_on_rails> rindolf dflc['emp_length'] = dflc['emp_length'].where(~is_anyOtherAmountOfYears, other=dflc['emp_length'].str.replace(" years", ""))
[17:14:21] <noob_on_rails> could be done otherwise i'm sure, cause i was also not using the df[].str.replace but rather df[].replace
[17:14:23] <rindolf> noob_on_rails: i see
[17:14:26] <noob_on_rails> but this works
[17:14:44] <noob_on_rails> thank you rindolf :)
[17:14:49] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (Ping timeout: 250 seconds)
[17:15:05] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:15:08] <rindolf> noob_on_rails: you're welcome - and thanks
[17:15:10] *** Quits: bittin (~bittin@fedora/bittin) (Quit: Leaving)
[17:16:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[17:16:45] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[17:16:58] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 260 seconds)
[17:17:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[17:18:09] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[17:18:12] *** Joins: dulanic (~dulanic@47.187.144.163)
[17:18:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[17:19:41] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:19:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[17:20:14] *** Joins: shad (~shad@user/shad)
[17:20:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:20:55] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:21:02] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 252 seconds)
[17:21:32] <kek_> So now the question rises: How do I pass custom weights? From what I can see, the constructor supports them but that means I'd have to not pass a reference to the loss function but instantiate it inside my actual training loop. I would basically create thousands of unnessecary objects, no?
[17:21:36] *** Joins: fluter (~fluter@user/fluter)
[17:21:55] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[17:23:32] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:671f:f146:9b7e:7b61) (Remote host closed the connection)
[17:25:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:26:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:27:23] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[17:27:26] *** Quits: frost (~frost@user/frost) (Ping timeout: 245 seconds)
[17:27:27] *** Quits: whaley (~whaley@2603-6080-a301-33d1-e627-917a-2dbe-22f7.res6.spectrum.com) (Remote host closed the connection)
[17:29:05] *** Quits: baltazar (~baltazar@84-236-9-28.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:29:05] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[17:30:43] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[17:31:08] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[17:31:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:31:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:31:56] *** Joins: bloody (~bloody@user/bloody)
[17:34:46] <stwange> Am I right that this is a bug? I've reported bugs before which turned out to be my own stupidity. https://bugs.python.org/issue46116
[17:34:54] *** Joins: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[17:35:58] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:36:17] *** Joins: Nuremberg2pt0 (~ambassado@075-141-230-217.res.spectrum.com)
[17:37:03] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[17:37:20] *** Joins: xsperry (~xs@user/xsperry)
[17:37:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[17:39:06] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[17:39:52] *** Joins: monkey_ (~user@190.104.116.153)
[17:42:06] *** Quits: Nuremberg2pt0 (~ambassado@075-141-230-217.res.spectrum.com) (Read error: Connection reset by peer)
[17:42:11] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[17:42:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:42:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:44:11] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:ede8:3a6:2120:a8d6)
[17:46:05] *** Joins: MercilessDeth (~brad@136.49.59.177)
[17:46:23] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:48:16] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:49:24] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[17:50:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[17:50:19] *** Joins: tobybl (~tobybl@213.31.132.151)
[17:50:46] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[17:51:01] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[17:52:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:53:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:55:36] <kek_> Assume I have some class which has some constructor which sets some value like self.foo = bar. I create a object obj from that class and later on fo obj.foo = xyz. Is that considered okay to do in python? It was suggested to me but it feels dirty.
[17:56:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:56:46] <Peng> If it's documented, sure.
[17:57:03] <deniska> kek_: it's fine
[17:58:05] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:58:58] <kek_> deniska, Peng hm interesting, thanks.
[18:00:32] *** Quits: nicko (~iClass@222.211.28.110) (Quit: Konversation terminated!)
[18:01:16] *** Joins: p-i- (~Ohmu@mx-ll-171.6.251-31.dynamic.3bb.co.th)
[18:01:19] *** Quits: p-i- (~Ohmu@mx-ll-171.6.251-31.dynamic.3bb.co.th) (Remote host closed the connection)
[18:02:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:02:56] *** Joins: arinov (~arinov@213.194.126.155)
[18:03:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:04:48] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[18:05:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:05:33] *** Joins: p-i- (~Ohmu@mx-ll-171.6.251-31.dynamic.3bb.co.th)
[18:05:55] *** Joins: baltazar (~baltazar@91-83-35-151.pool.digikabel.hu)
[18:07:09] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c42c-abd2-59fd-dcb8.res6.spectrum.com)
[18:08:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:08:57] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Remote host closed the connection)
[18:09:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:10:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[18:10:54] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[18:11:33] *** Joins: slav0nic (slav0nic@python.su)
[18:13:10] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:13:51] *** Quits: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[18:14:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:14:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:15:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:15:54] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[18:17:14] *** Quits: p-i- (~Ohmu@mx-ll-171.6.251-31.dynamic.3bb.co.th) (Remote host closed the connection)
[18:17:15] *** Joins: jinsun (~quassel@user/jinsun)
[18:17:38] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:17:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[18:17:55] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:18:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:18:29] *** Joins: Tashtari (~tashtari@user/tashtari)
[18:18:48] *** Joins: jinsun___ (~quassel@user/jinsun)
[18:19:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:19:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:20:37] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:21:37] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:21:42] *** Joins: Klinda (~superleag@user/klinda)
[18:23:11] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[18:23:12] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:23:31] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[18:24:08] *** Joins: ravioli (sid83460@donger/pasta)
[18:24:36] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:24:38] *** Joins: thiras_ (~thiras@user/thiras)
[18:25:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:25:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:26:30] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[18:26:53] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:27:28] *** Joins: grooverman (~grooverma@177.102.117.95)
[18:28:27] <ravioli> is it bad practice to use the same name for local and global variables which represent the same thing? like say i have a function that builds and returns a dictionary "example_dict," and when i call the function, i call it with "example_dict = getExampleDict()". inside that getExampleDict function, the local version of the variable is also called "example_dict".
[18:28:40] <grym> ravioli: that's totally normal
[18:28:43] *** Joins: p-i- (~Ohmu@171.6.251.31)
[18:28:45] <ravioli> ok
[18:28:54] <grym> ravioli: sometimes beginners get confused and believe that you _must_ do this, and that's certainly not true
[18:29:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:29:15] <ravioli> that you _must_ do what, use different names?
[18:29:19] <grym> must use the same name
[18:29:20] <Yhg1s> Using the same _local_ names in different functions is fine. Using the same local name *and global name* for something, not so much.
[18:29:30] <Wooble> I'd rather have a variable in main() with the same name and not have the global at all.
[18:29:32] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[18:29:34] <grym> ^
[18:29:35] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:29:44] <ravioli> there's a global example_dict and a local example_Dict
[18:29:50] <ravioli> er, all lower
[18:29:52] <ravioli> example_dict
[18:30:03] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:30:14] <SnoopJ> ravioli, I'd say "best practice" here is to try to minimize the potential for confusion. Global state (a global variable that can be mutated) is almost always confusing.
[18:30:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:30:35] <ravioli> let me build a paste...
[18:30:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:32:07] *** Joins: userHeni (~userHeni@bl20-187-88.dsl.telepac.pt)
[18:32:14] *** Quits: userHeni (~userHeni@bl20-187-88.dsl.telepac.pt) (Remote host closed the connection)
[18:32:18] *** Joins: yotsuba420 (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:32:37] <ravioli> i always find myself running into something like this: https://pastebin.com/1jvz2D1x
[18:33:24] <ravioli> so /that/ is totally normal?
[18:34:49] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[18:34:50] *** yotsuba420 is now known as yotusba
[18:34:56] *** yotusba is now known as yotsuba
[18:35:14] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[18:35:50] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:37:44] *** Joins: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[18:38:13] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[18:39:32] *** Quits: baltazar (~baltazar@91-83-35-151.pool.digikabel.hu) (Ping timeout: 240 seconds)
[18:40:01] *** Joins: tobybl (~tobybl@213.31.132.151)
[18:40:24] <SnoopJ> ravioli, as long as there is not a declared `global digits` anywhere else in the same module, then I would say that's not unusual usage.
[18:40:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[18:41:12] <ravioli> thank you. just checking! always looked weird.
[18:41:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:41:33] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:41:38] *** Joins: baltazar (~baltazar@178-164-190-44.pool.digikabel.hu)
[18:41:51] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[18:41:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:43:32] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[18:46:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:46:46] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[18:47:10] *** Joins: arinov (~arinov@176.89.29.127)
[18:47:20] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:47:45] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[18:48:15] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[18:51:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:52:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:52:10] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[18:53:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:53:34] *** Quits: nomic (~nomic@51.52.78.152) (Remote host closed the connection)
[18:54:51] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[18:55:43] <GeorgiosPasparak> does anyone know ,do we need to specify the URI in order to create a local db? the default db
[18:58:49] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[18:59:31] <rindolf> GeorgiosPasparak: whatis the context?
[19:00:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[19:02:31] *** Joins: superboot (~agentgasm@user/superboot)
[19:03:50] <GeorgiosPasparak> rindolf hmm a collection if this is what you mean
[19:03:58] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:04:09] <marduk> Hello fine Python folks.
[19:04:52] <rindolf> GeorgiosPasparak: which database lib/implementation?
[19:05:33] <GeorgiosPasparak> rindolf flask_pymongo
[19:05:42] <rindolf> marduk: sup?
[19:05:55] <rindolf> GeorgiosPasparak: ah
[19:06:37] <marduk> just chillin'
[19:06:42] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:10:36] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[19:10:36] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:10:40] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:12:13] *** Quits: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[19:12:34] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Write error: Connection reset by peer)
[19:13:06] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:13:24] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[19:13:40] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.3)
[19:14:40] *** Joins: rsx (~dummy@ppp-188-174-153-69.dynamic.mnet-online.de)
[19:14:49] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Client Quit)
[19:15:17] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 240 seconds)
[19:15:33] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:15:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:15:54] *** Joins: bindu (~bindu@user/bindu)
[19:16:03] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Quit: Leaving)
[19:16:46] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[19:17:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[19:17:29] *** Joins: arinov (~arinov@31.223.10.63)
[19:17:43] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[19:19:03] *** Joins: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr)
[19:19:20] *** Quits: p-i- (~Ohmu@171.6.251.31) (Remote host closed the connection)
[19:19:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:21:02] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Quit: Leaving)
[19:22:30] *** Joins: Naan (~Naan@user/naan)
[19:23:03] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[19:24:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[19:25:11] *** Quits: ericlee (~ericlee@2600:1700:5450:41e0::30) (Read error: Connection reset by peer)
[19:25:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 240 seconds)
[19:28:34] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[19:29:04] *** Joins: syrius (syrius@titan.stormtek.net)
[19:29:37] *** Quits: arinov (~arinov@31.223.10.63) (Ping timeout: 240 seconds)
[19:31:48] *** Joins: arinov (~arinov@176.89.29.127)
[19:32:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:34:19] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[19:35:37] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:37:37] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:37:43] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 256 seconds)
[19:38:06] *** Joins: ionface (~ionface@user/ionface)
[19:38:36] *** Quits: phylaz (~phylaz@80.203.89.4) (Quit: The Lounge - https://thelounge.chat)
[19:40:22] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:40:35] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[19:41:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:43:08] *** Joins: phylaz (~phylaz@80.203.89.4)
[19:44:45] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[19:46:24] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:46:37] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:48:58] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:49:40] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:51:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:51:42] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[19:51:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:52:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:53:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[19:55:46] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:57:12] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:58:02] *** Joins: maplefinger (~maplefing@user/lindis)
[19:58:12] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[19:58:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:00:06] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[20:02:33] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[20:02:38] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[20:09:47] <petaflot> hello! I'm really confused... I get "line 555 [...] SyntaxError: name 'CURRENT_STATE' is assigned to before global declaration" https://www.imgpaste.net/image/KTRm3X
[20:10:26] <bjs> petaflot: it's because your `global` statement came after the assignment.
[20:10:36] <bjs> petaflot: but really, you're *already* in the global scope there, so you don't need `global` at all
[20:12:02] *** Quits: rsx (~dummy@ppp-188-174-153-69.dynamic.mnet-online.de) (Quit: rsx)
[20:12:16] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:7f37:d4df:3b9c:eeaa) (Remote host closed the connection)
[20:13:02] *** Quits: mozgalom (~mozgalom@213.220.127.153) (Quit: SO LONG SUCKERS!)
[20:13:32] *** Joins: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53)
[20:15:39] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[20:17:29] *** Joins: junebug (~junebug@2600:1700:3db0:2540:bf7b:a967:4977:2346)
[20:18:00] *** Joins: srhm (~srhm@user/srhm)
[20:18:21] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[20:22:09] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:23:45] *** Joins: han-solo (~han-solo@user/han-solo)
[20:25:14] <petaflot> bjs: I whish it were so easy... with this https://www.imgpaste.net/image/KTRe92 I get no error, but I only get purple!
[20:25:42] <bjs> petaflot: these images are really hard to read,  wouldn't it be easier to bpaste the code+error ?
[20:25:44] <petaflot> all occurences of CURRENT_STATE in the code are shown in the image
[20:25:46] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[20:26:17] <bjs> petaflot: your previous image had another one, `global switch_pressed, CURRENT_STATE`  in the if __name__ block
[20:26:30] <petaflot> bjs: unless you need a braille terminal I fail to see how this is difficult to read. I have trouble copy-pasting from vim
[20:26:34] <bjs> you don't need `global` statements at all at the top-level
[20:26:37] <petaflot> bjs: I removed this one
[20:26:48] <bjs> petaflot: okay and you still get an error?
[20:26:49] <petaflot> as per your suggestion
[20:27:09] <petaflot> nope, no error. but notify_color is always purple
[20:27:20] *** Joins: p-i- (~Ohmu@2403:6200:8978:9416:a1a7:49ea:dda2:aff)
[20:27:22] <SnoopJ> petaflot, do you really need to see why in order to believe that others find it a barrier to reading what you're sharing?
[20:27:28] <bjs> what is notify_color?
[20:27:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:55] <petaflot> bjs: oh sorry. the middle portion of the screenshot
[20:28:09] <bjs> petaflot: you mean lines 544-549 never get executed?
[20:28:20] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:28:26] <bjs> petaflot: are you missing another `global CURRENT_STATE` somewhere?
[20:28:27] *** Joins: xkuru (~xkuru@user/xkuru)
[20:28:38] <bjs> petaflot: the code at the bottom, we can't even see if it's in a function or not..
[20:29:12] <petaflot> bjs: they do ; for instance if I set CURRENT_STATE=STATE_PRIVATE right at the end of the file with no indentation  I get the right color
[20:29:18] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[20:29:28] <petaflot> the code at the bottom is in __main__
[20:29:50] <petaflot> and if lines 544-549 were not executed, I would get no color at all
[20:29:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:30:06] <bjs> petaflot: what do you mean by "get no color"
[20:30:25] <petaflot> bjs: the middle part writes the color on an RGB LED
[20:30:41] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:30:42] <bjs> petaflot: okay well, have you tried putting some print()s around to make sure the lines are executing like you expect
[20:30:43] <petaflot> it could write some text on the term, same stuff
[20:30:54] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:ede8:3a6:2120:a8d6) (Quit: Leaving)
[20:30:57] <bjs> petaflot: can you share the whole file? in a bpaste?
[20:31:03] <bjs> there's not enough here to say what's going on
[20:31:23] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-113.poda.cz) (Read error: Connection reset by peer)
[20:31:41] <bjs> like, are you sure that `else` is actually executing at all? How do you know the other calls aren't happening also? Maybe notify_color is just broken for non-purple colors?  Maybe there's some other thing messing with the variables we can't see
[20:32:26] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[20:32:57] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:33:41] <petaflot> it's just too messed up. I'm pretty sure you won't read the entire code, so I have to dig in and figure a little more for myself
[20:34:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:34:23] <bjs> petaflot: i mean what's the harm in showing the whole file?
[20:34:30] <bjs> maybe it'll be something silly that we can easily see
[20:35:55] *** Quits: GeorgiosPasparak (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:35:59] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Quit: Leaving)
[20:36:03] <petaflot> meeh. it _is_ something silly : DEFAULT_STATE was in a list, then I removed it for simplicty. at one place I'm still setting it inside the list, so my function (which I modified to show a color for DEFAULT_STATE when the list is empty) does not show anything
[20:36:31] <bjs> ... this is the first time the name "DEFAULT_STATE" has been mentioned
[20:36:43] <petaflot> thanks for helping me solve the 'global' issue though. I thought I had tried everything, apparently not
[20:37:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-786b-4edf-d419-7d31.res6.spectrum.com)
[20:37:08] <petaflot> bjs: uh sorry ^DEFAULT^CURRENT
[20:37:30] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:37:36] <bjs> petaflot: but you said these were all the occurances of CURRENT_STATE
[20:38:13] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[20:40:46] *** Joins: Naan` (~Naan@user/naan)
[20:40:56] <petaflot> bjs: I did, and it was true. only, I was adding some unsupported value in another list, which took precedence. I will raise an exception for unsupported values
[20:41:32] <bjs> petaflot: so the code you were showing us wasn't even being executed?
[20:42:02] *** Quits: zepolen (~zepolen@ppp-94-66-223-207.home.otenet.gr) (Ping timeout: 240 seconds)
[20:42:57] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 240 seconds)
[20:43:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:43:57] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[20:44:14] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:45:14] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:26] <petaflot> bjs: well... er..... no.
[20:45:30] * petaflot goes hide in a bush
[20:45:53] <petaflot> it was executed before, but I got really confused with the global thing
[20:46:24] <bjs> petaflot: the fact you were confused about global was clear from the globals you had at global scope :)
[20:46:33] *** Joins: Auron (Auron956@user/auron)
[20:47:17] <petaflot> so if I i understand well : usig "global" is needed only if I _set_ a value in a function _before_ I read it?
[20:47:18] <SnoopJ> petaflot, the assignment-before-global-declaration error is because the runtime is getting contradictory indications about what a name means: `x = 42; global x; x = -1` appears to be treating x as both a local and a global name.
[20:47:36] <bjs> petaflot: `global` only really makes sense in a function, and it should be the first line in the function
[20:47:43] <SnoopJ> agreed on both accounts
[20:48:07] <petaflot> right. thank you.
[20:48:19] <bjs> petaflot: you don't need `global` if you only *read*, but if you want to assign to the name `CURRENT_STATE = something_new`  then you need global
[20:48:31] <bjs> otherwise it assigns a new local variable, like Python normally does
[20:48:41] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:48:44] <petaflot> oh right
[20:48:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:49:18] <petaflot> do I need global if I read and *then* assign, too?
[20:49:31] <bjs> petaflot: if you want to assign, you need global
[20:49:37] <petaflot> (in the scope of the current fucntion of course)
[20:50:13] *** Quits: Xano (~Xano@2a00:23c4:4204:700:686f:1d55:eb3a:17d1) (Ping timeout: 240 seconds)
[20:50:26] <bjs> petaflot: `def f(): global x; ... ; x = 42 ; ...` it doesn't matter what the ... are, if you want to assign to the global `x`, you need that `global x` at the start of the function.
[20:50:32] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[20:50:38] <SnoopJ> petaflot, if you perform an assignment, Python assumes it's an assignment in the local scope unless it's told otherwise. Name lookup looks locally first, then goes to enclosing scopes until it finds what it needs or runs out of scopes (again, unless told otherwise)
[20:51:02] <bjs> petaflot: if you don't have `global x` then Python just does what it always does and thinks all variables you assign to are local.
[20:51:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:bf7b:a967:4977:2346) (Ping timeout: 240 seconds)
[20:52:07] <SnoopJ> relevant language reference reading: https://docs.python.org/3/reference/executionmodel.html#resolution-of-names
[20:52:50] <petaflot> so.. what you mean is that https://bpa.st/O5FA ?
[20:53:07] <bjs> petaflot: uh, what?
[20:53:18] <bjs> I'm not sure what this paste is trying to say ;)
[20:53:30] <SnoopJ> at L4, GLOBAL is defined only at the global scope, so it's resolved there. After the assignment on L6, it's defined locally, too, so the lookup finds that one.
[20:53:43] <SnoopJ> Because L6 assigns to the local scope and "shadows" the global.
[20:53:46] <bjs> Well no that's an UnboundLocalError surely?
[20:53:54] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:53:59] <bjs> Not sure how f0() runs for petaflot
[20:54:14] <SnoopJ> hmm
[20:54:19] <SnoopJ> that's a good point
[20:54:45] <SnoopJ> yea, I get an UnboundLocalError
[20:54:54] <bjs> Yes
[20:54:57] <SnoopJ> petaflot, what interpreter did you run that in?
[20:55:51] <petaflot> jsut ran it in Python 3.9.6. got UnboundLocalError at line 4
[20:55:53] <SnoopJ> bjs, as I think about how I got that so wrong, I guess the first time a name is seen, the runtime has to make up its mind what kind of thingy it is.
[20:56:02] <SnoopJ> petaflot, your paste shows output. Where did that output come from?
[20:56:19] <petaflot> SnoopJ: just wrote it like that, from my mind
[20:56:26] <petaflot> from what I thought would happen.
[20:56:40] <bjs> petaflot: ah, no that is not what happens
[20:56:47] <SnoopJ> yea, same goof I made
[20:56:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:56:59] *** Joins: kosh (~kosh@user/kosh)
[20:57:02] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[20:57:08] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b3c4:bac4:2686:e215)
[20:57:19] <bjs> petaflot: Python sees the assignment and so it must be a local variable,  but then your first print tries to print it out, but the local has not been assigned yet
[20:57:38] <bjs> you cannot try use both the global and the local variable of the same name in the same function
[20:57:41] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:57:46] <petaflot> so this kinda confirms something I've been suspecting for ages... the interpreted reads the code at least twice
[20:57:54] <petaflot> ^ted^ter
[20:58:07] <bjs> petaflot: well it reads it once, and then runs it
[20:58:11] <bjs> so yes, twice I suppose
[20:58:12] *** Joins: LBD (LBD@gateway/vpn/protonvpn/lbd)
[20:58:39] <SnoopJ> I would say it's exactly one *read*, but the compile may involve multiple passes
[20:58:44] <petaflot> does it read it once *backwards* ?
[20:58:51] <bjs> petaflot: no you're confusing things
[20:59:04] <SnoopJ> petaflot, are you asking about how it knows about this problem of switching-scopes?
[20:59:04] <petaflot> .. because this is someting I got a feeling of, too
[20:59:08] <bjs> petaflot: the file is read once, and like most languages it gets "parsed" into some kind of intermediate structure
[20:59:14] <bjs> (an AST)
[20:59:19] *** Quits: LBD (LBD@gateway/vpn/protonvpn/lbd) (Client Quit)
[20:59:28] <petaflot> what does this acronym stand for?
[20:59:32] <SnoopJ> Abstract Syntax Tree
[20:59:36] <petaflot> :-*
[20:59:43] <CrtxReavr> Another Shitty Tandy
[20:59:48] <bjs> you can read about ASTs in any good compiler and/or computer science book
[20:59:59] <bjs> and parsers
[21:00:12] <petaflot> CrtxReavr: lol
[21:00:29] <SnoopJ> And re: CPython specifically, Anthony Shaw's book is a nice gentle introduction
[21:00:30] <bjs> But the point is that yes, Python reads the whole file and function before it executes it and it knows that "GLOBAL" is a local variable there
[21:00:32] <petaflot> is there a way to get a graphical representation of this AST?
[21:00:48] <bjs> petaflot: define "graphical", there's the `ast` module that has representations of Python's actual AST
[21:01:01] <bjs> But it's not that interesting to look at
[21:01:01] <SnoopJ> and the third-party `astpretty` module for pretty-printing them
[21:01:12] <SnoopJ> I think I've seen visualizations of them before, but usually as one-off things
[21:01:39] <petaflot> graphical as in a 2D or 3D representation of the thing... sort of like wikipedia's page on AST shows
[21:02:31] <bjs> like, as an image of a tree?  I don't know of any.  Lots of things can output them as prettyified text like in SnoopJ's suggestion
[21:02:35] *** Joins: Betal (~Betal@user/betal)
[21:02:51] <bjs> but again... you don't really see anything you don't already know in it, it's not very useful to look at
[21:03:21] <petaflot> because I've had really weird cases where "try" and "except" clauses would raise exceptions at the "same" time ;, dicrepencies (likely dueto my misuderstanding of python's internals) of the AST would explain it
[21:03:35] <SnoopJ> that doesn't sound related
[21:03:44] <bjs> petaflot: I'm not sure the AST would help,  the AST is just... the code
[21:04:06] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 245 seconds)
[21:04:07] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Poof goes the quack - The Lounge - https://thelounge.chat)
[21:04:09] <petaflot> SnoopJ: I feel a little less nuts. *thank* you
[21:04:15] <SnoopJ> that sounds more like `except` is entered to handle some exception, and then another exception occurs in the handler, which is a perfectly reasonable thing that can happen (an error during handling the original error, say)
[21:04:38] <bjs> petaflot: the point is that Python reads the whole file at once before it tries to execute anything, so it knows everything all the functions do before it runs the function.
[21:04:53] <bjs> petaflot: as for this try/except thing, if you show us an example we can explain what happened
[21:04:58] <petaflot> I posted this issue years ago... I tried to find the code recently but wasn't able to.
[21:05:16] <SnoopJ> something like this? https://bpa.st/QUMQ
[21:05:32] <bjs> petaflot: I'm not really sure what you meant by "at the same time", because the `except` clause does not begin to execute until after the try clause is over.
[21:05:49] <SnoopJ> yea, the only reading of this that makes any sense to me is the scenario in my paste
[21:06:53] <petaflot> bjs: no, actually the *opposite*. someone aarond here told me sth like "this should not happen, it's impossible"
[21:06:54] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[21:06:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:07:04] <bjs> petaflot: what do you mean the opposite?
[21:07:21] *** Joins: Duckle (~Duckle@user/duckle)
[21:07:52] <petaflot> like https://bpa.st/GVQA
[21:07:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b3c4:bac4:2686:e215) (Ping timeout: 240 seconds)
[21:08:08] <bjs> petaflot: yes that is impossible
[21:08:18] <petaflot> .. well it did happen.
[21:08:21] <bjs> no it didn't
[21:08:37] <bjs> is it possible you were just confused? like today, staring at code that wasn't even executing ;)
[21:08:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:08:52] <bjs> If you show us an actual runnable example, we can explain what actually happened ofc
[21:08:54] <petaflot> whatever. I won't argue with you too much. I was not as confused at that time (I get very little sleep these days)
[21:08:55] <SnoopJ> assuming it did happen, we can't tell you anything about it because it *should* be impossible.
[21:09:14] <SnoopJ> if you did have the code, we could talk about it some more, but such as it is, let's say "yep, that should be completely impossible" and move on.
[21:10:56] <petaflot> well as I said before I looked for the code recently, could not find it. around the same time I encountered this really, really weird apparent "constant-execution-time" behaviour when executing the code on simple or complex data structures
[21:11:03] <bjs> I can certainly imagine another exception handler, which catches that exception and then raises its own one and just being confused about the order things happened in.
[21:11:42] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:11:50] <petaflot> the latter is _really_ something I would like to get my hands on, but this would mean to read and try quite a "few" commits to eventually find the relevant code
[21:12:04] <bjs> But really the `except` clause does not begin to execute until the `try` one has really actually totally stopped executing forevermore.
[21:12:23] <bjs> petaflot: well lots of data structures have constant-time operations, i.e. operations whose performance does not depend on the size or complexity of the data
[21:12:29] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a680:fb27:d4a4:ebf0)
[21:12:52] <petaflot> bjs: do you have any examples? I'd love to learn more about that
[21:13:00] <bjs> petaflot: lists for example
[21:13:04] <SnoopJ> petaflot, if you do find the code, we can talk about it some more. There's nothing left to say about it, though.
[21:13:21] <bjs> petaflot: indexing into a list takes the same amount of time, no matter how big a list is
[21:13:42] <petaflot> that was a little more complicated than just lists or dicts. there was quite a bit of recursion involved.
[21:13:59] <petaflot> SnoopJ: I fully agree
[21:14:00] <bjs> The first time someone called a dict simple :P
[21:14:05] <SnoopJ> It would have to be rather special to get this seemingly-impossible result, yes.
[21:14:14] <SnoopJ> But since we can't see the code and you didn't know what you were looking at...
[21:14:29] <petaflot> bjs: I'm from ASM world... direct adressing actually is quite simple ;-)
[21:14:44] <SnoopJ> dicts are pretty much exactly the opposite of "direct"
[21:15:22] <petaflot> "direct" with "holes". so... "same same but different"
[21:15:37] <SnoopJ> I would not say computing a hash is "direct" in any sense of the word I am familiar with.
[21:15:44] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[21:15:51] <bjs> and then the hash isn't used directly either, you do some more computation on it
[21:15:57] <SnoopJ> Yea, there's equality checks and such
[21:16:00] <bjs> and then even that doesn't let you go directly there
[21:16:01] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:16:13] <bjs> and even if it does, it doesn't mean you've got the answer, you have more computation to do still
[21:16:14] <petaflot> SnoopJ: since a hash is deterministic, I call it direct. maybe it's a a language abuse?
[21:16:18] <SnoopJ> petaflot, indeed it is
[21:18:04] *** Joins: et_ (~et@user/et)
[21:18:14] <petaflot> so.... how do you call this?
[21:18:26] <bjs> petaflot: not sure what you're trying to say
[21:18:27] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Client Quit)
[21:18:40] <SnoopJ> yea I'm not sure what the question is
[21:18:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8)
[21:19:09] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[21:19:09] *** et_ is now known as et
[21:19:28] <petaflot> if it's not *direct" addressing, what is it? it's still deterministic, doesn't involve any recursion on the (low-level) data structure so is not dependent of its size
[21:19:49] <bjs> petaflot: what does recursion have to do with it
[21:20:12] <petaflot> I mean "the time to get the address at which the data lives does not depend on the size of the structure" (or sth like that)
[21:20:24] <bjs> yes that's what makes it constant time
[21:20:34] <SnoopJ> yea, "constant time" is the relevant jargon, or O(1) in big-oh notation
[21:20:52] <bjs> all constant-time things are going to be like that, that they only have to do a fixed amount of work and not look at the "whole" thing
[21:21:05] *** Joins: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925)
[21:21:10] <jinsun___> and calling it recursion is again language abuse, a bit too much :D
[21:21:14] <SnoopJ> (it's technically _not_ constant but on average it is)
[21:21:26] *** jinsun___ is now known as jinsun
[21:21:36] <petaflot> never mind guys. this was not the issue. I really hope I will have the leisure to examine my repos and fid this occurence of code and share it with you
[21:21:38] <SnoopJ> `k in d` is O(1) on average (which is true for most dicts), O(n) in the worst case
[21:22:27] <petaflot> I'm actually busy building a door for Alice
[21:23:55] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[21:25:05] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[21:26:39] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Ping timeout: 268 seconds)
[21:26:55] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[21:26:59] *** Joins: teut (~teut@2401:4900:1c69:421b:adda:d971:8723:5b6e)
[21:27:14] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[21:28:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[21:28:57] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[21:30:03] *** Joins: plastico (~plastico@neomutt/plastico)
[21:30:55] *** Quits: vladoski (~foo@2001:b07:add:d406:fdd2:64c7:d200:4925) (Quit: Textual IRC Client: www.textualapp.com)
[21:31:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[21:34:15] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[21:34:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a680:fb27:d4a4:ebf0) (Ping timeout: 240 seconds)
[21:35:24] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[21:36:04] *** Naan` is now known as Naan
[21:36:18] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Poof goes the quack - The Lounge - https://thelounge.chat)
[21:36:22] *** Joins: zepolen (~zepolen@ppp-94-66-223-207.home.otenet.gr)
[21:38:09] <petaflot> well.. feel free to tell me you don't want to think about my weird issues but here is one: https://bpa.st/USSA
[21:39:09] <petaflot> the relevant lines contain FIREFIREFIRE
[21:39:09] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[21:39:38] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[21:40:15] <SnoopJ> the setup() call is using FIREFIREFIRE[pin] but the output is using FIREFIREFIRE, which seems relevant since the exception is complaining about the latter
[21:40:40] <SnoopJ> beyond that it's a pile of code that has no particular meaning to me
[21:40:54] *** Joins: Duckle (~Duckle@user/duckle)
[21:41:25] <SnoopJ> the value of a http://www.sscce.org/ is difficult to overstate
[21:41:40] *** Joins: akahs (~Shaka@user/shaka)
[21:41:57] <SnoopJ> although it's hard to get a truly executable repro here since it's running on particular hardware doing GPIO
[21:42:23] *** Joins: cul8r (~cul8r@76.113.95.199)
[21:42:38] *** Quits: Duckle (~Duckle@user/duckle) (Client Quit)
[21:43:04] <xavierdarkness>  
[21:43:15] *** Joins: Duckle (~Duckle@user/duckle)
[21:44:22] *** Quits: cul8r (~cul8r@76.113.95.199) (Client Quit)
[21:44:57] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Quit: MirC)
[21:45:08] <petaflot> SnoopJ: hardware is a Pi3B+ which *should* be easy to obtain. not sure if the hardware itself is the issue. unless I'm really mistaken, FSWITCH is defined and enabled pretty much in the same fashion (so are RED, GREEN, BLUE) which are working perfectly in the same function. so maybe I'm just trolling out of my will, which would mean I'm much dumber than I'm willing to accept
[21:46:12] <petaflot> and yes.. it's not sscce but it's one of these cases where trimming the code would take so long I'd rather give up computing altogether
[21:46:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:47:27] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[21:47:49] <petaflot> I had a similar error quite recently (before I came here for help about the global thing) ; it appeared it was another error that was triggering sth like "GPIO.setmode() has not been set"
[21:48:07] <petaflot> but the error itself was invisble in the trace
[21:49:05] *** Joins: aniketgm (~Aniket@49.36.111.83)
[21:50:35] *** Joins: greedom (~greedom@p200300de670bc100150a31788ad3c68f.dip0.t-ipconnect.de)
[21:50:47] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[21:50:48] <JimmyRustles> hi
[21:51:04] <JimmyRustles> i just did "pip install pyogre" and it seemed to install, but when i do "import pyogre" it says the module doesn't exist
[21:51:20] <petaflot> the exact error was "RuntimeError: Please set pin numbering mode using GPIO.setmode(GPIO.BOARD) or GPIO.setmode(GPIO.BCM)" and I solved it by doing pseudo-random changes in the code
[21:51:51] <JimmyRustles> oh nevermind
[21:51:53] <JimmyRustles> i'm supposed to use ogre
[21:51:53] <petaflot> (it was a stupid error, but the trace showed no clue of it)
[21:51:56] <JimmyRustles> thanks anyway
[21:52:02] *** Joins: lastshell (~lastshell@user/lastshell)
[21:52:41] <SnoopJ> petaflot, the error itself is very clear: the pin you're trying to write to is not set up. The point I made is that you are calling setup() on what appears to be a different pin than the one you're writing to.
[21:52:57] <SnoopJ> Which might be why it happens: you may be setting up a different pin than the one you're trying to write to.
[21:53:06] <petaflot> JimmyRustles: yeah... well I've always wondered why one has to do sth like "pip install someModule" and then "import module" ; is there _any_ reason why the names are not consistent? I find it really annoying
[21:53:37] <SnoopJ> I'm assuming the setup() runs before the write since the code isn't actually clear about that, but we can only work with what you're willing to show us and hope that you know which parts are relevant if you're going to exclude things.
[21:54:30] <SnoopJ> an easy sanity check: print the inputs to setup() and GPIO.output() where you're calling them.
[21:54:57] <petaflot> SnoopJ: well since the prit statement with 'XXX' does get printed (even without flush=True) way before the error happens, isn't this a clue that the pin was setup correctly?
[21:55:15] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[21:55:17] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[21:55:37] <SnoopJ> petaflot, not really
[21:55:41] <petaflot> ^prit^print (my keyboard is kinda broken)
[21:56:04] <petaflot> SnoopJ: then I would really like to know how this is "not really" the case
[21:56:05] <SnoopJ> the error occurs at the time of calling output(), the not-outputtable setup can be present at pretty much any other time before that.
[21:56:19] *** Joins: jiffe (~jiffe@mail.nsab.us)
[21:56:19] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:56:36] <SnoopJ> petaflot, then I would suggest you follow the suggestion I gave.
[21:56:47] <petaflot> what do you mean by "the not-outputtable setup"?
[21:56:52] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[21:56:53] <SnoopJ> I mean a pin that isn't setup for output
[21:56:58] <SnoopJ> Which is what your error is.
[21:57:13] <SnoopJ> You can trust the error message: this is happening because the pin isn't set up for output.
[21:57:26] <SnoopJ> Your goal is to find out why. I suspect it's because FIREFIREFIRE[pin] and FIREFIREFIRE are likely not the same value...
[21:58:05] <bjs> petaflot: on one you have FIREFIREFIRE[pin] and the other FIREFIREFIRE,  what's te difference?
[21:58:07] <bjs> oh SnoopJ also saw
[21:58:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:00:28] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[22:01:19] *** Joins: dob1 (~dob1@user/dob1)
[22:01:47] <petaflot> pffff. I'm confusing C and python syntax when I'm tired. this is the issue. :-( sorry for wasting your time
[22:02:03] <SnoopJ> "Most bugs are a result of the execution state not being exactly what you think it is."
[22:02:14] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Quit: The Lounge - https://thelounge.chat)
[22:02:21] *** Joins: NeoCore (~neocore@37.19.217.37)
[22:02:51] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[22:04:36] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[22:05:05] *** PJBoy is now known as Guest8573
[22:05:05] *** Quits: Guest8573 (~PJBoy@user/pjboy) (Killed (tungsten.libera.chat (Nickname regained by services)))
[22:05:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[22:06:08] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[22:06:34] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:08:31] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:09:19] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[22:09:57] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[22:10:09] *** Quits: iomari891 (~iomari891@197.210.77.17) (Ping timeout: 256 seconds)
[22:11:02] *** Joins: iomari891 (~iomari891@197.210.77.160)
[22:11:07] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc8:8e33:a486:95b)
[22:11:22] <petaflot> SnoopJ: nah..  most bugs sit between the keyboard and the chair ;-)
[22:11:23] <zen_coder> there is this patch object in python where I can patch member methods
[22:11:41] <zen_coder> with patch.object(SomeClass, "member", return_value=None) as mock_method:
[22:11:49] <zen_coder> how can I do the same with a global method?
[22:12:37] <SnoopJ> petaflot, that isn't incompatible with the quote
[22:13:38] *** Quits: gothicserpent (~gothicser@204.152.215.249) (Ping timeout: 252 seconds)
[22:13:45] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Remote host closed the connection)
[22:13:59] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:14:00] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[22:14:14] <petaflot> SnoopJ: so true :-D
[22:15:27] *** Joins: grooverman (~grooverma@177.102.117.95)
[22:15:44] *** Joins: gothicserpent (~gothicser@204.152.216.121)
[22:16:23] *** Quits: iomari891 (~iomari891@197.210.77.160) (Ping timeout: 252 seconds)
[22:16:29] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.3)
[22:19:01] *** Joins: iomari891 (~iomari891@197.210.53.158)
[22:20:22] *** Quits: aniketgm (~Aniket@49.36.111.83) (Quit: leaving)
[22:22:37] *** Quits: visl (visl@user/visl) (Ping timeout: 256 seconds)
[22:22:38] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:25:48] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[22:25:48] *** Quits: Guest7318 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[22:26:02] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[22:27:14] *** Joins: grooverman (~grooverma@177.95.12.14)
[22:28:55] *** Joins: mnx (marian@user/mnx)
[22:28:55] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[22:29:18] *** Joins: zebrag (~chris@user/zebrag)
[22:30:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:30:37] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[22:31:10] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:17] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:31:28] <zen_coder> how do I mock a global function with python and unittest.mock?
[22:31:39] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:32:24] *** Joins: vit (~vit@chello085216193138.chello.sk)
[22:32:30] <han-solo> `mock.patch('mod.func', ...)` # ?
[22:32:49] *** vit is now known as Guest4245
[22:33:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[22:33:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:36:55] *** Joins: ubert (~Thunderbi@p200300ecdf0a5db5805dbf0fab6de770.dip0.t-ipconnect.de)
[22:38:02] <zen_coder> han-solo: does not work
[22:39:03] <han-solo> do you have an example one could look at ?
[22:39:06] <han-solo> https://docs.python.org/3/library/unittest.mock.html#patch
[22:40:44] *** Quits: p-i- (~Ohmu@2403:6200:8978:9416:a1a7:49ea:dda2:aff) (Remote host closed the connection)
[22:41:25] *** Quits: xsperry (~xs@user/xsperry) ()
[22:42:34] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:43:21] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Quit: Leaving)
[22:43:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:44:45] <zen_coder> han-solo: https://bpa.st/KA7A
[22:45:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[22:45:32] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[22:45:37] *** Quits: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk) (Ping timeout: 240 seconds)
[22:45:54] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[22:46:17] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[22:47:02] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[22:47:37] *** Joins: jiffe (~jiffe@mail.nsab.us)
[22:47:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[22:48:24] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:48:44] *** Joins: esther (~esther@2607:fb90:20d6:1da0:693b:61af:222d:b9a5)
[22:49:24] *** Joins: parv (~quass@user/parv)
[22:49:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:50:37] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[22:51:23] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[22:53:27] <han-solo> zen_coder: `@patch('__main__.foo_method')`
[22:54:12] <lantech19446> I understand that i'm nowhere near proficient enough yet to undertake this but can I use regular python to reach out to a web based result and gather information from the page and spit it out?
[22:54:17] *** Quits: esther (~esther@2607:fb90:20d6:1da0:693b:61af:222d:b9a5) (Ping timeout: 240 seconds)
[22:54:17] *** Quits: Andrynet1 (~Andrynet@190.152.206.29) (Ping timeout: 240 seconds)
[22:54:44] <bjs> lantech19446: yes, there are some libraries that make it even easier (e.g. requests)
[22:54:44] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[22:55:00] <lantech19446> is that was django does?
[22:55:27] <bjs> lantech19446: no, django is kind of the opposite. Django is what you use to *make* websites
[22:55:32] <lantech19446> o ok
[22:55:40] *** Quits: wasutton (~wasutton3@75-46-236-127.lightspeed.tukrga.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:56:08] <lantech19446> someone built me a tool to do what i need in node.js but I want it to go a little further than it does and since I don't know node I'm going to have to rewrite it when I get that far
[22:56:11] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[22:56:29] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[22:57:09] *** Joins: p-i- (~Ohmu@mx-ll-183.89.34-14.dynamic.3bb.co.th)
[22:58:30] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:58:42] *** Joins: yaalon (~yaalon@2806:2f0:50c0:6c8:10de:c371:b7b8:bf56)
[22:59:18] <Swayze> or you could just 'learn node'
[22:59:25] <Swayze> its just javascript on the server side
[22:59:28] <Swayze> :p
[22:59:38] <jwhisnant_> zen_coder: fwiw I find https://pypi.org/project/pytest-mock/ more intuitive, with the mock.patch.object method ...
[22:59:49] <Swayze> python and node are both worth knowing
[23:00:15] <grym> ,i
[23:01:17] *** Quits: p-i- (~Ohmu@mx-ll-183.89.34-14.dynamic.3bb.co.th) (Ping timeout: 240 seconds)
[23:01:29] *** Quits: MSSC (~MSSC@pd950eebb.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[23:01:44] <lantech19446> Swayze: I tried js I got stuck on loops I may go back and learn it after I have another language under my belt but something about the way it handles loops just confuses the hell out of me
[23:02:05] <Swayze> it follows c syntxa
[23:02:13] <Swayze> its just curly braces ;-)
[23:02:20] <Swayze> anyway off topic here
[23:02:34] <Swayze> join #nodejs for more
[23:03:12] <SnoopJ> lantech19446, the answer to your question is "yes." `requests` is good if you want to roll the machinery yourself, and there's also the `scrapy` library which is often used to write web scrapers in Python
[23:03:49] *** Joins: moog (~moog@107.77.244.45)
[23:04:08] <SnoopJ> scrapy is probably more useful when you're writing something like a crawler, and it's good to know how `requests` (+ something to parse the HTML, BeautifulSoup4 and lxml are both popular) works even if you ended up switching to something else.
[23:04:13] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[23:04:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:05:39] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-bd8f-1211-2428-659f.res6.spectrum.com)
[23:06:02] <lantech19446> sounds good, the website it'll be used on is literally just tables of results put out by a tool I use I just need it to search for the word coalition and return anything that has it in the url but I want it to then consolidate results
[23:06:36] *** Joins: bote (~bote@user/bote)
[23:07:55] <zen_coder> han-solo: AttributeError: <module '__main__' from '/home/user/.local/bin/pytest'> does not have the attribute 'foo_method'
[23:08:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:08:29] <SnoopJ> lantech19446, I've done that kind of thing with requests/lxml before, yea.
[23:09:36] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[23:11:22] <han-solo> zen_coder: yeah, maybe better to use pytest-mock
[23:11:53] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3705:6def:beff:fd)
[23:11:55] <lantech19446> awesome
[23:13:17] *** Joins: p-i- (~Ohmu@2403:6200:8978:9416:ed6b:453a:58c2:af6b)
[23:14:27] *** Joins: StickyIcky (~StickyIck@2806:107e:7:7914:f7a0:4c2a:69b7:fbf)
[23:14:31] *** Joins: StickyIcky2 (~StickyIck@2806:107e:7:7914:f7a0:4c2a:69b7:fbf)
[23:14:44] <han-solo> zen_coder: https://bpa.st/EHLQ
[23:15:11] *** Quits: jkl1337 (~jkl@user/jkl) (Quit: Gone.)
[23:16:22] <han-solo> er, `s/print(z1.foo_method())/assert z1.foo_method() == "mock call"/` # ?
[23:16:25] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:16:32] *** Joins: jkl (~jkl@user/jkl)
[23:17:43] *** Joins: nomic (~nomic@51.52.78.152)
[23:17:50] <han-solo> or just `with patch('mod.func', lambda: "mock call"):..`
[23:17:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-786b-4edf-d419-7d31.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:18:01] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:18:39] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Quit: Leaving)
[23:18:41] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 245 seconds)
[23:19:06] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Ping timeout: 260 seconds)
[23:19:43] *** Joins: damonlynch (~ngaio@static-68-235-44-25.cust.tzulo.com)
[23:21:08] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[23:21:21] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc8:8e33:a486:95b) (Ping timeout: 268 seconds)
[23:21:45] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[23:21:55] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:22:01] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[23:22:16] <Saxtheowl> How to have my pythons programs still running even if I close the shell where I have launched them ?
[23:22:36] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[23:22:41] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[23:23:35] <han-solo> `nohup` ? but i don't think that's it ?
[23:23:40] *** Joins: audiobirb (~audio@user/audio)
[23:24:54] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: rebooting)
[23:24:57] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:cc32:6092:bdbf:ae3b) (Ping timeout: 240 seconds)
[23:25:40] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Ping timeout: 268 seconds)
[23:26:35] *** Joins: Naan (~Naan@user/naan)
[23:27:50] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:30:31] *** Quits: greedom (~greedom@p200300de670bc100150a31788ad3c68f.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:31:01] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:31:10] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:31:21] <SnoopJ> you can `disown` the job in bash
[23:31:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:31:56] *** Quits: damonlynch (~ngaio@static-68-235-44-25.cust.tzulo.com) (Quit: Leaving)
[23:32:14] *** Joins: damonlynch (~ngaio@static-68-235-44-25.cust.tzulo.com)
[23:33:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:34:41] *** Joins: walrus_man (~Thunderbi@2601:154:8103:7990:9a8:4236:8b4d:8cef)
[23:34:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-555a-1142-3fc2-3a5f.res6.spectrum.com)
[23:35:35] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[23:36:04] *** Joins: coldmountain (sid484352@2a03:5180:f:1::7:6400)
[23:36:06] *** Joins: cyphase (~cyphase@user/cyphase)
[23:36:21] *** Quits: yaalon (~yaalon@2806:2f0:50c0:6c8:10de:c371:b7b8:bf56) ()
[23:37:39] *** Quits: nicode (~nic@2607:f2c0:9417:4c00:c788:aed4:9339:c885) (Ping timeout: 250 seconds)
[23:37:53] <StickyIcky2> Hey everyone! How are you? I'm having an issue with code that isn't mine. On a Flask app, a lambda function is defined and called on a loop, when the lambda generates an error it doesn't stop execution, it's simply logged and the code acts as if that instance of the loop had called a pass. Is this default behavior for lambdas or is it a Flask error handling thing?
[23:38:26] <bjs> StickyIcky2: lambdas are just normal functions, they have no special error handling
[23:38:40] <StickyIcky2> Flask thing then likely, thanks bjs!
[23:38:55] <SnoopJ> Saxtheowl, here's a dummy program being started in the background in a shell that exists immediately: https://bpa.st/E4VQ
[23:39:41] * SnoopJ remembers to close the dummy process
[23:40:48] <jwhisnant_> Saxtheowl: tmux (or screen) ?
[23:40:58] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Quit: Client closed)
[23:41:16] <SnoopJ> jwhisnant_, well, the shell inside the session is still running
[23:41:26] <SnoopJ> but it's a handy way to do it if that doesn't actually matter
[23:41:59] <han-solo> if remote, screen/tmux is pretty common thing to go for i guess
[23:42:08] *** Joins: vicfred (~vicfred@user/vicfred)
[23:42:40] <CrtxReavr> On *nix, you can also background processes.
[23:42:42] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:43:22] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[23:44:02] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[23:44:15] <han-solo> doesn't that kill the process when the parent exits ?
[23:44:33] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[23:44:45] <SnoopJ> background jobs still get SIGHUP yea
[23:45:05] <SnoopJ> if they didn't there wouldn't be any work for `disown` to do, really :P
[23:45:16] <han-solo> yeah ':)
[23:46:36] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[23:46:56] <grym> https://github.com/nelhage/reptyr  is very neat, in this vein
[23:47:41] *** Joins: grooverman (~grooverma@177.95.12.14)
[23:48:12] *** Joins: Naan (~Naan@user/naan)
[23:48:23] <SnoopJ> which requires you to disown in the first place, heh
[23:49:59] <grym> i think you're supposed to, but i have a vague idea that you don't _have_ to
[23:49:59] *** Joins: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[23:50:20] <parv> Is "disown" not used enough?
[23:50:33] <grym> i don't use it very often
[23:51:02] <grym> i only recently learned about zsh's &! sugar, and i use that sometimes
[23:51:11] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-216.pool.digikabel.hu)
[23:51:14] <parv> Hunh
[23:51:42] <grym> background-and-disown in one swell foop
[23:51:58] *** Joins: sidro (~sidro@86.121.200.249)
[23:52:29] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:52:49] *** Parts: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Leaving)
[23:53:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:54:02] *** Joins: teut90 (~teut@2401:4900:1c69:421b:f107:3d30:9c1e:abd3)
[23:54:29] *** Quits: sidro (~sidro@86.121.200.249) (Quit: Konversation terminated!)
[23:55:27] *** Quits: teut (~teut@2401:4900:1c69:421b:adda:d971:8723:5b6e) (Ping timeout: 256 seconds)
[23:55:34] <SnoopJ> grym, sure, you can change tty attachment for a not-disowned thing, too. It just won't solve the question that started this discussion, because stopping the SIGHUP is strictly-required.
[23:56:01] <SnoopJ> stopping delivery to the process of interest, that is
[23:56:26] *** Joins: sidro (~sidro@86.121.200.249)
[23:56:28] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[23:57:00] <grym> i briefly experimented with adding `tmux new-session -A -s main`  to the bottom of my .zshrc on a remote host
[23:57:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-555a-1142-3fc2-3a5f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:57:03] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[23:57:08] <grym> (to avoid this sort of thing)
[23:57:17] <grym> i'm very unsure about if that's a good idea or not, still
[23:57:53] *** Quits: walrus_man (~Thunderbi@2601:154:8103:7990:9a8:4236:8b4d:8cef) (Remote host closed the connection)
[23:58:06] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:58:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com)
[23:58:11] *** Joins: walrus_man (~Thunderbi@2601:154:8103:7990:9a8:4236:8b4d:8cef)
[23:58:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com) (Client Quit)
[23:59:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[23:59:17] *** Joins: stdout (~stdout@216.163.21.11)
[23:59:27] <grym> er, i should say i added `[ -z "${TMUX}" ] && tmux new-session -A -s main  # if not in tmux, be in tmux`
