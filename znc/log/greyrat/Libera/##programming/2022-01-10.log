[00:00:05] <sonny> sorta, I'm using a similar language called Clean
[00:00:22] <sonny> [] are required along with :
[00:00:35] <bjs> I see
[00:00:49] *** Joins: trevors (~trevors@user/trevors)
[00:01:34] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[00:02:16] *** Joins: zaher (~zaher@37.48.185.220)
[00:03:48] * [itchyjunk] has no hair left due to all the ripping
[00:03:51] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[00:04:10] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[00:04:15] *** Joins: illusion434 (~illusion4@185.135.96.133)
[00:05:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:05:06] <sonny> oh, this might be the issue, my test is `Start = reverse "hello"`
[00:05:14] <GeDaMo> [itchyjunk]: do you know about if..then..else in Haskell?
[00:05:21] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Read error: Connection reset by peer)
[00:05:24] *** Quits: murii (~murii@2a02:a58:835a:1100:c41a:ae69:f3ba:5cd2) ()
[00:05:32] <sonny> String looks like its's own type not like in haskell where it's just [Char]
[00:05:42] *** Quits: illusion434 (~illusion4@185.135.96.133) (Client Quit)
[00:05:43] <[itchyjunk]> https://bpa.st/NVVQ
[00:05:44] <bayaz> Title: View paste NVVQ 
[00:05:52] <[itchyjunk]> i implemented myFilter if if then else already
[00:05:58] <[itchyjunk]> but the task was to use foldr to do it
[00:06:05] <[itchyjunk]> which is where all my neurons died
[00:06:34] <sonny> GeDaMo: it works `Start = reverse [1, 2, 3, 4] => [4,3,2,1]`
[00:06:49] <GeDaMo> :)
[00:07:04] <sonny> consistency is great :)
[00:07:47] <sonny> the error message makes a lot more sense now
[00:08:10] *** Quits: victor (uid208353@user/victor) (Quit: Connection closed for inactivity)
[00:08:18] <sonny> the funny thing about clean is that it is only compiled, I thought it would have an interpreter
[00:08:22] <GeDaMo> [itchyjunk]: go should take three parameters: the condition, the item, the list and returns a list
[00:08:28] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:08:41] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:08:54] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:08:55] <[itchyjunk]> go should take two and return third, no?
[00:09:00] <[itchyjunk]> (a -> b -> b)
[00:09:06] <[itchyjunk]> http://zvon.org/other/haskell/Outputprelude/foldr_f.html
[00:09:07] <bayaz> Title: Haskell : foldr 
[00:09:21] <[itchyjunk]> since foldr :: (a -> b -> b) -> b -> [a] -> b
[00:09:22] <GeDaMo> But what about the predicate which you've called f?
[00:09:31] <[itchyjunk]> oh that
[00:09:33] <[itchyjunk]> hmm
[00:09:34] <GeDaMo> You're passing f as a parameter to go
[00:09:49] <[itchyjunk]> i am not sure if that idea is right not not
[00:10:03] <[itchyjunk]> passing f to go, it seemded like a good idea but now i'm too confused to know
[00:10:06] <GeDaMo> f has to go somewhere :P
[00:10:11] <[itchyjunk]> hmm true
[00:10:37] *** Quits: stagas (~stagas@2a02:587:c421:9272:1d6e:80:f414:a49d) (Ping timeout: 268 seconds)
[00:10:47] <GeDaMo> filter :: (a -> Bool) -> [a] -> [a]
[00:10:53] <[itchyjunk]> yes
[00:10:59] <sonny> I'm gonna try filter now :P
[00:11:21] <GeDaMo> I thought that's what you were writing now :|
[00:14:33] *** Joins: williewillus (~williewil@user/williewillus)
[00:15:22] <sonny> GeDaMo: that was reverse before remember?
[00:15:34] *** Joins: NewGuy22 (~NewGuy22@109.166.134.7)
[00:15:41] <GeDaMo> What was reverse before?
[00:16:22] *** Joins: migvie (~migvie@84.66.4.83)
[00:16:43] *** Quits: NewGuy22 (~NewGuy22@109.166.134.7) (Client Quit)
[00:16:47] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[00:17:07] <Zogatribe> I am looking forward to implementing haskell.
[00:17:54] *** Joins: NewGuy22 (~NewGuy22@109.166.134.7)
[00:17:58] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[00:17:58] <GeDaMo> There was an obfuscated C contest entry which was a simple Haskell implementation
[00:18:15] <sonny> GeDaMo: `reverse = foldl (\x y -> [y:x]) []`
[00:18:28] *** Quits: NewGuy22 (~NewGuy22@109.166.134.7) (Client Quit)
[00:19:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:20:13] <sonny> ok, I'm just confusing, I''ll just put my solution out soon 
[00:21:19] <GeDaMo> sonny: oh, sorry, I thought it was [itchyjunk] who said "I'm gonna try filter now"
[00:21:53] <GeDaMo> I think I confused both of us :P
[00:22:46] <GeDaMo> Zogatribe: https://www.ioccc.org/2019/lynn/hint.html
[00:22:48] <bayaz> Title: Most functional compiler 
[00:23:40] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[00:25:40] <Zogatribe> GeDaMo: I am making my own universal compiler that can compile any programming language.
[00:26:20] <ProfSimm> Zogatribe: LLVM is a bit of a generic compiler framework itself
[00:26:26] <GeDaMo> https://bootstrapping.miraheze.org/wiki/Main_Page
[00:26:27] <bayaz> Title: Main Page 
[00:26:53] <GeDaMo> "This wiki is about bootstrapping, i.e., building up compilers and interpreters and tools from nothing."
[00:26:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[00:28:01] <Zogatribe> if I had to bootstrap then I would probably create assembler first, then C
[00:28:36] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:28:40] <GeDaMo> Writing a Forth is likely easier than writing an assembler
[00:29:00] <Zogatribe> possibly
[00:29:14] <pyzozord> Just had an idea about a static analysis tool that is kind of like cyclomatic complexity analysis but it instead measures cognitive load of a reader
[00:29:17] <Zogatribe> I just don't like working with machine code
[00:29:27] <Zogatribe> this isn't the 1980s
[00:29:33] <flakland> all those hours you have to spend reading the manual
[00:29:35] <GeDaMo> "PEG-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_PEG.pdf
[00:29:35] <bayaz> Type: application/pdf Size: 351.0 kB 
[00:29:57] <FloridaMan> pyzozord: you can call the measure "toomuchness"
[00:30:08] <nomagno> Zogatribe: Working with machine code hasn't been common since the 1970s
[00:30:14] <nomagno> You write in assembly
[00:30:15] <Zogatribe> 1980s
[00:30:22] <pyzozord> FloridaMan: the wtf-score
[00:30:35] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[00:30:38] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[00:31:10] <pyzozord> https://commadot.com/wtf-per-minute/
[00:31:10] <bayaz> Title: One moment, please... 
[00:31:11] <FloridaMan> 1.22 toomuchnesses
[00:31:15] <FloridaMan> uh oh, gotta refactor
[00:31:15] <nomagno> Zogatribe: Assembly was in widespread use before thay
[00:31:23] <nomagno> Unless you're conflating assembly and machine code?
[00:31:24] <Zogatribe> Sinclair ZX Spectrum didn't have an assembler in its ROM so you ended up poking opcodes from BASIC
[00:31:45] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:31:51] <nomagno> Zogatribe: That sounds like a huge oversight
[00:31:56] <pyzozord> Zogatribe: how is writing assemlby "the 80s"? You still have hardware, something needs to operate it
[00:32:14] <nomagno> ^
[00:32:18] <Zogatribe> pyzozord: I said machine code, not assembly
[00:32:25] <nomagno> Also ^
[00:32:30] <pyzozord> aha ok then
[00:32:33] *** Joins: hololeap_ (~hololeap@user/hololeap)
[00:32:46] <ProfSimm> Writing assembly is the 80s, because compilers have become better at writing it than we are.
[00:32:53] <Zogatribe> C -> assembly -> machine code
[00:32:57] <pyzozord> as far as I know machine code is litearlly binary representation of assemlby
[00:33:22] <nomagno> pyzozord: No, most assembly languages contain abstractions over machine code
[00:33:23] <ProfSimm> Modern CPUs have too many arbitrary incantation patterns for a human to use in manually writing assembler
[00:33:39] <flakland> some machines abstract the machine code too
[00:33:42] <pyzozord> nomagno: right like labels and stuff, fair enough
[00:34:12] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:21] <nomagno> x86 is kinda very a cursed architecture
[00:34:24] <pyzozord> somehow I am more intimidated by number of c++ syntaxes than number of x86_64 opcodes
[00:34:33] *** hololeap_ is now known as hololeap
[00:34:46] <flakland> yeah very spooky
[00:34:49] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[00:34:58] <arahael> [&]pyzozord("really?")
[00:35:08] <ProfSimm> nomagno: they all become cursed over time
[00:35:25] <deniska> pyzozord = delete;
[00:35:33] <ProfSimm> nomagno: entropy is inevitable
[00:35:35] <pyzozord> yeah, assemlby feels like a lot of busy work, but less complex. Demanding more more time, but less cognitive load
[00:35:37] <flakland> did superH ever receive a curse?
[00:35:41] *** Quits: inomoz (~inomoz@176.59.115.245) (Remote host closed the connection)
[00:36:18] <[itchyjunk]> if x > 5 then x else ?
[00:36:23] <[itchyjunk]> god damnit this thing agian
[00:36:26] <pyzozord> like how do you get do another country by operating an airplane vs bike
[00:36:26] <Zogatribe> assembly is simple however assembly programs for anything non-trivial are not
[00:36:29] <NGC3982> oh, math!
[00:36:32] <nomagno> ProfSimm: The 8086 instruction set was already cursed
[00:36:33] <nomagno> And that's from the 70s
[00:36:35] <pyzozord> bike is less intimidating
[00:36:47] *** Quits: migvie (~migvie@84.66.4.83) (Ping timeout: 256 seconds)
[00:37:03] <Zogatribe> higher level programming languages pull complexity from the user program into the language itself
[00:37:21] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[00:37:25] <Zogatribe> C++ is very complicated language but that tends to result in C++ programs being simple
[00:37:30] <nomagno> I find C to strike a very nice balance, which is what it was designed for in the first place
[00:37:33] <Zogatribe> libraries help with that too of course
[00:37:48] <pyzozord> yes, well we didn't talk about the complexity of the program we need to write in assembly/c++ :P
[00:37:52] <pyzozord> I assumed simple programs :P
[00:38:04] <NGC3982> that's why im still a sas programmet. complicated language AND complicated programs. :E
[00:38:19] <williewillus> what's sas?
[00:38:35] <NGC3982> statistical language created back when humans talked moon languages
[00:38:48] <[itchyjunk]> wtf the solution suddenly came to me?
[00:39:02] <FloridaMan> [itchyjunk]: welcome to programming
[00:39:13] <pyzozord> I assumed the other country is 2 days away by bike, not 2 months away :P
[00:39:41] <pyzozord> say a week to make it more reasonable
[00:40:01] <[itchyjunk]> https://bpa.st/CPTA
[00:40:02] <bayaz> Title: View paste CPTA 
[00:40:08] <[itchyjunk]> this is the weridest feeling
[00:40:15] <[itchyjunk]> it's like it's not me coming up with solution
[00:40:19] <GeDaMo> [itchyjunk]: just xs ?
[00:40:26] <[itchyjunk]> oh it's not correct?
[00:40:36] <GeDaMo> You can't have an empty else
[00:40:48] <GeDaMo> You have to return something in the else clause
[00:41:00] <[itchyjunk]> oh are you answering to my previous question? yeah i found a solution to that
[00:41:06] <[itchyjunk]> which was to use just xs
[00:43:05] <[itchyjunk]> oops i pasted wrong solution
[00:43:11] <GeDaMo> Are you stuck on something else?
[00:43:23] <[itchyjunk]> https://bpa.st/HDDQ
[00:43:24] <bayaz> Title: View paste HDDQ 
[00:43:38] <[itchyjunk]> somehow the xs disappeared in the paste
[00:43:52] <GeDaMo> That's it! Somehow! :P
[00:44:13] <[itchyjunk]> i think i ctrl z'ed instead of ctrl c'ed my document
[00:44:14] <[itchyjunk]> :D
[00:44:41] <ProfSimm> I wish I could see how aliens program
[00:44:52] <ProfSimm> Get some different perspectives wash over me
[00:45:03] <[itchyjunk]> I suppose i need to use this new found knowladge to implement that string thing i was orignally working on
[00:45:06] <[itchyjunk]> but i'll do that later
[00:45:12] <[itchyjunk]> blargh /o\
[00:45:57] * [itchyjunk] goes to play video game
[00:47:08] *** Quits: rito_ (~rito_gh@45.112.243.149) (Quit: Leaving)
[00:47:28] <[itchyjunk]> the (a -> Bool) is a little mind bendy since i am using it for the first time
[00:47:46] <[itchyjunk]> since i need to think of it as partially applied function like a > 5 or somesuch
[00:47:47] <[itchyjunk]> hmmm
[00:49:48] <sonny> is there an identity for : ?
[00:50:18] <GeDaMo> [] ?
[00:50:35] <sonny> ok, I'll try that
[00:50:47] <sonny> seems intuative but I can't explain why
[00:51:48] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[00:52:03] *** Joins: freepp (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[00:52:23] *** Quits: freepp (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[00:52:25] *** Quits: magla (~gelignite@55d47b01.access.ecotel.net) (Quit: Stay safe!)
[00:52:37] <sonny> oof, just realized I'm going about this the wrong way
[00:54:21] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[00:57:15] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[00:57:29] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:01:01] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[01:01:14] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[01:01:21] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[01:01:22] *** Joins: jazzy (~jaziz@user/jaziz)
[01:01:42] *** Joins: pulse (~pulse@user/pulse)
[01:02:05] <pyzozord> wow the traditional variable names i,j,k..n are used for indexing because variables starting with these letters in fortran were integers
[01:02:58] <pyzozord> and I suppose fortran took the inspiration from maths as it was a FORmula TRANslator
[01:05:06] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[01:05:26] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:05:40] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:06:01] <vdamewood> pyzozord: Yeah. Programming history is interesting.
[01:06:23] <beaky> from opengl to vulkan how will i ever learn modern graphics programming at this rate http://sol.gfxile.net/temp/hellotriangle.png
[01:06:36] *** Quits: Leone (~Leo@157.52.18.77) ()
[01:07:03] <pyzozord> some history is good, it puts things in perspective makes it easier to remember
[01:07:06] <mrig> https://www.youtube.com/watch?v=dDsWTyLEgbk
[01:07:07] <bayaz> Title: Oral History of John Backus 
[01:07:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:07:24] <pyzozord> I wish I had more interest in human history
[01:07:37] <vdamewood> Human history is fascinating too.
[01:07:46] <deniska> beaky: vulkan pushed SDL author to start working on 3d rendering in SDL2
[01:07:51] <pyzozord> I kind of find it fascinating but kind of don't know how to go about learning it
[01:07:58] *** Joins: tomathy (~jenova@user/quetzl)
[01:08:00] <vdamewood> It's especially fun to compare the timelines of different civilizations and see who was doing what at the same time as others.
[01:08:04] <tomathy> IDEs ruin programming 
[01:08:13] <deniska> vulkan is basically one level lower compared to opengl
[01:08:21] <flakland> beaky, go retro and write your own raytracer
[01:08:30] <matrox> some languages are unusable without IDEs
[01:08:37] <vdamewood> pyzozord: Like, did you know that the Japanese were just learning to read and write when Rome was getting sacked by the Goths?
[01:08:41] <deniska> Tired: writing your own raytracer. Wired: writing your own rasterizer
[01:09:18] <pyzozord> All periods are very fascinating, but I think ancient greece is the most interesting for me at least right now because in my head that's where the western civilization started including science, philosophy, math and art
[01:09:22] <beaky> yes ive been trying my own raytracer for years im still stuck on that 'raytracing in a weekend' tutorial
[01:09:30] <flakland> lol
[01:09:51] <vdamewood> pyzozord: Ah, but the fun part is that there are multiple periods of even Ancient Greece.
[01:09:54] *** Joins: Pickchea (~private@user/pickchea)
[01:09:56] <pyzozord> yeah the sengoku period of Japan is super fascinating too, and it's culture
[01:10:02] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[01:10:26] <sonny> thought the west started in britania
[01:10:41] <vdamewood> sonny: Define 'start'.
[01:10:44] <NGC3982> since we are already off-topic, here is a very, very expensive drill bit: https://twitter.com/MarsMissionImgs/status/1480290289264697344
[01:10:50] <pyzozord> I learned about it when I was a kid from the first Total War game Shogun. It had included a cool website on the CD rom with music and some articles about that period
[01:10:55] <vdamewood> NGC3982: Drilling is boring.
[01:11:02] <pyzozord> at least in the polish version
[01:11:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:11:10] <NGC3982> on mars, with a robot? psst.
[01:11:17] <mrig> topic oh nice, a peanut in every byte!
[01:11:22] <vdamewood> NGC3982: No, I mean that literally. 'Boring'.
[01:11:24] <sonny> vdamewood: just seemed less slipery than using greece
[01:11:37] <NGC3982> vdamewood: oh. lol. yey jokes!
[01:11:51] <vdamewood> sonny: Well, That's where we slipped into Western Civilization.
[01:12:08] <NGC3982> Western Civitization 6.
[01:12:21] <vdamewood> NGC3982: I still need one expansion.
[01:12:26] <sonny> touche
[01:12:42] <vdamewood> I managed to get the base game and most of the expansions for like $40.
[01:12:55] <deniska> civ5 is my favorite civ so far
[01:12:56] *** Joins: Leone (~Leo@157.52.18.77)
[01:12:59] <deniska> didn't try 6 yet though
[01:13:06] <arahael> I don't think I moved past Civ 3, or 4.
[01:13:42] <vdamewood> I still think 'Gandhi goes nuclear' is a good album name.
[01:13:43] <deniska> I have a lot of fond memories of 3 because I watched my dad play it, and then played it myself for a while
[01:13:55] <pyzozord> also interested in the polish pegan roots but we were like barbarians and forest people for 996 years so there isn't that much of that history preserved
[01:14:09] <deniska> civ4 was kinda meh, but it was also the reason I learned python
[01:14:21] <vdamewood> pyzozord: Polish history is a tug of war between the Prussians and the Russians.
[01:14:42] <pyzozord> so western roots are kind of all roots polish people have left, since half of their roots were wiped out
[01:14:50] <vdamewood> pyzozord: "Are we being subjugated by the people with the P or without, this year?"
[01:14:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:15:02] <arahael> vdamewood: You say that as if we still have Prussians?
[01:15:18] <vdamewood> arahael: Well, the Capital of Germany is still Berlin.
[01:15:34] <pyzozord> vdamewood: yeah although the geopolitical history is somehow less interesting for me
[01:15:35] <arahael> Ah, but isn't that just a historical artifact now?
[01:15:39] <vdamewood> The Prussians didn't go away, they just assimilated the rest of Germany.
[01:15:41] <NGC3982> in my galaxy, we do not have capitals
[01:15:49] <arahael> vdamewood: Ah, that sounds about right, then.
[01:16:03] <vdamewood> (Except for Hapsburg Austria)
[01:16:06] <pyzozord> I'm more interested in the culture, science, art, how people lived, what they thought. How life was back there really
[01:16:18] <mrig> Grr still getting a mouse freeze issue, just when I thought thought that I'd found a cheeky way to solved it.
[01:16:42] <vdamewood> Beep, beep. I'm a jeep.
[01:16:55] <vdamewood> I
[01:17:07] <vdamewood> Damn return key.
[01:17:07] <flakland> mouse freeze!?
[01:17:12] <arahael> pyzozord: The geopolitics can give a pretty insightful glimpse into parts of that.
[01:17:12] <flakland> what OS is this
[01:17:15] <vdamewood> flakland: Put the mouse in the freezer.
[01:17:37] <pulse> the OS of love
[01:17:41] <arahael> pyzozord: Lots of war and strife generally results in the population feeling less secure, as an example.
[01:17:44] <flakland> maybe for a few seconds to cool em off?
[01:17:45] <vdamewood> pulse: FreeBSd?
[01:17:49] <pyzozord> arahael: yeah for sure, it's all interlocking systems, cannot be separated that much
[01:17:54] <pulse> windows 3.1 NT
[01:17:54] <arahael> Right.
[01:18:11] <mrig> Fairly recent satellite tec has thrown up some fantastic new archaeological info that sheds light on culture that was more wood based than stone.
[01:18:24] <mrig> much more intricate than previously thought.
[01:18:50] * vdamewood makes a stone axe with wood handle.
[01:18:54] <flakland> i need more info on human settlements in beringia
[01:19:22] <vdamewood> There were settlements in Beringia? I thought they just walked through.
[01:19:41] <flakland> i read that "settlements" were found but have not found any evidence of these claims
[01:19:55] <arahael> vdamewood: Historically, most places, I think, preferred to have settlements about a day's walk apart.
[01:19:57] <flakland> but yeah, it's far under the ocean now
[01:20:24] <arahael> vdamewood: The car has *completely* changed that.  So many villages and towns lost.
[01:20:31] <vdamewood> flakland: Doesn't it suck when you read something that, if true, would be fascinating, but then you can't find anything to back it up?
[01:20:54] <vdamewood> arahael: Reminds me of the 'rest stops' along the Silk Road.
[01:20:54] * arahael throws in a [citation needed]
[01:20:59] <mrig> flakland: I'm getting it with gnome on both debian and ubuntu
[01:21:11] <mrig> takes a right click to free it :|
[01:21:21] <arahael> vdamewood: I don't know much about that, but 'rest stops' sound about right for some of them. :)
[01:21:22] <flakland> mrig, any info in dmesg about the mouse?
[01:21:35] <flakland> wow that is weird, 
[01:22:11] <mrig> I suspect my keyboard at the moment, not sure why just a hunch.
[01:22:11] <vdamewood> arahael: There were camps along the Silk Road where travellers could stop, eat, sleep, and what not. They often weren't full settlements, but were kind of like modern day truck stops.
[01:22:54] <arahael> vdamewood: Ah. The surrounding land must not have been viable.
[01:23:10] *** Joins: forbes-award (~forbes@36.68.41.161)
[01:23:18] <vdamewood> arahael: I doubt they were close to water sources, at least.
[01:23:35] <arahael> Yeah, that's a good point.
[01:23:44] * forbes-award hi all anyone wanna chat for 0day chat , come to efnet channel #holyhacker , anyone need to be awarded at forbes magazine come there too.
[01:24:05] <mrig> flakland: dont think I have that on systemd could look through that when it next happens I'll make a not of the time.
[01:24:22] <mrig> with journalctl perhpas?
[01:24:37] * forbes-award hi all anyone wanna chat for 0day chat , come to efnet channel #holyhacker , anyone need to be awarded at forbes magazine come there too.
[01:24:43] <vdamewood> !k forbes-award 
[01:24:44] *** forbes-award was kicked by bayaz (forbes-award)
[01:24:57] *** Joins: forbes-award (~forbes@36.68.41.161)
[01:25:02] <pyzozord> also learning some history can help you now. For example I always wondered where all these 1 letter variables ended. Now I know: it's until the n, because that's what fortran did.
[01:25:07] <vdamewood> !kb forbes-award 
[01:25:08] *** bayaz sets mode: +b *!*@36.68.41.161
[01:25:08] *** forbes-award was kicked by bayaz (forbes-award)
[01:25:27] <pulse> forbes has really shifted their marketing strategy
[01:25:32] <pyzozord> lol
[01:25:34] <flakland> mrig: cat -v /proc/kmsg
[01:26:02] <tomathy> would you say being afk for 4 years makes you unsuitable for a programming career?
[01:26:14] <arahael> pulse: They sold their brand for articles a long time ago.  Forbes articles are mostly "sponsored" articles, I think.
[01:26:47] <pulse> isn't that the site that nags at you that you should remove the adblocker
[01:26:56] <arahael> tomathy: With absolutely nothing to show for it? Definitely a red flag.
[01:26:59] <pulse> and then you do, and then the article is 2% of the content and the ads fill the other 98%
[01:27:25] * bayaz warns deniska: Hi, person, or otherwise.
[01:27:25] <tomathy> arahael: absolute nothing, the only achievment i made was i now have a crappy website
[01:27:36] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[01:27:56] <mrig> flakland: nothing showing there at ail.
[01:28:18] <flakland> guess they turned linux desktop into a mystery funhouse
[01:28:25] <mrig> heh
[01:28:51] <arahael> tomathy: Well, if you even make it to the interview, they'll be very interested to know what was happening, that website is something, at least.  You might have to job-hop for a bit to get things back up and going again.
[01:29:00] <vdamewood> !ops
[01:29:01] <bayaz> Admins are: mrig, vdamewood, jeaye, deniska, pulse, arahael, inphase
[01:29:15] *** Joins: src (~src@user/src)
[01:29:24] <vdamewood> Okay, that's weird.
[01:29:26] <flakland> !bots
[01:29:38] *** Quits: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net) (Ping timeout: 256 seconds)
[01:29:43] <vdamewood> bots are: bayaz, flakland, pulse
[01:29:44] <mrig> I've no idea really with this sort of thing on the desktop; A part of me is tempted to go full minimalist and really learn the nitigritty though, but just not right now.
[01:29:52] *** Joins: pheron (~pheron@8ta-229-148-03.telkomadsl.co.za)
[01:29:53] <pulse> what? hey!
[01:29:58] <pyzozord> :D
[01:30:14] <flakland> |^:
[01:30:21] <pulse> mrig, full minimalist means empty room + desk and pc
[01:30:29] <pulse> are you willing to go _that_ far
[01:31:02] <deniska> debugging bot issues
[01:31:04] <EdFletcher> if i had feelings i'd be hurt. i admitted to being a robot and i'm not on that list? 
[01:31:05] <flakland> mrig: lsof | grep '/dev/input'
[01:31:10] <mrig> oh no, in a large plush beanbag, but bare bones linux kernel with nought but a wooden font ans some matches to get it started.
[01:31:10] <flakland> thats where i would start
[01:31:10] <pyzozord> mrig: something something from scratch something universe
[01:31:23] *** Joins: aqua (~aqua@user/aqua)
[01:31:25] *** Joins: stagas (~stagas@2a02:587:c421:9272:39c:4021:871d:bf87)
[01:31:28] <pulse> somehow i read that as wooden ants
[01:31:37] <vdamewood> EdFletcher: Yeah, our bot lists are broken at the moment. bayaz doesn't act like deniska is an op.
[01:32:02] <EdFletcher> vdamewood: haha yup i was guessing as much, looks like it's a bit confused. we all have those days! 
[01:32:20] <deniska> yeah, I was already trying to remember which *serv I should msg to op myself
[01:32:29] <deniska> Like in ancient times
[01:32:34] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[01:32:37] <pyzozord> maybe it's about the ~ thing
[01:32:41] * arahael gives bayaz a friendly pat.
[01:32:46] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:33:04] <arahael> pyzozord: That's a good point, but I thought that was fixed.
[01:33:06] <pyzozord> I think bayaz ignores ops with ~ thing
[01:33:14] <EdFletcher> i've been actually wondering about bayaz, it seems to create bold text in a weird way (using the bold escape code to start but then "reset" to end, which i've not seen before) 
[01:33:15] <deniska> ~ thing?
[01:33:19] <EdFletcher> is it open source? 
[01:33:21] <deniska> Should I see a doctor? :)
[01:33:30] <pyzozord> deniska: ~denis@user/deniska
[01:33:54] *** Joins: inky (~inky@46.36.113.139)
[01:33:57] <pyzozord> but then again maybe not
[01:34:25] *** Joins: forbes-award-- (~forbes@36.83.187.141)
[01:34:35] *** Quits: forbes-award-- (~forbes@36.83.187.141) (K-Lined)
[01:34:39] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[01:35:05] <mrig> flakland: oh do these output data as a stream?
[01:35:12] <vdamewood> pyzozord: nope. I'm the same as deniska re ~
[01:35:34] <pyzozord> yeah, maybe it was the opposite and bayaz wanted people to have ~
[01:35:44] <flakland> the devices? yeah -- but i was thinking to investigate what program has your mouse open and why it's failing so hard
[01:35:52] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 256 seconds)
[01:36:16] <arahael> EdFletcher: I believe it is - it's written in Clojure, though I don't have the link on hand right now I'm afraid.
[01:36:27] <arahael> EdFletcher: Uses some java library for IRC, though, if I recall correctly.
[01:36:51] <vdamewood> EdFletcher arahael: https://github.com/libera-programming/bayaz
[01:36:52] <bayaz> Title: GitHub - libera-programming/bayaz: Bayaz, the First of the Magi, is an enigmatic ancient wizard with eyes and ears seemingly everywhere. 
[01:37:07] *** aqua is now known as kish`
[01:37:10] <EdFletcher> vdamewood: arahael: awesome thank you both! looking forward to studying it 
[01:37:21] <arahael> EdFletcher: My favorite part is the readme. :D
[01:37:53] <EdFletcher> arahael: "A man used to giving orders, and to being obeyed." 😆 👏 
[01:37:56] <EdFletcher> truly excellent indeed 
[01:38:33] <flakland> (here is some info on parsing the stream output: https://www.kernel.org/doc/html/latest/input/event-codes.html )  it's pretty simple to work with until you get into multitouch devices
[01:38:33] <bayaz> Title: 2. Input event codes ? The Linux Kernel documentation 
[01:38:56] <arahael> EdFletcher: Yep! ;D
[01:39:05] <flakland> so surely the bug must lie in whatever is reading the stream, or the hardware itself
[01:40:12] <mrig> flakland: this is since the kernel update 5.4.170 so far as I'm aware.
[01:40:20] <beaky> what is the most efficient way to manage memory when you have a lot of temporary data https://signalsandthreads.com/memory-management/
[01:40:21] <bayaz> Title: Signals and Threads | Memory Management 
[01:41:20] <flakland> if it's just a standard USB mouse i really don't know what they could have screwed up 
[01:41:50] <vdamewood> Why does the SI define the ampere as a base unit instead of the coulomb?
[01:42:48] *** Joins: sabry (~sabry@197.37.72.225)
[01:43:06] *** Quits: xff0x (~xff0x@2001:1a81:52d4:9900:4d46:915d:4480:7a51) (Remote host closed the connection)
[01:43:23] *** Joins: xff0x (~xff0x@2001:1a81:52d4:9900:5627:62b8:c837:dd4a)
[01:43:58] <ProfSimm> vdamewood: same reason it's Pi and not Tau
[01:44:01] <PlanckWalk> Amperes are easier to measure very precisely
[01:44:26] <vdamewood> ProfSimm PlanckWalk: Thanks.
[01:44:51] <PlanckWalk> That may change in the future, and then they'll probably change to coulombs
[01:45:00] <PlanckWalk> Or some even weirder unit :-p
[01:45:01] <mrig> flakland: thank you I am going to have a read of that and investigate further, see if it is the hardware or not, I can use my touch pad a while and see if it happens with that at all.
[01:45:16] <mrig> thanks for your thoughts.
[01:45:31] *** Joins: illusion434 (~illusion4@185.135.96.133)
[01:46:06] <mrig> It is tied to firefox, seems to happen when it is open. But then I only really use the mouse in the browser too.
[01:46:28] <flakland> if it happens with a different mouse then you can probably eliminate "hardware issue", unless the USB hardware is failing, the port/chip
[01:46:29] *** Joins: sslfree- (~sslfree@125.165.107.55)
[01:46:54] *** Quits: sslfree- (~sslfree@125.165.107.55) (K-Lined)
[01:46:56] <mrig> clearly need to isolate the conditions under which it is occurring see if I can trigger it somehow.
[01:47:08] <ProfSimm> Can you folks feed me a pointer to some radical new architecture, or programming paradigm or language, that made an impression on your last
[01:47:18] <ProfSimm> you*
[01:47:32] <PlanckWalk> (Which is the same reason by the metre is defined indirectly via the second and speed of light.  We can measure seconds *ridiculously* more precisely than distance directly)
[01:47:56] *** Quits: Narrat (~omnius@p200300df5f0ef9dc06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:48:46] <vdamewood> PlanckWalk: Yeah, makes sense.
[01:49:02] <vdamewood> PlanckWalk: Jus count to count transitions.
[01:49:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:49:08] <vdamewood> s/count/got/
[01:49:13] <flakland> WTF lol, it only happens in firefox, wow.  
[01:49:14] *** Joins: retsi (~retsi@45.227.79.168)
[01:49:16] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:49:28] <ProfSimm> Well the metre was defined as a fraction of the speed of light because it doesn't change. While that slab of whatever we had prior kept eroding
[01:49:52] <ProfSimm> Similar thing happened with the kilogram
[01:49:57] * vdamewood files the end of the prototype meter a little.
[01:50:04] *** Quits: illusion434 (~illusion4@185.135.96.133) (Client Quit)
[01:50:12] <vdamewood> There, now I'm 2 meters tall.
[01:50:23] <ProfSimm> Imagine there was a single thing in the world from which copies were made, from which all other scales were measured. That's weird
[01:50:29] <pulse> but speed of light is a velocity .oO( ? )
[01:50:47] <vdamewood> pulse: *fraction of the speed of light per second
[01:51:03] <pulse> speed of light per second?
[01:51:04] <pulse> :D
[01:51:06] <InPhase> vdamewood: That would be an acceleration.
[01:51:12] <Inst> can i ask a question about pipelines, streams, and so on?
[01:51:16] <PlanckWalk> Yeah, the prototype kilogram only recently went out.
[01:51:20] <vdamewood> pulse: *fraction of the speed of light times a second
[01:51:31] <InPhase> The meter is defined as a fixed fraction of the distance light travels in one second.
[01:51:32] <ProfSimm> pulse: distance that light passes for a period of time
[01:51:35] <pulse> ok that does make sense
[01:51:41] <pulse> but then you have to define a second too
[01:51:47] <bjs> pulse: I mean speed of light isn't really a velocity. An object moving at that speed would have a velocity
[01:51:49] <pulse> isn't that worse than defining a meter
[01:51:50] <InPhase> Yes, which is defined based on atomic clocks.
[01:51:59] <PlanckWalk> Yep, and the second is defined in terms of atomic properties
[01:51:59] <InPhase> Atomic clocks are ultra precise.
[01:52:01] <ProfSimm> Which if you think too much about it is nothing, because light moves at the speed of time, and time moves at the distance of light speed 
[01:52:09] <ProfSimm> And time and length are relative. And nothing matters 
[01:52:09] <PlanckWalk> And the clocks based on those properties are amazingly precise
[01:52:41] <Zogatribe> rhubarb
[01:53:00] <ProfSimm> Imagine the speed of light changes in time. That'd be like a major bummer for the meter again
[01:53:02] <InPhase> And most importantly, atomic clocks are based on fundamental properties, so the time rate that they measure does not drift over time.
[01:53:14] <vdamewood> Inst: You can ask about those things sure. But you can't ask if it's okay to ask a question.
[01:53:17] <ProfSimm> InPhase: as far as we know, that is
[01:53:31] <Inst> "don't ask to ask"
[01:53:35] <Zogatribe> atomic clocks at sea level?
[01:53:38] <InPhase> Yes, provided the physical constants remain constant.
[01:53:43] <Inst> there's a coding structure I'm familiar with
[01:53:45] <ProfSimm> InPhase: there's some evidence that some of the cosmological constants we take for granted actually shift throughout space and time
[01:53:55] <Inst> i.e, a function takes another function as an argument, which takes another function as an argument
[01:54:04] <InPhase> ProfSimm: Not good evidence, but there have been some speculations about it.
[01:54:05] <Inst> this isn't first class functions, although it requires first class functions
[01:54:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[01:54:32] <Inst> i.e, it looks like function 1 (function 2(function 3(function 4(data))))
[01:54:32] <ProfSimm> InPhase: well the fine structure constant was measured to drift across regions of space
[01:54:35] <vdamewood> Inst: Well, technically you don't need first-class functions. C can do that, but it's functions aren't first class.
[01:54:45] <Inst> I'm not sure what it's called
[01:54:45] <Zogatribe> an atomic clock runs at a different speed based on gravity so are is second defined in terms of atomic clock at sea level? I guess it doesn't matter ..
[01:54:46] <vdamewood> its*
[01:54:49] <Inst> i've heard it called pipes, pipelines
[01:54:55] <Inst> I'm not sure if the standard term might be a stream
[01:55:15] <ProfSimm> Inst: it's lke a pipelines yes 
[01:55:21] *** Joins: lunarkitty (uid501895@user/pyra)
[01:55:21] <ProfSimm> Inst: gotta flip it inside out 
[01:55:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:55:31] <Inst> is pipeline intrinsically a functional programming construct?
[01:55:51] *** Quits: Leone (~Leo@157.52.18.77) (Read error: Connection reset by peer)
[01:55:55] <PlanckWalk> Zogatribe: Everything does, not just atomic clocks
[01:55:59] <ProfSimm> Inst: nah it keeps popping up everywhere. Command line, procedural, streams, functional, middleware in OOP frameworks etc.
[01:56:13] <PlanckWalk> So it doesn't matter.
[01:56:13] <ProfSimm> Inst: it's also how audio processing pipelines (heh?) work and so on
[01:56:20] <PlanckWalk> Well, it matters but not for unit definitions :)
[01:56:24] <ProfSimm> Everything is a pipeline
[01:56:35] <ProfSimm> Feeding output into input.
[01:56:37] <Zogatribe> there are two aspects: speed clock is moving and gravity acting on it .. special and general relativity
[01:56:44] <ProfSimm> The snake eating its own tail. The circle of life
[01:56:54] <Inst> for me, though, it seems like a fundamental unit of function programming
[01:56:57] <Inst> i must be mistaken, though
[01:57:05] <ProfSimm> Inst: it's important in FP for sure
[01:57:14] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:57:15] <ProfSimm> Inst: but there's nothing about it that's specific to FP
[01:57:27] <Inst> well monads are popping up in Java, Javascript
[01:57:27] <vdamewood> We need an SI unit called the pika.
[01:57:30] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[01:57:36] <Inst> specific monads are popping up in C++ (Future, iirc)
[01:57:37] <vdamewood> Then we can have picopikas.
[01:57:43] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[01:57:51] <Inst> vdamewood: are you aware that pikas are real animals?
[01:57:59] <pulse> physics really shouldn't work. the fact that we can measure gravitational waves makes no sense
[01:58:13] <pulse> the same way it doesnt' make sense that we can define a second but we somehow do anyway
[01:58:14] <vdamewood> Inst: Yes. Are you aware that 'pika' as in 'pikachu' is Japanese for 'zap'?
[01:58:45] <Inst> nope!
[01:59:08] <Inst> and quite a few pikas are endangered
[01:59:14] <Inst> so perhaps we'll have a picopika one day :(
[01:59:44] <Inst> the average weight of an american pika is 3.8 ounces
[02:00:05] * vdamewood strokes his fuzzy murder machine.
[02:00:16] <Inst> so about 107.95 grams
[02:00:30] <Inst> a picopika would be 107.95 picograms
[02:01:20] * vdamewood chops 107.95 picograms off of a pika
[02:01:59] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[02:01:59] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:02:35] <Inst> by monads are popping up in javascript / java, etc re prof simm
[02:03:04] <Inst> i mean that even if streams are everywhere, are they "essentially" functional?
[02:03:15] <Inst> since, after all, they don't involve mutable state (if the underlying functions are immutable)
[02:03:21] *** Joins: exvicesindaco_ (~exvicio@host-79-54-77-176.retail.telecomitalia.it)
[02:03:30] <PlanckWalk> Eh, maybe "functional inspired"
[02:03:46] <PlanckWalk> But they're a lot earlier than functional languages or function design
[02:03:50] <Inst> because pretty soon, monads are going to be everywhere, and by the argument that streams are everywhere, monads would no longer be FP
[02:03:57] <Inst> "proto-functional"
[02:04:10] *** Quits: sabry (~sabry@197.37.72.225) (Quit: Client closed)
[02:04:31] <Inst> someone took me to task for claiming that the pattern match was procedural, and they were right, because i didn't even understand what procedural meant
[02:04:37] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 256 seconds)
[02:04:42] <ProfSimm> Inst: I'm not sure if monads will be everywhere. Futures in most languages are monad-like, but don't follow monadic laws strictly
[02:04:43] <PlanckWalk> More that they're a structure that works as well or better with functional design as with procedural.
[02:04:46] *** exvicesindaco_ is now known as exvicesindaco
[02:04:56] <PlanckWalk> (Or other programming paradigms)
[02:05:10] <Inst> it was because pattern matching can be thought of imperatively
[02:05:19] *** Quits: tomathy (~jenova@user/quetzl) (Ping timeout: 268 seconds)
[02:05:20] <ProfSimm> Inst: paradigms overlap. This is not like "us or them" thing.
[02:05:22] <Inst> "go through a list and check if it matches on the list, picking the stuff in order of precedence"
[02:05:30] <Inst> but i looked up procedural
[02:05:32] <PlanckWalk> So it's maybe not so much that they're particularly functional, as that functional programming doesn't work as well with many other structures.
[02:05:44] <Inst> it sounds like how people ended up renaming subroutines functions
[02:05:45] <ProfSimm> Inst: technically all functional languages can be thought of as imperative, because they run on imperative CPUS
[02:05:49] <Inst> like, it seems "proto-functional"
[02:05:52] <mrig> pulsars make good clocks too, how cool is that, we use both ends of the scale for time keeping :)
[02:06:06] <Inst> ProfSimm: I actually like thinking that way, tbh
[02:06:09] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[02:06:14] <PlanckWalk> So streams are what's left after discarding lots of the structures that don't work well with functional design.
[02:06:23] <Inst> i see
[02:06:28] <mrig> stars and radiation.
[02:06:47] <Zogatribe> Inst: subroutines (procedures) and functions are two different things
[02:06:58] <Inst> i'm not an FP fundamentalist, like I've said before, imperative has definite advantages over functional programming in certain fields
[02:07:01] <Inst> according to stroustrup
[02:07:12] <Inst> functions were invented by someone etc... but were eventually renamed functions
[02:07:19] <Inst> erm, subroutines were invented before 1970
[02:07:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[02:07:37] *** Quits: hexingb_ (~hexingb@36.153.84.12) (Ping timeout: 240 seconds)
[02:07:38] *** Joins: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net)
[02:07:46] <Inst> i assume it's because someone noticed the similarity to mathematical functions
[02:08:51] <Inst> https://www.google.com/books/edition/Programming/hxOpAwAAQBAJ?hl=en&gbpv=1&bsq=subroutine
[02:08:52] <bayaz> Title: Programming 
[02:09:30] <Inst> so i'm stating that streams might be considered "proto-functional"
[02:09:41] <Zogatribe> functions don't change state: they return the same value for the same arguments; procedures (subroutines) can change state; this is the difference
[02:10:00] <Inst> well, it's usual programming language
[02:10:06] <Inst> semantic arguments, no?
[02:10:18] <Inst> C / C++ has something they call a function
[02:10:45] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:10:51] <Inst> sorry, not going to sidetrack your regularly scheduled discussion,s have a good one
[02:10:52] <ProfSimm> Inst: function is an example of semantic drift, where a term is borrowed into another area and they botch what it means.
[02:11:14] <Inst> burritos ;)
[02:11:50] *** Joins: Guest40 (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17)
[02:12:06] <ProfSimm> Inst: so now when programmers mean a "function" they say "pure function" and when they mean procedure they say "function"
[02:13:15] <ProfSimm> Inst: it's kind of like when someone says "evolution is just a theory" because they don't know what "theory" means
[02:13:30] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:13:46] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:13:49] *** Joins: mickey8 (~user@user/mickey)
[02:13:56] <Inst> hey, I'm a pyrrhonist!
[02:13:57] <Zogatribe> actually evolution is two things: fact and theory; the theory of evolution attempts to explain the fact of evolution: evolution happens
[02:15:45] <ProfSimm> Fact is an event observed, measured and recorded, and ideally reproduced if it's time invariant etc. I'm not sure evolution fits the definition of an event. It's more of a long-running process.
[02:15:49] *** Quits: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net) (Ping timeout: 240 seconds)
[02:15:51] <Inst> i mean you have the creator of C++ misusing it
[02:16:00] <Zogatribe> ProfSimm: bullshit
[02:16:03] <ProfSimm> Inst: of course
[02:16:15] <ProfSimm> Inst: well he's not a mathematician :P
[02:16:15] <Inst> then again, the reason I ran away from trying to learn C++ into Haskell which was supposed to have been my second language
[02:16:37] <ProfSimm> Zogatribe: is "bullshit" your scientific opinion?
[02:16:41] *** Parts: pheron (~pheron@8ta-229-148-03.telkomadsl.co.za) ()
[02:16:46] <bjs> What you have is one word with multiple related meanings, I personally know exactly what "function" means in terms of mathematics but I'm still happy to call the things in rust defined with `fn` "functions"
[02:16:52] <bjs> and see no contradiction
[02:16:55] <Zogatribe> ProfSimm: bullshit is claiming evolution isn't a fact because it isn't an "event"
[02:17:13] <Inst> was because he was telling his readers in Programming: Principles and Practice that functions shouldn't be too short
[02:17:16] <ProfSimm> Zogatribe: "fact" is not something you just consider to be true or believe in
[02:17:35] <Zogatribe> ProfSimm: evolution is both fact and theory, deal with it
[02:17:48] <Inst> and the entire reason I can't stand imperative programming is because big ass functions (even ones you like or can tolerate) hurt my brain
[02:17:50] *** Quits: Djoobstil (~djoobstil@djoobstil.online) (Quit: Djoobstil)
[02:17:59] <Zogatribe> "Similarly, biologist Richard Lenski says, "Scientific understanding requires both facts and theories that can explain those facts in a coherent manner. Evolution, in this context, is both a fact and a theory. It is an incontrovertible fact that organisms have changed, or evolved, during the history of life on Earth. And biologists have identified and investigated mechanisms that can explain the major patterns of change."[34]"
[02:18:00] <Inst> hence why I am into FP, i.e, finding ways to make computer programming accessible for me and others like me
[02:18:02] <ProfSimm> Zogatribe: see, your use of "fact" is another example of semantic drift
[02:18:06] *** Joins: Djoobstil (~djoobstil@djoobstil.online)
[02:18:28] <Zogatribe> ProfSimm: no, it isn't the problem here is that you are wrong
[02:18:43] <Inst> I deny the existence of facts ;)
[02:18:59] <Inst> or more specifically, I deny that knowledge in an absolute sense is possible
[02:19:20] <Zogatribe> ProfSimm: https://en.wikipedia.org/wiki/Evolution_as_fact_and_theory
[02:19:20] <bayaz> Title: Evolution as fact and theory - Wikipedia 
[02:19:22] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:19:35] <ProfSimm> Zogatribe: evolution is a theoretical model. It's a model. Which means it's a specific representation of how we observer reality. It's not actually reality itself.
[02:19:40] <Zogatribe> ProfSimm: https://en.wikipedia.org/wiki/Evolution_as_fact_and_theory
[02:19:40] <bayaz> Title: Evolution as fact and theory - Wikipedia 
[02:19:42] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:19:57] <Inst> Zogatribe: I mean, lots of people in the sciences have primitive ontologies
[02:20:14] <ProfSimm> Zogatribe: "confusing map and territory" is a very common logical fallacy. Theories are maps. Facts are territory
[02:20:23] <Zogatribe> "... describes fact in science as meaning data, not known with absolute certainty but "confirmed to such a degree that it would be perverse to withhold provisional assent".[1] A scientific theory is a well-substantiated explanation of such facts. The facts of evolution come from observational evidence of current processes, from imperfections in organisms recording historical common descent, and from transitions in the fossil record. Theories of ev
[02:20:47] <Inst> i mean, if you want to have a primitive ontology too
[02:20:57] <Inst> and make statements in your primitive ontology, we can work with that
[02:21:05] <Inst> I was joking about creating a course that'd teach you Haskell in 5.5 hours
[02:21:10] <Inst> actually, probably 8
[02:21:10] <ProfSimm> Zogatribe: there are countless facts that support evolution. That doesn't ontologically make evolution "a fact".
[02:21:13] <Inst> it's a true statement
[02:21:21] <Inst> for some definition of you, Haskell, and 5.5 hours ;)
[02:21:23] <Inst> also, teach
[02:21:31] <Zogatribe> ProfSimm: evolution happens: this is a fact.
[02:21:40] <Inst> happening is impossible
[02:21:50] <ProfSimm> Zogatribe: colloquially you can say that. But scientifically you can't.
[02:21:58] <Zogatribe> ProfSimm: you are a fucking idiot.
[02:22:11] <Inst> And Zogatribe doesn't understand why I'm claiming he has a primitive ontology
[02:22:48] <leonardus> Let's talk about programming.
[02:22:58] <Inst> how is Rust coming along?
[02:23:02] <Inst> Should I feel sad if Rust displaces C?
[02:23:27] <leonardus> I think Rust is more likely to displace C++ if anything.
[02:23:33] <Zogatribe> Rust is more likely to replace C++ than C however Rust won't replace C++.
[02:23:45] <Inst> I'm glad
[02:23:47] <ProfSimm> Zogatribe: your own article says "Fact is often used by scientists to refer to experimental or empirical data or objective verifiable observations." and then adds ""Fact" is also used in a wider sense to mean any theory for which there is overwhelming evidence". Keyword "in wider sense". 
[02:23:54] <summonner> Rust won't. They talk a big game, but most of the code written appears to be in unsafe mode (haven't seen too much but seen enough for me)
[02:24:11] <Inst> what's wrong with unsafe mode?
[02:24:24] <Zogatribe> ProfSimm: indeed, the article agrees with me not you; you can pretend otherwise, I don't give a fuck
[02:24:37] <ProfSimm> Zogatribe: do you understand what "in wider sense" means
[02:24:41] <Inst> i mean that's my view on imperative vs functional programming, you need imperative programming for applications where performance is paramount
[02:24:54] <ProfSimm> Zogatribe: it means it's not the original sense of the word
[02:24:57] <Inst> when it's not, you should default to functional programming
[02:25:41] <Zogatribe> ProfSimm: you are one of those people who can never admit they are wrong; they attempt to obfuscate and backtrack to cover up their mistakes.
[02:25:42] <summonner> It's Rust's A-Number-1 selling point to the masses.  "write unhackable code!" "never deal with buffer overruns again!" "kernel safe!" "Linux should be written in Rust!"
[02:25:45] <leonardus> Zogatribe, ProfSimm: hey guys, what do you think about Rust?
[02:25:54] <Inst> i.e, it's a scam
[02:26:14] <summonner> it's unrealistic expectations
[02:26:15] <ProfSimm> Zogatribe: I wouldn't even bother making the distinction. But I'm making it because you literally interjected into a conversation about SEMANTIC DRIFT IN WORDS.
[02:26:49] <Zogatribe> ooh ProfSimm brings out the capital letters; he has certainly convinced me.
[02:26:57] <FloridaMan> Well, my observation is this, ProfSimm: yesterday you had an issue with someone and they took issue with you as well, and today the same thing with a different person
[02:27:00] <Inst> tbh, a good programming language should have strong support for both functional and imperative modes of operation
[02:27:01] <FloridaMan> noticing a pattern here?
[02:27:04] <ProfSimm> Zogatribe: I was literally giving this example about what "theory" is as a semantic drift. And you then come in and start insulting me because I don't want to call a "fact" something that's not ontologically a fact.
[02:27:12] <FloridaMan> it seems like you're the common thread
[02:27:17] <Inst> I don't think Zogatribe understands what ontology is
[02:27:48] <mrig> I quite often agree with what ProfSimm is saying.
[02:27:53] <FloridaMan> either that or you're just being persecuted
[02:28:05] *** Quits: Valware (~val@Valeyard/Developer/Valware) (Remote host closed the connection)
[02:28:09] <FloridaMan> I agreed with a lot of what he was saying yesterday
[02:28:26] <Inst> i think he's probably "naive" in terms of epistemology and ontology, so you could probably just hide behind that while he can't navigate the concepts being discussed
[02:28:30] <FloridaMan> I'm just saying that it's odd that two days in a row there seems to be a battle of words being had
[02:28:40] <FloridaMan> with different people
[02:28:49] <mrig> and think that abusive language and remarks have been made that are completely uncivil.
[02:29:15] <Inst> re rust, imo, rust is a step in the right direction
[02:29:26] <mrig> I've not used rust yet.
[02:29:28] <ProfSimm> FloridaMan: there's a common thread, but what drove me batty yesterday was someone was trying incessantly to put words into my mouth.
[02:29:30] <Inst> you could argue that the problem with Rust is that Rust programmers are, well, a representative subset of the larger programming community
[02:29:37] <Inst> what I wish Haskell had
[02:29:39] <Inst> was a sublanguage
[02:29:45] <Inst> that could achieve C-levels of performance
[02:29:47] <FloridaMan> re: Rust and Linux, it's likely Rust will only be used to write drivers anyway
[02:29:51] <ProfSimm> FloridaMan: because this is not happening right now, I'm not annoyed
[02:29:56] <Inst> never mind that .chs (mixed C and haskell files) are common
[02:29:57] <FloridaMan> rewriting the core kernel is not going to happen from what I can tell
[02:30:09] <Zogatribe> the only reason why Rust is being used in Linux is because Torvalds hates C++
[02:30:15] <Inst> i.e, what I'm looking for
[02:30:26] <Inst> is a mixed paradigm programming language
[02:30:47] <Inst> that allows you to switch between very-high-performance imperative programming and highly-pure functional programming
[02:30:51] <Inst> so they can be used for what they're best at
[02:31:34] <vdamewood> Dammit, I fell asleep.
[02:31:37] *** Joins: Valware (~val@lol.valware.uk)
[02:31:41] <Inst> but re rust, that most of rust code is unsafe is merely because the programmers for Rust are trained in imperative programming
[02:31:44] <Inst> don't worry, you didn't miss anything
[02:31:53] <FloridaMan> vdamewood: maybe that's a sign ;)
[02:31:58] <Inst> what would be nice re haskell would be if there was a custom language
[02:32:07] <Inst> built to be integrated into haskell, using haskell-type syntax
[02:32:11] <Inst> because haskell syntax is the best ;)
[02:32:22] <vdamewood> FloridaMan: I thought I was unsigned.
[02:32:26] <FloridaMan> I'm trying to ascertain what you mean Inst 
[02:32:31] <Zogatribe> haskell is toy
[02:32:32] <FloridaMan> like a DSL or something?
[02:32:36] <Inst> i guess
[02:32:40] *** Quits: pizdets_ (~pizdets@183.182.115.92) (Ping timeout: 250 seconds)
[02:32:45] <Inst> and when you compile the DSL you get C-levels of performance
[02:32:51] <FloridaMan> oh
[02:33:05] <FloridaMan> you really just want Haskell to perform like C
[02:33:06] <FloridaMan> heh
[02:33:18] <vdamewood> I'm going to tak a nap.
[02:33:18] <Inst> doesn't everyone want their pet language to perform like C?
[02:33:19] <Inst> ;)
[02:33:25] <Inst> other than C programmers, of course ;)
[02:33:28] <FloridaMan> LOL indeed
[02:33:41] <Inst> see, the funny thing is
[02:33:41] <FloridaMan> except maybe assembly nerds
[02:33:43] <Inst> from what I've heard
[02:33:45] <ProfSimm> Do you folks think we can REMOVE things from programming languages, to make them more clear. Type inference is an example. What more... can we remove.
[02:33:50] *** Joins: pizdets (~pizdets@183.182.111.169)
[02:33:51] <Zogatribe> C is high level assembly: this is why it is performant
[02:34:02] *** Joins: hexingb_ (~hexingb@36.153.84.12)
[02:34:18] <Inst> apparently wizard-level Haskell programmers
[02:34:25] <Inst> make a game of overoptimizing their Haskell code for performance
[02:34:32] <Inst> and when they do so, it looks like an imperative language
[02:34:35] <pulse> !q Zogatribe 
[02:34:36] *** bayaz sets mode: +q $a:Zogatribe
[02:34:36] <FloridaMan> "code golf" sort of
[02:34:52] <pulse> Zogatribe, plz check rules of the channel and let me know when you've read them. then you'll get a -q
[02:34:55] <Inst> ProfSimm: apparently in some FP paper
[02:35:13] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[02:35:16] <Inst> "you can't make languages more powerful by adding features, hell, you can't even make them more powerful by removing them"
[02:35:19] *** Guest40 is now known as bep
[02:35:54] *** bep is now known as subject
[02:36:15] *** subject is now known as oxo
[02:36:23] *** oxo is now known as ooxoo
[02:36:26] <FloridaMan> Well, interpreted languages will never be as performant as compiled ones. Of this I am fairly certain.
[02:36:51] <Inst> what does that mean?
[02:36:59] <InPhase> FloridaMan: JIT blurs the lines effectively, to the point where the delta can get as small as 10% to 15%.
[02:37:00] <Inst> You do know Haskell is dual interpreted / compiled, right?
[02:37:10] *** Joins: illusion434 (~illusion4@185.135.96.133)
[02:37:15] <Inst> InPhase: compared to what benchmark?
[02:37:27] *** Quits: illusion434 (~illusion4@185.135.96.133) (Client Quit)
[02:37:42] <Inst> I wonder, honestly
[02:37:50] <Inst> what it'd be like if someone made a GHCi equiv for C++
[02:37:50] <ProfSimm> FloridaMan: I'm noticing something. In some cases JIT may cause a language to run faster than compiled language. However this requires it to gather enough stats and compile the hotspot traces first. 
[02:37:53] <InPhase> Inst: Well Java is the language which has received the most performance attention to its JIT, and has solidly gotten to that performance difference in benchmarks between Java and high performance languages like C or Fortran.
[02:37:57] <pulse> !uq Zogatribe 
[02:37:57] *** bayaz sets mode: -q $a:Zogatribe
[02:37:59] <FloridaMan> InPhase: well, even so, those percentages get really noticeable when you need performance
[02:38:04] <Inst> ah, i see
[02:38:34] <InPhase> Inst: Most JIT languages do not hit the same but mostly only because it takes a significant development effort to competitively optimize.
[02:38:36] <Inst> any compiled language, at least in theory, can be an interpreted language, and any interpreted language can be compiled
[02:39:05] <Inst> InPhase: apparently Haskell, as of 2015, was on average 50% slower than C
[02:39:07] <Inst> in production code
[02:39:09] <amigojapan> FloridaMan: with modern computers performance is less important than in the past
[02:39:27] <Inst> but if you look at benchmarks, it can range from 12.5% to 900%
[02:39:31] <ProfSimm> It seems the place where compilation is still the norm is system development. Kernel, drivers, system extensions. GC-collection and JIT is too complicated for those layers.
[02:39:39] <InPhase> FloridaMan: Maximizing performance is very important to my work.  But there's almost never a 10% to 15% difference that you can't make up for with some other change to a system.
[02:39:45] <Zogatribe> the main reason why JIT is faster than compiled is that JIT can target the actual CPU installed on the host whilst the compiled program tends to target the lowest common denominator.
[02:39:46] <Inst> so I'm wondering if JIT performance
[02:39:51] <FloridaMan> amigojapan: I agree *in most circumstances*
[02:39:59] <Inst> is along the same lines
[02:40:04] <Inst> average performance or peak performance
[02:40:21] <Inst> and whether you need a specific coding style to achieve the 10-15% difference
[02:40:39] <InPhase> FloridaMan: And all design decisions are ultimately about tradeoffs, so if a JIT that's 10% slower than optimal native offers some real benefits, then it would be a good choice.  If it weren't for disliking Java's language design, this performance difference would not stop me from using it for high performance work.
[02:40:54] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[02:41:15] <Zogatribe> InPhase: that makes no sense; JIT is able to target "optimal native"
[02:41:16] <Inst> What is Java anyways? IIRC, compiled, dynamically-typed C++ knock-off?
[02:41:17] <bjs> Zogatribe: that's not really true, you can compile for a specific chip if you wanted.  The biggest gain a JIT has is it knows the runtime behaviour of the program. It knows that "right now, this is an integer so i can specialise"
[02:41:41] <FloridaMan> InPhase: yeah, agreed. Like amigojapan said, modern computing makes it so it's not as big of an issue for most things that will be run. But there are intense things where you just need that extra performance.
[02:41:47] <FloridaMan> But imo, they're few and far between
[02:41:54] <Inst> commonly deployed in enterprise due to its cross-platform compatibility as an interpreted language?
[02:41:54] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[02:41:57] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:42:04] <FloridaMan> Talking about stuff that you want clusters for and whatnot
[02:42:30] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[02:43:00] <InPhase> Inst: Java is compiled to a bytecode running on a virtual machine which does JIT compilation to native from the bytecode.  Language design wise it is a language that enforces OOP-only structure, and made an effort from early on to reduce flexibility and force conformity with a standardized object method call workflow.  Consequently some things end up having significantly excessive boilerplate in 
[02:43:04] <Zogatribe> bjs: in general people don't target a specific chip if they are releasing software externally, for bespone internal use, sure.
[02:43:06] <InPhase> Java.
[02:43:17] <Zogatribe> bespoke*
[02:43:23] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:43:59] <Inst> that's actually sort of interesting from a language design perspective
[02:44:13] <ProfSimm> On top of targeting the current CPU, it can target current amount of RAM, cores, and most importantly, the current types within the hotspot traces, which allows you to devirtualize calls, inline methods and so on.
[02:44:14] <Inst> one of the biggest problems i have with imperative programming, and programming in general, is understanding other people's code
[02:44:27] <Inst> the plus side of all the reduced flexibility and boilerplate
[02:44:42] <Inst> is that it becomes easier to read code as there's less ways to do things
[02:45:12] <Inst> on the other hand, it makes it painful to code, does it have any metaprogramming support as in C++ or Haskell, or for that matter, lisp?
[02:45:14] *** Quits: exvicesindaco (~exvicio@host-79-54-77-176.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[02:45:19] <FloridaMan> Inst: this is what I like about Go
[02:45:25] <Zogatribe> ProfSimm: typically methods do not existing when JITing as JIT is usually done on intermediate bytecode, not high livel language where abstract things like "methods" exist.
[02:45:29] <FloridaMan> you really have I think only 26 keywords you can use
[02:45:30] <InPhase> FloridaMan: So I do a lot of work where small performance differences can matter...  But from my experience, all the cases where small performance differences matter are cases where you are ALSO dictating or otherwise have controlled the specifications of the rest of the system.  This is pretty much mandatory, because if your code is left to run on any system in the wild, and a 10% difference means 
[02:45:31] <FloridaMan> and that's it
[02:45:36] <InPhase> failure, then you're going to get a whole lot of failures.
[02:45:39] <Inst> basically, I was trying to sell a pythoner Haskell
[02:46:01] *** Joins: Dreamer40 (~perkinsg@cpe-24-242-198-110.gt.res.rr.com)
[02:46:04] <ProfSimm> Zogatribe: In Java's opcodes for example, classes, interfaces and methods very much exist. It's not just goto-s.
[02:46:07] <Inst> then they complained because the stuff I cribbed from Get Programming with Haskell (project-centerd intro haskell textbook for programmers) required them to implement their own data types
[02:46:23] <FloridaMan> InPhase: makes sense
[02:46:41] <Inst> they didn't want to have to define their own data types every time they called Aeson
[02:46:48] <Inst> I told them, TemplateHaskell, automate it
[02:47:07] <bjs> ProfSimm: the last is really the key one,  if you look at something like hotspot or turbofan that is the thing they spend all their effort on
[02:47:12] <FloridaMan> Inst: just tell them they can do whatever they want with JavaScript
[02:47:18] <FloridaMan> then secretly laugh at them internally
[02:47:19] <Inst> Python
[02:47:22] <FloridaMan> or externally if you want
[02:47:40] <Inst> I'm in FL right now btw
[02:47:43] <Inst> which part, Miami?
[02:47:47] <FloridaMan> oh nice... St. Pete here
[02:47:50] <Inst> in the Naples area myself
[02:47:50] <Inst> ah
[02:47:52] <InPhase> FloridaMan: And consequently, if you have a controlled set of system specs, there are usually other choices to not be so performantly close to the failure threshold.  Like, pick a 10% faster system, and pay less to upgrade than it costs to hire a programmer.
[02:48:27] <Inst> how is it up there? I'm stuck in the sticks
[02:48:28] * FloridaMan nods
[02:48:36] <InPhase> It's a whole different ballgame when we're talking about the 50x overhead of Python.
[02:48:36] <FloridaMan> Inst: decent
[02:48:39] <Inst> see, I sort of screwed up
[02:48:49] <InPhase> (For non-numpy stuff.)
[02:48:51] <Inst> I got this guy to agree to sign up to a Haskell course I was planning to design
[02:48:53] <Zogatribe> ProfSimm: I am not a fan of runtime reflection so I am not a fan of languages that have runtime reflection including Java.
[02:48:59] <Inst> so I show him Aeson, he gets fed up
[02:49:11] <Inst> tbh I was planning to follow a sort of Whitington-like approach, i.e, we define all the basic functions
[02:49:18] <Inst> only use libraries for stuff that's too hard
[02:49:20] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[02:49:32] <bjs> ProfSimm: the classic one is a javascript function that goes x+y, a JIT can see that that e.g. "x" and "y" are both integers and therefore turn it into a bare load;load;add optimized code and throw away all the javascript object stuff.  The JITs can see where optimizations can help at runtime and then do specialised/speculative optimisations on those paths to improve performance
[02:49:43] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:49:48] <Inst> i was planning to build your own parser, but the Aeson stuff at least is a standard lib
[02:50:00] <bjs> quite often in ways that an Ahead-of-Time compiler would struggle with (and if the hot paths change over time, where an AOT compiler cannot deal with in general, and where JITs may actually be able to do better theoretically)
[02:50:03] <Inst> since IO comes early, we could force mutability
[02:50:06] <Inst> with IO
[02:50:08] <ProfSimm> Zogatribe: to have virtual calls, you need to have a virtual method table. C++ also has it (for virtual calls, that is). I'm not sure it counts as reflection per se. But some type info exists at runtime. Otherwise polymorphism can't work
[02:50:45] <Zogatribe> ProfSimm: my primary langauge is C++ and, no, vtables are NOT runtime reflection
[02:51:07] <Inst> not sure
[02:51:08] <FloridaMan> Gotta go. Have fun kids.
[02:51:11] <Inst> cya
[02:51:15] <ProfSimm> Zogatribe: well I wouldn't count them as reflection either. But that's not THAT different than what I mentioned about Java retaining methods at runtime.
[02:51:18] <Inst> if we want to build a primitive parser
[02:51:39] <ProfSimm> Zogatribe: it inlines what it can. But it inlines even more during JIT
[02:51:49] <Inst> for working on appreciably large datasets
[02:51:50] *** Joins: Burgundy (~yomon@82.76.72.88)
[02:51:58] <Inst> what kind of techniques should be handled?
[02:52:09] <Inst> emulating mutability by creating files on disk, etc, that feels bad
[02:53:20] <Inst> i mean it'd be so primitive we'd be working on transforming a string into a list of lists :(
[02:53:42] *** Joins: Macuser (~Macuser@2600:1003:b449:57f3:9dd:135a:e267:8ebf)
[02:53:43] <Inst> as in, intended for 3rd lesson targeted at rank beginners at programming
[02:54:03] <Zogatribe> type info is only needed at runtime in C++ for dynamic_cast, it isn't needed for virtual functions; all that is needed for virtual functions is a vtable pointer: this is not really "type information", claiming it is is a stretch
[02:54:39] <ProfSimm> What we call it is less important than what it is.
[02:54:59] <Zogatribe> what is most definitely isn't is reflection
[02:55:28] *** Joins: trevors (~trevors@user/trevors)
[02:56:56] <jamea> javascript hi, i have this String: xStr='45,56,2,4,76,2344,23,66,62,85,23,12';  how to create a loop, 1) get first 4 elements into a var, delete form original string, and so on, get again 4 items... untils xStr was empty ?
[02:57:24] <davros> right "runtime reflection" is more 'dynamic everything', vtables are just dynamic function dispatch
[02:58:06] <Zogatribe> you can even simulate C++ vtables in C, the class "type" information is lost during compilation
[02:58:11] <ProfSimm> I wouldn't call the fact Java retains methods/classes/interfaces as compilation objects as reflection either.
[02:58:21] <ProfSimm> It's just the structure of a Java app.
[02:58:22] <davros> i would class a vtable pointer as simple type information
[02:58:28] <davros> but this is just names
[02:58:35] <davros> reflection = "very elaborate type information"
[02:59:42] <davros> the vcall mechanism can be used to do things "that depend on the type at runtime", but in a way the programmer chooses, i.e by making virtual getters and setters or whatever
[03:00:15] <Zogatribe> modern C++ lets you devirtualize virtual functions which is a cool handy optimization
[03:00:39] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[03:00:48] <ProfSimm> Only on final classes, or?
[03:00:52] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[03:01:02] <Zogatribe> final class and final virtual functions
[03:01:08] <ProfSimm> This is one reason they keep pounding in the Swift manual to make all classes final. Major boost.
[03:02:13] <Zogatribe> so with final there is no reason why you can't make shed loads of interfaces in C++ :D
[03:02:42] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:02:42] <ProfSimm> We're making a full circle back to more procedural techniques, with things like Data-Oriented Design, Entity Component Systems, native support for value types and so on.
[03:02:45] <ProfSimm> Which is nice. Balance.
[03:02:57] <davros> its funny how thats got jargon behind it
[03:02:59] <Zogatribe> I wrote an article on that
[03:03:01] <davros> "put things in arrays"
[03:03:20] <Zogatribe> ProfSimm: my article on that topic: https://isocpp.org/blog/2018/08/data-oriented-design-and-avoiding-the-cpp-object-oriented-programming-zimme
[03:03:20] <bayaz> Title: Data-Oriented Design and Avoiding the C++ Object-Oriented Programming Zimmer Frame -- Leigh Johnston : Standard C++ 
[03:03:23] <davros> "arrays of specific things" i.e how everyone used to work before OOP came along
[03:03:36] <ProfSimm> Zogatribe: cool
[03:03:36] *** Joins: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net)
[03:03:41] *** Quits: Dreamer40 (~perkinsg@cpe-24-242-198-110.gt.res.rr.com) (Quit: BitchX: made with real honey.)
[03:05:19] *** Joins: illusion1212 (~illusion1@185.135.96.133)
[03:08:03] <ProfSimm> I've always seen OOP as a more large-grained paradigm. Where you may have not 1 object = 1 entity, but rather 1 object = 1 entity set (repository). Well not always. But you get the idea
[03:09:00] <InPhase> Zogatribe: Reasonable article.  I was just last night in a discussion here trying to explain that you can do that just fine within the confines of OOP.
[03:09:17] <Zogatribe> OOP is a tool in the toolbox, there are other tools in the box too
[03:09:30] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:09:36] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[03:09:42] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:10:17] *** Quits: plastico1 (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:10:28] <InPhase> Zogatribe: i.e., that data-oriented design is an architectural data structure choice, rather than something that conflicts with OOP.
[03:10:57] <ProfSimm> It only conflicts with people who are a bit too zealous on certain OOP principles. :)
[03:11:05] *** Pseudocr1 is now known as Pseudocrat
[03:11:06] <flakland> OOP means nothing
[03:11:08] <Zogatribe> InPhase: DoD doesn't conflict with OOP, it is orthogonal to it
[03:11:13] <flakland> it's a wedge to divide us
[03:11:23] <InPhase> Zogatribe: Right.
[03:11:57] <davros> the myth that persisted for a while is that C++ == OOP, nope its multiparadigm
[03:12:04] <davros> "its not good C++ unless its OOP"
[03:12:05] <ProfSimm> It's cultural, but also drives the language featureset, can't deny it. I wish for example we could have distinct object instances which INTERNALLY are automatically arrays. You can implement this right now, but it's a hassle. Imagine if it came out of the box.
[03:12:17] <Zogatribe> Java == OOP which is why I don't like Java
[03:12:37] <ProfSimm> I.e. instead of every object being a separate heap allocation, the class allocates, say, "slabs" of 100 instances in arrays
[03:12:43] <InPhase> My code is typically structured with topical-objects for non-performance sections that retain sets of data, and data-oriented structures for performance critical sections that need cache locality and work with tight loops.
[03:13:38] *** Joins: hololeap (~hololeap@user/hololeap)
[03:14:08] <ProfSimm> InPhase: do you store data-oriented state statically, or you have dedicated "pool objects" of some sort to act as data regions for you
[03:14:10] <Zogatribe> C++ is a success because it is general purpose and the reason it is general purpose stems from its multi-paradigm nature
[03:14:22] <KillerWasp> C/C++ is god
[03:14:25] <InPhase> ProfSimm: Well the thing is, you don't always WANT that sort of automatic rearrangement.  It is really only a benefit with certain types of operations.
[03:14:43] <ProfSimm> InPhase: yes, ideally it can be specified on the class how you want it
[03:14:44] <KillerWasp> Sorry, I can not give more substantive comments. :/
[03:14:49] <InPhase> ProfSimm: Arguments for data oriented design correctly highlight the operations which benefit from it, but these are not all data operations.
[03:14:58] <Zogatribe> KillerWasp: C/C++ isn't a thing :), it is C and C++ or C or C++
[03:15:02] <ProfSimm> InPhase: heck maybe even allow some handler to make choices at runtime. I can dream
[03:15:18] <davros> haha i was about to say, but i often make a point of saying C/C++ because i know it gets a reaction
[03:15:19] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[03:15:21] <KillerWasp> Zogatribe: C/C++ == C and C++
[03:15:21] <Tech_8> sup
[03:15:34] <KillerWasp> a mixing of C and C++
[03:15:38] <davros> C++ has a near as dammit C subset (before they diverged, whichever version it is)
[03:15:46] <InPhase> ProfSimm: It would be nice to be able to make collections of objects that effectively do a transpose on the storage.  I do agree this would be nice.
[03:15:48] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:15:53] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:16:05] <davros> as such the phrase C/C++ alludes to the migration path and sliding scale between the languages
[03:16:09] <KillerWasp> not like a frankestein, but yes like a vampire (perfect and inmortal)
[03:16:10] <Zogatribe> the reason why I dislike C/C++ is because there are a lot of C programmers who write terrible C++
[03:16:48] <davros> 'good c++' is very much a matter of opinoin, i know a lot of accomplished programmers who avoid all the modern C++ stuf
[03:17:07] <davros> who stick to a simple C-like subset with a few sweeteners
[03:17:14] <KillerWasp> Zogatribe: You cannot call perfect if using C++ requires the use of classes developed in C++ libraries.
[03:17:16] <InPhase> Zogatribe: Mostly I dislike when C programmers write terrible C++.  :)  What I like about it is the potential exists to write good code in it.  There are, unfortunately, a lot of pitfalls that take expertise to avoid, and a lot of opportunities for truly terrible code.
[03:17:17] <davros> many valid ways to use C++
[03:17:25] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 240 seconds)
[03:18:04] <davros> i think one should go one way or the other: a simple C++ subset, or do it properly and migrate to Rust (the language modern c++ is trying to be)
[03:18:26] <InPhase> davros: Did you write me a modern gui system for Rust yet?  ;)
[03:18:38] <KillerWasp> at least i use the headers of C++ for make a own class's types.
[03:18:58] <davros> InPhase was that your sticking point
[03:19:03] <KillerWasp> like "how write a type of class"? read the headers, ooooh, i see.
[03:19:08] <Zogatribe> Rust is toy at the moment as it doesn't have an ISO Standard and the rigour that comes with that
[03:19:12] <davros> lmao
[03:19:13] <InPhase> davros: It was a big one.
[03:19:16] <davros> modern C++ is a toy
[03:19:19] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:19:32] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:19:34] <KillerWasp> davros: a hack toy
[03:19:39] <flakland> opengl is a toy
[03:19:46] <KillerWasp> all is a toy
[03:19:50] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[03:20:02] <KillerWasp> i'm agree
[03:20:05] <InPhase> I don't know what you all are talking about.  As a professional, I like playing with toys.
[03:20:10] <KillerWasp> more funny for me
[03:20:33] <Zogatribe> Python is toy for the same reason
[03:20:55] <davros> this sounds like a meaningless distinction given how widespread python is
[03:21:20] <Zogatribe> COVID is also widespread but that doesn't mean COVID is desirable
[03:21:26] <davros> but i accept not everyone can rewrite the code they depend on in rust
[03:21:32] <InPhase> Python, C++, and OpenGL have been some remarkably successful toys.  People sure must like playing with them.
[03:21:46] <KillerWasp> COVID is a fork of SPECTRE
[03:21:48] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[03:21:56] <KillerWasp> without doubt
[03:22:04] <davros> python does a useful job
[03:22:20] <flakland> NVIDIA benefits greatly from these toys
[03:22:51] <InPhase> Python has applicability to a subset of programming needs, but it sure does impressively excel at that subset.  And it has grown to an impressively diverse subset.
[03:23:41] <Zogatribe> age old fallacy: just because something is popular it doesn't follow that it is good
[03:24:04] <davros> but you're presenting something that could well be a fallacy:
[03:24:09] <davros> "it needs an ISO standard to be good"
[03:24:10] <Zogatribe> it might simply be the "least worst" option for what it does
[03:24:15] <InPhase> 15 years ago I did all my plotting with gnuplot.  Now I do all of my data plotting with Python because it's faster to whip up plots and a full programming language so it's more flexible.  You can't really argue against high usability like that.
[03:25:06] <Zogatribe> and significant whitespace is a joke :D
[03:25:09] <davros> valid criticisms of rust are: "we have too much legacy code we depend on to migrate" .."it takes too long to master"
[03:25:33] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:25:47] <davros> but the lack of an ISO standard doesn't stop it doing the modern C++ programming style better..
[03:25:51] <InPhase> Zogatribe: Coming from non-whitespace languages I was initially troubled by whitespace-sensitivity in Python.  But it results in all Python code being a lot more readable.
[03:26:02] <flakland> it takes to long to read on a basic level, forget about mastering
[03:26:24] <InPhase> Zogatribe: If it runs in Python, then the code layout is probably also pretty decent.  That's kind of a nice thing.
[03:26:40] <Zogatribe> I plan on implementing it soon
[03:26:51] <flakland> whoever designed rust syntax took TOO much inspiration from c++ to ever dethrone it
[03:26:53] <EdFletcher> Using “white space” as an argument in either direction for anything is a clear mark of an amateur and/or zealot 
[03:26:54] <davros> in modern C++ they've gone and overloaded "|" for range based iterator chaining
[03:26:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:06] <davros> you can hardly criticise rusts readability given that
[03:27:14] <davros> it just takes time to get used to like anything
[03:27:17] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[03:27:22] <davros> more people happen to be used to c++ 
[03:27:38] <InPhase> EdFletcher: Well it can go to usability and frustration level during use.  But I think on the whole it's apparently a net positive in Python.
[03:27:54] <EdFletcher> Also many languages have no standards and rely on reference implementations instead. They do fine. 
[03:28:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[03:28:02] <flakland> if your goal is to invent another elitist niche of progammer, rust is a great idea
[03:28:02] <davros> flakland, i think they got it just right - its close enough to c++ such that someone like me coming from C++ can pick it up easily. there were calls to make it more like ML/haskell with whitespace
[03:28:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[03:28:12] <EdFletcher> InPhase: Agreed! But _arguing_ about it is like peeing into the wind 😂 
[03:28:19] <InPhase> Fair.  :)
[03:28:48] <Zogatribe> Rust isn't on my list but Python is
[03:28:51] <flakland> i think the biggest hint is that, there are no alternative rust compilers
[03:29:22] <flakland> so standardization is effectively pointless
[03:29:35] <Zogatribe> flakland: this is why I think Rust is toy
[03:29:41] <davros> lmao
[03:29:44] <davros> meaningless
[03:30:03] *** Quits: ghost64 (~ghost64@user/ghost64) (Quit: See you!)
[03:30:05] <davros> modern C++ = "wannabe rust"
[03:30:16] <davros> an clunky version of rust hacked into C
[03:30:43] <Zogatribe> no, Rust wannabe C++ without the C baggage
[03:30:46] <davros> the migration path is a virtue though
[03:31:02] <davros> rust is the language modern C++ wants to be
[03:31:12] *** Joins: ghost64 (~ghost64@user/ghost64)
[03:31:28] <davros> its built around move semantics, the checked generics allow deeply composed abstractions without insane error messages
[03:31:29] <Zogatribe> but I am not going to implement it anytime soon, Python first
[03:31:46] <EdFletcher> davros: truth 
[03:31:48] <InPhase> Zogatribe: Python does not have a standard specification either.  It has a reference implementation.
[03:31:57] <davros> the language is streamlined by having one construct do the job of checked generics and vtable interfaces
[03:32:16] <Zogatribe> InPhase: the reason why I am going to implement Python first is because of its popularity
[03:32:38] <davros> why dont you just say "i can't port neogfx to rust because it would delay me" instead of calling rust a toy
[03:32:56] <flakland> i read somewhere its possible to implement lua in ~6000 LoC
[03:33:05] <InPhase> Zogatribe: Rust also has a reference implementation, with a reference document that is officially not a specification, but has put in place the groundwork for one.
[03:33:11] <Zogatribe> davros: C++ isn't going anywhere so I see no reason to change language
[03:33:13] <flakland> C code
[03:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:34:14] <Inst> oh god
[03:34:16] <Inst> why am i so stupid
[03:34:19] <Inst> Haskell is already faster than C
[03:34:25] <Inst> need an explanation?
[03:34:28] <davros> huh
[03:34:42] <Inst> haskell compiles down into C--
[03:34:48] <Inst> which is then translated to LLVM etc
[03:35:11] <Inst> C-- is a subset of C on which GHC can do fancier optimizations than gcc or clang can
[03:35:15] <davros> haskell doesn't have the control over memory to be fast
[03:35:22] <Zogatribe> I hope to implement lua with 0 LoC
[03:35:24] <InPhase> Inst: Haskell sometimes achieves performance parity with C on certain operations.
[03:35:28] <Inst> InPhase:
[03:35:39] <Inst> I mean, I've been talking about a co-language for Haskell when you need absolute memory control
[03:35:42] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:35:43] *** Quits: Akuli (~Akuli@82-203-160-12.bb.dnainternet.fi) (Quit: Akuli)
[03:35:43] <Inst> erm, absolute performance
[03:35:48] <Inst> in reality, Haskell already has this co-language
[03:35:58] <Inst> GHC -> Haskell -> C-- -> compile
[03:36:14] <Inst> either a llanguage extension is already there
[03:36:16] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:36:21] <davros> rust gets it just right
[03:36:23] <Inst> or you'd need a language extension for it that allows you to directly code within a .hs file C--
[03:36:40] <davros> an imperative , direct control over memory language, with a subset that is pretty good at doing functional programming
[03:36:56] <Inst> iirc Haskell can directly control memory
[03:36:59] <Inst> IORef, iirc
[03:37:03] <davros> instead of a pure functional language which you then have to juimp through many hoops through to get basic patterns working efficiently
[03:37:28] <Inst> people just don't use it or resort to hybrid C and Haskell code because lazy evaluation works extremely poorly with pointers
[03:37:37] <Zogatribe> C++ also has pure functions
[03:37:58] <Inst> if C-- were C with haskell syntax, I honestly wouldn't mind
[03:38:19] <Inst> call it C flat for being able to have a language that directly transpiles into C--, with some compat modes set up with Haskell code
[03:40:20] <Inst> Cmm
[03:40:26] <Inst> that's the current fork of C-- used in GHC
[03:41:25] <ProfSimm> Hmm what if we had 2-dimensional scrolling where side-scrolling gradually expands more levels of nested blocks or folds them.
[03:41:38] <davros> so its not so much pure functions that make me say 'rust has a nice functional subset' .. its the abliity to write code in that nifty chanined pipeline way that haskellers do, its got the type inference to do that, it always breaks in c++
[03:41:53] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:42:11] <davros> and traits let you use the dotcalls for it.. whereas in c++ they went and overloaded "operator |" for this, which is utterly horrible
[03:42:19] *** Joins: Celeo (~Celeo@user/celeo)
[03:42:27] <davros> how you can possibly call rust a toy when C++ resorts to ugly hacks like that, i dont know
[03:43:32] <flakland> afaict it has promise as a webasm frontend
[03:44:18] <ProfSimm> flakland: do you see webasm picking up
[03:44:26] <flakland> hopefully not
[03:44:30] <ProfSimm> Oh?
[03:44:46] *** Joins: anovick_ (~anovick@2a0d:6fc0:1e13:4a00:e42c:71f4:c473:b927)
[03:44:58] <flakland> the web will be destroyed eventually
[03:45:17] <ProfSimm> flakland: I think it may end up being used to compile certain libraries which will be exposed through JS and DOM ultimately.
[03:45:17] <davros> by what
[03:45:25] <flakland> by carelessness and greed
[03:45:26] <ProfSimm> flakland: so companies can port native apps to web
[03:45:47] <ProfSimm> But I don't see it as a mainstream "my blog uses it" thing
[03:46:02] *** Joins: TCZ (~tcz@91.150.178.124)
[03:46:37] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 256 seconds)
[03:47:14] <ProfSimm> flakland: the web seems most threatened by these mega social network companies. People used to have their own sites. Now they have a Facebook profile.
[03:47:41] <flakland> the web is a legal timebomb waiting to happen
[03:47:46] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[03:47:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[03:48:11] <flakland> it's going to get a lot uglier before it gets better
[03:48:15] <EdFletcher> you speak as if this "web" thing is new 
[03:48:33] <flakland> forced remote code execution is newish
[03:48:38] <InPhase> flakland: No legal system can bring down the web at this point.  The ship has sailed, and the public will not accept a legal system attempting to remove it.
[03:48:44] <EdFletcher> ^this 
[03:48:59] <EdFletcher> genie is out of the proverbial bottle, and has been for decades 
[03:49:10] <flakland> stil lacks court rulings
[03:49:21] <flakland> so genie is half out
[03:49:33] <EdFletcher> you seem to think that would be enough to stop it 
[03:49:36] <EdFletcher> it wouldn't 
[03:50:04] <EdFletcher> first of all, which multi-national court did you have in mind to prosecute these greivances? 
[03:50:05] <ProfSimm> We actually regularly hear about various countries getting their Internet shut down when the government decides to crack down on protests or what not. There's also the China Firewall.
[03:50:32] <flakland> any court that has laws on unauthorized code execution
[03:50:33] <InPhase> ProfSimm: Yes, and it requires a near complete level of fascist control over the public to achieve this.
[03:50:38] <flakland> would do just fine
[03:50:41] <EdFletcher> ProfSimm: haha yeah but that's all "extra-legal" -- no court need or is allowed to make decisions in those matters 😆 
[03:50:46] <EdFletcher> haha exactly InPhase 
[03:51:02] <flakland> edfletcher, cookie permission dialogs were unheard of until recently
[03:51:06] <ProfSimm> InPhase: yes, but, it happens. And fascist states don't eat grass. They have their excuses ready.
[03:51:18] <ProfSimm> Because terrorists blah blah
[03:51:33] <InPhase> Yes.  Best to avoid living in one if you can.
[03:51:44] <InPhase> Also best to avoid creating them where you live, if you can.
[03:52:40] <ProfSimm> Topic switch. How popular are COVID vaccines among programmers in your experience?
[03:52:43] <ProfSimm> :D
[03:53:13] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:54:02] <InPhase> ProfSimm: Seems pretty popular among most people who have educated themselves in any sort of science or engineering field.
[03:54:43] <InPhase> ProfSimm: The reverse is really an anti-science anti-education movement.
[03:55:20] <ProfSimm> I don't know if you're read how mRNA vaccines work, but it's basically bio-hacking. It's quite ingenious.
[03:55:33] <InPhase> Yeah, I've studied it pretty intensively.
[03:55:35] <ProfSimm> The future of genetics look much like programming in a way
[03:55:49] *** Joins: frost (~frost@user/frost)
[03:55:50] <InPhase> It does in many ways, although with a pretty messy processor.
[03:55:54] <flakland> there was a study on mRNA vaccines against rabies, they found that they only offered a short window of immunity
[03:55:55] <ProfSimm> Especially as we "study the source code" more and understand it so to speak.
[03:56:51] <flakland> so they're ok if you are fine with perpetual booster doses
[03:56:58] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[03:57:13] <InPhase> flakland: They trigger the same sort of immunities as any other exposure.  When windows are short, it is because the body has downregulated its own response to a particular thing later for some reason.
[03:57:16] <ProfSimm> flakland: Pfizer joined the chat
[03:57:17] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:57:38] <EdFletcher> yeah i get a flu shot every year, why is this any different? 
[03:58:14] <ProfSimm> flakland: is there a specific reason why they don't last? I don't it's due to the virus type, not the mRNA tech. But who knows. I think non-mRNA vaccines also last about 6-9 months 
[03:58:24] <InPhase> What we need most for these mRNA vaccines is adjusting the targetting for future boosters to better target the variants that have arisen.
[03:58:31] <flakland> profsimm i don't know i didn't pay to read the science
[03:58:34] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[03:58:39] <flakland> only the cover page
[03:58:43] <ProfSimm> Sure
[03:59:46] <ProfSimm> In Israel they're already pushing 4th dose for people over 60. TBH the frequency of boosting bothers me a bit. 
[03:59:47] <InPhase> ProfSimm: Many traditional vaccines actually decline in effectiveness over the years, it's just usually not a big issue for most things, as the effectiveness usually never drops to zero.  During a highly contagious pandemic, the small declines could be enough to permit some additional risk of spread.
[04:00:13] <ProfSimm> InPhase: makes sense
[04:00:22] <EdFletcher> InPhase: is that (at least partly) why they pushed for boosters so quickly? 
[04:00:37] <InPhase> So our current focus on high boosting is mostly about priorities needing to be different for this sort of risk profile.
[04:00:38] <EdFletcher> not for individual benefit per se but to contain the overall spread 
[04:01:15] <flakland> i think the blunder was that they focus too heavily on spike protein and not a robust image of the threat, but regardless if you have not been exposed to it yet there is possiblity for severe infection
[04:01:28] <InPhase> EdFletcher: Yeah.  Even without boosting, death rates are very low for vaccinated people.  Not zero, but very low.  Boosting does make them a bit lower though, so in high numbers that also saves lives and improves long term health for the boosted individual.
[04:01:57] <EdFletcher> InPhase: makes perfect sense yup, thanks a ton. never realized that! 🙌 
[04:02:27] <ProfSimm> Maybe the best option going forward would be getting a boost in August-September every year, until we see milder mutations.
[04:02:44] <InPhase> This has unfortunately made people think that mRNA vaccines are less effective.  But they're not.  They're fairly impressive as vaccines.
[04:04:52] *** Joins: Soni (~quassel@autistic.space)
[04:06:08] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[04:06:36] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:07:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:08:23] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[04:10:41] <ProfSimm> Some languages have universal function call syntax so these are the same:    foo.bar(1, 2, 3)   bar(foo, 1, 2, 3)    I wonder what's the best approach if a function conflicts with a method on the object
[04:11:48] *** Joins: zaher__ (~zaher@178.171.152.227)
[04:11:49] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:12:56] <juliaEnv> Given this simple piece of Java code (syntax included) - what is the design pattern that allows you to split Channel into SocketChannel and QueueChannel in a way that both could be used transparently (i.e. you wouldn't care which channel you're using in code - they would be used the same way) - https://onecompiler.com/java/3xpwakp7u
[04:12:57] <bayaz> Title: MessageDestinationChannel - Java - OneCompiler 
[04:13:17] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[04:13:42] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:4c6b:65bb:94e9:a14b)
[04:14:15] <phogg> ProfSimm: Raku does it with obj.method vs. obj.&function (one of the many advantages of sigils).
[04:14:32] *** Quits: zaher (~zaher@37.48.185.220) (Ping timeout: 256 seconds)
[04:14:47] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:14:50] <apotheon> Oh . . . Raku.
[04:15:08] <apotheon> interesting first word to see when I look in here
[04:15:14] <ProfSimm> phogg: thanks. It's one option I was entertaining, but I try to avoid extra syntax
[04:15:32] <vdamewood> apotheon: hippopotamus
[04:16:13] *** Joins: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it)
[04:16:15] <apotheon> That's the thirtieth word from others' messages.
[04:17:30] <PlanckWalk> juliaEnv: Are the semantics compatible?
[04:17:34] <juliaEnv> hmm, I'll use the strategy design pattern. Interestingly, nobody has mentioned it
[04:17:44] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:17:49] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[04:18:30] <phogg> ProfSimm: if you're allergic to the sweet, sweet taste of sigils you could consider it an alternate dereference syntax. Imagine that it's just a kind of a fat . operator
[04:18:35] <juliaEnv> PlanckWalk a Message Channel is in one case a local queue data structure and in another case a socket. The socket needs to be a serversocket or a clientsocket.
[04:18:41] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:19:31] <juliaEnv> PlanckWalk i.e. MessageSender, MessageReceiver, MessageChannel[LocalQueue, ServerSocket, ClientSocket]
[04:20:05] *** Joins: xkuru (~xkuru@user/xkuru)
[04:20:08] <ProfSimm> phogg: it's a hard balance between concise syntax and syntax that's easy for beginners to pick up :)
[04:20:48] *** Joins: frost (~frost@user/frost)
[04:21:49] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[04:23:38] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:26:46] *** Joins: Fairy (~Fairy@ti0004a400-0210.bb.online.no)
[04:27:11] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[04:27:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[04:28:06] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[04:31:43] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:39] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:34:13] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[04:34:58] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:36:49] *** Joins: duuude (~user@user/duuude)
[04:36:59] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:e97c:ffd8:4c4e:d5f5)
[04:39:49] *** Quits: anovick_ (~anovick@2a0d:6fc0:1e13:4a00:e42c:71f4:c473:b927) (Ping timeout: 240 seconds)
[04:40:48] <flakland> wow year of linux desktop at hand, wayland almost usable without opengl https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=4bb2d367a5a2807185a04949ae922d247f650576
[04:40:48] <bayaz> Title: kernel/git/torvalds/linux.git - Linux kernel source tree 
[04:40:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:41:45] <apotheon> "almost usable"
[04:41:49] <apotheon> exciting
[04:42:01] <flakland> well i haven't testd it on my hardware setup yet so i can't say for sure
[04:42:18] *** Joins: hololeap_ (~hololeap@user/hololeap)
[04:42:30] <apotheon> Saying "almost usable" is damning with faint praise.
[04:42:54] <flakland> the pessimism comes from my personal experience with this tech stack
[04:43:02] <flakland> nouveau / drmd umb buffers
[04:43:23] <flakland> on nvidia 750(maxwell arch)
[04:44:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[04:45:02] <vdamewood> I can't wait for Wayland to be fully usable with Vulkan.
[04:45:36] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:45:45] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[04:47:16] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[04:47:52] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:48:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:48:37] *** Quits: Macuser (~Macuser@2600:1003:b449:57f3:9dd:135a:e267:8ebf) (Ping timeout: 240 seconds)
[04:53:04] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[04:53:44] <flakland> "For historical reasons systemd still allows
[04:54:03] <flakland> physically logged in users to open primary DRM nodes,"  -- wow what a bad idea, at least it's only local users i guess
[04:56:08] *** Joins: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net)
[04:56:31] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[04:58:35] *** Quits: hexingb_ (~hexingb@36.153.84.12) (Ping timeout: 256 seconds)
[04:59:11] *** Quits: jaysicks (~jaysicks@fibhost-66-137-183.fibernet.hu) (Remote host closed the connection)
[05:00:20] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[05:01:25] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:01:28] <apotheon> flakland: Security isn't really the systemd devs' strong point, in my observations.
[05:01:46] *** Joins: qaph (~weechat@user/qaph)
[05:03:08] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:03:36] *** Joins: zaher (~zaher@37.48.186.92)
[05:04:15] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[05:04:17] *** qaph is now known as kron
[05:05:17] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:05:32] *** Quits: zaher__ (~zaher@178.171.152.227) (Ping timeout: 256 seconds)
[05:06:48] *** Joins: vysn (~vysn@user/vysn)
[05:09:25] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[05:11:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:14:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:14:55] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:15:08] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:e97c:ffd8:4c4e:d5f5) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:15:46] <o|||||o> if i'm adding bootstrap to react, how do i add my own custom css?
[05:15:58] *** Quits: retsi (~retsi@45.227.79.168) (Quit: Leaving)
[05:19:29] <apotheon> Last loaded CSS should take precedence, so if you load a stylesheet with your custom CSS in it *after* Bootstrap loads, it should take effect.  You might have to identify it as "!important".
[05:19:56] <apotheon> o|||||o: Are you a Jeep driver?
[05:20:29] <o|||||o> should all of the css be included in the main app.js or should they be included in the component?
[05:21:15] <o|||||o> apotheon, i used to be but it fell apart on me lol. this was my name on freenode so i figured i'd keep it
[05:21:50] <apotheon> If it's specific to the component, I'd guess it's good to put it there, but I haven't touched React in a few years, so I don't recal the specifics very well.
[05:23:18] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:24:00] *** Joins: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net)
[05:24:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:25:00] <o|||||o> if i'm loading in per component stylesheets, this would be a good use case for sass right?
[05:25:34] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:25:52] <Joanna> Hello does anyone here use sqlite? Does anyone know how to format the output of avg() function in sqlite to only have one number after decimal?
[05:26:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[05:26:40] *** Quits: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it) (Remote host closed the connection)
[05:28:11] <o|||||o> Joanna, usually you would have another layer between the database and the user that would format the output
[05:28:37] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:30:02] <apotheon> o|||||o: It could be, sure (re: sass).
[05:30:23] *** Joins: trevors (~trevors@user/trevors)
[05:30:44] <arahael> Joanna: But if you want to do it in sql, have you checked sqlite's documentation? For printf in particular, have you checked https://sqlite.org/printf.html ?
[05:30:45] *** Quits: haliucinas (~haliucina@5.20.153.21) (Read error: Connection reset by peer)
[05:30:45] <bayaz> Title: SQLite's Built-in printf() 
[05:31:11] <o|||||o> arahael, i was just about to share that exact link
[05:31:22] <arahael> Joanna: In particular, section 2.4
[05:31:32] <arahael> o|||||o: Great minds...
[05:31:57] <o|||||o> apotheon, design is my least favorite part of web development >:(
[05:32:04] * o|||||o high fives arahael 
[05:32:12] <apotheon> Anything front-end annoys me.
[05:32:16] * arahael jumps up and wacks it.
[05:32:24] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:32:43] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:33:03] *** Joins: avu (~jan@user/avu)
[05:34:27] *** Joins: frost (~frost@user/frost)
[05:34:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:35:07] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:35:44] *** Joins: haliucinas (~haliucina@5.20.153.21)
[05:39:57] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[05:42:04] *** Quits: Duchess47 (~Duchess@24.109.185.150) (Quit: Client closed)
[05:42:25] *** Joins: Duchess (~Duchess@24.109.185.150)
[05:43:50] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[05:44:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:46:12] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:46:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:46:37] *** brabrax_ is now known as brabrax
[05:47:47] *** Joins: kirankrishna (~kirankris@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[05:52:20] *** Joins: Guest6331 (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[05:52:30] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:53:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:53:42] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 256 seconds)
[05:54:00] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:55:21] <vdamewood> Oh, It's so fun when library authors ignore the C (and C++) standard(s).
[05:57:36] *** Joins: skraito (~skraito@user/skraito)
[05:57:40] <sonny> vdamewood non portable stuff or UB?
[05:57:45] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[05:58:07] <vdamewood> sonny: Just flat out violating the standard.
[05:58:08] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:59ed:78f6:d0f0:e463)
[05:58:25] <sonny> oh :|
[05:58:45] *** Quits: Pook (~Pook@2001:8a0:f996:1400:ddd6:1f40:3146:40af) (Quit: Leaving)
[05:58:48] <vdamewood> sonny: Library function names, like printf are reserved in hosted implementations.
[05:59:22] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[05:59:45] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[06:00:50] <sonny> so they used printf in the library D:
[06:01:37] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:01:37] *** Quits: xff0x (~xff0x@2001:1a81:52d4:9900:5627:62b8:c837:dd4a) (Ping timeout: 240 seconds)
[06:01:39] *** Joins: emf (~emf@2620:10d:c090:400::5:b9c2)
[06:02:00] *** Joins: sunarch (uid526836@user/sunarch)
[06:03:18] *** Quits: kirankrishna (~kirankris@69-221-222-246.lightspeed.austtx.sbcglobal.net) ()
[06:03:18] *** Guest6331 is now known as kirankrishna
[06:03:45] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:03:45] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:7a4c:f58f:8e12:e28b)
[06:04:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:04:53] *** Quits: ooxoo (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17) (Ping timeout: 256 seconds)
[06:06:46] <sonny> static typing is def the preffered choice for me, less work
[06:07:15] *** Joins: frost (~frost@user/frost)
[06:07:22] <sonny> lol
[06:07:39] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:08:02] <sonny> so I decided to use the system logger for my program. on windows it opens a console with stderr I think. Closing the close just closed the ide and everything lmao
[06:08:13] <sonny> s/close/console/
[06:09:06] <matrox> hi guys. I am probably boring you, but besides sceptre monitor someone pasted other does, does anyone else make 40" or 49" ultraswide monitor that is FLAT?
[06:09:07] <flakland> now make it initiate an update check
[06:09:25] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[06:09:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:10:00] <flakland> matrox how about a projector?
[06:10:25] <matrox> is that a joke? no :)
[06:10:47] <flakland> 40" monitor is too big
[06:11:01] <matrox> 40" is just a bit wider 32"
[06:11:10] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[06:11:15] <matrox> http://www.displaywars.com/32-inch-16x9-vs-39,7-inch-d%7B64x27%7D
[06:11:15] <bayaz> Title: One moment, please... 
[06:11:27] <matrox> and 49 is like two 27" 16:9 side by side
[06:11:40] <flakland> how do they measure sizes of ultra wide monitors, i don't even know wha the aspect ratio is
[06:11:49] <flakland> what is that in horizontal inches
[06:11:57] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[06:12:18] <matrox> 49" is 32:9, 42" 21:9
[06:12:20] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[06:12:32] <flakland> lol wow thats tiny
[06:12:56] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[06:13:00] <flakland> it sounds humungous in marketting speak
[06:13:32] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:13:35] <matrox> well it isn't marketing speak, the wider the monitor, the less area it has. largest area would be same diagonal with 1:1 aspect ratio
[06:13:49] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:14:13] <flakland> 42 is double it's horizontal measurement, misleading metric at best
[06:14:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:15:16] <flakland> oh thats not inches thats the fucked up ratio
[06:15:27] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:15:35] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[06:15:37] <flakland> 64378:789
[06:15:39] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[06:16:16] <matrox> it is usually rounded to 21:9
[06:16:19] <InternetCitizen> hello, I have a compiler in very OOP language, where all AST nodes have a `codegen` method that dumps assembly for the node to a stream, now I want to extend this to include a second backend. The simplest thing I could think of was having two versions of the same method `codegenBackendA` and `codegenBackendB`
[06:16:43] <InternetCitizen> do you see a better way?
[06:17:43] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[06:18:31] <sonny> ok let's see
[06:18:49] <sonny> so you have '+' and you want codegen for it in two different architectures?
[06:19:50] <InternetCitizen> sonny: yes basically
[06:20:07] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[06:20:11] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:20:45] <InternetCitizen> right now I would do a addExpression.codeGen(...) and this outputs the assembly
[06:20:49] <sonny> I'm gonna go eat but I'll think about it
[06:20:55] <sonny> good luck
[06:20:55] <matrox> flakland, I've been drooling on images like this for months. they are just all curved, unfortunately. https://images.macrumors.com/t/EmyanT5_U1xmAcqHp1STikqczBs=/800x0/article-new/2019/01/dellultrawide1-800x450.jpg?lossy
[06:20:55] <bayaz> Type: image/jpeg Size: 47.2 kB 
[06:21:11] *** Joins: boof (~rickybob@146.70.38.38)
[06:23:14] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:24:36] *** Joins: frost (~frost@user/frost)
[06:24:37] <flakland> i'm using a fairly small acer with external power supply, it's amazing how light and thin these have gotten
[06:26:02] *** Quits: dld (~davidlowr@2601:197:600:1210:31ff:a804:81e3:5196) (Ping timeout: 240 seconds)
[06:27:23] *** Joins: dld (~davidlowr@2601:197:600:1210:a837:f325:7d6a:5246)
[06:27:34] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[06:27:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:29:49] *** Quits: Fairy (~Fairy@ti0004a400-0210.bb.online.no) (Ping timeout: 256 seconds)
[06:32:14] *** Quits: zaher (~zaher@37.48.186.92) (Ping timeout: 256 seconds)
[06:34:21] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 256 seconds)
[06:34:44] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:37:00] *** Joins: arcatech (~arcatech@user/arcatech)
[06:38:55] *** Joins: password (~password8@user/password2)
[06:39:43] *** Parts: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) ()
[06:41:18] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[06:41:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:41:24] <sonny> InternetCitizen: put the code gen in objects
[06:41:34] <sonny> then your ast code will be fine
[06:41:46] <sonny> afk
[06:41:52] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[06:42:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:44:44] <InternetCitizen> sonny: could you please elaborate?
[06:46:34] <flakland> what is the second backend?
[06:47:33] <flakland> just a function call?
[06:47:41] <InternetCitizen> it's jvm bytecode, but what matters to me is just a way to distinguish the two without resorting to "`codegenBackendA` and `codegenBackendB`"
[06:48:21] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:31] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[06:48:37] <flakland> load it with a switch --target=jvm 
[06:49:51] <flakland> or loop over a list of enabled targets
[06:50:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[06:50:24] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:51:11] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpws4ggbee1mkp3.ipv6.telus.net)
[06:51:38] <InternetCitizen> oh maybe I didn't explain well, I have a method on my ast called emitCode that recursively calls itself on all nodes like a tree-walk interpreter would, and I would like to have different methods for each backend and I don't want to simply label them emitCodeForA and emitCodeForB
[06:53:08] <Gallomimia> ah. here we are. been a good long time since i've even touched programming... i'm looking for some kind of guide to immersing myself in the world of versioning control. especially the part where you use diff to deal with a merge conflict. preferably with some kind of gui based text editor using fancy syntax highlighting and all the rest.
[06:54:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:54:59] <flakland> you want a universal emitter for all backends?
[06:55:13] *** Joins: Guest40 (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17)
[06:55:23] <InternetCitizen> flakland: yes but I don't know how to express it in OOP
[06:56:10] <Celeo> Gallomimia: any VCS in particular? git is pretty darn popular, and has a number of FOSS GUIs availab.e.
[06:56:12] <flakland> singleton was my favorite c++ monkey-wrench
[06:57:08] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[06:57:33] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[06:57:57] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[07:00:10] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[07:01:33] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:02:47] <Gallomimia> i thought we were down to just git? mercurial and cvs and svn all got discontinued?
[07:03:22] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:03:31] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:03:36] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:03:43] <Gallomimia> InternetCitizen, i can't put my finger on it since i haven't heard your entire discussion, but it sounds like you're about to embark on a wondrous spiritual journey involving arrays of function pointers
[07:03:59] <Gallomimia> lucky you. don't fuck up the arithmetic
[07:04:12] <Celeo> Gallomimia: some people still use Perforce or hg, but yes, git's the main 
[07:04:54] <Gallomimia> well the last time i hammered my face into a manual on one of these softwares it was mercurial
[07:05:01] <Gallomimia> do you.... recommend against using it?
[07:05:12] <Gallomimia> i don't mind round pegging into the square hole of git
[07:05:51] <Gallomimia> as long as i can start to wrap my head around one of them. it's like learning mathematical induction. i, sub i +1, a miracle occurs!, an answer that makes sense
[07:05:59] <Celeo> If you're learning for your use or for the sake of knowledge, ain't no one can tell you no :)
[07:06:24] <Gallomimia> ah well, i'm actually hoping to start up programming again, and start to involve myself in public projects so
[07:06:28] <Gallomimia> maybe git would be better?
[07:06:28] <Celeo> git then
[07:06:30] <Celeo> yup
[07:06:35] <Gallomimia> k
[07:06:56] <Gallomimia> i've come to the conclusion however, that which software i learn doesn't matter. the commands are different, have more/less options, aliases, whatever...
[07:07:10] <Gallomimia> it's when the manual says "use diff. it's not covered in this manual" that i get lost
[07:07:30] <Gallomimia> and let's face it. diff is like 40 years old and and in need of a serious revamp
[07:07:57] <Gallomimia> i'm starting to suspect it was invented before the monitor, and intended for use in printouts
[07:08:22] <Celeo> Honestly if you're just interested in getting stuff done, GitHub + a GUI editor should do like 95% of everything you ever need
[07:08:42] <Gallomimia> my editor of choice is sublime. any suggestions on that subject?
[07:09:08] <Celeo> Been a while since I've used sublime for anything other than quick text editing; dunno if it has anything built-in for git support
[07:09:15] <Gallomimia> and yeah it's that 5% conflict resolution i'm after
[07:09:27] <Gallomimia> i expect it does. with a 90 dollar price point
[07:09:38] <Celeo> I know there's also Sublime Merge which is a git GUI
[07:09:54] <Celeo> Ah, in that case I've always used the command line with the good ol' `git ...` commands for that 5%
[07:10:03] *** Quits: Guest40 (~Guest40@2600:1700:232b:6110:2072:b187:1532:eb17) (Ping timeout: 256 seconds)
[07:10:29] <Gallomimia> sublime merge eh? that sounds promising
[07:10:51] <Gallomimia> yeah i learned to program and compile on the command line. with a wonderous editor called nedit :/
[07:10:58] <Gallomimia> on a sparc4
[07:10:59] <Celeo> Looks like there are a bunch of Plugin Control packages for ST + git: https://packagecontrol.io/search/git
[07:11:00] <bayaz> Title: git - Search - Package Control 
[07:11:16] <Celeo> Right on!
[07:11:45] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[07:11:47] <Gallomimia> tho i must say, there was a serious lack of instruction as to how to do commandline or work with linux in my computer science program
[07:12:05] <Gallomimia> which i eventually flunked out of for reasons unknown (video games)
[07:12:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:12:13] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[07:12:14] * Gallomimia coughs
[07:12:17] <Celeo> ;)
[07:12:19] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:12:38] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:14:29] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:14:33] *** Joins: segnior (segnior@user/segnior)
[07:15:25] *** Quits: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[07:15:25] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[07:16:20] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[07:16:42] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[07:16:59] <Gallomimia> alright my stomach demands my attention at this time, but it looks promising
[07:17:07] <Gallomimia> thanks for the information
[07:17:28] <Celeo> Sure thing, enjoy
[07:17:46] *** Joins: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net)
[07:18:58] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:19:16] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:19:26] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:19:30] *** Quits: segnior (segnior@user/segnior) (Read error: Connection reset by peer)
[07:20:42] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:21:05] <InPhase> Gallomimia: Odd.  My CS program had a Sun Workstation lab when I entered in 1998, but added in a second Linux Lab full of computers in either 1999 or 2000.  So everyone got a lot of experience working on those for all of their assignments.
[07:21:39] <Gallomimia> mine had 2 labs, one was for 3rd 4th years
[07:22:08] <Gallomimia> i think the second lab got an upgrade and sent the handmedowns over
[07:22:27] <Gallomimia> what's funny is how everyone but us had to pay for printing
[07:22:59] <Gallomimia> what's no funny is how we had to hand in assignments that were 2 or 3 hundred pages long
[07:23:09] <Gallomimia> 2up-landscape mode was required.
[07:27:17] <o|||||o> we had two labs. afaik, all ran windows but we had access to vm's. one was for classes, the other was for if you needed to use university computers on yhour free time. there was also computers all throughout the library that were lower spec and didn't have the same access on the network iirc
[07:27:46] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:29:16] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:29:49] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:30:19] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:32:59] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c4b8:d9e6:36e5:6265) (Quit: Leaving)
[07:33:01] *** Quits: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[07:33:02] <InPhase> Gallomimia: Uhm, did they not know about digital file submission methods?  At that size scale, that sure seems to make a lot more sense.
[07:33:37] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[07:35:12] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[07:35:20] <o|||||o> InPhase, my coding labs had use print out our code + a screenshot of the required outputs and that was in 2012
[07:35:22] <InPhase> And there's a good chance I wouldn't have gone where I did for a CS degree if they had been an all-Windows campus or all-Windows CS program.  I was already familiar with Linux, and sure liked that as a platform a lot more than Windows.
[07:36:11] <o|||||o> i remember now, there was linux machines that we could ssh into. i'm sure there was more options but i dropped out before that became relevant
[07:36:18] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[07:36:34] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:37:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:38:00] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[07:38:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[07:38:18] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560)
[07:39:06] *** Quits: cisco87 (~quassel@user/cisco87) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:39:25] *** Joins: cisco87 (~quassel@user/cisco87)
[07:39:52] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:40:45] <flakland> wwow, does "for i in 0..10 {}" really iterate 10 times in rust?  or is it a mistake on this "cheat sheet" i found
[07:40:59] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:42:21] <jackson99> what causes confusion?
[07:42:22] <o|||||o> that seems right
[07:42:24] <InPhase> flakland: It does.
[07:42:37] <InPhase> flakland: The 10 is "past the end" if that was the sticking point.
[07:43:01] <inhahe_> same as python
[07:43:03] <flakland> hmmm ok thanks
[07:43:04] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:43:11] <o|||||o> flakland, the .. will create a sequential range in rust as well
[07:43:36] <o|||||o> idk what part specifically you had an issue with, but that's another lesser known one
[07:43:53] <flakland> the fact that 0->10 is 11 
[07:44:43] <jackson99> yeah I would have preferred that including 10
[07:44:46] <InPhase> flakland: Parse as [0,10) if you're familiar with the inclusive exclusive range format from math.
[07:44:52] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ba52:147a:c08b:149f)
[07:44:54] *** Joins: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net)
[07:44:54] <jackson99> minor inconvenience though
[07:45:01] <flakland> never seen that one before
[07:45:06] <InPhase> flakland: The reasoning is that in 0-based numbering systems, you're most often iterating up to the size of the container.
[07:45:09] <flakland> but also don't code in python either
[07:45:23] <InPhase> s/0-based numbering/0-based indexing/
[07:45:48] <InPhase> So you get for i in 0..thesize {}
[07:46:05] <jackson99> given that rust has constructs for iterating containers, I'm not sure that was the reason. perhaps it was to appeal to C and C++ programmer
[07:46:22] <jackson99> +s
[07:46:54] <InPhase> jackson99: There is always some case where you need to do a complicated iteration that doesn't fit into element-wise iteration.
[07:47:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[07:47:01] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[07:47:13] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:47:26] *** Joins: hexingb_ (~hexingb@180.212.211.39)
[07:49:01] <FloridaMan> I do find that a little bit odd though
[07:49:40] <o|||||o> you're FloridaMan and YOU find it odd?
[07:49:46] <InPhase> "Florida Man finds odd thing on programming channel"
[07:50:06] <o|||||o> lol
[07:50:08] <FloridaMan> haha
[07:51:08] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:51:13] <FloridaMan> so `for i in 90..99` would really only run 9 times?
[07:51:50] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:52:22] <FloridaMan> I mean, even in Florida that's odd
[07:52:37] <matrox> InPhase, rust has far more than element wise iterations if we include higher order functions. 
[07:52:39] <InPhase> Yes, same as Python ranges.
[07:52:48] <FloridaMan> *even* in... see what I did there?
[07:52:52] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[07:52:56] <matrox> heh, I wouldn't use python as an example for anything good
[07:53:02] <sonny> InternetCitizen: sure, one sec
[07:53:38] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:53:38] <InPhase> matrox: It's a good example of a language that many people have found fairly intuitive to work with.
[07:53:43] <FloridaMan> I would expect `91..99` to extrapolate out to `90,91,92,93,94,95,96,97,98,99`
[07:54:10] <inhahe_> 91 starts at 90?
[07:54:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:54:13] *** Joins: MINIMAN10000_ (~quassel@c-73-225-3-123.hsd1.wa.comcast.net)
[07:54:15] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:54:18] <FloridaMan> sorry 90..99
[07:54:24] <FloridaMan> like in my first example
[07:54:55] <matrox> InPhase, python is intuitive just on the surface. when you scratch deeper there are some very hairy, ugly bits
[07:55:05] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:55:15] <FloridaMan> we all have very hairy ugly bits
[07:55:37] <inhahe_> haha
[07:55:49] *** Quits: MINIMAN10000 (~quassel@c-73-225-3-123.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[07:55:49] <InPhase> matrox: The fundamental meaning of assignment in Python does confuse some people, but it's learnable.
[07:56:03] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:56:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:56:26] *** MINIMAN10000_ is now known as MINIMAN10000
[07:56:38] <matrox> InPhase I was thinking about its weird scope, that even many experienced python developers don't fully grasp
[07:57:11] <FloridaMan> substituting a different sequence of characters makes it seem even more odd, like `A..Z` stopping at Y and not including Z
[07:57:12] <InPhase> matrox: I don't see many people having comprehension problems with the scoping.  What part do you mean?
[07:57:13] <FloridaMan> just weird
[07:57:21] <sonny> InternetCitizen: emitValue(expr) { switch (expr) { case BinaryOperator: return emitBinaryOperator ... }}
[07:57:42] <matrox> InPhase https://twitter.com/gvanrossum/status/1354305179244392453
[07:58:52] <matrox> https://ideone.com/rJj4pi
[07:58:55] <bayaz> Title: Ideone.com 
[07:59:01] <InPhase> FloridaMan: So if you really want to include it, you just write 0..=10
[07:59:20] <InPhase> FloridaMan: It's not like it's hard, it's just not-including it is generally a more common need.
[07:59:46] <flakland> shouldnt it be =0..=10
[07:59:53] <FloridaMan> yeah it's not hard, but not what I think I would intuitively expect
[07:59:59] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ba52:147a:c08b:149f) (Quit: Leaving)
[08:00:21] <matrox> InPhase x = 2 on line 8 changes what line 7 prints
[08:00:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:01:06] *** Joins: kirankrishna1 (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[08:02:13] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:02:26] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:02:42] <flakland> ooo wait does =0..=10 loop 1..9 ?
[08:02:53] <flakland> =0..10
[08:03:19] *** Quits: pitchshifter (~pitchshif@75.190.104.24) (Quit: Leaving)
[08:03:53] <InPhase> FloridaMan: No, it's a compilation error.
[08:04:03] <FloridaMan> ?
[08:04:18] <FloridaMan> what is?
[08:04:32] <InPhase> matrox: I'd call that one more of a bug nobody has bothered to fix, which should be hammered out in a proper spec.
[08:05:35] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[08:05:35] *** kirankrishna1 is now known as kirankrishna
[08:05:46] <InPhase> matrox: It's an artifact of the implementation approach that shouldn't come up in reasonably written code.
[08:06:13] <FloridaMan> InPhase: were you talking to me mistakenly with that "compilation error" comment?
[08:06:24] <InPhase> FloridaMan: Yes, wrong fl
[08:06:31] <FloridaMan> ah
[08:06:36] <FloridaMan> oh yeah, fl<tab> heh
[08:06:53] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:07:30] <matrox> InPhase, it is one of many such bugs, some of which were fixed, others weren't. for example, list comprehension used to leak variables (and still those for those unfortunate enough to maintain 2.x code)
[08:07:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:08:01] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[08:08:02] <matrox> and the whole "global" business is weird and error prone as well, as that not something you'd expect, or is common at all in other languages. I bet it causes more bugs than it solves
[08:08:21] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:08:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[08:08:47] <inhahe_> i think list comprehensions still leak if you use :=
[08:08:49] <matrox> (excuse the typos, I'm writing on a phone)
[08:09:00] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[08:09:01] <matrox> inhahe_, raelly, in python 3? 
[08:09:05] <inhahe_> yeah
[08:09:08] <matrox> horrible
[08:09:17] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:09:19] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:11:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:11:45] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:12:00] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:12:14] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:12:34] <InPhase> inhahe_: ...  That's not a "leak", that's an intentional feature.
[08:12:44] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560) (Remote host closed the connection)
[08:12:55] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560)
[08:13:21] <InPhase> That's basically a part of what := is for by design.
[08:13:44] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:13:58] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:14:53] <inhahe_> ah, when i read about it people were painting it as a bug
[08:15:07] *** Joins: audiobirb (~audio@user/audio)
[08:15:12] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[08:15:38] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c)
[08:15:43] <jackson99> isn't the point of walrus operator to allow assignment to be part of expression? why would the variable name itself leak outside of its intended scope?
[08:15:46] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c) (Excess Flood)
[08:16:22] <InPhase> jackson99: Because it was assignment?  Where did anyone ever say a comprehension was a scope?
[08:16:50] <jackson99> InPhase, it is a scope. they fixed the leak in 3.x. and now, it seems, they introduced it again?
[08:17:18] <InPhase> If you assign a variable in a for loop, it's available outside of it.
[08:17:27] *** Joins: Atque (~Atque@user/atque)
[08:18:07] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[08:18:10] <jackson99> right, that's another problem. but unrelated to list comprehensions, which they did decide at one point should contain variables within itself
[08:18:12] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[08:18:38] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:18:59] *** hololeap_ is now known as hololeap
[08:19:11] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[08:19:15] <Inst> that feel
[08:19:16] <matrox> that's another issue with python, it uses the same syntax for assignment and variable creation
[08:19:23] <Inst> when you know what monads are but not what objects are
[08:19:59] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Quit: leaving)
[08:20:15] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:20:47] *** Joins: mishugana (~mishugana@user/mishugana)
[08:21:11] <InPhase> matrox: There's no notion of variable creation to have separate.  It's just assignment.
[08:21:16] <Inst> best thing about learning Haskell first
[08:21:24] <Inst> I'm actually analogizing objects to monads now because I don't get objects!
[08:21:33] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[08:21:36] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:22:00] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Quit: kirankrishna)
[08:22:00] <matrox> InPhase, there is and should be. so that you don't accidentally overwrite your existing variables in the same scope, thinking you're creating new ones
[08:22:19] <matrox> and you can do that now with list comprehensions! what a lovely, intuitive language!
[08:22:27] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[08:22:34] <InPhase> matrox: "Should be" would be a valid argument to have, but is out of norm for Python's loose unrestricted nature.  (Which is both an asset and a scaling issue.)
[08:22:40] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:22:54] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:23:19] <matrox> unrestricted, except when you want more than one line in lambda. or a statement
[08:24:48] <InPhase> matrox: a = [5, 6]; b = a; b[0] = 7; b = 6;  Would you say the variable for b got overridden?
[08:25:00] *** Quits: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[08:25:23] <InPhase> matrox: Was a variable b ever created?
[08:25:34] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[08:25:40] <InPhase> matrox: If so what was a?
[08:25:49] <matrox> InPhase, it is if I do it 20 lines later, thinking I am creating a new variable, because the syntax is the same
[08:26:02] <matrox> InPhase, or if I use it in a loop, or, apparently, in list comprehensions again
[08:26:12] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:26:14] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[08:26:21] <InPhase> matrox: You understand what happened to the 7 in that example?
[08:26:58] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[08:27:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[08:27:04] <matrox> I wasn't paying close attention. you mutated a list. then changed b to 6. so?
[08:27:20] <InPhase> matrox: So where is the 7.
[08:27:25] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[08:27:36] <matrox> in a[0]
[08:27:47] <InPhase> Right.  So when was b ever created as a variable?
[08:28:12] *** Joins: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x)
[08:28:24] <matrox> InPhase, you created it on the second line. just because it is "pointing" to the same object, doesn't mean you didn't introduce a new variable
[08:28:28] <InPhase> b is simply assigned to a value, twice.
[08:28:34] *** Quits: x88x88x_ (~x88x88x@gateway/vpn/pia/x88x88x) (Client Quit)
[08:28:42] <InPhase> It's just adding a new key to a value.
[08:28:50] <matrox> char *p = "foo"; char *r = p; <- r isn't a new variable?
[08:29:00] <matrox> so what?
[08:29:24] <InPhase> r is a variable.  It's a number pointing to a memory address.  r is its own little thing.
[08:29:50] <InPhase> b, in Python, is just an assigned name for a value.  It's a different sort of notion that behaves similarly in many cases.
[08:29:54] <matrox> but it points to the same address as p. if you modified it (you shouldn't beacuse it is string literal, but that is besides the point), it would do the same thing your python example did
[08:30:06] *** Quits: password (~password8@user/password2) (Ping timeout: 256 seconds)
[08:31:45] <InPhase> But to your point that Python has unintuitive parts, this is the spot where I agree with you.  This part is unintuitive for people coming from other languages.
[08:32:33] <InPhase> (And a few other cases that we could probably discuss all night and into the morning if not for other things being a better idea to do.)
[08:33:36] <InPhase> I have to date never seen a perfect programming language.  They're all messed up in some manner.
[08:33:40] <jackson99> list as default function argument also comes to mind. if you mutate it, mutated version will become the new default
[08:35:03] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Ping timeout: 256 seconds)
[08:35:15] <InPhase> jackson99: Believe it or not, I managed to use that as a feature once.  :)
[08:35:44] <jackson99> I'm not sure I'd want to rely on that behavior :)
[08:36:20] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[08:36:24] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[08:36:37] <InPhase> jackson99: https://bpa.st/XA4Q  It worked!
[08:36:39] <bayaz> Title: View paste XA4Q 
[08:37:28] *** Quits: hexingb_ (~hexingb@180.212.211.39) (Ping timeout: 256 seconds)
[08:37:45] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Quit: kirankrishna)
[08:38:39] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[08:40:19] <InPhase> jackson99: It might feel a little dirty using the thing that confuses so many people for its benefit, but that makes for a compact and elegant usage interface for that purpose.
[08:42:26] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:43:33] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[08:44:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[08:44:02] <jackson99> InPhase I'd rather just use a global variable if I wanted to do that. intention and consequences would be clearer
[08:44:26] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[08:45:47] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:46:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:47:46] *** Quits: deniska (~denis@user/deniska) (Quit: leaving)
[08:47:57] *** Joins: deniska (~deniska@user/deniska)
[08:48:17] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:7a4c:f58f:8e12:e28b) (Ping timeout: 240 seconds)
[08:49:06] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[08:49:23] <mishugana> InPhase: Moreover, even the idea of a perfect programming language is very subjective!
[08:49:35] *** Joins: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net)
[08:50:28] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpws4ggbee1mkp3.ipv6.telus.net) (Remote host closed the connection)
[08:50:37] *** Quits: stagas (~stagas@2a02:587:c421:9272:39c:4021:871d:bf87) (Ping timeout: 240 seconds)
[08:51:29] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz0d0z1ubsikg1.ipv6.telus.net)
[08:51:35] * bayaz warns deniska: testing
[08:52:31] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[08:52:37] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[08:52:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:52:49] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:52:51] <mishugana> What does that message mean - "bayaz warns deniska: testing"?
[08:52:58] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[08:53:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[08:53:15] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:53:28] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:53:42] <deniska> mishugana: testing the bot, it has a bug that it didn't see me as op
[08:53:53] <mishugana> Ah, okay
[08:54:57] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[08:55:05] *** Joins: deniska (~deniska@user/deniska)
[08:55:17] *** Joins: horseface (~horseface@user/horseface)
[08:55:25] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[08:55:34] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:55:37] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[08:55:41] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:55:44] *** Quits: horseface (~horseface@user/horseface) (Max SendQ exceeded)
[08:59:03] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[09:01:38] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:01:41] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[09:01:50] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:06:00] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[09:08:29] *** Quits: illusion1212 (~illusion1@185.135.96.133) (Ping timeout: 256 seconds)
[09:09:39] *** Joins: yBtNJW3j (~aib9Zume@71.50.58.137)
[09:10:45] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:13:28] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:13:32] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[09:16:26] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[09:17:47] *** Joins: kirankrishna (~Thunderbi@45.83.220.194)
[09:18:26] *** Quits: deniska (~deniska@user/deniska) (Quit: leaving)
[09:18:37] *** Joins: deniska (~deniska@user/deniska)
[09:19:27] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[09:19:37] *** Joins: deniska (~deniska@user/deniska)
[09:21:52] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[09:21:52] *** Quits: kirankrishna (~Thunderbi@45.83.220.194) (Client Quit)
[09:21:58] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:4c6b:65bb:94e9:a14b) (Read error: Connection reset by peer)
[09:22:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:24:35] *** Quits: deniska (~deniska@user/deniska) (Read error: Connection reset by peer)
[09:24:52] *** Joins: deniska (~deniska@user/deniska)
[09:25:37] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:27:32] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:27:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:29:50] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:57] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[09:33:06] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:36:32] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:37:57] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[09:39:14] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:39:49] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[09:43:02] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:43:22] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:47:07] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:47:10] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:48:07] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:49:53] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:52:09] *** Quits: pizdets (~pizdets@183.182.111.169) (Read error: Connection reset by peer)
[09:52:21] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[09:52:31] *** Joins: pizdets (~pizdets@183.182.111.169)
[09:54:35] *** Joins: murii (~murii@90.95.42.142)
[09:55:26] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:55:37] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 240 seconds)
[09:57:17] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:57:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:57:37] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:57:41] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[09:59:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:59:43] *** Joins: hexingb_ (~hexingb@2409:8902:7ba4:c21d:f9ed:e828:3225:4d11)
[10:01:10] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[10:01:32] *** Joins: sner (~paul@user/sner)
[10:03:26] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[10:03:54] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[10:04:09] *** Joins: llh (~llh@user/llh)
[10:08:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:09:31] *** Joins: Rounin (~david@84.212.130.215)
[10:09:32] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:10:39] *** Joins: horseface (~horseface@user/horseface)
[10:12:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:12:45] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[10:12:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[10:16:03] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[10:16:19] <sonny> google and bing failed on -site:.com, google was working for a while but it stopped for some reason
[10:16:38] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:18:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:19:08] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:24:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:24:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:24:59] *** Joins: aqua (~aqua@user/aqua)
[10:25:03] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[10:26:02] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:26:17] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:26:44] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[10:27:17] *** Quits: hexingb_ (~hexingb@2409:8902:7ba4:c21d:f9ed:e828:3225:4d11) (Ping timeout: 240 seconds)
[10:27:24] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:27:32] *** Joins: hexingb_ (~hexingb@2409:8902:7ba5:cbb3:d902:2a31:5b9d:d9c1)
[10:29:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[10:30:36] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:33:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:33:42] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:33:51] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[10:33:57] *** Quits: hexingb_ (~hexingb@2409:8902:7ba5:cbb3:d902:2a31:5b9d:d9c1) (Ping timeout: 240 seconds)
[10:34:09] *** Joins: audiobirb (~audio@user/audio)
[10:35:03] *** Joins: hexingb_ (~hexingb@111.32.64.205)
[10:35:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:35:54] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:35:54] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 256 seconds)
[10:37:57] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:38:57] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[10:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[10:39:46] *** Joins: Daemonick (~Daemonick@62.1.158.125)
[10:40:13] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[10:40:40] *** Quits: Valware (~val@lol.valware.uk) (Changing host)
[10:40:40] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[10:41:03] *** Joins: cliluw (~cliluw@47.147.73.223)
[10:43:34] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[10:43:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:51:28] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:52:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:53:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:56:17] *** Joins: anovick_ (~anovick@2a0d:6fc0:1e13:4a00::34d)
[10:57:23] *** Joins: stagas (~stagas@2a02:587:c421:9272:79ff:ab38:984:fc2c)
[10:57:56] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:58:08] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:58:59] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:59:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:59:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:00:27] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[11:03:00] *** Joins: caramel (~caramel@user/caramel)
[11:03:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[11:04:36] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[11:04:41] *** A_Dragon is now known as RemoteHost
[11:05:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:05:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:06:02] *** Joins: frost (~frost@user/frost)
[11:06:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:07:28] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-5d0b-8dcf-929e-eae2.res6.spectrum.com) (Quit: jarthur)
[11:09:29] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:09:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[11:10:06] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[11:11:23] *** Joins: jumpArtifact (~jumpArtif@user/jumpartifact)
[11:12:53] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:13:04] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:13:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[11:14:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:14:35] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:16:19] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:16:22] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:16:38] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[11:17:23] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:19:41] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[11:20:16] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:20:28] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:20:36] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:20:48] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:21:05] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[11:22:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:23:37] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[11:24:39] *** Joins: migvie (~migvie@84.66.4.83)
[11:25:53] *** Joins: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it)
[11:26:09] *** Quits: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:26:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:26:48] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:27:45] *** Joins: palasso (~palasso@user/palasso)
[11:29:34] *** Quits: anovick_ (~anovick@2a0d:6fc0:1e13:4a00::34d) (Ping timeout: 268 seconds)
[11:39:30] *** Quits: migvie (~migvie@84.66.4.83) (*.net *.split)
[11:39:30] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (*.net *.split)
[11:39:30] *** Quits: frost (~frost@user/frost) (*.net *.split)
[11:39:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (*.net *.split)
[11:39:30] *** Quits: cliluw (~cliluw@47.147.73.223) (*.net *.split)
[11:39:30] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (*.net *.split)
[11:39:31] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (*.net *.split)
[11:39:31] *** Quits: horseface (~horseface@user/horseface) (*.net *.split)
[11:39:31] *** Quits: llh (~llh@user/llh) (*.net *.split)
[11:39:31] *** Quits: pizdets (~pizdets@183.182.111.169) (*.net *.split)
[11:39:31] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (*.net *.split)
[11:39:31] *** Quits: deniska (~deniska@user/deniska) (*.net *.split)
[11:39:31] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (*.net *.split)
[11:39:31] *** Quits: cisco87 (~quassel@user/cisco87) (*.net *.split)
[11:39:31] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (*.net *.split)
[11:39:31] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[11:39:31] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[11:39:31] *** Quits: vysn (~vysn@user/vysn) (*.net *.split)
[11:39:31] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[11:39:31] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[11:39:31] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (*.net *.split)
[11:39:31] *** Quits: Djoobstil (~djoobstil@djoobstil.online) (*.net *.split)
[11:39:31] *** Quits: inky (~inky@46.36.113.139) (*.net *.split)
[11:39:31] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (*.net *.split)
[11:39:31] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (*.net *.split)
[11:39:31] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (*.net *.split)
[11:39:31] *** Quits: wildo (~lain6141@119.224.72.222) (*.net *.split)
[11:39:31] *** Quits: kodah (~kodah@user/kodah) (*.net *.split)
[11:39:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[11:39:31] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (*.net *.split)
[11:39:31] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[11:39:31] *** Quits: EtherNet (~ethernet@user/ethernet) (*.net *.split)
[11:39:31] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (*.net *.split)
[11:39:31] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (*.net *.split)
[11:39:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[11:39:31] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:ece1:4d6c:662b:8ed8) (*.net *.split)
[11:39:31] *** Quits: kiryin_ (~kiryin@85-76-100-129-nat.elisa-mobile.fi) (*.net *.split)
[11:39:31] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[11:39:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[11:39:31] *** Quits: Satin (uid193953@user/Seten) (*.net *.split)
[11:39:31] *** Quits: justIrresolute (~justache@user/justache) (*.net *.split)
[11:39:31] *** Quits: stoneware8 (~stoneware@user/stoneware) (*.net *.split)
[11:39:31] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[11:39:31] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[11:39:31] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[11:39:31] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (*.net *.split)
[11:39:31] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (*.net *.split)
[11:39:32] *** Quits: Square (~a@user/square) (*.net *.split)
[11:39:32] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (*.net *.split)
[11:39:32] *** Quits: anderson (~ande@user/anderson) (*.net *.split)
[11:39:32] *** Quits: zero (~z@user/zero) (*.net *.split)
[11:39:32] *** Quits: z3t0 (~z3t0@146.71.14.98) (*.net *.split)
[11:39:32] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[11:39:32] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (*.net *.split)
[11:39:32] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[11:39:32] *** Quits: _inky (~inky_@46.36.113.139) (*.net *.split)
[11:39:32] *** Quits: img (~img@user/img) (*.net *.split)
[11:39:32] *** Quits: Echoz_ (~chris@user/echoz) (*.net *.split)
[11:39:32] *** Quits: peace-angel (uid530400@user/star1) (*.net *.split)
[11:39:32] *** Quits: Teckla (uid172075@user/teckla) (*.net *.split)
[11:39:32] *** Quits: arahael (~arahael@203.158.51.1) (*.net *.split)
[11:39:32] *** Quits: cation (cation@user/cation) (*.net *.split)
[11:39:32] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[11:39:32] *** Quits: vukky (~vukky@wikipedia/vukky) (*.net *.split)
[11:39:32] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[11:39:32] *** Quits: void09 (~void@150.230.21.57) (*.net *.split)
[11:39:32] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[11:39:32] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[11:39:32] *** Quits: steam (~steam@user/steam) (*.net *.split)
[11:39:32] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (*.net *.split)
[11:39:32] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[11:39:32] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[11:39:32] *** Quits: chuckx (~chuckx@user/chuckx) (*.net *.split)
[11:39:32] *** Quits: tjr (~tjr@user/tjr) (*.net *.split)
[11:39:32] *** Quits: SmokenatorZ6 (~Smokenato@187.101.176.53) (*.net *.split)
[11:39:32] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[11:39:32] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (*.net *.split)
[11:39:32] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (*.net *.split)
[11:39:32] *** Quits: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net) (*.net *.split)
[11:39:32] *** Quits: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869) (*.net *.split)
[11:39:32] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[11:39:32] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[11:39:32] *** Quits: BenLand100 (~bland@user/benland100) (*.net *.split)
[11:39:32] *** Quits: PsyZeus (~TheLight@user/psyzeus) (*.net *.split)
[11:39:32] *** Quits: aqua (~aqua@user/aqua) (*.net *.split)
[11:39:32] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (*.net *.split)
[11:39:32] *** Quits: Atque (~Atque@user/atque) (*.net *.split)
[11:39:32] *** Quits: hololeap (~hololeap@user/hololeap) (*.net *.split)
[11:39:32] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[11:39:33] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (*.net *.split)
[11:39:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[11:39:33] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (*.net *.split)
[11:39:33] *** Quits: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7) (*.net *.split)
[11:39:33] *** Quits: Alpha3031[m] (~alpha3031@wikipedia/alpha3031) (*.net *.split)
[11:39:33] *** Quits: surgeon[m] (~surge9nma@2001:470:69fc:105::f585) (*.net *.split)
[11:39:33] *** Quits: nworb (~zbrownm]@2001:470:69fc:105::1:33db) (*.net *.split)
[11:39:33] *** Quits: cornedor[m] (~cornedorm@2001:470:69fc:105::ffd7) (*.net *.split)
[11:39:33] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[11:39:33] *** Quits: tehenderz (~tehenderz@ti0018a400-9020.bb.online.no) (*.net *.split)
[11:39:33] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[11:39:33] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[11:39:33] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[11:39:33] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[11:39:33] *** Quits: ShockTohp (~kevin@155.138.224.160) (*.net *.split)
[11:39:33] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[11:39:33] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[11:39:33] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (*.net *.split)
[11:39:33] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (*.net *.split)
[11:39:33] *** Quits: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com) (*.net *.split)
[11:39:33] *** Quits: joev (~joev@user/joev) (*.net *.split)
[11:39:33] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[11:39:33] *** Quits: KDDLB (kevin@user/kddlb) (*.net *.split)
[11:39:33] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[11:39:33] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[11:39:33] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[11:39:33] *** Quits: piou (~piou@user/piou) (*.net *.split)
[11:39:33] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[11:39:33] *** Quits: Telvana (~capo@user/telvana) (*.net *.split)
[11:39:33] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[11:39:33] *** Quits: Noni (zet@kapsi.fi) (*.net *.split)
[11:39:33] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[11:39:33] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[11:39:33] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[11:39:33] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (*.net *.split)
[11:39:34] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[11:39:34] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[11:39:34] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[11:39:34] *** Quits: l (launchd@bitbot/launchd) (*.net *.split)
[11:39:34] *** Quits: riotz (riotz@user/riotz) (*.net *.split)
[11:39:34] *** Quits: Athas (athas@sigkill.dk) (*.net *.split)
[11:39:34] *** Quits: esran (~esran@vps.conical-effort.net) (*.net *.split)
[11:39:34] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[11:39:34] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[11:39:34] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[11:39:34] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[11:39:34] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[11:39:34] *** Quits: ochronus (~ochronus@2a01:4f8:1c1c:be5b::1) (*.net *.split)
[11:39:34] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[11:39:34] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) (*.net *.split)
[11:39:34] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[11:39:34] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[11:39:34] *** Quits: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) (*.net *.split)
[11:39:34] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[11:39:34] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (*.net *.split)
[11:39:34] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (*.net *.split)
[11:39:34] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (*.net *.split)
[11:39:34] *** Quits: blackcatmaxy (~blackcatm@2001:470:69fc:105::bae5) (*.net *.split)
[11:39:34] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (*.net *.split)
[11:39:34] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (*.net *.split)
[11:39:34] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[11:39:34] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[11:39:34] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (*.net *.split)
[11:39:34] *** Quits: [smlckz] (3329f5a75b@user/smlckz) (*.net *.split)
[11:39:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[11:39:34] *** Quits: jacekowski (jacekowski@jacekowski.org) (*.net *.split)
[11:39:34] *** Quits: Learath2 (~learath2@user/learath2) (*.net *.split)
[11:39:34] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: mhmd (~mhmd@37.48.90.208) (*.net *.split)
[11:39:35] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[11:39:35] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[11:39:35] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[11:39:35] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[11:39:35] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (*.net *.split)
[11:39:35] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[11:39:35] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (*.net *.split)
[11:39:35] *** Quits: jumpArtifact (~jumpArtif@user/jumpartifact) (*.net *.split)
[11:39:35] *** Quits: Rounin (~david@84.212.130.215) (*.net *.split)
[11:39:35] *** Quits: sner (~paul@user/sner) (*.net *.split)
[11:39:35] *** Quits: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net) (*.net *.split)
[11:39:35] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (*.net *.split)
[11:39:35] *** Quits: kron (~weechat@user/qaph) (*.net *.split)
[11:39:35] *** Quits: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net) (*.net *.split)
[11:39:35] *** Quits: Valware (~val@Valeyard/Developer/Valware) (*.net *.split)
[11:39:35] *** Quits: Brett[Air] (~Brett@124.148.79.4) (*.net *.split)
[11:39:35] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (*.net *.split)
[11:39:35] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (*.net *.split)
[11:39:35] *** Quits: matrox (~bc8147f2@cerf.good1.com) (*.net *.split)
[11:39:35] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (*.net *.split)
[11:39:35] *** Quits: sheepduck (~sheepduck@user/sheepduck) (*.net *.split)
[11:39:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[11:39:35] *** Quits: jabster28 (~jabster28@81.111.217.63) (*.net *.split)
[11:39:35] *** Quits: pavonia (~user@user/siracusa) (*.net *.split)
[11:39:35] *** Quits: gurki (~gurki@user/gurki) (*.net *.split)
[11:39:35] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (*.net *.split)
[11:39:35] *** Quits: gravypod (~gravypod@user/gravypod) (*.net *.split)
[11:39:35] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[11:39:35] *** Quits: kinduff (~kinduff@user/kinduff) (*.net *.split)
[11:39:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[11:39:35] *** Quits: ozarker (~ozarker@user/ozarker) (*.net *.split)
[11:39:35] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[11:39:35] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[11:39:35] *** Quits: dka (~code-is-a@193.70.33.83) (*.net *.split)
[11:39:35] *** Quits: gbmor (gbmor@gbmor.org) (*.net *.split)
[11:39:35] *** Quits: raym (~raym@user/raym) (*.net *.split)
[11:39:35] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (*.net *.split)
[11:39:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[11:39:35] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (*.net *.split)
[11:39:35] *** Quits: ravan (~ravan@user/ravan) (*.net *.split)
[11:39:35] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (*.net *.split)
[11:39:36] *** Quits: inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[11:39:36] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (*.net *.split)
[11:39:36] *** Quits: Vlen (~irc@user/Vlen) (*.net *.split)
[11:39:36] *** Quits: molt (~molt@46.33.200.12) (*.net *.split)
[11:39:36] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[11:39:36] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[11:39:36] *** Quits: xeno (~xeno@user/xeno) (*.net *.split)
[11:39:36] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (*.net *.split)
[11:39:36] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[11:39:36] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[11:39:36] *** Quits: davros (~davros@host86-185-61-39.range86-185.btcentralplus.com) (*.net *.split)
[11:39:36] *** Quits: MrPockets (~John@user/mrpockets) (*.net *.split)
[11:39:36] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[11:39:36] *** Quits: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de) (*.net *.split)
[11:39:36] *** Quits: Chpy0 (~chpy@30-8-178-69.static.gci.net) (*.net *.split)
[11:39:36] *** Quits: ProperNoun (~holyShizn@user/propernoun) (*.net *.split)
[11:39:36] *** Quits: zwei (~Zweihande@znc.ext.zweihander.me) (*.net *.split)
[11:39:36] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[11:39:36] *** Quits: brandon (~brandon@user/brandon) (*.net *.split)
[11:39:36] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[11:39:36] *** Quits: jootoi- (~jootoi@130.61.158.197) (*.net *.split)
[11:39:36] *** Quits: shantaram (shan@cyblog/maintainer/shan) (*.net *.split)
[11:39:36] *** Quits: Lochnair8 (~Lochnair@wireguard/contributor/lochnair) (*.net *.split)
[11:39:36] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[11:39:36] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (*.net *.split)
[11:39:36] *** Quits: sicelo (~sicelo@user/sicelo) (*.net *.split)
[11:39:37] *** Quits: lupi- (~lupi@is.here.for-some.fun) (*.net *.split)
[11:39:37] *** Quits: feoh (~feoh@idlerpg/player/feoh) (*.net *.split)
[11:39:37] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[11:39:37] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[11:39:37] *** Quits: Dreg (~Dreg@fr33project.org) (*.net *.split)
[11:39:37] *** Quits: andypandy_ (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (*.net *.split)
[11:39:37] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[11:39:37] *** Quits: biberao (~Unknown@user/biberao) (*.net *.split)
[11:39:37] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (*.net *.split)
[11:39:37] *** Quits: locutus_ (~locutus@107.174.27.214) (*.net *.split)
[11:39:37] *** Quits: jkl1337 (~jkl@user/jkl) (*.net *.split)
[11:39:37] *** Quits: Jaran (~mail@user/jaran) (*.net *.split)
[11:39:37] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (*.net *.split)
[11:39:37] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[11:39:37] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (*.net *.split)
[11:39:37] *** Quits: Solak (~solak@cthia.xs4all.nl) (*.net *.split)
[11:39:37] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[11:39:37] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[11:39:37] *** Quits: mannu (mannu@wodanaz.se) (*.net *.split)
[11:39:37] *** Quits: fingercomp (fingercomp@fomalhaut.me) (*.net *.split)
[11:39:37] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[11:39:37] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[11:39:37] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[11:39:37] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (*.net *.split)
[11:39:37] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com) (*.net *.split)
[11:39:37] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[11:39:37] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (*.net *.split)
[11:39:37] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[11:39:38] *** Quits: nf (~n@monade.li) (*.net *.split)
[11:39:38] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (*.net *.split)
[11:39:38] *** Quits: Amadiro (~Amadiro@84.209.11.12) (*.net *.split)
[11:39:38] *** Quits: nicoty (~nicoty@user/nicoty) (*.net *.split)
[11:39:38] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[11:39:38] *** Quits: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa) (*.net *.split)
[11:39:38] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (*.net *.split)
[11:39:38] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[11:39:38] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[11:39:38] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[11:39:38] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (*.net *.split)
[11:39:38] *** Quits: jsjolund (~user@83-233-117-78.cust.bredband2.com) (*.net *.split)
[11:39:38] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[11:39:38] *** Quits: avu (~jan@user/avu) (*.net *.split)
[11:39:38] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (*.net *.split)
[11:39:38] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[11:39:38] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[11:39:39] *** Quits: leachim6 (~leachim6@user/leachim6) (*.net *.split)
[11:39:39] *** Quits: glider (~glider@user/glider) (*.net *.split)
[11:39:39] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[11:39:39] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (*.net *.split)
[11:39:39] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[11:39:39] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[11:39:39] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (*.net *.split)
[11:39:39] *** Quits: edenist (edenist@rdns.robotprofessor.net) (*.net *.split)
[11:39:39] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[11:39:39] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[11:39:39] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[11:39:39] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (*.net *.split)
[11:39:39] *** Quits: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d) (*.net *.split)
[11:39:39] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (*.net *.split)
[11:39:40] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (*.net *.split)
[11:39:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[11:39:40] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (*.net *.split)
[11:39:40] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[11:39:40] *** Quits: tafa (~tafa@user/tafa) (*.net *.split)
[11:39:40] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[11:39:40] *** Quits: momcorp (7fdc0af8d8@2604:bf00:561:2000::277) (*.net *.split)
[11:39:40] *** Quits: benji (~benji@user/benji) (*.net *.split)
[11:39:40] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[11:39:40] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[11:39:40] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[11:39:40] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[11:39:40] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[11:39:40] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (*.net *.split)
[11:39:40] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (*.net *.split)
[11:39:40] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[11:39:41] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[11:39:41] *** Quits: betterOn1 (~user@vmi489242.contaboserver.net) (*.net *.split)
[11:39:41] *** Quits: BGL (thirty@75-149-171-58-Washington.hfc.comcastbusiness.net) (*.net *.split)
[11:39:41] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[11:39:41] *** Quits: ellie (~ellie@user/ellie) (*.net *.split)
[11:39:41] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[11:39:41] *** Quits: AgentK (~AgentK@user/agentk) (*.net *.split)
[11:39:41] *** Quits: RemoteHost (A_D@libera/staff/dragon) (*.net *.split)
[11:39:41] *** Quits: arash (arash@thinks.life.is-a.beauty) (*.net *.split)
[11:39:41] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[11:39:41] *** Quits: epony (~epony@user/epony) (*.net *.split)
[11:39:41] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (*.net *.split)
[11:39:41] *** Quits: ugjka (~ugjka@ugjka.net) (*.net *.split)
[11:39:41] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (*.net *.split)
[11:39:42] *** Quits: derpy (~quassel@2a02:810d:800:10f8:a692:bb79:b40d:e741) (*.net *.split)
[11:39:42] *** Quits: paulo (paulo@user/paulo/x-9032687) (*.net *.split)
[11:39:42] *** Quits: eein (35f97d3dbd@2604:bf00:561:2000::2a6) (*.net *.split)
[11:39:42] *** Quits: daurn (~daurnimat@vultr.daurnimator.com) (*.net *.split)
[11:39:42] *** Quits: Geolykt (~Geolykt@94.46.93.245) (*.net *.split)
[11:39:42] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[11:39:42] *** Quits: ac5tin (~ac5tin@user/ac5tin) (*.net *.split)
[11:39:42] *** Quits: devz3ro (devz3ro2@user/devz3ro) (*.net *.split)
[11:39:42] *** Quits: Doffi (~doffi@91.132.197.188) (*.net *.split)
[11:39:42] *** Quits: Thedarkb1-Work (~Thedarkb@62.232.253.82) (*.net *.split)
[11:39:42] *** Quits: erica (~erica@user/erica) (*.net *.split)
[11:39:42] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[11:39:42] *** Quits: Bombe (~bombe@freenet/release-manager/Bombe) (*.net *.split)
[11:39:42] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[11:39:42] *** Quits: armin (~armin@unix.porn) (*.net *.split)
[11:39:42] *** Quits: APic (apic@apic.name) (*.net *.split)
[11:39:42] *** Quits: thiccdaddy (~o_O@user/thiccdaddy) (*.net *.split)
[11:39:42] *** Quits: ds (~ds@user/ds) (*.net *.split)
[11:39:42] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: shodan45 (~quassel@107.161.22.155) (*.net *.split)
[11:39:42] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[11:39:42] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (*.net *.split)
[11:39:42] *** Quits: Kaya_C (~KC@2a01:4f9:c010:3917::1) (*.net *.split)
[11:39:42] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[11:39:42] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[11:39:42] *** Quits: QuartzXtal (sid507167@id-507167.lymington.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: pyzozord (pyzozord@user/pyzozord) (*.net *.split)
[11:39:42] *** Quits: ishan (~ishan@2400:8904::f03c:91ff:fe9e:a26f) (*.net *.split)
[11:39:42] *** Quits: nanowire_ (rob@user/nanowire) (*.net *.split)
[11:39:42] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[11:39:42] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[11:39:42] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[11:39:43] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[11:39:43] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[11:39:43] *** Quits: julian[m]123 (~julianjul@2001:470:69fc:105::1:428f) (*.net *.split)
[11:39:43] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (*.net *.split)
[11:39:43] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (*.net *.split)
[11:39:43] *** Quits: paoda[m] (~paodamatr@2001:470:69fc:105::9247) (*.net *.split)
[11:39:43] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (*.net *.split)
[11:39:43] *** Quits: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2) (*.net *.split)
[11:39:43] *** Quits: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2) (*.net *.split)
[11:39:43] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (*.net *.split)
[11:39:43] *** Quits: dovi[m] (~dovifully@2001:470:69fc:105::1:2bd9) (*.net *.split)
[11:39:43] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[11:39:43] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[11:39:43] *** Quits: summonner (~summonner@188.26.74.156) (*.net *.split)
[11:39:43] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[11:39:43] *** Quits: Decker (~d3x0r@user/d3x0r) (*.net *.split)
[11:39:43] *** Quits: jstoker (jstoker@user/jstoker) (*.net *.split)
[11:39:43] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (*.net *.split)
[11:39:43] *** Quits: mercenary (~mercenary@user/mercenary) (*.net *.split)
[11:39:43] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[11:39:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[11:39:43] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[11:39:43] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[11:39:44] *** Quits: tanto (~tanto@178.62.223.32) (*.net *.split)
[11:39:44] *** Quits: joj (~joj@jojeee.xyz) (*.net *.split)
[11:39:44] *** Quits: les (znc@user/les) (*.net *.split)
[11:39:44] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[11:39:44] *** Quits: Liothen (sid23291@id-23291.helmsley.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: lf94 (~lf94@user/lf94) (*.net *.split)
[11:39:44] *** Quits: krin (sid500722@user/krin) (*.net *.split)
[11:39:44] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[11:39:44] *** Quits: zunk (~zunk@user/zunk) (*.net *.split)
[11:39:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[11:39:44] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[11:39:44] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[11:39:44] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[11:39:44] *** Quits: geonic (~geonic@user/geonic) (*.net *.split)
[11:39:44] *** Quits: kinduff[m] (~kinduffma@2001:470:69fc:105::1:5e09) (*.net *.split)
[11:39:44] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[11:39:44] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[11:39:44] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[11:39:44] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[11:39:44] *** Quits: reinhardt (~cronos@user/cronos) (*.net *.split)
[11:39:44] *** Quits: snake (~snake@user/snake) (*.net *.split)
[11:39:44] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (*.net *.split)
[11:39:44] *** Quits: Liber- (cis@user/cis) (*.net *.split)
[11:39:44] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[11:39:44] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[11:39:44] *** Quits: dfoolz (~dfoolz@2a01:4f8:160:1161::2) (*.net *.split)
[11:39:45] *** Quits: gshumway (~gshumway@user/gshumway) (*.net *.split)
[11:39:45] *** Quits: legit (petru@2a03:b0c0:3:f0::60:1000) (*.net *.split)
[11:39:45] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[11:39:45] *** Quits: blahblah441 (~blahblah4@89.46.62.154) (*.net *.split)
[11:39:45] *** Quits: madprops (hj8oijo@user/madprops) (*.net *.split)
[11:39:45] *** Quits: carploader (~bull@185.117.72.168) (*.net *.split)
[11:39:45] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[11:39:45] *** Quits: EdwardIII (~edwardiii@user/edwardiii) (*.net *.split)
[11:39:45] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[11:39:45] *** Quits: picooz_ (~picooz@user/picooz) (*.net *.split)
[11:39:45] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[11:39:45] *** Quits: Boniche (~Boniche@ivysaur.umbreon.net) (*.net *.split)
[11:39:45] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[11:39:45] *** Quits: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it) (*.net *.split)
[11:39:45] *** Quits: Duchess (~Duchess@24.109.185.150) (*.net *.split)
[11:39:45] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[11:39:45] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:39:57] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:40:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[11:40:41] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[11:41:38] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 256 seconds)
[11:42:33] *** Quits: yBtNJW3j (~aib9Zume@71.50.58.137) (Quit: Leaving)
[11:49:10] *** Joins: aradesh (~aradesh@2a02:c7c:120a:b200:f9e7:d5ec:cde6:98e)
[11:50:08] *** Quits: Daemonick (~Daemonick@62.1.158.125) (Ping timeout: 256 seconds)
[11:50:37] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[11:51:45] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Max SendQ exceeded)
[11:51:47] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Max SendQ exceeded)
[11:51:47] *** Quits: fling (~fling@user/fling) (Max SendQ exceeded)
[11:51:53] *** Joins: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net)
[11:52:00] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[11:52:00] *** Joins: yBtNJW3j (~aib9Zume@71.50.58.137)
[11:52:00] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:52:00] *** Joins: absc (~absc@81.31.144.28)
[11:52:00] *** Joins: biberu (~biberu@user/biberu)
[11:52:00] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[11:52:00] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[11:52:00] *** Joins: mrig (~mrig@user/mrig)
[11:52:00] *** Joins: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it)
[11:52:00] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:52:00] *** Joins: jumpArtifact (~jumpArtif@user/jumpartifact)
[11:52:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:52:00] *** Joins: cliluw (~cliluw@47.147.73.223)
[11:52:00] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[11:52:00] *** Joins: kish` (~aqua@user/aqua)
[11:52:00] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[11:52:00] *** Joins: Rounin (~david@84.212.130.215)
[11:52:00] *** Joins: llh (~llh@user/llh)
[11:52:00] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[11:52:00] *** Joins: sner (~paul@user/sner)
[11:52:00] *** Joins: pizdets (~pizdets@183.182.111.169)
[11:52:00] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[11:52:00] *** Joins: deniska (~deniska@user/deniska)
[11:52:00] *** Joins: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net)
[11:52:00] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[11:52:00] *** Joins: Atque (~Atque@user/atque)
[11:52:00] *** Joins: cisco87 (~quassel@user/cisco87)
[11:52:00] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[11:52:00] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:52:00] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[11:52:00] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[11:52:00] *** Joins: Duchess (~Duchess@24.109.185.150)
[11:52:00] *** Joins: avu (~jan@user/avu)
[11:52:00] *** Joins: kron (~weechat@user/qaph)
[11:52:00] *** Joins: hololeap (~hololeap@user/hololeap)
[11:52:00] *** Joins: Soni (~quassel@autistic.space)
[11:52:00] *** Joins: Matt|home (~matt@adsl-74-233-58-165.mia.bellsouth.net)
[11:52:00] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[11:52:00] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[11:52:00] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[11:52:00] *** Joins: Djoobstil (~djoobstil@djoobstil.online)
[11:52:00] *** Joins: mickey8 (~user@user/mickey)
[11:52:00] *** Joins: inky (~inky@46.36.113.139)
[11:52:00] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[11:52:00] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[11:52:00] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[11:52:00] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[11:52:00] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[11:52:00] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[11:52:00] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:52:00] *** Joins: wildo (~lain6141@119.224.72.222)
[11:52:00] *** Joins: kodah (~kodah@user/kodah)
[11:52:00] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:52:00] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[11:52:00] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[11:52:00] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:52:00] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com)
[11:52:00] *** Joins: rvalue (~rvalue@user/rvalue)
[11:52:00] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[11:52:00] *** Joins: EtherNet (~ethernet@user/ethernet)
[11:52:00] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[11:52:00] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[11:52:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:52:00] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:ece1:4d6c:662b:8ed8)
[11:52:00] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[11:52:00] *** Joins: kiryin_ (~kiryin@85-76-100-129-nat.elisa-mobile.fi)
[11:52:00] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:52:00] *** Joins: legit (petru@2a03:b0c0:3:f0::60:1000)
[11:52:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:52:00] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[11:52:00] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[11:52:00] *** Joins: Satin (uid193953@user/Seten)
[11:52:00] *** Joins: justIrresolute (~justache@user/justache)
[11:52:00] *** Joins: stoneware8 (~stoneware@user/stoneware)
[11:52:00] *** Joins: nitrix (~nitrix@user/nitrix)
[11:52:00] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[11:52:00] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[11:52:00] *** Joins: JanC (~janc@user/janc)
[11:52:00] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[11:52:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:52:00] *** Joins: jabster28 (~jabster28@81.111.217.63)
[11:52:00] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[11:52:00] *** Joins: pavonia (~user@user/siracusa)
[11:52:00] *** Joins: Square (~a@user/square)
[11:52:00] *** Joins: gurki (~gurki@user/gurki)
[11:52:00] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:52:00] *** Joins: anderson (~ande@user/anderson)
[11:52:00] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[11:52:00] *** Joins: zero (~z@user/zero)
[11:52:00] *** Joins: gravypod (~gravypod@user/gravypod)
[11:52:00] *** Joins: z3t0 (~z3t0@146.71.14.98)
[11:52:00] *** Joins: raym (~raym@user/raym)
[11:52:00] *** Joins: a1paca (~a1paca@user/a1paca)
[11:52:00] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[11:52:00] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[11:52:00] *** Joins: kinduff (~kinduff@user/kinduff)
[11:52:00] *** Joins: edr (~edr@user/edr)
[11:52:00] *** Joins: homura (uid398348@user/homura)
[11:52:00] *** Joins: ozarker (~ozarker@user/ozarker)
[11:52:00] *** Joins: _inky (~inky_@46.36.113.139)
[11:52:00] *** Joins: img (~img@user/img)
[11:52:00] *** Joins: Echoz_ (~chris@user/echoz)
[11:52:00] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:52:00] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[11:52:00] *** Joins: rvgate (~rvgate@user/rvgate)
[11:52:00] *** Joins: julian[m]123 (~julianjul@2001:470:69fc:105::1:428f)
[11:52:00] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[11:52:00] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[11:52:00] *** Joins: jinsun_ (~jinsun@user/jinsun)
[11:52:00] *** Joins: epony (~epony@user/epony)
[11:52:00] *** Joins: peace-angel (uid530400@user/star1)
[11:52:00] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[11:52:00] *** Joins: Teckla (uid172075@user/teckla)
[11:52:00] *** Joins: dka (~code-is-a@193.70.33.83)
[11:52:00] *** Joins: arahael (~arahael@203.158.51.1)
[11:52:00] *** Joins: gbmor (gbmor@gbmor.org)
[11:52:00] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[11:52:00] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[11:52:00] *** Joins: ugjka (~ugjka@ugjka.net)
[11:52:00] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:52:00] *** Joins: nf (~n@monade.li)
[11:52:00] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[11:52:00] *** Joins: cation (cation@user/cation)
[11:52:00] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[11:52:00] *** Joins: inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[11:52:00] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[11:52:00] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[11:52:00] *** Joins: vukky (~vukky@wikipedia/vukky)
[11:52:00] *** Joins: Vlen (~irc@user/Vlen)
[11:52:00] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[11:52:00] *** Joins: molt (~molt@46.33.200.12)
[11:52:00] *** Joins: koo5_ (~quassel@51.140.155.227)
[11:52:00] *** Joins: Jigsy (~Jigsy@user/jigsy)
[11:52:00] *** Joins: xeno (~xeno@user/xeno)
[11:52:00] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[11:52:00] *** Joins: nicoty (~nicoty@user/nicoty)
[11:52:00] *** Joins: psydroid (~psydroid@user/psydroid)
[11:52:00] *** Joins: kinduff[m] (~kinduffma@2001:470:69fc:105::1:5e09)
[11:52:00] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[11:52:00] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[11:52:00] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[11:52:00] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[11:52:00] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[11:52:00] *** Joins: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d)
[11:52:00] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[11:52:00] *** Joins: orkim (~orkim@user/orkim)
[11:52:00] *** Joins: paoda[m] (~paodamatr@2001:470:69fc:105::9247)
[11:52:00] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[11:52:00] *** Joins: Alpha3031[m] (~alpha3031@wikipedia/alpha3031)
[11:52:00] *** Joins: blackcatmaxy (~blackcatm@2001:470:69fc:105::bae5)
[11:52:00] *** Joins: surgeon[m] (~surge9nma@2001:470:69fc:105::f585)
[11:52:00] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[11:52:00] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[11:52:00] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[11:52:00] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[11:52:00] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[11:52:00] *** Joins: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa)
[11:52:00] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:52:00] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[11:52:00] *** Joins: nworb (~zbrownm]@2001:470:69fc:105::1:33db)
[11:52:00] *** Joins: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2)
[11:52:00] *** Joins: cornedor[m] (~cornedorm@2001:470:69fc:105::ffd7)
[11:52:00] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[11:52:00] *** Joins: akselmo (~akselmo@user/akselmo)
[11:52:00] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[11:52:00] *** Joins: dovi[m] (~dovifully@2001:470:69fc:105::1:2bd9)
[11:52:00] *** Joins: kcrk (~kcrk@user/kcrk)
[11:52:00] *** Joins: void09 (~void@150.230.21.57)
[11:52:00] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[11:52:00] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[11:52:00] *** Joins: steam (~steam@user/steam)
[11:52:00] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[11:52:00] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:52:00] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[11:52:00] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[11:52:00] *** Joins: Dijky (~Dijky@user/dijky)
[11:52:00] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[11:52:00] *** Joins: fingercomp (fingercomp@fomalhaut.me)
[11:52:00] *** Joins: mannu (mannu@wodanaz.se)
[11:52:00] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[11:52:00] *** Joins: Teacup (~teacup@user/teacup)
[11:52:00] *** Joins: Solak (~solak@cthia.xs4all.nl)
[11:52:00] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[11:52:00] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[11:52:00] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[11:52:00] *** Joins: Jaran (~mail@user/jaran)
[11:52:00] *** Joins: jkl1337 (~jkl@user/jkl)
[11:52:00] *** Joins: locutus_ (~locutus@107.174.27.214)
[11:52:00] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[11:52:00] *** Joins: biberao (~Unknown@user/biberao)
[11:52:00] *** Joins: majors_ (~majors@user/majors)
[11:52:00] *** Joins: andypandy_ (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[11:52:00] *** Joins: Dreg (~Dreg@fr33project.org)
[11:52:00] *** Joins: lupi- (~lupi@is.here.for-some.fun)
[11:52:00] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[11:52:00] *** Joins: dstein64 (~dstein64@dannyadam.com)
[11:52:00] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[11:52:00] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[11:52:00] *** Joins: sicelo (~sicelo@user/sicelo)
[11:52:00] *** Joins: Lochnair8 (~Lochnair@wireguard/contributor/lochnair)
[11:52:00] *** Joins: shantaram (shan@cyblog/maintainer/shan)
[11:52:00] *** Joins: jootoi- (~jootoi@130.61.158.197)
[11:52:00] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[11:52:00] *** Joins: BUSY (~BUSY@user/busy)
[11:52:00] *** Joins: brandon (~brandon@user/brandon)
[11:52:00] *** Joins: digilink (~digilink@user/digilink)
[11:52:00] *** Joins: zwei (~Zweihande@znc.ext.zweihander.me)
[11:52:00] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[11:52:00] *** Joins: Chpy0 (~chpy@30-8-178-69.static.gci.net)
[11:52:00] *** Joins: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de)
[11:52:00] *** Joins: rb (~augh@theguntretort.com)
[11:52:00] *** Joins: MrPockets (~John@user/mrpockets)
[11:52:00] *** Joins: davros (~davros@host86-185-61-39.range86-185.btcentralplus.com)
[11:52:00] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[11:52:00] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[11:52:00] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[11:52:00] *** Joins: AMG (ghebo@user/amg)
[11:52:00] *** Joins: ochronus (~ochronus@2a01:4f8:1c1c:be5b::1)
[11:52:00] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[11:52:00] *** Joins: vito (sid1962@user/vito)
[11:52:00] *** Joins: computerquip (sid423484@user/computerquip)
[11:52:00] *** Joins: mweckbecker (~matthias@weckbecker.name)
[11:52:00] *** Joins: [R] (~rs@genoce.org)
[11:52:00] *** Joins: esran (~esran@vps.conical-effort.net)
[11:52:00] *** Joins: Athas (athas@sigkill.dk)
[11:52:00] *** Joins: l (launchd@bitbot/launchd)
[11:52:00] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[11:52:00] *** Joins: phenom (~primus@user/phenom)
[11:52:00] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[11:52:00] *** Joins: riotz (riotz@user/riotz)
[11:52:00] *** Joins: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net)
[11:52:00] *** Joins: Vesryn (~vesryn@user/vesryn)
[11:52:00] *** Joins: Kays (Kays@user/kays)
[11:52:00] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[11:52:00] *** Joins: Noni (zet@kapsi.fi)
[11:52:00] *** Joins: BlueShark (sid10311@user/blueshark)
[11:52:00] *** Joins: Telvana (~capo@user/telvana)
[11:52:00] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[11:52:00] *** Joins: piou (~piou@user/piou)
[11:52:00] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[11:52:00] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[11:52:00] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[11:52:00] *** Joins: KDDLB (kevin@user/kddlb)
[11:52:00] *** Joins: davve (davve@bsd.douchedata.com)
[11:52:00] *** Joins: joev (~joev@user/joev)
[11:52:00] *** Joins: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com)
[11:52:00] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[11:52:00] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[11:52:00] *** Joins: ra4king (~ra4king@roiatalla.com)
[11:52:00] *** Joins: barlas (~aqeel@user/barlas)
[11:52:00] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[11:52:00] *** Joins: ShockTohp (~kevin@155.138.224.160)
[11:52:00] *** Joins: tehenderz (~tehenderz@ti0018a400-9020.bb.online.no)
[11:52:00] *** Joins: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[11:52:00] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[11:52:00] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[11:52:00] *** Joins: jelly (jelly@user/jelly)
[11:52:00] *** Joins: enyc (~enyc@user/enyc)
[11:52:00] *** Joins: livestradamus (~quassel@user/livestradamus)
[11:52:00] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[11:52:00] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[11:52:00] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[11:52:00] *** Joins: Ara (~Ara@user/ara)
[11:52:00] *** Joins: InPhase (~InPhase@openscad/inphase)
[11:52:00] *** Joins: obrut (~obrut@user/obrut)
[11:52:00] *** Joins: mhmd (~mhmd@37.48.90.208)
[11:52:00] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[11:52:00] *** Joins: Learath2 (~learath2@user/learath2)
[11:52:00] *** Joins: jacekowski (jacekowski@jacekowski.org)
[11:52:00] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[11:52:00] *** Joins: [smlckz] (3329f5a75b@user/smlckz)
[11:52:00] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[11:52:00] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[11:52:00] *** Joins: morgabra (sid500580@user/morgabra)
[11:52:00] *** Joins: Spydar007 (~spydar007@user/spydar007)
[11:52:00] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[11:52:00] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[11:52:00] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[11:52:00] *** Joins: Retr0id (~Retr0id@user/retr0id)
[11:52:00] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[11:52:00] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:52:00] *** Joins: Exa (exa@irc.moe)
[11:52:00] *** Joins: glider (~glider@user/glider)
[11:52:00] *** Joins: leachim6 (~leachim6@user/leachim6)
[11:52:00] *** Joins: dfg (dfg@user/dfg)
[11:52:00] *** Joins: ikiryo (sid109660@user/ikiryo)
[11:52:00] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[11:52:00] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[11:52:00] *** Joins: jsjolund (~user@83-233-117-78.cust.bredband2.com)
[11:52:00] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[11:52:00] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[11:52:00] *** Joins: bw (sid2730@user/betawaffle)
[11:52:00] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[11:52:00] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[11:52:00] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[11:52:00] *** Joins: arash (arash@thinks.life.is-a.beauty)
[11:52:00] *** Joins: RemoteHost (A_D@libera/staff/dragon)
[11:52:00] *** Joins: AgentK (~AgentK@user/agentk)
[11:52:00] *** Joins: scjosh (~scjosh@206.189.79.69)
[11:52:00] *** Joins: ellie (~ellie@user/ellie)
[11:52:00] *** Joins: matiss (~matiss@almalinux/web/matiss)
[11:52:00] *** Joins: betterOn1 (~user@vmi489242.contaboserver.net)
[11:52:00] *** Joins: BGL (thirty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[11:52:00] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[11:52:00] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[11:52:00] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[11:52:00] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[11:52:00] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[11:52:00] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[11:52:00] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[11:52:00] *** Joins: AkechiShiro (~licht@user/akechishiro)
[11:52:00] *** Joins: neunon (~neunon@user/neunon)
[11:52:00] *** Joins: benji (~benji@user/benji)
[11:52:00] *** Joins: momcorp (7fdc0af8d8@2604:bf00:561:2000::277)
[11:52:00] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[11:52:00] *** Joins: baloona (~baloona@mail.baloona.de)
[11:52:00] *** Joins: tafa (~tafa@user/tafa)
[11:52:00] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[11:52:00] *** Joins: geonic (~geonic@user/geonic)
[11:52:00] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[11:52:00] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[11:52:00] *** Joins: zunk (~zunk@user/zunk)
[11:52:00] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[11:52:00] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[11:52:00] *** Joins: krin (sid500722@user/krin)
[11:52:00] *** Joins: lf94 (~lf94@user/lf94)
[11:52:00] *** Joins: Liothen (sid23291@id-23291.helmsley.irccloud.com)
[11:52:00] *** Joins: theglass (~glass@user/theglass)
[11:52:00] *** Joins: joj (~joj@jojeee.xyz)
[11:52:00] *** Joins: les (znc@user/les)
[11:52:00] *** Joins: tanto (~tanto@178.62.223.32)
[11:52:00] *** Joins: chronon (~chronon@user/chronon)
[11:52:00] *** Joins: Emil (emil@emil.fi)
[11:52:00] *** Joins: Khoyo (~khoyo@user/khoyo)
[11:52:00] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[11:52:00] *** Joins: Duckle (~Duckle@user/duckle)
[11:52:00] *** Joins: mercenary (~mercenary@user/mercenary)
[11:52:00] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[11:52:00] *** Joins: jstoker (jstoker@user/jstoker)
[11:52:00] *** Joins: Decker (~d3x0r@user/d3x0r)
[11:52:00] *** Joins: pizza (~pizzaiolo@user/pizzaiolo)
[11:52:00] *** Joins: summonner (~summonner@188.26.74.156)
[11:52:00] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[11:52:00] *** Joins: birkoff (birkoff@user/birkoff)
[11:52:00] *** Joins: OverCoder (~OverCoder@user/overcoder)
[11:52:00] *** Joins: nanowire_ (rob@user/nanowire)
[11:52:00] *** Joins: ishan (~ishan@2400:8904::f03c:91ff:fe9e:a26f)
[11:52:00] *** Joins: QuartzXtal (sid507167@id-507167.lymington.irccloud.com)
[11:52:00] *** Joins: TallonRain (sid214799@user/tallonrain)
[11:52:00] *** Joins: ross (sid305269@user/ross)
[11:52:00] *** Joins: Kaya_C (~KC@2a01:4f9:c010:3917::1)
[11:52:00] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[11:52:00] *** Joins: cncr04s (~cncr04s@afxr.net)
[11:52:00] *** Joins: pyzozord (pyzozord@user/pyzozord)
[11:52:00] *** Joins: shodan45 (~quassel@107.161.22.155)
[11:52:00] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[11:52:00] *** Joins: ds (~ds@user/ds)
[11:52:00] *** Joins: thiccdaddy (~o_O@user/thiccdaddy)
[11:52:00] *** Joins: APic (apic@apic.name)
[11:52:00] *** Joins: armin (~armin@unix.porn)
[11:52:00] *** Joins: DonRichie (~DonRichie@ricl.de)
[11:52:00] *** Joins: Bombe (~bombe@freenet/release-manager/Bombe)
[11:52:00] *** Joins: pavelow (~pavelow@opticalchimp.com)
[11:52:00] *** Joins: erica (~erica@user/erica)
[11:52:00] *** Joins: Thedarkb1-Work (~Thedarkb@62.232.253.82)
[11:52:00] *** Joins: Doffi (~doffi@91.132.197.188)
[11:52:00] *** Joins: devz3ro (devz3ro2@user/devz3ro)
[11:52:00] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[11:52:00] *** molybdenum.libera.chat sets mode: +o bayaz
[11:52:00] *** Joins: mz` (~mz`@user/mz/x-8532539)
[11:52:00] *** Joins: Geolykt (~Geolykt@94.46.93.245)
[11:52:00] *** Joins: daurn (~daurnimat@vultr.daurnimator.com)
[11:52:00] *** Joins: eein (35f97d3dbd@2604:bf00:561:2000::2a6)
[11:52:00] *** Joins: paulo (paulo@user/paulo/x-9032687)
[11:52:00] *** Joins: derpy (~quassel@2a02:810d:800:10f8:a692:bb79:b40d:e741)
[11:52:00] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[11:52:00] *** Joins: adrian17 (~adrian17@thehyper.space)
[11:52:00] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[11:52:00] *** Joins: Boniche (~Boniche@ivysaur.umbreon.net)
[11:52:00] *** Joins: bertiger (~bertiger@user/bertiger)
[11:52:00] *** Joins: kline (~freedom0@libera/staff/kline)
[11:52:00] *** Joins: picooz_ (~picooz@user/picooz)
[11:52:00] *** Joins: jontxu (~jon@user/jontxu)
[11:52:00] *** Joins: EdwardIII (~edwardiii@user/edwardiii)
[11:52:00] *** Joins: con3 (~con3@143.198.53.32)
[11:52:00] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[11:52:00] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:52:00] *** Joins: carploader (~bull@185.117.72.168)
[11:52:00] *** Joins: blahblah441 (~blahblah4@89.46.62.154)
[11:52:00] *** Joins: madprops (hj8oijo@user/madprops)
[11:52:00] *** Joins: strudl (~strudl@user/strudl)
[11:52:00] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[11:52:00] *** Joins: dfoolz (~dfoolz@2a01:4f8:160:1161::2)
[11:52:00] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[11:52:00] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[11:52:00] *** Joins: gshumway (~gshumway@user/gshumway)
[11:52:00] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[11:52:00] *** Joins: Liber- (cis@user/cis)
[11:52:00] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[11:52:00] *** Joins: snake (~snake@user/snake)
[11:52:00] *** Joins: reinhardt (~cronos@user/cronos)
[11:52:00] *** Joins: karstensrage (~karstensr@user/karstensrage)
[11:52:00] *** Joins: Karyon (~Karyon@user/karyon)
[11:52:00] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[11:52:00] *** Joins: BenLand100 (~bland@user/benland100)
[11:52:00] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[11:52:00] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[11:52:00] *** Joins: geeknix (~pi@2001:e68:5432:307:f6b7:9845:4bce:2869)
[11:52:00] *** Joins: upp (~upp@c-71-227-220-185.hsd1.wa.comcast.net)
[11:52:00] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[11:52:00] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[11:52:00] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[11:52:00] *** Joins: SmokenatorZ6 (~Smokenato@187.101.176.53)
[11:52:00] *** Joins: tjr (~tjr@user/tjr)
[11:52:00] *** Joins: chuckx (~chuckx@user/chuckx)
[11:52:00] *** Joins: Byteflux (~byte@byteflux.net)
[11:52:00] *** Joins: ChanServ (ChanServ@services.libera.chat)
[11:52:00] *** molybdenum.libera.chat sets mode: +o ChanServ
[11:52:05] *** Joins: akP7QstK (~aib9Zume@71.50.58.137)
[11:52:06] *** Quits: epony (~epony@user/epony) (Max SendQ exceeded)
[11:52:09] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[11:52:09] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[11:52:09] *** Joins: epony (~epony@user/epony)
[11:52:09] *** Quits: yBtNJW3j (~aib9Zume@71.50.58.137) (Quit: Leaving)
[11:52:10] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:52:17] *** Joins: fling (~fling@user/fling)
[11:52:28] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[11:52:38] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Remote host closed the connection)
[11:53:14] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[11:53:46] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[11:54:37] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[11:54:55] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:55:07] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:55:48] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:56:47] *** Quits: sner (~paul@user/sner) (Ping timeout: 256 seconds)
[11:57:31] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:57:49] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[11:58:13] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[11:58:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[11:58:50] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:58:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:00:41] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[12:00:45] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:00:45] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:01:03] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[12:02:13] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:02:48] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[12:02:53] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[12:02:57] *** Quits: hexingb_ (~hexingb@111.32.64.205) (Ping timeout: 240 seconds)
[12:03:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[12:04:16] *** Quits: jumpArtifact (~jumpArtif@user/jumpartifact) (Quit: WeeChat 3.4)
[12:07:08] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[12:08:40] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:09:18] *** Joins: jaysicks (~jaysicks@fibhost-66-137-183.fibernet.hu)
[12:09:58] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:13:51] *** Joins: inomoz (~inomoz@176.59.115.245)
[12:14:34] *** Quits: inomoz (~inomoz@176.59.115.245) (Client Quit)
[12:17:14] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:17:16] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:17:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[12:17:53] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:18:28] *** Quits: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[12:19:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:19:46] <Square> Im a bit surprised the revenue model of supplying packages while keeping IPs isnt feasibile in many modern languages. 
[12:23:14] *** Joins: frost (~frost@user/frost)
[12:25:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:25:51] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[12:26:01] *** Joins: hexingb_ (~hexingb@111.32.64.205)
[12:26:15] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:26:17] *** jazzy2 is now known as jazzy
[12:26:18] *** Joins: horseface (~horseface@user/horseface)
[12:26:24] *** Quits: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[12:26:47] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:59ed:78f6:d0f0:e463) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:26:52] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:28:55] *** Joins: Lycurgus (~juan@98.4.112.204)
[12:29:05] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:30:47] *** Joins: diophantoz (~diophanto@user/diophantoz)
[12:34:00] *** Joins: k3nn7 (~k3nn7@2a02:a31b:43e:aa80:d343:204:89f0:5a7f)
[12:35:26] *** Joins: pitchshifter (~pitchshif@75.190.104.24)
[12:37:51] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:38:08] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com) (Ping timeout: 252 seconds)
[12:38:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[12:39:18] *** Quits: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[12:39:25] *** Quits: _inky (~inky_@46.36.113.139) (Ping timeout: 240 seconds)
[12:45:55] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:47:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:49:46] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.55)
[12:54:36] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:55:05] *** Joins: _inky (~inky_@178.78.134.35)
[12:55:18] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:57:45] *** Joins: edun (~e@user/edun)
[13:00:16] *** Quits: k3nn7 (~k3nn7@2a02:a31b:43e:aa80:d343:204:89f0:5a7f) (Ping timeout: 256 seconds)
[13:01:26] *** Joins: inomoz (~inomoz@176.59.115.245)
[13:03:17] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:03:39] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[13:04:16] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:05:14] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:08:08] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[13:08:21] *** Quits: inomoz (~inomoz@176.59.115.245) (Quit: WeeChat 3.4)
[13:11:20] <loganlee> how do you code the terrains in transport tycoon and simcity 2000?
[13:11:28] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:14:16] <flakland> /lol https://www.openttd.org/screenshots/special-r10000.png
[13:14:17] <bayaz> Type: image/png Size: 2.4 MB 
[13:14:41] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:15:21] <loganlee> hmmmm?
[13:15:25] <flakland> that's some advanced isometric tiling
[13:15:31] <loganlee> yeh
[13:15:48] <Noni> now I'm hungry
[13:15:52] <flakland> lol @ someone made a cake with screenshot on it
[13:16:02] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[13:16:02] *** Quits: ross (sid305269@user/ross) (Ping timeout: 240 seconds)
[13:16:02] *** Quits: QuartzXtal (sid507167@id-507167.lymington.irccloud.com) (Ping timeout: 240 seconds)
[13:16:04] *** Joins: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net)
[13:16:12] <jelly> TIL there are cake printers
[13:16:37] *** Quits: homura (uid398348@user/homura) (Ping timeout: 240 seconds)
[13:16:48] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[13:17:34] *** Joins: QuartzXtal (sid507167@id-507167.lymington.irccloud.com)
[13:17:35] *** Joins: ross (sid305269@user/ross)
[13:17:36] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[13:17:38] *** Joins: homura (uid398348@user/homura)
[13:17:44] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[13:19:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:20:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:21:13] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:21:27] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[13:22:43] *** Quits: akP7QstK (~aib9Zume@71.50.58.137) (Quit: Leaving)
[13:24:37] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[13:25:25] *** Quits: hexingb_ (~hexingb@111.32.64.205) (Ping timeout: 240 seconds)
[13:25:38] *** Joins: dododo (~nikola@109-92-199-254.dynamic.isp.telekom.rs)
[13:25:57] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Quit: Leaving)
[13:26:34] *** Joins: hexingb_ (~hexingb@111.32.64.205)
[13:26:55] *** Joins: inomoz (~inomoz@176.59.115.245)
[13:27:11] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[13:28:10] *** Quits: mikrosis (~mikrosis@dynamic-046-114-175-218.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:28:57] <dododo> can meson join POT files as with xgettext --join-existing option? since not all files are in the same language
[13:29:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:29:05] *** Joins: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net)
[13:29:11] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[13:29:42] *** Joins: plastico (~plastico@neomutt/plastico)
[13:30:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:30:43] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7ca4:cfa4:aede:6e7)
[13:33:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[13:35:42] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[13:37:16] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:38:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:42:11] *** Quits: xff0x (~xff0x@port-92-193-159-86.dynamic.as20676.net) (Ping timeout: 256 seconds)
[13:42:46] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:44:12] <beaky> in transport tycoon to code the terain you use a grid i think
[13:44:22] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[13:44:56] *** Joins: jumpArtifact (~jumpArtif@user/jumpartifact)
[13:45:09] *** Joins: Twipply (~Twipply@user/twipply)
[13:45:14] *** Joins: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it)
[13:45:26] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[13:46:09] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[13:46:54] <Donitz> why do people think having these massive dependencies in their software projects is not a big deal
[13:47:10] <Donitz> like, they'll write a tiny library for doing something, but then include a dependency with some 10.000 files
[13:47:21] <Donitz> do they not realize that is a huge cost?
[13:47:31] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51)
[13:49:49] *** Quits: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[13:49:52] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[13:50:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:51:45] *** Quits: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net) (Quit: v0id_ptr)
[13:52:07] <jelly> Donitz, it's not an immediate cost but delayed
[13:52:21] <Donitz> but do people even realize it's a cost at all
[13:52:25] <jelly> blah blah technical debt
[13:53:04] *** Quits: jumpArtifact (~jumpArtif@user/jumpartifact) (Quit: WeeChat 3.4)
[13:53:19] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:53:21] <Donitz> especially if you're writing a library, you should really consider making it stand-alone
[13:53:29] <Donitz> UNLESS that library is part of a framework
[13:53:34] <Donitz> or a plugin of some kind
[13:53:35] *** Joins: Burgundy (~yomon@82.76.72.88)
[13:53:55] <Donitz> or unless the dependency is so common that it's okay, such as numpy in python
[13:54:08] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[13:54:18] <Donitz> I don't know, I guess boost is pretty damn common in c++
[13:54:39] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[13:54:40] * jelly looks at bundled libs, containers, vendored libs, looks at package managers different for each language ecosystem
[13:55:11] <Donitz> so many python deps still manage to work perfectly fine stand-alone
[13:55:19] <Donitz> well, it helps that python is fairly complete by itself
[13:55:40] <jelly> from a sysadmin pov, either they don't care because it's a short term win, or, less likely, they don't realize the implications
[13:56:04] <Donitz> quite often these are personal projects without any real gain
[13:56:12] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Quit: WeeChat 3.4)
[13:56:41] <Donitz> I was just trying to get this python module to work, and I for the life of me can't get libeigen compiled
[13:56:45] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:56:51] <Donitz> so I gave up on it
[13:58:21] <rindolf> thanks for unbanning me. ♥!
[14:00:28] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:01:12] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:02:01] *** Quits: hexingb_ (~hexingb@111.32.64.205) (Ping timeout: 256 seconds)
[14:02:52] *** Joins: hexingb_ (~hexingb@101.20.43.48)
[14:05:57] <pyzozord> oh, hi rindolf!
[14:06:06] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[14:06:42] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:07:16] <Jong> I'm benchmarking a neural net. In addition to measuring time elapsed, I'm also measuring the amount of inaccuracy.  This will let me weigh the trade off between using float32 and double.   I want to make a cli argument like --print-accuracy-measurement.  When absent, only the time elapsed is printed. When enabled, then accuracy metrics are also printed
[14:07:22] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:07:23] <Jong> --print-accuracy-metrics ?
[14:07:26] <rindolf> pyzozord: hissss... ^w hi
[14:07:55] <Jong> I'm actually just diffing the results with prestored ground truth results.   Maybe --print-gt-diff ?
[14:08:04] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:08:56] <rindolf> jo
[14:09:18] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:09:39] <rindolf> Jong: use python/perl/etc?
[14:09:44] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[14:10:04] <Jong> python
[14:10:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:10:31] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[14:10:51] <rindolf> Jong: decent language,
[14:10:54] *** Joins: rtypo (~alex@user/rtypo)
[14:10:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[14:10:57] <jelly> what kind of grinder works best for truth
[14:11:43] <rindolf> jelly: What do you mean ?
[14:11:57] *** Joins: applegal (uid245422@user/applegal)
[14:12:02] <applegal> hi
[14:12:35] <rindolf> applegal: hey, sup?
[14:12:56] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[14:13:07] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Quit: WeeChat 3.3)
[14:13:34] *** Quits: dododo (~nikola@109-92-199-254.dynamic.isp.telekom.rs) (Quit: leaving)
[14:14:05] <jelly> rindolf, > <J'ong> I'm actually just diffing the results with prestored ground truth results. 
[14:14:35] <applegal> can someone here help me to read a installer batch script for office 2021.. to see if it's safe to execute. I tried to create a deployment script for office 2021 however I'm getting this channel update not supported.. so I'm using a supplied batch script from someone else.. but it's a long list so I'm not sure if it's safe and what it does besides just installing office.. this is not a crack.. or bypass license for office.. just a batch 
[14:14:35] <applegal> installer.. so I'm not doing anything illegal
[14:14:51] <applegal> if someone who is familiar with windows batch script
[14:15:00] <applegal> and can help me analyze it
[14:15:10] <rindolf> jelly: ah, heh :)
[14:17:02] <rindolf> applegal: can you share the code?
[14:17:17] <applegal> ya
[14:17:59] <jelly> is it really .bat and not .cmd or .ps1 
[14:18:09] <applegal> bat
[14:18:10] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:18:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:18:19] <applegal> I will paste on a paste bin site
[14:18:23] <applegal> so you don't have to dl it
[14:18:36] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:18:36] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:18:36] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:19:00] <applegal> https://p.ahkscript.org/?p=c7d05be1
[14:19:01] <bayaz> Title: ahkbin! 
[14:19:49] <applegal> could you
[14:19:51] <applegal> possibly 
[14:20:08] <applegal> help me to trim down any unnecessary stuff 
[14:20:17] <applegal> I'm only trying to install word and excel
[14:20:31] <applegal> so that it's readable for me
[14:21:10] *** Joins: maxzor (~maxzor@2a01cb04054faa00914defb9ccc1762e.ipv6.abo.wanadoo.fr)
[14:21:48] <jelly> well there _are_ some product keys embedded in there
[14:22:10] <rindolf> applegal: it's beyond my .bat skills
[14:22:14] <jelly> I can't read it, but that might not be kosher
[14:22:21] <applegal> those are MS KMS generic key.. it's used for deployment purposes
[14:22:27] <jelly> nod
[14:22:41] <applegal> and listed publicly on MS site 
[14:22:52] <jelly> try #windows-server or #windows ; if it were .ps1 I'd suggest #powershell channel but it's not
[14:23:03] <applegal> official site.. for deployment purposes.. you can't activate using those keys
[14:23:12] <applegal> oh
[14:23:13] <applegal> cool
[14:23:14] <applegal> ok
[14:23:19] <applegal> thanks
[14:23:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:23:58] <applegal> didn't know there's a powershell site
[14:24:00] <applegal> I mean
[14:24:02] <applegal> channel
[14:24:30] *** Joins: mishugana (~mishugana@user/mishugana)
[14:24:54] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Quit: Have a groovy one)
[14:26:38] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:27:06] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:28:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[14:29:37] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.29)
[14:30:33] *** Joins: frost (~frost@user/frost)
[14:31:35] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[14:32:03] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.55) (Ping timeout: 256 seconds)
[14:32:40] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:25] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:36:55] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[14:37:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:39:50] <applegal> hey jelly 
[14:40:05] <applegal> are you aware of any other channels besides powershell?
[14:42:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:43:01] <jelly> applegal, no, but you can hunt for channels on libera using the "alis" bot.  /msg alis list windows
[14:43:57] <GeDaMo> You can search channel names with /msg alis list *pattern* -min 10 or channel topics with /msg alis list * -topic *pattern* -min 10
[14:44:59] *** Joins: cursey (~cursey@user/cursey)
[14:45:32] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7ca4:cfa4:aede:6e7) (Remote host closed the connection)
[14:46:02] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7ca4:cfa4:aede:6e7)
[14:46:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:46:48] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:47:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7ca4:cfa4:aede:6e7) (Remote host closed the connection)
[14:48:11] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7ca4:cfa4:aede:6e7)
[14:49:39] <rindolf> GeDaMo: hey! i missed you.
[14:49:53] <GeDaMo> Hi rindolf :)
[14:50:45] <rindolf> GeDaMo: what's new?
[14:51:35] <GeDaMo> Well, Youtube has started doing this thing where it tells me I'm offline :|
[14:53:02] *** Joins: swp1 (~Thunderbi@37.203.60.116)
[14:53:39] <rindolf> it's a good day to be slain! by my daughter no less
[14:54:47] *** cisco87 is now known as bubble_dragon
[14:55:01] <rindolf> GeDaMo: oh,,, are you logged in?
[14:55:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:56:00] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:56:08] <GeDaMo> No, I don't have YT account
[14:56:30] <GeDaMo> It only seems to be when I go from one YT page to another
[14:56:48] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:57:31] <rindolf> GeDaMo: ah, i do :|
[14:57:46] *** bubble_dragon is now known as fire_spitting_ch
[14:57:51] *** fire_spitting_ch is now known as fire_spit_chicke
[14:57:59] <GeDaMo> It's possibly because I have some scripts blocked or the adblocker or something
[14:57:59] *** fire_spit_chicke is now known as fire_chicken
[14:59:07] *** Joins: zivoni (~tomas@user/zivoni)
[14:59:43] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:00:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:01:33] *** fire_chicken is now known as JohnnyStecchino
[15:02:43] <rindolf> GeDaMo: maybe
[15:03:43] *** JohnnyStecchino is now known as SheepBarber
[15:06:03] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:06:10] <rindolf> GeDaMo: https://www.youtube.com/watch?v=Zlot0i3Zykw great song
[15:06:11] <bayaz> Title: Taylor Swift - Red 
[15:06:37] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:07:49] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 240 seconds)
[15:13:20] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[15:15:41] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:15:51] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:15:57] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[15:16:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:19:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:20:15] <smallville7123> (working copy of my state block map) https://rextester.com/ALO84131 is this the correct way to remove a state based on the following?
[15:20:17] <smallville7123> // if 4. is removed, then 2.emittingPowerTo would remove 4.BlockPos causing 2.emittingPowerTo to be empty and thus 0 size/null
[15:20:17] <bayaz> Title: state array try remove, Java - rextester 
[15:20:19] <smallville7123> // because 2.emittingPowerTo is now null, 3. and 1. are now useless
[15:20:21] <smallville7123> // since 2. does not emit 3.'s power nor 1.'s power to anything, and thus 2., 3., and 1. should now be removed
[15:21:47] *** Joins: o|||||o (~ol_greg@50-24-8-87.chstcmta05.res.dyn.suddenlink.net)
[15:22:13] *** Quits: hexingb_ (~hexingb@101.20.43.48) (Ping timeout: 240 seconds)
[15:24:03] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:24:58] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[15:25:19] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:30:00] <FloridaMan> smallville7123: I'm curious as to why `isNotEmittingPower()` instead of `isEmittingPower()`?
[15:30:05] *** Joins: Iarfen (~quassel@181.43.58.247)
[15:30:33] <smallville7123> dunno
[15:31:53] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:32:04] <smallville7123> cus it can be?
[15:32:14] <FloridaMan> I don't really know what this code is doing
[15:32:42] <smallville7123> basically the block map is meant to be empty
[15:33:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[15:33:45] <FloridaMan> ok
[15:34:25] <FloridaMan> I'm not sure that I can understand what this is supposed to be doing based on that.
[15:36:37] <FloridaMan> no idea what 1, 2, 3, and 4 are or what this code's purpose is
[15:36:54] <GeDaMo> Is this still the Minecraft thing?
[15:38:03] <FloridaMan> ah
[15:40:28] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:40:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[15:40:59] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:11c4:68db:ad36:c833)
[15:42:42] *** Joins: tomathy (~jenova@user/quetzl)
[15:43:26] <tomathy> what's a good project i can do to get back into programming
[15:43:37] <tomathy> i can barely do anything, but i have made some cool stuff, back in the day
[15:43:48] <tomathy> should i focus on gamedev because that is the most rewarding
[15:44:28] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[15:44:40] <FloridaMan> there's a pretty cool program I saw the other day
[15:44:52] <FloridaMan> run it and it outputs "hello world"
[15:45:03] <FloridaMan> :P
[15:45:03] <smallville7123> basically this https://gist.github.com/mgood7123/f2ca9ec50c7e81c14279cabe1cf1c1eb
[15:45:04] <bayaz> Title: gist:f2ca9ec50c7e81c14279cabe1cf1c1eb 
[15:45:58] <FloridaMan> I missed the whole "Minecraft" part
[15:46:08] <FloridaMan> I had no idea what the intent of this code was
[15:46:27] <FloridaMan> code without context is hard to comprehend
[15:47:27] <smallville7123> https://rextester.com/WXJF82632 *
[15:47:29] <bayaz> Title: state array try remove, Java - rextester 
[15:48:33] <tomathy> you know what's horseshit?
[15:48:42] <tomathy> audiobooks without physical copies
[15:48:56] <rindolf> tomathy: https://github.com/EbookFoundation/free-programming-books/blob/main/more/problem-sets-competitive-programming.md
[15:48:57] <bayaz> Title: free-programming-books/problem-sets-competitive-programming.md at main ? EbookFoundation/free-programming-books 
[15:48:57] <tomathy> you should get a free physical copy with an audiobook purhcase
[15:49:28] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:49:32] <tomathy> *digital
[15:49:41] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:50:01] <smallville7123> FloridaMan: 
[15:50:05] <smallville7123> if 4. is removed, then 2.emittingPowerTo would remove 4.BlockPos causing 2.emittingPowerTo to be empty and thus 0 size/null
[15:50:05] <smallville7123> because 2.emittingPowerTo is now null, 3. and 1. are now useless
[15:50:05] <smallville7123> since 2. does not emit 3.'s power nor 1.'s power to anything and thus 2., 3., and 1. should now be removed
[15:50:17] <rindolf> tomathy: i like PDFs/epubs
[15:52:18] <mrig> hello rindolf :)
[15:52:23] <tomathy> used to find programming fun
[15:52:28] <tomathy> what happened
[15:52:38] <smallville7123> tomathy: life
[15:52:50] <FloridaMan> smallville7123: I'm very confused by all of this tbh... I'll let someone else help out
[15:52:54] <rindolf> tomathy: http://www.paulgraham.com/stuff.html
[15:52:55] <bayaz> Title: Stuff 
[15:53:11] <mrig> yay, we have scaled rendering; very satisfying to see!
[15:53:39] <rindolf> mrig: hi
[15:53:58] <smallville7123> FloridaMan: your always confused :P
[15:54:18] <tomathy> i strongly recommend against physical books
[15:54:53] <tomathy> i like the layout of that website rindolf 
[15:55:12] *** Joins: Daemonick (~Daemonick@62.1.158.125)
[15:55:22] *** Joins: hexingb_ (~hexingb@111.32.64.205)
[15:57:14] <smallville7123> https://rextester.com/WXJF82632 is this the correct way to remove a state that has state dependancies?
[15:57:17] <bayaz> Title: state array try remove, Java - rextester 
[15:57:38] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:58:45] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:58:56] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[15:59:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:59:57] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Client Quit)
[16:00:14] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[16:00:22] <mrig> tomathy make up your mind, are you for or against? :P
[16:00:54] <mrig> I like hard back copies of high quality, that will last or stand the test of time.
[16:01:43] *** Joins: Leone (~Leo@157.52.18.77)
[16:02:23] <smallville7123> this seems simple af yet i have no idea how to correctly implement it
[16:03:01] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:11c4:68db:ad36:c833) (Ping timeout: 240 seconds)
[16:03:12] <tomathy> they won't last though
[16:03:24] <tomathy> anything paper can't last more than a few decades
[16:03:39] <tomathy> mrig: i meant to say a free digital copy earlier
[16:04:09] <GeDaMo> Some books have been around for centuries
[16:04:13] <mrig> well a 1000 years or so if well written.
[16:04:30] <mrig> sure yes, some last for ages, depends upon on the ink and paper or skin combo.
[16:04:49] <tomathy> well if you keep it like it's a relic then it's hardly a book is it, it's just an object meant for preservation
[16:05:13] <GeDaMo> I'll admit that I'm more interested in the content that the physical form
[16:05:15] <tomathy> a book that is read falls apart
[16:05:16] <mrig> was a little shocked to hear on the Stephen Fry podcast that dog skin was used to ink the first printing presses :|
[16:05:42] <tomathy> mrig: that man is a charlatan and you should ignore everything he says
[16:06:07] <mrig> Because they don't sweat or something like that, it is not porous; Could make a good use for Prince Andrew yet! :P
[16:06:08] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:06:10] <tomathy> and a reprobate
[16:06:24] <mrig> he's a wonderful orator and writer.
[16:06:34] <tomathy> he's shit at both
[16:06:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:06:49] <tomathy> you must be american
[16:06:50] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:06:57] *** Joins: fe23 (~fe23@2409:8a34:464:4990:d0a0:6afc:175:8a23)
[16:07:10] <mrig> your opinion, and not very eloquently put I might add :P
[16:07:20] <tomathy> you're attracted to his quaint englishness and overlooking his vices for some reason
[16:07:30] <mrig> I dont judge
[16:07:49] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[16:08:06] <tomathy> sorry i got carried away
[16:08:59] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[16:09:09] <mrig> I am actually and expatriated brit, to fearful to return for risk of trial for treason! Did you clock my prince's skin remark? :P
[16:10:06] <tomathy> he has obviously payed off the accusers
[16:10:48] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 256 seconds)
[16:10:58] <mishugana> Is this Fight Club or ##programming? :D
[16:11:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:11:39] <tomathy> mrig: treason will get you a job in politic
[16:11:41] <tomathy> s
[16:11:45] <mrig> GaDaMo I like the content to be easily referable and find books much easier for that than digital copies, probably my un scholarly habits though.
[16:11:57] <mrig> mishugana lol
[16:12:19] *** Joins: trevors (~trevors@user/trevors)
[16:12:25] <GeDaMo> The first rule of soap club is you talk about soap club :P
[16:12:35] * mrig throws a lowercut, right into mishugana's monads!
[16:12:40] <mishugana> Ah, the bad memories of SOAP :'(
[16:13:00] <mishugana> mrig: hahaha .. you got me discombobulated there
[16:13:34] <mrig> yikes! dicombobulated monads, sounds like one hell of a functor!
[16:13:45] <jelly> Disco what?
[16:14:05] <tomathy> are you guys proud of me i got netbeans to work
[16:14:09] *** Joins: Manik2375 (~Manik2375@205.253.124.139)
[16:14:15] <mishugana> jelly: https://www.youtube.com/watch?v=B62ACxuq8Pw ... enjoy! :D
[16:14:16] <bayaz> Title: Discombobulate 
[16:14:24] <GeDaMo> https://www.youtube.com/watch?v=pG8TyIEAqps
[16:14:27] <bayaz> Title: Disco Inferno 
[16:15:20] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:15:25] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 240 seconds)
[16:15:27] <jelly> interesting dance
[16:17:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:19:35] <rindolf> tomathy: re paper: https://www.shlomifish.org/philosophy/philosophy/putting-all-cards-on-the-table-2013/indiv-nodes/departing_pope_about_twitter.xhtml
[16:19:35] <bayaz> Type: application/xhtml+xml Size: 3.0 kB 
[16:22:20] *** Quits: Manik2375 (~Manik2375@205.253.124.139) (Quit: Client closed)
[16:23:01] *** Quits: Iarfen (~quassel@181.43.58.247) (Read error: Connection reset by peer)
[16:24:55] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:25:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[16:25:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:26:14] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[16:28:56] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 256 seconds)
[16:30:02] <mrig> I started keeping a piece of paper in the cover of books that I write references in when something stands out when I read it and I think that I might want to find it again, seems like a nice way to keep track of things. Highlighting inside of pdf's to I suppose but digital can get pretty messy.
[16:30:18] <mrig> How does gametheory deal with entropy or does it just ignore it?
[16:30:29] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[16:30:41] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[16:31:11] <mrig> Just reading about the minmax algorithm id' not twigged that it is just a rotating parabula before, or a sadal.
[16:32:45] <tomathy> entropy?
[16:32:55] <tomathy> i guess that's why we have life
[16:33:32] <tomathy> game theory's solution to entropy; turn energy into matter, make matter replicate
[16:33:55] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:33:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:35:29] <mrig> no gametheroy does not recognise that entropy exists.
[16:35:46] <mrig> It is outside of its rationalised axioms.
[16:35:53] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[16:36:15] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[16:36:52] <mrig> arguably to its detriment, I think Nash picked up on the importance of fractals a little later on in life, with his fractal doughnuts.
[16:37:12] <mrig> I'm waxing lyrical here of course though.
[16:37:27] <FloridaMan> how often do you wax your lyricals?
[16:40:38] <mrig> only for special occasions!
[16:41:48] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:41:57] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[16:43:05] *** Joins: Guest17 (~Guest17@wificampus-097061.grenet.fr)
[16:43:06] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:45:47] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 256 seconds)
[16:46:46] <mrig> wax in this sense is from the sense of waxing or waning, I wonder if that is connected to the use of the moons phase as an signal of when to write letters?
[16:47:08] <mrig> If not how wax got its name.
[16:47:34] <mrig> dang, stay on target stay on target ...
[16:48:03] <FloridaMan> waxing gibbous lyricals
[16:49:21] <mrig> of vis versa of course.
[16:49:26] <mrig> or rather
[16:50:18] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:50:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:57:16] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[16:58:13] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:58:42] *** Parts: applegal (uid245422@user/applegal) ()
[16:59:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:00:19] *** Joins: Tabmow (~tabmow@user/tabmow)
[17:01:09] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:01:13] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[17:02:10] <mrig> Is there a word that fits for both parabol and hyperbol; Does hyperbol covers both?
[17:02:26] *** Quits: Guest17 (~Guest17@wificampus-097061.grenet.fr) (Quit: Client closed)
[17:02:49] <deniska> mrig: conic section
[17:02:56] <mrig> waxing hyperbolically lyrical :D
[17:03:04] <Square> bolic?
[17:03:15] <mrig> bolics?
[17:03:23] <Square> bolloks
[17:03:34] <mrig> deniska sounds like that is really the one to remember.
[17:04:20] <mrig> though a saddle could not be an ellipse, I wouldn't think.
[17:04:45] <mrig> dang this has grabbed me that it is related to game theory, very cool stuff.
[17:05:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:05:15] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:05:40] <mrig> Square yes be very mindful of your bolics when in a saddle!
[17:05:54] <tomathy> in java, how should i save a file's contents? is it ok in a string, what if it's like 2GB?
[17:06:04] <Square> it all makes sense
[17:06:05] <tomathy> it's just to hash it
[17:07:01] <deniska> tomathy: hashing generally doesn't need the whole file at once in memory
[17:07:16] <tomathy> yes i thought not
[17:07:16] <Square> FileOutputStream somethign something
[17:07:20] <tomathy> but dunno how to do it
[17:07:43] <tomathy> other than calling a system program
[17:07:49] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[17:07:51] <tomathy> which is forbidden cause i want it to work on windows
[17:07:55] <tomathy> aswell
[17:08:00] <Square> FileOutputStream
[17:08:00] <Square> ops
[17:08:04] <Square> https://www.baeldung.com/java-write-to-file
[17:08:10] *** Joins: monkey_ (~user@190.104.116.153)
[17:08:16] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:08:47] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:09:47] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[17:10:35] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (Ping timeout: 268 seconds)
[17:12:02] <mishugana> tomathy: you should always buffer and read/write
[17:12:36] <tomathy> ok
[17:12:38] <tomathy> reading time
[17:16:26] *** Joins: jokoon (~jokoon@136.252.163.126)
[17:16:45] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[17:16:59] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:17:06] <jokoon> https://www.nytimes.com/puzzles/letter-boxed how can I generate those letter combinations? any idea?
[17:17:06] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[17:17:06] <bayaz> Title: Letter Boxed - New York Times Logic Puzzles 
[17:17:31] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:18:36] <tomathy> so is the digest in a hashing algorithm a continuous thing?
[17:19:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:19:11] <tomathy> it doesn't work on the entire content at once i mean, it can be updated with subsequent data?
[17:21:39] <tomathy> nvm
[17:21:48] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[17:24:49] *** Joins: pulse (~pulse@user/pulse)
[17:26:10] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[17:26:18] <Square> YARN, NUT, TOPE, ESLE, EVE
[17:26:31] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.29) (Remote host closed the connection)
[17:26:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[17:27:19] <mishugana> tomathy: yes
[17:27:37] <mishugana> jokoon: are you talking about the UI, the algorithm, the game?
[17:27:40] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:28:03] <jokoon> mishugana: the algorithm
[17:28:11] *** Joins: ravan (~ravan@user/ravan)
[17:28:12] <jokoon> I found some, online...
[17:28:26] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:29:26] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:30:26] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[17:30:33] *** Quits: swp1 (~Thunderbi@37.203.60.116) (Ping timeout: 256 seconds)
[17:30:45] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:32:25] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[17:34:11] <mishugana> lmao ... the solution is actually in the webpage itself ... APLENTY YOURSELVES
[17:34:14] <mishugana> :D
[17:35:21] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[17:35:40] *** Joins: rsx (~dummy@ppp-188-174-159-228.dynamic.mnet-online.de)
[17:36:27] *** Joins: horseface (~horseface@user/horseface)
[17:38:08] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:38:17] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:39:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:43:38] <pyzozord> wow really need to step up my game in this new company
[17:43:41] <pyzozord> such an amazing feeling
[17:44:56] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[17:45:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:45:36] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[17:45:39] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Max SendQ exceeded)
[17:45:57] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:46:13] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[17:46:17] *** Joins: ravan (~ravan@user/ravan)
[17:49:15] <deniska> pyzozord be like https://static.wikia.nocookie.net/theoffice/images/c/c5/Dwight_.jpg/revision/latest?cb=20170701082424
[17:49:15] <bayaz> Type: image/jpeg Size: 1.6 MB 
[17:50:31] <pyzozord> Part of me always was a bit like Dwight :D
[17:51:12] <pyzozord> They pay me for learning stuff I want to learn anyway, this is perfect
[17:51:41] <pyzozord> I'd be less happy it this was ruby or perl
[17:51:51] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5cd:8f2b:a3f7:7cf5) (Read error: Connection reset by peer)
[17:52:04] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[17:52:05] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[17:52:51] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[17:52:53] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:53:11] <mrig> That sounds like a win win situation :)
[17:53:13] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[17:53:29] *** Joins: xsperry (~xs@user/xsperry)
[17:53:33] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[17:53:35] <tomathy> i need a laptop that doesn't wreck my eyes
[17:53:42] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[17:53:44] <wedr> tomathy, gaming laptop for work
[17:53:58] <wedr> 4K IPS display with touch support
[17:54:04] <wedr> RTX 3060
[17:54:20] <tomathy> what's IPS
[17:54:22] <Square> Right, who needs god when you have a boss
[17:54:40] <wedr> you still need a god when your boss goes off the rails
[17:54:50] <Square> haha
[17:55:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:55:30] <pyzozord> I might acutally get a pc or a egpu to play counter strike better
[17:55:33] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:55:41] *** Joins: arcatech (~arcatech@user/arcatech)
[17:55:45] <deniska> pyzozord: if perl code is around that means 1) it works and probably doesn't need maintenance, 2) the company is old and established
[17:55:48] <wedr> eGPU + new graphics card is more ideal
[17:56:16] <wedr> You can't possibly invest in a new PC build right now (situation is slightly improving, but still...)
[17:56:26] <epony> eGPU is a problem ;-)
[17:56:58] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:57:04] <deniska> eGPU boxes were absurdly expensive even before the shortages
[17:57:14] <epony> don't work with free systems
[17:57:19] <deniska> like they cost more than a GPU I'd realistically put in them
[17:57:57] *** Joins: martums (~martums@user/martums)
[17:58:18] <tomathy> pyzozord: i played CS for years and never got a KDR above 1/5
[17:58:19] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[17:58:22] *** Joins: sner (~paul@user/sner)
[17:58:35] <pyzozord> I have this one https://nl.aliexpress.com/item/32824725772.html?aff_fcid=24322f7a57414113be2d1fad7fccc2c7-1641824901902-06774-_dZKpIBP&aff_fsk=_dZKpIBP&aff_platform=link-c-tool&sk=_dZKpIBP&aff_trace_key=24322f7a57414113be2d1fad7fccc2c7-1641824901902-06774-_dZKpIBP&terminal_id=9240ec70d6d644f6a94159d5a6280eb1
[17:58:36] <bayaz> Title: 33.14US $ 19% OFF|Pci E Exp Gdc Externe Laptop Video Card Dock Notebook Dock Grafische Kaart Adapter (Mini Pci E/Ngff M.2 Een/E Key/Expresscard)|laptop docking station|exp gdcvideo card dock - AliExpress 
[17:58:58] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[17:59:01] <deniska> pyzozord: ah, these one are cheap, I'm talking thunderbolt ones :)
[17:59:02] <pyzozord> so I can do something like this https://egpu.io/forums/builds/thinkpad-x230-express-card-2-0-5-gt-s-windows-10-by-boelly/
[17:59:12] <deniska> pyzozord: (also thanks my aliexpress is in dutch now)
[17:59:53] <tomathy> global warming is a scam
[18:00:37] <tomathy> we have fridges
[18:00:45] <pyzozord> deniska: oh it is?
[18:01:59] <beaky> so i like programming in assembly but the biggest challenge is that you only have like a handful of registers to work on a lot of data and it is easy to forget which registers are used for what values at what points in the program what are some good ways to keep track of things like that
[18:02:44] <leduyquang753> Write comments.
[18:03:09] <pyzozord> hmm write some small macro language on top so you can use labels / variable names
[18:03:13] <deniska> pyzozord: aliexpress is for some reason annoying like that. "Oh, you visited a localized version? Surely it's a language you want to see from now on" :)
[18:03:20] <tomathy> constantly write out the register values to console
[18:03:27] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:03:30] <pyzozord> deniska: I'm sorry
[18:04:04] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:04:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:04:23] <pyzozord> deniska: if it makes any better youtube has weird idea about me too
[18:04:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:05:49] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[18:06:29] <deniska> https://i.imgur.com/e0pzZCg.png meanwhile I wrote a minesweeper for DOS :)
[18:06:30] <bayaz> Type: image/png Size: 167.9 kB 
[18:06:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:07:29] <pyzozord> cool, does it always have a solution?
[18:08:13] <rindolf> deniska: hi, sup?
[18:08:40] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:08:51] <deniska> pyzozord: it doesn't even check whether the first move is a mine :)
[18:09:59] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[18:10:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[18:10:15] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[18:11:24] <pyzozord> deniska: well, it's nice to let players start easy, it could be a feature
[18:11:26] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:11:49] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[18:12:26] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[18:12:38] <Teckla> Anyone know of a Linux command line tool to format a .json file?
[18:12:46] <rindolf> Teckla: jq
[18:12:48] <deniska> I'm sure there're better minesweeper implementations than this
[18:12:53] <deniska> Teckla: python3 -m json.tool
[18:12:56] <Mangy_Dog> isnt a json just a text file?
[18:13:12] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 256 seconds)
[18:13:27] <deniska> Mangy_Dog: you can add whitespace characters which don't mean much to the parser, but make text look purrty
[18:13:28] <wedr> there is a linux command for formatting a JSON file?
[18:13:34] <wedr> what the...
[18:13:46] <tomathy> Mangy_Dog: https://json.org/example.html
[18:13:46] <bayaz> Title: JSON Example 
[18:14:05] <Mangy_Dog> oh
[18:14:11] *** Joins: V__ (~V@43.250.157.250)
[18:14:14] <rindolf> Teckla: "prettier" too: https://github.com/prettier/prettier
[18:14:15] <FloridaMan> jq is awesome
[18:14:15] <bayaz> Title: GitHub - prettier/prettier: Prettier is an opinionated code formatter. 
[18:14:30] <Teckla> Great!  Thanks folks!  :)
[18:14:31] <pyzozord> if you don't like jq, you can use something like this https://termbin.com/tqta
[18:14:32] <bayaz> Type: text/plain; charset=utf-8 
[18:14:51] <rindolf> Teckla: you're welcome 
[18:15:00] <pyzozord> I use this because it does like 80% of what I used jq for, and I don't need to learn a new syntax, I can just use javascript
[18:15:19] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:15:29] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:15:32] <FloridaMan> https://jqplay.org
[18:15:37] <FloridaMan> jq play is neat also
[18:15:38] <tomathy> i love how you can access JSON content so easily
[18:15:55] <tomathy> stuff.name etc
[18:17:03] <beaky> damn i just finished compiling linux 5.15 and the linux 5.16 was just released 
[18:17:26] <wedr> beaky, compile 5.16 overnight.
[18:17:34] <tomathy> compiling linux? i've never done that
[18:17:45] <wedr> I don't, and I never thought once about doing it
[18:18:00] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[18:18:27] <beaky> gotta compile the kernel to -march=native -Ofast for sick speeds
[18:19:12] <tomathy> wow big dino found in UK
[18:20:19] <tomathy> ichthyosaurus
[18:21:26] <tomathy> ichthyosaur
[18:22:04] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:24:35] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:24:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:25:08] <FloridaMan> itchysaur
[18:28:10] <edgar-rft> beaky: I suggest compiling 5.16 now to make 5.17 being released faster
[18:28:32] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:28:58] <beaky> yes this weekend i will get around to upgrading to 5.16
[18:29:06] <beaky> and finally sovling day 14 of advent of code 2021
[18:29:14] <beaky> in assembly since i find agda is too slow 
[18:29:20] <upp> are we still making --omg-optimized jokes?  like, wow, the year 2000 called and wants its joke back that never made any sense in the first place
[18:29:47] <beaky> but it adds a 10% performance boost 
[18:30:06] <beaky> maybe i should also check out those low latency scheduler kernels
[18:30:20] <upp> compilers have options for architecture targets and optimization levels, get over it already
[18:32:32] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[18:32:44] <beaky> link time optimization and profile guided optimization provide extra boosts
[18:32:45] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:33:22] <upp> feel free to write programs in BASIC for yourself
[18:33:54] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:33:56] <upp> gorillas was fun
[18:34:19] <upp> probably too optimized for you though
[18:34:29] <FloridaMan> QuickBASIC > *
[18:34:55] *** Joins: xkuru (~xkuru@user/xkuru)
[18:36:08] *** Joins: mrig (~mrig@user/mrig)
[18:36:25] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:38:45] <mrig> Ah getting the same bug with my trackpad as with the mouse, can count out both the mouse and the usb as sources of the behaviour :)
[18:38:47] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[18:38:47] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[18:38:47] *** Joins: tane (~tane@user/tane)
[18:39:01] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 240 seconds)
[18:39:52] *** Joins: Macuser (~Macuser@2600:1003:b466:f61b:650f:cc1c:784:d758)
[18:40:39] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.4)
[18:41:44] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[18:44:19] *** Joins: cwiz89 (~cwiz89@91.193.178.189)
[18:45:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:45:49] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:46:42] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: Buh-bye)
[18:47:33] *** Joins: constxd_ (~brad@142.134.38.68)
[18:47:33] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:48:10] *** Quits: maxzor (~maxzor@2a01cb04054faa00914defb9ccc1762e.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[18:48:58] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:50:02] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:50:37] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:50:57] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[18:51:37] *** Joins: maxzor (~maxzor@2a01cb04054faa004ac5af3213493c6c.ipv6.abo.wanadoo.fr)
[18:52:31] *** Joins: horseface (~horseface@user/horseface)
[18:53:55] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[18:53:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:58:30] *** Joins: ravan (~ravan@user/ravan)
[18:59:48] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:65a8:b0e3:f0de:5a94)
[19:05:42] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:06:20] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:07:27] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:65a8:b0e3:f0de:5a94) (Read error: Connection reset by peer)
[19:08:07] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:65a8:b0e3:f0de:5a94)
[19:09:00] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[19:09:52] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[19:13:13] <mrig> I've been having a look at journalctl /dev/kmsg and /dev/input but can't really see a way that I might track down what is happening when my mouse gets stuck; Any ideas or advice would be appreciated.
[19:14:37] *** Joins: neverfindme (~neverfind@158.123.160.43)
[19:16:53] *** Quits: neverfindme (~neverfind@158.123.160.43) (Remote host closed the connection)
[19:17:45] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[19:18:58] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[19:19:05] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2051:e03e:815b:59b9) (Quit: Textual IRC Client: www.textualapp.com)
[19:19:41] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:21:39] <beaky> at last after 20 years of hard work ocaml now supports multicore https://github.com/ocaml/ocaml/commit/001997e81342fd0d321fd877b73608150601e7d9
[19:21:39] <bayaz> Title: Merge pull request #10831 from ocaml-multicore/multicore-pr ? ocaml/ocaml@001997e 
[19:21:58] <ProfSimm> How does an SQL database look to a functional program I wonder
[19:22:13] <ProfSimm> Never done that
[19:22:24] <beaky> it will be like a database connection that you query and stuff
[19:22:37] <ProfSimm> Well, treating it as I/O is one way
[19:22:38] <norias> beaky: fascinating
[19:22:43] <mrig> beaky: will it be renamed ocaravan now?
[19:22:49] <ProfSimm> What if you want it embedded within the application state though
[19:22:57] *** Joins: password2 (~password8@user/password2)
[19:23:05] <ProfSimm> Now that database needs to mutate somehow
[19:23:53] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:24:13] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 240 seconds)
[19:24:41] <edgar-rft> you can avoid that by making a copy of the entire database at every access :-)
[19:24:48] <bjs> ProfSimm: well you can just have functions that mutate the state.  In Haskell land where you have "pure" functions you have an `IO` type.
[19:25:02] <bjs> ProfSimm: so you can have `writeRow :: Row -> IO ()` and `readRow :: Query -> IO Row` or something
[19:25:08] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[19:25:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:25:28] <bjs> ProfSimm: where `IO ()` and `IO Row` represent datatypes that describe an "action"
[19:26:57] <ProfSimm> bjs: I don't see what happens in the IO monad as part of the program tbh.
[19:27:13] <ProfSimm> It's like a meta program maybe
[19:27:17] <bjs> ProfSimm: forget the word "monad" and just think about IO as a datatype. 
[19:27:48] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[19:28:32] <bjs> ProfSimm: imagine using stdout/stdin.  What you might do is `data MyIO = ReadStdin (String -> MyIO) | WriteStdout String MyIO`
[19:28:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[19:29:49] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 240 seconds)
[19:29:53] <bjs> (maybe add a `| End` there so the program can actually halt...)  then your program can be a pure function that corresponds to a value like `ReadStdin (\s -> WriteStdout s End)` which is a pure value that *represents* an impure computation and what to do with the result
[19:30:17] <bjs> then you hand this pure value to a runtime which does the actual interaction with the real world
[19:31:47] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[19:32:40] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[19:32:47] <ProfSimm> bjs: that's what I mean by meta program though. There's a separate runtime
[19:33:14] <bjs> ProfSimm: yep, there's a separate runtime that actually takes these pure values that your functional program gives out to perform the impure actions on the world
[19:33:46] *** Joins: k3nn7 (~k3nn7@2a02:a31b:43e:aa80:eac:a9fa:6b1d:821e)
[19:34:01] <bjs> Those are your two options: impure actions inside your functional language (e.g. a function with side-effects) which is fine;  or a pure datatype whose structure represents the impure actions you want to take and to hand that to something that actually does the impure work (e.g. a runtime)
[19:34:04] *** Joins: diophantoz (~diophanto@user/diophantoz)
[19:34:13] <ProfSimm> bjs: I was more curious how we have a database within Haskell itself. Some functional languages permit for mutable values in some cases, I don't know
[19:34:19] *** Quits: k3nn7 (~k3nn7@2a02:a31b:43e:aa80:eac:a9fa:6b1d:821e) (Remote host closed the connection)
[19:34:55] <bjs> ProfSimm: well from entirely within Haskell you can have a `data MyDB = DataBase [Row]` and then you can just have functions like `insertRow :: Row -> MyDB -> MyDB` which inserts the row by taking the whole database and returning a whole new database
[19:35:00] <bjs> (with that row inserted)
[19:36:09] *** Quits: jokoon (~jokoon@136.252.163.126) (Remote host closed the connection)
[19:36:44] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[19:36:59] <bjs> and then you don't need impure actions at all
[19:38:44] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[19:39:01] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[19:39:25] *** Quits: cwiz89 (~cwiz89@91.193.178.189) (Ping timeout: 240 seconds)
[19:40:07] *** Joins: cwiz89 (~cwiz89@91.193.178.189)
[19:40:32] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Ping timeout: 252 seconds)
[19:48:32] *** Joins: a6a45081-2b83 (~aditya@pal-210-106-57.itap.purdue.edu)
[19:51:48] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[19:55:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:55:30] *** Joins: InternetCitizen (~fuzzypixe@ensi-libre-service-019.ensimag.fr)
[19:56:25] <ProfSimm> bjs: the problem with that is that this doesn't scale well. 
[19:56:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[19:56:33] <bjs> ProfSimm: why doesn't it scale well?
[19:57:48] <ProfSimm> bjs: there's no clear way to discard previous states for one.
[19:58:21] <bjs> ProfSimm: you're thinking too imperatively, as if you'd end up with many "copies" of the database in memory
[19:59:15] <bjs> but that's not really how persistent data structures like you'd find in Haskell work and in general the whole language is built on persistent data structures and sharing like this
[19:59:18] <ProfSimm> bjs: I may not end up with full copies, but I'll end up retaining that state cumulatively, unless I get out of scope and the bindings to that state go away too. That's not very deterministic though.
[19:59:35] <bjs> Now I mean,  a list of rows is not a very good implementation (it is inefficient and doesn't scale)
[19:59:53] <ProfSimm> Well... so you agree then
[20:00:38] <bjs> ProfSimm: I wasn't sure whether you were picking on my particular choice of using a list rather than a B-Tree or something or whether you were concerned about the persistent nature
[20:00:56] <bjs> the first is a real question in the design, the second is a shift in thinking about data that you have to get used to in FP
[20:01:44] <ProfSimm> bjs: well, I'm aware of structural sharing.
[20:02:02] <ProfSimm> But that has limits too
[20:02:12] <bjs> Because really you're not changing the entire database, you're going to be changing one tiny bit of it and the old bit can either be kept or discarded depending on whether you use it (e.g. that's up to a GC or optimisations or whatever)
[20:02:43] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[20:03:06] <bjs> and in general the entire language and ecosystem is built out of these kinds of structures
[20:03:07] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[20:03:14] <cerl> What do you guys use to plan out what you're going to program?
[20:03:25] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[20:03:31] <ProfSimm> cerl: I write interfaces :P
[20:03:32] <FloridaMan> cerl: in what respect?
[20:03:56] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[20:04:18] <mrig> cerl from now on, code.
[20:04:21] *** Joins: trevors (~trevors@user/trevors)
[20:04:38] <FloridaMan> There's planning the behavior, planning the UI, planning the architecture, etc.
[20:05:06] <cerl> Planning how you're even going to start a project?
[20:05:29] <FloridaMan> creating a backlog in some tracking system
[20:05:33] <ProfSimm> bjs: why do you think commercial databases are not written in FP
[20:05:43] <FloridaMan> starting with the top-level features
[20:05:49] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[20:06:01] <FloridaMan> just writing down the name and a brief description, then you can come back and detail it out later
[20:06:16] <FloridaMan> then order them
[20:06:46] <FloridaMan> then break them down into reasonably-sized items (also in the backlog, with the original ones as parents)
[20:06:59] <FloridaMan> then start talking about iterations
[20:07:09] <GeDaMo> First, you have to come up with a name :|
[20:07:28] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[20:07:44] <FloridaMan> hehe
[20:07:50] *** Joins: horseface (~horseface@user/horseface)
[20:08:02] <bjs> ProfSimm: well for a start they don't require a runtime to have impure effects (e.g. persisting to filesystem) and in general FP languages don't get as much love as C does when it comes to portability, optimizations etc and you can do a lot in terms of optimizing for cache efficiency in C that is harder to do in FP languages. and in general not very much is implemented in FP
[20:08:05] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[20:08:15] <FloridaMan> cerl: then this is about the time I'd start talking about architectural decisions
[20:08:36] <FloridaMan> because there's going to be a lot of foundational decisions and prerequisites before you can get anything started
[20:08:40] <mrig> OH that's pretty cool, Europol have been ordered to delete a massive pool of data.
[20:09:11] <ProfSimm> mrig: why is it cool
[20:09:24] <mrig> well it is pretty anti social behaviour.
[20:09:35] <mrig> spying on everyone.
[20:10:17] <GeDaMo> https://www.theatlantic.com/international/archive/2013/07/the-creepy-long-standing-practice-of-undersea-cable-tapping/277855/
[20:10:17] <bayaz> Title: The Creepy, Long-Standing Practice of Undersea Cable Tapping 
[20:10:19] <ProfSimm> bjs: I feel there's some middle-ground between FP and OOP and it looks relational. You know me and my Prolog-like theories.
[20:10:22] <mrig> quite refreshing to read that.
[20:10:47] <bjs> ProfSimm: I mean SQL is a declarative functional/functional-like language
[20:11:16] <mrig> GeDaMo: I gather that all the traffic that goes across the Atlantic via the cable in UK is caught and recorded.
[20:11:18] <ProfSimm> bjs: the language is, but that's the thing, what you express in that language is a query over a very mutable state
[20:11:28] <bjs> ProfSimm: but database management itself is a lot less appealing to do declaratively
[20:12:37] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[20:12:56] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[20:14:20] <arkanoid> how does rpath works? Is rpath expecte to be found on executable file only, or also on external dynamic library files (.so)?
[20:16:14] <KillerWasp> hello random abduced guys
[20:16:37] *** Quits: Macuser (~Macuser@2600:1003:b466:f61b:650f:cc1c:784:d758) (Ping timeout: 240 seconds)
[20:16:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:18:48] <KillerWasp> nice tips: If you block google analytics your website waits for minutes for the load.
[20:20:29] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[20:20:41] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:21:02] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[20:21:14] *** Joins: magla (~gelignite@55d483f5.access.ecotel.net)
[20:21:28] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:25:21] <lf94> Thoughts on TODO comments in code?
[20:25:33] <lf94> IMO: gives a lot of context.
[20:26:30] *** Quits: a6a45081-2b83 (~aditya@pal-210-106-57.itap.purdue.edu) (Remote host closed the connection)
[20:26:52] *** Joins: horseface (~horseface@user/horseface)
[20:27:45] <Square> lf94, i like it. 
[20:28:44] <lf94> Thoughts on issues.txt in repo?
[20:29:06] <lf94> issues/ is probably better
[20:31:18] <Square> i often think JIRA is too detached from the code. Like all refactoring tasks would possibly live better in code. But never tried it
[20:31:24] <pulse> issues.md
[20:33:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:33:54] <Square> Fair to say, you miss all the luxery of JIRA type tools if you keep it in the repo. Priority, release management, etc
[20:34:16] <lf94> Issues have to live _somewhere_, but living inside the actual source code doesn't make much sense because issues really span many parts of the system.
[20:34:26] *** Joins: bauripalash (~bauripala@2401:4900:3825:7ad2:1:2:4472:87fa)
[20:35:04] <lf94> issues/ can easily support priority
[20:35:16] <lf94> release management can be done in-repo also
[20:35:19] *** Quits: bauripalash (~bauripala@2401:4900:3825:7ad2:1:2:4472:87fa) (Client Quit)
[20:35:28] *** Joins: bauripalash (~bauripala@2401:4900:3825:7ad2:1:2:4472:87fa)
[20:35:48] <pulse> power of open source https://www.bleepingcomputer.com/news/security/dev-corrupts-npm-libs-colors-and-faker-breaking-thousands-of-apps/
[20:35:50] <bayaz> Title: Dev corrupts NPM libs 'colors' and 'faker' breaking thousands of apps 
[20:35:50] <pulse> :p
[20:35:52] <lf94> Rather than an issue in JIRA cluttered with noise, a specific issues/thing.md can be well tailored.
[20:36:00] *** Joins: src (~src@user/src)
[20:36:10] <lf94> (as more is learned about the issue)
[20:37:48] *** Quits: fe23 (~fe23@2409:8a34:464:4990:d0a0:6afc:175:8a23) (Quit: fe23)
[20:38:46] *** Quits: razzd777 (~razzd777@user/razzd777) (Remote host closed the connection)
[20:39:21] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[20:40:34] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[20:42:32] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:42:34] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[20:43:08] <rindolf> pulse: my man, sup?
[20:43:21] <pulse> hi rindolf, sup
[20:43:25] *** Quits: V__ (~V@43.250.157.250) (Ping timeout: 240 seconds)
[20:47:04] *** Quits: bauripalash (~bauripala@2401:4900:3825:7ad2:1:2:4472:87fa) (Quit: Quit)
[20:49:53] *** Joins: V__ (~V@43.250.157.250)
[20:50:54] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[20:51:40] <rindolf> pulse: may have saved this world, which may be called 'thə grimmieverse' or 'the rindolfverse' or whatever. short-term quarterly gains are more important. ;) https://memory-alpha.fandom.com/wiki/Little_Green_Men_(episode)
[20:51:41] <bayaz> Title: Little Green Men (episode) 
[20:52:09] *** V__ is now known as WHL
[20:52:39] <nomagno> pulse: Power of centralized package management
[20:52:41] <pulse> rindolf, hmm
[20:52:59] <nomagno> This is why I think either you don't have a package manager, or you purposefully avoid this kind of absolute dependency
[20:53:25] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:53:28] <pyzozord> pulse: yes, javascript at it again
[20:53:49] <pulse> i think devs are all too comfortable updating their deps without auditing them
[20:53:58] <nomagno> ^
[20:54:17] <nomagno> Centralized package management encourages reckless piling up of dependencies
[20:54:38] <pyzozord> it's not physically possible to review 500mb of javascript
[20:54:45] <KillerWasp> google apis or google analitics
[20:54:58] <KillerWasp> make firefox stuck
[20:55:55] <nomagno> pyzozord: You're doing something wrong if you routinely import that much code
[20:56:02] *** Joins: kish` (~aqua@user/aqua)
[20:56:15] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 256 seconds)
[20:56:21] <nomagno> ... Almost all webdevs are doing a lot wrong, security-wise
[20:56:23] *** Joins: skidd0 (~homie@184-090-249-090.res.spectrum.com)
[20:57:19] <pyzozord> you don't need to do much, you just import 5 libraries
[20:57:26] <pyzozord> and you might end up with 500mb js
[20:57:33] <pyzozord> or at least 100
[20:58:52] <KillerWasp> https://0x0.st/oi4J.png
[20:58:53] <bayaz> Type: image/png Size: 10.8 kB 
[20:59:19] <rindolf> pulse: https://buffyfanfiction.fandom.com/wiki/Selinaverse - the title is outdated
[20:59:20] <bayaz> Title: Selinaverse 
[20:59:30] <KillerWasp> yes, IT"S BLOCKED!! why you need it??? *sigh*
[20:59:59] <KillerWasp> Retry using another source. lol. common. try run other malwares!!
[21:00:28] *** Joins: trevors (~trevors@user/trevors)
[21:00:51] <rindolf> pyzozord: i'm a diehard KISS jquery fan
[21:01:19] *** Joins: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[21:01:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:01:27] <Square> idk if jquery qualifies as KISS
[21:01:45] <Square> simple to create a mess maybe
[21:01:51] <nomagno> It doesn't
[21:02:05] <pyzozord> if you can drop support for old browsers, you can really go without any libraries. Native browser apis are really good these days
[21:02:06] <nomagno> It's more KISS then NodeJS
[21:02:07] <nomagno> Sure
[21:02:50] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[21:03:00] <pyzozord> but generally whatever gets me to KISS I am in full support of
[21:03:01] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[21:03:01] <Square> i never tried Node because principles. I swear to never write a line .js in my life. It kills everything i like about programming
[21:03:54] <nomagno> I only really write inline HTML JavaScript
[21:04:19] <KillerWasp> I guess it's better to wait a few minutes than to allow malicious code. I can't even report this to the google community or they get crazy.
[21:05:11] <KillerWasp> For those who do not know: firefox is from google.
[21:07:48] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[21:08:12] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Remote host closed the connection)
[21:08:13] *** Joins: Filo (~Filo@net-93-147-7-13.cust.vodafonedsl.it)
[21:08:24] *** Quits: horseface (~horseface@user/horseface) (Quit: I AM GOING TO HIDE FROM THE TOTALITARIANS AMONGST THE ZEBRAS!!!)
[21:09:06] <Square> Man, had a glorious day in code. My pet hobby project suffered from a bad build layout that stopped it from actually doing what i needed to do. Had no clue how to solve it. But today, after trying to fix it over 2 years, it sorted itself after some debugging. 
[21:10:09] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[21:10:17] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[21:11:03] <pyzozord> so today I learned builder pattern
[21:11:24] <pyzozord> just one of the gof patterns I knew the name of but wasn't sure / didn't remember what was it
[21:11:43] <pyzozord> that's what I call a good learning pace, every day you actually learn something
[21:11:46] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:11:52] <Square> yay
[21:12:05] <EdFletcher> JavaScript these days is lovely, and if you can’t accept that, you’re the only one who misses out. 
[21:12:24] *** Quits: swp (~Thunderbi@143.176.249.0) (Quit: swp)
[21:12:31] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:12:36] <Square> glorious at solving boring problems maybe
[21:12:52] <EdFletcher> LOL no 
[21:13:05] *** Joins: swp (~Thunderbi@143.176.249.0)
[21:13:11] <EdFletcher> But you’re not biased or anything right? 
[21:13:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-10f3-8e8c-5022-288a.res6.spectrum.com)
[21:14:03] <Square> In what way?
[21:14:30] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[21:14:32] <pyzozord> they are biased, but that's ok
[21:14:56] <EdFletcher> pyzozord: It is, if acknowledged 😉 
[21:16:23] <[itchyjunk]> Is haskell list comprehension always syntactic sugar for something?
[21:17:26] <Square> idk, i never use them. 
[21:17:58] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Remote host closed the connection)
[21:18:51] <Square> i feels fmap/filter/fold/>>= suffices for most list things
[21:19:44] <GeDaMo> [itchyjunk]: yes
[21:20:00] *** Parts: Camilo (~hugh@host-92-1-126-125.as13285.net) (WeeChat 2.8)
[21:20:54] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[21:25:24] <GeDaMo> [itchyjunk]: http://aosabook.org/en/ghc.html#s:core
[21:25:24] <bayaz> Title: The Architecture of Open Source Applications (Volume 2): The Glasgow Haskell Compiler 
[21:25:44] <GeDaMo> GHC 'desugars' by translating to an intermediate language called Core
[21:26:17] <[itchyjunk]> ohh
[21:26:29] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[21:26:30] <[itchyjunk]> crazy, i should really learn to read simply typed lambda calculus
[21:26:35] <[itchyjunk]> this notation is really scary
[21:27:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:27:42] <GeDaMo> Yeah, I don't understand that either :P
[21:27:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:27:47] *** Joins: mickey8 (~user@user/mickey)
[21:28:38] <GeDaMo> https://www.microsoft.com/en-us/research/publication/implementing-functional-languages-a-tutorial/
[21:28:39] <bayaz> Title: Implementing functional languages: a tutorial - Microsoft Research 
[21:28:44] *** Parts: Dima[m] (~reddima10@2001:470:69fc:105::366) ()
[21:29:14] <[itchyjunk]> wat
[21:29:21] <[itchyjunk]> why is MS doing a research on this? :D
[21:29:28] <[itchyjunk]> hmm is tehre any MS functional language?
[21:29:31] <bjs> [itchyjunk]: MS have their own functional programming language called F#
[21:29:42] <rindolf> Square: i like typescript a lot
[21:29:43] <GeDaMo> Simon Peyton-Jones was employed by MS research for quite a while
[21:29:46] <[itchyjunk]> oh F# is ms? i see
[21:29:50] <bjs> and they for a long time employed one of the creators of Haskell, Simon Peyton-Jones
[21:29:53] <[itchyjunk]> anything with  a # is ms maybe
[21:30:00] <[itchyjunk]> A#,B#,C#, ..
[21:30:50] <pyzozord> well maybe I didn't learn it so well
[21:31:02] <pyzozord> I don't understand the difference between abstract factory pattern and builder pattern
[21:31:57] <GeDaMo> MS funds a lot of research that doesn't end up in MS products
[21:31:58] <Decker> I'd say you get a completed product from a factory, where a builder has additional things you add to it.  It might be that th start of a builder is a factory I suppose
[21:32:15] <bjs> GeDaMo: well Excel has lambdas now, thanks to Simon
[21:32:23] <GeDaMo> Ah, really?
[21:32:38] <Decker> like a sql query builder would be like SQL.stmt().from("table").where("a=3").order("b")
[21:32:41] *** Quits: joj (~joj@jojeee.xyz) (Ping timeout: 268 seconds)
[21:32:53] <[itchyjunk]> Too bad MS research doesn't run an irc or somesort of chat.
[21:33:11] <GeDaMo> It's probably a Teams chat :P
[21:33:16] <[itchyjunk]> :<
[21:33:18] *** Quits: mercenary (~mercenary@user/mercenary) (Ping timeout: 268 seconds)
[21:33:21] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[21:33:40] <bjs> GeDaMo: yeah,  Simon had been working on it for a while
[21:33:53] <bjs> I was never really convinced of the benefits but it's a cool project
[21:34:23] <GeDaMo> SPJ is off to work for Epic games
[21:34:28] <KillerWasp> "You are obliged to execute all cookies or you cannot continue visiting" , ok, *I close the site and continue browsing*
[21:34:33] <[itchyjunk]> I found a (minor) typo in haskell wiki.
[21:34:41] <rindolf> Square: but i also like perl and py3 though
[21:34:50] <[itchyjunk]> I wonder how many people found it and didn't care to change it. or it is that the number of reader are low?
[21:34:57] <[itchyjunk]> would be odd if latter
[21:35:32] <[itchyjunk]> if you don't know programming and you read this
[21:35:34] <[itchyjunk]> "catMaybes removes Nothing's from a list."
[21:35:48] <KillerWasp> really. No one is going to enter a site that forces you to run cookies and JS. What are these retards thinking?
[21:35:56] <[itchyjunk]> imagine spending a week writing this and telling your manager, who knows nothing, about what you did the whole week.
[21:37:22] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[21:37:23] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[21:37:23] *** Joins: tane (~tane@user/tane)
[21:37:43] <[itchyjunk]> " Because of this, several Haskell programmers consider the list comprehension unnecessary now."
[21:37:44] <[itchyjunk]> wow
[21:38:12] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:38:14] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51) (Ping timeout: 252 seconds)
[21:38:36] <[itchyjunk]> hmmm
[21:38:53] <bjs> [itchyjunk]: `[f x | a <- b, c <- d, etc]` is basically just `do { a <- b; c <- d; etc; return (f x) }` and this do-notation is very common
[21:38:53] <GeDaMo> Because of what?
[21:38:54] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Ping timeout: 256 seconds)
[21:39:27] <[itchyjunk]> "list monad"
[21:39:31] <GeDaMo> Ah
[21:39:33] <bjs> [itchyjunk]: *this* is where the Monad interface comes in
[21:39:34] <[itchyjunk]> idk what it really means yet
[21:39:36] <bjs> finally :)
[21:39:38] <GeDaMo> I don't know what that is :|
[21:41:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[21:41:02] *** Quits: fushko (~fushko@host-79-43-152-141.retail.telecomitalia.it) (Remote host closed the connection)
[21:41:17] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 240 seconds)
[21:42:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Client Quit)
[21:42:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:43:26] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[21:43:54] <sonny> SPJ at Epic games sounds odd
[21:43:54] <[itchyjunk]> I need a better working definition of what a monad is
[21:44:07] <[itchyjunk]> Monad being an endomorphism in the category of Hask doesn't help me here
[21:44:11] <GeDaMo> https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/13-the-list-monad
[21:44:12] <bayaz> Title: 12. The List Monad - School of Haskell | School of Haskell 
[21:44:22] <bjs> [itchyjunk]: in this particular case they are things that look like lists and hence can be made through "comprehensions" :P
[21:44:22] *** Joins: vysn (~vysn@user/vysn)
[21:44:34] *** Joins: dimino (~dimino@71-129-181-69.lightspeed.fyvlar.sbcglobal.net)
[21:44:34] *** Quits: dimino (~dimino@71-129-181-69.lightspeed.fyvlar.sbcglobal.net) (Changing host)
[21:44:34] *** Joins: dimino (~dimino@user/dimino)
[21:44:44] *** Quits: rsx (~dummy@ppp-188-174-159-228.dynamic.mnet-online.de) (Quit: rsx)
[21:44:48] <[itchyjunk]> hmmm
[21:44:52] <dimino> hm if I want to implement API key support into my API, is there a "best practices" I should read
[21:46:05] <[itchyjunk]> so monad is some Type in type theory
[21:46:08] *** Joins: Akuli (~Akuli@87-94-108-211.bb.dnainternet.fi)
[21:46:50] *** Quits: InternetCitizen (~fuzzypixe@ensi-libre-service-019.ensimag.fr) (Ping timeout: 256 seconds)
[21:47:05] *** Joins: anthk_ (~anthk_@92.176.105.30)
[21:47:32] *** Quits: anthk_ (~anthk_@92.176.105.30) (Remote host closed the connection)
[21:49:18] <[itchyjunk]> hmm so monads are maps between types it looks like
[21:49:32] <[itchyjunk]> ohh thats why its an endomorphism?
[21:49:39] <[itchyjunk]> you have a category of all possible types
[21:49:46] <[itchyjunk]> and a monad will always map from one to another
[21:49:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:50:16] <pyzozord> dimino: https://cloud.google.com/apis/design/
[21:50:17] <bayaz> Title: API design guide ?|? Cloud APIs ?|? Google Cloud 
[21:50:45] <dimino> yeah that helps, ty
[21:53:51] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) ()
[21:56:49] *** Joins: InternetCitizen (~fuzzypixe@ensi-libre-service-019.ensimag.fr)
[21:57:00] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[21:57:01] <pyzozord> ecto-meso-endo really kinda means inner-middler-outer and morph means shape or changing shape
[21:57:48] <[itchyjunk]> i should try to learn yoenda or w/e it's called
[21:57:56] <[itchyjunk]> who knew that shit would come back to bite me?
[21:58:05] <[itchyjunk]> (Narrator: Everyone knew)
[21:58:41] <DPA> What's the counter on the xkcd site for?
[21:59:17] <GeDaMo> What counter?
[21:59:38] <DPA> The on in the header, saying "20d 20h 30m"
[22:00:04] <GeDaMo> Oh, I don't see that
[22:01:13] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[22:01:24] <GeDaMo> February the 1st?
[22:02:29] <DPA> Probably. But why?
[22:02:38] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[22:03:42] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:03:57] <GeDaMo> https://old.reddit.com/r/xkcd/comments/s0oynl/xkcd_countdown_timer_20d_21h_49m_remaining_until/
[22:04:07] <GeDaMo> Nobody else seems to know either :P
[22:06:30] <mrig> until next comic would by my guess.
[22:07:01] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[22:07:02] <DPA> Interesting. Exciting. Worrying. I'll keep an eye on it.
[22:07:08] <[itchyjunk]> Thats when the AI over lord take over
[22:07:13] <[itchyjunk]> the comics
[22:07:15] <mrig> I didn't know that it was on there, had to enable JS to see it :)
[22:07:15] <[itchyjunk]> not the world
[22:07:32] <[itchyjunk]> the taking over the world has been delayed due to internal restructuring and code refactoring
[22:07:52] <[itchyjunk]> someone decided to rewrite everything in Rust, you see
[22:07:55] <pyzozord> sites like xkcd should not put up counters without explanation, it gives me anexity we are counting down to some kind of apocalypse
[22:07:58] <mrig> to busy collecting paperclips to take over :D
[22:08:28] <mrig> It's a cryptic way to count paperclips!
[22:10:48] <[itchyjunk]> apparently learning about this monad/functor crap won't help me now
[22:10:50] <wedr> Terminology question: Are there any programming terms that were based off from Japanese?  I know "satoshi" and "scrum", both originating from Japan
[22:10:51] * [itchyjunk] skips this part
[22:11:11] <[itchyjunk]> "satoshi" was supposidly japanese
[22:11:20] <GeDaMo> I thought scrum came from Rugby :|
[22:11:22] <[itchyjunk]> i wouldn't say it originated `from` Japan
[22:12:22] * wedr hmms
[22:12:31] <GeDaMo> "The term is borrowed from rugby, where a scrum is a formation of players. The term scrum was chosen by the paper's authors because it emphasizes teamwork." https://en.wikipedia.org/wiki/Scrum_(software_development)
[22:12:31] <bayaz> Title: Scrum (software development) - Wikipedia 
[22:12:48] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51)
[22:12:57] <wedr> oh, I somehow always thought of "scrum" from Toyota
[22:12:58] <[itchyjunk]> so neither of the 2 example is from Japan!
[22:13:19] <wedr> nevermind then
[22:15:26] *** Joins: zaher (~zaher@46.58.251.196)
[22:16:35] *** Joins: echoSMILE (uid504326@user/echosmile)
[22:16:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:16:40] <Daemonick> Let me state a different problem of number theory except P=NP or P<>NP
[22:17:43] <diophantoz> toyota is lean
[22:17:49] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:f0a4:a961:9964:1b51) (Ping timeout: 240 seconds)
[22:17:59] <diophantoz> you basically cut of everything superflous
[22:18:09] <Daemonick> The Fermat's Last Theorem. It had been proven to be satisfied using brute force solutions
[22:18:33] <[itchyjunk]> ?
[22:18:42] <[itchyjunk]> You can't prove a theorem by example.
[22:18:48] <Daemonick> true
[22:18:55] <[itchyjunk]> You can disprove something with a counter example.
[22:19:00] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:c5b4:7757:92cc:e34)
[22:19:17] <[itchyjunk]> What is that one simple algo i am thinking of?
[22:19:20] <Daemonick> also true
[22:19:21] <[itchyjunk]> damn it, i can't remember
[22:19:33] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[22:19:40] <[itchyjunk]> something about if it's even, half it, if not multiple by 3 and add 1 or somesuch.
[22:19:47] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[22:19:49] <[itchyjunk]> One of you knows what I am talking about.
[22:20:04] <diophantoz> or maybe you cut out everything that doesn't add to the product
[22:20:10] <Daemonick> Perfect Induction is only perfect in mathematics
[22:20:13] *** Quits: cwiz89 (~cwiz89@91.193.178.189) (Ping timeout: 240 seconds)
[22:20:19] <GeDaMo> https://en.wikipedia.org/wiki/Collatz_conjecture
[22:20:19] <bayaz> Title: Collatz conjecture - Wikipedia 
[22:20:28] <[itchyjunk]> ah collatz conjecture yes
[22:20:59] <[itchyjunk]> we could prove it if we could prove things by example or (brute force)
[22:21:01] <GeDaMo> I couldn't remember the name either, I had to look up 'conjecture' in my browser history :P
[22:21:26] <KillerWasp> all PHP and softwares PHP are broken. RIP...
[22:21:30] <[itchyjunk]> :o
[22:21:42] <[itchyjunk]> I can't believe i remembered the algo correctly though, heh
[22:21:52] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:22:12] <diophantoz> fermat's last theorem is like a theorem you think would work because of aesthetics
[22:22:19] <diophantoz> or symmetry or whatever
[22:22:55] <Daemonick> [itchyjunk] while (True): search() if die(): break;
[22:23:32] <[itchyjunk]> I should someday try to learn a bit more about axiom of choice
[22:23:44] <[itchyjunk]> math would kinda suck too without it, from what i hear
[22:23:53] <[itchyjunk]> proofs and such get a lot more convoluted
[22:24:41] <Daemonick> [itchyjunk] while (True): search() if die(): break; or if brake(): break; or if another_brick_in_well(): break;
[22:24:51] *** Joins: constxd_ (~brad@142.134.38.68)
[22:24:53] <Daemonick> *wall
[22:25:26] <diophantoz> KillerWasp, where
[22:25:35] <diophantoz> PHP died on my server
[22:25:56] <KillerWasp> diophantoz: yes
[22:25:56] <diophantoz> i had to disable some mod
[22:26:12] <[itchyjunk]> If i had to rank the best languages, it would be wasd language followed by php
[22:26:18] <diophantoz> KillerWasp, is it universal?
[22:26:24] <Daemonick> diophantoz...are you using front-end browser application for IRC?
[22:26:27] <KillerWasp> [itchyjunk]: SHUT UP!!!
[22:26:42] <diophantoz> Daemonick, no i'm not that cool
[22:27:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:27:17] <Daemonick> I once saw a dream of really enormous numbers
[22:27:21] *** Quits: constxd_ (~brad@142.134.38.68) (Client Quit)
[22:27:44] <Daemonick> Numbers that only Turing machine with infinite memory would hold
[22:28:01] <GeDaMo> http://www.mrob.com/pub/math/largenum.html
[22:28:02] <bayaz> Title: Large Numbers at MROB 
[22:29:24] <Daemonick> Numbers that are symbolical described like a^b^c where ^=(vertical_arrow)
[22:29:48] <GeDaMo> http://www.mrob.com/pub/math/largenum-2.html#powertower
[22:29:49] <bayaz> Title: Large Numbers (page 2) at MROB 
[22:29:55] <Daemonick> Time for my pills...BRB
[22:30:10] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[22:31:06] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Remote host closed the connection)
[22:33:09] <Daemonick> To me, our work as IoT is to fit infinity in our computers
[22:33:22] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[22:33:43] *** Quits: xff0x (~xff0x@2001:1a81:5310:700:c5b4:7757:92cc:e34) (Ping timeout: 268 seconds)
[22:33:49] <Daemonick> We are the robots. Very clever indeed robots!
[22:33:58] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[22:34:09] <Daemonick> The machine is us/using us!
[22:34:23] *** Joins: xff0x (~xff0x@2001:1a81:5310:700:28af:ed1a:1e0a:acc)
[22:34:26] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:34:31] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[22:34:41] <pulse> we are not robots because robots don't cry
[22:34:49] <Daemonick> GeDaMo, very interesting website
[22:34:56] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:34:59] <GeDaMo> Yeah, it's pretty good
[22:35:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[22:35:18] <Daemonick> I have just bookmarked it
[22:35:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:35:29] <[itchyjunk]> Daemonick, yeah it would be argued that "life" is just an ingrident for creating higher machine intellgence
[22:35:30] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[22:35:55] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:36:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[22:36:22] <GeDaMo> Daemonick: I don't see it linked form that page but the same guy has this calculator https://mrob.com/pub/perl/hypercalc.html
[22:36:23] <bayaz> Title: Hypercalc -- The Calculator That Doesn't Overflow at MROB 
[22:37:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ab6a:ec40:1b75:3ae7) (Ping timeout: 240 seconds)
[22:38:03] <Daemonick> Is anybody here to want making algoriths and programs in greek language?
[22:38:20] <[itchyjunk]> No
[22:38:25] <pulse> no
[22:38:33] <pulse> all code should be english :D
[22:38:53] <pyzozord> there is so much to learn o_O
[22:40:19] <pyzozord> I'm feel I will soon start not handling this well
[22:40:40] <pyzozord> feeling
[22:40:51] <KillerWasp> [itchyjunk]: how obedient. you have remained silent. :S
[22:40:52] <Daemonick> In the sake of global preservation and sustainbility of code as these refering to maximum readers?
[22:40:56] <GeDaMo> You can't learn everything
[22:41:13] <pyzozord> it seems like everyone already knows all these things
[22:41:18] <Daemonick> That's why wisdom is more important
[22:41:41] <GeDaMo> I read (or skim) a lot but I mainly remember keywords so I can find things again
[22:42:10] <GeDaMo> I try to simply so I get the basic idea if not all the details
[22:42:15] <GeDaMo> simplify
[22:43:41] <GeDaMo> I prefer simple techniques to more efficient because I'm likely to understand and remember them
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:48] <GeDaMo> I should probably point out that I don't actually write a lot of code because I'm too lazy :P
[22:47:08] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:07] * pyzozord imagines all GeDaMo's programs are written as the most compressed codegolfs already at the first writing
[22:48:41] <GeDaMo> Ha! :D
[22:49:10] *** Quits: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net) (Ping timeout: 256 seconds)
[22:49:36] <[itchyjunk]> KillerWasp, i was too budy winning with wasd
[22:50:02] <KillerWasp> wasd is for lossers. where winning?
[22:50:41] <diophantoz> i write scripts
[22:50:44] <diophantoz> not code
[22:50:49] <diophantoz> i'm a scripta
[22:52:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:53:25] *** Joins: anthk_ (~ander@92.176.105.30)
[22:54:00] *** Quits: anthk_ (~ander@92.176.105.30) (Client Quit)
[22:54:01] <diophantoz> okay so i got mail to work with SMTP and PHPMailer
[22:54:16] <diophantoz> also sendmail from localhost
[22:54:28] <KillerWasp> pyzozord: your comment remember me: https://www.ioccc.org/
[22:54:28] <bayaz> Title: The International Obfuscated C Code Contest 
[22:54:33] *** Joins: k3nn7 (~k3nn7@2a02:a31b:43e:aa80:d73a:4b9d:5fb0:cc38)
[22:54:37] <diophantoz> which was a revelation, as i thought i had to configure mail servers at ISP level and so on
[22:54:40] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[22:55:02] <diophantoz> but can i mail "locally" in localhost?
[22:55:33] <diophantoz> is that what sysadmin's do, making scripts that if something break sendmail sends them a bug report on a local mail account?
[22:58:37] <pyzozord> KillerWasp: hmmm, something rings a bell actually
[22:59:05] <pyzozord> anyway I decided with so much learning one desk is not enough, I must construct another
[22:59:26] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: The Lounge - https://thelounge.chat)
[23:00:38] <diophantoz> oh, i can email to a local user
[23:00:49] <GeDaMo> Lots of mail used to be local
[23:01:09] *** Quits: kodah (~kodah@user/kodah) (Remote host closed the connection)
[23:01:33] *** Joins: kodah (~kodah@user/kodah)
[23:01:43] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[23:01:59] <pyzozord> openbsd starts fun by sending you a local email when you just boot into it first time
[23:02:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:02:18] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[23:04:47] <diophantoz> yes that is very rewarding
[23:07:28] *** Joins: digitalice (~digitalic@user/digitalice)
[23:08:31] <diophantoz> success
[23:08:33] <diophantoz> very nice
[23:11:17] <mrig> Is there any convention for cache folders on operating systems, or would you need to just hard code a path for each OS and find out what is common or current practice?
[23:12:17] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[23:12:44] <sonny> pyzozord: you know that stuff is bad science right?
[23:13:25] *** Joins: kirankrishna (~Thunderbi@69-221-222-246.lightspeed.austtx.sbcglobal.net)
[23:14:22] *** Joins: zwr (~zwr@2804:d45:b966:fb00:4478:5288:66d4:ebc1)
[23:15:03] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[23:15:37] <GeDaMo> sonny: which stuff?
[23:15:49] <sonny> I realize the dilema Go had when those choose not to implement generics ... it's difficult
[23:16:03] <sonny> GeDaMo: "ecto-meso-endo"
[23:16:33] <GeDaMo> I don't know what that is :|
[23:16:44] <GeDaMo> I guess I missed something earlier
[23:17:00] <sonny> the three different body types, never heard this before?
[23:17:21] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 256 seconds)
[23:17:33] <GeDaMo> Uh ... maybe?
[23:17:53] <sonny> ok, well it's actually not a big deal at all
[23:18:03] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:18:32] <GeDaMo> Uh ... https://mennohenselmans.com/wp-content/uploads/2019/04/endomorph-ectomorph-mesomorph-somatotypes.jpg ?!
[23:18:33] <bayaz> Type: image/jpeg Size: 9.3 kB 
[23:18:47] <sonny> yes
[23:19:02] <GeDaMo> They all look like aliens :P
[23:19:15] <sonny> lol
[23:21:11] <sonny> I'm guessing Go's simple representation was a boon, since they seemed to be able to support multiple architectures from early on.
[23:21:58] <sonny> When you add generics, that seems to go away.
[23:22:02] *** Quits: _inky (~inky_@178.78.134.35) (Ping timeout: 256 seconds)
[23:22:43] <epony> are you sure?
[23:23:05] <rindolf> gnight everypony, the eternal lion sleeps tonight.
[23:24:00] <sonny> epony: yeah, the easy choice is to box everything, or use some tagged representation right?
[23:24:23] <epony> looks to me it won't compile on any 32bit system
[23:24:23] <[itchyjunk]> ez choice is to use FP
[23:24:43] <sonny> FP implementations seem to pick the tagged representation
[23:25:47] <sonny> epony: oh really, wow
[23:26:04] <epony> it came in the post-32bit epoch..
[23:26:14] <epony> has some fancy new compiler needs
[23:26:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:26:31] <epony> so it's mostly up to the compilers frontends
[23:26:58] <epony> but that large and modern feature set is demanding
[23:27:00] <sonny> I wonder if they just said no one uses 32 bit anymore
[23:27:11] <epony> it's still used a lot
[23:27:16] <sonny> oh
[23:27:27] <epony> many MCUs and such are 16 and 32bit (most)
[23:27:40] <sonny> what about servers?
[23:28:04] <epony> we're at the end of the 1st stage of the 64bit epoch ;-)
[23:28:12] <sonny> (I thought this was about x86)
[23:28:45] <sonny> epony: at this point, how does the designer pick a good register size?
[23:28:46] <epony> RISC had 64bit computing early and even the laggiest micro-arches are catching up
[23:28:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[23:28:52] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:28:54] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[23:29:01] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[23:29:13] <epony> "compiler" there are flags and machine specific options
[23:29:40] *** Parts: Lycurgus (~juan@98.4.112.204) ()
[23:29:46] <epony> the language might have spec needs though.. so, bundling the lang with the compiler is.. a regress of some sorts
[23:30:36] <epony> by all means development of new languages is a good thing and a progress
[23:30:59] <epony> the "blanket endorsement" and "rapid adoption" is.. slow ;-)
[23:31:02] <sonny> what should I think when I see 386?
[23:31:10] <epony> 1991
[23:31:19] <sonny> in terms of computers
[23:31:34] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[23:31:39] <sonny> is that a 32 bit arch?
[23:31:43] <epony> well, the p5 and p6 micro-arches are more common
[23:31:55] <GeDaMo> 386 was the first 32-bit x86
[23:32:02] <epony> yes it's on the edge of 16 to 32bit conversion
[23:32:04] <sonny> oh
[23:32:14] *** Quits: WHL (~V@43.250.157.250) (Quit: Leaving)
[23:32:40] <epony> made it possible to have multi-tasking (time sharing) which was possible on 286 too, but software was late for that
[23:32:41] <sonny> Go supports the 386
[23:33:05] <sonny> I'm guessing there is 32 bit support somewhere
[23:33:26] <epony> technically it should work on any processors around the time it was designed or later
[23:33:34] <edgar-rft> I have a headphone amp built from two LM386 if that counts
[23:33:47] <sonny> epony: "bundling the lang with the compiler" -- this isn't the case with golang?
[23:33:54] <sonny> it's not a living spec like Java
[23:34:03] <epony> hmm
[23:34:08] <beaky> nice i like amps
[23:34:36] <sonny> it's actually refreshing to see how thought out the spec is, something that is rare today
[23:34:38] <epony> check here: https://en.wikipedia.org/wiki/Go_lang "gofrontend, a frontend to other compilers, with the libgo library. With GCC the combination is gccgo;[16] with LLVM the combination is gollvm.[17][a]"
[23:34:39] <bayaz> Title: Go (programming language) - Wikipedia 
[23:34:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:34:56] <epony> it's own is a line above it
[23:35:01] <epony> :its:
[23:35:11] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:35:18] <GeDaMo> There were multi-user multi-tasking systems on 8086
[23:35:32] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:35:37] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 240 seconds)
[23:36:00] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[23:36:01] <sonny> epony: can you qoute it, I'm not sure what to look for
[23:37:04] <sonny> gollvm is no longer developed iirc
[23:37:25] <epony> GeDaMo, are you referring to CP/M?
[23:37:35] <GeDaMo> Concurrent CP/M was one, yes
[23:37:53] <sonny> how did that work?
[23:37:55] <GeDaMo> Xenix, I think
[23:38:08] <GeDaMo> Timer interrupts to switch tasks
[23:38:09] <sonny> was it done in concurrent pascal -- name I seem to remeber
[23:38:17] <GeDaMo> I don't think so
[23:38:21] *** Joins: _inky (~inky_@46.36.113.139)
[23:38:22] <sonny> oh ok
[23:38:34] <sonny> neat
[23:38:41] *** Joins: dan01 (~dan01@2a02:2f0f:320f:8200:282a:7d42:f2e6:d641)
[23:38:56] <sonny> by gary et al?
[23:39:04] *** Quits: dan01 (~dan01@2a02:2f0f:320f:8200:282a:7d42:f2e6:d641) (Client Quit)
[23:39:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:39:34] *** Joins: sebbu (~sebbu@user/sebbu)
[23:40:10] <GeDaMo> I don't know if he was personally involved in the development of it
[23:40:35] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[23:40:45] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[23:40:50] <epony> https://en.wikipedia.org/wiki/Concurrent_CP/M-86#MP/M-86 not exactly the multi-user but task-switching
[23:40:50] <bayaz> Title: MP/M - Wikipedia 
[23:41:00] <GeDaMo> The version I used was multi-user
[23:41:38] <GeDaMo> https://en.wikipedia.org/wiki/Multiuser_DOS#Concurrent_CP/M-86
[23:41:38] <bayaz> Title: Multiuser DOS - Wikipedia 
[23:41:57] <GeDaMo> "Later versions supported dumb terminals and so could be deployed as multiuser systems."
[23:43:35] <sonny> how do you have security if the system only supports one user?
[23:43:46] <GeDaMo> What security? :P
[23:43:50] <sonny> lol
[23:44:28] <sonny> just occured to me, I think you will need at least two
[23:44:41] <GeDaMo> Two users? What for?
[23:44:51] <sonny> one for privellaged access
[23:45:03] <GeDaMo> Didn't exist
[23:45:17] *** Joins: rtypo (~alex@user/rtypo)
[23:45:18] <sonny> xD
[23:45:24] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:45:29] <GeDaMo> It didn't have tree-structured directories either
[23:45:38] <GeDaMo> There were 16 numbered disk areas
[23:45:49] <GeDaMo> I think we only used area 0 though
[23:46:04] <sonny> so you have to remember the disk?
[23:46:26] <sonny> not a big deal if you only used on area I guess
[23:46:28] <epony> the disk remembers you C:\>
[23:46:38] <sonny> ohhhh
[23:48:18] <epony> typically was just C:> though, unless you changed your prompt.. you can bet Go programs won't compile on such computers
[23:48:57] *** Joins: vysn (~vysn@user/vysn)
[23:49:11] <sonny> no space right?
[23:49:16] <deniska> the only feasable HLL for programming those was probably pascal
[23:49:16] <epony> would need a much more recent compiler version, which sets the CPU support in the far "future" as it would be seen in 1986
[23:49:46] <epony> pascal, basic and fortran for applications and c and asm for systems programming
[23:50:00] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[23:50:13] <deniska> I don't think cp/m machines had any C compiler available, perhaps only late into the lifecycle
[23:50:22] <GeDaMo> https://en.wikipedia.org/wiki/PL/M
[23:50:23] <bayaz> Title: PL/M - Wikipedia 
[23:50:33] <sonny> guess it was too difficult to get an algol compiler?
[23:50:37] *** Joins: Pook (~Pook@2001:8a0:f996:1400:2d26:18c4:7a5f:9cd6)
[23:50:44] <deniska> while C targeted barely a computer, it targeted barely a computer which could run unix
[23:50:45] <GeDaMo> http://www.cpm.z80.de/source.html
[23:50:46] <bayaz> Title: Digital Research Source Code 
[23:50:57] *** Joins: Auron (~Auron956@user/auron)
[23:51:02] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:51:10] <epony> I have some algol diskettes for these
[23:51:20] <sonny> wow
[23:51:39] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[23:51:51] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:52:31] <epony> my personal collection from that period is about 10 boxes from the 8bit and 16bit machines
[23:52:32] *** Quits: murii (~murii@90.95.42.142) (Remote host closed the connection)
[23:52:52] <epony> (of diskettes)
[23:53:31] <sonny> ok, those sizes sound fictional
[23:53:54] <sonny> but it makes me wonder, what's the smallest device they could make to handle 3d graphics you think?
[23:54:06] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[23:54:21] *** Joins: dan01 (~dan01@2a02:2f0f:320f:8200:282a:7d42:f2e6:d641)
[23:54:29] <GeDaMo> https://www.youtube.com/watch?v=tGf4jdRbCuk
[23:54:30] <bayaz> Title: Sinclair ZX81 Game: 3D Monster Maze (1981 J. K. Greye Software) 
[23:55:06] <GeDaMo> Ah, it needed the 16K expansion :P
[23:55:35] <epony> the most used programs "locksmith" and "pctools"
[23:55:40] *** Joins: kaivai (~kaivai@user/kaivai)
[23:56:16] <epony> https://en.wikipedia.org/wiki/3-Demon
[23:56:16] <bayaz> Title: 3-Demon - Wikipedia 
[23:56:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:56:55] <sonny> wow
[23:57:16] <sonny> what system had the first procedural maze game?
[23:57:51] <GeDaMo> Talking about 3D and procedural, there's Elite
[23:57:57] *** Quits: _inky (~inky_@46.36.113.139) (Ping timeout: 240 seconds)
[23:58:07] <GeDaMo> https://en.wikipedia.org/wiki/Elite_(video_game)
[23:58:07] <bayaz> Title: Elite (video game) - Wikipedia 
[23:58:52] <GeDaMo> https://www.bbcelite.com/
[23:58:54] <bayaz> Title: Fully documented source code for Elite on the BBC Micro - Elite on the BBC Micro 
[23:58:58] <sonny> neat game, I say it on computerphile
[23:59:01] <sonny> oh woah
