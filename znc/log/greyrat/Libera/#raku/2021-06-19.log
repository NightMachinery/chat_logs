[00:00:03] *** Joins: gfldex (~dex@95.90.183.34)
[00:11:48] *** Quits: chrysanthematic (~chrysanth@109.70.150.245) (Quit: chrysanthematic)
[00:26:57] *** Joins: chrysanthematic (~chrysanth@89.38.69.171)
[00:33:01] *** Quits: chrysanthematic (~chrysanth@89.38.69.171) (Changing host)
[00:33:01] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[00:33:23] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[00:34:02] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[00:37:16] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[01:06:12] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[01:43:34] *** Quits: supersecant (~mareksh@83.216.136.233) (Quit: Connection closed)
[01:43:50] *** Joins: mareksh (~mareksh@83.216.136.233)
[01:44:09] *** mareksh is now known as supersecant
[01:53:45] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[01:55:49] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 268 seconds)
[02:07:35] *** Joins: antononcube (~antononcu@107-145-192-008.res.spectrum.com)
[02:09:54] <Xliff> How can I write a subset with multiple conditions?
[02:10:38] <Xliff> I've tried "our subset NonGLibPositional is Any where { $_ ~~ Positional && $_ ~~ (GLib::Array, GArray).any }" but this errors out with an LTA
[02:11:52] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 252 seconds)
[02:12:09] <Xliff> m: class A {}; class B {}; our subset NonGLibPositional is Any where { $_ ~~ A && $_ ~~ B }
[02:12:09] <camelia> rakudo-moar ca8dea277: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§No such method 'add_parent' for invocant of type‚ê§'Perl6::Metamodel::SubsetHOW'‚ê§at <tmp>:1‚ê§¬ª
[02:12:24] <Xliff> m: class A {}; class B {}; our subset NonGLibPositional is Mu where { $_ ~~ A && $_ ~~ B }
[02:12:24] <camelia> rakudo-moar ca8dea277: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§No such method 'add_parent' for invocant of type‚ê§'Perl6::Metamodel::SubsetHOW'‚ê§at <tmp>:1‚ê§¬ª
[02:12:24] <lucs> I've got something like this in my notes: subset Foo of Any where * ~~ Bar | Moo | Meow;
[02:12:42] <Xliff> lucs++ # Let me try that
[02:13:07] *** Joins: tejr (~tejr@user/tejr)
[02:13:08] <Xliff> Actually, that only catches the exclusive case. What about the inclusive?
[02:13:20] <lucs> s/|/&/ ?
[02:13:28] <Xliff> And the block form doesn't take kindly to *
[02:13:46] <Xliff> lucs: Two logicals, inclusive AND exclusive.
[02:13:58] <Xliff> Your conditional only does the inclusive
[02:14:27] <Xliff> Hmmm... maybe two subsets?
[02:14:51] <lucs> ... where { $_ ~~ A & B }  ?
[02:16:24] <lucs> ... where { $_ ~~ A & (B | C) }  ?
[02:16:28] *** Quits: antononcube (~antononcu@107-145-192-008.res.spectrum.com) (Quit: Connection closed)
[02:16:31] <Xliff> Pisslb.e
[02:16:47] <Xliff> * Possible.. (lol)
[02:16:51] <lucs> :)
[02:17:06] <Xliff> Nope. Using two subsets, as well as lucs' last two suggestions both result in the same error.
[02:17:13] <lucs> :(
[02:17:20] <lucs> Paging the experts!
[02:18:13] <guifa> isn't it "of Any" not "is Any"? 
[02:18:33] <guifa> m: class A {}; class B {}; our subset NonGLibPositional of Any where { $_ ~~ A && $_ ~~ B }
[02:18:33] <camelia> rakudo-moar ca8dea277: ( no output )
[02:19:19] <Xliff> guifa++
[02:19:32] <lucs> guifa++ Careful reading :)
[02:19:41] <guifa> you can also do 
[02:19:50] <guifa> m: class A {}; class B {}; our subset NonGLibPositional of Any where Positional & (A|B)
[02:19:50] <camelia> rakudo-moar ca8dea277: ( no output )
[02:20:02] * lucs takes more notes!
[02:21:27] <guifa> Also, "of Any" is redudant IIRC
[02:29:52] <codesections> bisect: my token paren { '(\' <tok> \')' }; my token tok { <paren>? foo }; say "(foo)foo" ~~ /<tok>/;
[02:29:52] <bisectable6> codesections, Will bisect the whole range automagically because no endpoints were provided, hang tight
[02:30:14] <bisectable6> codesections, ¬¶6c (54 commits): ¬´ÔΩ¢fooÔΩ£‚ê§ tok => ÔΩ¢fooÔΩ£‚ê§¬ª
[02:30:15] <bisectable6> codesections, Nothing to bisect!
[02:31:55] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[02:37:49] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[02:53:06] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Ping timeout: 264 seconds)
[03:02:33] *** Joins: melezhik (~melezhik@174.128.60.162)
[03:02:33] <melezhik> .
[03:02:42] <melezhik> releasable:
[03:02:43] <releasable6> melezhik, I cannot recognize this command. See wiki for some examples: https://github.com/Raku/whateverable/wiki/Releasable
[03:02:56] <melezhik>  releasable6: status
[03:03:32] <melezhik> .
[03:07:58] *** Quits: supersecant (~mareksh@83.216.136.233) (Ping timeout: 268 seconds)
[03:13:16] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[03:14:03] *** Quits: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com) (Quit: leaving)
[03:14:27] *** Joins: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com)
[03:28:12] <Geth> ¬¶ doc: coke self-assigned Create a helper module for testing https://github.com/Raku/doc/issues/1751
[03:50:22] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[03:55:13] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[04:02:52] <Geth> ¬¶ doc: a29ac07008 | Coke++ | 2 files
[04:02:53] <Geth> ¬¶ doc: Test lib/Test-Files
[04:02:53] <Geth> ¬¶ doc: 
[04:02:53] <Geth> ¬¶ doc: Part of #1751
[04:02:53] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/a29ac07008
[04:03:34] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[04:04:06] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Ping timeout: 268 seconds)
[04:06:28] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[04:31:19] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[04:32:49] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[04:33:40] *** Joins: jess (~jess@libera/staff/jess)
[04:33:45] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:34:41] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Client Quit)
[05:34:41] *** Quits: nativecallable6 (~nat-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[05:34:41] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: releasable6 (~rel-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: tellable6 (~tel-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: coverable6 (~cov-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[05:34:41] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:41] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[05:34:42] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[05:34:42] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[05:35:16] *** Joins: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu)
[05:35:18] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[05:35:23] *** Joins: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu)
[05:35:43] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[05:35:49] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[05:35:51] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[05:35:53] *** Joins: releasable6 (~rel-able@ns306169.ip-94-23-219.eu)
[05:35:54] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[05:36:04] *** Joins: nativecallable6 (~nat-able@ns306169.ip-94-23-219.eu)
[05:36:13] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[05:36:13] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[05:36:26] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[05:36:41] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[05:37:09] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[05:37:16] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[05:37:28] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[05:37:37] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[05:37:39] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[05:37:44] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[06:37:45] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[06:37:45] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:37:45] *** Quits: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:37:45] *** Quits: nativecallable6 (~nat-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: quotable6 (~quo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:37:45] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:37:45] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:37:45] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:37:45] *** Quits: releasable6 (~rel-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[06:37:46] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:37:46] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:37:46] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:38:10] *** Joins: releasable6 (~rel-able@ns306169.ip-94-23-219.eu)
[06:38:19] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[06:38:35] *** Joins: tellable6 (~tel-able@ns306169.ip-94-23-219.eu)
[06:38:37] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:38:38] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:38:42] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[06:38:56] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:39:00] *** Joins: coverable6 (~cov-able@ns306169.ip-94-23-219.eu)
[06:39:09] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[06:39:20] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[06:39:23] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[06:39:47] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[06:39:52] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[06:39:59] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[06:40:06] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:40:10] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[06:40:22] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:40:27] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[06:40:40] *** Joins: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu)
[07:29:40] *** Quits: melezhik (~melezhik@174.128.60.162) (Quit: Connection closed)
[07:52:17] <xinming> releasable6: status
[07:52:18] <releasable6> xinming, Next release in ‚âà15 hours. There are no known blockers. 1 out of 37 commits logged
[07:52:19] <releasable6> xinming, Details: https://gist.github.com/1a717b1779cb3d0e1b3c2fb36fe781b2
[08:29:40] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:29:40] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:31:03] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[08:32:18] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[09:32:19] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:32:19] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:32:19] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:32:19] *** Quits: tellable6 (~tel-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:32:19] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:32:19] *** Quits: coverable6 (~cov-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:32:19] *** Quits: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:32:19] *** Quits: releasable6 (~rel-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:32:19] *** Quits: quotable6 (~quo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:32:19] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:32:19] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:32:19] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:32:19] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:32:19] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:32:19] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:32:20] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:32:20] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:32:20] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:32:20] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:32:43] *** Joins: greppable6 (~gre-able@ns306169.ip-94-23-219.eu)
[09:32:44] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:32:48] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[09:33:20] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:33:20] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:33:50] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:33:58] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:34:03] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:34:15] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:34:15] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[09:34:33] *** Joins: benchable6 (~ben-able@ns306169.ip-94-23-219.eu)
[09:34:42] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[09:34:46] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[09:34:46] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[09:34:54] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[09:34:56] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:35:03] *** Joins: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu)
[09:35:14] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[09:35:25] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[09:44:51] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[09:48:11] <guifa>  codesections: lol @ reddit post
[09:49:33] <codesections> :D I've been listening to https://www.arraycast.com/ and was feeling inspired 
[09:49:46] <codesections> Why should APL have all the fun?
[09:50:17] <moon-child> lol
[09:50:36] <moon-child> once we get user-defined metaoperators, it'll be possible to implement the entirety of apl syntax in raku
[09:51:50] <codesections> well, sort of.  You'd need to change the language semantics quite a bit to _really_ support the full syntax.
[09:52:25] <codesections> (And are user-defined metaoperators on the roadmap/in the synopses?)
[09:52:55] <moon-child> well, you wouldn't get stranding, but you can just define new multis for the existing +-√ó√∑
[09:53:35] <moon-child> I guess no trains either
[09:53:46] <moon-child> my understanding is that user-defined metaoperators are desired, but no one has done the work to make them happen; and that rakuast is perhaps a bridge in that direction
[09:56:58] <codesections> Unless your multis totally overide the existing +-√ó, etc, you wouldn't get pure right-to-left order of operations either
[09:57:16] <moon-child> good point
[09:58:19] <codesections> and I don't think there's any way to make our functions infix-by-default (though we do have the [&fn] form)
[10:01:32] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[10:03:31] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de)
[10:09:41] * moon-child thinks about making an apl implementation in raku
[10:10:23] <moon-child> I don't think you could ever make it fast, even with nqp.  But you could probably get a quite nice, clear expression of semantics
[10:12:45] <guifa> I think I'm the only one who's theorized about custom metaops
[10:12:52] <guifa> but I also don't know what said metaop would do
[10:14:04] <guifa> like we have them for crossing, zipping, reducing (two ways!), reversing, assigning, inverting, and mapping. What else is there really?
[10:16:20] <moon-child> apl operators: key, commute, at, atop, beside/bind, over, power, rank, stencil
[10:16:58] <moon-child> all the metaops are just higher-order functions which are implemented elsewhere, so you could say: why bother with metaoperators at all?
[10:17:09] <moon-child> or, conversely: every higher-order function could be a metaoperator
[10:17:55] <codesections> moon-child: I was thinking about that list too, but I think many of those could be regular Raku operators (rather than meta, I mean)
[10:18:02] <codesections> e.g., https://stackoverflow.com/questions/67346926/implementation-of-a-function-object-power-operator-in-raku
[10:18:03] <guifa> I guess I'd need to look up how those modify an operator
[10:20:51] <guifa> Um, wow.  NQP lists are crazy faster than Raku arrays
[10:21:01] <moon-child> codesections: yeah, but then you'd only be able to pass functions to them.  (Or &[stuff].)  I mean, you can do everything with functions; that's numpy
[10:21:23] <moon-child> guifa: buf is also fast if you're working with packed ints
[10:22:20] <guifa> I actually tried doing some work with buf once but I don't remember it feeling too terribly much faster.  But maybe at the NQP level it will get similar speed bumps
[10:22:21] <guifa> compare
[10:22:37] <guifa> m: my @a; my $b = DateTime.now; for ^1000000 { push @a,$b }; say @a[999999]; say now - BEGIN now;
[10:22:37] <camelia> rakudo-moar ca8dea277: OUTPUT: ¬´2021-06-19T07:52:37.717169+02:00‚ê§0.197872629‚ê§¬ª
[10:23:20] <guifa> whoa, did something get changed?  TIO has that taking a solid 10 seconds
[10:23:34] <guifa> m: use nqp; my $a := nqp::list(); my $b = DateTime.now; for ^10000000 { nqp::push($a,$b) }; say nqp::atpos($a,9999999); say now - BEGIN now;
[10:23:35] <camelia> rakudo-moar ca8dea277: OUTPUT: ¬´2021-06-19T07:53:34.796108+02:00‚ê§0.187050531‚ê§¬ª
[10:24:09] * guifa recalls‚Ä¶¬†was it lizmat? doing something with speeding up arrays.  I guess that's the effect of it
[10:24:12] <codesections> moon-child: You mean "only functions" as opposed to "functions & operators"?  You'd be able to pass Str, List, etc just fine to the non-meta versions, right?
[10:25:03] <moon-child> yeah
[10:28:19] <moon-child> eh...this is strange.  http://ix.io/3qpx  the raku version takes 4.1s; the nqp version 1.5s; and the buf version 2.5s
[10:31:20] <guifa> try mixing up the order: when I've done perf tests like that, the order can be significant (first one is almost always the slowest, for instance)
[10:32:42] *** Joins: kylese (~kylese@p54835498.dip0.t-ipconnect.de)
[10:32:53] <moon-child> reversed them; the specific numbers change, but the order stays the same
[10:33:05] <moon-child> (actually buf gets faster)
[10:33:10] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[10:35:11] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[11:05:55] <moon-child> why is there no write-num32 for buf32, nor write-num64 for buf64?
[11:06:29] <moon-child> I guess ieee has undefined endianness, completely aside from byte order
[11:35:12] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[11:35:12] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[11:36:11] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[11:36:43] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[11:49:03] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[12:49:04] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[12:49:04] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[12:49:04] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[12:49:04] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[12:49:44] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[12:49:50] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[12:50:13] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[12:50:14] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[12:50:22] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[12:50:33] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[12:50:51] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[12:50:58] *** Joins: tellable6 (~tel-able@ns306169.ip-94-23-219.eu)
[12:51:01] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[12:51:11] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[12:51:32] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[12:51:32] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[12:51:45] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[12:51:47] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[12:51:48] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[12:51:52] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[12:52:04] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[12:52:18] *** Joins: releasable6 (~rel-able@ns306169.ip-94-23-219.eu)
[12:52:18] *** Joins: squashable6 (~squ-able@ns306169.ip-94-23-219.eu)
[13:16:50] *** Joins: MoC (~moc@user/moc)
[13:18:04] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:20:42] *** Joins: LizBot_ (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:21:02] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[13:21:45] *** Joins: RakuIRCLogger_ (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:22:54] *** Quits: LizBot (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 268 seconds)
[13:22:56] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 272 seconds)
[13:23:03] *** Quits: RakuIRCLogger_ (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[13:23:10] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:50:51] *** Quits: Manifest0 (~Manifest0@1-nat1-1.centrio.cz) (*.net *.split)
[13:51:13] *** Joins: Manifest0 (~Manifest0@1-nat1-1.centrio.cz)
[13:55:48] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:00:20] <Manifest0> Morning.
[14:00:26] <Manifest0> How can i find my local ip address and if i'm under NAT using raku?
[14:51:06] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~‚ô™)
[14:54:14] <El_Che> parse the output of the OS netwerktool like ipconfig or parse /proc and then check if the ip is of a private range?
[14:54:37] <El_Che> NAT is something done on the router machine, not on the machine itsel
[14:54:38] <El_Che> f
[14:56:36] *** Joins: supersecant (~superseca@83.216.136.233)
[15:03:23] *** Joins: slu (uid501941@id-501941.brockwell.irccloud.com)
[15:06:03] *** Quits: supersecant (~superseca@83.216.136.233) (Quit: Connection closed)
[15:07:40] *** Joins: supersecant (~superseca@83.216.136.233)
[15:08:12] *** Quits: supersecant (~superseca@83.216.136.233) (Client Quit)
[15:19:22] *** Joins: neula (~user@p200300e29719da001e6f65fffed3eb2b.dip0.t-ipconnect.de)
[15:38:04] *** Quits: neula (~user@p200300e29719da001e6f65fffed3eb2b.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:46:14] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[15:48:51] *** Quits: guifa (~guifa@host-68-169-135-99.MIDOLT1.epbfi.com) (Ping timeout: 272 seconds)
[15:52:16] *** Joins: guifa (~guifa@host-68-169-135-99.MIDOLT1.epbfi.com)
[15:54:07] *** Quits: kylese (~kylese@p54835498.dip0.t-ipconnect.de) (Quit: Leaving)
[16:04:54] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de)
[16:32:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:38] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[16:49:13] *** Joins: rassoc (~rassoc@139.174.228.245)
[16:51:45] *** Joins: yewscion_ (~yewscion@2601:547:a00:7720::c63e)
[16:52:53] <rassoc> Oi! newbie question: how do i coerce and assign a bunch of ints of ints to this type upon initialization? `my Array[Array[Complex]] @a = ...`. Nothing works, can't figure out the syntax.
[17:07:05] <Geth> ¬¶ doc: michaelruigrok++ created pull request #3903: clarify sentence, fix typo
[17:07:05] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3903
[17:09:59] <CIAvash> m: my Array[Complex(Int)]() @a = [[1, 2, 3], [4, 5, 6]]; dd @a;
[17:10:00] <camelia> rakudo-moar 57070f059: OUTPUT: ¬´Array[Array[Complex(Int)](Any)] @a = Array[Array[Complex(Int)](Any)].new(Array[Complex(Int)].new(<1+0i>, <2+0i>, <3+0i>), Array[Complex(Int)].new(<4+0i>, <5+0i>, <6+0i>))‚ê§¬ª
[17:10:31] <CIAvash> rassoc: is this what you want? ‚Üë
[17:13:35] <rassoc> If i try to do that locally, i'm getting hit with: "Coercion 'Array[Complex(Int)](Any)' is insufficiently type-like to qualify a variable. Did you mean 'class'?"
[17:13:48] <rassoc> Guess i'll have to wait for a compiler update then. thanks
[17:17:40] <lizmat> rassoc: yeah, that looks like you're before the coercion protocol changes
[17:19:01] *** Joins: cognominal (~cognomina@lfbn-idf1-1-1374-85.w90-79.abo.wanadoo.fr)
[17:22:15] <rassoc> seem like it. still on 2020.07. will prolly install a more recent version by hand
[17:30:19] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[17:30:50] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[17:30:52] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[17:31:09] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[17:34:39] <lizmat> rassoc: yup, that's too old for doing that  :-)
[17:35:14] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[17:36:20] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de)
[17:58:30] *** Quits: yewscion_ (~yewscion@2601:547:a00:7720::c63e) (Ping timeout: 264 seconds)
[18:28:20] <codesections> m: use variables :U; my $a = 42;
[18:28:20] <camelia> rakudo-moar 57070f059: OUTPUT: ¬´Type check failed in assignment to $a; expected Any:U but got Int (42)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:29:07] *** Joins: njm (~njm@2600:6c46:6000:1142:3540:381b:4876:bcaa)
[18:29:35] <codesections> ha, that would be awful, and I'm kind of surprised the pragma lets you create an _un_defined constraint
[18:30:03] *** Quits: njm (~njm@2600:6c46:6000:1142:3540:381b:4876:bcaa) (Client Quit)
[18:40:27] *** Joins: monkey_ (~user@190.104.116.134)
[18:56:58] <Geth> ¬¶ doc: 24c0b55cdd | Coke++ | 3 files
[18:56:58] <Geth> ¬¶ doc: add description to modules
[18:56:59] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/24c0b55cdd
[18:56:59] <Geth> ¬¶ doc: c236309a1e | Coke++ | META6.json
[18:56:59] <Geth> ¬¶ doc: remove provides list
[18:56:59] <Geth> ¬¶ doc: 
[18:56:59] <Geth> ¬¶ doc: These libs are only intended for internal use for testing & utils, and should
[18:57:00] <Geth> ¬¶ doc: not be installed.
[18:57:02] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/c236309a1e
[18:57:04] <Geth> ¬¶ doc: f4e8731098 | Coke++ | 6 files
[18:57:06] <Geth> ¬¶ doc: Use preferred rakumod extension.
[18:57:08] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f4e8731098
[19:12:13] <[Coke]> does "raku --doc" theoretically do more work than "raku -c --doc" ?
[19:12:38] <[Coke]> (if nothing else, it outputs the POD, wondering if it does anything else extra)
[19:21:03] *** Joins: Altai-man_ (~koto@94.142.239.45)
[19:22:30] <codesections> [Coke]: well, there's a DOC INIT phaser -- if there's any code in it, that'd be run with --doc but not -c --doc.  https://docs.raku.org/language/phasers#DOC
[19:22:51] <codesections> not sure I've seen one of those in the wild, though
[19:32:58] <masak> back in the day, there was a really interesting discussion about how to make Pod processing not-fully-Turing-complete. not sure if that ever led to something conclusive, though
[19:33:08] <masak> (hi, #r)
[19:49:59] <[Coke]> apparently it was slow enough over 400+ instances that adding the -c got the test runtime down to 3m from 5m+
[19:50:31] <[Coke]> er, to 4m.
[19:50:36] <[Coke]> so, 20% savings
[19:50:54] <Geth> ¬¶ doc: d2fd3ddb96 | Coke++ | t/02-pod-valid.t
[19:50:54] <Geth> ¬¶ doc: add more diagnostic output
[19:50:55] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/d2fd3ddb96
[19:50:55] <Geth> ¬¶ doc: 10f5588d8a | Coke++ | t/02-pod-valid.t
[19:50:55] <Geth> ¬¶ doc: Do less work
[19:50:55] <Geth> ¬¶ doc: 
[19:50:55] <Geth> ¬¶ doc: With this change, test runs in 4m instead of 5m locally, still catches pod errors
[19:50:56] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/10f5588d8a
[20:04:29] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[20:07:36] *** Joins: holyghost (~goon@109.136.39.83)
[20:08:51] <Geth> ¬¶ doc: 0a87972362 | Coke++ | META6.json
[20:08:51] <Geth> ¬¶ doc: Add prereq for 'make bigpage'
[20:08:51] <Geth> ¬¶ doc: 
[20:08:51] <Geth> ¬¶ doc: Without this, this make target fails immediately.
[20:08:51] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0a87972362
[20:19:12] <gfldex> weekly: Discord was joined by an eval bot prototype ready for testing.
[20:19:13] <notable6> gfldex, Noted! (weekly)
[20:20:45] <[Coke]> is there a way in META6.json to say "This isn't meant to be installed" other than having an empty "provides" ?
[20:24:01] <[Coke]> (for example raku-doc is not currently installable. Trying to install it will basically just get you the pre-reqs needed for the build - but we still want the META6.json to list those pre-reqs so we can work on it)
[20:24:42] <codesections> m: say &[-]; # there's not a similar shorthand for prefix/other operators, right?
[20:24:42] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´&infix:<->‚ê§¬ª
[20:26:03] <ugexe> give instructions to run `zef install Foo --deps-only`. Having a META6.json implies its meant to be installed, so there is no such way to say otherwise
[20:26:59] <[Coke]> So how does one manage their requirements if they don't want to be installed?
[20:27:03] <[Coke]> by hand?
[20:27:20] <ugexe> does `zef install Foo --deps-only` not work?
[20:27:53] <[Coke]> I can do that, yes. I'm concerned about someone else not working on the project. I suppose the answer is, "remove it from the modules list"
[20:28:35] <[Coke]> and then there's no confusion. (raku-docs was on the modules list from ages ago because it did install things. then the install broke for the docs and was left for the bin. and then the bin was removed.)
[20:28:39] <ugexe> ah yeah, if its not intended to be installed there is little reason for it to be in the module list 
[20:28:48] <[Coke]> should just remove it from the ecosystem, at this point.
[20:28:52] <[Coke]> ugexe++
[20:30:37] <[Coke]> added a comment to docs#3819
[20:31:21] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[20:33:47] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[20:38:05] <Geth> ¬¶ doc: 198ab0c230 | Coke++ | util/missing-methods.p6
[20:38:05] <Geth> ¬¶ doc: Remove broken script
[20:38:05] <Geth> ¬¶ doc: 
[20:38:06] <Geth> ¬¶ doc: Needed p6doc which is no longer part of this repo.
[20:38:06] <Geth> ¬¶ doc: 
[20:38:06] <Geth> ¬¶ doc: Superseded by xt/check-signatures.t
[20:38:06] <Geth> ¬¶ doc: 
[20:38:07] <Geth> ¬¶ doc: Resolves #3812
[20:38:09] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/198ab0c230
[20:38:18] *** Quits: Altai-man_ (~koto@94.142.239.45) (Quit: Leaving)
[20:38:58] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[20:41:24] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[20:47:52] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[20:49:57] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Client Quit)
[20:53:10] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[20:53:29] *** Quits: Altai-man (~sena_kun_@94.142.239.45) (Quit: Leaving)
[20:56:09] *** Joins: sena_kun (~sena_kun_@94.142.239.45)
[20:56:48] <codesections> m: say map {[√ó] $_}, ^5; # works
[20:56:48] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´(0 1 2 3 4)‚ê§¬ª
[20:57:04] <codesections> m: say map [√ó] *, ^5; # doesn't work
[20:57:04] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´Cannot resolve caller Numeric(Whatever:D: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:57:52] <[Coke]> yup, I wouldn't expect that to work.
[20:57:54] <codesections> is there a reason why ^^^^ doesn't produce a WhateverCode?  That seems like term position to me
[20:58:02] <codesections> why's that?
[20:59:22] <[Coke]> if you want a grammar-based explanation, I can't help there. :)
[20:59:25] <codesections> m: dd + *
[20:59:25] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´WhateverCode.new‚ê§¬ª
[21:00:05] <[Coke]> m: [√ó] *, ^5
[21:00:05] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´Potential difficulties:‚ê§    Useless use of [√ó] in sink context‚ê§    at <tmp>:1‚ê§    ------> 3<BOL>7‚èè5[√ó] *, ^5‚ê§Cannot resolve caller Numeric(Whatever:D: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp>‚Ä¶¬ª
[21:00:11] <[Coke]> m: say [√ó] *, ^5
[21:00:11] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´Cannot resolve caller Numeric(Whatever:D: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[21:00:19] <[Coke]> I think the map is a red herring there.
[21:00:49] <Geth> ¬¶ doc: 0f80469f59 | Coke++ | util/xt-recent.sh
[21:00:49] <Geth> ¬¶ doc: Add .t files & update overview
[21:00:50] <Geth> ¬¶ doc: 
[21:00:50] <Geth> ¬¶ doc: Part of #3906
[21:00:50] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0f80469f59
[21:01:09] <codesections> I thought a prefix op and a * created a WhateverCode?  And that [√ó] is a prefix op (or produces one)
[21:01:18] <codesections> ok, set the map aside, then
[21:01:28] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[21:01:30] <codesections> m: my &f = [√ó] *;
[21:01:30] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´Cannot resolve caller Numeric(Whatever:D: ); none of these signatures match:‚ê§    (Mu:U \v: *%_)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[21:01:50] <codesections> I'd expect that to be the same as
[21:02:07] <codesections> m: my &f = {[√ó] $_}
[21:02:07] <camelia> rakudo-moar 99e4cf8df: ( no output )
[21:04:04] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[21:07:22] <masak> my &f = - *;
[21:07:32] <masak> m: my &f = - *;
[21:07:32] <camelia> rakudo-moar 99e4cf8df: ( no output )
[21:08:11] <masak> codesections: well, it _parses_. yours, I mean.
[21:08:29] <masak> it just doesn't seem to behave like you want. it wants to numify the `*`
[21:10:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[21:39:34] <guifa> codesections: what's going on is the [‚Ä¶]¬†metaop expects a list after it.  So [+] * is parsed as op=[+], arg=[list(*)]
[21:40:25] <guifa> And then it's just a plain old whatever
[21:42:32] *** Quits: lgtaube (~lgt@45.86.203.96) (Ping timeout: 252 seconds)
[21:58:30] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 252 seconds)
[22:00:00] *** Quits: holyghost (~goon@109.136.39.83) (Ping timeout: 265 seconds)
[22:00:56] <codesections> guifa: Thanks, that's helpful.  But doesn't | expect a list too?  This works:
[22:01:11] <codesections> m: my &f = |*; dd f (1, 2)
[22:01:11] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´slip(1, 2)‚ê§¬ª
[22:02:21] <sena_kun> m: EVAL("1", :lang<Perl5>)
[22:02:22] <camelia> rakudo-moar 99e4cf8df: OUTPUT: ¬´Could not find Inline::Perl5 in:‚ê§    inst#/home/camelia/.raku‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/site‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/vendor‚ê§    inst#/home/camelia/rakudo-m-inst-1/share/perl6/core‚ê§    ap#‚Ä¶¬ª
[22:03:14] <sena_kun> can anyone with not so recent rakudo run https://github.com/Raku/roast/blob/master/S01-perl-5-integration/roundtrip.t please?
[22:03:25] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[22:11:00] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[22:18:41] <rassoc> sure! getting this on 2020.07:
[22:18:44] <rassoc> not ok 4 - 
[22:18:46] <rassoc> # Failed test at roundtrip.t line 37
[22:18:47] <rassoc> # expected: $("foo", "hate")
[22:18:49] <rassoc> #      got: $("ARRAY(0x5621674d0310)",)
[22:20:32] *** Joins: Altai-man (~koto@94.142.239.45)
[22:28:09] *** Quits: Altai-man (~koto@94.142.239.45) (Quit: Leaving)
[22:32:59] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[22:34:51] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[22:41:20] <sena_kun> rassoc, thank you!
[22:49:36] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-093.092.218.pools.vodafone-ip.de)
[23:07:14] *** Joins: Altai-man (~koto@94.142.239.45)
[23:10:33] *** Quits: Altai-man (~koto@94.142.239.45) (Client Quit)
[23:20:22] *** Joins: m6locks (thebbo@2001:708:30:2160::4)
[23:23:09] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[23:26:35] <guifa> No, see:
[23:27:08] <guifa> my @a = 1,2,3; my @b= 4, 5, 6; say |@a, @b
[23:27:08] <evalable6> guifa, rakudo-moar 99e4cf8df: OUTPUT: ¬´123[4 5 6]‚ê§¬ª
[23:27:23] <guifa> codesections: ^^ | is a prefix operator, just takes a single value
[23:27:39] <guifa> or maybe better put, it's a higher precedence than the list up
[23:27:47] <guifa> [‚Ä¶]¬†is a lower precedence than list op
[23:29:34] <codesections> aha!  That's the key I was missing. ty guifa++
[23:36:18] *** Quits: b2gills (~brad@64.191.7.0) (Ping timeout: 264 seconds)
[23:36:29] *** Quits: rassoc (~rassoc@139.174.228.245) (Quit: Quit)
[23:38:04] <guifa> codesections: any thoughts on my Datish.fmt module/code?  I need to finish the test files that would go into roast and try a few more ways to break it, but otherwise, if the RSC approved on it, it'd be basically ready to go.
[23:47:20] *** Joins: holyghost (~goon@109.136.39.83)
