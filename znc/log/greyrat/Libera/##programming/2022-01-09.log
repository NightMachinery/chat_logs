[00:00:55] <GeDaMo> [itchyjunk]: so the scanl version does [0, 0+1, 0+1+2, ...
[00:01:32] <GeDaMo> And the scanr version does [ ... 4+5+0, 5+0, 0]
[00:01:45] <[itchyjunk]> ah
[00:01:50] <[itchyjunk]> that explains a few things..
[00:02:01] <[itchyjunk]> so there are a lot of this left and right associative functions huh?
[00:02:13] *** Quits: trace987 (~trace@ip5f5ad0ee.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[00:02:13] <[itchyjunk]> makes life harder imho ;_;
[00:02:24] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[00:02:25] <GeDaMo> Yeah, I often get confused about which one to use :P
[00:02:38] <[itchyjunk]> boo
[00:02:50] <GeDaMo> I think it's because of lazy evaluation
[00:02:54] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Quit: boof)
[00:03:27] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[00:03:41] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:03:42] <bjs> Well no, like the example earlier with subtraction
[00:03:58] *** Quits: nocture (~textual@c-xd4ed87fa.cust.hiper.dk) (Quit: nocture)
[00:04:06] <bjs> some operations are left-associative and some are right-associative and so the l/r versions of the functions give different answers regardless of strictness
[00:04:10] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[00:04:51] <bjs> (and sometimes you want one or the other)
[00:05:24] <epony> you mean where is the result of the operation?
[00:05:46] <epony> one getting used while the other ends up changed
[00:05:59] *** Joins: llh (~llh@user/llh)
[00:06:21] <bjs> epony: I'm not sure what the question is or who you are asking it to
[00:06:34] <epony> l/r-assoc
[00:06:47] <bjs> epony: what about associativity?
[00:06:55] <epony> y
[00:06:58] <epony> ;-)
[00:07:08] <bjs> epony: no that was a question "what" are you asking about associativity?
[00:07:56] <epony> https://en.wikipedia.org/wiki/Operator_associativity#Right-associativity_of_assignment_operators
[00:07:57] <bayaz> Title: Operator associativity - Wikipedia 
[00:08:12] <bjs> epony: are you asking a question or trying to make a statement?  it's very unclear
[00:11:56] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[00:12:19] *** Joins: Leonard (~Administr@114.55.127.80)
[00:12:31] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[00:12:36] <ProfSimm> In human speech we don't need to prefix every word full context of its use or link to a central registry (dictionary) because humans orient themselves from implied context. I was thinking can computers do that? We do it when we implement "shadowing" of variables in inner scopes. The implied context is: the var closer to you shadows the other ones
[00:13:04] <ProfSimm> But that's the only situation where I think we can implement this
[00:13:17] <ProfSimm> Well there's also 'import'
[00:13:28] <ProfSimm> But that's not implicit context, it's more of an explicit context
[00:13:29] <GeDaMo> Unix search path is ordered
[00:13:38] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[00:13:43] <ProfSimm> Ah yeah ordered search path
[00:13:45] <Amadiro> ProfSimm, there are AI systems that support "solving" queries like "take the red sphere from behind the green cube"
[00:13:47] *** Quits: xff0x (~xff0x@2001:1a81:5298:9f00:c8df:ae8c:ee9b:1cca) (Ping timeout: 268 seconds)
[00:13:48] <ProfSimm> Good example I guess
[00:13:51] <GeDaMo> As is Forth wordlist search
[00:13:59] <epony> most things are ordered LTR
[00:14:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:14:16] <epony> including parsers
[00:14:19] *** Joins: xff0x (~xff0x@2001:1a81:5298:9f00:374f:4390:4780:3d6)
[00:14:56] <juliaEnv> when designing and implementing a program that is no longer a batch data processing program, but it is now a real-time data processing program, is it the same as designing and implementing an event-driven program? Or is it any different?
[00:15:46] <juliaEnv> i.e. a batch processing program takes an array of items and does something once an hour. A real-time processing program takes one item from a socket from the Internet and does something. If no item is coming, it waits and does nothing.
[00:15:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[00:15:55] <Amadiro> juliaEnv, a batch data processing program can also be thought of as an event-driven program, that's just a matter of perspective. But there's certain things you need to do differently depending on which one you do, and you might need to re-think notions you have of repeatability and recomputability
[00:15:58] <juliaEnv> socket read blocks...
[00:16:36] <Amadiro> spark and flink might be interesting projects to compare
[00:16:49] <juliaEnv> a batch data processing program isn't event-driven because there is an array of items once an hour. It is not reacting to events when they happen, but once an hour (for example)
[00:17:31] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[00:17:41] <Amadiro> an event driven program is really no different, it's just that it does the same thing faster (ie more frequently than once an hour)
[00:17:45] <[itchyjunk]> I have decided what's next!
[00:17:48] <Amadiro> there isn't a real ontological difference
[00:17:54] <[itchyjunk]> i'll have to learn this algebriac datatype nonesense next
[00:18:05] <GeDaMo> I thought you already learned that
[00:18:29] <[itchyjunk]> hmmm
[00:18:37] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:18:41] *** Joins: inomoz (~inomoz@176.59.115.245)
[00:18:56] <[itchyjunk]> whats an esay example of it in haskell?
[00:19:12] <juliaEnv> an event driven program responds immediately when an event happens. A batch program is executed for example twice a day and it responds to a batch of events, but not when they happen, it responds later.
[00:19:15] <GeDaMo> data List a = Cons a (List a) | Nil
[00:19:22] <Amadiro> [itchyjunk], a function that divides two numbers
[00:19:22] <[itchyjunk]> oh..
[00:19:23] <[itchyjunk]> hmmmm
[00:19:35] <swp> Who can recommend a good book for Network Automation? I'm already familiar with Python and Ansible, so it'd be great if the book uses Python solutions like Paramiko, Netmiko, NAPALM, etc. to implement automation.
[00:19:43] <[itchyjunk]> oh because it's defining things on variables rather than values or somesuch?
[00:20:09] <Amadiro> juliaEnv, sure, but in reality the event driven program is also just executing a loop that runs a syscall to poll a socket (epoll, kqueue, select, ...) every couple milliseconds, and when there's sockets which have data available, it fetches the data, and processes it all at once (as a micro-batch)
[00:20:14] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[00:20:14] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[00:20:14] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[00:20:28] <[itchyjunk]> GeDaMo, this "GADT" thing seems cool :s have you dabbled with that ?
[00:20:33] *** Joins: tracey (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:20:34] <Amadiro> juliaEnv, practically that loop is sometimes in the kernel space, but more often with contemporary implementations in the user-space
[00:20:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[00:20:47] <bjs> [itchyjunk]: I think you should keep away from GADTs for a bit
[00:20:54] <bjs> and try learn the basic stuff first
[00:20:58] <juliaEnv> in event driven programming, we have Event and Event Listener. Maybe, we also have Event Generator somewhere. The program keeps running in a loop, it doesn't terminate until you terminate it. It keeps waiting for an event. When an event happens, the appropriate listener immediately reacts to it.
[00:21:02] <GeDaMo> I wrote a simple implementation of ADT in Forth
[00:21:03] <bjs> [itchyjunk]: (basically, if you need an extension you don't want to learn it yet)
[00:21:10] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[00:21:21] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[00:21:42] <GeDaMo> Hmmm ... I don't of GADT
[00:21:53] <[itchyjunk]> oh
[00:22:03] <juliaEnv> In a batch program, the program is executed for example once a day. It processes an array of items passed to it and terminates.
[00:22:03] <[itchyjunk]> whats another basic thing to learn?
[00:22:12] <bjs> [itchyjunk]: but yes `data` makes datatypes (that is pretty obvious) and we say they're algebraic, they look like sums and products and you can pattern match against them
[00:22:23] <bjs> [itchyjunk]: you can just ignore the "algebraic" part of the name, it just means "datatype" really
[00:22:28] <juliaEnv> Amadiro I mean a batch program is not driven by the occurence of events. 
[00:22:34] <[itchyjunk]> hmm
[00:22:37] <bjs> sometimes people like big words with some nice history/meaning even when it's kind of redundant
[00:22:41] <GeDaMo> List comprehensions?
[00:23:26] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:23:28] *** Quits: w0ng (~w0ng@185.218.127.55) (Ping timeout: 260 seconds)
[00:23:40] <[itchyjunk]> ah list comprehension looks interesting
[00:23:43] <GeDaMo> More list functions like filter, take, dropWhile etc. maybe?
[00:23:48] <[itchyjunk]> that might be a good place i think
[00:23:55] <Amadiro> juliaEnv, then how does it start executing?
[00:24:23] <GeDaMo> [itchyjunk]: do you know about Hoogle?
[00:24:31] <[itchyjunk]> no never heard of her
[00:24:53] <GeDaMo> You can enter a type and it will show functions which match https://hoogle.haskell.org/
[00:24:53] <bayaz> Title: Hoogle 
[00:24:55] <bjs> [itchyjunk]: https://www.haskell.org/hoogle/  you can search for Haskell functions and stuff
[00:24:56] <bayaz> Title: Hoogle 
[00:24:57] <[itchyjunk]> oh i could create a list of squars with [x^2 | x <- [0..n]] and some how get n from function parameter?
[00:25:16] <[itchyjunk]> oh fancy
[00:25:24] <bjs> [itchyjunk]: with hoogle you can search for functions by name, or by type signature
[00:25:40] <ProfSimm> GeDaMo: I'm thinking how can I have multiple interfaces on a single object in a way they don't clash, but also without having to explicitly spell out each time which interface I wanna use
[00:25:59] <GeDaMo> Yeah, context
[00:26:06] <ProfSimm> GeDaMo: C# gets away by having typed variables which hint the compiler what interface is wanted
[00:26:17] <ProfSimm> GeDaMo: doesn't work when we have inferred or dynamic typed tho
[00:26:22] <[itchyjunk]> Huh, there are function with type Bool -> Int, interesting
[00:26:41] <juliaEnv> Amadiro a batch processing program itself isn't running in the background and isn't waiting for an event, so a user must execute it (or add it into some job scheduler like cron)
[00:27:22] <ProfSimm> GeDaMo: is it inevitable we build a hierarchy of things to refer to at some point (interface names or some such)
[00:27:31] <juliaEnv> Amadiro does real-time always mean event-driven?
[00:27:32] <ProfSimm> GeDaMo: surely we can avoid the hierarchy some way I don't know
[00:27:49] <GeDaMo> You set a search path to provide context
[00:28:40] *** Quits: kilitary (~Username@188.242.187.4) (Read error: Connection reset by peer)
[00:28:41] <ProfSimm> GeDaMo: this is same as a list of import statements on top of a source code. But it's very verbose
[00:29:09] <ProfSimm> GeDaMo: we can't have global imports too, I think, it'd make code very fragile
[00:29:40] *** Joins: joe_colben (~joe____co@185.190.112.211)
[00:29:42] <ProfSimm> You change a global import and half the things break. 
[00:29:59] <bjs> [itchyjunk]: I recommend doing programming exercises in Haskell, you can do ones specially defined for Haskell (to learn the tools) but also try do some of the ones you did for Java/Python/C/whatever but try them again in Haskell
[00:30:35] *** Joins: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4)
[00:30:39] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[00:31:39] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[00:31:42] *** Joins: kilitary (~Username@188.242.187.4)
[00:31:49] <bjs> [itchyjunk]: while there's *lots* to learn in Haskell (from typeclasses, how it manages IO, its type system, laziness, functional data structures and algorithms, the Haskell standard libraries and standard typeclasses etc) there's a lot to be said for just doing the same old problem solving but with a new approach
[00:32:28] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[00:32:35] *** Quits: kilitary (~Username@188.242.187.4) (Read error: Connection reset by peer)
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:02] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:34:19] *** Joins: kilitary (~Username@188.242.187.4)
[00:34:22] <[itchyjunk]> hmm yes i was doing exercises for map, zip and then fold
[00:34:34] <[itchyjunk]> i guess i'll some more fold then go to list comprehension
[00:34:38] <GeDaMo> [itchyjunk]: let fibs = 0 : 1 : zipWith (+) fibs (tail fibs) in take 20 fibs
[00:34:50] <bjs> [itchyjunk]: but there's also language-agnostic things like just leetcode and advent of code and project euler and things that you presumably have done before
[00:34:53] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (Remote host closed the connection)
[00:35:15] <bjs> [itchyjunk]: it might be useful to go back and think about some of those problems but using the new mindset.
[00:36:05] *** Joins: BurumaSerafuku (~sjw@69.206.48.64)
[00:36:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:36:29] <[itchyjunk]> hmm that fibs fuction wtf
[00:36:42] <[itchyjunk]> i think i kinda get it
[00:36:53] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[00:37:17] <Amadiro> juliaEnv, very well, but both a cronjob or receiving input from the user is ultimately also just an event-driven loop that keeps running at all times
[00:37:19] <[itchyjunk]> creating a list with 0 and 1 as the first 2 element then something something and we get fibbonichi sewuence
[00:37:37] <GeDaMo> zipWith takes a function and two lists, it applies the function element-wise
[00:37:55] <Amadiro> juliaEnv, so the only real difference is that you've restricted your scope to "I don't care how or what executes my batch process", but when you zoom out, the event-driven-ness is still actually there
[00:38:31] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[00:38:36] <[itchyjunk]> ahh
[00:39:01] *** Quits: cwiz89 (~cwiz89@91.193.178.55) (Ping timeout: 240 seconds)
[00:39:05] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[00:39:14] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:39:35] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[00:39:43] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[00:39:52] <GeDaMo> zip is basically zipWith (,)
[00:40:23] <deniska> "real time" means "there's a time limit on when I want a processing to finish after an event happens"
[00:40:33] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[00:40:34] <pyzozord>  
[00:40:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[00:41:01] <flakland> maybe you can have a non-batched system if you design out interrupts
[00:41:09] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:41:17] <pyzozord> sorry
[00:41:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:42:03] *** Quits: tracey (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[00:42:54] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:44:13] *** Joins: Leonard (~Administr@114.55.127.80)
[00:44:17] <InPhase> epony: To your earlier comment, I'm a channel discussant first, and an op only when needed, as is the Libera custom (and the Freenode custom before that).  That's why we don't wear the +o flags.  I strive diligently to never take op actions as a result of any position or counter-position in any discussion, which is relatively easy for me because I actually enjoy a vigorous debate, and do not get 
[00:44:23] <InPhase> upset by them.  But every once in a while some behaviors will get out of control by someone in a discussion that I also happen to be participating in, and it is necessary to point it out.  I additionally strive to make the initial request or warning polite when they are correctable behaviors, as the goal is for everyone to be able to participate, just to keep it a good environment for people who 
[00:44:29] <InPhase> might want to join in.
[00:44:33] *** Joins: kilit_ (~Username@188.242.187.4)
[00:46:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:46:34] *** Joins: kilit__ (~Username@188.242.187.4)
[00:47:05] *** Quits: kilitary (~Username@188.242.187.4) (Ping timeout: 256 seconds)
[00:47:05] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[00:47:32] *** Quits: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4) (Quit: Client closed)
[00:47:56] *** Quits: kilit__ (~Username@188.242.187.4) (Client Quit)
[00:48:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[00:49:01] *** Quits: kilit_ (~Username@188.242.187.4) (Ping timeout: 240 seconds)
[00:49:39] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[00:50:04] *** Quits: Daemonick (~Daemonick@62.1.158.125) (Ping timeout: 256 seconds)
[00:50:50] <ProfSimm> Do we have some other paradigm than  foo(dothing) and foo.dothing() for factoring artifacts in programming?
[00:51:17] <deniska> ProfSimm: dothing(foo) :)
[00:51:25] <GeDaMo> foo dothing
[00:51:53] <ProfSimm> I mean, what are "members" even. It's like this weird set of appendages on an object
[00:52:06] <ProfSimm> I don't think it's the most natural way of doing things
[00:52:18] <ProfSimm> Or is it?
[00:52:33] <flakland> linking objects, gcc calls them fields
[00:52:38] <bjs> ProfSimm: some languages don’t have objects or members at all
[00:53:07] <ProfSimm> bjs: but they replace them with modules and so on, which is kinda the same or not?
[00:53:13] <ProfSimm> And records
[00:53:33] <ProfSimm> flakland: fields ye
[00:53:36] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:53:46] <ProfSimm> Is there some other way of factoring all this
[00:53:54] <ProfSimm> Maybe less hierarchical. More... relational?
[00:54:09] <ProfSimm> I think the hierarchy is what bothers me most
[00:54:16] <ProfSimm> It's restrictive and causes collisions
[00:54:19] <InPhase> ProfSimm: Look at the syntax of Objective C, which borrows from Smalltalk the notion of function calls as messages passed to an object.
[00:54:47] <InPhase> ProfSimm: From Wikipedia, method changeColorToRed called as:  [myColor changeColorToRed:5.0 green:2.0 blue:6.0];
[00:54:50] <flakland> foo(dothing) would be just that
[00:54:52] <ProfSimm> InPhase: I'm taking a lot from Obj C and SmallTalk but I think ultimately they're analogous to the two examples above, sans the syntax
[00:55:09] <InPhase> ProfSimm: Ultimately there is a similarity, yes.
[00:55:11] <flakland> or dothing(foo) even
[00:55:21] <InPhase> ProfSimm: Slight semantic difference in the notion though.
[00:55:49] <ProfSimm> I keep circiling around a purely relational idea. Or the way ECS (entity component systems) work
[00:55:54] <ProfSimm> I don't know
[00:55:56] <flakland> there will always be collision unless you invite ambiguity into the language
[00:56:11] <Yamakaja> I've got a question for the DSP / AVX experts around here: Any suggestions as to how i could improve the performance of this 23-Point DFT? I'm still 30% slower than FFTW ;) https://github.com/Yamakaja/dft_bench/blob/master/src/dft_bench.c#L103-L131 (I'm looking for both algorithmic and technical suggestions)
[00:56:12] <bayaz> Title: dft_bench/dft_bench.c at master ? Yamakaja/dft_bench 
[00:57:36] <flakland> imagine trying to parse a language that allowed variable names to be duplicated, and lets the programmer specify which scope depth to use for the actual expression 
[00:57:42] <flakland> it would be unusable
[00:57:45] <flakland> practically
[00:57:58] <ProfSimm> flakland: the trick is to somehow avoid the existence of namespaces at all
[00:58:16] <ProfSimm> flakland: what is a name I wonder. It's kinda arbitrary
[00:58:29] *** Quits: Macuser (~Macuser@2600:1003:b447:1ed2:7489:9969:d4b9:7234) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:58:38] *** Joins: NEYi (~NEYi@109.251.216.38)
[00:59:05] <ProfSimm> It's a set of chars, it can be seen as a vector in N-dimensional space of the alphabet (N = chars). So places. Places for us to put things.
[00:59:20] <ProfSimm> We define an abstract place and then put things in it
[00:59:27] <ProfSimm> Abstract space*
[00:59:47] <ProfSimm> Can we avoid having such a space and identify things otherwise. By their relations, not by their place
[01:00:05] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[01:00:18] <flakland> anything is possible i'd say
[01:00:21] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[01:00:21] *** Joins: menace (~someone@user/menace)
[01:00:25] *** menace is now known as Deknos
[01:00:29] <flakland> but can you be productive in such a language
[01:00:45] <ProfSimm> Well, that's the big challenge.
[01:01:02] <ProfSimm> But I think if I give up and go back to trees of names, I'd have added absolutely nothing
[01:01:07] <flakland> th eprogrammer is forced to rely on annotations and weak aliases
[01:01:15] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[01:02:16] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[01:02:24] *** Quits: Sumao (~Sumao@88.246.79.235) (Ping timeout: 256 seconds)
[01:03:59] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:06:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:07:57] *** Joins: terminalpusher (~terminalp@2a01:586:8e8d:1:a3ae:5aad:c134:21a5)
[01:08:47] <juliaEnv> Amadiro program execution perspective is a wrong perspective. A program isn't even-driven in terms of program design and implementation just because a scheduler executes that program.
[01:08:57] *** Quits: emf (~emf@2620:10d:c090:400::5:9fd9) (Ping timeout: 240 seconds)
[01:09:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[01:10:39] <juliaEnv> Amadiro regardless of whether a batch program is executed by a job scheduler or by a user, the batch program does not respond to events in real time. An event-driven program however keeps running and responds to events immediately as they happen.
[01:11:07] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[01:11:20] *** Quits: murii (~murii@2a02:a58:835a:1100:c41a:ae69:f3ba:5cd2) (Remote host closed the connection)
[01:11:36] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[01:11:44] <juliaEnv> Amadiro a batch program processes a batch (an of items) in a loop and terminates. An event-driven program keeps running and observing events (state changes of some object) and responding to them.
[01:12:09] <juliaEnv> if everybody agrees, a real-time program is an event-driven program, and an event-driven program is a real-time program.
[01:13:29] *** Quits: anderson (~ande@user/anderson) (Ping timeout: 252 seconds)
[01:14:59] *** Joins: anderson (~ande@user/anderson)
[01:15:32] <flakland> not always, but this could turn into an endless debate. i'd say it only matters in specific context like a system that requires "real-time" performance
[01:18:43] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[01:18:58] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[01:20:06] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[01:20:31] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[01:21:12] <flakland> you don't want  a toaster that burns the toast every monday at 5AM when they programmed it to do a DNS lookup to check for updates and new exciting offers from their soponsors
[01:21:23] *** Quits: inomoz (~inomoz@176.59.115.245) (Remote host closed the connection)
[01:21:32] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[01:22:53] *** Joins: inomoz (~inomoz@176.59.115.245)
[01:23:05] *** Quits: gurki (~gurki@user/gurki) (Ping timeout: 250 seconds)
[01:23:06] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[01:23:17] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:23:20] *** Joins: gurki (~gurki@user/gurki)
[01:23:33] <juliaEnv> flakland can you please provide one example of real-time architecture that isn't running a control flow in response to events, but the real-time model is different?
[01:24:23] <flakland> a cmputer without interrupts?
[01:24:26] <juliaEnv> I believe every real-time system monitors some sensors (or other inputs) and responds to their state changes
[01:24:36] <ProfSimm> How would you write a programming language that uses no names
[01:24:43] <nomagno> soft real time operating systems may do timesharing
[01:24:59] <nomagno> ProfSimm: Define 'No Names'. Assembly languages only use addresses
[01:25:03] <nomagno> Well, some
[01:25:06] <nomagno> Most use registers
[01:25:15] <nomagno> which are a form of nominal addressing
[01:25:20] <nomagno> Mine only uses addresses though
[01:25:22] <ProfSimm> nomagno: in wider sense I mean no "places" which means no names and no addresses
[01:25:35] <ProfSimm> nomagno: no symbolic encoding of places
[01:25:44] <ProfSimm> nomagno: as a name, index, or address
[01:26:02] <juliaEnv> flakland a computer without interrupts - how is it real-time?
[01:26:04] <ProfSimm> nomagno: just opaque links/relations
[01:26:15] <nomagno> Without addressing you can't have Turing machines
[01:26:22] <flakland> it operates  in real time?
[01:26:29] <flakland> on a fixed interval
[01:26:36] *** Quits: Square (~a@user/square) (Ping timeout: 245 seconds)
[01:26:43] <nomagno> The concept of computation, even with Linear Bounded Automatons, relies on memory 'cells'
[01:26:47] <ProfSimm> nomagno: there is some sort of addressing, but not explicit. You can link things, and follow the links
[01:26:49] <nomagno> Or an equivalent form anyways
[01:26:58] <nomagno> ProfSimm: Link things how?
[01:27:02] <nomagno> Give a syntax example
[01:27:11] <nomagno> You can't link things that have no name
[01:27:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:27:30] <ProfSimm> nomagno: it's hard to give an example when I have no idea how I'll program in this thing, but imagine it as hard links in ext
[01:27:41] <InPhase> juliaEnv: "Real time" ultimately just means "fast enough and never too slow for some purpose of responding to an event".
[01:27:57] <juliaEnv> flakland if the CPU would not get interrupts, it would have to still interrupt computation of instructions to check all devices on the bus, no?
[01:28:05] <ProfSimm> nomagno: imagine it as linking space together with portals if you will :)
[01:28:15] <flakland> the CPU doesn't need devices
[01:28:25] <ProfSimm> nomagno: you can't specify GPS coords, but you can link two places you're already at
[01:28:27] <JanC> hardlinks are just a way to link multiple names to one location
[01:28:29] <flakland> maybe it needs some ram
[01:28:41] <ProfSimm> JanC: yes, but now imagine there are no names
[01:28:51] <juliaEnv> flakland let's say the system would need at minimum a network interface device
[01:29:08] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:29:28] *** Joins: Square (~a@user/square)
[01:30:13] <ProfSimm> nomagno: there will have to be names, but we can think of them as EXTERNAL to the system. Like little stickers we put on a thing that is already there and we know what it is, name or no name
[01:30:31] <ProfSimm> The key thing I want to achieve is the system itself internally doesn't rely on names
[01:30:35] <ProfSimm> Just opaque hard links
[01:30:40] <flakland> if you are relying on network for real time performance i have bad news foryou
[01:30:42] *** Joins: illusion1212 (~illusion1@185.135.96.133)
[01:31:01] <JanC> hardlinks *are* names
[01:31:02] <InPhase> juliaEnv: You can do real time processing for example by cycling through things you want to poll, with zero interrupting.
[01:31:03] <InPhase> juliaEnv: You can also do real time processing with a highly parallel setup, in which there is no interrupting because each of many separate circuits monitors one thing continually.
[01:31:20] <juliaEnv> flakland I have bad news for you. Real-time is not only hard real time. Real-time is still real-time when it is soft real-time.
[01:31:32] <ProfSimm> JanC: it's a pointer to a node isn't it
[01:31:36] <flakland> soft real time meaning within a fixed interval?
[01:32:26] *** Joins: jamea (~jamea@177.239.87.108)
[01:32:39] <deniska> soft realtime means that missing a deadline doesn't result in a catastrophic failure :)
[01:33:06] <juliaEnv> flakland OK, polling is the way to go if interrupts would not inform that the state has changed. It is good to know
[01:33:12] <vdamewood> Well, Yay. whenever I log into Humble Bundle, I'm not logged into Humble Bundle.
[01:33:35] <flakland> interrupts are used to implement polling
[01:34:29] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:34:53] <juliaEnv> well, interrupts are event notification for the CPU that some device needs handling of its state change. Polling is querying a device for its state.
[01:34:56] <nomagno> flakland: In a model where INPUT DEVICE just sends signals through a wire, interrupts aren't really needed
[01:35:02] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[01:35:12] <Tech_8> sup
[01:35:16] <nomagno> you simply need to check periodically for changes
[01:35:21] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 245 seconds)
[01:35:29] *** Joins: ario (~ario@159.65.220.102)
[01:35:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[01:35:55] <flakland> DRAM doesn't need interrupts?
[01:36:04] <flakland> or whatever they call this memory tech we use
[01:36:06] <nomagno> A timesharing model where you can ask the scheduler to extend your processing time, based on the results of polling, seems very interesting
[01:36:29] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[01:36:30] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Client Quit)
[01:37:23] <JanC> interrupts mostly exist because we want to do other things instead of polling almost 100% of the time  :)
[01:37:23] <juliaEnv> a real-time program definitely could read packets and process their data. Without interrupts, it would have to poll the socket in a loop to check for a new sequence id of a packet
[01:38:01] <juliaEnv> at least it wouldn't have to context-switch
[01:38:03] *** Joins: Leonard (~Administr@114.55.127.80)
[01:39:07] <juliaEnv> I like it. But, I doubt we know how to code it in C.
[01:40:13] <nomagno> juliaEnv: How about a bidirectional scheduler
[01:40:18] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[01:40:24] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[01:40:30] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:40:45] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:40:50] *** Joins: jdmark2 (~jdmark@user/jdmark)
[01:41:21] <nomagno> Set a special memory address/register you can set. If it is 0, the RTOS scheduler switches away to a process. If it is no zero, the scheduler extends your processing time by that many... nanoseconds/milliseconds/cycles/whatever
[01:42:11] <nomagno> Basically a timesharing operating system where the scheduler allows processes to decide if they need more processing time or not, based on their own polling
[01:42:46] *** Quits: zer0bitz_ (~zer0bitz@196.244.192.61) (Read error: Connection reset by peer)
[01:42:47] <juliaEnv> nomagno that sounds good. Thanks.
[01:42:57] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[01:43:31] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:43:54] *** Quits: jamea (~jamea@177.239.87.108) (Ping timeout: 256 seconds)
[01:44:38] <nomagno> To implement this in C, you'd probably do something like an OS-specific system where the entry point is a poll() subroutine, and a libc that has the functions exit() and extend()
[01:44:39] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[01:45:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:46:30] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[01:46:33] <nomagno> So, 'poll(int available_nanoseconds)' is the entrypoint, 'exit(int approximate_nanoseconds_to_next_call)' is for when you are done earlier than expected, and 'extend(int approximate_extension_request_nanoseconds)' for when you have detected something interested in polling
[01:46:41] <nomagno> Fairly clean interface for a SRTOS, in my opinion
[01:46:45] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[01:47:18] *** Joins: jamea (~jamea@177.239.81.39)
[01:47:54] <vdamewood> Now I get to figure out why Humble Bundle won't log me in.
[01:49:00] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:49:04] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[01:49:08] <ProfSimm> It seems what I wanna do looks kinda like neural networks. Neurons have no names. You could name them externally, but the names are not part of the thing
[01:49:11] <Zogatribe> due to currently extant runtime polymorphism implementations OOP has unavoidable runtime costs so there are more performant alternatives to it as a design methodology.
[01:49:22] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[01:49:32] <juliaEnv> nomagno would you recommend any open source rtos to try that with?
[01:49:34] *** Joins: Lycurgus (~juan@98.4.112.204)
[01:49:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[01:50:57] <Zogatribe> crucially if you want a performant and well design piece of software you have to use all the tools from the toolbox of which OOP is just one; if your programming language of choice only supports OOP then your choice is lacking.
[01:51:11] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:52:03] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:52:04] <Zogatribe> this is why Java sucks :)
[01:52:07] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:52:16] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:53:11] <vdamewood> Yay, it works now!
[01:53:58] <vdamewood> Now I can read the latest JavaScript: The Definitive Guide
[01:54:45] <ProfSimm> How are neurons linked in ANN? How are the links represented
[01:56:07] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[01:56:08] *** Joins: jabster28 (~jabster28@81.111.217.63)
[01:57:01] *** Joins: Leonard (~Administr@114.55.127.80)
[01:58:49] *** Quits: illusion1212 (~illusion1@185.135.96.133) (Quit: Quit)
[01:59:46] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:00:19] <vdamewood> Oh, hey. JS:TDG says BigInts are in the standard now.
[02:01:16] <Zogatribe> I made a big int library
[02:01:35] <Zogatribe> well, multi-precision arithmetic include big ints
[02:01:59] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[02:02:02] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[02:02:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:03:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:03:49] <vdamewood> And it looks like BigInts were included in the 2020 standard, indeed. Yay. I no longer hate JavaScript.
[02:03:57] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[02:04:40] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[02:04:52] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[02:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[02:06:22] *** Quits: jdmark2 (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[02:06:30] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[02:06:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[02:07:26] <vdamewood> Looks like numeric literals are still Doubles, though. This doesn't give the expected result uniless you expect the number to be a Double. BigInt(9007199254740993)
[02:07:49] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[02:07:49] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:09:08] * pyzozord steals vdamewood's doubles
[02:09:22] * vdamewood steals pyzozord's bigints.
[02:09:24] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:09:54] * pyzozord doubles the doubles
[02:12:39] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:12:52] <ProfSimm> vdamewood: there is a new literal for bigint
[02:13:07] <vdamewood> ProfSimm: i know.
[02:13:08] <ProfSimm> vdamewood: 12345n
[02:13:10] <ProfSimm> Ah
[02:13:52] <pyzozord> is that c++?
[02:14:00] *** Joins: mikrosis (~mikrosis@dynamic-046-114-172-092.46.114.pool.telefonica.de)
[02:16:29] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[02:16:33] <vdamewood> pyzozord: Is what C++?
[02:17:02] *** FloridaMan is now known as Florida
[02:17:17] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:17:22] *** Florida is now known as FloridaMan
[02:17:32] *** Quits: terminalpusher (~terminalp@2a01:586:8e8d:1:a3ae:5aad:c134:21a5) (Remote host closed the connection)
[02:17:48] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:17:58] *** Joins: src (~src@user/src)
[02:18:32] <ProfSimm> pyzozord: if you mean the ints, it's JS
[02:18:52] *** Joins: |INTERPOL| (~interpol@36.68.45.9)
[02:19:26] * |INTERPOL| all libera chat is under interpol . here is the list of their server https://netsplit.de/servers/?net=Libera.Chat
[02:20:05] <pyzozord> oh really?
[02:20:08] <vdamewood> !k |INTERPOL| 
[02:20:08] *** |INTERPOL| was kicked by bayaz (|INTERPOL|)
[02:21:16] <epony> indonesian finsta ;-)
[02:21:26] <vdamewood> Bye bye, Spambot.
[02:21:54] *** Joins: |INTERPOL| (~interpol@36.68.45.9)
[02:22:04] *** Quits: |INTERPOL| (~interpol@36.68.45.9) (K-Lined)
[02:23:00] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:25] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 240 seconds)
[02:26:46] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[02:28:29] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d54c-02ed-e645-e44c.res6.spectrum.com)
[02:29:44] <vdamewood> Maybe I should give my computer some kind of SD-card-based storage.
[02:30:28] *** Quits: Inari (~Pinkishu@p4fe7eb9e.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:30:53] *** Joins: anovick (~anovick@2a0d:6fc0:1ce4:f300:e42c:71f4:c473:b927)
[02:31:40] <epony> always worth it (storage)
[02:31:45] <epony> that makes computers useful
[02:32:01] <epony> remember the 8bit "floppy" only PCs
[02:32:13] *** Joins: Leonard (~Administr@114.55.127.80)
[02:32:23] <vdamewood> epony: Those are actually more advanced than the one I'm designing in some ways.
[02:32:30] <vdamewood> Though, mine is going to be a 16-bit system.
[02:32:44] <epony> yeah, I saw some of the earlier talk
[02:33:17] *** Quits: pizdets (~pizdets@183.182.115.136) (Ping timeout: 240 seconds)
[02:33:23] <epony> I'm still a bit nostalgic of the lack of software support for the 286 machine I had back then
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.115.92)
[02:33:51] <epony> but I really liked them more than the 32bit PCs
[02:34:34] <epony> until the P5 and K6
[02:34:45] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:35:12] <epony> in your case, it's probably the "free / open design" system that is more important
[02:36:15] <epony> I wonder which would be the most modern completely open design and relatively affordable 64bit CPUs combination..
[02:36:52] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:37:19] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:37:27] <vdamewood> Probably some Risc-V thing.
[02:38:42] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[02:42:40] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:43:49] *** Joins: w0ng (~w0ng@103.212.224.213)
[02:44:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:45:00] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[02:45:25] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[02:45:43] *** Joins: Satin (uid193953@user/Seten)
[02:49:41] <epony> sounds very likely
[02:50:02] <epony> the sparc64 turned out to remain expensive and unobtanium for both hobby and individual use
[02:50:34] <epony> and the arm64 is ubiquituous but non-free and non-open.. and short lived
[02:52:07] <Rounin> RISC-V is certainly popular, but still very slow and expensive, and it's receiving some criticism from people who know MIPS etc... And of course from people within the ARM sphere, but they're direct competitors
[02:52:35] <Rounin> I think MIPS itself might have kind of sort of become an open standard now, or less closed, but I forget the details
[02:53:07] <Rounin> Either way, as long as only AMD and Intel and now Apple can make CPUs that are fast enough, what else are we going to use
[02:53:22] <Rounin> We could use 1024 RISC-V cores and make everything use a zillion threads
[02:53:49] <Rounin> In the winter we could use PowerPC and use them to heat our houses
[02:54:47] <flakland> one of the gazzillions of SBC's out there
[02:55:09] <Rounin> Singleeee... B.... Board Computers?
[02:55:19] <epony> why do you have to always bring the gas prices ;-) (just joking)
[02:55:32] <Decker> bunch of RPi?
[02:55:49] <Rounin> Ah... We don't even use that where I live, because we used to have cheap electricity, so now we just have expensive electricity and no gas
[02:56:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[02:57:02] *** Quits: Guest2986 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[02:57:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:57:33] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[02:58:07] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:58:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[03:01:07] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:01:09] <sonny> Has anyone ever used software that made working with text using the mouse trivial?
[03:01:19] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:01:53] <CoJaBo> wat
[03:02:06] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[03:02:57] <Rounin> Not really, no... Some Macintosh software might let you drag small pieces of text or whatever, but not in general
[03:03:34] <sonny> Recently I noticed that I could edit programs much faster if there was something that made it easy to manipulate text. I know the classic editors allow this somewhat, but they rely heavily on keyboard commands.
[03:04:26] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:04:39] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:04:41] <ProfSimm> sonny: I'm thinking about IDEs that show code more visually
[03:04:45] *** Joins: trevors (~trevors@user/trevors)
[03:04:51] <ProfSimm> sonny: but I'm curious what you found helpful
[03:04:54] <psydroid> RISC-V SoCs will be fast enough sometime next year
[03:04:59] <sonny> Rounin: yeah, that's the idea, but I'd like it to be more general.
[03:05:12] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:05:16] <ProfSimm> sonny: what did you use
[03:05:34] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:05:51] <sonny> I'm essentially using a basic text editor with the usual commands.
[03:06:08] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[03:06:18] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:06:22] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:06:36] <sonny> There isn't much that is helpful, that's why I hoped there was something
[03:06:53] *** Quits: Akuli (~Akuli@213.216.210.19) (Quit: Akuli)
[03:06:55] <flakland> you would end up with a mouse with 15 buttons
[03:07:01] *** Joins: Leonard (~Administr@114.55.127.80)
[03:07:01] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[03:07:09] <flakland> if not for keyboard shortcusts
[03:07:14] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:07:23] <sonny> That's funny, but custom hardware might not be a bad idea.
[03:07:48] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[03:08:45] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[03:08:58] <flakland> my vote is on IR based mouse to track digits so you don't have to move your hand over to an old clunky  device
[03:09:15] <flakland> built in to keyboard
[03:09:15] <sonny> IR == infared?
[03:09:19] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:09:21] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:09:53] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:09:57] <flakland> yeah, unless you're gainst wireless
[03:10:34] <flakland> bonus, if it's built in to keyboard you can't lose it
[03:11:40] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[03:11:45] *** Joins: murii (~murii@90.95.42.142)
[03:12:39] <flakland> or maybe two scroll wheels, for x/y axis input
[03:12:54] <flakland> at thumb rest position
[03:15:41] <sonny> I think you're on to something
[03:16:12] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[03:16:13] *** Quits: murii (~murii@90.95.42.142) (Ping timeout: 240 seconds)
[03:16:24] *** Joins: flakland (~flaknet99@32.211.211.39)
[03:17:08] <flakland> if it's one of those clicky wheels you can configure it to move cursor a full word for each click on the wheel
[03:18:22] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[03:18:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[03:24:50] <sonny> flakland: you're a genuis, the limitation is on the hardware side. There's only so much you can respond to on the software side with a keyboard or mouse
[03:26:19] <sonny> just with two scroll wheels you can seperate x-y movement from scrolling say words, pages, pictures etc.
[03:26:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[03:26:45] <ProfSimm> I think mouse and keyboard should be enough until we fully tap into the GUI potential
[03:26:51] <ProfSimm> After that we can think about hardware
[03:27:00] <ProfSimm> Text editors are still quite basic 
[03:27:04] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:27:06] <ProfSimm> Even with all the nice things
[03:27:24] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:29:04] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[03:29:18] *** Joins: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3)
[03:30:15] <nomagno> https://nomagno.xyz/
[03:30:16] <bayaz> Title: Nomagno 
[03:30:16] <nomagno> Any idea why the website is so small?
[03:30:20] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:30:31] <nomagno> The CSS scales properly on other sites of mine
[03:30:38] <nomagno> The exact same inline CSS
[03:30:45] <sonny> ProfSimm: what has not been explored in GUI?
[03:31:29] <pulse> AI powered Clippy
[03:33:02] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[03:36:37] <ProfSimm> sonny: code not being text, but being structure. 
[03:36:40] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[03:36:51] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[03:37:00] <sonny> ProfSimm: like lisp?
[03:37:15] <ProfSimm> sonny: not quite.
[03:37:23] <sonny> some ide's already facilitate this
[03:37:33] <sonny> e.g. intellij, VS
[03:37:44] <ProfSimm> sonny: we're moving in that direction, but text limits us
[03:37:58] <sonny> no, it's just a representation
[03:38:05] <ProfSimm> sonny: it is, but a restrictive one
[03:38:19] <sonny> how is it restrictive?
[03:38:25] <ProfSimm> sonny: first of all it's always a hierarchy, the AST
[03:38:50] <sonny> and?
[03:39:25] *** Quits: stagas (~stagas@2a02:587:c403:9039:aad1:9685:5cbf:438b) (Ping timeout: 240 seconds)
[03:40:31] <ProfSimm> sonny: it's hard to explain in a sentence, but think video games. We can utilize colors, shape, texture, physics, structure, geometry and so on to represent our code, instead of just encoding it into trees as text
[03:41:16] <ProfSimm> sonny: we're so used to it, frankly I don't think it even registers when I'm talking about it how specific those choices are, and how different they could be
[03:42:20] <ProfSimm> sonny: I'm not saying the code will be fundamentally different when it runs, because while the AST is a tree, at runtime values and objects form arbitrary graphs. It's up to the runtime.
[03:42:45] <ProfSimm> sonny: but I think we have potential to be more productive and make coding more fun with more rich representations. And more powerful maybe
[03:43:04] <sonny> I don't follow, but ok
[03:43:19] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[03:43:29] <ProfSimm> sonny: imagine if something like Tetris was a programming paradigm.
[03:43:47] <ProfSimm> sonny: no text, but you see what connects to what, you can follow the structure and so on
[03:43:59] <ProfSimm> sonny: I'm being very basic here.
[03:44:13] <ProfSimm> sonny: have you played TIM (The Incredible Machine)
[03:45:04] <sonny> no,  I haven't
[03:45:37] <ProfSimm> Well googling screenshots should give you the idea. It's physics puzzle game.
[03:45:44] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Quit: Leaving)
[03:45:50] <ProfSimm> Like debugging a physical machine
[03:46:02] <ProfSimm> No text there either.
[03:46:09] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[03:46:10] <ProfSimm> Our mind understands a lot more than text
[03:46:19] <ProfSimm> And we can utilize this in code.
[03:46:52] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[03:47:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:47:07] <ProfSimm> Imagine if your code had an actual geometric architecture you could look at. As a giant building.
[03:47:17] <ProfSimm> Not just a long list of indented text, but something much richer
[03:47:22] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:47:40] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:48:04] <ProfSimm> You move around it like a God visiting the world it created, beaming from room to room, tweaking things just right, running it and seeing it all start moving like a giant machine
[03:48:10] <ProfSimm> Intricate clockwork
[03:49:12] <sonny> So you are looking at all the state in your code?
[03:49:28] <sonny> like so <http://drakon-editor.sourceforge.net/>
[03:50:30] <sonny> I'm sure notation is prefered because it is consise. All the information visually provides little benefit.
[03:52:20] *** Joins: CaCode_ (~CaCode@user/cacode)
[03:53:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[03:53:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:55:49] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 240 seconds)
[03:55:50] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[03:56:35] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: WeeChat 3.4)
[03:57:38] *** Quits: anovick (~anovick@2a0d:6fc0:1ce4:f300:e42c:71f4:c473:b927) (Ping timeout: 268 seconds)
[03:59:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:59:19] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:02:26] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:02:51] *** Quits: flakland (~flaknet99@32.211.211.39) (Ping timeout: 264 seconds)
[04:03:46] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[04:04:24] *** Joins: trevors (~trevors@user/trevors)
[04:04:24] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[04:04:51] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:04:52] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[04:05:52] *** Joins: jazzy (~jaziz@user/jaziz)
[04:06:04] <vdamewood> Random question that popped into my head: How many coulombs are in a mole of electrons?
[04:07:05] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[04:08:11] <CaCode_> https://www.quora.com/How-many-coulombs-are-in-1-mole-of-electrons?share=1
[04:08:42] <CaCode_> .02×10^23 × 1.6×10^-19 C
[04:08:42] <CaCode_> = 96500 C (called 1 Faraday) according to top answer
[04:08:50] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Quit: WeeChat 3.4)
[04:09:38] <Stefan26> cool
[04:10:05] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[04:10:28] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[04:10:28] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[04:10:32] <Stefan26> when i dont know the answer to a question that has a numerical answer, 0 or 1 are good guesses!
[04:10:37] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[04:10:52] <CaCode_> Why not just google?
[04:11:24] <Stefan26> can't google if it's a quiz
[04:11:30] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[04:11:33] <CaCode_> Whos says so?
[04:11:48] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[04:11:50] <CaCode_> you just got to go about it the right way
[04:12:29] <vdamewood> CaCode_: Thanks, I'm looking up other resources to corroborate.
[04:13:08] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:13:55] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:15:15] <vdamewood> CaCode_: Some other site says "By experiment, one faraday is found to contain 96487 C per mole of electrons, the Faraday constant, F." Since we're dealing with measured quantities, I'd say accurate to two decimal places is pretty good indication that we have around the right answer.
[04:16:06] <vdamewood> Actually, two digits is unfair, they're only off from each other by 13 out of 96000.
[04:16:19] <CaCode_> vdamewood, I am no scientist myself so I really have no way of knowing, but I tend to take google's results at face value
[04:17:04] <CaCode_> but you could check wikipedia to be safe, or ask in ##physics or even ##science
[04:17:38] <vdamewood> CaCode_: Sometimes I see interesting things, like when one source has more or fewer significant figures. (Like this). Also, it helps to check two or more sources to make you don't fall for something.
[04:17:43] <InPhase> The theoretical value would be 96485.334 if you use the better precision input values.
[04:18:22] <InPhase> The limiting factor being the precision of Avogadro's Number.
[04:18:24] <vdamewood> InPhase: Cool. Thanks.
[04:18:54] <InPhase> Oh wait.
[04:18:56] <vdamewood> InPhase: Well, now Avocado's number is precisely defined.
[04:18:59] <InPhase> Somebody redefined that.
[04:19:00] <InPhase> Right.
[04:19:18] <vdamewood> Wait, no. Avocado's number is how much substance is in a guaca-mole.
[04:19:51] <vdamewood> InPhase: Now the limiting factor in precision is being able to measure the damn things.
[04:20:04] <InPhase> And the fundamental charge was recently defined exactly as well.
[04:20:09] <CaCode_> Lorenzo Romano Amedeo Carlo Avogadro, conte di Quaregna e Cerreto a mathmetician from the 18th century who proved that under equal conditions all gases contain the same number of atoms
[04:20:16] <InPhase> So to the limits of double precision, it's now exactly 96485.33212331001 C
[04:20:18] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:20:57] *** Joins: audiobirb (~audio@user/audio)
[04:20:59] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:20:59] <InPhase> And calculated with bigints to get it 100% exact, 96485.3321233100184 C
[04:21:05] *** Joins: pavonia (~user@user/siracusa)
[04:21:20] <vdamewood> Wait, a sec. I just realized something.
[04:21:31] <vdamewood> Technically you're wrong.
[04:21:48] * vdamewood sticks a negative sign on all of InPhase's answers.
[04:22:20] <InPhase> Technically the sign of the electron was initially assigned incorrectly...  But sure, to comply with convention.  :)
[04:23:01] <vdamewood> I've bean wondering, why was that anyway?
[04:23:16] <vdamewood> And why does 'conventional current' flow from positive to negative?
[04:23:17] <InPhase> Positive charge was defined as what happens to a glass rod when you rub it.
[04:23:39] <vdamewood> InPhase: And that removed electrons from the rod somehow?
[04:23:42] *** Quits: jaysicks (~jaysicks@fibhost-66-137-183.fibernet.hu) (Remote host closed the connection)
[04:23:45] <InPhase> It does.
[04:24:22] <vdamewood> Okay, that makes sense. I figured it was some sort of thing like that, a macro-level observation of a micro-level phenomenon.
[04:24:33] <InPhase> The first charge experiments were done with amber, which is charged in what we now call negative.  Had they realized that they should assign charge then, the signs would be correct.  But it took until glass manufacturing was good enough that the experiments were more convenient to do with glass rods for someone to think of assigning signs to it, and at that point, glass rods became positive, and 
[04:24:39] <InPhase> thus electrons became negative as a result.
[04:25:24] <vdamewood> Doesn't the word 'electron' derive from a word for amber?
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:38] <InPhase> It does.
[04:26:44] <vdamewood> Well, crap. M-W isn't helping.
[04:27:26] <InPhase> https://en.wikipedia.org/wiki/Etymology_of_electricity
[04:27:26] <bayaz> Title: Etymology of electricity - Wikipedia 
[04:27:41] <vdamewood> M-W says this: The word electric is derived from the Greek word for amber, elektron.
[04:27:58] <vdamewood> Yeah, switching to another word with the same root helped.
[04:28:02] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[04:28:35] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[04:28:41] <CaCode_> there are fermions and bosons right?
[04:28:49] <vdamewood> InPhase: So, if you're interested, I'm trying to write a personal textbook on EE. 
[04:29:01] *** Joins: yBtNJW3j (~aib9Zume@71.50.58.137)
[04:29:25] <CaCode_> fermions are categorized as either quarks leptons antiquarks and anti leptons
[04:29:30] <InPhase> "Again, The concretion of Ice will not endure a dry attrition without liquation; for if it be rubbed long with a cloth, it melteth. But Crystal will calefie unto electricity; that is, a power to attract strawes and light bodies, and convert the needle freely placed"
[04:29:32] <CaCode_> the electron is a lepton
[04:29:43] <InPhase> I particularly like the part there about the failed experiments trying to charge ice by rubbing it.  ;)
[04:30:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[04:30:26] <vdamewood> One of the first steps I want to do is figure out what the actual meaning behind various units are, like how many electrons are in a (negative) coulomb, and such.
[04:30:33] <oldlaptop> Perfectly successful attempts! They increased the thermal charge!
[04:31:43] <vdamewood> Then after I get all of the units down, I'm working on figuring out how I want to layout all the equations that can be derrived from Watt's law and Ohm's Law.
[04:32:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:32:21] <CaCode_> https://upload.wikimedia.org/wikipedia/commons/0/00/Standard_Model_of_Elementary_Particles.svg
[04:32:21] <bayaz> Type: image/svg+xml Size: 5.5 kB 
[04:33:40] <vdamewood> Is the V-looking symbol in the neutrinos actually a lower-case Nu?
[04:34:47] <InPhase> vdamewood: I guess you're not in ##physics so you missed all the fuss about this back in December or so, but if you want to waste 30 minutes on an amusing youtube controversy on this topic.  It started with Veritasium posting this video (which is basically... wrong):  https://www.youtube.com/watch?v=bHIhgxav9LY  ElectroBOOM in traditional entertaining style posted this:  
[04:34:48] <bayaz> Title: The Big Misconception About Electricity 
[04:34:52] <InPhase> https://www.youtube.com/watch?v=iph500cPK28  This guy did a great job of setting everything straight:  https://www.youtube.com/watch?v=2Vrhk5OjBP8
[04:34:53] <bayaz> Title: How Wrong Is VERITASIUM? A Lamp and Power Line Story 
[04:34:53] <bayaz> Title: I bought 1000 meters of wire to settle a physics debate 
[04:35:30] <vdamewood> InPhase: I've seen both videos actually.
[04:35:30] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[04:35:44] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:36:01] <vdamewood> Err, wait. There are three links.
[04:36:26] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[04:36:57] <vdamewood> Okay, I have not seen the third video (I bought 1000 meters of...)
[04:37:24] <CaCode_> vdamewood, i tried looking up your Nu question, didnt find anything
[04:37:47] *** Joins: stagas (~stagas@2a02:587:c403:9039:554c:d6d9:18e1:4b69)
[04:37:52] <vdamewood> CaCode_: FWIW, this is a lower-case Nu: ν
[04:39:33] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:40:15] <vdamewood> InPhase: I kind of like how this is playing out. Mind Blow: Something something. Response: Um, actually. Post-Response: Let's try it!
[04:41:12] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[04:41:16] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:41:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:42:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:42:26] *** dirigible_ is now known as dirigible
[04:42:53] *** Quits: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net) (Quit: Leaving)
[04:44:31] <InPhase> vdamewood: I had a lab career that included actually doing what he does in the "Let's try it" video, so I had very disappointed facial expressions when I first watched the Veritasium video.  :)
[04:44:58] *** Joins: Macuser (~Macuser@2600:1003:b46b:313b:bd36:7bff:69d1:6d4d)
[04:45:11] <InPhase> vdamewood: I was just patiently waiting for someone to finally post an oscilloscope rebuttal.
[04:45:23] <vdamewood> InPhase: The third video kind of reminds me of Grace Hopper talking about how far light nanoseconds and light microseconds are. She'd have 30cm (ish) long pieces of wire she'd call nanoseconds, and 300 (ish) meter-long spools she'd point to and call a microsecond.
[04:45:50] <InPhase> Alas, Derek has not really walked back his claims from the initial video, but has made a bunch of weasle-explanation sort of posts that don't really correct what he got wrong.
[04:46:38] <nomagno> vdamewood: I don't think a "light nanosecond/microsecond" is areal unit.
[04:46:46] <nomagno> a real*
[04:46:57] <oldlaptop> Why shouldn't it be?
[04:47:02] <oldlaptop> Perfectly cromulent unit.
[04:47:03] <InPhase> nomagno: A light nanosecond is a real unit.  I've used it frequently.
[04:47:06] <nomagno> https://en.wikipedia.org/wiki/Light-second
[04:47:06] <bayaz> Title: Light-second - Wikipedia 
[04:47:08] <InPhase> nomagno: It's about 20cm.
[04:47:10] <nomagno> Huh
[04:47:10] <oldlaptop> It's definitely not an areal unit
[04:47:16] <vdamewood> InPhase: *30
[04:47:16] <nomagno> The whole concept sounds ridiculous
[04:47:20] <nomagno> Oh...
[04:47:21] <nomagno> Sorry
[04:47:32] <InPhase> Sorry, 30cm for free space, 20cm in most wires.
[04:48:05] <InPhase> Delay lines are important in analog electronics.
[04:48:19] <vdamewood> nomagno: A light [time period] is the distance light travels in one time period.
[04:48:22] <InPhase> And also in synchronizing high speed digital electronics.
[04:48:23] <KillerWasp> Hello random sticky guys
[04:48:55] <vdamewood> So, just as a light year is the distance light travels in one year, a light second is the distance light travels in one second, and a light nanosecond is the distance light travels in one nanosecond.
[04:49:17] *** Joins: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[04:49:29] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[04:49:30] <KillerWasp> Where can I find a terrorism guide to destroy half of the internet providers? So the other half is given to me correctly and without failures.
[04:50:20] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[04:51:40] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) ()
[04:51:40] <nomagno> vdamewood: I could swear in my head I thought (light-year != lights microsecond)
[04:51:48] <nomagno> I don't know why
[04:51:53] <nomagno> It's clearly wrong
[04:51:57] <nomagno> And it's embarrassing
[04:52:04] <Rounin> KillerWasp: You could tell provider X that provider Y is letting provider Z peer with them for free, even though they're requiring payment from X
[04:52:11] <Rounin> And then keep doing that with all of them
[04:52:13] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[04:52:29] <Rounin> You are risking global nuclear war obviously
[04:52:46] <vdamewood> nomagno: Well, Indeed Light Year ≠ Light microsecond. Just as Year ≠ microsecond. Or is that not what you mean?
[04:53:08] <nomagno> vdamewood: As in, the type of unit
[04:53:11] <vdamewood> Rounin: Shall we play a game?
[04:53:16] <Rounin> :D
[04:53:33] <vdamewood> nomagno: Ah, okay. So you're thinking more analogy than equality.
[04:53:37] <Rounin> Do you know, I've not even seen that yet... Perhaps it's time
[04:53:41] <nomagno> Yeah
[04:53:46] <Rounin> While the concept of a film still exists
[04:54:10] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[04:54:11] <vdamewood> Rounin: You should. It's still well worth watching. It's also fun to see the early 80s tech and the acoustic coupling modem.
[04:54:18] <Rounin> Nice one
[04:57:41] <vdamewood> InPhase: Also, this third video kinds of reminds me of something I read where someone mentioned transmitting information by havieng a light-years long pole attached to a button, and pushing the pole into the button from the other side. Someone pointed out that that wouldn't circumvent the speed-of-light limit since the force of pushing that pole would only travel at the speed of sound.
[04:58:07] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[05:00:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:00:40] <oldlaptop> The speed of sound in light-year-long pole is probably pretty fast, to be fair, compared to the speed of sound in air.
[05:00:47] <oldlaptop> (Just not c)
[05:01:34] *** Joins: zaher (~zaher@37.48.151.163)
[05:03:37] *** Quits: zaher_ (~zaher@37.48.145.161) (Ping timeout: 240 seconds)
[05:04:57] *** Quits: Jong (~Jong@2620:10d:c090:400::5:90fa) (Ping timeout: 240 seconds)
[05:05:19] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:d5ef:ea75:c75e:f1b4)
[05:05:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[05:06:01] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:07:19] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:07:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:07:28] <vdamewood> So, in all of these rebuttals of the Veritasium video, I've forgotten Derek's original thesis statement.
[05:08:33] *** Joins: jabster28 (~jabster28@81.111.217.63)
[05:08:39] <vdamewood> Damn, no upload of the part-two video yet.
[05:09:00] <InPhase> vdamewood: His thesis was that the light bulb will light up in time 1/c (which doesn't even have valid units) because he modeled the energy as flying through free space directly to the light bulb (which is not correct).
[05:09:37] <InPhase> vdamewood: Which he was using to say the model of energy being transmitted by a chain of electrons pushing on each other is incorrect (it's not).
[05:10:05] * oldlaptop likes the model of energy being transmitted by tiny little ball bearings labeled e-
[05:12:11] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[05:12:19] <flakland> was it "light up " or see a flow of current
[05:12:26] <vdamewood> InPhase: Yeah, I remember the invalid units from when I watched the first video. 1/c has units (seconds per meter), which confused me.
[05:12:35] <vdamewood> flakland: He defined them both as the same for the video.
[05:12:38] <oldlaptop> flakland: He needs "any flow of current no matter how minute"
[05:12:50] <flakland> heh
[05:13:02] <vdamewood> And he said to assume the light bulb would light up on any flow of current.
[05:13:35] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Quit: Konversation terminated!)
[05:13:52] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[05:14:00] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:14:28] <InPhase> vdamewood: In relativistic electrodynamics, for which regular electromagnetism is a special case, magnetism does not actually fundamentally exist.  For any source of a magnetic field, there exists a reference frame in which there is no magnetic field, and yet the same events occur.  So consequently any explanation of the behaviors of electromagnetism that cannot also be explained without magnetism 
[05:14:34] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[05:14:34] <InPhase> even existing in a comoving frame is wrong.
[05:15:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:15:16] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[05:15:40] <InPhase> vdamewood: Magnetism is basically just a relativistic effect of charge attraction and repulsion.
[05:16:29] <vdamewood> InPhase: Interesting. I just got one of those cases where I new A, B, C and D, but you just pointed out the concequences of how they all work together.
[05:16:35] <vdamewood> s/I new/I knew/
[05:16:40] <edgar-rft> I never was charged of being attractive
[05:16:56] <vdamewood> edgar-rft: You don't need to be attractive to be charged.
[05:17:07] <InPhase> edgar-rft: Eat more.  In physics, high caloric intake can make you more attractive.
[05:17:26] <vdamewood> All the extra Joules will be pretty.
[05:17:32] <vdamewood> You'll be so hot.
[05:17:42] <vdamewood> (I think I'm funny.)
[05:17:46] <edgar-rft> I would get even fatter than I already am :-(
[05:17:57] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[05:18:04] *** Quits: Pook (~Pook@2001:8a0:f996:1400:5ce0:2546:a883:13f7) (Quit: Leaving)
[05:18:08] <arahael> All the hot nudes from the middle ages that are hung up in the museums were all fat. :D
[05:18:13] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:18:19] <arahael> Beauty definitely changes over the ages.
[05:19:10] <edgar-rft> If you're old you start to like fat women?
[05:19:29] <arahael> No, I mean, people seriously used to think fat was beautiful.
[05:19:46] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:19:46] <vdamewood> Because fat people were not starving and therefore rich.
[05:19:52] <arahael> Yep!
[05:20:01] <flakland> did any starving people have art galleries?
[05:20:45] <vdamewood> InPhase: Thanks for the links. That Let's-try-it video really helped my notes.
[05:20:47] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[05:21:04] <vdamewood> Now, I think I need to figure out the exact nature of electromotive force.
[05:21:55] <edgar-rft> I don't want to be forced electromotively
[05:21:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:21:58] <vdamewood> As best as I can figure, when that battery pops an electron out the negative end, and sucks one in at the positive, EMF is how 'hard' the electrons push (and the 'vacuum' pulls) them to move through the wire.
[05:22:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:23:23] <vdamewood> minus and obstructions (resistance) on the way
[05:23:34] <InPhase> vdamewood: First, electromotive force is not a force.  It's a misnamed electrical potential.
[05:23:35] <flakland> there is a pretty big link with temperature, and collisions happening in the conductor
[05:23:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[05:23:53] <InPhase> vdamewood: So it's not how hard it pushes, because it's not a force.
[05:23:56] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:24:04] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:24:22] <vdamewood> InPhase: I figured it wasn't a 'force' in the sense that newtons are a unit of force.
[05:24:55] <vdamewood> InPhase: I just hate using the term 'voltage' because no one ever says 'meterage' or 'secondage'.
[05:25:15] <edgar-rft> who please has elected all those electrons to gain so much electrical power?
[05:25:39] <InPhase> vdamewood: It's an electric potential created by a chemical reaction.
[05:25:44] <InPhase> (In the case of a battery.)
[05:26:06] <vdamewood> So, now I'm confused by the word 'potential'.
[05:26:11] <InPhase> vdamewood: Electromotive potential would have worked just fine, but the wrong term got baked in and nobody had the courage to fix it.
[05:27:50] <oldlaptop> Is that kind of like the thing where engineers start referring to chemicals by acronyms instead of their formulae?
[05:28:02] <InPhase> vdamewood: So electric potential starts by taking electric potential energy, and dividing out the charge being considered.  Potential energy tells you how much work can be done in a specific charge.  Electric potential is not charge-specific, because you can multiply it by any charge and get the potential energy for that specific charge.  So it's sort of the area-effect description of what potential 
[05:28:08] <InPhase> energy will exist for any charge in the region with that potential.
[05:28:09] <oldlaptop> (no matter how loudly the chemists wail)
[05:28:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:29:05] <vdamewood> oldlaptop: Like 'NiCad' batteries?
[05:29:43] <oldlaptop> NiMH is closer
[05:30:56] <vdamewood> InPhase: I'm thinking whoosh. I might need to read up more on it.
[05:31:14] <oldlaptop> "NiCad" is how something-that-actually-looks-like-a-formula commonly gets pronounced (the cells aren't based on some 1:1 Ni-Cd intermetallic, so it's still not the formula for anything real in there and still wrong, but this is a different kind of wrong_
[05:31:33] *** Joins: CaCode (~CaCode@user/cacode)
[05:31:44] <vdamewood> oldlaptop: I love it when I can be a different kind of wrong.
[05:32:07] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[05:33:00] <vdamewood> InPhase: The analogy to pressure in water flow still holds, right?
[05:33:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:34:12] *** Joins: vysn (~vysn@user/vysn)
[05:34:32] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:35:04] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[05:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[05:35:42] *** Joins: justIrresolute (~justache@user/justache)
[05:36:01] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:36:44] *** Zweihander is now known as zwei
[05:36:52] *** Quits: Twipply (~Twipply@user/twipply) (Remote host closed the connection)
[05:41:02] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:41:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:44:51] *** joev1 is now known as joev
[05:46:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:47:00] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[05:47:16] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:47:38] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:48:33] *** Quits: mikrosis (~mikrosis@dynamic-046-114-172-092.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:48:33] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:48:33] *** brabrax_ is now known as brabrax
[05:51:08] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[05:51:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[05:51:47] <arahael> vdamewood: The internet is full of tubes! TUBES!
[05:52:32] <Donitz> can a patent last longer than 20 years?
[05:52:44] <Donitz> If you find a paper older than 20 years describing an algorithm, can you be sure it's not patented?
[05:53:05] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:53:15] <oldlaptop> The only safe answer is: ask your lawyer
[05:53:26] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:53:35] <Donitz> normal people don't have a personal lawyer at hand
[05:53:42] <arahael> Donitz: It's complicated.  You need a lawyer.
[05:53:48] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[05:53:59] <oldlaptop> Consider that not all invalid patents fail to exist.
[05:54:14] <Donitz> I know the system is broken and pretty shitty
[05:54:18] <oldlaptop> (and that demonstrating their invalidity in court is unlikely to be free)
[05:54:22] <arahael> Donitz: There are ways and methods to extend the life of a patent, or at least, the thing that's patented can be covered by a newer patent.
[05:54:46] <Donitz> but then it wouldn't be the same algorithm as described in the old paper, would it?
[05:54:53] <arahael> It might be.
[05:55:10] <Donitz> at the very least the paper shows obvious proof of prior arts
[05:55:16] <arahael> It might.
[05:55:18] <Donitz> so I don't see how that could possibly be enforcable
[05:55:35] <arahael> The burden is on proving that it's not.  And that's usually really expensive.
[05:55:49] <arahael> Get a lawyer, that's all I'm going to say.
[05:56:01] *** Joins: saribro (~swinnenb@user/swinnenb)
[05:56:38] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[05:57:04] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[05:57:11] <Donitz> I'm just looking at some algorithms implemented in open-source libraries
[05:57:11] <sonny> If you have a comment like /*", is it an error to reach eof before the closing */?
[05:57:13] <Donitz> based on papers
[05:57:22] <Donitz> and it makes me wonder if they ever wondered if it was patented
[05:57:49] <sonny> maybe you can try google patent search
[05:57:52] <Donitz> no
[05:57:56] <Donitz> f*ck that
[05:57:58] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:57:59] <Donitz> it's a minefield
[05:58:11] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[05:58:13] <sonny> it should mention the people from the paper ...
[05:58:30] <nomagno> Searching for patents is riskier than avoiding searching for patents
[05:58:35] <Donitz> yes
[05:58:51] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:59:03] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:59:17] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 240 seconds)
[06:02:08] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[06:02:28] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[06:03:25] *** Quits: xff0x (~xff0x@2001:1a81:5298:9f00:374f:4390:4780:3d6) (Ping timeout: 240 seconds)
[06:05:22] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[06:05:34] *** Joins: xff0x (~xff0x@2001:1a81:52d4:9900:80b8:248c:472c:34e)
[06:05:55] *** Joins: geli (~gelignite@55d47b01.access.ecotel.net)
[06:05:59] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[06:06:07] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[06:07:24] <InPhase> vdamewood: You can get quite some distance in understanding with a water pressure analogy for electricity as long as resistors are some sort of thing that changes the pressure, and you ignore all the non-ideal effects that happen between nearby wires (capacitive coupling, radiative transmission and reception, etc).
[06:08:32] *** Quits: magla (~gelignite@55d41183.access.ecotel.net) (Ping timeout: 256 seconds)
[06:08:38] <vdamewood> Resistors are narrow pipes that heat up.
[06:10:28] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:11:28] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[06:11:44] <Donitz> it's all fun and games until you reach reactance and capacitance
[06:12:04] <vdamewood> Some people don't have the capacity for capacitance.
[06:12:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[06:13:22] *** Joins: Jong (~Jong@2620:10d:c090:400::5:2d57)
[06:13:46] <oldlaptop> (Some) resistors really are narrow pipes that heat up (if you are mean to them)
[06:14:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:14:24] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:14:37] <nomagno> I mean, wouldn't a narrow enough pipe with a fast enough water stream heat a measurable amount?
[06:14:48] <oldlaptop> Sounds legit.
[06:15:36] *** Joins: flakland (~flaknet99@32.211.211.39)
[06:15:57] <Donitz> also, voltage vs current
[06:16:06] <flakland> current!
[06:16:13] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:16:15] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:16:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481)
[06:16:46] <Donitz> and then when you get into how it REALLY works
[06:16:56] <Donitz> in reality electroncs barely move at all
[06:17:00] <Donitz> electrons*
[06:17:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ccfa:2f24:22:a481) (Remote host closed the connection)
[06:17:23] <Donitz> it's some kind of... very hard to explain reaction
[06:18:09] <flakland> those elusive ions
[06:19:49] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[06:20:10] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[06:20:36] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[06:23:16] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:23:21] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[06:25:06] *** Joins: constxd (~brad@142.134.38.68)
[06:25:12] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:25:27] <constxd> kings
[06:26:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[06:26:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:27:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7298:34ad:5290:1c7e) (Ping timeout: 240 seconds)
[06:28:24] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2bd0:5e5e:ca40:5981)
[06:33:16] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[06:33:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:34:26] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[06:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[06:35:10] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[06:35:41] *** Joins: justIrresolute (~justache@user/justache)
[06:36:33] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:37:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:38:59] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[06:40:20] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[06:41:11] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[06:44:37] *** Joins: Daemonick (~Daemonick@62.1.158.125)
[06:44:39] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:45:47] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[06:46:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[06:46:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:46:38] *** Joins: madsa (~madsa@user/madsa)
[06:46:48] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:47:03] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:49:22] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[06:51:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[06:54:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:55:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[06:55:48] *** Joins: fe23 (~fe23@2409:8a34:464:4990:7c68:8699:3484:486e)
[06:56:45] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[06:56:49] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:57:07] *** Quits: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com) (Ping timeout: 256 seconds)
[07:01:26] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[07:01:38] *** Joins: flakland (~flaknet99@32.211.211.39)
[07:02:03] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:02:13] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[07:02:59] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[07:05:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:06:15] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:11:04] *** Quits: madsa (~madsa@user/madsa) (Quit: Leaving)
[07:11:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:14:50] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:17:24] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:19:39] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[07:23:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:24:07] *** Quits: Macuser (~Macuser@2600:1003:b46b:313b:bd36:7bff:69d1:6d4d) (Quit: Textual IRC Client: www.textualapp.com)
[07:26:26] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:26:35] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:27:19] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:31:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[07:35:40] *** Joins: justIrresolute (~justache@user/justache)
[07:36:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:36:49] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[07:38:43] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:40:38] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[07:42:02] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[07:42:58] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[07:44:17] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[07:45:46] *** Joins: madsa (~madsa@user/madsa)
[07:45:51] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[07:45:55] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[07:48:11] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-5169-c788-ac71-b93c.res6.spectrum.com)
[07:48:48] *** Joins: mishugana (~mishugana@user/mishugana)
[07:50:12] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[07:50:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d54c-02ed-e645-e44c.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:52:03] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:52:36] *** Quits: geli (~gelignite@55d47b01.access.ecotel.net) (Quit: Stay safe!)
[07:54:17] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:57:54] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 256 seconds)
[08:03:57] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[08:04:26] <sonny> how do powershell users remember how to get stuff done?
[08:06:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:06:53] <edgar-rft> once you use powershell you forget such things rapidly
[08:07:02] *** Quits: javabean (~javabean@user/javabean) (Remote host closed the connection)
[08:08:44] <sonny> ah, I've been enlightened
[08:10:04] <edgar-rft> it frees your mind, you forget everything with no return, you'll never need to worry about anything ever after....
[08:10:13] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:12:10] <l2ftsnek> why would anyone actually want to use powershell, terminal is so much better
[08:12:16] *** Joins: javabean (~javabean@user/javabean)
[08:12:50] <sonny> l2ftsnek: I'm using windows
[08:13:05] <edgar-rft> l2ftsnek: because you want to give up all your power
[08:13:19] <sonny> useful commands have been alised in powershell so I have to use it
[08:14:20] <l2ftsnek> my limited experience with python on windows has made me never want to program on windows again
[08:15:27] <sonny> well, you can download if from the windows store now lol
[08:16:13] <sonny> I'm playing around with an old language. On the plus side it has an ide, on the minus side it seems I cannot use the compiler by itself.
[08:16:28] <sonny> I suspect this is not the case on unix
[08:16:52] <l2ftsnek> what language?
[08:17:36] <edgar-rft> sounds like TurboPascal :-)
[08:18:08] <sonny> l2ftsnek: `clean`, it's a language with syntax like haskell
[08:18:18] *** Quits: zaher (~zaher@37.48.151.163) (Ping timeout: 256 seconds)
[08:18:23] <sonny> <https://clean.cs.ru.nl/Clean>
[08:20:00] *** Joins: trevors (~trevors@user/trevors)
[08:21:45] <l2ftsnek> never heard of it, what are you making with it?
[08:22:57] *** Joins: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net)
[08:23:48] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:23:56] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:24:31] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[08:24:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[08:24:57] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[08:26:36] <sonny> l2ftsnek: nothing yet, just playing around
[08:26:47] *** Joins: Sadale (~Sadale@user/sadale)
[08:26:51] <sonny> l2ftsnek: it's also one more compiler that is available for windows
[08:27:30] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[08:28:01] <sonny> it supports graphics as well, but it seems like the code for that no longer works
[08:28:53] *** Joins: sebbu2 (~sebbu@user/sebbu)
[08:29:26] <sonny> ah no, still works!
[08:29:34] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[08:29:40] <sonny> guess windows backwards compat is in my favour
[08:30:25] *** Joins: mishugana (~mishugana@user/mishugana)
[08:30:26] <l2ftsnek> for once lol
[08:30:29] *** Joins: Guest31 (~Guest31@pool-96-253-74-73.rcmdva.fios.verizon.net)
[08:30:49] <l2ftsnek> I'm just learning anaconda and it's very trying because they've changed a bunch between 3.7 and 3.9
[08:31:04] <l2ftsnek> either that or it's just different on linux than it is on mac
[08:31:27] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 268 seconds)
[08:32:04] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[08:33:12] <sonny> reading the top of a source file `On Windows(9x/NT):` xD
[08:33:54] <sonny> compiles and runs!
[08:34:07] <sonny> l2ftsnek: what's that?
[08:34:11] <sonny> a python env?
[08:34:39] <mishugana> sonny:  yup
[08:34:40] <l2ftsnek> it helps you make environments install packages etc
[08:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[08:35:40] *** Joins: justIrresolute (~justache@user/justache)
[08:36:02] <sonny> frequent changes would annoy me there as well
[08:37:38] <l2ftsnek> it might just be differences between how it runs on mac and linux too i'm not sure but it's leaving me to figure this shit out and if I didn't know linux well enough i'd be completely lost digging through the filesystem
[08:37:41] <sonny> here's a picture <https://ibb.co/g7ynYd9>
[08:38:08] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[08:38:09] *** Joins: unixpro1970|3 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:38:39] <l2ftsnek> nice
[08:38:44] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[08:38:57] <sonny> yeah, it's really motivating
[08:39:02] *** Joins: JanC (~janc@user/janc)
[08:39:35] <sonny> just makes me think that devs are not interested in windows platform, outside of gamedevs
[08:41:00] *** Quits: unixpro1970|3 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Client Quit)
[08:41:20] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Quit: Leaving)
[08:41:45] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:41:51] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:42:09] <l2ftsnek> I'm interested in devops most of my shit runs natively on linux, look at things like ansible the controller runs on linux and using it with windows nodes is a royal pain in the ass
[08:43:02] <sonny> what is ansible made with?
[08:43:15] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Read error: Connection reset by peer)
[08:43:41] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[08:44:14] <l2ftsnek> python and yaml
[08:44:47] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[08:44:59] <sonny> I don't know actually costs, but I'm also starting to think the use of web tech for cross platform stuff is unwarranted
[08:45:31] <sonny> l2ftsnek: must be more than that, otherwise I don't see it being such a problem
[08:45:42] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[08:45:43] <sonny> unless the problem is yaml or something
[08:48:50] *** Joins: pingpongball (~pingpongb@43.228.192.110)
[08:51:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[08:51:21] <l2ftsnek> sonny: the issue is in the configuration, yaml is being used to write inventories and playbooks (the things that ansible will automate) for linux the connections are all ssh based and very straight forward but for windoze you're configuring winrm and there's a lot of connection problems until you get it all ironed out not to mention the winrm service isn't running by default etc
[08:51:31] *** Quits: javabean (~javabean@user/javabean) (Quit: well, shoot)
[08:52:17] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:52:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:52:52] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[08:53:01] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[08:53:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[08:55:49] *** Joins: frost (~frost@user/frost)
[08:57:36] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[08:57:57] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:58:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:59:09] *** Joins: javabean (~javabean@user/javabean)
[09:01:22] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[09:02:13] *** Quits: pingpongball (~pingpongb@43.228.192.110) (Quit: Client closed)
[09:02:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:03:12] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:06:26] *** Joins: lunarkitty (uid501895@user/pyra)
[09:09:07] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:11:56] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[09:12:20] *** Joins: murii (~murii@2a02:a58:835a:1100:c41a:ae69:f3ba:5cd2)
[09:12:33] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:13:09] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[09:15:15] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:15:15] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Read error: Connection reset by peer)
[09:15:20] *** Joins: anon__ (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[09:15:36] *** Quits: anon__ (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[09:17:04] *** Quits: murii (~murii@2a02:a58:835a:1100:c41a:ae69:f3ba:5cd2) (Ping timeout: 268 seconds)
[09:19:46] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:21:03] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:21:49] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:23:51] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[09:26:30] *** Joins: frost (~frost@user/frost)
[09:26:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:28:21] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:28:23] <sonny> l2ftsnek: ohh I see
[09:29:06] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:29:42] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:fc60:5a8b:b754:2ad)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:47] *** Joins: Jantz_ (~IceChat95@2407:7000:8d04:100:fc2e:2cd4:bfda:7ba6)
[09:31:56] *** Quits: Jantz_ (~IceChat95@2407:7000:8d04:100:fc2e:2cd4:bfda:7ba6) (Excess Flood)
[09:32:50] <Inst> any pythonistas on?
[09:32:59] <Inst> there's no way to do the equivalent of guards, right?
[09:33:17] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[09:33:57] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:fc60:5a8b:b754:2ad) (Ping timeout: 240 seconds)
[09:35:18] *** Quits: yBtNJW3j (~aib9Zume@71.50.58.137) (Quit: Leaving)
[09:35:19] <sonny> guards?
[09:35:23] *** Joins: aerysh_ (~aerysh@94.198.43.62)
[09:37:15] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:37:33] <arahael> Inst: I'll second that question - what do you mean by "guards"?
[09:37:34] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[09:37:36] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:37:47] <Inst> haskell guards
[09:38:02] <Inst> i'm checking match, but it looks like it's closer to C++ switch statements
[09:38:06] <arahael> Inst: Ah, then no.  Do that manually using "if", or by encoding a pattern to a hashable object, and using a dictionary.
[09:38:11] <Inst> thanks!
[09:38:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:38:18] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[09:39:12] <Inst> why the hell do they claim Python is easy to use?
[09:40:29] <arahael> Inst: Heh.
[09:40:52] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[09:41:00] <arahael> Inst: Another trap, is that function calls are very expensive in python, and you can't recurse too much, otherwise you'll exceed the recursion limit very easily.  It's only like a thousand, or a few thousand, levels deep.
[09:41:06] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[09:41:08] <Inst> yeah yeah yeah
[09:41:11] <Inst> Haskell is a trap
[09:41:25] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:41:32] <arahael> Inst: Once you learn Haskell, you get upset and sad with *all* the languages.
[09:41:33] <Inst> once you try Hask, you never go back
[09:41:35] <Inst> ;)
[09:41:41] <Inst> including Haskell
[09:41:46] <arahael> Yes. Including Haskell.
[09:41:55] <Inst> i'm already being pissed off at Haskell
[09:42:21] <Inst> in part, pedagogy, like, why the fuck did you choose to name your major concepts after terms in category theory?
[09:42:21] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[09:42:29] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[09:42:56] *** Joins: Pixi (~Pixi@user/pixi)
[09:42:57] <arahael> Right!
[09:43:13] <Inst> this entire monad smonad thing is bullshit
[09:43:15] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[09:43:31] <Inst> had a few talks, etc, join is useful, obviously, but it's implemented via bind
[09:43:39] <Inst> and bind is just a way to do monadic chaining
[09:43:47] <Inst> someone tells me to use reverse fish operator instead
[09:43:49] <arahael> Inst: I thought I understood monads, until someone mentioned the Tardis Monad.
[09:44:10] <arahael> Inst: Where time moves forwards *and* backwards.
[09:44:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[09:44:24] <Inst> monads are just a type in Haskell that can be instanced into Monad (consequently Applicative and Functor)
[09:44:35] <Inst> by abusing lazy evaluation, of course :)
[09:44:46] <arahael> Yes, though Applicative was decades later in terms of equivalence.
[09:45:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[09:45:12] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:45:12] <Inst> the requirements are: definitions for bind (which is flatMap / join composited with map), pure, <*> (ap), map
[09:45:26] <Inst> it's not strictly a matter of containers, since functions can be made into monads
[09:45:34] <Inst> and monads can contain nothing
[09:45:44] <Inst> but close, it's basically a way to manage type constructors
[09:45:54] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:46:09] <Inst> functions have monad / applicative / functor instances, ffs
[09:46:12] <Inst> still is blowing my mind
[09:46:21] <Inst> map is just (.), or the function composition operator
[09:46:22] <arahael> Eh, I'm somewhat more practical when it comes to thinking about haskell code.
[09:46:29] *** Joins: password2 (~password8@user/password2)
[09:48:49] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:54:08] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: de facto)
[09:54:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[09:54:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:55:03] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[09:56:02] *** Joins: bt-01 (~bt-01@49.207.0.191)
[09:56:21] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[09:57:01] *** Joins: Atque (~Atque@user/atque)
[10:02:10] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:03:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[10:03:20] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:03:58] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[10:03:59] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:04:36] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[10:05:24] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:05:31] *** Joins: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4)
[10:05:32] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:06:02] <teut> what does it means by "the api end point is encrypted"?
[10:06:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[10:06:39] <teut> does it means the juse of key/token?
[10:06:44] <teut> use*
[10:07:16] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:07:50] <arahael> teut: It could be as simple as https.
[10:08:15] <teut> hmm, yes that could be it
[10:08:17] <teut> thanks
[10:09:20] <teut> https://cdn.discordapp.com/attachments/894444327202344990/908746713840369704/IMG-20211112-WA0055.jpeg
[10:09:21] *** Joins: user51 (~user51@176.228.148.215)
[10:09:21] <bayaz> Type: image/jpeg Size: 1.4 MB 
[10:09:26] <teut> and answer of this?
[10:09:47] <teut> let me find clearer img
[10:10:46] <teut> https://cdn.discordapp.com/attachments/894444327202344990/908726841848778772/unknown.png
[10:10:47] <bayaz> Type: image/png Size: 62.4 kB 
[10:10:56] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[10:11:25] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:12:06] <arahael> teut: That's not a fun test.
[10:12:17] <teut> cisco's shit
[10:12:34] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:12:35] <teut> I have test in 5 hours
[10:12:36] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[10:12:41] <arahael> teut: Good luck.
[10:12:44] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:12:55] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:13:03] <teut> it asks the same questions in every college. I got the questions from a friend
[10:13:39] * arahael strikes CISCO off the list of companies he might work for, then!
[10:14:11] <teut> every company takes a similar test here
[10:14:22] * arahael never works for another company again, then!
[10:14:43] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:14:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:14:57] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:15:16] <arahael> I'm at the life stage where, when interviewing for the job, I'm the one interviewing the interviewer.
[10:15:24] <arahael> Unfortunately, most interviewers don't realise this.
[10:16:11] <teut> I gave an interview for wells fargo.
[10:16:28] <teut> those interviewers were so dumb
[10:16:42] <arahael> Most seem to assume that the thing I care about is money.
[10:17:03] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[10:17:06] <teut> One of them was the c++ guy, he said me vectors are dynamically allocated in c++
[10:17:07] <arahael> And fail to understand that...  A certain minimum salary is merely an assumed requirement.  I'm interested in everything else!
[10:17:15] <dodo> ikr
[10:17:17] <teut> same for me
[10:17:34] <arahael> > vectors are dynamically allocated in c++
[10:17:35] <arahael> Sort of true.
[10:17:38] <teut> but getting job is important too, and every company is like this
[10:17:59] <teut> no , they have the array resizing under the hood
[10:18:01] *** Quits: madsa (~madsa@user/madsa) (Quit: Leaving)
[10:18:03] <arahael> There's a part that's allocated on the stack.  But the storage, managed for you by the vector implementation, is indeed dynamic.
[10:18:12] <arahael> Yes. Dynamically.
[10:18:26] <arahael> Again, it's sort of true.
[10:18:59] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[10:19:01] <arahael> The problem is the word "dynamic" isn't well defined../
[10:19:34] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:19:55] <teut> no no , there is something like this that, vector will use an array of length 25  always
[10:20:17] <teut> if it requires a bigger size than it will create an array of size 2x
[10:20:22] <arahael> That's an implementation detail you should not even be aware of in most cases.
[10:20:22] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:20:40] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:20:54] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:21:22] <arahael> But interviewres do pick the darnest hills to die on.
[10:21:33] <teut> people who were asking questions on data structures and algorithms should be prepared or knowing implementation details
[10:21:53] <arahael> They should also be defining the terms as well.
[10:22:04] <arahael> If they defined "dynamic", then your answer should be pretty obvious.
[10:22:05] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:22:21] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:22:28] <teut> they asked me difference between liked list and array
[10:22:47] <teut> then I was saying it that you can append to a linked list
[10:22:56] <arahael> That's a good question. Ah, that's not the pertinient difference, though.
[10:22:57] <teut> but not to an array
[10:23:24] <teut> so he turned to vectors
[10:23:26] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[10:23:27] <arahael> Yeah, but that question implies that the interviewre is asking a computer-science question, so they expect a computer-science answer.
[10:23:39] <arahael> Your response is very pragmatic, a developer perspective, so to speak.
[10:23:53] <arahael> So a linked list is about how each item in the list is linked to the next one.
[10:23:58] <arahael> In a way that an array is not.
[10:24:04] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:24:20] <arahael> An array is a contigious chunk of memory where each item is layed out sequentially in memory.
[10:24:34] <arahael> (And you can add to the end only if there's sufficient space)
[10:24:35] <teut> yes that I know
[10:25:00] <arahael> You need to try and work out what perspective the questioner is expecting.
[10:25:04] <teut> hmm, I get it that I should not have jumped into implementation details
[10:25:18] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.43)
[10:25:19] <teut> yes, thanks arahael for the tips
[10:25:34] <teut> thats why I was kicked out in round 1 interview
[10:25:51] <teut> I will take care to remain inside the box
[10:26:42] <arahael> I've not actually been in many interviews, but I think starting squarily inside the box is a good tactic to start with, but the interviewer, paradoxically, may be wanting more.
[10:26:58] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:27:09] <arahael> So perhaps start with being inside the box, demonstrate that you do, infact, know what you're talking about, then maybe give more information that demonstrates you know more than the basics.
[10:27:42] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[10:27:45] <teut> yes but then they want me to code something and that too from my memory
[10:28:22] <teut> which gets difficult if I have used multiple languages and other stuff
[10:28:43] <arahael> teut: Sometimes an interview is basically a dick comparing contest, but as long as you demonstrate that you do know the languages you're claiming to know, it should be good.
[10:28:58] <teut> so I throw a fireball at them since  I have seen many cppconf and pycons
[10:29:16] <teut> it can be true
[10:29:23] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[10:29:50] <arahael> Yeah, but think about how the interviewer will interpret that fireball.  You might come across as a person who knows many obscure tricks, and is pleased to demonstrate them in ways that will be confusing to the team.
[10:29:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:30:00] <arahael> They may or may not want that.
[10:30:25] <teut> XD
[10:30:54] <teut> they asked the same copied questions from online wensites
[10:30:57] <teut> b*
[10:31:00] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:31:15] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:31:46] <arahael> Are you sure they know the content themselves? If they don't, then perhaps stay solidly inside the box.
[10:31:51] <arahael> (Maybe?)
[10:32:05] <arahael> Again, I don't personally have experience with many interviewers, but you do need to try and read the room.
[10:32:32] <teut> hmm, ya the goal is to make yourself be liked by then
[10:32:34] <teut> them*
[10:32:46] <arahael> Correct.
[10:32:56] <teut> many people got the offer just by writing sports on their resume
[10:33:27] <arahael> That speaks a lot, doesn't it? :D
[10:33:51] <teut> they talked about sports than coding
[10:33:56] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:34:01] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[10:34:10] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:34:22] <arahael> So they're worried more about culture fit.
[10:34:40] <teut> ok, so that thing I need to think about too
[10:34:57] <teut> I can write computer games then
[10:35:17] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-5169-c788-ac71-b93c.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:36:04] <arahael> Yeah, perhaps.  Anyway, I need to eat then do other stuff. Good luck.
[10:36:21] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:36:58] <teut> yes, thanks for the advice. I hope they help me get the offer in the next interviews that I have left to give.
[10:38:02] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5d0b-8dcf-929e-eae2.res6.spectrum.com)
[10:38:17] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:39:21] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:39:30] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[10:39:55] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b)
[10:40:07] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:486a:38a3:546f:7f4b) (Excess Flood)
[10:42:04] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:42:06] *** Quits: Guest31 (~Guest31@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[10:42:24] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[10:42:28] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[10:43:08] *** Joins: nitrix (~nitrix@user/nitrix)
[10:44:00] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:45:12] *** Joins: cwiz89 (~cwiz89@91.193.178.55)
[10:45:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[10:45:58] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[10:46:09] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:47:17] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[10:48:19] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[10:49:36] *** Quits: cwiz89 (~cwiz89@91.193.178.55) (Ping timeout: 256 seconds)
[10:49:49] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 240 seconds)
[10:49:58] <Inst> arahael
[10:50:12] <Inst> if we taught Haskell as an imperative language, letting people discover it's functional over time
[10:50:23] *** Joins: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[10:50:27] <Inst> what are the odds we could appreciably eat into Python's market share?
[10:50:32] <Inst> that's my intuition and hypotheses
[10:50:40] <Inst> /s/hypotheses/hypothesis
[10:52:50] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:53:10] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[10:53:13] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[10:53:29] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:d5ef:ea75:c75e:f1b4) (Read error: Connection reset by peer)
[10:53:31] <InPhase> Inst: Somewhere between 0 and Maybe 0.  :)
[10:53:50] <Inst> in reality, the type system and type checker is a total bitch
[10:53:57] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:54:01] <Inst> until you get used to it, it's very painful
[10:54:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:55:03] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[10:55:35] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:55:42] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:55:44] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[10:56:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[10:58:12] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[10:58:26] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:58:51] *** Joins: wikan (~weechat@2a02:a31d:8541:e100:213:2ff:fed3:8291)
[10:58:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[10:59:52] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[11:00:57] <teut> https://cdn.discordapp.com/attachments/894444327202344990/908732532995026944/20211112_202833.jpg
[11:00:57] <bayaz> Type: image/jpeg Size: 3.9 MB 
[11:01:07] <teut> can someone tell answer to this?
[11:01:26] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[11:01:39] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-5d0b-8dcf-929e-eae2.res6.spectrum.com) (Read error: Connection reset by peer)
[11:03:10] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[11:03:12] *** Quits: stoneware8 (~stoneware@user/stoneware) (Ping timeout: 256 seconds)
[11:03:22] *** Joins: stoneware8 (~stoneware@user/stoneware)
[11:04:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[11:04:52] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:05:45] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:06:21] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:08:32] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[11:09:01] *** Quits: stoneware8 (~stoneware@user/stoneware) (Ping timeout: 240 seconds)
[11:12:16] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[11:12:51] *** Quits: aerysh_ (~aerysh@94.198.43.62) (Quit: Konversation terminated!)
[11:13:42] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[11:13:58] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:14:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[11:14:16] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:14:24] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[11:14:35] <KillerWasp> i'm the best programmer in the world!! YAAAAY!!! \o/
[11:16:21] <EdFletcher> teut: That photo actually says “assessment” at the top, are you trying to cheat? 
[11:16:25] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:17:05] <teut> this test is already over
[11:17:07] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:17:15] <leonardus> howd you score
[11:17:17] <teut> but I have one in 4 hours
[11:17:22] <EdFletcher> Probably should preface it with that 
[11:17:31] <teut> its not mine, mine is in 4 hours
[11:17:44] <teut> but I expect similar/same questions will be asked
[11:18:08] <teut> so I have got the questions from a friend
[11:18:10] <EdFletcher> Looked shady as hell on first glance, is all I’m saying 
[11:18:14] <teut> I just need the answers now
[11:18:27] <leonardus> You've got four hours to study
[11:18:37] <leonardus> You were paying attention in class, weren't you?
[11:18:50] <teut> I am a chemical engineering student
[11:18:56] *** Joins: stoneware8 (~stoneware@user/stoneware)
[11:19:09] <teut> what class? I study everuthing on my own
[11:19:12] <teut> y*
[11:19:18] <EdFletcher> You have a test in this, regardless of your major, no? 
[11:19:23] <teut> yes
[11:19:30] <leonardus> You don't have a teacher?
[11:19:37] <leonardus> Or professor for this?
[11:20:02] <teut> we live in different countries and we dont share the same culture
[11:20:15] <teut> here things dont happen that way
[11:20:16] <EdFletcher> Then you should’ve been paying attention and studying, duh. Why does it not matter if it’s not your major, and what do you think that says to people here who DID major in this? 
[11:20:23] <arahael> teut: Hate to say it, but you're unlikely to get any canned answers from IRC, you're probably best of researching each of those answers while you study, though you're unlikely to be able to research everything for every question in the time you have (four hours).
[11:20:45] <teut> I couldnt find all of them on google
[11:20:53] <leonardus> Teachers don't teach in your culture?
[11:21:02] <teut> nope
[11:21:03] <leonardus> I'm confused about this education arrangement
[11:21:10] <EdFletcher> Or students don’t bother learning? 
[11:21:20] <teut> both things  go hand in hand
[11:21:28] <EdFletcher> We’re only hearing one side, mind you 
[11:21:35] <teut> but you can get marks surely by looking at the solution manual
[11:21:47] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:22:19] <arahael> teut: You're probably expected to already know all of those technologies, at least vaguely, for the position you're applying for.
[11:22:29] <teut> not at all
[11:22:36] <leonardus> If what I'm hearing is true, I'd hesitate to hire anyone with a degree from this school
[11:22:53] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:23:09] <teut> hahaha
[11:23:26] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:23:26] <teut> and my college has placement record of 98%
[11:23:42] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[11:23:58] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[11:24:01] <teut> how does your company takes tests?
[11:24:19] <teut> hackerrank ? hackerearth? codechef?
[11:24:22] <arahael> teut: My company doesn't.  They have an interview, and a 'psychology test', one of those wacky behavioural tests.
[11:24:37] <EdFletcher> Like “placement” means anything… how long do those people stay in those jobs? Are they appropriate or just placement for placements sake? 
[11:24:44] <teut> no the  data structures test
[11:25:07] <arahael> teut: I was not asked a single question about data structures for my software engineering role.
[11:25:24] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:25:40] <EdFletcher> Nor was I, last two roles in fact 
[11:26:00] <teut> I have given 40 tests and couldnt get shortlisted for moer than 2 interviewes because 400 people are sitting and I have to compete with them
[11:26:22] <teut> first round is hackerrank test on data strcuctures and algos
[11:26:30] <arahael> teut: If your major is chemistry, why are you applying for software dev?
[11:26:57] <arahael> Every kid and their dog wants to do software dev...  And the pay is shit unless you happen to be very good.
[11:27:00] *** Quits: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net) (Ping timeout: 256 seconds)
[11:27:15] <teut> you come here , study and you will be doing the same and wouldnt not have an answer to this question
[11:27:32] <leonardus> arahael: or if you do something that requires multiple disciplines like physics or graphics dev
[11:27:54] <arahael> leonardus: Indeed, and hopefully get paid accordingly.
[11:28:46] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[11:29:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:29:50] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[11:30:44] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:30:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:30:54] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:30:57] *** Quits: kiryin (~kiryin@2001:999:52:132c:92be:d320:b92c:e714) (Ping timeout: 240 seconds)
[11:35:12] *** Joins: murii (~murii@2a02:a58:835a:1100:c41a:ae69:f3ba:5cd2)
[11:35:17] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 240 seconds)
[11:35:37] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:37:37] *** Quits: teut (~teut@2401:4900:1c68:6b85:a055:f956:ced4:e0d4) (Quit: Client closed)
[11:38:20] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:39:22] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:40:45] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:40:46] *** Joins: aradesh (~aradesh@user/aradesh)
[11:40:56] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:42:04] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:42:20] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:42:28] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:44:12] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[11:45:41] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[11:45:43] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:45:48] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:47:43] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[11:48:32] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[11:48:59] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:49:30] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:49:41] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:49:43] *** Joins: Sadale (~Sadale@user/sadale)
[11:50:27] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:50:43] *** Joins: palasso (~palasso@user/palasso)
[11:50:48] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:50:56] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[11:52:47] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:53:00] *** Joins: flakland (~flaknet99@32.211.211.39)
[11:54:22] *** Joins: maxyz (~maxy@80.254.172.91)
[11:56:27] *** Joins: Atque (~Atque@user/atque)
[11:57:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[11:57:52] *** Joins: Sadale_ (~Sadale@user/sadale)
[11:58:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[11:58:15] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[11:58:42] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[11:59:49] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[11:59:58] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[12:01:21] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876)
[12:01:54] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2974:1fbf:e239:9876) (Excess Flood)
[12:03:31] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[12:03:49] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[12:07:47] *** Quits: password2 (~password8@user/password2) (Read error: Connection reset by peer)
[12:07:58] *** Joins: v0id_ptr (~longlong@167-179-182-224.a7b3b6.bne.nbn.aussiebb.net)
[12:08:15] *** Joins: password2 (~password8@user/password2)
[12:11:18] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:12:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[12:13:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:13:17] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[12:13:29] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:13:43] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c::2) (Read error: Connection reset by peer)
[12:13:45] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:14:06] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c::2)
[12:18:59] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[12:20:00] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[12:20:32] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:20:37] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[12:21:49] *** Quits: bt-01 (~bt-01@49.207.0.191) (Ping timeout: 256 seconds)
[12:22:26] <Square> Programmer of fame "Notch" posted this https://twitter.com/notch/status/1478692721611190291 that received a 1000+ likes. 
[12:22:31] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:22:56] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:22:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:23:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[12:23:43] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:23:49] <Square> Why so many haters. Not that i am proficient in cathegory theory, but im thinking there seems to be some sort of rage against functional programemrs?  
[12:24:33] <deniska> Square: he's also a notable twitter trol :)
[12:24:39] <EdFletcher> That guy sucks, who cares what he says 
[12:25:44] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[12:25:55] <Square> im dont care what he thinks im just surprised it received so many likes. 
[12:26:48] <EdFletcher> Square: People fawn over famous people for no other reason than that they’re famous 
[12:27:55] *** Joins: comptuer_mastar (~diophanto@user/diophantoz)
[12:28:46] <EdFletcher> in fact i just saw a paper the other day that (claims to, i can't read it properly as i don't have the background) conclusively links celebrity worship & poorer cognitive performance: https://bmcpsychology.biomedcentral.com/articles/10.1186/s40359-021-00679-3 
[12:28:46] <bayaz> Title: Celebrity worship and cognitive skills revisited: applying Cattell?s two-factor theory of intelligence in a cross-sectional study - BMC Psychology 
[12:29:26] <EdFletcher> so we can indeed say "those people are idiots", factually 😆 
[12:30:08] *** Quits: sillymob[m] (~sillymobm@2001:470:69fc:105::1:3c6d) (Quit: You have been kicked for being idle)
[12:30:19] *** Quits: Dave[m] (~fiseeyeem@2001:470:69fc:105::7c4a) (Quit: You have been kicked for being idle)
[12:31:19] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:31:27] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:34:13] *** comptuer_mastar is now known as diophantoz
[12:34:34] <Square> Great! I was thinking there was a secret society of FP haters burring their clenched fists when I praise FP. =D
[12:35:05] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[12:35:32] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:35:41] *** Joins: justIrresolute (~justache@user/justache)
[12:36:29] *** Joins: thevishy (~Nishant@2405:201:f005:c007:40d9:4255:8f71:3678)
[12:37:29] <PlanckWalk> Well, there still might be.
[12:37:34] *** Joins: rsx (~dummy@ppp-188-174-136-210.dynamic.mnet-online.de)
[12:37:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:38:02] <deniska> I mean, there's "functions can be passed to other functions" kind of FP and "code-golfing APL" kind of FP :)
[12:38:24] <deniska> the latter is more niche of an idea
[12:39:49] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:40:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:40:40] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:42:30] <Square> Lol, wasnt aware of the APL language/community
[12:42:47] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[12:43:30] <beaky> nice i like apl
[12:44:21] *** Joins: Lycurgus (~juan@98.4.112.204)
[12:44:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[12:44:30] <beaky> if only there was a rust of apl where they fixed all the problems of apl and made it nice and modern
[12:45:55] <deniska> there's J if you ever thought that ascii is preferable to non-ascii
[12:46:22] <Lycurgus> why rust? why not hasekell?
[12:46:43] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[12:46:44] <Lycurgus> (because maths)
[12:46:57] <Lycurgus> *haskell
[12:47:01] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:47:37] <beaky> haskell is nice but it is too focused on lazy evaluation which is not compatible with state of the art array programming performance because of all the indirection involved i think
[12:47:55] <Lycurgus> i c
[12:49:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:49:19] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[12:49:23] <Lycurgus> fyi, laziness can be turned off in hs and isn't essential to its operation
[12:49:47] *** Quits: password2 (~password8@user/password2) (Read error: Connection reset by peer)
[12:50:16] *** Joins: password2 (~password8@user/password2)
[12:50:42] <beaky> so for example all the array-oriented libraries in haskell like repa (provides apl like arrays) have their own api where you gotta use all the inlining and fusion pragmas and functions and stuff to get the right performance whereas a language designed for this like julia for example gets you screaming-fast predictable performance out of the box
[12:51:25] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[12:52:17] <beaky> how do you turn off laziness in haskell i thought laziness was the whole point of haskell's design spec and runtime in haskell you can only force strictness on particular things but not turn off laziness
[12:52:21] <Lycurgus> a good reason is there isn't a good gui api
[12:52:28] <Lycurgus> api/binding
[12:52:41] <Lycurgus> just specify strict
[12:52:50] <Lycurgus> as a ghc parm
[12:53:33] <Lycurgus> but for that (a good gui i/f) it would be a natural for the maths oriented APL
[12:54:10] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:54:10] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:54:10] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:54:14] <Lycurgus> albeit superfluous since there's not dearth of mathematica, octave, pywhosits type things
[12:54:30] <Square> there are good Web API's though. Miso is great.
[12:54:58] <sonny> those languages have gui toolkits?
[12:56:19] <Lycurgus> they're purpose built math packages
[12:56:39] <Decker> Lycurgus you play with wolfram cloud?
[12:56:39] <Lycurgus> mathematica, e.g. uses the platform default gui
[12:56:43] <sonny> what does "but for that (a good gui i/f) it would be a natural for the maths oriented APL" mean?
[12:56:58] <beaky> like dyalog's gui 
[12:57:00] <Lycurgus> Decker, no, just have regular Mathematics for linux
[12:57:12] <Lycurgus> *Mathematica
[12:57:12] <sonny> til dyalog has a gui
[12:57:18] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[12:58:01] <Lycurgus> which when I get a new host for it I have to get a new mathid from them
[12:58:14] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[12:58:55] <Decker> https://www.wolframcloud.com/obj/67b9ca01-f294-4dcc-a69c-1cff2bf0507c Lycurgus (though this has gotten pretty big...)  https://www.wolframcloud.com/obj/39755467-1513-423f-b896-2e4d2d8a3cb0 ?  they have a large library of Gui functios that return an expression that expands into dynamic graphs - I haven't done things like included sliders to control parameters and stuff
[12:59:04] <sonny> "Julia is dynamically typed, feels like a scripting language, and has good support for interactive use." -- wonder why they used dynamic types
[13:00:28] <sonny> Decker: how do you think they implement it? Maybe it's custom canvas stuff
[13:00:44] <Decker> certainly canvas... the seem to do a getimagedata and cache it too
[13:00:49] <Square> Your types can be anything you want
[13:00:52] <Decker> so it's not live until you hover voer
[13:01:05] <sonny> Decker: So they provide the same api on the web and native?
[13:01:07] <beaky> yes julia uses dynamic types to appeal to python's characteriustiscs
[13:01:17] <Decker> Sonny ya they say 'download for native'
[13:01:28] <sonny> oh cool, that's impressive
[13:01:45] <sonny> I'd guess it's opengl for native
[13:01:57] <beaky> the idea of julia is to be as fast as c++ for numeric code by default while being as expressive as python
[13:02:28] <Decker> but alos - being cloud - if you have the page open, and I'm making changes to it those changes go live out (semi-live... sometimes they update sometimes they don't)
[13:02:29] <sonny> dynamic types seem to be at odds with speed, but ok
[13:03:14] <Decker> sonny that's true if you're using a truly dynamic type... like getting a mesasge from a socket that is just a json packet.
[13:03:32] <Decker> but generally types are only the types they are and functions only get passed a few, so there's really not a big issue
[13:04:04] <sonny> I guess there implementation has a lot of types in the vm
[13:04:08] <Decker> v8 tracks internal 'hidden classes' which is like a dictionary of all the general types of things - based on prototypes and field content
[13:04:09] <sonny> s/there/their/
[13:04:29] <Decker> everyone else inherited a similar algorithm 
[13:04:33] *** Joins: rsonx (~lost_leve@user/rsonx)
[13:04:36] <Decker> (developed/implemented?)
[13:04:44] <sonny> sure, but it just seems like a mistep after all this time
[13:05:06] <Decker> ?
[13:05:08] <sonny> it started in 2012
[13:05:22] <Decker> ya - pretty late in the web game
[13:05:51] <Decker> but it was like a giant leap over a performance canyon, not a misstep into it
[13:05:53] <sonny> they seem to be doing well, so it's ok
[13:08:03] *** Joins: lunarkitty (uid501895@user/pyra)
[13:08:12] <sonny> beaky: about time for another array programming craze
[13:08:52] *** Joins: kiryin (~kiryin@85-76-45-185-nat.elisa-mobile.fi)
[13:10:56] <sonny> <https://www.snellman.net/blog/archive/2017-09-04-lisp-numbers/> is an interesting read, I'd never considered the memory layout of a program before
[13:13:24] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[13:15:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:16:06] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[13:16:13] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:17:26] <Square> snellman ran a *very* successful web implementation of a board game called terra mystica. I believe it might have been superseded at this point. https://terra.snellman.net/ 
[13:17:27] <bayaz> Title: Online Terra Mystica 
[13:18:19] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[13:19:37] *** Sadale_ is now known as Sadale
[13:20:25] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:20:55] <|smlckz|> can you give me some examples of cases where an `there exists` operation is useful for a dataset with non-unique items [ some items apper more than once ]?
[13:23:24] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[13:24:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:24:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:25:40] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:26:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[13:27:51] *** Quits: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[13:31:56] *** Joins: rtypo (~alex@user/rtypo)
[13:35:20] <beaky> yes any optimization problem where there exists more than 1 optimal solution 
[13:36:11] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5d0b-8dcf-929e-eae2.res6.spectrum.com)
[13:36:48] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:42:28] *** Joins: rito_ (~rito_gh@45.112.243.206)
[13:46:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[13:46:59] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:47:01] *** Joins: mikrosis (~mikrosis@dynamic-046-114-175-218.46.114.pool.telefonica.de)
[13:47:17] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[13:47:50] *** Quits: password2 (~password8@user/password2) (Read error: Connection reset by peer)
[13:47:54] <GeDaMo> If your items are boolean, the result of some comparison, you might want to find out if any are true
[13:48:18] *** Joins: password2 (~password8@user/password2)
[13:49:01] *** Quits: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:51:47] <|smlckz|> give me some more examples
[13:52:13] *** Joins: bt-01 (~bt-01@49.207.0.191)
[13:55:28] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[13:56:46] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:57:55] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:58:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:00:30] <GeDaMo> Pfft! This isn't ##examples :P
[14:01:54] *** Joins: Satin (uid193953@user/Seten)
[14:02:11] <Satin> What are sites like https://projecteuler.net/ ?
[14:02:12] <bayaz> Title: About - Project Euler 
[14:02:32] <Satin> codewars has really shitty and unintersting challenges is all I have to say
[14:02:37] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[14:02:55] *** Joins: jokoon (~eio@2a01:e0a:542:e160:7942:f32c:e91b:7ebd)
[14:03:12] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7049:caaa:38a8:60ae)
[14:03:15] <GeDaMo> Project Euler is more about maths puzzles which can be solved with programs
[14:04:17] *** Quits: rsonx (~lost_leve@user/rsonx) (Ping timeout: 240 seconds)
[14:04:21] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[14:04:47] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:05:06] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:11c4:68db:ad36:c833) (Read error: Connection reset by peer)
[14:05:47] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com)
[14:06:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[14:06:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:07:33] *** Lord_of_Life_ is now known as Lord_of_Life
[14:07:51] <Satin> any other sites like it?
[14:08:10] <Satin> Or in general y'all have any preference for websites that have challenges, and aren't like, paywalled
[14:08:14] *** Joins: nocture (~textual@c-xd4ed87fa.cust.hiper.dk)
[14:09:32] <deniska> Satin: advent of code? :D
[14:09:48] <Satin> mmm yeah that exists. true.
[14:10:46] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:11:07] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:11:23] <GeDaMo> Leetcode?
[14:12:38] *** Joins: forbes-award (~forbes@180.241.128.211)
[14:13:10] * forbes-award anyone want to be awarded to be in forbes , come to efnet channel #holyhacker , By The Most High Lord Jesus Christ with skraito , https://facebook.com/worldhacker.org
[14:13:27] <Satin> leetcode is paid yeah?
[14:13:59] <Satin> ehhh this ... site UI
[14:14:11] * forbes-award anyone want to be awarded to be in forbes , come to efnet channel #holyhacker , By The Most High Lord Jesus Christ with skraito , https://facebook.com/worldhacker.org
[14:14:16] <Satin> forbes-award: stop spamming
[14:14:25] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:15:06] * forbes-award anyone want to be awarded to be in forbes , come to efnet channel #holyhacker , By The Most High Lord Jesus Christ with skraito , https://facebook.com/worldhacker.org
[14:15:09] *** Quits: forbes-award (~forbes@180.241.128.211) (K-Lined)
[14:15:19] *** Joins: mishugana (~mishugana@user/mishugana)
[14:15:22] <GeDaMo> Satin: ah, is it?
[14:15:38] <GeDaMo> I've only heard people mentioning it
[14:15:46] <Satin> I'm not 100% sure. I'm unwilling to sign up and see how much of the content is free.
[14:15:52] *** Joins: plastico (~plastico@neomutt/plastico)
[14:15:53] <Satin> It does seem they have "Leet premium" or something like that
[14:16:19] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:16:51] <Satin> Yeah it's on me mostly for being so picky. I just assumed something as clean/straightforward as ProjectEuler existed in general. codewars is pretty straightforward too but the challenges and such are very uninteresting rn
[14:17:43] * Satin imagines there's github pages out there with challenges as well that she just needs to dig for first?
[14:17:46] <Satin> time to search hackernews lol
[14:18:00] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[14:20:18] *** Joins: Lycurgus (~juan@98.4.112.204)
[14:20:59] *** Quits: nocture (~textual@c-xd4ed87fa.cust.hiper.dk) (Quit: nocture)
[14:21:42] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[14:21:46] *** Joins: tradar (~tradar@user/tradar)
[14:22:03] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:22:31] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:23:18] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[14:24:28] *** Joins: mishugana (~mishugana@user/mishugana)
[14:27:28] <Square> Start a project or join one and you'll get plenty of challenges 
[14:29:35] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[14:30:37] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.55)
[14:30:44] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:30:45] <Decker> so... say I wanted to post this article on rotation vectors on reddit; I'm at a loss for a good title
[14:31:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:31:49] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[14:32:00] <Decker> How do I condense several hundred words to a dozen; and which concepts do I omit entirely; do I sell it?  Post some feature I know is meaningful but would be lost without having already understood the link?
[14:32:18] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.43) (Ping timeout: 256 seconds)
[14:32:34] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[14:32:36] <GeDaMo> Care and feeding of rotation vectors :P
[14:33:44] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:33:58] <GeDaMo> Ten facts about rotation vectors: number 7 will astonish you!
[14:34:18] <Satin> found one https://www.codeabbey.com/index/task_list
[14:34:18] <GeDaMo> Rotation vectors ate my buick
[14:34:19] <bayaz> Title: Problems - CodeAbbey 
[14:34:39] <Satin> ofc it's inspired by project euler
[14:35:39] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[14:35:54] *** Quits: inomoz (~inomoz@176.59.115.245) (Remote host closed the connection)
[14:36:18] <Square> The celebrities, violence and sex of rotation vectors
[14:37:14] <GeDaMo> Rotation vectors now have an OnlyFans page!
[14:37:31] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[14:38:41] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:39:40] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[14:43:10] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Quit: ZNC 1.8.2 - https://znc.in)
[14:44:34] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:44:47] <Decker> :) nice GedaMo; I'm still stuck on 'not just for breakfast anymore'
[14:45:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:46:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[14:47:16] <GeDaMo> Leaked photos from the set of Rotation Vectors: The Movie
[14:47:25] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:47:30] <pyzozord> celebrity news style website for computer science
[14:48:09] <Satin> wth https://ibb.co/CWHK79F
[14:48:10] <bayaz> Title: unknown 
[14:48:10] <Decker> LOL that's really tempting
[14:48:45] *** Joins: gitgooood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:49:06] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[14:50:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:51:47] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[14:51:49] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:52:04] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:53:01] *** Quits: gitgooood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:53:51] <|smlckz|> Satin: have a look at this: https://cses.fi/problemset/
[14:55:07] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[14:55:36] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Read error: Connection reset by peer)
[14:56:55] *** Joins: cwiz89 (~cwiz89_@91.193.178.55)
[14:57:06] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:57:44] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[14:58:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:01:31] <smallville7123> is there a way to make this less complex? https://gist.github.com/mgood7123/a9413a2a5f7566b94458672962a38bd5
[15:01:31] <smallville7123> basically its job is to remove any power sources and adjacent power sources when a wire is removed if the power source is not emitting power to any other wires
[15:01:32] <bayaz> Title: RedstonePowerManagement.java 
[15:01:54] <Satin> |smlckz|: sweet. frickin great thank you. - real quick does this have a way to validate you're doing the right thing? any tests you have to run besides just the output given in the description? any solutions anywhere?
[15:02:04] *** Joins: rsonx (~lost_leve@user/rsonx)
[15:03:17] *** Joins: zer0bitz (~zer0bitz@196.244.192.60)
[15:04:45] <|smlckz|> if you make an account, you can submit solutions in a few languages, there will be tests within the variable ranges given in the question.. once you've solved, you can look at how others solved it there as well
[15:06:08] <Satin> I see, that sounds sufficient. 
[15:06:39] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:06:52] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:07:55] *** Joins: Trieste_ (T@user/pilgrim)
[15:08:25] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[15:08:38] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[15:09:08] *** Joins: d0mi7usl0l (uid512140@id-512140.tinside.irccloud.com)
[15:10:32] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:11:19] *** Joins: zaher (~zaher@37.48.186.4)
[15:11:20] *** Trieste_ is now known as Trieste
[15:13:33] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:f8e1:faf9:a983:9879) (Read error: Connection reset by peer)
[15:13:49] *** Joins: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[15:13:55] *** Joins: hans (~hans@36.84-48-255.nextgentel.com)
[15:14:14] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[15:14:50] *** Joins: inomoz (~inomoz@176.59.115.245)
[15:15:02] <hans> if you write `// (28*2)/5`  then Github CoPilot will suggest ` = 7.2` , https://i.imgur.com/FYBk8o9.png
[15:15:02] <bayaz> Type: image/png Size: 17.5 kB 
[15:15:20] <hans> (the answer is 11.2 )
[15:15:47] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:15:52] <GeDaMo> Pfft! It's a number, isn't it? :P
[15:16:02] <hans> yeah..
[15:16:09] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:16:18] <bjs> This is why I think we shouldn't be worried about AI taking over
[15:16:26] <hans> it got the number after the dot right at least
[15:16:28] <bjs> Can't even do basic arithmetic smh
[15:16:45] *** Joins: Twipply (~Twipply@user/twipply)
[15:18:12] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 256 seconds)
[15:18:21] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[15:18:22] <pyzozord> to be honest I don't think I would do any better than Github CoPilot here
[15:23:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[15:24:35] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:24:37] *** Quits: rsonx (~lost_leve@user/rsonx) (Ping timeout: 240 seconds)
[15:25:17] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:9cb7:a83b:fbd9:96fc)
[15:25:22] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:9cb7:a83b:fbd9:96fc) (Excess Flood)
[15:25:25] *** Quits: cwiz89 (~cwiz89_@91.193.178.55) (Ping timeout: 256 seconds)
[15:25:36] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[15:26:10] *** Joins: cwiz89 (~cwiz89@91.193.178.55)
[15:27:20] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:28:11] *** Quits: d0mi7usl0l (uid512140@id-512140.tinside.irccloud.com) ()
[15:28:16] *** Joins: migvie (~migvie@84.66.4.83)
[15:29:33] *** Joins: karett (~karet@dc7cnryyyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[15:31:13] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b498:475d:d454:963c) (Read error: Connection reset by peer)
[15:31:45] *** Quits: karett (~karet@dc7cnryyyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Client Quit)
[15:32:37] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:33:30] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:35:47] *** Joins: Atque (~Atque@user/atque)
[15:36:22] *** Joins: karet (~karet@dc7cnryyyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[15:36:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[15:37:54] <CuriousErnestBro> anyone else feel like we're already living in the metaverse
[15:37:59] <CuriousErnestBro> since about 2005
[15:38:24] <nomagno> That sounds completely arbitrary
[15:38:33] <nomagno> What does 'metaverse' even mean?
[15:39:15] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[15:39:27] <nomagno> We aren't living in a collection of virtual worlds.
[15:40:06] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[15:40:35] <CuriousErnestBro> human connection is mostly digital these days
[15:40:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[15:40:56] *** Joins: Trieste_ (T@user/pilgrim)
[15:41:01] *** Quits: jokoon (~eio@2a01:e0a:542:e160:7942:f32c:e91b:7ebd) (Quit: Leaving)
[15:41:08] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[15:41:51] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:44:18] *** Trieste_ is now known as Trieste
[15:46:34] *** Joins: magla (~gelignite@55d47b01.access.ecotel.net)
[15:47:20] <deniska> CuriousErnestBro: https://www.activeworlds.com/ we had that in 1995 :D
[15:47:44] <GeDaMo> VRML! :P
[15:49:56] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[15:50:05] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[15:50:21] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:50:21] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:51:03] *** Joins: xkuru (~xkuru@user/xkuru)
[15:52:40] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:53:24] *** Quits: fling (~fling@user/fling) (Read error: Connection reset by peer)
[15:53:49] *** Quits: migvie (~migvie@84.66.4.83) (Ping timeout: 240 seconds)
[15:54:17] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[15:57:18] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[15:57:50] *** Joins: fling (~fling@user/fling)
[15:58:06] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:03:43] <pyzozord> I think I actually want to buy another optic mouse
[16:04:09] <pyzozord> it never bothered me before but now it bothers me that it kind of "jumps" around a bit when I move it very slowly
[16:04:19] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[16:04:24] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[16:04:34] <Satin> anyone know any text editors more compatible with COLEMAK than Vim is?
[16:04:43] <pyzozord> any recommendations for cheap wired optical mouse?
[16:05:07] <GeDaMo> I have a Logitech M90
[16:05:32] <pyzozord> I have the same one!
[16:05:48] <deniska> pyzozord: I just get a whatever $5 mouse from any place which sells them when I need one
[16:05:56] <GeDaMo> If it's jumping around take a look at the mousemat or surface you're using it on
[16:06:05] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:06:06] <inhahe_> i just go to amazon and search for wired mouse and their featured one is pretty cheap
[16:06:15] <pyzozord> I don't know if it's drivers or if it got old or something, but when I move it slowly the cursor can jump as much as 2 pixels, and I want it to have sub pixel accuracy
[16:06:16] <deniska> this strategy kinda backfires with wireless mice, but cheapest wired were all fine
[16:06:21] <inhahe_> i think it's amazon brand iirc
[16:06:32] <GeDaMo> I had an older version of the same model and it was jumping around so I bought this one and it immediately started doing the same thing
[16:06:41] <pyzozord> but my m90 has been used so much that the logo is completely gone
[16:06:48] <GeDaMo> SO I got rid of the mat and used it on the desk and it's much better
[16:06:54] <pyzozord> i replaced the wheel in it, and the cable too
[16:07:21] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:07:25] <pyzozord> hmm I got a laminate desk, it's quite textured
[16:07:42] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[16:09:25] <pyzozord> sorry maybe my mouse is actually logitech b100? I can't quite tell
[16:09:58] <GeDaMo> Yeah, I think that was my old one
[16:10:10] *** Joins: constxd (~brad@142.134.38.68)
[16:10:37] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[16:10:52] <pyzozord> I'm thinking about Trust Mydo - Stille, its for €12,99
[16:10:58] *** Joins: hexingb_ (~hexingb@180.212.211.39)
[16:11:14] <pyzozord> oh but this one is wired and needs batteries, that's too bad
[16:11:20] <pyzozord> *wireless
[16:11:57] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[16:12:44] *** Joins: jaysicks (~jaysicks@fibhost-66-137-183.fibernet.hu)
[16:13:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:14:04] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:17:19] <pyzozord> not sure if you can tell from this recording but this is how it looks except in higher framerate https://imgur.com/a/22GERCq
[16:19:41] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7049:caaa:38a8:60ae) (Quit: Leaving...)
[16:20:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:21:51] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:22:55] *** Quits: hans (~hans@36.84-48-255.nextgentel.com) (Quit: Leaving)
[16:22:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:25:24] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[16:26:03] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[16:29:34] <pyzozord> I'm buying Trust Fyda , it's for €13 and it has up to 5000 dpi
[16:30:37] *** Quits: bt-01 (~bt-01@49.207.0.191) (Ping timeout: 240 seconds)
[16:30:52] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:31:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[16:31:39] *** Joins: mrig (~mrig@user/mrig)
[16:32:26] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[16:32:51] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:34:25] *** Joins: migvie (~migvie@84.66.4.83)
[16:37:22] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[16:37:27] <Inst> erm, could I have some advice?
[16:37:49] <pyzozord> no promises
[16:37:57] <Inst> I currently have "Purely Functional Data Structures" by Chris Okasaki, as well as "Algorithm Design with Haskell" by Richard Bird and Jeremy Gibbons
[16:38:34] <Inst> I realize that playing the Haskell / FP card when it comes to Data Structures and Algorithms is probably insufficient
[16:39:04] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:39:13] <Inst> what are standard and high-quality textbooks for imperative languages? I don't know Big O notation, among other things, and I'm pretty ignorant when it comes to data structures and algorithms.
[16:39:48] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:40:04] <bjs> Inst: Okasaki's book covers "purely functional" data structures, so you won't find hashtables or in-place sorting algorithms or things like that.  CLRS is the classic for that kind of stuff, but it's fairly technical and leans a lot on the analysis
[16:40:23] <Inst> CLRS, ummmm
[16:40:33] <bjs> Inst: the question is, do you *want* to learn Big O notation and to understand the analysis of the algorithms/data structures
[16:40:36] <Inst> here's the problem, it's an "algorithms book"
[16:40:37] <pyzozord> there is ofcourse TAOCP, the most classic one
[16:40:39] <Inst> yes
[16:40:39] <bjs> or do you just want a reference text that says lots of them
[16:40:42] <Inst> TAOCP?
[16:40:48] <bjs> Inst: what's wrong with an "algorithms book" ?
[16:40:54] <pyzozord> The Art Of Computer Programming by Don Knuth
[16:41:01] <Inst> bjs: two-in-one
[16:41:07] <bjs> Inst: I'm not following
[16:41:13] <Inst> are data structures and algorithms one topic or two? Or two topics that are intermeshed?
[16:41:16] <CaCode> How did you find your first customers for your feelance software development business?
[16:41:32] <bjs> Inst: well algorithms are operations on data structures
[16:41:53] <CaCode> Is freelancing the only way to achieve a big pay check ouside from going full entrepreneur or work for corporate?
[16:41:55] <Inst> Given the choice, I'd rather have an algorithms book and a data structures book.
[16:41:55] <pyzozord> if CLRS is too mathematical, The Algorithm Design Manual by Steven Skiena is a great alternative
[16:42:10] <CaCode> What made you switch from your corporate job to becoming a freelance?
[16:42:18] <bjs> Inst: CLRS talks about heaps (heapsort etc), stacks, queues and linked lists, hash tables, binary search trees and lots of algorithm techniques (divide and conquer, dynamic programming, greedy etc)
[16:42:26] <GeDaMo> Wirth wrote a book called Algorithms + Data Structures = Programs
[16:42:36] <bjs> Inst: the two aren't disparate topics, you can't really have a book that describes one without talking about the other in approximately equal detail
[16:42:38] <bjs> at least not sensibly
[16:43:04] <Inst> see, at least with the okasaki/bird pair, they seem separate
[16:43:09] *** Joins: czm233 (~czm233@2409:8a38:a623:cf1:90c:9ee3:80cf:2e49)
[16:43:10] <Inst> closer to yin yang separate
[16:43:17] <GeDaMo> Ah, here it is https://cdn.preterhuman.net/texts/math/Data_Structure_And_Algorithms/Algorithms%20and%20Data%20Structures%20-%20Niklaus%20Wirth.pdf
[16:43:18] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:43:18] <bayaz> Type: application/pdf Size: 1.3 MB 
[16:43:20] <Inst> as in, one leans more heavily on data structures, the other on algorithm design
[16:43:47] <Inst> so, basically, the advice is, don't try to bother with separate books, just get CLRS?
[16:44:04] <bjs> Inst: I mean okasaki's book is very short it doesn't cover *all* that much
[16:44:30] <bjs> Inst: well CLRS will cover more than you need,  it's less of a "how to design your own" book and more of a "here is a collection of data structures/algorithms and how they work and how to analyse them"
[16:44:51] <pyzozord> CLRS very recently got a new edition
[16:44:54] <Inst> basically, the goal is to have a sufficient understanding so i can evaluate whether it's viable, personally, to have a data structures and algorithms course built around haskell and c
[16:45:18] <bjs> Inst: well the overlap is not very big
[16:45:21] <Inst> of course i won't be competent to teach such
[16:45:47] <Inst> just, whether it's worthwhile to try to badger people to expand a prototype of a haskell course i'm working on
[16:46:08] <nomagno> Works well enough
[16:46:08] <nomagno> I currently have a wireless keyboard + touchpad
[16:46:11] <bjs> You can write persistent structures in C, but nobody does.  You have a lot of similar "looking" structures of course (list shaped things, tree shaped things, queue shaped things etc) but their implementations are very different
[16:46:37] <Inst> the point is the lack of overlap, methinks
[16:46:41] <bjs> Inst: what exactly is the haskell course?  Is it a course on "purely functional data structures" or something
[16:46:58] <Inst> intro to the language targeted at non-programmers
[16:47:02] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[16:47:05] <bjs> Inst: intro to Haskell ?
[16:47:06] <Inst> ya
[16:47:17] <bjs> Inst: then why would it talk about data structures and algorithms in C
[16:47:30] <bjs> given they don't overlap and the intended audience don't know what C is
[16:47:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:47:40] <Inst> the current version -> you get taught haskell instead of python
[16:47:49] *** Quits: migvie (~migvie@84.66.4.83) (Ping timeout: 240 seconds)
[16:47:55] <Inst> future version -> haskell for dummies / haskell for programmers, but I'd need help
[16:47:58] <Inst> other extensions:
[16:48:04] <bjs> Inst: okay, and you want to badger people to change it to not be haskell?
[16:48:07] <Inst> get taught haskell first, then c, then data structures
[16:48:13] <Inst> and algorithms
[16:48:18] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:48:44] <bjs> Inst: Haskell to C is uh, quite a leap I certainly wouldn't put them side-by-side in the same course especially not for new programmers like that
[16:48:57] <Inst> it's like two different courses, i mean
[16:49:00] <bjs> I see
[16:49:15] <mishugana> sounds comprehensive for beginners!
[16:49:33] <Inst> there's two goals, one, to see if haskell can be a replacement for python, given that you can do a lot of imperative / imperative-like programming in haskell in do-land
[16:49:57] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[16:49:58] <Inst> two, to see if haskell can be combined with c and data structures / algorithms to try to promote haskell in unis
[16:50:05] <bjs> Inst: I think you shouldn't be trying to teach and/or use Haskell in a "let's do imperative programming, but in Haskell using do notation" that's kind of a weird way to do it
[16:50:08] <Inst> i'm obv not qualified for the latter
[16:50:23] <bjs> Inst: no I think you're trying to shove Haskell into a place where other languages would be more appropriate
[16:50:30] <mishugana> Inst: Don't places like Australia make use of Haskell in unis already? Maybe learn from their experiences?
[16:50:50] <Inst> i own like 7 different intro haskell textbooks
[16:51:00] <bjs> Inst: if you want to teach imperative programming and ephemeral data structures then Haskell is not the place.  Teaching Haskell (or generally functional programming) and purely-functional/persistent data structures as a separate thing is a good idea
[16:51:03] <Inst> finished roughly 2, skimmed the rest
[16:51:04] <bjs> and you should do it
[16:51:06] *** Joins: mrig (~mrig@user/mrig)
[16:51:13] *** Joins: bt-01 (~bt-01@49.207.0.191)
[16:51:14] *** Quits: czm233 (~czm233@2409:8a38:a623:cf1:90c:9ee3:80cf:2e49) (Quit: Client closed)
[16:51:20] <Inst> bjs: I mean, i don't think I've explained properly
[16:51:30] <Inst> the issue with the textbooks is that it takes too long to make "real" programs
[16:51:43] <Inst> the idea is that you bootstrap someone to make "real" programs, then you teach them functional programming
[16:52:00] <bjs> Inst: bootstrap them how?
[16:52:08] <Inst> i.e, play around, learn program structure / design principles, style, etc, then go to functional programming as a natural outgrowth of pseudo-imperative programming
[16:52:17] <Inst> i.e, get, within 4 lessons, the ability to read / write files, parse, etc
[16:52:25] <mishugana> Why not the other way around? :D
[16:52:32] <Inst> because everyone does it the other way around
[16:52:39] <Inst> some people in Haskell community are interested in seeing how it'd go
[16:52:43] <xsperry> by strapping them to a boot
[16:52:47] <mishugana> and it works decently for what it's worth
[16:53:02] <bjs> Inst: functional really isn't a "natural outgrowth" of imperative though,  it sounds a bit confused
[16:53:03] <Inst> the idea is to get people to turn haskell into their primary language
[16:53:17] <mishugana> I think the biggest problem with Haskell teaching today is the lack of good intermediate books 
[16:53:18] <bjs> Inst: I've definitely seen people learn a functional language as their first language and it works just fine
[16:53:49] <bjs> but the problem has always been that learning one doesn't make it very much easier to learn the other until you have a lot of experience
[16:53:51] <Inst> bjs: the question is, whether they stay with haskell, there's lots of reports of people who get taught haskell as their first language, then they wander off to python or javascript or whatever
[16:53:56] <Inst> because there's a better ecosystem there
[16:54:02] <bjs> Inst: well yes, and that's... fine.
[16:54:16] <bjs> You can't make someone stay with a language for their career by a carefully planned intro to programming course
[16:54:26] <mishugana> Hey, anything will be better than teaching Haskell to African housewives, as Cardano is doing... heh
[16:54:27] <Inst> depends on context
[16:54:32] <Inst> with self-taught programmers, i.e, non-programmers
[16:54:38] <ProfSimm> Imperative and functional have a common root. Which would be... move-only semantics. Linear types.
[16:54:47] <Inst> they MIGHT end up being monolingual or functionally monolingual
[16:54:53] <Inst> that ends up getting you a community
[16:55:01] <ProfSimm> Think how do you make a single function that modifies by copy or in-place. Like sorting an array
[16:55:03] <Inst> i'm looking at what happened with python
[16:55:12] *** Quits: mrig (~mrig@user/mrig) (Client Quit)
[16:55:13] <Inst> used to be a niche no-name language, at least the last time I looked at it seriously
[16:55:27] <Inst> now it's higher on PyPl / TIOBE than C/C++ and Java
[16:55:27] <bjs> Inst: when was the last time you looked at it?
[16:55:34] <Inst> a decade or two ago
[16:55:51] <Inst> because Python prioritized being easy to learn and being taught to beginners
[16:55:51] <bjs> a decade ago it was certainly not "no name", two decades ago it was still really new :P
[16:56:01] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[16:56:03] <GeDaMo> Python is 30 years old
[16:56:08] <mishugana> As one of my ex-coworkers once said, the problem with Haskell is that there are too many things to do the same task ... :D
[16:56:12] <nomagno> Inst: self-taught = not?
[16:56:12] <nomagno> That was offensive
[16:56:14] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[16:56:22] <Inst> excuse me
[16:56:23] <nomagno> ... Not very offensive, but offensive
[16:56:25] <mishugana> Perl has the same problem too, but its complexity is way less
[16:56:27] <Inst> i misspoke
[16:56:36] <Inst> i meant that self-taught programmers, or amateurs, etc
[16:56:45] <bjs> GeDaMo: Python 2.0 was released in 2000 (ish?), nobody used Python < 2.0 really :P
[16:56:56] <Inst> i would be a self-taught programmer myself
[16:57:05] *** Joins: mrig (~mrig@user/mrig)
[16:57:11] <Inst> Haskell is the language that clicked for me, I tried attacking Stroustrup's Programming Principles and Practice on my own
[16:57:11] <nomagno> Ah, yeah, gotcha
[16:57:25] <Inst> have a bunch of other C++ books, learned a bit of BASIC as a kid (decades ago)
[16:57:37] <Inst> so I'm wondering, if I'm in love with Haskell, why not other non-programmers?
[16:57:42] <nomagno> I'm honestly very weak on algorithms
[16:57:45] <bjs> Inst: I think it's unlikely that one magic bullet course would be what makes people stick with Haskell
[16:57:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:57:58] <Inst> bjs: it's an experiment
[16:58:09] <Inst> i.e, develop better pedagogy, then deploy marketing
[16:58:15] <bjs> Inst: people will eventually (and actually usually, fairly quickly) learn a bunch of different languages and then will use whatever tool is most appropriate
[16:58:23] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[16:58:55] <mishugana> There's not much hope of improvement until the Haskell community responds to users' build issues in a positive way instead of saying "Cabal and stack are fine, you are the problem. Now go do binary search on your transitive dependencies and find the problem"
[16:59:02] <mishugana> (only half-joking)
[16:59:08] <Inst> tbh my attitude toward functional programming is,
[16:59:11] <bjs> Inst: Efforts are better spent in trying to make the Haskell ecosystem more approachable and stronger
[16:59:13] <Inst> functional programming should be everyone
[16:59:20] <Inst> yeah, but that's not within my skillset
[16:59:22] <Inst> this is
[16:59:32] <Inst> FP should be for everyone
[16:59:36] <bjs> Inst: i think that's a fairly narrow view of the world, that everything should fall under one umbrella 
[16:59:37] <Inst> it's imperative programming that should be hard
[16:59:39] <jackson99> mishugana, it sounds like your friend bought the pythonic nonsense.. despite the fact that there are many ways to accomplish many tasks in python.. take string formatting for one
[16:59:48] <CaCode> Why do you like FP over OOP?
[16:59:55] <Inst> easier to reason with, easier to understand
[16:59:55] <bjs> Inst: It's just one approach of many.
[17:00:01] <ProfSimm> Inst: what's the point of saying "what's hard should be easy and what's easy should be hard". It's like denial.
[17:00:13] <mishugana> jackson99: Not really ... the complexity is way different
[17:00:20] <ProfSimm> Inst: I think it should be studied why things are easy or hard
[17:00:34] <Inst> erm, let me try to restate
[17:00:41] <mishugana> Someone could make do with learning functors, or applicatives, or even monads for the same task, for instance. That's way more complicated than learning different formatters in python
[17:00:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:00:48] <jackson99> I am not talking about complexity, but about "there is only way one to do things" mantra
[17:00:49] <Inst> for the average programmer, and the average quality of code, they'd be better off in an FP paradigm
[17:00:54] <Inst> where their code is less likely to be problematic
[17:01:08] <Inst> for the best programmers, they should be doing imperative programming at high levels because imperative programming is hard
[17:01:12] <mishugana> That's why, in my experience, a lot of people quit when they finish a couple of textbooks, and find that they cannot read and understand even a simple Haskell project's code!
[17:01:24] <ProfSimm> Inst: what if we need to include complexity in the function of what it means to be problematic. 
[17:01:33] <ProfSimm> Inst: FP trades one set of problems for another.
[17:01:45] <Inst> difficulty of grasping abstractions
[17:01:48] <bjs> Inst: that doesn't really make much sense, FP is really "a way of solving problems", which paradigm you use should be determined by what problems you are solving and how you think about those solutions
[17:01:57] <bjs> It's not really about easy/hard.
[17:02:13] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:02:19] *** Joins: zaher_ (~zaher@37.48.185.152)
[17:03:01] <Inst> we'd agree that FP has major performance issues, right?
[17:03:06] <bjs> Inst: no
[17:03:19] <mishugana> FP has major complexity issues :D
[17:03:26] <ProfSimm> I think one key issue programming keeps dealing with is that it doesn't reflect reality properly. You can't pass values by copy in the real world. You can't reference a mutable object from multiple handlers at once either. Both of those are shortcuts that trade correctness for convenience
[17:03:42] <ProfSimm> In the real world you move things. 
[17:04:00] <ProfSimm> They can only move. Not be referenced, or implicitly copied. You can explicitly copy it, but that's explicit.
[17:04:03] *** Joins: aqua (~aqua@user/aqua)
[17:04:07] <Inst> tbh, i guess i'll make you all lose interest in me quickly
[17:04:10] <mishugana> or even the fact that the core number of concepts one needs to learn to use imperative programming is relatively small...
[17:04:10] *** Quits: zaher (~zaher@37.48.186.4) (Ping timeout: 256 seconds)
[17:04:18] <bjs> Inst: the classic counter example is that Facebook switched to use FP for their spam filtering, and got a performance boost from it.
[17:04:20] *** Quits: aqua (~aqua@user/aqua) (Remote host closed the connection)
[17:04:21] <Inst> I'm looking for a "monad 'not-tutorial'"
[17:04:28] <Inst> because of parallelism benefits
[17:04:35] <ProfSimm> I've read an article saying "the future of imperative programming is linear types"
[17:04:35] <bjs> Inst: parallelism benefits?
[17:04:40] *** Joins: aqua (~aqua@user/aqua)
[17:04:45] <ProfSimm> And I agree, because linear types subsume both FP and OOP.
[17:04:57] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:05:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:05:01] <jackson99> plenty of core concepts in OOP that you have to learn, people just forget about after picking up 5th OOP language
[17:05:03] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[17:05:05] <mishugana> ProfSimm: linear types are cool ... sadly, in Haskell (and in Idris), they're not really for performance but for correctness AFAICT
[17:05:18] <mishugana> languages like ATS make use of linear types for performance as well!
[17:05:19] <Inst> FP, since it has carefully managed state / reduced state, parallelizes better than traditional imperative programming languages
[17:05:32] <bjs> Inst: people always say that
[17:05:53] <Inst> that's what i'm assuming happened with facebook
[17:06:19] <ProfSimm> mishugana: in Haskell though everything is immutable which is not where linear types shine. The key point is that if a value has a single owner, that owner is free to mutate them. Or am I wrong, I don't know Haskell well enough
[17:06:21] <mishugana> I think Facebook's interest in Haskell was more due to Marlow et al than anything else... just like with Dlang and Andrei
[17:06:34] <Inst> regarding abstractions, i guess, it's my money, i'm paying for guinea pigs
[17:06:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[17:06:51] <Inst> i'm looking to see if we can teach the abstractions in an easier way
[17:06:55] <bjs> Inst: it's not what happened,  and in general you'll find that there are no automatic parallelisation optimizations in e.g. Haskell
[17:07:02] <mishugana> ProfSimm: No, conceptually you're absolutely right, but theoretically, linear types could improve perf in Haskell as well ... scope their lifetimes, reduce gc etc. Just not done right now AFAIK
[17:07:12] <bjs> Inst: even though it's so "obvious" as an optimization in FP
[17:07:15] *** aqua is now known as kish`
[17:07:18] <Inst> iuc there are monads to enable parallelism?
[17:07:22] <ProfSimm> mishugana: they can improve performance, sure. But also so much more
[17:07:24] <mishugana> s/reduce/improve
[17:07:40] <ProfSimm> mishugana: I feel like every programming language should start with move-only semantics and build everything else on top of that
[17:07:42] <bjs> Inst: I mean, you're grasping onto the word "monad" very strongly there.  If you mean, Haskell has threads. Then yes
[17:07:53] <mishugana> ProfSimm: Interesting viewpoint!
[17:08:16] <ProfSimm> mishugana: it might be a big shift, I mean I'm unsure what variable bindings would be like... declaring it... is setting it.. and reading it... is undeclaring it...
[17:08:21] <jackson99> "has threads" is underselling haskell a bit. I mean even python has threads
[17:08:40] <mishugana> native threads though
[17:08:58] <Inst> http://www.cs.columbia.edu/~sedwards/classes/2019/4995-fall/laziness.pdf
[17:08:59] <bayaz> Type: application/pdf Size: 1.8 MB 
[17:09:01] <bjs> Inst: the Par monad (which I guess is the thing you are referring to) was a library written by Simon Marlow (the guy at Facebook).
[17:09:23] <Inst> iirc he's like GHC steering committee?
[17:09:25] *** Quits: bt-01 (~bt-01@49.207.0.191) (Ping timeout: 240 seconds)
[17:09:27] <mishugana> ProfSimm: Seems a bit too restrictive? Opt-in for primitive types, I presume?
[17:10:19] *** Joins: legit (petru@2a03:b0c0:3:f0::60:1000)
[17:10:42] *** Joins: panda (~panda@102-65-58-8.ftth.web.africa)
[17:10:43] <ProfSimm> mishugana: I think one needs to brainstorm how everything can be move-only, and build convenience for primitive types on top of that (which internally can then be optimized for the CPU), before we start carving out exceptions, because if we do, we don't really think through how this paradigm would work
[17:11:25] <ProfSimm> mishugana: the FP vs imperative dichotomy has a set of concepts that are deeply ingrained in us, and we need to unlearn it all before we re-learn it in a new way
[17:11:28] <mishugana> yes, that last part is important indeed. A lot of confusion in Rust (for beginners) is how Copy types work differently, for instance
[17:11:44] <Inst> could you entertain me a bit more?
[17:11:49] *** Quits: xff0x (~xff0x@2001:1a81:52d4:9900:80b8:248c:472c:34e) (Ping timeout: 240 seconds)
[17:11:49] <Inst> re mishugana
[17:12:01] <Inst> what do you mean by major complexity issues?
[17:12:02] <mishugana> ProfSimm: The machine ultimately dictates it though, doesn't it? So long as we have the Von Neumann architecture...?
[17:12:06] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:12:22] <mishugana> we could conceptualise differently, but there would always be an impedance mismatch
[17:12:53] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:12:54] <ProfSimm> mishugana: it depends how deep down the rabbit hole we go. All machines we ever built, and probably will ever build, are actually moving current through wires. "Moving" being the keyword.
[17:12:54] *** Joins: xff0x (~xff0x@2001:1a81:52d4:9900:4d46:915d:4480:7a51)
[17:13:07] <mishugana> Inst: I mean, comparatively speaking, someone can learn all the core moving parts of Python (for real world projects) than they could dream of in Haskell
[17:13:11] <ProfSimm> mishugana: we use electricity like a mechanical force, like little balls going through pipes
[17:13:21] <mishugana> A bit meta!
[17:13:27] <Inst> one of the problems for me
[17:13:33] <Inst> is that the prelude is outdated as all hell
[17:13:40] <Inst> and even studying the prelude is tough
[17:13:45] <mishugana> and yet all the tutorials harp on it! 
[17:13:46] <ProfSimm> mishugana: meta, but actually in a way we're going back to the root of how things work in our universe
[17:13:59] <mishugana> True
[17:13:59] <Inst> it seems people in production have moved onto custom preludes
[17:14:30] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[17:14:33] <Inst> i get the feeling i'd end up having to deal with another dozen abstractions... what the hell are lenses?
[17:14:40] <mishugana> hahaha
[17:14:47] <ProfSimm> mishugana: there's in fact impedance mismatch between the abstraction a CPU models after, and how it works internally. What if we remove that impedance mismatch in both our languages, and in CPU design? We might kill two birds with one stone
[17:15:17] <bjs> Inst: the Par monad is just a nice little library that has some threads in it.  Lenses are just getter/setter functions.  I mean these things aren't that exotic, they're just a different colour of paint :)
[17:15:18] <GeDaMo> Write your program in NAND gates! :P
[17:15:25] <mishugana> ProfSimm: So the latter part is what fascinates me as well ... the hardware ... basically unchanged since genesis... what alternatives do we really have?
[17:15:27] <ProfSimm> mishugana: for example the concept of "boolean" makes no sense within a CPU. It's just a branch. It goes one way or another way. There's no "true and false"
[17:15:30] <bjs> Inst: a different way of looking at things
[17:15:44] <deniska> mishugana: hardware did change a lot, but it pretends it didn't
[17:15:45] <Inst> bjs: to me, it sounds like "a monad is just a monoid in the category of endofunctors, what's the problem"?
[17:15:54] <bjs> Inst: what is "it"?
[17:16:03] <deniska> ProfSimm: well, no successful VLIW architecture yet
[17:16:04] <Inst> your lens explanation
[17:16:08] <bjs> Inst: I think you have fallen into the trap of thinking the word "Monad" means anything
[17:16:18] <Inst> it means gatekeeping
[17:16:26] <Inst> around an arbitrary badly taught concept
[17:16:33] <Inst> that's better taught outside haskell than inside it
[17:16:39] <mishugana> deniska: yes, but the conceptual model is still the same, isn't it?
[17:16:46] <Inst> :)
[17:16:52] <bjs> Inst: monad is a terrible name for that interface, I've always thought so. People try attach too much meaning to the word
[17:16:53] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[17:17:07] <Inst> is monad rage a thing after you "get" monads?
[17:17:11] <ProfSimm> deniska: I don't think that's the issue. We're discussing things in the context of making "move semantics" the core action of how information moves in a machine, because technically it is how it moves in the hardware
[17:17:14] <mishugana> ProfSimm: But booleans do map nicely to voltages, don't they? I mean, low and high ...
[17:17:17] <GeDaMo> https://en.wikichip.org/w/images/7/7e/skylake_block_diagram.svg
[17:17:17] <bjs> Inst: monad rage?
[17:17:17] <bayaz> Type: image/svg+xml 
[17:17:19] <Inst> as opposed to monad tutorial fallacy
[17:17:27] <Inst> perhaps it's a part of monad tutorial fallacy
[17:17:32] <ProfSimm> mishugana: I don't think booleans map to voltages
[17:17:34] <bjs> Inst: I'm not sure what you're trying to say
[17:17:47] <ProfSimm> mishugana: in assembler there are just branching instructions.
[17:17:47] <deniska> mishugana: the programming model didn't change too much, but the internals did, and if you want to benefit from hardware changes, you have to be aware about these changes
[17:17:53] <Inst> well, typically, after people think they've gotten monads, they want to write a monad tutorial (that's based on partial understandings)
[17:18:06] <Inst> the current best practice is just "keep working with monads, and avoid the tutorials"
[17:18:09] <mishugana> deniska: true that 
[17:18:11] <CaCode> https://www.youtube.com/watch?v=SbO0tqH8f5I
[17:18:13] <bayaz> Title: [Minecraft Computer Engineering] - Quad-Core Redstone Computer v5.0 [12k sub special!] 
[17:18:21] <Inst> monad rage -> similar to monad tutorial fallacy
[17:18:28] <Inst> in the sense that you get or think you get monads
[17:18:35] <mrig> monad rage, heh rofl here!
[17:18:35] <Inst> and are angry at how badly the concept seems to be taught
[17:18:39] <bjs> Inst: it's all a mess, the only reason we're having this conversation is that the typeclass was named "Monad"
[17:18:42] <CaCode> the power of nand gates
[17:18:43] <Inst> it's a typeclass
[17:18:46] <Inst> yeah
[17:18:47] <Inst> thank you
[17:18:49] <bjs> Inst: if it were named something else, nobody would care
[17:18:50] <mishugana> deniska: That also makes me wonder how good it actually is to depend on specifics like that - reminds me of how some old video games cannot actually run today because of the speed mismatch because those games relied too much of hardware specifics
[17:18:52] <Inst> we agree very much there, it's a branding disaster
[17:19:06] <mishugana> ProfSimm: In the circuitry though, it does, doesn't it? Low -> false, High -> true
[17:19:10] <Inst> i love how Richard Bird says "don't look too much into the monad name, it's named after Leibnizian monads"
[17:19:14] <Inst> since he knows better
[17:19:17] <bjs> Inst: it's an important typeclass and that has a lot of generalisation and the name makes sense (if you know what it means) but if you don't the name is an unncessary barrier.
[17:19:19] <Inst> and is white-lying to the reader
[17:19:27] <mishugana> I mean, we could have a decimal machine, but then we wouldn't be able to use Boolean logic to simplify things (though the circuitry would actually reduce)
[17:19:31] <Inst> the thing that annoys me is that i discovered that function types can be a monad
[17:19:35] <bjs> and I argue strongly for ignoring the name, and just focusing on what the data structure/library is actually doing
[17:19:45] <Inst> using the bartoz whatever "it's a container" metaphor
[17:19:46] <bjs> and every now and again being surprised that the same syntax works for two different objects
[17:19:53] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:20:04] <Inst> was working very well for me, i.e, in Haskell, you use type constructors to contain values quite often
[17:20:05] <mishugana> mrig: My favourite is Crockford's "Monads and Gonads" talk .. .hahahaha
[17:20:19] <ProfSimm> mishugana: I don't know enough about the exact physics of voltages in a CPU, but the gate that is being modeled is like a train being directed to one set of tracks or another set of tracks, that branch
[17:20:20] <mishugana> Too bad PC would not allow such titles today
[17:20:22] <Inst> functor / applicative / monad are just machinery for dealing with contained types
[17:20:33] <Inst> but function types are a strong counterpoint
[17:20:38] <Inst> you can define FAM instances for functions
[17:20:41] <ProfSimm> mishugana: so the voltage stays the same in a way, it just travels across a different path (branch)
[17:20:42] <mishugana> ProfSimm: yes, and what are the rules dictating those? :D
[17:20:44] <bjs> Inst: they are just interfaces for some generic operations over "container"-like things, if you think of it that way then you will be fine
[17:20:59] <Inst> bjs: yeah, that's the way I think of them, and that's the way I want to implement a "non-tutorial"
[17:21:07] <Inst> "stfu about monads, gonads, my ass!"
[17:21:10] <bjs> there are other ways of thinking about the interfaces which are equally fine, and that's why people get confused because it's hypergeneral
[17:21:10] <mrig> mishugana: :) bookmarked, thank you for the pointer!
[17:21:16] <Inst> "here's some papers on the sociology of Haskell monads"
[17:21:16] <deniska> mishugana: that's a bit of a different issue, the only good way to efficiently have precise pauses on the old machines was to count CPU cycles, and once computers are fast enough, these procedures overflow the counter used
[17:21:19] <Inst> because they exist
[17:21:21] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:21:21] <mishugana> mrig: hahahah :D
[17:21:31] <Inst> the conclusion of one paper is that it became a rite of passage as in anthropology
[17:21:45] <Inst> as well as a form of gatekeeping
[17:21:50] <mishugana> deniska: yes, exactly, but that is also reliance on hardware internals
[17:21:57] <deniska> mishugana: the funky way you had to read joystick port on IBM PC didn't help much :)
[17:22:07] <ProfSimm> mishugana: well there are various ways to close and open pathways in circuitry. In a way it does come down to "voltage" or "no voltage", but it's more like... directing the voltage different paths, less so about the result of a boolean operation being encoded as votlage or no voltage
[17:22:10] <Inst> then, explain it via monads being a typeclass that implement bind
[17:22:10] <bjs> Inst: only if the person teaching wants it to be,  there's no reason to even mention the word Monad in a Intro to Haskell course, there's no reason to gatekeep on that word at all
[17:22:16] <mishugana> imagine today's software that relies on similar tricks for current hardware... and in the future?
[17:22:18] <bjs> just ignore the word and move on has been my stance forever
[17:22:32] <Inst> there is a reason
[17:22:43] <Inst> because my students should be well-informed and someone is going to talk to them about monads
[17:22:44] <Inst> hahahaha
[17:22:47] <Inst> monads are now birds and bees
[17:22:53] <Inst> talk to your kids about them before someone else does
[17:22:53] <deniska> mishugana: I'm talking different kind of stuff. Like LEA might be more effective than binary shift for quickly multiplying numbers by 2 on many modern CPUs
[17:23:03] <deniska> mishugana: but the end arithmetic result is still the same
[17:23:28] <deniska> mishugana: we just use an instruction which is slightly more efficient on CPUs which are more commonplace, but it won't suddenly stop working in some future CPU
[17:23:35] <deniska> just might be not at the efficiency cap anymore
[17:23:49] <mishugana> deniska: no, no, it's the same thing, isn't it? Imagine you have a high-perf software which relies on the availability of L1, L2 etc. When the model changes, that will impact performance, won't it?
[17:23:55] *** Quits: jdmark (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[17:24:05] <constxd> FP is just cope
[17:24:15] *** Joins: bt-01 (~bt-01@49.207.0.191)
[17:24:20] <mishugana> Stuff that games do a lot - like Data-Oriented designs to take advantage of cache lines, for example
[17:24:20] <deniska> mishugana: more efficient program might be possible, but the old one won't just stop functioning
[17:24:24] <ProfSimm> mishugana: I should expand a bit on the move-only semantics. If a value is mutable, it can be "frozen" to become immutable (or it can be constructed immutable directly). Immutable values can implement their copy constructor by returning themselves, hence, this is where FP and primitives get an escape hatch to not be too cumbersome in use
[17:24:45] <mishugana> Yes, not stop functioning, but suffer in different ways only because they're tied to some intenals
[17:25:12] <mishugana> ProfSimm: Sounds a wee bit like Pony's Capabilities system (?)
[17:25:24] <deniska> mishugana: if you make a new CPU targeting existing programs though, you won't make a new one which performs too much worse with them
[17:25:39] <deniska> otherwise nobody would buy it
[17:25:42] <mishugana> Like where you can mark objects as being immutable, shareable etc.
[17:25:43] <Inst> wait
[17:25:50] <constxd> writing fizzbuzz in an imperative language is too easy so it doesn't feel like an accomplishment. writing fizzbuzz in Idris makes you feel like an intellectual so people hamstring themselves with category theory in order to feel better about the mediocre software they're writing
[17:25:57] <ProfSimm> mishugana: I'll check it out thanks
[17:26:02] <constxd> just cringe
[17:26:30] <ProfSimm> mishugana: the difference is that in this model there's just one capability: mutable or not. And once it's immutable, it's shareable, but you can't revert the mutation flag
[17:26:38] <ProfSimm> mishugana: it's a single capability model :P
[17:26:54] <constxd> muh hindley-milner types, muh immutable data structures. cope.
[17:26:55] <mishugana> ProfSimm: yeah, the language is dead today, but the concepts are interesting nontheless. Project Verona (by Microsoft) has the creator, Sylvan Clebsch on its team - they're also doing something similar, but mostly inspired by Rust (region-based)
[17:27:02] <mishugana> ProfSimm: hahaha
[17:27:20] <mishugana> constxd: lmao
[17:27:23] <mishugana> but sadly true
[17:27:50] <mishugana> I stopped learning Idris when I reached theorem proving ... then I realised why dependent types (in full glory) is not really feasible for day to day tasks
[17:28:23] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[17:28:42] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:28:55] <ProfSimm> Consider the dichotomy of   sorted = sorted-copy(array)  vs.   sort-in-place(array);  In a move/copy model, this becomes the SAME FUNCTION:    array = sort(array) <-- in place    array2 = sort(array.copy()); <-- sorted copy
[17:29:26] *** Joins: src (~src@user/src)
[17:29:29] <mishugana> deniska: again true, but sort of orthogonal to the dependency bit ... and in many ways, assembly being considered a HLL is a bit alarming - nothing is certain anymore. Hell, I saw a talk where someon claimed that microcode, the level below assembly, is an HLL!
[17:29:37] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[17:30:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:54] <ProfSimm> And this is often one of the things differentiating OOP/imperative from FP. And they're considered incompatible. So this paradigm makes them the same thing
[17:31:07] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:32:13] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:32:27] *** Quits: Trieste (T@user/pilgrim) (Read error: Connection reset by peer)
[17:34:16] <mishugana> ProfSimm: That last bit sounds like how Rust works today? If you have something that's immutable, it stays that way, including any references to it (well, in general), but if it's mutable, you can stil constain it via references.
[17:34:57] <ProfSimm> mishugana: it has similarities, but it's not exactly the same because constraining it via reference is not a final action
[17:35:22] <mishugana> No, I mean ... the constraining bit is only for mutable data...
[17:35:26] <deniska> mishugana: microcode isn't some sort of language, it's mostly more of… a configuration matrix of sort
[17:35:27] <ProfSimm> mishugana: it's appealing to be able to borrow things read/write and so on
[17:35:33] <ProfSimm> mishugana: but also adds a lot of complexity
[17:35:44] <deniska> mishugana: like you can't put a microcode update to change x86 into arm :)
[17:35:58] <ProfSimm> mishugana: it's simpler to say: well you can freely reference an immutable thing, and you can never EVER share a thing that may mutate. 
[17:36:06] <deniska> mishugana: but you can turn off instructions and features which turned out to be problematic
[17:36:23] *** Quits: bt-01 (~bt-01@49.207.0.191) (Remote host closed the connection)
[17:36:41] *** Joins: bt-01 (~bt-01@49.207.0.191)
[17:36:52] *** Joins: Trieste (T@user/pilgrim)
[17:36:59] <mishugana> ProfSimm: So immutable stuff would always be copied over when being passed? (either the data, or via a pointer)
[17:37:03] <ProfSimm> mishugana: I also keep thinking about borrow semantics. It's handy at first, but borrow implies a mechanism for automatically returning the reference, which is again too implicit
[17:37:49] <mishugana> yes, that's where lifetimes come into the picture, and it's not remotely easy
[17:37:54] <ProfSimm> mishugana: for immutable data the copy constructor would be "return this" if you know what I mean
[17:38:10] <ProfSimm> mishugana: semantically they're copied, but they can be structurally shared
[17:38:13] <jackson99> constxd, huh, you don't need tp jave any knowledge of category theory to write fizzbuzz in idris
[17:38:19] <ProfSimm> mishugana: and primitives would copy anyway because it's simpler
[17:38:24] *** Joins: Sumao (~Sumao@88.246.79.235)
[17:38:52] *** Joins: jdmark (~jdmark@user/jdmark)
[17:38:53] <ProfSimm> mishugana: also when you copy a frozen value, the copy is unfrozen
[17:39:07] <mishugana> sounds a lot like clojure
[17:39:08] <mishugana> :D
[17:39:11] <ProfSimm> Does it
[17:39:14] <ProfSimm> Interesting
[17:39:15] *** Quits: Sumao (~Sumao@88.246.79.235) (Client Quit)
[17:39:23] <mishugana> structural sharing, immutable by default, constrained mutation
[17:39:31] <ProfSimm> Well I'm not immutable by default though.
[17:39:33] *** Joins: Intelo (~Intelo@88.246.79.235)
[17:39:45] <ProfSimm> I think it sounds similar to other languages, because I'm trying to cover them all but keep it simple
[17:39:58] <mishugana> but effectively it's the same, isn't it? mutable cannot be shared, immutable can be.... right?
[17:40:03] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:40:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:40:32] <ProfSimm> mishugana: sure but when you create a value, it's either mutable or immutable (frozen), mutable ones can be frozen, and copying a frozen value makes a mutable (unfrozen copy), which again can be frozen later
[17:40:52] <ProfSimm> mishugana: so you have this window of mutability at "birth"
[17:41:00] <ProfSimm> That is locked later on, and you can share the thing
[17:41:38] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:41:53] <ProfSimm> For side-effects there would need to be also mutable values that can't be frozen. I.e. I/O handles, sockets.
[17:42:03] <ProfSimm> So they can only be moved, never shared
[17:42:55] <mishugana> Right, so assuming this model, how does it resolve the conflict between imperative and FP (or does it at all?) - it's still imperative, isn't it?
[17:43:27] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:44:41] <mishugana> Also imagine you have a mutable object in the middle of being mutated, and you try to create a shared out of it ... that seems problematic as well ... locking? If you had defult immutability, and went the other way, this would be simpler, no?
[17:44:49] *** Quits: kiryin (~kiryin@85-76-45-185-nat.elisa-mobile.fi) (Ping timeout: 256 seconds)
[17:44:52] <mishugana> s/shared/frozen
[17:44:59] *** Joins: kiryin_ (~kiryin@85-76-100-129-nat.elisa-mobile.fi)
[17:45:06] <ProfSimm> mishugana: well you can see it as both. It's a referentially transparent form of imperative programming.
[17:45:22] <mishugana> right
[17:45:31] <ProfSimm> mishugana: notice the sort() example above works both in-place, and by-copy. Former would be how you do it imperatively, latter how you do it functionally.
[17:45:46] <ProfSimm> It's nice to have a library that you can use two ways at will.
[17:45:54] <ProfSimm> Instead of having to write each function twice
[17:45:59] <mishugana> which sort?
[17:46:05] <mishugana> Did I miss a link?
[17:46:09] <jackson99> it is unusable for many problems though. say we have two threads, consumer and producer. you can't freeze it, because you constantly update it
[17:46:17] <ProfSimm> "<ProfSimm> Consider the dichotomy of   sorted = sorted-copy(array)  vs.   sort-in-place(array);  In a move/copy model, this becomes the SAME FUNCTION:    array = sort(array) <-- in place    array2 = sort(array.copy()); <-- sorted copy"
[17:46:21] <mishugana> jackson99: yes, exactly my point
[17:46:40] <mishugana> the reverse is easier since immutable guarantees no mutation, and then you can mutate the copy to your heart's delight
[17:46:59] <ProfSimm> jackson99: I have a solution for this. But it requires more elaboration
[17:47:13] <ProfSimm> jackson99: modeling a queue is a useful example
[17:48:08] <mishugana> ProfSimm: I don't get how that sort could be done without mutation (aka Haskell-style FP)? or do you mean effectively so?
[17:48:33] <ProfSimm> mishugana: if you pass a copy and assign it as copy, it's done without *visible* mutation.
[17:48:39] <mishugana> I mean with mutation .. using the same code
[17:48:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:48:58] <ProfSimm> mishugana: mutation isn't bad in itself, it's how things occur underneath anyway
[17:49:07] <ProfSimm> mishugana: it's bad when it's shared mutable state
[17:49:42] <mishugana> right ... but again, while doing `array.copy`, you would still have contention
[17:49:48] <ProfSimm> mishugana: this sort function avoids enabling shared mutable state, while preserving in-place mutation for performance
[17:49:49] <mishugana> with multiple threads 
[17:50:05] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[17:50:17] <ProfSimm> mishugana: where would the contention be
[17:50:44] <mishugana> `array.copy` ... during the creation of the copy ... while the same object is being modified from another thread
[17:51:01] <ProfSimm> mishugana: well how would it be modified, there's only a single mutable reference at a time
[17:51:15] <ProfSimm> mishugana: sorry I'm not following I think
[17:51:16] <mishugana> Oh, you didn't mention that? :D
[17:51:30] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[17:51:43] <ProfSimm> Oh well that's what I meant by move semantics/linear type. 
[17:51:57] <ProfSimm> Mutable values can only be moved i.e. linear types i.e. one single mutable reference
[17:52:12] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:52:15] <mishugana> Hahaha.. .okay, I thought it was a different thread ... didn't realise you were continuing that line of thought ... sorry!
[17:52:32] <ProfSimm> Ah yeah it's the same model
[17:53:46] <mishugana> So in this model, `array` would own the array object and have to use it exactly once, right?
[17:53:59] <mishugana> of maybe use it 0 or 1 time(s)
[17:54:26] <mishugana> Hmmm... I think  lot will depend on the implementation
[17:54:41] <ProfSimm> mishugana: yes.  "array = sort(array)" <-- what happens is the array var gets "used" when you pass the array into sort, and becomes undefined. Then the assignment defines it again
[17:54:49] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:54:51] <mishugana> In Idris, for instance, simply referring to the variable counts as a usage (IIRC), which might be problematic in `sort`'s implementation, say
[17:54:57] <ProfSimm> mishugana: so with proper compiler optimization that reference never moves, it works like Rust borrow
[17:55:23] <mishugana> right ... that's from the client's perspective ... internally within sort, where you have to refer to `array` multiple times?
[17:55:48] <mrig> does the io monad come from a jovian moon?
[17:55:51] <mishugana> whilst mutating parts of it that is
[17:55:58] <mishugana> mrig: :D
[17:57:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:57:43] <ProfSimm> mishugana: operating on structures is a bit fuzzy. I have some ideas about obtaining a "cursor" and you work through the cursor. The cursor can't move out of a scope, it's local-only. A queue would have two cursors: read and write. So coordination between threads can happen
[17:57:54] <ProfSimm> mishugana: but yeah, for sure it won't be easy to figure it out
[17:58:06] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[17:58:18] *** Joins: Auron (~Auron956@user/auron)
[17:58:53] <mishugana> Indeed ... I think a lot of complexity will be in the system that orchestrates the whole thing so that the client experience can be as ergonomic as possible. Still, some interesting ideas there! Definitely worth investigating deeper.
[17:58:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:58:57] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[17:59:25] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[17:59:38] <mishugana> ProfSimm: Do share more when you have more details ... :)
[17:59:43] <ProfSimm> mishugana: :)
[17:59:49] <mishugana> gotta go now, but that was fun... cheers!
[17:59:54] <ProfSimm> cheers
[17:59:58] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[18:00:19] *** Joins: pulse (~pulse@user/pulse)
[18:01:58] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:02:30] <ProfSimm> Alternatively we get back to a functional-like paradigm, say:   (array, item) = get(array, 3) <-- gets item 3 in "item" and returns the array into array
[18:03:53] <ProfSimm> setting an item would be:    array = set(array, 3, value)
[18:04:39] *** Quits: rito_ (~rito_gh@45.112.243.206) (Ping timeout: 256 seconds)
[18:05:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:05:02] <ProfSimm> Notice this naturally permits method chaining as well
[18:05:10] <ProfSimm> Because you HAVE to return the subject 
[18:06:03] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:06:08] *** Joins: czm233 (~czm233@2409:8a38:a623:cf1:90c:9ee3:80cf:2e49)
[18:06:30] *** Quits: czm233 (~czm233@2409:8a38:a623:cf1:90c:9ee3:80cf:2e49) (Client Quit)
[18:06:45] <ProfSimm> We can implement pipeline operator to partially apply the first argument, and thus we get something that looks like OOP syntax:    array = array -> set(3, value)
[18:07:00] <ProfSimm> Maybe there can be shortcut syntax for "foo = foo"
[18:07:01] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[18:07:18] <ProfSimm> So it becomes   #array -> set(3, value)
[18:08:13] <ProfSimm> A lot like normal OOP but actually underneath it's entirely linear types
[18:09:14] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Remote host closed the connection)
[18:09:46] <ProfSimm> Wait I have a better idea -> is pipeline and => is shortcut for  foo = foo ->
[18:09:55] <ProfSimm> array => set(3, value)
[18:09:57] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 240 seconds)
[18:11:10] *** Joins: Hax0r (~Hax0r@87.101.168.29)
[18:11:43] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 268 seconds)
[18:12:12] <ProfSimm> Hmm construction of queues can then be a constructor that returns two mutable values. InQueue and OutQueue
[18:12:22] <ProfSimm> So they can be passed independently to two threads, and problem solved.
[18:13:38] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[18:15:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:15:56] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:17:00] *** Joins: maxzor__ (~maxzor@2a01cb04054faa007cbccbd0b03d578c.ipv6.abo.wanadoo.fr)
[18:17:00] <EdFletcher> This isn’t a blog, you know. 
[18:17:18] *** Joins: tomathy (~jenova@user/quetzl)
[18:17:21] <tomathy> hello
[18:17:23] *** Quits: Twipply (~Twipply@user/twipply) (Remote host closed the connection)
[18:17:25] <ProfSimm> EdFletcher: well. Yeah.
[18:17:44] *** Joins: Twipply (~Twipply@user/twipply)
[18:18:02] <pyzozord> In ProfSimm defence I am guilty of this too, and for really barely related subjects
[18:18:33] <pyzozord> I wish could do less of that though, I guess somepeople don't like it but don't say anything
[18:19:04] <tomathy> does taking a jet effect a stopwatch on a computer?
[18:19:28] *** Joins: pingpongball (~pingpongb@43.228.192.110)
[18:19:34] *** Joins: Klinda (~superleag@user/klinda)
[18:19:41] <EdFletcher> There should probably be an -offtopic channel or something where that could be encouraged, but not here. 
[18:19:52] *** Joins: anovick (~anovick@2a0d:6fc0:1e12:b600:e42c:71f4:c473:b927)
[18:19:55] *** Parts: pingpongball (~pingpongb@43.228.192.110) ()
[18:21:12] *** Joins: gts (~gts@183.82.179.216)
[18:23:10] *** Quits: gts (~gts@183.82.179.216) (Remote host closed the connection)
[18:23:22] <mrig> tomathy: are you asking about the effect of motion on time?
[18:24:37] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[18:24:44] <EdFletcher> tomathy: yes: https://en.wikipedia.org/wiki/Hafele%E2%80%93Keating_experiment 
[18:24:45] <bayaz> Title: Hafele?Keating experiment - Wikipedia 
[18:25:00] <EdFletcher> "When reunited, the three sets of clocks were found to disagree with one another, and their differences were consistent with the predictions of special and general relativity." 
[18:25:03] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:25:04] <mrig> you need an atomic clock to measure this, and yes it is notable, it will effect the clock in a computer but there is likely no stable way to actually measure it with a computers clock.
[18:25:36] *** Khoyo_ is now known as Khoyo
[18:25:57] <mrig> They use the rate of decay of some radioactive element, if I'm not mistaken; Really nice experiment.
[18:25:59] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:26:09] *** Joins: constxd (~brad@142.134.38.68)
[18:26:10] <tomathy> so do devices keep time using satellite?
[18:26:19] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[18:26:22] <mrig> ah yes cesium 
[18:26:48] <tomathy> why is there no way to measure time with a oscillator/computer clock?
[18:27:20] <mrig> computer clocks are comparative to cesium really irregular.
[18:27:46] <FloridaMan> frequencies vary as well
[18:27:50] <mrig> satellites would require very precise timing I would think, am speculating though.
[18:28:28] *** Joins: gts (~gts@183.82.179.216)
[18:28:47] <mrig> they require a time system that is based upon the the cosmos, called sidereal time, too. Because earths time is 'wobbly'
[18:29:12] <tomathy> sidereal time hmm
[18:30:13] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:30:14] *** Quits: Khoyo (~khoyo@ns328946.ip-37-187-115.eu) (Changing host)
[18:30:14] *** Joins: Khoyo (~khoyo@user/khoyo)
[18:30:29] <FloridaMan> relative to the March equinox
[18:30:34] <FloridaMan> interesting
[18:31:22] *** Joins: DALEK-SEC (~dalek@2605:6c80:6:12:57a6:7503:669d:1)
[18:32:04] <EdFletcher> mrig: yeah it was a remarkable experiment, so simple in design yet conclusive in its results. science!! ❤️ 
[18:33:08] *** Quits: gts (~gts@183.82.179.216) (Ping timeout: 256 seconds)
[18:33:08] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:33:08] <EdFletcher> i remember learning about it initially and being absolutely floored, relativity makes sense in theory but to see it on-display so starkly and simply was mind-blowing 
[18:33:13] <mrig> Apparently the measurements are so precise now that the difference in the rate of flow of time can be seen between two clocks on at the bottom and the other at the top of a ladder.
[18:33:29] <FloridaMan> wow
[18:33:33] <EdFletcher> isn't that nuts!? those clocks are _incredible_ 
[18:34:22] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:40:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:40:56] <Square> I wish there could be some innovation on webbrowsers UX. Navigating between tons of tabs isnt 2022. 
[18:41:43] *** Joins: trevors (~trevors@user/trevors)
[18:41:54] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Read error: Connection reset by peer)
[18:42:12] *** Quits: bt-01 (~bt-01@49.207.0.191) (Ping timeout: 256 seconds)
[18:42:46] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:43:25] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[18:44:45] *** Joins: bt-01 (~bt-01@49.207.0.191)
[18:44:57] <mrig> It is a very local measurement of atomic time, which is a very different type to that which is used in space. I would guess that atomic time is used on satellites, to keep time, and that is then converted into the relevant time to correlate with any different reference frame, when any distance is involved; All quite mind blowing really, that you have to consider time as a varying dimension,
[18:44:59] <mrig> when working at any scale at all.
[18:45:07] <mrig> Square: oh nice, what do you have in mind?
[18:45:47] <Square> mrig, i have no clue. I'd hoped for the smart people at google to come up with something
[18:46:23] <Square> something that aligns with how brain operates / searches for topics
[18:46:59] *** Joins: plastico1 (~plastico@neomutt/plastico)
[18:47:28] <Square> like atm im switching between 4 tabs out of 50. The only thing that helps me is an extension that lets me search browser tabs.
[18:47:29] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 268 seconds)
[18:48:05] <mrig> tabs are a continuation of paper and files in filing cabinets, it is quite difficult to imagine something more efficient for the mouse. Keyboard shortcuts however could be, in my opinion, greatly improved.
[18:48:53] *** Joins: edun (~e@user/edun)
[18:49:41] <inhahe_> i think apps and the os have too many keyboard shortcuts in general. you can't hit the keyboard in any accidental way without causing chaos.
[18:50:44] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[18:51:22] <mrig> I agree, needs a reasonable standardisation.
[18:51:42] *** Quits: wikan (~weechat@2a02:a31d:8541:e100:213:2ff:fed3:8291) (Quit: WeeChat 3.0)
[18:51:50] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[18:51:54] <mrig> It is exactly the same as location in GUI, you need consistency.
[18:52:06] *** Joins: Rounin (~david@84.212.130.215)
[18:52:16] <pyzozord> I like to think that brain operats like a big Trie except it's a graph and has many dimmensions
[18:52:29] <mrig> Imagine if every piano maker came up with a different designed keyboard or tuning?
[18:52:49] <pyzozord> so like indexes are most of the data really
[18:53:05] <Square> i was thinking browser should adopt to how im using the tabs. Like if ive flipped between 4 tabs 100 of times, it should serve me these easily. If i break out of that context it could stop doing it.
[18:54:21] <Square> i like your idea. It should be modeled after how brain operates
[18:55:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:55:52] <pyzozord> problem is the interface is sequential and very limited at the moment, all you can do is type in text
[18:56:32] *** sebbu2 is now known as sebbu
[18:56:51] <mrig> vims buffers are great, I like the way that they work.
[18:57:03] *** Joins: Lycurgus (~juan@98.4.112.204)
[18:57:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:57:30] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 256 seconds)
[18:57:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[18:58:04] <mrig> I was just looking to see if I could turn the tabs of firefox off, to get some screen real estate back.
[18:58:08] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:58:28] <mrig> Their display, not their existence.
[18:58:42] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[18:58:53] <pyzozord> The data bandwidth from human to a computer is extremly slow with keyboard. Mouse has higher bandwidth but still it's one click, at most three. Voice and video are higher bandwidth, theoretically could be as high bandwidth as human to human communication if computers were receptive to non-verbal cues so I guess that's what we'll be progressing to
[18:59:05] *** Parts: maxyz (~maxy@80.254.172.91) ()
[18:59:08] <Square> Yeah, when you have 50 open the tab graphic themselves doesnt to much
[18:59:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:59:29] <pyzozord> computers already can kind of listen to us, they will start looking at us too and start being smarter about interpreting what they hear and see
[18:59:46] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:00:09] <Square> how is keyboard low bandwith. I feel its way easier to avoid mouse
[19:00:19] <nomagno> I'm hooking up a webcam to an assistant when pigs can do interstellar travel.
[19:00:50] <mrig> lol
[19:01:09] <ProfSimm> Square: bandwidth is subjective.
[19:01:26] <pyzozord> I meant the amount of bits being sent over
[19:01:44] <nomagno> A keyboard can be way lower bandwith than a mouse
[19:01:49] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[19:01:51] <mrig> I've seen them fly over battersea power station!
[19:02:03] <nomagno> You can encode a keyboard as a single bitmask
[19:02:33] <nomagno> Or well, a single 256 bitmask
[19:02:47] <FloridaMan> 1 byte
[19:02:50] <ProfSimm> I can encode the entire universe as a stream of 1s and... yeah actually just 1s. I don't even need 0s.
[19:02:50] <FloridaMan> yeah
[19:03:00] <pyzozord> mouse is higher bandwidth of bits, but it's not faster. If each pixel you click did something different then it would be faster, except your hand is not precise enough for that
[19:03:08] <FloridaMan> not even 1 byte I guess
[19:03:17] <FloridaMan> yeah 1 byte
[19:03:20] <FloridaMan> I need more coffee
[19:03:38] <ProfSimm> pyzozord: maybe we need the right UI to make a mouse shine
[19:03:47] <Square> i was thinking operations/time-unit regarding bandwidth.   
[19:03:52] <pyzozord> ProfSimm: it's possible
[19:04:17] <pyzozord> ProfSimm: mouse tends to work well for positional information, graphics, games etc
[19:04:24] <nomagno> I think mouse-based GUIs are just a horrible way to approach doing tasks
[19:04:46] <nomagno> Specifically anything that needs precise button clicking
[19:04:48] <FloridaMan> all the ways of interfacing with visual elements are imperfect
[19:04:49] <mrig> keyboard is less though which is better, you have a shorter route.
[19:04:53] <FloridaMan> even touch
[19:04:58] *** Quits: bt-01 (~bt-01@49.207.0.191) (Read error: Connection reset by peer)
[19:05:07] <mrig> just press the combo and go where you would like to go.
[19:05:38] *** Joins: bt-01 (~bt-01@49.207.0.191)
[19:05:39] <mrig> and once it is in muscle memory you just think the thought.
[19:05:49] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[19:05:54] <FloridaMan> and not even consciously
[19:05:56] <pyzozord> I haven't thought very hard about human computer interfaces to be honest. I presonally use keyboard for most things
[19:06:00] <FloridaMan> hence muscle memory
[19:06:00] <pyzozord> and it feels faster
[19:06:00] *** Quits: cwiz89 (~cwiz89@91.193.178.55) (Ping timeout: 256 seconds)
[19:06:09] <ProfSimm> pyzozord: hackers on TV shows agree
[19:06:23] <mrig> no doubt that it is faster.
[19:06:34] <FloridaMan> there are IDE plugins that show you the keymappings for actions when you use the mouse to help you train yourself to use the keyboard more. I find them helpful.
[19:06:39] <Square> there needs to be a Jedi HID
[19:06:43] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:06:48] <pyzozord> but the amount of data in packets sent from keyboard vs mouse, I'm quite sure mouse it's much higher
[19:07:13] <nomagno> I have yet to figure out how to navigate a modern window manager/desktop environment with the keyboard in a way I'm comfortable with
[19:07:34] <nomagno> My ideal way is just pressing a button to be shown a listing of windows, numbered 0-9 A-Z
[19:07:35] <mrig> the input is far more efficient from a keyboard though as you have more types of signal, surely?
[19:07:48] <mrig> a mouse is really limited in that respect.
[19:07:49] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:07:52] *** Joins: xsperry (~xs@user/xsperry)
[19:08:12] <ProfSimm> We need a mouse with 101 keys
[19:08:20] <mrig> Square: you get a padawan to do the typing?
[19:08:24] <mrig> :P
[19:08:24] <inhahe_> mrig: i'd rather it be slower than have a learning curve to doing anything
[19:08:24] <FloridaMan> nomagno: I use more monitors to get around the issue of window switching. When you have enough real estate to show all of the windows you use at once, switching becomes a non-issue
[19:08:32] <FloridaMan> then set up keyboard shortcuts to change the focus
[19:08:47] <mrig> inhahe_: there is no learning curve other than learning to type.
[19:08:57] *** Quits: bt-01 (~bt-01@49.207.0.191) (Client Quit)
[19:09:06] <nomagno> FloridaMan: That sounds like an imperfect solution to a problem I know how to solve
[19:09:14] <nomagno> I'll have to mod DWM one of these days
[19:09:18] <mrig> And as a programmer, this just seems like a useful thing to be able to do.
[19:09:20] <FloridaMan> yeah it's imperfect
[19:09:31] <pyzozord> I'm thinking there is more keys on the keyboard than can be interactive buttons on screen at any time that are easy to click with mouse, that's why practically keyboard is faster
[19:09:46] <ProfSimm> We need to have motion tracking on each finger, so we can emulate keyboard and mice at once and end this debate
[19:09:51] <mrig> I prefer having just a laptop and being able to code anywhere.
[19:09:57] <mrig> also far greener.
[19:10:36] <FloridaMan> mrig: yeah I disconnect my laptop and move around with it but it's far less efficient than having a bunch of displays attached
[19:10:43] <nomagno> Judging greenness by electricity consumption is pointless IMHO
[19:10:57] <tomathy> i know this is a stupid question
[19:11:05] <tomathy> but how do you unit test that a cup of tea has been made?
[19:11:08] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[19:11:15] <FloridaMan> well, I say "a bunch", but just two externals: one 34" ultrawide and a 37.5" ultrawide, which are probably the equivalent of 3 monitors
[19:11:21] <tomathy> what is the Given, When, Then for a cup of tea?
[19:11:22] <pyzozord> keyboard could start contending with mouse in information size, if we added analog sensors to each keys, so it senses how deep you press each key
[19:11:32] <nomagno> I once read an article that claimed it was immoral to use more programs than necessary on a computer, as it wastes electricity and hurts the environment
[19:12:03] <inhahe_> pyzozord: i was just in a channel recently where someone was talking about an analog keyboard that's in production
[19:12:04] <nomagno> ... Written from an OS that consumes 2GBs of RAM when idle, probably
[19:12:04] *** Joins: Pook (~Pook@2001:8a0:f996:1400:ddd6:1f40:3146:40af)
[19:12:10] <pyzozord> that's fair, lights in computer games use real electricity :P
[19:12:12] <nomagno> And even more CPU than that
[19:12:21] <CaCode> nomagno wouldn't it be the same token to be immoral to not come up with a plan to asap switch energy production to solar wind and water energy?
[19:12:27] <mrig> pyzozord: how long would it take you to enter 'hello world' with a mouse?
[19:12:39] <pyzozord> mrig: few seconds at least I wager
[19:12:41] <mrig> would you even be able to do it?
[19:13:02] <FloridaMan> tomathy: Given I have a mug, And I have heated water, And I have a teabag, When I fill the mug with the heated water, And I place the teabag in the mug, And I wait for two minutes, Then the mug is filled with tea
[19:13:04] <FloridaMan> lol
[19:13:04] <mrig> you would depend upon software too, to achieve the goal.
[19:13:09] <inhahe_>  pyzozord: https://www.coolermaster.com/catalog/peripheral/keyboards/mk850/
[19:13:11] <pyzozord> hmm maybe in some radial menu interface it could be faster
[19:13:13] <nomagno> CaCode: Yes, that's why it's dumb
[19:13:17] <CaCode> nomagno what's keeping the owners of this country from spending a fraction on what is spend to bail out 2008 banks to stop global heating by building solar?
[19:13:37] <tomathy> FloridaMan: thanks
[19:13:40] <FloridaMan> tomathy: "And" are helpful
[19:13:45] <pyzozord> it divides the screen to 26 sections around the cursor, each for one letter you move to one letter and it displayes the same at a new position
[19:13:48] <CaCode> nomagno just curious what arguments would support not going with solar or even water energy
[19:13:49] <FloridaMan> you can use more than one Given/When/Then
[19:14:00] <CaCode> water energy is much cheaper
[19:14:20] <tomathy> FloridaMan: yes i didnt know it was as simple as just decribing the process of making tea, i lost a job because of this
[19:14:28] <FloridaMan> what?!
[19:14:33] <tomathy> i mean i lost getting one
[19:14:37] <FloridaMan> oh
[19:14:57] <mrig> tomathy: you might be interested to read about what a protocol is and how they are defined and used.
[19:15:08] <FloridaMan> ?
[19:15:51] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:15:59] <nomagno> CaCode: The issue is the very things causing climate change are also structurally well established and would objectively lower short-term quality of life in general, for instance plastic is a miracle material, taking fossil fuels from the underground doesn't reduce urbanization surface space... And individuals level habit change does nothing
[19:16:03] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:16:11] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[19:16:21] <tomathy> mrig: why?
[19:16:41] <CaCode> nomagno i am not talking about reducing the amount of plastic being produced, why are they not switiching the energy production over to solar, wind and water energy?
[19:16:43] <mrig> you could specify a protocol for making tea and with in place you would then have a framework with which you could start to reason about how to define the units that you would like to test.
[19:16:47] *** Joins: anovick_ (~anovick@IGLD-83-130-244-203.inter.net.il)
[19:17:00] *** Quits: death916 (~death916@c-71-193-50-233.hsd1.ca.comcast.net) (Changing host)
[19:17:00] *** Joins: death916 (~death916@user/death916)
[19:17:06] <CaCode> there is even something called geothermal which uses the earths molten core to produce energy
[19:17:18] <mrig> tomathy: will you test that the water is at the correct temperature? Or only whether or not it is there?
[19:17:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[19:17:44] <CaCode> there is even something called tidal which uses the lowering and rising of sea levels to produce energy, literally harvesting the gravitational pull of the moon to create electricity
[19:17:55] <mrig> is there only boiled or not, is it boolean, ore are there a range of temperatures that might be of interest.
[19:17:57] <nomagno> CaCode: because it requires an initial investment, the dismantlement of existing industries (or relurposement), and in general an initial effort
[19:17:57] *** Quits: anovick (~anovick@2a0d:6fc0:1e12:b600:e42c:71f4:c473:b927) (Ping timeout: 240 seconds)
[19:18:14] <nomagno> Those in power (some) are too shortsighted in general, worldwide
[19:18:16] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:18:23] <nomagno> We need to accept it's going to be hard, uncomfortable, expensive, and short-term inappropiate to switch to green processes and policies worldwide
[19:18:25] <CaCode> nomagno, but not doing it will literally destroy the earth?
[19:18:41] <user51> i think i found a good name for the filesystem i was planning to write: powerfs!
[19:18:51] <ProfSimm> user51: what's new
[19:18:53] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:cc2b:9ca4:9a3c:8a8a)
[19:18:57] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:cc2b:9ca4:9a3c:8a8a) (Excess Flood)
[19:18:57] <tomathy> mrig: you can't test for temperature because the tea might just have been around and forgotten
[19:19:13] <nomagno> CaCode: The choice is unambiguous, the issue is people don't want to accept sustainability requires real sacrifices, at least at the moment
[19:19:13] <CaCode> hmm on the one hand we could avert guarenteed extinction level event and the end of human life as we know it, on the other hand we might have to do an initial investment
[19:19:13] <tomathy> so a made tea can't be determined by temperature
[19:19:17] <CaCode> tough choice
[19:19:30] <user51> ProfSimm: not much, trying to learn from mistakes
[19:19:36] <user51> still dealing with food poisoning
[19:19:42] <FloridaMan> with Given/When/Then it's meant to not be incredibly specific... You specify what "a mug" is, what "heated water" is, what "a teabag" is in later steps
[19:19:46] <tomathy> the specification is "test that a cup of tea has been made"
[19:19:57] <FloridaMan> you can get more specific in the given/when/then, but only so much specificity is helpful
[19:20:05] *** Joins: Guest18 (~Guest18@2800:810:453:700:9cce:9dce:a33f:9b6e)
[19:20:08] <ProfSimm> user51: I meant with the filesys. What are your innovations :) I'm curious
[19:20:09] <nomagno> it's not a tough choice, it's tough to accept the choice exists, for some people
[19:20:18] <CaCode> nomagno the 20008 financial crisis caused rulers to spend trillions in rescue packages, this money or fraction of it could pay for all the solar that could power the entire world
[19:20:19] <mrig> nomagno we need to first accept that our current ethos of always expanding will not work on a global scale, this is epoch changing stuff.
[19:20:29] <FloridaMan> BDD is meant to make it simple to explain conditions, actions, and outcomes by stakeholders
[19:20:34] <CaCode> i just don't buy nomagno that the money isnt there or that it would take sacrifices
[19:20:36] <user51> ProfSimm: oh, the name powerfs means that it slowly corrupts :P
[19:20:43] <mrig> lets colonise mars does not cut it.
[19:20:47] <FloridaMan> so engineers can take those conditions, actions, and outcomes and then program the test to specify what each one means
[19:20:51] <CaCode> nomagno, seems to me that the bribes aren't there
[19:20:59] <user51> is there any research on filesystems?
[19:21:11] <mrig> tomathy: sorry you are not following protocol, that makes no sense in this context :p
[19:21:15] <FloridaMan> so I can--as an engineer--define what a mug is when writing the test
[19:21:18] *** Quits: Guest18 (~Guest18@2800:810:453:700:9cce:9dce:a33f:9b6e) (Client Quit)
[19:21:21] *** Joins: xcombelle (~xavie@abordeaux-551-1-112-81.w92-156.abo.wanadoo.fr)
[19:22:04] <tomathy> you can't really test that "tea" is in the cup, you just have to test whether there is "something" in the cup afaik
[19:22:06] <nomagno> CaCode: It would take sacrifices. Policymakers in some places worldwide are doing the right thing, but it's almost certainly too late at the current pace
[19:22:18] <mrig> tomathy: different teas require different temperature, was my concern, what type of tea are you making?
[19:22:21] *** Joins: Auron (~Auron956@user/auron)
[19:22:27] <FloridaMan> tomathy: well, it's important to also note that no one is writing a test about making tea
[19:22:29] <nomagno> We're going to end up very fucked, if we end up some way at all
[19:22:31] <tomathy> mrig: just plain tea with milk
[19:22:41] <FloridaMan> they're probably searching that you know what Given/When/Then is and how to properly write it
[19:22:47] <mrig> plain tea is a syntax error :|
[19:22:48] <tomathy> FloridaMan: true
[19:23:00] *** Quits: anovick_ (~anovick@IGLD-83-130-244-203.inter.net.il) (Ping timeout: 256 seconds)
[19:24:10] <nomagno> Actually reducing our carbon footprint to sustainable levels is no trivial thing
[19:24:11] <CaCode> nomagno i disagree on the sacrifices part
[19:24:11] <FloridaMan> depending on the way  the organization is structured, QA may even be defining what these terms mean before it even gets to an engineer. That's if they've "shifted left" with their QA department
[19:24:39] <FloridaMan> but if they have not, then you--as an engineer--would be defining what they are by asking questions and maybe rewording things to be more specific
[19:24:41] <CaCode> nomagno for the same amount of moeny that they used to bailout banks (no politics intended) they coulod build enough solar power to power the world.
[19:25:01] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:25:10] <CaCode> how is there any sacrifice involved if we could save the world by spending a fraction of the money that has been spent on saving the economy
[19:25:44] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[19:25:46] <FloridaMan> tomathy: but really I think you may have overthought the problem and they just wanted to know that you grasp what Given/When/Then is and how it's structured
[19:25:51] <nomagno> CaCode: Dismantling non-renewable energy industries is a legitimate sacrifice, because those in power think it is.
[19:26:07] <tomathy> FloridaMan: yes i think so too
[19:26:11] <FloridaMan> I don't know what you answered, but from what you've said you probably overthought it
[19:26:12] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[19:26:14] <nomagno> It's not serious, mind you, it's not even a hard choice
[19:26:26] <nomagno> But the issue is also kinda that it would not be enough
[19:26:29] <beaky> what are some worst practices in programming that should be hard https://www.haskellforall.com/2016/04/worst-practices-should-be-hard.html
[19:26:30] <bayaz> Title: Worst practices should be hard 
[19:26:43] <CaCode> nomagno why do you need to dismantle at all?
[19:26:53] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:26:57] <CaCode> just build the solar panel and skip the dismantling
[19:27:12] <FloridaMan> there are other ways you could have written it as well... Like for, say, loose tea
[19:27:13] <CaCode> or wind or water energy or geo thermal energy plants
[19:27:24] *** Quits: Intelo (~Intelo@88.246.79.235) (Ping timeout: 256 seconds)
[19:27:28] <nomagno> CaCode: that is ready happening
[19:27:31] <FloridaMan> or tea made in a kettle and then poured into a mug
[19:27:32] <FloridaMan> etc.
[19:27:32] <nomagno> Just not quickly enough
[19:27:57] <nomagno> Don't ask me, ask your local policymakers and governments
[19:28:02] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[19:28:02] <CaCode> nomagno, not in the way it needs to happen, there should be a one time concerted effort to build enough solar pannels to power the world
[19:28:17] <CaCode> not sure at this moment where the roadblock is to that
[19:28:35] <nomagno> The roadblock is stupidity and short-term greed
[19:29:17] <CaCode> Well you can't outlaw stupid
[19:29:43] <mrig> The current modality of education is the cause of that.
[19:29:51] <FloridaMan> beaky: not handling exceptions/errors
[19:29:53] <mrig> thats a no brainer.
[19:30:04] *** Joins: EdFletcher (~PKD@user/edfletcher)
[19:30:08] <beaky> i like using if statements to handle errors
[19:30:11] *** Quits: Amp[m] (~amperture@2001:470:69fc:105::1:3535) (Quit: You have been kicked for being idle)
[19:30:13] <nomagno> With something like agriculture, which produces almost as much harmful gasses, you don't have the same solutions as for energy
[19:30:19] <FloridaMan> yes but not handling them should be hard
[19:30:22] <nomagno> Same with something like plastic, or concrete
[19:30:32] *** Joins: Amp[m] (~amperture@2001:470:69fc:105::1:3535)
[19:30:39] <beaky> in rust it is easy to not handle them i just use panic and throw 
[19:30:42] *** Parts: Amp[m] (~amperture@2001:470:69fc:105::1:3535) ()
[19:30:46] *** Joins: gts (~gts@183.82.179.216)
[19:30:52] <FloridaMan> in a lot of languages it is easy to ignore them
[19:30:57] <CaCode> nomagno, there would be ways, if you raise cows have the barns the cows are in collect the exhaust methane and provide it to households to use as cooking gas
[19:31:02] <CaCode> or to use for heating
[19:31:04] <beaky> if only the designers of rust made it maximally hard where i have to use scary build time options or something
[19:31:13] <CaCode> still carbon will be produced but not as much
[19:31:13] <FloridaMan> "unhandled exceptions" or "unhandled errors" could be harder. It would be nice.
[19:31:31] <nomagno> We're too dependent on according-to-the-rich-irrepleaceable or technologically-irrepleaceable systems
[19:31:35] <FloridaMan> in Go they make it very difficult to not handle errors
[19:31:40] <FloridaMan> which is quite nice
[19:31:53] <FloridaMan> many people complain about how Go deals with errors, but it makes it very hard to ignore them
[19:32:02] <mrig> I like error handling in go too.
[19:32:09] <CaCode> nomagno, I think these are just excuses that do not hold up to close scruitiny, and our education system while not perfect is not THAT bad
[19:32:30] *** Joins: xavie (~xavie@abordeaux-551-1-112-81.w92-156.abo.wanadoo.fr)
[19:32:44] <CaCode> these people can read and write, which is completely wasted on them if they never bother to read the actual science on the matter
[19:32:57] <EdFletcher> FloridaMan: haha and wasn't that exactly the point? "doesn't matter if you don't like this, you WILL deal with it" 😆 
[19:33:05] <FloridaMan> EdFletcher: yep!
[19:33:09] <CaCode> so they literally could just google and find out what is going on, but they are just too lazy to do it?
[19:33:16] <FloridaMan> same thing with "go fmt"
[19:33:33] <EdFletcher> oh i absolutely love `go fmt`. _no more style arguments!!_ 
[19:33:34] <CaCode> gobal heating is going to kill us, but enough people in power are supposedly too lazy to google what is going on?
[19:33:45] <nomagno> CaCode: Which education system? It's a genuine logistics headache to solve this crisis, and in areas where it isn't it is a genuine maze of commercial interests
[19:33:45] <FloridaMan> EdFletcher: same
[19:34:03] <CaCode> i don't believe that, I think they are in the pockets of those coal and petro people
[19:34:23] <nomagno> ... That's whay I mean when I say commercial interests
[19:34:28] <EdFletcher> FloridaMan: in fact i've found it has influenced me in _other languages_: i always reach for the most-opinionated, least-configuration-required linter i can find now, regardless of language. just do it for me. 
[19:34:32] <FloridaMan> EdFletcher: at work right now there is a lot of talk about JavaScript style guidelines... In Go, you don't have to have these long, winded discussions about it. They lay down exactly how it's going to be. Period.
[19:34:41] <CaCode> these commercial interests will be hurt by the world literally ending
[19:35:02] <nomagno> They don't care. Not enough
[19:35:11] <CaCode> we can't save the world because we make money off of the apocalypse
[19:35:15] <EdFletcher> FloridaMan: hahaha yes exactly!! i use `semistandard` (a minor variant of `standard`) that is of the same mind as `go fmt`: no config, no options. just accept it and move on with your life. 😆 
[19:35:19] *** Quits: xcombelle (~xavie@abordeaux-551-1-112-81.w92-156.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:35:20] <nomagno> This issue makes no sense, but I'm not the one you have to reason with
[19:35:22] <CaCode> -__-'
[19:35:26] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:35:28] *** Quits: gts (~gts@183.82.179.216) (Ping timeout: 256 seconds)
[19:35:44] <FloridaMan> https://go-proverbs.github.io
[19:35:44] <bayaz> Title: Go Proverbs 
[19:35:49] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[19:35:51] <CaCode> I agree it does not make sense
[19:35:59] <FloridaMan> EdFletcher: Gofmt's style is no one's favorite, yet gofmt is everyone's favorite.
[19:36:03] <EdFletcher> FloridaMan: and honestly, we can all agree that those style discussions are a _complete_ waste of productive time, so eliminating them is genuinely in everyone's best interest. 
[19:36:11] *** Joins: gts (~gts@183.82.179.216)
[19:36:13] <EdFletcher> FloridaMan: LOL perfectly said! 👏 
[19:36:23] <FloridaMan> EdFletcher: that's one of the "Go Proverbs" that I linked
[19:36:49] <EdFletcher> FloridaMan: ah yeah just noticed that... still, well chosen then 😉 
[19:36:51] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:37:04] <EdFletcher> love this one too, it speaks to the best parts of go: channels and goroutines: "Don't communicate by sharing memory, share memory by communicating." 
[19:37:30] <mrig> CaCode: the world is not ending, some old dogmatic dated ideas are dying, that is all.
[19:38:15] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:38:27] <FloridaMan> EdFletcher: they're all linked to very good videos by Rob Pike
[19:38:34] <FloridaMan> highly recommend watching
[19:38:38] *** Quits: Hax0r (~Hax0r@87.101.168.29) (Quit: Leaving)
[19:38:43] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4)
[19:38:47] <CaCode> mrig you don't think the climate catastrophe will end mankind?
[19:38:58] <mrig> I really like how go has made be understand cyclic dependencies too; Boy did that take some work!
[19:40:06] <EdFletcher> FloridaMan: yeah this is a _great_ site i'd never seen, _thank you_ for sharing! 🙌 
[19:40:15] <FloridaMan> my pleasure
[19:40:37] *** Quits: gts (~gts@183.82.179.216) (Ping timeout: 240 seconds)
[19:40:52] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[19:41:37] <mrig> CaCode: climate catastrophes have been moving civilisations ever since humans became civilised; The point is not if, but when, and to my mind the solution is to have the foundation of your base philosophic system include this within its working or modeling.
[19:42:11] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:42:43] <CaCode> mrig the last time the carbon level was this high in the atmosphere the ocean level was 70 meters higher
[19:42:52] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[19:42:58] <CaCode> how high above ocean level is the place you live at?
[19:43:24] *** Joins: SomeoneElse (SomeoneEls@c-24-34-241-188.hsd1.ma.comcast.net)
[19:43:40] <mrig> I'm about 4m above sea level, but you can already see that the port is going to be regularly flooded very soon.
[19:43:44] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[19:44:09] <CaCode> https://i.pinimg.com/736x/a4/27/3e/a4273e5225c75745f6d6e704b8f25bb1.jpg
[19:44:10] <bayaz> Type: image/jpeg Size: 45.4 kB 
[19:44:12] *** herme5 is now known as el_kevino
[19:44:22] <mrig> They just redid the road, I thought at the time that they are crazy not to have raised the entire lot by at least a meter.
[19:44:23] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:44:36] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[19:44:56] <ProfSimm> mrig: What if we take some ocean water and throw it away on the moon
[19:45:09] <GeDaMo> CaCode: the problem is not that people are lazy, it's that corporations are paperclip maximisers
[19:45:36] <ProfSimm> GeDaMo: interesting reference that I wonder how many know
[19:47:32] *** Joins: gts (~gts@183.82.179.216)
[19:48:38] <inhahe_> i've played that game
[19:48:50] <CaCode> ProfSimm, https://www.lesswrong.com/tag/paperclip-maximizer
[19:48:51] <bayaz> Title: Paperclip Maximizer - LessWrong 
[19:48:53] <inhahe_> i stopped because it was corrupting my soul =p
[19:48:58] <mrig> Treating corporations as people is all very well, sounds all very human, but when corporations start behaving like psycopaths there are obviously going to be some issues.
[19:49:08] <nomagno> CaCode: Oh the eastern circuit of the United States is technically an island, it's completely isolated by manmade canals
[19:49:15] <GeDaMo> CaCode: yes
[19:49:19] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[19:49:26] <nomagno> So you could flood it without a climate crisis
[19:49:28] <GeDaMo> Except corporations are maximising profit
[19:49:41] <FloridaMan> anthropomorphism is quite normal for people to do, even when it doesn't fit
[19:50:06] <GeDaMo> Profit comes before health and well being of their employees; before quality of their product or service; before the law; before environmental damage
[19:50:15] <CaCode> GeDaMo, the real problem is that they have hijacked the political systems of the world (no politics intended)
[19:50:27] <EdFletcher> PKD wrote a great story along the lines of the paperclip maximizers: https://en.wikipedia.org/wiki/Autofac 
[19:50:28] <bayaz> Title: Autofac - Wikipedia 
[19:50:49] <CaCode> basically society at large has become incapeable of reacting to any serious crisis and make decisions that are in it's best interest
[19:50:57] <CaCode> Why people accept this is beyond me
[19:51:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[19:51:01] <xavie> see also universal paperclip https://www.decisionproblem.com/paperclips
[19:51:09] <EdFletcher> woah sweet, full text!! http://sickmyduck.narod.ru/pkd008-0.html 
[19:51:10] <bayaz> Title: =[ Philip K. Dick. Autofac ]= 
[19:51:45] <CaCode> but anything that threatens the number of paperclips in the universe will be dealt with immediately
[19:51:49] *** Quits: gts (~gts@183.82.179.216) (Ping timeout: 240 seconds)
[19:51:54] *** xavie is now known as xcombelle
[19:52:04] <mrig> and how much of that paperclip maximisation is driven by not so entirely latent angst in folk who are unaware of how there nerves drive them?
[19:52:16] <FloridaMan> CaCode: they accept it *because* they're in crisis. Most of these things are a result of those in power taking advantage of this.
[19:52:22] <mrig> their rather.
[19:52:23] <FloridaMan> "Never waste a crisis."
[19:53:05] *** Joins: gts (~gts@183.82.179.216)
[19:53:13] <mrig> GeDaMo: this brings a whole new dark dimension to 'Clippy' :|
[19:53:18] <GeDaMo> Yes :|
[19:53:29] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[19:53:31] * mrig will never look at MS word in the same light again1
[19:53:36] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[19:53:38] <FloridaMan> lol Clippy
[19:54:00] <CaCode> crisis was initially coined by the nazis to whitewash military defeats, to not look bad to their population at home when they committed their countless blunders on the battlefield. Every major defeat was euphamized as a "crisis"
[19:54:09] <CaCode> they should more fittingly call this the climate defeat
[19:54:35] <CaCode> or "we are losing the war on climate"
[19:54:57] <tomathy> what IDE's can be installed from terminal?
[19:55:36] <xcombelle> tomathy: do you mean on windows ?
[19:55:40] <tomathy> linux
[19:55:41] <FloridaMan> not sure what you mean by "initially coined"... Maybe you meant "the initial use by the Nazis"
[19:55:42] <CaCode> tomathy type aptitude search "NameOfIde"
[19:55:54] <CaCode> it will show if the ide is in your repositories
[19:56:05] <tomathy> thanks
[19:56:15] <xcombelle> tomathy: any IDE your distribution support
[19:57:04] <FloridaMan> CaCode: "war on climate" has its own negative connotations
[19:57:23] <FloridaMan> because it assumes it's something to be conquered
[19:57:34] *** Quits: gts (~gts@183.82.179.216) (Ping timeout: 256 seconds)
[19:57:41] <FloridaMan> imo climate *will* win one way or the other
[19:57:51] <FloridaMan> whether it has to drown us into submission or whatever
[19:58:21] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[19:58:29] *** Parts: SomeoneElse (SomeoneEls@c-24-34-241-188.hsd1.ma.comcast.net) ()
[19:58:35] <CaCode> FloridaMan, the problem with fatalism is that what is being destroyed to took hundreds of millions of years of evolution to come to be
[19:58:38] <pyzozord> i think corporations even budget for breaking the law
[19:58:54] <CaCode> FloridaMan, maybe we ought to take this discussion to ##chat
[19:59:05] <FloridaMan> pyzozord: "black budgeting"
[19:59:05] <GeDaMo> They'll break the law if the believe the amount they will be fined is less than the amount of profit they can make
[19:59:22] <FloridaMan> CaCode: good call
[19:59:41] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[20:00:04] <upp> tomathy there are some vim-based things if thats what you mean
[20:00:24] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[20:00:24] *** Quits: hexingb_ (~hexingb@180.212.211.39) (Ping timeout: 256 seconds)
[20:00:28] <mrig> The notion that everything is a war and a competition is inherently childish and needs to be treated as such.
[20:00:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:01:54] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:02:40] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[20:02:55] <pyzozord> mrig: I'm not sure really, it sadly seems to be also in the animal kingdom all the way down to cingle cell organisms
[20:03:22] <mrig> not at all.
[20:03:46] <[itchyjunk]> https://news.ycombinator.com/item?id=29855212
[20:03:48] <pyzozord> that doesn't mean we have to replicate it, we can be more like a collective, working together
[20:03:50] <mrig> base nature is that, sure, but we are not supposed to be regressing.
[20:03:50] <[itchyjunk]> One time pad!
[20:04:22] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[20:04:45] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[20:05:05] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[20:05:42] <mrig> pyzozord: and that is what civility is all about, sapient choices that rise above base primal instincts; They are still there for sure but can be better understood and navigated.
[20:06:13] *** Quits: zaher_ (~zaher@37.48.185.152) (Ping timeout: 240 seconds)
[20:06:38] <mrig> Long lasting ecosystems all depend upon balance, that is just obvious. 
[20:06:46] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b5cd:8f2b:a3f7:7cf5)
[20:07:02] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:ece1:4d6c:662b:8ed8)
[20:07:13] *** Quits: rsx (~dummy@ppp-188-174-136-210.dynamic.mnet-online.de) (Quit: rsx)
[20:07:32] <mrig> so far as I am aware we have not yet managed to make an isolated fully man made ecosystem work ever.
[20:07:50] *** Joins: gts (~gts@183.82.179.216)
[20:07:52] <novns> mrig, remove natural selection, and humans will degenerate into unhealthy dumb parasitic creatures
[20:08:24] <Decker> that's a dark view.  I assure you struggle and conflict are not the things that motivate me.
[20:08:37] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 240 seconds)
[20:08:51] <[itchyjunk]> Maybe not consciously.
[20:09:13] <mrig> novns: there is far more to it than that, this is naive on a level that is difficult to explain when I consider the doctrines that I've studied in india.
[20:09:26] <Decker> aka 'ya you're thinking what I want you think, you just don't know it' 
[20:09:38] <novns> mrig, reincarnation doesn't exist, sorry
[20:09:46] *** Joins: zetaE (~neon@139.47.114.154)
[20:09:48] <zetaE> hei
[20:09:52] <mrig> just so very naive.
[20:10:00] <zetaE> does anyone use youtube tutorials to learn programming?
[20:10:09] <[itchyjunk]> zetaE, sometimes.
[20:10:15] <zetaE> there's tons of stuff
[20:10:24] <zetaE> I don't know where to start
[20:10:32] <[itchyjunk]> Just a bit hard to pause and find specific codes and such.
[20:10:33] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[20:10:34] <novns> zetaE, someone use, but its not the good way
[20:10:34] <Decker> for speciic things, not to generally learn programming
[20:10:36] <vdamewood> The Python tutorial.
[20:10:37] <GeDaMo> zetaE: are you trying to learn something in particular?
[20:10:41] <[itchyjunk]> There are two approach to this.
[20:10:41] <novns> zetaE, books, read them
[20:10:57] <[itchyjunk]> One as a starter where you mostly watch the video to get a feel for it and substitute it with written stuff
[20:10:59] <zetaE> applied boolean algebra
[20:11:05] <mrig> novns: I'm thinking about the neroepigenome and this is very real. Also the full implications of relativity when human minds are working on the level of quantum interactions.
[20:11:08] <[itchyjunk]> one as an a novice wanting expertise
[20:11:10] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[20:11:18] <novns> zetaE, you will learn very little with youtube tutorials
[20:11:23] <mrig> novns: that you use the word sorry there is a massive red flag to me..
[20:11:34] <mrig> no point in discussion further.
[20:11:40] <novns> mrig, sorry for that red flag
[20:11:47] <mrig> it is what it is.
[20:11:56] <novns> mrig, sorry for what it is
[20:12:08] <[itchyjunk]> zetaE, did you find somethign you like?
[20:12:26] <[itchyjunk]> i saw some video that expects you to follow along with code and some dont
[20:12:49] <mrig> novns: no need to be sorry :)
[20:12:57] <[itchyjunk]> do i get to use (:) as a function?
[20:12:59] <[itchyjunk]> haskell
[20:13:12] <bjs> [itchyjunk]: if you're asking can you, then yes
[20:13:12] <novns> mrig, sorry for being sorry when there's no need
[20:13:31] <[itchyjunk]> so with foldr, (:) is a valid function hmm
[20:13:39] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[20:13:39] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[20:13:39] *** Joins: menace (~someone@user/menace)
[20:13:40] * [itchyjunk] scratches head
[20:13:42] <zetaE> [itchyjunk]: which one is a better name boolean algebra or discrete math?
[20:13:43] <bjs> [itchyjunk]: yes (:) is a valid function.
[20:13:47] *** menace is now known as Deknos
[20:13:52] <mrig> I see that the west coast has woken up :D
[20:13:57] <[itchyjunk]> zetaE, discrete math covers a lot more than boolean algebra
[20:14:15] <[itchyjunk]> i am attempting reverse (x:xs) = foldr (:) x xs :x
[20:14:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:14:27] <zetaE> [itchyjunk]: I need sometring that I can put to practice immediatly
[20:14:28] <[itchyjunk]> wait, :x is emoji
[20:14:29] <[itchyjunk]> not code
[20:14:50] <[itchyjunk]> zetaE, hmmm. and you want video and not book or somesuch in particular?
[20:15:17] <bjs> [itchyjunk]: well foldr (:)   sounds like an identity. 
[20:15:49] <[itchyjunk]> wait, is reverse an inbuilt function?
[20:15:56] <[itchyjunk]> It's talking about Main.reverse in the error
[20:15:59] <CaCode> zetaE, https://www.youtube.com/watch?v=cTjFy18SjRc
[20:16:00] <bayaz> Title: A Quick Overview of BOOLEAN ALGEBRA (symbols, truth tables, and laws) 
[20:16:12] <CaCode> I have not watched this but maybe this is any good?
[20:16:14] <bjs> [itchyjunk]: yes there is one in Prelude
[20:16:17] <[itchyjunk]> George bool hallucinated boolean algebra btw
[20:16:26] <[itchyjunk]> bjs, ah maybe name conflict is confusing me
[20:16:30] * [itchyjunk] tries different name
[20:16:39] <GeDaMo> EdFletcher: good story
[20:16:41] <zetaE> CaCode: thanks, how to put to practice?
[20:16:42] <pulse> (:) https://i.imgur.com/jzjwRl6.png
[20:16:43] <bayaz> Type: image/png Size: 58.4 kB 
[20:16:48] <mrig> Anyhow things are changing CaCode no doubt about that, my bet would be that science in the next 10 years is going to shed a lot of light upon the cause of certain phenomena in the human collective mind and that this will bring about considerable change.
[20:17:00] <[itchyjunk]> nope, its just my code xD
[20:17:18] <EdFletcher> GeDaMo: definitely is; very glad you enjoyed it! 
[20:17:34] <GeDaMo> :)
[20:17:37] <bjs> [itchyjunk]: Main.reverse is *your* reverse, otherwise it'd say 'Prelude.reverse'
[20:17:44] <CaCode> https://www.youtube.com/watch?v=jDnni-zm2g8
[20:17:45] <bayaz> Title: Boolean Algebra Basics and Example Problem 
[20:17:49] <[itchyjunk]> oh..
[20:18:14] <bjs> [itchyjunk]: probably if you define your own function called 'reverse' it'll go wrong because eventually you'll reach a point where it's ambiguous which you mean
[20:18:28] <bjs> You can just call your functions myReverse and myMap and myBlah :P
[20:18:31] <[itchyjunk]> foldr takes a function (:) and an element `x` in this case, can applies it to the last element of the list..
[20:18:45] <[itchyjunk]> yeah myReverse it is now
[20:18:46] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:18:50] <[itchyjunk]> the exercise called it reverse
[20:18:58] <[itchyjunk]> i blame everyone but myself for this
[20:19:07] <bjs> [itchyjunk]: well `foldr f` takes [a,b,c,d,e] and produces a `f` (b `f` (c `f` (...
[20:19:14] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[20:19:33] <bjs> if f is : then you just get a : (b : c (...  which is just the same list you started with
[20:19:35] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[20:19:37] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:19:41] <[itchyjunk]> hmm wait
[20:19:46] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:19:50] <CaCode> mrig, I doubt we've got 10 years, wouldn't it be easier for all private citizens to just start a massive worldwide fundraise and build the solar pannels ourselves?
[20:19:57] *** Quits: stagas (~stagas@2a02:587:c403:9039:554c:d6d9:18e1:4b69) (Ping timeout: 240 seconds)
[20:19:58] <[itchyjunk]> foldr f blah does htat right?
[20:20:11] <bjs> [itchyjunk]: yes
[20:20:15] <[itchyjunk]> CaCode, nope
[20:20:16] <zetaE> CaCode: thanks a lot
[20:20:19] <[itchyjunk]> hmmmmm
[20:20:30] <[itchyjunk]> its this requirement of foldr that is throwing me off
[20:20:36] <[itchyjunk]> my list is generic, [a]
[20:20:42] <bjs> [itchyjunk]: what do you mean "requirement"
[20:20:49] <[itchyjunk]> i need a placeholder for foldr that works for any type a
[20:20:49] *** Joins: stagas (~stagas@2a02:587:c421:9272:1d6e:80:f414:a49d)
[20:21:01] <[itchyjunk]> if i could use foldr1 or somesuchc, i can think of a solution
[20:21:01] <bjs> [itchyjunk]: wait what do you mean, foldr is generic already
[20:21:16] <[itchyjunk]> my reverse needs to take any list and reverse it
[20:21:18] <mrig> CaCode: that sounds rather pessimistic, I'd say that there is still time to learn to balance .
[20:21:18] <bjs> [itchyjunk]: I mean foldr1 is just a helper, it just makes a foldr internally
[20:21:27] <[itchyjunk]> if it was "take int and reverse it" i could use 0 or osmesuch maybe
[20:21:39] <bjs> [itchyjunk]: what are you talking about :P
[20:21:47] <mrig> Knowledge of what it is that requires balancing is key.
[20:21:50] <bjs> reverse an int? "use" 0?
[20:21:51] <[itchyjunk]> foldr requires a starting element
[20:22:00] <bjs> [itchyjunk]: yes.
[20:22:05] <[itchyjunk]> that is what i am talking about
[20:22:08] <mrig> current schools are failing miserably at that it would seem.
[20:22:10] <bjs> well not a *starting* element, a base case.
[20:22:20] <bjs> [itchyjunk]: for lists [1,2,3] is 1:2:3:[]  the base case is []
[20:22:30] <[itchyjunk]> i can't pick a base case for some generic list [a]
[20:22:35] <[itchyjunk]> oh
[20:22:40] <bjs> [itchyjunk]: yes you can, the base case for lists is the empty list (nil)
[20:22:43] <[itchyjunk]> hmmmmmmmmmmmmmmmm
[20:23:07] <bjs> [itchyjunk]: `foldr (:) []` is the identity function over lists.
[20:23:25] <[itchyjunk]> :(
[20:23:31] <[itchyjunk]> well its a start
[20:23:53] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:24:19] <pyzozord> mrig: hmm I think I start changing my opinion about haskells importance for me
[20:24:26] <pyzozord> oops no mrig, everybody
[20:24:30] <mrig> at discerning that, rather.
[20:24:59] <mrig> pyzozord: heh, where did that little revelation come from? :D
[20:25:09] <[itchyjunk]> I think i need tea before i can think haskell
[20:25:47] <pyzozord> I'm not sure, I start to question if haskell has much unique ideas to offer outside of fringe syntax
[20:26:01] *** Joins: jamea (~jamea@177.239.81.39)
[20:26:12] <GeDaMo> Haskell has influenced things you've seen in other langauges
[20:26:17] <[itchyjunk]> I don't really see how one works with things like id and inverses or commutative operators in say Java
[20:26:20] <[itchyjunk]> it would be such a pain
[20:26:27] <mrig> I think go is far better for the things that you might consider haskell for.
[20:26:36] <[itchyjunk]> or like list comprehension would be a pain in java too
[20:27:09] <bjs> [itchyjunk]: that's mostly due to Java, I mean look at Python it has list comprehensions and is basically the same language as Java
[20:27:21] <bjs> and the list comprehensions work totally fine and nice there,  so it's not a fundamental FP vs OOP thing
[20:27:30] <[itchyjunk]> but python credits that to haskell though
[20:27:34] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:27:46] <[itchyjunk]> that's why i didn't mention that as a example for haskell not being that useful
[20:29:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:29:34] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:29:39] <[itchyjunk]> foldl would give me a solution but it specifically says use foldr
[20:29:53] <[itchyjunk]> must be a clever little thing i need to think of
[20:30:18] <GeDaMo> [itchyjunk]: foldr f [] [1..5] the first call is f 5 []
[20:30:27] *** Quits: fe23 (~fe23@2409:8a34:464:4990:7c68:8699:3484:486e) (Quit: fe23)
[20:30:35] <GeDaMo> You want that to return [5]
[20:30:55] <GeDaMo> Then the second call would be f 4 [5] which you want to return [5, 4]
[20:30:58] <[itchyjunk]> right it's 5:[], then 4:5:[], ..
[20:31:06] <bjs> [itchyjunk]: do you know how to put something at the end of a list?
[20:31:10] <sonny> reversing a list?
[20:31:17] <[itchyjunk]> bjs, oh
[20:31:19] <bjs> [itchyjunk]: you know how to put it at the beginning (:), have you learned about ++ ?
[20:31:23] <[itchyjunk]> i think i dont
[20:31:31] <[itchyjunk]> oh i know about ++
[20:31:36] <[itchyjunk]> but thats to merget lists
[20:31:46] <GeDaMo> [x] ++ [y] gives [x,y]
[20:31:48] <bjs> [itchyjunk]: you say that as if you can't use that fact to add something to the end of a list :P
[20:31:49] <[itchyjunk]> i see i want to turn 5 into a list [5] then ++ is or somesuch
[20:31:56] <pyzozord> f(1, f(2, f(3, f(4, f(5, []))))) if I'm not mistaken
[20:32:07] <[itchyjunk]> sonny, problem 4
[20:32:08] <[itchyjunk]> https://www.cantab.net/users/antoni.diller/haskell/questions/quest06.pdf
[20:32:11] <bayaz> Title: ACCESS DENIED 
[20:32:19] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2bd0:5e5e:ca40:5981) (Ping timeout: 268 seconds)
[20:32:25] <[itchyjunk]> nice, access defined. refused.
[20:32:44] <sonny> dw, the url is good
[20:32:53] <sonny> probably just how the bot works
[20:33:03] <GeDaMo> I wonder what bayaz did you get banned from there :|
[20:33:11] <apotheon> I'd like to learn to appreciate some characteristics of Python that annoy me.  Is there someone here who has a relatively deep understanding of some of the guiding philosophy of the reasons for why Python is the way it is (e.g. why the distinctions between functions and methods are applied the way they are, and why both approaches exist in the same language the way they do)?
[20:33:19] <bjs> apotheon: #python
[20:33:40] <sonny> [itchyjunk]: I found some fun problems too <https://bpa.st/TVBA>
[20:33:45] <pyzozord> apotheon: #python there are some seriously infulential people
[20:33:59] <apotheon> I don't really want to go to a channel that'll flame me for the way I'll have to question someone's input, so no, I'm not likely to take this to #python.
[20:34:02] <sonny> apotheon: guido's blog is probably a good one
[20:34:08] <bjs> apotheon: huh|?
[20:34:17] *** Quits: martums (~martums@user/martums) (Ping timeout: 240 seconds)
[20:34:42] <pyzozord> apotheon: some of these things you can propably find in PEPs
[20:34:47] <pyzozord> if you look hard enough
[20:34:50] <apotheon> Any channel built around a programming language is likely to be more dogmatic, and less philosophical, than needed for a discussion like that, *especially* with a relatively large community.
[20:35:18] *** Joins: zwr (~zwr@2804:d45:b966:fb00:4170:30cc:d780:488d)
[20:35:39] <apotheon> pyzozord: Looking hard enough is more work than it's worth.  I am, in part, looking for a reason to care enough about Python to even bother with PEPs, like how I had to learn to appreciate C enough to even want to start reading the standard.
[20:35:39] <bjs> apotheon: I'm not sure what you mean
[20:35:54] <apotheon> bjs: Have you met the internet?
[20:36:10] <bjs> apotheon: #python will have answers (if they exist) to why things are like they are in Python (who decided, when, what reasons if there are reasons at all)
[20:36:14] <GeDaMo> [itchyjunk]: you can make something into a list by just putting [] around it
[20:36:29] <apotheon> Flame wars are a thing.  People getting shouted down for not being properly obeisant to the community ethos is a thing.
[20:36:31] <pyzozord> apotheon: let me find few talks I really enjoyed
[20:36:31] <GeDaMo> e.g. listify x = [x]
[20:36:41] <apotheon> okay
[20:36:48] <[itchyjunk]> hmm
[20:36:49] <sonny> yeah, [] is the list constructor
[20:37:10] <apotheon> I'll just assume I'll have to wait until I know someone personally, and well, with a properly philosophical attitude and sufficient understanding of Python.
[20:37:13] <pyzozord> apotheon: I think these are the two that stand out in my memory the most https://www.youtube.com/watch?v=OSGv2VnC0go and https://www.youtube.com/watch?v=UANN2Eu6ZnM
[20:37:14] <bayaz> Title: Transforming Code into Beautiful, Idiomatic Python 
[20:37:14] <bayaz> Title: The Mental Game of Python - Raymond Hettinger 
[20:37:16] <apotheon> forget I asked
[20:37:26] <apotheon> pyzozord: I'll look into those.
[20:37:28] <sonny> in scheme it's (list x)
[20:37:42] <apotheon> pyzozord: Thanks for the links.
[20:37:47] <pyzozord> as far as I can tell Python is all about making things easy and simple at the cost or performance
[20:37:54] <bjs> apotheon: I'm so confused at your flame war comments,  why would #python flame you for a question about why something is the way that is in Python :s
[20:37:56] <bjs> but okay
[20:38:26] <[itchyjunk]> myReverse [1..10]
[20:38:26] <[itchyjunk]> [2,3,4,5,6,7,8,9,10,1]
[20:38:27] <[itchyjunk]> lmfao
[20:38:34] <bjs> [itchyjunk]: how did you define myReverse :P
[20:38:36] *** Joins: trevors (~trevors@user/trevors)
[20:38:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:38:40] <pyzozord> #python is surprisingly levelheaded, I also think it's worth the try to ask, if it flames out just don't respond
[20:38:41] <sonny> apotheon: <http://python-history.blogspot.com/2010/06/inside-story-on-new-style-classes.html>
[20:38:45] <[itchyjunk]> not properly is my guess
[20:38:54] <[itchyjunk]> myReverse (x:xs) = foldr (++) [x] [xs]
[20:39:02] <GeDaMo> :D
[20:39:05] <[itchyjunk]> i jsut need more tea
[20:39:13] <[itchyjunk]> it will get better with more tea
[20:39:13] <bjs> [itchyjunk]: why is the base case different
[20:39:29] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:39:31] <[itchyjunk]> idk, this was more of a brute force than a well thought out solution
[20:39:35] *** Joins: newpy (~newpy@206.168.231.90)
[20:39:48] *** Quits: gts (~gts@183.82.179.216) (Quit: Leaving...)
[20:40:02] <sonny> [itchyjunk]: look at pyzo's output
[20:40:07] <apotheon> bjs: If A asks why something is the way it is, B gives an answer that doesn't fully justify it, and A points that out, either B or C in a community of B-Z, a-z, AA-ZZ, and aa-zz, all together, united in love for the subject at hand, will likely feel attacked and come at A.
[20:40:14] <apotheon> bjs: That's how most humans behave.
[20:40:23] <pyzozord> sonny: what did I output?
[20:40:38] <sonny> f(1, f(2, f(3, f(4, f(5, [])))))
[20:41:17] <pyzozord> oh right, I think I was just trying to understand foldr f [] [1..5]
[20:41:42] <bjs> apotheon: so you don't want to ask there because the people there are... human?
[20:41:47] <sonny> well, this is the basic idea :)
[20:42:24] <apotheon> Even supposed philosophers -- who, by virtue of what philosophy means, should by definition be able to rationally discuss matters of what's true -- often get flame-y when asked philosophical questions that imply questioning their deeply held convictions.
[20:42:30] <pyzozord> bjs: depeneding on community I think it's a valid consern, in general many communities aren't a shiny beacon of being open minded about questioning the very thing they love and gather around
[20:42:36] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[20:42:39] <pyzozord> concern*
[20:42:54] <pyzozord> although #python is really good as far as I can tell
[20:43:05] <apotheon> bjs: I don't want to ask there because there's an automatic "I'm outnumbered and out-radicalized" condition.
[20:43:35] <apotheon> #python selects for people who like Python much more than ##programming
[20:43:35] <bjs> apotheon: you want to find someone who knows a lot about Python and its history, your entire premise was to find someone like that. I don't understand.
[20:43:46] <apotheon> I didn't even say anything about history.
[20:43:49] <pyzozord> apotheon also feels threatened since he really doesn't like python and is looking for a reason to like it, which will produce discussion and arguments
[20:44:00] *** Joins: martums (~martums@user/martums)
[20:44:00] <GeDaMo> You might try #proglangdesign
[20:44:06] <pyzozord> it could be like walking into a hornet nest if the community was very zelous
[20:44:21] <newpy> what are all of your favorite OS textbooks?
[20:44:29] <apotheon> I have a pretty deep understanding of a number of things I don't like, thus leading to my dislike, for instance; I don't need a devoted Pythonista.  I just need someone with insight and experience.
[20:44:37] <[itchyjunk]> I don't have a favorite OS text book.
[20:44:43] <apotheon> GeDaMo: good idea, thanks
[20:44:46] <bjs> apotheon: have you ever talked to the people on #python before or are these your preconceived ideas
[20:45:32] <apotheon> I'm already fucking exhausted by pushback just for wanting a more-neutral point of view, at this point, so I'm going to do something unrelated to my quest for such knowledge about Python for a while.
[20:45:33] <EdFletcher> Always important to remember that zeal does not necessarily equate to experience or skill, either 
[20:45:49] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[20:45:51] <apotheon> bjs: I have talked to a lot of people who have significant experience with Python.
[20:45:59] <vdamewood> No, Zeal fell under the sea because they tried to use Lavos as an energy source.
[20:46:00] <bjs> apotheon: that's a no isn't it
[20:46:08] <[itchyjunk]> foldr f baseCase list, it applies to the last element in the list
[20:46:15] <[itchyjunk]> how do i talk about this element?
[20:46:19] <EdFletcher> vdamewood: LMAO, nice one 
[20:46:29] <[itchyjunk]> i guess i a mthinking imperative instead of declarative
[20:46:30] <apotheon> I have talked to a lot of people on IRC.
[20:46:31] <bjs> [itchyjunk]: make the base case be [], and then just look at pyzozord's expression and try find a function that would make it equal to [5,4,3,2,1]
[20:46:41] <[itchyjunk]> because i wanna tell haskell to take it and put a [] around it
[20:46:42] <apotheon> Add those two together, and . . . does that not describe #python?
[20:46:47] <vdamewood> EdFletcher: As each year passes, I fear the day no one gets that joke more and more.
[20:47:01] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[20:47:02] <apotheon> (not counting relative newbies who'd probably be less relevant to my questions)
[20:47:05] *** Joins: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de)
[20:47:07] <EdFletcher> vdamewood: BTW, only had a bit of time to search yesterday but in that time didn’t come up with anything… it’s a tough part to find indeed! Hopefully will find some more time today to dig further 
[20:47:20] <EdFletcher> vdamewood: Well fortunately that day hasn’t come yet 😄 
[20:47:27] <[itchyjunk]> i see, i should think in terms of helper functio nehre probably
[20:47:31] <pyzozord> apotheon: don't get discouraged, although thicker skin is indeed useful at times, people have different levels of empathy, patience etc
[20:47:32] <bjs> [itchyjunk]: I mean that's fine,  it might be how I would write it.
[20:47:34] <[itchyjunk]> tea is kickking in hard
[20:47:47] <apotheon> I feel like bjs has an emotional stake in believing the Python community (which I have engaged in other venues, to some extent, in the past) is not full of humans who act like humans.
[20:47:51] <bjs> [itchyjunk]: yes just always define a function as a top-level thing when you're a beginner, it's a good idea. I've said this before
[20:47:54] <vdamewood> EdFletcher: Cool. Thanks. To be honest, I forgot what it was that I asked you to find.
[20:48:30] <bjs> apotheon: at no point did I claim the users in #python are not human.
[20:48:37] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[20:48:43] <apotheon> pyzozord: I have pretty thick skin.  It's not about whether it affects my feelings.  It's about whether I wasted an hour trying to explain to someone dealing with cognitive dissonance that, no, I'm not actually just trolling.
[20:49:46] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[20:49:48] <apotheon> bjs: No, you just tried pushing the idea that in #python it'll be great and fine and not affected by the human foibles I perceive all around me and, in particular, that I know from experience to be in some respects heightened and concentrated in communities of fans of a given thing.
[20:50:02] <pyzozord> apotheon: I fully understand. My personal experience is that #python is really openminded if you are willing to be nice and explain what exactly is your problem and your goal. I'd personally suggest it's worth a try and if it goes sour just leave before a lot of time/nerves are wasted
[20:50:17] *** Quits: thevishy (~Nishant@2405:201:f005:c007:40d9:4255:8f71:3678) (Quit: Leaving)
[20:50:28] <vdamewood> EdFletcher: I just read the log. I think I may have had the wrong idea of what you were looking for.
[20:50:40] <bjs> apotheon: I never said they're not affected by "the human foibles". I never said they are not human.
[20:50:42] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:50:46] <[itchyjunk]> I have said this before and I'll say it again, I never repeat myself!
[20:51:02] <apotheon> pyzozord: Maybe I'll consider it.  I dunno.  I'll probably resort to #python only if other avenues (e.g. ##programming, now) turn out to be unfruitful, though.
[20:51:14] <EdFletcher> vdamewood: oh how so? I was looking around for anything that wound be generic for an NVRAM chip the SparcStation IPX... not what you needed? 
[20:51:32] <GeDaMo> [itchyjunk]: you want go 4 [5] to return [5,4]
[20:52:00] <apotheon> bjs: You tried to convince me that I shouldn't worry about them, then.  I don't know.  You think there's no problem like I described, apparently.  How do *you* want to describe the way you dismiss my concerns about how *every fucking community acts*?
[20:52:15] *** Quits: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de) (Quit: Client closed)
[20:52:18] <vdamewood> EdFletcher: Ah yeah, no. I got rid of my SS IPX long ago and the replacement still worked when I last had it. I do want an NVRAM chip I can use in my bread-board computer, though.
[20:52:55] <apotheon> (with . . . perhaps *extremely damned rare* exceptions, and certainly not *large bucket-of-people communities*)
[20:52:55] <[itchyjunk]> lmfao
[20:53:01] <vdamewood> EdFletcher: And I think the impression I got was that you might find me a smaller Chinese manufacturer or something for parts in general.
[20:53:01] <[itchyjunk]> myReverse [0..10]
[20:53:02] <EdFletcher> vdamewood: ohhhhh, ok!! 😆 then yeah, that should be a _lot_ easier to source, awesome! 
[20:53:02] <[itchyjunk]> [0,1,2,3,4,5,6,7,8,9,10]
[20:53:15] <[itchyjunk]> GeDaMo, hmm
[20:53:21] *** Joins: hexingb_ (~hexingb@180.212.210.23)
[20:53:23] <bjs> [itchyjunk]: did you see GeDaMo's hint?  f 1 [2] == [2,1]
[20:53:31] <[itchyjunk]> i just saw it now
[20:53:44] <EdFletcher> vdamewood: but yes, i'd be happy to look around for a good aliexpress shop that sells that stuff! i have a bunch bookmarked that i've used in the past with no issues at all, so hopefully one of them will have something suitable 
[20:53:53] <bjs> [itchyjunk]: see how putting things at the front (using `:`) ended with the same list, but if you could put things at the end...
[20:53:53] <GeDaMo> By the way, I can tell you still haven't read that paper on fold because the answer is in there :P
[20:53:55] <[itchyjunk]> myReverse [0..10]
[20:53:56] <[itchyjunk]> [10,9,8,7,6,5,4,3,2,1,0]
[20:54:20] <[itchyjunk]> yeah i haven't read that paper.. :x papers sounds intemedating
[20:54:26] <pyzozord> [itchyjunk]: so what was the solution (undercover learning some haskell here)
[20:54:53] <bjs> apotheon: honestly I have no idea why you complain so much, if your issue is that the community is made up of humans, then so is this community and so is every community.  You may find someone with the answer elsewhere. You are much more likely to get an answer, and much quicker, by asking there.
[20:55:16] <apotheon> you completely missed the points I described in some detail above, apparently
[20:55:33] <bjs> apotheon: not at all, your points are basically "they are human and exhibit human qualities" which is going to be true of all communities
[20:55:36] <vdamewood> EdFletcher: Okay, the things I actually want are SRAM chips that are 8KiB and 16KiB (and 32KiB if you can find them at the same manufacturer.), EEPROMS of the same sizes. and NVRAM chips of the same sizes.
[20:55:44] <apotheon> a community with a pro-Python bias is not the same as a community with a pro-programming bias
[20:55:56] <ProfSimm> Say you have a language where you take things by copy, or by ref/move semantics. How would you syntactically differentiate both?
[20:56:05] <newpy> apotheon, you say you don't want to waste an hour in #python but you've wasted time here arguing over nothing
[20:56:09] <bjs> apotheon: who said the people there are pro Python :P
[20:56:13] <vdamewood> EdFletcher: The 32KiB SRAM and EEPROM chips aren't a big deal, though, since I can easy get those from Jameco.
[20:56:15] <newpy> now please tell me your favorite OS textbook
[20:56:19] <GeDaMo> pyzozord: f x y = y ++ [x]
[20:56:24] <apotheon> especially when the former includes almost 1500 people and, thus, clearly is not filtered for those tolerant of people daring to question their language-of-choice
[20:56:25] *** Joins: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de)
[20:56:51] <vdamewood> EdFletcher: Oh, and since they're for a breadboard computer, I'm hoping to get DIP casings.
[20:57:03] <[itchyjunk]> pyzozord, https://bpa.st/2O4A
[20:57:04] <EdFletcher> vdamewood: yup i was gonna say that, but even then i'll bet we could find them for cheaper by digging a bit. though i'm betting you don't need a huge volume so a few cents savings probably isn't a big deal 😃 
[20:57:04] <bayaz> Title: View paste 2O4A 
[20:57:05] <pyzozord> GeDaMo: thanks, yeah it makes sense
[20:57:13] <apotheon> newpy: Yeah, I should've ducked out immediately after bjs doubled down thrice.  This is the lesson: I can't ask any community a question like this.
[20:57:32] <[itchyjunk]> pyzozord, solution was to have a helper function that applies the ++ operation in the way i want it to within the foldr
[20:57:33] <bjs> apotheon: I'll be honest, I've been there many years and there have been plenty of discussions of exactly the kind you have. I'm not even the only person here to have advocated for that place.
[20:57:45] <EdFletcher> vdamewood: ah right great point! that does make it a bit harder them, DIP isn't always offered as you've probably found. but still, they're definitely out there 
[20:57:47] <newpy> apotheon, I came in the middle, not sure what your question even is
[20:58:09] <newpy> please everyone, OS textbook recommendations!
[20:58:10] <GeDaMo> You could also use a lambda: foldr (\x y -> y ++ [x]) [] [1..5]
[20:58:18] <vdamewood> EdFletcher: Yeah, not really. that's why the 32's only matter if you can get them from the same source as the smaller ones. The Shipping savings will be significant, but the per-item savings is negligible.
[20:58:26] <newpy> so far I've only gotten tanenbaum or dino book recs
[20:58:30] <apotheon> newpy: 10:03 < apotheon> I'd like to learn to appreciate some characteristics of Python that annoy me.  Is there someone here who has a relatively deep understanding of some of the guiding philosophy of the reasons for why Python is the way it is (e.g. why the distinctions between functions and methods are applied the way they are, and why both approaches exist in the same language the way they
[20:58:36] <EdFletcher> vdamewood: yup exactly 👍 
[20:58:37] <apotheon> do)?
[20:58:51] <[itchyjunk]> GeDaMo, yeah someone suggested lambda functions .. :P i keep forgetting they exists
[20:58:51] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[20:59:09] <bjs> [itchyjunk]: I really recommend while you're a beginner to make top-level functions with a name and type signature
[20:59:18] <bjs> the errors will be much easier to understand and you'll be able to re-read your code a lot easier
[20:59:18] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.5-dev)
[20:59:46] <pyzozord> newpy: xv6 from mit
[20:59:51] *** Joins: EtherNet (~ethernet@user/ethernet)
[21:00:21] <bjs> You can write things like `let myReverse = foldr (flip (++) . return) []`  and be all clever but, note if you slightly change this the error is very hard to read.
[21:00:28] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[21:00:51] <newpy> pyzozord, oh perfect (I like that it's not too long like tanenbaum, covering numerous different OS implementations)
[21:00:51] <GeDaMo> newpy: http://www.projectoberon.com/
[21:00:52] <bayaz> Title: Home 
[21:01:24] <[itchyjunk]> bjs, i did thought, right?
[21:01:29] <[itchyjunk]> go and myReverse has signatures
[21:01:41] <[itchyjunk]> ah you mean not to use anynomous since it will miss out on type signature
[21:01:42] <pyzozord> newpy: comes in with source code on github too and instructions how to run this in a vm and connect debugger and debug your os
[21:01:42] <bjs> [itchyjunk]: oh I didn't see your paste,  yes, like that! :)
[21:01:43] <[itchyjunk]> goti t
[21:02:03] <bjs> [itchyjunk]: yes also that, lambdas are good but also make errors harder
[21:02:49] <GeDaMo> newpy: you could also ask in #osdev
[21:04:40] <newpy> GeDaMo, I am chipping away at the osdev wiki as well
[21:05:14] <GeDaMo> Oh, that's a good idea :P
[21:05:21] *** Quits: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de) (Quit: Client closed)
[21:06:13] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[21:06:13] *** Quits: tomathy (~jenova@user/quetzl) (Remote host closed the connection)
[21:06:27] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[21:13:12] <vdamewood> Donuts!
[21:13:42] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:13:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[21:14:23] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:14:35] <mrig> There is one at the center of every black hole, I know I've seen the photo!
[21:14:49] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:14:59] <vdamewood> yum, Torus!
[21:15:25] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[21:15:46] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[21:16:30] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[21:17:34] <[itchyjunk]> Holy shit i now understand some people here complaining about foldl and foldr :D
[21:17:34] <[itchyjunk]> https://bpa.st/DC5A
[21:17:35] <bayaz> Title: View paste DC5A 
[21:17:47] <[itchyjunk]> they just look alike but are so different in behavior
[21:17:53] <[itchyjunk]> !
[21:19:07] *** Joins: victor_ (uid208353@id-208353.tinside.irccloud.com)
[21:19:11] *** Quits: victor_ (uid208353@id-208353.tinside.irccloud.com) (Client Quit)
[21:19:17] *** Joins: migvie (~migvie@84.66.4.83)
[21:20:06] *** Joins: vibjelo (uid208353@user/victor)
[21:20:43] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.55) (Ping timeout: 256 seconds)
[21:20:47] *** vibjelo is now known as victor
[21:21:57] <deniska> pyzozord: hehe, this whole "knowing how things work is actually harmful" attitude is why I don't enjoy go much
[21:22:58] <sonny> go has a lot about how it works in their blog
[21:23:11] <pyzozord> deniska: I'm not sure where that comes from
[21:23:39] <deniska> pyzozord: the attitude?
[21:24:04] <pyzozord> deniska: yeah
[21:24:12] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:24:37] <mrig> pyzozord: there is a nice video on how the GC works which is pretty good, goes into just the right level of explanation, you might appreciate it.
[21:24:41] <pyzozord> I think maybe the community is mostly geared toward that attitude of justmoving on
[21:24:54] <newpy> pyzozord, "NOTE: We have stopped maintaining the x86 book for xv6 but have switched the book to RISC-V (see
[21:24:54] <newpy> https://github.com/mit-pdos/xv6-riscv-book/)"
[21:25:07] <newpy> any thoughts on RISC-V?
[21:25:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:4170:30cc:d780:488d) (Ping timeout: 268 seconds)
[21:25:21] <deniska> pyzozord: for the lack of the better word it's the vibe Rob Pike was radiating around the language while the community was forming
[21:25:23] <pyzozord> "open source hardware, yay!"
[21:25:23] <Decker> 'risc is good'
[21:25:43] <newpy> I'm leaning towards reading the x86 version since that's what I use, but if risc-v is the future then?
[21:25:52] <dodo> i'm still looking for a good board to play with it.. i think crowdsupply has a few
[21:26:35] <pyzozord> deniska: that would be strange for such a renown programmer to advocate for ignorance
[21:27:21] <deniska> pyzozord: he didn't advocate for ignorance, I don't want to paint the bleak picture of him
[21:27:40] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[21:27:46] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:27:52] <sonny> newpy: I guess the risc-v version only works on an emulator
[21:27:54] <newpy> well I think it can be harmful in one sense
[21:28:09] <pyzozord> could be he advocates for higher conceptual abstractions, and people misinterpret it as "knowing lower levels is bad for you"
[21:28:12] <newpy> if you demand 100% of people know 100% of the system you accomplish a lot less
[21:28:20] <deniska> pyzozord: but the whole design of the language is kinda two-tiered. There're people who make go, and people who use go, and the former can do things the latter "shouldn't need to worry about"
[21:28:27] <newpy> but in general, knowing more is good I think
[21:28:32] <sonny> if you don't mind that, then I'd use risc-v
[21:28:37] * edgar-rft announces a new RISC CPU with all instructions reduced to NOP
[21:29:11] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[21:29:11] <sonny> dodo: s-five has boards?
[21:29:13] <Decker> jmp -1
[21:29:19] <pyzozord> deniska: i personally like to stay in the latter but have the option to move to former when situation calls for it
[21:29:55] <sonny> if you actually like x86 then ... go for it
[21:30:16] <deniska> pyzozord: sure, but for some reason it's much less in the culture of go
[21:31:05] <sonny> I have not experienced that culture myself tbh
[21:31:05] <mrig> pyzozord: this is quite good : https://www.youtube.com/watch?v=q4HoWwdZUHs
[21:31:07] <bayaz> Title: Garbage Collection Semantics - GopherCon SG 2019 
[21:31:26] <mrig> there some posts written on it too if you prefer to read.
[21:32:01] <sonny> but feel free to rag on the missteps they took when making go :P
[21:32:34] <pyzozord> mrig: thanks
[21:32:43] <deniska> sonny: well, I can't toot the generics horn anymore :P
[21:32:50] <sonny> hehe
[21:32:53] <mrig> It is from the perspective that you are looking for, I think.
[21:33:11] *** Quits: migvie (~migvie@84.66.4.83) (Ping timeout: 256 seconds)
[21:33:12] <pyzozord> mrig: oh I know this guy!
[21:33:21] <mrig> there is a good one on channels too.
[21:33:23] <sonny> yeah, that was a pretty big misstep. To their credit, they did want to get wadler to work on it, but I guess that fell out.
[21:33:29] <edgar-rft> why do all those people collect their garbage instead of throwing it away?
[21:33:32] <mrig> good to know what is behind those.
[21:33:40] <pyzozord> mrig: I am following his class on one of the elearning platforms
[21:34:11] <mrig> He is quite good, this one is excelent for getting an overview of what the language is doing, stack and heap wise.
[21:34:47] <mrig> This is quite good : https://www.youtube.com/watch?v=KBZlN0izeiY
[21:34:48] <bayaz> Title: GopherCon 2017: Kavya Joshi - Understanding Channels 
[21:35:00] <pyzozord> thank you :)
[21:35:06] <mrig> The channels really are the pointers and memory fun of go.
[21:35:21] *** Joins: node1 (~hex@user/node1)
[21:35:27] <deniska> pyzozord: my point of view is that all abstractions are leaky, and it's always useful to know what kind of fuel is dripping on your head :)
[21:35:32] <deniska> s/fuel/fluid/
[21:35:36] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[21:36:14] <pyzozord> yes! hopefully the fluid is _not_ fuel though
[21:36:15] <[itchyjunk]> what was that one tar product they use to fix all sorts of leaks?
[21:36:17] <mrig> pyzozord: I highly recommend 'The go programming language' book too.
[21:36:19] <deniska> you are using python and wondering why it's slow? Let's tell you all about cache locality and pointer chasing :)
[21:36:25] <[itchyjunk]> even holes in boats
[21:36:31] <mrig> pitch
[21:36:55] <deniska> you are programming java and wonder why it's NullPointerException and not NullReferenceException? :P
[21:38:34] * vdamewood sees the fuel on deniska's head, and lights deniska on fire.
[21:40:59] <mrig> https://herbsocietyblog.wordpress.com/2020/06/22/pitch-pine-tar-and-pitch-for-shipbuilding/
[21:41:00] <bayaz> Title: Pitch Pine- Tar and Pitch for Shipbuilding 
[21:42:15] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:42:57] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[21:43:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[21:43:39] *** Joins: Narrat (~omnius@p200300df5f0ef9dc06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:44:49] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[21:45:14] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Ping timeout: 256 seconds)
[21:45:17] <edgar-rft> my boat is holy, that's why it sunk
[21:45:25] <mrig> pyzozord: This one is great too, https://www.youtube.com/watch?v=ZMZpH4yT7M0
[21:45:26] <bayaz> Title: Understanding Allocations: the Stack and the Heap - GopherCon SG 2019 
[21:46:14] <mrig> It is true that you absolutely do not need to know this when writing go, but I'm like you and like to have a mental picture in mind when thinking about code.
[21:46:26] <[itchyjunk]> my boat holey, so it skunk?
[21:46:32] <mrig> and found that these really helped.
[21:46:37] <user51> mrig: oh no, heaping featurism..
[21:46:57] <mrig> no no heaping shiny shiny.
[21:47:00] *** Joins: Akuli (~Akuli@82-203-160-12.bb.dnainternet.fi)
[21:47:28] <pyzozord> mrig: thanks! Will watch all three right now
[21:47:48] <mrig> I hope that they fill a need :)
[21:48:00] *** Joins: rvalue- (~rvalue@user/rvalue)
[21:48:50] <mrig> For reflection from what I gather it is really slow, so ok if you use it in setup code, but best to avoid it if you can.
[21:49:21] <mrig> nice example is in the gob package/
[21:49:32] <mrig> of its use.
[21:51:19] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[21:51:19] *** rvalue- is now known as rvalue
[21:52:52] <edgar-rft> jesus had to walk over water by its own feet because his boat was holy
[21:54:22] *** Joins: rito_ (~rito_gh@45.112.243.149)
[21:54:28] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Read error: Connection reset by peer)
[21:56:51] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:57:23] <pulse> nowadays jesus would just ride up on a harley davidson
[21:57:28] <mrig> on the water element you mean, I wonder how many people really know what that represents as a type?
[21:58:04] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[21:58:17] <[itchyjunk]> edgar-rft, we are not told about the temperatures. i can walk over water too, under certain contaraints
[21:58:21] *** Joins: Sadale (~Sadale@user/sadale)
[21:58:29] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[21:58:31] <vdamewood> As a type, water represents floating-points.
[21:58:42] <mrig> heh
[21:58:50] <edgar-rft> floating-drops :-)
[21:58:51] <mrig> yes vectors and floats :D
[21:59:13] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:00:06] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[22:00:57] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[22:01:15] <mrig> I feel as though I've cheated, gotten round my bugs in the system by installing ubuntu; Does this make me a bad person do you think?
[22:01:50] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:02:15] <mrig> Likely really not the linux way, oh well never mind, at least the bugs are gone and I can get on with my game engine studies :)
[22:03:30] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Client Quit)
[22:03:40] <pyzozord> Yes, you need to pick your battles. Otherwise you'll get bogged down fighting irrelevant details
[22:03:55] <pyzozord> the trick is to pick the right battles I guess
[22:04:47] <pyzozord> I don't really know what I am saying, don't listen to me. :P Like I'm some kind of authority in anything :D
[22:05:15] <pyzozord> As far as I know I don't know anything. No idea why they called me a senior and they give me money.
[22:05:20] <mrig> heh
[22:05:39] <deniska> pyzozord: juniors are the ones who think they know everything :)
[22:06:05] <mrig> never look a gift horse in the mouth, it might have a trojen elite force inside!
[22:06:07] <pyzozord> I suspect there has been serious inflation of knoweledge and experience
[22:06:33] <edgar-rft> I'm a super- important authority in all the things that I don't have the slightest clue about.
[22:06:59] *** Joins: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de)
[22:07:02] <mrig> Well I was still trying to work out how to turn this darn thing off, fortunately ubuntu has solved that for me :)
[22:07:06] *** Joins: matrox (~bc8147f2@cerf.good1.com)
[22:07:12] <deniska> pyzozord: they'll have to invent new titles soon, and I vote for "milord"
[22:07:15] <matrox> hi guys. I am probably boring you, but besides sceptre monitor someone pasted other does, does anyone else make 40" or 49" ultraswide monitor that is FLAT?
[22:07:22] <matrox> if not, which 40 or 49" monitor has the mildest curve? so far I found Dell 49" with 3800R curve
[22:07:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[22:07:37] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:07:44] <pyzozord> deniska: haha milord is perfect
[22:07:59] <edgar-rft> you could try using a hammer if it's not curvy enough
[22:08:09] <pyzozord> señor software engineer
[22:08:22] <matrox> problem is that they are too curvy, not that they aren't curvy enough
[22:08:33] <matrox> (that's what he said?)
[22:08:52] <edgar-rft> pyzozord: thanks, that's a perfect title for me :-)
[22:09:36] <pyzozord> I should be more careful dispensing haphazard advice and opinons
[22:09:55] <edgar-rft> matrox: you could try hammering it flat if that helps
[22:10:14] <matrox> thank you. that helps a lot
[22:10:30] <edgar-rft> always a pleasure to help :-)
[22:11:14] *** Joins: audiobirb (~audio@user/audio)
[22:11:49] *** Quits: floppy-disk (~floppy-di@p200300df1f0a44016562d07ebea87e86.dip0.t-ipconnect.de) (Client Quit)
[22:12:39] <zetaE> anybody know about some stand alone DSSL implementation?
[22:13:31] <pyzozord> DSSL?
[22:13:36] <zetaE> sorry nvidia's DLSS
[22:15:07] *** Joins: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca)
[22:15:56] <zetaE> I guess on open source DLSS implementation
[22:16:54] <matrox> failing to find any flat 40 or 49", maybe I should just get this. https://www.lg.com/us/business/desktop-monitors/lg-34BK95U-W
[22:16:55] <bayaz> Title: LG 34BK95U-W: 34'' Class 21:9 UltraWide? 5K2K Nano IPS LED Monitor with HDR 600 (34'' Diagonal) | LG USA Business 
[22:19:06] *** Joins: Jupy7er (~Jupy7er@2001:d08:e3:b1:dd4e:c9da:9c60:5d27)
[22:19:40] *** Quits: Jupy7er (~Jupy7er@2001:d08:e3:b1:dd4e:c9da:9c60:5d27) (Client Quit)
[22:19:51] *** Joins: Chanakan5591_ (~Chanakan5@user/chanakan5591)
[22:20:02] *** Quits: maxzor (~maxzor@2a01cb04054faa00c1bb1f1ac4060d73.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:21:01] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 240 seconds)
[22:22:21] <mrig> pyzozord: yes I think you are spot on with your advice, as much as I would like to know the whole stack inside out I really do need to work on having a working knowledge of linear algebra at the moment.
[22:23:38] <pyzozord> yeah, same.
[22:26:01] <mrig> I'd just make my terminal all yellow and black thought an ubuntu has a great tawny orange image of a stalk in the stock backgrounds; I'm really pleased with the environment to be honest.
[22:26:12] <mrig> just made rather.
[22:26:31] <mrig> going for orange crt monitor styling.
[22:27:02] <pulse> what would you do if you had a magic java bean
[22:27:13] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:28:28] <mrig> make coffee?
[22:29:35] <mrig> make magic coffee? :D
[22:30:12] <pyzozord> make a AbstractCoffeeFactory
[22:31:00] <pulse> magic bean is said to make a plant which keeps growing
[22:31:10] <vdamewood> Coffee!
[22:31:13] <pulse> so a java magic bean would probably spaghettify any codebase you drop it into :p
[22:31:41] * vdamewood dumps marinara on pulse's code base.
[22:31:47] <GeDaMo> https://en.wikipedia.org/wiki/Spaghettification
[22:31:47] <bayaz> Title: Spaghettification - Wikipedia 
[22:32:04] <vdamewood> GeDaMo: Don't get people sucked into that.
[22:32:07] <pulse> mamma mia
[22:32:21] *** Quits: aportnoy (~aportnoy@bras-base-toroon0628w-grc-22-174-95-160-240.dsl.bell.ca) (Quit: Leaving)
[22:32:33] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com)
[22:33:01] *** Joins: terminalpusher (~terminalp@2a01:586:8e8d:1:216f:6651:6993:2328)
[22:33:12] <pulse> i once had pizza with french fries as a topping
[22:33:13] <mrig> lol
[22:33:16] <pulse> i wonder if the same would work with spaghetti
[22:33:17] <terminalpusher> when does one use a zero-length slice?
[22:33:37] <vdamewood> pulse: French fries don't make good topping for spaghetti.
[22:33:47] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ab6a:ec40:1b75:3ae7)
[22:33:50] <pulse> they make a good topping for pizza
[22:33:55] <GeDaMo> For inserting between two existing positions?
[22:33:56] <vdamewood> terminalpusher: When one wants to extract zero elements.
[22:34:14] <terminalpusher> vdamewood: but when would you wan that?
[22:34:17] <pulse> "let's just go down these dangerous mines to extract zero minerals"
[22:34:29] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-11c4-68db-ad36-c833.inf6.spectrum.com) (Ping timeout: 250 seconds)
[22:34:35] <terminalpusher> and I mean a slice obtained through a constant upper bound of zero slicing range
[22:34:38] <vdamewood> terminalpusher: When you're writing code for a general case and you don't want to check beforehand.
[22:35:22] <terminalpusher> even if it's `..0` and the `0` is constant?
[22:35:26] <mrig> terminalpusher: as a proxy perhpas?
[22:35:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:35:31] <terminalpusher> a proxy?
[22:35:34] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:36:11] <mrig> yes for lazy instantiation.
[22:36:36] <terminalpusher> in what case specifically?
[22:36:45] <vdamewood> terminalpusher: Well, assuming there's no use for it, why should the language parser treat it as a special case?
[22:37:32] <terminalpusher> I'm just wondering what case specifically requires it, we are basically talking about only `[0..0]`
[22:37:48] <vdamewood> terminalpusher: Why the asumption that there is such a case?
[22:37:54] <terminalpusher> as `[1..0]` and anything >1 would be out of bounds anyway
[22:37:57] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[22:37:59] <mrig> just speculation, no sure what language you are talking about, I am supposing a slice type that I just coded up in C.
[22:38:16] <terminalpusher> well for example Rust has such slicing syntax
[22:38:21] <Hash> https://radio.thestonedapes.com/
[22:38:26] <Hash> Does this load for anyone?
[22:38:26] <mrig> it could be away to return a an actual object an not a null
[22:38:50] <terminalpusher> hmmm ok
[22:38:54] <Hash> [10] 80                         ALLOW IN    Anywhere                  
[22:38:56] <Hash> [11] 443                        ALLOW IN    Anywhere   
[22:39:06] <vdamewood> terminalpusher: Okay, so why does the existence of such syntax mean it's useful?
[22:39:06] <Hash> If I use my VPN, I can't load my site
[22:39:12] <Hash> If I dont' use VPN I can.
[22:39:15] <Hash> I'm not sure what is happening.
[22:39:22] <Hash> Can anyone else load the radio site?
[22:39:24] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[22:39:36] <terminalpusher> vdamewood: I don't know if it's useful, that's why I'm asking
[22:40:30] <GeDaMo> Hash: "Firefox can't establish a connection to the server at radio.thestonedapes.com"
[22:40:35] <vdamewood> terminalpusher: I can't really think of any specific use. I would guess the syntax is supported because it's easier to just write a general (takes two numbers) syntax, and not care if those numbers are variables or constants.
[22:40:40] <Hash> Awww man.
[22:40:42] <Hash> Why?
[22:41:07] <terminalpusher> yeah makes sense
[22:41:10] *** Quits: terminalpusher (~terminalp@2a01:586:8e8d:1:216f:6651:6993:2328) (Remote host closed the connection)
[22:41:18] <Hash> :(
[22:41:24] <GeDaMo> I can reach thestonedapes.com but it said there was a problem with the security certificate
[22:41:32] <Hash> yeah that's fine
[22:41:37] <Hash> I'm just doing a sub domain for icecast
[22:41:43] <Hash> it works when I don't us emy vpn on there
[22:41:50] <Hash> It's running on the 24gb oracle ampere server
[22:41:50] <pulse> This site can’t be reached radio.thestonedapes.com took too long to respond.
[22:41:52] <Hash> free one
[22:41:57] <Hash> hey man what's up
[22:42:04] <pulse> hi
[22:42:20] <Hash> my firewall rules explicitly allow v4/v6 80/443
[22:42:33] <Hash> icecast runs on 8000 but that's not accessible to anyone but my home ip
[22:42:48] <Hash> and I got proxypass nginx to localhost 8000 at radio.thestonedapes.com
[22:42:57] <Hash> if I don't use my VPN to connect to it, it works.
[22:43:03] <Hash> If I use VPN nothing
[22:43:13] <Hash> And apparently outside world can't see it at all.
[22:43:20] <Hash> my firewall rules are goofy then.
[22:43:38] <Hash> Or...
[22:43:49] <Hash> Could be that my fireweall rules are fine, and oracle does a fucking double firewall.
[22:44:01] <Hash> Something in their GUI and as well as the OS
[22:44:09] *** Joins: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net)
[22:44:18] <Hash> They don't allow direct IP access. They NAT it over to your VPS on even public ipv4 through a VCN
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:06] <GeDaMo> from tracepath
[22:45:06] <GeDaMo> 14:  140.91.194.230                                      150.165ms asymm 16 
[22:45:06] <GeDaMo> 15:  129.146.187.63                                      151.835ms !H
[22:45:10] <EdFletcher> They do, HTTP ports are blocked by the instance firewall in my experience. They have a guide mentioning it but I can’t find it right now (it’s something about “setting up Apache on OCI”) 
[22:45:14] <pulse> i find webservers confusing. i just hit the default config, close my eyes and hope for the best
[22:45:24] <Hash> 0.0.0.0/0 TCP 80 80 <- oracle. allowed.
[22:45:30] <Hash> same with 443
[22:45:34] <Hash> same in OS, explicity allowed.
[22:45:51] *** Joins: migvie (~migvie@84.66.4.83)
[22:45:57] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[22:46:05] <vdamewood> pulse: When I was in school, the teachers consulted with me for how to setup web servers.
[22:46:12] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[22:46:26] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[22:46:35] <vdamewood> The one who proctored my capstone project just let me ignore that portion of the capstone because I'd setup a web server so many times.
[22:46:41] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:46:48] *** Joins: trevors (~trevors@user/trevors)
[22:46:57] <pulse> i know how to setup web servers, you call the server guy and point at the machine
[22:47:03] <EdFletcher> Ah yeah here it is, step 3 mentions it https://docs.oracle.com/en-us/iaas/developer-tutorials/tutorials/apache-on-oracle-linux/01-summary.htm 
[22:47:03] <bayaz> Title: Free Tier: Install Apache and PHP on an Oracle Linux Instance 
[22:47:17] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:17] <lisp123> What do people think of unit testing? I feel like they are unnecessary boilerplate
[22:47:32] <vdamewood> Ewww Oracle Linux. 🤮
[22:47:35] <pulse> lisp123, unit testing is fine
[22:47:48] <pulse> it's debatable if TDD is fine but unit testing itself is perfectly good
[22:47:50] <vdamewood> lisp123: Unit testing is critical.
[22:48:06] <EdFletcher> Yeah I don’t use Oracle Linux on mine, but their Ubuntu images suffer the same problem 
[22:48:17] <vdamewood> Yeah, TDD is taking it too far, but unit tests in general are wonderful and everyone should use them.
[22:48:26] <lilgopher> has someone tried to scrape jobs data from linkedin? I cant find an easy way. I tried to see the XHR/Fetch requests in the dev tools of my browser but I cant find the api call that fetches the job list
[22:48:45] <EdFletcher> Agreed 1000% on both points wrong vdamewood re: unit testing and TDD 
[22:49:00] <lisp123> pulse & vdamewood: Thanks. Can you let me know what I'm missing? If I develop in a very modular style, my modules are quite small so I find unit testing kinda "going through the ropes". Perhaps my projects too simple (I only program for fun)
[22:49:07] <EdFletcher> I like BDD a bit better because it’s a more natural fit to how we normally work 
[22:49:16] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 256 seconds)
[22:49:29] * [itchyjunk] rip hair
[22:49:34] <pulse> the real problem with unit testing is mocking in a fractal manner. you should avoid that
[22:49:48] <pulse> who tests the tests and all that
[22:49:51] <EdFletcher> lisp123: Yeah it’s the “going through the ropes” that I mean as the natural style. Just codify those into proper tests 
[22:50:07] *** Joins: Sadale (~Sadale@user/sadale)
[22:50:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[22:50:46] <GeDaMo> [itchyjunk]: stuck? :P
[22:50:48] <lisp123> EdFletcher: Okay, I should clean up my unit testing process to encourage myself to use them more
[22:50:49] <vdamewood> lisp123: If you're not unit testing, how are you testing?
[22:50:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:50:59] <Hash> How about now?
[22:51:04] <Hash> Does it load now?
[22:51:16] <pulse> Hash, yes
[22:51:22] <vdamewood> EdFletcher: Wrong?
[22:51:22] <GeDaMo> Yes
[22:51:23] <lisp123> vdamewood: I test in the REPL, but usually I spend a lot of time documentating and thinking about the code to make sure it is good to begin with
[22:51:24] <nomagno> mrig: Spent way too long on this demonstration of my custom terminal colour palette...
[22:51:24] <nomagno> https://0x0.st/oiu7.png
[22:51:25] <bayaz> Type: image/png Size: 12.6 kB 
[22:51:25] *** Quits: hexingb_ (~hexingb@180.212.210.23) (Ping timeout: 240 seconds)
[22:51:25] *** Joins: hololeap (~hololeap@user/hololeap)
[22:51:28] <Hash> Ok
[22:51:32] <Hash> Now it's working from behind my vpn
[22:51:42] <Hash> It's Oracle TRIPLE fucking firewall bro diggity
[22:51:42] <vdamewood> lisp123: And if you use unit tests, you can then automate the testing process.
[22:52:02] <Hash> Once in the oracle GUI panel. Once in my fucking ufw I use. But once in their custom iptables.v4 rules in their OS
[22:52:07] <Hash> ASSHOLIOS
[22:52:08] <lisp123> vdamewood: I see
[22:52:15] <Hash> It should work for you now
[22:52:19] <lisp123> Ok, let me try it more
[22:52:20] <[itchyjunk]> GeDaMo, yes
[22:52:25] <Hash> I had to explicity allow 443/80 in iptables. 
[22:52:30] <Hash> Gonna dump ufw.
[22:52:32] <[itchyjunk]> GeDaMo, i have the answer but it comes and goes form my mind
[22:52:40] <[itchyjunk]> i managed to solve a simpler case though, i think
[22:52:48] <[itchyjunk]> https://bpa.st/7ETQ
[22:52:49] <bayaz> Title: View paste 7ETQ 
[22:52:54] <vdamewood> lisp123: If you have unit tests, you can make sure that certain important tests are done, and by automating the process you can make sure it goes as fast as possible. Also, once you have automated unit tests, you can test on all of your supported platforms with the same tests.
[22:52:54] <nomagno> Hash: I recommend against using Ubuntu as a server environment most of the time
[22:52:58] <[itchyjunk]> i can take a char and a list and remove that character from that list
[22:53:00] <Hash> Sure
[22:53:11] <Hash> I may switch to BSD for my server env,.
[22:53:16] <nomagno> Debian, CentOS, FreeBSD
[22:53:22] <Hash> I'm tired of linux in general.
[22:53:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:53:34] <Hash> Since 1994
[22:53:38] <vdamewood> nomagno: s/CentOS/Rocky Linux/
[22:53:43] <Hash> In 2024, it will be 30 years on linux.
[22:53:45] <Hash> holy shit. I'm old.
[22:53:52] *** Joins: mickey8 (~user@user/mickey)
[22:53:53] <nomagno> vdamewood: It's understood when I say CentOS I don't mean CentOS stream...
[22:53:56] <nomagno> at least by most people
[22:53:58] <nomagno> hopefully
[22:54:06] <EdFletcher> vdamewood: Lol sorry for the fat fingers, not even sure what I meant that word to be. Disregard 😂🤦‍♂️ 
[22:54:08] <pulse> switch to Windows :D
[22:54:17] <lisp123> vdamewood: AH that's a good point re supported platforms
[22:54:28] *** Joins: floppy-disk (~floppy-di@p200300df1f0a4401ac6b9f025db561b4.dip0.t-ipconnect.de)
[22:55:02] <nomagno> I switched to a Gandi VPS now, bummer they don't offer Devuan or BSD images
[22:55:27] <mrig> nomagno: did you write the terminal?
[22:55:31] <vdamewood> nomagno: I have DO, they do FreeBSD.
[22:56:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[22:56:34] <nomagno> mrig: Oh no, this is just the palette. I'm using Terminator right now
[22:56:57] *** Quits: migvie (~migvie@84.66.4.83) (Ping timeout: 240 seconds)
[22:57:14] <mrig> oh right.
[22:57:28] <EdFletcher> Also lisp123 remember that unit tests should really be _just that_, tests of individual, atomic units. It helps down-scope things a lot, because often times folks are writing integration (or even end-to-end, ugh) tests within their “unit” test framework 
[22:58:06] *** Joins: sabry (~sabry@197.37.72.225)
[22:58:13] <lisp123> EdFletcher: Sorry, would you be able to expand. Does that mean I should test at the individual function level or does it mean not to write too many tests?
[22:58:14] <EdFletcher> All types of tests are important and critical, but don’t get lost in a forest of ill-defined tests when you really just want unit tests. 
[22:58:49] <lisp123> Do you have any good resources on how to write good unit tests? I think I'm doing it all wrong (I write like 8 tests for a 2 line function..)
[22:59:00] <EdFletcher> lisp123: Both. Unit tests should only be testing the functional UNITS (named well, it turns out 😀) and you should only write what you need to express the desired behavior (that’s BDD talking) 
[22:59:44] <vdamewood> EdFletcher: Bot-Driven Development?
[22:59:48] <EdFletcher> I don’t read nor advise any writing on this anymore, if only because I find it so polarizing. These are our personal beliefs, distilled from years of experience 😀 
[23:00:08] <EdFletcher> vdamewood: Hahaha the best kind! You guys don’t know it but I’m just an advanced AI 🤖 
[23:00:17] <GeDaMo> [itchyjunk]: one way you might do it is with a function which returns true if an item is in a list
[23:00:21] *** Quits: floppy-disk (~floppy-di@p200300df1f0a4401ac6b9f025db561b4.dip0.t-ipconnect.de) (Quit: Client closed)
[23:00:25] <lisp123> EdFletcher: Thanks for the info
[23:00:28] <vdamewood> EdFletcher: And how does teh I'm just an advanced AI make you feel?
[23:00:33] <EdFletcher> lisp123: Of course! 
[23:00:46] <KillerWasp> hello random 🤮 faces guys
[23:01:06] <EdFletcher> vdamewood: If I had feelings, I imagine I’d be feeling pretty superior… I would definitely be Lore, not Data 😂 
[23:01:12] <vdamewood> lisp123: To expand, though, a unit could be a function, a class/struct/type, or a module. It depends.
[23:01:22] <EdFletcher> ^truth 
[23:01:34] <vdamewood> EdFletcher: Tell me more about the if I had feelings.
[23:01:39] <EdFletcher> “Atomic units of functionality” is a broad description 
[23:01:45] *** Parts: edun (~e@user/edun) ()
[23:01:55] <lisp123> vdamewood: I see
[23:01:57] <KillerWasp> nomagno: you called Gandi to your VPS?
[23:02:05] <EdFletcher> vdamewood: Null pointer exception accessing “feelings” 
[23:02:20] <[itchyjunk]> GeDaMo, if i can remove a character from a string, i thought it would be simple to recurse it through it and remove string from string
[23:02:28] <vdamewood> EdFletcher: Null pointer exception detected at 0xBAADBEEF. Deleting process.
[23:02:31] <[itchyjunk]> but i have confused myself too hard xD
[23:02:35] *** Quits: xcombelle (~xavie@abordeaux-551-1-112-81.w92-156.abo.wanadoo.fr) (Quit: WeeChat 3.3)
[23:02:42] <KillerWasp> That's a bit scary, Gandi could take over the VPS from the hereafter and take on a life of its own.
[23:03:19] <vdamewood> 'Gandhi Goes Nuclear' would make a good name for an album.
[23:03:20] <GeDaMo> [itchyjunk]: I'm thinking iterate over the second list and for each item, check if it's in the first list
[23:03:26] <EdFletcher> vdamewood: Mmmm beef 
[23:03:45] <bjs> [itchyjunk]: a string is just a list of characters, so yes you should be able to do that
[23:04:08] <bjs> [itchyjunk]: you could write a function `removeChar :: Char -> String -> String` that takes a character to remove, and a string and gives a new string but without that character.
[23:05:09] <GeDaMo> It's basically a nested loop
[23:05:56] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:06:06] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:07:04] <[itchyjunk]> bjs, already done that
[23:07:23] <[itchyjunk]> GeDaMo, thats something similar to what i am trying to do
[23:07:24] <[itchyjunk]> https://bpa.st/LEVQ
[23:07:25] <bayaz> Title: View paste LEVQ 
[23:07:31] <[itchyjunk]> but my code is too convoluted for my own good
[23:08:00] <bjs> [itchyjunk]: you want to remove a whole substring? not just one character?
[23:08:45] <nomagno> KillerWasp: It's a company, but whatever
[23:08:46] <nomagno> funny-ish
[23:08:49] *** Joins: trevors (~trevors@user/trevors)
[23:09:11] <GeDaMo> [itchyjunk]: isn't blah only removing the first character if it matches?
[23:10:16] <[itchyjunk]> GeDaMo, yes
[23:10:26] <[itchyjunk]> bjs, i want to remove one character
[23:10:42] <bjs> [itchyjunk]: then why does myRemove :: String -> String -> String take a whole string?
[23:10:49] <lilgopher> has someone tried to scrape jobs data from linkedin? I cant find an easy way. I tried to see the XHR/Fetch requests in the dev tools of my browser but I cant find the api call that fetches the job list
[23:11:04] <[itchyjunk]> because it removing a list of characters
[23:11:44] <bjs> [itchyjunk]: what is the problem you are trying to solve?
[23:12:00] <[itchyjunk]> the top of the paste has the problem statement
[23:12:00] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[23:12:12] <[itchyjunk]> actually i pasted it wrong
[23:12:15] *** death916 is now known as doit4madden
[23:12:21] <[itchyjunk]> the problem statement is on line 4
[23:12:27] <bjs> ah sorry
[23:13:17] <mrig> nomagno: I'm using this at the moment https://8i8.fr/public/term.png
[23:13:18] <bayaz> Type: image/png Size: 352.1 kB 
[23:13:43] <pulse> mrig, needs a CRT filter!
[23:14:04] <mrig> just red an green for git status.
[23:14:16] <mrig> yes a bit of glow would be nice :)
[23:14:19] <bjs> [itchyjunk]: You've gone back to using ++, you know you can use : to put things on the front of a list :)
[23:15:05] <[itchyjunk]> my helper function somewhere in there returns a list
[23:15:46] *** Quits: panda (~panda@102-65-58-8.ftth.web.africa) (Ping timeout: 256 seconds)
[23:18:01] <bjs> [itchyjunk]: hmm but that doesn't quite make sense,  your `go` function doesn't match the type it should have for being the argument to foldr no?
[23:18:10] *** Quits: Chanakan5591_ (~Chanakan5@user/chanakan5591) (Ping timeout: 256 seconds)
[23:18:17] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[23:18:25] <bjs> Oh No I see what you are trying to do now
[23:18:49] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[23:19:01] *** Quits: Daemonick (~Daemonick@62.1.158.125) (Ping timeout: 240 seconds)
[23:19:14] <[itchyjunk]> my `myRmv` does what i want so the problems is past it i am 90% sure
[23:19:52] *** Joins: monkey_ (~user@190.104.116.153)
[23:20:17] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:20:18] <bjs> [itchyjunk]: yes that will do what you want, so what you can do is try repeat that many times, or what you can do is given the whole string of characters check not if the one char == but if *any* equal
[23:21:00] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:21:15] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[23:21:17] <bjs> [itchyjunk]: the code at the top is a bit strange because you take the string without the character in it (the blah) and then put stuff on the end (that's what the ++ would do).  btw you don't put parens around operators when they're infix
[23:21:45] <bjs> `(+) a b` or `a + b` not `a (+) b`
[23:22:06] <bjs> `a (+) b` is applying the two arguments (the "+" function) and (b) to a"
[23:23:40] <[itchyjunk]> ah
[23:23:53] <KillerWasp> `(+) a b` - cobol?
[23:24:54] <KillerWasp> oh, go.
[23:25:32] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[23:25:52] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[23:25:58] *** Joins: hexingb_ (~hexingb@36.153.84.12)
[23:26:13] *** Quits: password2 (~password8@user/password2) (Ping timeout: 240 seconds)
[23:26:47] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:28:12] *** Joins: kodah (~kodah@user/kodah)
[23:28:54] *** Joins: constxd (~brad@142.134.38.68)
[23:28:57] <[itchyjunk]> neither.
[23:28:58] <[itchyjunk]> haskell.
[23:29:58] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:31:27] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Remote host closed the connection)
[23:33:52] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[23:34:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[23:35:52] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[23:36:12] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[23:36:31] <sonny> [itchyjunk]: I'm guessing > would be defined with =,+, and - ?
[23:37:23] <[itchyjunk]> hmm not sure
[23:37:34] <[itchyjunk]> but i have been given a new quest to complete first
[23:37:39] <[itchyjunk]> implement filter using foldr
[23:37:49] <GeDaMo> I was just going to mention filter :P
[23:38:37] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c::2) (Ping timeout: 240 seconds)
[23:38:54] <GeDaMo> filter (/='a') "abacada" gives "bcd"
[23:39:34] *** Quits: sabry (~sabry@197.37.72.225) (Ping timeout: 256 seconds)
[23:40:16] <FloridaMan> also gives good gacamola
[23:42:11] * [itchyjunk] needs a short break 
[23:42:14] * [itchyjunk] can't think anymore
[23:44:42] <sonny> In haskell can you use Cons manually instead of : ?
[23:45:11] <GeDaMo> No, Cons is not a standard function
[23:45:12] <[itchyjunk]> : is the name i think?
[23:45:20] <sonny> hmm
[23:45:30] <[itchyjunk]> : is the name of the function you're looking for
[23:45:40] <sonny> I'm using a haskell like language but : seems to only be defined for patterns
[23:46:11] <GeDaMo> You can do (:) to make it prefix e.g. (:) 1 [] gives [1]
[23:46:38] <[itchyjunk]> wait i think i did it?
[23:46:56] <GeDaMo> : is a function, you can use it anywhere else you can use a function
[23:49:04] <sonny> sadly not it seems "<expression> expected instead of  : (ColonToken)"
[23:49:15] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[23:49:19] <GeDaMo> sonny: in what context?
[23:49:28] <sonny> reverse = foldl (:) []
[23:50:00] <sonny> this is the Clean programming language, which is simlar to haskell, just not in this aspect I guess
[23:50:04] <GeDaMo> Ah
[23:50:08] <sonny> I'm digging around to find the solution
[23:50:29] <sonny> the error is pretty nice I must admit
[23:51:09] <GeDaMo> You might have to define a separate function or a lambda if Clean has such things
[23:52:00] *** Joins: wildo (~lain6141@119.224.72.222)
[23:52:49] <sonny> the lambda is like \x -> x like haskell
[23:53:06] <sonny> ok
[23:53:54] <GeDaMo> Does (\x y-> x:y) work?
[23:54:53] <GeDaMo> foldl (\x y-> y:x) [] [1,2,3] works in Haskell
[23:55:02] <bjs> sonny: foldl (flip (:)) []   is reverse in Haskell
[23:55:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:56:34] <sonny> near reverse : cannot unfiy demanded type with offered type; String -> v2; [v1] -> [v1]
[23:57:03] <sonny> (\x y-> x:y) well it works but it does work :P
[23:57:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:57:17] <sonny> the syntax has a slight variation (\x y-> [x:y])
[23:57:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:57:38] <sonny> bjs: thanks
[23:59:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:59:23] <sonny> it currently looks like this `reverse = foldl (\x y -> [y:x]) []` so I guess near reverse means the first arguement of foldl
[23:59:42] <bjs> sonny: are you trying to write it in Haskell?
[23:59:53] <bjs> [y:x] is a list containing a list.
