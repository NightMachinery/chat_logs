[00:00:15] *** Joins: alx741 (~alx741@157.100.197.240)
[00:00:43] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:00:44] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[00:00:45] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[00:01:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[00:01:11] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:01:20] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:01:38] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[00:01:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:02:05] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:03:49] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[00:03:56] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[00:06:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[00:06:18] *** Quits: pitiK3U (~Piti@176.74.133.211) (Changing host)
[00:06:18] *** Joins: pitiK3U (~Piti@user/pitiK3U)
[00:06:27] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:06:32] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[00:06:59] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[00:07:15] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[00:09:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:13:24] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 240 seconds)
[00:16:54] *** Quits: komikat_ (~komikat@59.89.164.147) (Remote host closed the connection)
[00:18:28] *** Joins: alx741 (~alx741@157.100.197.240)
[00:18:29] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:18:49] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[00:21:12] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:24:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:25:29] *** Joins: machinedgod (~machinedg@24.105.81.50)
[00:25:34] <anon44409248> :t chr
[00:25:35] <lambdabot> Int -> Char
[00:26:17] <anon44409248> My terminal doesn't return the type after importing Data.Char I get a variable not in scope: chr error
[00:26:39] <geekosaur> import Data.Char
[00:26:42] <geekosaur> @index chr
[00:26:42] <lambdabot> GHC.Char, Data.Char
[00:26:57] <geekosaur> lambdabot has a large import list
[00:27:03] <geekosaur> @where L.hs
[00:27:03] <lambdabot> what lambdabot has in scope is at https://silicon.int-e.eu/lambdabot/State/Pristine.hs
[00:27:49] <anon44409248> what does @index chr do? and what does GHC.Char, Data.Char do?
[00:28:08] <anon44409248> are those specific function? so I'm not importing everything in the library?
[00:28:19] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[00:28:33] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[00:28:48] <geekosaur> @index tells you the (standard) modules in which a function is defined
[00:28:48] <lambdabot> bzzt
[00:29:18] <geekosaur> modules starting with `GHC` are not generally intended for users to import
[00:29:22] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:29:26] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[00:29:27] <anon44409248> oh ok 
[00:30:21] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[00:30:22] <anon44409248> I still get this error: <interactive>:1:1: error: Variable not in scope: chr
[00:30:25] <janus> what is the right way to import the Generic type class?
[00:31:40] <geekosaur> if it's really :1:1: thne you still haven't imported Data.Char
[00:31:51] <geekosaur> type `import Data.Char` at the prompt
[00:32:16] <tomsmeding> janus: import GHC.Generic ?
[00:33:05] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[00:33:23] <anon44409248> it works when I import it on the prompt but I need it in the file 
[00:33:31] *** Joins: zebrag (~chris@user/zebrag)
[00:33:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[00:33:56] <anon44409248> is it meant to be import Data.Char ()?
[00:34:10] <geekosaur> without the (), or put `chr` inside the ()
[00:34:40] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[00:35:25] *** Joins: slac99733 (~slack1256@45.4.2.52)
[00:35:35] <anon44409248> Alright 
[00:35:59] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:36:04] *** Quits: pitiK3U (~Piti@user/pitiK3U) (Remote host closed the connection)
[00:36:19] *** Joins: pitiK3U (~Piti@user/pitiK3U)
[00:36:32] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:37:18] *** Quits: slack1256 (~slack1256@45.4.2.52) (Ping timeout: 272 seconds)
[00:37:23] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Remote host closed the connection)
[00:38:57] *** Joins: alx741 (~alx741@157.100.197.240)
[00:39:18] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[00:41:46] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[00:41:49] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[00:41:51] <anon44409248> how to I clear a line on the terminal but more than one character at a time?
[00:42:03] <anon44409248> I can't select all 
[00:42:22] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[00:42:33] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:44:16] *** Quits: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl) (Ping timeout: 272 seconds)
[00:44:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[00:44:45] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:44:48] *** Quits: pitiK3U (~Piti@user/pitiK3U) (Read error: Connection reset by peer)
[00:44:52] <tomsmeding> anon44409248: ctrl-e ctrl-u
[00:45:02] *** Joins: pitiK3U (~Piti@user/pitiK3U)
[00:45:08] <tomsmeding> (ctrl-e moves to end of line, ctrl-u deletes from cursor to beginning of line)
[00:45:25] <geekosaur> depends on what they're doing, no?
[00:45:36] *** Joins: coot (~coot@213.134.190.95)
[00:45:47] *** Joins: pavonia (~user@user/siracusa)
[00:45:48] <janus> could also use ctrl-a (jmp to begin), ctrl-e (delete from current char)
[00:45:52] <geekosaur> if they;'re talking about output then we'relooking at an ansi package
[00:45:56] <janus> ah no, ctrl-k
[00:46:46] <tomsmeding> geekosaur: given that they said "I can't select all", sounds like a ghci input line
[00:47:02] <anon44409248> Also, when I press the up arrow, it appends the history instead of one at a time showing the historical commands
[00:47:13] <anon44409248> tomsmeding: yeah I'm using ghci input 
[00:47:42] <tomsmeding> geekosaur: funny, the ansi escape code for erasing a single line is also \e[K
[00:47:57] <geekosaur> are you on an M1? I think there's a known bug in haskeline
[00:48:04] *** Joins: coot_ (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[00:48:07] <geekosaur> fixed but not upstreamed yet
[00:48:12] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 250 seconds)
[00:48:13] <anon44409248> yeah, in the terminal on vscode 
[00:48:22] <geekosaur> oh, vscode. no idea
[00:49:44] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:49:56] *** Quits: coot (~coot@213.134.190.95) (Ping timeout: 250 seconds)
[00:50:25] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:51:41] *** Quits: pitiK3U (~Piti@user/pitiK3U) (Ping timeout: 252 seconds)
[00:51:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[00:52:14] *** slac99733 is now known as slack1256
[00:52:43] *** Joins: pitiK3U (~Piti@user/pitiK3U)
[00:53:06] <janus> is Kazu Yamamoto on IRC?
[00:53:46] <janus> it's the person about to eat a hotdog on wheels
[00:54:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[00:54:55] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[00:58:03] *** Joins: alx741 (~alx741@157.100.197.240)
[00:58:08] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[00:58:13] *** Quits: pitiK3U (~Piti@user/pitiK3U) (Ping timeout: 256 seconds)
[00:58:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[00:58:58] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[01:00:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[01:00:35] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:00:48] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[01:02:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[01:02:34] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb)
[01:02:36] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[01:02:39] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 272 seconds)
[01:03:19] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[01:06:10] *** Joins: zebrag (~chris@user/zebrag)
[01:07:04] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[01:10:36] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:4069:47d9:95c:b16e) (Remote host closed the connection)
[01:10:37] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:11:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[01:11:49] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Ping timeout: 256 seconds)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:13:24] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[01:15:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 252 seconds)
[01:16:23] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[01:18:32] *** Joins: alx741 (~alx741@181.199.42.143)
[01:19:15] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:33] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[01:19:49] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[01:20:11] *** Quits: coot_ (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot_)
[01:21:24] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[01:22:01] *** Joins: alx741 (~alx741@157.100.197.240)
[01:24:54] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[01:25:08] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[01:25:16] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[01:25:52] *** Joins: yauhsien (~yauhsien@61-231-37-5.dynamic-ip.hinet.net)
[01:29:42] *** Joins: michalz (~michalz@185.246.204.93)
[01:30:12] *** Quits: yauhsien (~yauhsien@61-231-37-5.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[01:30:29] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[01:32:13] *** Quits: michalz (~michalz@185.246.204.93) (Remote host closed the connection)
[01:34:06] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Remote host closed the connection)
[01:34:24] <mason0> is hackage broken? or just win32 pages on hackage?
[01:34:27] <mason0> https://hackage.haskell.org/package/Win32-2.6.2.0/docs/src/System-Win32-Console.html#getConsoleScreenBufferInfo
[01:36:15] *** Quits: forell (~forell@user/forell) (Quit: ZNC - https://znc.in)
[01:36:35] <geekosaur> hackage can't generate docs for win32 packages because it runs on linux and haddock relies on running ghc
[01:37:03] <mason0> docs exist. I just can't look at the source. https://hackage.haskell.org/package/Win32-2.6.2.0/docs/System-Win32-Console.html#v:setConsoleOutputCP
[01:37:28] <mason0> maybe reason is the same though?
[01:37:52] <geekosaur> \same reason, yes
[01:38:05] *** Joins: forell (~forell@user/forell)
[01:38:16] <geekosaur> normally in this case someone generates the docs on a capable system and uploads them to hackage; I guess this didn't happen for Win32
[01:38:22] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[01:38:37] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[01:38:55] <monochrom> https://hackage.haskell.org/package/Win32-2.13.2.0/docs/src/System.Win32.Console.html#getConsoleScreenBufferInfo exists. But its just a foreign import line.
[01:38:57] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[01:39:20] <mason0> thanks.. not sure how you got to that link?
[01:39:41] <monochrom> By unpinning the "2.6.2.0" version number part.
[01:39:58] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:40:15] <monochrom> By starting with the unversioned https://hackage.haskell.org/package/Win32
[01:41:36] *** Joins: michalz (~michalz@185.246.204.75)
[01:43:34] *** Joins: alx741 (~alx741@181.199.42.143)
[01:45:15] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[01:45:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[01:46:37] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[01:48:28] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[01:49:35] *** Joins: sagax (~sagax_nb@user/sagax)
[01:50:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[01:50:32] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:51:37] *** Joins: anon44409248 (~anon44409@host-92-19-97-204.as13285.net)
[01:52:03] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[01:55:48] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[01:56:35] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[01:58:26] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:00:35] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:01:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:03:49] *** Joins: alx741 (~alx741@181.199.42.143)
[02:04:40] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:04:51] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[02:06:35] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[02:07:17] *** Joins: alx741 (~alx741@157.100.197.240)
[02:07:55] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[02:09:59] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:11:10] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:17:13] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:17:34] <lechner> Hi, why are the docs here not available, please, even though the build log says OK?    https://hackage.haskell.org/package/arbtt
[02:17:52] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a)
[02:18:00] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[02:18:10] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[02:18:51] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:19:33] <monochrom> Perhaps its an exe-only package?
[02:20:25] <geekosaur> that's what it looks like
[02:20:44] <geekosaur> the "docs" here are library documentation, but arbtt is an executable and has nolibraries to document
[02:21:13] <monochrom> The page still has a readme and a link to a user guide.
[02:22:40] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 250 seconds)
[02:23:05] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:23:08] *** Joins: xkuru (~xkuru@user/xkuru)
[02:23:13] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Ping timeout: 256 seconds)
[02:27:56] *** Joins: alx741 (~alx741@157.100.197.240)
[02:29:48] <lechner> monochrom geekosaur: thank you!
[02:30:27] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb)
[02:30:40] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[02:30:41] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:33:10] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[02:34:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[02:42:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[02:43:20] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Remote host closed the connection)
[02:43:21] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[02:46:24] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[02:46:59] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[02:47:00] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[02:47:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[02:47:03] *** Joins: alx741 (~alx741@157.100.197.240)
[02:47:18] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-37-5.dynamic-ip.hinet.net)
[02:49:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:50:29] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[02:50:35] *** Quits: yauhsien_ (~Yau-Hsien@61-231-37-5.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[02:58:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[02:58:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[02:58:57] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[02:59:03] <romesrf> hello :)
[02:59:08] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: The Lounge - https://thelounge.chat)
[02:59:26] <romesrf> (\case (Left e, l) -> second (l <>); (Right x, l) -> const (Right x, l)) <$> x' r <*> y r
[02:59:36] <romesrf> if x' r is Right, will y r be run?
[03:00:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[03:00:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[03:00:59] *** Quits: michalz (~michalz@185.246.204.75) (Remote host closed the connection)
[03:01:23] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:01:35] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:02:41] <Axman6> yes
[03:03:24] <Axman6> if you only want to run y r after you know that x' r is Left or Right, you need to use something monadic
[03:03:31] <romesrf> I see! :)
[03:03:52] <romesrf> I was wondering why Applicative ExceptT m required Monad m
[03:04:00] <Axman6> the key difference between applicative and monad is that monads can make executions decisions based on the returned value
[03:04:22] <romesrf> Axman6: that's some nice insight, thank you
[03:04:28] <Axman6> :t (<*>>
[03:04:30] <lambdabot> error:
[03:04:30] <lambdabot>     parse error (possibly incorrect indentation or mismatched brackets)
[03:04:31] <Axman6> :t (<*>)
[03:04:33] <lambdabot> Applicative f => f (a -> b) -> f a -> f b
[03:04:35] <Axman6> :t (=<<)
[03:04:36] <lambdabot> Monad m => (a -> m b) -> m a -> m b
[03:05:08] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:07:06] <jackdk> romesrf, Axman6: A great demonstration is trying to write `condA :: Applicative f => f Bool -> f a -> f a -> f a` and `condM :: Monad m => m Bool -> m a -> m a -> m a`. Then compare `condA (Just True) (Just 3) Nothing` with `condM (Just True) (Just 3) Nothing`
[03:08:40] *** Joins: alx741 (~alx741@157.100.197.240)
[03:08:52] <romesrf> jackdk: :) I'll try it out
[03:10:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[03:11:00] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: The Lounge - https://thelounge.chat)
[03:11:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[03:13:31] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[03:13:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[03:15:57] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[03:16:06] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[03:17:23] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb)
[03:17:24] *** Joins: anon44409248 (~anon44409@host-92-19-97-204.as13285.net)
[03:18:06] *** Joins: takenbrandi (~brandi@104.220.20.37)
[03:23:32] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[03:24:15] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[03:26:15] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[03:26:34] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:27:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[03:28:36] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:30:39] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[03:30:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[03:31:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[03:33:01] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[03:34:10] *** Joins: alx741 (~alx741@181.199.42.143)
[03:35:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[03:36:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[03:37:44] *** Quits: alx741 (~alx741@181.199.42.143) (Read error: Connection reset by peer)
[03:37:56] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[03:39:38] *** Joins: yauhsien (~yauhsien@61-231-37-5.dynamic-ip.hinet.net)
[03:49:22] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:53:19] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[03:53:34] *** Quits: mtjm (~mutantmel@2604:a880:2:d0::208b:d001) (Remote host closed the connection)
[03:54:00] *** Joins: mtjm (~mutantmel@2604:a880:2:d0::208b:d001)
[03:54:19] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[03:54:25] *** Joins: alx741 (~alx741@157.100.197.240)
[03:57:53] *** [_] is now known as [itchyjunk]
[03:58:44] *** Joins: dextaa9 (~DV@user/dextaa)
[03:59:29] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 250 seconds)
[03:59:29] *** dextaa9 is now known as dextaa
[04:00:14] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[04:00:31] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[04:01:48] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:06:35] *** Quits: gdown (~gavin@h69-11-149-231.kndrid.broadband.dynamic.tds.net) (Remote host closed the connection)
[04:07:44] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:08:50] *** Joins: Batzy (~quassel@user/batzy)
[04:09:23] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[04:10:57] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:11:54] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[04:12:01] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Ping timeout: 256 seconds)
[04:12:08] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
[04:12:18] *** Quits: takenbrandi (~brandi@104.220.20.37) (Ping timeout: 250 seconds)
[04:13:46] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 260 seconds)
[04:16:37] *** Quits: alp_ (~alp@user/alp) (Ping timeout: 240 seconds)
[04:16:52] *** Joins: anon44409248 (~anon44409@host-92-19-97-204.as13285.net)
[04:17:19] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[04:18:03] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[04:19:06] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[04:19:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:19:54] *** Joins: alx741 (~alx741@157.100.197.240)
[04:20:11] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[04:22:47] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:23:33] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:25:35] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[04:26:45] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[04:27:48] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[04:30:06] *** Joins: mvk (~mvk@2607:fea8:5cc3:7e00::45ee)
[04:30:09] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Ping timeout: 256 seconds)
[04:32:12] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[04:32:20] *** Joins: komikat (~komikat@59.89.164.147)
[04:34:11] *** Joins: VarikValefor[m] (~varikvale@2001:470:69fc:105::a5d)
[04:36:52] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[04:36:57] *** Quits: komikat (~komikat@59.89.164.147) (Ping timeout: 256 seconds)
[04:37:40] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[04:39:53] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:40:27] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[04:41:01] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:41:31] *** Joins: alx741 (~alx741@157.100.197.240)
[04:42:09] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 252 seconds)
[04:43:40] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 272 seconds)
[04:43:40] *** Quits: yauhsien (~yauhsien@61-231-37-5.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[04:44:37] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[04:47:08] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:48:44] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[04:49:04] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:50:17] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-37-5.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[04:51:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 245 seconds)
[04:54:03] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[04:56:13] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 240 seconds)
[04:57:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[04:58:49] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[05:00:57] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[05:01:32] *** Joins: alx741 (~alx741@157.100.197.240)
[05:02:35] *** Joins: anon44409248 (~anon44409@host-92-19-97-204.as13285.net)
[05:02:38] *** Quits: slack1256 (~slack1256@45.4.2.52) (Remote host closed the connection)
[05:03:33] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:03:43] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[05:04:03] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[05:05:39] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Remote host closed the connection)
[05:06:16] *** Joins: vysn (~vysn@user/vysn)
[05:06:59] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Ping timeout: 256 seconds)
[05:08:56] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:10:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:11:51] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[05:22:36] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:26:57] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[05:30:47] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[05:31:21] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[05:31:38] <lechner> Hi, what is the easiest way to get the cabal files for      https://hackage.haskell.org/package/equivalence-0.1    please?
[05:31:43] <lechner> file
[05:32:04] <lechner> https://hackage.haskell.org/package/equivalence-0.1/equivalence.cabalhttps://hackage.haskell.org/package/equivalence-0.1/equivalence.cabal
[05:32:09] <geekosaur> It's the "Package description" link
[05:32:28] <lechner> yeah, i just saw it. thanks!
[05:33:04] <geekosaur> note that this will miss any revisions; if there are any you'll have to follow that linkand the revision number will be a hotlinkto the revised cabal file
[05:33:34] <lechner> that's what they meant by "original 
[05:34:02] <lechner> how do the revisions take place, please?  metatdata?
[05:34:27] <lechner> i see it
[05:34:33] <lechner> https://hackage.haskell.org/package/equivalence-0.3.5/revisions/https://hackage.haskell.org/package/equivalence-0.3.5/revisions/
[05:34:41] <geekosaur> yeh
[05:35:15] <lechner> that caused a hiccup in debian's machine
[05:35:22] <geekosaur> there's a link for trustees and other authorized people to loosen package restrictions in the case where a package update isn't actually needed
[05:35:44] <lechner> and that edit was from sep 19
[05:35:53] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Ping timeout: 256 seconds)
[05:36:46] <lechner> but here they tightened for mtl?
[05:36:48] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[05:37:22] <lechner> actually, the edit was from feb 22
[05:38:20] *** Joins: vicfred (~vicfred@user/vicfred)
[05:41:11] <sclv> https://github.com/pa-ba/equivalence/commit/a939a65f550cce63d0afb690e385149d6baedd00
[05:42:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:42:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:42:50] *** Joins: wroathe (~wroathe@user/wroathe)
[05:43:06] <sclv> it could be this was a mistaken revision. You could contact andres to ask
[05:43:11] <lechner> geekosaur: in the equivalence case, the "Package description" link pointed to the latests cabal revision (mtl >= 2.2.1)
[05:43:22] *** Joins: cynomys (~cynomys@user/cynomys)
[05:43:39] <lechner> sclv: i am too new
[05:44:07] <sclv> yes the description link should point to latesr
[05:45:56] <lechner> thanks!
[05:48:25] *** Joins: alx741 (~alx741@157.100.197.240)
[05:51:25] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[05:53:43] *** Joins: AlexNoo_ (~AlexNoo@178.34.161.1)
[05:54:06] *** Quits: AlexZenon (~alzenon@178.34.163.8) (Ping timeout: 268 seconds)
[05:54:06] *** Quits: Alex_test (~al_test@178.34.163.8) (Ping timeout: 268 seconds)
[05:55:27] *** Quits: AlexNoo (~AlexNoo@178.34.163.8) (Ping timeout: 256 seconds)
[05:56:54] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:84ab:e3a9:1ea3:da7a) (Ping timeout: 260 seconds)
[05:57:33] *** Joins: Alex_test (~al_test@178.34.161.1)
[05:57:34] *** Joins: AlexZenon (~alzenon@178.34.161.1)
[05:58:07] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[05:59:35] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:84ab:e3a9:1ea3:da7a)
[06:02:36] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[06:04:28] *** Joins: joo-_ (~joo-_@87-49-44-190-mobile.dk.customer.tdc.net)
[06:04:28] *** Quits: joo-_ (~joo-_@87-49-44-190-mobile.dk.customer.tdc.net) (Changing host)
[06:04:28] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[06:06:04] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:06:04] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb)
[06:09:57] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[06:10:12] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Ping timeout: 240 seconds)
[06:11:46] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:12:44] *** Joins: justAstache (~justache@user/justache)
[06:12:49] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[06:13:20] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[06:13:32] *** Joins: notzmv (~zmv@user/notzmv)
[06:16:40] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 250 seconds)
[06:19:41] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[06:20:34] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[06:22:02] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:23:18] *** Joins: khole (~khole@217.146.83.196)
[06:25:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb)
[06:27:00] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[06:27:34] *** Joins: yauhsien_ (~Yau-Hsien@61-231-36-13.dynamic-ip.hinet.net)
[06:27:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[06:28:36] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[06:30:32] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[06:31:37] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[06:33:08] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 250 seconds)
[06:35:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:36:37] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[06:38:16] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[06:38:37] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[06:39:53] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:39:53] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:39:53] *** finn_elija is now known as FinnElija
[06:41:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[06:42:16] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[06:42:48] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[06:43:03] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[06:44:12] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:44:40] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[06:44:45] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[06:45:29] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[06:47:49] *** Quits: td_ (~td@94.134.91.171) (Ping timeout: 240 seconds)
[06:49:42] *** Joins: td_ (~td@94.134.91.95)
[06:50:20] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 272 seconds)
[06:55:44] *** Quits: khole (~khole@217.146.83.196) (Quit: Leaving)
[06:57:41] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[06:59:35] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[06:59:47] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[07:00:52] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[07:02:33] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[07:03:10] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[07:03:16] *** Joins: mbuf (~Shakthi@223.178.126.53)
[07:03:35] *** Joins: agumonke` (~user@88.163.231.79)
[07:04:05] *** Joins: img (~img@user/img)
[07:06:15] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[07:08:46] *** Joins: takenbrandi (~brandi@104.220.20.37)
[07:13:16] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[07:14:29] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:18:54] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[07:19:22] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[07:23:26] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[07:24:36] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Ping timeout: 240 seconds)
[07:27:08] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[07:28:22] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[07:30:04] <albet70> what's the fastest way to check if a list is ordered? a int list
[07:31:07] <albet70> [1,2,3] is ordered, [1,3,2] isn't
[07:31:38] <dsal> all + zipWith I think.
[07:31:44] <Axman6> :t all (uncurry (<=)) . ap zip tail
[07:31:45] <lambdabot> Ord a => [a] -> Bool
[07:31:55] <Axman6> > all (uncurry (<=)) . ap zip tail $ [1..10]
[07:31:57] <lambdabot>  True
[07:32:02] <Axman6> > all (uncurry (<=)) . ap zip tail $ [1..10] ++ [10]
[07:32:04] <lambdabot>  True
[07:32:06] <Axman6> > all (uncurry (<=)) . ap zip tail $ [1..10] ++ [9]
[07:32:08] <lambdabot>  False
[07:32:29] <Axman6> @quote zip`ap`tail
[07:32:29] <lambdabot> quicksilver says: zip`ap`tail the aztec god of consecutive numbers
[07:32:39] <albet70> zipWit seems good
[07:32:44] <albet70> zipWith
[07:33:49] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 240 seconds)
[07:34:49] <albet70> tail then zipWith
[07:34:51] <Axman6> > and . ap (zipWith (<=) tail $ [1..10] ++ [9]
[07:34:52] <lambdabot>  <hint>:1:45: error:
[07:34:52] <lambdabot>      parse error (possibly incorrect indentation or mismatched brackets)
[07:34:59] <Axman6> > and . ap (zipWith (<=)) tail $ [1..10] ++ [9]
[07:35:00] <lambdabot>  False
[07:35:43] <dsal> haha.  I was off doing that with lambdabot.
[07:35:49] <dsal> > let ordered = and . ap (zipWith (<=)) tail   in ordered [1, 2, 3]
[07:35:51] <lambdabot>  True
[07:42:40] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:43:10] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[07:44:51] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[07:48:32] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[07:49:34] <albet70> what's <=?
[07:49:45] <albet70> new symbol?
[07:49:57] <albet70> less than...
[07:51:56] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[07:52:05] <jackdk> less than or equal to
[07:56:59] *** Quits: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 256 seconds)
[07:58:24] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[07:58:39] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[08:00:58] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:01:43] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[08:04:51] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[08:06:36] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[08:08:36] *** Quits: takenbrandi (~brandi@104.220.20.37) (Ping timeout: 240 seconds)
[08:08:36] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[08:09:14] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[08:10:15] *** Joins: coot (~coot@213.134.190.95)
[08:12:29] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[08:13:08] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:98c2:4d87:1b3a:6400)
[08:18:55] *** Joins: deadmarshal_ (~deadmarsh@95.38.112.14)
[08:18:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[08:19:39] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[08:21:31] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:21:47] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[08:24:04] *** Quits: deadmarshal_ (~deadmarsh@95.38.112.14) (Ping timeout: 272 seconds)
[08:30:48] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[08:30:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:31:38] *** Joins: deadmarshal_ (~deadmarsh@95.38.112.14)
[08:34:31] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[08:34:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[08:35:28] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[08:41:27] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[08:43:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[08:47:27] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[08:48:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[08:50:18] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[08:51:16] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[08:52:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 256 seconds)
[08:53:10] *** Joins: komikat (~komikat@59.89.164.147)
[08:54:03] *** Quits: komikat (~komikat@59.89.164.147) (Remote host closed the connection)
[08:54:40] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:125:fce3:168e:466a)
[08:54:40] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[08:54:42] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:55:07] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:55:13] *** Joins: once_upon_a_pota (~once_upon@69.160.29.23)
[09:05:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[09:09:42] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (EOF))
[09:11:19] *** Joins: bahamas (~lucian@84.232.140.52)
[09:12:37] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: leaving)
[09:12:40] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[09:15:34] *** Joins: Erutuon (~Erutuon@user/erutuon)
[09:16:25] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[09:16:57] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[09:20:17] *** Quits: once_upon_a_pota (~once_upon@69.160.29.23) (Ping timeout: 256 seconds)
[09:21:36] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[09:22:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[09:22:43] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[09:23:34] <Axman6> albet70: there's an alternative function which also meets your specification: isORdered [1,2,3] = True; isOrdered [1,3,2] = False; isOrdered error $ "Unspecified ordering: " <> show xs :)
[09:24:18] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[09:24:36] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:98c2:4d87:1b3a:6400) (Ping timeout: 240 seconds)
[09:25:18] *** Joins: Everything (~Everythin@37.115.210.35)
[09:26:08] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 272 seconds)
[09:27:21] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[09:29:34] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[09:31:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[09:32:57] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 240 seconds)
[09:33:00] *** Quits: deadmarshal_ (~deadmarsh@95.38.112.14) (Ping timeout: 240 seconds)
[09:33:05] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 252 seconds)
[09:33:13] *** Quits: emf (~emf@2620:10d:c090:400::5:b81) (Quit: emf)
[09:34:06] *** Joins: emf (~emf@2620:10d:c090:400::5:b81)
[09:34:11] *** Joins: tomku (~tomku@user/tomku)
[09:35:06] *** Quits: emf (~emf@2620:10d:c090:400::5:b81) (Client Quit)
[09:35:11] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[09:35:23] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[09:36:12] *** Joins: emf (~emf@2620:10d:c090:400::5:b81)
[09:36:39] *** Joins: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl)
[09:36:59] *** Quits: emf (~emf@2620:10d:c090:400::5:b81) (Client Quit)
[09:38:22] *** Joins: emf (~emf@2620:10d:c090:400::5:b81)
[09:39:00] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[09:39:25] *** Joins: agumonke` (~user@37.175.253.29)
[09:39:34] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[09:46:39] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 256 seconds)
[09:50:03] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:50:45] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Quit: Connection error?!)
[09:51:10] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[09:53:15] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[09:53:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Read error: Connection reset by peer)
[09:53:32] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[09:55:19] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[09:57:01] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[09:57:21] <Axman6> (Also known as the unit test method of TDD)
[09:58:06] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:59:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[09:59:42] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:00:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[10:03:28] *** Joins: tomku (~tomku@user/tomku)
[10:04:48] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[10:08:52] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[10:11:06] *** Joins: alp_ (~alp@user/alp)
[10:11:42] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[10:16:17] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[10:17:12] *** Joins: fef (~thedawn@user/thedawn)
[10:20:05] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[10:25:09] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:26:20] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[10:26:43] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[10:29:51] *** Quits: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl) (Read error: Connection reset by peer)
[10:30:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[10:31:01] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[10:34:35] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[10:35:20] *** Joins: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl)
[10:37:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:40:52] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[10:40:52] *** Quits: alp_ (~alp@user/alp) (Ping timeout: 272 seconds)
[10:42:32] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:45:51] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[10:45:51] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[10:46:56] <albet70> > all (== True) $ fmap (\x -> (fst x) >= (snd x)) $ zip (tail [1..6]) [1..6]
[10:46:58] <lambdabot>  True
[10:47:08] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[10:47:30] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 250 seconds)
[10:49:15] *** Joins: jakalx (~jakalx@base.jakalx.net)
[10:54:22] <opqdonut> albet70: consider uncurry (>=)
[10:54:39] <pavonia> @src and
[10:54:39] <lambdabot> and = foldr (&&) True
[10:56:13] <albet70> what's uncurry?
[10:56:41] <opqdonut> :t uncurry
[10:56:41] <lambdabot> (a -> b -> c) -> (a, b) -> c
[10:56:46] <opqdonut> :t uncurry (>=)
[10:56:47] <lambdabot> Ord a => (a, a) -> Bool
[11:01:48] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[11:02:13] *** Joins: michalz (~michalz@185.246.204.75)
[11:03:37] <hololeap> it just takes a "two argument function" and turns it into a "function that takes a tuple as an argument"
[11:04:11] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[11:04:21] <hololeap> > (uncurry (+)) (3,4)
[11:04:22] <lambdabot>  7
[11:04:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[11:05:26] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[11:05:55] <hololeap> uncurry f = (\x -> (fst x) `f` (snd x))
[11:07:56] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[11:08:34] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[11:09:05] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:9e51:3601:4227:d1e0)
[11:11:49] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[11:14:36] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[11:14:36] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[11:15:02] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[11:16:11] *** Joins: raym (~raym@user/raym)
[11:24:00] *** Joins: marquis_andras (~marquis_a@61.69.224.60)
[11:26:57] *** Quits: agumonke` (~user@37.175.253.29) (Ping timeout: 256 seconds)
[11:29:00] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[11:29:14] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:30:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[11:31:24] *** Joins: alp_ (~alp@user/alp)
[11:32:34] *** Joins: Akiva (~Akiva@user/Akiva)
[11:32:51] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[11:34:00] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:36:08] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[11:37:50] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:40:30] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[11:41:58] *** Joins: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net)
[11:42:10] *** Joins: ardell (~ardell@user/ardell)
[11:42:24] *** Joins: dut (~dut@user/dut)
[11:46:09] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[11:47:17] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:48:04] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[11:49:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[11:52:11] *** Joins: Guest65 (~Guest65@156.220.19.33)
[11:52:21] <Guest65> nop
[11:52:26] <Guest65> hello
[11:52:44] <Guest65> what a best book for learn haskell
[11:52:52] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[11:53:44] *** Joins: polezaivsani (~polezaivs@orangeshoelaces.net)
[11:55:15] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[11:55:16] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[11:55:41] *** Quits: Guest65 (~Guest65@156.220.19.33) (Client Quit)
[11:57:54] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[12:00:33] *** Joins: chele (~chele@user/chele)
[12:04:37] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 240 seconds)
[12:08:35] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:10:08] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[12:11:09] *** Quits: drdo6 (~drdo@roach0.drdo.eu) (Quit: The Lounge - https://thelounge.chat)
[12:11:25] *** Joins: drdo (~drdo@roach0.drdo.eu)
[12:12:10] *** Joins: bahamas (~lucian@84.232.140.52)
[12:12:56] *** Joins: Guest23 (~Guest23@2a03:e581:a::207:64)
[12:13:35] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[12:14:12] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[12:14:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[12:14:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:15:10] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[12:15:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:15:48] *** Quits: ishutin (~ishutin@fibhost-66-208-172.fibernet.hu) (Ping timeout: 240 seconds)
[12:15:51] *** Quits: Guest23 (~Guest23@2a03:e581:a::207:64) (Client Quit)
[12:18:11] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:19:44] *** Joins: Natch (~natch@c83-254-0-119.bredband.tele2.se)
[12:19:45] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[12:19:47] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[12:21:11] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[12:22:07] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:b4ac:6a8f:4bfc:720a) (Remote host closed the connection)
[12:22:26] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:e1b2:838c:ba67:c714)
[12:22:46] *** Joins: cfricke (~cfricke@user/cfricke)
[12:23:10] *** Joins: ccntrq (~Thunderbi@2a01:e34:eccb:b060:403:7e11:65d2:d468)
[12:25:01] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[12:29:28] *** Quits: emf (~emf@2620:10d:c090:400::5:b81) (Quit: emf)
[12:30:41] *** Quits: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9) (Quit: You have been kicked for being idle)
[12:30:43] *** Quits: james[m]123 (~jamesnina@2001:470:69fc:105::1:4203) (Quit: You have been kicked for being idle)
[12:30:43] *** Quits: Michal[m] (~oomiguelm@2001:470:69fc:105::1:5ab0) (Quit: You have been kicked for being idle)
[12:31:07] *** Joins: thevishy (~Nishant@2405:201:f005:c007:b514:75a9:41b7:5c1b)
[12:33:16] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:33:48] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[12:36:33] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[12:39:18] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[12:39:29] *** Joins: ishutin (~ishutin@92-249-179-24.pool.digikabel.hu)
[12:39:56] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[12:41:56] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:43:12] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[12:44:12] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 240 seconds)
[12:46:20] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[12:46:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[12:50:36] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[12:50:57] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[12:51:41] *** Quits: tv (~tv@user/tv) (Read error: Connection reset by peer)
[12:52:10] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[12:52:47] *** Joins: komikat (~komikat@59.89.164.147)
[12:53:47] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[12:54:28] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[12:54:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[12:55:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[12:55:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:55:47] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[12:56:05] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:56:11] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[12:56:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[12:56:38] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:58:02] *** Quits: komikat (~komikat@59.89.164.147) (Ping timeout: 240 seconds)
[12:59:32] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 240 seconds)
[13:03:02] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[13:04:28] *** Quits: thevishy (~Nishant@2405:201:f005:c007:b514:75a9:41b7:5c1b) (Quit: Leaving)
[13:04:28] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[13:04:54] *** Joins: tv (~tv@user/tv)
[13:04:58] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[13:06:24] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[13:06:39] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:61eb:8bdd:4387:81b)
[13:09:07] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[13:10:06] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[13:11:26] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:11:42] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[13:11:47] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:11:58] *** Joins: bahamas (~lucian@84.232.140.52)
[13:14:26] <cc123652345762> Hello I face a problem using ghci 7.10.3 
[13:14:37] <cc123652345762> like this
[13:14:45] *** Joins: fendor (~fendor@178.165.199.29.wireless.dyn.drei.com)
[13:14:46] <cc123652345762> Prelude> a = 1+1
[13:14:54] <cc123652345762> <interactive>:3:3: parse error on input â€˜=â€™
[13:15:05] <geekosaur> why are you using such an old version?
[13:15:20] <geekosaur> 7.10 required you to say `let a=1+1`
[13:17:03] <cc123652345762> I am going through cis194 and I first start from haskell:9.
[13:17:28] <cc123652345762> But i found it raise error when I try "a :: Int"
[13:17:40] <geekosaur> pretty sure you can do cis194 with a more recent ghc, orthey wouldn't have you using things that require 8.x
[13:17:47] <cc123652345762> so I turn to an old edition...
[13:17:59] <geekosaur> older version won't work there
[13:18:17] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:18:34] <cc123652345762> ok thanks a lot.
[13:18:39] <geekosaur> if you do it in a file, you can put a declaration and its type signature anywhere in the file. in ghci (any version) they must be on the same line with a semicolon between them, or use :{ :} for multiline input mode
[13:19:06] <geekosaur> otherwise you get an error "the typesignature lacks an accompanying binding"
[13:19:13] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 272 seconds)
[13:19:51] <geekosaur> ghci has gotten smarter over the years but it's still pretty dumb in some ways
[13:20:22] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[13:20:28] <cc123652345762> I just think that 7 is not so old...
[13:22:25] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[13:22:45] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:23:20] <geekosaur> ghc moves pretty quickly. but even so it's some 5-6 years old at this point
[13:24:00] <geekosaur> I may be misremembvering and it's older. 6.6 was current in 2006
[13:25:23] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:25:45] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5)
[13:26:12] *** Quits: Natch (~natch@c83-254-0-119.bredband.tele2.se) (Ping timeout: 240 seconds)
[13:28:12] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[13:28:12] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:28:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[13:29:33] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:30:37] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[13:33:34] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[13:33:54] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:35:35] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[13:35:54] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:37:35] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[13:37:55] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:39:36] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[13:39:54] *** Joins: themc47 (~mc47@xmonad/TheMC47)
[13:39:56] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[13:40:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[13:41:26] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[13:42:25] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 256 seconds)
[13:42:44] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:42:47] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[13:43:48] *** Joins: Erutuon (~Erutuon@user/erutuon)
[13:44:41] *** Quits: themc47 (~mc47@xmonad/TheMC47) (Ping timeout: 256 seconds)
[13:45:54] *** Quits: xff0x (~xff0x@dslb-094-222-029-254.094.222.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[13:46:27] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.4)
[13:47:02] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:61eb:8bdd:4387:81b) (Remote host closed the connection)
[13:47:24] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:61eb:8bdd:4387:81b)
[13:48:41] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[13:50:40] *** Joins: komikat (~komikat@157.38.216.244)
[13:51:01] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[13:51:51] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-033.client.tudelft.eduvpn.nl)
[13:52:16] *** Joins: dut_ (~dut@user/dut)
[13:52:56] *** Joins: xff0x (~xff0x@dslb-094-222-029-254.094.222.pools.vodafone-ip.de)
[13:53:01] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[13:53:15] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:54:34] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[13:55:59] *** Quits: dut (~dut@user/dut) (Ping timeout: 256 seconds)
[13:56:54] *** Joins: deadmarshal_ (~deadmarsh@95.38.112.14)
[13:57:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:57:12] *** Quits: dut_ (~dut@user/dut) (Ping timeout: 272 seconds)
[14:02:45] *** Joins: bahamas (~lucian@84.232.140.52)
[14:04:32] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[14:04:51] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[14:06:55] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[14:08:42] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[14:09:01] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[14:09:11] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[14:11:21] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[14:11:24] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Quit: Leaving)
[14:11:41] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:14:29] *** Joins: kuribas (~user@ip-188-118-57-242.reverse.destiny.be)
[14:17:21] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[14:17:40] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[14:18:16] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:19:56] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[14:20:15] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[14:24:00] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[14:24:18] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[14:25:17] *** Quits: komikat (~komikat@157.38.216.244) (Remote host closed the connection)
[14:25:50] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5)
[14:26:01] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[14:26:46] *** Joins: notzmv (~zmv@user/notzmv)
[14:27:13] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[14:27:43] *** Quits: ardell (~ardell@user/ardell) (Ping timeout: 256 seconds)
[14:28:03] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[14:28:50] <tomsmeding> is there a way to get a GHC.TypeNats.KnownNat (n + 1) from a KnownNat n?
[14:29:32] <tomsmeding> or, to avoid an X-Y problem situation: can I define something inductively over a GHC type-level nat
[14:30:06] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:30:16] *** Joins: komikat (~komikat@117.199.167.81)
[14:30:16] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[14:31:25] <kuribas> aka why haskell sucks as a DT language.
[14:31:31] <tomsmeding> :p
[14:31:40] <tomsmeding> well, it's just the GHC type-level nats
[14:31:55] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[14:32:03] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:06] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:61eb:8bdd:4387:81b) (Ping timeout: 260 seconds)
[14:32:08] <idnar> tomsmeding: 1) is https://hackage.haskell.org/package/base-4.16.0.0/docs/GHC-TypeNats.html#t:-43-
[14:32:20] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:32:37] <tomsmeding> kuribas: data Nat = Z | S Nat ; data NatS n where ZS :: NatS Z ; SS :: NatS n -> NatS (S n)  -- now this is perfectly okay to work with
[14:32:52] <tomsmeding> idnar: that's the + I'm talking about yes
[14:34:40] <tomsmeding> basically I want this, but then without unsafeCoerce https://paste.tomsmeding.com/EN5lrXvJ
[14:35:03] <kuribas> tomsmeding: pattern match on KnownNat n ?
[14:35:09] <tomsmeding> plz tell me how
[14:35:18] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[14:35:47] <tomsmeding> my first try was seeing if GHC infers KnownNat (n + 1) given KnownNat n, but it doesn't
[14:35:55] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[14:35:55] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[14:37:08] <kuribas> foo :: Proxy (KnownNat n) -> Proxy (KnownNat (n + 1)) ?
[14:37:36] <geekosaur> I think you have to use a plugin to get inductive definitions without a lot of work proving it to ghc? https://hackage.haskell.org/package/ghc-typelits-knownnat
[14:37:41] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:38:00] <tomsmeding> kuribas: what would the definition of foo be?
[14:38:23] <kuribas> foo Proxy = Proxy :)
[14:38:46] <tomsmeding> way
[14:38:48] <tomsmeding> *wat
[14:39:02] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[14:39:08] <tomsmeding> yeah okay but that isn't useful :p
[14:39:32] <tomsmeding> it doesn't actually let me use KnownNat (n + 1); foo typechecks also as Proxy a -> Proxy (KnownNat n)
[14:39:51] <tomsmeding> geekosaur: ah, so _that's_ what that plugin is really doing
[14:39:59] <tomsmeding> why is ghc not doing this by itself
[14:40:10] * tomsmeding will stay with the unsafeCoerce for now
[14:40:18] <geekosaur> you'd have to ask someone at ghc hq
[14:40:34] <kuribas> this all just proofs to me haskell sucks as a DT language.
[14:42:57] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Client Quit)
[14:43:45] <tomsmeding> ah apparently for my usecase I don't actually care that I have a well-formed KnownNat of the result, so I can just remove the unsafeCoerce and work with the Some InductiveNat
[14:43:50] <tomsmeding> problem avoided :)
[14:44:16] <merijn> At that point, just delete all uses of Nat, because who cares? :p
[14:45:07] <kuribas> word
[14:45:19] <geekosaur> Nat a problem :Ã¾
[14:45:25] <tomsmeding> then I'd have to rewrite half of my testing code
[14:45:28] <tomsmeding> I _could_
[14:47:33] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:47:48] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[14:47:57] *** Joins: fendor_ (~fendor@77.119.173.210.wireless.dyn.drei.com)
[14:48:32] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[14:50:23] *** Quits: fendor (~fendor@178.165.199.29.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[14:50:49] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f91c:5353:babe:c5fb) (Remote host closed the connection)
[14:52:02] *** Quits: komikat (~komikat@117.199.167.81) (Remote host closed the connection)
[14:52:56] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[14:52:58] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi)
[14:53:48] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[14:56:05] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:a4cb:68c9:de1e:1202)
[14:56:57] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[14:59:42] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:00:00] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:01:41] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:01:59] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:02:22] *** Joins: takenbrandi (~brandi@104.220.20.37)
[15:04:02] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:04:21] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:06:15] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[15:06:32] *** Quits: yauhsien_ (~Yau-Hsien@61-231-36-13.dynamic-ip.hinet.net) (Quit: Leaving)
[15:08:12] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:08:31] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:11:04] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[15:11:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:13:58] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[15:14:28] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[15:15:28] *** Joins: agumonke` (~user@37.175.254.13)
[15:15:46] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[15:15:53] *** Joins: komikat_ (~komikat@2402:3a80:932:7acc:e449:563e:c1b5:726b)
[15:16:35] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[15:17:59] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:25:26] *** Joins: __monty__ (~toonn@user/toonn)
[15:26:05] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:26:15] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[15:28:08] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:28:33] *** Joins: Vajb (~Vajb@85-76-130-248-nat.elisa-mobile.fi)
[15:32:34] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:32:52] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:33:35] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[15:33:59] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[15:34:17] *** Quits: takenbrandi (~brandi@104.220.20.37) (Ping timeout: 256 seconds)
[15:36:00] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[15:37:37] *** Joins: komikat (~komikat@157.38.216.244)
[15:37:57] *** Quits: komikat_ (~komikat@2402:3a80:932:7acc:e449:563e:c1b5:726b) (Ping timeout: 240 seconds)
[15:39:37] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[15:43:02] *** Joins: bahamas (~lucian@84.232.140.52)
[15:43:35] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:44:52] *** Quits: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru) (Ping timeout: 272 seconds)
[15:47:52] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:48:11] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:48:36] *** Quits: komikat (~komikat@157.38.216.244) (Ping timeout: 240 seconds)
[15:49:20] *** Joins: komikat (~komikat@2409:4052:4d81:d5b0:64ec:18d7:fce2:4c9d)
[15:49:54] *** Joins: mei (~mei@user/mei)
[15:51:50] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[15:51:50] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc)
[15:52:08] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[15:52:34] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 250 seconds)
[15:54:05] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[15:55:10] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[15:55:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc) (Ping timeout: 240 seconds)
[15:56:04] *** AlexNoo_ is now known as AlexNoo
[15:56:19] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[15:56:41] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi) (Ping timeout: 256 seconds)
[16:00:54] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[16:02:25] *** Quits: komikat (~komikat@2409:4052:4d81:d5b0:64ec:18d7:fce2:4c9d) (Remote host closed the connection)
[16:03:24] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 240 seconds)
[16:04:50] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:05:00] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[16:07:15] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:07:34] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[16:07:34] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:08:37] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 240 seconds)
[16:11:40] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:11:57] *** Joins: komikat (~komikat@2409:4052:4d81:d5b0:e068:c43e:7a4d:66af)
[16:11:59] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:13:11] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[16:13:25] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[16:13:30] *** Quits: komikat (~komikat@2409:4052:4d81:d5b0:e068:c43e:7a4d:66af) (Remote host closed the connection)
[16:14:46] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 260 seconds)
[16:15:34] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[16:20:39] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:21:14] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[16:22:03] *** Quits: mlaogd^ (~mlaogd@207.243.108.170) (Remote host closed the connection)
[16:23:58] *** Joins: komikat (~komikat@117.199.167.81)
[16:26:58] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:27:16] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:31:05] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:31:24] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:33:05] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:33:23] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:33:54] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[16:34:08] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:34:45] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[16:34:54] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[16:35:52] *** Joins: komikat_ (~komikat@2409:4052:4d81:d5b0:4d2e:b4f1:f3f5:9d8f)
[16:36:21] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[16:38:30] *** Joins: unit73e (~ecouto@2001:818:e8dd:7c00:fb1b:fecb:4b1f:fc93)
[16:39:11] *** Quits: komikat (~komikat@117.199.167.81) (Ping timeout: 256 seconds)
[16:39:58] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[16:40:17] <unit73e> Hello. Silly newbie question. How should I handle conditional errors in 'Data.Binary.Get'? I was using if-then-else with fail, but ends up being ugly. I was kind of hoping there was a 'failIf -> Bool' or something similar.
[16:40:50] <geekosaur> :t guard
[16:40:51] <lambdabot> Alternative f => Bool -> f ()
[16:41:00] *** Joins: ardell (~ardell@user/ardell)
[16:41:24] <unit73e> huh, that simple. thanks
[16:42:37] <unit73e> i'm implementing a XP3 archiver for those weirdo japanese VNs
[16:43:51] <unit73e> I'll share the code when it does something useful
[16:43:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:44:15] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[16:45:17] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[16:47:05] <unit73e> I was first doing in Java because there was a "sort of" implementation already but Java is horrible handling byte streams because it doesn't have unsigned. The other "sort of" implementation was in C++, which is kind of meh... too unsafe. Haskell is pretty good handling byte streams.
[16:51:04] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[16:51:54] *** Quits: komikat_ (~komikat@2409:4052:4d81:d5b0:4d2e:b4f1:f3f5:9d8f) (Remote host closed the connection)
[16:52:49] *** Joins: bahamas (~lucian@84.232.140.52)
[16:53:14] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[16:55:18] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[16:55:36] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[16:56:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[16:57:11] <merijn> unit73e: Yeah, binary is pretty sweet for byte streams. It's a bit of a PITA for bitstreams, but those are fairly uncommon anyway
[16:57:26] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 245 seconds)
[16:57:39] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:57:48] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[16:58:14] <merijn> unit73e: Also, have a look at the various functions for Alternative/MonadPlus (Get implements both) besides guard. There's a bunch of useful ones
[16:59:01] <unit73e> merijn, will do. thanks. I often get stuck on those things... either forget or just don't know.
[16:59:47] <merijn> See also
[16:59:56] <merijn> @hackage parser-combinators
[16:59:56] <lambdabot> https://hackage.haskell.org/package/parser-combinators
[17:00:32] <unit73e> I did think of using a parsec but I'm not sure yet if that will work due to the XP3 format being a tad bit weird
[17:00:58] <unit73e> apparently it has bytes that aren't doing anything, just to create noise
[17:01:04] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (*.net *.split)
[17:01:04] *** Quits: agumonke` (~user@37.175.254.13) (*.net *.split)
[17:01:04] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5) (*.net *.split)
[17:01:04] *** Quits: alp_ (~alp@user/alp) (*.net *.split)
[17:01:04] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:9e51:3601:4227:d1e0) (*.net *.split)
[17:01:04] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (*.net *.split)
[17:01:04] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (*.net *.split)
[17:01:04] *** Quits: vysn (~vysn@user/vysn) (*.net *.split)
[17:01:04] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (*.net *.split)
[17:01:04] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (*.net *.split)
[17:01:04] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[17:01:04] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[17:01:04] *** Quits: Me-me (~me-me@user/me-me) (*.net *.split)
[17:01:04] *** Quits: flupe (~baboum@radon.sbi.re) (*.net *.split)
[17:01:04] *** Quits: sajith (~sajith@user/sajith) (*.net *.split)
[17:01:04] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[17:01:04] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (*.net *.split)
[17:01:04] *** Quits: kadobanana (~mud@user/kadoban) (*.net *.split)
[17:01:04] *** Quits: ddb (~ddb@2607:5300:203:9993::196) (*.net *.split)
[17:01:04] *** Quits: sshine (~simon@zhen.eta.solutions) (*.net *.split)
[17:01:04] *** Quits: EvanR (~EvanR@user/evanr) (*.net *.split)
[17:01:04] *** Quits: russruss (~russruss@my.russellmcc.com) (*.net *.split)
[17:01:04] *** Quits: auri (~quassel@fsf/member/auri) (*.net *.split)
[17:01:04] *** Quits: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com) (*.net *.split)
[17:01:04] *** Quits: eriol (~eriol@user/eriol) (*.net *.split)
[17:01:04] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[17:01:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[17:01:04] *** Quits: jlamothe (~jlamothe@198.251.61.229) (*.net *.split)
[17:01:04] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[17:01:04] *** Quits: awpr (uid446117@id-446117.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[17:01:04] *** Quits: teehemkay_ (sid14792@id-14792.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: taktoa[c] (sid282096@id-282096.tinside.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: iphy (sid67735@id-67735.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: alanz (sid110616@id-110616.uxbridge.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (*.net *.split)
[17:01:04] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: mrianbloom (sid350277@2a03:5180:f:3::5:5845) (*.net *.split)
[17:01:04] *** Quits: acertain (sid470584@2a03:5180:f:4::7:2e38) (*.net *.split)
[17:01:04] *** Quits: sclv (sid39734@haskell/developer/sclv) (*.net *.split)
[17:01:04] *** Quits: chessai (sid225296@id-225296.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: xstill- (xstill@fimu/xstill) (*.net *.split)
[17:01:04] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (*.net *.split)
[17:01:04] *** Quits: Andrew (Andrew@user/AndrewYu) (*.net *.split)
[17:01:04] *** Quits: tito (tito@tilde.team) (*.net *.split)
[17:01:04] *** Quits: res0nat0r08 (~Fletch@dia.whatbox.ca) (*.net *.split)
[17:01:04] *** Quits: absence (torgeihe@hildring.pvv.ntnu.no) (*.net *.split)
[17:01:04] *** Quits: hendi (sid489601@id-489601.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: ProofTechnique (sid79547@id-79547.ilkley.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (*.net *.split)
[17:01:04] *** Quits: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34) (*.net *.split)
[17:01:04] *** Quits: nshepperd2 (nshepperd@2600:3c03::f03c:92ff:fe28:92c9) (*.net *.split)
[17:01:04] *** Quits: landonf (landonf@mac68k.info) (*.net *.split)
[17:01:04] *** Quits: spider__ (~spider@vps-951ce37a.vps.ovh.ca) (*.net *.split)
[17:01:04] *** Quits: hexagoxel (~hexagoxel@hexagoxel.de) (*.net *.split)
[17:01:04] *** Quits: statusbot1 (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com) (*.net *.split)
[17:01:04] *** Quits: eL_Bart0 (eL_Bart0@dietunichtguten.org) (*.net *.split)
[17:01:04] *** Quits: incertia (~incertia@207.98.163.88) (*.net *.split)
[17:01:04] *** Quits: dumptruckman (~dumptruck@45-79-173-88.ip.linodeusercontent.com) (*.net *.split)
[17:01:20] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[17:01:26] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:01:30] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[17:01:48] *** Joins: iphy (sid67735@id-67735.lymington.irccloud.com)
[17:02:11] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[17:02:30] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:02:30] *** Joins: agumonke` (~user@37.175.254.13)
[17:02:30] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5)
[17:02:30] *** Joins: alp_ (~alp@user/alp)
[17:02:30] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:9e51:3601:4227:d1e0)
[17:02:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:02:30] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[17:02:30] *** Joins: vysn (~vysn@user/vysn)
[17:02:30] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[17:02:30] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[17:02:30] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[17:02:30] *** Joins: Techcable (~Techcable@168.235.93.147)
[17:02:30] *** Joins: Me-me (~me-me@user/me-me)
[17:02:30] *** Joins: flupe (~baboum@radon.sbi.re)
[17:02:30] *** Joins: sajith (~sajith@user/sajith)
[17:02:30] *** Joins: swistak (~swistak@185.21.216.141)
[17:02:30] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[17:02:30] *** Joins: kadobanana (~mud@user/kadoban)
[17:02:30] *** Joins: ddb (~ddb@2607:5300:203:9993::196)
[17:02:30] *** Joins: sshine (~simon@zhen.eta.solutions)
[17:02:30] *** Joins: tito (tito@tilde.team)
[17:02:30] *** Joins: EvanR (~EvanR@user/evanr)
[17:02:30] *** Joins: russruss (~russruss@my.russellmcc.com)
[17:02:30] *** Joins: auri (~quassel@fsf/member/auri)
[17:02:30] *** Joins: aweinstock (~aweinstoc@cpe-67-248-65-250.nycap.res.rr.com)
[17:02:30] *** Joins: eriol (~eriol@user/eriol)
[17:02:30] *** Joins: derelict (derelict@user/derelict)
[17:02:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:02:30] *** Joins: jlamothe (~jlamothe@198.251.61.229)
[17:02:30] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[17:02:30] *** Joins: hays (rootvegeta@fsf/member/hays)
[17:02:30] *** Joins: awpr (uid446117@id-446117.lymington.irccloud.com)
[17:02:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:02:30] *** Joins: teehemkay_ (sid14792@id-14792.lymington.irccloud.com)
[17:02:30] *** Joins: taktoa[c] (sid282096@id-282096.tinside.irccloud.com)
[17:02:30] *** Joins: alanz (sid110616@id-110616.uxbridge.irccloud.com)
[17:02:30] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[17:02:30] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[17:02:30] *** Joins: mrianbloom (sid350277@2a03:5180:f:3::5:5845)
[17:02:30] *** Joins: acertain (sid470584@2a03:5180:f:4::7:2e38)
[17:02:30] *** Joins: sclv (sid39734@haskell/developer/sclv)
[17:02:30] *** Joins: chessai (sid225296@id-225296.lymington.irccloud.com)
[17:02:30] *** Joins: xstill- (xstill@fimu/xstill)
[17:02:30] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[17:02:30] *** Joins: Andrew (Andrew@user/AndrewYu)
[17:02:30] *** Joins: res0nat0r08 (~Fletch@dia.whatbox.ca)
[17:02:30] *** Joins: absence (torgeihe@hildring.pvv.ntnu.no)
[17:02:30] *** Joins: hendi (sid489601@id-489601.lymington.irccloud.com)
[17:02:30] *** Joins: ProofTechnique (sid79547@id-79547.ilkley.irccloud.com)
[17:02:30] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[17:02:30] *** Joins: kawzeg (kawzeg@2a01:7e01::f03c:92ff:fee2:ec34)
[17:02:30] *** Joins: nshepperd2 (nshepperd@2600:3c03::f03c:92ff:fe28:92c9)
[17:02:30] *** Joins: landonf (landonf@mac68k.info)
[17:02:30] *** Joins: spider__ (~spider@vps-951ce37a.vps.ovh.ca)
[17:02:30] *** Joins: hexagoxel (~hexagoxel@hexagoxel.de)
[17:02:30] *** Joins: statusbot1 (~statusbot@ec2-34-198-122-184.compute-1.amazonaws.com)
[17:02:30] *** Joins: eL_Bart0 (eL_Bart0@dietunichtguten.org)
[17:02:30] *** Joins: incertia (~incertia@207.98.163.88)
[17:02:30] *** Joins: dumptruckman (~dumptruck@45-79-173-88.ip.linodeusercontent.com)
[17:02:39] <unit73e> I guess so "hackers" like me don't extract? not sure. but once I have it with the 'Get' way I'll try a parsec.
[17:03:16] *** Quits: Techcable (~Techcable@168.235.93.147) (Max SendQ exceeded)
[17:03:16] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Max SendQ exceeded)
[17:03:16] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Max SendQ exceeded)
[17:03:16] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Max SendQ exceeded)
[17:03:16] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Max SendQ exceeded)
[17:03:24] *** Joins: Techcable (~Techcable@168.235.93.147)
[17:03:30] <merijn> unit73e: That libary isn't parsec :)
[17:03:32] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:03:35] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:04:01] <merijn> unit73e: It's a bunch of generic Alternative/MonadPlus combinators that are "parsec like" so you can reuse them with various libraries (most notably, megaparsec just re-exports those)
[17:04:10] <merijn> They work as-is with binary's Get
[17:04:25] <merijn> (Since Get is Alternative/MonadPlus)
[17:04:55] <merijn> Which makes sense, since Get is just another parser combinator library, except focussed on binary data/streams instead of text
[17:05:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:06:23] <unit73e> thanks. that will help.
[17:06:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[17:06:57] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[17:07:30] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[17:07:50] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[17:08:29] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[17:08:58] *** Joins: dextaa_ (~dextaa@user/dextaa)
[17:10:38] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:10:57] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:12:38] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:12:57] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:14:38] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:14:56] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:15:47] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[17:17:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:18:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[17:18:16] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[17:18:50] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[17:18:52] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[17:19:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:19:21] *** Quits: dextaa_ (~dextaa@user/dextaa) (Quit: The Lounge - https://thelounge.chat)
[17:20:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 245 seconds)
[17:23:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[17:23:40] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 272 seconds)
[17:24:04] *** Joins: dextaa_ (~dextaa@user/dextaa)
[17:24:51] *** Joins: anon44409248 (~anon44409@host-92-19-97-204.as13285.net)
[17:26:50] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:27:45] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[17:27:55] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[17:28:40] *** Joins: bahamas (~lucian@84.232.140.52)
[17:29:45] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[17:31:10] *** Quits: rembo10 (~rembo10@2a01:4f9:c010:b5b9::1) (Quit: ZNC 1.8.2 - https://znc.in)
[17:32:03] *** Joins: rembo10 (~rembo10@main.remulis.com)
[17:32:43] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:34:58] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:35:06] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[17:35:17] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:36:58] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:36:58] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[17:37:16] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:37:28] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[17:37:30] *** Joins: alx741 (~alx741@host-181-198-243-130.netlife.ec)
[17:38:35] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[17:39:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[17:39:44] *** Quits: alx741 (~alx741@host-181-198-243-130.netlife.ec) (Read error: Connection reset by peer)
[17:41:14] *** Joins: coot (~coot@213.134.190.95)
[17:43:28] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:43:46] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:45:27] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:45:45] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[17:45:45] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:46:17] *** Quits: alp_ (~alp@user/alp) (Ping timeout: 240 seconds)
[17:47:55] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[17:49:42] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:50:00] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:51:10] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[17:52:29] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 252 seconds)
[17:52:31] <merijn> ooh
[17:52:47] <merijn> Plan to have WebAssembly for 9.6
[17:52:52] <merijn> That's cool
[17:56:01] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[17:56:17] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-033.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[17:56:20] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[17:57:27] <yushyin> oO
[17:57:44] *** Quits: anon44409248 (~anon44409@host-92-19-97-204.as13285.net) (Remote host closed the connection)
[17:58:33] *** Joins: Kevin578_ (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[18:00:28] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[18:00:47] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[18:00:52] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:01:11] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[18:02:51] <[exa]> whew
[18:03:34] *** Quits: Kevin578_ (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[18:04:29] <[exa]> is it the same as asterius from tweag or something entirely different?
[18:05:19] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[18:06:01] <merijn> [exa]: Plan to merge tweag's asterius based stuff
[18:06:16] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[18:06:30] <[exa]> ok cool
[18:06:36] <merijn> afaict asterius is moving/has moved to rely on the standard RTS more, meaning it's more feasible to merge the fork into mainline
[18:07:17] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[18:07:28] <[exa]> so maybe the webdev will stop sucking so much, finally. :D
[18:08:25] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[18:08:55] *** Joins: alp (~alp@user/alp)
[18:09:32] <unit73e> I've been hearing webassembly wioll solve all the web problems and get rid of javascript but it's taking a lot of time
[18:10:37] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[18:11:08] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[18:11:22] *** Joins: elkcl (~elkcl@broadband-37-110-156-162.ip.moscow.rt.ru)
[18:11:50] <terrorjack> https://mail.haskell.org/pipermail/ghc-devs/2022-March/020590.html for the announcement
[18:12:32] <merijn> unit73e: There's lots of tiny painful bits
[18:12:57] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[18:12:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[18:13:36] <merijn> unit73e: For example, while Haskell itself can easily be compiled to webassembly, the GHC runtime assumes all sorts of things, like, you know: having threats, being able to do IO with files, running timers, allocating memory from the OS, etc.
[18:14:20] <merijn> so you need to figure out what all is missing in the webassembly sandbox, then reimplement/avoid it somehow, etc.
[18:14:29] <merijn> s/threats/threads
[18:15:04] <unit73e> must be hard for sure. It's the "JVM done right" so it will take a while.
[18:15:14] <terrorjack> hard indeed
[18:15:16] <merijn> Now you can just write a new haskell to web assembly compilers (and people have!) I think UHC has *2* JS/web assembly backends
[18:15:46] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[18:15:55] <carbolymer> is UHC still alive?
[18:15:57] <terrorjack> but there were strategic mistakes in the beginning. most important one is attempting to implement GC and other runtime services with hand written JS
[18:15:57] <merijn> But then it turns out that, actually, 80% of all Haskell packages want stuff like ByteString and/or Text, whose internals assume they're dealing with GHC, so now *those* are broken
[18:15:59] <[exa]> in fact all you need is a library that does the jQuery tricks from haskell, then javascript disappears in 1 year
[18:16:01] <merijn> carbolymer: Define alive
[18:16:14] <merijn> carbolymer: It's still actively worked on, to the best of my knowledge
[18:16:23] <carbolymer> interesting
[18:16:23] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:16:29] <geekosaur> UHC is "alive"in the sense that it's actively worked on, but AFAIK it'sonly used by Utrecht
[18:16:45] <merijn> carbolymer: Now, we haven't had an NL-FP day in 2 years due to covid, so I haven't heard about it, but I doubt they stopped in that time frame
[18:16:58] <merijn> Especially since there's been an influx of new haskellers in Utrecht
[18:17:05] <mason0> @hoogle [a] -> (a -> b) -> [b]
[18:17:06] <lambdabot> Miso.Util withFoldable :: Foldable t => t a -> (a -> b) -> [b]
[18:17:06] <lambdabot> Data.Functor (<&>) :: Functor f => f a -> (a -> b) -> f b
[18:17:06] <lambdabot> Control.Lens.Lens (<&>) :: Functor f => f a -> (a -> b) -> f b
[18:17:20] <merijn> (I think most of the team work on accelerate (?) moved to utrecht)
[18:17:30] <unit73e> oh boy.. remember the time when XML was used for everything? Now it's JS... hopefully that fad is dying.
[18:17:30] <mason0> there's no for in base? (flipped map)
[18:17:32] <merijn> At least, they've been showing up to our GPU meetups here :p
[18:17:48] <merijn> mason0: It's not on lists
[18:17:50] <merijn> :t for
[18:17:51] <lambdabot> (Traversable t, Applicative f) => t a -> (a -> f b) -> f (t b)
[18:18:02] <mason0> > for [1..10] show
[18:18:03] <lambdabot>  ["1234567891","1234567890"]
[18:18:04] <geekosaur> and it's flipped mapM
[18:18:16] <merijn> oh, yeah, for is mapM not map
[18:18:35] <merijn> flipped map seems increadibly niche, though
[18:18:49] <carbolymer> merijn: uhc's page seems to be down http://foswiki.cs.uu.nl/foswiki/bin/view/UHC/
[18:18:57] *** Quits: zaquest (~notzaques@5.130.79.72) (Quit: Leaving)
[18:19:12] <merijn> carbolymer: academic websites are a nightmare :p
[18:19:20] <merijn> carbolymer: Ask me again in a month and a half :p
[18:19:30] <merijn> That's when NL-FP is organised in Utrecht :p
[18:19:43] <carbolymer> ok
[18:20:06] <merijn> Which lets me seque into...
[18:20:22] <merijn> PSA: if your in travelling distance of Utrecht, don't forget to go to NL-FP ;)
[18:20:34] <merijn> https://wouter-swierstra.github.io/fp-dag/
[18:21:07] <tomsmeding> merijn: I haven't heard much about active development on UHC, but maybe I'm not in contact with the right people
[18:21:35] <geekosaur> https://github.com/UU-ComputerScience/uhc last commit in 2018 but github says last update in August
[18:22:20] <merijn> tomsmeding: I mean, UHC isn't in active development in terms of "adding features" it was never really a production compiler as much as it was "a test bed and PoC of attribute grammars"
[18:22:50] <tomsmeding> right
[18:24:13] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:24:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 250 seconds)
[18:24:50] <maerwald> GHC needs competition
[18:24:59] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[18:25:12] <tomsmeding> yes
[18:25:47] <carbolymer> wouldn't that mean fragmentation of efforts and overall slower development of compilers?
[18:25:53] * carbolymer is looking at linux desktops
[18:26:36] <lortabac> or Scheme, or Prolog...
[18:26:36] <maerwald> clang improved gcc
[18:27:10] <lortabac> IMHO Haskell is not C, it can't afford fragmentation
[18:27:16] <maerwald> ahaha
[18:27:53] <maerwald> what makes you think the current GHC maintainers would abandon ship just because there's a new compiler around?
[18:28:23] <lortabac> it's not about abandoning ship, it's just that the community is too small
[18:28:29] <maerwald> clearly, other compiler engineers aren't too thrilled about working with GHC... otherwise they would have done so already
[18:28:37] <maerwald> I don't understand
[18:29:04] <tomsmeding> yes precisely, I think having a different implementation might encourage more haskell-implementation experimentation
[18:29:37] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[18:29:38] <merijn> Everyone thinks so. Except the people with money to pay Haskell programmers :p
[18:30:00] <lortabac> we would end up with plenty of half-baked compiler prototypes
[18:30:10] <tomsmeding> is that a bad thing?
[18:30:14] <lortabac> yes
[18:30:46] <lortabac> I'd rather see a better GHC than a hundred useless *HC's
[18:30:59] <mason0> there are benefits to having just one implementation. writing portable crossplatform code that also works on multiple haskell implementation would likely be hell
[18:31:42] <lortabac> just spend a couple of hours on #scheme, everybody is making their own compiler, but nobody has ever **used** Scheme for real
[18:32:27] <tomsmeding> lortabac: I think reaching that level of lopsided distribution is not going to happen any time soon with a language as complex as haskell :p
[18:32:58] <tomsmeding> you won't find half the world implementing a C compiler without having used C either
[18:35:22] <merijn> tomsmeding: tbh, Haskell2010 isn't *that* complex
[18:35:32] <tomsmeding> a lot more complex than scheme :p
[18:35:40] <merijn> A lot less than C :p
[18:35:46] <merijn> And let's not even get started about C++
[18:35:56] <tomsmeding> lol C++ is a different league indeed
[18:36:15] <lechner> Hi, could someone please upload the docs for Cabal-syntax? Thanks!   https://hackage.haskell.org/package/Cabal-syntax
[18:36:30] <merijn> I always like the "compilers don't have bugs!" argument about gcc/g++ in other channels
[18:36:51] <merijn> How the fuck would you even know if your C++ compiler has bugs?! As if anyone knows what it's supposed to do...
[18:37:28] <lechner> never mind. maybe i should have read the "dummy" part
[18:37:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:38:00] <geekosaur> I find it interesting they talk about 3.7 being a real package, but there's no 3.7
[18:38:07] <lechner> yeah
[18:38:55] <merijn> geekosaur: Presumably this was released *ahead* of 3.7 so people can correct their code ahead of release
[18:38:55] <tomsmeding> presumably that's the in-development version of Cabal?
[18:39:15] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[18:39:23] *** Joins: zaquest (~notzaques@5.130.79.72)
[18:39:38] <merijn> since 3.6 was the last release, yes
[18:39:40] <lechner> i just need to solve this for the Debian Version tracker    https://github.com/obsidiansystems/obelisk/issues/106
[18:39:59] <merijn> cabal also uses odd = development, like GHC, no?
[18:40:25] <lortabac> I think most people vastly underestimate the effort needed to go from "compiler" to "industrial-strength compiler"
[18:40:25] *** Quits: Vajb (~Vajb@85-76-130-248-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[18:40:54] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[18:40:58] <geekosaur> merijn,yes
[18:40:58] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:41:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[18:41:17] <geekosaur> last release was 3.4.1.0
[18:41:30] *** Joins: dsrt^ (~dsrt@207.243.108.170)
[18:41:55] <merijn> no?
[18:41:58] <merijn> 3.6 is out
[18:42:06] <merijn> has been for a considerable whil
[18:42:07] <geekosaur> I mean last release before 3.6
[18:42:10] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:42:11] <merijn> oh
[18:42:19] *** Joins: vgtw_ (~vgtw@user/vgtw)
[18:42:35] <merijn> So presumably the Cabal-syntax release is for people dogfooding cabal HEAD
[18:42:38] <geekosaur> lechner, that looks solved to me? Cabal went from a home-grown parser to Parsec
[18:43:05] *** Quits: vgtw (~vgtw@user/vgtw) (Ping timeout: 268 seconds)
[18:43:13] <lechner> geekosaur: maybe, but how to solve this?    http://paste.debian.net/1232874/
[18:43:47] <merijn> lechner: Use parsec's result datatypes?
[18:43:47] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:44:05] <merijn> Which I'm guessing just uses Either?
[18:44:12] <geekosaur> and ideally forget Cabal <2.2 exists
[18:44:21] <lechner> i am trying
[18:44:53] *** Quits: cpape`` (~user@2a01:4f9:c010:632d::1) (Quit: ERC (IRC client for Emacs 25.2.2))
[18:45:09] *** Joins: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net)
[18:45:19] <lechner> joachim asked me to maybe take over the version feeding, but as you all well know, I am a newbie
[18:45:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[18:46:06] <maerwald> lortabac: what is industrial-strenght? packed with custom language extensions?
[18:46:34] <carbolymer> maerwald: stable, like battle-tested
[18:46:47] <maerwald> wait, GHC is stable? :D
[18:46:49] <tomsmeding> "bug-free"
[18:46:52] <maerwald> lol
[18:46:59] <maerwald> that's exactly one thing GHC isn't
[18:47:18] <merijn> maerwald: to be fair, neither is any other compiler >.>
[18:47:24] <byorgey> software is "industrial-strength" when bugs in that software are capable of crippling an entire industry
[18:47:25] <maerwald> merijn: I disagree
[18:47:28] <lechner> right now, i use this cabal file     http://paste.debian.net/1232875/
[18:47:38] <merijn> maerwald: gcc/clang have *tons* of issues outside the happy path
[18:47:50] <Franciman> is ghc an insdustrial strength compiler?
[18:47:51] <maerwald> GHC is about moving fast, not figuring out how to make it particularly stable
[18:47:55] <Franciman> i think so, because they use it
[18:48:01] <Franciman> so it's going to be my main target
[18:48:18] *** Quits: yauhsien (~yauhsien@61-231-36-13.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:48:19] <maerwald> so there's another reason we would want a different compiler
[18:48:28] <maerwald> you can't have everything in one
[18:48:34] <Franciman> mlton seems a good beast to bet on
[18:49:11] *** shapr` is now known as shapr
[18:50:06] <geekosaur> btw lechner as I read that dummy package Cabal-syntax, the only point of using it is so you can use that flag stanza for upward compatibility
[18:50:13] <geekosaur> using it by itself is pointless
[18:50:19] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:50:31] <geekosaur> (the flag stanza documented in the package readme)
[18:52:11] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[18:52:29] <merijn> Opinion poll: Using custom 2 constructor ADTs to replace booleans with semantic names. Yay or nay?
[18:52:31] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[18:52:57] <tomsmeding> if it's not obvious from the function name and parameter list what the boolean would do
[18:52:58] <geekosaur> see "Boolean blindness"
[18:53:10] <tomsmeding> I wouldn't want `showParen` to take a non-boolean
[18:53:24] <tomsmeding> or `guard`
[18:53:29] <geekosaur> I'd generally be in favor just so I know what's going on. and don't have to remember which state True represents
[18:53:35] <geekosaur> but it depends on the context
[18:54:17] *** Quits: agumonke` (~user@37.175.254.13) (Ping timeout: 240 seconds)
[18:54:21] <merijn> geekosaur: Yeah, that's my thinking. I have a query that optionally filters stuff. Thinking of just doing "data FilterRetries = NoFilter | Filter" or something like that
[18:54:28] <Franciman> merijn: would you be confident that ghc works well for compiling a program that runs in a critical system?
[18:54:33] <Franciman> totally fail-safe
[18:54:47] <merijn> so that I don't have to remember "fooQuery True" does instead of "fooQuery FilterRetries" or something
[18:54:47] <tomsmeding> there is a reason certified compilation is a research area
[18:55:07] <merijn> Franciman: I wouldn't trust *any* compiler for that, except maybe compcert
[18:55:20] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Remote host closed the connection)
[18:55:25] <Franciman> but haskell's tagline is that it's better than others at writing correct code
[18:55:27] <Franciman> so...
[18:55:29] <Franciman> that's why it matters
[18:55:38] <Franciman> i see
[18:55:39] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[18:56:23] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[18:56:28] <merijn> Haskell doesn't have a tagline, except maybe "avoid success at all costs" (with ambiguous parentheses)
[18:56:34] <Franciman> apparently an industry grade compiler means a compiler that fulfills most of its promises. So for ghc to be industry grade
[18:56:41] <Franciman> it has to have much higher standards than other compilers
[18:57:36] <tomsmeding> I'm not sure that was ever the goal of GHC
[18:57:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[18:58:07] <tomsmeding> part of the draw of the _language_ haskell is that it allows writing programs in a way that is closer to the specification domain, which makes it easier to make correct
[18:58:18] <tomsmeding> and that the language is very good at expression abstraction
[18:58:48] <tomsmeding> none of those properties of the language automatically, implicitly, transfer to all implementations of said language
[18:58:55] *** Quits: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[18:58:55] *** Quits: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[18:59:39] <tomsmeding> in particular, GHC started as a research compiler, in order to have a centralised implementation for research on compilation techniques for functional languages
[19:00:07] <tomsmeding> people are now _using_ GHC as a production compiler, which is a sign that it works better than it could have been
[19:00:42] *** Joins: lumberjack (~alMalsamo@gateway/tor-sasl/almalsamo)
[19:00:50] <tomsmeding> and furthermore it means that people are _interested_ in a production-strength compiler, which is an incentive to either make ghc more production-strength, or make some other compiler that is production-strength
[19:00:58] <tomsmeding> it doesn't mean that ghc "must" already be such
[19:01:11] <tomsmeding> that is, unless you're paying people to make ghc that
[19:03:17] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[19:03:28] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[19:05:55] *** Joins: zebrag (~chris@user/zebrag)
[19:05:55] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:06:14] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:06:16] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Ping timeout: 272 seconds)
[19:07:57] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:08:16] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:12:31] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:12:49] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:13:51] *** Joins: komikat (~komikat@117.199.167.81)
[19:15:05] *** Joins: cfricke (~cfricke@user/cfricke)
[19:15:12] <geekosaur> but there are those who are paying people to make ghc that
[19:15:28] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:8d53:e1e0:93f9:3bd7)
[19:15:33] <geekosaur> well-typed, I think iohk and tweag, etc.
[19:19:18] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:19:40] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:21:24] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[19:21:31] *** Quits: komikat (~komikat@117.199.167.81) (Ping timeout: 256 seconds)
[19:22:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:24:21] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:24:40] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:26:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[19:27:58] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[19:28:05] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:a4cb:68c9:de1e:1202) (Read error: Connection reset by peer)
[19:28:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:28:27] *** Joins: mastarija (~mastarija@2a05:4f46:e04:6000:a4cb:68c9:de1e:1202)
[19:28:31] *** Joins: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net)
[19:29:12] *** Joins: niekvand1pas (~niekvande@77-161-122-185.fixed.kpn.net)
[19:30:06] *** Quits: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Quit: You have been kicked for being idle)
[19:30:12] *** Quits: craige[m] (~craigemcw@2001:470:69fc:105::35f1) (Quit: You have been kicked for being idle)
[19:30:13] *** Quits: EkaiZend[m] (~ekai-zend@2001:470:69fc:105::1:7756) (Quit: You have been kicked for being idle)
[19:30:38] *** Joins: vicfred (~vicfred@user/vicfred)
[19:30:50] *** Joins: k8yun (~k8yun@user/k8yun)
[19:31:27] *** Quits: niekvandepas (~niekvande@77-161-122-185.fixed.kpn.net) (Ping timeout: 256 seconds)
[19:34:29] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[19:35:48] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 240 seconds)
[19:36:25] *** Joins: coot (~coot@213.134.190.95)
[19:36:45] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[19:37:06] *** Joins: acode (~acode@2a02:908:d78:6e0:1842:49df:1755:c821)
[19:37:14] *** Quits: yushyin (UhIHx5Z1ii@mail.karif.server-speed.net) (Quit: WeeChat 3.3)
[19:37:33] *** Joins: yushyin (UUdtykrwRM@mail.karif.server-speed.net)
[19:38:06] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:39:46] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:40:05] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:41:53] <WhateverRabbit> geekosaur: they commited at uhc-util 7 months ago
[19:42:06] *** Quits: acode (~acode@2a02:908:d78:6e0:1842:49df:1755:c821) (Quit: Client closed)
[19:45:06] *** Joins: yauhsien (~Yau-Hsien@61-231-36-13.dynamic-ip.hinet.net)
[19:45:38] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[19:46:12] *** Quits: sander (~sander@user/sander) (Ping timeout: 240 seconds)
[19:48:33] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[19:49:16] *** Joins: sander (~sander@user/sander)
[19:50:23] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[19:51:58] *** Joins: zebrag (~chris@user/zebrag)
[19:53:03] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[19:54:03] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:9e51:3601:4227:d1e0) (Quit: WeeChat 2.8)
[19:55:43] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[19:56:02] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[19:56:13] <merijn> A toast to me from August 2021. Who invested the pain and effort to refactor a bunch of stuff for the feature I need to add now...
[19:56:37] <merijn> I spent the entire afternoon dreading to refactor the code to make this work and now it turns out to be trivial. Go me!
[19:57:47] <Franciman> i can't wait to test mlton
[19:58:08] <Franciman> they promise a lot of nice optimisations
[19:59:28] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (Read error: Connection reset by peer)
[20:00:23] <carbolymer> just one afternoon? what did you change merijn, add one constructor? ;-]
[20:00:50] * carbolymer has spent 3 days refactoring the way we're peersisting queues, and I'm nowhere near the half of it
[20:01:03] *** Quits: zaquest (~notzaques@5.130.79.72) (Read error: Connection reset by peer)
[20:01:41] *** Joins: Guest8 (~Guest8@103.159.184.221)
[20:02:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Remote host closed the connection)
[20:03:04] *** Quits: Guest8 (~Guest8@103.159.184.221) (Client Quit)
[20:04:36] <merijn> carbolymer: No, I was doing other stuff before getting to the painful bit. But then I already fixed the painful bit months ago :p
[20:04:48] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[20:04:55] <carbolymer> the painful bits are the most painful
[20:06:50] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:07:09] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:09:04] *** Joins: bahamas (~lucian@84.232.140.52)
[20:10:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[20:10:43] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:11:30] *** Quits: ystael (~ystael@user/ystael) (Read error: Connection reset by peer)
[20:12:04] *** Joins: zaquest (~notzaques@5.130.79.72)
[20:12:12] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[20:12:46] *** Quits: mbuf (~Shakthi@223.178.126.53) (Quit: Leaving)
[20:14:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-015-039.client.tudelft.eduvpn.nl)
[20:14:38] *** Joins: ystael (~ystael@user/ystael)
[20:17:36] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:17:44] *** Joins: xkuru (~xkuru@user/xkuru)
[20:17:56] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:18:11] *** Quits: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl) (Ping timeout: 256 seconds)
[20:19:51] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:20:09] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:21:34] *** Joins: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com)
[20:21:56] *** Joins: Midjak (~Midjak@82.66.147.146)
[20:23:08] <Henson> is there a way I can make a type class have an optional function that does not have a default implementation?  I'm trying to implement a class for determining whether two types are "close" to each other.  I'd like the class to have a function "close" that uses a default tolerance, as well as "closeTol" that allows one to specify the desired tolerance.  You could write "close = closeTol 1e-6" ...
[20:24:49] <Henson> or something like that, but I'd like "close" to be able to use the "close" implementation of a data types sub-types, assuming they're also instances of close.  In certain cases the user might want to override the default behaviour by using the "closeTol" function.  But I essentially end up with duplicating the body of the closeTol function.  If I define the closeness and type unwrapping logic...
[20:25:25] <Henson> in the "close" function, then I lose the ability to specify the tolerance.  If I specify it in the "closeTol" function, then I lose the ability to rely on the "closeness" definitions of the subtypes.
[20:25:41] <merijn> Henson: What do you mean by "sub-types"?
[20:26:41] <Franciman> wooo
[20:26:44] <Franciman> quite unexpected for me
[20:26:49] <Franciman> mlton produces a faster binary than ghc
[20:27:00] <Franciman> for doing the sum of the first 10million numbers
[20:27:05] <Henson> merijn: say you've got a type "Point3D = Point3D { point3D_x :: Double, point3D_y :: Double, point3D_z :: Double}".  You could define Double as an instance of Close, and then define Point3D as an instance of Close using the "close" function for the doubles.
[20:27:17] <Franciman> laziness at its worst?
[20:27:25] <Franciman> or probably it's the io primitives
[20:27:30] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:27:39] <merijn> Franciman: mlton does whole program optimisation, GHC does not
[20:27:44] <Franciman> yes i know
[20:27:49] <merijn> Henson: Sure
[20:27:49] <Franciman> oh ghc does not?
[20:27:51] <Franciman> sad
[20:27:55] <Franciman> well
[20:28:00] <Franciman> that's why it is so slow
[20:28:03] <merijn> Franciman: No, because compile times for big programs suck
[20:28:11] <merijn> (with whole program optimisation)
[20:28:12] <Franciman> merijn: can i correct you?
[20:28:22] <Franciman> compile times for 3 lines of code suck
[20:28:23] <merijn> It also means you can't compile libraries independently
[20:28:24] <Franciman> :P
[20:28:29] <Franciman> it is very slow
[20:28:32] <Franciman> VERY SLOW
[20:28:35] <Henson> maybe it knows about N*(N+1)/2 ?   :-)
[20:30:38] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:30:56] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:31:31] <merijn> Henson: so the issue is that you want the Close instance for Point3D to default to the default tolerance of Double, but *also* optionally specify your own?
[20:32:51] *** Quits: Kevin578 (~Kevin578@pool-173-76-179-30.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[20:33:01] <Henson> merijn: yes.  I considered setting "closeTol = undefined" as the default class definition of that function, but that seems bad.  If I didn't define it at all for instances where I'm not interested, I'd get a bunch of compiler warnings.
[20:33:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[20:34:09] <Henson> merijn: because I want the user to know when they're trying to use the closeTol function when it isn't defined.  I could also use the default definition as "closeTol _ = close" and simply throw away the tolerance value when it's not defined, but that would make the user unaware of when they're trying to use the closeTol function and the tolerance isn't actually being used.
[20:34:29] <Franciman> lol the mlton team is 4 people
[20:34:32] <Franciman> it's quite impressive
[20:35:07] <Franciman> i guess there are other contributors
[20:35:48] <Franciman> my next goal is go over the Â«why functional programming mattersÂ» paper 
[20:35:56] <Franciman> and try and implement the algorithms there in sml
[20:36:12] <Franciman> and try to reach haskell's version performance 
[20:36:18] <Franciman> in the least amount of work possible
[20:36:26] <Henson> Franciman: how do you like SML compared to Haskell?
[20:37:12] <Franciman> i don't know sml much, but for now i like it!
[20:37:21] <Franciman> the module system seems very cool
[20:37:27] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:37:30] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[20:37:37] <Franciman> and i like that it has a formal semantics specified, so i can try and implement my interpreter :P
[20:38:28] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[20:39:44] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[20:40:44] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:41:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:42:35] <Franciman> i also favour the default strictness
[20:44:38] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[20:45:17] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:46:47] <lechner> Hi, could someone please help me how to replace the outdated constructor ThisVersion in this pattern with the more modern thisVersion?     https://github.com/nomeata/hpvt/blob/master/PlatformOutput.hs#L50
[20:46:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[20:49:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc)
[20:51:44] *** Joins: asthasr (~asthasr@208.80.78.154)
[20:53:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[20:55:00] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:55:19] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:57:06] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:57:24] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[20:57:37] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[20:59:17] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[20:59:37] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:00:15] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[21:00:29] *** Quits: jespada_ (~jespada@85.255.234.170) (Quit: Textual IRC Client: www.textualapp.com)
[21:00:50] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:8433:129d:16c2:6bdb) (Remote host closed the connection)
[21:01:25] *** Joins: meer (~delicacie@2601:6c4:4080:3f80:55e3:a4ac:dc60:2b79)
[21:02:01] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:8d53:e1e0:93f9:3bd7) (Ping timeout: 245 seconds)
[21:02:18] *** Joins: deer (~delicacie@2601:6c4:4080:3f80:64ae:8d65:326:7bc)
[21:03:58] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[21:04:17] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:04:28] *** Joins: Akiva (~Akiva@user/Akiva)
[21:05:24] <dolio> lechner: Maybe you should just import the .Internal module that exports the constructor.
[21:05:58] *** Quits: meer (~delicacie@2601:6c4:4080:3f80:55e3:a4ac:dc60:2b79) (Ping timeout: 260 seconds)
[21:08:02] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[21:08:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:08:20] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:09:37] <dolio> Otherwise you have to use one of the fold functions provided in the 'official' interface, but those just seem more cumbersome for what you're doing there.
[21:10:33] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[21:13:21] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[21:13:37] *** Joins: emf (~emf@2620:10d:c090:400::5:e2d5)
[21:14:45] *** Joins: agumonkey (~user@88.163.231.79)
[21:14:56] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:15:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[21:18:20] *** Quits: kuribas (~user@ip-188-118-57-242.reverse.destiny.be) (Quit: ERC (IRC client for Emacs 26.3))
[21:20:11] <lechner> dolio: Hi, can i use the more modern, lower-case 'thisVersion' outside the pattern?
[21:20:20] *** Joins: mncheck (~mncheck@193.224.205.254)
[21:20:39] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:21:55] <dolio> Most likely.
[21:22:38] <dolio> It seems that the constructors are hidden because there is some denormalization about how certain versions are represented.
[21:24:00] <dolio> Although the 'cataVersionRange' stuff provides the full information, so I guess I don't quite get it.
[21:26:03] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[21:26:05] *** Joins: econo (uid147250@user/econo)
[21:26:22] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:28:03] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[21:28:06] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-063.ewe-ip-backbone.de)
[21:28:22] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:29:15] *** Joins: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl)
[21:30:04] *** Joins: briandaed (~root@109.95.142.93.r.toneticgroup.pl)
[21:30:57] <Topsi> For (>>=) we have the name `bind`. Is there such a name for (>>)?
[21:31:19] *** Joins: k8yun (~k8yun@user/k8yun)
[21:31:21] <dolio> "And then"?
[21:31:58] <WhateverRabbit> "And then" it is literally bind
[21:32:13] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[21:32:23] <Topsi> Would it make sense to call it seq or monadic seq?
[21:32:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[21:33:22] <WhateverRabbit> foo.andThen(x => bar(x).andThen(y => baz(y)))
[21:35:18] <WhateverRabbit> You can't call it seq because there is such function, but i think monadic seq iss pretty good choice
[21:36:16] *** Joins: gdown (~gavin@h69-11-149-231.kndrid.broadband.dynamic.tds.net)
[21:36:25] <Franciman> how can i enable LTO in ghc?
[21:39:18] *** Joins: notzmv (~zmv@user/notzmv)
[21:40:39] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[21:48:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc) (Remote host closed the connection)
[21:50:32] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[21:50:51] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[21:51:00] *** Joins: k8yun_ (~k8yun@user/k8yun)
[21:51:17] *** Quits: MajorBiscuit (~MajorBisc@c-001-015-039.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:51:37] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc)
[21:53:09] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[21:53:41] *** Quits: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl) (Ping timeout: 256 seconds)
[21:57:42] *** Joins: coot (~coot@213.134.190.95)
[22:00:25] *** Quits: mastarija (~mastarija@2a05:4f46:e04:6000:a4cb:68c9:de1e:1202) (Quit: Leaving)
[22:01:40] <Franciman> lol ghc is losing damn hard at mlton
[22:01:49] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 240 seconds)
[22:01:58] <lechner> why does this 'where' occur before buildDependsMap is actually used?    https://github.com/nomeata/hpvt/blob/master/PlatformOutput.hs#L49
[22:03:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[22:03:10] <merijn> ??
[22:03:15] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[22:03:21] <dolio> It's the `where` for `mkTable`.
[22:03:24] <merijn> The where belongs to mkTable
[22:03:35] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[22:03:55] <merijn> man...some long term Haskellers really write some godawful looking code >.>
[22:04:01] <lechner> why symbol is being defined by the clause(s) 
[22:04:05] <lechner> which
[22:04:46] <Franciman> topkek
[22:05:47] <merijn> lechner: There's 8 being defined in that block
[22:06:37] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:c19d:39a5:11c7:fcb0)
[22:07:30] <lechner> which one is being used for mkTable?
[22:08:09] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[22:08:32] <merijn> hmm?
[22:09:07] *** Joins: justAstache (~justache@user/justache)
[22:09:18] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc) (Remote host closed the connection)
[22:09:20] <lechner> isn't the 'where' a "post-let"?
[22:09:31] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[22:09:33] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[22:10:04] <merijn> not in any way that is sensible to me
[22:10:47] <merijn> where introduces a block of bindings associated with the preceding binding/module definition
[22:12:38] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[22:12:56] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[22:13:26] *** Joins: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net)
[22:13:55] <lechner> but what is the point of bind "buildDependsMap pd" when it is not being used?
[22:14:00] <lechner> binding
[22:14:17] <merijn> It is being used?
[22:14:32] <lechner> before the 'where'?
[22:14:49] <merijn> Yes. Indirectly
[22:15:18] <merijn> buildDependsMap is used in the binding of maps, which is used in the binding of pkgs, which is used
[22:16:02] <lechner> i see
[22:16:15] <lechner> it may be easier to find america
[22:19:07] *** Quits: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:19:55] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[22:20:34] <Franciman> i can't tell you how happy i am
[22:20:43] <Franciman> to try the examples in why functional programming matters
[22:20:47] <Franciman> they are so cool
[22:21:08] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:23:08] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc)
[22:25:40] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:26:32] *** Quits: unit73e (~ecouto@2001:818:e8dd:7c00:fb1b:fecb:4b1f:fc93) (Quit: Leaving)
[22:26:34] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[22:30:12] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[22:30:17] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[22:30:31] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[22:31:42] *** Joins: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl)
[22:31:50] *** Parts: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl) (Leaving)
[22:32:57] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:33:16] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:34:16] <janus> lechner: how would you prefer to have this code written? with more top-level definitions?
[22:34:47] *** Quits: ccntrq (~Thunderbi@2a01:e34:eccb:b060:403:7e11:65d2:d468) (Remote host closed the connection)
[22:35:01] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:b3b1:50d7:298:a656)
[22:35:07] <janus> i like having bindings defined such that later definitions depend on earlier ones, and this code does that
[22:35:52] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:36:55] <lechner> as a newbie, i think i need more top-level functions
[22:37:08] <janus> and imho there is an argument for having bindings *not* be top-level, such that you know where the function can be used
[22:37:26] <lechner> to preserve the name space?
[22:37:48] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 240 seconds)
[22:38:04] <lechner> why can this not be top-level?  https://github.com/nomeata/hpvt/blob/master/PlatformOutput.hs#L85
[22:38:06] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:84ab:7996:1b4c:abb5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:38:12] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:39:02] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:39:03] <janus> it could be, but as mentioned, because it is *not* top-level, you also know that it can't be e.g. exported and used in other modules
[22:39:59] <janus> the name showVcmp would probably be unique anyway, so namespacing isn't necessarily an issue
[22:40:04] <AndreasK> Everything can be top level by making the free vars arguments if you really want to.  For the binding you linked I don't think it matters much
[22:40:51] <AndreasK> For bigger modules it can help by making it obvious something is only used in one function.
[22:41:22] <lechner> i actually do not not have strong opinion. i just can't figure out how to replace the deprecated ThisVersion with the modern thisVersion. I think that's because I misunderstand pattern matching, wich used so extensively here
[22:41:54] <lechner> in fact, the error is   PlatformOutput.hs:50:42: error: Parse error in pattern: thisVersion
[22:42:38] <lechner> i think one is a type, and the other a function, but i could be wrong about that too
[22:43:13] <janus> there is punning in Haskell, so ThisVersion can be both a data constructor (value level) and a type (type level)
[22:43:43] <janus> if you had "newtype ThisVersion = ThisVersion String", the first occurance is the type level name, and the second occurrance is the value level name
[22:43:56] <monochrom> Where can I see "thisVersion" in actual code?
[22:44:10] <lechner> i just replaced it
[22:44:39] *** Joins: jstolarek (~jstolarek@staticline-31-183-165-217.toya.net.pl)
[22:44:44] <monochrom> Ugh do you mean the equivalent of "I have this code 'f (Just x) = x' and I simply s/Just/just/"?
[22:45:21] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:46:19] <lechner> i am trying to make sense of this    https://hackage.haskell.org/package/Cabal-1.20.0.1/docs/Distribution-Version.html#t:VersionRange
[22:46:24] *** Quits: ishutin (~ishutin@92-249-179-24.pool.digikabel.hu) (Ping timeout: 250 seconds)
[22:46:55] <lechner> thisVersion also take a Version and produces a VersionRange
[22:47:00] <lechner> takes
[22:47:38] <lechner> but the function cannot go into the pattern i do not think
[22:47:47] <dolio> `thisVersion` is only a replacement for building VersionRanges.
[22:48:02] *** Joins: ishutin (~ishutin@84-236-55-95.pool.digikabel.hu)
[22:48:09] <lechner> as opposed to?
[22:48:16] <monochrom> Perhaps you will have to look into foldVersionRange
[22:48:32] <dolio> The other things in the deprecation message are ways of taking them apart.
[22:48:48] <monochrom> And that's right it also means you can't use pattern matching.
[22:48:49] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[22:50:30] <lechner> what does the pattern match achieve here, conceptually, that a function cannot?
[22:50:55] <monochrom> It is similar to "maybe" (it does the patterns Nothing and Just x for you) and "either" (it does the patterns Left x and Right y for you).
[22:50:59] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:b3b1:50d7:298:a656) (Remote host closed the connection)
[22:51:48] *** Quits: yauhsien (~Yau-Hsien@61-231-36-13.dynamic-ip.hinet.net) (Quit: Leaving)
[22:52:06] <lechner> does the original code save a conditional because of it?
[22:52:11] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:b7bd:30cb:4be8:9dec)
[22:52:22] <monochrom> And then there is always the null hypothesis of "this is merely deprecated, we need not really avoid it for now"
[22:52:33] <merijn> lechner: I mean, that'd be up to you to figure out, since you're the one trying to modify it, no? :)
[22:52:55] <lechner> is this a place to come for help?
[22:53:55] <lechner> the distribution info for debian on hackage is three years old. this code will update it
[22:55:09] *** Quits: ishutin (~ishutin@84-236-55-95.pool.digikabel.hu) (Ping timeout: 256 seconds)
[22:55:13] <geekosaur> I am tempted to say, from the questions I'm seeing from you in backscroll, that a quick trip through cis194 will help you
[22:55:50] <merijn> Yes, no, maybe, it depends. The likelihood of help correlates how much personal effort people here have to invest to answer a question. "what can a pattern match achieve conceptually that a function cannot" is so wildly open ended I don't know where to begin and thus can't be arsed
[22:56:50] *** Joins: ishutin (~ishutin@92-249-141-244.pool.digikabel.hu)
[22:57:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[22:57:52] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:58:06] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:58:08] <monochrom> I know where to end though. "Learn Haskell" :)
[22:58:26] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:58:37] *** Quits: ishutin (~ishutin@92-249-141-244.pool.digikabel.hu) (Read error: Connection reset by peer)
[22:59:04] <monochrom> But I have already pointed to the simpler examples of "maybe" and "either".  foldVersionRange is just the same concept on steroid.
[22:59:36] <janus> lechner: sure this is a place for help, but if the questions demonstrate that you havn't done the basic exercises people will be less inclined... i think cis194 is a good recommendation even though i havn't tried it myself
[23:00:01] <janus> i just tried to find a good section on pattern matching and data constructors in LYAH but i couldn't :O
[23:00:10] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:00:16] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[23:00:21] <janus> i just love the cute pictures in LYAH too much, but maybe it isn't actually a good book :P
[23:00:26] <merijn> janus: that's because LYAH's just objectively "not that good" :)
[23:00:31] <janus> yeah i know people say that
[23:00:35] <janus> but they pictures are so cute
[23:01:39] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:01:50] <janus> and then i thought, people say that the Gentle Introduction is absolutely Brutal, and sure enough, it was so concise i couldn't even find a chapter on how pattern matching and data constructors fit together
[23:02:08] <merijn> janus: The Gentle Intro assumes a background in ML-style languages
[23:02:23] <merijn> janus: so it assumes pattern matching is something obvious you're used to
[23:03:00] *** Joins: ishutin (~ishutin@84-236-55-20.pool.digikabel.hu)
[23:03:05] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:04:01] <geekosaur> yeh. I found it not so brutal but I had some SMLNJ experience
[23:10:22] <monochrom> A whole chapter on just that would be overkill OTOH.
[23:10:54] <monochrom> Unless the reader actively wants to be active insulted by being condescended to.
[23:11:04] <janus> well i was thinking about how there are so many ways to express the same thing with patterns for records
[23:11:43] <janus> LambdaCase, NamedFieldPuns, RecordWildCards, using the record constructor with positions instead of field names (how do i properly refer to that?)
[23:12:51] <janus> and that's not even getting into bidirectional patterns synonyms or ViewPatterns
[23:13:07] <dolio> I wouldn't expect any book to cover that.
[23:14:26] <dolio> Half a dozen different convenient syntaxes for records is not really essential to understanding pattern matching.
[23:15:09] *** Joins: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e)
[23:15:57] <janus> agreed, i am just saying that a chapter could be written if one was so inclined :P
[23:16:20] <telser_> If any book tried to cover all the extensions applicable to any given topic.. nobody would read that book for sheer length.
[23:18:34] <monochrom> A whole chapter devoted to the concepts of algebraic data types is about right. Pattern matching is just a corollary.
[23:18:39] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[23:18:41] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[23:18:52] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[23:19:21] *** Joins: Akiva (~Akiva@user/Akiva)
[23:21:40] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:22:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:22:38] <kaol> I'm doing some PTY programming with Haskell. Because why not. Some newer terminal emulators have decided that SGR 1 no longer changes colors, leading to some less than useful things like bold black text on black background. So I made a thingy that runs another program and reinterprets SGR 1 to use colors in range 90-97 instead.
[23:23:15] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 256 seconds)
[23:24:03] <WhateverRabbit> telser_: you can read a GHC user guide instead
[23:24:26] *** Lord_of_Life_ is now known as Lord_of_Life
[23:24:27] <monochrom> Indeed, nobody reads that book for sheer length. >:)
[23:24:33] <monochrom> (OK I lied. I read it.)
[23:24:42] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[23:24:47] <geekosaur> I both read it and keep it open for reference
[23:24:57] <geekosaur> but I know I'ma rare bird there
[23:25:30] <monochrom> (But it's the #1 reason why people ask on IRC instead of knowing that the questions are already answered there, very directly too.)
[23:25:54] <dolio> Yeah, the users guide is the book on that. The point of other books is to get you the background to just look at the users guide for things you want.
[23:26:10] <dolio> You don't need a separate book to include an outdated snapshot of the users guide.
[23:26:12] <merijn> I've said it before: Not enough people read the GHC User's Guide
[23:26:14] *** Joins: Pickchea (~private@user/pickchea)
[23:26:28] <merijn> Like, if you do any amount of Haskell programming, just skim it once a year
[23:26:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:27:19] *** telser_ is now known as telser
[23:27:55] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[23:28:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[23:28:28] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[23:28:41] *** Joins: komikat (~komikat@117.199.167.81)
[23:29:00] <telser> Yes my point was if another book started to include all the extensions you would end up so long it wouldn't be read, similar to the users guide
[23:29:24] *** Joins: bahamas (~lucian@84.232.140.52)
[23:29:48] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[23:29:49] <monochrom> The secret recipe of success for a lot of us is that on day 1, we take a look at the table of contents and remember it. (We don't need to read the whole book on day 1.) Then years later, when we need something, we know where to look.
[23:30:08] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[23:30:13] <monochrom> Then again, success recipes are written by the victors :)
[23:31:07] *** Joins: komikat_ (~komikat@157.38.216.244)
[23:31:25] *** Joins: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1)
[23:32:27] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7)
[23:32:31] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[23:32:41] <geekosaur> lechner: please understand that we're not trying to be condescending. you look like you've been tossed into a project and you're in over your head. and it shows in e.g. your not really understanding Haskell's pattern matching
[23:33:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:3c1e:11a0:debc:333e) (Ping timeout: 240 seconds)
[23:33:32] *** Quits: komikat (~komikat@117.199.167.81) (Ping timeout: 272 seconds)
[23:33:33] <geekosaur> were I you, I'd start out by going through CIS194 to get the basics, then something like Real World Haskell to see how to use it in actual projects, before trying to refactor someone else's project
[23:33:37] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[23:33:45] <geekosaur> @where CIS194
[23:33:45] <lambdabot> https://www.seas.upenn.edu/~cis194/spring13/lectures.html
[23:33:45] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:33:50] <geekosaur> @where RWH
[23:33:50] <lambdabot> http://www.realworldhaskell.org/blog/ http://book.realworldhaskell.org/read/
[23:35:13] <geekosaur> this is made worse by the fact that Haskell is very different not only from commonly usedlanguages, but even than other languages in its own language family. So experience from other languages can be useless or (even worse) potentially misleading
[23:35:23] <geekosaur> this is *not* easy!
[23:36:35] <geekosaur> and trying to refactor someone  else'scodebase is close to the worst possible way to get a handle on a new lnaguage, especially one so different from whatyou're used to
[23:37:22] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[23:37:39] <lechner> i think i do understand it pattern matching. i use it, however clumsily, with some frequncy.    https://salsa.debian.org/lintian/detagtive/-/blob/history/qa-list/GenerateQAList.hs#L160-161
[23:38:58] <lechner> my issue is (1) that i don't get the 'where' and (2) that my fascination with haskell exceeds my abilities, but the latter is pretty common i think
[23:43:01] *** Joins: jakalx (~jakalx@base.jakalx.net)
[23:43:30] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:45:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[23:46:03] *** Joins: coot (~coot@213.134.190.95)
[23:46:22] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:46:27] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[23:46:56] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[23:46:58] <lechner> and if pattern matching is such a great technique, why did someone go through great length to hide this particular constructor, please?      https://hackage.haskell.org/package/Cabal-3.6.2.0/docs/Distribution-Types-VersionRange-Internal.html
[23:47:18] <geekosaur> usually for flexibility
[23:47:27] <geekosaur> there are many upsides to pattern matching
[23:47:36] <geekosaur> one downside is it doesn't handle things like ranges well
[23:47:51] <geekosaur> and the code you've been showing us wants to deal with version ranges
[23:48:23] <geekosaur> in paritcular, anything that has a runtime component such as an iteration or a range is not well suited to a pattern match
[23:48:28] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:48:45] <monochrom> For abstraction. And in turn, abstraction is for "what if one day I want to change an internal detail that shouldn't matter outside?"
[23:49:37] <monochrom> For example you can see that Data.Ratio does not expose its data constructor even though it could.
[23:51:41] <lechner> is     f x,y    the same     as     f (x,y)      please?
[23:52:16] <dolio> No.
[23:52:47] <janus> "f x,y" is not an expression
[23:53:16] <lechner> what is this, please?    https://github.com/nomeata/hpvt/blob/master/PlatformOutput.hs#L50
[23:53:30] <[exa]> that's in parentheses
[23:53:35] <tomsmeding> that's a pair with two items: fromCabal pkg, and ver
[23:53:36] <[exa]> parses as ((f x), (y))
[23:53:37] <lechner> (f x, y) ?
[23:53:49] <lechner> great!
[23:55:46] *** Quits: cc123652345762 (~cc1236523@113.89.32.178) (Remote host closed the connection)
[23:56:05] *** Joins: cc123652345762 (~cc1236523@113.89.32.178)
[23:56:37] *** Quits: ishutin (~ishutin@84-236-55-20.pool.digikabel.hu) (Ping timeout: 240 seconds)
[23:56:56] <reactormonk[m]> How do I combine two prisms pointing to the same type (but different fields) into one?
[23:58:10] <[exa]> reactormonk[m]: by "combining" you mean something like getting a prism to a tuple of the two?
[23:58:13] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:917f:cb7a:6a6c:cd7) (Remote host closed the connection)
[23:58:30] *** Joins: ishutin (~ishutin@92-249-141-166.pool.digikabel.hu)
[23:59:36] <reactormonk[m]> More that I can modify both at the same time with a traversal
