[00:02:55] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[00:03:37] *** Quits: bora (~bora@176.33.68.247) (Quit: Leaving)
[00:04:03] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[00:04:09] *** Joins: lavaball (felix@31.204.155.215)
[00:04:58] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[00:05:10] <OnlineCop> `man bash` under 'declare [-aAfF...' gives how to set each of these; I see nothing on how to interpret, say, `--`. Is that something declared but has no attributes at all? I see `declare -- ` for things like IFS, COLUMNS, HISTFILE, PS2, a bunch of __git_* stuff.
[00:05:18] *** Joins: keypusher (keypusher@user/keypusher)
[00:05:30] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[00:05:52] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:69b7:8443:1124:b10f)
[00:06:09] <Guest19> hello. Can someone help with https://pastebin.com/sbCqcnmV
[00:06:10] <pasteban> Paste is available without ads on https://pastebin.com/raw/sbCqcnmV
[00:06:19] <Guest19> I am getting unexpected end of file error
[00:06:33] *** TheSilentLink_ is now known as TheSilentLink
[00:06:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:07:32] <OnlineCop> Guest19: If you're using double quotes, I'd suspect that the $(...) and $cnt are being expanded by the current shell. Is that what you want?
[00:08:22] <Guest19> yeah I mean I want to print count of those files
[00:09:11] *** Joins: wurstwasser (~frank.hol@2001:a61:3553:801:df8e:910c:52:6eb3)
[00:09:16] *** Quits: nvmd (~weechat@user/nvmd) (Read error: Connection reset by peer)
[00:09:18] <OnlineCop> `cnt=$(ls myfile*.log...)` is being run from YOUR current directory, not from /tmp/mypath, because the "..." double quotes see the '$' of '$(...)'.
[00:09:43] <OnlineCop> If you change the double quotes to single quotes, do you see an error? Also; throw a semi-colon at the end of the "echo $cnt" line, before the final 'fi'.
[00:09:54] <Guest19> okay. let me try
[00:10:20] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[00:11:03] <Soliton> !ls
[00:11:04] <greybot> DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[00:11:38] <Guest19> OnlineCop : cd too many arguments
[00:12:23] <Guest19> ok throwing semi colons everywher worked
[00:13:00] *** Joins: akoana (~ah@user/akoana)
[00:13:59] <Guest19> how do I refer to $host inside the script?
[00:14:03] <Soliton> files=(myfile*.log); printf '%d log files\n' "${#count[@]}"
[00:14:18] <Soliton> err files instead of count.
[00:16:09] *** Quits: wurstwasser (~frank.hol@2001:a61:3553:801:df8e:910c:52:6eb3) (Remote host closed the connection)
[00:16:21] *** Joins: wurstwasser (~frank.hol@2001:a61:3553:801:12a1:56dc:e2bd:f351)
[00:19:31] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:20:52] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Remote host closed the connection)
[00:22:30] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[00:23:13] *** Quits: Guest7489 (~Guest@181.91.157.216) (Remote host closed the connection)
[00:24:45] *** Joins: Xanthaos (~ke4nhw@user/ke4nhw)
[00:28:35] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:28:44] *** Joins: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net)
[00:32:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:32:26] <ano> is there a way to clr sensitive data (stored in var for example) from mem?
[00:33:49] <Soliton> var=
[00:34:27] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:35:40] <ano> unset var? but does it rly guarantee that sens data will be rmed from mem?
[00:35:47] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 256 seconds)
[00:36:27] <Soliton> what's the goal? hide stuff from root?
[00:36:55] <ano> rm sens data from mem
[00:37:36] <Soliton> reboot
[00:37:49] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:38:12] <Soliton> if you come up with an actual goal maybe you can work towards it or decide it's not feasable.
[00:39:25] <OnlineCop> Fill sensitive-data variables with RANDOM.
[00:41:24] <tirnanog> use a kernel that poisons unallocated (anonymously mapped) pages, and either use encrypted swap or no swap at all. combine that with not allowing instances of bash that deal with sensitive data to be long-lived in the first instance.
[00:42:48] <ano> is there a way/cmd to read input and pass it directly to stdout without var?
[00:44:12] *** Quits: King_julian (~King_juli@41.23.68.86) (Ping timeout: 252 seconds)
[00:44:12] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[00:44:16] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[00:45:07] <ano> keyid=$(keyctl add user key "$(read -rs)" @s) need something like this where $(read -ns) output read from stdin
[00:45:59] *** Joins: UrsoBranco (~UrsoBranc@200.189.119.155)
[00:46:39] <geirha> you'll need a printf along with that read, but that'll make the password/secret visible in ps
[00:47:05] <tirnanog> I mean, there are other ways, but what's the point? it's going to be transiently reside in memory one way or the other. and yes, that command will leak to the process table.
[00:48:09] <geirha> if you want to hide the secret, pass it via environment or stdin
[00:48:40] <geirha> hopefully keyctl supports reading from either...?
[00:48:44] <tirnanog> having consulted the man page, use padd instead of add.
[00:48:52] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:48:56] <tirnanog> "The padd variant of the command reads the data from stdin rather than taking it from the command line:"
[00:49:12] <ano> padd is awful
[00:49:23] <tirnanog> why?
[00:49:45] <ano> it shows input on typing
[00:49:54] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:50:44] <tirnanog> no it doesn't. that's a behaviour of your terminal emulator.
[00:52:04] <tirnanog> it's not going to get much better than: ( read -rs && printf %s "$REPLY" | keyctl padd ... )
[00:52:43] <ano> still bad
[00:52:49] <tirnanog> no it's not.
[00:53:03] <tirnanog> in fact, that's as good as it's going to get.
[00:53:48] <tirnanog> if you have a page poisoning kernel, it will do what it does upon the containing subshell exiting. if you don't, though. it's not a problem to be solved by bash.
[00:53:53] <tirnanog> tough*
[00:54:42] <ano> so echo passphrase on typing is good, okay
[00:54:57] <tirnanog> that's not what read -s does. but if you're going to be smartarse, I'm out.
[00:55:16] <tirnanog> it's certainly a lot better than your idiotic leaking of the password into the process table.
[00:55:45] *** Quits: f00 (~timm@user/timm) (Quit: Leaving)
[00:56:35] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[00:58:38] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[01:00:38] *** Quits: ncrowl (~ncrowl@83-233-96-189.cust.bredband2.com) (Ping timeout: 272 seconds)
[01:00:42] <Soliton> could also disable terminal echo yourself and use keyctl padd directly.
[01:01:33] <tirnanog> indeed, though it would be no more secure(tm) than the proposed solution and slightly more complicated.
[01:01:56] *** Joins: ncrowl (~ncrowl@89-160-77-216.cust.bredband2.com)
[01:01:58] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[01:02:10] <Soliton> well, no need for the subshell but yeah mostly a sideways move.
[01:02:27] *** Joins: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi)
[01:02:28] <tirnanog> the subshell is to benefit kernels that poison freed memory pages, as I pointed out.
[01:02:50] <tirnanog> they do exist and some operating systems even have them by default now.
[01:02:52] <Soliton> nothing sensitive in shell memory.
[01:02:59] <tirnanog> the value of REPLY.
[01:03:18] <Soliton> "use keyctl padd directly."
[01:03:48] *** Quits: alienhead (~solas@user/alienhead) (Ping timeout: 272 seconds)
[01:04:22] <tirnanog> moving the goalposts. the point was that there is a utility in employing the subshell for the approach that I proposed, which is why I did.
[01:04:30] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[01:04:39] <tirnanog> I'm not saying that your method is worse or better. it's fine.
[01:05:04] <tirnanog> or it probably is. not like I'm going to test it.
[01:05:05] *** Quits: ekathva_ (~ekathva@n14jrd0b036rtepea-1.v6.elisa-mobile.fi) (Ping timeout: 252 seconds)
[01:05:20] *** Joins: alienhead (~solas@user/alienhead)
[01:06:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[01:07:02] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[01:07:26] *** Joins: tejr (~tejr@user/tejr)
[01:11:55] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 240 seconds)
[01:12:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[01:12:21] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[01:13:36] <ano> what about keyid=$(stty -echo && keyctl padd user key @s; stty echo) ?
[01:14:47] <ano> stty should be outside $() of course
[01:14:59] <geirha> that's what Soliton suggested, and will achieve the same as tirnanog's suggestion
[01:15:37] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:16:44] <geirha> read -s does stty -echo the and stty echo dance for you
[01:16:49] *** Joins: rcernin (~rcernin@101.189.129.123)
[01:17:05] <geirha> s/stty -echo the/the stty -echo/
[01:18:55] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 240 seconds)
[01:19:08] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[01:19:23] *** Joins: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d)
[01:22:15] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[01:23:43] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.234) (Quit: leaving)
[01:28:12] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 252 seconds)
[01:29:32] *** Quits: UrsoBranco (~UrsoBranc@200.189.119.155) (Quit: leaving)
[01:31:20] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:33:14] *** Joins: akoana (~ah@user/akoana)
[01:33:36] *** Joins: kurahaupo (~kurahaupo@pa49-197-132-8.pa.qld.optusnet.com.au)
[01:34:50] <OnlineCop> What's the right way to print from 0 to ${#some_array[@]}?
[01:35:01] *** Quits: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:35:14] *** Quits: armands (~armands@46.109.8.165) (Remote host closed the connection)
[01:35:36] *** Joins: armands (~armands@46.109.8.165)
[01:35:56] <OnlineCop> Would {0..${#some_array[@]}} work, or would I need seq 0 ${#some_array[@]} ?
[01:36:03] <geirha> neither
[01:36:05] <tirnanog> it wouldn't.
[01:36:07] <tirnanog> you can use a for loop
[01:36:29] *** Joins: LiftLeft2 (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[01:36:29] <geirha> for i in "${!some_array[@]}" ; do   to iterate indices/keys of an array
[01:36:55] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:36:55] <geirha> that'll even handle sparse arrays
[01:37:01] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[01:37:09] <OnlineCop> Right: I'm also trying to print the index of the array. I've used `local count=0;` and `count=$(( $count+1 ))`.
[01:37:11] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[01:37:13] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[01:37:14] *** m0viefreak2 is now known as m0viefreak
[01:38:01] <geirha> for i in "${!some_array[@]}" ; do  printf 'index: %q, value: %q\n' "$i" "${some_array[i]}" ; done
[01:38:06] <OnlineCop> Perhaps `for (( i=0; i < ${#arr[@]}; ...)` ?
[01:38:43] <geirha> if you insist. That's better than seq at least
[01:40:18] *** Quits: wierzbowski (~wierzbows@dynamic-046-114-161-109.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[01:41:05] <OnlineCop> Interesting. I didn't know ${!arr[@]} would give back the array size.
[01:41:37] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:41:40] <Soliton> !faq 5
[01:41:40] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[01:41:50] <geirha> ${#arr[@]} gives the size
[01:42:36] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 240 seconds)
[01:42:48] <geirha> "${arr[@]}" expands values, "${!arr[@]}" expands indices (or keys if associative array)
[01:43:46] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:43:53] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:47:32] <tirnanog> # arr=(); arr[0]=a; arr[100]=b; printf '<%s>' "${!arr[@]}"
[01:47:34] <shbot> tirnanog: <0><100>
[01:49:26] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[01:49:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[01:54:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:55:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 240 seconds)
[01:55:44] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[01:56:12] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 240 seconds)
[01:56:34] <OnlineCop> I think the `${!arr}` functionality differing from `${!arr[@]}` is what's thrown me.
[01:56:43] *** Quits: rufito (~phil@186-79-2-135.baf.movistar.cl) (Quit: Leaving)
[01:56:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:56:56] *** Joins: rcernin (~rcernin@101.189.129.123)
[01:57:06] *** Joins: wierzbowski (~wierzbows@dynamic-046-114-163-100.46.114.pool.telefonica.de)
[01:57:28] <tirnanog> ah. yes, these are two very different things.
[01:57:40] *** Quits: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d) (Ping timeout: 250 seconds)
[01:59:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[01:59:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[01:59:57] <geirha> and not to be confused with "${!var@}" which is yet a different thing
[02:00:12] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[02:00:24] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[02:00:50] *** Joins: aphorise (aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl)
[02:01:24] *** Joins: itachi195 (~itachi19@46.232.210.60)
[02:01:29] *** Joins: cim6 (~cim@205.185.117.110)
[02:01:31] *** Joins: yuckey2d4 (~yuckey2d@gateway/vpn/pia/yuckey2d)
[02:01:31] *** Joins: tasty1 (~mew@user/tasty)
[02:01:34] *** Joins: waxfire61 (~waxfire@65.119.2.240)
[02:01:35] *** Joins: realies3 (~realies@user/realies)
[02:01:35] *** Joins: gpol23 (~gpol@135-23-207-205.cpe.pppoe.ca)
[02:01:38] *** Joins: hata9 (~hata@hata.moe)
[02:01:45] *** Joins: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com)
[02:02:06] *** Joins: lucerne8 (~lucerne@ip202.ip-51-178-215.eu)
[02:02:15] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[02:02:17] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[02:02:18] *** m0viefreak2 is now known as m0viefreak
[02:02:31] *** Joins: Sketch_ (sketch@2604:180:2::a506:5c0d)
[02:02:31] *** Joins: Bitflux (~byte@byteflux.net)
[02:02:32] *** Joins: firewyre- (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[02:02:32] *** Joins: voiceofreason_ (~voiceofre@207.148.10.181)
[02:02:35] *** Joins: fmirkes_ (~fmirkes@user/fmirkes)
[02:02:35] *** Joins: rigid- (~rigid@user/rigid)
[02:02:35] *** Joins: winst0nsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[02:02:36] *** Joins: bboles_ (~bboles@64.94.212.195)
[02:02:37] *** Joins: millido_ (~millido@84.210.150.128)
[02:02:39] *** Joins: unop_ (~unop@195.91.20.32)
[02:02:49] *** Joins: zaratustra_ (~zaratustr@idlerpg/player/zaratustra)
[02:03:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:03:03] *** Joins: deetwelv- (~deetwelve@user/deetwelve)
[02:03:05] *** Joins: ZarTek_ (~ZarTek@user/zartek)
[02:04:08] *** Joins: Tristam (~tristam@user/tristam)
[02:04:36] *** Joins: knstn_ (~knstn@ppp-94-66-57-121.home.otenet.gr)
[02:04:50] *** Joins: moto_ (~moto@user/moto)
[02:04:54] *** Joins: Betal_ (~Betal@user/betal)
[02:04:56] *** Joins: jlc_ (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[02:04:56] *** Joins: chronon (~chronon@user/chronon)
[02:04:59] *** Joins: petemc_ (~pete@vps-80fad31a.vps.ovh.net)
[02:05:03] *** Joins: vancz_ (~vancz@user/vancz)
[02:05:04] *** Quits: esselfe (~steph@user/esselfe) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[02:05:06] *** Joins: esselfe (~steph@user/esselfe)
[02:05:06] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[02:05:15] *** Joins: chilvers1 (~chilversc@user/chilversc)
[02:05:17] *** Joins: treble1 (~treble@user/treble)
[02:05:23] *** Joins: hsv_ (~unknown@user/hsv)
[02:05:31] *** Joins: hendry1 (~hendry@210.23.22.2)
[02:05:36] *** Joins: almostdvs1 (~almostdvs@074-135-071-059.res.spectrum.com)
[02:05:56] *** Joins: vishal_ (~vishal@fedora/vishal)
[02:08:43] *** Quits: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com) (Quit: Client closed)
[02:09:44] *** Quits: LiftLeft2 (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (*.net *.split)
[02:09:44] *** Quits: kurahaupo (~kurahaupo@pa49-197-132-8.pa.qld.optusnet.com.au) (*.net *.split)
[02:09:44] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (*.net *.split)
[02:09:44] *** Quits: unop (~unop@195.91.20.32) (*.net *.split)
[02:09:44] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[02:09:44] *** Quits: treble (~treble@user/treble) (*.net *.split)
[02:09:44] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[02:09:44] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[02:09:44] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[02:09:44] *** Quits: knstn (~knstn@ppp-94-66-57-121.home.otenet.gr) (*.net *.split)
[02:09:44] *** Quits: itachi19 (~itachi19@46.232.210.60) (*.net *.split)
[02:09:44] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (*.net *.split)
[02:09:44] *** Quits: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it) (*.net *.split)
[02:09:44] *** Quits: timj (~timj@user/timj) (*.net *.split)
[02:09:44] *** Quits: hsv (~unknown@user/hsv) (*.net *.split)
[02:09:44] *** Quits: samnob (~samnob@user/samnob) (*.net *.split)
[02:09:44] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[02:09:44] *** Quits: lorimer (~lorimer@user/lorimer) (*.net *.split)
[02:09:44] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[02:09:44] *** Quits: vishal (~vishal@fedora/vishal) (*.net *.split)
[02:09:44] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[02:09:45] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[02:09:45] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[02:09:45] *** Quits: lotharn (~kvirc@174-26-203-222.phnx.qwest.net) (*.net *.split)
[02:09:45] *** Quits: randm (~randm@mx.rayprimus.com) (*.net *.split)
[02:09:45] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (*.net *.split)
[02:09:45] *** Quits: sidy (~sidy@user/sidy) (*.net *.split)
[02:09:45] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[02:09:45] *** Quits: realies (~realies@user/realies) (*.net *.split)
[02:09:45] *** Quits: tedster (~Tedster@rampage.tedster.net) (*.net *.split)
[02:09:45] *** Quits: capn (~capn@user/capn) (*.net *.split)
[02:09:45] *** Quits: foul_owl (~kerry@23.82.193.89) (*.net *.split)
[02:09:45] *** Quits: gpol2 (~gpol@135-23-207-205.cpe.pppoe.ca) (*.net *.split)
[02:09:45] *** Quits: pranshukhandal (~ghost@envs.net) (*.net *.split)
[02:09:45] *** Quits: skylite (~skylite@46.107.44.214) (*.net *.split)
[02:09:45] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (*.net *.split)
[02:09:45] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[02:09:45] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[02:09:45] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[02:09:45] *** Quits: almostdvs (~almostdvs@074-135-071-059.res.spectrum.com) (*.net *.split)
[02:09:45] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[02:09:45] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[02:09:45] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (*.net *.split)
[02:09:45] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[02:09:45] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[02:09:45] *** Quits: greybot (~greybot@remote.wooledge.org) (*.net *.split)
[02:09:45] *** Quits: voldial (~user@195.179.201.175) (*.net *.split)
[02:09:45] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[02:09:45] *** Quits: damyan (~damyan@mail.0x4711.org) (*.net *.split)
[02:09:45] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[02:09:45] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[02:09:45] *** Quits: chronon_ (~chronon@user/chronon) (*.net *.split)
[02:09:45] *** Quits: Tristam_ (~tristam@user/tristam) (*.net *.split)
[02:09:45] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[02:09:45] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[02:09:45] *** Quits: Che-Anarch (aphorise@82-75-255-36.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[02:09:45] *** Quits: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) (*.net *.split)
[02:09:45] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[02:09:45] *** Quits: Sketch (znc@new.rednsx.org) (*.net *.split)
[02:09:45] *** Quits: zaratustra (~zaratustr@idlerpg/player/zaratustra) (*.net *.split)
[02:09:45] *** Quits: tasty (~mew@user/tasty) (*.net *.split)
[02:09:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[02:09:45] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[02:09:45] *** Quits: moto (~moto@user/moto) (*.net *.split)
[02:09:45] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[02:09:45] *** Quits: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com) (*.net *.split)
[02:09:45] *** Quits: rednul (~rednul@mc.emailserverz.com) (*.net *.split)
[02:09:45] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[02:09:45] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[02:09:45] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (*.net *.split)
[02:09:45] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (*.net *.split)
[02:09:45] *** Quits: rigid (~rigid@user/rigid) (*.net *.split)
[02:09:45] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:09:45] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[02:09:45] *** Quits: ZarTek (~ZarTek@user/zartek) (*.net *.split)
[02:09:45] *** Quits: deetwelve (~deetwelve@user/deetwelve) (*.net *.split)
[02:09:45] *** Quits: hata (~hata@hata.moe) (*.net *.split)
[02:09:45] *** Quits: fmirkes (~fmirkes@user/fmirkes) (*.net *.split)
[02:09:45] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (*.net *.split)
[02:09:45] *** Sketch_ is now known as Sketch
[02:09:45] *** fmirkes_ is now known as fmirkes
[02:09:46] *** itachi195 is now known as itachi19
[02:09:46] *** vishal_ is now known as vishal
[02:09:46] *** gpol23 is now known as gpol2
[02:09:46] *** winst0nsmith is now known as winstonsmith
[02:09:46] *** realies3 is now known as realies
[02:09:46] *** waxfire61 is now known as waxfire6
[02:09:46] *** yuckey2d4 is now known as yuckey2d
[02:09:47] *** hata9 is now known as hata
[02:09:47] *** lucerne8 is now known as lucerne
[02:09:49] *** tasty1 is now known as tasty
[02:09:49] *** cim6 is now known as cim
[02:09:49] *** deetwelv- is now known as deetwelve
[02:09:50] *** scoobydoob is now known as scoobydoo
[02:09:54] *** Joins: capn (~capn@user/capn)
[02:10:13] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[02:10:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:11:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:11:40] *** Joins: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com)
[02:12:29] <quas[m]> @geih
[02:12:45] <quas[m]> geirha: I was about to ask exactly about the meaning of the exclamation point before a variable name.
[02:12:56] <quas[m]> and then I raw that.
[02:13:14] <quas[m]> read*
[02:13:26] <quas[m]> so what is the actual meaning?
[02:13:35] <quas[m]> I've got something like `for i in "${!ETCDHOSTS[@]}"`?
[02:13:46] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[02:14:13] <emanuele6> ${!var}, ${!xyz@}, ${!xyz*}, and ${!arr[@]} are all different things
[02:14:14] <tirnanog> he meaning for arrays is to expand to words that are the array keys, which are numerical indices in the case of conventional arrays.
[02:14:26] <emanuele6> ${!arr[@]} expands to the keys of the array
[02:14:30] <emanuele6> in order
[02:14:50] <emanuele6> # a=( {20..30} ); declare -p a
[02:14:52] <shbot> emanuele6: declare -a a=([0]="20" [1]="21" [2]="22" [3]="23" [4]="24" [5]="25" [6]="26" [7]="27" [8]="28" [9]="29" [10]="30")
[02:15:13] <emanuele6> # a=( {20..30} ); printf '<%s> ' "${!a[@]}"
[02:15:15] <shbot> emanuele6: <0> <1> <2> <3> <4> <5> <6> <7> <8> <9> <10>
[02:15:26] *** Joins: rednul (~rednul@mc.emailserverz.com)
[02:15:26] *** Joins: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net)
[02:15:26] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[02:15:26] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:15:26] *** Joins: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it)
[02:15:26] *** Joins: samnob (~samnob@user/samnob)
[02:15:26] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[02:15:26] *** Joins: lorimer (~lorimer@user/lorimer)
[02:15:26] *** Joins: invra (~invra@mail.aletheianature.es)
[02:15:26] *** Joins: randm (~randm@mx.rayprimus.com)
[02:15:26] *** Joins: sidy (~sidy@user/sidy)
[02:15:26] *** Joins: obiwahn (~heini@user/obiwahn)
[02:15:26] *** Joins: tedster (~Tedster@rampage.tedster.net)
[02:15:26] *** Joins: foul_owl (~kerry@23.82.193.89)
[02:15:26] *** Joins: pranshukhandal (~ghost@envs.net)
[02:15:26] *** Joins: skylite (~skylite@46.107.44.214)
[02:15:26] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[02:15:26] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[02:15:26] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:15:26] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[02:15:26] *** Joins: gjvc (~gjvc@user/gjvc)
[02:15:26] *** Joins: damyan (~damyan@mail.0x4711.org)
[02:15:26] *** Joins: phogg (~phogg@user/phogg)
[02:15:26] *** Joins: Philonous (~Philonous@user/philonous)
[02:15:26] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[02:15:26] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[02:15:26] *** Joins: tinystoat (~squeek@user/tinystoat)
[02:15:44] <emanuele6> # a=( {20..30} ); unset -v 'a[4]' 'a[7]'; declare -p a
[02:15:46] <shbot> emanuele6: declare -a a=([0]="20" [1]="21" [2]="22" [3]="23" [5]="25" [6]="26" [8]="28" [9]="29" [10]="30")
[02:15:55] <emanuele6> # a=( {20..30} ); unset -v 'a[4]' 'a[7]'; printf '<%s> ' "${!a[@]}"
[02:15:56] <shbot> emanuele6: <0> <1> <2> <3> <5> <6> <8> <9> <10>
[02:16:04] <emanuele6> also works for associative arrays
[02:16:07] *** Quits: foul_owl (~kerry@23.82.193.89) (Max SendQ exceeded)
[02:16:12] *** Joins: timj (~timj@user/timj)
[02:16:19] <quas[m]> tirnanog: I don't think I follow. How do you mean expand to words?
[02:16:35] <emanuele6> # declare -A a; a=( [bcd]=3 [abc]=10 [xyz]=30 ); printf '<%s> ' "${!a[@]}"
[02:16:37] <shbot> emanuele6: <bcd> <abc> <xyz>
[02:16:39] *** Joins: foul_owl (~kerry@23.82.193.89)
[02:16:43] <quas[m]> so the premise is that they're all associate arrays
[02:16:44] <quas[m]> ?
[02:16:44] <OnlineCop> Associative arrays allow words: BASH_ALIASES is one, for example.
[02:16:45] *** Quits: Artea- (~Lufia@artea.com.pt) (Quit: ZNC 1.6.2 - http://znc.in)
[02:16:55] <emanuele6> quas[m]: how is that the premise?
[02:17:01] *** Joins: koolazer (~koo@user/koolazer)
[02:17:05] <tirnanog> quas[m]: so, if I write printf '<%s>' "foo bar" baz quux, note that printf is dealing with four distinct words.
[02:17:14] *** Joins: karabaja4 (~karabaja4@dh207-92-189.xnet.hr)
[02:17:26] *** Joins: voldial (~user@195.179.201.175)
[02:17:36] *** Joins: LiftLeft2 (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[02:17:46] <quas[m]> so you're printing the key names instead of the values
[02:17:46] <quas[m]> ?
[02:17:47] <tirnanog> the terminology goes to the heart of how the shell parses its input.
[02:17:52] *** Joins: lotharn (~kvirc@174-26-203-222.phnx.qwest.net)
[02:18:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:18:28] <tirnanog> it breaks down the line into a series of words. in this case, it deduces that the first word is the name of a builtin command to be run. the remainder are arguments to this builtin.
[02:18:46] <tirnanog> # printf '<%s>' "foo bar" baz quux
[02:18:48] <shbot> tirnanog: <foo bar><baz><quux>
[02:18:48] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:19:05] <tirnanog> # array=("foo bar" baz quux); printf '<%s>' "${array[@]}"
[02:19:06] <shbot> tirnanog: <foo bar><baz><quux>
[02:19:33] <tirnanog> the array expands as three distinct words there, hence the same result.
[02:19:38] <tirnanog> # array=("foo bar" baz quux); printf '<%s>' "${!array[@]}"
[02:19:40] <shbot> tirnanog: <0><1><2>
[02:19:53] <tirnanog> well, it's the same there. only the words are 0, 1 and 2 instead. these are the array indices.
[02:20:01] <tirnanog> # array=("foo bar" baz quux); declare -p array
[02:20:03] <shbot> tirnanog: declare -a array=([0]="foo bar" [1]="baz" [2]="quux")
[02:20:33] *** Joins: greybot (~greybot@remote.wooledge.org)
[02:21:25] <tirnanog> in short, the expansion will be to zero or more words, depending on how the array is populated. the only difference between the "${!array[@]}" and "${array[@]}" forms is that one gives you the keys (indices) and the other gives you the values (the actual elements in the array).
[02:21:30] <emanuele6> and the order of expansion is the same that ${arr[@]} would have for associative arrays and regular arrays
[02:22:13] <OnlineCop> They kinda need all those examples in the https://mywiki.wooledge.org/BashFAQ/005 faq :P
[02:22:31] <OnlineCop> Or is that in 006?
[02:22:57] <tirnanog> I acn see some examples, though declare -p might help make it click, as it were.
[02:23:01] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[02:24:23] <OnlineCop> I've been exploring ways to pass variable names into a function, and it printing either the value (non-arrays) or printing each array element within $'...'
[02:24:51] <OnlineCop> I feel like I'm doing it very... newb. I mean, it functions. But it feels like it's 10x longer than someone more versed in bash could construct.
[02:25:19] <OnlineCop> "Oh, you can do exactly the same thing with this simple perl one-liner: ..."
[02:25:36] <tirnanog> indirection is a whole other kettle of fish. it's possible that you ought to be using an associative array rather than bandying variable names about.
[02:26:02] <OnlineCop> With what I've gleaned from the above, it actually works on either type of array without change.
[02:26:31] <tirnanog> the expansion of key names works for both array types, yes.
[02:26:42] <OnlineCop> But it's mainly so I can use `var_print var1 var2 var3` and see what each of them contain, with all their $'\e[12;23;34m' escaped nicely.
[02:26:47] *** Quits: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com) (Quit: Client closed)
[02:26:56] <tirnanog> ahem. declare -p.
[02:27:07] <tirnanog> although that does have some issues.
[02:27:11] <OnlineCop> ^ That's what was broken, which is why I wanted to come up with that.
[02:27:18] <tirnanog> declare -p | od -An -a, perhaps.
[02:27:24] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 240 seconds)
[02:27:24] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 240 seconds)
[02:27:30] <tirnanog> # var=$'\e[12;23;34m'; declare -p var | od -An -a
[02:27:32] <shbot> tirnanog:    d   e   c   l   a   r   e  sp   -   -  sp   v   a   r   =   "
[02:27:32] <shbot> tirnanog:  esc   [   1   2   ;   2   3   ;   3   4   m   "  nl
[02:27:41] <tirnanog> well, you can play around with it.
[02:27:55] <OnlineCop> Especially when some LESS_TERMCAP_mb=$'some_color_info_here': declare -p just starts coloring everything.
[02:28:16] <tirnanog> # var=$'\e[12;23;34m'; name=var; printf '%q\n' "$var"
[02:28:18] <shbot> tirnanog: $'\E[12;23;34m'
[02:28:22] <tirnanog> oops
[02:28:25] <tirnanog> # var=$'\e[12;23;34m'; name=var; printf '%q\n' "${!name}"
[02:28:27] <OnlineCop> I probably need real colors.
[02:28:27] <shbot> tirnanog: $'\E[12;23;34m'
[02:28:34] <OnlineCop> Like \e[31m
[02:28:39] <tirnanog> I suppose that's a reasonable use of indirection.
[02:29:20] <OnlineCop> I'd be happy if `declare -p` simply %q or @Q quoted its output.
[02:29:29] <tirnanog> I agree there. declare -p can be annoying at times.
[02:29:53] <tirnanog> also, %q is sometimes subtly different from @Q, not that it's as much of a problem.
[02:30:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[02:30:17] <OnlineCop> Oh, %q is ugly. I've been using %s and @Q but... with some special sed stuff.
[02:30:33] <tirnanog> anyway, there's always od. that has a number of formatting options.
[02:31:23] <hugo[m]12> TITLE="$(/usr/bin/python3.7 /root/rss.py | xmlstarlet sel -T -t -v '/rss/channel/item[1]/title')"
[02:31:27] <tirnanog> var=$'\e[12;23;34m'; printf %s "$var" | od -An -tx1 -a # pretty useful for debugging
[02:31:44] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:31:44] <hugo[m]12> hugo[m]12: How i can put a newline
[02:31:58] <OnlineCop> # var="[\"']"; temp_var=$'\n'"$var"; sed 's@\\n@@' <<<"${temp_var@Q}"
[02:32:00] <shbot> OnlineCop: $'["\']'
[02:32:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:32:43] <OnlineCop> hugo[m]12: TITLE="$(...)\n" maybe? Or TITLE="$(...)"$'\n'
[02:32:51] <OnlineCop> If you want a literal newline versus a "\n"
[02:32:59] <tirnanog> the latter is correct.
[02:33:21] <tirnanog> (not sure why you'd want one but it works)
[02:34:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:34:27] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[02:34:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:36:15] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:36:20] *** Joins: zebrag (~chris@user/zebrag)
[02:36:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:36:57] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 252 seconds)
[02:37:22] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:37:55] *** Joins: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com)
[02:38:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:38:39] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[02:38:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:39:39] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:40:12] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[02:40:17] <hugo[m]12> Mmm
[02:40:33] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[02:40:58] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[02:41:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:41:08] <hugo[m]12> TITLE="$(/usr/bin/python3.7 /root/rss.py | xmlstarlet sel -T -t -v '/rss/channel/item[1]/title')"$'\n' newline?
[02:41:35] <tirnanog> that's valid.
[02:41:38] <hugo[m]12> Sorry im very newbie
[02:41:39] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:41:55] <OnlineCop> # TITLE="$(echo -n some_output)"$'\n'; echo "TITLE='$TITLE'"
[02:41:57] <shbot> OnlineCop: TITLE='some_output
[02:41:57] <shbot> OnlineCop: '
[02:42:26] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[02:42:43] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[02:43:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:43:17] <tirnanog> typically, the removal of trailing newlines by command substitution is considered as desirable.
[02:43:34] *** Joins: seninha (~chatzilla@user/seninha)
[02:43:40] <OnlineCop> # TITLE="$(echo -n some_output)"$'END_OF_LINE\nSTART_OF_LINE'; printf '%s' "${TITLE@Q}"
[02:43:41] <shbot> OnlineCop: $'some_outputEND_OF_LINE\nSTART_OF_LINE'
[02:43:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:44:15] <emanuele6> you can prevent it like so:   var=$(cmd; printf x) var=${var%x}
[02:44:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:44:28] <emanuele6> but that ghosts the exit code of cmd if that matters
[02:44:50] <emanuele6> s/ghost/shadow/
[02:44:51] *** Joins: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com)
[02:45:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:45:42] <wierzbowski> what does that mean to 'shadow' sth?
[02:45:46] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 250 seconds)
[02:45:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:45:55] <OnlineCop> Hides the actual 'cmd' return value.
[02:46:10] <OnlineCop> Or replaces it with the "success" value printf gives when it successfully prints 'x'
[02:46:37] <OnlineCop> ^ That recursive sentence was really recursive.
[02:46:41] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[02:46:42] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[02:46:42] *** Joins: Bercik (~Redomen@user/bercik)
[02:47:41] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:48:06] <wierzbowski> you mean like the exit code?
[02:48:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:49:07] <tirnanog> yes. it would lose the exit status value of cmd.
[02:49:42] <emanuele6> if it really matters, you can use something like: var=$(cmd; ec=$?; printf x; exit "$ec") var=${var%x}
[02:49:46] <OnlineCop> Is there a way to get the array back from `declare -pA BASH_ALIASES`? It's just returning "declare -A BASH_ALIASES=(...)" :-/
[02:49:54] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:19c9:c08d:9ae2:7d91) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:50:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:50:24] <wierzbowski> is the the return keyword in functions to be used for exit codes? or what is it for?
[02:50:27] <emanuele6> well, you would put something that checks the exit status before `var=${var%x}'
[02:50:31] <OnlineCop> If not, I'll continue on my current route of checking each type manually.
[02:50:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:51:03] <tirnanog> OnlineCop: I'm not sure what you mean. can you clarify?
[02:51:29] <tirnanog> I mean, why is that unexpected?
[02:52:24] <OnlineCop> I was hoping it would return its associative array to me, so I could just make `declare -p ...` do all my dirty parsing work.
[02:52:30] <OnlineCop> Instead, it returns a string.
[02:52:31] <tirnanog> it does?
[02:52:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:52:52] *** Quits: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com) (Quit: Client closed)
[02:52:58] <OnlineCop> I really can't say that I'm not doing it wrong, so... happy to learn from my mistakes.
[02:53:04] <emanuele6> what are you trying to do?
[02:53:09] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:19c9:c08d:9ae2:7d91)
[02:53:14] <emanuele6> copying the associative array to another variable?
[02:53:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:53:38] <OnlineCop> No; just @Q-printing the values of any bash variable.
[02:53:59] <tirnanog> oh. you can loop over the keys and do it yourself.
[02:54:27] <larryv> wierzbowski: yes, "return" is for exit statuses
[02:55:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[02:55:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:55:45] <tirnanog> OnlineCop: for key in "${!BASH_ALIASES[@]}"; do printf '%s=%q\n' "$key" "${BASH_ALIASES[$key]}"; done
[02:55:46] <wierzbowski> do you eventually mean a single line?
[02:55:52] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:19c9:c08d:9ae2:7d91) (Client Quit)
[02:56:23] <wierzbowski> though declare -p prints all inline, right?
[02:56:40] <emanuele6> printf 'declare -%s BASH_ALIASES' "${BASH_ALIASES@a}"; for k in "${!BASH_ALIASES[@]}"; do v=${BASH_ALIASES[$k]} v=${v@Q}; printf '[%s]=%s ' "$k" "$v"; done; printf ')\n
[02:56:50] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[02:57:42] <emanuele6> 'declare -%s BASH_ALIASES' -> 'declare -%s BASH_ALIASES=('
[02:57:51] *** Joins: dob1 (~dob1@user/dob1)
[02:58:36] *** Joins: easyriders (~easyrider@xb9b5df82.cust.hiper.dk)
[02:58:51] *** Quits: easyriders (~easyrider@xb9b5df82.cust.hiper.dk) (Client Quit)
[03:01:18] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:2dd2:cb17:a149:4dbf)
[03:01:32] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Quit: I love you.)
[03:01:46] <wierzbowski> # declare -p $BASH_ALIASES
[03:01:47] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:01:53] <shbot> wierzbowski: declare -- BASH="/bin/bash"
[03:01:53] <shbot> wierzbowski: declare -r BASHOPTS="checkwinsize:cmdhist:complete_fullquote:expand_aliases:extglob:extquote:force_fignore:globasciiranges:globstar:hostcomplete:interactive_comments:login_shell:progcomp:promptvars:sourcepath"
[03:01:53] <shbot> wierzbowski: etc... ( http://ix.io/3RZq )
[03:01:54] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[03:02:06] <emanuele6> wierzbowski: that ran `declare -p' without any argument.
[03:02:15] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[03:02:30] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:03:01] <wierzbowski> oh.. right. thx
[03:03:06] <wierzbowski> # declare -p BASH_ALIASES
[03:03:07] <shbot> wierzbowski: declare -A BASH_ALIASES=()
[03:03:32] <OnlineCop> # alias
[03:03:34] <shbot> OnlineCop: no output
[03:03:39] <OnlineCop> That makes sense.
[03:03:46] <wierzbowski> and you mean you couldn't just replace BASH_ALIASES here with something else and eval that?
[03:04:03] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[03:11:48] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:16:09] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:16] *** Joins: Guest8534 (~Guest@host181.190-137-39.telecom.net.ar)
[03:17:05] *** Joins: ano (~ano@user/ano)
[03:19:20] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:21:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:26:42] *** Quits: BrowseMan (~BrowseMan@78.130.185.116) (Quit: ZNC 1.6.5+deb1+deb9u2 - http://znc.in)
[03:26:55] *** Joins: BrowseMan (~BrowseMan@78.130.185.116)
[03:28:14] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Remote host closed the connection)
[03:40:32] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[03:45:21] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:45:42] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[03:49:52] *** Joins: lovetruth (~lovetruth@82.76.179.122)
[03:50:30] <lovetruth> hello people :)
[03:50:43] <lovetruth> what is your favourite way of timestamping stderr in bash?... :) is it one of those listed here -> https://stackoverflow.com/questions/1507674/how-to-add-timestamp-to-stderr-redirection ?... :)
[03:51:16] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:51:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:52:58] <tirnanog> the absolute state of that thread.
[03:53:00] *** Quits: sdu (~sidu@185.44.146.31) (Ping timeout: 240 seconds)
[03:53:06] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 268 seconds)
[03:53:26] <tirnanog> I suppose: 2> >(while read -r; do printf '%(%FT%T)T %s\n' -1 "$REPLY"; done) ... or 2> >(ts) if you have moreutils.
[03:54:37] <tirnanog> the solutions using date are laughable. inefficient.
[03:55:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:55:09] *** Joins: sdu (~sidu@185.44.146.144)
[03:55:19] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[03:57:25] <tirnanog> I would add that, if it needed to be done portably - without the benefit of bash's printf builtin, awk would be a sensible choice.
[03:57:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 245 seconds)
[03:58:07] <larryv> !faq timestamp
[03:58:07] <greybot> https://mywiki.wooledge.org/BashFAQ/107 -- How do I add a timestamp to every line of a stream?
[03:58:44] <tirnanog> ah. there we go. surprised not to see awk make a showing there, though.
[03:59:06] <lovetruth> tirnanog, in my tests using $() was more efficient than >(). Is there a way to use $() subshells than using the >() ?... :)
[03:59:13] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[03:59:47] <tirnanog> that doesn't make any sense. you might as we suggest that it's more efficient when doing it on a tuesday.
[03:59:58] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[04:00:25] <tirnanog> incurring a subshell is expensive. you don't want to do it for every single line that is read. that is why you _don't_ use command substitution, ideally.
[04:01:12] <tirnanog> the presented solution does not incur any additional subshells other than the one used to set up the >(process substitution) to begin with.
[04:01:18] <tirnanog> printf is a builtin.
[04:04:09] <tirnanog> # time printf '%s\n' {1..25000} > >(while read -r; do printf '%(%FT%T)T %s\n' -1 "$REPLY" ; done >/dev/null)
[04:04:15] <shbot> tirnanog: real: 0m4.322s, user: 0m0.295s, sys: 0m0.120s
[04:04:24] <tirnanog> # # time printf '%s\n' {1..25000} > >(while read -r; do printf '%s %s\n' "$(date)" "$REPLY" ; done >/dev/null)
[04:04:26] <shbot> tirnanog: no output
[04:04:27] <phy1729> lovetruth: if you care about efficiency to that extent, you should use a real language
[04:04:32] <tirnanog> # time printf '%s\n' {1..25000} > >(while read -r; do printf '%s %s\n' "$(date)" "$REPLY" ; done >/dev/null)
[04:04:39] <shbot> tirnanog: no output within the time limit
[04:04:41] <tirnanog> couldn't even finish before the timeout.
[04:05:14] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[04:05:56] <lovetruth> yes, tirnanog - it seems that $() is more efficient only if I have many, many lines as output (like there is some line limit to >() )
[04:06:13] <tirnanog> n.b. using printf is an order of magnitude faster than invoking a subshell then forking and executing date. why this would come a surprise, I have no idea.
[04:06:20] <lovetruth> but is there a way to also pass the exit code to the next command?... Like keeping the $?
[04:06:27] <tirnanog> nonsense. >() is just a pipe.
[04:06:31] <tirnanog> (under the hood)
[04:06:42] <larryv> lovetruth: i wonder what your test looks like.
[04:07:10] <tirnanog> it doesn't affect $?.
[04:07:16] <tirnanog> # false > >(:); echo $?
[04:07:18] <shbot> tirnanog: 1
[04:08:27] <tirnanog> similarly:
[04:08:29] <tirnanog> # true > >(false); echo $?
[04:08:30] <shbot> tirnanog: 0
[04:08:33] <tirnanog> silll true.
[04:08:53] <tirnanog> to get the exit status of the command within the process substitution, you'd actually have to use wait.
[04:09:07] <tirnanog> # true > >(false); wait $!; echo $?
[04:09:09] <shbot> tirnanog: 1
[04:11:17] <lovetruth> larryv, I tried this:      time mapfile -t arr <<<$(find /usr)       -> gave real 	0m0.409s;    then     time mapfile -t arr < <(find /usr)        -> gave real	 0m6.820s
[04:11:49] <lovetruth> to be honest, I would believe that <() should have been faster, but for some odd reason - this one wasn't faster, it seems?...
[04:12:42] <emanuele6> lovetruth: you didn't do it right
[04:13:00] <phy1729> I suspect you did the <( one first and then the second had the benefit of the disk cache
[04:13:24] <emanuele6> that ran `$(find /usr)', stored it in memory and then only measured how much time mapfile took to read the output of find from memory
[04:13:24] <lovetruth> phy1729, no, I did a find /usr | wc -l    first anyway
[04:13:48] <tirnanog> $(date) would be, by far, your biggest performance impediment.
[04:13:50] <emanuele6> use    time { mapfile -t arr <<<"$(find /usr)" ;}   instead of   time mapfile -t arr <<<$(find /usr)
[04:14:34] <tirnanog> if you're emitting lines to stderr at such a rate that the use of fifo and a while/read loop is a performance concern, then I have to agree with phy1729. you're using the wrong language. generally speaking, bash is slow, even by the standards of sh implementations.
[04:14:35] *** Joins: igemnace (~ian@user/igemnace)
[04:15:04] *** Joins: tec_ (~quassel@gate.sixtopia.net)
[04:15:08] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Quit: WeeChat 3.4)
[04:15:17] *** Quits: knstn_ (~knstn@ppp-94-66-57-121.home.otenet.gr) (Quit: leaving)
[04:15:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[04:15:33] <lovetruth> tirnanog, true, printf seems to be a lot better - possibly with $EPOCHREALTIME  :)
[04:15:42] *** Quits: curvv (~quetzlcoa@user/curvv) (Ping timeout: 272 seconds)
[04:15:56] *** Joins: rgrinberg (~textual@177.244.18.30)
[04:15:57] <lovetruth> emanuele6, time { mapfile -t arr <<<"$(find /usr)" ;}      gives still real 	0m0.472s
[04:16:02] <tirnanog> (but there's still awk - that will almost certainly be faster than a read loop in bash will be, putting aside the cost of initially forking awk once)
[04:16:13] <tirnanog> really though, I don't think you're going to have any issues as long as yu avoid $(date)
[04:16:29] <tirnanog> I mean, I do something similar to this in one of my own applications - and some of them are quite noisy.
[04:17:01] <emanuele6> lovetruth: yeah, they are actually the same, nevermind
[04:17:04] <tirnanog> emanuele6: it actually doesn't matter in this case, unless using older, buggier versions of bash. word splitting and pathname expansion is not performed.
[04:17:13] <tirnanog> but there have been bugs concerning this before, so I'd still suggest quotes.
[04:18:01] <emanuele6> i thought the expansion of $(cmd) would occur before time started counting, but that is not the case
[04:18:11] <tirnanog> it's a reasonable expectation.
[04:18:11] <emanuele6> # time true <<< "$(sleep 2)"
[04:18:16] <shbot> emanuele6: real: 0m2.014s, user: 0m0.000s, sys: 0m0.011s
[04:18:17] <lovetruth> as about knowing the $? of the cmdline - can I know the $? from inside the >() ?...
[04:18:27] <tirnanog> by the way
[04:18:27] <emanuele6> lovetruth: with wait
[04:18:41] <lovetruth> like     false > >(echo $?); to give 1?
[04:18:47] <lovetruth> inside?
[04:18:56] <emanuele6> that can never work
[04:19:08] <tirnanog> didn't I just address this?
[04:19:16] <tirnanog> I'm pretty sure that I did.
[04:19:39] <tirnanog> oh, I see what you're saying. no.
[04:19:41] <emanuele6> the command inside >() is running in parallel with `false'
[04:19:55] <tirnanog> it's async. it has no awareness of how false is executed, when it finishes or how.
[04:20:03] <lovetruth> tirnanog, what about any other pipe?
[04:20:14] <lovetruth> like cat safsdfd | echo $?
[04:20:18] <tirnanog> nope.
[04:20:25] <emanuele6> they run in parallel, it's the same thing
[04:20:37] *** Joins: rcernin (~rcernin@101.189.129.123)
[04:20:50] <lovetruth> or, at least, to find/know it's PID/ list of arguments, at least?...
[04:21:02] <emanuele6> $$
[04:21:11] <tirnanog> what woud be the "it" in this case?
[04:21:18] <larryv> you mean the PID / args of the preceding command in the pipeline?
[04:21:41] <tirnanog> incidentally, there's PIPESTATUS.
[04:21:48] <lovetruth> like sleep 10 | echo this sleep process has the PID $$
[04:21:50] <tirnanog> # false | true | false; declare -p PIPESTATUS
[04:21:51] <shbot> tirnanog: declare -a PIPESTATUS=([0]="1" [1]="0" [2]="1")
[04:21:59] <lovetruth> ah, pipestatus, right! :)
[04:22:49] <tirnanog> # { printf '%s\n' "$BASHPID"; sleep 10; }
[04:22:51] <tirnanog> er
[04:22:56] <shbot> tirnanog: 44
[04:23:01] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[04:23:09] <emanuele6> and for > >(), you can use wait
[04:23:30] <tirnanog> # { printf '%s\n' "$BASHPID"; exec sleep 10; } | { read -r; do printf 'the sleep process has the pid %d\n' "$REPLY"; }
[04:23:31] <shbot> tirnanog: bash: syntax error near unexpected token `do'
[04:23:34] <tirnanog> damn it
[04:23:41] <tirnanog> # { printf '%s\n' "$BASHPID"; exec sleep 1; } | { read -r; printf 'the sleep process has the pid %d\n' "$REPLY"; }
[04:23:44] <shbot> tirnanog: the sleep process has the pid 51
[04:23:46] <emanuele6> # (exit 10) > >(exit 60); ec1=$? pid2=$!; wait "$pid2"; ec2=$?; declare -p ec1 ec2
[04:23:48] <shbot> emanuele6: bash: wait: `': not a pid or valid job spec
[04:23:48] <shbot> emanuele6: declare -- ec1="10"
[04:23:48] <shbot> emanuele6: declare -- ec2="1"
[04:23:57] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[04:24:17] <tirnanog> (exec had to be used for that assertion to be true)
[04:25:49] <OnlineCop> Is `=~` a substring match? I want `if [[ "$param" =~ "^--color' ]]` but the '^' anchor doesn't seem to work.
[04:26:03] <tirnanog> remove the quotes around the regex.
[04:26:16] <larryv> OnlineCop: quoted parts of the RHS are treated literally
[04:26:32] <OnlineCop> Awesome. Thanks. Simpler than I expected.
[04:27:05] <tirnanog> [[ $param == --color* ]] would work just as well.
[04:27:34] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:27:37] *** Quits: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:28:46] <lovetruth> sleep 100 | awk '{print $8}' /proc/$$/task/$$/stat          seems to give the PID
[04:29:31] <tirnanog> racy, unreliable and platform specific.
[04:29:43] <larryv> is there some concrete task you're trying to accomplish here?
[04:29:47] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[04:29:50] <tirnanog> asking the right questions.
[04:30:01] *** Quits: rgrinberg (~textual@177.244.18.30) (Read error: Connection reset by peer)
[04:30:33] <lovetruth> larryv, yes, I'm trying to find out the best way to log everything in a specific way -> but, of course, I'm also learning more about these (the pipes and everything here :) )
[04:30:57] <lovetruth> I already found a few ways - so I was just exploring more a little bit so far
[04:31:15] *** Joins: rgrinberg (~textual@177.244.18.30)
[04:31:19] <larryv> you want to log the PID of a preceding pipeline stage?
[04:31:24] <tirnanog> it's not even correct. $$ isn't even the pid of the first subshell incorporated by that pipeline, let alone the pid of sleep.
[04:31:26] <lovetruth> tirnanog seemed to give me a very good way to timestamp the errors - processing them was where I met a roadblock
[04:31:53] <tirnanog> instead, $$ will expand as the pid of the _parent_ of both of those subshells.
[04:32:34] <tirnanog> if you want this - and I have no idea why - use the pipe to implement some form of IPC to that end, as was demonstrated earlier.
[04:32:36] <lovetruth> larryv, I was trying to log a command that was given like this:         cmd --options arguments etc | timestamped_log4j_logging trace
[04:33:28] <lovetruth> so - was to also log the actual cmdline of the previous command from the pipe
[04:34:32] *** Quits: wurstwasser (~frank.hol@2001:a61:3553:801:12a1:56dc:e2bd:f351) (Ping timeout: 250 seconds)
[04:34:37] <tirnanog> and you can't use set -x for logging because ...?
[04:34:40] <lovetruth> s/was/was trying to/
[04:35:09] <lovetruth> set -x seems to log everything
[04:35:20] <emanuele6> how about  set -v  ?
[04:35:26] <tirnanog> although, set -x could be confusing for a pipe.
[04:36:34] <tirnanog> set -v probably wouldn't be very useful, alas. it will show the code as it was read by the shell and only once.
[04:36:44] *** Quits: Guest8534 (~Guest@host181.190-137-39.telecom.net.ar) (Remote host closed the connection)
[04:37:01] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Quit: Coyote finally caught me)
[04:37:09] <tirnanog> # printf '%s\n' 'set -v' 'path=$PATH' ': "$path"' | bash
[04:37:11] <shbot> tirnanog: path=$PATH
[04:37:11] <shbot> tirnanog: : "$path"
[04:37:14] *** Quits: wierzbowski (~wierzbows@dynamic-046-114-163-100.46.114.pool.telefonica.de) (Ping timeout: 272 seconds)
[04:38:12] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[04:38:51] <tirnanog> you could use eval, but you would need to be careful.
[04:40:13] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:40:26] <lovetruth> tirnanog, for now I'll just log those separately. It would have been nice if the timestamped_log4j_logging function would have been able to gaither the cmdline of the previous pipe too, anyway :)
[04:40:28] <tirnanog> how about:
[04:41:09] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f1141fa1e0576466c280.dip0.t-ipconnect.de)
[04:41:23] <lovetruth> tirnanog?... :)
[04:42:36] <tirnanog> # cmd1=(true foo bar); cmd2=(false); cmd3=(true); printf '%s\n' "Executing ${cmd1[*]} | ${cmd2[*]} | ${cmd3[@]}"; "${cmd1[@]}" | "${cmd2[@]}" | "${cmd3[@]}"
[04:42:38] <shbot> tirnanog: Executing true foo bar | false | true
[04:42:58] <tirnanog> putting commands in arrays is fine, as long as they are valid simple commands.
[04:46:11] <tirnanog> perhaps better:
[04:46:17] <tirnanog> # cmd1=(true 'foo bar' baz); cmd2=(false); cmd3=(true); printf '%s\n' "Executing: ${cmd1[*]@Q} | ${cmd2[*]@Q} | ${cmd3[*]@Q}"; "${cmd1[@]}" | "${cmd2[@]}" | "${cmd3[@]}"
[04:46:19] <shbot> tirnanog: Executing: 'true' 'foo bar' 'baz' | 'false' | 'true'
[04:48:20] *** Joins: docmax (~docmax@dynamic-077-003-169-199.77.3.pool.telefonica.de)
[04:48:55] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[04:51:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:55:22] *** Quits: lovetruth (~lovetruth@82.76.179.122) (Quit: This computer has gone to sleep)
[04:55:33] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[04:55:39] *** Joins: lovetruth (~lovetruth@82.76.179.122)
[04:55:39] *** Quits: lovetruth (~lovetruth@82.76.179.122) (Client Quit)
[04:56:38] *** Joins: vysn (~vysn@user/vysn)
[04:57:15] *** Joins: rcernin (~rcernin@101.189.129.123)
[04:59:35] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[05:01:50] *** Joins: semeion (~semeion@user/semeion)
[05:02:41] *** Joins: TK[m]1 (~takerutak@2001:470:69fc:105::1:d8a0)
[05:05:51] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[05:10:11] *** Joins: stoneware (~stoneware@user/stoneware)
[05:10:27] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:13:08] *** Quits: rcernin (~rcernin@101.189.129.123) (Client Quit)
[05:16:27] *** Quits: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com) (Ping timeout: 252 seconds)
[05:18:24] *** Joins: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com)
[05:21:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:22:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:23:03] *** Joins: darkbit (~db@136.158.8.67)
[05:23:47] *** Joins: crashrep (~crashrep@user/crashrep)
[05:29:06] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[05:30:17] *** Joins: aod (~a@190-72-205-181.dyn.dsl.cantv.net)
[05:32:44] *** Joins: A|an (~Alan@173.216.48.26)
[05:34:14] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 272 seconds)
[05:35:07] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:38:04] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[05:42:31] *** Joins: R2Racoon87 (~R2Racoon@2800:484:a586:ec00:f524:ad7b:81dd:48a6)
[05:43:58] <aod> hi guys, if i try to type `~`, i have to press twice for the appears, wheen before update i just need to press once, whut happen?
[05:44:31] <larryv> before updating what
[05:44:42] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[05:46:44] <aod> bash, lol
[05:47:03] <aod> help me larryv you are my only hope
[05:48:00] <larryv> doubt
[05:48:02] <aod> GNU bash, versión 5.1.16(1)-release
[05:49:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[05:49:27] *** R2Racoon87 is now known as R2Racoon
[05:51:01] *** Joins: docmax_ (~docmax@dynamic-077-001-169-022.77.1.pool.telefonica.de)
[05:52:51] *** Quits: docmax (~docmax@dynamic-077-003-169-199.77.3.pool.telefonica.de) (Ping timeout: 245 seconds)
[05:54:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:54:35] <tirnanog> aod: what is your operating system?
[05:54:49] <aod> linux
[05:55:24] <tirnanog> xorg?
[05:55:52] <aod> xorg, i have not idea how to search for it, i was reading a bit of changes, but lol
[05:56:15] <tirnanog> alrighty. if you have systemd run "localectl status", please.
[05:56:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[05:57:22] *** Joins: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com)
[05:57:56] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[05:58:06] *** Joins: MercilessDeth (~brad@136.49.59.177)
[05:58:07] <aod>    System Locale: LANG=es_ES.UTF-8
[05:58:07] <aod>        VC Keymap: es
[05:58:07] <aod>       X11 Layout: n/a
[05:58:07] <aod> hm?
[05:58:57] <aod> lol
[06:00:18] <tirnanog> what happens if you run: setxkbmap -layout es -option nodeadkeys
[06:01:30] <tirnanog> oh, but you're not in X11 are you.
[06:01:37] <aod> i am
[06:01:46] <tirnanog> ok. give it a go then.
[06:02:12] <aod> no output for that
[06:02:29] <tirnanog> yeah, but what happens with the tilde key now?
[06:03:21] <aod> same
[06:03:44] <tirnanog> even after exiting and staring again your terminal emulator?
[06:03:48] <tirnanog> starting
[06:04:33] <tirnanog> I'm pretty sure it's a so-called dead key. you should probably ask #linux or your distro channel about it. all bash does it consume whatever your terminal emulator sends to it.
[06:06:14] <aod> what is this, `xkbcomp -a es
[06:06:19] <aod> Cannot open "es" for reading`
[06:06:25] <aod> ?
[06:06:39] <aod> why is x11 layout: n/a?
[06:06:51] <tirnanog> it's a tool for compiling xkbmaps. I don't think that's something you want to be playing with.
[06:07:10] <tirnanog> the absence of a layout just concers me more. but anyway, it's not a bash problem. of that I am certain.
[06:07:29] <tirnanog> you need to use a layout without deadkeys. but I'm an English speaker and not a veteran of keyboard layout issues.
[06:07:53] <tirnanog> maybe you can select one in your desktop environment.
[06:08:33] <wiscii> that is practically psychic ..
[06:09:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:14:21] *** Joins: led_belly (~led_belly@159.48.53.215)
[06:15:30] *** Joins: Inline__ (~Inline@p200300cd472d8600a7f83f236a05ec56.dip0.t-ipconnect.de)
[06:16:07] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:17:25] <aod> ok thanks.
[06:17:27] *** Quits: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com) (Quit: Client closed)
[06:17:30] *** Parts: aod (~a@190-72-205-181.dyn.dsl.cantv.net) ()
[06:17:57] *** Quits: Inline (~Inline@p200300cd470c47009a06da4df68ae634.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:19:13] *** Joins: aod (~a@190-72-205-181.dyn.dsl.cantv.net)
[06:24:14] *** Joins: wierzbowski (~wierzbows@dynamic-046-114-164-126.46.114.pool.telefonica.de)
[06:27:16] *** Joins: rcernin (~rcernin@101.189.129.123)
[06:31:33] *** Joins: igemnace (~ian@user/igemnace)
[06:37:26] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:39:54] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[06:40:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:42:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[06:43:20] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:44:03] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[06:45:30] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:49:00] *** Quits: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:49:13] *** Quits: aod (~a@190-72-205-181.dyn.dsl.cantv.net) (Quit: leaving)
[06:50:59] *** Joins: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com)
[06:51:05] *** Quits: millido_ (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:51:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:55:27] *** Quits: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com) (Ping timeout: 256 seconds)
[06:55:45] *** Quits: wierzbowski (~wierzbows@dynamic-046-114-164-126.46.114.pool.telefonica.de) (Quit: Lost terminal)
[06:59:18] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 252 seconds)
[07:02:38] *** Joins: A|an_ (~Alan@173.216.48.26)
[07:02:41] *** Quits: A|an_ (~Alan@173.216.48.26) (Remote host closed the connection)
[07:02:48] *** Joins: w0ng (~w0ng@103.1.212.149)
[07:05:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:06:07] *** Quits: docmax_ (~docmax@dynamic-077-001-169-022.77.1.pool.telefonica.de) (Ping timeout: 268 seconds)
[07:06:50] *** Joins: docmax (~docmax@dynamic-077-003-230-114.77.3.pool.telefonica.de)
[07:07:27] *** Joins: millido (~millido@84.210.150.128)
[07:12:44] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[07:15:14] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 252 seconds)
[07:15:25] *** Quits: sdu (~sidu@185.44.146.144) (Ping timeout: 240 seconds)
[07:15:49] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[07:16:25] *** Quits: docmax (~docmax@dynamic-077-003-230-114.77.3.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:17:39] *** Joins: sdu (~sidu@185.44.146.144)
[07:18:50] *** Joins: kurahaupo (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au)
[07:19:05] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[07:19:22] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 272 seconds)
[07:19:22] *** Quits: jos1 (~jos3@dyndsl-178-142-070-065.ewe-ip-backbone.de) (Ping timeout: 272 seconds)
[07:20:39] *** Joins: docmax (~docmax@dynamic-077-001-142-187.77.1.pool.telefonica.de)
[07:21:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:23:19] *** Quits: Dotz0cat (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:25:15] *** Joins: Dotz0cat (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net)
[07:27:20] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[07:30:41] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:32:00] *** Joins: aod (~a@190-72-205-181.dyn.dsl.cantv.net)
[07:32:09] *** Joins: jos1 (~jos3@dyndsl-091-096-040-201.ewe-ip-backbone.de)
[07:33:59] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:36:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[07:37:16] *** Joins: tejr (~tejr@user/tejr)
[07:39:39] *** Quits: docmax (~docmax@dynamic-077-001-142-187.77.1.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[07:40:22] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:50] *** Joins: docmax (~docmax@dynamic-077-008-212-040.77.8.pool.telefonica.de)
[07:44:03] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[07:49:34] *** Quits: aod (~a@190-72-205-181.dyn.dsl.cantv.net) (Quit: leaving)
[07:49:58] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 250 seconds)
[07:54:48] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:55:21] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[07:59:22] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:59:46] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 268 seconds)
[08:00:39] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[08:02:28] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[08:03:52] *** Joins: mra90 (~mra@192.55.55.52)
[08:04:21] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:06:14] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 272 seconds)
[08:09:30] <mra90> does git comes with its own bash interpreter? IOW, how is it possible that git run from windows cmd line i still able to execute hooks written in bash
[08:10:17] <llua> no
[08:10:54] *** Joins: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net)
[08:12:15] <mra90> so how it works?
[08:12:36] *** Joins: crashrep (~crashrep@user/crashrep)
[08:12:48] *** Quits: Betal_ (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:13:17] <llua> it ships a verison of bash in it's installer.
[08:13:35] *** Joins: rgrinberg (~textual@177.244.18.30)
[08:14:24] *** Quits: alienhead (~solas@user/alienhead) (Remote host closed the connection)
[08:15:25] <mra90> llua this is what I said it comes with its own bash
[08:15:44] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:17:43] <mra90> also I wonder what would be the simplest way to get file extensions - i.e I need to list all files from a specific commit and gets their extensions into an array
[08:18:52] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[08:20:38] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[08:20:41] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 252 seconds)
[08:24:09] *** Joins: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com)
[08:24:36] *** Quits: rando25892 (~homefame@user/rando25892) (Ping timeout: 272 seconds)
[08:25:12] *** Joins: rcernin (~rcernin@101.189.129.123)
[08:27:48] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:29:27] *** Joins: bluedust (~bluedust@86.106.136.215)
[08:30:32] <mra90> why echo test | sed regex works while the same command with > (redirection) instead of pipe fails?
[08:31:01] <mra90> The redirection version should just give "test" as an input to sed
[08:31:19] <phy1729> You probably are missing a >
[08:31:27] <phy1729> echo test > >(sed regex)
[08:33:06] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[08:33:15] <mra90> phy1729, yes it also works but why single redirection fails?
[08:33:47] *** Joins: rcernin (~rcernin@101.189.129.123)
[08:33:48] <twkm> >() means something different than ().
[08:34:34] <phy1729> >(...)   is a construct unto itself. It is not a redirection.
[08:34:42] <phy1729> echo >( true )
[08:34:44] <phy1729> # echo >( true )
[08:34:46] <shbot> phy1729: /dev/fd/63
[08:35:04] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:35:16] <mra90> but wait, sed need stdin
[08:35:21] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[08:35:52] <twkm> docs must be on fire over there.
[08:36:09] <mra90> and echo test > sed regex provides "test" on sed input right?
[08:36:22] <twkm> no.
[08:36:33] <phy1729> no that outputs    test regex    into a file called sed
[08:36:37] *** Quits: rcernin (~rcernin@101.189.129.123) (Client Quit)
[08:38:12] *** Quits: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com) (Quit: (Read error: Connection reset by beer, You Phuq With Me, You Phuq With The B0rg.0rg))
[08:38:15] <mra90> "A stream editor is used to perform basic text transformations on an input stream (a file or input from a pipeline)."
[08:38:56] *** Quits: bluedust (~bluedust@86.106.136.215) (Ping timeout: 250 seconds)
[08:38:57] <mra90> phy1729, yep thanks
[08:39:29] *** Quits: EvilAlan (~EvilAlan@cpe-74-77-85-57.buffalo.res.rr.com) (Quit: Client closed)
[08:43:09] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:44:07] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[08:45:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[08:47:51] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Read error: Connection reset by peer)
[08:48:08] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[08:48:19] *** Quits: sig_ (~sig@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Remote host closed the connection)
[08:48:36] *** Joins: sig_ (~sig@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[08:48:40] *** Quits: tm512 (~tm512@user/tm512) (Read error: Connection reset by peer)
[08:48:56] *** Joins: tm512 (~tm512@50.53.132.213)
[08:49:01] *** Quits: tm512 (~tm512@50.53.132.213) (Changing host)
[08:49:01] *** Joins: tm512 (~tm512@user/tm512)
[08:49:01] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (Read error: Connection reset by peer)
[08:49:08] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[08:49:20] *** Quits: lilalinux (sid512618@id-512618.tinside.irccloud.com) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: shush (sid21719@id-21719.tinside.irccloud.com) (Ping timeout: 250 seconds)
[08:49:20] *** Quits: jsatk__ (sid304796@id-304796.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[08:49:46] *** Quits: termos (sid18647@id-18647.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[08:50:06] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC - https://znc.in)
[08:50:06] *** Quits: Razva (sid17541@user/razva) (Read error: Connection reset by peer)
[08:50:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[08:50:07] *** Quits: lazycat (~lazycat@user/lazycat) (Quit: ZNC - https://znc.in)
[08:50:12] *** Joins: lilalinux (sid512618@id-512618.tinside.irccloud.com)
[08:50:15] *** Joins: Razva (sid17541@user/razva)
[08:50:15] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[08:50:16] *** Joins: jsatk__ (sid304796@id-304796.helmsley.irccloud.com)
[08:50:22] *** Joins: BlueShark (sid10311@user/blueshark)
[08:50:23] *** Joins: lazycat (~lazycat@user/lazycat)
[08:50:24] *** Joins: termos (sid18647@id-18647.helmsley.irccloud.com)
[08:50:24] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[08:50:26] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[08:50:29] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[08:50:31] *** Joins: millido (~millido@84.210.150.128)
[08:50:48] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Ping timeout: 256 seconds)
[08:51:30] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 250 seconds)
[08:51:56] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 250 seconds)
[08:51:57] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:51:57] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[08:52:27] *** Quits: zouhair (~zouhair@lnsm2-montreal02-69-157-101-208.internet.virginmobile.ca) (Read error: Connection reset by peer)
[08:52:53] *** Joins: ivanakis (~ivanakis@46.10.161.208)
[08:52:54] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[08:53:05] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:57:38] *** Joins: zouhair (~zouhair@lnsm2-montreal02-69-157-101-208.internet.virginmobile.ca)
[08:57:58] *** Joins: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c)
[09:01:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:05:33] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:07:17] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:07:49] *** Quits: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[09:09:02] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[09:09:39] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[09:10:47] *** Joins: ravan (~ravan@user/ravan)
[09:11:33] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[09:13:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[09:16:15] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 252 seconds)
[09:17:48] *** Quits: kurahaupo (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[09:19:12] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:20:17] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:21:16] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[09:21:29] *** Joins: rgrinberg (~textual@177.244.18.30)
[09:24:28] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[09:25:49] *** Joins: sudomann (~sudomann@98.219.211.182)
[09:26:07] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[09:27:48] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[09:28:50] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:43] *** Quits: R2Racoon (~R2Racoon@2800:484:a586:ec00:f524:ad7b:81dd:48a6) (Quit: Client closed)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:44] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 272 seconds)
[09:32:31] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:32:38] <mra90> phy1729, one more question
[09:32:47] *** Joins: han-solo (~han-solo@user/han-solo)
[09:33:06] <mra90> #echo test.txt > sed regex
[09:33:30] <mra90> why in above example both test.txt and regex will be written to sed and not just test.txt?
[09:34:36] <han-solo> as far as the command is concerened, those are its arguments
[09:34:51] <han-solo> the redirection can happen in the middle just fine
[09:35:14] <han-solo> # echo > test foo bar; cat test
[09:35:15] <shbot> han-solo: foo bar
[09:37:29] <larryv> ''>out cmd arg arg arg'' is the same as ''cmd >out arg arg arg'' is the same as ''cmd arg >out arg arg'' is the same as ''cmd arg arg >out arg'' is the same as ''cmd arg arg arg >out''
[09:37:30] <mra90> ohh ok, didn't know that
[09:37:38] <mra90> thank you
[09:38:45] <mra90> also the outcome of this command: ext=$(echo $file | sed 's/.*\.//') is ext varfiable gets file extension but it also outputs it to stdout, why?
[09:39:36] *** Quits: A|an (~Alan@173.216.48.26) (Quit: A|an)
[09:39:55] <larryv> because you're leaving something out
[09:40:01] <larryv> # file=foo.txt; ext=$(echo $file | sed 's/.*\.//')
[09:40:04] <shbot> larryv: no output
[09:40:33] <han-solo> !ext > mra90 # neverthless
[09:40:34] <greybot> mra90 # neverthless: Given that f has a value of "foo.bar.baz", ${f#*.} will expand to "bar.baz" and ${f##*.} to "baz", whereas ${f%.*} will expand to "foo.bar" and ${f%%.*} to "foo". See also: http://mywiki.wooledge.org/BashFAQ/073
[09:40:52] <larryv> btw ext=${file##*.} does the same thing better
[09:41:38] <mra90> larryv, hold one for a moment I don't get why your example has no output why I get it
[09:41:49] <mra90> # file=foo.txt; ext=$(echo $file | sed 's/.*\.//')
[09:41:50] <shbot> mra90: no output
[09:41:58] <mra90> # file=foo.txt; ext=$(echo $file | sed 's/.*\.//') ; echo $ext
[09:41:59] <shbot> mra90: txt
[09:43:17] *** Joins: timj (~timj@user/timj)
[09:43:18] <mra90> ok I see this output probably comes from the next command
[09:44:01] <mra90> because I later do:  echo $EXTENSIONS | grep $ext to check if the extension is on the list of allowed extensions
[09:44:17] <mra90> and I test; if [ $? eq 0 ]...
[09:44:26] <mra90> is there a better way to do this?
[09:44:50] <larryv> there's a better way to do pretty much everything you've been asking about.
[09:45:46] <mra90> that's expected since I know very little bash scripting
[09:46:06] <mra90> and this is because I don't use it every day as you guys likely do :)
[09:46:57] <mra90> but going back to that echo command, larryv do you have some actual suggestion?
[09:47:25] <larryv> to check if $ext is a substring of $EXTENSIONS?
[09:47:37] <mra90> yes
[09:47:53] <larryv> what is the format of $EXTENSIONS?
[09:47:56] <mra90> EXTENSIONS=(c cpp cc h hpp)
[09:48:22] <larryv> it's actually an array? you're using bash?
[09:48:45] <mra90> this is part of git post-commit hook
[09:49:07] <larryv> ok. because everything else you've been showing looks like you're targeting Bourne
[09:49:30] <mra90> #!/bin/sh
[09:49:34] <larryv> ...
[09:50:06] <han-solo> !inarray > mra90
[09:50:07] <greybot> mra90: Check whether a value is in an array: inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; } # Usage: inarray "$value" "${array[@]}" Or just use an associative array if possible
[09:50:12] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[09:50:20] <larryv> if that's your actual shebang you shouldn't be using an array
[09:50:24] <larryv> it's invalid
[09:50:31] *** Joins: tijuco (~tijuco@user/tijuco)
[09:50:51] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[09:51:19] *** Joins: labrador (~labrador@user/labrador)
[09:51:34] <larryv> use #!/bin/bash or stick to POSIX
[09:51:56] <mra90> larryv, well I tested it before and I was able to iterate this array
[09:52:21] <larryv> that's because bash accepts a lot of bashisms when called as sh
[09:52:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:52:26] <larryv> it's still wrong
[09:52:29] <larryv> stop doing it
[09:52:40] <larryv> target bash or stop using bashisms
[09:53:16] <mra90> ok so how should I change my shebang?
[09:53:47] <larryv> change it to bash
[09:54:12] <larryv> #!/bin/bash presumably, i don't know where your bash lives
[09:55:34] <mra90> changed to #!/bin/bash, executes in the same way
[09:56:11] <larryv> it actually doesn't (POSIX mode change some things), but that's not the point
[09:56:15] <larryv> *changes
[09:56:53] <mra90> https://stackoverflow.com/questions/5725296/difference-between-sh-and-bash
[09:57:07] <mra90> says "They're nearly identical but bash has more features – sh is (more or less) an older subset of bash."
[09:58:12] <larryv> why are you showing me this?
[09:58:23] <larryv> i know the difference between sh and bash
[09:58:27] <larryv> differences
[09:58:53] <larryv> "nearly" is pulling a lot of weight there
[09:59:04] <mra90> because you acted like huge difference
[09:59:08] <larryv> they're nearly identical but bash has more features, so they're actually not nearly identical
[09:59:56] <larryv> if you write code with a #!/bin/sh shebang, i expect that to run under e.g., dash and yash as well
[10:00:01] <larryv> and your code won't
[10:00:04] <larryv> because it's using arrays
[10:00:28] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[10:01:23] <mra90> so does it mean beside the fact I used  #!/bin/sh it was run under bash?
[10:01:38] <mra90> I mean since arrays were working
[10:01:47] *** Joins: dre (~dre@2001:8003:c932:c301:5689:c0f3:d693:ff24)
[10:02:02] <larryv> it means your sh is bash
[10:02:20] <mra90> can I prove it some way?
[10:02:37] <larryv> run ''sh --version''
[10:02:55] <mra90> GNU bash, version 4.4.23(2)-release (x86_64-pc-msys)
[10:03:55] <larryv> if you use bash-specific features, your script should not pretend it is a sh script. if you write a sh script, you should not bash-specific features
[10:04:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[10:05:31] <larryv> anyway if you're going to commit to writing *a bash script*, then a solution for array membership was provided
[10:05:33] <larryv> !inarray
[10:05:34] <greybot> Check whether a value is in an array: inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; } # Usage: inarray "$value" "${array[@]}" Or just use an associative array if possible
[10:06:24] <mra90> I have no changed it to call for bash explicitly
[10:07:31] <larryv> additionally ext=${file##*.} is better than whatever you are currently doing
[10:07:41] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Remote host closed the connection)
[10:08:36] <mra90> assuming $file keeps the actuall name like. program.c
[10:08:40] <mra90> ?
[10:08:51] <larryv> sure
[10:09:12] <mra90> ok this is clear but I try to figure out how to use inarray()
[10:09:23] <mra90> array=(a b c)
[10:09:30] <mra90> now how to test if b is in array?
[10:09:43] <larryv> inarray b "${array[@]}"
[10:10:40] <mra90> bash: inarray: command not found
[10:10:52] <larryv> did you
[10:10:54] <larryv> define the function
[10:11:01] <larryv> that is given in that factoid
[10:11:30] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[10:11:38] <mra90> ahh
[10:12:09] <larryv> # inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; }; array=(a b c); inarray b "${array[@]}"; echo "$?"; inarray x "${array[@]}"; echo "$?"
[10:12:11] <shbot> larryv: 0
[10:12:11] <shbot> larryv: 1
[10:12:29] <mra90> thank you larryv, han-solo
[10:12:37] <mra90> works well
[10:13:20] <larryv> okay
[10:13:21] <larryv> good luck
[10:14:03] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:14:15] <mra90> larryv, if you were to say why bash over sh?
[10:15:01] <gr33n7007h> mra90: coz bash is the dog danglies.
[10:15:30] <mra90> clearly
[10:24:18] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 272 seconds)
[10:26:32] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[10:26:33] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[10:26:33] *** Joins: Bercik (~Redomen@user/bercik)
[10:27:00] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Ping timeout: 240 seconds)
[10:36:24] *** Joins: Atque (~Atque@user/atque)
[10:37:16] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[10:39:59] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[10:43:38] *** Quits: Xanthaos (~ke4nhw@user/ke4nhw) (Remote host closed the connection)
[10:46:11] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[10:46:24] *** Joins: labrador (~labrador@user/labrador)
[10:47:24] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:47:34] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[10:48:40] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:00:00] *** Quits: unop_ (~unop@195.91.20.32) (Remote host closed the connection)
[11:00:16] *** Joins: unop (~unop@195.91.20.32)
[11:09:48] *** Quits: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c) (Ping timeout: 240 seconds)
[11:12:57] *** Joins: xx (~xx@user/xx)
[11:15:01] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:15:36] *** Joins: unop (~unop@195.91.20.32)
[11:16:23] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[11:18:54] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[11:23:43] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[11:23:59] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:27:34] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[11:29:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:34:54] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:35:28] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[11:36:31] *** Quits: Earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[11:37:24] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:2dd2:cb17:a149:4dbf) (Ping timeout: 240 seconds)
[11:38:47] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:43:25] *** Joins: lavaball (felix@31.204.155.215)
[11:48:24] *** Joins: Sulky (~Sulky@2a04:cec0:1003:4ea5:6036:5e79:864:9335)
[11:50:03] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Remote host closed the connection)
[11:50:38] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Ping timeout (120 seconds))
[11:50:53] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[11:50:55] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:50:57] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:53:06] *** Joins: Earnest (~earnest@user/earnestly)
[11:55:00] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[11:56:45] *** Joins: sinaowolabi (~SinaOwola@160.152.106.73)
[12:02:01] *** Quits: mra90 (~mra@192.55.55.52) (Remote host closed the connection)
[12:03:19] *** Joins: sinaowolabi_ (~SinaOwola@160.152.106.73)
[12:04:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[12:07:32] *** Quits: xmb (~xmb@178.197.205.100) (Ping timeout: 272 seconds)
[12:08:00] *** Joins: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c)
[12:08:48] *** Quits: sinaowolabi_ (~SinaOwola@160.152.106.73) (Ping timeout: 272 seconds)
[12:10:03] *** Quits: sinaowolabi (~SinaOwola@160.152.106.73) (Ping timeout: 252 seconds)
[12:15:53] *** Joins: rendar (~rendar@user/rendar)
[12:16:16] *** Joins: remirol (~lorimer@user/lorimer)
[12:16:16] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[12:16:18] *** remirol is now known as lorimer
[12:18:37] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:19:24] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323) (Ping timeout: 252 seconds)
[12:21:35] *** Joins: sinaowolabi_ (~SinaOwola@102.67.1.24)
[12:21:51] *** Quits: ivanakis (~ivanakis@46.10.161.208) (Ping timeout: 256 seconds)
[12:23:37] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:e190:5acd:4e68:2323)
[12:24:43] *** Joins: sinaowolabi (~SinaOwola@102.67.1.37)
[12:27:37] *** Quits: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c) (Ping timeout: 240 seconds)
[12:30:06] *** Quits: soundwave[m] (~pjconnect@2001:470:69fc:105::1:1c57) (Quit: You have been kicked for being idle)
[12:33:09] *** Quits: sinaowolabi_ (~SinaOwola@102.67.1.24) (Ping timeout: 252 seconds)
[12:35:34] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:36:41] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:36:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:37:32] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 240 seconds)
[12:39:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:40:33] *** Joins: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c)
[12:40:57] *** Joins: yustin (~yustin@user/yustin)
[12:41:07] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:43:53] *** Joins: on^ (~on@50.232.121.75)
[12:45:21] *** Joins: sinaowolabi_ (~SinaOwola@160.152.106.73)
[12:52:27] *** Joins: archie (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:53:35] *** Quits: fmirkes (~fmirkes@user/fmirkes) (Quit: ZNC - https://znc.in)
[12:54:29] *** Quits: Sulky (~Sulky@2a04:cec0:1003:4ea5:6036:5e79:864:9335) (Read error: Connection reset by peer)
[12:54:52] *** Joins: Sulky (~Sulky@2a04:cec0:1003:4ea5:6036:5e79:864:9335)
[12:55:19] *** Joins: jaysicks (~jaysicks@178-164-166-32.pool.digikabel.hu)
[12:56:47] *** Quits: archie (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[12:57:01] *** Joins: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[12:59:08] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Quit: No Ping reply in 180 seconds.)
[13:00:00] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[13:00:28] *** Joins: zauberfisch (~Zauberfis@cm147-42.liwest.at)
[13:02:33] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Client Quit)
[13:04:29] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[13:05:03] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[13:06:37] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[13:08:30] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[13:08:54] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[13:14:51] *** Quits: heldwin (~heldwin@user/asmodee) (Quit: Teleporting ...)
[13:16:37] *** Joins: curvv (~quetzlcoa@192-143-62-51.ip.airmobile.co.za)
[13:16:38] *** Quits: curvv (~quetzlcoa@192-143-62-51.ip.airmobile.co.za) (Changing host)
[13:16:38] *** Joins: curvv (~quetzlcoa@user/curvv)
[13:21:31] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:22:31] *** Quits: luckiswithme (~luckiswit@2405:6e00:b29:3b00:4df5:c62e:6ed6:770c) (Ping timeout: 250 seconds)
[13:22:51] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Remote host closed the connection)
[13:27:25] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[13:27:37] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[13:27:48] *** Joins: b0b (~bob@user/b0b)
[13:28:23] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[13:31:11] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[13:31:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[13:31:33] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[13:32:25] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[13:33:43] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[13:34:47] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[13:36:06] *** Joins: labrador (~labrador@user/labrador)
[13:44:09] <lmat> I have a loop like    for file in my_files*; do   process_file "$file"; done;     process_file() creates a new file that matches the pattern in the outer for loop. I was shocked to see that the loop is calling process_file with the newly-created files...is this expected?
[13:44:24] <lmat> If so, I am working under a serious misunderstanding about how globs and loops work!!
[13:46:05] <lopid> "$file" is one of the elements that match the pattern my_files*, not the pattern itself, unless you have nullglob on
[13:46:18] <lopid> er, off
[13:46:39] <lopid> …and there are no matches
[13:46:52] *** Joins: Adoi (~Adoi@user/adoi)
[13:49:10] <lmat> # touch f0 f1; process () { echo "working on $1" >&2; touch "$1".p; } for file in *; do process "$file"; done | head;
[13:49:12] <shbot> lmat: bash: syntax error near unexpected token `for'
[13:49:18] <lmat> # touch f0 f1; process () { echo "working on $1" >&2; touch "$1".p; }; for file in *; do process "$file"; done | head;
[13:49:19] <shbot> lmat: working on f0
[13:49:19] <shbot> lmat: working on f1
[13:49:58] <lmat> That's good and expected output. On my machine, (with the less-simplified example), I'm seeing   working on f0  working on f0.p  working on f0.p.p
[13:50:17] <lopid> why redirect the echo and pipe to head?
[13:50:32] <lopid> and touch for that matter
[13:51:04] <lopid> does your 'process' function also have a loop or expansion?
[13:51:59] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[13:52:17] *** Joins: Adoi (~Adoi@user/adoi)
[13:52:58] *** Parts: Adoi (~Adoi@user/adoi) ()
[13:53:11] <lopid> if it creates files, then those new files may also be included the next time you run the 'for'
[14:03:05] *** Joins: iomari891 (~iomari891@197.210.76.39)
[14:04:22] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 250 seconds)
[14:04:26] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:04:43] *** Joins: rendar (~Paxman@2001:b07:2ef:6e26:4d2e:da3d:79eb:bca3)
[14:04:43] *** Quits: rendar (~Paxman@2001:b07:2ef:6e26:4d2e:da3d:79eb:bca3) (Changing host)
[14:04:43] *** Joins: rendar (~Paxman@user/rendar)
[14:05:46] *** Quits: rendar (~Paxman@user/rendar) (Client Quit)
[14:06:21] *** Joins: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81)
[14:07:16] *** Joins: namkeleser (~namkelese@101.175.104.107)
[14:07:21] *** Joins: lovetruth (~lovetruth@82.76.179.122)
[14:09:35] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[14:12:09] <lmat> lopid: "why redirect the echo and pipe to head" redirect echo so I can see the output. pipe to head so that it doesn't create an endless loop touching hundreds of thousands of files.
[14:12:27] <lmat> lopid: "does your 'process' function also have a loop or expansion?" yes it does.
[14:12:52] <lmat> lopid: So bash has some unexpected behaviour when it comes to nested loops? :'(
[14:13:19] <lopid> just better to leave out unnecessary stuff like that in otherwise simple examples
[14:13:45] <lopid> no, when your second loop runs, the filesystem is different
[14:13:54] <geirha> perhaps you want to iterate my_files!(*.p) instead
[14:14:48] <lopid> we either need to see your real code, or you show us a simple example that reproduces what you're seeing
[14:15:17] <lopid> …with no unnecessary fluff ;)
[14:15:19] <lmat> lopid: I have two loops, one within another.  for file in *; do while IFS= read -r line; do ...create more files... done < "$file"; done;     something like this.
[14:15:23] <lmat> lopid: Okay.
[14:15:46] <lmat> geirha: I don't understand   my_files!(*.p)
[14:15:56] <lopid> !extglob
[14:15:56] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[14:16:16] <geirha> my_files* matches files that start with "my_files".  my_files!(*.p)  matches the same, except those that also ends with ".p"
[14:17:08] <geirha> but yeah, so far you haven't shown code that will reproduce the problem
[14:17:33] <lmat> geirha: I see. I'm wanting to match   f0, f1, etc.  I used f*.  I also generate files like  f0.p  which are matching the outer glob. In my small little world, I imagine that the glob is evaluated at the beginning of the outer loop, so I'm stupefied when something INSIDE the outer loop can be seen in the outer loop's glob!
[14:18:27] <lopid> oftentimes, you'll realise what the problem is when you're coming up with the simplified case
[14:18:33] *** Joins: kurahaupo (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au)
[14:18:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:19:00] <geirha> something is causing the loop to be started multiple times
[14:19:03] <lmat> lopid: Agreed.
[14:19:14] <geirha> if the loop is inside a function, perhaps you're accidentally running the same function inside your function
[14:19:18] *** Quits: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[14:20:05] *** Joins: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:20:24] <lmat> geirha: Very well could be!
[14:20:33] <lmat> Thank you both for the helpful feedback!
[14:21:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[14:22:38] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Remote host closed the connection)
[14:23:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:25:00] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[14:27:01] *** Quits: karabaja4 (~karabaja4@dh207-92-189.xnet.hr) (Remote host closed the connection)
[14:27:58] *** Joins: Sulky_ (~Sulky@37.166.134.89)
[14:28:14] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[14:30:07] *** Quits: Sulky (~Sulky@2a04:cec0:1003:4ea5:6036:5e79:864:9335) (Ping timeout: 250 seconds)
[14:31:37] *** Quits: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81) (Quit: ZNC 1.8.2 - https://znc.in)
[14:31:50] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:32:48] *** Joins: Sulky__ (~Sulky@37.168.231.139)
[14:33:42] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[14:34:14] *** Quits: Sulky_ (~Sulky@37.166.134.89) (Read error: Connection reset by peer)
[14:38:26] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[14:40:32] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[14:41:22] *** Joins: drd (~drd@93-43-162-121.ip92.fastwebnet.it)
[14:42:35] *** Joins: travisghansen (~travisgha@192.74.130.86)
[14:43:16] *** Quits: sinaowolabi (~SinaOwola@102.67.1.37) (Ping timeout: 245 seconds)
[14:54:32] <Helmholtz> I'm writing a cli tool in bash. There are some modes of operation depending which switches are given. For example -a or (-b and -c) or (-d). What should I use in help text? Are these field required or optional? Should I use <-b blah> or [-b blah] ?
[14:54:56] <Helmholtz> I'm currently writing the as (REQUIRED/OPTIONAL)
[14:55:03] <Helmholtz> *them
[14:55:49] <lopid> <> is required, [] optional
[14:55:59] <lopid> | or
[14:56:13] <geirha> I dislike the use of <>, I prefer just no "highlight" means required
[14:56:27] <lopid> it can get convoluted, so example usage may help
[14:57:21] <Helmholtz> lopid, but these switches are both optional and required depending which of them are given
[14:57:27] <geirha> and it may be sensible to make some of those options subcommands instead
[14:57:27] <Helmholtz> Is there a standard for these things?
[14:57:55] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[14:59:44] <hsv_> Helmholtz: if it can't be simply described with notation then you should list each permutation separately.
[14:59:44] <geirha> not exactly, but if you try to follow the guidelines at https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html your users  at least won't be surprised
[15:00:14] <hsv_> [-b <blah>]
[15:00:29] <geirha> I'd write [-b blah]
[15:00:37] <geirha> the <> add nothing useful
[15:01:00] <lopid> says that the string "blah" isn't literal
[15:01:23] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:01:27] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:02:43] <geirha> "blah can be one of ..., ..., ..."  in the text makes that clear enough in my book
[15:03:14] <hsv_> imho, it's ugly but <> is so widely used that to omit it can be confusing by itself.
[15:03:46] <geirha> I find <> to be less common, at least among the standard utilities and GNU
[15:03:55] *** Joins: aod (~a@190-72-205-181.dyn.dsl.cantv.net)
[15:04:19] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:04:26] <lopid> "-x xml file", "-x <xml file>"
[15:04:44] <geirha> I'd write   -x file
[15:05:23] <lopid> and elaborate later? nod
[15:05:37] <geirha> aye
[15:05:56] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:06:11] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 245 seconds)
[15:06:43] <hsv_> i guess if it's for a specific project, or distribution, then you follow whatever the standard is.
[15:07:22] <hsv_> and in the sources, link to that standrad.
[15:07:43] *** Joins: vishal (~vishal@fedora/vishal)
[15:08:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[15:09:18] *** Joins: kiras (~kiras@176.103.56.119.adsl.inet-telecom.org)
[15:12:07] *** Joins: travisghansen (~travisgha@192.74.130.86)
[15:16:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:16:10] <kurahaupo> Helmholtz: <> is used to denote a placeholder rather than literal, but should only be used as a last resort if you don't have other make-up available. Some prefer block capitals, since almost all keywords and most switches are strictly lower case. Personally I think italics are preferable.
[15:18:12] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[15:18:14] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[15:18:15] *** m0viefreak2 is now known as m0viefreak
[15:18:38] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:19:05] <kurahaupo> So I would write « -x expr-file » or « -x EXPRFILE ».
[15:19:48] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 252 seconds)
[15:22:31] <kurahaupo> (I would be more specific than just file, so I can describe expr-file once, even if multiple options use it.)
[15:22:36] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 272 seconds)
[15:22:56] <kurahaupo> especially input-file and output-file
[15:23:40] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[15:24:46] *** Quits: capn (~capn@user/capn) (Quit: Later!)
[15:25:35] *** Joins: karakedi (~eAC53C340@user/karakedi)
[15:27:37] *** Quits: kiras (~kiras@176.103.56.119.adsl.inet-telecom.org) (Changing host)
[15:27:37] *** Joins: kiras (~kiras@user/kiras)
[15:27:59] *** Quits: kiras (~kiras@user/kiras) (Quit: Leaving)
[15:28:15] *** Joins: kiras (~kiras@user/kiras)
[15:28:44] *** Quits: a_west (~a_west@2a01:4f9:c010:5c49::1) (Quit: Bye!)
[15:30:50] *** Quits: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[15:30:51] *** Joins: a_west (~a_west@cloud.westerlind.me)
[15:31:23] <hsv_> Is there an easy way to get a user's home path from the username contained in a variable?
[15:31:25] *** Joins: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:32:02] *** Joins: sinaowolabi (~SinaOwola@102.67.1.37)
[15:32:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:33:58] *** Joins: bora (~bora@176.33.68.247)
[15:34:52] <geirha> No, just use ~ or "$HOME" to get the homedir
[15:35:32] *** Joins: capn (~capn@user/capn)
[15:36:12] <hsv_> ~ and $HOME relate to the current user.
[15:36:12] <geirha> or do you mean the homedir of another user? if so, one option is to validate the username (verify that it's purely alphanumeric, for instance) and then use eval on ~"$user"
[15:36:21] <hsv_> eval somecmd ~${user//[^a-z0-9]/_}/...
[15:36:53] <geirha> I'd validate instead. Replacing non-alphanumerics with underscoore you risk ending up with a completely different user
[15:37:10] <hsv_> ok
[15:37:10] *** Quits: curvv (~quetzlcoa@user/curvv) (Ping timeout: 272 seconds)
[15:37:26] *** Quits: drd (~drd@93-43-162-121.ip92.fastwebnet.it) (Ping timeout: 245 seconds)
[15:37:30] *** Joins: mr-red (~drd@93-42-66-75.ip85.fastwebnet.it)
[15:37:51] *** Joins: VoidSync (~sync@user/voidsync)
[15:38:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:39:03] <geirha> [[ $user = +([[:alnum:]_]) ]] || { printf >&2 '%s: Invalid username: %s\n' "$0" "$user" ; exit 1 ; } ; eval "homedir=~$user"
[15:39:16] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[15:39:37] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Ping timeout: 256 seconds)
[15:40:04] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[15:40:09] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[15:40:27] <hsv_> i'm unsure that '_' is a valid username char, but '-' is.
[15:40:56] <geirha> it's system specific. On debian/ubuntu, "*" is a valid username, for instance
[15:41:36] <hsv_> then i'm happy for my script to disallow '*' ;-)
[15:42:12] <geirha> yeah, most sysadmins will have some more restrictive rules regarding valid usernames
[15:43:59] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Client Quit)
[15:44:31] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:44:57] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Quit: Goodbye! - WeeChat 3.4)
[15:47:00] <hsv_> [[ $user != *[^[:alnum:]-]* ]] || { printf >&2 ...; exit 1; }
[15:48:04] <geirha> a minor edge case with that is that it will consider empty string valid
[15:48:27] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[15:49:01] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 240 seconds)
[15:49:06] <hsv_> good point, that's more plausible than an invalid char tbh.
[15:49:29] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:50:10] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[15:51:47] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[15:54:14] *** Joins: xmb (~xmb@178.197.205.100)
[15:56:50] <ormaaj> [[  $USER =~ ^[a-z_][a-z0-9_-]{0,31}[$]?$ ]]
[15:57:12] <ormaaj> Those are the valid ones for Linux
[15:58:02] <ormaaj> well, can't remember where I got that. Might have been the posix one. I took the smallest subset.
[15:58:40] *** Quits: af (~af@awalgarg.me) (Quit: WeeChat 3.4)
[15:58:42] <kurahaupo> hsv_: ~$otheruser or: IFS=: read -r user _legacy_pw uid gid gecos home shell < <( getent passwd "$user_or_uid" )
[16:00:14] <kurahaupo> USER is a predefined variable name; it's a bad idea to use it for other purposes in a shell script. ("Other purpose" would include using it to hold any username other than the current current.)
[16:00:30] <kurahaupo> hence we have !varcap
[16:01:29] <hsv_> even as lowercase?
[16:01:53] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[16:02:31] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[16:02:37] <kurahaupo> shell variables (including env vars) are case sensitive
[16:02:47] <kurahaupo> !varcap
[16:02:47] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[16:04:04] <kurahaupo> hsv_: The point is that you should use "user" rather than "USER" if you're talking about some random user rather than the current user
[16:04:27] <kurahaupo> (Or you could pick something else, of course.)
[16:04:36] <hsv_> kurahaupo: yes, that's what i did.
[16:06:02] <hsv_> IFS=: read -r _user _pw _uid _gid _gecos home _shell < <(getent passwd "$user") || { printf >&2 ...; exit 1; }
[16:06:16] <ormaaj> !learn homeuser Tries every standard method to set HOME and USER: https://gist.github.com/ormaaj/8f6cd6082e6c2bed237e
[16:06:16] <greybot> OK, ormaaj
[16:06:57] <kurahaupo> The various suggestions for filtering usernames use $USER which is misleading, since USER must initially contain a valid username for the current system, and (since you shouldn't change it), it should always contain a valid username; so using it in an example filtered is misleading
[16:07:14] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) ()
[16:07:15] <xmb> # declare "home=~$USER" ; printf %s "$home"
[16:07:16] <shbot> xmb: ~root
[16:07:49] <kurahaupo> hsv_: _pw will not contain the real password (not even as a hash) on any modern system
[16:07:54] <hsv_> kurahaupo: i'm not using $USER.
[16:08:30] <xmb> # eval printf %s ~\$USER
[16:08:32] <shbot> xmb: ~root
[16:09:00] <xmb> # eval printf %s ~$USER
[16:09:02] <shbot> xmb: /root
[16:09:04] <kurahaupo> I tend to use "_" as a placeholder to discard fields, but some folk argue that that's not valid. My reading is that setting it and expecting it to keep the value just set is not valid, but simply setting it is OK.
[16:09:41] <kurahaupo> hsv_: Yeah I saw that, but the other advice sent to you did use $USER
[16:10:42] <ormaaj> If they argue it isn't "valid" they're wrong.  It has problems only when you expect it to do as in bash.
[16:12:39] <hsv_> The getent solution works best for me since it inherently gets the dir into a variable.
[16:13:32] <hsv_> ... and it checks for valid user at the same time.
[16:14:42] *** Joins: yustin (~yustin@user/yustin)
[16:15:09] <ormaaj> k# echo ~"$USER"
[16:15:11] <shbot> ormaaj: /root
[16:15:35] <xmb> # echo ~"$USER"
[16:15:36] <shbot> xmb: ~root
[16:15:43] <ormaaj> :)
[16:16:29] <hsv_> k# user=root; echo ~"$user"
[16:16:31] <shbot> hsv_: /root
[16:16:37] <kurahaupo> hsv_: The downside is it's slower than using shell builtins
[16:16:39] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[16:16:52] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[16:17:09] <kurahaupo> And I don't guarantee that it works outside GNU/Linux
[16:17:30] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[16:17:38] <hsv_> kurahaupo: accepted.
[16:18:16] *** Quits: aod (~a@190-72-205-181.dyn.dsl.cantv.net) (Quit: leaving)
[16:19:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:22:45] <ormaaj> There are ways for USER to be invalid. That's why I created a workaround
[16:23:38] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Quit: Goodbye! - WeeChat 3.4)
[16:23:58] <xmb> # declare -a "foo=( ~$USER )" ; printf %s "$foo"
[16:24:00] <shbot> xmb: /root
[16:24:04] <xmb> well there
[16:24:20] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[16:26:44] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[16:27:04] <ormaaj> I'd suggest not using things other than assignment literals for declare. Nameref eliminates most of the old reasons for doing that.
[16:27:18] <ormaaj> all of them really
[16:29:04] <xmb> yea this declare looks nice
[16:31:44] <kurahaupo> # xx='([foo]=2 [bar]=3)' ; declare -A yy=([foo]=2 [bar]=3) ; declare -p xx yy
[16:31:46] <shbot> kurahaupo: declare -- xx="([foo]=2 [bar]=3)"
[16:31:46] <shbot> kurahaupo: declare -A yy=([foo]="2" [bar]="3" )
[16:32:03] <kurahaupo> 3# xx='([foo]=2 [bar]=3)' ; declare -A yy=([foo]=2 [bar]=3) ; declare -p xx yy
[16:32:10] <shbot> kurahaupo: bash: declare: -A: invalid option
[16:32:11] <shbot> kurahaupo: declare: usage: declare [-afFirtx] [-p] [name[=value] ...]
[16:32:11] <shbot> kurahaupo: etc... ( http://ix.io/3S1N )
[16:32:18] <kurahaupo> 40# xx='([foo]=2 [bar]=3)' ; declare -A yy=([foo]=2 [bar]=3) ; declare -p xx yy
[16:32:40] <xmb> # x=( ~$USER ) ; declare -p x
[16:32:42] <shbot> xmb: declare -a x=([0]="~root")
[16:32:48] <xmb> yea needs in declare
[16:33:49] <kurahaupo> # xx='([foo]=2 [bar]=3)' ; declare -A "yy=$xx" ; declare -p xx yy # uuugh, ewww
[16:33:51] <shbot> kurahaupo: declare -- xx="([foo]=2 [bar]=3)"
[16:33:51] <shbot> kurahaupo: declare -A yy=([foo]="2" [bar]="3" )
[16:34:20] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[16:34:20] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Read error: Connection reset by peer)
[16:34:38] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[16:34:40] * hsv_ is unsure the point being made here.
[16:34:40] *** Joins: Maxattax97 (~max@rrcs-96-10-153-226.midsouth.biz.rr.com)
[16:34:46] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[16:35:15] <ormaaj> !ormaajkeys
[16:35:16] <greybot> # getKeys() { local -a 'keys=("${!'"$1"'[@]}")'; printf '<%s> ' "${keys[@]}"; echo; }; arr=({a..c}); getKeys arr
[16:35:18] <shbot> greybot: <0> <1> <2>
[16:35:43] <hsv_> anything wrong with: declare -a "home=( ~"$user" )" ?
[16:35:54] <hsv_> because it looks neat.
[16:36:00] <ormaaj> yes. don't use that.
[16:36:03] <xmb> there may be " error there
[16:36:23] <xmb> # declare -a "home=( ~\"$USER\" )" ; declare -p home
[16:36:25] <shbot> xmb: declare -a home=([0]="~root")
[16:36:42] *** Quits: maledictium (~crux@bl13-115-30.dsl.telepac.pt) (Ping timeout: 272 seconds)
[16:36:51] *** Quits: Maxattax97 (~max@rrcs-96-10-153-226.midsouth.biz.rr.com) (Remote host closed the connection)
[16:36:54] <xmb> # u='a  b  c' ; declare -a "home=( "$u" )" ; declare -p home
[16:36:56] <shbot> xmb: bash: declare: `c )': not a valid identifier
[16:36:56] <shbot> xmb: declare -a home=([0]="( a")
[16:37:03] <xmb> dont use quotes inside, else its k
[16:37:20] <xmb> and if they tell u dont listen to xmb, tell em the fuck up themselfes
[16:37:37] <hsv_> ok
[16:37:52] *** Joins: ivanakis (~ivanakis@46.10.161.208)
[16:37:55] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[16:38:37] <xmb> there is an optional var sanitizing step if u want
[16:38:54] <ormaaj> I have no clue what you're talking about but guess you mean the declare hack isn't a problem. In which case don't listen to xmb.
[16:39:17] <xmb> ur so old and out
[16:39:20] <xmb> worse than posix
[16:39:24] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Remote host closed the connection)
[16:39:29] <xmb> i thought of respect of u cause some #bot snippets
[16:39:32] <xmb> puff all gone shitty noob
[16:40:01] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[16:40:04] <xmb> not respect 'dont listen to <u dont know me>' and co
[16:40:41] <xmb> well i quit, see ya in days, former formal reverse-of-the-good-side'ies
[16:40:47] *** Quits: xmb (~xmb@178.197.205.100) (Quit: greets from the right)
[16:44:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[16:48:04] <ormaaj> That was confusing.
[16:48:22] * hsv_ none the wiser.
[16:48:54] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[16:49:28] *** Quits: PeGaSuS (WeeChat@user/pegasus) (Quit: Goodbye! - WeeChat 3.4)
[16:52:02] *** Quits: nyex (~Thunderbi@177.84.107.26) (Quit: nyex)
[16:53:24] *** Joins: PeGaSuS (WeeChat@user/pegasus)
[16:53:31] <ormaaj> Anyway for context there used to be a few things that weren't doable without eval unless you exploited some of the declare keyword quirks such as that !ormaajkeys thing, which is extra tricky because it abuses the way the explicit `-a` modifies the parsing. There are ways to do it that work but it's fragile and there have been many changes over the years in the details as kurahaupo pointed out.
[16:53:33] *** Joins: af (~af@awalgarg.me)
[16:54:18] <kurahaupo> Bash's "declare" is a horrible can of worms
[16:55:08] <ormaaj> it really is
[16:57:50] <hsv_> Is there an example of where declare home=(~$user); screws up? other than word-splitting on a space?
[16:58:26] <ormaaj> It'll word split on whatever IFS is currently set to
[17:01:17] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[17:02:40] <ormaaj> For extra fun you can even export IFS to declare's environment. in that case because there can be double or even sort-of triple expansion each pass can be subject to a different IFS. Also because there can be multiple assignments to a single declare keyword that are each parsed differently, the environment IFS applies only to the assignments that declare interpreted as a regular argument rather than as an assignment.
[17:04:07] *** Joins: curvv (~quetzlcoa@192-143-33-54.ip.airmobile.co.za)
[17:04:08] *** Quits: curvv (~quetzlcoa@192-143-33-54.ip.airmobile.co.za) (Changing host)
[17:04:08] *** Joins: curvv (~quetzlcoa@user/curvv)
[17:06:01] <ormaaj> # x=xyxyxy IFS=x; IFS=y declare -a a=( $x ) "b=( $x )"; typeset -p a b
[17:06:04] <shbot> ormaaj: declare -a a=([0]="" [1]="y" [2]="y" [3]="y")
[17:06:04] <shbot> ormaaj: declare -a b=([0]="xyxyxy")
[17:06:30] *** Quits: mr-red (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[17:06:39] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 256 seconds)
[17:08:19] <ormaaj> so yeah obscure crap. Why xmb would suggest this is reasonable for "every day use" is totally *boggle*
[17:08:37] *** Joins: ano (~ano@user/ano)
[17:08:45] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[17:09:09] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 256 seconds)
[17:10:20] *** Joins: makara_ (~makara@196.214.171.83)
[17:10:21] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 252 seconds)
[17:10:44] *** Joins: makara (~makara@196.214.171.83)
[17:11:44] <hsv_> I'm using the getent solution because it neatly validates the username as existing, but still unsure where this falls over: declare "home=(~$user)"
[17:13:06] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 252 seconds)
[17:13:16] <ormaaj> If you know you're dealing with getent for your application then it's generally preferred for many things especially LDAP or NIS.
[17:13:44] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 250 seconds)
[17:15:18] *** Quits: fmirkes (~fmirkes@user/fmirkes) (Quit: ZNC - https://znc.in)
[17:16:40] <ormaaj> Some of the basic admin commands like getent could really use some sort of standard just to make these conventions a little clearer.
[17:16:43] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[17:17:26] <phogg> it would be nice if you could tell getent passwd which *field* you want. It's not like there are a lot.
[17:17:43] <phogg> same for other DBs obviously
[17:18:13] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[17:20:31] <ormaaj> perhaps FHS says something about getent. kinda doubt it though
[17:21:04] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:22:09] <ormaaj> er sorry I meant LSB. FHS is the other one ><
[17:27:32] *** bfortifi- is now known as bfortified
[17:28:03] *** Joins: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net)
[17:30:23] *** Joins: A|an (~Alan@173.216.48.26)
[17:30:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 250 seconds)
[17:30:38] *** Joins: seninha (~chatzilla@user/seninha)
[17:32:01] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:32:10] <phogg> ormaaj: signs point to no https://lists.linuxfoundation.org/pipermail/lsb-discuss/2010-August/006497.html
[17:32:36] *** Quits: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:33:14] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 250 seconds)
[17:33:40] *** Quits: sinaowolabi (~SinaOwola@102.67.1.37) (Ping timeout: 250 seconds)
[17:33:45] <ormaaj> Oh interesting
[17:33:56] <phogg> hard to check further since bugs.linuxbase.org is NXDOMAIN
[17:34:13] <ormaaj> also interesting, a mailing list. That one hasn't really been on my radar.
[17:35:09] <phogg> super low traffic list
[17:35:53] <phogg> aha, found the new bug tracker: https://lsbbugs.linuxfoundation.org/
[17:36:08] <phogg> that's the 3rd one I've seen referenced, the last one I mentioned is still in all of their wiki pages...
[17:37:33] <phogg> and indeed bug 1047 is still not resolved https://lsbbugs.linuxfoundation.org/show_bug.cgi?id=1047
[17:37:39] <phogg> so still no getent
[17:38:25] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[17:38:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[17:39:36] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:39:58] <ormaaj> Wonder how much other unices actually pay attention to that. The fact that it has "linux" in the name might not be the best for encouraging collaboration.
[17:40:43] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Read error: Connection reset by peer)
[17:40:58] *** Joins: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da)
[17:41:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:41:38] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[17:41:45] <ormaaj> if no non-linux implementors then people will say "why bother?"
[17:41:49] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:41:57] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[17:41:58] *** Joins: iliv (~iliv@user/iliv)
[17:42:04] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Quit: Quitting)
[17:43:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[17:43:47] *** Joins: zeden (~zeden@user/zeden)
[17:44:21] *** Joins: bluedust (~bluedust@217.138.254.103)
[17:44:39] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[17:46:32] *** Joins: nobyk (~nobyk@user/nobyk)
[17:47:07] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[17:47:15] <phogg> hard to say how much LSB matters these days
[17:47:21] <phogg> even on Linux
[17:48:25] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4deb:db1a:1e48:ef58)
[17:48:25] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4deb:db1a:1e48:ef58) (Changing host)
[17:48:25] *** Joins: skapata (~Skapata@user/skapata)
[17:54:15] *** Quits: nobyk (~nobyk@user/nobyk) (Ping timeout: 240 seconds)
[17:55:32] *** Quits: ivanakis (~ivanakis@46.10.161.208) (Ping timeout: 240 seconds)
[17:55:57] *** Joins: nobyk (~nobyk@user/nobyk)
[17:56:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[17:56:21] *** Joins: KBar (~KBar@84.54.86.197)
[17:56:38] *** Quits: bluedust (~bluedust@217.138.254.103) (Ping timeout: 250 seconds)
[17:56:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:57:27] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:58:29] <KBar> hi. i want my script to restart automatically on error exit (set -e is on). do i just create another script and create a loop in it?
[18:00:36] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Remote host closed the connection)
[18:01:18] <phy1729> !-e
[18:01:18] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[18:01:27] *** Quits: nobyk (~nobyk@user/nobyk) (Quit: leaving)
[18:01:44] <KBar> phy1729: ?
[18:01:50] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[18:02:10] <phy1729> -e sucks, just don't use it and run the other stuff in a loop
[18:02:16] <sixwheeledbeast> don't use set -e
[18:03:48] <ormaaj> +1 sucks don't use.
[18:04:58] <KBar> none of your smart replies answer my question
[18:05:17] <sixwheeledbeast> it sounds ike an xy question what are yu trying to do.
[18:05:29] <phy1729> If you're script no longer exits, a loop is sufficient
[18:05:29] <KBar> no its really not
[18:05:43] <KBar> i know exactly what i want and asked a simple question
[18:06:16] <ormaaj> EXIT trap perhaps.
[18:06:46] <hsv_> KBar: you can put your script in a loop, but please don't rely upn set -e.
[18:07:19] <hsv_> *upon
[18:07:35] <KBar> i see. a loop sounds good. thanks
[18:08:05] <ormaaj> Yeah a loop might not work very easily if you really mean "I want to hook any exit and jump to the top of the script"
[18:08:50] <NRK> .oO( while ! fun; do :; done )
[18:08:51] <ormaaj> There is also an ERR trap but unfortunately it shares same semantics with set -e and thus same brokenness.
[18:09:42] *** Joins: nobyk (~nobyk@user/nobyk)
[18:09:44] <phy1729> Can run in a subshell and exit for a poor man's goto
[18:09:49] <hsv_> probably a job for systemd
[18:10:31] <sixwheeledbeast> ^ my thought
[18:10:45] <KBar> hsv_: that seems like an overkill but i'll check that out
[18:10:46] <sixwheeledbeast> if available
[18:11:40] <hsv_> or a crontab entry if you want to be hacky
[18:12:38] *** Quits: KBar (~KBar@84.54.86.197) (Quit: Leaving.)
[18:12:48] <ormaaj> If you did proper error handling then this is an easy problem. you just define an error handling function and call it in place of exit.
[18:13:38] <ormaaj> function can do whatever. Like set a flag to call a "main"
[18:13:52] <geirha> sie left
[18:14:27] <NRK> he didn't want any of your "smart" answers
[18:14:33] <sixwheeledbeast> indeed
[18:15:00] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:15:14] <NRK> honestly tho, goto in shell would've been nice
[18:15:59] * ormaaj feels neutral about this.
[18:17:30] <geirha> but then it would have to read the entire script before starting to execute it, robbing us of the ability to edit the script while it's running
[18:19:18] <ormaaj> and I could write an alias that expands to a label and that would be mega ormaaj fun
[18:19:31] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 245 seconds)
[18:20:59] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:21:26] *** Joins: darkbit (~db@136.158.8.67)
[18:22:07] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[18:24:32] *** Joins: bruce633 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com)
[18:25:14] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[18:26:53] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[18:27:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:28:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[18:30:27] *** Joins: toulene (~toulene@user/toulene)
[18:31:09] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[18:32:23] *** Joins: ivanakis (~ivanakis@46.10.161.208)
[18:33:07] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[18:34:31] *** Quits: fmirkes (~fmirkes@user/fmirkes) (Read error: Connection reset by peer)
[18:34:49] *** Joins: gevreeen (~gevreeen@2001:470:67:326:29b1:ded6:e8eb:49b7)
[18:35:01] <gevreeen> assuming I'm using bash, and .profile sources .bashrc, should PS* variables go to .profile and umask settings go to .bashrc?
[18:35:19] <bruce633> maybe
[18:35:31] <bruce633> just practise..
[18:35:35] <gevreeen> what are those cases where such a setup might incur problems?
[18:35:57] <lopid> prompt vars in bashrc, umask profile
[18:36:09] <gevreeen> lopid: care to elaborate?
[18:36:13] <gevreeen> as for why?
[18:36:22] <lopid> you can put prompt vars in profile, if they're not going to change
[18:36:38] <gevreeen> isn't .bashrc for non-interactive sessions?
[18:36:43] *** Quits: bora (~bora@176.33.68.247) (Remote host closed the connection)
[18:36:45] <lopid> profiles are usually for things per login session, bashrc per interactive session
[18:37:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[18:37:53] <lopid> eg. set HTTP_PROXY in a profile so all your applications see it, including those in xorg. bashrc would be sourced every time you open a shell
[18:38:02] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:38:09] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:38:28] <lopid> the whole way x does it is quite messy, though
[18:39:01] <gevreeen> "When an interactive shell that is not a login shell is started, bash reads and executes commands from ~/.bashrc, if that file exists."
[18:39:06] <gevreeen> guess I got it wrong
[18:41:46] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[18:42:00] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[18:45:00] *** Quits: OlCe (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:47:28] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:48:12] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:51:38] <gevreeen> also, could I put stuffs in both .profile and .bash_profile, and expect both of them to be executed?
[18:51:59] <gevreeen> .bash_profile could be reserved for bash-specific stuffs such as shopt -ou history
[18:52:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[18:53:11] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[18:53:29] <lopid> no
[18:53:59] <lopid> i do that, but source .profile from .bash_profile
[18:54:19] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[18:55:15] <gevreeen> ah, ok.
[18:55:57] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[18:57:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[18:59:01] *** Quits: bruce633 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[18:59:12] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[18:59:21] *** Joins: Guest25 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:12] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[19:03:05] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:03:09] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[19:03:15] <ormaaj> I recommend putting everything in .bashrc and use `if shopt -q login_shell; then ...`. It keeps your bash-specific stuff together so you can use bashisms to define PS1 an so fourth and is less confusing than two separate login rcfiles each for bash and posix sh.
[19:04:22] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[19:04:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Remote host closed the connection)
[19:04:50] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:05:52] *** Joins: Guest2547 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com)
[19:06:13] *** Quits: Guest2547 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com) (Write error: Broken pipe)
[19:06:23] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[19:06:33] *** Quits: Guest25 (~Guest25@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[19:06:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[19:06:57] *** Joins: alienhead (~solas@user/alienhead)
[19:07:25] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Remote host closed the connection)
[19:07:55] *** Joins: uuidNuniq (~weechat@222.67.5.151)
[19:08:14] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:09:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[19:09:43] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:10:42] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[19:12:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:12:53] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:12:55] *** Joins: zebrag (~chris@user/zebrag)
[19:13:46] *** Quits: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[19:14:26] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[19:14:59] *** Joins: bruce63332 (~bruce633@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com)
[19:15:12] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[19:15:15] *** Joins: OlCe` (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr)
[19:15:50] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:15:51] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Ping timeout: 256 seconds)
[19:16:06] *** Joins: nickodd (~nickodd@user/nickodd)
[19:17:16] *** Joins: zoe (~zoe@fsf/member/zoe)
[19:20:42] *** Quits: bruce63332 (~bruce633@ec2-54-179-237-162.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[19:22:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:22:34] <Helmholtz> How to unset IFS after this? https://dpaste.com/22ULGFB5H
[19:22:39] <Helmholtz> I want to read a comma-separated list
[19:24:55] <hsv_> do you care about csv quoting rules?
[19:25:05] <hsv_> or just to separate on commas?
[19:25:32] <djph> hsv_: is commas are part of your data, csv gets "problematic"
[19:25:48] <Helmholtz> it's just a string like "a,b,c"
[19:25:51] <Helmholtz> single like
[19:25:58] <Helmholtz> *line
[19:26:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[19:26:22] <djph> oh i misread
[19:26:38] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[19:27:51] *** Joins: filename (~kilitary@188.242.105.134)
[19:28:49] <Helmholtz> my problem is just setting and unsetting IFS
[19:28:53] <Helmholtz> I use a old_ifs tmp var
[19:28:53] <hsv_> IFS=, read -r -a csv <<< "aa,bb,cc"; declare -p csv
[19:28:59] <hsv_> # IFS=, read -r -a csv <<< "aa,bb,cc"; declare -p csv
[19:29:02] <shbot> hsv_: declare -a csv=([0]="aa" [1]="bb" [2]="cc")
[19:30:44] <Helmholtz> so bash array
[19:30:55] <hsv_> i would.
[19:31:13] <hsv_> for v in "${csv[@}"; do something ...; done
[19:31:38] <hsv_> for v in "${csv[@]}"; do something ...; done
[19:32:25] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:30] <hsv_> djph: i have canned solution for the "problematic" but it's not needed here ;)
[19:34:26] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:34:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 245 seconds)
[19:37:10] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[19:38:11] *** Quits: OlCe` (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr) (Remote host closed the connection)
[19:38:38] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:39:00] *** Quits: on^ (~on@50.232.121.75) (Remote host closed the connection)
[19:39:15] <hsv_> # var=aa,bb,cc; IFS=, declare csv=($var); declare -p csv
[19:39:17] <shbot> hsv_: declare -a csv=([0]="aa,bb,cc")
[19:39:29] <hsv_> meh
[19:40:30] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 252 seconds)
[19:40:34] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:42:42] *** Quits: ivanakis (~ivanakis@46.10.161.208) (Ping timeout: 252 seconds)
[19:44:54] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[19:44:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:46:58] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[19:47:00] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:47:32] <Helmholtz> is printf the best way to strip away + from numbers?
[19:47:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[19:47:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[19:48:09] <hsv_> example needed
[19:48:12] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[19:48:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:49:07] *** Joins: neo1 (~neo@103.144.161.10)
[19:49:44] <Riviera> "best"
[19:49:45] <Riviera> lol
[19:50:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:51:05] *** Joins: bora (~bora@176.33.68.247)
[19:51:47] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 272 seconds)
[19:51:56] <hsv_> # var=aa,bb,cc; mapfile -td, csv < <(printf %s "$var"); declare -p csv
[19:51:57] <shbot> hsv_: declare -a csv=([0]="aa" [1]="bb" [2]="cc")
[19:51:57] *** Joins: Betal (~Betal@user/betal)
[19:56:55] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:57:56] *** Joins: dea_ (~dea@185.4.227.84)
[20:01:49] *** Joins: luckiswithme (~luckiswit@149.167.161.64)
[20:01:53] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[20:03:06] <Helmholtz> why is this returning with 1 ? `read -r a < <(printf "%f" "34.0")`
[20:03:40] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[20:03:41] *** Joins: ferdna (~ferdna@user/ferdna)
[20:04:32] <hsv_> help read
[20:04:49] <hsv_> Exit Status: The return code is zero, unless end-of-file is encountered, ...
[20:05:13] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:ccc8:f412:8f11:27a0)
[20:05:48] *** Quits: alienhead (~solas@user/alienhead) (Ping timeout: 252 seconds)
[20:07:04] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[20:07:27] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[20:08:08] *** Parts: neo1 (~neo@103.144.161.10) (WeeChat 3.4)
[20:09:17] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:10:03] *** Joins: OlCe` (~user@amontpellier-655-1-45-169.w109-210.abo.wanadoo.fr)
[20:11:41] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[20:12:12] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[20:13:06] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[20:14:17] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:14:59] <Helmholtz> read -r var < <(my_func)...how to check my_func for success
[20:15:22] <hsv_> depends
[20:15:27] <Helmholtz> `if ! read -r var < <(my_func)` this is not correct as it checks read exit code
[20:15:38] <Helmholtz> this is a subshell actually
[20:15:55] <hsv_> wait $! || oops...
[20:18:06] <Helmholtz> where should I put this code?
[20:18:18] <Helmholtz> Isn't there a cleaner way to handle my_func error?
[20:19:33] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[20:20:17] *** Joins: Sulky_ (~Sulky@37.168.231.139)
[20:20:25] <hsv_> it depends what you really want to do.
[20:20:39] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 252 seconds)
[20:21:16] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:21:49] <Helmholtz> I want to return 1 as soon as `read -r < <(my_func)` fails
[20:22:00] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[20:22:49] <hsv_> i mean the overall script purpose.
[20:22:57] *** Quits: Sulky__ (~Sulky@37.168.231.139) (Ping timeout: 256 seconds)
[20:23:29] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[20:23:55] <hsv_> if you want to focus on the specifics then i gave the answer (note it is bash version specific too).
[20:24:08] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[20:24:16] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[20:24:52] *** Joins: neo1 (~neo@103.144.161.13)
[20:25:00] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 240 seconds)
[20:26:14] <Helmholtz> ok, I do it another way. I create a die function and inside it I do kill $$
[20:26:25] <Helmholtz> But can I use another exit code instead of sigterm?
[20:27:25] <hsv_> foo=$(my_func) || oops...; read -r <<< "$foo"
[20:27:42] *** Quits: neo1 (~neo@103.144.161.13) (Client Quit)
[20:28:40] <hsv_> if you can present a higher level description there will likely be better solutions.
[20:28:48] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:28:48] *** Quits: Yorick_ (znc@vps.freegamehosting.eu) (Quit: I'm offline now. Bye!)
[20:29:37] <hsv_> # input='+1.23,+4.56,+7.89'; IFS=, read -r -a array <<< "$input"; printf '%s\n' "${array[@]#+}"
[20:29:39] <shbot> hsv_: 1.23
[20:29:39] <shbot> hsv_: 4.56
[20:29:39] <shbot> hsv_: 7.89
[20:29:41] <hsv_> ^ strip leading '+' without subshell or for loop.
[20:30:43] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[20:30:46] *** filename is now known as leizes
[20:31:04] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[20:31:16] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[20:31:55] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[20:32:21] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:32:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:33:43] *** Joins: thiras (~thiras@user/thiras)
[20:34:12] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[20:34:35] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[20:35:28] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[20:39:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[20:40:27] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 252 seconds)
[20:42:13] *** Quits: iomari891 (~iomari891@197.210.76.39) (Ping timeout: 256 seconds)
[20:42:39] *** Joins: csm3105 (~csm3105@31.4.149.25)
[20:44:34] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:46:35] *** Joins: igemnace (~ian@user/igemnace)
[20:49:44] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[20:49:48] *** Joins: zebrag (~chris@user/zebrag)
[20:50:06] *** Joins: Yorick_ (znc@vps.freegamehosting.eu)
[20:50:34] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[20:50:34] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[20:51:18] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 272 seconds)
[20:51:21] *** Quits: luckiswithme (~luckiswit@149.167.161.64) (Remote host closed the connection)
[20:53:32] *** Quits: sinaowolabi_ (~SinaOwola@160.152.106.73) (Ping timeout: 240 seconds)
[20:53:33] *** Joins: semeion (~semeion@user/semeion)
[20:53:34] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[20:54:35] *** Joins: han-solo (~han-solo@user/han-solo)
[20:54:37] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[20:54:38] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[20:54:41] *** Joins: iomari891 (~iomari891@197.210.77.126)
[20:56:13] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[20:57:01] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[20:59:14] *** Joins: mra90 (~mra@192.55.54.53)
[20:59:38] <ormaaj> `printf` is a pretty decent solution provided you don't mind the way float conversions reformat things. Usually that's a nice feature.  When it isn't go with the `read` or use =~. The latter adds the possibility for validating inputs as a side-effect.
[21:00:02] *** Joins: rednul_ (~rednul@mc.emailserverz.com)
[21:02:47] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[21:02:58] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:04:21] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:04:46] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[21:06:00] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[21:07:28] *** Quits: rednul (~rednul@mc.emailserverz.com) (*.net *.split)
[21:07:28] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[21:07:28] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[21:07:28] *** Quits: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it) (*.net *.split)
[21:07:28] *** Quits: samnob (~samnob@user/samnob) (*.net *.split)
[21:07:28] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[21:07:28] *** Quits: invra (~invra@mail.aletheianature.es) (*.net *.split)
[21:07:28] *** Quits: randm (~randm@mx.rayprimus.com) (*.net *.split)
[21:07:28] *** Quits: sidy (~sidy@user/sidy) (*.net *.split)
[21:07:28] *** Quits: obiwahn (~heini@user/obiwahn) (*.net *.split)
[21:07:28] *** Quits: tedster (~Tedster@rampage.tedster.net) (*.net *.split)
[21:07:28] *** Quits: pranshukhandal (~ghost@envs.net) (*.net *.split)
[21:07:28] *** Quits: skylite (~skylite@46.107.44.214) (*.net *.split)
[21:07:28] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (*.net *.split)
[21:07:28] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[21:07:28] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[21:07:28] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[21:07:28] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[21:07:28] *** Quits: damyan (~damyan@mail.0x4711.org) (*.net *.split)
[21:07:28] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[21:07:28] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[21:07:28] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[21:07:28] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[21:07:28] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[21:08:52] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:09:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[21:10:53] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 256 seconds)
[21:11:03] *** Joins: bluedust (~bluedust@81.92.206.10)
[21:11:55] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 240 seconds)
[21:12:09] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[21:12:55] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[21:12:55] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[21:12:55] *** Joins: bulletxt (~kvirc@2-229-64-180.ip195.fastwebnet.it)
[21:12:55] *** Joins: samnob (~samnob@user/samnob)
[21:12:55] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[21:12:55] *** Joins: invra (~invra@mail.aletheianature.es)
[21:12:55] *** Joins: randm (~randm@mx.rayprimus.com)
[21:12:55] *** Joins: sidy (~sidy@user/sidy)
[21:12:55] *** Joins: obiwahn (~heini@user/obiwahn)
[21:12:55] *** Joins: tedster (~Tedster@rampage.tedster.net)
[21:12:55] *** Joins: pranshukhandal (~ghost@envs.net)
[21:12:55] *** Joins: skylite (~skylite@46.107.44.214)
[21:12:55] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[21:12:55] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[21:12:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[21:12:55] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[21:12:55] *** Joins: gjvc (~gjvc@user/gjvc)
[21:12:55] *** Joins: damyan (~damyan@mail.0x4711.org)
[21:12:55] *** Joins: phogg (~phogg@user/phogg)
[21:12:55] *** Joins: Philonous (~Philonous@user/philonous)
[21:12:55] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[21:12:55] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[21:12:55] *** Joins: tinystoat (~squeek@user/tinystoat)
[21:18:53] *** Joins: ivanakis (~ivanakis@46.10.161.208)
[21:20:44] *** Quits: bluedust (~bluedust@81.92.206.10) (Ping timeout: 250 seconds)
[21:23:20] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[21:23:20] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 250 seconds)
[21:23:56] *** Joins: tijuco (~tijuco@user/tijuco)
[21:24:28] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[21:27:24] *** leizes is now known as filename
[21:31:02] *** Quits: csm3105 (~csm3105@31.4.149.25) (Quit: Leaving)
[21:33:05] *** Joins: neo1 (~neo@103.144.161.8)
[21:34:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:34:38] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[21:36:53] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[21:37:12] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 250 seconds)
[21:38:15] *** Quits: filename (~kilitary@188.242.105.134) (Quit: --fast)
[21:39:22] *** Joins: filename (~kilitary@188.242.105.134)
[21:42:51] <Helmholtz> does mktemp create tmpfiles in cwd?
[21:43:13] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[21:43:13] <Helmholtz> How can I put it preferebly in /tmp/ (but some platfroms do not have write access to /tmp)
[21:43:27] <hsv_> man mktemp
[21:43:27] <Friithian> if you set -p or --tmpdir to be the current working directory
[21:43:33] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[21:43:34] <geirha> mktemp is non-standard, check the documentation on the given system
[21:43:48] <Friithian> it should default to $TMPDIR or /tmp/ failing that, but yeah. check what you hae
[21:45:49] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:45:57] *** Quits: ncrowl (~ncrowl@89-160-77-216.cust.bredband2.com) (Ping timeout: 240 seconds)
[21:46:19] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Quit: Coyote finally caught me)
[21:47:59] *** Joins: ncrowl (~ncrowl@89-160-77-134.cust.bredband2.com)
[21:48:13] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[21:51:12] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[21:55:57] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 240 seconds)
[21:56:27] *** Quits: iomari891 (~iomari891@197.210.77.126) (Ping timeout: 256 seconds)
[21:57:12] *** Joins: iomari891 (~iomari891@197.210.53.194)
[22:01:24] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:03:48] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:03:58] *** Joins: crashrep (~crashrep@user/crashrep)
[22:04:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:04:17] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:05:19] *** Joins: travisghansen (~travisgha@192.74.130.86)
[22:06:15] *** Quits: kiras (~kiras@user/kiras) (Ping timeout: 252 seconds)
[22:07:05] *** Joins: jensen (~jensen@65.78.100.184)
[22:08:49] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[22:10:53] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[22:14:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:14:29] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 252 seconds)
[22:14:32] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:16:49] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[22:18:38] *** Quits: iomari891 (~iomari891@197.210.53.194) (Quit: WeeChat 3.3)
[22:19:08] <jensen> i have a simple cli-timer app that exits after specified time. if i set that to run in the background &, pidof app shows it's still lingering after time's up. how can i get it to exit when it should exit in the background? it only exits if i close the terminal. i see no longer for it to linger
[22:21:18] *** Joins: Guest3723 (~Guest37@2606:54c0:7680:1358::b:d8)
[22:24:21] *** Joins: archie1 (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:24:44] *** Quits: Guest3723 (~Guest37@2606:54c0:7680:1358::b:d8) (Quit: Client closed)
[22:27:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[22:29:19] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Quit: Konversation terminated!)
[22:30:29] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[22:32:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:34:51] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 252 seconds)
[22:36:06] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[22:36:36] *** Joins: zzbot (~zzbot@user/zzbot)
[22:37:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:40:28] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:40:47] *** Joins: Giovanni (~Giovanni@176.55.170.26)
[22:40:54] *** Quits: ivanakis (~ivanakis@46.10.161.208) (Ping timeout: 252 seconds)
[22:41:34] *** Joins: wierzbowski (~wierzbows@dynamic-046-114-162-144.46.114.pool.telefonica.de)
[22:42:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:42:39] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[22:43:35] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:44:56] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:45:22] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:50:08] *** Joins: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1)
[22:51:59] *** Joins: soham (~soham@115.187.42.122)
[22:52:20] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[22:53:11] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[22:54:40] *** Joins: oarion7 (anonymous@user/oarion7)
[22:54:41] <twkm> most likely it is trying to write to the ctty but it has tostop set, or it is just a zombie.
[22:55:06] *** Joins: filename (~kilitary@kilitary.xyz)
[22:55:11] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.234)
[22:55:23] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[22:55:24] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:56:17] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[22:56:23] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[22:57:33] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[22:57:50] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:58:37] *** Quits: hendry1 (~hendry@210.23.22.2) (Ping timeout: 240 seconds)
[22:59:55] *** Joins: hendry1 (~hendry@210.23.22.2)
[23:01:54] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[23:01:57] *** Quits: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d) (Ping timeout: 256 seconds)
[23:03:03] *** Joins: magla (~gelignite@d5366f7c.access.ecotel.net)
[23:04:30] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (Quit: 418 I'm a teapot)
[23:06:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[23:06:56] *** Joins: particleflux (~particlef@ircb.hackthe.codes)
[23:08:22] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:08:38] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[23:09:42] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:10:16] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[23:10:22] *** Joins: ormaaj249 (~ormaaj2@user/ormaaj)
[23:12:30] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[23:14:00] *** Joins: rufito (~phil@186-79-2-135.baf.movistar.cl)
[23:14:20] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[23:15:11] *** Quits: ormaaj249 (~ormaaj2@user/ormaaj) (Client Quit)
[23:15:59] *** Joins: ormaaj249 (~ormaaj249@user/ormaaj)
[23:17:50] *** Quits: ormaaj249 (~ormaaj249@user/ormaaj) (Client Quit)
[23:18:06] *** Joins: ormaaj249 (~ormaaj249@user/ormaaj)
[23:19:06] *** Quits: roadie (~user@2a02:8108:5a40:1d87:d928:3239:7a99:9ea1) (Ping timeout: 245 seconds)
[23:19:26] *** Quits: ormaaj249 (~ormaaj249@user/ormaaj) (Client Quit)
[23:20:06] *** Joins: ormaaj249 (~ormaaj249@user/ormaaj)
[23:22:09] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[23:23:06] *** Joins: ormaaj24933 (~ormaaj249@user/ormaaj)
[23:27:07] *** Quits: ormaaj249 (~ormaaj249@user/ormaaj) (Ping timeout: 256 seconds)
[23:28:51] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:30:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:30:43] *** Quits: tedster (~Tedster@rampage.tedster.net) (Quit: ZNC 1.8.2 - https://znc.in)
[23:30:43] *** Quits: soham (~soham@115.187.42.122) (Quit: Leaving)
[23:31:38] *** Lord_of_Life_ is now known as Lord_of_Life
[23:31:51] *** Joins: tedster (~Tedster@rampage.tedster.net)
[23:32:35] *** Joins: ivanakis (~ivanakis@46.10.161.208)
[23:37:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:39:01] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 256 seconds)
[23:43:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:43:44] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[23:46:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:47:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:51:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[23:52:10] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[23:53:30] *** Quits: ivanakis (~ivanakis@46.10.161.208) (Remote host closed the connection)
[23:55:37] *** Joins: FIlystyn (~piotr@user/filystyn)
[23:55:40] <FIlystyn> I need a block comment
[23:56:02] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Quit: Good Bye! My bouncer has probably crashed or lost connection to the internet...)
[23:56:05] <larryv> why
[23:56:36] *** Joins: velix (~velix@user/velix)
[23:56:53] <velix> Interesting. Anyone with an idea, why options is empty  here? I'm sure that worked in the past :D https://bpa.st/G2FQ
[23:57:35] <larryv> it didn't
[23:57:50] <larryv> arrays aren't exported
[23:58:34] <velix> aaaaaaaaaaaaah
[23:59:08] <velix> may I ask why? :D
[23:59:36] <larryv> because Chet doesn't feel like it
[23:59:57] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
