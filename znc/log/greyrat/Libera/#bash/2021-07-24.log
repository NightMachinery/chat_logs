[00:05:12] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:05:32] *** Joins: zebrag (~chris@user/zebrag)
[00:06:47] *** Quits: magla (~gelignite@55d493d3.access.ecotel.net) (Quit: Stay safe!)
[00:12:55] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[00:13:09] *** Joins: int (~int@0x4.cx)
[00:13:12] <geirha> and none of them work on macos
[00:13:57] <earnestly> Only because m4 is more considered part of the "compiler" tools than a system utility like pax or ed
[00:14:19] <earnestly> Then again, so is vi, hm
[00:14:53] <earnestly> Well then, this could be the only posix way of creating a temporary file.  geirha, you suggest it doesn't work on macos?
[00:14:58] <geirha> whether m4 got installed via xcode or not, I have it installed, but it doesn't create any temporary files
[00:15:29] <earnestly> It should have both maketemp or mkstemp, mkstemp POSIX may be from ~2017
[00:15:34] <geirha> $ printf 'mkstemp(XXXXXX)' | m4
[00:15:36] <geirha> mkstemp(XXXXXX)
[00:15:37] <earnestly> So perhaps freebsd won't have it either
[00:16:05] <earnestly> # printf 'maketemp(XXXXXX)' | m4
[00:16:06] <shbot> earnestly: dhIp7O
[00:16:28] <geirha> $ printf 'maketemp(XXXXXX)' | m4
[00:16:30] <geirha> ONmfDu
[00:16:40] <geirha> yeah that worked
[00:16:51] <earnestly> > maketemp  The  defining  text shall be the first argument, with any trailing 'X' characters replaced with the current process ID as a string.
[00:17:17] <geirha> # printf 'maketemp(XXXXXX)' | m4
[00:17:18] <shbot> geirha: lgobYO
[00:17:43] <earnestly> # printf 'maketemp()' | m4; printf 'maketemp(hmm)' | m4
[00:17:44] <shbot> earnestly: L7OB2ShmmZiMD5T
[00:17:49] *** Quits: Liblx (~Alex@2a02:810c:280:59c:68e7:d569:ad47:d289) (Quit: WeeChat 3.2)
[00:17:57] <earnestly> It's odd that this isn't doing the process ID thing
[00:18:09] *** Quits: armin (~armin@unix.porn) (Read error: Connection reset by peer)
[00:18:18] <earnestly> Although I don't know what "process id as string" means perhaps
[00:19:09] <geirha> I think I'd just go with awk's prng combined with mkdir
[00:20:05] <earnestly> http://git.savannah.gnu.org/gitweb/?p=m4.git;a=blob;f=src/builtin.c;h=5e36ab35b5c98bedfa942f5e0091ff588548b66f;hb=refs/heads/branch-1.4#l1441
[00:20:31] <earnestly> geirha: That's fine but it's not creating a file so the solution is different in scope I'd have thought
[00:21:18] <geirha> once the dir is created, just create a file inside it named "file" or whatever
[00:21:22] <earnestly> So it seems that mkstemp is too recent for macos (and probably freebsd)
[00:21:36] <geirha> or perhaps rely on set -C
[00:21:36] <earnestly> geirha: I tend to agree with this and do it too
[00:21:59] <earnestly> I'm not sure if it's worth noting its existence
[00:23:08] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[00:28:12] <earnestly> geirha: I'm surprised macos not only doesn't implement mkstemp but then implements maketemp as mkstemp instead of as the spec says lol
[00:28:32] <earnestly> # printf 'maketemp()' | m4 -G; printf 'maketemp(hmm)' | m4 -G
[00:28:33] <shbot> earnestly: m4:stdin:1: recommend using mkstemp instead
[00:28:33] <shbot> earnestly: m4:stdin:1: recommend using mkstemp instead
[00:28:33] <shbot> earnestly: hmm
[00:28:37] <earnestly> lol
[00:29:04] <earnestly> # printf 'maketemp(foo-XXXXXX)' | m4 -G
[00:29:05] <shbot> earnestly: m4:stdin:1: recommend using mkstemp instead
[00:29:05] <shbot> earnestly: foo-000052
[00:30:28] <earnestly> greycat: https://0x0.st/-Wrv.txt (at the very end)
[00:33:09] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[00:39:42] <wwalker> I set a debug trap :  trap my_debug_report DEBUG    # but sometimes it is called where set -x is in effect, so it prints a ton of ++ lines.  I put "local -; set +x" into my_debug_report(), but then it outputs a minumum of 3 ++ lines (one each for my_debug_report, local -, and set +x)  Is there a cleaner way to disable set -x (which may or may not be in effect)?
[00:40:30] <earnestly> > Is this BASH_XTRACEFD?
[00:43:13] <earnestly> wwalker: E.g. exec {BASH_XTRACEFD}>&2 so that set -x uses something other than stderr
[00:43:34] <geirha> assuming BASH_XTRACEFD is set, { local -; set +x; } {BASH_XTRACEFD}>/dev/null
[00:43:49] <geirha> err wait, that's ... wrong
[00:45:42] <geirha> damn, do we really need eval for that? my head isn't working
[00:46:35] <zebrag> Trying to make a diff between two sets of bash-env variables. The syntax is slightly different, like quotes/no-quotes.
[00:46:44] <zebrag> Is there a tool to do it?
[00:47:27] <wwalker> where are the sets coming from? files?
[00:47:53] <wwalker> geirha: earnestly: Thank you.  I'll sort out the syntax
[00:48:43] <zebrag> wwalker: one is from a file, and one is from env
[00:49:19] <geirha> is the file a bash script you can source to get the var set?
[00:49:28] <wwalker> geirha: earnestly: This worked great!  trap how_did_it_go {BASH_XTRACEFD}>/dev/null  DEBUG
[00:49:35] <zebrag> Yes, waht I was thinking about
[00:49:53] <geirha> wwalker: that turns off set -x for the rest of the script
[00:50:50] <wwalker> zebrag: ( source file-with-envs ; env > file-converted-envs); env > scripts-converted-env; diff file-converted-envs scripts-converted-env
[00:50:53] <geirha> diff <(source env.bash && printf '%s\n' "$THEVAR") <(printf %s "$THEVAR")
[00:52:29] <wwalker> zebrag: I like geirha's solution if you only want to compare a couple of variables.  Mine is to compare them ALL and will have all kinds of vars in scripts-converted-env that aren't in file-converted-envs
[00:52:50] <zebrag> hum... reading all that
[00:53:29] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[01:01:12] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[01:05:13] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[01:07:31] *** Joins: Betal (~Beta@user/betal)
[01:09:41] <zebrag> Is the construction `<(commands)` opening a subshell for the execution of commands?
[01:09:42] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Ping timeout: 245 seconds)
[01:09:48] <greycat> yes
[01:09:52] <zebrag> right
[01:16:05] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:16:09] *** Joins: finsternis (~X@23.226.237.192)
[01:16:41] *** Joins: thiras (~thiras@user/thiras)
[01:20:00] <wwalker> geirha: This seems to work: exec 17>/dev/null; how_did_it_go(){ local -; set +x; printf "Returned %s\n" "$?"; exec {BASH_XTRACEFD}>&2; }; trap 'BASH_XTRACEFD=17 how_did_it_go' DEBUG; set -x; ls; true; false; 
[01:21:30] <wwalker> no eval() though
[01:22:07] <zebrag> `diff <(source <(command-printing-env-output); env) <(env) | sed -n '/^</{s/^< //;p}' > .envrc`
[01:22:08] <wwalker> don't need the local or set +x either:   exec 17>/dev/null; how_did_it_go(){ printf "Returned %s\n" "$?"; exec {BASH_XTRACEFD}>&2; }; trap 'BASH_XTRACEFD=17 how_did_it_go' DEBUG; set -x; ls >/dev/null; true; false;
[01:22:56] <wwalker> zebrag: nice!
[01:26:17] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[01:27:24] *** Quits: simoneb (~simone@static.39.20.203.116.clients.your-server.de) (Ping timeout: 252 seconds)
[01:27:34] *** Joins: simoneb (~simone@static.39.20.203.116.clients.your-server.de)
[01:27:46] *** Quits: chunky (~chunky@pump.network) (Ping timeout: 252 seconds)
[01:28:01] *** Joins: chunky (~chunky@pump.network)
[01:29:59] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[01:30:26] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[01:32:39] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[01:34:50] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:37:09] *** Quits: rinwa (~rinwa@141.226.14.13) (Ping timeout: 252 seconds)
[01:43:10] *** Quits: uplime (uplime@offtopia/nomad) (Ping timeout: 252 seconds)
[01:44:12] *** Joins: uplime (uplime@offtopia/nomad)
[01:45:00] *** Quits: ChmEarl (~chmearl@user/chmearl) (Ping timeout: 252 seconds)
[01:45:00] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 252 seconds)
[01:45:17] *** Joins: ChmEarl (~chmearl@user/chmearl)
[01:45:20] *** Quits: guest734 (~guest@host225.186-125-31.telecom.net.ar) (Remote host closed the connection)
[01:45:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 252 seconds)
[01:46:25] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[01:46:31] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:46:50] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 252 seconds)
[01:47:18] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[01:47:18] *** grettke is now known as grettke-away
[01:47:34] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[01:47:56] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Ping timeout: 252 seconds)
[01:47:56] *** Quits: abrotman (~abrotman@user/abrotman) (Ping timeout: 252 seconds)
[01:48:04] *** Joins: abrotman (~abrotman@neptune.ashtech.net)
[01:48:05] *** Quits: abrotman (~abrotman@neptune.ashtech.net) (Changing host)
[01:48:05] *** Joins: abrotman (~abrotman@user/abrotman)
[01:48:14] *** Joins: e36freak (~e36freak@user/e36freak)
[01:48:16] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[01:48:53] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[01:49:45] *** Quits: julius_c (~julius_c@115.red-83-41-251.dynamicip.rima-tde.net) (Quit: Leaving)
[01:50:56] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:51:15] *** Quits: mixfix41 (~user@user/mixfix41) (Ping timeout: 265 seconds)
[01:51:31] *** Joins: thiras (~thiras@user/thiras)
[01:54:10] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[01:55:17] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[01:56:19] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[01:56:34] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 265 seconds)
[01:56:54] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 272 seconds)
[01:58:43] *** Joins: Starmina_ (~Starmina@194.110.113.26)
[02:00:08] *** Quits: Starmina (~Starmina@194.110.113.89) (Ping timeout: 252 seconds)
[02:00:08] *** Starmina_ is now known as Starmina
[02:04:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[02:05:41] *** Joins: carlos (~pum@user/carlos)
[02:08:41] *** Joins: tinytoast (~squeek@user/tinystoat)
[02:08:46] *** Joins: Sasazuka__ (~Sasazuka@user/sasazuka)
[02:08:55] *** Joins: sublim21 (~sublim20@pool-108-29-101-104.nycmny.fios.verizon.net)
[02:09:35] *** Joins: Noventicx5 (~Noventicx@crux.uberspace.de)
[02:11:15] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Read error: Connection reset by peer)
[02:11:15] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:11:15] *** Quits: tinystoat (~squeek@user/tinystoat) (Read error: Connection reset by peer)
[02:11:15] *** Noventicx5 is now known as Noventicx
[02:11:33] *** Quits: sublim20 (~sublim20@user/sublim20) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: Guest6947 (~ianmacd@faust.caliban.org) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: edr (~edr@user/edr) (Ping timeout: 265 seconds)
[02:11:51] *** Joins: ianmacd (ianmacd@faust.caliban.org)
[02:12:02] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca) (Ping timeout: 265 seconds)
[02:12:15] *** ianmacd is now known as Guest254
[02:12:22] *** Joins: edr (~edr@enlo.co)
[02:12:23] *** Quits: edr (~edr@enlo.co) (Changing host)
[02:12:23] *** Joins: edr (~edr@user/edr)
[02:13:47] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-118-47-137.internet.virginmobile.ca)
[02:14:14] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[02:19:40] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[02:20:28] *** Quits: replayer (~replayer@ec2-3-94-198-85.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[02:27:24] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[02:27:49] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[02:27:55] *** Joins: timj (~timj@user/timj)
[02:34:27] *** mnrmnaugh is now known as BMCC
[02:38:17] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[02:39:31] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[02:39:45] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 276 seconds)
[02:39:46] *** Joins: ferdna (~ferdna@user/ferdna)
[02:41:58] *** Joins: Atque (~Atque@user/atque)
[02:42:29] *** Quits: gpiccoli_ (~gpiccoli@user/gpiccoli) (Quit: Quit...)
[02:43:34] *** Quits: Starmina (~Starmina@194.110.113.26) (Quit: Bye)
[02:46:52] *** grettke-away is now known as grettke
[02:49:33] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[02:49:39] *** Joins: timj1 (~timj@user/timj)
[02:49:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:49:55] *** Joins: Starmina (~Starmina@194.110.113.89)
[02:51:22] *** Quits: ttyX (~ttyX@2401:4900:1f31:211:4451:90b8:debf:3909) (Quit: Leaving)
[02:54:55] *** Joins: rinwa (~rinwa@141.226.14.13)
[02:55:39] *** Joins: downunder (~downunder@110.151.122.76)
[02:59:32] *** Joins: xx (~xx@user/xx)
[03:01:12] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[03:06:22] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Read error: Connection reset by peer)
[03:08:58] *** Quits: Starmina (~Starmina@194.110.113.89) (Ping timeout: 252 seconds)
[03:10:29] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[03:11:25] *** Joins: Betal (~Beta@user/betal)
[03:24:20] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[03:25:57] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[03:30:30] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:31:22] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:26] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[03:31:43] *** Joins: jsrnop (~mark@user/jsrnop)
[03:35:01] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[03:35:40] *** Joins: Starmina (~Starmina@194.110.113.26)
[03:35:53] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[03:40:04] *** Joins: Starmina_ (~Starmina@194.110.113.89)
[03:40:14] *** Quits: Starmina (~Starmina@194.110.113.26) (Ping timeout: 252 seconds)
[03:40:14] *** Starmina_ is now known as Starmina
[03:49:03] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[03:49:31] *** Joins: Strykar (~wakka@signald/Strykar)
[03:49:55] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[03:50:05] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[03:50:54] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:51:20] *** Joins: seninha (~seninha@user/seninha)
[03:51:35] *** Quits: Sasazuka__ (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:52:59] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[03:53:12] *** Joins: thiras (~thiras@user/thiras)
[03:57:14] *** grettke is now known as grettke-away
[03:59:24] *** Joins: Raguile (~Raguile@user/raguile)
[04:02:57] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[04:03:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:06:20] *** Joins: darkbit (~db@152.32.99.67)
[04:07:50] *** grettke-away is now known as grettke
[04:08:38] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 272 seconds)
[04:11:55] *** Joins: Nintendo (~weechat@user/great)
[04:12:41] *** __jmcantrell__ is now known as jmcantrell
[04:12:55] *** Joins: mixfix41 (~user@user/mixfix41)
[04:13:59] *** Joins: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[04:14:19] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 265 seconds)
[04:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:32] *** Quits: jos2 (~jos3@dyndsl-091-096-034-075.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[04:15:34] *** Joins: jos1 (~jos3@dyndsl-091-248-055-181.ewe-ip-backbone.de)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:40] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:18:28] *** grettke is now known as grettke-away
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:22:03] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[04:27:26] *** Joins: andril (~andril@2601:586:8400:113::1006)
[04:27:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[04:29:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:30:59] *** Joins: mloza (~mloza@user/atmark)
[04:33:49] <mloza> hello, how can I use sed to replace sha512 hash? This is content of the file
[04:34:01] <mloza> hash: $6$KpJ4.....
[04:34:48] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 252 seconds)
[04:35:19] <Nintendo> Your question is not clear to me.  What do you want the file's contents to be?
[04:35:48] *** Joins: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[04:36:30] <earnestly> mloza: Since it looks like a crypt format, it has a spec, so you can parse it.  Not sure what you're doing with it (updating the shadow file?)
[04:36:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:36:49] <mloza> replace with different sha512 hash
[04:36:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:36:55] <earnestly> crypt(5) even provides you with regex to do so lol
[04:37:08] *** Quits: hposca (~hposca@node-1w7jr9phoke2v1ekkbsawouqo.ipv6.telus.net) (Ping timeout: 272 seconds)
[04:37:14] <earnestly> For each hashing method
[04:37:15] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:37:50] <earnestly> For sha512crypt it suggests: \$6\$(rounds=[1-9][0-9]+\$)?[^$:\n]{1,16}\$[./0-9A-Za-z]{86}
[04:38:04] <earnestly> How nice of it
[04:40:03] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:23] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:40:48] <earnestly> mloza: Use a program to generate a crypt hash, then replace it entirely where it is found.  I'd use awk for this instead of sed
[04:41:56] <mloza> I don't need to generate the hash. I already know the replacement hash 
[04:42:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 255 seconds)
[04:42:04] <earnestly> I.e. awk -v newhash="$hash" '$2 == "oldhash" {print newhash} $2 != "oldhash"'
[04:42:17] <earnestly> mloza: No, the format, the entire string.  Not just the hash part
[04:42:44] <mloza> k let me try
[04:44:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[04:44:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:46:41] <mloza> doesnt work
[04:47:15] <mloza> earnestly: this is file's contents http://sprunge.us/5pLkYQ
[04:47:31] <earnestly> This looks like yaml
[04:47:55] <mloza> suppose I want to replace it with this hash $6$kZAwdehsMd/ZciM/$mdQucxKoS.1.HxZNlLh9Y5oSWdughnNBWevNcLEdSjasdjsajda
[04:48:28] <mloza> it is yaml
[04:49:17] <earnestly> The awk works fine but you then have to do additional tests.  Use a tool that understands yaml instead
[04:50:05] <earnestly> mloza: E.g. https://github.com/kislyuk/yq (not the Go version)
[04:50:20] <earnestly> Or whatever else you prefer
[04:50:42] <earnestly> E.g. https://github.com/grasmash/yaml-cli appears to have a way to update values based on an old and new key
[04:51:09] <earnestly> I'm sorry that you have to deal with yaml
[04:52:10] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:54:40] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[05:00:43] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[05:04:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:04:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:05:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:07:14] *** Joins: seninha (~seninha@user/seninha)
[05:16:01] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[05:16:22] *** Quits: Nintendo (~weechat@user/great) (Quit: Game over.)
[05:17:48] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[05:19:15] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[05:24:44] *** Quits: andril (~andril@2601:586:8400:113::1006) (Ping timeout: 252 seconds)
[05:24:54] *** Joins: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr)
[05:28:02] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 258 seconds)
[05:29:09] *** Quits: comruminoAlt (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[05:29:54] *** Joins: emanuele6 (~emanuele6@37.162.175.107)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[05:30:53] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[05:31:04] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[05:31:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:32:24] *** Joins: lilalinu_ (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[05:34:10] *** Joins: vlm (~vlm@user/vlm)
[05:35:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[05:36:50] *** Quits: lilalinu_ (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:40:32] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (Ping timeout: 255 seconds)
[05:40:41] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[05:42:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:48:26] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Remote host closed the connection)
[05:48:35] *** Joins: skapata (~Skapata@user/skapata)
[05:48:51] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[05:49:39] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:50:05] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:51:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:57:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:57:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:58:17] *** Quits: kr1x (kriket@gateway/vpn/protonvpn/kr1x) (Remote host closed the connection)
[05:58:31] *** Joins: hingoanashi1209 (~hingoanas@user/hingoanashi1209)
[06:03:37] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:03:45] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[06:04:19] *** Quits: emanuele6 (~emanuele6@37.162.175.107) (Quit: WeeChat 3.2)
[06:06:29] *** Joins: totenkoph (~scythe@user/totenkoph)
[06:15:25] <kurahaupo> mloza: Why the requirement to use sed? What's wrong with simply s/oldvalue/newvalue/ with appropriate escaping for .^$[*
[06:18:08] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:21:12] *** Parts: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr) ()
[06:27:47] <mute> !faq 21 > mloza 
[06:27:48] <greybot> mloza : https://mywiki.wooledge.org/BashFAQ/021 -- How can I replace a string with another string in a variable, a stream, a file, or in all the files in a directory?
[06:30:25] *** Joins: mac11 (~mac@172.58.107.240)
[06:31:12] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[06:33:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[06:34:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:39:09] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 2.9)
[06:40:43] *** Quits: richardm75 (~richardm7@2600:8801:c502:c800:645c:7f4:5533:efd) (Quit: Leaving)
[06:41:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 255 seconds)
[06:43:27] *** grettke-away is now known as grettke
[06:47:14] *** Quits: mac11 (~mac@172.58.107.240) (Ping timeout: 252 seconds)
[06:54:13] *** Joins: szutt (~szutt@116.37.2.145)
[06:56:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:56:47] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:57:04] *** Quits: yogoyo (~patrick@user/yogoyo) (Quit: WeeChat 3.2)
[06:58:35] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:58:53] *** Joins: seninha (~seninha@user/seninha)
[06:59:04] *** Quits: nickodd (~nickodd@user/nickodd) (Quit: nickodd)
[06:59:23] *** Joins: nickodd (~nickodd@user/nickodd)
[07:01:56] *** Joins: fluter (~fluter@user/fluter)
[07:03:30] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:27c5:b36:8a5d:9ea3) (Ping timeout: 240 seconds)
[07:03:39] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[07:09:16] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:10:26] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[07:13:53] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[07:19:13] *** Joins: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net)
[07:21:17] *** Joins: jos2 (~jos3@dyndsl-091-096-044-236.ewe-ip-backbone.de)
[07:22:41] *** Quits: Codaraxis__ (~Codaraxis@141.98.255.143) (Ping timeout: 255 seconds)
[07:23:04] *** Quits: magyar (~magyar@user/magyar) (Read error: Connection reset by peer)
[07:25:14] *** Quits: jos1 (~jos3@dyndsl-091-248-055-181.ewe-ip-backbone.de) (Ping timeout: 265 seconds)
[07:25:39] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[07:25:49] *** Quits: reset (~reset@user/reset) (Quit: reset)
[07:26:19] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[07:27:01] *** Joins: magyar (~magyar@user/magyar)
[07:30:40] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:41] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:30:46] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[07:33:26] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:33:37] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:35:02] *** Joins: tccki (~tccki@box.webslate.co.nz)
[07:39:30] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:39:35] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:40:02] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:37] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[07:44:05] *** Joins: tejr (~tejr@user/tejr)
[07:47:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:48:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:49:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:49:46] *** grettke is now known as grettke-away
[07:54:43] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[07:54:53] *** Quits: francis (francis@user/francis) (Quit: rb)
[07:55:38] *** Joins: francis (francis@user/francis)
[07:55:38] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:55:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[08:02:31] *** Quits: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au) (Read error: Connection reset by peer)
[08:02:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:03:30] *** Joins: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au)
[08:04:17] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 250 seconds)
[08:05:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[08:11:10] *** Quits: sublim21 (~sublim20@pool-108-29-101-104.nycmny.fios.verizon.net) (Quit: Leaving)
[08:11:29] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:11:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:11:40] *** grettke-away is now known as grettke
[08:13:54] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:15:26] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[08:17:51] <cmsimon> hi.
[08:25:58] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:26:08] *** grettke is now known as grettke-away
[08:26:14] <michigan> hey
[08:28:37] *** grettke-away is now known as grettke
[08:32:37] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 245 seconds)
[08:32:46] *** __jmcantrell__ is now known as jmcantrell
[08:33:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:38:11] *** Quits: ccl_ (ccl@shell.xshellz.com) (Quit: leaving)
[08:38:36] *** Quits: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[08:46:58] *** Joins: gnoo (~gnoo@user/gnoo)
[08:49:07] *** Joins: Raguile (~Raguile@user/raguile)
[08:50:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[08:54:44] *** Quits: xD- (~|_|@194.5.249.141) (Quit: bye)
[08:54:58] *** Joins: xD- (~|_|@194.5.249.141)
[08:55:02] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Remote host closed the connection)
[08:56:12] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[08:56:29] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[08:58:16] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:01:53] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[09:02:20] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[09:02:26] *** Joins: gline (~yashi@p508be576.dip0.t-ipconnect.de)
[09:04:42] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[09:05:46] *** Quits: gline_ (~yashi@p508bed17.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[09:11:15] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:13:25] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[09:19:12] <birkoff> is there a way to make bash not autocomplete immediately when hitting tab but display options?
[09:20:12] <smlavine> That normally happens if there is more than one option, no?
[09:20:19] <birkoff> not here no 
[09:20:53] <birkoff> the first option gets completed immediately, and further tabs can cycle them
[09:21:18] <smlavine> try `bind 'set show-all-if-ambiguous on'`
[09:21:34] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:22:01] <birkoff> you are combining things there I think
[09:22:13] <birkoff> set and binds don't go together 
[09:22:18] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[09:23:16] *** Joins: timj2 (~timj@28-253-142-46.pool.kielnet.net)
[09:23:23] *** Joins: vishal (~vishal@fedora/vishal)
[09:23:42] <birkoff> anyway I already have that option set in inputrc
[09:24:29] <smlavine> Welp, that's the extent of my knowledge
[09:24:38] <birkoff> thanks though ;)
[09:24:54] *** Quits: timj1 (~timj@user/timj) (Ping timeout: 256 seconds)
[09:25:18] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:29:39] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 250 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:44] <llua> do you enable menu completion
[09:32:19] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:44] <birkoff> TAB is menu-complete
[09:34:27] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 276 seconds)
[09:35:45] <llua> that is why
[09:37:42] *** Joins: zenloading (~zenloadin@user/zenloading)
[09:38:28] <birkoff> what should it be then ? 
[09:42:23] *** Joins: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr)
[09:46:40] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[09:47:32] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:48:30] <llua> comment out the bind that makes it menu-complete and you will get the default; i don't know what it is, i don't use bash
[09:51:54] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[09:55:45] *** Joins: sidy (~Tia@172.83.40.74)
[09:57:45] *** Quits: yuckey2d (~yuckey2d@66.115.145.202) (Quit: The Lounge - https://thelounge.chat)
[10:03:10] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:06:07] *** Joins: tccki (~tccki@box.webslate.co.nz)
[10:06:09] *** Joins: t0kie (~t0kie@user/t0kie)
[10:06:37] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:11:04] *** Quits: marw (4988ea31b1@knopi.disroot.org) (Remote host closed the connection)
[10:11:46] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[10:12:47] *** Joins: Atque (~Atque@user/atque)
[10:17:28] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[10:20:57] *** Joins: yuckey2d (~yuckey2d@66.115.145.202)
[10:20:57] *** Quits: yuckey2d (~yuckey2d@66.115.145.202) (Remote host closed the connection)
[10:21:09] *** Joins: yuckey2d (~yuckey2d@66.115.145.202)
[10:21:50] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[10:22:37] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[10:24:56] *** Quits: tccki_ (~tccki@box.webslate.co.nz) (Read error: Connection reset by peer)
[10:25:48] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 276 seconds)
[10:29:13] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:32:08] *** Parts: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) ()
[10:32:41] *** Joins: fling (~fling@user/fling)
[10:46:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:46:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[10:47:28] *** Lord_of_Life_ is now known as Lord_of_Life
[10:50:23] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[10:50:56] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[10:52:51] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Ping timeout: 250 seconds)
[10:55:00] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:55:27] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[10:55:33] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:58:16] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[10:58:39] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[10:59:42] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 245 seconds)
[11:00:24] *** Joins: kj (~kj@kj.aerisnetwork.net)
[11:02:12] *** Quits: LiftLeft (~LiftLeft@37.19.198.39) (Ping timeout: 245 seconds)
[11:14:50] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:18:23] *** Quits: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) (Ping timeout: 252 seconds)
[11:18:41] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 265 seconds)
[11:24:31] *** Joins: sky- (~sky@user/sky-)
[11:27:46] *** Joins: LiftLeft (~LiftLeft@154.16.192.65)
[11:29:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:31:51] *** Quits: af (~af@awalgarg.me) (Ping timeout: 250 seconds)
[11:33:51] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[11:43:54] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[11:45:30] *** Quits: LiftLeft (~LiftLeft@154.16.192.65) (Ping timeout: 240 seconds)
[11:48:40] *** Joins: alzgh (~alzgh@216.155.158.214)
[11:53:55] *** Joins: fling (~fling@user/fling)
[11:54:03] *** Parts: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr) ()
[11:55:46] *** Quits: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au) (Read error: Connection reset by peer)
[11:56:43] *** Joins: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au)
[11:57:21] *** Joins: foetus (~norbi@77.64.144.123)
[11:57:49] *** Joins: siodor (~quassel@140.238.211.102)
[11:57:55] *** Quits: foetus (~norbi@77.64.144.123) (Client Quit)
[11:58:31] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[11:59:21] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[12:05:42] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:14:14] *** Joins: af (~af@awalgarg.me)
[12:14:16] *** Joins: fling (~fling@user/fling)
[12:14:44] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[12:15:02] *** Joins: straykitten (~straykitt@subs24-116-206-8-24.three.co.id)
[12:15:54] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 258 seconds)
[12:16:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:19:15] *** Joins: earnestly (~earnest@user/earnestly)
[12:20:48] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:27:51] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[12:32:46] *** Joins: foetus (~norbi@77.64.144.99)
[12:33:03] *** Joins: nobody__ (~nobody@host-82-54-32-140.retail.telecomitalia.it)
[12:33:25] *** Quits: foetus (~norbi@77.64.144.99) (Client Quit)
[12:33:56] *** Joins: rendar (~rendar@user/rendar)
[12:37:29] *** Joins: fling (~fling@user/fling)
[12:39:32] *** Quits: useretail (~useretail@185.132.19.151) (Quit: Leaving)
[12:42:18] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 246 seconds)
[12:44:11] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:44:21] *** Joins: ztx (~ztx@user/ztx)
[12:45:08] *** Joins: foetus (~norbi@77.64.144.99)
[12:45:55] *** Parts: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) ()
[12:47:51] *** Quits: foetus (~norbi@77.64.144.99) (Client Quit)
[12:57:27] *** Joins: Bhavuk (~BTaneja@122.173.25.167)
[12:59:29] *** Joins: lavaball (felix@31.204.155.215)
[13:01:35] *** Quits: gnoo (~gnoo@user/gnoo) (Remote host closed the connection)
[13:10:11] *** Joins: p-i-_ (~Ohmu@node-mzc.pool-1-4.dynamic.totinternet.net)
[13:12:31] <p-i-_> How might I go about making a script that will execute the same Python program (but with CLI params e.g. 4 (NCORES) and 2 (CORE#)) on all 4 cores of my machine?
[13:14:12] <p-i-_> My thought is to simply invoke 4x in a loop, background using &, and redirect stdout/stderr to e.g. log.core3.txt
[13:14:26] *** Joins: tfisgnag (~tfisgnag@181.199.144.48)
[13:14:49] *** Parts: tfisgnag (~tfisgnag@181.199.144.48) ()
[13:18:17] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 252 seconds)
[13:18:59] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:20:09] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[13:23:55] <p-i-_> https://bpa.st/Z2JA seems to do it
[13:24:31] *** Joins: useretail (~useretail@185.132.19.151)
[13:26:02] *** Quits: straykitten (~straykitt@subs24-116-206-8-24.three.co.id) (Read error: Connection reset by peer)
[13:30:00] <furrymcgee> make -j4 core1.txt core2.txt ...
[13:31:42] *** Joins: gabriele (~gabriele@user/gabriele)
[13:33:36] *** Quits: t0kie (~t0kie@user/t0kie) (Quit: Leaving)
[13:35:14] <p-i-_> furrymcgee: That's interesting. Could you elaborate?
[13:35:31] <p-i-_> Also, is there any way to notify once each process completes?
[13:35:53] <p-i-_> Other than checking the logfiles periodically to see if they are no longer open...?
[13:38:51] *** Joins: straykitten (~straykitt@subs24-116-206-8-27.three.co.id)
[13:40:37] <p-i-_> I see I can use `wait`. So while I don't get notification of the individual finish-times, I can at least catch ALL-DONE.
[13:41:48] <geirha> !wait-n
[13:41:48] <greybot> Run up to 5 processes in parallel (bash 4.3): i=0 j=5; for elem in "${array[@]}"; do (( i++ < j )) || wait -n; my_job "$elem" & done; wait
[13:43:10] <p-i-_> python test.py $NCORES $i > log_$i 2>&1; echo "$i terminated" &  # This does the trick, it seems
[13:43:40] <geirha> missing { } around that
[13:43:58] <geirha> { python ...; printf '%s terminated\n' "$i"; } &
[13:44:12] <geirha> you only ran the echo in background
[13:45:37] *** Joins: gnoo (~gnoo@user/gnoo)
[13:48:12] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:49:02] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:49:05] <p-i-_> Wonderful! 15min of bash >> 8h of floundering with python multiproccesing module
[13:50:30] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:51:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:52:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:55:54] *** Quits: zenloading (~zenloadin@user/zenloading) (Remote host closed the connection)
[13:56:26] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[13:57:51] *** Joins: zenloading (~zenloadin@user/zenloading)
[13:59:03] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:59:44] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 268 seconds)
[14:04:12] <p-i-_> How come I'm getting a command substitution error here: https://bpa.st/TVBQ ?
[14:04:55] <geirha> a function in bash is a command
[14:05:11] <geirha> you run it as any other command. That means no ()
[14:07:28] <geirha> also, you can use the special SECONDS variable to get the elapsed time.
[14:07:50] <geirha> # SECONDS=0; sleep 2; printf 'SECONDS: %s\n' "$SECONDS"
[14:07:53] <shbot> geirha: SECONDS: 2
[14:09:45] <p-i-_> Wonderful!
[14:11:04] <p-i-_> I am saved rearchitecting my entire pipeline. Just gotta watch out for the velociraptors https://xkcd.com/292/
[14:20:13] *** Joins: Adoi (~Adoi@user/adoi)
[14:32:17] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[14:33:13] *** Joins: w0ng (~w0ng@103.1.212.140)
[14:35:54] *** Joins: replayer (~replayer@ec2-3-94-198-85.compute-1.amazonaws.com)
[14:40:31] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:df8e:d579:d268:b9c7)
[14:42:09] *** Joins: frostwork (~frostwork@user/frostwork)
[14:45:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:45:33] *** Joins: dub_a (~dub_a@static-198-54-131-84.cust.tzulo.com)
[14:46:03] *** Joins: ttyX (~ttyX@2401:4900:1f31:211:5595:de88:e355:c1e4)
[14:46:11] *** Joins: rando25892 (~sthk@user/rando25892)
[14:49:24] *** Quits: crawler (~crawler@user/crawler) (Quit: ZNC - https://znc.in)
[14:50:30] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Remote host closed the connection)
[14:50:56] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[14:52:33] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[14:56:17] *** Quits: sidy (~Tia@172.83.40.74) (Ping timeout: 255 seconds)
[15:02:09] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[15:03:50] *** Joins: w0ng (~w0ng@103.1.212.68)
[15:05:02] *** Joins: seninha (~seninha@user/seninha)
[15:06:10] *** Quits: rando25892 (~sthk@user/rando25892) (Quit: Changing server)
[15:07:28] *** Quits: w0ng (~w0ng@103.1.212.68) (Client Quit)
[15:08:13] *** Joins: w0ng (~w0ng@103.1.212.140)
[15:09:26] <earnestly> The ease of expressing parallel stuff in the shell is an underrated aspect of it
[15:11:09] *** Quits: wwilly (~wwilly@217.140.99.251) (Ping timeout: 276 seconds)
[15:16:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[15:17:07] *** Joins: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net)
[15:18:45] *** Quits: straykitten (~straykitt@subs24-116-206-8-27.three.co.id) (Quit: Leaving)
[15:19:20] <alzgh> what is the difference between `>` and `&>`?
[15:24:38] *** Joins: stemid (~nocturnal@i-lands.anark.ist)
[15:25:32] <Patsie> !&>
[15:25:33] <greybot> &> is a bash-specific feature. «&>file» is equivalent to «>file 2>&1». There is no &>> until Bash4. Use «>>file 2>&1» instead. We recommend not using &> or &>> in scripts, because it will break some valid scripts (see !badredir), and is an unintuitive syntax for beginners.
[15:26:19] *** Joins: p3rL (~uid0@user/p3rl)
[15:26:41] <stemid> hey I have a list of dir names in a text file and I'm doing this while read -r dir; do ssh server "tar --exclude '*.log' -cvf - /var/www/$dir" | zstd --stdout > "Backups/$dir-$(date +'%Y%m%d.%H%M%S.%s').tar.zstd"; done </tmp/dirs.txt but it only does the first line in the file and then exits with 0 and deos not proceed.
[15:28:57] *** Joins: ccl (ccl@shell.xshellz.com)
[15:29:15] <p3rL> hello ... how do i comparison if time is greater than 1 hour https://termbin.com/cefzo
[15:31:38] <alzgh> Patsie I understand that `>` redirects only the standard output while `&>` redirects both std output and std error. Is that correct?
[15:32:09] <emanuele6> alzgh: correct
[15:32:18] <earnestly> alzgh: See the greybot message, it shows you what it's equivalent to
[15:32:50] <alzgh> earnestly I learned that from the greybot message. I wanted to confirm my understanding.
[15:32:51] <emanuele6> there is also `|&` that "pipes" both stdout and stderr
[15:33:08] <alzgh> O, nice. didn't know that.
[15:33:18] <earnestly> p3rL: I assume that's (day-)?hour:minute:second?
[15:33:19] *** Quits: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[15:33:19] *** Joins: rando25892 (~sthk@user/rando25892)
[15:33:36] <p3rL> earnestly yes
[15:33:43] <p3rL> DD:HOUR:min:SEC
[15:33:48] <p3rL> DAY-*
[15:33:54] *** Quits: nobody__ (~nobody@host-82-54-32-140.retail.telecomitalia.it) (Ping timeout: 276 seconds)
[15:34:21] <earnestly> p3rL: So if day exists then it's greater than 1 hour, this much is simple.  The next is if the hour: part is greater than one hour
[15:34:53] <p3rL> but some have only minutes 
[15:35:02] <shalok> How do I force bash to treat $! as last background pid instead of trying to do history expansion?
[15:35:07] <p3rL>  9093       00:14 myprogram
[15:35:07] <p3rL>  9434       00:10 myprogram
[15:35:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:35:20] <earnestly> p3rL: If there's no hour then it's clearly not creater than one hour and so it doesn't matter
[15:35:35] <alzgh> if hour exists, it's always equal/greater than one
[15:35:37] <p3rL> earnestly how do i get only those which are greater than 1 hour
[15:35:51] <p3rL> ps -eo pid,etime,comm --sort=start_time | grep myprogram
[15:36:02] <shalok> Ooh, ${!} seems to do the trick.
[15:36:24] <shalok> But strangely sometimes the braces are not necessary and $! still expands to the PID.
[15:36:41] <earnestly> p3rL: case $timestamp in *-*:*:*) must be greater ;; *:*:*) hour=${timestamp%%:*}; if [ "$hour" -ge 1 ]; then greater; fi ;; *) ignore the rest; esac
[15:36:44] <shalok> I don't understand why sometimes the braces are required and other times they're not.
[15:36:46] <earnestly> p3rL: For example
[15:37:02] <earnestly> p3rL: You might want to use awk for it instead
[15:37:28] <p3rL> yeah awk 
[15:37:54] <earnestly> p3rL: And since you're using procps ps you might as well use -C instead of bothing with grepping for your comm
[15:38:44] <p3rL> earnestly can you give me a cmd to get list of pids > 1hr
[15:44:47] <earnestly> p3rL: I would use `ps -o pid=,etimes= -C myprogram | awk '$2 > 3600'
[15:46:13] <p-i-_> earnestly: Yes, I now have a super-clean interop between Python and BASH. Each doing the things it does best. And I can 'tail -f' my program output logfile in a separate window. I spent 8 hours mangling my Python code structure to do it entirely in Python yesterday, and it was a nightmare.
[15:46:39] <earnestly> p3rL: Or `pgrep -afO 3600 myprogram'
[15:47:01] <earnestly> Depending on how exact "myprogram" has to be in the match you can tune these
[15:47:58] <earnestly> p-i-_: To be fair it might not be so bad if you had a deep knowledge of python and how to wrangle these things, the shell is a bit more forgiving which is both its strength and weakness
[15:49:48] <p-i-_> sure, I see it as an efficient use of engineering-force.
[15:50:42] <p-i-_> I've had to go the other way in the past too, embedding BASH chunks into Python code to wrap ffmpeg. Not so pretty the other way around.
[15:50:43] *** Quits: alzgh (~alzgh@216.155.158.214) (Ping timeout: 246 seconds)
[15:54:18] *** Joins: BashTux (~BashTux@180-150-9-97.b49609.syd.static.aussiebb.net)
[15:57:44] <earnestly> p3rL: (The pgrep is more de facto portable than your (or my) use of ps)
[15:59:59] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 268 seconds)
[16:00:47] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[16:02:29] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[16:03:03] <BashTux> Soliton: I optimised my script, it no longer uses any "echo's" :D , https://pastebin.com/raw/sq164n3E 
[16:05:57] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[16:21:27] *** Joins: thiras (~thiras@user/thiras)
[16:22:25] <earnestly> BashTux: `ping 0xACD910EE'
[16:28:31] *** Quits: downunder (~downunder@110.151.122.76) (Quit: WeeChat 3.2)
[16:28:55] <stemid> is there some sort of subshell stdout buffer that might cause problems when I do while read -r line; do ssh long-command-with-lots-of-stdout; done < <(grep -v '^#' lines.txt) ? because I tried in many ways to get this to work but eventually I just had to flatten all the lines from lines.txt and do a for loop instead.
[16:29:14] <stemid> it always exited after running the first line's command when I used the subshell and while read.
[16:29:28] *** Quits: carlos (~pum@user/carlos) (Remote host closed the connection)
[16:30:22] <p3rL> earnestly thanks. 
[16:31:57] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[16:33:52] *** Joins: Atque (~Atque@user/atque)
[16:35:43] <earnestly> stemid: read -ru9 ....; done 9< <(...).  If this is the problem of ssh consuming your stdin
[16:36:00] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[16:36:33] *** Joins: sgn (~sgn@user/sgn)
[16:37:46] *** Joins: Bhavuk_ (~BTaneja@122.173.26.48)
[16:37:47] <stemid> I'm not sure what the problem is. but thanks for the suggestion. so you're using a separate fd to avoid exhausting stdin
[16:37:59] <stemid> now the for loop worked but just because I'm curious I need to try this
[16:39:44] <earnestly> For loops over input suffers from IFS splitting problems, do not assume it "works" because it usually only does so by accident
[16:39:57] <earnestly> Even passing commands to ssh needs special care; e.g. https://mywiki.wooledge.org/BashFAQ/096
[16:40:06] *** Quits: Bhavuk (~BTaneja@122.173.25.167) (Ping timeout: 265 seconds)
[16:40:25] <earnestly> stemid: Maybe for future use you could move to something like mitogen
[16:43:46] *** Joins: rememberYou (~someone@user/rememberyou)
[16:46:08] *** Quits: kyr (~kyr@167.71.50.12) (Remote host closed the connection)
[16:50:05] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:53:02] *** Quits: timj2 (~timj@28-253-142-46.pool.kielnet.net) (Quit: Leaving.)
[16:53:12] *** Joins: timj1 (~timj@user/timj)
[16:55:09] *** Joins: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b)
[16:59:03] *** Joins: ttyX_ (~ttyX@122.179.216.141)
[17:00:14] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[17:00:14] <stemid> just had a chance to try it with your suggestion and now my original command works fine. thanks 
[17:00:20] <stemid> I have to write this down now
[17:00:34] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:01:54] *** Quits: ttyX (~ttyX@2401:4900:1f31:211:5595:de88:e355:c1e4) (Ping timeout: 240 seconds)
[17:02:39] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:04:33] *** Joins: reset (~reset@user/reset)
[17:04:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:05:21] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:06:58] *** Joins: Kvothe (~weechat@user/elodin)
[17:08:25] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:08:40] *** Joins: ttyX__ (~ttyX@122.179.216.141)
[17:09:02] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:12:13] *** Quits: ttyX_ (~ttyX@122.179.216.141) (Ping timeout: 258 seconds)
[17:13:06] *** Quits: ttyX__ (~ttyX@122.179.216.141) (Ping timeout: 240 seconds)
[17:13:27] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[17:15:52] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[17:21:56] *** Joins: alzgh (~alzgh@216.155.158.214)
[17:22:23] *** Joins: wwilly (~wwilly@217.140.99.251)
[17:37:28] *** Quits: replayer (~replayer@ec2-3-94-198-85.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[17:39:14] *** Joins: ttyX (~ttyX@122.179.193.54)
[17:39:42] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:40:36] *** Joins: Kvothe (~weechat@user/elodin)
[17:41:12] <shalok> I vaguely remember reading that bash will sometimes exec the last command instead of doing a full fork+exec.
[17:41:29] <shalok> I'm having trouble finding any documentation on this though.
[17:42:01] <shalok> Is this actually a thing? Does someone know what it's called in the man page?
[17:42:19] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:44:16] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:44:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:45:40] <twkm> sounds like you mean something like what the lastpipe option does.
[17:47:46] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[17:47:57] *** Joins: unclutter (~gentoo@60.81-166-246.customer.lyse.net)
[17:50:08] *** Joins: fling (~fling@user/fling)
[17:51:05] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[17:52:33] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[17:53:07] <Atque> Has anyone read fork() considered harmful?
[17:53:39] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:53:51] *** Parts: p3rL (~uid0@user/p3rl) ()
[17:54:59] <twkm> not i.  what's the premise?
[17:55:21] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[17:55:53] <kurahaupo> shalok: sounds like you're thinking of shopt lastpipe
[17:56:15] <kurahaupo> and twkm beat me to the punch again
[17:57:05] <kurahaupo> shalok: it also occurs automatically on the last command in a () subshell
[17:58:58] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[18:00:44] *** Joins: Kvothe (~weechat@user/elodin)
[18:02:31] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:03:24] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[18:03:34] <shalok> kurahaupo: Why doesn't it happen here? https://ideone.com/kMuzDn
[18:06:15] <shalok> Also I think it sometimes happens even without subshells
[18:07:20] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:07:37] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 245 seconds)
[18:07:54] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7142:b3a2:6cdc:662b)
[18:11:03] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[18:11:17] *** Joins: BUSY (~BUSY@user/busy)
[18:17:13] *** Quits: eqw (~eqw@31.134.178.99) (Ping timeout: 268 seconds)
[18:17:55] *** Joins: eqw (~eqw@31.134.178.99)
[18:20:19] <kurahaupo> shalok: yeah it's not guaranteed, depends on shell versions, etc. 
[18:20:58] *** Quits: Bhavuk_ (~BTaneja@122.173.26.48) (Ping timeout: 256 seconds)
[18:26:02] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[18:26:22] *** Quits: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[18:27:40] *** Joins: Bhavuk (~BTaneja@2401:4900:c8e:5ef8:9d65:c796:8da4:3dc)
[18:27:44] *** Joins: arinov (~arinov@95.12.120.190)
[18:29:52] *** Quits: Bhavuk (~BTaneja@2401:4900:c8e:5ef8:9d65:c796:8da4:3dc) (Client Quit)
[18:30:24] *** Joins: Bhavuk (~BTaneja@106.192.89.247)
[18:31:20] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[18:31:26] *** Quits: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au) (Read error: Connection reset by peer)
[18:31:44] *** Joins: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au)
[18:32:45] *** Quits: arinov (~arinov@95.12.120.190) (Quit: WeeChat 3.1)
[18:32:50] *** Joins: zebrag (~chris@user/zebrag)
[18:33:20] *** Joins: Kvothe (~weechat@user/elodin)
[18:35:03] *** Joins: iwkse_ (~iwkse@iurit.com)
[18:35:06] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:df8e:d579:d268:b9c7) (Ping timeout: 240 seconds)
[18:35:45] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[18:35:49] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[18:36:38] *** Parts: iwkse_ (~iwkse@iurit.com) ()
[18:40:05] *** Joins: iwkse (~iwkse@iurit.com)
[18:40:24] *** Joins: LiftLeft (~LiftLeft@37.19.198.86)
[18:40:45] <iwkse> hi, is it possible to have something like that with printf, printf -- '=%.0s' {1..$n}
[18:41:17] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 255 seconds)
[18:41:33] <lopid> !{$
[18:41:33] <greybot> {$x..$y} Parameter expansion happens after brace expansion. As a result, your parameters are only expanded after bash has already failed to brace-expand from dollar-x to dollar-y. Instead, use a C-style for: for ((i=x; i<=y; i++))
[18:41:34] <twkm> no.
[18:42:32] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[18:42:54] <iwkse> twkm: ok thanks
[18:43:57] *** Joins: ferdna (~ferdna@user/ferdna)
[18:46:10] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:47:00] *** Joins: Adoi (~Adoi@user/adoi)
[18:47:50] *** Quits: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b) (Quit: WeeChat 3.2)
[18:48:18] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[18:51:04] *** Atque is now known as info
[18:51:33] *** info is now known as Atque
[18:51:57] *** Quits: Bhavuk (~BTaneja@106.192.89.247) (Read error: Connection reset by peer)
[18:52:40] *** Joins: Guest788 (~Guest78@89-76-244-70.dynamic.chello.pl)
[18:52:42] *** Joins: Crassus (~Crassus@user/crassus)
[18:54:09] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:55:04] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:55:05] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[18:55:27] *** Joins: foetus (~norbi@77.64.144.219)
[18:56:03] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[18:56:52] *** Quits: foetus (~norbi@77.64.144.219) (Client Quit)
[18:59:59] *** Quits: Guest788 (~Guest78@89-76-244-70.dynamic.chello.pl) (Quit: Client closed)
[19:02:03] *** Quits: BashTux (~BashTux@180-150-9-97.b49609.syd.static.aussiebb.net) (Ping timeout: 256 seconds)
[19:06:08] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:06:50] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[19:08:27] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[19:08:31] *** Joins: Kvothe (~weechat@user/elodin)
[19:09:38] *** Joins: Elodin (~weechat@user/elodin)
[19:10:21] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[19:10:54] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[19:12:10] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:12:42] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 240 seconds)
[19:16:13] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 265 seconds)
[19:21:08] *** Joins: JanC_ (~janc@user/janc)
[19:22:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[19:23:03] *** Quits: JanC (~janc@user/janc) (Ping timeout: 252 seconds)
[19:23:30] *** Quits: zeraphel (~daddy@2a00:a040:196:1438:96de:80ff:fefa:44a) (Ping timeout: 240 seconds)
[19:24:52] *** Joins: zeraphel (~daddy@5.29.37.93)
[19:25:32] *** Joins: nobody__ (~nobody@host-82-54-32-140.retail.telecomitalia.it)
[19:26:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:27:15] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:31:14] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[19:42:31] <emanuele6> # set {1..20}; eval 'printf "=%.0s"' '"$'{2..4}'"'
[19:42:32] <shbot> emanuele6: ===
[19:43:34] <emanuele6> # set {1..20}; eval 'printf "=%s"' '"$'{2..4}'"'
[19:43:35] <shbot> emanuele6: =2=3=4
[19:43:47] <emanuele6> or just good old ${@:2:3}
[19:44:04] <emanuele6> # set {1..20}; printf '=%s' "${@:2:3}"
[19:44:06] <shbot> emanuele6: =2=3=4
[19:46:03] <phy1729> # printf '%*s' 20 ' ' | sed 's/ /=/g'
[19:46:04] <shbot> phy1729: ====================
[19:46:25] <emanuele6> oh, printing $n '=' characters
[19:46:43] <phy1729> Could -v and ${// for no forks
[19:48:16] <lopid> but forks were given
[19:48:36] <mute> with %.0s just "$@" should do 
[19:49:07] <emanuele6> mute: the goal is to print $n '=' characters
[19:49:44] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[19:49:56] *** grettke is now known as grettke-away
[19:49:56] *** Quits: grettke-away (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:59] <mute> er yes confused myself there 
[19:52:18] <lopid> case $n in 1) printf =;; 2) printf ==; 3) printf ===; …
[19:52:52] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[19:53:43] *** Joins: Elodin (~weechat@user/elodin)
[19:55:00] *** Quits: winstonsmith (~winstonsm@109.201.152.168) (Remote host closed the connection)
[19:55:47] *** Joins: winstonsmith (~winstonsm@109.201.152.176)
[19:56:59] *** Joins: ttyX_ (~ttyX@182.68.164.252)
[19:57:01] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[19:59:00] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[19:59:23] *** Quits: dub_a (~dub_a@static-198-54-131-84.cust.tzulo.com) (Quit: WeeChat 3.2)
[20:00:41] *** Quits: ttyX (~ttyX@122.179.193.54) (Ping timeout: 265 seconds)
[20:08:20] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.234)
[20:12:04] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[20:12:49] <kurahaupo> phy1729: tr ' ' = would be simpler than sed. Or if you must use sed, use 'y/ /=/' instead of s
[20:13:15] *** Joins: akoana (~ah@user/akoana)
[20:14:45] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[20:15:02] <kurahaupo> # calculation=3**3; printf -v x '%.*s' $((calculation)) '' ; printf '%s\n' "${x//?/=}"
[20:15:03] <shbot> kurahaupo: no output
[20:16:08] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:16:39] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[20:16:50] <kurahaupo> # calculation=3**3; printf -v x '%*s' $((calculation)) '' ; printf '%s\n' "${x//?/=}"
[20:16:51] <shbot> kurahaupo: ===========================
[20:17:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:17:15] *** Joins: MercilessDeth (~brad@136.49.61.2)
[20:17:52] <shalok> On ideone, this snippet outputs both 'foo' and 'bar' as expected: https://ideone.com/aE7wqU
[20:18:05] <shalok> But on my machine it only outputs foo.
[20:18:39] <shalok> I've tried several versions of bash including 4.1, 4.4 and 5.0 and they all fail to output bar.
[20:19:06] <shalok> Is there something wrong with the code that could cause it to fail?
[20:19:22] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:19:22] <shalok> Am I doing something else wrong?
[20:19:57] <kurahaupo> shalok: reading…
[20:19:57] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:20:05] <earnestly> # trap echo\ foo EXIT; (trap echo\ bar EXIT; sleep 3600) & sleep 1; kill 0
[20:20:07] <shbot> earnestly: [1] 51
[20:20:07] *** Joins: lilali___ (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[20:20:13] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[20:20:28] <earnestly> Hm
[20:21:25] <kurahaupo> I don't consider any output is "correct" when an uncaught, unignored signal is delivered
[20:22:32] <kurahaupo> That is, I agree with your PC and think ideone is doing something weird
[20:22:49] <earnestly> kurahaupo: Their idea is to kill the subshell, which triggers the EXIT defined in that subshell, then the parent to end and trigger its own EXIT
[20:23:04] <earnestly> So bar foo makes sense
[20:23:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:23:18] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[20:23:18] <earnestly> Of course this only works with bash's idea of EXIT
[20:23:37] <kurahaupo> no, EXIT should trigger at ordinary exit. If the shell doesn't catch the signal, it will die before it can run EXIT traps
[20:23:51] <thebombzen> is there a simple way to transpose a file without relying on awk, as most of the suggestions on stackoverflow suggest
[20:23:53] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 255 seconds)
[20:23:55] <thebombzen> or should I just do that and not worty about it
[20:24:08] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[20:24:09] <earnestly> kurahaupo: That's not how bash's EXIT works though
[20:24:10] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[20:24:16] <earnestly> bash will trigger EXIT traps on signals
[20:24:29] <earnestly> It's only zsh, dash, etc. that do what you're describing
[20:24:37] <earnestly> (ksh also works like bash)
[20:24:37] <kurahaupo> earnestly: only if it can99,99 catch them
[20:24:44] *** Joins: Guest87 (~Guest87@186.sub-174-245-49.myvzw.com)
[20:25:36] <kurahaupo> I'm pretty sure you'll find it won't run EXIT traps when sent SIGKILL
[20:25:43] <earnestly> They're not sending KILL
[20:25:50] <thebombzen> kurahaupo: there's nothing you can do about SIGKILL though
[20:25:59] <earnestly> This has nothing to do with KILL
[20:26:07] <thebombzen> by design there's no way for a process to handle that properly so it's not worth worrying about handling it properly
[20:26:22] <earnestly> But I am seeing something odd here
[20:26:38] <kurahaupo> I find it grossly inconsistent to trap signals that the script does explicitly trap
[20:26:43] *** Quits: Guest87 (~Guest87@186.sub-174-245-49.myvzw.com) (Client Quit)
[20:27:11] <earnestly> Perhaps you're reading a different script to what was posted
[20:27:20] <earnestly> # trap 'echo xyz' EXIT
[20:27:21] <shbot> earnestly: no output
[20:27:29] <thebombzen> kurahaupo: bash itself catches TERM, INT, etc, so EXIT will have builtin coverage for those
[20:27:41] <earnestly> # bash -c "trap 'echo xyz' EXIT"
[20:27:42] <shbot> earnestly: xyz
[20:27:43] <kurahaupo> there's no trap … TERM in that script
[20:27:45] *** Joins: Guest87 (~Guest87@2600:1007:b128:3e6e:d063:7630:d490:ed6f)
[20:27:47] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:28:14] <thebombzen> kurahaupo: indeed, but bash itself registers a sigterm handler even if you don't trap it, which means that EXIT traps still fire if you term a script
[20:28:27] <kurahaupo> yuck
[20:28:35] <earnestly> No, this good
[20:28:35] *** JanC_ is now known as JanC
[20:29:00] <earnestly> Shells which implement it a generic "run code at end of script" are awful and complicate cleanup massively
[20:29:11] <earnestly> But
[20:29:20] <earnestly> # bash -c "trap 'echo xyz' EXIT; kill 0"
[20:29:21] <shbot> earnestly: Terminated
[20:29:25] <earnestly> # bash -c "trap 'echo xyz' EXIT TERM; kill 0"
[20:29:26] <shbot> earnestly: xyz
[20:29:26] <shbot> earnestly: xyz
[20:29:30] <earnestly> Go figure.
[20:29:48] <earnestly> I've never noticed bash behave like this before and am wondering if there's a bug in it
[20:29:59] <earnestly> 4# bash -c "trap 'echo xyz' EXIT; kill 0"
[20:30:00] <shbot> earnestly: Terminated
[20:30:06] <thebombzen> earnestly: isn't "run code at end of script" specifically for cleanup and nothign else
[20:30:17] <thebombzen> like that's kind of the point of exit traps as far as I'm aware
[20:30:19] <kurahaupo> set the cleanup in trap EXIT. then just trap exit TERM
[20:30:22] <earnestly> thebombzen: I don't think you're understanding what I mean
[20:30:37] <thebombzen> oh you mean people who abuse exit traps in ways that aren't jsut for cleanup
[20:30:58] <earnestly> thebombzen: EXIT in non-bash/ksh shells mean you can cut the code from your EXIT trap and paste it at the end of the script
[20:31:11] <earnestly> kurahaupo: Now handle INT
[20:31:15] <thebombzen> like it's literally way at the end and not a proper trap? that sounds, yuck
[20:31:26] <thebombzen> what's the point
[20:31:28] *** Joins: yewscion (~ming@2601:547:a00:7720::88e8)
[20:32:20] <kurahaupo> earnestly: INT delivered to a single process or to a process group?
[20:32:30] <earnestly> kurahaupo: So in non-bash (the unsetting of EXIT is for sh as bash) you end up with this: https://0x0.st/-WXH.txt
[20:32:41] <earnestly> As a sort of general thing
[20:33:13] <earnestly> thebombzen: Exactly, there's no point in EXIT existing the way non-bash/ksh shells implement it
[20:33:24] <earnestly> You can literally just paste the code at the end of your script and it'll work the same way
[20:33:26] <thebombzen> I see, that's exactly what you meant
[20:33:44] <thebombzen> I've seen zsh promoted a lot but this sounds annoying
[20:34:03] <earnestly> It wouldn't be so bad if INT handling wasn't like this
[20:34:21] <kurahaupo> earnestly: if people send SIGINT to a single process instead of the whole process group, why should I second-guess their intent?
[20:34:23] <earnestly> Or rather, INT does this by default but if you trap INT to cleanup you need to reimplement the logic
[20:34:35] <earnestly> kurahaupo: You still have to resend it
[20:34:57] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[20:35:14] *** Joins: zebrag (~chris@user/zebrag)
[20:35:24] *** Quits: lilali___ (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:35:34] <earnestly> kurahaupo: But you could argue whether or not ^C should leave programs in arbitrary states, not cleaning up temporary files, etc.
[20:35:40] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[20:35:49] *** Joins: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr)
[20:36:02] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[20:36:30] <earnestly> On the one hand it might be useful to inspect the temp files, on the other I don't know of many people who expect that
[20:37:36] <earnestly> # bash -c "trap 'echo xyz' EXIT; kill 0" # so this is a race apparently
[20:37:37] <shbot> earnestly: Terminated
[20:37:47] <earnestly> # bash -c "trap 'echo xyz' EXIT; kill 0; wait" # because this works
[20:37:48] <shbot> earnestly: xyz
[20:37:48] <shbot> earnestly: Terminated
[20:37:58] <kurahaupo> That's one of those half myths. If you start a child process while you have a signal ignored, the child will also be immune to it, which leads to all sorts of craziness. But the kernel will deliver SIGINT to every process in the foreground process group when the user hits ctrl-C; the shell isn't involved in "forwarding" the signal
[20:38:01] <earnestly> And why EXIT TERM produces xyz twice, and that seems like a bug
[20:38:30] <earnestly> kurahaupo: The default behaviour of INT is to resend it
[20:38:38] <earnestly> You don't have to implement that
[20:39:01] <kurahaupo> Why would it need resending?
[20:39:06] <earnestly> !sigint > kurahaupo 
[20:39:06] <greybot> kurahaupo: How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[20:39:29] <thebombzen> kurahaupo: https://0x0.st/-WXN.bash
[20:39:31] <thebombzen> try this
[20:39:33] <thebombzen> try interrupting it
[20:39:34] <thebombzen> and try terming it
[20:40:01] <kurahaupo> Or are you considering the case where a shell script is started from say crontab, so it doesn't have its own process group?
[20:40:03] <thebombzen> oh wait, I changed printf to echo and forgot to remove the \n lmao
[20:40:20] <thebombzen> I'm not sure why that matters if bash itself registers handlers
[20:40:44] <thebombzen> it doesn't matter if the thing you're interrupting does or doesn't
[20:41:14] <kurahaupo> well, it means the sub processes will get SIGINT twice - once directly as part of the process group, and then again when the shell forwards it
[20:41:17] <earnestly> kurahaupo: I'm not quite sure what the confusion is.  The default behaviour of the int signal is to resend
[20:41:32] <earnestly> This is a property of unix, not the shell or linux or anything
[20:41:36] *** Joins: smlavine_ (smlavine@sourcehut/user/smlavine)
[20:41:45] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:42:00] *** Joins: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[20:42:08] <kurahaupo> Are you sure you're not confusing "resending" and "broadcast by the kernel"?
[20:42:08] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Ping timeout: 252 seconds)
[20:42:11] <earnestly> The point I'm trying to make is that if you trap INT then you are required to reimplement this logic if you want to retain the virtues it affords (as the post explains)
[20:42:19] <earnestly> No
[20:42:30] *** Joins: Stalevar (~stalevar@user/stalevar)
[20:42:38] <earnestly> You don't have to resend it, but that just upsets geirha 
[20:42:56] <geirha> only if you capture it you have to resend it
[20:43:08] <Stalevar> Hi. I was wondering, how does bash compare to fish for an experienced user?
[20:43:15] *** Quits: lilalinux (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:43:19] <earnestly> Stalevar: 5.3
[20:43:45] <Stalevar> I like that fish has simpler syntax thus avoiding pitfalls from the topic wiki
[20:43:46] <kurahaupo> I'm going to have to read that part is the Bash source again
[20:43:53] <kurahaupo> *of
[20:43:53] <earnestly> geirha: Do you have any idea what's going on with the trap example I provided?
[20:43:54] *** Joins: lilalinu_ (~lilalinux@p549ee776.dip0.t-ipconnect.de)
[20:44:02] <Stalevar> earnestly, version?
[20:44:08] <earnestly> Stalevar: 7/5
[20:44:23] <Stalevar> is earnestly bot?
[20:44:41] <earnestly> geirha: Where without wait it doesn't have time for the EXIT trap to trigger, but if both EXIT and TERM is trapped, it fires twice
[20:45:06] <earnestly> # bash -c "trap 'echo xyz' EXIT TERM; kill 0"
[20:45:07] <shbot> earnestly: xyz
[20:45:08] <shbot> earnestly: xyz
[20:45:11] <earnestly> This seems wrong
[20:45:38] <earnestly> # dash -c "trap 'echo xyz' EXIT TERM; kill 0"
[20:45:39] <shbot> earnestly: xyz
[20:45:39] <shbot> earnestly: xyz
[20:46:03] *** smlavine_ is now known as smlavine
[20:46:10] <earnestly> But it seems more likely that I'm just not understanding something
[20:46:35] <geirha> that's reasonable. It recieves SIGTERM so it runs the trap. Then it reaches end of script, so it runs EXIT trap
[20:47:01] <kurahaupo> geirha: agreed
[20:47:02] <earnestly> Yeah, that does make sense
[20:47:53] <earnestly> geirha: But this is not normally how dash works with EXIT, that is, if it was terminated (or interrupted, etc.) it doesn't run the EXIT traps as those are only called on normal exit
[20:48:09] <geirha> yes
[20:48:15] *** Quits: lilalinu_ (~lilalinux@p549ee776.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:48:19] <earnestly> So it is somehow reaching 'normal exit' after being terminated, and I don't get that
[20:48:30] <geirha> it doesn't get terminated
[20:48:43] <geirha> You set a signal handler for SIGTERM that only runs echo xyz
[20:48:51] <geirha> it'll then continue the script
[20:49:04] <earnestly> That also makes sense
[20:49:19] *** Quits: Guest87 (~Guest87@2600:1007:b128:3e6e:d063:7630:d490:ed6f) (Quit: Client closed)
[20:50:08] <earnestly> Yeah, fair enough, this experiment is not representative then
[20:50:08] <akoana> # bash -c "trap 'echo xyz' EXIT TERM; kill 0; echo haha"
[20:50:09] <shbot> akoana: xyz
[20:50:10] <shbot> akoana: haha
[20:50:10] <shbot> akoana: xyz
[20:50:23] <geirha> earnestly: in the paste though, you should send SIGINT to $$, not -$$
[20:50:54] <earnestly> geirha: Is there any reason why not?  Since it runs two children
[20:51:05] <kurahaupo> geirha: What about if the script isn't the process group leader?
[20:51:26] <geirha> earnestly: those have already received the SIGINT. No need to send it twice
[20:51:27] <kurahaupo> You could wind up killing a parent or grandparent
[20:51:38] <earnestly> This is a fair point yeah
[20:52:26] <geirha> and if they run in the background, I assume cleanup takes care of them
[20:53:11] <earnestly> geirha: It takes care of one of them, hm
[20:53:13] *** Joins: ming (~ming@2601:547:a00:7720::88e8)
[20:53:37] <earnestly> It could be better really
[20:53:53] *** Quits: yewscion (~ming@2601:547:a00:7720::88e8) (Read error: Connection reset by peer)
[20:54:25] <kurahaupo> geirha: sorry I read your instruction backwards from $$ to -$$ ; your actual instruction makes more sense
[20:58:27] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Remote host closed the connection)
[20:59:32] <earnestly> geirha: If the child itself, which is just another program, is it the parents job to clean up that program's children if it spawns any?
[21:00:17] <earnestly> Er, if the child creates children of its own, when the child is killed is it the responsibility of the main parent to clean up the children's children?
[21:01:24] <twkm> the grandparent cannot.
[21:01:31] *** Quits: Ademan (~ademan@47.185.65.13) (Quit: leaving)
[21:01:49] *** Joins: lavaball (felix@31.204.155.215)
[21:02:24] <earnestly> twkm: Does signal propagation, e.g. kill -thepidofchild, only extend to itself?
[21:02:28] <twkm> only the parent can wait on the zombie.  as a special provision, processes that lose their parents are adopted/reparented to some other pid, traditionall 1 (init).
[21:03:14] <earnestly> twkm: In this specific example they run a while loop in the background, but the parent dies and this while loop remains
[21:03:17] <twkm> -n is a group signal, all processes in process group n.
[21:04:26] <twkm> (-1 is special, meaning this process' process group)
[21:05:12] <earnestly> -1 sends the signal to everything it has permission to send a signal to, except pid 1
[21:05:22] <twkm> of course -sig can be confused, so a signal name should be specified.
[21:05:35] <twkm> so kill -1 is different than kill -TERM -1
[21:05:52] <twkm> -TERM being the xsi shorthand for -s TERM.
[21:06:24] <akoana> isn't pid=0 for every process in the process group of the calling process?
[21:06:36] <earnestly> twkm: But the point is, if: parent -> child (-> potentially arbitrary children).  If the parent goes away, is it the responsibility of the child to clean up its children?
[21:07:14] <twkm> it is always the child's responsibility to care for its children.
[21:07:33] <earnestly> That's what I think too
[21:07:43] *** Joins: replayer (~replayer@ec2-3-94-198-85.compute-1.amazonaws.com)
[21:07:45] *** Quits: simbioz (~simbioz@user/simbioz) (Remote host closed the connection)
[21:07:56] <twkm> explicitly posix.  perhaps not other posix-like systems where bash could run.
[21:08:08] <earnestly> twkm: This is what it was refering to if you want the specific case of what the general question was for: https://github.com/Earnestly/sx/issues/22
[21:08:31] <earnestly> I can see where it would be nice
[21:08:41] <earnestly> But there are dark corners here that I don't understand
[21:09:00] <earnestly> (Mostly in how Xorg interacts with its clients and such)
[21:09:39] *** Joins: humky (~humky@user/humky)
[21:09:54] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:10:10] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Read error: Connection reset by peer)
[21:12:40] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[21:13:16] <twkm> as an aside, i'd write: while xsetroot ... && sleep 60; do :; done so that the loop ends "naturally" if either xsetroot or sleep "fails" which includes either being signalled.
[21:15:53] <earnestly> That's a nice idiom
[21:16:27] *** Quits: wwilly (~wwilly@217.140.99.251) (Quit: Leaving)
[21:16:31] *** Joins: Bhavuk (~BTaneja@122.173.29.13)
[21:16:52] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:16:58] *** Joins: simbioz (~simbioz@user/simbioz)
[21:16:59] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 255 seconds)
[21:17:25] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[21:17:30] <earnestly> twkm: The main thing that bothers me is how it depends on the child responding to the server ending rather than being explicitly asked to terminate.  But it's difficult to capture the pid of the client as in all my cases it disappears faster than the cleanup can do anything about it (pid disappears)
[21:20:00] *** Joins: merazi (~merazi@190.92.33.230)
[21:21:32] *** Joins: Adoi (~Adoi@user/adoi)
[21:22:51] *** Parts: sokle_68 (~sokle_68@ppp079167002215.access.hol.gr) ()
[21:23:08] <twkm> asynchronous not-necessarily-local clients are that way.  in generally you don't even know what pid is connected and/or sending you messages.  and they might not even be local -- you can't generally expect the server to remote into where they're running to send them a signal.
[21:28:46] <earnestly> messages like these don't help: > ERROR: X11 connection was closed unexpectedly - maybe your X server terminated / crashed?
[21:29:11] <earnestly> I'm not sure how it determines it to be "unexpectedly" when it was closed by its own exit mechanism
[21:30:19] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:30:43] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:32:57] *** Quits: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au) (Remote host closed the connection)
[21:33:15] *** Joins: kurahaupo (~kurahaupo@124-171-138-127.tpgi.com.au)
[21:33:22] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[21:34:11] *** Quits: Stalevar (~stalevar@user/stalevar) (Quit: Leaving)
[21:34:46] *** grettke is now known as grettke-away
[21:35:53] *** Joins: mikeliuk (~mikeliuk@213.205.198.158)
[21:40:53] <kurahaupo> earnestly: unexpected by the client?
[21:43:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 255 seconds)
[21:47:17] *** Joins: Betal (~Beta@user/betal)
[21:52:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[21:54:30] *** Joins: ChmEarl (~chmearl@user/chmearl)
[21:59:02] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 252 seconds)
[21:59:21] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[22:01:29] *** Quits: Bhavuk (~BTaneja@122.173.29.13) (Quit: Leaving)
[22:04:10] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:06:50] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[22:09:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:10:05] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[22:11:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:11:47] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[22:12:42] *** Joins: Starmina_ (~Starmina@194.110.113.89)
[22:12:44] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 256 seconds)
[22:13:14] *** Quits: Starmina (~Starmina@194.110.113.89) (Ping timeout: 255 seconds)
[22:13:14] *** Starmina_ is now known as Starmina
[22:14:08] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[22:14:28] *** Joins: zeden (~zeden@user/zeden)
[22:14:45] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[22:16:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:20:09] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[22:20:48] *** Quits: merazi (~merazi@190.92.33.230) (Quit: merazi)
[22:21:14] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[22:22:29] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[22:22:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:23:02] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[22:23:51] <earnestly> kurahaupo: The client spawns a child, and when the client is told to exit, its child returns that message.  But this is i3, and i3 doesn't really have a track record of caring about its children (it disowns them immediately)
[22:24:08] *** Joins: Guest31 (~Guest31@S0106001195d728bb.cg.shawcable.net)
[22:24:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:24:30] <kurahaupo> that's … awful
[22:24:31] <earnestly> kurahaupo: (Although the message is likely coming from the server exiting after the client exits
[22:26:52] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[22:27:11] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 255 seconds)
[22:27:48] *** Quits: mikeliuk (~mikeliuk@213.205.198.158) (Quit: Connection closed)
[22:29:29] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[22:30:46] *** Quits: replayer (~replayer@ec2-3-94-198-85.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[22:33:31] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[22:36:07] *** Joins: mongy (~mongy@user/mongy)
[22:36:58] *** Joins: skapata (~Skapata@user/skapata)
[22:38:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:39:48] *** Joins: sinaowolabi_ (~SinaOwola@41.190.3.14)
[22:45:30] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[22:47:55] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[22:50:35] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 255 seconds)
[22:50:39] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:52:20] *** Joins: shimbles (~shimbles@50.208.12.185)
[22:52:37] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 258 seconds)
[22:54:18] *** Quits: ming (~ming@2601:547:a00:7720::88e8) (Ping timeout: 240 seconds)
[22:56:48] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[22:59:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:01:49] *** Quits: shimbles (~shimbles@50.208.12.185) (Quit: Client closed)
[23:04:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[23:11:38] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:18:38] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[23:19:29] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[23:21:54] *** Joins: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net)
[23:21:59] *** Joins: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon)
[23:23:27] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 245 seconds)
[23:26:22] *** Quits: cmsimon (cmsimon@gateway/vpn/protonvpn/cmsimon) (Ping timeout: 245 seconds)
[23:28:54] *** Quits: Strom (strom@fedora/strom) ()
[23:30:26] *** Joins: Strom (strom@fedora/strom)
[23:41:51] <ormaaj> https://gist.github.com/ormaaj/ea10dab9724e1cd05823e2514b7a3951 Is that the cause of the parent interactive shell's job control somehow interacting with this  script I was experimenting day? The weird thing is reading the code from stdin doesn't trigger that but running the script with `bash -c` would somehow make sub-children that should be controlled by the child shell get waited on by the my interactive shell that's at least two parents removed from the test
[23:41:51] <ormaaj> script. Even `disown` has no effect. What's so different about `bash -c` with regards to job control? 
[23:42:57] <ormaaj> I know there are some differences when reading from an actual file which is why I'm explicitly calling bash as `bash /dev/fd/3`
[23:44:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:44:32] <ormaaj> er I guess it probably isn't a "file" if that's short enough to fit into PIPE_BUF but shouldn't matter as far as bash's invocation is concerned
[23:44:54] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[23:47:59] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[23:49:10] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:49:25] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[23:53:49] <ormaaj> I figured it has something to do with bash exiting prematurely when invoked with `-c`  causing all the subshells to get inherited I just didn't know why because the loop at the end won't finish until all the jobs have get `-CONT` from my job killer subshell.
[23:54:52] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[23:55:52] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
