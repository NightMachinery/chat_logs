[00:00:07] <velo> fortunately i have source control over my dotfiles
[00:00:58] <velo> but there is a long time of last time i commit
[00:01:06] <DoofusCanadensis> oops
[00:01:56] <velo> made a commit*
[00:02:27] <velo> and i've been editing zshrc file everyday
[00:03:01] <nedbat> velo: perhaps your editor has a backup?
[00:03:46] <velo> is there a way to view the history of editing after commiting?
[00:03:53] <velo> i'm using neovim
[00:04:52] *** Quits: Guest8869 (~Guest88@69.160.252.248) (Ping timeout: 246 seconds)
[00:05:38] *** Joins: cambrian_invader (~cambrian_@50-195-82-171-static.hfc.comcastbusiness.net)
[00:07:39] <velo> i've been seraching for sultion but i didn't find any
[00:07:46] <nedbat> velo: you can configure vim to keep backup copies, but you might be out of luck
[00:07:59] <velo> solution*
[00:08:46] <velo> what about git ?
[00:09:14] <velo> it has to be some history of the modification?
[00:10:26] <DoofusCanadensis> only if you've commited your changes
[00:10:43] <imMute> I guess I'm wondering "what history" ?
[00:12:09] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[00:12:23] *** Joins: irrgit (~irrgit@192.241.175.183)
[00:14:38] <bremner> surveillance footage
[00:15:56] <velo> whats that
[00:16:14] <velo> i'm new to git
[00:16:18] <bookworm> a joke
[00:16:26] <imMute> velo: what "history" are you looking for?  like how a file changed as you commit changes to it?
[00:18:23] <nedbat> velo: git knows about things you've committed.  If you don't commit, git has no idea about it
[00:18:59] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889)
[00:24:19] <velo> i think it ll be better if git has a feature to view history of changes without commiting
[00:24:27] <velo> u can view commit changes
[00:24:28] *** Quits: Crispy (~ScatMan@2001:8003:4859:fc00:85bb:803e:4ea1:eaf) (Read error: Connection reset by peer)
[00:24:47] *** Joins: Crispy (~ScatMan@101.181.58.251)
[00:25:14] <velo> u have both option
[00:26:43] <imMute> I don't know of a single SCM that makes commits/snapshots automatically and not when requested.
[00:26:51] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889) (Remote host closed the connection)
[00:27:09] <ikke> 1: you would get a lot of noise
[00:27:10] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889)
[00:27:19] <ikke> 2: it would be hard to follow what happened why
[00:27:50] <ikke> 3: snapshots would not necessarily be in a working state
[00:29:52] <imMute> you could probably build something with inotifywait and 'git commit -a'
[00:33:20] <velo> i don't think commiting every time u modify a file is efficent
[00:35:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[00:35:13] <imMute> agreed.  but you said "view history of changes without commiting",  so you'd have to come up with a rule for *when* to commit, cuz git only does it when you tell it to
[00:36:43] <velo> yea for sure
[00:36:51] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889) (Remote host closed the connection)
[00:37:08] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889)
[00:37:57] <bookworm> you'd be surprised how often I commit code while working on things...
[00:38:27] <bookworm> it's pretty much like a checkpoint in a game
[00:39:43] <velo> i guess i have to join the game then
[00:40:23] <bookworm> as for efficiency, 7 something keychords ,gs>acc plus a commit message
[00:40:24] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:68b1:6814:85e7:960b)
[00:40:24] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:68b1:6814:85e7:960b) (Changing host)
[00:40:24] *** Joins: skapata (~Skapata@user/skapata)
[00:40:42] <bookworm> and that includes looking at the diff of a file
[00:41:14] <bookworm> if it's hard for you you have a tooling issue
[00:44:50] *** Joins: alfredb (J3ygVlIbAZ@80-219-164-155.dclient.hispeed.ch)
[00:45:39] *** Joins: rahl- (~rahl@102.114.32.187)
[00:46:43] <velo> i changed my mind
[00:46:50] <velo> i'll change the game
[00:47:31] <bookworm> while you are at it, backups... especially your homedir
[00:49:19] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:29b:1f10:4078:b889) (Ping timeout: 258 seconds)
[00:49:24] *** Quits: rahl (~rahl@102.114.65.165) (Ping timeout: 268 seconds)
[00:49:49] <nedbat> velo: commit often
[00:49:49] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[00:49:59] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[00:53:35] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[00:54:16] <velo> okey dokey
[00:54:21] *** Parts: octav1a (~quassel@173.195.145.98) (~Called off to Sentinal the Sand Temple~)
[01:01:47] *** Quits: alfredb (J3ygVlIbAZ@80-219-164-155.dclient.hispeed.ch) (Quit: leaving)
[01:09:56] *** Joins: Guest88 (~Guest88@69.160.252.215)
[01:15:23] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 258 seconds)
[01:16:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:16:27] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[01:21:43] *** Joins: keypushe- (keypusher@user/keypusher)
[01:23:16] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 272 seconds)
[01:23:29] *** Joins: junktext (~junktext@109.201.152.167)
[01:23:55] *** Quits: junktext (~junktext@109.201.152.167) (Client Quit)
[01:24:58] *** keypushe- is now known as keypusher
[01:27:40] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[01:29:27] *** Quits: madewokherd (~urk@comcast.codeweavers.com) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[01:35:58] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:49] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Remote host closed the connection)
[01:46:01] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Quit: Zzzzzz...)
[01:46:02] *** Quits: canton7 (canton7@about/csharp/canton7) (Remote host closed the connection)
[01:46:06] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[01:46:14] *** Joins: neltraus (~neltraus@supernova.neltraus.de)
[01:46:21] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[01:46:22] *** Joins: canton7 (canton7@about/csharp/canton7)
[01:46:33] *** Quits: Yorick- (znc@vps.freegamehosting.eu) (Read error: Connection reset by peer)
[01:46:47] *** Joins: Yorick_ (znc@vps.freegamehosting.eu)
[01:48:39] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:50:35] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[01:51:18] *** Quits: BenjiProd (~BenjiProd@user/benjiprod) (Remote host closed the connection)
[01:57:26] *** Quits: V (~v@anomalous.eu) (Quit: We're here. We're queer. Connection reset by peer)
[01:57:51] *** Joins: V (~v@anomalous.eu)
[02:00:38] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 272 seconds)
[02:02:42] *** Joins: madewokherd (~urk@65-128-171-161.mpls.qwest.net)
[02:02:55] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[02:07:52] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:12:32] <osse> lpapp: --keep-base is just a flag you can give to rebase -i so you can take advantage of its convenient way of reordering and squashing commits, and edit their messages. It does not actually re-base the current branch, nor does it change the branch you "rebase" with respect to in any way.
[02:13:20] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[02:14:09] <osse> lpapp: Long story short: it's very different from a merge
[02:14:40] *** Quits: christall (~christall@24.235.88.243) ()
[02:17:12] *** Joins: lgc (~lgc@user/lgc)
[02:18:33] *** Joins: jelmer (~jelmer@user/jelmer)
[02:18:56] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[02:22:50] *** Quits: gas51627 (uid91066@id-91066.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:37] *** Quits: Guest88 (~Guest88@69.160.252.215) (Ping timeout: 246 seconds)
[02:29:08] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 272 seconds)
[02:38:16] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[02:39:37] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[02:40:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:44:45] *** Joins: SuperLag (~akulbe@user/superlag)
[02:48:11] <ash_worksi> do you keep a sql schema file in git?
[02:51:02] <nedbat> ash_worksi: yes, if you want to collaborate on it and know how it has changed
[02:51:25] <ash_worksi> nedbat: do you personally (or wherever you work)?
[02:51:45] <ash_worksi> I just want a little guidance and I seem to be struggling to get answers for some reason
[02:52:33] <mackerman> Do database scripts as you would without git.
[02:52:37] <mackerman> git just adds version control.
[02:54:21] <nedbat> ash_worksi: did you write the sql schema file by hand?
[02:54:47] <ash_worksi> nedbat: what is currently (not) maintained looks as though it must have been written by hand
[02:55:10] <nedbat> ash_worksi: then put it in git
[02:55:16] <ash_worksi> mackerman: I know, I am scouring channels where i know nice people exist because I can't get any straight answers from google or #database-of-choice
[02:55:38] <ash_worksi> nedbat: that's an interesting conditinoal
[02:55:40] <ash_worksi> conditional*
[02:56:02] <ash_worksi> I never thought of that; but more importantly, do you do that?
[02:56:20] <nedbat> ash_worksi: anything written by hand goes in git
[02:56:24] <DoofusCanadensis> which database of choice?
[02:56:50] <ash_worksi> postgresql
[02:57:03] <ash_worksi> (I've tried #postresql
[02:57:05] <ash_worksi> )
[02:57:11] <DoofusCanadensis> not sure about any automated tools
[02:57:27] <DoofusCanadensis> but a schema is just text so it's easy to add to a git repo
[02:58:03] <ash_worksi> DoofusCanadensis: well, I am just looking for very basic yes/no answers about how people generally manage their database migrations/schema file.
[02:58:44] <DoofusCanadensis> that might depend more on your development than specific version control
[02:58:55] <DoofusCanadensis> like using flywaydb or liquibase
[02:58:58] <ash_worksi> it apparently was too irritating in #postgresql to ask about the point/purpose of a schema file, so I've 1/2-way given up on caring and just accept it as creedo
[02:59:25] <mackerman> Which tool doesn't really matter. If you want to track files over time, use version control.
[02:59:32] <ash_worksi> DoofusCanadensis: yes, I can imagine that would impact things a bit;
[02:59:55] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[03:00:09] <ash_worksi> DoofusCanadensis: do you use either of those?
[03:00:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:42] <DoofusCanadensis> did some investigation on them at one point... then got moved far away from databases (mostlly)
[03:03:06] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 258 seconds)
[03:03:11] <ash_worksi> DoofusCanadensis: thanks; I appreciate the little insight you could give me
[03:08:05] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 258 seconds)
[03:08:10] *** Quits: durham (~durham@2620:10d:c091:480::1:9def) (Ping timeout: 240 seconds)
[03:09:06] *** Joins: jelmer (~jelmer@user/jelmer)
[03:10:37] *** Quits: jelmer (~jelmer@user/jelmer) (Read error: Connection reset by peer)
[03:13:02] *** Joins: arkho (~ccc@dynamic-acs-24-112-153-241.zoominternet.net)
[03:14:34] *** Joins: zamba (~marius@5.226.162.54)
[03:14:54] <zamba> hi.. i'm just a bit curious about how branches should be used
[03:14:59] *** Joins: jelmer (~jelmer@user/jelmer)
[03:15:10] <DoofusCanadensis> however you want to
[03:15:17] <DoofusCanadensis> this is one example !gitflow
[03:15:17] <gitinfo> The description of the gitflow branch workflow model is at http://nvie.com/posts/a-successful-git-branching-model/ while a tool to help implement this workflow is at https://github.com/petervanderdoes/gitflow  See http://sethrobertson.github.com/GitBestPractices/#workflow for other workflow suggestions/references
[03:15:36] <zamba> i have opened a new issue in my main branch.. then i created a new branch (locally) to resolve that issue.. should i then migrate the branches locally.. and then push to master?
[03:16:02] <zamba> or should i push the new branch.. create a pull request (?) and then merge it?
[03:16:08] <zamba> and then delete the branch? what is best practice?
[03:19:38] <mackerman> Short-lived branches is one way to do things, yes.
[03:19:51] <ash_worksi> thanks again DoofusCanadensis , nedbat
[03:19:52] <zamba> mackerman: so then the branches are only created locally, or?
[03:20:01] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[03:20:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:21:07] <mackerman> zamba: Often the pull request is to track the merge from your issue branch into a main branch.
[03:21:32] <mackerman> git doesn't care where the issue branch is hosted. Someone can fetch it, then merge it.
[03:21:56] <zamba> i'm just a bit unsure what is considered best practice here..
[03:22:02] <zamba> i'm pushing my code to a central git repo at work
[03:22:08] <zamba> but i'm the only one maintaining the code
[03:22:10] <mackerman> There is not one best practice.
[03:22:27] <DoofusCanadensis> you need to ask your work what practices are required there
[03:22:31] <mackerman> Only opinions on how to do things.
[03:22:47] <zamba> what if code should be tested? then maybe it makes sense to push to a different branch on the central gitlab?
[03:23:00] <zamba> so that the ones testing the code can check out that branch explicitly?
[03:23:07] <DoofusCanadensis> again. that's up to you as a developer or your team
[03:23:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[03:23:49] <DoofusCanadensis> git is a tool that you use. it doesn't define how you're supposed to use it. that's your decision either as a solo dev or as guidance from your team
[03:24:50] <mackerman> GitLab has additional tooling on top that invents  pull request as an object.  Where you can run tests from and review before merge.
[03:24:50] <DoofusCanadensis> we have two workflows at my office which are different from what I'd use with an open source project
[03:27:14] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So long, suckers)
[03:27:27] <mackerman> git itself is decentralized.  You can create whatever branches you want on your local repo, and hack on those, without ever touching a server.
[03:28:39] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[03:30:29] <zamba> i did git checkout --track origin/<branch> after doing git pull
[03:30:34] <zamba> but how do i revert back to master?
[03:33:19] <zamba> i think i messed up everything here
[03:33:35] <zamba> all of a sudden the local repo says: Your branch is ahead of 'origin/master' by 56 commits.
[03:38:41] <rahl-> ikke: belated thank you - leah2: to you too; was unaware of :cq
[03:38:53] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 244 seconds)
[03:39:08] <leah2> it's very useful :)
[03:44:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:47:40] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[03:48:58] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:51:19] *** Quits: rahl- (~rahl@102.114.32.187) (Ping timeout: 268 seconds)
[03:56:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[03:59:31] *** Quits: Erisa (~Erisa@51.15.106.41) (Quit: The Lounge - https://thelounge.chat)
[04:00:19] *** Joins: Erisa (~Erisa@51.15.106.41)
[04:04:22] *** Joins: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net)
[04:05:00] *** Quits: Erisa (~Erisa@51.15.106.41) (Client Quit)
[04:05:15] *** Joins: Erisa (~Erisa@51.15.106.41)
[04:05:49] *** Quits: Erisa (~Erisa@51.15.106.41) (Client Quit)
[04:05:59] <blahboybaz> Is that really all it takes to make my local branch be like the remote branch is 2 command  $ git fetch --all && git reset --hard origin/SinglyLinkedList
[04:06:02] <blahboybaz> ?
[04:06:12] *** Joins: Erisa (~Erisa@51.15.106.41)
[04:06:16] <blahboybaz> Or am I missing something?
[04:06:54] *** Quits: Erisa (~Erisa@51.15.106.41) (Client Quit)
[04:07:07] <blahboybaz> Well, where that branch I want to make like the remote is "SinglyLinkedList" that is
[04:07:56] *** Joins: Erisa (~Erisa@51.15.106.41)
[04:08:26] <j416> that looks like it'll suffice.
[04:08:53] <j416> with the usual disclaimer that git reset --hard will also destroy any uncommitted changes, so be careful.
[04:08:53] <blahboybaz> Just seemed too simple
[04:09:16] <j416> you can leave off --all.
[04:09:22] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Ping timeout: 244 seconds)
[04:09:28] <blahboybaz> I have someting stashed before I did that. I'm hoping that popping it is gonna put me back where I want to be3
[04:09:38] <blahboybaz> be
[04:09:43] <j416> if it can be applied, then sure.
[04:09:55] <blahboybaz> right on
[04:10:22] <j416> if your currently checked out branch has been set up to track origin/SinglyLinkedList, you can shorten to: git reset --hard @{upstream}
[04:10:32] <j416> which in turn can be shortened to: git reset --hard @{u}
[04:10:35] <j416> which in turn can be shortened to: git reset --h @{u}
[04:10:48] <j416> so, git fetch && git reset --h @{u}
[04:10:49] <j416> :)
[04:11:28] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:12:07] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[04:23:31] <blahboybaz> I've got a mess that's really scaring me. I had accidenteally dropped the wrong commit in a local rebase (the comits are listed upside down order to what I intuitively think of). Instead of dropping the last commit (at the tip) I had marked the second to last commit to be dropped. That rebase seemed to complete without issue and I realized my mistake after it was done. So I got this idea that I could get
[04:23:37] <blahboybaz> back to a more desirable state by somehow pulling in the remote amd making local match that (even though my local was ahead of the remote in other ways). So I did my  $ git fetch --all && git reset --hard origin/<branch-name>        Where I was on the branch <branch-name> and it is the branch I wanted to have changed to be like the remote. At the time I ran those 2 commands I had stashed a small change
[04:23:43] <blahboybaz> just before running them. Everything seemed to work fine but when I did a  $ git status     It said some wierd stuff about and mentioned a rebase in progress. I thought it must be referring to the rebase I did before the reset (the one that made me want to do a reset in the first place). So I did a  $ git rebase --abort      thinking that would fix it.  Now I have these scary looking lines in a couple of
[04:23:49] <blahboybaz> my files like: ">>>>>>>>>>>> STashed changes (incoming change)"  and others of that nature. The two files they appear in have had a disgusting amount of work gone into them that absolutely can not get altered in any way from what it was before all this shit started.
[04:23:54] <blahboybaz> What do I do to make it all go away and preven me suffering any loss?
[04:28:31] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:30:57] <blahboybaz> Maybe I can state that more clearly...   I was one commit ahead of the remote before the rebase. Because of my mistake when rebasing I ended up one behind the remote after the rebase. I also had a small change stashed (in order to perform the rebase). I lost 2 commits locally when I only wanted to drop the last one. I did a hard reset of the branch that needed fixing to make it match the remote. It seemed
[04:31:03] <blahboybaz> I was back to where I wanted (with only the last commit gone). I popped my stash and did a git status but the output said something about a rebase in progress. I did an abort on the rebase. Now I have files contian lines that seem to indicate a change has either happened to them or is going to happen to them and I can't have either of those. What am I even dealing wtih here?
[04:32:26] <j416> !conflict
[04:32:26] <gitinfo> [!eekaconflict] Merge conflicts are a natural part of collaboration. When facing one, *don't panic*. Read "How to resolve conflicts" in man git-merge and http://git-scm.com/book/ch3-2.html#Basic-Merge-Conflicts then carefully go through the conflicts. Picking one side verbatim is not always the right choice! A nice video explaining merge conflicts: https://www.youtube.com/watch?v=zz7NuSCH6II
[04:32:47] <blahboybaz> There is no collaboration its me and my own private repo
[04:33:21] <j416> if you believe you did a mistake during the rebase, you can abort it (git rebase --abort) and start over.
[04:35:20] <blahboybaz> How do I get my files back to the way they were? Certain operations have already been performed (past tense) and now I am where I described
[04:36:01] <blahboybaz> I'm talking about over 700 lines of code in one file
[04:36:13] <blahboybaz> went through hell to get that code right
[04:36:24] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Ping timeout: 256 seconds)
[04:38:02] <j416> abort the rebase
[04:39:00] <j416> if you ended up in an odd state, you can always reset out of it
[04:39:13] <j416> note disclaimer above
[04:39:15] <j416> git reset --hard
[04:39:30] <blahboybaz> j416: afaict that has alread been done (but perhaps not the way I would have wanted to) -- too late now
[04:40:06] <j416> you can also reset to a specific state if you need to, just like you mentioned above.
[04:41:27] <blahboybaz> I'm not confident that what I'm seeing is the same as what is understood by others about what I'm seeing (current state). Anything I do may make it worse if we are not truly on the same page here
[04:42:13] <blahboybaz> If anything happes to either of those files I might as well blow my brains out bc that's how bad something like that happening would be
[04:46:18] *** Joins: hbautista (~hbautista@187.171.94.243)
[04:51:15] <blahboybaz> Its like being in hell
[04:51:57] <blahboybaz> Everything I do leads to another thing I don't knwo what I'm looking at
[04:54:44] *** Joins: daddy (~ryan@hashbang/bdfl)
[04:55:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:55:08] <blahboybaz> By some miracle I got it worked out. Thans for everthign
[04:59:51] <j416> !backup
[04:59:51] <gitinfo> Worried about your data while trying stuff out in your repo? The repository in its entirety lives inside the .git directory in the root of your work tree so to backup everything `cp -a path/to/workdir path/to/backup` or equivalent will suffice as long as the repo is not modified during backup. See also http://sethrobertson.github.com/GitBestPractices/#backups
[05:00:12] <j416> yw. gl.
[05:00:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:01:55] <blahboybaz> j416: What a wonderful idea
[05:02:12] *** Joins: adlternative (~adl@117.32.216.79)
[05:02:30] <blahboybaz> Thanks. I'll remember that the next time (maybe it'll save me from another existential crisis)
[05:03:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[05:04:43] <j416> o/
[05:05:08] <j416> also !book
[05:05:08] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[05:22:24] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Remote host closed the connection)
[05:24:35] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:25:31] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:27:37] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[05:28:05] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[05:31:58] *** Joins: jazzy3 (~jaziz@2600:380:8600:750f:a0eb:13de:7970:4f87)
[05:32:56] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: Client closed)
[05:35:17] *** Joins: dre (~dre@2001:8003:c932:c301:ceba:8234:4850:924e)
[05:35:32] <dre> this might sound like an odd question
[05:35:50] <dre> but is there a way to introduce an extra merge resolution step?
[05:36:33] <dre> for instance; I'm working on python code. by far the most common merge conflict I get is when someone has imported more dependencies on the file I'm working, so there's a merge conflict.
[05:36:55] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[05:37:14] <dre> because we both changed the same area. I added `from foo import Bar` and they added `from foo import Baz`
[05:37:43] *** Joins: Guest88 (~Guest88@pool-71-120-25-37.washdc.fios.verizon.net)
[05:37:50] *** Joins: Guest8898 (~Guest88@69.160.255.216)
[05:37:56] <dre> but if we accept both changes, then just run my linter on it, it will correct itself to `from foo import Bar,Baz`
[05:38:04] <dre> can I do this automajically or no
[05:40:59] *** Joins: gast0n (~g4570n@user/gast0n)
[05:41:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:41:55] *** Quits: Guest88 (~Guest88@pool-71-120-25-37.washdc.fios.verizon.net) (Ping timeout: 246 seconds)
[05:42:34] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 258 seconds)
[05:45:28] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[05:47:29] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[05:49:19] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[05:54:49] <Anunay> dre What about git rerere
[05:55:03] <Anunay> https://git-scm.com/book/en/v2/Git-Tools-Rerere
[05:57:10] <dre> cheers. seems interesting but might be a bit too specific. this happens across many files
[05:57:15] *** Joins: kobaz_ (~kobaz@cpe-74-67-47-183.nycap.res.rr.com)
[05:57:53] <dre> TIL though
[05:57:54] <dre> so thanks
[05:58:07] <Anunay> For your case you could also try using a more verbose marge strategy
[05:58:41] *** Joins: keypushe- (keypusher@user/keypusher)
[05:58:50] <Anunay> I honestly recommend turning rerere on and seeing if it handles them. I don't really know much about it either. I tend to treat it like a magic box that probably works.
[05:58:54] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[05:59:17] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:00:03] <Anunay> Use something like recursive-ours or recursive-patient
[06:01:02] <dre> i get nervous around magic boxes
[06:01:44] *** keypushe- is now known as keypusher
[06:02:33] <Anunay> yup, I'd rather have git scream at me to do a merge conflict than it try to do something and do it wront.
[06:02:49] <Anunay> wrong*, and I don't notice.
[06:05:21] <Anunay> But then again, I don't have much experience working on big codebases with frequent commits /pull requests.
[06:07:30] <dre> yeah
[06:07:43] <dre> I'm just wondering if there's a way "to get rid of the fluff"
[06:08:02] <dre> i suppose it doesn't really make sense though; no biggie
[06:08:18] <dre> might be something where the solution takes much longer and is harder than to just do things manually
[06:09:28] *** Joins: noarb- (~noarb@user/noarb)
[06:11:30] <Anunay> Just a heads with git rerere, If you ever mess up a merge, make sure to git rerere forget the file. Or you'd end up with git doing the messed up step automatically for you. Except that I haven't really noticed any issues so far.
[06:14:17] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[06:16:06] *** Joins: apauli (~apauli@dynamic-077-006-197-003.77.6.pool.telefonica.de)
[06:16:11] <Anunay> Though at the same time, I don't really know how well it works either. I just had it on and have no idea if it even does anything.
[06:17:50] *** Quits: PaMeDa (~apauli@dynamic-077-000-140-190.77.0.pool.telefonica.de) (Ping timeout: 258 seconds)
[06:18:02] *** Quits: pizdets_ (~pizdets@183.182.111.75) (Quit: pizdets)
[06:18:44] *** Joins: pizdets (~pizdets@183.182.111.75)
[06:21:34] *** Quits: hbautista (~hbautista@187.171.94.243) (Ping timeout: 272 seconds)
[06:29:58] *** Shentino_ is now known as Shentino
[06:31:14] <noarb-> Is there a way to 'git pull' a secondary remote onto a local branch, but only up to a specific tag? I tried 'git fetch upstream (remote name); git checkout upstream (local branch name); git merge v0.5.28 (tag)'
[06:31:59] <noarb-> I'm trying to get a local 'upstream' branch to track a remote git repo up to a tag. (I'm trying to build a debian package)
[06:41:04] *** Quits: Guest8898 (~Guest88@69.160.255.216) (Ping timeout: 246 seconds)
[06:47:42] <auk>  /usr/bin/env: ‘python3.7’: No such file or directory <-- this error on `git commit...`
[06:47:59] <auk> is this probably cuz i set up some git hooks that reference python3.7 directly?
[06:48:33] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:48:34] *** FinnElija is now known as Guest7218
[06:48:34] *** Quits: Guest7218 (~finn_elij@user/finn-elija/x-0085643) (Killed (erbium.libera.chat (Nickname regained by services)))
[06:48:34] *** finn_elija is now known as FinnElija
[06:56:18] *** Joins: hbautista (~hbautista@187.171.94.243)
[07:07:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Ping timeout: 258 seconds)
[07:11:55] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[07:15:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:33:22] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Remote host closed the connection)
[07:34:42] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[07:36:13] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[07:37:23] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[07:42:17] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[07:44:42] *** Quits: Samian (~Sami@163.114.130.6) (Ping timeout: 245 seconds)
[07:45:41] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[07:46:05] *** Joins: igemnace (~ian@user/igemnace)
[07:49:16] *** Quits: igemnace (~ian@user/igemnace) (Client Quit)
[07:49:42] *** Joins: igemnace (~ian@user/igemnace)
[07:53:22] *** Joins: PaMeDa (~apauli@dynamic-095-112-253-061.95.112.pool.telefonica.de)
[07:54:32] *** Joins: ferdna (~ferdna@user/ferdna)
[07:56:10] *** Quits: apauli (~apauli@dynamic-077-006-197-003.77.6.pool.telefonica.de) (Ping timeout: 240 seconds)
[08:06:30] *** Quits: arkho (~ccc@dynamic-acs-24-112-153-241.zoominternet.net) (Quit: Leaving)
[08:12:04] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:12:44] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[08:18:47] *** Quits: pulse (~pulse@user/pulse) (Quit: burp)
[08:20:19] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[08:27:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:33:43] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:39:42] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[08:39:48] *** Quits: omnigoat (~omnigoat@user/omnigoat) (Ping timeout: 265 seconds)
[08:42:05] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:42:46] *** Joins: natrys (~natrys@user/natrys)
[08:46:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:48:20] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:49:17] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[08:49:49] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[08:53:25] *** Joins: gnoo (~gnoo@user/gnoo)
[08:54:39] *** Quits: subopt (~subopt@2603-8081-2302-459a-dd78-dc14-83d3-ab95.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:54:57] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:57:27] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (Quit: This is on purpose!)
[08:57:39] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[08:57:48] *** Joins: vishal (~vishal@fedora/vishal)
[09:04:23] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[09:06:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:07:40] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[09:10:46] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:11:34] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:12:16] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[09:14:33] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[09:14:55] *** Joins: ninjin (~ninjin@user/ninjin)
[09:16:27] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:17:38] *** Joins: ishutin (~ishutin@176-241-45-166.pool.digikabel.hu)
[09:21:00] *** Quits: ishutin_ (~ishutin@92-249-150-169.static.digikabel.hu) (Ping timeout: 258 seconds)
[09:22:59] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[09:26:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:30:41] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:31:11] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:33:54] *** Quits: thiago (~thiago@2601:1c0:4501:635c:cca0:d267:696d:2060) (Ping timeout: 252 seconds)
[09:39:17] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[09:41:37] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:42:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:43:48] *** Joins: madewokherd` (~urk@65-128-171-161.mpls.qwest.net)
[09:44:14] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 272 seconds)
[09:44:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:44:55] *** Joins: rility_ (~rility@39.160.162.206)
[09:45:04] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:46:08] *** Joins: thiago (~thiago@2601:1c0:4501:635c:59b5:2867:d891:dd9d)
[09:46:46] *** Quits: madewokherd (~urk@65-128-171-161.mpls.qwest.net) (Ping timeout: 272 seconds)
[09:47:03] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 276 seconds)
[09:52:22] *** Joins: push-f (~martin@push-f.com)
[09:53:53] *** Joins: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e)
[09:55:14] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[09:59:20] *** Quits: momomo (~momomo@user/momomo) (Ping timeout: 258 seconds)
[10:01:25] *** Joins: momomo (~momomo@user/momomo)
[10:01:40] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[10:12:50] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:22:54] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[10:22:56] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Client Quit)
[10:27:08] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[10:27:33] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:29:29] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:32:52] *** Quits: push-f (~martin@push-f.com) (Quit: Reconnecting)
[10:33:06] *** Joins: push-f (~martin@push-f.com)
[10:34:11] *** Joins: cation (cation@user/cation)
[10:35:39] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[10:35:39] *** Quits: push-f (~martin@push-f.com) (Client Quit)
[10:36:07] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[10:36:28] *** Joins: angryman (~angryman@139.180.173.134)
[10:37:18] <angryman> Hello! Is there a way to do neatly format `git log --patch` into Markdown or whatever so I can share my work with family or friends?
[10:39:21] <selckin> !man git-format-patch
[10:39:21] <gitinfo> The git man pages are available online at https://gitirc.eu/git.html. Or were you looking for the "man git-foo" syntax (without the !)?
[10:39:21] <gitinfo> the git-format-patch manpage is available at https://gitirc.eu/git-format-patch.html
[10:39:46] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[10:40:11] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[10:44:37] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[10:44:48] *** Quits: zamba (~marius@5.226.162.54) (Read error: Connection reset by peer)
[10:45:25] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[10:45:57] *** Quits: hbautista (~hbautista@187.171.94.243) (Ping timeout: 250 seconds)
[10:46:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:46:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:46:49] *** Joins: Guest9322 (~martin@push-f.com)
[10:47:32] *** Guest9322 is now known as push-f
[10:47:46] *** Quits: push-f (~martin@push-f.com) (Client Quit)
[10:48:21] *** Joins: push-f (~martin@push-f.com)
[10:53:27] *** Quits: thiago (~thiago@2601:1c0:4501:635c:59b5:2867:d891:dd9d) (Ping timeout: 258 seconds)
[10:53:45] <angryman> selckin: Any chance you could put that in layman's terms?
[10:53:52] <angryman> :-)
[10:54:13] <selckin> it turns it into something you can email you friends
[10:55:01] *** Quits: rility_ (~rility@39.160.162.206) (Quit: Leaving)
[10:55:04] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:55:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[10:55:59] *** Joins: randomuser (~randomuse@user/randomuser)
[10:56:19] *** Lord_of_Life_ is now known as Lord_of_Life
[10:56:32] *** jazzy3 is now known as jazy
[10:56:35] *** jazy is now known as jazzy
[10:57:52] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[10:59:00] *** Quits: randomuser (~randomuse@user/randomuser) (Client Quit)
[10:59:02] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[11:00:35] <angryman> selckin: but does it do colors and stuff/markdown?
[11:00:46] <selckin> 'or whatever'
[11:01:04] <angryman> i'd like it to be a lil bit fancy
[11:01:25] <angryman> its for my mom and dad :-) not sure they'd appreciate walls of text hehe
[11:02:08] <selckin> don't think they'll understand a diff either
[11:02:25] <angryman> still :-)
[11:02:26] <selckin> https://diff2html.xyz/
[11:03:53] <angryman> fantastic, thanks a lot
[11:04:28] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:06:02] *** Quits: push-f (~martin@push-f.com) (Quit: leaving)
[11:06:19] *** Joins: push-f (~martin@push-f.com)
[11:08:38] <angryman> selckin: or maybe i just show them the finished product instead :-)
[11:08:57] *** Quits: ilogger2 (~ilogger2@colabti.org) (Remote host closed the connection)
[11:09:07] *** Joins: ilogger2 (~ilogger2@colabti.org)
[11:11:32] *** Joins: natrys (~natrys@user/natrys)
[11:13:23] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[11:13:32] *** Joins: palasso (~palasso@user/palasso)
[11:15:18] *** Quits: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e) (Ping timeout: 258 seconds)
[11:21:19] *** Joins: vysn (~vysn@user/vysn)
[11:26:19] *** Joins: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it)
[11:26:24] *** Quits: absc (~absc@dynamic-adsl-94-34-194-170.clienti.tiscali.it) (Client Quit)
[11:27:11] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:29:21] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[11:30:38] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[11:33:42] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 258 seconds)
[11:34:46] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:48] <birkoff> what happens if I merge branch 'master' to some other branch, work more onthe other branch, then want to merge it back to master? will the first merge commit be part of history ?
[11:36:16] <selckin> yes
[11:36:39] <selckin> !rebase
[11:36:40] <gitinfo> 'git rebase' takes away your local commits, updates your branch with new stuff from <upstream> (argument), then re-applies your local commits on top. This makes it look like your commits were created "after" the new stuff, and it can look cleaner than doing a !merge. Beware of !rewriting_public_history, though. Not to be confused with !interactive_rebase.
[11:36:51] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[11:37:24] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[11:39:38] <ash_worksi> I am talking to someone about git(hub) and some of it is a bit over my head; if a file is tracked and someone deletes it and commits it, you can still get the file by checking out a commit that has that file right? In this context, you could say you "keep the file" in git. Is there some vocabulary I can use to express files that are simply not deleted? (like, you can get back to it, but you'd HAVE to
[11:39:44] <ash_worksi> check it out, checking out the repo will not just show you all the files)
[11:40:04] <birkoff> git merge does rebase?
[11:40:23] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:40:26] <birkoff> selckin:
[11:40:39] <selckin> birkoff: no, thats what you'd use if you don't want the behavior you describe
[11:41:35] *** Joins: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e)
[11:42:08] *** Quits: theoceaniscool_ (~theoceani@93.177.120.45) (Ping timeout: 258 seconds)
[11:42:26] <selckin> ash_worksi: it keeps track of all changes ever committed, and you view the history and go back to the state of every commit, (files can also be changes, not just deleted, etc), can't think of a specific term for it, seems wierd question
[11:45:21] <ash_worksi> selckin: well, when someone says they "keep" a file, I wanted to try to clarify, but I don't want to sound like an idiot
[11:45:56] <ash_worksi> "'keep' as-in keep track of in git, or 'keep' as in.... not delete the file ever?"
[11:46:27] <birkoff> selckin: can you describe how would I do that precisely ?
[11:46:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e) (Ping timeout: 250 seconds)
[11:46:51] <push-f> ash_worksi: yeah that's ambiguous
[11:46:57] <selckin> birkoff: instead of merging master you'd rebase on top of master to pull in those changes, then when finished you can merge your branch into master for example
[11:47:11] <ash_worksi> push-f: I am willing to learn :)
[11:47:12] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[11:48:17] <selckin> ash_worksi: git is a database, it stores the content of files, you make commits as a reference to a certain state with a little message, anything that was every commited can be retrieved again
[11:49:03] <birkoff> selckin: after rebase doing what?
[11:49:18] <ash_worksi> selckin: good to know, but that's not really answer my question
[11:49:49] <selckin> i don't understand the question
[11:49:50] <ash_worksi> push-f: that is, I am willing to learn how to make that less ambiguous if you'd like to teach me
[11:50:22] <ash_worksi> selckin: if I said the quoted statement above to you in another channel, is it clear what I'm trying to communicate?
[11:50:43] <selckin> depends on the rest of the sentance around it
[11:50:46] <push-f> ash_worksi: I guess the ambiguity depends on the context
[11:51:43] <push-f> ash_worksi: when using git to collaborate with other people you usually don't rewrite history, so whether or not to keep a file will probably be interpreted as whether or not to create a new revision with or without the file
[11:51:44] <ash_worksi> someone said they keep all their migrations -- I am in retrospect trying to come up with the appropriate sentence
[11:52:26] <push-f> ash_worksi: well what do you want to say?^^
[11:52:29] <ash_worksi> push-f: right, but I don't want an answer of "yes" to simply mean "we use git"
[11:53:10] <ash_worksi> push-f: yikes, I was hoping I at least communicated it correctly once :P; let me start over:
[11:53:18] <selckin> maybe you should just ask 'how' instead of trying to guess
[11:53:27] <ash_worksi> <someone_else>: we keep all our migrations
[11:53:58] <ash_worksi> <me>: you "keep" them, as-in, you use `git` or you "keep" them as-in, you never delete them?
[11:54:19] <ash_worksi> ^^^ is that the proper way to communicate that
[11:54:38] <ash_worksi> or, per selckin , *how* do I communicate that?
[11:54:38] <selckin> no cause its a stupid question
[11:54:44] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[11:54:58] <selckin> they can keep them in git and never 'delete' things too
[11:55:06] <push-f> exactly
[11:55:33] <ash_worksi> selckin: I don't think so, because when I jumped to another channel, I asked, "do you keep all your migrations?" and the reply was, "we keep them in that they are always in git"
[11:55:51] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[11:55:53] <selckin> it some form of !xy
[11:55:53] <gitinfo> You are asking about a solution, but we can help you a lot better if you could describe the actual problem you are trying to solve.
[11:55:56] *** Joins: theoceaniscool_ (~theoceani@93.177.120.45)
[11:56:14] <ash_worksi> hmm
[11:56:58] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[11:57:54] <push-f> I don't quite get your confusion. If you track your migrations with git why would you create a revision that removes them?
[11:58:57] <push-f> I think it's common practise to just have a migrations directory with all your migrations. For every new migration you add a file and commit it.
[12:01:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[12:02:53] *** Joins: TomyWork (~TomyLobo@p200300e80f133c0099fbaea743b3eb58.dip0.t-ipconnect.de)
[12:04:54] <ash_worksi> push-f: again, I am just trying to avoid "do you keep your migrations? yes." simply meaning, "yes, we use git" if I am asking if the file ever get's deleted (Not "from git") -- which has clearly been the interpretation based on the person who said explicitly: "we keep them in that they are always in git"
[12:05:23] <ash_worksi> in any case, I seem to lack the pure language ability
[12:05:25] <ash_worksi> ¯\_(ツ)_/¯
[12:07:52] <selckin> "We need all the migrations files together, not tracked in an scm"
[12:07:59] <selckin> or something
[12:09:16] <ash_worksi> selckin: okay, I can work with that.
[12:10:26] <ash_worksi> <someone_else> we keep all our migration files   <me> you mean, you keep them together, not tracked in an scm?   <someone_else (probably)> well, we keep them in an scm too
[12:11:35] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[12:12:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e)
[12:14:07] <ash_worksi> anyway, thanks selckin, push-f -- I think I've exhausted/irritated the people here in 1 question :\ sorry about that
[12:19:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:21:06] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:30:42] *** Quits: roadie (~user@2a02:8108:ec0:1427:e8b1:8908:a3c8:856e) (Ping timeout: 240 seconds)
[12:41:26] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:54:40] *** Quits: securethemews (~securethe@2a00:23c4:1e9b:2f00::1) (Quit: Leaving)
[12:56:19] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:58:25] *** Quits: dre (~dre@2001:8003:c932:c301:ceba:8234:4850:924e) (Ping timeout: 258 seconds)
[13:03:37] *** Joins: rahl (~rahl@102.114.32.187)
[13:04:18] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[13:08:40] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 256 seconds)
[13:10:15] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:13:39] *** Joins: pizdets_ (~pizdets@183.182.110.218)
[13:14:15] *** Quits: pizdets (~pizdets@183.182.111.75) (Ping timeout: 245 seconds)
[13:19:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:20:51] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[13:20:58] *** Quits: Shentino (~shentino@user/shentino) (Ping timeout: 240 seconds)
[13:22:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[13:24:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[13:24:54] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[13:27:10] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[13:30:03] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[13:30:47] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[13:30:53] *** jmcantre1 is now known as jmcantrell
[13:31:09] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[13:34:58] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[13:36:16] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:38:34] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[13:39:20] *** Quits: jazzy (~jaziz@2600:380:8600:750f:a0eb:13de:7970:4f87) (Read error: Connection reset by peer)
[13:39:26] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 258 seconds)
[13:46:34] *** Joins: va5c0 (~vasco.nun@95.148.139.5)
[13:48:00] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[13:57:27] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[13:57:50] *** Quits: va5c0 (~vasco.nun@95.148.139.5) (Ping timeout: 258 seconds)
[13:58:46] *** Joins: Vonter (~Vonter@user/vonter)
[14:03:21] *** Joins: securethemews (~securethe@2a00:23c4:1e9b:2f00::1)
[14:07:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:07:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:16:18] *** Joins: dre (~dre@2001:8003:c932:c301:d99a:7bc6:6e11:ccd2)
[14:18:32] *** Quits: yuljk (~yuljk@86.11.178.103) (Ping timeout: 258 seconds)
[14:18:55] *** Quits: dre (~dre@2001:8003:c932:c301:d99a:7bc6:6e11:ccd2) (Remote host closed the connection)
[14:24:52] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[14:27:50] *** Joins: yuljk (~yuljk@86.11.178.103)
[14:29:34] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[14:33:08] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[14:36:19] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:38:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[14:38:19] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:39:13] *** Quits: securethemews (~securethe@2a00:23c4:1e9b:2f00::1) (Quit: Leaving)
[14:49:03] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:49:03] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:49:37] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:49:57] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[14:52:11] *** Joins: gnooooo (~gnoo@user/gnoo)
[14:54:41] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[15:03:55] *** Joins: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00)
[15:04:59] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Remote host closed the connection)
[15:06:09] *** gnooooo is now known as gnoo
[15:09:09] *** Joins: nobody_ (~nobody@host-79-45-186-108.retail.telecomitalia.it)
[15:12:06] *** Joins: reset (~reset@user/reset)
[15:12:11] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:13:47] *** Joins: average (uid473595@user/average)
[15:14:41] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[15:21:26] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[15:30:51] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[15:33:55] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:35:19] *** Joins: eternalromance (~eternalro@69.160.252.214)
[15:45:56] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[15:45:58] *** Joins: randomuser (~randomuse@user/randomuser)
[15:48:30] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[15:51:01] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 250 seconds)
[15:52:04] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 258 seconds)
[15:56:58] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[16:07:01] *** Quits: eternalromance (~eternalro@69.160.252.214) (Ping timeout: 246 seconds)
[16:15:31] *** Joins: cdown (~cdown@89.32.122.5)
[16:15:36] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:29:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:29:37] *** Joins: phreaknerd (~phreakner@ip1f11f37d.dynamic.kabel-deutschland.de)
[16:31:24] *** jazzy is now known as chouxmaker
[16:31:30] *** chouxmaker is now known as jazzy
[16:35:54] *** Quits: aiyion (~aiyion@wireguard/tunneler/aiyion) (Quit: aiyion)
[16:38:52] *** Joins: randomuser (~randomuse@user/randomuser)
[16:41:13] *** Joins: christall (~christall@24.235.88.243)
[16:42:40] *** Joins: Shentino (~shentino@user/shentino)
[16:47:02] *** Joins: alfredb (6GoHPGT5cp@80-219-164-155.dclient.hispeed.ch)
[16:49:33] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[17:02:02] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:04:54] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 258 seconds)
[17:08:53] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:17:06] *** Joins: pulse (~pulse@user/pulse)
[17:24:25] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[17:24:59] *** Joins: LSD (~LSD@2.lsd.systems)
[17:25:17] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[17:26:44] *** Joins: Adoi (~Adoi@user/adoi)
[17:28:28] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:29:08] *** Joins: celphi (uid97751@user/celphi)
[17:30:35] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[17:33:37] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1006)
[17:38:46] *** Joins: darkbit (~db@152.32.99.67)
[17:40:22] *** Quits: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com) (Quit: Leaving.)
[17:40:33] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 258 seconds)
[17:40:39] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:41:03] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[17:41:05] *** Joins: durham (~durham@2601:cb:8200:840:1c0e:1ef2:1798:7be)
[17:46:07] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:49:51] *** Joins: nyah (~nyah@90.221.186.180)
[17:53:09] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:53:13] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[17:53:31] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[17:55:19] *** Quits: durham (~durham@2601:cb:8200:840:1c0e:1ef2:1798:7be) (Remote host closed the connection)
[17:55:53] *** Joins: durham (~durham@2620:10d:c091:480::1:b79f)
[18:10:33] *** Quits: phreaknerd (~phreakner@ip1f11f37d.dynamic.kabel-deutschland.de) (Quit: Client closed)
[18:13:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[18:14:10] *** Joins: palasso_ (~palasso@user/palasso)
[18:14:27] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:16:58] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 258 seconds)
[18:18:27] *** Joins: arcatech (~arcatech@user/arcatech)
[18:18:30] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 258 seconds)
[18:24:17] *** Joins: Meh (~Meh@202.14.121.94)
[18:24:40] *** Meh is now known as Guest378
[18:25:22] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 240 seconds)
[18:25:29] *** Joins: Minall (~Minall@ftth-179-49-61-42.uio.celerity.ec)
[18:25:38] <Minall> Hello Git Community!
[18:26:22] <Minall> I made a branch for develop, made some changes, and now develop has changes that I need... Is my only option to keep working with my changes and develop changes to merge, pull and continue working?
[18:26:47] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[18:27:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:27:05] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[18:27:22] *** Joins: randomuser (~randomuse@user/randomuser)
[18:32:15] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 276 seconds)
[18:33:20] <Guest378> Im not sure if i completely understand your question
[18:33:22] <Guest378> but rebase?
[18:35:47] <Nomikos> did you make the branch _from_ develop?
[18:36:02] <Minall> Guest1759 Let me read the documentation from that
[18:36:03] *** Quits: Guest378 (~Meh@202.14.121.94) (Quit: Connection closed)
[18:36:21] <Nomikos> if so what I do is just pull develop, then merge develop into my branch and carry on
[18:36:38] <Minall> Nomikos Yes, my branch was made from develop
[18:36:46] <Nomikos> when the feature is complete I merge the branch back into develop (after testing)
[18:37:06] <Nomikos> but then again I never did grok rebase, so that might be a shortcut
[18:39:02] <Minall> I'm reading the documentation on ti, thank you a lot Nomikos
[18:39:15] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[18:44:19] *** Joins: arcatech (~arcatech@user/arcatech)
[18:49:27] *** Joins: leib (~leib@2405:201:900a:f80b:adf4:e71b:d8fc:8dcd)
[18:51:09] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:52:21] *** Quits: leib (~leib@2405:201:900a:f80b:adf4:e71b:d8fc:8dcd) (Client Quit)
[18:52:38] <Minall> Nomikos I merged develop into my branch, but this will only give put me on the latest commits right?, the changes I made to the code are untouched?
[18:52:38] *** Quits: adlternative (~adl@117.32.216.79) (Ping timeout: 256 seconds)
[18:52:44] <Minall> Like the features I added
[18:54:04] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[18:54:23] <Nomikos> Minall: it will add all changes that were added to develop since after you created the new branch, to your new branch
[18:54:40] <Minall> Basically what I want!... Thank you a lot Nomikos
[18:54:54] <Nomikos> so in effect it is as if your new branch + your changes therein are based on the newest develop
[18:55:11] <Nomikos> you're welcome :)
[18:56:50] <momomo> how can i stop being detached?
[18:56:51] <momomo> ((HEAD detached at origin/fix/CEAC-11363-audit-log-fixes-3))
[18:57:06] <osse> checkout a branch
[18:57:11] <momomo>  tried
[18:57:34] <osse> checkout a branch that's not a remote tracking branch
[18:58:43] <momomo> yes that worked
[18:59:03] *** Quits: Rhonda (~rhonda@wesnoth/developer/rhonda) (Ping timeout: 268 seconds)
[18:59:26] *** Quits: shored (~shored@user/shored) (Ping timeout: 265 seconds)
[19:01:08] <osse> remote tracking branches are "read-only". you're not supposed to commit to them
[19:01:12] <osse> that's why git detaches you
[19:03:11] *** toinen is now known as yksi
[19:03:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[19:03:30] *** Joins: Rhonda (~rhonda@wesnoth/developer/rhonda)
[19:07:07] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:08:57] *** Joins: thiago (~thiago@2601:1c0:4501:635c:59b5:2867:d891:dd9d)
[19:11:31] *** Quits: paruh (~paruh@92.60.39.18) (Ping timeout: 265 seconds)
[19:14:18] *** Joins: Samian (~Sami@2620:10d:c091:480::1:fc8a)
[19:16:16] *** Joins: arcatech (~arcatech@user/arcatech)
[19:20:57] *** Joins: phreaknerd (~phreakner@ip1f11f37d.dynamic.kabel-deutschland.de)
[19:22:17] *** Quits: phreaknerd (~phreakner@ip1f11f37d.dynamic.kabel-deutschland.de) (Client Quit)
[19:24:03] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd)
[19:24:10] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:25:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 256 seconds)
[19:26:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd) (Remote host closed the connection)
[19:27:13] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252)
[19:28:42] *** Joins: subopt (~subopt@2603-8081-2302-459a-7cb3-13a5-1358-18e9.res6.spectrum.com)
[19:31:34] *** Quits: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net) (Quit: Hrmmm)
[19:32:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[19:33:15] *** Quits: nobody_ (~nobody@host-79-45-186-108.retail.telecomitalia.it) (Ping timeout: 258 seconds)
[19:34:29] *** Joins: nobody_ (~nobody@host-79-45-186-108.retail.telecomitalia.it)
[19:36:42] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 258 seconds)
[19:36:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252) (Remote host closed the connection)
[19:37:16] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252)
[19:41:12] *** Joins: Adoi (~Adoi@user/adoi)
[19:42:16] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:43:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[19:46:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252) (Remote host closed the connection)
[19:47:49] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 258 seconds)
[19:49:25] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252)
[19:52:53] *** Joins: vysn (~vysn@user/vysn)
[19:55:10] *** Joins: hoppity (~user@user/hoppity)
[19:55:30] <hoppity> How can I gitignore the contents of a folder but not the folder itself?
[19:55:30] *** Quits: madewokherd` (~urk@65-128-171-161.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:56:23] <osse> hoppity: No can do
[19:56:27] <push-f> hoppity: git doesn't track directories only files ... you could add a .gitkeep in the folder
[19:56:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252) (Remote host closed the connection)
[19:56:47] <nedbat> hoppity: put a README into the folder explaining why there's an empty folder in the repo
[19:56:59] <push-f> that's even better^^
[19:57:06] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd)
[19:58:59] <hoppity> nedbat: I'm not sure I understand, if I gitignore the folder, but add a README into it what would I gain?
[19:59:29] <nedbat> hoppity: you wouldn't gitignore the folder, you would gitignore every file in the folder except the README
[19:59:35] <nedbat> hoppity: git doesn't track empty folders.
[19:59:58] <hoppity> I see, how do I gitignore all files except the README?
[20:00:38] <ikke> *; !README
[20:01:30] <ikke> or from the parent directory: folder/*; !folder/README
[20:02:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[20:02:58] <push-f> gitignoring sth doesn't prevent you from adding it so just * would also work
[20:03:16] <hoppity> thanks a lot
[20:06:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd) (Remote host closed the connection)
[20:07:08] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252)
[20:07:22] *** Quits: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00) (Ping timeout: 258 seconds)
[20:11:21] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 252 seconds)
[20:15:41] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:16:19] <imMute> or from the parent directory: folder/
[20:16:38] <imMute> no need to explicitly un-ignore the README - once it's committed, it'll always be tracked and .gitignore will not affect it in any way
[20:16:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:11f6:d976:2064:1252) (Remote host closed the connection)
[20:17:06] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd)
[20:21:06] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:22:03] <hoppity> imMute: thank you
[20:26:10] <osse> i am 94 % sure there is no technical reason for why git refuses to add empty directories
[20:26:23] <osse> maybe I should try to implement it and see where I stumble
[20:26:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd) (Remote host closed the connection)
[20:27:06] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd)
[20:27:37] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:28:00] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Read error: Connection reset by peer)
[20:28:25] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[20:30:58] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 240 seconds)
[20:32:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:33:35] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[20:33:55] <TJ-> osse: wouldn't it need to be susceptible to creating a hash of its contents? which would presumably be dirents?
[20:34:26] <imMute> TJ-: directory objects are just a list of files/folders within it.  I don't see why that list couldn't simply be empty...
[20:34:35] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 258 seconds)
[20:36:43] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd) (Remote host closed the connection)
[20:37:05] *** Joins: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd)
[20:37:21] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[20:37:45] <TJ-> imMute: not exactly. a directory is a bunch of dirents, one per file. Included in those is inode number, various timestamps, ownership, permissions. git deliberately doesn't store many of those to avoid hashes being changed even with regular files
[20:38:35] *** Parts: Minall (~Minall@ftth-179-49-61-42.uio.celerity.ec) ()
[20:39:00] <TJ-> I suppose an empty directory could, but then it'd be an exception to the rest
[20:39:09] *** Quits: rility_ (~rility@2409:8a38:4640:6f60:34c2:c5cd:752c:bcd) (Client Quit)
[20:39:22] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:39:36] <TJ-> as in, once a file exists in that directory the 'empty' directory would have to be removed
[20:43:10] *** Joins: austin987 (~null@100.42.98.196)
[20:43:15] <imMute> TJ-: if I do 'git cat-file -p $SHA' on a SHA that points to a tree object, it's a list of "mode type sha name" entries, one per file/folder
[20:43:24] <imMute> TJ-: I don't see why git couldn't make a tree object that is simply empty
[20:43:53] <imMute> and yeah, any time a directorie's children (files or folders) change, that tree object would necessarily have to change.
[20:44:24] <imMute> TJ-: I said "directory objects", as in a git object.  not Linux VFS directories.
[20:44:43] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[20:46:10] <TJ-> I recall an article/mailing-list comment by Torvalds about the why of this but it must be over a decade ago
[20:46:28] *** Quits: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e) (Ping timeout: 258 seconds)
[20:50:13] *** Joins: roadie (~user@2a02:8108:ec0:1427:38cb:853a:b9e8:331e)
[20:54:08] <osse> TJ-: git hash-object -t tree /dev/null
[20:54:27] <osse> printf 'tree 0\0' | sha1sum
[20:54:27] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[20:54:43] <osse> the hash of an empty tree object is known
[20:55:35] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[20:55:42] <osse> git doesn't care about inodes and timestamps and stuff
[20:58:01] <osse> The format of a tree is:   "tree" SP size-in-bytes NUL  then the following repeated as many times as needed: mode SP name-of-file NUL hash
[20:58:10] <osse> not sure if that made sense :p
[20:58:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[20:59:05] <osse> the mode is just the string "100755", "100644", "120000" and some other magic strings depending on the nature of the object
[20:59:54] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[21:03:04] *** Joins: christall (~christall@24.235.88.243)
[21:10:30] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:11:45] <osse> hmm, there are references to empty trees all over the place in the code
[21:15:09] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[21:15:10] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:16:09] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[21:16:46] *** Quits: TomyWork (~TomyLobo@p200300e80f133c0099fbaea743b3eb58.dip0.t-ipconnect.de) (Quit: Leaving)
[21:16:55] <TJ-> apparently empty directories cannot be stored in the index
[21:17:05] <TJ-> see the commit log for 43180940473
[21:19:46] *** Joins: EvilDMP_ (~textual@2001:1c00:30e:1f00:4550:2b58:9d2d:909c)
[21:19:58] * osse grumbles
[21:20:02] * osse shakes fist at index
[21:20:58] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) (Ping timeout: 258 seconds)
[21:21:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[21:22:05] *** Joins: Siecje (~Siecje@69-196-141-178.dsl.teksavvy.com)
[21:22:10] <Siecje> How do you merge a tag?
[21:22:18] <Siecje> I get not something we can merg
[21:22:19] *** Joins: paruh (~paruh@92.60.39.18)
[21:23:07] *** Joins: orbyt (~textual@172.92.4.78)
[21:27:29] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[21:29:23] <osse> Siecje: what does  git cat-file -t tagnamehere  say?
[21:29:36] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:29:54] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[21:30:00] <Siecje> fatal: Not a valid object name release-4.52.2
[21:30:08] <thiago> then there is no tag by that name
[21:30:17] <thiago> maybe you forgot to fetch it first
[21:30:23] <Siecje> In gitlab when I compare with that tag there are 3 merge commits and changes.
[21:30:36] <Siecje> I did git fetch --tags origin
[21:30:44] <thiago> does it appear in the "git tag" listing?
[21:30:49] *** Joins: orbyt (~textual@172.92.4.78)
[21:31:03] <Siecje> nope
[21:31:29] <osse> git fetch origin 'refs/tags/*:refs/tags/*'
[21:31:37] <Siecje> actually yes
[21:31:46] <Siecje> but git tag | grep 4.52.2 failed
[21:31:55] <Siecje> should I re-clone?
[21:31:57] <thiago> no
[21:32:04] <thiago> why do you think it exists in the origin repo?
[21:32:11] <thiago> git ls-remote origin | grep 4.52.2
[21:32:32] <thiago> I guess it is not a tag. It's a branch.
[21:35:06] <osse> my bad, I thought --tags did something else.
[21:35:07] *** Quits: orbyt (~textual@172.92.4.78) (Client Quit)
[21:39:19] *** Joins: xkuru (~xkuru@user/xkuru)
[21:41:22] <angryman> nice!
[21:41:26] <angryman> <3 git
[21:41:35] <angryman> oh shit this is #git
[21:41:43] <angryman> thought i was talking in another channel :-)
[21:42:02] <angryman> legit!
[21:42:14] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[21:43:26] *** Joins: shored (~shored@user/shored)
[21:44:36] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:45:15] *** Joins: ozoned (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[21:45:35] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Read error: Connection reset by peer)
[21:46:36] *** Quits: plitter (~plitter@user/plitter) (Quit: WeeChat 3.2)
[21:47:21] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[21:48:01] <thiago> angryman: yeah, this is not the #anime channel
[21:49:11] <thiago> https://knowyourmeme.com/memes/how-does-one-patch-kde2-under-freebsd for the reference
[21:52:34] *** Joins: plitter (~plitter@78.31.86.243)
[21:52:34] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[21:52:34] *** Joins: plitter (~plitter@user/plitter)
[21:53:59] *** Quits: ozoned (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Remote host closed the connection)
[21:56:51] <angryman> hehe
[21:57:01] <angryman> my bad thiago!
[21:58:28] *** Quits: alfredb (6GoHPGT5cp@80-219-164-155.dclient.hispeed.ch) (Quit: leaving)
[22:01:30] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:01:43] *** Joins: Jason (~Jason@2a00:23c4:9284:fb01:1b1:cd5f:7c64:a4b2)
[22:01:51] *** Joins: hbautista (~hbautista@187.171.122.82)
[22:02:11] <Jason> Hi all, does anyone know what to do with git bundle?
[22:03:25] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[22:05:42] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:07:06] *** Joins: Masklin (~joel@89-233-200-127.cust.bredband2.com)
[22:08:04] *** Joins: moveeax (~moveeax@202.14.121.94)
[22:08:30] *** Quits: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com) (Ping timeout: 252 seconds)
[22:13:15] *** Quits: hbautista (~hbautista@187.171.122.82) (Remote host closed the connection)
[22:13:56] <Jason> ?
[22:13:58] <ikke> Jason: git clone <path/to/bundle><
[22:14:19] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[22:16:33] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 258 seconds)
[22:19:50] *** Joins: gast0n (~g4570n@user/gast0n)
[22:20:03] *** Quits: atrigent (~atrigent@130.44.130.244) (Ping timeout: 252 seconds)
[22:20:49] *** Joins: atrigent (~atrigent@130.44.130.244)
[22:25:58] *** Parts: PinealGlandOptic (~PinealGla@37.115.210.35) ()
[22:28:18] *** Joins: hbautista (~hbautista@187.171.122.82)
[22:29:04] *** Quits: moveeax (~moveeax@202.14.121.94) (Quit: Connection closed)
[22:29:21] *** Camus is now known as Camusensei
[22:32:42] *** Joins: Dreadnaught (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au)
[22:35:20] *** Quits: Kulrak (Kulrak@n122-109-226-190.rdl2.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[22:37:32] *** Joins: Guest5 (~Guest5@pool-100-7-38-116.rcmdva.fios.verizon.net)
[22:38:29] *** Joins: hbautista_ (~hbautista@187.171.122.82)
[22:41:00] *** Quits: hbautista (~hbautista@187.171.122.82) (Ping timeout: 256 seconds)
[22:41:28] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[22:46:39] *** Joins: moveeax (~moveeax@202.14.121.94)
[22:53:40] *** Quits: moveeax (~moveeax@202.14.121.94) (Quit: Connection closed)
[22:57:49] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[23:00:27] *** Quits: plitter (~plitter@user/plitter) (Quit: WeeChat 3.2)
[23:00:41] <bn_work> hi, git 2.24.3, did a `git pull` to update my local side and got `error: some local refs could not be updated; try running 'git remote prune origin' to remove any old, conflicting branches`.  Looked at man page for git-remote and git-fetch but still had some questions:
[23:00:41] <bn_work> 1.  does this cmd clear out local tracking branches?
[23:00:41] <bn_work> 2.  what is origin representing here?  (the command makes it sound like it's going to clear out stuff on the remote side?)
[23:01:21] <imMute> bn_work: "origin" is the name of the remote.
[23:01:33] <ikke> bn_work: it removes remote tracking branches that have no matching branch on the remote
[23:01:40] <imMute> bn_work: and "git remote prune origin" will remove all the remote tracking branches you have that no longer exist on the remote side
[23:01:49] <ikke> say you had a branch foo on your remote origin, than the remote tracking branch would be origin/foo
[23:02:23] *** Joins: plitter (~plitter@78.31.86.243)
[23:02:24] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[23:02:24] *** Joins: plitter (~plitter@user/plitter)
[23:02:48] <bn_work> so "remote" is just the default name given to these "remotes"?
[23:02:51] <bn_work> oops
[23:02:55] <ikke> origin
[23:02:58] <ikke> yes
[23:03:00] <bn_work> er... s/"remote"/"origin"/
[23:03:07] <ikke> if you clone a repo, the default remote is called origin
[23:03:13] <ikke> but you can rename it, add others, etc
[23:04:47] <bn_work> thanks
[23:13:48] *** Joins: orbyt (~textual@172.92.4.78)
[23:22:00] *** Quits: EvilDMP_ (~textual@2001:1c00:30e:1f00:4550:2b58:9d2d:909c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:22:25] *** Parts: Siecje (~Siecje@69-196-141-178.dsl.teksavvy.com) (Leaving...)
[23:23:23] *** Quits: Guest5 (~Guest5@pool-100-7-38-116.rcmdva.fios.verizon.net) (Quit: Client closed)
[23:23:27] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Quit: Leaving.)
[23:26:43] *** Quits: plitter (~plitter@user/plitter) (Quit: WeeChat 3.2)
[23:29:43] *** Joins: plitter (~plitter@78.31.86.243)
[23:29:43] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[23:29:43] *** Joins: plitter (~plitter@user/plitter)
[23:32:20] *** Joins: goldfish (~goldfish@user/goldfish)
[23:36:02] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:39:32] *** Quits: furrymcgee (~devuan@31.179.186.66) (Client Quit)
[23:39:39] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:40:30] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[23:40:31] *** Joins: goldfish_ (~goldfish@user/goldfish)
[23:41:12] *** Joins: Betal (~Beta@user/betal)
[23:41:28] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:42:23] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:44:19] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[23:48:39] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9dda:f65f:c2ba:878f)
[23:48:39] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9dda:f65f:c2ba:878f) (Changing host)
[23:48:39] *** Joins: skapata (~Skapata@user/skapata)
[23:50:21] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[23:50:45] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
