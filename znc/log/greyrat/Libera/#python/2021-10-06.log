[00:00:11] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[00:00:13] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[00:00:13] *** Quits: quasineutral7 (~quaisneut@user/quasineutral) (Read error: Connection reset by peer)
[00:00:40] <jinsun> yeah it is good, now if you are lucky someone will read it
[00:03:43] *** Quits: StickyIcky (~StickyIck@189.162.229.97) (Ping timeout: 252 seconds)
[00:05:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069) (Ping timeout: 256 seconds)
[00:05:16] *** Joins: duri (~mduregon@97.120.139.0)
[00:05:23] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[00:06:02] *** Joins: canton7 (canton7@about/csharp/canton7)
[00:06:58] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 250 seconds)
[00:07:01] *** Quits: jay-m126 (~jay-m@154.72.160.147) (Ping timeout: 252 seconds)
[00:07:21] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:1ae8:3752:c230:41ef)
[00:07:47] *** Quits: canton7 (canton7@about/csharp/canton7) (Client Quit)
[00:08:27] *** Joins: canton7 (~canton7@about/csharp/canton7)
[00:09:24] *** Joins: Betal (~Betal@user/betal)
[00:10:12] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[00:10:34] *** Joins: enyc (~enyc@user/enyc)
[00:11:04] *** justache is now known as justHaunt
[00:11:26] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[00:12:35] <altendky> aside from the obvious, sqlalchemy, is there any way to avoid the 'just keep these two lists in the same order' aspect of `await self.db.execute("INSERT INTO root(tree_id, node_hash) VALUES(:tree_id, :node_hash)", {"id": tree_id.hex(), "node_hash": node_hash.hex()},)`?  the things in `root()` and `VALUES()` just have to be in the same order afaict.
[00:12:52] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:e023:dc51:981d:33c)
[00:13:05] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:e023:dc51:981d:33c) (Remote host closed the connection)
[00:15:02] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[00:15:20] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[00:15:41] *** Joins: Skyfire (~pyon@user/pyon)
[00:15:42] *** Joins: canton7 (canton7@about/csharp/canton7)
[00:16:48] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[00:17:04] *** Joins: StickyIcky (~StickyIck@187.211.13.93)
[00:18:40] *** Quits: canton7 (canton7@about/csharp/canton7) (Client Quit)
[00:18:42] <rendar> can i throw an exception inside an asyncio.Task? just like i can do with a coroutine?
[00:19:20] *** Joins: canton7 (canton7@about/csharp/canton7)
[00:19:32] *** Quits: emerent (~quassel@p200300cd57485542ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:19:33] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:20:09] *** Joins: emerent (~quassel@p200300cd574855ffba27ebfffed28a59.dip0.t-ipconnect.de)
[00:22:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:25:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[00:25:18] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:25:38] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:25:50] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069)
[00:26:12] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[00:26:51] *** Joins: daoudr__ (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[00:26:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:27:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:28:26] *** Quits: WesTomer (~WesTomer@165.225.38.69) (Quit: Client closed)
[00:28:49] <AutomatedTester> hey friends!
[00:28:50] <AutomatedTester> I need help understanding good patterns for async code to try figure out if an issue is in my code or the package I am using. Consider the following example in pseudo code https://gist.github.com/AutomatedTester/bcdf64b4bb061b511d2a08a49cba9649
[00:28:50] <AutomatedTester> My code hangs on the `await` and never reaches the  `async for` where I need to listen for the events. This is where I think that my mental model oh async code is wrong and if there is any guidance people can offer I will greatly appreciate.
[00:29:08] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[00:29:30] *** Quits: daoudr_ (~daoudr@91.90.122.3) (Ping timeout: 250 seconds)
[00:29:49] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[00:29:49] <bjs> AutomatedTester: well what kind of guidance did you want?  are you using asyncio?
[00:30:00] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:30:05] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 264 seconds)
[00:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:30:52] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:31:03] <AutomatedTester> bjs: This is using trio... so what I am after firstly is the pseudo code how one would expect evented code in python to look?
[00:31:06] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:31:20] <bjs> AutomatedTester: well if you want things to run concurrently in trio you want a nursery
[00:31:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[00:31:52] <bjs> AutomatedTester: `await foo` waits for foo to finish before continuing,  something like a nursery will let you have many tasks concurrently
[00:32:13] <AutomatedTester> bjs: there is a nursery and let's assume that is handled in the creation of `session`
[00:32:20] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[00:33:08] *** Joins: fikran (~fikran@user/fikran)
[00:33:38] <bjs> AutomatedTester: okay but code inside an `async def` executes like normal, it executes top->bottom running each line in order. `await foo; async for bar in baz: ...` will wait for foo to finish, then it will begin the loop, and at the end of each loop iteration it'll get the next bar and start the next loop etc
[00:34:01] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:34:06] <bjs> await foo() * sorry
[00:34:12] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[00:35:21] <AutomatedTester> ok so then my mental model is aligned with what you're saying.
[00:35:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:35:37] <yolo_> https://pastebin.com/K9TMsKqS  with ExcExample as obj:AttributeError: __enter__
[00:35:38] <infobob> https://bpaste.net/Q3QQ (repasted for yolo_)
[00:35:55] <AutomatedTester> bjs: thanks... now I have a probably a stupid question
[00:35:57] <bjs> yolo_: you forgot to make an instance,  `with ExcExample() as obj:`
[00:36:33] <yolo_> bjs: thanks!
[00:37:23] <AutomatedTester> bjs: if I wanted to have something where  I call foo which creates events coming out but foo won't complete until I have handled that in a `async for` which is listening for events how would you go about structuring the code for that
[00:37:49] <bjs> AutomatedTester: it sounds like you want things to run concurrently, have foo run while the loop is happening
[00:37:55] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:38:11] <AutomatedTester> yea probably...
[00:38:13] <bjs> AutomatedTester: so maybe you want a nursery with two children, foo and an async def that does the loop (and probably some kind of queue?)
[00:38:27] <bjs> AutomatedTester: alternatively you can make foo a generator
[00:38:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:39:36] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[00:40:55] *** Quits: manti7 (~manti7@185.107.94.249) (Quit: WeeChat 3.1)
[00:41:44] <AutomatedTester> bjs: maybe a queue is what I want. I tried a generator and the `await foo` just "hangs" because I am not processing the events
[00:41:50] *** Quits: doforlove33 (~doforlove@45.87.215.54) (Read error: Connection reset by peer)
[00:42:02] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:42:03] <AutomatedTester> bjs: thanks for talking this through with me
[00:42:05] <bjs> AutomatedTester: no I mean if foo is a generator you can go `async for bar in foo():`
[00:42:19] <bjs> and then each iteration will ask foo to yield the next value
[00:42:43] *** Joins: fofoni (~fofoni@user/fofoni)
[00:43:01] <AutomatedTester> I don't think that will work as the events won't necessarily come from that method call
[00:43:11] <bjs> AutomatedTester: okay, what is "foo" actually doing then?
[00:43:21] <bjs> or whatever you called it
[00:43:29] <bjs> "method_that_creates_events"
[00:44:14] <AutomatedTester> bjs: so in this case it's telling a browser to navigate and it returns when "done"
[00:44:46] <AutomatedTester> it will be "done" when I process all the events and tell them continue or manipulate them
[00:45:12] <AutomatedTester> so `method_that_creates_events` doesn't return the events
[00:45:29] <AutomatedTester> but they could come down the pipe which is the listen
[00:45:29] <bjs> AutomatedTester: okay, so it sounds like you definitely want method_that_creates_events to be a child in the nursery, and then have it wait for some kind of signal from e.g. after the `for` loop
[00:46:16] <bjs> AutomatedTester: there is trio.Event for broadcasting events to people,  so the method_that_creates_events could await the "stop" event, and then when you're done you can set it
[00:46:42] <AutomatedTester> ahh brilliant
[00:46:49] <AutomatedTester> I didn't know that
[00:46:53] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[00:47:59] *** Quits: waynew (~wayne@user/waynew) (Quit: lynx gopher://gopher.waynewerner.com)
[00:49:45] *** Joins: Pickchea (~private@user/pickchea)
[00:50:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:50:38] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:53:51] *** Joins: ubert (~Thunderbi@178.115.35.209.wireless.dyn.drei.com)
[00:54:05] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:54:42] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[00:54:53] <aphysically> I just realized pyright was half typescript
[00:54:55] <aphysically> huh that's interesting
[00:54:56] *** Joins: djapo (~archangel@user/djapo)
[00:55:14] *** Quits: Narrat (~omnius@p200300df5f0b35e406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:55:27] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[00:55:28] <grym> aphysically: yeah when i pip installed it and got npm messages ... @_@
[00:55:52] <aphysically> a bit of an odd combo I think
[00:56:04] <grym> it makes sense when you know that pylance exists
[00:56:08] <grym> and what it targets
[00:56:11] <grym> (which is a DOM)
[00:56:50] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:57:26] <aphysically> pyright maintainer already fixed one of the two bugs I reported :D
[00:57:51] *** Quits: Akuli (~Akuli@213.216.210.22) (Quit: Leaving)
[00:59:12] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:00:44] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[01:01:28] *** Joins: alphasierra (~alphasier@2405:201:e:4d:580:ccdf:ff79:e710)
[01:03:24] *** Joins: StickyIcky2 (~StickyIck@ec2-44-199-158-254.compute-1.amazonaws.com)
[01:04:42] *** Quits: paul424 (~tom@ip-5-172-232-65.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:05:33] *** Quits: ElPresidente (~ElPreside@108-74-113-129.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[01:05:44] *** Quits: StickyIcky (~StickyIck@187.211.13.93) (Ping timeout: 245 seconds)
[01:07:16] *** Quits: Thanattt (~Thanatos@197.210.65.35) (Remote host closed the connection)
[01:08:08] *** Joins: Thanattt (~Thanatos@197.210.65.35)
[01:09:41] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 264 seconds)
[01:09:41] *** Quits: Jefren (~Jefren@206.253.157.211) (Ping timeout: 264 seconds)
[01:10:01] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:10:24] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:11:41] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[01:11:57] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[01:11:58] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:13:12] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:13:44] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[01:14:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[01:14:40] *** Quits: StickyIcky2 (~StickyIck@ec2-44-199-158-254.compute-1.amazonaws.com) (Ping timeout: 252 seconds)
[01:15:25] *** Joins: StickyIcky2 (~StickyIck@187.211.13.93)
[01:15:26] *** Quits: StickyIcky2 (~StickyIck@187.211.13.93) (Client Quit)
[01:15:49] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[01:18:10] *** Joins: Jefren (~Jefren@70.35.66.84)
[01:18:11] <aphysically> after those two bugs are fixed and probably abandoning single dispatch since the workaround is silly imo I should be able to use pyright as well as mypy, although I haven't tried pyright's strict mode yet....
[01:18:15] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:21:08] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Quit: Leaving)
[01:21:59] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[01:22:58] *** Joins: _abrantesasf_ (~abrantesa@187.36.170.211)
[01:23:10] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[01:23:25] <nedbat> aphysically: why use both?
[01:23:38] *** Quits: _abrantesasf_ (~abrantesa@187.36.170.211) (Remote host closed the connection)
[01:23:42] <aphysically> I probably would
[01:23:58] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:23:59] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:d454:d1a1:e648:cce8) (Ping timeout: 246 seconds)
[01:24:31] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[01:26:39] *** Joins: thiras (~thiras@user/thiras)
[01:28:58] *** Joins: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net)
[01:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:34:35] <aphysically> pyright is a lot stricter than mypy, although mostly the problem seems to be it doesn't infer the types of container contents like mypy can
[01:34:51] <aphysically> so it complains everywhere it couldn't figure it out but mypy could
[01:35:26] <aphysically> which is quite a lot of locations, enough that I probably wouldn't run pyright in strict mode
[01:37:49] *** Quits: ubert (~Thunderbi@178.115.35.209.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[01:38:58] *** Joins: iflema (~ian@user/iflema)
[01:40:19] *** Quits: relight (~relight@user/relight) (Ping timeout: 245 seconds)
[01:40:44] <jinsun> I usually find mypy --strict complaining more
[01:41:28] *** Joins: relight (~relight@user/relight)
[01:41:42] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:42:19] <jinsun> maybe because I satisfy pyright while typing in vscode, and check mypy later, maybe depends on the order you run it :D
[01:42:24] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:42:44] <phy1729> mypy --strict should be more palatable with ParamSpec (I think that will help type kwargs that just get passed through though may be wrong)
[01:43:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[01:44:15] *** Quits: d3sync (~d3sync@62.1.158.148) (Read error: Connection reset by peer)
[01:45:47] *** Joins: nomic2 (~nomic@185.192.69.144)
[01:46:23] *** Quits: nomic2 (~nomic@185.192.69.144) (Client Quit)
[01:48:19] <aphysically> jinsun: well this is pyright strict mode specifically, which i had to go out of my way to enable
[01:48:30] *** Quits: Byteflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[01:48:36] <jinsun> yeah with TypeGuard and ParamSpec we get a lot of power to teach the type checker when it acts dumb
[01:48:37] <aphysically> but yes that probably has a bit to do with it too
[01:49:29] *** Quits: bananahead (~bananahea@host-92-24-207-208.as13285.net) (Ping timeout: 245 seconds)
[01:50:47] <jinsun> aphysically: well I enable strict mode for pyright in vscode settings too, still mypy complains more for my code, but actually mostly it is not because it is more strict but it is dumber than pyright can cannot infer types as well
[01:51:01] <aphysically> hmmmmm
[01:51:20] <aphysically> I almost cannot believe it!
[01:51:24] *** Quits: Thanattt (~Thanatos@197.210.65.35) (Ping timeout: 250 seconds)
[01:52:30] <aphysically> I think what we've found is that pyright and mypy are good at inferring types in different situations, and we've each implemented the workaround only for their respective weaknesses
[01:52:49] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 245 seconds)
[01:53:02] <aphysically> so indeed, it's what you ran first
[01:53:19] <aphysically> (the workaround: i.e. manually specifying a type of a variable when needed)
[01:54:05] *** Joins: Nspace (~Nspace@user/nspace)
[01:54:53] *** Joins: Trieste (T@user/pilgrim)
[01:55:06] <jinsun> yeah the order is probably a big factor in which oe you perceive as more strict
[01:55:12] <jinsun>  satisfying pyright is easier to me becaause it yells at me while I type, then mypy comes with its own complaints later
[01:56:44] *** Joins: Byteflux (~byte@byteflux.net)
[01:58:39] <jinsun> aphysically: so I guess not much discussion here on the dataclass thing, are you opening issue for that?
[01:58:56] <aphysically> yeah, want a link when I do?
[01:59:08] <aphysically> just hadn't gotten to it yet
[01:59:45] <jinsun> ya put it here when you get to it
[02:00:18] *** Quits: emf (~emf@2620:10d:c090:400::5:5481) (Ping timeout: 260 seconds)
[02:01:32] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:01:49] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:04:34] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[02:04:37] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[02:05:28] <JimmyRustles> hi, i'm writing a game, my ship has shields and the enemy ships have shields, but when i decrease the attribute of one of the player's shields, it decreases the same shield attribute on all the enemies
[02:05:31] <JimmyRustles> one sec, i'll paste some code
[02:06:14] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[02:06:28] <Repiphany> Guess class attribute vs instance attribute
[02:06:38] <SnoopJ> JimmyRustles, that sounds like you've made the shield value an attribute on the class, rather than on instances of the class.
[02:06:56] <JimmyRustles> https://bpa.st/LB7Q
[02:07:08] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:07:16] <SnoopJ> JimmyRustles, can you show us the definition of `class Shield` ?
[02:07:36] <JimmyRustles> just updated it with class shield: https://bpa.st/FCKA
[02:08:05] <Togra> oooh I ran into this
[02:08:16] <Togra> the classes are all sharing properties
[02:08:21] <Togra> look into copy.deepcopy()
[02:08:32] <Togra> use that method when you make new shields, and honestly maybe do that for everything just to be sure
[02:08:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[02:08:44] <SnoopJ> JimmyRustles, it would really help to see the complete code
[02:08:45] <Togra> that's how I solved it for my own code at one point
[02:09:10] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[02:09:16] <SnoopJ> Nothing looks amiss in that class definition, but I can see that your code is indented, so it's possible the stuff we don't see is causing the problem.
[02:09:51] *** Joins: ano (~ano@user/ano)
[02:09:59] <JimmyRustles> SnoopJ: https://github.com/sgriffin53/spacegame
[02:10:00] <JimmyRustles> that's the full code
[02:10:02] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Ping timeout: 250 seconds)
[02:10:16] <JimmyRustles> togra: how would i use deepcopy to create the shield instance?
[02:10:33] <Togra> copy.deepcopy() returns a new instance, but makes sure it won't share fields
[02:10:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:10:47] <Togra> so anytime you make a new Shield(), do it more like this: copy.deepcopy(Shield())
[02:11:05] <SnoopJ> Making a copy is pretty weird for this task.
[02:11:45] <Togra> if I had a deeper understanding of how properties are handled I'd probly know a cleaner solution, but copy has worked well when I've needed it
[02:11:57] <Togra> I think if you init every property, that can mitigate out issues
[02:12:16] *** Joins: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net)
[02:12:19] <JimmyRustles> just tried deepcopy and they still seem to be sharing attributes
[02:12:31] <JimmyRustles> i'm doing it like: myship.shields.append(copy.deepcopy(Shield()))
[02:12:46] <Togra> oh weird
[02:12:53] <SnoopJ> Even if copy worked, it wouldn't really solve the problem, it would be a patch to hide the flaw
[02:13:19] <SnoopJ> JimmyRustles, that line would create a brand new Shield instance anyway, then immediately make a copy and throw away the original
[02:13:33] * SnoopJ checks the complete source
[02:13:42] <supakeen> There's nothing special in it.
[02:13:56] <Repiphany> It looks like there's quite a bit of repeated code, you would do well to split a lot of those long functions down into more bite-size chunks
[02:14:17] <supakeen> it's just 4 instances of Shield appended to a list
[02:14:27] <JimmyRustles> thanks Repiphany
[02:14:38] <Repiphany> It's hard to separate out which parts are possibly problematic when they're embedded in 300 line long functions
[02:14:54] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[02:15:32] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[02:16:08] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[02:16:29] <hendursaga> I'm trying to install https://pypi.org/project/ctranslate2/2.5.1/ after upgrading to 3.10 and it's saying it cannot find a version. I'm upgraded pip and installed wheel - am I missing something else?
[02:16:37] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:16:39] <hendursaga> It worked before in 3.9.6 on the exact same machine
[02:17:08] <Repiphany> 3.10 is too new so a lot of things won't have releases for it yet
[02:17:32] <Repiphany>  Requires: Python >=3.6, <3.10
[02:17:39] <hendursaga> Repiphany: how do I list the releases available?
[02:17:59] <Repiphany> Looking at the requirements for one
[02:18:05] <JimmyRustles> Togra: what do you mean by "init every property"?
[02:18:33] <hendursaga> Repiphany: what about remotely, from the command-line?
[02:18:39] <SnoopJ> hmm, I agree, nothing about the code looks special. Let me see if I can run this on my machine.
[02:19:00] <nedbat> hendursaga: are you looking for versions of ctranslate?
[02:19:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:38] <hendursaga> nedbat: no, I know which versions are released, I'm looking for a command to list all... wheels? is that the term? for which Python releases
[02:20:07] <nedbat> hendursaga: you want to know which versions of Python you can install ctranslate on?
[02:20:58] <SnoopJ> JimmyRustles, okay, I have gotten it running on my machine. How can I decrease the attribute on the player ship to reproduce the problem you're seeing?
[02:20:58] <hendursaga> nedbat: correct
[02:21:14] <nedbat> hendursaga: i don't know if you can find that on the command line
[02:21:49] <hendursaga> fair enough
[02:22:12] <JimmyRustles> SnoopJ: fly towards an enemy (arrow keys), and then target them (T) and fire on them (space)
[02:22:16] <JimmyRustles> they'll fire back and hit your shields
[02:22:22] <JimmyRustles> and you'll' see that their shields decrease as yours do
[02:22:38] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[02:22:51] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:23:53] <JimmyRustles> sorry, use C to target
[02:23:56] <Repiphany> https://github.com/sgriffin53/spacegame/blob/fce2ab3769c1b0da28d43f2c78c53c09700e807d/render.py#L244
[02:23:58] <JimmyRustles> it's much better, targets the closest enemy
[02:24:04] <Repiphany> Should this be enemyship instead of myship
[02:24:18] <SnoopJ> JimmyRustles, I don't think I'm seeing that, actually
[02:24:40] <JimmyRustles> oh my god, Repiphany, i'm pretty sure that's it
[02:24:59] <SnoopJ> that does look like a goof, yea
[02:24:59] <JimmyRustles> Repiphany: yep, that fixed it
[02:25:04] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 252 seconds)
[02:25:15] <JimmyRustles> i thought it was some weird reference behaviour in python, turns out i just messed up the variable name
[02:25:17] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:1ae8:3752:c230:41ef) (Ping timeout: 264 seconds)
[02:25:25] <JimmyRustles> thanks for your help everyone, sorry to waste your time with a typo
[02:25:40] <SnoopJ> OH, right, shields
[02:25:47] <SnoopJ> I am seeing it and it sounds like that was the problem after all :)
[02:25:49] * SnoopJ was looking at hull condition
[02:26:11] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[02:26:59] <SnoopJ> JimmyRustles, the next step I would have taken here would have been to print or otherwise make visible the condition of each shield on the player ship and perhaps the targeted enemy (I was planning on using a debugger, but just printing to a log would work fine too). That would've probably made it clear that the value wasn't changing, which would've been a hint that it was a display problem.
[02:27:44] <JimmyRustles> yeah i probably would've done that next
[02:27:49] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:28:04] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[02:28:28] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[02:28:31] *** Joins: sertsa (~sertsa@209.140.9.160)
[02:28:47] <SnoopJ> looks like it's coming along pretty well, reminds me of the look of a shareware game I onced loved called Solar Winds
[02:28:52] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[02:28:53] *** Quits: sertsa (~sertsa@209.140.9.160) (Client Quit)
[02:29:13] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.3)
[02:29:27] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:30:01] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[02:31:27] <aphysically> jinsun: okay I made an issue, I marked as enhancement but maybe it's better marked as behavior
[02:31:31] *** Joins: synaps3 (~void@user/synaps3)
[02:31:43] <aphysically> https://bugs.python.org/issue45384 if you want to comment or track it
[02:33:21] <aphysically> whoa bugs.python.org autolinks to peps, fancy
[02:35:33] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:35:49] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:38:01] *** Joins: bukata (~lev@user/bukata)
[02:38:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:40:19] *** Quits: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net) (Ping timeout: 245 seconds)
[02:40:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[02:40:26] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[02:40:48] *** Joins: nomic2 (~nomic@185.192.69.144)
[02:40:48] *** Quits: nomic2 (~nomic@185.192.69.144) (Client Quit)
[02:40:49] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Client Quit)
[02:40:56] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:42:06] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[02:42:28] *** Joins: fikran (~fikran@user/fikran)
[02:42:30] *** Joins: pycurious (~Adium@user/pycurious)
[02:44:00] *** Joins: Wulf (~Wulf@user/wulf)
[02:44:06] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[02:44:20] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[02:44:32] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[02:44:53] *** Joins: ElPresidente (~ElPreside@108-74-113-129.lightspeed.tukrga.sbcglobal.net)
[02:45:06] <catern> dear #python, I want to raise a standard library exception from my library, but I want to attach some more information to it, so I want to subclass it
[02:45:19] <catern> but, I want, when the exception is printed, that it still has the class name from the stdlib
[02:45:52] <catern> (the specific exception is subprocess.CalledProcessError and the reason I want to raise it is because that's way more understandable for most users who barely even know what a process is)
[02:46:35] <catern> what's the best way to do that? other than "don't"
[02:48:07] <SnoopJ> catern, is there a reason not to do `myexc = CalledProcessError("message"); myexc._catern_data = 42; raise myexc` ?
[02:48:22] <cluelessperson> catern, it's not really needed to keep the original class name, because you can easily see the parent class, can't you?
[02:48:36] <catern> SnoopJ: well, specifically I want to modify __str__
[02:48:40] <SnoopJ> cluelessperson, I think they are assuming the user is not going to understand how to inspect the exception as such
[02:48:47] <SnoopJ> catern, I'm talking about the information you want to attach to it
[02:49:09] <catern> SnoopJ: right, I want to attach some more information and have that reflected in __str__ along with the normal information
[02:49:53] <SnoopJ> catern, the best idea I have is to make your own subclass that has the same name.
[02:50:06] <InPhase> catern: raise RuntimeError("I have more information")
[02:50:34] <catern> SnoopJ: hm, yeah, that might be for the best
[02:50:46] <SnoopJ> i.e. `class CalledProcessError(subprocess.CalledProcessError): ...` and maybe explain what the significance of the subclass is
[02:50:52] <SnoopJ> in the docstring
[02:51:41] <catern> or maybe I'll just give up on the additional information
[02:52:15] <SnoopJ> not sure we can offer advice on that without knowing more about it
[02:52:16] <InPhase> catern: Have you considered just creating a new exception name?  This is generally a very good idea.  A subclass will be caught when a base class is sought.
[02:52:23] *** Joins: dre (~dre@2001:8003:c932:c301:b1a7:f172:e0ac:f5a0)
[02:52:34] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:52:53] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:52:58] <SnoopJ> although note that most standard exceptions just take a tuple, including CalledProcessError, and the tuple contents are represented in the repr
[02:53:10] <SnoopJ> sorry, not a tuple, they take *args
[02:54:14] *** Joins: Wulf (~Wulf@user/wulf)
[02:55:12] <jinsun> aphysically: cool, let's see how it goes
[02:55:59] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:56:06] <InPhase> catern: You can have data ride along with:  x = RuntimeError("Standard message here"); x.extra_info_random_thing = 'Attached'; raise x
[02:56:20] <InPhase> catern: Note "can", not "should".  You probably "should" make a new subclass.
[02:56:35] <catern> InPhase: like I said, I want the data to be reflected in __str__ and it won't that way
[02:56:59] <InPhase> catern: Well then you just make it part of the message at construction?
[02:57:01] <catern> SnoopJ: yeah, unfortunately CalledProcessError's __str__ has some actual logic, it doesn't just format its args. otherwise I wouldn't have any problems...
[02:57:09] *** Joins: drew` (~drew@user/drew)
[02:57:37] *** drew` is now known as drew
[02:59:12] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:59:40] <jinsun> can't you monkeypatch the `__str__` of the class?
[03:00:33] <catern> that would affect any other libraries using subprocess
[03:01:07] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[03:01:12] <jinsun> okay you want it only when you raise in your code
[03:01:19] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:01:23] <catern> yeah
[03:03:08] <catern> (concretely, my library has a Command object that contains also the environment variables for the exec'd command; and I also have an ExitStatus object which includes the actual signal name used to kill the process, and the pid of the process that sent the signal, etc; I want to include all that in the exception message)
[03:03:26] <SnoopJ> catern, sorry, I guess I don't have useful feedback to give with the fraction of the problem we're hearing about.
[03:03:56] <jinsun> so then subclass with same name like SnoopJ suggested seems like the way
[03:04:23] *** Joins: barg (~barg@cpc147258-finc20-2-0-cust20.4-2.cable.virginm.net)
[03:04:36] *** Quits: Jefren (~Jefren@70.35.66.84) (Ping timeout: 268 seconds)
[03:05:52] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:06:14] *** Joins: Jefren (~Jefren@208.104.190.54)
[03:06:22] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:06:28] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:7c00:798a:59ed:17d7)
[03:07:15] <catern> yeah, that's fair, I'll try that at first
[03:07:25] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[03:07:33] <catern> if I still get user confusion, then maybe I'll try to switch to "subprocess.CalledProcessError" somehow
[03:10:07] *** Quits: nomic (~nomic@185.192.69.144) (Ping timeout: 252 seconds)
[03:10:23] <barg> hi.. i don't really know much python but am trying a raspberry pi project..  and i've connected an LED display to the pi, and the LED display is controllable via python code.   the project is here https://howchoo.com/pi/how-to-make-a-raspberry-pi-smart-alarm-clock   And when I try sudo python display.py it says ImportError: No module named I2C_LCD_driver       I notice that display.py has a
[03:10:23] <barg> line import I2C_LCD_driver    Any suggestions? Thanks
[03:10:37] <barg> (sorry about the carriage return, i didn't spot that!)
[03:10:51] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-e8e0-40c9-c788-8ef8.res6.spectrum.com) (Quit: Konversation terminated!)
[03:10:55] *** nomic2 is now known as nomic
[03:12:04] <JimmyRustles> just an update, i got enemy shields working :)
[03:14:32] <SnoopJ> ugh, nvidia's package index pollutes your pip.conf outside of a venv, too? >:(
[03:16:20] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[03:17:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069) (Quit: Client closed)
[03:17:44] *** Joins: shangxiao (~davids@124.187.230.212)
[03:18:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069)
[03:18:46] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[03:20:01] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[03:20:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:21:12] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:22:34] *** Joins: Croves (~Croves@2804:14c:578b:9102:8933:db54:1d87:8fa3)
[03:22:43] *** Parts: Croves (~Croves@2804:14c:578b:9102:8933:db54:1d87:8fa3) ()
[03:24:38] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:24:57] *** Quits: bukata (~lev@user/bukata) (Ping timeout: 268 seconds)
[03:25:26] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[03:28:28] <jazz-o-lantern> is there an O(1) operation that discards a contiguous portion of the tail end of a list off?
[03:28:43] *** Joins: rannnn8888 (~rannnn888@bzq-109-65-168-133.red.bezeqint.net)
[03:28:52] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[03:29:47] <nedbat> jazz-o-lantern: i don't think it can be O(1) because all of the elements you remove need to have their reference counts updated.
[03:30:34] <SnoopJ> there's `del l[N:]` if you want a tidy way to do all the work in one expr, but it is O(N) as nedbat suggests
[03:30:40] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:30:59] <rannnn8888> someone know if have way get the list here more faster ? The script really has a hard time getting the list https://bpa.st/M5QQ
[03:31:03] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:31:19] <rannnn8888> the DB like 1G with index 3M rows
[03:31:35] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:32:01] <SnoopJ> if it does truly need to be O(1), that sounds like it might be a case for a separate structure that isn't built on top of Python objects
[03:32:35] <nedbat> jazz-o-lantern: i'm curious about your use here.  why O(1)?
[03:34:41] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[03:34:55] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[03:35:20] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:7c00:798a:59ed:17d7) (Quit: Leaving)
[03:35:28] <jazz-o-lantern> I see
[03:35:50] *** Joins: nomic (~nomic@185.192.69.208)
[03:36:04] <jazz-o-lantern> nedbat, no use just yet, there's a coding problem I'm looking at and that could be helpful
[03:36:22] <jazz-o-lantern> but also I thought it might be possible since it doesn't require any shifting
[03:36:28] <nedbat> jazz-o-lantern: it will be a fast O(N) if that's helpful
[03:36:51] <jazz-o-lantern> mm might be
[03:37:12] *** Joins: elkclone (~elkclone@user/elkclone)
[03:37:56] <InPhase> jazz-o-lantern: You can simply ignore the excess elements and store a separate active_size value.
[03:38:22] <InPhase> jazz-o-lantern: If you're clever you can wrap that up as a LazyDeleteList class.
[03:38:43] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:38:52] <jazz-o-lantern> yeah, that's the spirit of the problem, but it actually doesn't accept excess elements like it says it does lol
[03:38:58] <InPhase> jazz-o-lantern: Append would then simply overwrite until exceeding teh true length.
[03:39:46] <jazz-o-lantern> here it is if interested: https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/
[03:39:56] <Togra> JimmyRustles: what I mean is that I always try and set initial values for a class's properties, all of them, in __init__, though luckily you fixed your problem so you're all set :D
[03:40:21] <Togra> if the values aren't passed as arguments, I just init things to None or False or whatever fits the bill in that situation
[03:40:44] *** Quits: nomic (~nomic@185.192.69.208) (Ping timeout: 245 seconds)
[03:41:16] <SnoopJ> Togra, in my experience, class-level attributes are a mistake more often than they aren't
[03:41:20] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:42:00] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:42:26] <InPhase> jazz-o-lantern: The judge there does not inspect tail end elements.
[03:42:32] <InPhase> jazz-o-lantern: So, just leave them.
[03:42:39] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[03:43:06] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[03:43:08] <jazz-o-lantern> InPhase, that's what it says, but I ran this: https://i.snipboard.io/WVLPNZ.jpg
[03:43:28] <InPhase> jazz-o-lantern: What value did you return from your function?
[03:43:52] <jazz-o-lantern> doesn't use return statement, uses the input
[03:43:56] <jazz-o-lantern> since you're supposed to manipulate it in place
[03:44:16] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:44:18] <InPhase> jazz-o-lantern: It definitely uses the return value in the posted judge code.
[03:44:33] <jazz-o-lantern> strange, because in that screenshot I have no return statement
[03:44:41] <InPhase> jazz-o-lantern: Which will cause it to fail.  :)
[03:44:49] <jazz-o-lantern> but it recognizes that as the output
[03:44:54] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[03:44:56] <InPhase> Because you modified in place.
[03:45:04] <InPhase> The return value is to be an integer count of the non-duplicates.
[03:45:54] <InPhase> "Return k after placing the final result in the first k slots of nums."
[03:46:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:46:16] <jazz-o-lantern> InPhase, https://i.snipboard.io/qDepx8.jpg
[03:46:39] <jazz-o-lantern> oh I see now
[03:46:43] <jazz-o-lantern> whoops haha
[03:46:47] <InPhase> :)
[03:47:13] <jazz-o-lantern> first problem of this kind I've come across
[03:47:33] <jazz-o-lantern> funky judging
[03:48:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:49:14] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[03:50:59] *** Quits: John__ (~johnau@202.172.127.116) (Ping timeout: 246 seconds)
[03:51:22] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[03:51:41] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:52:12] *** Joins: John__ (~johnau@107.181.155.207)
[03:52:23] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:52:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:53:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:54:21] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:55:05] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[03:55:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[03:55:41] *** Parts: JibStyle (~user@c-71-198-134-61.hsd1.ca.comcast.net) ( )
[03:55:44] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[03:57:59] <Togra> SnoopJ ooh interesting
[03:58:15] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[03:59:27] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[04:01:35] *** Joins: Oddity (Oddity@user/oddity)
[04:01:54] *** Joins: doforlove33 (~doforlove@185.200.118.188)
[04:02:14] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[04:02:46] <SnoopJ> Togra, actually, as I think about it, I have a little show-and-tell sample related to that statement: https://github.com/SnoopJeDi/playground/blob/master/python/class_attributes_are_wrong.py
[04:03:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:03:05] <Togra> oh excellent, I'll dig in
[04:03:28] * SnoopJ should probably rename that file
[04:03:45] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[04:03:53] <Togra> yeah, RightCar is how I try and do it
[04:03:59] <Togra> oh wait
[04:04:01] <Togra> ooooh
[04:04:20] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[04:04:23] <Togra> ok no, I've always done it both ways, setting them above __init__ then re-init'ing them (?) with self.prop = proparg or whatnot
[04:04:47] <Togra> never really thought about it
[04:07:05] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:07:10] <SnoopJ> Togra, in that case, you'll be modifying the attribute on the class, because the interpreter says "oh, I know about something called 'prop' on this object already!"
[04:07:29] <SnoopJ> where that something is the class attribute shared between all instance
[04:07:30] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[04:07:42] *** Joins: nomic (~nomic@185.192.69.208)
[04:08:04] <SnoopJ> if it doesn't exist when that line is run, the interpreter says "okay, I'll attach the name 'prop' to _this object_ with the value named by 'proparg'"
[04:08:17] <Togra> ahhh ok
[04:08:28] <Togra> cool, that's not too big of an adjustment to make to my classes in things
[04:08:39] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[04:08:42] <SnoopJ> there are valid reasons to want to store data on the class object instead of individual instances, but they are relatively infrequent
[04:08:57] <InPhase> Togra: There are limited good usages of them.  An example might be instance_registry = []
[04:09:05] <Togra> yeah, I'm guessing cases where you'd want them to share
[04:09:21] *** Joins: sudomann (~sudomann@2601:543:100:2e3:601c:15b1:1527:539e)
[04:09:33] <SnoopJ> ...well, unless you're using the `dataclass` library or `attrs`, which use them to do some neat tricks that give you instance attributes in the end when you actually build an object
[04:10:09] <sudomann> does constraint `package>=4.2.3` permit major versions?
[04:10:20] <SnoopJ> (has anybody done a "how attrs works" blog post? that would be a great one if it doesn't already exist)
[04:10:35] <sudomann> e.g. package==5.1.0 is available and that gets installed instead?
[04:10:50] <SnoopJ> sudomann, that would satisfy the constraint, yes
[04:11:12] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[04:11:12] *** Quits: flokuehn (~flokuehn@i5E86B39C.versanet.de) (Ping timeout: 268 seconds)
[04:12:32] *** Joins: flokuehn (~flokuehn@i5E86B3EF.versanet.de)
[04:12:50] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:13:27] *** Quits: MikZyth (~MikZyth@188.65.243.47) (Quit: WeeChat 3.3)
[04:14:20] <InPhase> sudomann: import packaging.version;  packaging.version.parse('5.1.0') >= packaging.version.parse('4.2.3')
[04:14:36] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[04:14:45] <InPhase> sudomann: This is supposedly what setuptools uses internally, so you can check more nuanced cases by hand.
[04:15:06] <sudomann> Thats a usefull util, thanks!
[04:19:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069) (Ping timeout: 256 seconds)
[04:20:39] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:25:28] *** Quits: pgib (~textual@173.38.117.88) (Ping timeout: 252 seconds)
[04:28:27] *** Joins: fofoni (~fofoni@user/fofoni)
[04:28:29] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:29:06] <SnoopJ> sanity check: is there any actual reason to do this instead of running code in the current process? https://bpa.st/PYAQ
[04:29:36] <SnoopJ> (that's a snippet from nvidia-pyindex, which has captured my attention/ire as a particularly poorly-behaved bit of tooling)
[04:30:02] <sudomann> When I do `pip install pytest pytest-cov coverage-badge` and any of those packages in ttheir setup.py has a dependency version constraint like `package>=4.1.0`. How can I provide an upper limit?
[04:30:23] <nedbat> sudomann: package>=4.1.0,<5.0
[04:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:30] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[04:31:08] <sudomann> Sorry I dont understand, I cannot touch their setup.py - perhaps I', missing how pip resolves dependencies?
[04:31:39] <nedbat> sudomann: you can use `-c mycontraints.txt`, with rules in it
[04:31:48] <nedbat> sudomann: why do you need an upper limit?
[04:32:20] <nedbat> sudomann: is it about coverage?
[04:32:26] <sudomann> YES
[04:32:33] <nedbat> sudomann: what's the problem?
[04:32:50] <sudomann> Recently upgrade to 6.x.x and suddenly our tests dont work due to some missing attribute
[04:33:12] <nedbat> sudomann: which project isn't working? can you link me to a failing test?
[04:33:37] <sudomann> Not quite - I'll see if I can pull a useful trace
[04:34:01] <nedbat> sudomann: is it inside coverage-badge that's failing?
[04:34:27] <sudomann> https://bpa.st/Q3SQ
[04:34:33] <sudomann> correct
[04:34:53] *** Joins: vlm (~vlm@user/vlm)
[04:35:05] <sudomann> wow you are on the nose with thise one. I suppose I'm not the first to roll through here looking for a fix on this haha
[04:35:39] <nedbat> sudomann: I'm the maintainer of coverage.py... :)   https://github.com/nedbat/coveragepy/issues/1227
[04:36:02] *** Joins: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14)
[04:36:13] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[04:36:15] <sudomann> LOL wow I almost feel like I've run into a celebrity ;D
[04:36:48] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:37:01] <nedbat> sudomann: i put my pull requests on one leg at a time, just like everyone else :)
[04:37:07] <nedbat> coverage-badge has a "fix" https://github.com/dbrgn/coverage-badge/pull/14
[04:37:37] <sudomann> I guess google hasnt had enough time to index the issue yet, because i search exactly "AttributeError: 'Precision' object has no attribute '_near0'" and got nothing recent or related
[04:38:07] *** Joins: nicode (~nic@2607:f2c0:93a1:f100:c31d:d8a9:6afd:3cb2)
[04:38:24] *** Quits: John__ (~johnau@107.181.155.207) (Read error: Connection reset by peer)
[04:38:42] <nedbat> sudomann: they've released 1.0.2 with the limitation of coverage < 6.0
[04:39:45] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[04:40:39] *** Joins: johnau (~johnau@202.172.127.116)
[04:41:50] *** Joins: matsaman (~matsaman@user/matsaman)
[04:42:15] <nedbat> (which i think is a bad way to fix it, but ok)
[04:42:22] <sudomann> oh wonderful thank goodness I put this off for later. Wouldve likely wasted a couple hours trying to figure it out
[04:42:29] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:42:46] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[04:43:15] <sudomann> And I think version constraints that permit major version changes should be discouraged
[04:44:11] <nedbat> sudomann: I think using other projects' internals should be discouraged
[04:46:02] <sudomann> agreed!
[04:48:40] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:49:26] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:49:30] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[04:49:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:49:51] *** brabrax_ is now known as brabrax
[04:50:15] <iphone> I just love managing my budget at https://www.youneedabudget.com/ Nothing makes me happier than coming home at the end of the day and knowing that I manage my money, not the other way around. Get started today with a 34 day trial, cancel at any time. But we promise you won't want to.
[04:50:35] <nedbat> iphone: don't do that
[04:50:56] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.4-dev)
[04:51:18] *** Joins: r3m (~launch@user/r3m)
[04:51:48] *** Joins: fikran (~fikran@user/fikran)
[04:52:32] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[04:55:20] *** Quits: synaps3 (~void@user/synaps3) (Quit: Leaving)
[04:57:42] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:00:00] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[05:00:06] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Remote host closed the connection)
[05:01:08] <sudomann> lmfao ads on irc
[05:01:49] <phantomotap> well, someone has to target the five of us who still use irc regularly.
[05:02:24] <sudomann> I could easily picture those fake-excited, over-enthusiastic people they always cast to read these scripts
[05:03:06] <phantomotap> why 34 days i wonder?
[05:03:34] <sudomann> An extra 4 days grace period because we understand you have a busy schedule
[05:03:47] *** Joins: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[05:03:58] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[05:04:24] <sudomann> We pride ourselves on our customers' satisfaction rate
[05:04:34] *** Quits: Jefren (~Jefren@208.104.190.54) (Ping timeout: 252 seconds)
[05:05:49] <phantomotap> sounds to clinical. "Our customers love us on facebook!"
[05:06:17] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[05:06:34] *** Joins: Jefren (~Jefren@70.35.67.137)
[05:08:39] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 245 seconds)
[05:08:47] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[05:11:07] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[05:11:16] *** Quits: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com) (Ping timeout: 252 seconds)
[05:11:52] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:12:43] *** Quits: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14) (Quit: Leaving)
[05:13:39] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[05:14:17] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:16:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:17:05] *** Joins: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14)
[05:17:05] *** Quits: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14) (Client Quit)
[05:17:16] *** Joins: XV8 (~XV8@2601:5cb:c001:50:fcdc:b6a2:4b2f:94e6)
[05:17:19] *** Joins: portalrat_ (~portalrat@user/portalrat)
[05:18:07] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[05:19:58] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 252 seconds)
[05:20:17] *** Quits: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[05:20:50] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[05:21:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:22:11] <AhmedAmerican> using `argparse` , what is the best practice to check if file exist?
[05:23:29] <InPhase> Don't.  Instead try to open it later, and error out if the open fails with a useful diagnostic.
[05:24:05] <InPhase> Files can exist but not be readable or writable, which is equivalently problematic.
[05:24:21] <InPhase> Or it could exist and be a directory and not a file.
[05:24:29] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:24:29] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:24:50] <AhmedAmerican> InPhase: something like that ? https://bpa.st/C4GA
[05:25:16] <InPhase> You can do that, but don't.
[05:25:33] <InPhase> Files can also exist when argparse runs, but disappear before you open them.  What do you do then?
[05:25:54] <AhmedAmerican> got it, so i will try/except better
[05:25:55] *** Joins: sydbarret (~anton@static-186-121-195-47.acelerate.net)
[05:25:58] <sh4rk> whats the best way to upload files that only go to a profile when dropped in the image server in python flask? i created an 'uploads' page, i could do it for each /uploads/<username>/img.jpg but eh, how do i lock those images down to just the user so not everyone with a login can see it
[05:26:22] *** Joins: xiongxin (~quassel@119.123.102.49)
[05:27:30] <sydbarret> if i have string s='7/12/2021 9:00:00 AM' how do I convert it to date or datetime with this format? "yyyy-mm-dd hh:mm"
[05:28:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[05:29:11] <sh4rk> date_time_obj = datetime. strptime(date_time_str,'%yyyy/%mm/%dd %HH:%MM')
[05:29:36] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[05:29:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[05:30:12] <InPhase> sydbarret: dateutil.parser.parse('7/12/2021 9:00:00 AM').strftime('%Y-%M-%d %H:%M')
[05:30:25] <InPhase> Oops.
[05:30:32] <sh4rk> print(type(date_time_obj))
[05:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[05:30:40] <InPhase> sydbarret: dateutil.parser.parse('7/12/2021 9:00:00 AM').strftime('%Y-%m-%d %H:%M')
[05:30:53] <sh4rk> whats wrong w/ my way
[05:31:14] <sh4rk> and he wants all digits, isnt it yyyy
[05:31:20] <sydbarret> module 'dateutil' has no attribute 'parser'
[05:31:26] <InPhase> import dateutil.parser
[05:31:36] <sh4rk> fromt datetime import datetime
[05:31:45] <sh4rk> i guess 2 diff ways to attack the beast
[05:31:58] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:1c3a:3794:22dd:13f6) (Ping timeout: 250 seconds)
[05:32:09] <sydbarret> it works thanks
[05:32:14] *** Quits: sudomann (~sudomann@2601:543:100:2e3:601c:15b1:1527:539e) (Read error: Connection reset by peer)
[05:32:14] <InPhase> sh4rk: Basically, parser.parse is awesome and requires no thinking, as it is super flexible.
[05:32:28] <sh4rk> ah i see what you mean
[05:32:35] <InPhase> sh4rk: You can just guess that it's going to parse something that somebody wants to parse.
[05:32:52] <sh4rk> lol
[05:32:55] <sh4rk> weird
[05:32:58] <InPhase> Every once in a while someone comes up with something absurd, and it doesn't.  :)
[05:33:02] *** Joins: niemal (~niemal@user/niemal)
[05:33:20] <sh4rk> we all tailor things and some people have very strong and specific regex filters
[05:33:30] <sh4rk> that need the date and time to be exact because they cant change it, they dont know its literal nature
[05:33:45] <sh4rk> pcre is fun but most dont know regex amongst a multitude of langs
[05:34:30] <sh4rk> anywho, any thoguths on this inphase?
[05:34:32] <InPhase> sh4rk: If you want to go really crazy, then the 3rd party package dateparser is nice.  dateparser.parse('5 months ago')
[05:34:44] <sh4rk> whats the best way to upload files that only go to a profile when dropped in the image server in python flask? i created an 'uploads' page, i could do it for each /uploads/<username>/img.jpg but eh, how do i lock those images down to just the user so not everyone with a login can see it
[05:35:10] <aphysically> jinsun: I haven't fixed any of the cases where pyright strict couldn't infer types yet; I want to look later and see what I can learn about the cases where it's worse than mypy
[05:35:18] <sh4rk> i setup an image upload server in python as a webapp with python flask, created user management, trying to figure out the proper way of doing this
[05:35:35] <aphysically> (plus it was a lot)
[05:35:47] <InPhase> sh4rk: I don't flask, outside of a quick trial of it once, so that's a question for someone else.
[05:36:02] <sh4rk> i mostly pipe real python code into it man
[05:36:34] <sh4rk> im just using the framework because i don't know python enough to do what flask does on my own yet
[05:36:59] <aphysically> InPhase: do you use something other than flask, or do you not program in that area?
[05:37:03] <sh4rk> its all honestly python, and in building a site it should be the same for anyone right?
[05:37:21] <InPhase> aphysically: My Python is primarily data analysis and system administration stuff.
[05:37:34] <sh4rk> flask's templating system is beautiful
[05:37:39] <sh4rk> only reason i used it, and its not as strict as django
[05:37:50] <SnoopJ> sh4rk, different web frameworks offer different advantages. Flask is relatively simple, and this may be an advantage or disadvantage, depending on what you're building and what your aesthetic values are.
[05:37:52] <sh4rk> plus i just wanted to dabble a little more in python vs constantly working with php
[05:38:00] <InPhase> aphysically: And random extras as needed of course.
[05:38:14] <sh4rk> yea SnoopJ i noticed, like people using csrf tokens
[05:38:23] <sh4rk> im technically adept when it comes to security
[05:38:33] <InPhase> aphysically: I haven't done any serious web work since php was cool.
[05:38:34] * SnoopJ glances at the headlines
[05:38:38] <sh4rk> im not doing anything foolish, its all clean code so far :x
[05:38:39] *** Quits: doforlove33 (~doforlove@185.200.118.188) (Quit: Leaving)
[05:39:10] <sh4rk> one thing im doing that i should cut out is using imagemagick
[05:39:23] <sh4rk> but im not using it in the way it can be popped
[05:39:24] <InPhase> sh4rk: PIL can replace most of imagmagick.
[05:39:30] <aphysically> InPhase: I'd sorta rather not get shoehorned into data science myself
[05:39:32] <sh4rk> ill check that out
[05:39:37] <aphysically> or maybe it's the opposite problem; the shoe fits and I wish it didn't
[05:39:42] *** Joins: comet23 (~comet23@user/comet23)
[05:39:51] <sh4rk> imagemagick recently got outed for a company being raped cause they were using it
[05:39:58] <sh4rk> for not truncating or something i forget
[05:40:16] <comet23> why don't i need a counter for a while loop? (ie i = 0) https://bpa.st/GKEQ
[05:40:17] <InPhase> aphysically: I've come to prefer the term "computational science" for what I do in this area.
[05:40:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[05:40:32] *** Joins: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[05:40:45] <sh4rk> thats just called being a computer engineer
[05:41:55] <InPhase> Computer engineers work with or near the hardware level.  Computational science is using computers to solve data analysis problems or other similar numerical work.
[05:42:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:42:24] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:42:27] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[05:42:39] <comet23> here's a better explanation...
[05:42:40] <comet23> https://bpa.st/6F2A
[05:42:43] <InPhase> Less grabbing from databases, and more fancy algorithms than what gets called "data science", although there's a clear overlap.
[05:42:48] <sh4rk> not necessarily
[05:42:56] <sh4rk> but ya im a data link layer guy
[05:43:07] <sh4rk> full virtualization specialist, aka devops w/e you wanna call it
[05:43:09] <sh4rk> and reverse engineer
[05:43:33] <SnoopJ> comet23, in most languages (including Python), `while` loops as long as the given condition is true.
[05:43:52] <comet23> is it true that if you know reverse engineering you will be a guaranteed millionaire on salary alone sh4rk?
[05:44:02] <sh4rk> no
[05:44:13] <sh4rk> promoting yourself is difficult
[05:44:16] <InPhase> comet23: Since I know how to do reverse engineering, I will declare that not true.  :)
[05:44:25] <sh4rk> when you don't come from schooling and you learned it all yourself by tinkering around with marcus hutchins
[05:44:29] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Ping timeout: 264 seconds)
[05:44:41] <SnoopJ> Quite a few reverse engineers don't take a salary at all.
[05:44:49] <sh4rk> before he reversed wannacry, we reversed many other things
[05:45:02] <sh4rk> he didn't do it himself, a collective group did, as he registered the domain once he found that piece of info
[05:45:03] <comet23> SnoopJ right but that doesn't explain to me how that condition becomes false
[05:45:20] <sh4rk> someone else actually called the domain out, he checked it for registration, registered it and "saved the world from wannacry"
[05:45:35] * sh4rk gags
[05:45:54] <comet23> oh i just answered my own question
[05:45:55] <comet23> wow
[05:45:57] <comet23> sorry
[05:46:04] <SnoopJ> comet23, the length of the string increases by one in each iteration :)
[05:46:10] <sh4rk> lol because its true
[05:46:11] <comet23> yeah so sorry
[05:46:23] <InPhase> comet23: No sorry, that's the desired outcome.  :)
[05:46:38] <SnoopJ> indeed, no apology necessary, that's what #python is all about :)
[05:46:39] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[05:46:45] <comet23> idk why i'm making these long answers to code challenges that should be much shorter
[05:47:17] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:47:32] *** Joins: noarb (~noarb@user/noarb)
[05:47:41] <deltab> comet23: len(word) is your counter
[05:47:58] <comet23> https://bpa.st/UUCA
[05:48:01] <sh4rk> which is your truncating
[05:48:27] <sh4rk> wait greater than or equal to 20?
[05:48:31] <comet23> yeah i get it the word gets updated with each iteration and the length is checked again
[05:48:33] <sh4rk> you sure you dont want <=
[05:48:53] <comet23> no i want to stop at 20
[05:48:58] <InPhase> while len(word) is not good...
[05:49:00] <sh4rk> wait nvm im reading that backwards. i need  to quit swapping between intel and GAS
[05:49:07] *** Quits: jazz-o-lantern (~jaziz@2600:380:8571:702f:f1ff:6af3:416:3043) (Ping timeout: 252 seconds)
[05:49:19] <InPhase> comet23: If you do that, it will loop while word has characters, but not loop when it doesn't.
[05:49:25] <deltab> comet23: add a  print(len(word)) in the loop
[05:49:56] <comet23> deltab yeah i reread the code and had another aha moment
[05:51:00] <comet23> i don't like how for me i have to seek help in order to get myself to think a little harder and figure it out on my own
[05:51:16] <InPhase> comet23: To understand why the "while len(word):" is problematic, try calling with add_exclamation('')
[05:52:24] <comet23> InPhase the solution to that problem is the shorter one while len(word)
[05:52:36] <comet23> mine is the long one
[05:52:53] <comet23> in your professional opinion is my solution better or is theirs better?
[05:53:23] <InPhase> comet23: Show another link comparing the two in question.
[05:53:45] <InPhase> There were many versions shown...
[05:53:45] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[05:53:55] <comet23> https://bpa.st/4AKA
[05:54:00] <comet23> it's the very last one
[05:54:04] *** Quits: Lewky (~Lewky@146.70.50.10) (Ping timeout: 252 seconds)
[05:54:16] <comet23> but i wouldn't want it to loop on an empty string
[05:54:17] <InPhase> The last one wouldn't compile.
[05:54:33] <comet23> it's because of the indents
[05:54:51] <InPhase> It's more than that.  But show a working one so I can discern your correct intent, and I will give a judgment.
[05:54:56] <comet23> the formatting got wonky from copy and pasting
[05:55:54] <deltab> also delete the "while len(word)" line
[05:56:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[05:57:03] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:57:43] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[05:57:49] <comet23> https://bpa.st/4AKA
[05:58:19] <comet23> https://bpa.st/M2JA
[05:58:20] <comet23> that's it
[05:58:24] <comet23> the second link
[05:58:36] <comet23> it didn't copy paste correctly
[05:58:36] <InPhase> Try copying and pasting that into an interpreter.  It won't run.
[05:58:38] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:58:42] <deltab> line 2 is invalid syntax
[05:59:04] <deltab> it's missing the : and it's missing a statement after it
[05:59:05] <comet23> oh no i deleted the : from line 2 on accident
[05:59:08] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:59:36] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:59:47] <deltab> the computer doesn't care why it's missing :-)
[06:00:08] <deltab> just that it is
[06:01:08] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[06:01:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:47] <deltab> that's a perfectly valid alternative approach to the problem (in general; I don't now if you were told to use while)
[06:02:01] <comet23> oof finally
[06:02:03] <comet23> https://bpa.st/U7IQ
[06:02:11] <InPhase> There we go.  :)
[06:02:49] *** Quits: junktext (~junktext@77.247.181.217) (Ping timeout: 252 seconds)
[06:03:04] <deltab> great!
[06:03:11] *** Quits: willow (~willow@bay.systems) (Quit: willow)
[06:03:28] <InPhase> comet23: The "Why does this work?!" one is a better solution because it has less redundancy.  In this version you are dealing with the value 20 twice, and you need both an if and a for, so it is more "wordy" to do what can be one operation.
[06:03:32] <comet23> deltab i wasn't told to use while it just gave me a problem and i implemented a solution and the while was their implementation
[06:03:41] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:03:58] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 252 seconds)
[06:04:13] <InPhase> comet23: If you are also curious what the best sort of solution would be, I think it should look more like this:  https://bpa.st/IKVA
[06:04:39] <deltab> now consider what would happen if you didn't have the  if/return statement
[06:04:43] <comet23> InPhase WOW
[06:04:54] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[06:05:18] <deltab> InPhase: you don't even need all that :-)
[06:05:32] <comet23> how?
[06:05:47] <InPhase> comet23: Let me correct myself.  This:  https://bpa.st/7AUQ
[06:05:56] <InPhase> comet23: The longer you stare at a problem, the simpler it can get.  :)
[06:06:02] <deltab> what happens if you calculate a negative number of exclamation marks to add?
[06:06:08] <comet23> so if i write verbose code on a job interview they won't hire me right?
[06:06:42] <SnoopJ> it's hard to make rules of any kind about hiring, especially rules about code
[06:06:54] <comet23> i mean generally speaking
[06:06:58] <InPhase> comet23: Well, it depends on the position really.  Entry level positions have lighter requirements.  But code structure is absolutely a factor in hiring, as a metric for experience level with a language.
[06:07:00] <SnoopJ> generally speaking, no
[06:07:02] <deltab> comet23: that depends (or should) on how you can explain your choice
[06:07:09] <SnoopJ> (as in, no, I would not say that's a general rule)
[06:08:23] <comet23> well i'd explain it the way i wrote it because it makes the most sense to me
[06:08:26] <InPhase> comet23: Being more "verbose" is not always wrong, but repeated values when they don't need to be repeated, for example, is something that would send up some red flags of inexperience.  But, you don't need to worry about all that when starting.  :)  First, you learn how to develop code that is correct, and you did that!  Then, with practice on projects you work at making your code simpler and better
[06:08:30] <deltab> often a bigger but easier to understand design is preferable: it's easier to change, for one
[06:08:32] <InPhase> structured.  It takes a long time.
[06:09:14] <deltab> it's a balancing act: not too much, not too little
[06:09:55] <InPhase> comet23: Right.  It made more sense to you because you weren't yet comfortable with while loops.  Which is fine, because you just started.  If you applied for a Python job without understanding while loops, that would be a little premature.  :)
[06:10:10] *** Joins: jazzy (~jaziz@172.58.36.237)
[06:10:35] <comet23> i understand while loops i just didn't understand how the solution worked at first until i reread it
[06:10:48] <comet23> but your implementation now that i have no clue how that works lol
[06:11:20] *** Quits: thnee1 (~thnee@h-85-24-144-199.A328.priv.bahnhof.se) (Quit: WeeChat 3.2)
[06:11:24] <InPhase> comet23: To study the other solutions, break then apart with extra printouts or running pieces directly in the repl to see how they work.
[06:11:29] <deltab> for that you need to know an extra feature that python has: you can multiply a string by a number to repeat the string
[06:11:32] <comet23> the *max throws me off
[06:11:48] <comet23> oh that makes sense deltab
[06:11:54] <InPhase> comet23: Try things like '!'*7
[06:11:55] <deltab> '!' * 3 gives '!!!'
[06:12:09] <deltab> also try  '!' * -7
[06:12:26] <InPhase> deltab: I am dismayed that did not error out.  lol
[06:12:53] <InPhase> deltab: I suppose I never had the courage to try that one.
[06:12:55] <MTecknology> https://www.python.org/dev/peps/pep-0484/ <-- Whoever wrote this gets a covid-free hug if I ever meet them.
[06:13:09] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:13:14] <deltab> InPhase: I don't remember having tried it before
[06:13:24] <InPhase> deltab: It does remove the need for that max.
[06:13:32] <comet23> MTecknology looks like the main people behind python
[06:13:37] <deltab> so I'm learning things too :-)
[06:13:59] <InPhase> deltab: Although I would sleep better at night with the max in there.
[06:14:30] <MTecknology> I had a bunch of questions and that ended up being the best resource to answer them all, and gave me more to stuff to learn.
[06:14:39] <deltab> yeah, it's one of those cases where verbosity makes it clearer what's going on
[06:15:26] <mefistofeles> MTecknology: one of the authors is Guido van Rossum, some say that kid has future
[06:16:06] <MTecknology> I also just opened a sphinx-doc extension to learn what I need expecting a giant wall of code that would take an hour or longer to get anywhere on and it turned out to be less than one screen full (or just over with the docs).
[06:16:13] <InPhase> I just got done tracing a bug today all the way back to someone who took advantage of np.linspace truncating its number of elements parameter if a float was passed.  It broke a routine far away from this when numpy upgraded and started throwing an error for floats.  So sometimes it's risky to take advantage of the unintuitive shortcuts.
[06:16:33] *** jazzy is now known as jazz-o-lantern
[06:16:37] <MTecknology> mefistofeles: lol, I'm bad at names and didn't catch that until google :)
[06:16:58] <comet23> InPhase so will there ever be a problem with what i wrote? or is it a problem because i'm checking for 20 twice?
[06:17:35] <comet23> i thought code past the if statement doesn't get evaluated if the condition is true and it breaks out of the function
[06:17:47] <deltab> MTecknology: yeah, fairly often the originators of an idea are the best at explaining it, having the best understanding of it
[06:17:55] <InPhase> comet23: Your code is perfectly correct, as far as I can tell.
[06:18:24] <InPhase> comet23: So I would not call it a "problem".
[06:18:28] <comet23> i mean like in terms of having problems with edge cases
[06:19:08] <deltab> comet23: two basic approaches: make the string longer one character at a time until it's long enough; or work out how much needs to be added, and add that
[06:19:23] <InPhase> comet23: Where code like that will have issues is with what we call maintenance issues, meaning someone comes along and says, "comet23!  We were all wrong, there needs to be 30 exclamation points!"  And so you go into the function and quickly change 20 to 30, missing the other 20.  Now the code is wrong.
[06:20:14] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[06:20:26] <comet23> so then i could add a second parameter with the desired length and that would fix it?
[06:20:34] <InPhase> comet23: Yes.
[06:20:54] <deltab> InPhase: I fixed a bug like that today: changed a 9% tax rate to 8.5%, or in one place 85%
[06:21:19] <InPhase> deltab: Hopefully you don't work in government.  ;)
[06:22:26] <InPhase> comet23: As you can see with deltab's example, from just today, it's a common enough problem that we design around it aggressively.
[06:22:29] <comet23> if you do work in government, could you by any chance make it so that the poor don't overpay their taxes and the rich get taxed fairly?
[06:23:12] *** Quits: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[06:23:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[06:23:18] <deltab> I don't, but that's not an easy problem to solve
[06:23:26] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:23:48] <comet23> i'm poor and it doesn't sit well with me that i paid more in taxes than trump
[06:24:00] <deltab> the rich can afford to pay people to argue about what's fair, and to look for ways around the rules
[06:24:33] <InPhase> comet23: There's also a #python-offtopic for those discussions.
[06:24:44] <comet23> right... sorry
[06:25:16] <deltab> that's okay; it's only a problem if it distracts from answering someone's python questions
[06:26:13] <comet23> is there a way to tell a computer what you want and the ai generates the solution?
[06:26:43] <deltab> yes, but you need to understand the output well enough to know whether to trust it
[06:26:44] <comet23> like ai accelerated programming or something... i don't know this idea just came to me
[06:27:15] <SnoopJ> comet23, this style of problem solving is very much in the vein of "if a problem is too hard to solve, pick a harder problem"
[06:27:54] <SnoopJ> to build such a system you generally have to understand the entire domain of problems it may act over
[06:28:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:28:33] <SnoopJ> GPT-3 does surprisingly well at generating the kinds of programs you'd see responding to interview questions on Reddit, though.
[06:29:49] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:29:54] <deltab> OpenAI Codex is a sepcialized version of GPT-3 that does it
[06:29:54] *** Quits: sydbarret (~anton@static-186-121-195-47.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:30:04] *** Joins: cheater (~Username@user/cheater)
[06:30:07] <SnoopJ> with extremely mixed results, heh.
[06:30:19] <deltab> which is the basis of GitHub CoPilot
[06:30:26] <comet23> oh wow super cool
[06:30:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:30:56] <comet23> so when this thing is running well does that mean the end for programmers?
[06:31:13] <SnoopJ> definitely not, especially in light of how bad a job that one has done so far
[06:31:14] <comet23> and programming will become strictly debugging?
[06:31:35] <comet23> SnoopJ well i think it's only a matter of time
[06:31:44] <SnoopJ> probably the job will change over time as automation of this sort becomes more useful, though. In the same way that IDEs introduced changes.
[06:31:58] <SnoopJ> (or compilers, or...)
[06:32:30] <comet23> but aren't people writing compilers this day and age or are they all from the early days?
[06:32:33] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[06:32:34] <deltab> compilers can detect way more bugs than they used to be able to, and sometimes even tell you how to fix them
[06:32:49] <SnoopJ> comet23, it's both
[06:32:54] <comet23> i love what apple did with swift
[06:33:14] <deltab> but you still need to know what it's telling you and what you should do with it
[06:33:54] *** Joins: ano (~ano@user/ano)
[06:33:56] <comet23> what i'm talking about is a completely automated system that generates, compiles, and executes code on the fly
[06:34:20] <deltab> a large part of the work of a developer is understanding what's required and being able to define it precisely and accurately enough
[06:34:49] <SnoopJ> comet23, that's something people have been making in one form or another for ~50 years. Perhaps the 'real' revolution is just around the corner, but I won't be placing any large bets on that.
[06:35:34] <SnoopJ> but even if the large goal here is never met, the work towards surely has and surely will produce interesting food for thought :)
[06:35:42] <comet23> if i was rich i would invest in that... i'm not sure how bad it would be for developers and computer work in general though
[06:36:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:36:26] <comet23> i still haven't had my first job... i'm working on a portfolio and hope to get hired from it and still be able to attend school to finish my computer science degree
[06:36:48] <SnoopJ> The automation apocalypse is also something people have been crowing about for 50 years.
[06:37:02] <SnoopJ> or longer!
[06:37:44] <comet23> wow
[06:37:48] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:37:50] <madduck> given a mapping such as {1000:'A',500:'B',250:'C'} is there an existing data type or another smart way that I can use to get the "grade"? i.e. 300 → C, 750 → B etc.?
[06:37:51] <deltab> "Computer, build me a car. No, one that's large enough for me to fit inside. And the wheels should turn. And it should be steerable. And it should be able to move by itself. And it should be able to stop. And ..."
[06:38:02] <comet23> lol
[06:38:20] <comet23> i see what you're saying deltab
[06:38:21] <madduck> and no, I am not doing homework. I can easily write this up in O(n) anyway. but I wonder if there's a better way
[06:38:42] <madduck> probably should be easy to do with O(log n) even using a binary search
[06:38:58] <comet23> what kinds of projects should i have on my portfolio to get hired without a degree?
[06:39:08] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:39:28] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:40:19] <SnoopJ> Serious answer: the kind that impress the people you want to be hired by.
[06:40:57] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[06:41:02] <comet23> impressive is so subjective :(
[06:41:10] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[06:41:27] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[06:41:37] <deltab> by the way, thumbs up on looking for edge cases and on introducing a second parameter
[06:41:51] <MTecknology> The contribution is more impressive than the project. I have code in nginx and in salt. The nginx one... I added support for a new datestamp log format. Salt, I can talk for hours about it.
[06:42:11] *** Quits: alphasierra (~alphasier@2405:201:e:4d:580:ccdf:ff79:e710) (Read error: Connection reset by peer)
[06:42:32] <SnoopJ> Just demonstrating an end-to-end project can have value, even if it's not terribly complete. But it's going to depend on exactly who's looking, in the end.
[06:43:13] <deltab> madduck: you can make an ordered list and use binary search for O(log n)
[06:43:22] <deltab> oh right you said that
[06:43:53] *** Joins: y1n-v1 (~y1n@178.115.78.161.wireless.dyn.drei.com)
[06:44:03] <deltab> though the overhead of the binary search is likely to overwhelm the cost of linear search for small n
[06:44:15] <OMGOMG_> log2(1000) may be more than the number of grades
[06:44:24] <OMGOMG_> madduck: how many grades are there
[06:44:42] *** Quits: km (~km@user/km) (Remote host closed the connection)
[06:44:54] <MTecknology> If I were interviewing someone that offered their github profile, I'd be interested in how they respond to criticism than the actual contribution. The contribution, I'd just be interested that it looked like they put in effort.  The right kind of person can always learn (it's part of being the right person), so it's a lot more interesting how they're likely to interact with a team.
[06:44:56] *** Joins: km (~km@user/km)
[06:45:11] <OMGOMG_> and how many "papers" are you "grading"
[06:45:40] <MTecknology> Depends on where I'm at. In some positions I made a lot of hiring decisions.
[06:46:09] *** Quits: Bugz000 (~Bugz000@user/bugz000) (Ping timeout: 245 seconds)
[06:46:12] *** Quits: mindlesstux (sid18072@id-18072.lymington.irccloud.com) (Ping timeout: 265 seconds)
[06:46:14] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Read error: Connection reset by peer)
[06:46:18] *** Quits: n-st (~n-st@user/n-st) (Quit: ␄)
[06:46:23] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[06:46:32] <MTecknology> I've only been at $current_employer for ~2 months so nothing here, but we're opening a position on the team soon. :)
[06:46:33] *** Joins: n-st (~n-st@user/n-st)
[06:46:39] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Quit: No Ping reply in 180 seconds.)
[06:46:45] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: No Ping reply in 180 seconds.)
[06:46:46] *** Joins: mindlesstux (sid18072@id-18072.lymington.irccloud.com)
[06:47:47] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[06:47:57] <madduck> OMGOMG_: just 20
[06:48:01] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[06:48:02] <madduck> so linear search it is!
[06:48:09] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Ping timeout: 265 seconds)
[06:48:09] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Ping timeout: 265 seconds)
[06:48:10] <madduck> I am looking into enum actually
[06:48:23] <madduck> nice way to present it, and can be iterated, so…
[06:48:37] *** Quits: Aminda- (~mikaela-@Feneas/Mikaela-) (Ping timeout: 265 seconds)
[06:48:37] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 265 seconds)
[06:48:38] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Ping timeout: 265 seconds)
[06:48:38] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 265 seconds)
[06:48:38] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 265 seconds)
[06:48:42] <deltab> madduck: you could test both to find out how each scales
[06:49:07] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 265 seconds)
[06:49:43] <deltab> if you have sufficient spare time, or a sufficiently advanced toolkit, that is
[06:49:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:51:41] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 264 seconds)
[06:53:17] *** Joins: psydroid (~psydroid@user/psydroid)
[06:54:08] <MTecknology> comet23: ... you said something about searching?
[06:54:11] *** Joins: semeion (~semeion@user/semeion)
[06:54:27] <MTecknology> message me if you're interesting...
[06:54:31] <comet23> searching?
[06:54:56] <MTecknology> I thought I was reading about job searching and trying to get into the field without the background
[06:55:02] <comet23> oh yeah
[06:55:12] <comet23> i'm still in college for a computer science degree
[06:55:36] *** Quits: y1n-v1 (~y1n@178.115.78.161.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[06:55:52] <MTecknology> ah, in that case... message me later. I'm sure I'll still be around (assuming libera still is)
[06:56:34] <comet23> i'm trying to find a job while i'm still in school because i want to get better faster while paying my bills
[06:56:53] <MTecknology> If you take an active interest in learning and caring about the quality of your code, then you'll be able infinitely ahead of much of your competition.
[06:58:08] <MTecknology> My most memorable college job was helping at a butcher shop. I just had a flashback of walking into my dorm and someone thinking I'd just come from an accident where someone probably died.
[06:58:57] <comet23> i'm switching careers here... i was in the military doing completely unrelated stuff and now i'm going back to college
[06:58:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:59:22] <comet23> i'm old and don't have a college degree and lack a general sense of direction/purpose at the moment
[06:59:42] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[07:00:19] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[07:00:35] <MTecknology> the lack of degree seems easy enough to overcome, but the lack of direction not so much. Mind if I prod you via PM? (I'm about to go a million miles off-topic)
[07:01:08] *** Joins: fikran (~fikran@user/fikran)
[07:01:13] <MTecknology> tl;dr -- passion > experience
[07:02:30] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[07:02:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[07:02:51] *** Joins: jinsun_ (~jinsun@user/jinsun)
[07:03:12] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[07:05:53] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[07:06:10] *** Joins: Aminda- (~mikaela-@Feneas/Mikaela-)
[07:06:12] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[07:06:33] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[07:07:53] *** Joins: ano (~ano@user/ano)
[07:08:35] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[07:14:17] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[07:14:21] <madduck> deltab, OMGOMG_: https://scratch.madduck.net/2021-10-06-164355-paste it'll do
[07:15:51] *** Joins: ano (~ano@user/ano)
[07:19:06] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[07:19:22] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[07:21:12] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[07:22:10] *** Joins: Kharon (uid511277@user/cypris)
[07:28:14] *** Quits: xiongxin (~quassel@119.123.102.49) (Ping timeout: 245 seconds)
[07:33:02] *** Joins: Joel (~jjshoe@user/joel)
[07:33:37] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com) (Read error: Connection reset by peer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:07] <OMGOMG_> that's one way. test the edge cases
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:05] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 246 seconds)
[07:42:36] *** Joins: emf (~emf@2620:10d:c090:400::5:b405)
[07:43:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:43:33] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[07:43:42] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:45:12] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2894:b109:bf05:283b) (Quit: Textual IRC Client: www.textualapp.com)
[07:47:23] *** Joins: meti (~meti@user/meti)
[07:48:34] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[07:53:06] *** Quits: emf (~emf@2620:10d:c090:400::5:b405) (Ping timeout: 260 seconds)
[07:53:40] *** Quits: LiftLeft (~LiftLeft@102.165.16.219) (Ping timeout: 250 seconds)
[07:58:39] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[08:00:07] *** Quits: manuels (~manuel@80.211.205.88) (Quit: The Lounge - https://thelounge.chat)
[08:00:15] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[08:00:44] *** Joins: manuels (~manuel@80.211.205.88)
[08:04:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Excess Flood)
[08:05:16] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:05:51] *** Joins: Lewky (~Lewky@146.70.50.162)
[08:09:39] *** Quits: dangrenier83 (~pi@user/dangrenier83) (Read error: Connection reset by peer)
[08:09:53] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[08:10:37] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[08:13:57] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[08:17:53] *** Joins: d3sync (~d3sync@130.43.59.21.dsl.dyn.forthnet.gr)
[08:19:45] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:5591:a4eb:b0e9:475d) (Read error: Connection reset by peer)
[08:19:54] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[08:20:17] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[08:25:25] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[08:26:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:28:25] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[08:28:36] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Client Quit)
[08:29:18] *** Joins: dvx (~dvx@185.63.97.64)
[08:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:24] *** Joins: stranac (~stranac@195.29.239.126)
[08:32:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:34:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[08:37:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:41:53] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[08:45:25] <comet23> what caused python to become so popular
[08:45:40] <comet23> oh wait i have to go to the other channel sorry
[08:46:33] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[08:47:29] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[08:47:33] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[08:53:09] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[08:54:07] <ApostleInTriumph> Hello. I've one yml file. I'd like to create two env from this file but with different name. how do I go about?
[08:55:17] *** Quits: jazz-o-lantern (~jaziz@172.58.36.237) (Read error: Connection reset by peer)
[08:55:20] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069)
[08:55:43] *** Joins: jazz-o-lantern (~jaziz@172.58.36.237)
[08:57:57] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:58:51] *** Quits: nawcom (~nawcom@bulldadachat.com) (Ping timeout: 245 seconds)
[08:59:22] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:00:52] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:01:34] *** Quits: Jefren (~Jefren@70.35.67.137) (Ping timeout: 245 seconds)
[09:01:35] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:02:14] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[09:03:37] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[09:03:45] *** Joins: Jefren (~Jefren@70.35.67.150)
[09:04:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 246 seconds)
[09:04:23] *** Joins: NeoCore (~neocore@45.152.181.132)
[09:05:06] *** Joins: notepad (~notepad@129.159.46.243)
[09:06:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:08:19] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[09:08:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:09:33] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:10:28] *** Joins: fikran (~fikran@user/fikran)
[09:10:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:35d4:3243:748c:b069) (Quit: Client closed)
[09:11:09] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[09:12:12] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:12:21] *** Joins: pradhvan (~pradhvan@dgplug/pradhvan)
[09:12:32] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[09:12:42] *** Joins: notepad (~notepad@129.159.46.243)
[09:13:20] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[09:14:26] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:15:57] *** Joins: kosh (~kosh@user/kosh)
[09:20:30] *** Joins: ubert (~Thunderbi@77.119.164.97.wireless.dyn.drei.com)
[09:20:55] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Remote host closed the connection)
[09:21:50] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:22:57] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:23:56] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[09:25:02] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:25:55] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[09:26:41] *** Quits: comet23 (~comet23@user/comet23) (Quit: Client closed)
[09:27:29] *** Joins: swensson (~swensson@213.88.131.10)
[09:27:46] *** Joins: mei (~mei@user/mei)
[09:29:40] <MTecknology> ApostleInTriumph: It's not clear to me what your question is.
[09:30:00] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[09:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:31:13] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[09:31:23] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:33:00] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:33:02] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:33:05] *** Joins: xiongxin (~quassel@119.123.102.49)
[09:36:12] *** Joins: mrwick (~mrwick@user/mrwick)
[09:36:46] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:bc21:8a25:987c:b322)
[09:37:23] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:38:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:42:55] *** Joins: doran (~doran@user/doran)
[09:43:38] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[09:43:59] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[09:46:03] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:46:40] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[09:46:41] *** Quits: seednode1 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:19] *** Joins: seednode1 (~seednode@user/seednode)
[09:48:21] *** Parts: jayvee (~quassel@idlerpg/player/jayvee) (Segmentation fault)
[09:48:39] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[09:49:15] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[09:49:28] *** Quits: doran (~doran@user/doran) (Quit: Client closed)
[09:49:48] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[09:50:42] *** Quits: jazz-o-lantern (~jaziz@172.58.36.237) (Ping timeout: 265 seconds)
[09:53:22] *** Joins: txtsd (~txtsd@user/txtsd)
[09:54:27] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:56:00] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:56:56] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[09:57:02] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[09:59:07] *** Joins: upsala (~zcb@185.213.155.160)
[10:02:33] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d0e6:fdda:aed3:7954)
[10:03:26] *** Joins: wender (~Wender@189.37.67.226)
[10:04:04] *** Joins: gusto (~Augustus@109.255.100.54)
[10:04:59] *** Quits: theo (~theo@user/theo) (Quit: Bye)
[10:06:05] *** Joins: theo (~theo@user/theo)
[10:07:01] *** Quits: computeiro (~Wender@189.37.66.30) (Ping timeout: 268 seconds)
[10:07:08] *** Quits: Jefren (~Jefren@70.35.67.150) (Ping timeout: 265 seconds)
[10:07:37] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d0e6:fdda:aed3:7954) (Quit: Textual IRC Client: www.textualapp.com)
[10:07:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:08:10] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[10:09:04] *** Joins: Jefren (~Jefren@70.35.67.210)
[10:09:23] *** Joins: manti7 (~manti7@185.107.94.249)
[10:10:25] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:b539:8553:ccaf:8898)
[10:11:28] <Samian> Anyone here have an opinion on using spaces in python dictionary keys?
[10:11:47] <KirkMcDonald> Samian: It is a thing that is permitted.
[10:12:32] *** Quits: monchi (~monchi@ec2-52-221-186-77.ap-southeast-1.compute.amazonaws.com) (Remote host closed the connection)
[10:12:45] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[10:13:35] <zln> pygame question: trying to move a image confined in a grid and redraw the background but itonly makes copies of same image https://pastebin.com/d4VSvGHi - anyone who knows pygame better than me? :)
[10:13:35] <infobob> https://bpaste.net/QV6Q (repasted for zln)
[10:14:02] *** Quits: xiongxin (~quassel@119.123.102.49) (Ping timeout: 265 seconds)
[10:14:07] <Samian> so is the go to statement in cpp, yet many people have strong opinions on it. I wasn't sure if spaces in python dictionary keys attracted criticism in that same way
[10:15:21] *** Joins: rendar (~rendar@user/rendar)
[10:16:30] <KirkMcDonald> Samian: Strings are strings. I can think of no reason to object.
[10:16:35] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[10:16:43] *** Joins: Atque (~Atque@user/atque)
[10:17:07] <Samian> thanks
[10:17:57] <Samian> yeah if PEP8 doesn't complain, no human should either heh
[10:19:04] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[10:20:55] *** Joins: palasso (~palasso@user/palasso)
[10:21:23] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[10:24:46] *** Quits: feoh (~feoh@137.184.104.30) (Quit: The Lounge - https://thelounge.chat)
[10:25:17] *** Joins: feoh (~feoh@137.184.104.30)
[10:26:12] <shangxiao> Samian: “Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live”
[10:26:56] <shangxiao> if _that_ person thinks it's ok, then place as many space as you like :)
[10:27:42] *** Quits: malvin (~retlo@172.245.134.89) (Quit: WeeChat 2.8)
[10:28:53] *** Joins: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de)
[10:30:49] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[10:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[10:31:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:46] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[10:32:13] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:33:45] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:35:42] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[10:37:22] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:38ff:e4c0:69e4:102)
[10:37:46] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:39:12] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:42:16] *** Joins: gulzar (~gulzar@14.139.123.36)
[10:43:14] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 245 seconds)
[10:44:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:45:16] <gulzar> Hi. Need some ideas.  I have text file with data in fixed column width, a column can be at 14:17 and always will be here. One of the column only allows max numbers to be 9999 as it's of 4 spaces. So it's 1..9999.  I have rows with more than 9999 count(file modification, adding my own data). How can this numbering be handled? I was thkinking of doing 0001, 0002 etc will will cover like 999 more rows. That's enough. But python doesn't allow leading 0s. Any
[10:45:17] <gulzar> ideas please
[10:45:19] *** Joins: beterraba (~beterraba@86.107.21.205)
[10:45:41] <energizer> Samian: i use https://black.readthedocs.io/
[10:45:56] <gulzar> looks like this https://paste.debian.net/1214453/
[10:46:05] <Samian> yup I'm very familiar with black. I use pyfmt which autoformats using black
[10:46:39] <Samian> correction, I'm familiar, but not really very familiar
[10:47:24] <energizer> it doesnt require a lot of familiarity, since you cant really configure it or anything, you just use it or not
[10:48:05] <energizer> gulzar: use string formatting
[10:48:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:49:04] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[10:49:39] <gulzar> energizer: but i need to play with integers :(   like resetting the numbering after removing rows
[10:51:28] <astronaut> gulzar, or you can use AWK. I use it everyday and I love it.
[10:51:52] <energizer> gulzar: i don't really understand what you're asking
[10:52:06] <energizer> are you parsing or formatting?
[10:53:12] <gulzar> energizer: this data is in file. I am storing it in pd.dataframe. the column after "DUM" got **** after 9999 count. Need to save these rows also. But can't use ****
[10:53:27] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[10:53:59] <gulzar> astronaut: ^
[10:54:16] <energizer> gulzar: can you use the spaces next to it?
[10:55:11] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:55:32] <rendar> can i send an exception inside an asyncio.Task object? like throw() method of coroutine
[10:55:33] <gulzar> energizer: no, it's fixed to 4 spacces only.
[10:56:09] <gulzar> those empty spacces have optional data which may or may not present in all files
[10:56:53] <energizer> gulzar: what about letters
[10:58:13] <energizer> gulzar: but you're asking something about 0001
[10:58:32] <gulzar> energizer: these numebrs are the count. I am using this count to mark unique rows. During calculations lots of these rows are removed as useless. The remaining are reset to 1...9999 . So need too work with integers
[10:58:39] <energizer> gulzar: oh you want to distinguish '   01' from '00001'
[10:59:09] <gulzar> energizer: yes, the numebing is 1,2,3,10,11,100,2000...9999     there is no numbering as 0001, 01 , 03 etc. So thought of using tthis
[10:59:31] <gulzar> this will add additional 999 rows. Enough for my use
[10:59:58] *** dcaro_away is now known as dcaro
[11:01:07] * enyc meows
[11:01:10] <energizer> gulzar: that seems like it could cause confusion
[11:01:14] <enyc> channel active good,
[11:01:21] <enyc> still get people turning up in old place [!!]
[11:01:21] <energizer> gulzar: i would use a different encoding
[11:01:41] <astronaut> gulzar, you are creating that file?
[11:03:23] <energizer> gulzar: you need to define a 1-to-1 correspondence between numbers 1:110000 and 5-byte sequences, which is doable
[11:03:51] *** Joins: vladoski (~vladoski@2001:b07:add:d406:63ac:6041:8fc6:151d)
[11:03:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[11:04:08] <gulzar> astronaut: no, i got that file
[11:04:30] <gulzar> energizer: makes sense, will translate later on while writing a new file
[11:04:45] <energizer> gulzar: for example just make the first character & or something
[11:04:45] <astronaut> can you give a sample line of that file?
[11:05:00] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[11:07:11] <energizer> i wouldn't be surprised if the stdlib has an encoding that can stuff large numbers into small bytecounts
[11:07:33] *** Quits: ubert (~Thunderbi@77.119.164.97.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[11:07:33] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[11:09:51] *** ub is now known as ubert
[11:10:19] *** Quits: GravitaZ (~GravitaZ2@64-203-169-228.unassigned.ntelos.net) (Ping timeout: 252 seconds)
[11:12:24] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[11:14:28] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:16:39] <gulzar> astronaut:  https://paste.debian.net/1214453/
[11:17:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[11:19:37] *** Joins: chele (~chele@user/chele)
[11:19:48] *** Joins: fikran (~fikran@user/fikran)
[11:19:53] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[11:21:53] <astronaut> gulzar, you want to give the 4th column that contain ***** unique numbers starting from 1?
[11:23:24] <energizer> just put hunter1,hunter2,hunter3 in the 4th column
[11:23:44] <energizer> to replace the ******
[11:25:34] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:29:27] <zamba> scapy is the worst library to work with.. doing stuff like from scapy.all import *
[11:29:56] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[11:32:49] *** Quits: vladoski (~vladoski@2001:b07:add:d406:63ac:6041:8fc6:151d) (Ping timeout: 265 seconds)
[11:33:20] *** Joins: vladoski (~vladoski@2001:b07:add:d406:df97:ac61:a4ae:94f1)
[11:35:56] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[11:35:57] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:03] *** Joins: shad (~shad@user/shad)
[11:37:39] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[11:38:15] *** Joins: thiras (~thiras@user/thiras)
[11:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:47:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:48:48] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:49:37] *** Joins: xiongxin (~quassel@119.123.102.49)
[11:50:41] *** Joins: iflema (~ian@user/iflema)
[11:52:16] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[11:53:15] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[11:53:38] *** Joins: ano (~ano@user/ano)
[11:56:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:58:21] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[11:58:36] <rb> hey everyone. i'm trying to cross-compile python. for some reason, when building the extensions, python will pull compile flags from my /etc/portage/make.conf and also won't choose the correct directory for the extension source files (i.e. it will do -c _struct.c instead of -c Modules/_struct.c). anyone know why this would happen?
[11:58:55] <Neoon> Hey, short question, when I added a bunch of threads to a list, before I want them to run. Can I go through this list and is there anyway to print out the data I inserted? In terms of parameters?
[11:59:08] <Neoon> I could not find anything in the documentation
[11:59:38] <Neoon> So far I could only get the thread name but I don't need that, just the parameters I inserted
[12:00:55] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[12:02:11] *** Joins: iflema (~ian@user/iflema)
[12:03:38] *** Joins: upsala (~zcb@185.213.155.160)
[12:03:41] *** Joins: plastico (~plastico@neomutt/plastico)
[12:07:06] <rendar> can i send an exception inside an asyncio.Task object? like throw() method of coroutine
[12:09:13] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:6067:1f04:a35c:ddde)
[12:10:13] <Zweimer> def func(self, x, y: int):   << what happends, if y is not an int? Do I need to implement a try catch inside my func? What Exception am I looking for if I do so?
[12:11:54] <deniska> Zweimer: python itself doesn't put much meaning behind type hints besides setting some metadata on the function
[12:12:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[12:12:27] <deniska> Zweimer: it's up to a tool like mypy, or a library like pydantic, or your own code to put some meaning behind it
[12:12:42] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[12:12:55] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:13:53] <energizer> Zweimer: i suggest installing mypy
[12:14:28] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[12:16:03] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[12:17:25] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 252 seconds)
[12:17:39] *** Joins: davor_ (~davor@user/davor)
[12:17:56] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:18:17] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:18:28] *** Quits: davor (~davor@user/davor) (Ping timeout: 252 seconds)
[12:20:56] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[12:22:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:22:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:24:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Client Quit)
[12:25:04] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:25:44] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Client Quit)
[12:25:56] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:27:51] <spaceone> how do i specify the installation of a single module in setup.py?
[12:28:06] <spaceone> I tried python_modules=... but this gives: Unknown distribution option: 'python_modules'
[12:28:19] *** Joins: vd89 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[12:28:56] *** Quits: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Remote host closed the connection)
[12:29:20] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[12:29:35] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[12:30:46] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:31:39] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[12:31:54] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[12:32:37] *** Quits: ubert (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[12:32:39] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[12:32:55] <spaceone> ah, it's py_modules (Unknown distribution option: 'python_modules')
[12:33:04] *** Joins: arinov (~arinov@213.194.126.155)
[12:34:13] *** Joins: txtsd (~txtsd@user/txtsd)
[12:35:14] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[12:36:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:39:31] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Remote host closed the connection)
[12:39:42] <gulzar> astronaut: yes, the numebrs are already starting from 1,2,3...9999 . Since column is of 4 spaces, that's the limit. After this **** was used. Which is not good for me. So tought of using 0001, 0024 etc.
[12:40:09] *** Joins: helmet33 (~usetarmac@allpc.gmit.ie)
[12:40:43] *** Quits: zepolen_ (~zepolen@2a02:587:860a:4682:fc5e:88a1:95d8:5c0c) (Quit: Konversation terminated!)
[12:40:54] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:41:41] *** Joins: zepolen (~zepolen@athedsl-154557.home.otenet.gr)
[12:42:00] <madduck> With pytest fixtures being able to provide factories, why would I write a test(myfactory) referencing the fixture, rather than just calling the factory function from the test directly?
[12:43:26] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[12:43:33] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[12:43:53] <madduck> https://scratch.madduck.net/2021-10-06-221207
[12:44:23] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:44:38] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[12:46:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[12:47:36] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[12:49:26] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:50:41] *** Joins: mikisid (~mikisid@178-222-129-235.dynamic.isp.telekom.rs)
[12:55:21] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[12:58:52] *** Joins: mexen (uid495612@user/mexen)
[13:00:13] <Samian> The more python features I use, the more I love python. functool @lru_cache(maxsize=32) is a masterpiece of elegance and simplicity. Cache's in cpp are nowhere near as easy to add or retract
[13:00:28] <Samian> *caches
[13:01:37] <Samian> Just sharing my love of Python with the channel heh
[13:03:12] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:336b:60d:36c2:1454)
[13:04:38] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[13:04:45] <shangxiao> madduck: you can do that if you wish
[13:05:07] <madduck> why would I use the fixture to return factories?
[13:06:04] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:06:17] <shangxiao> madduck: well they offer a range of benefits for more complicated test setups
[13:06:53] <madduck> yeah, i guess. And the offer a range of complexity for more simple test setups ;)
[13:07:15] <madduck> Python is not loving me right now.
[13:08:21] <shangxiao> one thing fixtures can do is allow you to envelop a context manager over the entire test via yield
[13:08:34] <madduck> true. I love that.
[13:08:42] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:09:19] <shangxiao> kewl well it sounds like you're well-versed in pytest fixtures :)
[13:09:29] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:38ff:e4c0:69e4:102) (Ping timeout: 265 seconds)
[13:09:38] <madduck> I am trying. ;)
[13:10:38] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Client Quit)
[13:10:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:11:53] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:13:39] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:14:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:14:22] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:14:39] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[13:16:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[13:17:18] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[13:17:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[13:18:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:20:41] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[13:21:40] <madduck> Assume I have a class ScheduledMatch and a class PlayedMatch. A PlayedMatch is-a ScheduledMatch. Does Python provide a way to change an instance's class, in this case once a match is played?
[13:22:25] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[13:22:35] <madduck> E.g. once played, scores become available. I could have a Match class and a lot of conditionals in there, or get_scores() raising an exception if unplayed, I guess. But something in me wants to solve this with class inheritance. Not a good idea, right?
[13:24:58] *** Joins: gusto (~Augustus@109.255.100.54)
[13:26:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:26:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:26:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:26:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[13:27:14] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:29:08] *** Joins: fikran (~fikran@user/fikran)
[13:30:25] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:31:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[13:31:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:50] <Yhg1s> madduck: you can reassign __class__, but it's not a good idea, no. It doesn't really sound like these should be separate classes, but rather a property of the class. Or, distinct instances, like 'Match', 'Schedule' and 'Result'.
[13:32:20] *** Joins: alphasierra (~alphasier@2405:201:e:4d:5429:8f08:34eb:9a89)
[13:33:03] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:34:41] *** Joins: kosh (~kosh@user/kosh)
[13:36:46] *** Quits: Jefren (~Jefren@70.35.67.210) (Ping timeout: 245 seconds)
[13:37:36] *** Joins: spuz (~spuz@213.129.88.97)
[13:37:42] <rendar> `def cancelTasks(self, *tids:list[int], *, msg:str=None) -> None:`  why this is syntax error?
[13:38:35] *** Parts: spuz (~spuz@213.129.88.97) ()
[13:39:07] *** Joins: Jefren (~Jefren@70.35.67.42)
[13:39:21] *** Quits: raph_ael (~raphael@user/raph-ael/x-7806685) (Quit: WeeChat 3.1)
[13:39:29] *** Joins: raph_ael (~raphael@user/raph-ael/x-7806685)
[13:39:53] <Yhg1s> rendar: because you have multiple *'s.
[13:40:56] *** Quits: mikisid (~mikisid@178-222-129-235.dynamic.isp.telekom.rs) (Ping timeout: 245 seconds)
[13:41:10] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:41:29] <rendar> Yhg1s, i thought that `f(*objects, *, key=None)` would have let me do: f(1,2,3,4,5,key="Hello")
[13:41:53] <Yhg1s> rendar: no, that would be 'def f(*objects, key=None)'.
[13:42:11] <rendar> fine, thanks
[13:42:19] *** Quits: rannnn8888 (~rannnn888@bzq-109-65-168-133.red.bezeqint.net) (Quit: Client closed)
[13:43:13] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se)
[13:45:02] *** Joins: mikisid (~mikisid@178-222-129-235.dynamic.isp.telekom.rs)
[13:45:45] *** Joins: athar_ (~alphasier@49.36.98.115)
[13:46:48] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[13:47:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:47:36] *** Quits: alphasierra (~alphasier@2405:201:e:4d:5429:8f08:34eb:9a89) (Ping timeout: 245 seconds)
[13:47:45] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[13:48:05] <madduck> this is also a bit weird:
[13:48:06] <madduck> (Pdb) WEEKDAYS.index(self.weekday)
[13:48:06] <madduck> *** ValueError: <property object at 0x7fc049d45860> is not in list
[13:48:28] <madduck> self.weekday is a property(lambda s: s._weekday) to make it read-only
[13:48:34] <Yhg1s> madduck: sounds like 'self' is a class, not an instance, or you assigned a property object to an instance attribute instead of a class attribute.
[13:48:42] *** Joins: mat001 (~mat001@213.143.69.121)
[13:48:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[13:49:12] <madduck> Yhg1s: oh shit, yeah, I did do self.weekday = property(…) above…
[13:49:29] <madduck> wow. does your brain run Python? ;)
[13:49:36] <madduck> amazing how fast you made that connection.
[13:50:17] <Yhg1s> I know how properties work, yes.
[13:51:46] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:51:48] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[13:51:59] *** Quits: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[13:52:21] *** Joins: alphasierra (~alphasier@49.36.98.115)
[13:54:04] *** Quits: athar_ (~alphasier@49.36.98.115) (Ping timeout: 245 seconds)
[14:03:14] *** Joins: BelayMiki (~mikisid@178-222-129-235.dynamic.isp.telekom.rs)
[14:04:16] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[14:06:30] *** Quits: gulzar (~gulzar@14.139.123.36) (Quit: Konversation terminated!)
[14:06:52] *** Quits: mikisid (~mikisid@178-222-129-235.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[14:08:03] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:08:23] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:09:40] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[14:09:48] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:09:55] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:10:25] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:11:44] <kosh> a few years ago we replaced Yhg1s's neural network with an OS written in Python, it makes him very good at python but stalls on parallel tasks that require a lot of computing power :)
[14:11:55] <rendar> i cancel a task with task.cancel(msg="Hello") .. that message gets successfully propagated to the asyncio.CancelledError exception of the coroutine the task is running, but can i retrieve that message from the Task object itself, somehow?@
[14:12:25] *** Joins: pulsar12 (~pulsar12@2001:8a0:ed4b:3d01:b8cc:783:6a62:2d7f)
[14:13:35] <Yhg1s> rendar: catch the exception raised when you call 'result' or 'exception' on the task.
[14:13:46] <bjs> rendar: yes, it's on the CancelledError exception. Which you can catch either by awiating the task or by calling task.exception()
[14:13:47] <rendar> i do that
[14:13:52] <rendar> but the message won't appear
[14:13:58] <bjs> rendar: why won't the message appear?
[14:14:06] <rendar> i don't know...
[14:14:10] <bjs> Oh does exception() raise a fresh one for some reason?
[14:14:14] <rendar> yes!
[14:14:17] <rendar> exactly
[14:14:24] <Yhg1s> okay, so don't call exception. Call result.
[14:14:56] <rendar> result will also re-raise whatever exception error has been raised into the task?
[14:15:10] <Yhg1s> hm, apparently not.
[14:15:15] <Yhg1s> (Just looking at the code.)
[14:15:18] <rendar> :(
[14:15:27] <bjs> https://docs.python.org/3/library/asyncio-task.html#task-object   if it was cancelled it should raise CancelledError again on both
[14:15:35] <bjs> but it doesn't say whether it's re-raising or raising a fresh new one
[14:15:42] <rendar> it's a new one
[14:17:21] <Yhg1s> Yeah, the task doesn't let you get to the original exception, not even with await (on the task, not the coroutine).
[14:17:48] <rendar> :(
[14:17:51] <Yhg1s> I suggest filing a bug, and either not using the Task object, or using task._exception.
[14:18:26] <bjs> Looking at the code it seems it tries to re-create with the message again but for some reason it doesn't happen like I expected
[14:18:27] <bjs> huh
[14:18:59] *** Quits: johnau (~johnau@202.172.127.116) (Quit: Dang net drop-outs)
[14:19:29] <bjs> at least from the Python code;  there is also a C impl. that might do something different.
[14:20:06] <Yhg1s> rendar: what version of Python are you using?
[14:20:45] *** dcaro is now known as dcaro_lunch
[14:23:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:23:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:bc21:8a25:987c:b322) (Ping timeout: 245 seconds)
[14:23:53] *** Joins: kenoba7 (~kenoba@user/kenoba)
[14:24:59] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:38f4:11f8:c24:b16f)
[14:25:06] *** Joins: jonaskabrink (~jonaskabr@i577BC88F.versanet.de)
[14:25:19] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[14:25:34] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 252 seconds)
[14:25:34] *** kenoba7 is now known as kenoba
[14:25:49] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[14:25:52] <rendar> Yhg1s, 3.9.6
[14:25:54] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:25:58] <rendar> Yhg1s, i have reproduced the bug here https://bpa.st/OXQQ
[14:26:07] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:26:10] <bjs> rendar: Yhg1s: https://bpa.st/T6VA this gives the (possibly buggy?) output for 3.9.6, 3.9.7 and 3.10.0,  (before 3.9 cancel didn't accept a msg)
[14:26:23] *** Joins: death916 (~death916@user/death916)
[14:26:58] <rendar> bjs, yep, i have reproduced the bug here https://bpa.st/OXQQ
[14:27:05] <bjs> The docs are unclear (sadly asyncio docs often are) but it feels like the message is supposed to be propagated
[14:27:08] <bjs> Hmm
[14:27:24] <rendar> yes, otherwise what its point?
[14:28:47] <Zweimer> Ah, we are talking about asyncio :) nice! https://stackoverflow.com/a/636570  << This short example is NOT using asyncio. How is the "do other stuff while subprocess is running" valid? In my understanding, the GUI should freeze until the process has stopped.
[14:29:09] <bjs> Zweimer: why would it freeze?
[14:29:18] <bjs> Popen just starts the subprocess
[14:29:20] *** Quits: pulsar12 (~pulsar12@2001:8a0:ed4b:3d01:b8cc:783:6a62:2d7f) (Quit: Leaving)
[14:29:26] <rendar> bjs, do you think this is a bug and i should file it?
[14:29:51] <bjs> rendar: yes
[14:30:00] <rendar> bjs, what is the proper way of filing a bug?
[14:30:07] <bjs> rendar: for something like this I guess a bpo
[14:30:15] <rendar> bjs, ok, but where?
[14:30:24] <bjs> rendar: bugs.python.org  -- i can make one if you want
[14:30:27] <Zweimer> So the subprocess does not need to be finished in order for the main program to continue running?
[14:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:36] <bjs> Zweimer: no that's the point, it's a separate process :)
[14:30:58] <rendar> bjs, i wanna do that, at least i have contributed to the py developing lol
[14:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:24] <shangxiao> Zweimer: if you wait() for it, then yes it will block… see the comments in the answer
[14:31:25] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[14:31:27] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[14:31:31] <Zweimer> bjs, and if the subprocess writes something into stderr or stdout? How will I be informed? Do i have to manually poll it with cummunicate() ?
[14:31:35] <bjs> rendar: okay,  when you've made it ping me (and maybe Yhg1s if they care) so I can nosy myself :)
[14:32:36] <Zweimer> Yeah, because in the end communicate will block the subprocess.
[14:32:45] <bjs> Zweimer: no, communicate() waits for the process to end.  Popen has stdout and stderr arguments that decide where to hook the sub-processes's stdout/stderr files to
[14:33:05] <rendar> bjs, type: behavior i guess
[14:33:20] <bjs> Zweimer: if you pass subprocess.PIPE to them, then you can read()/write() the .stderr and .stdout ; although you have to be careful not to let the pipes fill
[14:33:53] <bjs> rendar: yeah
[14:34:37] <Zweimer> bjs, but in this code example, I have to manually read the stderr and stdout with communicate() https://docs.python.org/3/library/asyncio-subprocess.html
[14:34:58] <bjs> Zweimer: communicate() is not "Manual", manually would be going proc.stdout.read()
[14:35:38] <bjs> Zweimer: if this is async though you can communicate in one async def while doing other things in another
[14:35:39] <Yhg1s> bjs, rendar: this looks to be a bug in the _asyncio accelerator module, as far as I can tell.
[14:35:44] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se) (Remote host closed the connection)
[14:36:04] <Zweimer> bjs, right. That would mean I have to "guess" if there is something in the pipe and guess its length?
[14:36:27] <bjs> Yhg1s: I was looking at that but I'm less comfortable seeing what is going on in the C
[14:36:49] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se)
[14:37:10] <bjs> Zweimer: well no, read() without arguments will read everything (but I don't suggest doing this unless you also read the other pipe concurrently), you can also do the usual thing of reading a line at a time or a loop reading chunks at a time. That's what communicate does (afterall, communicate doesn't know how long it'll be either)
[14:37:14] <Yhg1s> The code to propagate the cancellation message is pretty much just missing from the C code.
[14:37:28] <Yhg1s> oh, no, it's hiding there, hmm.
[14:37:34] <bjs> Yhg1s: from the C Future implementation? I looked, it looked like it was doing the same
[14:38:01] <Zweimer> Alright. Thanks for the information bjs. I have to process it now :)
[14:38:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 245 seconds)
[14:38:17] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:38:19] *** Quits: wender (~Wender@189.37.67.226) (Read error: No route to host)
[14:38:35] *** Joins: computeiro (~Wender@189.37.67.226)
[14:40:36] <zamba> how do i convert a float number of seconds since epoch to a datetime object?
[14:40:46] <zamba> i have timestamps like this: 1633425646.396500
[14:40:53] *** Joins: Zweimer39 (~Zweimer@2a02:908:d20:26e0:ed9e:cfca:43af:b59b)
[14:41:13] <zamba> if i do datetime.fromtimestamp() then only the number of seconds is converted, but i'm also interested in the milliseconds
[14:41:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[14:41:42] <Yhg1s> bjs: no, even if you force fallback to the pure Python implementation, it still behaves the same.
[14:41:48] *** Quits: vladoski (~vladoski@2001:b07:add:d406:df97:ac61:a4ae:94f1) (Ping timeout: 265 seconds)
[14:42:02] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:42:09] <bjs> Yhg1s: I'm very confused it looked to me at a first glance like the Python implementation was doing the right thing
[14:42:17] *** Joins: alzgh (~alzgh@user/alzgh)
[14:42:18] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[14:42:30] <bjs> it saved the message then the future created a new exception using that message and raises it :s
[14:43:21] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[14:44:21] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[14:44:30] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:45:03] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:6067:1f04:a35c:ddde) (Ping timeout: 256 seconds)
[14:45:18] <bjs> Oh I see what happened
[14:46:17] <Yhg1s> yeah, I think I do too.
[14:46:41] *** Joins: pycurious (~Adium@user/pycurious)
[14:46:44] <Yhg1s> If the coroutine is already running, it'll cancel the coroutine but not store the cancellation message on the task
[14:46:57] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:47:29] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[14:48:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:48:08] <bjs> or in general, if awaiting a cancelled future the cancellation message is not propagated it seems https://github.com/python/cpython/blob/3.10/Lib/asyncio/tasks.py#L242
[14:48:14] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:49:58] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:51:31] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[14:53:33] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[14:54:10] *** Quits: dg_dg (~dg_dg@191.101.31.17) (Ping timeout: 252 seconds)
[14:54:14] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 265 seconds)
[14:55:01] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:55:03] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[14:55:36] <wib_jonas> good, the website https://docs.python.org/3/ has updated so it now knows that 3.10 is released
[14:55:37] *** Joins: dg_dg (~dg_dg@156.146.63.138)
[14:56:36] *** Quits: manti7 (~manti7@185.107.94.249) (Read error: Connection reset by peer)
[14:56:39] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[14:57:36] *** Quits: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 245 seconds)
[14:57:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[14:58:03] <jonaskabrink> Can anybody comment on design decisions regarding Optional[MyEnum] and MyEnum with a default value? Example is in [https://bpa.st/PHYA]. I feel that Optional[Enum] should be preferred.
[15:01:21] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[15:01:40] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[15:01:56] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[15:02:02] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:02:26] <rendar> bjs, Yhg1s, done.
[15:02:35] *** Joins: manti7 (~manti7@185.107.94.249)
[15:02:48] <bjs> rendar: link? :)
[15:03:07] <rendar> bjs, sorry i have closed the browser, id is 45390
[15:03:13] *** Quits: BelayMiki (~mikisid@178-222-129-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[15:03:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:04:00] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[15:04:20] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:05:29] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 265 seconds)
[15:06:31] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[15:06:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[15:06:59] *** mIk3_09 is now known as mIk3_08
[15:07:44] *** Joins: legola (~legola@46.235.101.220)
[15:07:48] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[15:07:50] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:09:43] <Masklin_Gurder> I actually managed a N**2 comparison loopy algorithm in less than N**2 time! \o/
[15:09:45] <Masklin_Gurder> Took forever
[15:10:37] <Masklin_Gurder> Just flexing, sory
[15:11:08] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:11:46] *** Quits: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[15:12:09] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[15:12:26] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 246 seconds)
[15:12:52] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:13:24] *** Joins: Alexer (~alexer@alexer.net)
[15:15:19] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[15:17:20] *** Joins: Payam (~Payam@138.106.57.131)
[15:17:45] <Payam> Can someone help me undrestand this? https://bpa.st/6CGQ can you make a directory this way?
[15:18:10] <Yhg1s> Payam: what part is giving you trouble?
[15:18:33] <Payam> I get just an error there.
[15:18:41] <Payam> is this a correct syntax?
[15:18:59] <Payam> especially the last line
[15:19:13] <Yhg1s> Payam: well, not on its own, no. You also appear to be using instance attributes for no good reason. Can you show the error you get?
[15:19:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:21:11] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:22:03] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[15:23:14] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 245 seconds)
[15:23:53] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[15:24:02] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[15:24:48] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:25:25] <wib_jonas> what error are you getting? maybe that directory already exists?
[15:25:55] *** Joins: vd898 (~vd89@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[15:25:58] <wib_jonas> Payam: ^
[15:26:09] <Payam> wib_jonas yes
[15:27:07] <wib_jonas> then maybe remove the ignore_errors setting from the rmtree so it tells you why it didn't delete your directory
[15:27:41] <wib_jonas> also maybe change the isdir test to an exists test
[15:27:49] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:28:01] <Yhg1s> Payam: so show us the error you get.
[15:28:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:29:50] *** Quits: vd89 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:32:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[15:35:07] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[15:35:34] *** Joins: srhm (~srhm@user/srhm)
[15:35:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:11] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[15:37:37] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[15:37:48] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[15:38:27] *** Joins: fikran (~fikran@user/fikran)
[15:39:21] *** Joins: fakenullie (~nullie@london.nullie.name)
[15:40:44] <Zweimer39> with open(filepath, "w+") as f:      f.write("This is a test line")   f.close()   << The file is being created but is empty. A flush() does not help too. Any other ideas?
[15:40:51] <fakenullie> Hi, a question about type stubs. Imports in __init__.pyi don't seem to get exported from the module unless specified in __all__. I've tried mypy and pyright. Is it intended behavior? Where is it described?
[15:42:35] <wib_jonas> Zweimer39: the call to the close method is unnecessary but shouldn't hurt. if the file is empty, make sure it's the correct file, and that your python statements recreate it if you delete the file first.
[15:42:56] <Yhg1s> Zweimer39: the 'f.close()' is unnecessary. The file probably won't be written to until the 'with' block ends. What else are you doing in the code? How are you checking the file is empty?
[15:43:46] <wib_jonas> the "+" in the mode is probably a bad idea too, usually you want to truncate the file when you open
[15:43:59] <wib_jonas> or does the "w+" mode still truncate? let me check
[15:44:01] *** Joins: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[15:44:07] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[15:44:09] *** Joins: shad (~shad@user/shad)
[15:44:14] <Yhg1s> yes, 'w' truncates.
[15:44:29] <wib_jonas> yeah, "w+" still truncates. sorry
[15:44:42] <wib_jonas> then "w" versus "w+" shouldn't matter here. I still recommend just "w".
[15:45:19] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 245 seconds)
[15:45:33] <Yhg1s> It really depends on what you're actually trying to do.
[15:45:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:46:00] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[15:46:05] <Zweimer39> Well I can delete the file, restart the python script and see how it's being created in the explorer. After execution, the file is empty
[15:46:42] <wib_jonas> and the execution didn't give you any errors?
[15:46:50] <Zweimer39> No errors
[15:46:55] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[15:47:19] <wib_jonas> hard to tell what happened then. you might have to reduce your code until you get a minimal reproduction or find the problem
[15:47:47] <Zweimer39> hm, seems like it. This is weird.
[15:47:50] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[15:47:53] *** Quits: alphasierra (~alphasier@49.36.98.115) (Ping timeout: 265 seconds)
[15:48:00] <Yhg1s> Zweimer39: or, just show us all of the code you're running.
[15:48:03] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:48:26] *** Joins: zeden (~zeden@user/zeden)
[15:49:35] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[15:50:19] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se) (Ping timeout: 245 seconds)
[15:50:32] <Zweimer39> Where can I paste my code into again?
[15:51:08] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[15:51:18] <Yhg1s> any pastebin. like bpa.st
[15:52:18] <Zweimer39> Yhg1s, that's my code :)  https://bpa.st/DLYA
[15:52:33] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[15:53:04] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:53:48] <Yhg1s> Zweimer39: There's no reason for this to produce an empty file, although the lack of newline may make it seem empty to some tools, perhaps?
[15:54:02] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[15:54:55] *** Joins: alphasierra (~alphasier@2405:201:e:4d:fd1a:14d:395:7ba4)
[15:55:25] <jonaskabrink> @fakenullie See https://www.python.org/dev/peps/pep-0484/#stub-files
[15:55:42] *** Quits: jonaskabrink (~jonaskabr@i577BC88F.versanet.de) (Quit: Client closed)
[15:58:03] *** Joins: doforlove33 (~doforlove@185.200.118.184)
[15:58:31] *** Joins: semeion (~semeion@user/semeion)
[15:58:54] <wib_jonas> Zweimer39: you could perhaps test that if you change the filename in the code, it creates the file under a different name
[15:59:00] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[15:59:49] <wib_jonas> but I don't really have many other ideas. an overzealous antivirus could be deleting any file you create immediately, but I doubt it would leave an empty file.
[16:00:26] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[16:00:31] <Zweimer39> Yeah I am also not sure. I will try to run the code on a different computer later
[16:00:49] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[16:01:21] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[16:02:35] <wib_jonas> you could make sure you're running that program with python rather than some other program, perhaps add a print statement after the flush call to make sure it has ran, and perhaps add an explicit encoding argument to the open call, though all of these sound unlikely
[16:02:48] <wib_jonas> unlikely to solve your problem that is
[16:04:56] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 246 seconds)
[16:05:31] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:08:27] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[16:08:36] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:08:41] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:10:34] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:a461:58d8:828d:766d) (Ping timeout: 260 seconds)
[16:10:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:12:07] *** dcaro_lunch is now known as dcaro
[16:15:25] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[16:16:22] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[16:17:40] <pr100> I'm going round in circles trying to experiment with cupy - I have it installed, but when I try to run stuff I get `cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected` I have an nvidia gpu... and the nvidia cuda toolkit installed; what do I need to do to get cupy working?
[16:19:10] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:20:30] *** Joins: NeoCore_ (~neocore@2a01:cb10:34f:4c00:28f3:460b:4654:7553)
[16:22:50] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:23:00] *** Joins: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl)
[16:23:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:23:25] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[16:23:44] <paul424> Hello I ffind it quite sad that python lacks either do -while loop or repeat - until
[16:23:47] *** Quits: NeoCore (~neocore@45.152.181.132) (Ping timeout: 265 seconds)
[16:24:19] <lericson> why, paul424
[16:24:33] <paul424> I have found another question to my entrance test : the rainfall problem : .  Here is one variant of the problem: “Writea program that processes an input consisting of daily rainfallmeasurements (non-negative integers) until it encounters theinteger 99999.  The program should output the average of thenumbers encountered before 99999.”
[16:24:50] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[16:25:46] <paul424> it's easily done in language with do - while and repeat-until but in python it requires a bit of gymnastic
[16:26:02] <wib_jonas> isn't do-while and repeat-until the same thing?
[16:26:18] <lericson> numbers = takewhile(lambda num: num != 99999, (int(line.strip()) for line in sys.stdin)) ; print(average(numbers))
[16:26:21] <lericson> done
[16:27:10] *** doforlove33 is now known as Wladimir
[16:27:10] <paul424> "In one study, only 14% of students in Yale’s CS1 couldsolve this problem correctly.  The Rainfall Problem hasbeen used under test conditions and as a take-homeprogramming  assignment,  and  is  typically  graded  sothat syntax errors don’t count, though adding a negativevalue or 99999 into the total is an automatic zero.  Everystudy that I’ve seen (the latest in 2009) that has used...
[16:27:12] <paul424> ...theRainfall Problem has found similar dismal performance,on a problem that seems amazingly simple.”
[16:27:14] <lericson> in fact i think you can use iter()
[16:27:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[16:27:33] <lericson> yeah, iter(99999, (int(line.strip()) for line in sys.stdin))
[16:27:42] <wib_jonas> I'd write that as a while loop, but sure
[16:27:43] *** Joins: junktext (~junktext@77.247.181.216)
[16:27:51] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[16:28:42] <lericson> using 99999 as a magic value is shit program design by the way :p
[16:28:51] <lericson> just use EOF
[16:28:53] <paul424> so if some teenagar comes and can solve the rainfall problem that would be a revelation
[16:28:54] <paul424> l
[16:29:21] *** Quits: Wladimir (~doforlove@185.200.118.184) (Changing host)
[16:29:21] *** Joins: Wladimir (~doforlove@user/doforlove33)
[16:29:25] <paul424> ohh sorry I clicked something in my gui program
[16:29:31] <wib_jonas> paul424: well I'm too old for taht\
[16:29:37] <wib_jonas> too old for being a teenager
[16:29:45] <lericson> too human to be an agar too
[16:30:01] <paul424> heh ohh it's 15:00 i need to go ! bye
[16:30:07] *** Quits: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl) (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
[16:30:54] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:25] *** Quits: Yion (~Yion@pd95caa88.dip0.t-ipconnect.de) (Quit: Client closed)
[16:33:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1c3a:3794:22dd:13f6)
[16:33:48] *** Quits: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Quit: ub)
[16:34:10] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[16:34:19] <CrtxReavr> Anyone written to systemd/journald logs within python?
[16:34:39] <CrtxReavr> There a way to do it without making subrpocess calls to logger?
[16:35:29] <grym> CrtxReavr: the package `systemd` appears to provide a JournaldLogHandler
[16:35:54] <grym> ugh, but that's way out of date, maybe ignore that
[16:36:40] * CrtxReavr hates making syscalls for stupid shit.
[16:37:07] *** Joins: y1n-v1 (~y1n@178.165.194.67.wireless.dyn.drei.com)
[16:37:45] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[16:38:14] <Masklin_Gurder> Wulf: Remember talking about deep copy shenanigans yesterday?
[16:38:22] <Masklin_Gurder> I had a dict and wanted to make a list of 5 copies of it
[16:38:45] <wib_jonas> Masklin_Gurder: yes
[16:38:57] *** Joins: akk (~akk@75.161.146.115)
[16:38:58] <wib_jonas> so I suggested [dict(yourdict) for k in range(5)]
[16:39:02] <CrtxReavr> copy.deepcopy() is your friend.
[16:39:15] <Masklin_Gurder> wib_jonas: Right well it didn't work, I ended up with a list of identical dicts
[16:39:42] <CrtxReavr> List of 5 links to the same object.
[16:39:42] <grym> Masklin_Gurder: told you it sketched me out :|
[16:39:43] <wib_jonas> well they're supposed to be identical after you just copied thek
[16:39:59] *** Joins: aknot (~aknot@2603:900a:1503:17bb:721d:9e2a:b99a:7f0b)
[16:40:00] <CrtxReavr> Hence why dict.copy() & copy.deepcopy(dict) exist.
[16:40:02] *** Joins: shad (~shad@user/shad)
[16:40:18] <Masklin_Gurder> wib_jonas: Yes OK but then I changed them independently, or tried to, but all of them were updated equally every time.
[16:40:35] <wib_jonas> Masklin_Gurder: ok, show us an example
[16:40:50] <Masklin_Gurder> CrtxReavr: I worked around it by creating the list first and populating it level by level, without references to a dict variable.
[16:41:00] <CrtxReavr> Sounds tedious.
[16:41:14] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[16:41:24] <Masklin_Gurder> It's the same amount of code, plus a for-loop line *shrug*
[16:41:40] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:41:46] <Masklin_Gurder> wib_jonas: What's the syntax to use the python bot in here?
[16:42:32] <CrtxReavr> Masklin_Gurder, learn to rely on pythonic things and not re-invent the wheel.
[16:43:02] <grym> Masklin_Gurder: infobob just repastes bad pastebins
[16:43:12] <grym> CrtxReavr: copy/deepcopy are ugly though
[16:43:22] <CrtxReavr> You're ugly.
[16:43:27] <CrtxReavr> And your mom dresses you funny.
[16:43:34] <Masklin_Gurder> That's offensive
[16:44:00] <wib_jonas> Masklin_Gurner: no idea about bot; here's what I get when I try to copy a dict five times this way: https://dpaste.com/CDWYAE94A
[16:44:26] <grym> wib_jonas: now have a key that's a list :)
[16:44:34] <grym> wib_jonas: er, a key whose value is a list
[16:44:42] <grym> then append to one of them
[16:44:42] <SnoopJ> Masklin_Gurder, do you understand why you got a shallow copy?
[16:44:55] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:45:26] *** Joins: zebrag (~chris@user/zebrag)
[16:45:36] <Masklin_Gurder> SnoopJ: Nope
[16:46:22] <Masklin_Gurder> wib_jonas: Give me a second
[16:47:11] *** Quits: aknot (~aknot@2603:900a:1503:17bb:721d:9e2a:b99a:7f0b) (Ping timeout: 245 seconds)
[16:47:14] <wib_jonas> I don't ever use copy/deepcopy either, but I also don't recall wanting to copy a dict ever. copying lists or tuples, sure, I do that often.
[16:47:40] <wib_jonas> I might have some dict copies though, I just don't recall them
[16:48:27] <CrtxReavr> Never need anything until you need it.
[16:48:28] *** Joins: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14)
[16:48:41] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:48:55] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[16:48:57] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[16:48:57] <Masklin_Gurder> wib_jonas: My simple example agrees with you, looks like a deep copy. I guess something bad happens when the dicts in the list contain dicts themselves.
[16:49:05] <Masklin_Gurder> I have to go unfortunately, catch up later \o
[16:49:10] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[16:49:16] *** Joins: shangxiao (~davids@124.187.230.212)
[16:49:20] <CrtxReavr> I'm guessing I worked with the continue statement when I did my very first python tutorial, but I never had any use for it before last week.
[16:49:21] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se)
[16:49:35] <CrtxReavr> So like ~10 years.
[16:49:45] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[16:50:35] <wib_jonas> CrtxReavr: the python/C continue statement? I don't think I ever used that in python, but that's sort of an accident. I used to use more of the loop control stuff earlier, but my style changed and I stopped before I started to write python programs.
[16:51:33] <CrtxReavr> Not recalling the C continue statement. . . but the continue statement in python is oddly named, IMO.
[16:51:41] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:52:33] <wib_jonas> it's not oddly named. it's named continue because it does exactly the same as the C continue statement. perl renames it "next" instead of "continue", which is also reasonable of course.
[16:54:15] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:57:02] <gitesh> which library you suggest to use to create a desktop application?
[16:57:24] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 245 seconds)
[16:58:09] *** Joins: zigo (~quassel@shade.infomaniak.ch)
[16:58:54] *** Joins: Guest3 (~textual@user/hcbt)
[16:59:13] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Quit: dalan6236)
[16:59:20] <CrtxReavr> A GUI application?
[16:59:46] <tk> I think I found a bug in cpython's ssl module. connect_ex on EINPROGRESS does not clear _sslobj, connect on EINPROGRESS does clear _sslobj, this means that you have to call connect twice but connect_ex only once to get a connection up (normally on a non blocking connect you would call connect and on EINPROGRESS you would select the socket for writing before considering the connection established
[16:59:56] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[17:00:00] *** Joins: trebuh (~trebuh@2001:41d0:a:15c7::1)
[17:00:25] <akk> gitesh: If you mean a GUI app, the choices are basically: tkinter, qt, gtk, wx widgets. There's no one that's obviously better, it depends on the app.
[17:00:44] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[17:01:05] <CrtxReavr> I think tkinter is probably the most portable between OSes, but also the least-featured (and ugly).
[17:01:08] <trebuh> hello, I want the variable "paths" to contain unique entries and to be serializable, is it the only way? https://bpa.st/5LVQ
[17:01:10] *** Joins: theprophet69 (~theprophe@85.114.228.184)
[17:01:23] *** Quits: theprophet69 (~theprophe@85.114.228.184) (Client Quit)
[17:01:31] *** Joins: theprophet (~theprophe@85.114.228.184)
[17:01:54] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:02:02] <CrtxReavr> qt seems to be a good & popular choice as a blend of portability, form, & function.
[17:02:06] *** Joins: mrproper (sid382572@id-382572.uxbridge.irccloud.com)
[17:02:35] <mrproper> I am trying to install 3.9.7 or 3.10.0 using pyenv and receiving an error. `Makefile:222: *** missing separator.  Stop` This is on the latest version of macOS.
[17:02:41] <DaPinkOne> trebuh, that looks pretty effective, and set comprehensions are pretty fast. Is there something wrong with this?
[17:02:41] *** Quits: dalan6236 (~dalan@110-175-157-10.tpgi.com.au) (Client Quit)
[17:02:53] *** Joins: guardian (~guardian@planet-d.net)
[17:03:05] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:03:10] *** Joins: dalan6236 (~dalan@110-175-157-10.tpgi.com.au)
[17:03:11] <guardian> Hello. I'm using multiprocessing.Pool.imap and I'm trying to set a breakpoint with breakpoint() in the worker function
[17:03:16] <SnoopJ> Masklin_Gurder, a list in Python is a sequence of references to objects, so when you make a copy of the list, you get a copy of the references, *not* a copy of the objects being referred to. `copy.deepcopy()` exists to handle situations like this, it copies the underlying objects too, not just the reference.
[17:03:18] <guardian> But it doesn't work and the debugger is quitting
[17:03:21] <CrtxReavr> Sounds like a syntax error in the makefile.
[17:03:30] <trebuh> DaPinkOne: absolutely nothing, I want to be as optimized as possible
[17:03:46] <guardian> Does someone have an idea on how I can make breakpoint() work in this case?
[17:04:04] <trebuh> the thing is I only use the list(paths) to make the set JSON serializable
[17:04:29] <SnoopJ> guardian, if your debugger works over a socket (I know that pudb can do this) maybe you can attach a debugger to the worker process
[17:04:32] <trebuh> so I go, pick elements from my_list, make it a set, and back to list
[17:05:08] <SnoopJ> guardian, that probably wouldn't be as simple as breakpoint() though. Not sure, haven't done that before.
[17:05:16] <guardian> SnoopJ: I'm just in the CLI without an IDE
[17:06:10] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[17:06:13] <grym> guardian: with multiprocessing, i've always wound up relying on print-debugging with zestyping/q instead of real breakpoints, because of this sort of fiddilyness
[17:06:21] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.28.mobile.tre.se) (Ping timeout: 245 seconds)
[17:06:21] <grym> https://github.com/zestyping/q
[17:06:39] <DaPinkOne> trebuh, I guess you might be able to skip the list() if you used the unpacking operator or something? it's still making a list internally though, i think
[17:06:53] *** Joins: Roey (~Roey@user/Roey)
[17:07:06] *** Joins: CodePoint (~BitShift@94.198.42.165)
[17:07:43] <trebuh> I really don't get the reflex of using those
[17:08:41] *** Joins: Mattiaslndstrm (~Mattiasln@94.191.152.28)
[17:09:51] *** Joins: arinov (~arinov@213.194.126.155)
[17:10:10] *** Joins: athar_ (~alphasier@2405:201:e:4d:d5a0:3aab:bad0:50cf)
[17:10:46] <SnoopJ> guardian, I believe the problem is in getting the child process to take over the terminal. Here's an example using the remote-pdb package to do what I was talking about, starting a debugger server in the target process and then connecting to it: https://stackoverflow.com/a/64052335
[17:10:48] <trebuh> Cheers for the insights
[17:10:58] <DaPinkOne> trebuh, I dunno man, sets are pretty fast, and list creation from a set is pretty fast. If you're cutting this close to the corners, there might be better/other places to get those gains
[17:11:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 265 seconds)
[17:11:21] *** Quits: alphasierra (~alphasier@2405:201:e:4d:fd1a:14d:395:7ba4) (Ping timeout: 245 seconds)
[17:12:31] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:13:23] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: No route to host)
[17:13:26] *** Quits: Mattiaslndstrm (~Mattiasln@94.191.152.28) (Ping timeout: 265 seconds)
[17:13:29] *** Joins: alphasierra (~alphasier@49.36.98.115)
[17:13:39] *** Quits: jpic (~jpic@82.142.19.206) (Ping timeout: 245 seconds)
[17:13:59] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[17:14:35] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[17:15:22] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[17:15:31] *** Quits: athar_ (~alphasier@2405:201:e:4d:d5a0:3aab:bad0:50cf) (Ping timeout: 245 seconds)
[17:15:31] *** Joins: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net)
[17:15:38] *** Joins: jpic (~jpic@82.142.13.78)
[17:16:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:18:16] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Ping timeout: 265 seconds)
[17:19:46] *** Joins: txtsd (~txtsd@user/txtsd)
[17:20:01] *** Joins: elena (~elena_re@178.176.78.122)
[17:20:15] *** elena is now known as elena_re
[17:20:18] <trebuh> indeed :-)
[17:20:20] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[17:20:35] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:20:49] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:20:53] *** Joins: han-solo (~hanish@user/han-solo)
[17:21:11] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[17:21:12] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[17:21:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:21:35] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[17:21:39] *** Joins: ano (~ano@user/ano)
[17:23:58] *** Quits: elena_re (~elena_re@178.176.78.122) (Client Quit)
[17:25:26] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:25:48] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:1c3a:3794:22dd:13f6) (Quit: Leaving)
[17:27:12] <andi_> can somebody please help me figure this out? https://bpa.st/NPWA i am running a script with a dependency to pandas/matplotlib within a container... the container is a windows x64 but sadly i need to run some visual c stuff so i need the visual studio console and therefore i'm limited to x86 (32 bit) i have all the dependencies installed but yet i still get the error https://bpa.st/NPWA
[17:27:22] <andi_> and i'm sadly out of ideas what's wrong
[17:27:43] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[17:27:55] *** Joins: arinov (~arinov@213.194.126.155)
[17:29:24] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[17:29:49] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[17:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:24] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:32:18] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-28db-81e5-493b-2536.res6.spectrum.com)
[17:33:35] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Read error: Connection reset by peer)
[17:34:00] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:35:53] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Read error: Connection reset by peer)
[17:36:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:38:59] *** Joins: nomic (~nomic@185.192.69.208)
[17:39:51] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[17:40:54] *** Joins: paul424 (~tom@apn-31-0-26-17.dynamic.gprs.plus.pl)
[17:41:46] <paul424> anyone has a history , I want that one - liner for the rainfall problem . Please I would be your debtor ...
[17:42:28] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:1c3a:3794:22dd:13f6)
[17:42:34] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[17:42:43] *** Parts: ska (~ska@user/ska) (Leaving)
[17:43:23] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[17:45:10] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:45:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[17:45:33] <paul424> sorry for repeating myself : Writea program that processes an input consisting of daily rainfallmeasurements (non-negative integers) until it encounters theinteger 99999.  The program should output the average of thenumbers encountered before 99999." so what would be one - liner solving that ?
[17:46:18] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[17:46:37] *** Quits: nomic (~nomic@185.192.69.208) (Quit: Leaving)
[17:47:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[17:47:36] *** Joins: LiftLeft (~LiftLeft@191.96.185.170)
[17:47:47] *** Joins: fikran (~fikran@user/fikran)
[17:48:55] <Swayze> does it have to be one line? lol
[17:49:10] <Swayze> input from file or kb?
[17:49:16] <MacGyver> Read the itertools documentation, then take another stab at your homework.
[17:49:50] <paul424> MacGyver, >_> ohh really that's not homework  , Swayze kb
[17:49:51] <MacGyver> https://docs.python.org/3/library/itertools.html
[17:49:58] <paul424> MacGyver, but thanks
[17:50:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Quit: Leaving)
[17:50:14] *** Joins: rsx (~dummy@ppp-188-174-158-97.dynamic.mnet-online.de)
[17:51:06] <wib_jonas> paul424: I'd do it like this https://dpaste.org/QwBF , or cheat a bit and use just one state variable instead of cont and linev by setting linev = 0 initially
[17:51:57] <paul424> wib_jonas, that's not one liner, anyway it;s shorter then my solution
[17:51:58] <MacGyver> Right, if you say so: takewhile for the slice, then just avg; if you want to stream it you'll need a convolve.
[17:51:58] <wib_jonas> and I do think many of our teenagers can solve that. I could probably have solved it when I was in a teenager, though probably not writing in python, because I wasn't using python back then
[17:52:10] <wib_jonas> paul424: I don't care if ti's a one-liner
[17:52:41] <wib_jonas> if you want one-liners, python in its current form isn't too suitable for that
[17:53:02] <wib_jonas> you could get a non-python one-liner but probably not on this channel
[17:53:14] <paul424> wib_jonas, I just collect an entry questions for my course; diffrent people can come and I want to measure they potential
[17:53:23] <paul424> wib_jonas++, MacGyver++
[17:54:35] <Wooble> their potential to join a code golf competition?
[17:54:44] *** Joins: cmagina (sid286142@user/cmagina)
[17:54:51] <wib_jonas> nah, I would probably keep this, using just one state variable is uglier in this weird case
[17:55:12] <wib_jonas> you can also do the while 1: break thing if you prefer
[17:55:55] *** Joins: shad (~shad@user/shad)
[17:56:00] <wib_jonas> that would be shorter but I don't generally do it these days
[17:56:21] <paul424> wib_jonas, it's easier done with languages containing do - while or repeat - until loop, doesn'
[17:56:29] <paul424> t it ?
[17:56:46] <wib_jonas> paul424: dunno, I don't particularly care. it's easy enough this way.
[17:56:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[17:56:56] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:57:25] <wib_jonas> you'll have to learn to use state variables sooner than later anyway, the stupid shortcuts like do-while and multi-level-break run out eventually
[17:57:31] *** Joins: SuperLag (~akulbe@user/superlag)
[17:57:41] <Swayze> that doesnt output the average
[17:57:43] <Swayze> so its wrong
[17:57:54] <wib_jonas> Swayze: yeah
[17:59:03] *** Joins: semeion (~semeion@user/semeion)
[17:59:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:00:21] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[18:01:28] *** Quits: SuperLag (~akulbe@user/superlag) (Client Quit)
[18:01:30] <MacGyver> Still not sure what's wrong with the oneliner statistics.mean(itertools.takewhile(lambda x: x<9999, input-iterable))
[18:01:46] *** Joins: SuperLag (~akulbe@user/superlag)
[18:02:07] <Swayze> https://dpaste.org/gfWf
[18:02:10] <Swayze> how about this
[18:02:32] *** Joins: dob1_ (~dob1@user/dob1)
[18:02:37] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 250 seconds)
[18:02:45] <wib_jonas> Swayze: missing a colon in the if line
[18:02:57] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:03:00] <Swayze> right
[18:03:02] <wib_jonas> apart from that it looks right
[18:03:05] <Swayze> i have no python interpreter rn
[18:03:06] <Swayze> tx
[18:03:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:05:45] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[18:06:22] *** Joins: ianliu (~ianliu@177.188.13.8)
[18:07:05] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 265 seconds)
[18:08:26] *** Quits: junktext (~junktext@77.247.181.216) (Ping timeout: 245 seconds)
[18:08:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:09:56] <ianliu> When using the builtin xml library, xml.etree.ElementTree.Element doesn't seem to have a nice way of getting the direct children of an element. Is there a way to get all direct children of an element, including the text nodes
[18:09:58] <ianliu> ?
[18:10:32] *** Quits: alphasierra (~alphasier@49.36.98.115) (Read error: Connection reset by peer)
[18:11:04] *** Quits: CodePoint (~BitShift@94.198.42.165) (Quit: Never gonna give you up, never gonna let you down...)
[18:12:08] <Swayze> https://stackoverflow.com/questions/44392243/how-to-fetch-all-the-child-nodes-of-an-xml-using-python/44511798
[18:12:20] <Swayze> try this mate
[18:12:45] <Swayze> tree.getroot().findall()
[18:13:14] <Togra> with xml you have to do a lot of the leg work yourself
[18:13:17] <ammar2> I think just doing a for loop over the element should give you the direct children
[18:13:20] <Togra> not that you can't, but it can be an ordeal
[18:13:24] <Togra> yeah
[18:13:44] <ianliu> the for loop only iterates on subelements, not text children
[18:13:45] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[18:14:17] <Swayze> even with findall() ?
[18:14:30] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:15:45] <ianliu> ideally, what I would like is an api like so: el.children (a list containing all children of the element, in the order of appearance, including text elements) :P
[18:16:05] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[18:16:42] <ianliu> doesn't seem obvious how to achieve this
[18:16:59] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[18:17:11] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[18:17:53] *** Joins: irrgit (~irrgit@192.241.175.183)
[18:18:13] *** Joins: VaniaPy (~VaniaPy@adsl-124.176.58.194.tellas.gr)
[18:18:33] <Togra> it's been a long time since I worked with element tree sadly
[18:18:38] <Togra> there was a way but it was probably weird
[18:18:39] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[18:18:41] *** Quits: zepolen (~zepolen@athedsl-154557.home.otenet.gr) (Quit: Konversation terminated!)
[18:18:48] <Togra> I'm sure someone's well versed in it and how to do that
[18:18:55] *** Joins: thiras (~thiras@user/thiras)
[18:18:57] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[18:19:16] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[18:19:38] <VaniaPy> I have this dict https://bpa.st/EXNA and i need to get the values of its keys that are in the "lower prediction" dict,how can i achieve this"
[18:19:49] <wib_jonas> ianliu: hmm, it doesn't seem simple, because it looks like that module represents the text elements together with their previous sibling, or the parent if no previous sibling, so there's no separate element for just the text, nor for the subelements without text stuck to them
[18:19:50] <VaniaPy> the dict.values() doesn't seem to apply
[18:20:07] *** Joins: zepolen (~zepolen@2a02:587:860a:4682:9785:126b:4813:20f)
[18:20:29] <Togra> yourdictname["lower prediction"]["1580428800000"] should get the first element in the sub-dict?
[18:20:32] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[18:20:43] <Togra> as opposed to yourdictname["mpe"]
[18:21:09] <Togra> or "for key in yourdictname["lower prediction"]:" will iterate over the sub dict
[18:21:16] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:21:32] <VaniaPy> ok
[18:21:36] <VaniaPy> thans
[18:21:36] <Togra> same type of feel as with nested lists, except it's a dict
[18:21:36] <Wooble> VaniaPy: or your_dict["lower_prediction"].values()
[18:21:51] <Togra> no problem, it's a little weird but dictionaries are awesome once you get comfortable with them
[18:21:55] *** Joins: just-me (~just-me@5.47.154.183)
[18:21:55] <paul424> MacGyver,  NameError: name 'iterable' is not defined
[18:22:08] <paul424> do I miss some module ?
[18:22:18] <bjs> paul424: what did you do to get that error?
[18:22:22] *** Joins: dob1 (~dob1@user/dob1)
[18:22:24] <MacGyver> paul424: import itertools, import statistics.
[18:22:39] <MacGyver> Oh and input-iterable was intended to be a placeholder there.
[18:22:40] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:22:47] <Wooble> MacGyver: they mean "input-iterable" which was clearly a placeholder, not a subtraction
[18:23:01] <Wooble> (also i'm slow)
[18:24:04] *** Quits: portalrat_ (~portalrat@user/portalrat) (Ping timeout: 245 seconds)
[18:25:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[18:27:24] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:28:40] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[18:29:50] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[18:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[18:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:33] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:31:40] *** Joins: user3456_ (user3456@user/user3456)
[18:31:47] *** Quits: user3456 (user3456@user/user3456) (Read error: Connection reset by peer)
[18:32:00] <guardian> thanks SnoopJ will give it a try
[18:32:33] *** user3456_ is now known as user3456
[18:32:56] *** Parts: trebuh (~trebuh@2001:41d0:a:15c7::1) (WeeChat 3.4-dev)
[18:33:48] *** Quits: just-me (~just-me@5.47.154.183) (Quit: Leaving)
[18:36:14] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[18:36:16] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[18:36:30] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[18:36:56] *** Joins: portalrat (~portalrat@user/portalrat)
[18:37:06] *** Joins: dulanic (~dulanic@47.187.144.163)
[18:37:33] *** Quits: dulanic (~dulanic@47.187.144.163) (Client Quit)
[18:37:57] *** Joins: just-me (~just-me@5.47.154.183)
[18:38:04] *** Joins: dulanic (~dulanic@47.187.144.163)
[18:38:37] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[18:38:54] *** Parts: Zweimer39 (~Zweimer@2a02:908:d20:26e0:ed9e:cfca:43af:b59b) ()
[18:39:01] *** Joins: Zweimer39 (~Zweimer@2a02:908:d20:26e0:ed9e:cfca:43af:b59b)
[18:40:08] <just-me> Are there advantages to imporing individual modules from a library instead of just importing the whole library?
[18:40:54] *** Quits: Barones (~Barones@2804:7f3:8987:d597:a526:59d4:bc0c:1f14) (Remote host closed the connection)
[18:41:22] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[18:42:16] <MacGyver> Yes.
[18:42:40] <just-me> Is it more efficent (computing wise)?
[18:42:58] <MacGyver> Oh, sorry, you actually wanted to know the advantages.
[18:43:00] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[18:43:02] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[18:43:18] <MacGyver> Personally it's mostly a matter of how you're then writing them down.
[18:43:32] *** Joins: sekiro (~Guest5@125-85.iitb.ac.in)
[18:43:39] <MacGyver> I don't think it makes a significant difference beyond setup time on large libraries.
[18:43:39] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[18:43:40] *** Quits: paul424 (~tom@apn-31-0-26-17.dynamic.gprs.plus.pl) (Quit: Leaving)
[18:43:45] <just-me> Ok, thanks.
[18:43:56] <Zweimer39> https://bpa.st/4OVQ   I would have thought this program would run indefinitely. Why is it not and what's triggering the line 23 message?
[18:44:05] <grandrew> just-me, main advantage is cyclic references I guess. Unless you're betting on init sequence
[18:44:14] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[18:44:34] <InPhase> MacGyver: Does it actually take less time in any cases?  Every time I try to measure it, I get the same time importing the whole package plus a module, as importing just the module.
[18:44:40] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[18:44:41] <bjs> Zweimer39: why would it run indefinitely?
[18:45:13] <InPhase> MacGyver: I interpret this as the whole package is actually processed, but only the module comes into the namespace.
[18:45:19] <MacGyver> InPhase: Hmm, now that you mension it, I'm not sure.
[18:45:32] <MacGyver> It might indeed be the case the whole package is processed.
[18:45:40] <InPhase> MacGyver: Which might be a requirement given internal dependencies.
[18:45:43] <Zweimer39> bjs, because the IPython hasn't been closed. On my computer, when I run IPython it waits until I tell it to "exit". Whereas commands like "cd" or "ls" do their task and end themselves.
[18:45:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:45:48] <han-solo> InPhase: some libs try to hoists child module imports in `__init__.py` so maybe those may take more time, right ?
[18:45:48] <MacGyver> In which case there really is no difference.
[18:46:02] <bjs> Zweimer39: how are you running this program?
[18:46:24] <Zweimer39> bjs, you mean IPython? In the command line
[18:46:27] <InPhase> han-solo: Well I tested with scipy and scipy.stats as an example, as they take long enough to measure.  scipy.stats is not available unless explicitly imported.
[18:46:30] <bjs> Zweimer39: you mean you have a .py file with this code in it?
[18:46:30] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Read error: Connection reset by peer)
[18:46:53] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e)
[18:46:53] <InPhase> han-solo: Yet time python3 -c 'import scipy; import scipy.stats' has the same runtime as time python3 -c 'import scipy.stats'
[18:46:57] <Zweimer39> Ah, yeah _this posted_ code is in my PyCharm env.
[18:47:05] <InPhase> Both of which are larger than time python3 -c 'import scipy'
[18:47:12] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[18:47:14] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:47:27] <bjs> Zweimer39: so how exactly are you running it? From the command line you said?
[18:47:28] <InPhase> So the advantage arises in NOT importing scipy.stats when you don't need it.  But if you do need it, I think you might as well bring in scipy too.
[18:47:51] <Zweimer39> bjs, no, I press the run button in the PyCharm IDE.
[18:48:06] <bjs> Zweimer39: because your program should print something like   filepath=blah  but i didn't see that in the output
[18:48:09] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[18:48:10] <InPhase> The only advantage to skipping the full package import is if you don't feel like writing the extra line.  :)
[18:48:11] <bjs> Zweimer39: maybe PyCharm is just doing the wrong thing?
[18:48:37] <Zweimer39> bjs, so you agree that this program should keep running, right?
[18:48:39] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:48:45] <Zweimer39> Or do I missunderstand you.
[18:49:00] <bjs> Zweimer39: "the program" being the thing at the top? No.  Should IPython stay open? It depends how you ask IPython to run it...
[18:49:50] <bjs> Zweimer39: if you go to a command-line you can run IPython that_file.py  and it should run and close,  and you should be able to run IPython -i that_file.py and it'll stay open
[18:50:01] <Zweimer39> bjs, my interpreter itself is not IPython. I thought subprocess is doing excatly what would happen when I entered the command into the shell on my own.
[18:50:04] <bjs> it's up to PyCharm how *it* decides what "pressing the run button" should do
[18:50:06] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[18:50:20] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[18:50:43] <Wooble> (well, it depends on how you configure the run profile; pycharm just decides the defaults if you don't do it yourself.)
[18:51:01] <bjs> Zweimer39: usually when you run Python files directly (e.g. from the command-line) there is no interactive prompt at all
[18:51:40] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:52:14] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e) (Ping timeout: 246 seconds)
[18:52:14] <Zweimer39> hm, I am confused. Why would pycharm decide to close a running process (eben though it is just a "subprocess")?
[18:52:35] <bjs> Zweimer39: I'm not sure I follow, which process is running that it closes? The IPython one?
[18:52:50] *** Joins: Guddu (~Guddu@190.84.88.92)
[18:54:09] <Zweimer39> I put the linked code into my PyCharm IDE and started the default interpreter of PyCharm to run the code. The paste below the comment line is my console output (I just dropped the first line). In Line 23 you can see that something was suggesting IPython to exit and something confimed it with  a "y"
[18:54:41] <Zweimer39> I would have expected that my program is in a dead lock and never stop working until I press the "Force Stop" button of my IDE.
[18:54:45] <bjs> Zweimer39: it sounds like your PyCharm is configured to, when you press run, to start IPython (?) and then it closed IPython for some reason
[18:55:11] <bjs> Zweimer39: the output you showed doesn't even look like it ran the file you gave, because your file does some json stuff then prints out a line starting filepath=
[18:55:30] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e)
[18:55:40] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e) (Client Quit)
[18:55:49] <Zweimer39> ffs. I am trolling. Sorry bjs :(
[18:56:21] <Zweimer39> I'm an ape and copied the wrong code *facepalm*
[18:57:16] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[18:57:22] <Zweimer39> My Apologies. https://bpa.st/BGEQ
[18:58:41] <bjs> Zweimer39: okay, you say communicate() which writes the input to the stdin of the process
[18:58:59] <bjs> once the input has all been written and there's no more to process, IPython closes.
[18:59:02] <bjs> because the stdin pipe closed
[18:59:16] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 250 seconds)
[18:59:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:00:00] <Wooble> Zweimer39: you probably want something like pexpect to interact like that. you might be able to get away with working with p.stdin/p.stdout but read the big red boxes all over the subprocess docs that tell you why not to even think about it. :)
[19:00:03] <Zweimer39> Ah right. Why did the stdin pipe close? Because there was no more "communicate()"-Commands?
[19:00:03] *** Quits: sekiro (~Guest5@125-85.iitb.ac.in) (Ping timeout: 256 seconds)
[19:00:04] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[19:00:26] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:00:45] <Wooble> (communicate() blocks until the process is done.)
[19:00:53] *** Joins: srhm (~srhm@user/srhm)
[19:00:56] <bjs> Zweimer39: no because that's what communicate does. It sends all the input you gave it, closes the pipe and waits for the process to die
[19:01:14] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[19:01:14] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:01:15] <bjs> if you don't want to do that, don't use communicate and instead write to .stdin manually
[19:01:25] *** Joins: alzgh (~alzgh@user/alzgh)
[19:02:07] <han-solo> InPhase: when you do, `import somepackage.submodule`, the `somepackage` namespace is also available, no ?
[19:02:34] <han-solo> subtle maybe ?
[19:04:18] <Zweimer39> Right. I will try that
[19:04:49] *** Joins: dreamer (~dreamer@user/dreamer)
[19:06:09] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 245 seconds)
[19:06:17] *** Joins: davor (~davor@user/davor)
[19:09:22] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[19:10:07] <Wooble> han-solo: `from somepackage import submodule` avoids that, but somepackage's __init__.py will run in either case anyway.
[19:10:46] <han-solo> yeah, i remember being weirded out by `import foo.bar` and now `foo` is there. whut ? :D
[19:11:05] <Wooble> well I mean how else would you be able to access foo.bar without foo? :)
[19:11:27] <han-solo> :)
[19:11:28] <barg> Looking at this project https://github.com/Howchoo/smart-alarm-clock looking at the file  alarm.py   it says import schedule.   Is there code missing there 'cos should he have a schedule.py file?
[19:13:07] <Wooble> barg: more likely there should be a setup.py, requirements.txt or line in the README telling you to pip install schedule.
[19:13:08] *** Quits: libussa (~libussa@libussa.net) (Read error: Connection reset by peer)
[19:13:27] <bjs> barg: I think it's https://pypi.org/project/schedule/
[19:13:31] <barg> hmm I think I did pip install schedule
[19:13:52] <Wooble> barg: oh, it's in the linked blog post.
[19:14:40] <barg> https://gist.github.com/gartha1/6c533bcc0016a5d207bc9ae09caee065
[19:14:51] <bjs> barg: why sudo
[19:14:57] <barg> ah ok
[19:15:40] <barg> thanks now I get "schedule.ScheduleValueError: Invalid time format"  but at least that's gotten further!
[19:15:45] *** Joins: arseru (uid515527@user/arseru)
[19:15:53] *** Joins: libussa (~libussa@libussa.net)
[19:16:45] <bionade24> If I call super.init() in python and in this init() a dict gets created, is this one instance across all calls of super.init() ? Bc seems like that to me.
[19:17:10] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[19:17:21] <bjs> bionade24: there is only the one instance, "self"
[19:17:29] <bjs> and all the attributes you assign will get attached to that same object
[19:18:00] <bjs> bionade24: so when you call super().__init__() it calls the __init__ (or whatever) in the parent class,  but it has the same self.
[19:18:28] <guardian> if I want to use multiprocessing.Pool.map() or imap(), and the function passed transforms input -> output, what's the cleanest way to map each output to each input?
[19:18:52] <guardian> is it ok to pass a dict to my worker function using partial() and let my worker function fill it?
[19:18:54] <InPhase> han-solo: A fair counterpoint, but I retested and benchmarking with from scipy import stats results in the same time.
[19:18:56] <bionade24> Ok seems like if there is one empty dict in a list and I have if dict in dict_list it will return true.  What is the keyword for the exact instance in a list ?
[19:19:06] <bionade24> bjs: ^
[19:19:37] <bjs> bionade24: there is no keyword for that,  but you can check manually `if any(elem is the_dict for elem in the_list)` or something
[19:19:50] <bionade24> bjs: Ok thx
[19:19:55] <arseru> Hi! Does anyone know why do I get this error? https://bpa.st/JU2A I'm installing a project called 'importer-app' in a Dockerfile with a non-root user
[19:19:56] <bjs> bionade24: `a is b` is True iff a and b are the same instance/object.
[19:20:01] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e)
[19:22:14] *** Quits: libussa (~libussa@libussa.net) (Quit: quit)
[19:23:21] <arseru> this maybe explains it better for the 2nd Dockerfile: https://bpa.st/XIEQ
[19:23:45] *** Joins: libussa (~libussa@libussa.net)
[19:25:15] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:25:28] *** Joins: grooverman (~grooverma@177.189.91.225)
[19:25:45] *** Joins: srhm (~srhm@user/srhm)
[19:26:14] <arseru> hmmmm all source code files are owned by root:root, weird
[19:26:37] *** Quits: VaniaPy (~VaniaPy@adsl-124.176.58.194.tellas.gr) (Quit: Connection closed)
[19:26:57] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[19:27:10] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:27:19] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[19:29:24] *** Joins: Payam (~Payam@138.106.57.131)
[19:31:00] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:31:20] *** Quits: hacksword (~hacksword@209.95.32.122) (Ping timeout: 250 seconds)
[19:33:30] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:34:53] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:35:23] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:35:41] <rendar> typing.Container for both a list and a set right? because with both i can do `x in my_container`?
[19:35:53] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[19:36:07] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[19:36:30] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 265 seconds)
[19:36:50] <The-Compiler> rendar: yep
[19:36:59] *** Quits: xiongxin (~quassel@119.123.102.49) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:38:06] <SnoopJ> rendar, that's the annotation you want if you want to be sure the target has __contains__. It is not the only annotation that applies to both of those objects.
[19:38:16] <jabberwock> someone here posted a near-instant fuzzy match shell completion tool. I'm trying to recall it
[19:38:21] <rendar> yeah indeed
[19:38:42] <SnoopJ> jabberwock, I don't know about near-instance but I like rupa/z a lot: https://github.com/rupa/z/
[19:38:47] <SnoopJ> near-instant*
[19:39:22] * jabberwock looks
[19:39:44] <jabberwock> I don't remember. The person who posted it here has posted a lot of neat tools
[19:39:57] <jabberwock> 'z' doesn't ring a bell though. Hmm
[19:40:11] <SnoopJ> oh sorry, you said completion
[19:40:31] <SnoopJ> fzf maybe?
[19:40:51] <jabberwock> I think so! Thank you!
[19:41:25] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:43:27] *** Joins: vicfred (~vicfred@user/vicfred)
[19:44:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[19:44:04] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[19:44:09] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[19:44:26] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:44:33] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:44:40] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:45:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:45:06] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[19:46:54] *** Quits: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Quit: ub)
[19:47:12] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[19:47:33] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[19:48:31] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[19:48:49] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[19:49:21] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:50:37] <jabberwock> yes - fzf! I love this
[19:50:37] *** Quits: just-me (~just-me@5.47.154.183) (Read error: Connection reset by peer)
[19:51:03] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[19:52:09] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[19:53:02] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:54:57] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[19:55:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[19:55:23] *** Joins: Kingsy (~chris@kingsy.co.uk)
[19:56:05] <Kingsy> I am currently using this -> params = flask_request.args.to_dict() <- to get my query string params. however if they are like this -> 1234+1234 the output of that line is "1234 1234" why is it trimming the + and how can I stop it doing that?
[19:56:07] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[19:57:00] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:57:07] *** Joins: fikran (~fikran@user/fikran)
[19:57:14] <phy1729> spaces are encoded as + in URL parameters; it's doing the right thing there
[19:57:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:57:46] <Kingsy> yes but I am using python as a proxy here. so I want to include the + when I grab them so I can pass them onto the next request as a +
[19:58:05] <phy1729> The next request should redo the necessary encoding
[19:58:33] <ChrisWarrick> what kind of proxy? flask might not be the best choice for this
[19:58:47] <Kingsy> I am also using this to grab the query string and validate its correct. I want to valuidate against + characters
[19:58:48] *** Quits: legola (~legola@46.235.101.220) (Remote host closed the connection)
[19:59:00] <Kingsy> ChrisWarrick: its already written so I cant change it now :)
[19:59:22] <ChrisWarrick> Kingsy: you can always rewrite things ;)
[19:59:35] <ChrisWarrick> Kingsy: if it’s a general purpose proxy, then think about mitmproxy
[20:00:58] *** Joins: kokopop (~boujie@user/kokopop)
[20:01:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[20:02:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8cd8:414d:2b05:7912)
[20:04:02] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:04:35] *** Quits: tobybl_ (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[20:05:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:05:29] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:05:37] <guardian> I have a function that takes 2 arguments. If there a way to use map() so as to call f(k, v) for each k-v pair in a dict?
[20:06:00] <guardian> I'm trying map(f, k, v for k, v in d.items())
[20:06:19] <guardian> it seems I need unpacking but afaik I can't use * in a comprehension
[20:06:45] <The-Compiler> guardian: use a dict/list comprehension or generator expression instead
[20:07:09] *** Quits: kokopop (~boujie@user/kokopop) (Remote host closed the connection)
[20:07:09] <The-Compiler> guardian: i.e. something like   [f(k, v) for k, v in d.items()]
[20:07:16] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[20:07:18] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:07:58] *** Joins: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de)
[20:08:02] <guardian> Well I'm asking about map() because the ultimate goal is to use multiprocessing.Pool.imap() :)
[20:08:15] <Staunch> hey all you VSCode enthusiasts - i have a test script that ensures a bunch of environment variables are loaded before running pytest. Is there a way to tell VSCode to use that script instead of just pytest when i use its testrunning feature?
[20:08:24] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[20:08:26] <guardian> So it seems I need to change f() to take a tuple instead of 2 arguments
[20:08:39] *** Joins: Celeo (~Celeo@user/celeo)
[20:09:00] <Staunch> i tried searching for my question but boy howdy it is not an easy search to keyword
[20:09:30] <The-Compiler> guardian: ah, I see
[20:10:44] *** Quits: Jefren (~Jefren@70.35.67.42) (Ping timeout: 245 seconds)
[20:11:02] <The-Compiler> guardian: map(lambda e: f(e[0], e[1]), d.items())   perhaps
[20:11:28] <The-Compiler> guardian: actually,   map(lambda e: f(*e), d.items())
[20:11:34] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[20:11:42] <MacGyver> guardian: map(lambda x: f(*x), d.items())?
[20:11:50] <guardian> ah yeah lambda will do
[20:11:51] <MacGyver> Oh, The-Compiler beat me to testing.
[20:11:57] <The-Compiler> hehe
[20:11:57] <guardian> thanks will give a try
[20:12:19] <guardian> when I had a single argument,I used map(partial(f, ...), iterable)
[20:12:22] <vdamewood> Staunch: I'm not familiar with a 'testrunning' feature. How do you start it up?
[20:12:25] <guardian> but I can indeed replace partial() with a lambda
[20:12:45] *** Joins: Jefren (~Jefren@206.253.157.227)
[20:12:59] *** Joins: loren (~loren@user/klinda)
[20:13:16] <Staunch> vdamewood: if you run the Python: Configure Tests command, it will guide you through the things you need to do to set it up.
[20:13:37] *** Joins: paul424 (~tom@ip-31-0-124-155.multi.internet.cyfrowypolsat.pl)
[20:14:03] <The-Compiler> Staunch: https://code.visualstudio.com/docs/python/settings-reference#_testing-settings lists a pytestPath setting
[20:14:03] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:14:39] <The-Compiler> Staunch: you could also use https://github.com/MobileDynasty/pytest-env instead perhaps
[20:15:51] <Staunch> The-Compiler: So, the full story is that we're using Mozilla's sops to encrypt secrets. Before the test, we decrypt those secrets into a .env file, which we load using python-dotenv. That's what this test script does before running pytest
[20:16:01] <guardian> AttributeError: Can't pickle local object 'cli.<locals>.<lambda>
[20:16:06] <guardian> Right let's make it take tuple :)
[20:16:14] <Staunch> The-Compiler: i don't think setting the pytest path to my test script will work, but maybe it will?
[20:16:34] <MacGyver> guardian: Since you're asking in the context of multiprocessing, another construction that might work is map(partial(pool.apply, f), d.items()).
[20:16:35] <The-Compiler> Staunch: there's a plugin for that™ :D https://github.com/quiqua/pytest-dotenv
[20:17:09] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[20:17:14] <MacGyver> guardian: It'll take me too much setup to test that, but might be worth exploring.
[20:17:17] <guardian> MacGyver: will give it a try
[20:17:19] <Staunch> The-Compiler: Well, sure, but loading the environment variables isn't the problem. That works fine, it's just that the .env file isn't updated when we use VSCode's test runner.
[20:17:24] <MacGyver> Come to think of it, don't we have an applymap?
[20:17:28] <The-Compiler> Staunch: I don't see why it would not - if your script is a well-behaved wrapper (i.e. passes "$@" to pytest and returns pytest's return value), nobody (including VS code) should be able to tell the difference
[20:17:39] <MacGyver> Oh that's probably pandas-only.
[20:17:59] *** Joins: jazzy (~jaziz@172.58.76.156)
[20:18:06] <Staunch> The-Compiler: Hmm... i'll give it a try, haha. If it walks like a duck etc.
[20:18:10] <Staunch> The-Compiler: Thanks!
[20:18:10] <The-Compiler> hehe
[20:18:16] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:18:21] *** Quits: ianliu (~ianliu@177.188.13.8) (Quit: WeeChat 3.3)
[20:18:59] *** Quits: loren (~loren@user/klinda) (Quit: Konversation terminated!)
[20:19:10] *** Joins: Klinda (~loren@user/klinda)
[20:20:33] <MacGyver> pool.map(lambda x: f(*x), dict.items()) might be the best one.
[20:20:34] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[20:20:38] *** Quits: Klinda (~loren@user/klinda) (Client Quit)
[20:20:50] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[20:20:57] *** Joins: Klinda (~superleag@user/klinda)
[20:21:55] <Staunch> The-Compiler: well, it ran, but it didn't update the .env file. I'm not exactly sure what happened. Is there a way for me to see what VSCode's using for the test command?
[20:22:17] <The-Compiler> Staunch: not sure. Maybe the output panel lets you show the invocation?
[20:23:32] <The-Compiler> Staunch: I still wonder if it might be easier turning this into a pytest plugin, though (which then does the sops-stuff, like your script does)
[20:24:01] <Staunch> The-Compiler: that could be neat, and might be a little more professional than just having a test-wrapper script
[20:24:07] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[20:24:26] *** Joins: Narrat (~omnius@p200300df5f0b35a606ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:24:49] *** Joins: jazzy2 (~jaziz@172.58.76.6)
[20:25:10] <The-Compiler> Staunch: pytest-dotenv is rather simple, for example: https://github.com/quiqua/pytest-dotenv/blob/master/pytest_dotenv/plugin.py
[20:25:19] *** Quits: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de) (Ping timeout: 245 seconds)
[20:26:09] *** Quits: jazzy (~jaziz@172.58.76.156) (Ping timeout: 245 seconds)
[20:26:47] <Staunch> The-Compiler: hm... that does look easy. I'll think about it. It looks like the problem is that my test script expects which environment (dev, qa, etc.) you want to run the tests against, and VSCode puts some other default arguments first.
[20:27:08] <Staunch> The-Compiler: --rootdir, --junit-xml ... ??
[20:27:20] *** Joins: magla (~gelignite@55d4ca83.access.ecotel.net)
[20:27:28] <Staunch> The-Compiler: it looks like it's not even appending the arguments i told it to add
[20:27:41] <The-Compiler> Staunch: yeah, that's stuff VS Code needs to pass to pytest for its integration to work
[20:27:55] <The-Compiler> (at least that's what I'm guessing)
[20:28:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:28:13] <Klinda> will anaconda install python too?
[20:28:46] <Staunch> The-Compiler: That makes sense. I just wish it would pass my args first :P
[20:30:45] <Staunch> The-Compiler: Anyway, looks like the easiest way to get what i want is just to write a pytest plugin, which will be fun! Thanks for the guidance. :D
[20:31:14] *** Joins: cdown (~cdown@163.114.131.1)
[20:31:24] *** Joins: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de)
[20:31:43] <aphysically> jinsun: I guess I could mention it on mailing list but that might be a bit much
[20:32:13] *** dcaro is now known as dcaro_away
[20:32:18] *** Joins: curiosity (uid507362@user/cypris)
[20:32:43] *** Quits: vd898 (~vd89@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:32:58] *** Joins: vd898 (~vd898@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:34:30] *** Quits: jazzy2 (~jaziz@172.58.76.6) (Ping timeout: 265 seconds)
[20:34:45] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[20:34:47] *** Joins: menace (~someone@user/menace)
[20:35:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:36:30] *** Joins: ice9 (~ice9@user/ice9)
[20:36:43] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:37:52] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[20:38:08] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[20:38:22] *** Quits: y1n-v1 (~y1n@178.165.194.67.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[20:38:26] *** Quits: Jefren (~Jefren@206.253.157.227) (Ping timeout: 245 seconds)
[20:38:36] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[20:41:00] *** Joins: Jefren (~Jefren@208.104.190.51)
[20:42:18] *** Joins: nomic (~nomic@185.192.69.208)
[20:43:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8cd8:414d:2b05:7912) (Quit: Client closed)
[20:43:31] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[20:43:46] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[20:43:46] *** Quits: Zweimer39 (~Zweimer@2a02:908:d20:26e0:ed9e:cfca:43af:b59b) (Quit: Client closed)
[20:43:49] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[20:44:04] <aphysically> also re: narrowing, the big one mypy seemed to do in my code that pyright didn't was mostly narrowing the type of container contents
[20:44:16] <aphysically> (after reviewing the strict complaints)
[20:44:42] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[20:45:22] *** Joins: cheater (~Username@user/cheater)
[20:45:32] *** Joins: cebor (~cebor@user/cebor)
[20:45:45] *** Quits: Jefren (~Jefren@208.104.190.51) (Ping timeout: 265 seconds)
[20:45:49] *** Quits: cebor (~cebor@user/cebor) (Remote host closed the connection)
[20:46:11] *** Joins: cebor (~cebor@user/cebor)
[20:47:06] *** Joins: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net)
[20:47:24] *** Joins: Jefren (~Jefren@206.253.157.228)
[20:50:32] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[20:51:06] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: Leaving)
[20:51:26] *** Joins: sbrown (~sbrown@66.44.16.44)
[20:51:27] *** Joins: jazzy (~jaziz@2600:380:443b:e243:84dd:ba75:4525:58b4)
[20:52:50] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:52:57] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:54:31] *** Joins: beencubed (~beencubed@209.131.238.248)
[20:55:26] *** Joins: Akuli (~Akuli@82-203-164-198.bb.dnainternet.fi)
[20:56:15] *** Quits: Jefren (~Jefren@206.253.157.228) (Ping timeout: 265 seconds)
[20:56:25] *** Joins: RandomBloke (~craig@2a02:c7d:e52:2900:5635:30ff:fe9b:9195)
[20:57:15] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[20:57:41] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[20:58:15] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:a9cb:64d:cd8b:ab4a)
[20:58:38] *** Joins: just-me (~just-me@5.47.154.183)
[20:58:57] <QuaternionsRock> Property setters need to be legal assignment expressions
[20:59:10] <Guddu> Good Morning all
[20:59:23] <Guddu> I started getting this error with the python requests library
[20:59:24] <Guddu> [SSL: CERTIFICATE_VERIFY_FAILED
[20:59:27] *** Joins: b_jonas (~x@catv-176-63-2-81.catv.broadband.hu)
[20:59:38] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 265 seconds)
[20:59:43] <Guddu> Would this have something to do with the letsencrypt certificate issue?
[20:59:46] <QuaternionsRock> Qt integration is really annoying if you choose to use properties at the moment
[21:00:17] <rendar> does `task.cancel(); await task` makes sense?
[21:01:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:01:34] *** Joins: Jefren (~Jefren@70.35.67.115)
[21:02:43] *** Quits: pradhvan (~pradhvan@dgplug/pradhvan) (Quit: Leaving)
[21:03:30] *** Parts: RandomBloke (~craig@2a02:c7d:e52:2900:5635:30ff:fe9b:9195) (WeeChat 3.3)
[21:04:10] <philipp64|work> I’m using urllib3 and getting warnings from Apache mod_security (200003)… “MULTIPART_UNMATCHED_BOUNDARY “ … any suggestions on how to mitigate this?  Was working fine before I enabled mod_sec…
[21:04:37] <rendar> philipp64|work, any particular reason to not use nginx?
[21:04:44] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:05:22] <philipp64|work> We’re using ASP’s where Apache is the platform.
[21:05:51] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:06:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[21:06:43] *** Quits: rsx (~dummy@ppp-188-174-158-97.dynamic.mnet-online.de) (Quit: rsx)
[21:06:47] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:07:22] *** Quits: Jefren (~Jefren@70.35.67.115) (Ping timeout: 265 seconds)
[21:11:16] *** Quits: Samian (~s@user/samian) (K-Lined)
[21:11:41] *** Joins: Jefren (~Jefren@70.35.66.103)
[21:12:11] *** Joins: dez (uid92154@user/dez)
[21:12:25] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Read error: Connection reset by peer)
[21:14:41] *** Joins: emf (~emf@2620:10d:c090:400::5:ad58)
[21:15:21] <Klinda> INFO: pip is looking at multiple versions of idna to determine which version is compatible with other requirements. This could take a while..
[21:15:23] <Klinda> why?
[21:15:34] <Klinda> I am doing pip install jupyterlab
[21:15:52] <SnoopJ> Klinda, why what?
[21:16:01] <Klinda> INFO: pip is looking at multiple versions of anyio to determine which version is compatible with other requirements. This could take a while.
[21:16:06] <Klinda> and in the end he get stuck
[21:16:10] <Klinda> it*
[21:16:12] <SnoopJ> How long did you wait?
[21:16:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:16:35] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:16:37] <Klinda> INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. If you want to abort this run, you can press Ctrl + C to do so. To improve how pip performs, tell us what happened here: https://pip.pypa.io/surveys/backtracking
[21:16:44] <SnoopJ> hello?
[21:16:49] <Klinda> well
[21:16:53] <Klinda> now 1 minute
[21:17:10] <Klinda> but I never met this bug
[21:18:00] <Klinda> it's trying to install all the depend packages?
[21:18:05] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[21:18:23] <SnoopJ> Klinda, yes, and the packages *those* depend on, and so on. This problem is pretty complicated, and sometimes it takes more than one minute.
[21:19:03] *** Joins: Samian (~s@user/samian)
[21:19:18] <Klinda> pip is my life saviour
[21:20:43] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[21:20:45] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:21:08] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[21:21:21] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[21:21:24] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:22:02] *** jazzy is now known as jazz-o-lantern
[21:22:26] <xMopx> why is it so difficult to define an optional argument with Click
[21:23:13] <Guddu> has anyone had the same issue as me? Could this be letsencrypt related?
[21:24:02] <xMopx> your openssl is too old Guddu
[21:26:50] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:26:56] <Guddu> xMopx, Thanks for your response. The system openssl is Version     : 1.0.1e, Release     : 58.el6_10
[21:26:57] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[21:27:26] *** Joins: arinov (~arinov@31.142.12.211)
[21:27:51] <grym> Guddu: i think that's too old
[21:28:22] <Guddu> grym, So just updating the system ssl should do?
[21:28:47] <grym> Guddu: i'm not sure, and it possibly depends on how you got your python
[21:29:04] <Guddu> grym, I built using source.
[21:29:22] <grym> Guddu: you mihgt need to rebuild
[21:29:33] *** Quits: just-me (~just-me@5.47.154.183) (Read error: Connection reset by peer)
[21:29:43] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:29:51] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[21:30:19] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[21:30:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:31:04] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:31:31] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:31:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:32:09] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:32:20] *** Quits: Samian (~s@user/samian) (K-Lined)
[21:32:20] <philipp64|work> okay, different question… how do you force urllib3 to use x-www-url-encoded instead of multipart/form-data
[21:32:22] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:32:33] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[21:32:33] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[21:33:18] *** Joins: ano (~ano@user/ano)
[21:33:19] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[21:36:04] <aphysically> the new match/case is interesting for syntax highlighters, not sure how easy it is to special case the context sensitive matching
[21:36:13] <aphysically> (of the keywords themselves)
[21:36:21] *** Quits: Jefren (~Jefren@70.35.66.103) (Ping timeout: 245 seconds)
[21:37:24] *** Quits: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de) (Ping timeout: 245 seconds)
[21:37:32] <aphysically> is there a name for the grammar syntax being used in PEPs like PEP 634
[21:37:47] <aphysically> as in the literal formatting used in e.g. these syntax blocks: https://www.python.org/dev/peps/pep-0634/#the-match-statement
[21:37:58] <supakeen> BNF I'd say.
[21:38:23] <phy1729> https://docs.python.org/3.10/reference/grammar.html "The notation is a mixture of EBNF and PEG."
[21:38:49] <Klinda> SnoopJ: well now it's about 30+ minutes
[21:38:56] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[21:39:07] <aphysically> thanks pycurious, supakeen :)
[21:39:13] <aphysically> phy1729*
[21:42:36] *** Joins: comet23 (~comet23@user/comet23)
[21:42:59] *** ub is now known as ubert
[21:43:26] *** Quits: emf (~emf@2620:10d:c090:400::5:ad58) (Ping timeout: 245 seconds)
[21:43:26] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 245 seconds)
[21:43:29] <comet23> https://bpa.st/BYMQ that's the solution to my homework problem that i wrote... i was wondering why the actual solution leaves out .keys()
[21:43:46] *** Quits: robz (~robz@109.78.229.54) (Quit: Leaving)
[21:44:06] <grym> comet23: becuase iterating over a dict is an implicit .keys
[21:44:19] <grym> if you `for x in mydict`, you're "really" `for x in mydict.keys()`
[21:44:48] <comet23> but then why do i get an unpacking error when i don't use .keys() .items() .values()
[21:45:00] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:45:04] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 265 seconds)
[21:45:04] <vdamewood> Is there somewhere where the file naming convention for C modules is documented?
[21:45:05] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:45:10] <grym> if you `for key, value in mydict`, well, you can't unpack there
[21:45:22] *** Joins: beterraba (~beterraba@86.107.21.205)
[21:45:57] <SnoopJ> Klinda, that sounds like a bug, then. Which Python, pip, and jupyterlab versions is this?
[21:46:01] <grym> oh god i just realised a way that you _could_ unpack there and eeeew that's horrible
[21:46:14] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[21:46:18] <grym> `for k,v in {("oh","no"):5}` :( :(
[21:46:41] <Klinda> 3.10, pip 21.2.4
[21:46:44] <comet23> i thought you couldn't have more than 1 value for a key in a dictionary
[21:46:48] <SnoopJ> comet23, iterating a dictionary produces only its keys. To retrieve anything else, you must use one of the named methods. It's often a good idea to use keys() anyway to ensure that it's readable.
[21:46:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[21:47:01] <grym> comet23: a tuple is one value
[21:47:07] <Klinda> lab the latest I think
[21:47:15] <comet23> i tried that once and got an error grym
[21:47:27] <grym> comet23: my code runs
[21:47:39] <comet23> why would you ever use more than one value for the key?
[21:47:46] <comet23> thank you SnoopJ
[21:47:47] *** Joins: emf (~emf@163.114.132.5)
[21:47:49] <SnoopJ> comet23, because sometimes you want to associate one object with a sequence of objects.
[21:47:50] <comet23> thank you grym
[21:47:53] <grym> https://bpa.st/3QVA  eeeeew
[21:47:54] <SnoopJ> like a string with a sequence
[21:48:16] <comet23> why not reverse it?
[21:48:21] <SnoopJ> e.g. `school_data: {"students": ["Larry", "Moe", "Curly Joe"]}`
[21:48:23] <comet23> like have 4 and 5 as keys
[21:48:39] <SnoopJ> comet23, because dictionaries are one-to-one mappings between keys, and mutable sequences can't be keys.
[21:48:45] <SnoopJ> between objects*
[21:49:09] <comet23> wow you type fast
[21:49:11] <SnoopJ> (mutable objects in general can't be, because mutable objects are not supposed to be hashable, and keys must be hashable)
[21:49:18] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:e082:687d:d11c:1ab)
[21:49:30] *** Quits: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:51:30] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[21:52:01] <paul424> can we go back to the one-liner rainfall problem or it is too passe ... :D please
[21:52:39] *** Joins: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de)
[21:52:51] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Client Quit)
[21:53:38] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[21:53:46] <paul424> statistics.mean(itertools.takewhile(lambda x: x!=99999, (input()))) # it almost works , that is I get TypeError: can't convert type 'str' to numerator/denominator
[21:54:59] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[21:55:14] <paul424> for what I understand the takewhile prepares collection of strings , while mean excpects collection of numbers
[21:56:13] <grym> paul424: consider the type that input() returns
[21:56:35] <paul424> grym yeah it's string
[21:56:44] <SnoopJ> your takewhile() doesn't do what you think it does
[21:56:53] <SnoopJ> it calls input() just once
[21:57:30] <paul424> aha
[21:57:44] <paul424> can I have iterable input in python or not ?
[21:57:54] <grym> yes, strings are iterable
[21:58:27] *** Joins: Jefren (~Jefren@70.35.66.218)
[21:58:40] <SnoopJ> `itertools.takewhile(lambda val: val != 99_999, (input() for _ in itertools.count()))` looks more like what you meant (note the call to int()), but this is getting awfully busy. I would write a generator function instead
[22:00:46] <SnoopJ> https://bpa.st/UNNA
[22:01:32] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[22:01:45] <SnoopJ> (I would also usually wrap a try/except around the int(), just in case the user gives something that isn't a valid integer)
[22:02:12] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Client Quit)
[22:02:29] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[22:04:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[22:06:27] *** Joins: fikran (~fikran@user/fikran)
[22:08:24] *** Joins: emf_ (~emf@2620:10d:c090:400::5:ad58)
[22:10:20] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:31] *** Quits: emf (~emf@163.114.132.5) (Ping timeout: 245 seconds)
[22:10:44] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[22:11:19] *** Joins: ub (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[22:11:33] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[22:11:59] *** Quits: ubert (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[22:12:00] *** ub is now known as ubert
[22:13:01] *** Quits: emf_ (~emf@2620:10d:c090:400::5:ad58) (Ping timeout: 245 seconds)
[22:17:02] *** Joins: emf (~emf@2620:10d:c090:400::5:9760)
[22:20:16] <paul424> SnoopJ++
[22:20:21] *** Quits: Jefren (~Jefren@70.35.66.218) (Ping timeout: 265 seconds)
[22:20:40] *** Joins: whatsupdoc (~whatsupdo@148.64.18.200)
[22:21:00] <whatsupdoc> Why are there so many different ways to format a print message in python? And what is the preferred method?
[22:21:28] *** Joins: Auron (~Auron956@user/auron)
[22:21:34] <sco1_> Backwards compatibility
[22:21:36] *** sco1_ is now known as sco1
[22:21:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[22:21:44] <bjs> whatsupdoc: if you mean string formatting, % vs .format() vs f"", then it's because Python is old and it didn't get them all at once
[22:22:00] <whatsupdoc> Yea, that's what I was talking aobut
[22:22:01] <bjs> whatsupdoc: typically, use f-strings if you can, otherwise use .format()
[22:22:12] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[22:22:21] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[22:23:45] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:25:14] <whatsupdoc> Ok, thanks!
[22:25:27] *** Joins: _Hokedli_ (~lasliedv@gateway/tor-sasl/hokedli)
[22:25:28] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[22:25:32] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[22:26:30] *** Joins: Jefren (~Jefren@70.35.67.12)
[22:26:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8cd8:414d:2b05:7912)
[22:29:10] *** Quits: comet23 (~comet23@user/comet23) (Ping timeout: 256 seconds)
[22:33:26] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[22:34:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:34:02] *** Joins: Pickchea (~private@user/pickchea)
[22:34:28] <paul424> for ii in itertools.starmap( int, ['34','21','3432','99999','15']):	print(ii)
[22:34:53] <paul424> TypeError: 'str' object cannot be interpreted as an integer ; so what ?
[22:35:39] *** Quits: sharksauce (sharksauce@user/sharksauce) (Ping timeout: 268 seconds)
[22:36:32] <Wooble> paul424:
[22:36:45] <Yhg1s> paul424: starmap() expects a sequence of argument tuples.
[22:36:47] <bjs> paul424: why starmap?  isn't starmap just the wrong thing
[22:36:48] <Wooble> paul424: that's trying to do int(*"34")
[22:36:51] *** Joins: junktext (~junktext@109.201.152.178)
[22:36:58] <bjs> paul424: maybe you just wanted map and not itertools.starmap ?
[22:37:22] <paul424> aha tuples
[22:37:24] <bjs> paul424: or really a list comprehension `[int(x) for x in ['34', '21', ...]]` or just a regular for loop.
[22:37:33] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[22:38:14] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[22:38:41] *** Quits: Penagwin (~Penagwin@207.148.13.191) (Quit: Ping timeout (120 seconds))
[22:39:48] *** Quits: ubert (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Quit: ubert)
[22:39:58] *** Quits: infobob (~infobob@python/bot/infobob) (Remote host closed the connection)
[22:40:31] *** Quits: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de) (Ping timeout: 245 seconds)
[22:40:48] <paul424> bjs, Wooble Yhg1s yeah thanks
[22:41:16] <paul424> I wrongly read what starmap can do ... I 've got lot to learn still
[22:41:19] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (Read error: Connection reset by peer)
[22:41:46] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:42:05] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[22:42:11] *** Lando-HoloNet is now known as Lando-SpacePimp
[22:42:20] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:42:46] *** Quits: whatsupdoc (~whatsupdo@148.64.18.200) (Ping timeout: 256 seconds)
[22:44:16] <aphysically> jinsun: okay I think I've narrowed down the major case where mypy is different from pyright
[22:44:44] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:44:48] <aphysically> if I do a = [] and then a += ["string"], mypy infers a is list[str], but pyright keeps it as list[unknown]
[22:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:06] <aphysically> the latter shows up in strict mode as a warning (but not in normal mode)
[22:45:09] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:336b:60d:36c2:1454) (Remote host closed the connection)
[22:45:26] <jinsun> oh yeah, that is a new thing for mypy, earlier mypy used to complain about that even in non-strict mode
[22:46:01] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:b8da:f768:b34d:a040)
[22:46:04] *** Joins: ubert (~Thunderbi@178.115.45.189.wireless.dyn.drei.com)
[22:46:25] <paul424> naah finally I 've got what I wanted : SnoopJ :
[22:46:33] <paul424> print (statistics.mean( map( float, itertools.takewhile(lambda val: val != '99999' , (input() for _ in itertools.count())))))
[22:47:14] <paul424> ^_^ yo !
[22:47:17] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:37] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:6c29:9ab5:af43:15df)
[22:48:42] <Wooble> )))))) now I see why guido blames lisp programmers for map and lambda.
[22:48:49] *** Joins: BlessJah (~BlessJah@user/blessjah)
[22:48:56] <grym> pyparedit when
[22:49:33] <aphysically> jinsun: right, for anything with a more complicated type I still need to set the list initially, but I wrote an entire codebase using this behavior of mypy so the number of complaints about this with pyright was quite large
[22:49:48] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:b8da:f768:b34d:a040) (Client Quit)
[22:49:53] <aphysically> maybe I will find when it was introduced in mypy
[22:50:00] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:b8da:f768:b34d:a040)
[22:50:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:50:35] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[22:50:46] <jinsun> aphysically: yeah thatis actually annoying about pyright, I just disable reportUnknownMemberType
[22:50:53] <aphysically> I'm trying to find discussions about this behavior and if pyright has any stance on it
[22:51:14] <bionade24> Is there some python library which gives me disks and mountpoints like "mount"?
[22:51:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[22:51:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:52:15] <aphysically> jinsun: on the other hand, if pyright isn't inferring the type I'm enhancing pyright's checking abilities by adding the annotation, but I'm interested in if pyright should really just be inferring the same way as mypy
[22:53:08] *** Quits: or4n (~or4n@gerbera.qkka.org) (Ping timeout: 268 seconds)
[22:54:15] *** Joins: trace987 (~trace@dynamic-002-247-250-222.2.247.pool.telefonica.de)
[22:54:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:55:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:56:46] *** Quits: arinov (~arinov@31.142.12.211) (Ping timeout: 245 seconds)
[22:57:15] *** Joins: hacksword (~hacksword@173.244.209.142)
[22:57:20] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Quit: Leaving)
[22:57:36] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[22:58:29] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[22:58:34] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[22:58:39] *** Quits: RougeR (~rougex250@user/rouger) (Ping timeout: 245 seconds)
[22:58:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[22:58:44] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[23:00:02] *** Quits: Andrew (~andrew@user/andrewyu) (Remote host closed the connection)
[23:00:28] *** Quits: ubert (~Thunderbi@178.115.45.189.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[23:01:09] *** Quits: nwe (~nwe@sigwait.se) (Ping timeout: 268 seconds)
[23:01:26] <Wooble> bionade24: psutil
[23:01:30] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:02:23] *** Quits: yemel (~yemel@user/yemel) (Quit: Goodbye!)
[23:03:31] *** Quits: ElPresidente (~ElPreside@108-74-113-129.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[23:03:41] <jinsun> aphysically: there are few reports that are related https://github.com/microsoft/pyright/issues/1692 and this one https://github.com/microsoft/pyright/issues/1670
[23:04:24] <jinsun> aphysically: the second one there gave us this feature https://github.com/microsoft/pyright/blob/main/docs/type-inference.md#empty-list-and-dictionary-type-inference
[23:05:03] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.3)
[23:05:19] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 245 seconds)
[23:06:39] *** Joins: yemel (~yemel@user/yemel)
[23:06:53] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[23:07:08] *** Joins: Klinda (~superleag@user/klinda)
[23:07:15] *** Joins: or4n (~or4n@2001:19f0:5001:3272:5400:2ff:fe66:52bf)
[23:07:17] *** Joins: infobob (~infobob@python/bot/infobob)
[23:07:21] <bionade24> Wooble: thx
[23:07:32] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[23:07:34] <jinsun> but if you just have a blank list, then you have to give annotation, pyright doesn't look forward to infer types
[23:07:35] *** ChanServ sets mode: +o infobob
[23:08:10] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:08:29] *** infobob sets mode: -b *!*eniac@gateway/tor-sasl/eniac
[23:08:49] *** Joins: imp (~imp@192-141-191-231.alternativaip.net.br)
[23:08:50] *** Joins: MrC (Ben@mrbenc.net)
[23:09:18] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:10:30] *** Joins: AndrewYu (~andrew@user/andrewyu)
[23:10:47] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[23:10:50] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:a9cb:64d:cd8b:ab4a) (Quit: Client closed)
[23:12:35] *** infobob sets mode: -o infobob
[23:13:31] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[23:13:42] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[23:14:06] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[23:15:23] *** Joins: arinov (~arinov@213.194.126.155)
[23:15:43] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[23:16:13] <aphysically> jinsun: I think the commentary there sort of answers my question
[23:16:16] <aphysically> this is by design
[23:16:25] <aphysically> this comment in particular https://github.com/microsoft/pyright/issues/1670#issuecomment-803660205
[23:16:33] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[23:16:35] <aphysically> "Pyright's inference engine considers all assignments of a variable rather than just the first assignment."
[23:17:04] *** Joins: ElPresidente (~ElPreside@108-74-113-129.lightspeed.tukrga.sbcglobal.net)
[23:17:08] <aphysically> so pyright intentionally does not (and should not, by design) infer the list is of str
[23:17:21] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[23:17:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 265 seconds)
[23:17:56] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[23:17:58] <jinsun> yeah it used to infer list[Any] before actually
[23:18:25] <jinsun> recently it started inferring list[Unknown] because Any disables type checking later
[23:18:47] <aphysically> I can appreciate the difference in approaches, I guess. Although I think I might like mypy's approach better if you're into strict type checking because it will type check more of the code by default
[23:19:01] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[23:19:22] <orangeboxcutter> hey folks
[23:19:33] <orangeboxcutter> is it okay to post a link to stackoverflow?
[23:20:07] <jinsun> if it is python related then yes I think
[23:20:18] <orangeboxcutter> it is
[23:20:20] <orangeboxcutter> https://stackoverflow.com/questions/69471883/how-to-correctly-format-list-of-dictionaries-from-os-popen-output
[23:20:28] <orangeboxcutter> i'm stuck
[23:20:31] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 245 seconds)
[23:20:32] *** Quits: _Hokedli_ (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:20:35] <aphysically> jinsun: maybe also I'm just jaded because it means to satisfy pyright I have to add a bunch of extra annotations to my code
[23:20:46] <aphysically> :p
[23:20:47] *** Joins: jay-m126 (~jay-m@154.72.160.228)
[23:20:56] <jinsun> yes the order matters :D
[23:21:09] *** Quits: treefrob (~treefrob@p2e54235e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:21:24] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[23:21:25] <aphysically> I'll probably wait to do that until the next pyright release because the ClassVar change affects way more warnings than the bug I reported
[23:22:00] <aphysically> both of the things I reported are actually already changed in git! https://github.com/microsoft/pyright/issues/2377 <- this is the classvar one
[23:22:33] *** Quits: paul424 (~tom@ip-31-0-124-155.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:23:18] *** Joins: whatsupdoc (~whatsupdo@148.64.18.230)
[23:23:32] <guardian> is there an elegant way to create a the following dict: {"foo": foo, "bar": bar} but omit the key if foo or bar is None?
[23:23:32] <aphysically> pyright *really* didn't like my use of naked ClassVar
[23:23:52] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[23:24:13] <kline> guardian, something like {str(element): element for element in all_your_elements if element is not None}
[23:24:28] <KirkMcDonald> str(element) probably won't get you there.
[23:24:35] <kline> KirkMcDonald, _something like_
[23:25:05] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:e082:687d:d11c:1ab) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:25:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:25:22] <jinsun> aphysically: good that it is getting fixed in next version, that is a good thing about pyright, they fix bugs faster, but they take more convincing that the thing is actually a bug
[23:25:34] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:25:58] <aphysically> hahaha, did you see the other thing I reported? it got changed from as designed to bug after a second prodding message
[23:26:09] <aphysically> https://github.com/microsoft/pyright/issues/2378
[23:26:55] <aphysically> that's okay, I don't mind the attitude on projects that get a high volume of issue filing
[23:27:39] <aphysically> (it's understandable, really)
[23:28:48] *** Joins: Auron956 (~Auron956@user/auron)
[23:30:55] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:30:59] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:7ad2:b341:815d:a32e) (Quit: Konversation terminated!)
[23:31:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:31:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:31:46] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 245 seconds)
[23:34:11] *** Joins: treefrob (~treefrob@p2e54293e.dip0.t-ipconnect.de)
[23:34:13] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[23:34:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[23:34:38] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:35:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[23:36:26] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:b539:8553:ccaf:8898) (Quit: Textual IRC Client: www.textualapp.com)
[23:36:32] *** Joins: Axy (~Axy@user/axy)
[23:37:19] *** Joins: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr)
[23:38:48] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:39:17] *** Quits: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr) (Client Quit)
[23:40:00] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[23:41:04] *** Quits: curiosity (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[23:42:10] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[23:43:00] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[23:43:58] *** Quits: nicode (~nic@2607:f2c0:93a1:f100:c31d:d8a9:6afd:3cb2) (Ping timeout: 250 seconds)
[23:46:12] *** Quits: whatsupdoc (~whatsupdo@148.64.18.230) (Quit: Client closed)
[23:46:57] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:49:36] <vdamewood> Well, I found a partial answer to my question from two hours ago. Looks like I can just do from sysconfig import get_config_var;print(get_config_var('EXT_SUFFIX')) to get the extension suffix, then it's just mypackage.THAT.
[23:50:01] <vdamewood> s/mypackage/mymodule/
[23:50:35] *** Joins: BlessJah (~BlessJah@user/blessjah)
[23:52:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[23:52:58] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:53:12] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[23:54:43] *** Joins: MCx (~MCx@user/mcx)
[23:54:47] *** Joins: mspe (~user@tilde.team/user/mspe)
[23:55:03] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[23:56:32] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:57:15] *** Joins: mei (~mei@user/mei)
[23:57:38] <theseb> Is the secret variable kept private in https://somedomain.com/?secret=foo ?  I'm imagining the entire URL travels out in the wild exposing the secret?
[23:58:16] <KirkMcDonald> theseb: No, the URL is inside the TLS stream.
[23:58:53] <The-Compiler> theseb: it's encrypted like KirkMcDonald says, but it usually ends up in server logs as well as things like browser histories or shared links
[23:59:10] <The-Compiler> (you'd typically use POST for login data and such)
[23:59:33] <vdamewood> theseb: Only the domain name is set clear text to work around a problem with virtual hosts.
