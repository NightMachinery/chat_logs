[00:00:42] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 268 seconds)
[00:13:06] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[00:18:17] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[00:27:38] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com)
[00:28:00] *** Joins: Baltazars (~Baltazars@189.112.221.18)
[00:33:18] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:34:18] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[00:34:35] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:38:46] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[00:40:36] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:41:34] *** Joins: audiobirb (~audio@user/audio)
[00:43:07] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[00:44:07] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:45:12] *** Quits: Baltazars (~Baltazars@189.112.221.18) (Quit: Client closed)
[00:45:41] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:04:51] *** Joins: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au)
[01:08:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:10:06] *** Joins: fikran (~fikran@user/fikran)
[01:10:20] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[01:10:53] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:13:09] *** Quits: Elzington_ (~Elzington@68.235.43.78) (Quit: Leaving)
[01:14:06] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 268 seconds)
[01:14:17] *** Joins: Elzington (~Elzington@68.235.43.78)
[01:19:18] *** Joins: rje (~rje@65.141.156.170)
[01:24:33] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com) (Quit: Client closed)
[01:30:22] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:39:31] *** Joins: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br)
[01:40:22] *** Quits: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br) (Remote host closed the connection)
[01:40:31] *** Joins: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br)
[01:55:18] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[01:56:00] *** Joins: rje (~rje@65.141.156.170)
[01:56:55] *** Joins: rje_ (~rje@65.141.156.170)
[02:00:24] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[02:18:03] *** Joins: rje (~rje@2600:380:7044:7995:d5af:5f08:74b6:8b5d)
[02:19:41] *** Quits: rje_ (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[02:21:41] *** Joins: rje_ (~rje@65.141.156.170)
[02:22:36] *** Joins: rje__ (~rje@65.141.156.170)
[02:24:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 260 seconds)
[02:24:59] *** Quits: rje (~rje@2600:380:7044:7995:d5af:5f08:74b6:8b5d) (Ping timeout: 264 seconds)
[02:26:15] *** Quits: rje_ (~rje@65.141.156.170) (Ping timeout: 268 seconds)
[02:33:45] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[02:36:09] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[02:38:47] *** Joins: orzel (~orzel@2a01:e0a:df:6ba0:6600:577d:a10:3675)
[02:40:09] <orzel> Hello. I often use something along this, and it works well: MyModel.objects.values("field1").annotate(nb=Count("field1")).filter(nb__gt=1).order_by()
[02:40:46] <orzel> Now i want to do this on a couple of fields (say, f1, f2). I want to count when a given couple is found several times in MyModel table.
[02:41:36] <orzel> I tried the obvious values("f1", "f2").annotate(nb=Count("f1", "f2")), but that gives me a weird error: AttributeError: 'str' object has no attribute 'resolve_expression'
[02:41:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:41:53] <orzel> Any hint on how to do that ? :)
[02:42:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:44:52] <orzel> Django doc mentions counting two different fields (summary: dont), but i really want to count couples
[02:47:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[02:50:32] *** Joins: rje (~rje@65.141.156.170)
[02:54:14] *** Quits: rje__ (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[02:58:25] *** Quits: The_Jag (~The_Jag@host-82-54-168-243.retail.telecomitalia.it) (Quit: The_Jag)
[03:05:06] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 268 seconds)
[03:06:29] <FunkyBob> Count('*') perhaps, orzel ?
[03:06:59] <FunkyBob> [also when sharing errors, it's usually best to share the code and full traceback, as mentioned in the topic]
[03:07:26] *** Joins: rje (~rje@65.141.156.170)
[03:11:49] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 256 seconds)
[03:16:11] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[03:17:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:19:27] *** Joins: fikran (~fikran@user/fikran)
[03:25:44] *** Joins: richbridger (~richbridg@089144202237.atnat0011.highway.a1.net)
[03:31:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:35:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[03:35:42] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com)
[03:50:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:51:53] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com) (Quit: Client closed)
[03:56:48] <orzel> FunkyBob: ! indeed, Count("*") with proper values() might be it. At least it returns something that doesn't look stupid at first glance. Still investigating
[04:04:38] *** Joins: yanchai (~yanchai@124.6.141.226)
[04:13:02] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[04:31:54] *** Joins: rje (~rje@50.35.241.164)
[04:37:07] <orzel> Yes, it works. Thanks a lot FunkyBob :-)
[04:37:16] <orzel> (again :)
[04:51:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:51:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:56:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[04:59:44] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Remote host closed the connection)
[05:01:29] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[05:16:53] *** Parts: yanchai (~yanchai@124.6.141.226) ()
[05:17:36] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:25:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[05:26:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:28:47] *** Joins: fikran (~fikran@user/fikran)
[05:32:11] *** Joins: djapo (~archangel@user/djapo)
[05:38:46] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:45:38] *** Joins: yanchai (~yanchai@124.6.141.226)
[05:46:23] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[05:50:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:55:50] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[05:57:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:57:46] *** Joins: lazzurs8 (~lazzurs@user/lazzurs)
[05:58:25] *** Quits: Elzington (~Elzington@68.235.43.78) (Ping timeout: 256 seconds)
[05:59:54] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Ping timeout: 260 seconds)
[05:59:54] *** lazzurs8 is now known as lazzurs
[06:00:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:02:53] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[06:04:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[06:05:57] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[06:09:48] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[06:12:09] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:20:30] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[06:29:35] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[06:30:02] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[06:30:54] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:31:36] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[06:41:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:46:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:53:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:54:30] *** Quits: yanchai (~yanchai@124.6.141.226) (Ping timeout: 268 seconds)
[06:59:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[07:17:50] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[07:18:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:19:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[07:24:27] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[07:36:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:38:08] *** Joins: fikran (~fikran@user/fikran)
[07:44:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:44:22] *** Quits: aavrug (uid524982@id-524982.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:50:21] *** Joins: yanchai (~yanchai@124.6.141.226)
[07:57:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:58:05] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:59:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:09:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:19:50] *** Quits: sreve (~quassel@p4ff44b8e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:26:59] *** Quits: kostkon (~kostkon@2a02:587:a109:cc9:78e0:6594:e774:f291) (Ping timeout: 268 seconds)
[08:28:56] *** Joins: kostkon (~kostkon@athedsl-395149.home.otenet.gr)
[08:53:26] *** Quits: dre (~dre@2001:8003:c932:c301:bb14:f1af:101c:4c88) (Quit: Leaving)
[08:53:57] *** Joins: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7)
[08:56:30] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 260 seconds)
[08:58:13] *** Joins: esaym153 (~esaym153@net153.net)
[09:08:19] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[09:10:02] *** Joins: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr)
[09:11:39] *** Quits: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au) (Ping timeout: 256 seconds)
[09:14:05] *** Quits: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr) (Client Quit)
[09:14:27] *** Joins: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr)
[09:17:26] *** Joins: kostkon_ (~kostkon@2a02:587:a112:d71e:fc44:4fcd:f504:697c)
[09:18:26] *** Quits: kostkon (~kostkon@athedsl-395149.home.otenet.gr) (Ping timeout: 256 seconds)
[09:19:57] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:26:11] *** Joins: dor (~erg@78.11.12.207)
[09:32:59] *** Quits: kostkon_ (~kostkon@2a02:587:a112:d71e:fc44:4fcd:f504:697c) (Ping timeout: 268 seconds)
[09:40:19] *** Joins: mattil (~mattil@d14zz8bbd44013kdl18-4.rev.dnainternet.fi)
[09:45:19] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: Lost terminal)
[09:45:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:46:56] *** Quits: mattil (~mattil@d14zz8bbd44013kdl18-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:47:30] *** Joins: fikran (~fikran@user/fikran)
[09:48:58] *** Parts: yanchai (~yanchai@124.6.141.226) ()
[09:49:23] *** Joins: yanchai (~tolosamis@124.6.141.226)
[09:50:23] <yanchai> load balancer
[09:55:11] *** Joins: djapo (~archangel@user/djapo)
[09:58:31] *** Joins: Atque (~Atque@user/atque)
[09:58:31] *** Parts: yanchai (~tolosamis@124.6.141.226) ()
[10:00:23] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[10:00:29] *** Joins: yanchai (~yanchai@222.127.97.162)
[10:02:05] *** Joins: mattil (~mattil@176-93-136-238.bb.dnainternet.fi)
[10:06:55] <serafeim> hello friends
[10:11:42] *** Quits: mattil (~mattil@176-93-136-238.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[10:14:01] *** Joins: kostkon (~kostkon@athedsl-394022.home.otenet.gr)
[10:18:29] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:41:43] *** Joins: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr)
[10:46:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:52:07] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:59:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[11:01:46] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 268 seconds)
[11:03:40] *** Joins: mrwick (~mrwick@user/mrwick)
[11:10:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:19:47] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[11:28:42] *** Parts: mpana (~mpana@193.226.149.49) ()
[11:38:46] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 268 seconds)
[11:47:18] *** Joins: _ganapathi_ (~ganapathi@115.99.26.203)
[11:48:45] <_ganapathi_> i have django app with multiple modules and apscheduler jobs. i want to quickly enable/disable those module. if i disable then those apscheduler jobs should not executed. anybody guide me proper way to do this.
[11:54:12] <apollo13> _ganapathi_: did you check the apscheduler docs on how to pause jobs?
[11:55:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[11:55:29] *** Quits: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[11:55:42] *** Joins: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr)
[11:56:51] *** Joins: fikran (~fikran@user/fikran)
[12:01:04] *** Joins: pycode (~pycode@2001:b07:5d28:551:5cf2:fd60:4ab8:756b)
[12:09:44] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:15:46] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:20:31] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (Ping timeout: 265 seconds)
[12:36:14] <LordKalma> I have a .end file with "DJANGO_ALLOWED_HOSTS=localhost". In my settings.py I have ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" "). But when i try to start docker compose I get
[12:36:14] <LordKalma> #10 0.694     ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")
[12:36:14] <LordKalma> #10 0.694 AttributeError: 'NoneType' object has no attribute 'split'
[12:36:17] <LordKalma> any tips?»
[12:37:01] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:37:32] <carlio> LordKalma: I think that means that os.environ.get("DJANGO_ALLOWED_HOSTS") is None, which happens if the env var is not set at all
[12:38:06] <LordKalma> yes, that much I managed to understand...
[12:38:08] <LordKalma> it's weird... dunno what's going on
[12:39:46] <LordKalma> ahhh
[12:39:56] <LordKalma> I have to set the environment: in the dockerfile, I guess
[12:39:59] <LordKalma> kinda boilerplaty...
[12:40:02] <carlio> I guess you don't have an `environ:` dict in docker-compose
[12:40:21] <carlio> docker-compose.yaml I mean sorry
[12:40:35] <carlio> it won't pass host environment into the docker container
[12:40:59] <carlio> you have to also set it somewhere, docker-compose.yaml or Dockerfile (or from the `docker run` command if you run it that way)
[12:41:29] <LordKalma> https://bpa.st/6MHBBL3ZEYYJOXKJZAUIQYSMN4
[12:41:31] <LordKalma> I had to do this
[12:41:56] <carlio> yeah bit annoying but what can you do
[12:42:07] <LordKalma> hum, scrap that.. still complaining
[12:52:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:54:12] <serafeim> strange question but is it possible to scan a barcode using javascript only ? i.e from a web page without an app ?
[12:57:28] <rapha> hi all!
[12:57:43] *** Quits: gitly (~gitly@148.252.132.132) (Ping timeout: 268 seconds)
[12:58:08] <rapha> how do you make a variable you had to create in a model class's get_queryset() available to that same model class's get_context_data()? ( https://gist.github.com/sixtyfive/d45cad48804c2da20926befcee8f9d9e#file-views-py-L22-L23 )
[12:59:40] *** Joins: gitly (~gitly@185.69.144.172)
[13:05:19] <rapha> oooh, evermind ... context['page_obj'] has only the models of the current page. that's what you should create that from.
[13:06:53] <rapha> oh noes, documents[model.id] is not allowed inside {{ }} :-((
[13:08:59] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[13:09:30] *** Joins: zkanda (~zkanda@box.makean.art)
[13:11:35] <rapha> what is the Django Way of doing https://gist.github.com/sixtyfive/d45cad48804c2da20926befcee8f9d9e#file-table-html-L7 ?
[13:16:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:26:11] *** Quits: _ganapathi_ (~ganapathi@115.99.26.203) (Quit: Leaving.)
[13:39:12] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:43:42] *** Quits: pycode (~pycode@2001:b07:5d28:551:5cf2:fd60:4ab8:756b) (Ping timeout: 260 seconds)
[13:45:38] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[13:49:57] *** Quits: felixx (felixx@django/moderator/felixx) (Quit: ZNC - https://znc.in)
[13:49:57] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[13:50:39] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[13:50:39] *** ChanServ sets mode: +v apollo13
[13:51:01] *** Joins: felixx (felixx@django/moderator/felixx)
[13:51:01] *** ChanServ sets mode: +v felixx
[14:02:34] <rapha> okay, so there's these things called filters and you have to write your own filter for this
[14:02:37] <rapha> thx y'all!
[14:04:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[14:05:37] <serafeim> hello my friends. is there a way to export the data of a user in a json format for GDPR purposes ?
[14:06:12] *** Joins: fikran (~fikran@user/fikran)
[14:17:47] *** Quits: gitly (~gitly@185.69.144.172) (Ping timeout: 264 seconds)
[14:19:22] *** Joins: gitly (~gitly@85.255.235.214)
[14:23:16] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[14:27:55] <dodo> serafeim: sure.. just do it? write a serializer? use dumpdata?
[14:28:12] <serafeim> is tere a package ?
[14:28:48] <moldy> i don't think there is a package that solves this for all cases
[14:29:05] <moldy> the problem is that "data of a user" might mean different things
[14:29:17] <moldy> if you want only data from one table, dumpdata should do it
[14:33:05] *** Joins: pycode (~pycode@2001:b07:5d28:551:dd06:90cb:d8e6:4574)
[14:34:10] <apollo13> also GDPR is about more than exporting data
[14:34:18] <apollo13> you shouldn't export to much ;)
[14:35:47] <serafeim> so i'll need to do it by hand i guess... is there a good way to export data from django models to json ?
[14:35:50] <dodo> sure, but users have a right to get their data
[14:36:00] <serafeim> i.e suppose i'll have a list of queries
[14:36:04] <LordKalma> it's cool when you put up a cookie warning and the only cookie is to save whether you need to show the cookie warning
[14:36:18] <dodo> LordKalma: then you don't need a warning
[14:36:24] <LordKalma> yesl that was the joke
[14:36:44] <serafeim> and i want to return a json {"data_of_query1": [], "data_of_query2": []}... how to serialize the data properly ?
[14:36:55] <serafeim> to avoid seeing errors
[14:38:43] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[14:54:19] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[14:55:04] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[14:55:43] *** Joins: bcusor (~bcusor@176.88.129.216)
[14:55:49] <bcusor> hi all
[14:56:11] <bcusor> where can i get the information about latest async orm updates?
[15:08:20] <GinFuyou> What #django recomends to run several python interpretators? I know of pyenv and asdf so far
[15:09:06] <serafeim> GinFuyou: download, compile and make altinstall
[15:09:33] <serafeim> then run python310 -m venv venv310 and you're good to go
[15:10:02] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[15:12:33] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:14:04] <GinFuyou> But that would mean I need to manually track updates and rebuild it?
[15:17:23] <dodo> GinFuyou: why do you need multiple?
[15:17:42] <serafeim> GinFuyou: well yes
[15:17:53] <serafeim> but it's the best method that always works and has no cruft
[15:19:33] <dodo> fwiw, that was my original use case for docker. putting python scripts into containers that needed a specific python version. not interested in maintaining multiple installs locally..
[15:19:35] <GinFuyou> I've switched my home distro, now I have python way newer than my servers do. I don't think it's a great idea to have dev-prod environments different by 0.3
[15:19:43] <dodo> yup
[15:20:06] <serafeim> l o l
[15:20:23] <serafeim> and another l o l
[15:20:39] <serafeim> l o l for using docker for changing python envs. crazy work for such a simple thing
[15:20:57] <dodo> can't you contribute in a civil way?
[15:21:14] <serafeim> dodo: what's uncivil about laughing
[15:21:23] <dodo> calling what i did crazy
[15:21:31] <serafeim> dodo: i said crazy work
[15:21:35] <serafeim> = a lot of work
[15:21:38] <dodo> riiiiight
[15:21:51] <moldy> GinFuyou: pyenv or just compiling it yourself works fine IME
[15:21:53] <dodo> so you could just have said building a second local python install is less work than using docker
[15:22:14] <dodo> which is just, like, your opinion
[15:22:34] <serafeim> and l o l for the dev-prod difference by 0.3. my dev env has python 3.10 or something and my prod is stuck on 3.6.8 (because that's what centos 7 has on its repos and i won't touch this)
[15:22:36] <moldy> at least on linux, compiling python is pretty easy
[15:22:54] <dodo> yeah, and using docker is pretty easy
[15:22:58] * dodo shrugs
[15:23:42] <serafeim> dodo: using docker is easy if things work. i invite you to come work at our servers, having internal ips of 172.19.x.y
[15:23:44] <moldy> true. personally i just prefer to avoid the extra complexity when possible (volume mounts and so on).
[15:24:12] <serafeim> when you install docker on a server with that ip it doesn't have network because docker takes precendence
[15:24:12] <dodo> serafeim: sure, i can do that. where's the job ad?
[15:24:17] <serafeim> dodo: lol
[15:24:43] <serafeim> dodo: well it's only for greek people and it's not easy to get hired (i work at the greek coastguard)
[15:25:03] <dodo> heh
[15:25:57] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[15:26:20] <GinFuyou> Ok, thanks folks, I'll take all that into account
[15:26:35] <serafeim> however the fact remains that if you have an ip like the one i described docker doesn't work unless you have a phd in networking
[15:26:58] <dodo> well, this isn't a docker channel, so.. :)
[15:27:36] <serafeim> i'm just saying why docker isn't always e-z as you said
[15:27:48] <moldy> GinFuyou: also, poetry will automatically pick the right python version to create the virtualenv if you have pyenv's .python-version in the project
[15:28:04] <dodo> serafeim: i can make the same point about building python
[15:28:13] <dodo> serafeim: all tools have their pros and cons
[15:28:29] <serafeim> hm yes ok. it works fine in the server envs i use though (centos/debian)
[15:28:56] <GinFuyou> moldy, oh, that's nice. Was about to migrate a few pipenv projects to poetry
[15:29:06] *** Quits: bcusor (~bcusor@176.88.129.216) (Ping timeout: 256 seconds)
[15:31:10] *** Joins: bcusor (~bcusor@176.88.129.216)
[15:33:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:38:44] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:39:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[15:39:41] <theprophet> does validators work with django.models? Not Forms, i know they do for forms but what about models?
[15:40:36] <GinFuyou> https://docs.djangoproject.com/en/3.2/ref/validators/#writing-validators
[15:41:09] <theprophet> GinFuyou i am doing that, but it does not work, thats why i am asking.
[15:41:16] <theprophet> thats exactly where i am  at rn
[15:41:40] <GinFuyou> Well, it directly answers your question, and it's official documentation
[15:42:14] <theprophet> GinFuyou ive discovered lot of wrong information in django documentation. but thats not the case
[15:42:25] <GinFuyou> Really?
[15:42:36] <theprophet> yea
[15:43:33] <theprophet> GinFuyou i tried a lot of different validators for models CharField to block user from typing numbers instead of alphabet
[15:43:38] *** Quits: pycode (~pycode@2001:b07:5d28:551:dd06:90cb:d8e6:4574) (Ping timeout: 260 seconds)
[15:43:43] <theprophet> and its not doing for me, idk why tho. GinFuyou
[15:43:53] <moldy> theprophet: they do work. if they do not work for you, give us some details, then we can help.
[15:44:02] <GinFuyou> ^ that
[15:44:16] <theprophet> ok
[15:44:17] <moldy> show us your code, tell us how its behavior is different from what you expect
[15:45:15] <theprophet> well, first of all, i was offered a job, and the guy who is offering me a job asked me to do 1 thing, to make a ID CARD style registration form, with models.
[15:45:37] <theprophet> and then to show him all that in git respir and in web view
[15:45:42] <theprophet> and of course in admin panel
[15:46:07] <LordKalma> I've personally realized that Meta.constraints go a long way to avoid validators
[15:46:21] <moldy> LordKalma: you want validators in addition
[15:46:47] <theprophet> and now what i am trying to do is what ive already told you guys and this is what i am looking at right now
[15:47:07] <theprophet> class IDCArd(models.Model):
[15:47:08] <theprophet>     name = models.CharField(max_length=25)
[15:47:13] <LordKalma> moldy, can I ask why?
[15:47:33] <moldy> LordKalma: because otherwise, your code will throw an exception and the client will see a 500, which is usually not what you want
[15:47:38] <theprophet> and i want to write a validator for this, i tried many times, maybe i am making some mistake i am not seeing.
[15:47:52] <LordKalma> hahah yes, fair enough
[15:48:00] <GinFuyou> maybe, but we not seeing it as well, literally
[15:48:13] <theprophet> rn its just this GinFuyou class IDCArd(models.Model):
[15:48:14] <theprophet>     name = models.CharField(max_length=25)
[15:48:19] <LordKalma> moldy, I'm writing a "public-read-only" rest framework so it's fine
[15:48:25] <theprophet> nothing else
[15:48:28] <GinFuyou> dpaste.de please for code
[15:48:37] <moldy> theprophet: 1) how does your validator look? 2) how do you register the validator on the field? 3) are you calling full_clean()?
[15:48:43] <moldy> and yes, use dpaste.de please
[15:49:06] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[15:49:46] <theprophet> i dont have anything rn, i erased all the validators code, so in the models.py thats only code i got .  from django.db import models
[15:49:46] <theprophet> class IDCard(models.Model):
[15:49:47] <theprophet>     name = models.CharField(max_length=25)
[15:49:47] <theprophet> def __str__(self):
[15:49:48] <theprophet>         return self.name
[15:50:08] <theprophet> i dont have anything to paste in bpast
[15:50:29] <theprophet> what i wrote earlied did not worked and i actually erased it
[15:50:30] <GinFuyou> Well, then we don't have anything to help with =\
[15:51:12] <GinFuyou> We are glad to help, but usually not to write code for you, at least not for free
[15:51:13] <moldy> theprophet: so write the validator, register it on the field, then validate the model. it's all in the docs GinFuyou linked :)
[15:51:42] <theprophet> ok
[15:51:46] <moldy> oh actually, you'll want these docs as well: https://docs.djangoproject.com/en/3.2/ref/models/instances/#validating-objects
[15:52:10] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[15:52:11] <theprophet> i am looking at it rn,
[15:52:22] <LordKalma> django docs are usually pretty good once you know what you want
[15:52:34] <LordKalma> it's a heavy framework, sometimes it's hard to discover I actually want something
[15:52:49] <LordKalma> but once I do, docs are pretty good
[15:53:16] <GinFuyou> Yeah, try it, ask when you don't understand conrete part, show when some code doesn't work as you expect
[15:53:33] <theprophet> ok
[15:53:43] <LordKalma> my questions are usually in the lines of "what are the features offered to do X?"
[15:53:52] <LordKalma> because I'm discovering django still
[15:53:56] <LordKalma> and webdev in general
[15:54:15] *** Joins: timkofu (~timkofu@user/timkofu)
[15:54:19] <timkofu> Hi
[15:55:36] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Client Quit)
[15:55:37] *** Joins: Grauwolf_ (~grauwolf@user/grauwolf)
[15:55:42] *** Joins: Elodin (~weechat@user/elodin)
[15:56:05] *** Quits: Grauwolf (~grauwolf@user/grauwolf) (Ping timeout: 265 seconds)
[15:59:38] *** Joins: thiras (~thiras@user/thiras)
[16:05:21] *** Joins: imakestuff (~imakestuf@197.156.77.161)
[16:05:57] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[16:06:33] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[16:11:01] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[16:13:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:15:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:15:33] *** Joins: fikran (~fikran@user/fikran)
[16:16:58] *** Quits: bcusor (~bcusor@176.88.129.216) (Quit: Client closed)
[16:32:29] <theprophet> so now i am trying regexvalidator and i want only letters , how do i change this part so only letters remain? --->  [0-9a-zA-Z]
[16:32:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[16:32:32] <theprophet> GinFuyou
[16:32:51] <GinFuyou> [a-zA-Z]
[16:33:12] <theprophet> ok let me try this
[16:33:15] <GinFuyou> very helpful for regex making: https://regex101.com/
[16:33:50] <theprophet> its still takes numbers :(
[16:35:16] <theprophet> oohhhhhhhhhh
[16:35:17] <theprophet> ohhhhhhhhhhhh
[16:35:23] <theprophet> i had to migrate
[16:35:25] <theprophet> now it worksss
[16:35:32] <theprophet> GinFuyou thank youuuuu
[16:36:04] <theprophet> yayyyyyyyyyyyy
[16:36:09] <theprophet> so happy
[16:43:39] *** Quits: Grauwolf_ (~grauwolf@user/grauwolf) (Quit: WeeChat 3.3)
[16:43:47] *** Joins: Grauwolf (~grauwolf@user/grauwolf)
[16:48:57] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 256 seconds)
[16:50:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[16:55:30] *** Joins: gitly (~gitly@85.255.235.214)
[16:56:11] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 264 seconds)
[16:59:00] <theprophet> GinFuyou my hero
[17:00:18] *** Joins: anddam (~anddam@user/anddam)
[17:00:41] <wez> I Like Gin too
[17:00:56] <wez> with a bit of tonic and a wedge of lime
[17:01:29] *** Quits: jess (~jess@libera/staff/jess) ()
[17:03:07] <theprophet> wez lol
[17:04:59] <wez> and I have used that regex site before, it is semi useful, it doesn't highlight the importants of ^ and $ to n00bz
[17:05:58] <theprophet> wez  i dont get it. what you mean highlight? higlight where?
[17:06:28] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[17:06:59] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:07:37] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[17:08:01] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[17:09:59] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 264 seconds)
[17:10:49] *** Joins: gitly (~gitly@85.255.235.214)
[17:18:42] *** Joins: kostkon_ (~kostkon@athedsl-393765.home.otenet.gr)
[17:18:59] *** Quits: kostkon (~kostkon@athedsl-394022.home.otenet.gr) (Ping timeout: 256 seconds)
[17:25:19] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[17:33:44] *** Joins: Trieste_ (T@user/pilgrim)
[17:34:36] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:35:05] *** Joins: pro_z (~pro_z@37.214.44.138)
[17:41:30] *** Joins: dkliban (~dkliban@nat-pool-rdu-t.redhat.com)
[17:43:03] <dkliban> I have a unit test that is using the settings() context manager to change one of the settings. However, the setting is not being changed. The exact same code worked with django 2.2, but is not working with django 3.2
[17:43:38] *** Joins: anddam (~anddam@user/anddam)
[17:46:56] <dodo> dkliban: how do you know the setting is not changed?
[17:49:48] <dkliban> dodo: i set a breakpoint in the method where the setting is being used and i see that the value is not right
[17:53:48] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[18:03:20] *** Joins: pycode (~pycode@2001:b07:5d28:551:83c:4fe5:63:ce71)
[18:03:48] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[18:22:42] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 268 seconds)
[18:23:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:24:54] *** Joins: fikran (~fikran@user/fikran)
[18:31:49] *** Joins: gitly (~gitly@148.252.133.191)
[18:34:45] *** Joins: anddam (~anddam@user/anddam)
[18:42:48] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:45:37] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[18:45:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:53:32] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[18:58:36] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[19:00:10] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[19:17:51] *** Quits: dkliban (~dkliban@nat-pool-rdu-t.redhat.com) (Quit: WeeChat 1.6)
[19:20:28] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[19:22:30] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[19:28:36] *** Joins: anddam (~anddam@user/anddam)
[19:29:13] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[19:31:15] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:33:54] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[19:34:38] *** Quits: pycode (~pycode@2001:b07:5d28:551:83c:4fe5:63:ce71) (Ping timeout: 260 seconds)
[19:34:51] *** Quits: gitly (~gitly@148.252.133.191) (Ping timeout: 268 seconds)
[19:36:21] *** Joins: gitly (~gitly@148.252.129.91)
[19:37:01] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[19:39:36] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:42:12] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[19:42:28] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[19:43:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:44:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:45:08] *** Joins: JordiGH (~jordi@user/jordigh)
[19:45:16] <JordiGH> Is 2.2 -> 3.0 a bigger change than 3.0 -> 3.1?
[19:48:15] <LordKalma> I sure hope so :D
[19:48:44] <VaniaPy> i dropped the db and i can't apply new migrations now
[19:48:51] <VaniaPy> should i use syncdb?
[19:49:23] <LordKalma> if you deleted the db, you should be able to just manage.py migrate...
[19:49:43] *** Quits: gitly (~gitly@148.252.129.91) (Ping timeout: 256 seconds)
[19:49:45] <LordKalma> unless you have missing migration files... in that case you could delete all migrations and re-makemigrations...
[19:50:17] *** Joins: stdout (~stdout@216.163.21.11)
[19:50:32] <VaniaPy> i deleted the migrations file as well
[19:50:50] <LordKalma> good. then just python manage.py makemigrations; python manage.py migrate
[19:51:51] *** Joins: gitly (~gitly@85.255.236.179)
[19:52:23] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[19:53:41] <VaniaPy> still doesn;t apply :(
[19:54:01] <LordKalma> well, you'll need to give us a paste of the errors
[19:55:00] <VaniaPy> django.db.utils.OperationalError: no such table: circularity_circularityinflow
[19:59:18] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:01:22] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 268 seconds)
[20:04:49] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[20:15:22] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:16:11] *** Quits: imakestuff (~imakestuf@197.156.77.161) (Remote host closed the connection)
[20:19:49] *** Joins: jjhoo (~jahakala@user/jjhoo)
[20:23:18] *** Joins: mrwick (~mrwick@user/mrwick)
[20:23:47] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[20:31:57] *** Joins: rje (~rje@65.141.156.170)
[20:32:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[20:32:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:34:15] *** Joins: fikran (~fikran@user/fikran)
[20:36:25] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[20:39:58] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:04] *** Joins: DanF (~DanF@user/danf)
[20:42:18] *** Quits: gitly (~gitly@85.255.236.179) (Ping timeout: 260 seconds)
[20:43:11] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:44:49] *** Joins: gitly (~gitly@85.255.235.207)
[20:45:53] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[20:51:34] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:03:34] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:07:05] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:11:19] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[21:13:51] *** Quits: VaniaPy (~VaniaPy@46.12.16.19.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:24:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[21:34:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:35:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:36:43] *** Joins: anddam (~anddam@user/anddam)
[21:37:06] *** Joins: djapo (~archangel@user/djapo)
[21:43:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:54:42] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[22:14:59] *** Quits: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br) (Quit: Leaving)
[22:15:17] *** kostkon_ is now known as kostkon
[22:18:16] *** Joins: fikran (~fikran@user/fikran)
[22:21:22] *** Joins: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br)
[22:27:12] *** Joins: lucas_ (~lucascast@177-185-128-123.static.isotelco.net.br)
[22:29:14] *** Quits: lucascastro (~lucascast@177-185-128-123.static.isotelco.net.br) (Ping timeout: 260 seconds)
[22:36:14] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:39:55] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:00] *** Joins: flynn0 (~mcbloch@user/flynn)
[22:52:11] *** Quits: KramerC (kramer@user/kramerc) (Ping timeout: 245 seconds)
[22:53:26] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 245 seconds)
[22:53:26] *** flynn0 is now known as flynn
[22:55:00] *** Joins: KramerC (~kramer@user/kramerc)
[22:59:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:03:23] *** Quits: pro_z (~pro_z@37.214.44.138) (Ping timeout: 264 seconds)
[23:03:53] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[23:30:24] *** Joins: djapo (~archangel@user/djapo)
[23:32:35] <segfaultbanana> hey all - if i wanted to bulk update a model using a specific database, would it just be as if i were selecting on a queryset using a specific db? eg: Model.objects.using(db_alias).bulk_update(...)
[23:33:10] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[23:33:34] *** Joins: flynn (~mcbloch@user/flynn)
[23:33:36] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[23:33:53] *** Joins: zkanda (~zkanda@159.69.159.85)
[23:34:59] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:37:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[23:38:13] *** Joins: Batzy (~Batzy@user/batzy)
[23:39:41] <Batzy> Hi all, I have a django project deployed on docker and I wanted to make sort of an init-script to create some database records (like for superuser, and other rows in various tables I have). What's the best way to do this? I've looked at django commands, and i've made separate commands already but 1. I had some problems before with making an overall command which calls the other commands and 2. I'd like it to be autorun on a build or something.
[23:40:11] *** Joins: frat3rius4 (~frat3rius@host-85.14.84.172.static.3s.pl)
[23:40:31] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Ping timeout: 245 seconds)
[23:40:31] *** frat3rius4 is now known as frat3rius
[23:43:06] <dodo> Batzy: not sure about best, but i just use a command
[23:43:24] <dodo> actually, a small shell script that calls multiple commands
[23:44:27] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[23:45:17] <Batzy> do you manually run it?
[23:45:29] <GinFuyou> Batzy, creating database records is recommended through data migrations
[23:46:14] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Ping timeout: 260 seconds)
[23:46:14] <dodo> GinFuyou: depends on the data really
[23:46:29] <Batzy> I supposed i could write my own migration file
[23:47:37] <GinFuyou> that's how you usually create data migration
[23:47:48] <dodo> i have commands that create data, because i don't want all data all the time, and because i find it easier to manage than a migration
[23:48:36] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[23:48:43] *** Joins: lucas__ (~lucascast@177-185-133-154.dynamic.isotelco.net.br)
[23:48:56] *** Quits: lucas_ (~lucascast@177-185-128-123.static.isotelco.net.br) (Read error: Connection reset by peer)
[23:49:33] *** Joins: djapo (~archangel@user/djapo)
[23:50:16] *** Joins: Natureshadow (~nikmatrix@2001:470:69fc:105::1f6b)
[23:50:16] <Natureshadow> Hi! I can't wrap my head around a case of logging configuration. I want to add a filter to the mail_admin handler.
[23:50:21] <Natureshadow> Just add one custom filter, no more, no less.
[23:50:39] <Natureshadow> How would I amend the `LOGGING` setting to do this, without redefining the entire handler?
[23:51:19] <dodo> Natureshadow: it's just python? the logging conf is just data
[23:51:53] <dodo> Natureshadow: i have a function i can call to change it
[23:53:58] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[23:54:07] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Client closed)
[23:54:37] <FunkyBob> python logging supports pluggable filters in ingress and egress... so adding another should be configuring it in
[23:57:13] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
