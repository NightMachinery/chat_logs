[00:01:03] <OliverMT> iirc order by doesnt survive through a preload
[00:01:10] <OliverMT> you'd have to join and select in one query
[00:01:22] <OliverMT> or does a preload now join and select? 
[00:01:35] <OliverMT> I thought a preload even in a from() still ended up in two roundtrips
[00:01:51] *** Joins: notzmv (~zmv@user/notzmv)
[00:03:37] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[00:07:55] <trafficjam> ah ok, yeah not quite sure
[00:09:32] <josevalim> you can pass a query to preload too
[00:09:56] <josevalim> from p in post, preload: [comments: ^from(c in Comment, order_by: :date)]
[00:10:09] <OliverMT> that results in two trips right?
[00:10:27] <OliverMT> or is the Repo.all() mapper smart enough to untangle that from one query now
[00:13:36] <trafficjam> oh nice didn't know that, works well
[00:13:59] <trafficjam> yeah i'd be interested to know how many requests are made when you pass a query to preload too
[00:14:28] <trafficjam> OliverMT: if not, do you think it's worth optimizing to do it in a single query?
[00:15:21] <OliverMT> if you discover this is a bottleneck, then its time to consider that question ;)
[00:15:38] <OliverMT> a regular Repo.preload(foo, [...]) is one round trip per relation
[00:16:06] <OliverMT> but normally that doesnt matter, I use preloads in the CUD operations normally, because you want readability and ease of use and those roundtrips normally don't matter much
[00:16:45] <trafficjam> yeah ok makes sense, i tend to have the bad habit of wanting to prematurely optimize every when shipping is far more important lol
[00:16:54] <trafficjam> *everthing
[00:26:26] <Zevv> hey all; is there a good way to have an anonymous function refer to itself to allow recursion?
[00:26:44] <Zevv> without going all the way y-combinator
[00:27:52] <OliverMT> if your code is suddenly hosting hacker news, you've gone too deep
[00:28:38] <OliverMT> why not just put the function in a variable and pass itself down the tree?
[00:28:40] <trafficjam> any reason not to use module methods vs lambdas?
[00:29:05] <Zevv> I'm generating code from a macro
[00:29:07] <OliverMT> foo = fn foo, baz, bar -> ... foo.(foo, ...)  end
[00:29:30] <OliverMT> eh, first foo should be your_func
[00:29:38] <OliverMT> you get the ide :p
[00:29:39] <OliverMT> *iea
[00:29:41] <OliverMT> IDEA
[00:29:43] <trafficjam> lol
[00:29:44] <Zevv> OliverMT: right, that's what I do now
[00:30:01] <OliverMT> is that y-combinator?
[00:30:08] <OliverMT> I thought that was just the name of the fund
[00:30:13] <Zevv> that's minimal manual y-combinator
[00:30:16] <OliverMT> in hindsight it probably means something
[00:30:24] <Zevv> y combinator wraps that in a magic thingy that does that for you, bascially
[00:30:30] <trafficjam> OliverMT: it's a comp sci term
[00:30:38] <OliverMT> I have a comp sci degree
[00:30:39] <OliverMT> :D
[00:30:43] <trafficjam> that's what the investment firm is named after
[00:30:51] <OliverMT> I just didnt like calculus
[00:31:00] <trafficjam> it's a calculus term lol
[00:31:04] <OliverMT> got a passing grade, then moved on to financial statistics where it was all discrete math
[00:31:44] *** Quits: mahmutov (~mahmutov@5.176.51.91) (Ping timeout: 256 seconds)
[00:32:45] *** Joins: mahmutov (~mahmutov@5.176.0.19)
[00:32:57] <Zevv> Anyway, ill stick to passing the func itself then, thanks
[00:34:04] <Zevv> i've started the journey of re-implementing my PEG parser generator in elixir, https://github.com/zevv/npeg
[00:38:50] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[00:40:55] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[00:41:30] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[00:42:26] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[00:47:45] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[00:48:07] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[01:10:33] <trafficjam> what's the rule about using ! ("def my_function!(...)") inside contexts?
[01:10:44] <trafficjam> like what is it meant to signify?
[01:19:53] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[01:24:23] <josevalim> ! means that it will raise an error on invalid input
[01:24:35] <josevalim> where invalid means not according to the rules of the function
[01:24:46] <josevalim> for example,  `Repo.get!(id)` raises if the id does not exist
[01:24:52] <josevalim> without `!` it simply returns nil
[01:25:40] <trafficjam> ah great, thanks jose
[01:27:16] *** Quits: harrow (~harrow@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[01:36:37] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[01:49:50] *** Joins: ur5us (~ur5us@203.86.198.200)
[01:51:44] *** Quits: mahmutov (~mahmutov@5.176.0.19) (Ping timeout: 268 seconds)
[01:56:23] *** Joins: harrow (~harrow@static.38.6.217.95.clients.your-server.de)
[02:15:22] *** Joins: livoreno (~livoreno@user/notzmv)
[02:31:52] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[02:37:44] *** Joins: livoreno (~livoreno@user/notzmv)
[02:52:05] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:58:36] *** Quits: ur5us (~ur5us@203.86.198.200) (Remote host closed the connection)
[02:58:50] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[03:02:52] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[03:05:17] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[03:24:37] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[03:54:08] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:03:49] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:1941:a480:a6d8:8bc5)
[04:44:31] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[04:45:48] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[04:55:01] *** Joins: livoreno (~livoreno@user/notzmv)
[05:06:22] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:1941:a480:a6d8:8bc5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:55:15] *** Quits: trafficjam (~trafficja@2a03:1b20:a:f011::a04e) (Ping timeout: 256 seconds)
[06:58:57] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[07:30:05] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[08:17:09] *** Joins: rock (~rock@45.130.83.115)
[08:17:23] *** rock is now known as Guest4906
[08:47:17] *** Quits: Guest4906 (~rock@45.130.83.115) (Ping timeout: 240 seconds)
[08:57:10] *** Joins: marperia (~marperia@176.59.129.201)
[09:05:00] *** Quits: marperia (~marperia@176.59.129.201) (Quit: Client closed)
[09:06:20] *** Quits: Tongir (~tangmang@159.196.132.214) (Remote host closed the connection)
[09:06:38] *** Joins: Tongir (~tangmang@159.196.132.214)
[09:56:47] *** Quits: Tongir (~tangmang@159.196.132.214) (Read error: Connection reset by peer)
[09:58:37] *** Joins: Tanger (~tangmang@159.196.132.214)
[09:59:01] *** Tanger is now known as Guest8207
[10:26:45] *** Joins: phaleth (~phaleth@user/phaleth)
[10:37:47] *** Joins: mahmutov (~mahmutov@5.176.0.19)
[11:53:48] *** Quits: Guest8207 (~tangmang@159.196.132.214) (Read error: Connection reset by peer)
[11:55:28] *** Joins: Tanger (~tangmang@159.196.132.214)
[11:55:52] *** Tanger is now known as Guest7858
[12:08:24] *** Quits: mahmutov (~mahmutov@5.176.0.19) (Ping timeout: 268 seconds)
[13:00:26] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[14:01:34] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:05:37] *** Quits: mahmutov (~mahmutov@37.155.25.5) (Ping timeout: 240 seconds)
[14:41:16] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[14:41:38] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[14:46:39] *** Joins: royo (~royo@user/royo)
[14:46:57] *** Parts: royo (~royo@user/royo) ()
[15:03:44] *** Joins: royo (~royo@user/royo)
[15:04:20] *** Parts: royo (~royo@user/royo) ()
[15:26:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[15:48:05] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[15:52:59] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Quit: Leaving)
[15:54:35] *** Joins: royo (~royo@user/royo)
[16:01:04] *** Joins: tofran (~tofran@37.189.158.134)
[16:27:00] *** Parts: royo (~royo@user/royo) ()
[16:43:30] *** Joins: TakinOver (~quassel@193.27.13.251)
[16:46:09] *** Joins: notapenguin (~ryu@179.222.242.20)
[16:53:46] *** Quits: mahmutov (~mahmutov@37.155.25.5) (Ping timeout: 256 seconds)
[17:22:09] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[17:22:22] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Client Quit)
[17:22:38] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[17:37:37] *** Joins: notzmv (~zmv@user/notzmv)
[18:00:32] *** Joins: trafficjam (~trafficja@2a03:1b20:a:f011::a03e)
[18:01:37] <trafficjam> hey guys, if i want to track the number of views a certain (product) page has, is the best way of doing this just adding an :integer field to my Product schema and incrementing it every time that Product is queried?
[18:02:56] <Nicd> some might use web analytics for it that can count unique visits more accurately
[18:03:12] <Nicd> but that works too, I'd use bigint
[18:06:10] <trafficjam> Nicd: I should say that this would be for a seller's own analytics, i.e. they can see which of their products are viewed the most often. Is something like Clickhouse normally used for this, like could i integrate it into my phoenix app?
[18:06:48] <Nicd> I don't know anything about clickhouse
[18:08:35] <trafficjam> fair enough, thanks Nicd
[18:45:33] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:45:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[18:54:17] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[19:15:17] *** Joins: mahmutov (~mahmutov@37.155.25.5)
[19:21:49] *** Joins: Guest4906 (~rock@45.130.83.91)
[19:49:51] *** Quits: notapenguin (~ryu@179.222.242.20) (Quit: WeeChat 3.3)
[20:02:29] *** Joins: mexen (uid495612@user/mexen)
[20:07:17] *** Quits: Guest4906 (~rock@45.130.83.91) (Ping timeout: 240 seconds)
[20:41:43] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:42:53] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[20:44:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:45:56] <koollman> trafficjam: clickhouse is sometimes used for this, or just log analysis
[20:52:02] *** Joins: Guest4906 (~rock@45.130.83.69)
[21:09:10] *** Quits: Guest4906 (~rock@45.130.83.69) (Ping timeout: 260 seconds)
[21:52:02] <hmans> What is a good pattern for preventing certain supervised processes in a Phoenix app from starting when running a `mix` task? I have a few GenServers that I don't need/want to run when running mix tasks.
[21:57:44] <trafficjam> koollman: good to know, thanks
[21:58:11] <trafficjam> is there a way print out all parameters that a function is passed?
[22:06:13] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[22:06:54] *** Joins: trafficjam6 (~trafficja@2a03:1b20:a:f011::a03e)
[22:07:56] <trafficjam6> what is the `update_post` equivalent for this absinthe mutation? https://hexdocs.pm/absinthe/mutations.html
[22:09:59] *** Joins: wolfshappen (~waff@irc.furworks.de)
[22:15:21] *** Joins: flynn (~mcbloch@user/flynn)
[22:25:04] *** Joins: Guest4906 (~rock@216.73.160.5)
[22:25:43] *** Quits: Guest4906 (~rock@216.73.160.5) (Client Quit)
[22:37:41] *** Joins: trafficjam19 (~trafficja@2001:ac8:28:89::a11e)
[22:39:19] *** Quits: trafficjam6 (~trafficja@2a03:1b20:a:f011::a03e) (Ping timeout: 256 seconds)
[22:39:53] *** Quits: trafficjam (~trafficja@2a03:1b20:a:f011::a03e) (Ping timeout: 256 seconds)
[22:46:13] <trafficjam19> sorry got disconnected
[23:15:30] *** Joins: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[23:27:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[23:30:03] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:39:07] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:44:33] *** Joins: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net)
[23:58:12] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
