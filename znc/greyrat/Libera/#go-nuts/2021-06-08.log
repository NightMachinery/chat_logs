[00:00:23] *** Quits: phoenixh (~phoenixh@p200300dd6f1ad800baf34c46794b1c60.dip0.t-ipconnect.de) (Quit: Leaving)
[00:00:29] *** Quits: egy (~egy@105.196.226.66) (Ping timeout: 245 seconds)
[00:00:34] *** Quits: Guest6352 (~Guest63@bras-base-orlnon0604w-grc-15-65-92-198-188.dsl.bell.ca) (Quit: Client closed)
[00:00:49] *** Quits: lompik (~lompik@user/lompik) (Quit: WeeChat 3.1)
[00:01:12] *** Quits: dmathieu (~textual@2a01:e34:ecbd:4370:5817:fff3:a586:2b5a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:03:27] *** Joins: andlabs (~andlabs@172.58.227.50)
[00:03:34] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Quit: WeeChat 2.8)
[00:03:49] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f)
[00:04:35] *** Joins: andlabs_ (~andlabs@2607:fb90:f807:fd5:3473:20d:618f:9d01)
[00:04:36] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[00:04:42] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[00:05:29] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 245 seconds)
[00:06:22] *** Joins: Garb0 (~Garb0@user/garb0)
[00:06:48] *** Joins: andlabs__ (~andlabs@172.58.230.225)
[00:07:34] *** Quits: andlabs (~andlabs@172.58.227.50) (Ping timeout: 245 seconds)
[00:09:27] *** Joins: Guest9 (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[00:09:56] *** Joins: andlabs (~andlabs@2607:fb90:f80b:a5c3:70f6:5d78:74e4:57e7)
[00:10:04] *** Quits: andlabs_ (~andlabs@2607:fb90:f807:fd5:3473:20d:618f:9d01) (Ping timeout: 245 seconds)
[00:12:59] *** Quits: andlabs__ (~andlabs@172.58.230.225) (Ping timeout: 245 seconds)
[00:13:27] *** Joins: andlabs_ (~andlabs@172.58.227.177)
[00:14:10] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[00:15:22] *** Joins: andlabs__ (~andlabs@2607:fb90:f80f:4182:18c2:65d6:c35a:5850)
[00:15:54] *** Quits: andlabs (~andlabs@2607:fb90:f80b:a5c3:70f6:5d78:74e4:57e7) (Ping timeout: 245 seconds)
[00:15:55] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 264 seconds)
[00:17:29] *** Quits: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:17:36] *** Joins: andlabs (~andlabs@172.58.230.144)
[00:18:45] *** Quits: andlabs_ (~andlabs@172.58.227.177) (Ping timeout: 252 seconds)
[00:18:48] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f)
[00:19:05] *** Quits: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f) (Client Quit)
[00:19:45] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f)
[00:19:52] *** Quits: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f) (Client Quit)
[00:20:29] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f)
[00:20:40] *** Quits: klltkr (~klltkr@2a00:23c5:d198:ad01:3462:c081:cbb4:108f) (Client Quit)
[00:20:54] *** Quits: andlabs__ (~andlabs@2607:fb90:f80f:4182:18c2:65d6:c35a:5850) (Ping timeout: 245 seconds)
[00:22:24] *** Joins: egy (~egy@105.196.226.66)
[00:24:04] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[00:24:54] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 272 seconds)
[00:25:54] *** Joins: andlabs_ (~andlabs@2607:fb90:f80f:d730:5df5:f83c:d10e:a620)
[00:27:26] *** Quits: SJrXX (~sjr@64.16.12.226) (Ping timeout: 272 seconds)
[00:27:58] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[00:27:58] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: Bridge terminating on SIGTERM)
[00:27:58] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Quit: Bridge terminating on SIGTERM)
[00:28:45] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[00:29:12] *** Quits: andlabs (~andlabs@172.58.230.144) (Ping timeout: 252 seconds)
[00:29:42] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[00:29:42] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[00:29:42] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[00:29:42] *** Joins: jai (~darkapex@user/darkapex)
[00:29:42] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[00:29:42] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[00:29:42] *** Joins: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b)
[00:29:42] *** Joins: kadoban (~kadoban@user/kadoban)
[00:29:56] *** Joins: speatzle_ (~speatzles@2001:470:69fc:105::1003)
[00:30:04] *** Quits: andlabs_ (~andlabs@2607:fb90:f80f:d730:5df5:f83c:d10e:a620) (Ping timeout: 245 seconds)
[00:31:11] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d)
[00:33:08] *** Joins: Torr (~Torr@170.83.145.98)
[00:33:17] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:35:55] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d) (Ping timeout: 272 seconds)
[00:40:06] *** Quits: avillagra (~avillagra@host236.190-105-219.sitsanetworks.net) (Ping timeout: 272 seconds)
[00:41:56] *** Joins: hexfive (~eric@50.35.83.177)
[00:42:03] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[00:48:50] *** Joins: jolof (~jolof@user/jolof)
[00:50:14] *** Quits: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980) (Ping timeout: 272 seconds)
[00:50:44] *** Joins: fputs (~fputs@67.59.83.166)
[00:52:05] *** Quits: Kane (~Kane@home.yarg.fr) (Quit: Leaving)
[00:55:41] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d)
[01:07:06] *** Joins: andlabs (~andlabs@68.237.68.71)
[01:07:51] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Quit: WeeChat 2.8)
[01:09:01] *** Joins: pepee (~user@user/pepee)
[01:09:09] *** Quits: andlabs (~andlabs@68.237.68.71) (Client Quit)
[01:10:07] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:10:38] *** Joins: andlabs (~andlabs@68.237.68.71)
[01:12:51] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.1)
[01:17:29] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:19:49] *** Joins: andlabs (~andlabs@68.237.68.71)
[01:23:30] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[01:25:19] *** Joins: fputs (~fputs@67.59.83.166)
[01:30:04] *** Quits: icholy (~icholy@68.71.18.45) (Quit: Lost terminal)
[01:31:44] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 245 seconds)
[01:33:35] <src> if I have a [9][9]array, I was wondering how to create a pointer to point to a substructure of said array, like if I divide the [9][9] into [3][3] little arrays, create a pointer to one of those [3][3] to range over it
[01:33:54] <src> not sure how to do that
[01:37:25] <KirkMcDonald> You could do this with slices.
[01:38:39] *** Joins: Rayke (rayke@user/rayke)
[01:40:21] *** Quits: dove (~jordan@li1158-85.members.linode.com) (Quit: bye o/)
[01:40:55] <b0nn> src: sudoku solver?
[01:41:45] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[01:43:41] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:55:41] *** Joins: welt[m] (~weltspide@2001:470:69fc:105::15e2)
[01:55:49] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:57:16] *** Joins: andlabs (~andlabs@68.237.68.71)
[01:57:46] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d) (Ping timeout: 244 seconds)
[01:58:16] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.1)
[02:05:36] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d)
[02:09:45] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Quit: WeeChat 3.0.1)
[02:12:03] *** Joins: dove (~jordan@li1158-85.members.linode.com)
[02:15:39] <src> src: yes pretty much
[02:15:51] <noord> src: indexing solves the problem
[02:16:20] <noord> let f is the matrix
[02:17:44] <src> b0nn: that was meant for you, yes pretty much
[02:18:25] <noord> for i in 3: for j in 3: f[ row * 3 + i][ col * 3 + j]
[02:20:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 245 seconds)
[02:20:38] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[02:20:57] <b0nn> src: I normally end up naming each point and then collecting those points into boxes, rows, and cols
[02:21:01] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 244 seconds)
[02:21:41] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[02:23:09] <b0nn> because it gets hairy trying to remember that boxe = rows 3-5, and cols 3-5 but box i is rows 6-8, cols 6-8
[02:24:16] <src> b0nn: exactly, but how do you mean "naming each point" and collecting those into boxes?
[02:24:36] <src> in what data structure to you store the box values? are they just separate [3][3] arrays?
[02:24:50] <src> s/to/do
[02:25:10] <b0nn> you don't /have/ to keep the boxes as [][]int - they can be []int
[02:25:33] <src> I see, you're right
[02:27:03] *** Joins: aerona (~aerona@2600:6c54:4600:f300:90f0:5e8d:1f86:bfa1)
[02:27:15] <b0nn> For sudoku I normally have [9][9]struct{[]int} because they can start out as 9 possible vals, but end at 1
[02:27:54] <b0nn> I mean, the unsolved points can have up to 9 possible vals
[02:29:16] <b0nn> hmm, actually, a map[int}struct{} or a map[]int]bool is better
[02:29:38] <b0nn> easier to delete, and faster to check
[02:31:26] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (Quit: Bridge terminating on SIGTERM)
[02:32:16] *** Joins: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980)
[02:33:32] <src> b0nn: noord: KirkMcDonald: thanks, I think I have enough to do this
[02:33:33] <src> will be fun
[02:34:36] *** Joins: meinside (uid24933@id-24933.brockwell.irccloud.com)
[02:40:07] *** Joins: keiser009 (~keiser@83.25.214.136.ipv4.supernova.orange.pl)
[02:40:20] *** ruel is now known as lvlinux
[02:41:45] *** Quits: keiser00 (~keiser@83.25.214.136.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[02:54:00] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[02:59:21] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[03:05:45] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[03:25:32] *** Quits: aigoo (~aigoo@user/aigoo) (Quit: leaving)
[03:28:00] *** Joins: aigoo (~aigoo@user/aigoo)
[03:28:27] <b0nn> https://codeperfect95.com/ 144 FPS!
[03:28:41] * b0nn could never code with an editor running at less than 90FPS
[03:28:54] <b0nn> </sarcasm>
[03:29:43] *** Quits: egy (~egy@105.196.226.66) (Ping timeout: 264 seconds)
[03:30:57] *** Joins: Crassus (~Crassus@user/crassus)
[03:38:42] <noord> b0nn: Alan Pope: `I am in 6 slack channels. 1.5GB RAM consumed by the desktop app. In 100+ IRC channels. 25MB consumed by irssi. The future is rubbish.`
[03:41:00] <b0nn> I mean, I'm in camp "I'm sick of installing a zillion apps when I have the browser" but - the CLI stuff is still head and shoulders above the web versions
[03:41:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[03:43:13] <noord> b0nn: I am in camp, 2 monitors + onboard gpu, it shouldn't struggle to load web page
[03:43:34] <noord> 5MB+ js is not funny
[03:44:41] <b0nn> You're not wrong
[03:47:50] *** Joins: smitop2 (uid328768@id-328768.tinside.irccloud.com)
[04:00:40] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:16:23] <src> honestly I think vscode is decent on any modern system, hell even on an almost 10 year old thinkpad it took a few seconds on first startup and otherwise was fast
[04:17:13] <src> used sublime text as well for a while, it's more performant has nice extensions as well (athough not quite as easy to set everything up as vscode is)
[04:27:20] *** Joins: Guest75 (~Guest75@adsl-72-50-4-188.prtc.net)
[04:27:27] *** Quits: Guest75 (~Guest75@adsl-72-50-4-188.prtc.net) (Client Quit)
[04:28:00] *** Joins: minare_window (~minare_wi@adsl-72-50-4-120.prtc.net)
[04:32:05] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[04:32:18] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[04:40:48] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Ping timeout: 258 seconds)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:41] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:52:41] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[04:53:22] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:00:57] *** Joins: krthnz (~quassel@dslb-188-097-015-215.188.097.pools.vodafone-ip.de)
[05:07:57] *** Quits: minare_window (~minare_wi@adsl-72-50-4-120.prtc.net) (Quit: Client closed)
[05:08:05] *** Quits: gildarts (16abab341f@user/gildarts) (Remote host closed the connection)
[05:08:14] *** Joins: gildarts (16abab341f@user/gildarts)
[05:45:47] *** Joins: andlabs (~andlabs@68.237.68.71)
[05:53:29] *** Joins: c1anuro (~c1anuro@173.170.150.133)
[05:57:29] *** Quits: smitop2 (uid328768@id-328768.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:08:00] *** Joins: frickenate (~frickenat@user/frickenate)
[06:10:45] *** Quits: frickenate (~frickenat@user/frickenate) (Client Quit)
[06:12:56] *** jlindgren is now known as phytyca
[06:13:17] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:15fb:174a:8762:852d) (Ping timeout: 272 seconds)
[06:13:42] *** phytyca is now known as jlindgren
[06:18:33] *** Quits: Valentine (~valentine@hackerspacesg/valentine) (Quit: Addio, adieu, adios, aloha, arrivederci, auf Wiedersehen, au revoir, bye, bye-bye, cheerio, cheers, farewell, good-by, good-bye, goodbye, good day, sayonara, shalom, so long.)
[06:26:42] *** Quits: KekSi (~KekSi@x4db6301d.dyn.telefonica.de) (Ping timeout: 252 seconds)
[06:30:47] *** Joins: KekSi (~KekSi@x4dbe500d.dyn.telefonica.de)
[06:48:35] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:50:29] *** Joins: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net)
[06:55:06] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[06:59:28] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[06:59:49] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[07:02:39] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[07:03:14] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[07:04:55] *** Joins: c10l (~c10l@89.34.167.207)
[07:07:00] *** Joins: Valentine (~valentine@hackerspacesg/valentine)
[07:12:02] *** Quits: c1anuro (~c1anuro@173.170.150.133) (Quit: Client closed)
[07:25:49] *** Joins: souvik (~souvik@103.199.182.243)
[07:31:08] *** Quits: nimmen (~strangerf@78-61-239-159.static.zebra.lt) (Ping timeout: 272 seconds)
[07:33:33] *** Quits: albertito (~nil@37.228.214.226) (Ping timeout: 268 seconds)
[07:34:36] *** Joins: albertito (~nil@37.228.214.226)
[07:35:42] *** Quits: Gnuman (~gnuman@user/gnuman) (Quit: The number you have dialed is no longer in service..)
[07:37:57] *** Joins: Gnuman (~gnuman@user/gnuman)
[07:40:56] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 250 seconds)
[07:42:14] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[07:52:05] *** Joins: Crassus (~Crassus@user/crassus)
[07:52:10] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[07:53:28] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[07:57:06] *** Quits: src (~src@user/src) (Ping timeout: 272 seconds)
[08:02:40] *** Joins: xav (~quassel@103-96-86-209.novaconnect.nz)
[08:11:56] *** Quits: moog (~moog@107.126.48.102) (Quit: Leaving)
[08:13:42] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:cd52:7267:79f1:af28)
[08:20:00] *** Quits: Torr (~Torr@170.83.145.98) (Quit: leaving)
[08:27:28] *** Joins: nattiestnate (~nate@180.242.128.159)
[08:27:58] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[08:28:33] *** Joins: zkanda (~zkanda@box.makean.art)
[08:34:00] <LambdaComplex> is it idiomatic to create a type that has some sort of New function which sets up goroutines that perform work on items received through a channel? with the items being sent to that channel via a method of the type which takes an item as an argument
[08:39:14] <LambdaComplex> this pattern https://play.golang.org/p/KvuHnwFEe1Y
[08:39:53] <LambdaComplex> (yes, I know that example doesn't wait for all the values to get printed before exiting; that isn't the point here)
[08:40:48] *** Quits: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[08:41:11] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:43:05] *** Joins: andlabs (~andlabs@68.237.68.71)
[08:45:22] <Tv_> LambdaComplex: in general, let your caller be in charge of the goroutines
[08:45:34] <Tv_> not always possible, but almost always leads to better APIs
[08:46:23] <LambdaComplex> Tv_: so what's the best way to structure that when the entire point of the type that you're defining is to execute multiple things simultaneously?
[08:46:30] <Tv_> nothing in that example demonstrates even a need for goroutines, and in fact it misuses goroutines in a way that simply make it wrong -- whether it prints anything or not is up to luck
[08:46:44] <Tv_> LambdaComplex: perhaps you don't need to provide that code in the first place
[08:47:05] *** Joins: shka (~herr@109.231.62.239)
[08:47:05] <Tv_> let them call your functions in their goroutines, let them use e.g. https://godoc.org/golang.org/x/sync/errgroup  when called for
[08:48:02] <Tv_> afk
[08:49:57] <LambdaComplex> Tv_: for more context, this will be a long-running daemon that's connected to by an external client
[08:51:42] <LambdaComplex> e.g. the values which get passed to PrintInt would be received over http
[08:52:09] <LambdaComplex> (and the actual work being done is more complicated than just printing to stdout)
[08:52:09] *** Joins: g4wjs (~quassel@mail.classdesign.com)
[08:53:26] <LambdaComplex> i'll definitely read up on errgroup though
[09:12:37] *** Joins: oxum (~oxum@106.201.113.95)
[09:14:36] *** Joins: nimmen (~strangerf@78-61-239-159.static.zebra.lt)
[09:17:08] *** Quits: oxum (~oxum@106.201.113.95) (Ping timeout: 250 seconds)
[09:27:07] *** Quits: g4wjs (~quassel@mail.classdesign.com) (Quit: No Ping reply in 180 seconds.)
[09:28:19] *** Joins: g4wjs (~quassel@mail.classdesign.com)
[09:28:59] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[09:29:30] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:30:11] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[09:33:32] <b0nn> Ahh I've finally found a (possible) use case for tries
[09:34:16] <b0nn> Levenshtein distance calculation
[09:42:08] *** Quits: thinkofher (~thinkofhe@77-253-100-191.adsl.inetia.pl) (Read error: Connection reset by peer)
[09:42:12] *** Joins: thinkofher19 (~thinkofhe@77-253-125-173.adsl.inetia.pl)
[09:47:08] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[09:52:56] *** Quits: toshywoshy (~toshywosh@ptr-377wf33o3bnthuddmycb.18120a2.ip6.access.telenet.be) (Read error: Connection reset by peer)
[09:53:05] *** Joins: toshywoshy (~toshywosh@ptr-377wf33o3bnthuddmycb.18120a2.ip6.access.telenet.be)
[09:53:26] *** Joins: egy (~egy@105.196.68.175)
[10:00:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[10:04:02] *** Joins: Ohlov389517 (~0hlov3@dyndsl-091-248-233-213.ewe-ip-backbone.de)
[10:04:45] *** Joins: oxum (~oxum@106.201.113.95)
[10:07:34] *** Quits: Ohlov38951 (~0hlov3@host-091-097-117-034.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[10:09:20] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:2c5a:a587:e31e:9a2b)
[10:09:55] *** Quits: oxum (~oxum@106.201.113.95) (Ping timeout: 264 seconds)
[10:13:46] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:2c5a:a587:e31e:9a2b) (Ping timeout: 244 seconds)
[10:14:54] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[10:16:03] *** Quits: jespada (~jespada@90.254.242.55) (Ping timeout: 252 seconds)
[10:17:58] *** Joins: jespada (~jespada@90.254.242.55)
[10:19:50] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[10:25:59] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Ping timeout: 272 seconds)
[10:32:37] *** Joins: Vukan (~drazen@62.240.24.34)
[10:37:17] *** Joins: souvik_ (~souvik@103.200.84.40)
[10:38:42] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[10:40:20] *** Quits: souvik (~souvik@103.199.182.243) (Ping timeout: 250 seconds)
[10:40:45] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[10:42:45] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:43:00] *** Quits: souvik_ (~souvik@103.200.84.40) (Ping timeout: 252 seconds)
[10:43:34] *** Quits: aerona (~aerona@2600:6c54:4600:f300:90f0:5e8d:1f86:bfa1) (Quit: Leaving)
[10:44:20] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:45:08] *** Joins: mrig (~mrig@user/mrig)
[10:45:31] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:2c5a:a587:e31e:9a2b)
[10:49:56] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:2c5a:a587:e31e:9a2b) (Ping timeout: 244 seconds)
[10:50:40] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[10:53:34] *** Joins: andlabs (~andlabs@68.237.68.71)
[10:53:57] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 272 seconds)
[10:56:25] *** Joins: Crassus (~Crassus@user/crassus)
[10:56:59] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[10:57:18] *** Joins: souvik (~souvik@157.43.222.133)
[11:01:03] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[11:01:13] *** thinkofher19 is now known as thinkofher
[11:03:05] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Read error: Connection reset by peer)
[11:03:36] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[11:04:24] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Ping timeout: 244 seconds)
[11:04:30] *** Joins: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de)
[11:06:08] *** Joins: mambang (~mambang@user/mambang)
[11:07:12] *** Quits: Vukan (~drazen@62.240.24.34) (Ping timeout: 252 seconds)
[11:09:34] *** Joins: dmathieu (~textual@2a01:e34:ecbd:4370:dcea:f7f8:cee6:e265)
[11:12:01] *** Quits: dmathieu (~textual@2a01:e34:ecbd:4370:dcea:f7f8:cee6:e265) (Client Quit)
[11:14:08] *** Joins: rnm (~mambang@user/mambang)
[11:14:24] *** Quits: mambang (~mambang@user/mambang) (Read error: Connection reset by peer)
[11:19:08] *** Joins: nibbleZero (~nibbleZer@188.252.209.208)
[11:24:42] *** Joins: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77)
[11:29:55] *** Quits: kulak (~kulak@user/kulak) (Quit: kulak)
[11:30:58] *** Joins: absc (~absc@dynamic-adsl-94-34-175-104.clienti.tiscali.it)
[11:31:45] *** Joins: kulak (~kulak@user/kulak)
[11:33:18] *** Joins: oxum (~oxum@106.201.113.95)
[11:38:15] *** Quits: oxum (~oxum@106.201.113.95) (Ping timeout: 258 seconds)
[11:41:29] *** Joins: Vukan (~drazen@62.240.24.34)
[11:42:31] *** Quits: nibbleZero (~nibbleZer@188.252.209.208) (Quit: nibbleZero)
[11:43:09] *** Joins: SJrXX (~sjr@2604:3d08:d180:1f1b::7ea)
[11:44:52] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[11:45:38] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[11:46:14] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (Remote host closed the connection)
[12:05:59] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[12:06:36] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[12:08:16] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:09:33] *** Joins: fef (~thedawn@user/thedawn)
[12:09:56] <fef> hello
[12:10:14] <fef> is this valid golang channel
[12:10:51] <bookworm> no, but a go one ;P
[12:13:55] *** Quits: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de) (Read error: Connection reset by peer)
[12:14:20] <fef> have no clue why you guys moved to libera.chat :/ almost all big channels moved :'(
[12:14:26] *** Joins: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de)
[12:15:22] *** Joins: egy_ (~egy@105.196.67.11)
[12:16:58] *** Quits: egy (~egy@105.196.68.175) (Ping timeout: 250 seconds)
[12:19:34] <bookworm> I'm sure it's easy enough to read up on the drama without re discussing it in here
[12:19:47] <bookworm> there are plenty of writeups of both sides available
[12:24:15] <fef> i understood but that don't affect go-nuts in anyway.
[12:24:33] <fef> so why the shift
[12:27:04] <comrad> hmm, a oracle database driver for go, but last release 2019
[12:27:17] <comrad> so my thinking is: is it done? or abandanded?
[12:27:23] <comrad> https://github.com/godror/godror
[12:29:27] *** Joins: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[12:30:48] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[12:32:59] *** Joins: mrig (~mrig@user/mrig)
[12:35:16] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:31] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[12:38:52] <gwd> comrad: Could be both?  Obviously it won't be taking advantage of new language features like error.Unrwap(), but it might still work perfectly fine.
[12:39:27] <gwd> (Haven't used it at all)
[12:41:12] *** Joins: oxum (~oxum@106.201.113.95)
[12:42:01] *** Quits: kinduff (~kinduff@user/kinduff) (Read error: Connection reset by peer)
[12:42:31] *** Joins: kinduff (~kinduff@user/kinduff)
[12:46:00] *** Quits: oxum (~oxum@106.201.113.95) (Ping timeout: 250 seconds)
[12:54:28] *** Joins: edgy (~egy@105.196.164.148)
[12:56:50] *** Quits: egy_ (~egy@105.196.67.11) (Ping timeout: 258 seconds)
[13:03:42] *** Quits: justBull (~justache@user/justache) (Remote host closed the connection)
[13:05:15] *** Joins: justBull (~justache@user/justache)
[13:07:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:09:04] *** Joins: seebs (~seebs@24.196.59.174)
[13:09:34] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[13:10:01] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[13:10:14] *** Quits: GinjaNinja32 (~nyx@thanatos.gn32.uk) (Remote host closed the connection)
[13:10:15] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[13:10:29] *** Joins: GinjaNinja32 (~nyx@thanatos.gn32.uk)
[13:10:39] *** Quits: skrzyp (~skrzyp@skrzyp.net) (Ping timeout: 272 seconds)
[13:10:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 268 seconds)
[13:12:07] *** Quits: xerox (~edi@user/edi) (Ping timeout: 272 seconds)
[13:12:31] *** Joins: xerox (~edi@user/edi)
[13:12:32] *** Joins: skrzyp (~skrzyp@skrzyp.net)
[13:15:42] *** SpydarOO7 is now known as Spydar007
[13:16:00] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[13:19:20] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:34] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[13:23:16] *** Quits: xerox (~edi@user/edi) (Quit: leaving)
[13:25:00] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[13:40:36] *** Quits: Vukan (~drazen@62.240.24.34) (Ping timeout: 250 seconds)
[13:44:50] *** Joins: dr0n (~nabromov@92.40.255.115.threembb.co.uk)
[13:45:06] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:54:09] *** Joins: Guest48 (~Guest48@ec2-52-76-156-114.ap-southeast-1.compute.amazonaws.com)
[14:04:11] *** Quits: Guest48 (~Guest48@ec2-52-76-156-114.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[14:10:31] *** Joins: Vukan (~drazen@62.240.24.34)
[14:14:01] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[14:21:51] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:21:53] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[14:23:37] *** Joins: nmollerup (~nmm@customer-2a00-7660-1612-0168-f5eb-be89-70e6-4ebd.ip6.gigabit.dk)
[14:25:54] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[14:26:55] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[14:29:06] *** imm__ is now known as imm_
[14:29:15] *** Quits: ac5tin (~ac5tin@183178018244.ctinets.com) (Quit: WeeChat 3.1)
[14:30:00] *** Quits: Vukan (~drazen@62.240.24.34) (Ping timeout: 250 seconds)
[14:30:00] *** Quits: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de) (Ping timeout: 250 seconds)
[14:30:40] *** Joins: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de)
[14:34:31] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[14:35:07] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[14:37:25] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 272 seconds)
[14:39:13] *** Joins: cskr (~cskr@49.207.206.153)
[14:41:27] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[14:42:34] *** Quits: edgy (~egy@105.196.164.148) (Ping timeout: 250 seconds)
[14:44:21] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[14:46:34] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 244 seconds)
[14:47:49] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[14:47:58] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Client Quit)
[14:48:59] *** Joins: ac5tin (~ac5tin@183178018244.ctinets.com)
[14:49:25] <CoolerX> Value.MapRange gives a read only iterator?
[14:50:25] <CoolerX> https://golang.org/pkg/reflect/#Value.MapRange
[14:50:34] <CoolerX> Does that give a read only iterator?
[14:50:50] <CoolerX> I am getting panics happening trying to  v.SetString()
[14:50:57] <CoolerX> v.CanSet returns false as well
[14:51:07] <CoolerX> v = iter.Value()
[14:51:21] <CoolerX> iter := mymap.MapRange()
[14:51:33] *** Quits: souvik (~souvik@157.43.222.133) (Read error: Connection reset by peer)
[14:51:52] *** Joins: souvik (~souvik@103.199.182.246)
[14:54:54] *** Quits: skrzyp (~skrzyp@skrzyp.net) (Ping timeout: 258 seconds)
[15:00:29] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 245 seconds)
[15:03:22] *** Quits: rnm (~mambang@user/mambang) (Ping timeout: 250 seconds)
[15:03:54] *** Joins: theoceaniscool (~theoceani@93.177.120.130)
[15:04:35] *** Joins: Vukan (~drazen@62.240.24.34)
[15:04:46] *** Joins: arthem (~rehmat@user/arthem)
[15:04:51] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Quit: leaving)
[15:05:12] *** betelgeuse01 is now known as betelgeuse
[15:12:46] *** Joins: edgy (~egy@105.196.164.148)
[15:12:55] *** Quits: Vukan (~drazen@62.240.24.34) (Ping timeout: 258 seconds)
[15:13:02] <CoolerX> actually I figured it out
[15:13:11] <CoolerX> map values aren't addressable
[15:13:38] *** Joins: rnm (~mambang@user/mambang)
[15:22:39] *** Joins: vptr_ (~vptr@cpe-24-162-255-196.nc.res.rr.com)
[15:23:07] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 264 seconds)
[15:24:01] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:28:01] *** Quits: vptr (~tadas@user/vptr) (Killed (NickServ (GHOST command used by vptr_!~vptr@cpe-24-162-255-196.nc.res.rr.com)))
[15:28:13] *** Quits: vptr_ (~vptr@cpe-24-162-255-196.nc.res.rr.com) (Quit: leaving)
[15:28:29] *** Joins: vptr (~vptr@user/vptr)
[15:30:10] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 258 seconds)
[15:30:34] *** Quits: arthem (~rehmat@user/arthem) (Quit: Konversation terminated!)
[15:30:51] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:31:27] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[15:32:23] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[15:36:16] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 272 seconds)
[15:49:18] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Ping timeout: 250 seconds)
[15:51:03] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[15:54:14] *** Joins: Vukan (~drazen@62.240.24.34)
[15:54:17] *** Quits: OMGOMG (~bobrobert@nami.ifi.uio.no) (Ping timeout: 268 seconds)
[16:03:16] *** Joins: Garb0 (~Garb0@user/garb0)
[16:04:45] *** Quits: Vukan (~drazen@62.240.24.34) (Ping timeout: 252 seconds)
[16:07:06] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[16:07:36] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[16:09:31] *** Joins: souvik_ (~souvik@103.199.182.246)
[16:10:48] *** Quits: souvik (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[16:11:18] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 244 seconds)
[16:13:52] *** Quits: souvik_ (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[16:14:00] *** Quits: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77) (Quit: Leaving)
[16:16:15] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[16:20:48] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[16:21:08] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:21:54] *** Quits: Nex8192_ (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[16:22:15] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[16:22:29] *** Joins: fef (~thedawn@user/thedawn)
[16:24:16] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Max SendQ exceeded)
[16:24:50] *** Joins: souvik (~souvik@47.11.4.190)
[16:25:09] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:33:59] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:37:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:38:18] *** Joins: arthem (~rehmat@user/arthem)
[16:38:18] *** Joins: fef (~thedawn@user/thedawn)
[16:38:36] *** Joins: souvik_ (~souvik@47.11.4.190)
[16:42:00] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[16:42:20] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[16:52:42] *** Joins: yoonkn (~user@175.197.208.79)
[16:55:33] *** Joins: src (~src@user/src)
[16:57:17] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Quit: Leaving)
[17:00:38] *** Quits: souvik (~souvik@47.11.4.190) (Read error: Connection reset by peer)
[17:00:39] *** Quits: souvik_ (~souvik@47.11.4.190) (Read error: Connection reset by peer)
[17:02:56] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[17:03:19] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[17:04:22] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:04:54] *** Joins: souvik (~souvik@103.199.182.246)
[17:05:36] *** Joins: souvik_ (~souvik@103.199.182.246)
[17:07:25] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:09:33] *** Quits: bsap (~bsap@184.16.65.223) (Quit: Konversation terminated!)
[17:09:48] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[17:09:48] *** Quits: azidhaka (~azidhaka@gateway.videnov.bg) (Client Quit)
[17:10:29] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[17:10:45] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[17:10:45] *** Quits: azidhaka (~azidhaka@gateway.videnov.bg) (Client Quit)
[17:11:08] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[17:17:22] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[17:22:54] *** Quits: hikhvar (~thelounge@x4db4b3c6.dyn.telefonica.de) (Ping timeout: 250 seconds)
[17:23:27] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[17:24:05] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[17:27:04] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[17:33:22] *** Joins: StyXman_ (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0)
[17:40:37] *** Joins: Garb0 (~Garb0@user/garb0)
[17:41:34] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:44:56] *** Quits: Garb0 (~Garb0@user/garb0) (Remote host closed the connection)
[17:45:44] *** Joins: Garb0 (~Garb0@user/garb0)
[17:45:50] *** Joins: fef (~thedawn@user/thedawn)
[17:47:55] *** Joins: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77)
[17:52:19] *** Quits: Garb0 (~Garb0@user/garb0) (Remote host closed the connection)
[17:52:59] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[17:57:57] *** Joins: Garb0 (~Garb0@user/garb0)
[17:58:44] *** Quits: vptr (~vptr@user/vptr) (Remote host closed the connection)
[18:02:11] *** Joins: vptr (~tadas@user/vptr)
[18:06:34] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 258 seconds)
[18:07:12] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:08:45] *** Joins: andlabs (~andlabs@68.237.68.71)
[18:13:53] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:22:12] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 272 seconds)
[18:22:42] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[18:22:47] *** Joins: jolof (~jolof@user/jolof)
[18:24:15] *** Joins: zutt (~zutt@user/zutt)
[18:24:22] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[18:26:29] *** Quits: mustafa (sid502723@rockylinux/releng/mstg) (Changing host)
[18:26:29] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[18:29:32] *** Quits: azidhaka (~azidhaka@gateway.videnov.bg) (Quit: Leaving)
[18:29:57] *** Quits: souvik (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[18:30:35] *** Joins: arcatech (~arcatech@user/arcatech)
[18:30:43] *** Quits: souvik_ (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[18:32:31] *** Joins: li (~li@libera/staff/li)
[18:32:53] *** Joins: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net)
[18:35:53] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:38:33] *** Quits: arthem (~rehmat@user/arthem) (Quit: Konversation terminated!)
[18:39:21] *** Joins: souvik (~souvik@103.199.182.246)
[18:39:22] *** Joins: souvik_ (~souvik@103.199.182.246)
[18:40:00] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:40:22] *** Quits: cskr (~cskr@49.207.206.153) (Quit: Leaving)
[19:08:49] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[19:09:40] *** Joins: icholy (~icholy@68.71.18.45)
[19:12:49] <finnb> (Thanks for moving over the libra btw)
[19:13:03] *** Quits: absc (~absc@dynamic-adsl-94-34-175-104.clienti.tiscali.it) (Remote host closed the connection)
[19:16:28] *** Quits: edgy (~egy@105.196.164.148) (Quit: edgy)
[19:18:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[19:18:36] <saml> is this freenode
[19:19:00] <seebs> it's roughly the soul of freenode, separated from some weird parasitic stuff.
[19:20:06] <saml> let's build git + cicd for all teams. one workflow to rule all teams in the whole wide world
[19:20:07] *** Joins: dmathieu (~textual@pop.92-184-110-170.mobile.abo.orange.fr)
[19:21:38] *** Joins: absc (~absc@dynamic-adsl-94-34-175-104.clienti.tiscali.it)
[19:23:01] *** Quits: welt[m] (~weltspide@2001:470:69fc:105::15e2) (Read error: Connection reset by peer)
[19:23:03] *** Quits: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b) (Read error: Connection reset by peer)
[19:23:03] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[19:23:03] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Read error: Connection reset by peer)
[19:23:03] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[19:23:03] *** Quits: jai (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[19:23:03] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[19:23:03] *** Quits: speatzle_ (~speatzles@2001:470:69fc:105::1003) (Read error: Connection reset by peer)
[19:23:03] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[19:23:03] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Read error: Connection reset by peer)
[19:23:04] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Read error: Connection reset by peer)
[19:23:41] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[19:24:39] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[19:24:40] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[19:24:40] *** Joins: jai (~darkapex@user/darkapex)
[19:24:40] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[19:24:40] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[19:24:40] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[19:24:40] *** Joins: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b)
[19:24:40] *** Joins: kadoban (~kadoban@user/kadoban)
[19:24:52] *** Joins: welt[m] (~weltspide@2001:470:69fc:105::15e2)
[19:24:53] *** Joins: speatzle_ (~speatzles@2001:470:69fc:105::1003)
[19:26:14] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Quit: Leaving)
[19:27:15] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[19:29:26] *** Joins: arcatech (~arcatech@user/arcatech)
[19:34:56] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:36:03] *** Joins: Guest5967 (~Guest59@89-66-3-64.dynamic.chello.pl)
[19:37:23] *** Quits: Guest5967 (~Guest59@89-66-3-64.dynamic.chello.pl) (Client Quit)
[19:37:48] *** Joins: Guest5983 (~Guest59@89-66-3-64.dynamic.chello.pl)
[19:38:02] *** Quits: Guest5983 (~Guest59@89-66-3-64.dynamic.chello.pl) (Client Quit)
[19:42:57] *** Joins: pepee (~user@user/pepee)
[19:46:54] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[19:47:31] *** Joins: Guest5917 (~Guest59@89-66-3-64.dynamic.chello.pl)
[19:47:43] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 264 seconds)
[19:49:18] *** Joins: Garb0 (~Garb0@user/garb0)
[19:51:50] *** Quits: Guest5917 (~Guest59@89-66-3-64.dynamic.chello.pl) (Client Quit)
[19:52:30] *** Joins: Guest5952 (~Guest59@89-66-3-64.dynamic.chello.pl)
[19:53:13] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:55:12] *** Quits: Guest5952 (~Guest59@89-66-3-64.dynamic.chello.pl) (Client Quit)
[19:57:10] *** Quits: dmathieu (~textual@pop.92-184-110-170.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[19:58:51] *** Joins: dmathieu (~textual@pop.92-184-110-170.mobile.abo.orange.fr)
[20:03:52] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 258 seconds)
[20:05:29] *** Quits: dmathieu (~textual@pop.92-184-110-170.mobile.abo.orange.fr) (Ping timeout: 245 seconds)
[20:07:21] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[20:09:32] *** Joins: Nvn (~Nvn@m83-181-244-143.cust.tele2.hr)
[20:09:55] *** Quits: theoceaniscool (~theoceani@93.177.120.130) (Ping timeout: 264 seconds)
[20:11:24] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:32] *** Joins: Garb0 (~Garb0@user/garb0)
[20:13:13] *** Joins: andlabs (~andlabs@68.237.68.71)
[20:16:33] *** Joins: kiril (~kiril@85.91.153.163)
[20:17:03] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Quit: Quit)
[20:19:43] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:22:40] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[20:23:51] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:02] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Quit: Quit)
[20:26:52] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:33:24] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Ping timeout: 245 seconds)
[20:34:12] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[20:34:28] *** Joins: eck0__ (~Android@mobile-166-173-61-29.mycingular.net)
[20:34:35] *** Joins: Guest596 (~Guest59@89-66-3-64.dynamic.chello.pl)
[20:36:25] *** Quits: Guest596 (~Guest59@89-66-3-64.dynamic.chello.pl) (Client Quit)
[20:37:02] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 250 seconds)
[20:38:25] *** Quits: absc (~absc@dynamic-adsl-94-34-175-104.clienti.tiscali.it) (Quit: Leaving.)
[20:41:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:41:44] *** Quits: jespada (~jespada@90.254.242.55) (Ping timeout: 245 seconds)
[20:43:41] *** Joins: jespada (~jespada@90.254.242.55)
[20:55:52] *** Joins: dmathieu (~textual@pop.92-184-110-28.mobile.abo.orange.fr)
[21:01:01] <LambdaComplex> how does the channel feel about Standard Package Layout? https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1
[21:04:06] *** Parts: icholy (~icholy@68.71.18.45) ()
[21:04:17] *** Joins: icholy (~icholy@68.71.18.45)
[21:04:32] *** Joins: ausserz (~ausserz@188.214.106.131)
[21:06:53] <j416> LambdaComplex: I have yet to find a better way to structure my programs.
[21:07:25] <LambdaComplex> i think i'll be reaching for it again in the near future
[21:07:42] <LambdaComplex> tbh i kinda suck at testing but i think if i do that right then it'll make mocking services _incredibly_ easy
[21:08:00] <j416> LambdaComplex: for simple things of course, its overkill. For things with multiple packages, it makes a lot of sense most of the time.
[21:11:34] *** Quits: cfebs (~cfebs@user/cfebs) (*.net *.split)
[21:11:34] *** Quits: dmgk (~dmgk@user/dmgk) (*.net *.split)
[21:11:34] *** Quits: Shrike (sid305680@brockwell.irccloud.com) (*.net *.split)
[21:11:34] *** Quits: ziofork (~ziofork@fr.worn.eu) (*.net *.split)
[21:11:34] *** Quits: Disconsented (~quassel@107.170.227.20) (*.net *.split)
[21:11:34] *** Quits: feuerrot (~feuerrot@shells.chaosdorf.de) (*.net *.split)
[21:11:34] *** Quits: livinskull (~livinskul@ircb.hackthe.codes) (*.net *.split)
[21:11:34] *** Quits: averell (~averell@user/averell) (*.net *.split)
[21:11:34] *** Quits: belak (~belak@user/belak) (*.net *.split)
[21:11:35] *** Quits: explodes (~evan@user/explodes) (*.net *.split)
[21:11:35] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[21:11:35] *** Quits: noteness (noteness@user/noteness) (*.net *.split)
[21:11:35] *** Quits: ikke (~kevin@alpine/developer/ikke) (*.net *.split)
[21:11:35] *** Quits: tdmackey (~tdmackey@booleanhaiku.com) (*.net *.split)
[21:11:35] *** Quits: Cyrus (~Cyrus@144.202.93.237) (*.net *.split)
[21:11:35] *** Quits: alrs (alrs@tilde.team) (*.net *.split)
[21:11:39] *** Joins: alrs_ (alrs@tilde.team)
[21:11:39] *** Joins: tdmackey_ (~tdmackey@booleanhaiku.com)
[21:11:42] *** Joins: belak51 (~belak@66.175.222.59)
[21:11:46] *** Joins: feuerrot (~feuerrot@shells.chaosdorf.de)
[21:11:48] *** Joins: noteness (noteness@gateway02.insomnia247.nl)
[21:11:48] *** Joins: ikke (~kevin@ikke.info)
[21:11:49] *** Joins: averell (~averell@dishfire.rxd4.com)
[21:11:55] *** Joins: Cyrus (~Cyrus@144.202.93.237)
[21:11:56] *** Quits: averell (~averell@dishfire.rxd4.com) (Changing host)
[21:11:56] *** Joins: averell (~averell@user/averell)
[21:12:01] *** Joins: Shrike (sid305680@id-305680.brockwell.irccloud.com)
[21:12:02] <icholy> if you're going to use it, only add the directories you actually need
[21:12:09] *** Joins: ziofork (~ziofork@fr.worn.eu)
[21:12:12] *** Joins: Disconsented (~quassel@107.170.227.20)
[21:12:25] *** Joins: cfebs (~cfebs@user/cfebs)
[21:12:25] *** noteness is now known as Guest8007
[21:12:55] *** Joins: livinskull (~livinskul@ircb.hackthe.codes)
[21:13:30] *** Joins: dmgk (~dmgk@user/dmgk)
[21:14:21] <icholy> oh this is a different "standard package layout" than I was thinking baout
[21:14:23] <icholy> about*
[21:16:10] *** Quits: ikke (~kevin@ikke.info) (Changing host)
[21:16:10] *** Joins: ikke (~kevin@alpine/developer/ikke)
[21:16:36] *** Quits: cmagina (~cmagina@user/cmagina) (Quit: ZNC 1.8.2 - https://znc.in)
[21:23:13] *** Quits: dmathieu (~textual@pop.92-184-110-28.mobile.abo.orange.fr) (Ping timeout: 258 seconds)
[21:26:08] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[21:30:43] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:31:22] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[21:34:06] *** Joins: arthem (~rehmat@user/arthem)
[21:35:11] *** Quits: arthem (~rehmat@user/arthem) (Client Quit)
[21:35:33] <lazyreader> lol yeah as long as you're not talking about https://github.com/golang-standards/project-layout
[21:35:51] <lazyreader> that medium article is a nice discussion of the tradeoffs
[21:35:56] <lazyreader> of various layouts
[21:37:25] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[21:38:41] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Client Quit)
[21:39:19] *** Quits: Nvn (~Nvn@m83-181-244-143.cust.tele2.hr) (Remote host closed the connection)
[21:39:38] *** Joins: Nvn (~Nvn@m83-181-244-143.cust.tele2.hr)
[21:39:42] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[21:41:46] *** Joins: egon_ (~egon@181.214.206.136)
[21:50:33] *** Quits: StyXman_ (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0) (Ping timeout: 265 seconds)
[21:52:08] *** Quits: egon_ (~egon@181.214.206.136) (Changing host)
[21:52:08] *** Joins: egon_ (~egon@user/egon)
[21:54:11] *** Quits: sadg (~odd@45.83.220.210) (Quit: WeeChat 3.0.1)
[21:55:23] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1006)
[21:55:51] *** Joins: SincereFox (uid337158@user/sincerefox)
[21:58:03] *** egon_ is now known as egon
[21:59:37] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[21:59:40] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:00:00] *** Quits: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Client Quit)
[22:00:10] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:00:43] *** ente1 is now known as ente__
[22:01:48] *** Quits: rnm (~mambang@user/mambang) (Remote host closed the connection)
[22:01:51] *** Quits: ente__ (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Client Quit)
[22:02:03] *** Quits: egon (~egon@user/egon) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:26] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:02:37] *** Joins: egon (~egon@user/egon)
[22:07:17] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[22:07:36] *** Quits: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Quit: WeeChat 3.1)
[22:07:54] *** Joins: ente1 (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04)
[22:10:01] *** ente1 is now known as ente__
[22:11:04] *** Joins: cmagina (~cmagina@user/cmagina)
[22:12:29] *** Joins: kiril (~kiril@85.91.153.163)
[22:13:29] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b) (Ping timeout: 244 seconds)
[22:14:30] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[22:17:39] *** Joins: ariedro (~ariedro@user/ariedro)
[22:19:58] *** Joins: explodes (~explodes@user/explodes)
[22:20:03] *** Joins: fef (~thedawn@user/thedawn)
[22:21:10] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:3d7f:43c4:1d30:5b4b)
[22:23:15] *** Quits: explodes (~explodes@user/explodes) (Client Quit)
[22:23:31] *** Joins: explodes (~explodes@user/explodes)
[22:26:38] *** Joins: egy (~egy@105.196.164.148)
[22:29:55] *** Quits: ausserz (~ausserz@188.214.106.131) (Ping timeout: 258 seconds)
[22:31:04] <jemaclus> I'm guessing the answer is know, but I know that Go optimizes code to eliminate dead trees and so on... is it possible to have Go generate the optimized version and look at that? Or is it optimizing straight to assembly?
[22:31:32] <icholy> jemaclus: https://golang.design/gossa
[22:32:25] <icholy> jemaclus: pass -gcflags '-N -l' to disable optimisations
[22:33:09] <jemaclus> hmm. ok, i'll play with this for a bit. I was hoping to just see Go code, but it looks more complicated than that. Thank you.
[22:35:20] <icholy> jemaclus: works like this. 1. parse to ast, 2. convert to ir, 3. do some optimisations on ir, 4. convert to ssa, 5. do optimisations on ssa, 6. generate assembly
[22:35:35] <explodes> dang thats so neat
[22:36:11] <jemaclus> Yeah, I get it. Very cool. I'm just not familiar with ssa
[22:36:51] <jemaclus> Like, if I had func main() { foo := "bar"; fmt.Println(foo); } I was hoping to see something like: func main() { fmt.Println("bar"); } but this is a whole lot more info than that. It's good info, just not what I was expecting... I'll poke around. Again, thank you :)
[22:36:51] <icholy> jemaclus: what are you trying to do exactly?
[22:37:06] <jemaclus> Nothing in particular. Just curiosity, mostly.
[22:37:42] <icholy> jemaclus: a lot of the optimisations couldn't be converted back to Go syntax.
[22:37:44] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:38:15] *** Joins: fef (~thedawn@user/thedawn)
[22:38:24] <jemaclus> yeah, that's kinda what I figured. It's all good. Thanks.
[22:42:34] *** Quits: souvik_ (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[22:42:34] *** Quits: souvik (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[22:43:51] *** Joins: Torr (~Torr@170.83.145.98)
[22:44:14] *** Joins: Garb0 (~Garb0@user/garb0)
[22:44:15] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[22:44:58] *** Joins: aerona (~aerona@2600:6c54:4600:f300:7c57:ac62:2191:e44b)
[22:45:13] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:17] *** Joins: souvik (~souvik@103.199.182.246)
[22:47:35] *** Joins: andlabs (~andlabs@68.237.68.71)
[22:47:36] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:47:41] *** Joins: souvik_ (~souvik@103.199.182.246)
[22:50:12] *** Joins: SebastianM (~seba@user/sebastianm)
[22:50:56] *** Quits: Torr (~Torr@170.83.145.98) (Quit: leaving)
[22:52:27] *** Quits: nattiestnate (~nate@180.242.128.159) (Quit: WeeChat 3.1)
[22:53:25] *** Joins: nattiestnate (~nate@180.242.128.159)
[22:54:01] *** Joins: edrocks (~Ed@user/edrocks)
[22:58:40] *** Quits: souvik_ (~souvik@103.199.182.246) (Ping timeout: 258 seconds)
[22:59:07] *** Quits: souvik (~souvik@103.199.182.246) (Ping timeout: 264 seconds)
[23:03:06] *** Quits: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77) (Quit: Leaving)
[23:04:43] *** Quits: ente__ (~ente@2a02:908:1396:cb42:cf2c:e976:a4ef:a04) (Ping timeout: 268 seconds)
[23:05:41] *** Joins: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0)
[23:14:34] <src> sl := make([]int, 9) ; sl = append(sq0, array[0][0:3], array[1][0:3], array[2][0:3]); // cannot use array[0][0:3] (value of type []int) as int value in argument to append
[23:14:55] <src> array is a matrix of type [9][9]int ; there must be some obvious flaw here I don't see
[23:17:57] <fizzie> The pseudo-signature for append is `func append(slice []Type, elems ...Type) []Type`. You append individual elements, not concatenate slices.
[23:18:24] <fizzie> `append(append(append(sq0, array[0][0:3]...), array[1][0:3]..., array[2][0:3]...)` you could write if you like.
[23:18:51] <fizzie> (Plus the missing ')'.)
[23:20:17] <fizzie> Also, `sl := make([]int, 9); sl = append(sq0, ...)` doesn't really make sense, because that newly-made 9-element []int isn't used for anything.
[23:21:44] <src> fizzie: awesome thanks
[23:21:53] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[23:22:07] <src> your append works, and yes, I thought it was capacity, that would be make([]int, 0, 9) I guess
[23:22:19] <src> and you've given me some things to ponder, thanks for clearing some things up
[23:23:09] <src> fizzie: is the append(append(append(... a common "way" to achieve what I wanted (since you came up with it so easily?)
[23:23:28] *** Parts: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:23:33] <fizzie> The point I was trying to make re the `make` is just that `sl = append(sq0, ...)` will replace `sl` with a new slice; either one with a newly allocated array, or one sharing the array with sq0. In neither case is it going to matter what value `sl` had before, so the `make` does nothing.
[23:25:22] <fizzie> I don't know if "nesting" append calls is particularly common; it's undeniably ugly, so maybe not. I just generalized it out of the normal `append(a, b...)` to concatenate a and b.
[23:27:23] <fizzie> FWIW, if what you ultimately wanted was a "reference" to a 3x3 corner of your existing [9][9]int, you might give some thought to `sl := [3][]int{array[0][0:3], array[1][0:3], array[1][0:3]}`, which makes it so that sl[1][1] is the same element as array[1][1].
[23:28:01] <src> regarding `make` I have to create the slice before? I can't do `sq0 := append(append(append etc` or it will say undeclared name: sq0
[23:28:31] <fizzie> Your example used different names (`sl` and `sq0`), that's what was confusing me.
[23:28:53] <src> oh sorry
[23:28:57] <src> same slice, my bad
[23:29:26] <fizzie> Right, that makes more sense. Then it's reasonable. Though you *can* do it with just append, by starting from `[]int(nil)`.
[23:29:43] <fizzie> (Still, if you know the eventual size, it makes sense to make it the right capacity from the get-go.)
[23:30:42] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[23:30:43] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Client Quit)
[23:31:06] *** Quits: mohan43u (~mohan@user/mohan43u) (Quit: WeeChat 3.1)
[23:33:40] <src> fizzie: "you might give some thought to" works as well, I will
[23:33:48] <src> thanks
[23:34:23] <fizzie> The main difference is that it's essentially a pointer at the larger array, rather than a copy, so if you change it, the larger array changes as well. https://play.golang.org/p/nfGL3Ft3Gsk
[23:39:06] <src> that's fine in my case
[23:39:12] <src> (even preferable)
[23:40:56] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[23:41:07] *** Joins: Vukan (~drazen@62.240.25.28)
[23:43:25] *** Quits: pepee (~user@user/pepee) (Read error: Connection reset by peer)
[23:44:53] *** Joins: pepee (~user@user/pepee)
[23:44:56] *** Joins: avillagra (~avillagra@host236.190-105-219.sitsanetworks.net)
[23:46:44] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[23:49:39] *** Quits: Vukan (~drazen@62.240.25.28) (Ping timeout: 258 seconds)
[23:53:32] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:b16c:35bc:dfd6:881)
[23:55:43] *** Joins: frm (~frm@user/frm)
[23:55:45] *** Quits: egon (~egon@user/egon) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:56:34] *** Joins: egon (~egon@user/egon)
[23:59:11] *** Joins: phoenixh (~phoenixh@p200300dd6f28660028402f55bfd332ef.dip0.t-ipconnect.de)
