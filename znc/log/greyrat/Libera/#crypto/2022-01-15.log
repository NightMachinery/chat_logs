[00:02:04] *** Joins: Malvolio (~Malvolio@user/malvolio)
[00:06:15] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Quit: Leaving)
[00:08:03] *** Joins: d1cor (~diego@179.63.242.123)
[00:14:43] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:16:01] *** Joins: crabby (~crabby@2600:8801:f200:27:1139:2621:4d85:66b5)
[00:30:49] *** Joins: System_Error (~SystemErr@user/systemerror)
[00:32:06] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[00:40:56] *** Quits: Narrat (~omnius@p200300df5f129c6c06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:53:38] *** Joins: kn07_ (~kn07_@86.121.166.134)
[00:54:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[00:56:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d)
[01:25:12] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[01:26:45] *** Quits: d1cor (~diego@179.63.242.123) (Quit: WeeChat 3.4)
[01:31:11] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[01:53:02] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[02:02:08] *** Quits: crabby (~crabby@2600:8801:f200:27:1139:2621:4d85:66b5) (Quit: Leaving)
[02:05:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:06:33] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[02:20:54] *** Joins: zzo38 (~zzo38@host-24-207-14-22.public.eastlink.ca)
[02:21:37] *** Joins: aqua (~aqua@user/aqua)
[02:21:39] <zzo38> I invented a "2D hash" algorithm, which has a infinite internal state size and infinite output size, and has two dimensions (input dimensions and output dimension; either one can be space and the other one time, and you will get the same answer either way). I would hope that other will criticize it please
[02:21:55] *** Quits: aqua (~aqua@user/aqua) (Remote host closed the connection)
[02:22:09] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[02:22:15] *** Joins: aqua (~aqua@user/aqua)
[02:22:21] <sarnold> not many computers have infinite storage space available to work with
[02:22:28] <sarnold> I hope it's not actually infinite in use :)
[02:23:30] <TimMc> Probably means "unlimited".
[02:24:34] <zzo38> You do not actually need to store or to compute the entire state, since usually the output will be truncated. You will need approximately twice as much memory as the output size.
[02:24:45] <danieldg> if it also takes infinite time to run, it's likely to be very secure
[02:24:53] <sarnold> danieldg ooh good idea :)
[02:25:00] <sarnold> zzo38: aha that's much more tractable :)
[02:25:02] *** aqua is now known as kish`
[02:26:44] <danieldg> zzo38: that makes it less useful for things that need to be memory-hard (where the goal is tiny output that takes 4GB of RAM to produce)
[02:29:15] <zzo38> One thing you can do if that is the goal is to compute a small hash of the first 2GB of the hash, I suppose.
[02:30:39] <danieldg> sure.  Having a goal for "what is this useful for" might help guide evaluations
[02:31:37] <zzo38> Other algorithms could also be used, or a variant algorithm
[02:34:24] <zzo38> danieldg: OK, although I would expect that it would be useful for any of things that other hash algorithms would be useful for?
[02:34:37] *** Quits: etolier_ (~somewhere@122-199-44-127.ip4.superloop.com) (Quit: No Ping reply in 180 seconds.)
[02:35:00] <danieldg> no, most hash algorithms are used as a "message digest" which has a short output
[02:35:51] *** Joins: etolier (~somewhere@122-199-44-127.ip4.superloop.com)
[02:36:22] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:36:38] <zzo38> Some hash algorithms do allow outupt of any length; others have a fixed output length
[02:36:47] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Quit: Leaving)
[02:37:02] *** Joins: rardiol (~quassel@user/rardiol)
[02:37:25] <danieldg> true, but if you look at the use, it's often with a small output size
[02:37:52] *** Joins: Pythayr` (~pither195@2600:1700:82f0:2fe0:c50e:7898:7ef9:8793)
[02:39:09] <zzo38> Yes, probably it usually is
[02:39:24] *** Quits: rardiol (~quassel@user/rardiol) (Client Quit)
[02:39:30] *** Joins: gabriel1_ (~gabriel1@37.165.234.241)
[02:40:16] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 250 seconds)
[02:42:15] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[02:43:17] *** Quits: Pythayr` (~pither195@2600:1700:82f0:2fe0:c50e:7898:7ef9:8793) (Ping timeout: 240 seconds)
[02:43:54] *** Joins: rardiol (~quassel@user/rardiol)
[02:43:57] <zzo38> This is the draft so far: http://sprunge.us/iJClYq
[02:44:43] <zzo38> (It perhaps isn't written very well, since it is only a first draft so far)
[02:44:47] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:45:09] *** Joins: Pythayr (~pither195@64.42.181.51)
[02:47:55] *** Quits: vj--_ (~vj@bras-base-toroon3514w-grc-63-174-89-63-91.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:48:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:55:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[03:01:18] *** Quits: etolier (~somewhere@122-199-44-127.ip4.superloop.com) (Quit: No Ping reply in 180 seconds.)
[03:02:32] *** Joins: etolier (~somewhere@122-199-44-127.ip4.superloop.com)
[03:02:47] *** Joins: lofiel (~lofiel@user/lofiel)
[03:03:14] *** Quits: aliosablack (~chomwitt@athedsl-15695.home.otenet.gr) (Ping timeout: 250 seconds)
[03:06:38] *** Quits: gabriel1_ (~gabriel1@37.165.234.241) (Remote host closed the connection)
[03:11:11] *** Parts: zzo38 (~zzo38@host-24-207-14-22.public.eastlink.ca) (:)
[03:34:36] *** Joins: dez (uid92154@user/dez)
[03:34:57] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 256 seconds)
[03:37:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:44:37] *** Quits: Brnocrist (~spartak@user/brnocrist) (Ping timeout: 240 seconds)
[03:46:51] *** Joins: Brnocrist (~spartak@user/brnocrist)
[03:47:39] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:c50e:7898:7ef9:8793)
[03:52:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:54:31] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[03:55:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:57:14] *** Joins: Wulf (~Wulf@user/wulf)
[03:57:37] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:4e4b:92f9:df67:5a4d) (Remote host closed the connection)
[04:13:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[04:30:44] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:53:43] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 256 seconds)
[05:01:06] *** Joins: learner36_ (~learner36@2607:fea8:129f:c220:18d6:6470:ca0d:47b5)
[05:01:15] *** Joins: satanist|hell (~satanist@bureaucracy.bureaucracy.de)
[05:01:37] *** Joins: taeaad_ (~taeaad@user/taeaad)
[05:02:55] *** Joins: blarnath (~d34dh0r53@104-191-10-248.lightspeed.snantx.sbcglobal.net)
[05:03:10] *** Joins: aczid_ (~aczid@tuig.nikhef.nl)
[05:03:42] *** Joins: Colti (Miramar-FL@user/host-pond)
[05:04:06] *** Joins: Arsen_ (arsen@managarm/dev/Arsen)
[05:04:49] *** Joins: asalor_ (~asalor@113.151.broadband3.iol.cz)
[05:04:58] *** Joins: mykhal_ (~m@user/mykhal)
[05:05:19] *** Joins: topor1 (~kulak@user/kulak)
[05:05:27] *** Quits: lofiel (~lofiel@user/lofiel) (Ping timeout: 256 seconds)
[05:09:05] *** Quits: Colty (Miramar-FL@user/host-pond) (Ping timeout: 240 seconds)
[05:09:05] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: kulak1 (~kulak@user/kulak) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: mykhal (~m@user/mykhal) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: aczid (~aczid@tuig.nikhef.nl) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: taeaad (~taeaad@user/taeaad) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: learner36 (~learner36@2607:fea8:129f:c220:fc14:d0b1:7117:55f1) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: martin02 (~silas@2001:4ca0:0:fe00:0:5efe:a96:1bc1) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: asalor (~asalor@user/asalor) (Ping timeout: 240 seconds)
[05:09:15] *** learner36_ is now known as learner36
[05:09:39] *** Joins: epony (~epony@user/epony)
[05:11:49] * Alipha wrote code today to securely and reversably map the last octet of an ip address to a different value (or possibly the same, with a 1/256 chance) for a given ip address. That is, 100.10.20.5 may map to 100.10.20.66 and no other ip would map to 100.10.20.66. And 123.44.1.5 would not likely map to 123.44.1.66 (a 1/256 chance  it would), but would consistently map to some other 123.44.1.### value.
[05:14:17] <sarnold> woot
[05:15:58] *** Joins: martin02 (~silas@141.84.69.76)
[05:16:04] <Alipha> We're logging ip addresses at work, and I don't really like that. But we're doing so for two reasons: to somewhat uniquely identify a user across various http requests, and to also do some geolocation analysis based upon geolocation associated with your ip address (I realize that's not terribly accurate, but). So I wanted to do something which would preserve those two use cases, but protect people's privacy
[05:16:06] <Alipha> slightly more.
[05:19:10] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[05:24:48] *** Joins: lofiel (~lofiel@user/lofiel)
[05:27:06] <iz> did you just.. xor a random byte over it?
[05:28:43] <iz> oh.. or a byte based on the first octets
[05:28:50] <Alipha> Lol, no, something a little more secure.
[05:29:50] <Alipha> I'm doing  SHA256 of the first 3 octets + n, 4 times, where n is 0 to 3. (where n is 0 the first time, 1 the second time, etc) which produces 256 bytes. Then each byte is used as an index to shuffle an array of {0, 1, 2, 3,..., 254, 255}. Then for the 100.10.2.5 example, I look at the 5th element of the shuffled array to grab the value.
[05:30:02] <iz> oh, so nonlinear also?  is that the right use of what nonlinear would mean?
[05:30:03] <Alipha> Eh, HMAC-SHA256
[05:30:30] <Alipha> (that is, with a secret key)
[05:30:32] <iz> ah, i see
[05:35:20] <moose> Alipha: sounds kinda weird
[05:36:53] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:41:22] <Alipha> moose: what's weird?
[05:44:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:44:55] <moose> Alipha: All of that stuff you've invented
[05:46:58] <moose> Why not just geolocate them, log their rough location in tandem with the last one or two segments of their IP address?
[05:47:23] <moose> That pair should be unique enough for session identification as well as preserve the geolocation.
[05:47:37] <moose> It's not specific enough to allow for an easy method to get the entire IP address.
[05:58:32] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[06:06:13] *** Quits: kn07_ (~kn07_@86.121.166.134) (Quit: Leaving)
[06:10:50] *** Joins: frost (~frost@user/frost)
[06:17:27] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpybm3e03ed2kbr.ipv6.telus.net) (Remote host closed the connection)
[06:18:25] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpw050o3r9i8dsl.ipv6.telus.net)
[06:23:49] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[06:33:10] *** satanist|hell is now known as satanist
[06:38:34] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[06:39:26] <TimMc> Can ECDSA basically be described this way? "Alice proves that she can multiply the base point by her secret key to get her public key, under the blinding of a secret nonce and in a way that incorporates the message hash"
[06:43:14] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[06:44:17] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[06:46:34] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[06:50:01] <TimMc> I can follow the steps of the math but don't really have a picture in my head of how it works. It *seems* like a blinding technique, though.
[06:50:36] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[06:51:06] <TimMc> moose: I'm guessing that Alipha's use case invoves doing the geolocation later, not at request time.
[07:01:12] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[07:11:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[07:13:30] *** Joins: Wulf (~Wulf@user/wulf)
[07:14:32] *** Joins: anandn (~anandn@2601:600:a27f:d92d:557:2ccd:32e:85fe)
[07:22:20] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-5139-4b89-ae8e-7237.res6.spectrum.com)
[07:22:29] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b926-4a69-3dcb-b94a.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:22:38] <rk4> that ip address logging scheme reminds me a bit of:
[07:22:44] <rk4> "There are two ways of constructing a software design; one way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult." - C. A. R. Hoare
[07:23:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[07:24:45] *** Joins: Wulf (~Wulf@user/wulf)
[07:26:54] <rk4> Alipha: what makes your code secure, out of curiousity
[07:27:07] <rk4> like, that's quite the assertion for code that's <1 day old
[07:29:21] <rk4> i had a similar task recently that i chatted to the room about, also HMAC based, also requiring correlation later down the line. but i think where we differ is in our confidence, i wouldn't call my scheme secure
[07:30:22] <rk4> i'd say it has no flaws that i or the team can identify, but that's hardly a confidence inducing claim
[07:32:39] <rk4> a challenge you'll have with ipv4 addresses is that the input space is relatively tiny, blowing it out to 256 bytes super weird as a first step. also the shuffle and picking the 5th is weird, i don't understand any of the rational
[07:34:04] *** Quits: Teth (~kvirc@cpe-71-79-34-84.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:34:37] <rk4> don't mind me, i'm a bit negative
[07:35:07] <rk4> my career has been based around other people writing buggy software :P
[07:35:33] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-5139-4b89-ae8e-7237.res6.spectrum.com) (Quit: jarthur_)
[07:43:10] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[07:43:21] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[07:49:04] <TimMc> I think what's described here is that you use the first three octets to create a key; the key is used as an entropy source to permute [0,256) into a new list; the last octet is then permuted by looking it up in that list.
[07:49:34] <TimMc> For 100.10.2.5 you pick index 5 because that's the last octet.
[07:52:11] <TimMc> For a given secret key and first three octets, there are... what, 256! permutations?
[07:52:36] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[07:55:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:56:15] <TimMc> Seems like a nice little keyed pseudorandom permutation.
[07:57:22] <rk4> seems an overly complicacted way to encrypt a single byte to me
[07:57:26] <TimMc> yup
[07:57:33] <TimMc> that too :-D
[07:59:14] <TimMc> very small domain encryption
[07:59:39] <maroon> i guess the irc method of shadowing the ip is no good? the hostnames like userid@88141E6B.31AF5053.59CA0E2.IP
[08:00:54] <rk4> unsure what that method is
[08:01:43] <rk4> i start off skeptical because i have a 4 byte identifier, what you've got there is 12 bytes, which makes me wonder if there's a 1:1 mapping, and given how easy it is to enumerate 2^32
[08:02:20] <TimMc> Hmm yeah, you could just HMAC the first three octets and spit out 100.10.2.DEADBEEF -- geolocate 100.10.2.0 and call it good.
[08:03:12] <maroon> the design is intended to make sure that ipv4 like same.same.same.different still allows a banmask to work
[08:03:16] <TimMc> unless that would mean too many geolocation failures, in which case Alipha's method *might* protect against that kind of failure mode
[08:06:23] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[08:07:32] <TimMc> (I'm imagining a case where a .0 or .255 might fail lookup for some systemic reason. But... then I guess you could always just randomize on lookup.)
[08:08:44] *** Quits: lofiel (~lofiel@user/lofiel) (Ping timeout: 250 seconds)
[08:22:04] <rk4> hmm, can i really hash every ipv4 address in 32 seconds on my laptop...well that opens up an interesting thought
[08:22:35] <rk4> [sha256]
[08:25:01] <rk4> if i wanted an invertable ipv4 transformation that still looked like an ipv4 addr, just encrypting it with a block cipher seems the easiest method and hides all the octets from superficial log snooping, but there's still that 1:1 mapping between plaintext and ciphertext that could be worked out with a bit of analysis/effort
[08:26:51] <maroon> to have a 1:1 you'd need to find a 32bit block cipher, unless you're obfuscating ipv6
[08:33:09] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[08:34:29] <rk4> i think for privacy maybe hmac(ipv4) truncated to 3 bytes would introduce a many to one mapping, i like that way, tossing away information is good for privacy :), and i think you could still do some geolocation analysis
[08:34:36] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:38:10] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpw050o3r9i8dsl.ipv6.telus.net) (Remote host closed the connection)
[08:39:10] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyofwebhx5w71m.ipv6.telus.net)
[08:46:13] <rk4> hmm i think i'm trying to reinvent format perserving encryption with my suggestion of applying a 32 bit block cipher to ipv4 addresses, i haven't encountered it but it seems common enough for NIST to write a publication about - https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38G.pdf
[08:54:28] <rk4> looks viable, an ip address field easily matches the requirements in 5.1
[08:55:22] <maroon> i guess we could just add random padding to transform ipv4 into a 128-bit block cipher's size
[08:56:03] *** Joins: BigTuna (~BigTuna@cpe-74-133-176-177.kya.res.rr.com)
[08:57:57] <rk4> so that would be akin to treating everything like an ipv6 address, which might be reasonable
[08:58:20] <rk4> my workplaces have all been ipv4 centric, but i think we might also be retarded in ipv6 rollouts :(
[09:01:02] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:01:17] <maroon> as i recall, there's a section of the ipv6 mapping space for addresses that are simply renditions of ipv4 addresses, so it could go in there - unless you append a header to describe what's being scrambled
[09:03:19] <rk4> they certainly have the space to reserve 2**32 addresses for the older protocol <_<
[09:03:28] <Alipha> TimMc understands what I'm doing. maroon, I wanted format preserving encryption. rk4, being able to hash all IPv4 in 32 seconds doesn't help you because hmac is a keyed hash--you have to know the key to be able to hash.
[09:04:15] <rk4> it helps me if i need to do some geolocation later and it's a non-invertable transformation :)
[09:05:47] *** Joins: cmbezln (~white@172-9-52-135.lightspeed.cicril.sbcglobal.net)
[09:14:19] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[09:28:49] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:32:02] *** Joins: zro (~zro@user/zro)
[09:37:54] *** Quits: boxframes (~Saloframe@2607:9000:2000:15::a45d) (Quit: Leaving)
[09:39:54] *** Quits: Malvolio (~Malvolio@user/malvolio) (Killed (erbium.libera.chat (Nickname regained by services)))
[09:40:54] *** Joins: Malvolio (~Malvolio@user/malvolio)
[09:42:22] *** Joins: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de)
[09:43:12] <zro> I'm arguing with a friend. I say "you should use full disk encryption". They refuse. Instead, they asymmetrically encrypt (gpg) documents to themselves, decrypt them to work on them, then re-encrypt them to their own public key. I contend that this is a horrible and absurd practice. This is not the way to encrypt data at rest. My main arguments thus far have been about metadata leakage, unaccounted
[09:43:15] <zro> for temporary files, and narrowly focusing on the confidentiality of the documents while ignoring the integrity of the rest of the system. What else am I missing or am I wrong? I swear theres a higher level argument about asymmetric vs symmetric, but I'm not sure I'm articulating it correctly.
[09:43:25] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Gone to sleep.)
[09:44:14] *** Quits: andreasbuhr (~quassel@p548dd27a.dip0.t-ipconnect.de) (Client Quit)
[09:52:28] <cmbezln>  where you're going wrong is they're right and you're wrong.
[09:52:43] <rk4> presumably they're decrypting to a RAM disk?
[09:53:05] <rk4> or straight to a vim/emacs buffer?
[09:54:09] <rk4> i think demonstration trumps argument, ask for a few hours with their hard drive :)
[09:54:22] <rk4> [or a ro copy]
[09:54:53] <Alipha> Seems like less effort to set up FDE once than to constantly be encrypting and decrypting files. And yeah, if you're decrypting to disk, you have to worry about the decrypted copies REALLY getting deleted
[09:57:49] <zro> rk4: youre very optimistic. no. they're straight up writing clear text to the disk. theres certainly recoverable data on the disk. 
[10:01:18] <rk4> i don't think there's much of a convincing argument about asymmetric vs symmetric specifically here, especially in light of the writing cleartext straight to disk
[10:01:52] <zro> fair. that is the big issue
[10:01:59] <rk4> fwiw iirc ubuntu homedir encryption was filebased for a few years w/ ecryptfs, which is quite a step up from your friends implementation, but still file based
[10:02:48] <zro> for some reason I feel like I have a possibly unfounded aversion to the idea of using asym where the challenge is not that 2 partys cant share a secret
[10:04:26] <zro> on the more esoteric side, am I wrong that technically asym would be vulnerable to shors algorithm attack, where a symertic solution would not be?
[10:05:19] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:05:25] <rk4> i'm but a humble 1 party, but for backups asym is handy since during encryption i can be relatively careless with the key being used
[10:07:52] <zro> fair. situations where u dont want to require user interaction to perfomr encryption is a reasonable argument for asym use with ones self
[10:08:12] <zro> i suppose thats my justification for allowing passwordstore without a gripe
[10:08:41] <rk4> sure, future quantum computers may break your friends gpg messages, but not your AES-256 FDE, but given the state of modern computer security i'm not especially worried about that...we're still in the age of routinely finding memory safety bugs in chrome
[10:09:10] <zro> ya, fair. esoteric non issue
[10:09:48] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyofwebhx5w71m.ipv6.telus.net) (Remote host closed the connection)
[10:10:45] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpw6pu1jyp120gy.ipv6.telus.net)
[10:12:36] <zro> thx for the input
[10:20:38] <rk4> my work computer uses FDE...but little good it does me when i have to run peoples .js projects and i download literally tens of thousands of dependencies, implicitly trusting thousands of people without audit :< just pray that no one mispelled a package name and got a namesquatted piece of malware
[10:23:06] <rk4> FDE allows us to have more lax physical security, but that tends to be the thing people are better at anyway
[10:34:31] *** Joins: boxframes (~Saloframe@2607:9000:2000:15::a45d)
[10:39:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 240 seconds)
[10:39:16] <zro> good point
[10:48:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:51:06] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[10:51:51] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[10:54:10] *** Joins: System_Error (~SystemErr@user/systemerror)
[10:56:16] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[10:59:00] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:13] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[10:59:25] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[10:59:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[10:59:45] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[11:00:10] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[11:13:31] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca)
[11:16:11] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:20:24] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[11:21:08] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[11:36:43] *** Quits: epony (~epony@user/epony) (Quit: QUIT)
[11:38:42] *** Joins: epony (epony@user/epony)
[11:58:20] *** Joins: r-g (~r-g@163.172.58.132)
[12:05:25] *** Arsen_ is now known as Arsen
[12:15:07] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:15:39] *** Quits: asalor_ (~asalor@113.151.broadband3.iol.cz) (Changing host)
[12:15:39] *** Joins: asalor_ (~asalor@user/asalor)
[12:24:08] *** Joins: lofiel (~lofiel@user/lofiel)
[12:27:08] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:30:04] *** aczid_ is now known as aczid
[12:30:58] *** asalor_ is now known as asalor
[12:33:27] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[12:42:41] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[12:45:02] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-204.dsl.bell.ca) (Ping timeout: 240 seconds)
[12:51:00] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:56:31] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[12:57:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca)
[12:59:10] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:01:00] *** Joins: System_Error (~SystemErr@user/systemerror)
[13:03:50] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 250 seconds)
[13:05:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-218.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:07:27] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca)
[13:08:57] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Gone.)
[13:09:46] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[13:15:17] *** Quits: danieldg (~me@user/danieldg) (Ping timeout: 240 seconds)
[13:20:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc0b:200:12c3:7bff:fe6d:d374)
[13:26:48] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-130.dsl.bell.ca) (Ping timeout: 250 seconds)
[13:46:02] *** Quits: anandn (~anandn@2601:600:a27f:d92d:557:2ccd:32e:85fe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:49:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[13:55:23] *** Joins: gproto23_ (~gproto23@user/gproto23)
[13:55:38] *** Quits: lofiel (~lofiel@user/lofiel) (Quit: leaving)
[13:57:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:00:44] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[14:00:54] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:02:25] *** Joins: gproto_23 (~gproto23@user/gproto23)
[14:03:57] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[14:04:06] *** Guyver2_ is now known as Guyver2
[14:05:22] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[14:10:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:11:12] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:11:53] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:21:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:30:48] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[14:41:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[14:42:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:46:39] *** Joins: System_Error (~SystemErr@user/systemerror)
[14:47:53] *** Joins: toastloop (~toastloop@user/toastloop)
[14:53:33] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[14:55:46] *** Joins: System_Error (~SystemErr@user/systemerror)
[14:58:25] *** Quits: toastloop (~toastloop@user/toastloop) (Quit: Leaving)
[15:05:37] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[15:07:59] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[15:09:02] *** Joins: echoreply (~echoreply@45.32.163.16)
[15:09:24] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[15:12:27] *** Joins: toastloop (~toastloop@user/toastloop)
[15:12:28] *** Quits: toastloop (~toastloop@user/toastloop) (Excess Flood)
[15:12:44] *** Joins: toastloop (~toastloop@user/toastloop)
[15:13:07] *** Quits: r-g (~r-g@163.172.58.132) (Read error: Connection reset by peer)
[15:17:14] *** Quits: toastloop (~toastloop@user/toastloop) (Remote host closed the connection)
[15:19:51] *** Joins: rardiol (~quassel@user/rardiol)
[15:21:15] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[15:28:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[15:33:40] *** Quits: rardiol (~quassel@user/rardiol) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:38:41] *** Quits: sebbu (~sebbu@user/sebbu) (Quit: reboot)
[15:41:19] *** Joins: rardiol (~quassel@user/rardiol)
[15:41:20] *** Quits: rardiol (~quassel@user/rardiol) (Client Quit)
[15:46:18] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[15:47:05] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[15:47:09] *** Guyver2_ is now known as Guyver2
[15:48:42] *** Joins: anandn (~anandn@2601:600:a27f:d92d:5c1d:96aa:95f6:7252)
[16:11:55] *** Quits: boxframes (~Saloframe@2607:9000:2000:15::a45d) (Remote host closed the connection)
[16:13:52] *** Joins: sebbu (~sebbu@user/sebbu)
[16:35:36] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[16:36:51] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[16:47:13] *** Joins: machinedgod (~machinedg@24.105.81.50)
[17:03:58] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[17:09:01] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[17:10:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[17:10:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:12:25] *** Joins: justaguy (~quassel@2a05:d014:742:eb00:7693:c44f:1fc3:29)
[17:19:10] *** Quits: anandn (~anandn@2601:600:a27f:d92d:5c1d:96aa:95f6:7252) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:26:21] *** Joins: raiaq (0a41c94ab1@2604:bf00:561:2000::3b)
[17:27:17] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[17:29:10] *** Joins: boxframes (~Saloframe@2607:9000:2000:15::a45d)
[17:30:36] *** Joins: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de)
[17:30:36] *** Quits: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de) (Changing host)
[17:30:36] *** Joins: menace (~someone@user/menace)
[17:30:44] *** menace is now known as Deknos
[17:39:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[18:04:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:04:43] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[18:14:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527)
[18:34:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[18:34:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:39:21] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[18:54:07] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[19:17:28] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Gone.)
[19:17:47] <TimMc> zro: You might give your friend the following challenge: Encrypt a file for them, and have them decrypt it to make some edits in it, adding some secret text. Then have them run `sudo grep MARKER /dev/sda --binary-files=text` where MARKER is some bit of the file that they didn't edit.
[19:19:29] <TimMc> I've recovered (plaintext) files from disk that way before when I accidentally deleted them or made some unwise edits. Not only did it find them, I then had to sort through tens of different copies in order to find the right version!
[19:20:04] <TimMc> (There are more advanced tools as well, but this works in a pinch for text.)
[19:21:38] <TimMc> I use full-disk encryption, but even then I often mount a ramdisk to work on particularly sensitive files: sudo mount -t ramfs ramfs ~/tmp/ram && sudo chown `whoami`: ~/tmp/ram
[19:21:52] <TimMc> Just have to watch out for swap, then. :-D
[19:23:04] <TimMc> ...and ensure that your editor doesn't save its temporary or backup files to some other location instead of in the same directory
[19:23:09] <TimMc> Probably other gotchas too.
[19:28:32] *** Quits: gproto_23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[19:29:38] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[19:30:00] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:01:17] *** Joins: d_b_r (~d_b_r@2a01:e0a:366:e160:6056:eabb:38a2:a18a)
[20:03:41] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:08:39] *** Quits: d_b_r (~d_b_r@2a01:e0a:366:e160:6056:eabb:38a2:a18a) (Quit: Client closed)
[20:15:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:19:19] *** Joins: fanis30 (~anon@adsl-122.37.6.162.tellas.gr)
[20:21:21] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[20:36:17] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:c50e:7898:7ef9:8793) (Ping timeout: 240 seconds)
[20:37:24] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[20:43:52] *** Joins: r-g (~r-g@163.172.58.132)
[20:44:46] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[20:49:18] *** Joins: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us)
[20:58:58] *** Quits: fanis30 (~anon@adsl-122.37.6.162.tellas.gr) (Quit: WeeChat 3.3)
[21:05:42] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[21:06:23] *** Joins: danieldg (~me@user/danieldg)
[21:06:48] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[21:08:02] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 240 seconds)
[21:14:57] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 240 seconds)
[21:15:20] <ericonr> There's some interesting discussion about this in vim or neovim's issue tracker iirc
[21:16:07] <ericonr> It was something like: they had a plugin to access gpg encrypted files, but the crypto was coded badly, and the editor had a *bunch* of state data stored in multiple places 
[21:21:03] <ericonr> https://github.com/neovim/neovim/issues/701 i think this was it
[21:24:28] <ericonr> (and it wasn't about gpg)
[21:30:16] *** Joins: DefiantN (~DefiantN@user/defiantn)
[21:30:45] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[21:54:48] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[21:57:41] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[21:57:50] *** Guyver2_ is now known as Guyver2
[22:03:46] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:03:58] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:04:32] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:04:44] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[22:05:14] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[22:11:43] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[22:14:36] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[22:14:44] *** Guyver2_ is now known as Guyver2
[22:24:04] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[22:28:27] *** Joins: cwebber (~user@user/cwebber)
[22:31:51] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[22:51:14] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[23:00:40] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-105.dsl.bell.ca)
[23:04:04] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:05:26] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:48:14] *** Quits: cmbezln (~white@172-9-52-135.lightspeed.cicril.sbcglobal.net) (Quit: Leaving)
