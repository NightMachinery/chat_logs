[00:00:03] <ssbr> SamuelMarks: AST manipulator? :O
[00:00:52] *** Joins: semeion (~semeion@user/semeion)
[00:01:12] <SamuelMarks> ssbr - https://github.com/SamuelMarks/cdd-python
[00:02:46] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[00:02:54] <jmcantrell> I need to create a python file for a unit test. Is the best way to just write a long multiline string to a file, or is there a more pythonic way?
[00:03:09] <SamuelMarks> jmcantrell StringIO?
[00:03:19] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[00:03:20] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:69ac:78b1:ef00:ebf1) (Quit: Client closed)
[00:04:26] *** Quits: Jefren (~Jefren@70.35.66.152) (Ping timeout: 265 seconds)
[00:04:43] <ssbr> SamuelMarks: ah, phew, I was worried this was going to be a refactoring tool!
[00:04:49] <SamuelMarks> :P
[00:05:09] <SamuelMarks> Feel free to star it / feature-suggest
[00:06:24] *** Joins: Jefren (~Jefren@206.253.157.225)
[00:06:29] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[00:06:33] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[00:06:34] <bancroft> can base64.b64encode(value.encode('utf-8')).decode('utf-8') raise a KeyError
[00:07:08] <The-Compiler> bancroft: I don't see how that could happen - what makes you ask?
[00:07:23] <SamuelMarks> bancroft - The first `.encode` can raise other errors
[00:07:27] *** Quits: magla (~gelignite@55d49223.access.ecotel.net) (Quit: Stay safe!)
[00:08:48] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:09:05] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 264 seconds)
[00:09:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:09:23] <SamuelMarks> ssbr - It's not about refactoring, it's about exposing your API, synchronising properties, and generating documentation
[00:09:38] <SamuelMarks> + more
[00:09:51] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:09:58] <bancroft> The-Compiler: I have a try/except above that on keyErrors, that could be dangerous if that raises a keyerror
[00:10:02] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[00:10:08] <ssbr> SamuelMarks: yeah, I gathered that a bit from reading it, but had trouble following since I don't do ML stuff.
[00:10:15] <ssbr> I do refactoring tools, which is why I was worried!
[00:10:31] <bancroft> SamuelMarks: i'm looking for where strings are defined (specially .encode) in the cpython repo on github, do you happen to konw where it is?
[00:11:41] *** Quits: Jefren (~Jefren@206.253.157.225) (Ping timeout: 252 seconds)
[00:13:01] *** Parts: ska (~ska@user/ska) (Leaving)
[00:13:16] <bancroft> looks like here https://github.com/python/cpython/blob/bb3e0c240bc60fe08d332ff5955d54197f79751c/Modules/clinic/_codecsmodule.c.h#L66-L76
[00:13:37] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:16:35] *** Joins: Jefren (~Jefren@208.104.190.46)
[00:17:29] *** Quits: vimart (~vimart@185.69.144.144) (Ping timeout: 264 seconds)
[00:17:46] <stealth_> bancroft, split the code up like `a = value; b = value.encode(); c o base64.b64encode(b);` ... this way it will tell you what is actually causing the error, if any
[00:18:09] <bancroft> am I right in thinking that str.encode can only return ValueErrors ?
[00:18:13] *** Joins: Pickchea (~private@user/pickchea)
[00:18:20] <SamuelMarks> ssbr - Yeah I've been meaning to rework that README a little, this project is ML independent, and on 3.9+ has no external dependencies.
[00:18:24] <bancroft> stealth_: there are none, just hypothetical
[00:19:06] <SamuelMarks> ssbr - It's an arbitrary solution to translate between known constructs (e.g., class, function, method, SQLalchemy model) and properties (e.g., this class property is the same as this function property; since their docs and types)
[00:19:06] <stealth_> bancroft, assumptions leads to mistake.
[00:19:26] <SamuelMarks> s/since/sync/g
[00:20:12] *** Joins: khile (cacambo@triton.blinkenshell.org)
[00:20:13] <ssbr> SamuelMarks: I'm not sure what that means, maybe the README could lead with an example?
[00:20:46] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[00:21:56] *** Quits: Jefren (~Jefren@208.104.190.46) (Ping timeout: 246 seconds)
[00:22:20] <SamuelMarks> It technically does 😅
[00:22:34] <SamuelMarks> ssbr - But is an ML example, kinda, which must've put you off
[00:23:55] *** Joins: Jefren (~Jefren@70.35.66.59)
[00:24:09] <bancroft> stealth_: truer words have never been spoken ... unless that too is an assumption ¯\_(ツ)_/¯
[00:24:48] *** Joins: ianliu (~ianliu@201-92-11-84.dsl.telesp.net.br)
[00:26:19] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[00:26:19] <stealth_> bancroft, just saying try out the code for yourself, don't assume if it will raise KeyError/ValueError, ... in programing language something might seem like common sense/logical but it might not be cause of device/communication restrictions
[00:27:16] <bancroft> stealth_: oh i've tried it and it works, but I don't know how to raise every possible exception in .encode() and .decode() and b64encode()
[00:28:14] *** Quits: Jefren (~Jefren@70.35.66.59) (Ping timeout: 246 seconds)
[00:28:26] <stealth_> bancroft, why would you want to know everyone? just `try: ... except ValueError: # what you wan't to catch except Exception: # something else went wrong`
[00:29:03] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 268 seconds)
[00:29:55] <bancroft> stealth_: no the valueerror is ok, I'm trying to figure out if its possible that those functions can raise a KeyError because i'm catching that later on for other reasons and if they do then I could have problems
[00:30:21] <bancroft> stealth_: that's why I need to know all the things those functions can raise
[00:30:32] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:31:28] <stealth_> bancroft, as i said, catch `except Exception:` for unknown errors
[00:33:05] *** Quits: grooverman_ (~grooverma@189-46-18-248.dsl.telesp.net.br) (Read error: Connection reset by peer)
[00:33:08] *** Joins: vimart (~vimart@85.255.232.1)
[00:33:12] *** Joins: Jefren (~Jefren@70.35.67.223)
[00:34:18] <stealth_> bancroft, also `one.two` if `two` doesn't exist, it will riase `AttributeError` and in `one['two']` if 'two' doesn't exist it will `raise KeyError`
[00:34:26] <Repiphany> If you don't know why an error is being thrown, you probably shouldn't be catching it
[00:35:02] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[00:35:18] <ianliu> When using dask.dataframe.read_parquet('*.parquet'), does this automatically assign a partition for each file
[00:35:20] <ianliu> ?
[00:35:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[00:36:26] <grym> ianliu: only one way to find out ...
[00:36:59] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[00:37:14] <grym> though i expect the answer is no, and you'd do something like dfs = [dask.dataframe.read_parquet(x) for x in pathlib.Path(base_dir).glob("*.parquet")]
[00:37:33] <dale> Is there an online "run Python code from the browser" kind of thing that doesn't require an account?  repl.it seems to want a login nowadays.
[00:37:49] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:38:16] *** Quits: vimart (~vimart@85.255.232.1) (Ping timeout: 265 seconds)
[00:39:05] *** Joins: rama (~rama@2601:640:10e:f08c:149d:d702:64a:ddb1)
[00:39:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[00:39:19] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[00:39:27] *** Joins: grooverman (~grooverma@177.95.12.14)
[00:39:44] *** Joins: portalrat_ (~portalrat@user/portalrat)
[00:39:58] <grooverman> It turns out I only needed to use r = s.get(...) instead of r = request.get(...)
[00:40:06] *** Quits: rama (~rama@2601:640:10e:f08c:149d:d702:64a:ddb1) (Remote host closed the connection)
[00:40:23] <grooverman> where s is a requests.Session()
[00:40:29] <ianliu> grym: I will test :P
[00:40:32] <ianliu> thanks
[00:40:35] *** Lord_of_Life_ is now known as Lord_of_Life
[00:40:38] *** Quits: Jefren (~Jefren@70.35.67.223) (Ping timeout: 260 seconds)
[00:40:56] *** Joins: vimart (~vimart@85.255.237.200)
[00:41:10] <grooverman> now all redirection problems, which were actually cookie problems, are solved.
[00:41:28] *** Joins: Biodragon (~Biodragon@cpe-107-184-133-164.socal.res.rr.com)
[00:41:30] <grooverman> thanks to whoever recommended me to use mitmproxy, awesome tool
[00:42:34] *** Joins: Jefren (~Jefren@208.104.190.53)
[00:42:41] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 264 seconds)
[00:42:55] <Biodragon> https://bpa.st/PFWQ
[00:43:07] <Biodragon> why does it remove the 2 from the whole list of lists?
[00:43:16] <Biodragon> and not just the first list?
[00:43:25] *** Joins: semeion (~semeion@user/semeion)
[00:43:28] <grym> Biodragon: because it's just one list
[00:43:40] <grym> Biodragon: try `grid = [[1,2,3,4,5,6,7,8,9]] * 10
[00:43:52] <grym> Biodragon: try `grid = [[1,2,3,4,5,6,7,8,9] for _ in range(10)]`
[00:44:26] <grym> (*10 doesn't do what you think it does)
[00:44:48] <stealth_> `grind[0
[00:44:58] <Repiphany> Biodragon: You have [nums, nums, nums, nums ...], i.e. one list with 10 references to the same inner list
[00:45:04] <Repiphany> So modifying one list modifies all of them
[00:45:08] <Biodragon> I guess it does not, weird, on your structure and my structure print(grid) shows the same
[00:45:21] <Biodragon> ah I get it now
[00:45:22] <Biodragon> thanks!
[00:45:39] <stealth_> grooverman, `grind[0][1] = 123` then do `grind[4][1]` to see what it outputs to see the difference
[00:45:50] <stealth_> Biodragon, ^
[00:48:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 264 seconds)
[00:49:46] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[00:50:37] *** Quits: amllado (~amllado@45.156.42.81) (Ping timeout: 252 seconds)
[00:53:09] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Quit: philipp64|work)
[00:54:43] *** Joins: rama (~rama@2601:640:10e:f08c:5c59:c2a3:7123:e65c)
[00:55:25] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:56:01] *** Quits: Akuli (~Akuli@82-203-162-216.bb.dnainternet.fi) (Quit: Leaving)
[01:00:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[01:00:59] *** Quits: nanook (~nanook@137.184.104.247) (Remote host closed the connection)
[01:01:24] *** Joins: CoolerX (~CoolerX@user/coolerx)
[01:02:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[01:02:19] *** Quits: rama (~rama@2601:640:10e:f08c:5c59:c2a3:7123:e65c) (Remote host closed the connection)
[01:03:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:03:15] *** Joins: rama (~rama@2601:640:10e:f08c:991:6fd4:8677:79cf)
[01:04:22] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[01:05:55] *** Quits: rama (~rama@2601:640:10e:f08c:991:6fd4:8677:79cf) (Remote host closed the connection)
[01:06:18] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:06:56] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:07:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 264 seconds)
[01:07:17] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:07:18] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:07:32] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:07:51] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: No route to host)
[01:08:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d)
[01:08:44] *** Joins: CoolerY (~CoolerX@user/coolerx)
[01:08:59] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[01:09:09] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:09:41] <mozgalom> Hi all. I have a predefined compiled regex pattern (e.g. METRIC_LABEL_NAME_RE = re.compile(r'^[a-zA-Z_][a-zA-Z0-9_]*$')) which I'd like to use on a string to replace all characters which are NOT in that regex with an underscore for example and I'm really puzzled how to do that
[01:10:10] *** Joins: control (~v1@user/control)
[01:12:06] *** Quits: Jefren (~Jefren@208.104.190.53) (Ping timeout: 265 seconds)
[01:12:11] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[01:12:17] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:14:31] *** Joins: junktext (~junktext@109.201.152.179)
[01:15:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:15:13] <grooverman> mozgalom: you need to learn to negate in an expression
[01:16:37] <energizer> mozgalom: https://stackoverflow.com/questions/2637675/how-to-negate-the-whole-regex
[01:17:16] <mozgalom> unbelievable but was just on the same SO question ^^
[01:17:24] <mozgalom> thanks for the hint, let me give it a shot
[01:17:25] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:17:38] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[01:18:38] *** Joins: rama (~rama@2601:640:10e:f08c:bcb6:2f19:a9f4:71cc)
[01:19:42] *** Joins: Jefren (~Jefren@208.104.190.60)
[01:19:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:20:46] <rannnn8888> where i can ask sqlite DB fix active channle ?
[01:20:56] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[01:21:13] <energizer> rannnn8888: ##sqlite
[01:21:32] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[01:21:47] *** Joins: fikran (~fikran@user/fikran)
[01:21:48] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[01:21:58] <rannnn8888> energizer Familiar the group but most of the day inactive: X
[01:22:38] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[01:22:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:23:39] <energizer> yeah. maybe surprising for a piece of software with 4 billion installs, but ¯\_(ツ)_/¯
[01:24:09] *** Joins: sudomannn (~sudomann@2601:543:100:2e3:428:ad1b:5280:1916)
[01:24:24] *** Quits: ianliu (~ianliu@201-92-11-84.dsl.telesp.net.br) (Quit: WeeChat 3.2.1)
[01:27:02] *** Quits: Jefren (~Jefren@208.104.190.60) (Ping timeout: 252 seconds)
[01:27:06] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[01:27:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: bbl)
[01:28:17] *** Quits: sudomann (~sudomann@86.106.143.76) (Ping timeout: 264 seconds)
[01:28:26] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 246 seconds)
[01:29:07] *** Joins: Jefren (~Jefren@70.35.67.52)
[01:33:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:33:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:34:27] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[01:34:53] *** Quits: Jefren (~Jefren@70.35.67.52) (Ping timeout: 264 seconds)
[01:36:10] *** Quits: rama (~rama@2601:640:10e:f08c:bcb6:2f19:a9f4:71cc) (Remote host closed the connection)
[01:36:22] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:36:29] *** Joins: Jefren (~Jefren@70.35.66.153)
[01:37:26] *** dlam1 is now known as dlam
[01:38:09] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:38:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[01:39:09] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:40:01] *** Joins: heco (~redrum@user/redrum88)
[01:40:15] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[01:41:58] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:43:16] <theseb> f-string puzzle...how to manage outer braces like when making JSON string!? ...e.g. this gives an error..how fix?.... f'{"email" : "{email}"}'
[01:43:52] <theseb> ValueError: Invalid format specifier
[01:43:53] <Repiphany> {"email": f"{email}"}
[01:44:09] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.3)
[01:44:09] <Repiphany> Oh, I derped
[01:44:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:44:21] <theseb> Repiphany: but i need to set a string var!!...e.g. my_json = ....
[01:44:43] *** Parts: heco (~redrum@user/redrum88) ()
[01:44:44] <theseb> email = "foo@bar.com" ; my_json = f'{"email" : "{email}"}'
[01:44:46] <Repiphany> f'{{"email": "{email}"}}'
[01:44:59] * theseb tries
[01:45:14] <theseb> Repiphany: it worked! thanks!
[01:45:21] <Repiphany> But really, you should use `import json` rather than trying to make your own json strings
[01:45:51] <Repiphany> `import json; my_json = json.dumps({'email': email})`
[01:46:02] <theseb> Repiphany: actually i was trying to do a massive curl command with subprocess that sent JSON in POST request to a server if you must know
[01:46:17] *** Quits: Jefren (~Jefren@70.35.66.153) (Ping timeout: 264 seconds)
[01:46:26] <theseb> Repiphany: i presume you'll to use the requests module for that?
[01:46:46] <Repiphany> I don't do too much web stuff
[01:47:43] <jinsun> yes, use requests, it should be as simple as `requests.post(url, json=your_dict)`
[01:48:00] *** Joins: Jefren (~Jefren@70.35.66.230)
[01:48:15] <jinsun> don't even have to import json
[01:48:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:48:27] <theseb> jinsun: nice
[01:49:19] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 265 seconds)
[01:50:02] *** Joins: Auron956 (Auron956@user/auron)
[01:50:16] *** Joins: Guddu (~Guddu@190.84.88.92)
[01:51:14] *** Joins: redrum88 (~redrum88@user/redrum88)
[01:51:34] <SnoopJ> braxas, there's been an impressive amount of activity on that issue already, if you've not seen it (not sure if one of the authors of replies is you)
[01:51:44] <control> hello, im trying to run hello world program using pyopencl. what im doing wrong? https://bpa.st/NLEQ
[01:51:47] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 252 seconds)
[01:51:50] <control> cant get the string printed
[01:52:53] *** Quits: Jefren (~Jefren@70.35.66.230) (Ping timeout: 252 seconds)
[01:52:53] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[01:53:50] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:53:54] *** Joins: nuala (~nuala@user/nuala)
[01:54:08] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:55:23] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 268 seconds)
[01:55:32] <control> howto print *msg out of the kernel?
[01:56:05] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 265 seconds)
[01:56:11] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[01:56:42] <SnoopJ> control, the kernel you have written accepts (and modifies) a pointer and returns nothing (`void`).
[01:57:17] <SnoopJ> if you're following a particular guide, it would help us to see it so we could follow along
[01:57:25] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[01:57:34] <control> i just want to print hello kernel to get a better understanding
[01:57:53] <SnoopJ> control, do you understand what I said before, that your program modifies `msg` and returns nothing?
[01:57:55] *** Quits: maroloccio (~marolocci@93-136-18-134.adsl.net.t-com.hr) (Quit: WeeChat 3.0)
[01:57:56] *** Joins: Jefren (~Jefren@70.35.66.44)
[01:58:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 264 seconds)
[01:58:53] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 264 seconds)
[01:58:59] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 265 seconds)
[01:58:59] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[01:59:05] <control> howto make it work?
[01:59:55] <control> just to print that msg and understand pyopencl and kernels
[01:59:57] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:03:20] *** Quits: Jefren (~Jefren@70.35.66.44) (Ping timeout: 265 seconds)
[02:04:13] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:04:14] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:04:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[02:04:55] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:05:18] *** Joins: Jefren (~Jefren@70.35.67.244)
[02:05:33] *** Joins: redrum88_ (~redrum88@user/redrum88)
[02:06:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:41] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:07:32] *** Quits: nuala (~nuala@user/nuala) (Quit: ()
[02:08:41] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[02:08:51] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Remote host closed the connection)
[02:08:52] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[02:09:08] *** Quits: redrum88 (~redrum88@user/redrum88) (Ping timeout: 265 seconds)
[02:09:56] *** Quits: Jefren (~Jefren@70.35.67.244) (Ping timeout: 252 seconds)
[02:11:40] *** Joins: Jefren (~Jefren@70.35.67.134)
[02:12:17] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[02:12:32] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:12:41] *** Quits: pycode (~pycode@2001:b07:5d28:551:2be5:d944:de9b:a86c) (Ping timeout: 264 seconds)
[02:16:32] *** Quits: Jefren (~Jefren@70.35.67.134) (Ping timeout: 252 seconds)
[02:16:44] *** Quits: control (~v1@user/control) (Ping timeout: 246 seconds)
[02:17:04] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[02:20:50] *** Quits: frostschutz (~frostschu@2a01:c22:cde6:4400:2d21:9148:1c1c:1f2) (Remote host closed the connection)
[02:21:37] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:23:01] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[02:23:09] *** Joins: Atque (~Atque@user/atque)
[02:24:13] *** Joins: ShinyCyril (~ShinyCyri@209.104.70.126)
[02:28:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[02:28:48] *** Joins: gggp (~textual@125.33.92.174)
[02:38:29] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 264 seconds)
[02:39:11] *** Joins: Jefren (~Jefren@206.253.157.250)
[02:40:48] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[02:42:00] *** Quits: vimart (~vimart@85.255.237.200) (Ping timeout: 265 seconds)
[02:44:47] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[02:45:41] *** Quits: Jefren (~Jefren@206.253.157.250) (Ping timeout: 264 seconds)
[02:45:41] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[02:47:34] *** Joins: Jefren (~Jefren@70.35.67.189)
[02:49:38] *** Quits: eem (~eem@200116b80f9fcf00ad45706976794fe0.dip.versatel-1u1.de) (Quit: WeeChat 3.3)
[02:50:01] *** Joins: rama (~rama@73.93.154.233)
[02:50:07] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:50:42] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:51:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:52:25] *** Joins: Wulf (~Wulf@user/wulf)
[02:52:47] *** Quits: Jefren (~Jefren@70.35.67.189) (Ping timeout: 246 seconds)
[02:54:24] *** Joins: dre (~dre@2001:8003:c932:c301:a33d:f011:dc0c:a672)
[02:56:24] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[02:57:14] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[02:57:35] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:00:32] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[03:00:33] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[03:01:28] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[03:03:41] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[03:04:10] *** Quits: Auron956 (Auron956@user/auron) (Remote host closed the connection)
[03:04:19] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[03:06:10] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[03:10:23] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[03:12:12] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[03:16:02] *** Joins: Jefren (~Jefren@70.35.67.53)
[03:17:17] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[03:17:34] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:18:46] *** Joins: thiras (~thiras@user/thiras)
[03:19:44] *** Parts: fedorafan (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[03:22:01] *** Quits: rama (~rama@73.93.154.233) (Remote host closed the connection)
[03:23:05] *** Joins: rama (~rama@2601:640:10e:f08c:10f6:868c:9fa4:dad1)
[03:24:41] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 264 seconds)
[03:26:41] *** Lando-SpacePimp is now known as Lando-DinoEater
[03:27:26] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[03:28:53] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 264 seconds)
[03:29:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[03:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:03] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[03:31:09] *** Joins: fikran (~fikran@user/fikran)
[03:33:51] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[03:34:25] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[03:37:20] *** Quits: rama (~rama@2601:640:10e:f08c:10f6:868c:9fa4:dad1) (Remote host closed the connection)
[03:38:49] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:40:49] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:41:02] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:43:41] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[03:44:39] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:45:38] *** Joins: bpalmer (~user@user/bpalmer)
[03:46:07] *** Joins: Rikusho (~Rikusho@2601:2c1:c200:1d00:9c6c:823a:9384:2758)
[03:46:16] <Rikusho> back with a new problem yay
[03:46:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:46:40] <Rikusho> https://github.com/pxsocs/warden_terminal
[03:46:47] <Rikusho> program im messing with
[03:47:32] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[03:47:38] *** Joins: vimart (~vimart@85.255.237.208)
[03:47:51] *** Joins: Fiji (~Fiji@user/fiji)
[03:47:55] *** Joins: kenoba1 (~kenoba@user/kenoba)
[03:48:07] <Rikusho> when i test small screen out in SSH the test on my small SSH screen shows the large_message properly
[03:48:16] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 252 seconds)
[03:48:16] *** kenoba1 is now known as kenoba
[03:48:17] <Rikusho> when i port to tty1 its small and font color is organe
[03:48:20] <Rikusho> orange*
[03:48:35] <Rikusho> cant figure out where is program this is happening
[03:48:57] *** Joins: kmh (~kmh@p200300df5f1b8800c1ac2219e124c8f7.dip0.t-ipconnect.de)
[03:49:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 264 seconds)
[03:49:31] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: No Ping reply in 180 seconds.)
[03:50:42] *** Joins: mossman93 (~quassel@user/mossman93)
[03:51:30] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[03:51:37] <Rikusho> anyone out there
[03:51:56] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[03:52:31] <aphysically> huh, there's some interesting stuff in functools
[03:52:55] <aphysically> I could see where partials could clean up some otherwise messy looking code and the separate functions by type is interesting I guess
[03:54:29] <Rikusho> could you dumb it down for me hahah
[03:55:53] <Rikusho> the block height moscow and large price all display correctly
[03:56:11] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[03:56:24] <kline> Rikusho, is it just colours/fonts that are different?
[03:56:37] *** Quits: sudomannn (~sudomann@2601:543:100:2e3:428:ad1b:5280:1916) (Read error: Connection reset by peer)
[03:57:25] <Rikusho> sorta but i think it mainly small screen config messing it up
[03:57:31] <Rikusho> whats the URL to share code again
[03:57:33] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:57:44] <kline> bpa.st
[03:58:11] <kline> can you take a screenshot of each, the working and non-working sessions?
[03:58:20] <kline> im 99% sure i know what the issue is but itd be nice to confirm
[03:58:46] <Rikusho> https://bpa.st/KHCQ
[03:58:51] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[03:58:56] <Rikusho> sure thing
[03:59:30] *** Joins: rama (~rama@2601:640:10e:f08c:10f6:868c:9fa4:dad1)
[04:00:33] <Rikusho> how do I share a screen shot lol
[04:00:54] <SamuelMarks> asciicinema has a guide and a tool
[04:00:59] <grym> Rikusho: 0x0.st is not bad for sharing images
[04:00:59] <kline> do you have the files there still?
[04:01:09] <kline> SamuelMarks, i dont really want asciinema
[04:01:44] <kline> Rikusho, curl -F'file=@FileNameGoesHere.png' https://0x0.st
[04:01:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[04:02:06] <kline> where the filename is whatever the screenshot filename you captured is
[04:02:16] <kline> so curl knows what image to upload
[04:03:36] <Rikusho> ok let me fumble through using that lol
[04:03:54] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:04:21] *** Joins: mickey (~user@user/mickey)
[04:04:41] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:04:49] *** Quits: jazzy (~jaziz@2600:380:4628:69b2:6174:7fd0:7aa3:73fa) (Ping timeout: 252 seconds)
[04:04:53] *** Quits: flokuehn (~flokuehn@i5E86B30B.versanet.de) (Ping timeout: 246 seconds)
[04:06:56] *** Joins: flokuehn (~flokuehn@mue-88-130-54-008.dsl.tropolys.de)
[04:07:05] *** Quits: vimart (~vimart@85.255.237.208) (Ping timeout: 252 seconds)
[04:07:21] *** Joins: jazzy (~jaziz@2600:380:844f:a894:6922:2ea:6577:f7f7)
[04:07:48] <Rikusho> saying failed to open/read local data from file/application
[04:08:04] <Rikusho> my wife is yelling for me now so we shall resume this another time xD
[04:08:14] <kline> enjoy
[04:09:13] <kline> Rikusho, fwiw, when you say tty1, if you mean the linux virtual terminals you get outside of a graphical session, its likely to behave differently from more sophisticated terminal emulators
[04:09:44] <kline> even on places where they match, they still can use different configurations, so things like terminal colours, fonts, etc can be different
[04:10:19] <kline> your selected terminal font might well not have the required glyphs etc, but really itd be better to see the pics rather than shooting from the hip knowing that the linux ttys arent all that
[04:12:23] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:12:52] *** Joins: djapo (~archangel@user/djapo)
[04:14:33] <Gustavo6046> how do I have a decorator in a class that is also an attr.s that is also a typing.Protocol, where methods this decorator is applied to are appended to a list or set that is an instance member, such that this list can be accessed in another method?
[04:14:42] <Gustavo6046> Is this even doable without metaclasses?
[04:14:47] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[04:15:08] <Gustavo6046> In this case, I have a few simple important parts
[04:15:12] <Gustavo6046>   start_funcs: list[typing.AsyncCallable[None, None]] = attr.Factory(list)
[04:15:17] *** Joins: sgn_ (~sgn@user/sgn)
[04:15:20] <Gustavo6046>   def async_start(func): ... # this would be the decorator
[04:15:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:15:35] <Gustavo6046>   for func in self.start_funcs: nursery.start_soon(func) # where 'nursery' is a trio.Nursery, for context
[04:15:41] <Gustavo6046> that last line is in another function btw
[04:15:46] <Gustavo6046> it's just the reason I am using start_funcs
[04:15:52] *** Quits: rama (~rama@2601:640:10e:f08c:10f6:868c:9fa4:dad1) (Remote host closed the connection)
[04:16:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[04:16:36] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:16:40] <Gustavo6046> I could also have start_funcs be a list of str and use getattr
[04:16:49] *** Joins: sgn (~sgn@user/sgn)
[04:17:50] <Gustavo6046> Then that skips the need for a decorator altogether :D
[04:19:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[04:19:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Read error: Connection reset by peer)
[04:19:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:19:35] *** Joins: zeden (~zeden@user/zeden)
[04:19:35] *** Joins: sgn (~sgn@user/sgn)
[04:19:42] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:19:50] *** Joins: gutt_ (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[04:19:56] *** Joins: bodozene_ (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[04:19:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:21:08] *** Joins: vicfred (~vicfred@user/vicfred)
[04:22:15] *** Joins: rama (~rama@73.93.154.233)
[04:23:02] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[04:23:02] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[04:23:02] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 252 seconds)
[04:23:24] *** Quits: rama (~rama@73.93.154.233) (Read error: Connection reset by peer)
[04:23:57] *** Joins: srhm (~srhm@user/srhm)
[04:25:27] *** Quits: qpdb_ (~qpdb@user/qpdb) (Ping timeout: 268 seconds)
[04:27:48] *** Joins: y1n (~y1n@77.119.163.144.wireless.dyn.drei.com)
[04:27:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:28:18] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:28:27] <Rikusho> kline im back and the tty1 is a TFT screen wired up to my BTC node. all the others texts display properly except for this one widget which is whats strange about it
[04:29:13] *** Joins: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b)
[04:29:20] *** Quits: redrum88_ (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:29:24] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[04:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:39] *** Joins: rindolf (~shlomif@87.68.240.100.adsl.012.net.il)
[04:31:33] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[04:31:48] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[04:34:27] <Rikusho> ok so how do i get the 0x0.st website curl function to work properly so i can figure out why this code isnt working lol
[04:34:58] *** Joins: vlm (~vlm@user/vlm)
[04:36:26] *** Joins: MercilessDeth (~brad@136.49.61.2)
[04:36:57] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2.1)
[04:38:24] *** Joins: qpdb_ (~qpdb@user/qpdb)
[04:39:52] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:41:08] *** Joins: rama (~rama@73.93.154.233)
[04:43:40] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 260 seconds)
[04:44:17] *** Quits: rama (~rama@73.93.154.233) (Remote host closed the connection)
[04:47:06] <Rikusho> now im getting segmentation fault when i try to upload the .png to 0x0
[04:47:07] <Rikusho> lol
[04:48:56] *** Joins: mxp (~mxp@185.16.205.131)
[04:50:07] *** Joins: rama (~rama@73.93.154.233)
[04:51:04] <Rikusho> omg i got it haha
[04:51:29] <Rikusho> http://0x0.st/-YrU.png this is the font i dont want
[04:52:15] <Rikusho> http://0x0.st/-YrG.png this is how i want the font to look
[04:53:16] <Rikusho> kline
[04:53:34] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:54:43] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[04:55:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:55:42] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[04:55:59] *** Joins: mickey (~user@user/mickey)
[04:57:35] <Rikusho> *crickets*
[05:00:48] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[05:00:51] <kline> Rikusho, yes, its choosing to use ascii art is the terminal is big and just plain text if it is small
[05:01:20] <Rikusho> i want to force it to use the ascii art since it will obvi fit
[05:01:27] *** Joins: srhm (~srhm@user/srhm)
[05:01:36] <Rikusho> is that in the node_warden.py file or the dashboard.py file
[05:02:25] *** Quits: OutreEE (~OutreEE@modemcable105.60-176-173.mc.videotron.ca) (Quit: leaving)
[05:03:25] *** Quits: Rikusho (~Rikusho@2601:2c1:c200:1d00:9c6c:823a:9384:2758) (Quit: Client closed)
[05:04:03] *** Joins: Rikusho (~Rikusho@2601:2c1:c200:1d00:9c6c:823a:9384:2758)
[05:04:17] <Rikusho> i searched for asci and didnt see anything in either file
[05:04:32] *** Joins: califax- (~califax@user/califx)
[05:04:49] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[05:05:00] <kline> Rikusho, theres similar logic in both
[05:05:26] <Rikusho> what line are you looking at in either
[05:06:55] <Gustavo6046> what kind of RPC can I do with trio?
[05:07:11] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 246 seconds)
[05:07:21] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:07:41] <Gustavo6046> probably just tcp, right?
[05:07:45] *** brabrax_ is now known as brabrax
[05:07:55] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[05:08:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:08:28] *** califax- is now known as califax
[05:09:45] <kline> Rikusho, the function check_screen_size()
[05:10:04] <Rikusho> i see that def
[05:10:13] <kline> you can see it checks the number of rows and columns you have, and then sets small or extra small display flags
[05:10:18] <kline> you might want to adjust those numbers
[05:10:28] <Rikusho> i changed the 'small' to standard to trick it and that didnt fix it
[05:11:18] <kline> if rows < 60 or columns < 172:
[05:12:00] *** Quits: rama (~rama@73.93.154.233) (Remote host closed the connection)
[05:12:11] <Rikusho> mines 20 x 53
[05:12:29] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[05:12:36] <Rikusho> but if i change that logic wont it be way to big for everything else
[05:12:39] <Rikusho> hell lets try it lol
[05:12:44] <kline> probably
[05:13:02] <Rikusho> i just want to spoof it for that one widget
[05:13:08] <kline> if you just want to change that module then you need to find that module and adjust it
[05:13:16] <kline> look for all the places that use those size flags
[05:13:30] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:13:41] *** Joins: frost (~frost@59.71.243.104)
[05:15:21] <kline> Rikusho, you may need ot delete any generated .pkl sizes
[05:16:23] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[05:16:30] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d) (Read error: No route to host)
[05:16:33] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d)
[05:16:55] <Rikusho> how would i go about doing that
[05:17:14] <kline> just look for and delete .pkl files
[05:17:21] <kline> `find . | grep pkl`
[05:17:54] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[05:17:55] <kline> it looks like some config details are saved in these and they might be restored between sessions
[05:19:56] <Rikusho> use rm to delete?
[05:20:56] <Rikusho> i feel like there is an easier way to make large message work lol
[05:20:57] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[05:21:10] <Rikusho> but i appreicate your help nonetheless
[05:23:16] *** nomic2 is now known as nomic
[05:29:53] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:dd78:d72c:c0c7:957f) (Read error: Connection reset by peer)
[05:34:32] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[05:35:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:35:46] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:35:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:36:42] *** Quits: Rikusho (~Rikusho@2601:2c1:c200:1d00:9c6c:823a:9384:2758) (Ping timeout: 256 seconds)
[05:38:11] *** ExpiredKebab is now known as ExpiredKebab_
[05:38:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[05:38:49] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[05:39:24] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:39:32] *** ExpiredKebab_ is now known as ExpiredKebab
[05:40:32] *** Joins: fikran (~fikran@user/fikran)
[05:43:39] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:45:37] *** Joins: lerax (~user@177-104-241-177.gbsn.com.br)
[05:45:41] *** Joins: djapo (~archangel@user/djapo)
[05:46:38] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:52:17] *** Quits: niemal (~niemal@user/niemal) (Ping timeout: 264 seconds)
[05:52:33] *** Quits: ShinyCyril (~ShinyCyri@209.104.70.126) (Quit: ShinyCyril)
[05:53:33] *** Parts: lerax (~user@177-104-241-177.gbsn.com.br) (ERC (IRC client for Emacs 27.2))
[05:55:49] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Remote host closed the connection)
[05:56:20] <Gustavo6046> For named callbacks, what's your thoughts on hasattr(self, 'handle_' + handle_type_name) or variations thereof?
[05:56:23] <Gustavo6046> What's a good alternative?
[05:56:35] <Gustavo6046> A dict doesn't look good if you need a method that populates it from self..... methods.
[05:57:58] <purplex> i want to check if string contains substring, i can do that by using 'in' but i want to check if it is present at the start e.g. if 'cat' in 'catfish', is that possible without regex? i'm thinking of using 'find' and checking if it returns '0'
[05:58:49] <energizer> purplex: str.startswith
[05:59:34] <purplex> ah i knew that but forgot, thanks
[06:02:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[06:03:05] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 264 seconds)
[06:03:41] *** Quits: gggp (~textual@125.33.92.174) (Ping timeout: 252 seconds)
[06:05:56] *** Joins: gggp (~textual@125.33.92.174)
[06:06:27] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[06:06:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[06:07:13] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[06:09:38] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:11:50] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[06:13:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:13:53] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 264 seconds)
[06:15:44] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:16:20] *** Quits: y1n (~y1n@77.119.163.144.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[06:16:33] *** Joins: semeion (~semeion@user/semeion)
[06:17:44] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:18:29] <dre> Gustavo6046, i think hasattr / getattr() is fine and good. does what it needs, and is fairly understandable.
[06:18:37] <Gustavo6046> ah, okay
[06:20:44] *** Quits: gggp (~textual@125.33.92.174) (Ping timeout: 252 seconds)
[06:20:52] <jmcantrell> I'm trying to package my project for arch, using `python setup.py install --root="${pkgdir}"`, but the directory tree in pkgdir looks like $pkgdir/home/user/path/to/project. This doesn't seem right. What am I doing wrong?
[06:20:57] <Gustavo6046> thanks!
[06:22:01] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[06:25:26] *** Joins: gggp (~textual@60.10.194.42)
[06:29:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[06:29:19] *** Joins: califax (~califax@user/califx)
[06:31:53] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 246 seconds)
[06:32:28] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[06:33:06] *** Joins: gggp (~textual@125.33.92.174)
[06:33:16] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:37:06] *** Quits: gggp (~textual@125.33.92.174) (Client Quit)
[06:39:41] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[06:40:34] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:42:18] *** Joins: vimart (~vimart@85.255.237.205)
[06:42:31] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[06:44:54] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Remote host closed the connection)
[06:45:30] *** Joins: p-i- (~Ohmu@223.206.70.53)
[06:46:53] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[06:49:00] *** Joins: fdan (~fdan@192.146.154.3)
[06:49:14] <fdan> I have this as an input AABBBCCCCDDDEEA
[06:49:22] <fdan> and i want this as an output A2B3C4D3E2
[06:49:29] <fdan> can someone help me with a simple snippet
[06:50:28] <phy1729> What about that last A?
[06:50:46] <fdan> no i dont want to include that. only the letters that are consecutive
[06:50:57] <phy1729> and at least 2 of them?
[06:51:03] <fdan> yes
[06:51:12] <fdan> i used zip(string,string[1:])
[06:51:15] <fdan> but i dont want to use that
[06:51:52] <KirkMcDonald> fdan: itertools.groupby()
[06:52:10] <fdan> i would not want itertools or collections as well..
[06:52:33] *** Joins: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au)
[06:52:43] <ravindUwU> Hiya
[06:53:30] <energizer> fdan: why do you want to avoid those modules?
[06:53:42] <fdan> just to keep it very simple
[06:53:51] <energizer> what do you mean by simple?
[06:53:52] <phy1729> ''.join(f'{i[1]}{len(i[0])}' for i in re.findall(r'((.)\2+)', 'AABBBCCCCDDDEEA'))      I wouldn't call it simple though
[06:54:10] <ravindUwU> So my __init__.py imports a bunch of stuff from a sibling script and declares it in the __all__ array. One of those siblings uses a different sibling as `from . import ...`. Pylance detects an import cycle in __init__. Thoughts on how to avoid this?
[06:54:11] <KirkMcDonald> fdan: But the code you write is going to be considerably more complex if you avoid the things which will make it simpler.
[06:54:25] *** Joins: P1ro (~quassel@user/p1ro)
[06:54:50] <KirkMcDonald> fdan: groupby() makes it real simple: https://bpa.st/23YQ
[06:55:19] <energizer> ravindUwU: if it's really that dumb i would file an issue with pylanc
[06:55:48] <energizer> and disable the check
[06:56:21] *** Joins: elkclone (~elkclone@user/elkclone)
[06:56:24] <ravindUwU> okay wait it's not even Pylance; this looks like VSCode? Maybe the LSP?
[06:57:00] <fdan> KirkMcDonald https://dpaste.org/mbX2
[06:57:07] <ravindUwU> oh wait it is Pylance but it's not an error that can be disabled T-T
[06:57:12] <fdan> i had something like this, but i dont want to use zip
[06:57:17] <ravindUwU> energizer, thanks! I'll see what I can do ^^
[06:57:21] <fdan> any other alternatives
[06:57:57] <KirkMcDonald> fdan: Loop and remember the value from the previous iteration.
[06:58:11] <fdan> could you please share a snippet
[06:58:45] <energizer> oh homework
[06:59:15] <aphysically> fdan: KirkMcDonald I would have reached for collections.counter, groupby is probably more correct
[06:59:39] <fdan> energizer no but for learning
[06:59:42] <KirkMcDonald> fdan: https://bpa.st/4POA
[07:01:11] *** Joins: x28girl (~x28girl@user/x28girl)
[07:01:33] <aphysically> right now I don't have good knowledge of the tools available in itertools and functools so I often miss when I could have accomplished something easier and instead wrote my code a different way
[07:01:39] *** Quits: x28girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[07:01:59] <aphysically> sometimes that different way is probably better in the long run but still, I should be more familiar with functools/itertools :P
[07:02:18] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:02:22] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 260 seconds)
[07:02:26] *** Joins: x28girl (~x28girl@user/x28girl)
[07:03:45] <fdan> thanks KirkMcDonald
[07:04:03] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[07:04:28] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[07:04:52] *** Joins: x28girl (~x28girl@user/x28girl)
[07:05:21] *** Quits: x28girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[07:05:59] *** Joins: x28girl (~x28girl@user/x28girl)
[07:06:29] *** Quits: x28girl (~x28girl@user/x28girl) (Max SendQ exceeded)
[07:07:09] *** Joins: x28girl (~x28girl@user/x28girl)
[07:08:03] *** Quits: x28girl (~x28girl@user/x28girl) (Remote host closed the connection)
[07:08:26] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[07:08:38] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[07:09:12] *** Joins: sartan (~sartan@user/sartan)
[07:11:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[07:12:50] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:14:10] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[07:16:09] <stealth_> hmm there is 3 'A' not 2
[07:25:29] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:26:47] <phy1729> is there a stdlib thing for ('a', 'b', 'c') -> [(,), ('a',), ('a', 'b'), ('a', 'b', 'c')] ?
[07:27:37] <stealth_> phy1729, `pairwise` https://docs.python.org/3/library/itertools.html
[07:27:57] <KirkMcDonald> phy1729: No, but it's just e.g. [a[:i] for i in range(len(a))]
[07:28:04] <KirkMcDonald> stealth_: Hmm? That's something else.
[07:28:16] <phy1729> fair enough; thanks
[07:28:24] *** Joins: danielcamiel (~danielcam@pa49-199-251-197.pa.vic.optusnet.com.au)
[07:28:28] <stealth_> phy1729, sorry i meant `powerset` maybe?
[07:28:42] <phy1729> that's be 2^n not n+1
[07:29:48] <KirkMcDonald> phy1729: Also, `range(len(a)+1)`
[07:34:39] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:35:19] *** Quits: Lando-DinoEater (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[07:36:02] *** Joins: fdan (~fdan@192.146.154.3)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:32] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d03:d63f:1c83:f768)
[07:40:34] *** Joins: djapo (~archangel@user/djapo)
[07:42:31] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[07:42:39] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:42:58] *** Quits: Linux77 (~Linux7_7@186.233.182.243) (Ping timeout: 260 seconds)
[07:44:05] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:46:09] *** Joins: ubert (~Thunderbi@178.115.76.102.wireless.dyn.drei.com)
[07:47:31] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:dd63:ce8:3598:64c7) (Remote host closed the connection)
[07:47:56] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:4c54:9931:a83c:8ecb)
[07:47:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[07:48:04] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[07:48:06] <PamiPetteri> http://paste.dy.fi/Xza
[07:49:55] *** Joins: fikran (~fikran@user/fikran)
[07:50:34] <stealth_> PamiPetteri, do you have a question?
[07:51:57] *** Quits: sartan (~sartan@user/sartan) (Read error: Connection reset by peer)
[07:52:28] *** Quits: knipster50 (~knipster@user/knipster) (Ping timeout: 252 seconds)
[07:55:10] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 240 seconds)
[07:58:35] *** Quits: bodozene_ (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[07:59:26] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[08:00:01] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[08:00:22] *** Joins: mickey (~user@user/mickey)
[08:00:24] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[08:02:13] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[08:02:46] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[08:03:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:04:02] *** Joins: Samian (~Sami@user/samian)
[08:06:29] *** Joins: brentaarnold (~brentaarn@24.112.61.90)
[08:06:32] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[08:07:17] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 265 seconds)
[08:12:29] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[08:12:55] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[08:16:57] <ravindUwU> energizer, https://github.com/microsoft/pylance-release/issues/1864 :)
[08:17:44] *** Parts: ravindUwU (~ravindUwU@n110-22-100-22.sun3.vic.optusnet.com.au) (KTHXBAI)
[08:20:20] *** Quits: LiftLeft (~LiftLeft@172.83.47.119) (Ping timeout: 265 seconds)
[08:20:46] *** Quits: ubert (~Thunderbi@178.115.76.102.wireless.dyn.drei.com) (Remote host closed the connection)
[08:21:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:21:16] <stealth_> ravish0007, `from .` looks in `__init__.py` when thn tried to load `from .primary import Foo` which causes the problem
[08:22:30] <stealth_> sorry ravish0007 wrong person.
[08:22:30] *** Joins: wyclif (~wyclif@user/wyclif)
[08:22:38] <stealth_> darn ppl coming and leaving right away.
[08:27:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:27:59] *** Joins: wyclif (~wyclif@user/wyclif)
[08:32:45] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[08:33:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[08:33:08] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[08:33:20] *** Joins: stranac (~stranac@195.29.239.126)
[08:33:24] *** Joins: metaace (~metaace@user/metaace)
[08:33:28] *** Joins: wyclif (~wyclif@user/wyclif)
[08:34:09] *** Quits: faceface (~faceface@user/faceface) (Quit: Lost terminal)
[08:35:30] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[08:35:52] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d) (Quit: Leaving)
[08:36:06] <orbisvicis> Do I have to worry about the stdout/print buffer when threading prints?
[08:36:37] <orbisvicis> for example, I print with a lock, but are there any buffering issues that require flush=True ?
[08:37:32] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:37:54] *** Joins: mickey (~user@user/mickey)
[08:38:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:38:35] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[08:38:59] *** Joins: wyclif (~wyclif@user/wyclif)
[08:41:04] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[08:42:54] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[08:43:26] <KirkMcDonald> orbisvicis: POSIX provides that writes smaller than the buffer are atomic. This mostly means that writes under 4096 bytes will be atomic.
[08:43:53] <KirkMcDonald> orbisvicis: Writes larger than that may be interleaved.
[08:44:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:44:17] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[08:44:28] <Gustavo6046> I'm doing my RPC from scratch with trio lol
[08:44:33] <Gustavo6046> pretty much JSON over TCP
[08:44:53] *** Joins: wyclif (~wyclif@user/wyclif)
[08:44:55] <Gustavo6046> it probably sucks, and it looks a little convoluted, but I'll want to know what you think once I push those changes
[08:45:20] <jim> hi, None.__class__ -> NoneType, but 1.__class__ is a syntax error, coulld you make some comments on this?
[08:45:34] <KirkMcDonald> jim: The `1.` lexes as a float.
[08:45:44] <Repiphany> (1).__class__
[08:46:17] <jim> ohh... good point :)
[08:46:27] <orbisvicis> KirkMcDonald, that's stdout.write and not print? iirc print appending a newlines is not atomic
[08:47:07] <KirkMcDonald> orbisvicis: It's really about the underlying write() syscall.
[08:47:33] <orbisvicis> well I have locks anyway for another operation
[08:47:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:47:41] <KirkMcDonald> orbisvicis: print() should construct the entire string being printed, then write it all at once.
[08:47:52] <orbisvicis> KirkMcDonald, and what about flushing, is it necessary?
[08:48:46] <KirkMcDonald> orbisvicis: Probably not.
[08:48:51] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[08:49:01] <KirkMcDonald> orbisvicis: But it might depend.
[08:49:21] <orbisvicis> KirkMcDonald, what's an example in which flushing is important?
[08:49:57] <KirkMcDonald> orbisvicis: If stdout is connected to somethign other than the terminal, then it won't be line-buffered.
[08:50:01] <KirkMcDonald> something*
[08:50:36] <KirkMcDonald> orbisvicis: And I'm not certain off-hand how this will behave with writes from multiple threads.
[08:52:19] *** Quits: Affliction (affliction@user/affliction) (Changing host)
[08:52:19] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[08:52:21] <orbisvicis> KirkMcDonald, I thought buffering was immaterial. What's worst case you can imagine, assuming the prints are already locked?
[08:52:59] <KirkMcDonald> orbisvicis: If the writes are being synchronized with a lock, then there should be no problem.
[08:53:06] <orbisvicis> ok thanks
[08:53:17] <orbisvicis> btw, I'm pretty sure that newline thing was python2 only as I can't reproduce it:
[08:53:21] <orbisvicis> https://ejrh.wordpress.com/2011/09/18/output-synchronisation-in-python/
[08:55:19] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[08:59:36] <stealth_> orbisvicis, did you change the stdout file by any chance?
[09:01:15] <orbisvicis> no, default interactive
[09:01:51] <Gustavo6046> Now you can rate my stuff, from zero to AAH, THERE'S BLOOD IN MY EYES :D
[09:02:02] <stealth_> could be a bug in python somewhere, i find have to use `flush` when dealing with async sometimes
[09:02:24] <Gustavo6046> Common RPC: https://github.com/Gustavo6046/triarc/tree/work/dev/1.0.0/reactor/triarc/rpc.py
[09:02:29] <orbisvicis> yeah thats a bit odd especially without threading
[09:02:43] <Gustavo6046> RPC from the bot side: https://github.com/Gustavo6046/triarc/tree/work/dev/1.0.0/reactor/triarc/bot/interface/rpc.py
[09:02:51] <Gustavo6046> RPC fro the reactor side: https://github.com/Gustavo6046/triarc/tree/work/dev/1.0.0/reactor/triarc/reactor/remote/rpc.py
[09:02:52] *** Quits: danielcamiel (~danielcam@pa49-199-251-197.pa.vic.optusnet.com.au) (Ping timeout: 265 seconds)
[09:02:52] *** Quits: vimart (~vimart@85.255.237.205) (Ping timeout: 265 seconds)
[09:02:55] <Gustavo6046> This is all I think
[09:03:15] <Gustavo6046> But check related/imported modules too if you want, e.g. statedhandler.py as imported from the root rpc.py.
[09:04:02] <stealth_> what is line buffer anyways! when you read a file, it has a default buffer set to 1-8k, and if it finds '\n' it will flush.
[09:04:20] <Gustavo6046> It does use Trio pretty thoroughly
[09:04:39] <Gustavo6046> Anyway, I think I'm going to sleep very soon. So I dunno if I'll be able to stick around for the... reactions. :<
[09:04:44] <Gustavo6046> Haha, reactor, reactions, pun unintended
[09:04:48] *** Joins: vimart (~vimart@85.255.237.205)
[09:05:28] <Gustavo6046> So yeah, good night! <3
[09:05:53] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 246 seconds)
[09:07:48] *** Joins: control (~v1@user/control)
[09:08:06] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[09:08:18] *** Joins: dvx (~dvx@185.63.97.64)
[09:10:52] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[09:14:10] *** Quits: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com) (Quit: leaving)
[09:16:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:16:45] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[09:16:56] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:17:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:21:56] *** Joins: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com)
[09:23:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:23:08] *** Joins: otisolsen70 (~otisolsen@212.97.249.65)
[09:24:05] *** Joins: gggp (~textual@60.10.194.42)
[09:26:49] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[09:27:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:28:43] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[09:29:16] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:31:02] *** Quits: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b) (Remote host closed the connection)
[09:31:13] <energizer> https://github.com/microsoft/pylance-release/issues/1864 answer ~dont use it then~ is a little too easy, no? i mean it is an import cycle, but if the checker fails on that it's not gonna be very useful
[09:31:20] *** Joins: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b)
[09:32:27] <energizer> (just looking for someone to tell me i haven't lost my marbles)
[09:33:00] *** Quits: otisolsen70 (~otisolsen@212.97.249.65) (Remote host closed the connection)
[09:33:23] *** Joins: otisolsen70 (~otisolsen@212.97.249.65)
[09:33:43] *** Joins: gggp (~textual@125.33.92.174)
[09:34:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[09:35:36] <energizer> energizer, you haven't lost your marbles. a cycle detector that complains about top-level exports and can't be disabled linewise has too much noise for the signal
[09:36:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:36:42] <stealth_> energizer, it was actually an circular import
[09:36:56] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d03:d63f:1c83:f768) (Read error: Connection reset by peer)
[09:37:04] <energizer> yes i said that
[09:37:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[09:39:08] <stealth_> energizer, do you manage that pylance or something?
[09:39:28] *** Quits: otisolsen70 (~otisolsen@212.97.249.65) (Remote host closed the connection)
[09:39:31] <energizer> no. i mean i said it here ^
[09:39:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:40:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:40:48] *** Joins: Phase (~phase@user/phase)
[09:41:04] *** Joins: zargon (~robert@140.128.251.133)
[09:41:19] <energizer> ...it's actualy more nuanced than i originally thought
[09:41:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:42:24] * energizer learns to read more carefully
[09:42:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[09:42:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:44:52] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:45:25] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[09:46:28] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:46:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:46:59] *** Joins: seednode (~seednode@user/seednode)
[09:47:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:47:42] *** Joins: amllado (~amllado@45.156.42.81)
[09:48:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:49:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:50:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:51:40] <gegenschein> energizer: so the problem is importing `from .` alone? i.e., importing `from .something` is not first importing the package (`__init__.py`) whereas `from .` is importing it?
[09:52:44] *** Joins: togusa (~togusa@user/togusa)
[09:53:02] *** Quits: gggp (~textual@125.33.92.174) (Ping timeout: 252 seconds)
[09:54:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[09:54:14] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:54:56] <jinsun> it is not actually an issue at runtime, just the static checker is not able to figure it out
[09:55:17] *** Quits: jazzy (~jaziz@2600:380:844f:a894:6922:2ea:6577:f7f7) (Ping timeout: 264 seconds)
[09:55:20] <stealth_> import is not ordered or it doen't load `__init__.py` first, it loads whatever file directory gives it. so inside `__init__.py` it was loading the same file trying to load another module
[09:57:33] <gegenschein> I see, thanks
[09:57:36] <energizer> 1. "from .primary import Foo" executes primary.py, looks up a Foo name.
[09:57:41] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[09:58:00] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[09:58:10] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[09:58:45] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:58:46] *** Joins: manti7 (~manti7@176.10.104.94)
[10:00:58] <energizer> geh i was gonna try to lay out the whole thing but it's too much
[10:01:15] <energizer> anyway yeah jinsun's right
[10:01:43] <gegenschein> :)
[10:02:58] <jinsun> inside primary.py there is a `from . import secondary`, here python will try to lookup secondary in __init__ and not find it, then it will try to import secondary.py which will work
[10:03:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:03:42] <jinsun> but pylance just gives up at primary importing from init and init importing from primary
[10:03:42] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[10:04:08] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[10:04:21] *** Quits: togusa (~togusa@user/togusa) (Quit: Leaving)
[10:07:24] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[10:07:25] *** Joins: willow (~willow@bay.systems)
[10:07:38] *** Joins: hifi (hifi@m.vi.fi)
[10:07:40] <energizer> i don't understand what logic would make `from .secondary import Foo as SecondaryFoo` work (or why that would be desirable)
[10:07:59] <willow> do any python libs support installing/uninstalling packages in the host OS?
[10:08:00] <energizer> s/work/be allowed by pylance/
[10:08:44] <willow> or do i just use shutil.run() with e.g. apt?
[10:08:45] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[10:08:49] <energizer> willow: sure, dnf is written in python
[10:08:55] <jinsun> I guess, with `from .secondary` pylance looks at secondary.py, with `from .` it looks at `__init__.py`
[10:09:08] *** Joins: gusto (~Augustus@109.255.100.54)
[10:09:23] <energizer> willow: (that was a cheeky answer i admit)
[10:09:55] <jinsun> that is what happens when you actually import too, when you import from .secondary init.py is not looked up, directly secondary.py is looked up
[10:10:32] *** Quits: control (~v1@user/control) (Ping timeout: 265 seconds)
[10:10:49] <energizer> willow: subprocess.check_call([foo, bar, baz]) is preferred
[10:10:57] <willow> energizer: thanks I see Debian provides python3-dnf
[10:11:12] <gegenschein> I've found this discussion useful when I have to stop and think about import nuances: https://stackoverflow.com/a/9439518/9257722
[10:11:23] <willow> energizer: over suprocess.run()?
[10:11:55] <energizer> jinsun: yeah i guess that's right
[10:12:00] *** Joins: togusa (~togusa@user/togusa)
[10:12:37] <jim> that's yet -another- package management system you can use in debian...
[10:12:48] *** Joins: upsala (~zcb@185.213.155.160)
[10:15:24] <energizer> willow: oh you asked about shutil.run which doesn't exist
[10:15:47] <energizer> willow: subprocess.run(arglist, check=True) is fine
[10:15:58] <willow> oops i meant subprocess.run() 😊
[10:16:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:16:25] <energizer> willow: just pass a list not a string to run()
[10:16:43] *** Quits: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com) (Quit: leaving)
[10:16:44] <energizer> and do pass check=True
[10:16:49] <stealth_> you can pass str with space
[10:17:04] <energizer> you can but dont
[10:17:05] *** Joins: ndwk (~ndwk@user/ndwk)
[10:17:23] <stealth_> ^ true
[10:17:31] <energizer> the problem being shell injection
[10:17:59] <willow> energizer: yes was confused until i understood that every element in the argument array is a token from the command string
[10:19:45] *** Joins: palasso (~palasso@user/palasso)
[10:19:56] *** Joins: p-i-_ (~Ohmu@223.206.70.53)
[10:21:29] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[10:21:40] <twb> What's the thing that's not types.SimpleNamespace?
[10:21:47] <twb> The one where you name the elements in advance
[10:22:24] <twb> Point = ???('x y'); Point(2,y=3)
[10:22:25] *** Joins: gggp (~textual@123.113.180.17)
[10:22:53] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 264 seconds)
[10:23:06] *** Quits: p-i- (~Ohmu@223.206.70.53) (Ping timeout: 265 seconds)
[10:23:16] <bim9262[m]> namedtuple
[10:23:22] <twb> thanks
[10:23:48] <bim9262[m]> sure, np
[10:27:28] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[10:29:18] <twb> Whereupon I immediately realize int() would be nice: http://ix.io/3zJ5
[10:29:53] *** Quits: NealRame (~a@202-65-87-207.ip4.superloop.com) (Ping timeout: 252 seconds)
[10:30:25] *** Joins: pycode (~pycode@2001:b07:5d28:551:c461:e830:6cc:d7b8)
[10:33:03] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:33:15] *** Quits: willow (~willow@bay.systems) (Quit: willow)
[10:33:29] <stealth_> twb, you know `socket` module have features to look up hostname
[10:34:16] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[10:34:26] <The-Compiler> twb: I'd probably use a dataclass with a "from_apt_line" classmethod which does those conversions
[10:34:45] *** Joins: Wuniu (~Thunderbi@user/wuniu)
[10:35:24] *** Joins: NealRame (~a@202-65-87-207.ip4.superloop.com)
[10:36:03] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[10:36:09] *** Quits: Wuniu (~Thunderbi@user/wuniu) (Client Quit)
[10:36:20] <The-Compiler> twb: then you'd probably end up with   records = [Record.from_apt_line(line) for line in subprocess.check_output(...)]
[10:36:42] <The-Compiler> (I don't think you need the .splitlines() either, but I might be wrong on that one)
[10:37:23] *** Joins: ano (~ano@user/ano)
[10:38:15] *** Joins: marduk2 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[10:39:50] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[10:39:50] *** marduk2 is now known as marduk
[10:41:17] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:43:31] *** Joins: kosh (~kosh@user/kosh)
[10:43:37] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[10:47:31] <twb> The-Compiler: sensible, thanks
[10:47:58] <twb> I was lowballing it because all I *really* need is "get the first word of the first line" :-)
[10:48:16] <twb> But I'm like "eh if I can actually implement conformant weighting i might as well"
[10:50:33] <fdan> anyways to unpack this other than this
[10:50:38] <fdan> L = ['0 10 5', '1  5 2', '0  20 2', '2  30 54', '1  15 3']
[10:50:42] <fdan> i,j,k = zip(*(item.split() for item in L))
[10:50:46] <fdan> i want 3 list out of these
[10:50:53] <fdan> this does it,.. but any other ways to do this
[10:54:07] <jinsun> well you could make 3 empty lists and loop over L and split the items and append the output to those lists, but I would just use the zip instead, it is shorter and faster
[10:56:21] <The-Compiler> fdan: looks great to me!
[10:57:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:57:28] *** Joins: netrunner (~netrunner@user/netrunner)
[11:03:14] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[11:03:23] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[11:04:11] *** Quits: mertsas (~martin@ti0185q160-2775.bb.online.no) (Ping timeout: 265 seconds)
[11:05:20] *** Joins: mertsas (~martin@ti0185q160-2775.bb.online.no)
[11:09:18] *** Joins: chele (~chele@user/chele)
[11:09:31] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:09:52] *** Joins: mexen (uid495612@user/mexen)
[11:13:49] *** Joins: jaggz (~jaggz@user/jaggz)
[11:14:12] *** \\ is now known as \0x5c
[11:14:36] *** Joins: brelod (~me@90.244.150.142)
[11:15:24] *** dcaro_away is now known as dcaro
[11:16:57] *** Joins: mrwick (~mrwick@user/mrwick)
[11:17:04] *** Joins: rendar (~rendar@user/rendar)
[11:17:38] *** Quits: gggp (~textual@123.113.180.17) (Ping timeout: 260 seconds)
[11:19:52] *** Joins: manuel_ (~manuel198@2a02:1748:dd5c:f290:c5b2:fdff:b718:9edf)
[11:20:17] *** Joins: plastico (~plastico@neomutt/plastico)
[11:20:32] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:21:34] *** Joins: shad (~shad@user/shad)
[11:21:48] *** \0x5c is now known as \\
[11:22:52] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:23:50] *** Quits: p-i-_ (~Ohmu@223.206.70.53) (Read error: Connection reset by peer)
[11:24:26] *** Joins: p-i- (~Ohmu@223.206.70.53)
[11:24:30] *** Joins: chamgry (~chamgry@user/chamgry)
[11:26:31] *** Joins: ravan (~ravan@user/ravan)
[11:26:46] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[11:27:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:29:41] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[11:30:11] *** Quits: ndwk (~ndwk@user/ndwk) ()
[11:30:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:30:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[11:31:15] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 265 seconds)
[11:31:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:31:31] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:43] *** Joins: willow (~willow@bay.systems)
[11:32:54] *** Joins: grooverman_ (~grooverma@179.99.120.247)
[11:34:38] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 265 seconds)
[11:35:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:24] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[11:38:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[11:38:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:03] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:42:05] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[11:43:50] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:44:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:45:28] *** Joins: wyclif (~wyclif@user/wyclif)
[11:45:37] <gitesh> Does functions have internal representation?
[11:45:41] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[11:50:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:50:17] <gitesh> What makes function an object?
[11:50:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:50:41] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[11:50:42] <hexnewbie> gitesh: Depending on what you mean by internal representation: (lambda x:x**2).__code__.co_code
[11:50:56] *** Joins: wyclif (~wyclif@user/wyclif)
[11:51:25] *** Quits: ckdCreations (~ckdCreati@147.55.130.34) (Read error: Connection reset by peer)
[11:51:36] <gitesh> I mean internal representation of value like a literal 1
[11:51:40] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:51:52] <gitesh> We don't get to see internal representation
[11:52:19] *** Quits: moto (~moto@user/moto) (Ping timeout: 252 seconds)
[11:53:11] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[11:53:29] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 264 seconds)
[11:53:43] <stealth_> gitesh, you can `print(locals()` inside your function to see var assigned and such
[11:54:38] <jinsun> gitesh: you can disassemble the bytecode with dis which might be the "internal representation" you wanted https://docs.python.org/3/library/dis.html
[11:55:14] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:55:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:56:27] *** Joins: wyclif (~wyclif@user/wyclif)
[11:56:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:56:58] <hexnewbie> If by ‘internal’ gitesh indeed means ‘inaccessible’ or ‘opaque’, probably the answer is no, because they do expose almost everything about themselves (there's some C code that can't be queries directly, though that's not a ‘representation’, you could implement it in Python if you liked at the expense of performance, *and* that also applies to all builtin objects, not just functions)
[11:57:44] <stealth_> gitesh, mostly everything in python is an object, function defination itself isn't an object when you call it like `a = func()` now `a` and an object.
[11:58:04] <jinsun> the func is also an object
[11:58:42] <jinsun> isinstance(func, object) will give True
[11:58:59] <stealth_> yes, i am talking about inside
[12:00:16] *** Quits: rindolf (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[12:00:54] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:4c54:9931:a83c:8ecb) (Quit: Konversation terminated!)
[12:01:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:01:24] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[12:01:58] *** Joins: wyclif (~wyclif@user/wyclif)
[12:02:02] *** Quits: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b) (Remote host closed the connection)
[12:02:20] *** Joins: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b)
[12:02:32] <rendar> can i set an asyncio.Event to True initially?
[12:02:39] <stealth_> `func` as a reference is an object, functioon defination as in `def func():`...
[12:02:58] <gitesh> Can you tell me simply not complex?
[12:03:08] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:5916:3eb8:6561:96a1)
[12:03:36] *** Joins: togusa (~togusa@user/togusa)
[12:04:20] <stealth_> gitesh, i think no one really gets what you are asking, why everyone answered their version of what they think you are asking
[12:06:48] *** Quits: togusa (~togusa@user/togusa) (Read error: Connection reset by peer)
[12:07:05] <twb> Does python have an existing datatype for FQDNs?  Like RFC 952.  A little bit like pathlib.Path and third-party hyperlink.URL
[12:07:15] <energizer> gitesh: no there is nothing like that
[12:07:34] <gitesh> My question is what makes function an object like other objects in python like integer 2 or float  2.3
[12:07:45] *** Joins: togusa (~togusa@user/togusa)
[12:07:55] <energizer> gitesh: isinstance(f, object) -> True
[12:08:16] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[12:08:17] <gitesh> energizer: ok
[12:09:04] <twb> I don't see any mention of RFC 952 in /usr/share/doc/python3-doc/html/
[12:09:16] <twb> Only smtplib mentions "FQDN"
[12:09:41] <twb> I guess I'll just use str like some kind of Fortran user
[12:09:47] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:10:16] <energizer> twb: have you looked at https://github.com/ypcrts/fqdn
[12:10:32] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Ping timeout: 252 seconds)
[12:10:36] <twb> energizer: it's not important enough to install third-party library for it
[12:10:54] <twb> But yeah that looks about right
[12:10:55] <energizer> twb: it's one file, you can just copy it
[12:11:48] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:12:01] <twb> energizer: I'm writing a script that runs inside a ramdisk, it's job is to turn a DNS record into a one-line syslog.conf.  Even that is kinda overkill
[12:13:20] <twb> It's fine, don't worry about it.
[12:13:34] <energizer> i dont' really dig a .is_valid() method anyway
[12:14:10] *** ixokani is now known as swinnenb
[12:15:06] <gitesh> What I mean is let's say there is an Integer 2, that has internal representation of 10101010 I mean some binary, so does function have representation like that?
[12:15:29] <gitesh> And what makes function callable?
[12:15:42] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:15:44] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[12:17:02] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:18:13] <energizer> gitesh: 2 is usually written in binary as 10, but that doesn't mean python represents it that way internally
[12:18:44] <energizer> gitesh: there are a lot of layers between python code that we write and machine code that the cpu executes
[12:18:51] <twb> energizer: if it was me .is_valid() would happen at init() time
[12:19:06] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 265 seconds)
[12:19:20] <gitesh> energizer: k
[12:19:31] <stealth_> gitesh, python is a reference based language, so there is a reference to where the `2` data is stored in the memory
[12:19:47] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 246 seconds)
[12:19:47] *** Joins: jim (~jim@about/linux/staff/jim)
[12:19:50] <Samian> What do think about the variable name "apex_imported_successfully" to store whether "import apex" didn't throw an exception?
[12:20:09] *** Quits: Network2501 (~beard@122-199-54-62.ip4.superloop.com) (Read error: No route to host)
[12:20:15] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:26] <gitesh> stealth_: what makes function data?
[12:20:39] *** Quits: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net) (Quit: -)
[12:20:53] <energizer> Samian: try: import apex; except ImportError; apex = None. then when you want to check, just do `if apex is None`
[12:20:55] <Samian> try: import apex  apex_imported_successfully = True ; except: apex_imported_successfully = False
[12:21:11] *** Joins: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net)
[12:21:54] <Samian> energizer or I could do your suggestion. looks succinct
[12:21:56] <stealth_> gitesh, thats like asking what make a house! there are lots of building blocks
[12:22:10] <rendar> what is the best way to strip numbers from the right of a string? e.g. "pool554" becomes "pool" and "p00l111" becomes "p00l"
[12:22:37] <energizer> gitesh: https://www.youtube.com/watch?v=mxjv9KqzwjI
[12:23:23] *** Joins: thiras (~thiras@user/thiras)
[12:23:49] <energizer> rendar: s.rstrip(string.digits)
[12:24:00] <rendar> ok
[12:24:14] <energizer> i wonder what copilot would say
[12:24:24] <rendar> NameError: name 'string' is not defined
[12:24:32] <energizer> import string
[12:25:05] <energizer> twb: either that or in a classmethod
[12:25:18] <energizer> alternate cosntructor
[12:25:21] <stealth_> rendar, is it always 3 at the end?
[12:25:33] <rendar> nope
[12:25:36] <rendar> can be any number
[12:25:56] <rendar> and any number of digits
[12:27:17] <twb> http://ix.io/3zJr  why isn't dataclass coercing my input -- or at least raising a TypeError?
[12:28:54] *** Joins: minip (~minip@user/minip)
[12:29:02] <twb> Do I have to explicitly call dataclasses.field(default_factory=int) ?
[12:29:55] <kosh> Samian: please don't just do except:  except ImportError: is correct here
[12:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[12:30:55] <stealth_> energizer, not sure why they didn't add .*strip feature to replace! it would have been neat to replace multiple values
[12:33:06] <Samian> kosh  I was originally doing except ModuleNotFoundError but realize that's too narrow because misses errors where the module is found but still didn't important correctly.   ImportError is what I'll use now
[12:33:53] <energizer> stealth_: what do you mean?
[12:33:57] <kosh> there are very few cases where except:   makes any sense, generally you do that for logging and reraising the error
[12:34:19] <energizer> i think they should've dropped the bare-except syntax for py3k
[12:35:02] <kosh> bare except does have a place it is just rare
[12:35:12] <kosh> like the logging case is the classic example
[12:35:21] <energizer> except Exception is fine
[12:36:17] <stealth_> would have to use `BaseException`
[12:36:21] *** Joins: nuala (~nuala@user/nuala)
[12:36:40] <stealth_> if you also want to know about `KeyboardInterrupt` and such .
[12:36:41] *** Quits: nips_ (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 264 seconds)
[12:36:49] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[12:36:55] <twb> dataclasses.field(default_factory=int) didn't magically help
[12:38:34] <twb> http://ix.io/3zJw
[12:38:36] <energizer> twb: dataclasses doenst do that
[12:38:39] *** Joins: nips_ (~nips@abv84.internetdsl.tpnet.pl)
[12:38:47] *** Quits: wbn (~wbn@user/wbn) (Ping timeout: 245 seconds)
[12:38:48] <twb> Hrm, OK.
[12:38:53] <twb> I'm surprised it doesn't at least error
[12:39:06] <energizer> mypy would complain
[12:39:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[12:39:21] <energizer> attrs.org has converters
[12:39:36] * twb grumbles and waits another 20 years for cpython to get opt-in type declamations actually enforced
[12:40:15] <energizer> alias python='mypy&&python'
[12:40:40] <twb> hahaha
[12:41:06] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[12:41:41] *** Quits: nips_ (~nips@abv84.internetdsl.tpnet.pl) (Client Quit)
[12:41:43] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[12:42:47] *** Joins: Linux77 (~Linux7_7@186.233.182.243)
[12:44:38] *** Quits: chamgry (~chamgry@user/chamgry) (Quit: WeeChat 2.8)
[12:46:02] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[12:49:03] *** Joins: gggp (~textual@125.33.92.174)
[12:49:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:51:38] *** Joins: Naan (~Naan@user/naan)
[12:55:50] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[12:57:23] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:58:41] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[12:58:42] *** Joins: CoolerX (~CoolerX@user/coolerx)
[12:58:49] <CoolerX> Hi
[12:59:06] <CoolerX> I have a program where I have a long running operation
[12:59:08] *** Joins: moto (~moto@user/moto)
[12:59:29] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[13:01:26] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[13:01:32] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[13:05:15] <CoolerX> There's one thread that is running a long running operation
[13:05:23] <CoolerX> It increments an integer variable
[13:05:46] <CoolerX> in another go routine there is a HTTP REST server that returns some json with the integer
[13:05:54] <kosh> twb, you probably want to use attrs it is WAY more powerful than dataclasses
[13:06:21] <CoolerX> is there a chance of panic?
[13:06:27] <twb> kosh: IIRC that's third-party
[13:06:32] <CoolerX> I am not using any mutex or atomic counter
[13:06:39] <kosh> twb, what is wrong with that?
[13:07:00] <kosh> twb, it is what dataclasses are based on and it was decided not to merge attrs into the base so it could move and adapt faster
[13:07:16] <twb> 18:42 <twb> energizer: I'm writing a script that runs inside a ramdisk, it's job is to turn a DNS record into a one-line syslog.conf.  Even that is kinda overkill
[13:08:36] <stealth_> CoolerX, do you not use lock?
[13:09:53] *** Joins: p-i-_ (~Ohmu@223.206.70.53)
[13:12:19] <stealth_> CoolerX, 1 or 2 threads here?
[13:12:26] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 260 seconds)
[13:13:14] *** Quits: p-i- (~Ohmu@223.206.70.53) (Ping timeout: 265 seconds)
[13:15:52] <bjs> CoolerX: if only one thread is writing to the variable it'll be okay
[13:16:45] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[13:16:46] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:16:58] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[13:17:05] *** Quits: gggp (~textual@125.33.92.174) (Ping timeout: 252 seconds)
[13:17:41] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[13:17:48] *** Joins: brabrax (~brabrax@user/brabrax)
[13:18:02] *** Joins: califax (~califax@user/califx)
[13:18:44] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Quit: Ping timeout (120 seconds))
[13:20:09] <rendar> what is the best way of waiting multiple awaitables?! asyncio.wait() ?
[13:20:30] <bjs> rendar: your statement is ambiguous?  What exactly do you want to wait for? all of them to finish?
[13:20:34] *** Joins: gggp (~textual@60.10.23.159)
[13:20:35] <bjs> one of them? the first one? etc
[13:20:47] <rendar> all of them to finish
[13:20:52] <bjs> rendar: why not just gather()?
[13:20:55] <bjs> but yes, also wait() works
[13:21:10] <bjs> (with ALL_COMPLETED)
[13:21:52] *** Joins: faceface (~faceface@user/faceface)
[13:22:02] <rendar> yes
[13:22:12] <rendar> because another coroutines call gather() on them, to make them running
[13:22:21] <rendar> this other one wants just to wait
[13:22:33] *** jeho2 is now known as jeho
[13:22:50] <CoolerX> stealth_, 2 threads
[13:23:11] <CoolerX> stealth_, no lock
[13:23:19] <CoolerX> no atomic counter
[13:23:59] <stealth_> CoolerX,  are they both python threads? the "go" part of a bit confusing.
[13:24:13] <CoolerX> oh fff
[13:24:17] <CoolerX> wrong channel XD
[13:25:15] <stealth_> CoolerX, but ya if you have 2 threads and you are sharing the same variable `var += 1` you will need a lock or atomic coounter. I like atomic counter
[13:25:39] *** Quits: gggp (~textual@60.10.23.159) (Ping timeout: 268 seconds)
[13:26:23] <bjs> rendar: I'm not sure I follow, why can't you use gather?
[13:27:09] <rendar> bjs, gather is used but the run() coroutine which will run the task group, another coroutine only wants to *know* when those tasks are done
[13:27:18] <rendar> it can't call gather() again on them
[13:27:26] <rendar> since they are already running!
[13:28:33] <bjs> rendar: i still don't follow
[13:28:37] <bjs> why can't you gather the tasks again?
[13:28:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 268 seconds)
[13:28:53] <rendar> otherwise it will run them again!
[13:29:04] <bjs> rendar: why would it do that?
[13:29:22] <rendar> because they are coroutines, relying on the fact that gather() will create tasks internally
[13:29:23] <bjs> gather(some_task) doesn't run the task at all. A task is already running. it just gathers the results together
[13:29:49] <bjs> rendar: if they're just coroutines I don't see how wait helps either :)
[13:30:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:30:30] *** Joins: gggp (~textual@123.113.191.89)
[13:30:47] <rendar> because it will wait() multiple tasks create by multiple of those gather() ... but i got your point, i still can use gather() with awaitables
[13:30:55] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:30:58] <bjs> rendar: i'm confused, you're back to having tasks
[13:31:06] <bjs> do you have tasks or coroutines? if you just have tasks, you can gather them
[13:31:10] <bjs> or wait() them
[13:32:25] <rendar> ok fine
[13:32:46] <bjs> rendar: fine?  if you just have a coroutine then there's not much you can do but schedule it to run
[13:32:57] <rendar> i think wait() is better because give you more options, timeout, return of first completion and so on
[13:33:08] <bjs> rendar: well gather() is also better because it gathers the results
[13:33:11] <bjs> so... it depends what you want
[13:33:20] <bjs> but coroutine-vs-task doesn't affect the decision, both work the same way.
[13:33:23] <stealth_> CoolerX, btw, python doesn't have atomic counter you can use directly, you would have to use 3rd party library or wrap one yourself
[13:33:34] <rendar> well, it's a mere [t.result() for t in done]
[13:34:13] <bjs> rendar: what is?
[13:34:26] <rendar> result gathering
[13:35:06] *** Joins: control (~v1@user/control)
[13:35:44] <rendar> bjs, after wait() i can gather results of done tasks in that way
[13:36:05] *** Quits: mertsas (~martin@ti0185q160-2775.bb.online.no) (Ping timeout: 246 seconds)
[13:36:28] <bjs> rendar: well, except for the fact you don't know which result is for which task ;)
[13:36:29] <bjs> but yeah
[13:37:03] <bjs> rendar: either way the task-vs-coro doesn't really affect it, You need a task (or some future) to wait on and then either gather() or wait() will work fine
[13:37:06] *** Quits: shalora (~quassel@2a02:810a:b40:9f4::178f) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[13:37:06] *** kai3 is now known as kai
[13:37:14] *** Joins: techsurvivor (~don@89.46.62.88)
[13:37:56] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:38:16] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:38:57] <rendar> bjs, ok
[13:39:07] <rendar> bjs, i guess that it's all based on the __await__ magic method
[13:39:14] <bjs> gitesh: functions are objects because they are an instance of the "function" class.  By definition things that are instances of a class are called objects.  All objects have some data and operations,  functions have data (the code to run) and operations (call)
[13:39:25] <bjs> rendar: do you remember my little fake asyncio?
[13:39:31] <bjs> and how it had no async/await or __await__ or magic at all :)
[13:39:38] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[13:39:41] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[13:39:53] <bjs> take it and add wait() and gather() functions to it,  there's no magic required for them
[13:40:19] <bjs> (hint: you'll need to add callbacks to Tasks...)
[13:42:57] *** Joins: mertsas (~martin@ti0185q160-2775.bb.online.no)
[13:44:05] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[13:45:41] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[13:47:19] <gitesh> Beautiful answer, I'm gonna save it
[13:48:53] *** Quits: gggp (~textual@123.113.191.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:49:35] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[13:49:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[13:50:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:50:14] <rendar> bjs, why callbacks?
[13:50:22] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:50:25] <CoolerX> Hi
[13:50:32] *** Parts: CoolerX (~CoolerX@user/coolerx) ()
[13:50:38] *** Quits: techsurvivor (~don@89.46.62.88) (Ping timeout: 252 seconds)
[13:51:21] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:22] <bjs> rendar: for wait()
[13:51:39] <rendar> why? i save task ids into Task instances
[13:51:40] *** Joins: Warped (~Warped@user/warped)
[13:51:46] <rendar> then i map those ids to the correct result
[13:51:57] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:52:31] <bjs> rendar: no I mean, wait *uses* callbacks
[13:52:44] <rendar> huh? what you mean?
[13:52:48] <bjs> like, if you were to take my little fake-asyncio thing and add a `def wait(...)` function
[13:54:17] <rendar> yes...
[13:54:37] <bjs> rendar: I'm just saying, you said "it's about this __await__ magic method" but I've been trying to convince you that there's no magic here
[13:54:55] *** Joins: cth (~Cthulchu@193.194.107.250)
[13:55:03] <bjs> it's just asyncio doing fairly simple things, and my little fake-asyncio proved  that by not using async/await at all
[13:55:38] <rendar> ok i see
[13:56:11] <bjs> rendar: here a task is just a wrapper around a 'running' coroutine,  if you have one of those you can wait for it to finish.
[13:56:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[13:56:26] *** Joins: cheater (~Username@user/cheater)
[13:56:59] <rendar> yes yes
[13:57:42] <rendar> i just found better using wait(), multiple parameters, e.g. this is my production solution to manage N tasks https://bpa.st/RAZA
[13:57:46] <rendar> bjs ^
[13:58:00] <rendar> using gather() is just impossible
[13:58:07] <rendar> (here)
[13:58:46] *** Joins: y1n (~y1n@178.115.60.118.wireless.dyn.drei.com)
[14:00:40] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[14:00:55] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[14:01:38] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 252 seconds)
[14:01:49] *** Joins: TomyWork (~TomyLobo@p200300e80f06af009532a697cfcf6f01.dip0.t-ipconnect.de)
[14:02:29] <volgar1x> hello everyone, can somebody tell me why I get an error `got Future <Future pending> attached to a different loop`
[14:02:30] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[14:02:44] *** Joins: digilink (~digilink@user/digilink)
[14:02:48] <volgar1x> in this code https://gist.github.com/volgar1x/d526c134d1ded1157eaed7530615854f
[14:02:56] <volgar1x> File "convert_videos.py", line 216, in download_candidate
[14:03:06] <volgar1x> <-- where the exception occurs
[14:04:11] <volgar1x> it is so weird because i don't create threads
[14:06:36] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:06:56] <bjs> volgar1x: it's because queue_toconvert is created before you start the event loop I think,  is there a reason you made it a class variable not an instance one?
[14:07:10] <bjs> (and queue_scanned and queue_converted)
[14:07:27] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:09:28] <f8e4> is there a non-np solution?: np.linspace(0, 1, 20)
[14:09:30] <volgar1x> oh shit you are right bjs
[14:09:48] <volgar1x> i thought they were going to be instance variables, like in TypeScript
[14:11:08] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[14:11:13] <pycode> is that normal? https://bpa.st/QITA
[14:11:14] <pycode> -_-
[14:12:10] *** Joins: bodozene_ (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[14:12:47] <Repiphany> Check if you've initialized pyenv properly
[14:12:50] <f8e4> how to list all dependencies of a py project?
[14:13:02] <jinsun> f8e4: `[x/19 for x in range(0, 20)]` ?
[14:13:10] <f8e4> jinsun smart
[14:13:26] <pycode> Repiphany, i just added it in bashrc
[14:13:35] <pycode> and run exec $SHELL on server
[14:13:50] <Repiphany> Added what
[14:14:31] <pycode> if i dopyenv version
[14:14:31] <pycode> 3.9.7 (set by /root/.pyenv/version)
[14:14:36] <pycode> one moment
[14:15:08] <pycode> Repiphany, https://bpa.st/Z5AQ
[14:16:08] <pycode> Repiphany, https://bpa.st/5PHA
[14:16:38] <pycode> Repiphany, more complete: https://bpa.st/KQPA
[14:16:46] <pycode> it seems that i am using the python of the system
[14:17:01] <pycode> "python" is not recognized just "python3" (system)
[14:17:41] *** Joins: legola (~legola@46.235.100.27)
[14:17:46] <Repiphany> Where is "if command -v pyenv 1>/dev/null 2>&1" from, I can't into bash
[14:18:31] <grawity> that's more or less the standard way to check "is a command named 'pyenv' in $path?"
[14:19:25] <pycode> found here: https://medium.datadriveninvestor.com/how-to-install-and-manage-multiple-python-versions-on-linux-916990dabe4b
[14:19:40] <rendar> bjs, what do you think about that code?
[14:19:59] <jinsun> do you have to check that to run pyenv init? I just put it in bashrc without any if conditions
[14:20:11] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 246 seconds)
[14:20:54] *** Joins: palasso (~palasso@user/palasso)
[14:21:31] <pycode> https://bpa.st/LQPQ <--- maybe this (from offical doc)
[14:21:36] <pycode> jinsun, init? hmm i try
[14:21:54] <Repiphany> `eval "$(pyenv init --path)"` should be in there somewhere
[14:22:03] *** Joins: ihristov (~ihristov@85.187.46.226)
[14:22:19] <pycode> jinsun, this? :DD https://bpa.st/PPYQ
[14:22:21] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:22:40] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[14:22:45] <pycode> yes there is the init there --> https://bpa.st/Z5AQ
[14:22:55] <jinsun> pycode: no, I meant the eval "$(pyenv init --path)" thing, I don't put it inside if
[14:23:02] *** dcaro is now known as dcaro_lunch
[14:23:13] <Repiphany> `pyenv init -` isn't the same as `pyenv init --path`
[14:23:32] <pycode> jinsun, i follow the official doc i am going to run these commands: https://bpa.st/X5MA
[14:23:35] <pycode> from the official doc
[14:23:38] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[14:25:07] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[14:25:27] <pycode> same problem : https://bpa.st/LJBA
[14:25:35] <jinsun> okay, worth a try, and restart the shell after that
[14:25:53] <pycode> i think i need to logout and reconnect to the server again
[14:25:56] <pycode> yes jinsun i try
[14:26:14] <pycode> bingo!
[14:26:16] <pycode> works!
[14:26:17] <pycode> :)
[14:26:32] <pycode> i wonder why.... exec $SHELL does not do the job?
[14:27:04] <pycode> now i correctly see https://bpa.st/HEPA
[14:27:17] <jinsun> yeah exec $SHELL never worked for me either
[14:27:34] <jinsun> I had to restart the shell manually
[14:27:39] <grawity> ~/.profile is only read by "login" shells, i.e. those run with the -l option (or exec'd with - in argv[0])
[14:27:56] <grawity> e.g. `exec $SHELL -l` or if it's bash `exec -a -bash $SHELL`
[14:28:13] <grawity> normal invocations only read ~/.bashrc instead
[14:28:37] <grawity> tbh a lot of the time it's easier to explicitly just load whichever one you want, into the current shell, using `. ~/.profile`
[14:29:10] <pycode> thank grawity !
[14:29:13] <pycode> *thanks
[14:31:13] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Ping timeout: 252 seconds)
[14:31:53] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:32:45] *** Joins: reset (~reset@user/reset)
[14:34:19] *** Joins: Alderamin (~Alderamin@93.99.167.48)
[14:36:10] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:37:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[14:38:41] *** Joins: ano (~ano@user/ano)
[14:41:11] *** Joins: dez (uid92154@user/dez)
[14:42:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[14:42:50] *** Quits: p-i-_ (~Ohmu@223.206.70.53) (Read error: Connection reset by peer)
[14:43:25] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[14:49:01] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:49:17] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[14:49:35] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 246 seconds)
[14:51:26] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[14:52:04] *** Joins: lethu (~lethu@user/lethu)
[14:54:14] *** Joins: carl- (~carl-@185.103.188.130)
[14:56:00] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[14:56:38] *** Quits: y1n (~y1n@178.115.60.118.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[14:59:52] *** Quits: Allegretto (~allegrett@94-21-223-41.pool.digikabel.hu) (Ping timeout: 252 seconds)
[15:03:37] *** Joins: paul424 (~tom@apn-46-76-214-57.dynamic.gprs.plus.pl)
[15:05:30] <paul424> Hello what would you teach in python : 12 and 13 respectivley years  old in Python  ?
[15:06:14] <paul424> I just don't want them to get bored when talking about variables , flow control , if else statements ... etc.
[15:07:23] <paul424> Would love quickly jump to fractals ... but then one need to teach what are complex numbers, upper and lower bounds of iterration ... ( julia and mandelbrot) sets
[15:07:45] *** Joins: togusa (~togusa@user/togusa)
[15:07:54] *** Joins: gggp (~textual@114.245.104.163)
[15:08:40] *** Joins: y1n (~y1n@77.119.211.205.wireless.dyn.drei.com)
[15:09:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:10:58] *** Joins: trace987 (~trace@95.90.106.112)
[15:11:00] <nedbat> paul424: you can show them fractals without the details of why
[15:11:22] <nedbat> paul424: I like Mad Libs as a project: it's fun and goofy, and is mostly string manipulation
[15:11:32] <paul424> yeah but that's the programming course anyhow...
[15:11:36] <paul424> mad libs ?
[15:11:41] *** Joins: Adoi (~Adoi@user/adoi)
[15:12:10] *** Joins: Allegretto (~allegrett@92-249-221-205.pool.digikabel.hu)
[15:13:06] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[15:13:08] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[15:14:37] *** Quits: Alderamin (~Alderamin@93.99.167.48) (Quit: Leaving)
[15:16:33] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[15:16:36] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[15:17:03] <nedbat> paul424: https://nedbatchelder.com/blog/202011/mad_libs.html
[15:18:00] *** Joins: shad (~shad@user/shad)
[15:19:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:19:34] *** Joins: mickey (~user@user/mickey)
[15:20:50] *** Quits: y1n (~y1n@77.119.211.205.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[15:25:22] *** Joins: rsx (~dummy@ppp-188-174-140-96.dynamic.mnet-online.de)
[15:26:36] *** Joins: togusaa (~togusa@user/togusa)
[15:29:32] *** Quits: togusa (~togusa@user/togusa) (Ping timeout: 265 seconds)
[15:30:53] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:25] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:33:21] *** Joins: y1n (~y1n@178.165.181.13.wireless.dyn.drei.com)
[15:34:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:34:25] *** Joins: Pandadub (~Barones@186.213.251.226)
[15:35:14] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:07] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[15:36:22] *** Quits: Barones (~Barones@2804:7f3:8987:b1f8:5782:aeb:4ccb:801b) (Read error: Connection reset by peer)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:02] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[15:42:49] *** dcaro_lunch is now known as dcaro
[15:43:01] *** Quits: togusaa (~togusa@user/togusa) (Quit: Leaving)
[15:43:27] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 240 seconds)
[15:46:11] *** Joins: etienneme (~etienne@user/etienneme)
[15:47:26] <paul424> nedbat, the only cons in Poland we speak polish
[15:47:33] <paul424> :(
[15:51:02] <paul424> naah on algorithms they are silent as stones ; so I will repeat myself :
[15:51:12] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:51:55] <paul424> https://en.wikipedia.org/wiki/Change-making_problem#implementation hello, hello what does the m[c][r] stands for in that algorithm ? I know it;'s a dynamic prog. algorithm and for index [r] it means for such and such change value .... [c] means that the coin C is the largest one used in the set right ?
[15:53:17] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 246 seconds)
[15:53:21] *** Joins: zeden (~zeden@user/zeden)
[15:53:39] <bjs> paul424: it's list indexing. `A = [1,2,3]` then `print(A[1])` prints 2.  By putting lists inside lists you can make something that looks like a "matrix". so m[r][c] is accessing element with row r and column c from the matrix m
[15:54:01] <paul424> bjs, I know but I wanted to know what the matrix m is for :D
[15:54:22] <paul424> m[c][r] represents partial solutions...
[15:55:50] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:56:06] *** Joins: llh (~llh@user/llh)
[15:56:30] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:56:58] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[15:57:04] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[15:57:52] <bjs> paul424: yes
[15:58:05] <bjs> e.g. m[c][r] is "the number of ways of making r with coins[0 .. c]" or whatever
[15:58:20] <paul424> yeah , as I thought , thanks bjs :(
[15:58:23] <bjs> or number of coins or something
[15:58:25] <paul424> :) i mean :D
[15:58:25] <bjs> paul424: why :( ?
[15:58:29] <bjs> ah okay
[15:58:49] <bjs> paul424: presumably the exact purpose will become clear if you try it on paper and see how the matrix gets filled
[15:59:20] <paul424> or pretty print the m matrix :D , but ok I will try :D
[15:59:35] <paul424> btw are there any pretty printers in python for lists of lists ?
[16:00:22] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[16:01:10] *** Joins: frostschutz (~frostschu@2a01:c23:7903:2700:6a25:4e5:b107:ed4b)
[16:01:17] *** Joins: zeden (~zeden@user/zeden)
[16:02:05] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:02:21] *** Joins: Naan` (~Naan@user/naan)
[16:02:21] <jinsun> numpy arrays have good repr, but may be overkill for this
[16:02:46] <Yhg1s> paul424: the pprint module.
[16:03:05] <paul424> jinsun, Yhg1s oki thanks
[16:04:49] *** Quits: y1n (~y1n@178.165.181.13.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[16:05:59] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[16:06:51] <fweht> whats the fastest (numpy) way to get for a list of vectors `vs` and some numpy array `A` and a list of indices `is` the list `[[A[i+v] for v in vs] for i in is]`?
[16:07:16] *** Quits: dmr (~rdumitru@user/dmr) (Quit: WeeChat 3.2.1)
[16:08:23] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:08:48] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[16:10:08] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 265 seconds)
[16:13:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:15:05] *** Quits: vimart (~vimart@85.255.237.205) (Ping timeout: 264 seconds)
[16:15:20] *** Joins: AutomatedTester (uid395371@selenium/developer/AutomatedTester)
[16:15:34] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:16:41] <merijn> Is there a convenient atomic counter in the standard library or do I need to handroll one?
[16:17:23] *** Joins: vimart (~vimart@85.255.237.205)
[16:17:42] *** Joins: y1n (~y1n@178.165.191.116.wireless.dyn.drei.com)
[16:18:02] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[16:18:08] <lericson> merijn: should be easy enough no
[16:18:32] <lericson> you only need a write lock
[16:19:06] *** Joins: deltab (~deltab@user/deltab)
[16:19:43] <fweht> ah i got it!
[16:20:04] <merijn> lericson: Sure, but that seems rather heavy weight if an atomic counter already exists (which seemed common enough it might)
[16:21:00] <lericson> merijn: don't think it does
[16:21:14] <lericson> maybe a library exists?
[16:23:01] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:25:43] *** Joins: exciteabletom (~tom@58-7-220-242.dyn.iinet.net.au)
[16:26:16] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[16:28:21] *** Joins: besnn (~besnn@user/besnn)
[16:29:39] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:30:24] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[16:32:10] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:33:03] <rendar> bjs,  let's say i want to want an event.wait(), do i have to create a task every time for it?
[16:33:05] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 264 seconds)
[16:33:19] *** Joins: zerotypic (~zerotypic@66.96.192.176)
[16:33:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:33:29] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:33:46] <bjs> rendar: a task is a "a running coroutine you can wait for"
[16:33:50] <bjs> (aka a future)
[16:34:04] <bjs> rendar: lots of things are futures, and you can wait on anything that is awaitable
[16:34:43] *** Joins: thiras (~thiras@user/thiras)
[16:34:47] <rendar> bjs, yes, but also event.wait() should be an awaitable (a coroutine)
[16:34:57] <bjs> rendar: what is "event" ?
[16:35:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:35:24] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[16:35:25] <rendar> asyncio.Event
[16:35:35] <bjs> rendar: oh, then I'm confused what you're asking?
[16:35:40] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[16:35:56] <bjs> you `await some_event.wait()`
[16:36:03] <rendar> check this code
[16:36:04] <bjs> which waits for the event to trigger
[16:36:08] <rendar> https://bpa.st/RAZA
[16:36:39] <rendar> here i wait *a set* of tasks.. to update that set with new tasks coming, i add an event that i SET whenever i add a task
[16:36:40] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:36:45] <rendar> so that wait() wakes up
[16:37:27] <rendar> bjs, the thing is, to uniform asyncio.Event.wait() to the task set, i create a new asyncio.Task for the wait() coroutine EACH TIME the function wait() wakes up
[16:37:33] <rendar> i wish some cleaner design
[16:38:10] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 265 seconds)
[16:38:20] <bjs> rendar: why not create the task outside the loop then? I'm not really following
[16:38:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[16:38:53] *** Quits: paul424 (~tom@apn-46-76-214-57.dynamic.gprs.plus.pl) (Remote host closed the connection)
[16:38:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:39:08] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:39:15] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[16:40:22] <rendar> bjs, it doesn't solve the problem: whenever event.wait() returns, that task finishes!
[16:40:26] <rendar> so i have to create a new one
[16:40:27] *** Joins: wyclif (~wyclif@user/wyclif)
[16:41:39] <bjs> rendar: okay, and what's the problem then?
[16:41:52] *** Quits: gggp (~textual@114.245.104.163) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:41:59] <bjs> rendar: if you run wait() multiple times, it needs to run multiple times, which means it needs to be scheduled on the event loop multiple times, which means you need multiple tasks
[16:42:12] <rendar> bjs, i was wondering if exists another solution instead of creating a new task every time
[16:42:19] <bjs> whether you create them or whether wait() or gather() makes it automatically isn't really a big deal. (Although passing coros directly to wait is deprecated)
[16:43:34] * hodapp glares at junior dev who has apparently never heard of composition or mixins
[16:44:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:44:46] *** Joins: dmr (~rdumitru@user/dmr)
[16:44:46] <rendar> hodapp, huh?
[16:45:10] <hodapp> ignore me, I'm just reading code at work
[16:45:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:45:37] *** Joins: elias117 (~elias117@user/elias117)
[16:45:47] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[16:45:47] <rendar> lol
[16:45:48] <greatgatsby> favor composition over inheritance, save your sanity :-)
[16:45:55] <elias117> Should I put everything in a class for a python interview?
[16:45:57] *** Joins: wyclif (~wyclif@user/wyclif)
[16:46:13] <elias117> I solved the question but I'm afraid I'm going to look like a dork
[16:46:17] *** Joins: cheater (~Username@user/cheater)
[16:46:34] <hodapp> greatgatsby: I am trying to figure out where to even start with this 5-deep inheritance hierarchy, ugh
[16:46:53] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 264 seconds)
[16:47:01] <elias117> could I get some feedback on what I wrote at all?
[16:47:02] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[16:47:06] <elias117> if not its cool
[16:47:55] <hodapp> go ahead
[16:48:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:49:28] <frojnd> Hi there.
[16:49:41] <elias117> ok I'll send a gist
[16:49:45] <elias117> just one moment
[16:50:04] <merijn> hodapp: Scrapping sounds good xD
[16:50:15] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[16:51:31] <frojnd> So I configured gitlab to do tests but now I need help with deployment. I don't want to deploy with dockers. I have already virtualized server. Ideally if tests are green I would call a script on a virtualized server to pull code and reload gunicorn or system unit. Currently I setup systemunit that spawns  gunicorn but would like to automate a bit
[16:51:41] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:51:56] <elias117> ok here you go let me know what you think
[16:51:59] <elias117> https://gist.github.com/elias117/0e20bed8a1dbf8618a28bd72580366ea
[16:52:24] *** Joins: Schnouki (~schnouki@user/schnouki)
[16:53:00] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:53:20] *** Joins: eson123 (~eson123@118.69.128.37)
[16:53:35] <lericson> elias117: least squares init
[16:53:53] <elias117> ok I dont know what you mean
[16:54:31] <lericson> what does the shortestPath.py do in there
[16:54:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[16:55:13] <elias117> it takes the list of routes in a graph and finds the shortest distances to each city in the graph and prints them out
[16:55:13] <eson123> anyone here has ever dealt with the backend of "contact me" form ? like i wonder which best way can be used to send the information of that form back to the admin, i could make a totally different email which isn't sensitive tho or use something i think people called "contact-form@", but it's a bit tricky to imagine how it's implemented, so i would appreciate any example
[16:55:17] *** Quits: jamwil (~jamwil@user/jamwil) (Remote host closed the connection)
[16:55:45] <elias117> it does exactly what the readme.md file says to do
[16:56:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:56:09] <lericson> elias117: uh
[16:56:19] <lericson> .... am i missing something here
[16:56:26] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[16:56:28] <elias117> I think so
[16:56:30] <lericson> README talks about linear equations
[16:56:38] <elias117> oh whoops
[16:56:38] <lericson> shortestPath solves a path finding problem?
[16:56:39] <exciteabletom> The readme is for linear algebra not shortestpath?
[16:56:42] <elias117> thats the wrong readme
[16:56:45] <elias117> I'm so sorry
[16:56:45] <lericson> lol
[16:56:48] <exciteabletom> haha
[16:56:49] <elias117> one second haha
[16:56:50] <lericson> hence: least squares, init
[16:56:55] *** Joins: wyclif (~wyclif@user/wyclif)
[16:57:05] <kosh> it seems you could just turn it into a matrix and use a direct solve, check the determinant to see if the problem is well posed
[16:57:16] <elias117> yeah I was like ok thats what I'm doing for the other
[16:57:28] <elias117> I actually wrote a function for reduced row echelon form
[16:57:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[16:57:42] <elias117> but least squares would also work
[16:57:49] <lericson> np.linalg.lstsq
[16:57:49] <kosh> if you never have more than 3 variables there is no problem with using direct solve
[16:57:50] <elias117> just one mine I'll edit thwe gist
[16:58:04] <elias117> good to know kosh
[16:58:17] *** Quits: amllado (~amllado@45.156.42.81) (Ping timeout: 264 seconds)
[16:58:20] <elias117> I'm not sure if they would give me more than 3 thats why I did it that way
[16:58:25] <lericson> what about an overdetermined system, kosh
[16:59:00] <kosh> you have have  [[2,4,6],[0,3,3],[1,1,-1]]  = [18,6,-3]
[16:59:09] <kosh> use the generalized inverse and use that
[16:59:22] <elias117> ok go ahead and refresh
[16:59:34] <kosh> https://en.wikipedia.org/wiki/Generalized_inverse
[16:59:36] <elias117> this should be more clear now haha sorry lecrison
[16:59:37] *** Quits: bodozene_ (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Quit: Leaving)
[16:59:40] <kosh> that works for non square matrixes
[17:00:19] <lericson> that sounds like it will be least squares with extra steps
[17:00:23] *** Quits: y1n (~y1n@178.165.191.116.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[17:00:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:00:41] <kosh> no optimization step in that, just simple BLAS calls
[17:00:50] <elias117> https://gist.github.com/elias117/0e20bed8a1dbf8618a28bd72580366ea
[17:00:51] *** Joins: jamwil (~jamwil@user/jamwil)
[17:00:57] <lericson> least squares is not optimizing either
[17:01:23] <kosh> least squares algorithms I have see are iterative
[17:01:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:02:19] <lericson> if you have Ax = b, then A^T A x = A^T b by left multiply by A^T, then left multiply (A^T A)^-1 and you have x = (A^T A)-1 A^T b
[17:02:27] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:28] <lericson> ^-1
[17:03:29] <lericson> lol yes
[17:03:40] <lericson> (A^T A)^-1 A /is/ the generalized inverse
[17:03:44] <lericson> 15:30 < lericson> that sounds like it will be least squares with extra steps
[17:03:46] <lericson> called it
[17:04:02] <elias117> so what do you guys think?
[17:04:14] <lericson> sorry we're caught on a petitesse
[17:04:21] <elias117> lol its ok
[17:04:28] <elias117> im just a little nervous today
[17:04:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:05:17] <lericson> is this for a job interview or summit elias117
[17:05:43] <elias117> yeah and I'm worried about if I'm overthinking
[17:06:10] <elias117> what do they look for in a question like this? Just if I get the right answer? or does it have to be in a class or not?
[17:06:47] <elias117> I'm not looking for anyone to do it for me just need to know if there is something I need to follow for convention or something
[17:06:52] <lericson> make it as fancy as it needs to be, no more
[17:07:03] <lericson> it overall looks decent
[17:07:07] *** Joins: LiftLeft (~LiftLeft@172.83.47.118)
[17:07:11] <lericson> while len(unvisited) > 0:
[17:07:13] <lericson> is unpythonic though
[17:07:19] <elias117> interesting
[17:07:20] <lericson> while unvisited: is the way to write it
[17:07:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:07:30] <elias117> ohhhh
[17:07:35] <elias117> see I didnt know that
[17:07:57] *** Joins: wyclif (~wyclif@user/wyclif)
[17:08:15] <elias117> do you think I would be a serious contender for this job with this?
[17:08:29] <lericson> docstrings typically start with a single paragraph that explains the function, for example "Convert dict to list of tuples", saying "this is a helper" is unhelpful
[17:08:40] <elias117> ok
[17:08:56] <lericson> if it is an internal function and not something you want to signal that others can use, put a _ in front
[17:09:08] <lericson> _convert_to_sorted_tuples for example
[17:09:12] <elias117> ok
[17:09:16] <lericson> in general this looks decent, the real test will be at the interview
[17:09:23] <lericson> idk if you're at interview stage though so
[17:09:25] <elias117> so should i put this in a class
[17:09:28] <elias117> I am
[17:09:32] <lericson> i wouldn't
[17:09:36] <elias117> I had 1 and they gave me a whiteboard question
[17:09:48] <elias117> and I did really well and then they gave me these two questions
[17:10:11] <lericson> a question they will ask is "what is the time complexity of your function"
[17:10:24] <elias117> yeah I'm prepared for that I think
[17:10:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:10:27] *** Joins: p-i-_ (~Ohmu@223.206.70.53)
[17:10:56] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:11:08] <lericson> i'll say right away that it's suboptimal
[17:11:22] <elias117> its a greedy algo
[17:11:25] <elias117> so yeah
[17:11:36] <elias117> but I have no idea how to make it optimal
[17:11:38] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:11:46] <lericson> greedy algorithms are typically very fast, that is the appeal of a greedy algorithm
[17:12:27] <elias117> yeah
[17:12:28] <lericson> let me ask you this, L = list(range(N)); while L: L.remove(L[0])
[17:12:30] <lericson> what is the time complexity
[17:12:31] <elias117> i learned that in class
[17:12:32] <hodapp> yeah, greedy algorithm is more along the lines of "doing the stupid, obvious thing turns out to be also provably the optimal thing"
[17:12:52] *** Joins: y1n (~y1n@178.115.43.52.wireless.dyn.drei.com)
[17:13:14] *** Joins: zebrag (~chris@user/zebrag)
[17:13:20] <elias117> O(2N)
[17:13:23] <elias117> ?
[17:13:34] *** Parts: eson123 (~eson123@118.69.128.37) (Leaving)
[17:13:40] <lericson> it's quadratic
[17:13:52] *** Joins: sgn_ (~sgn@user/sgn)
[17:13:53] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 264 seconds)
[17:14:03] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[17:14:04] <elias117> does the list mean it goes over the range
[17:14:10] <elias117> and turns it into a list?
[17:14:19] <lericson> it gives a list [0, 1, …, N-1]
[17:14:26] <elias117> O(N^2)
[17:14:33] <elias117> O(N^2 + N)
[17:14:38] <elias117> for the while?
[17:14:39] <SnoopJ> those are the same thing
[17:14:41] <lericson> so O(N^2) :p
[17:14:45] <elias117> yeah I
[17:14:50] <lericson> i think you'll do fine
[17:14:54] <lericson> you seem to have a decent grasp
[17:15:10] <elias117> I do have a question about that
[17:15:12] <lericson> just don't get nervous
[17:15:16] <elias117> range(N)
[17:15:19] <elias117> thats O(N)
[17:15:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:15:33] <elias117> list(range(N)) is O(N^2)
[17:15:34] <SnoopJ> constructing an instance of range is O(1)
[17:15:34] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:15:35] <lericson> i grade students all the time, the smartest people end up freezing up because i don't accept vague answers
[17:15:36] <elias117> right?
[17:16:00] <SnoopJ> (it's just a little class that stores values for `start, stop, step` and some functionality)
[17:16:26] <elias117> oh thats range
[17:16:36] <elias117> it doesnt actually generate a list
[17:16:42] <elias117> or a generator
[17:17:03] <elias117> I'm just trying to see why its 0(N^2)
[17:17:38] <SnoopJ> that's kinda tricky to do, because it isn't
[17:17:59] <lericson> indeed
[17:18:01] <bjs> elias117: list(range(N)) isn't O(N^2)
[17:18:10] <elias117> ok
[17:18:11] <SnoopJ> creating the range is O(1), iterating it to build the list is O(N), therefore process overall is O(N)
[17:18:20] <elias117> gotcha!
[17:18:32] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:18:56] <elias117> ok
[17:19:17] *** Quits: y1n (~y1n@178.115.43.52.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[17:19:31] <elias117> man I get it now!
[17:19:39] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[17:22:52] <elias117> ok and for the other one I can use least squares init
[17:23:20] <lericson> call it the moore-penrose pseudoinverse and they'll be scared straight
[17:23:44] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:23:55] <SnoopJ> a reasonable reaction, pseudoinverses are scary :P
[17:24:15] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[17:24:28] <lericson> wasn't that penrose guy in physics also
[17:24:28] *** Joins: spithash (~spithash@user/spithash)
[17:24:36] <SnoopJ> you don't have to take our word for it re: the complexity of range(N) and list(range(N)), by the way, "try it and see" is generally useful: https://bpa.st/Z4PQ
[17:24:39] <lericson> clever bloke init
[17:24:59] <elias117> yeah he was
[17:25:10] <elias117> I actually come from physics
[17:25:21] <lericson> let me guess, you're now in ML
[17:25:23] <elias117> I did a lot of theory and its how I got into programming
[17:25:27] <elias117> yup lol
[17:25:35] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[17:25:40] <lericson> how original .. :p
[17:25:43] <elias117> the ML models are just like models I've seen haha
[17:26:04] <elias117> but now I got into backend dev and dev ops because I wanted to deploy my models
[17:26:07] <SnoopJ> HEP-ex is hemorrhaging people in exactly this mode
[17:26:15] <lericson> ha, elias117
[17:26:25] <lericson> i like that -- "i actually wanted to do something in the real world"
[17:26:30] <elias117> so I can do ML backend and then deploy it
[17:26:32] <elias117> lol yeah
[17:26:50] <elias117> and my skills are really transferable
[17:26:54] <elias117> so why not
[17:26:57] <lericson> i came the other way, been a web developer for a decade or so, then decided the jig was up and went into ML (and CS)
[17:27:02] <SnoopJ> The uni where I studied has a tiling on the floor that Penrose came up with, it's neat.
[17:27:19] <elias117> penrose is smart
[17:27:22] <SnoopJ> It seems that someone's changed his Wikipedia article so that it's no longer the picture
[17:27:33] <SnoopJ> but he came for that building's dedication when it opened up
[17:27:59] <orbisvicis> are there prebuilt pythons for linux/cygwin?
[17:28:36] <SnoopJ> orbisvicis, yep
[17:29:27] <ezzieyguywuf> self.__dict__['some_var'] = someVal <- what is the point of doing this?
[17:29:38] <ezzieyguywuf> isn't it the same as self.some_var = someVal?
[17:29:57] <orbisvicis> SnoopJ, anaconda?
[17:30:01] <SnoopJ> orbisvicis, what about it?
[17:30:11] <Julian> ezzieyguywuf: No, not if some_var is a descriptor
[17:30:26] <orbisvicis> SnoopJ, where do I get these prebuilt pythons?
[17:30:27] <ezzieyguywuf> Julian: what do you mean?
[17:30:56] <SnoopJ> orbisvicis, for Linux, you usually get them from your distribution. For Cygwin, you can use the Cygwin package manager.
[17:31:16] <Julian> ezzieyguywuf: This is Python's absolute worst documentation page, so apologies for having to link it, but https://docs.python.org/3/howto/descriptor.html#simple-example-a-descriptor-that-returns-a-constant
[17:31:50] <Julian> ezzieyguywuf: And if some_var is one of those kinds of objects, then no those two lines are not equivalent. If that's not what's happening in the code you have though, then yes that line isn't the right way to do what it's doing.
[17:32:03] *** Joins: y1n (~y1n@178.115.53.20.wireless.dyn.drei.com)
[17:32:46] <orbisvicis> SnoopJ: I want to try a newer version than the package manager provides. Also the cygwin build disables threading features that have long since been fixed on cygwin
[17:33:02] <greatgatsby> orbisvicis, you might like https://github.com/pyenv/pyenv
[17:33:34] *** Joins: mrtnt (~Martin@martint.data.ee)
[17:33:57] <bjs> ezzieyguywuf: in Python `x.y = z` is actually a secret methodcall, `x.__setattr__("y", z)`
[17:34:05] <bjs> ezzieyguywuf: infact in Python lots of things are secretly hidden methods
[17:34:16] <ezzieyguywuf> Julian: you mean if someVal is one of those kinds of objects?
[17:34:22] <Julian> __set__, not __setattr__
[17:34:36] <Julian> ezzieyguywuf: no, I meant what I said :)
[17:34:37] <bjs> doing self.__dict__[...] = ...  in some cases is there to "go-around" the fancy method calls
[17:34:48] <Julian> ezzieyguywuf: it's whether the thing on the class is a descriptor, not what you're assigning
[17:34:50] <ezzieyguywuf> but 'some_var' is a string...
[17:35:21] <bjs> ezzieyguywuf: `x.some_var = y` is roughly the same as `x.__setattr__("some_var", y)` which *usually* does `x.__dict__["some_var"] = y`
[17:35:42] <SnoopJ> orbisvicis, sounds like you should build your own, then. It's pretty straightforward to do this.
[17:36:02] <bjs> ezzieyguywuf: but if the programmer writes a funny class that overwrites some of the methods on x or y (e.g. __setattr__ or __set__) then that might get in the way.  As Julian points out, this happens a lot when writing funny classes called descriptors
[17:36:07] <orbisvicis> SnoopJ, ok
[17:36:22] <orbisvicis> building things on cygwin is never straightforward
[17:36:22] <ezzieyguywuf> hrm D suu
[17:36:26] <ezzieyguywuf> *I see
[17:36:28] <orbisvicis> ill give it a shot
[17:36:48] <ezzieyguywuf> yea, they did overwrite __setattr__
[17:37:05] <ezzieyguywuf> they want the class to be immutable, but then it the constructor they still want to set up the initial state
[17:37:24] <bjs> ezzieyguywuf: I don't think this is a good way to achieve that
[17:38:19] <ezzieyguywuf> lol, well it's an old code base
[17:38:28] <ezzieyguywuf> and the problem i'm working on is unrelated to that part of it
[17:38:35] <ezzieyguywuf> so I'll leave it alone for now...
[17:40:51] *** Joins: Everything (~Everythin@37.115.210.35)
[17:42:16] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:44:08] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[17:44:34] <SnoopJ> orbisvicis, thankfully, the dependencies for Python are relatively light, but true, it isn't always fun to build on Cygwin
[17:45:27] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:45:45] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[17:47:28] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:48:31] *** Joins: goldfish (~goldfish@user/goldfish)
[17:51:19] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[17:51:29] *** Parts: buZz (~buzz@sky.thebigblue.tk) ()
[17:53:18] <greatgatsby> orbisvicis, did you look at pyenv?  I haven't used it on cygwin, but it's specifically for building/managing python versions
[17:53:24] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[17:53:58] *** Joins: yolo (~xxiao@159.89.184.51)
[17:54:36] <rendar> let's say a Task goes out of time, should i cancel it, or throw asyncio.TimeoutError into it?
[17:55:09] <orbisvicis> greatgatsby, ah, I hadnt realize it also builds python versions.
[17:55:11] <yolo> under ipython: import os; os<tab><tab> shows a horizontal scroll bar for all methods, can I config something to see all methos in a long page instead of manually scroll them?
[17:55:45] <yolo> everytime i forgot some methods I had to scroll them which is tedious
[17:58:27] <greatgatsby> orbisvicis, yeah, IMHO that README should be screaming that it can do that.  Take a look at steps 4 and 5 here:  https://github.com/pyenv/pyenv#basic-github-checkout
[17:59:03] <orbisvicis> greatgatsby, yeah I had to scroll down to see that
[17:59:17] <greatgatsby> orbisvicis, I google for installing pyenv in cygwin and found a little gist, hopefully not too painful to get the build deps installed
[17:59:23] <grym> orbisvicis: pyenv more or less only builds python.  https://github.com/pyenv/pyenv-installer  helps
[18:00:31] <greatgatsby> yeah, the readme/description is not the greatest IMHO.  I enables you to install an arbitrary python version as easily as `pyenv install 3.9` and then it allows you to easily switch between all your pyenv installed environments.
[18:00:48] *** Joins: kreg (~blight_@iqoqi060.uibk.ac.at)
[18:01:09] <kreg> awwww man i use asyncio and i wonder why the function i try to call is not called... forgot 'await' X) :')
[18:01:23] *** Quits: pycode (~pycode@2001:b07:5d28:551:c461:e830:6cc:d7b8) (Ping timeout: 246 seconds)
[18:01:24] <kreg> but asyncio is quite cool
[18:01:57] *** Joins: jazzy (~jaziz@2600:380:844f:a894:cd4d:a937:b8dc:7fa2)
[18:01:58] <kreg> i am used to Qts signal/slot stuff so it's a bit different (but i think makes a lot of sense)
[18:02:15] <kreg> asyncio is the shit :D  python is the double shit :D
[18:02:41] <lericson> pretty sure that should give you a warning, kreg
[18:02:44] <kreg> at least 1234 people seem to share that opinion
[18:02:51] <kreg> the sh** ? oh sorry
[18:03:05] <lericson> no
[18:03:09] <kreg> i am used to another channel here where this is all totally relaxed
[18:03:15] <lericson> kreg: https://bpa.st/UTIQ
[18:03:34] <kreg> ah lol
[18:03:42] <kreg> you are right i used to get this, hm lets see
[18:03:56] *** Quits: vimart (~vimart@85.255.237.205) (Quit: WeeChat 2.8)
[18:03:59] <kreg> i am using python 3.8 on that machine cause its win7
[18:05:30] *** Joins: vladoski (~vladoski@217.147.130.65)
[18:05:56] <kreg> not sure if it's relevant but it was a class function, but should this always give a warning or just if the return value is not used? cause you could have a function returning an async method and the calling function awaits for that object, or? (i dont know much about asyncio details/internals)
[18:06:22] <kreg> anyway now it works :-)
[18:06:29] <lericson> you should never get that warning
[18:06:31] <lericson> if you do, you have a bug
[18:06:52] <kreg> yes i know, but in my case it was the opposite, i should get it and didnt
[18:06:59] <lericson> ah
[18:07:21] <lericson> in that case, there is still a reference to the coroutine
[18:07:49] *** Joins: legola (~legola@46.235.100.27)
[18:08:33] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[18:08:44] *** Joins: thiras (~thiras@user/thiras)
[18:09:24] <vladoski> Hi guys, sometimes I need to do some stuff on some old py2 projects, does anyone know if it's possible to have symbol search on vscode with py2 and Jedi language server?
[18:10:26] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:11:39] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:11:56] <kreg> lericson: this is also a bit unexpected for me: https://bpa.st/K2YA
[18:12:03] <kreg> anyway i have to leave now
[18:12:05] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Remote host closed the connection)
[18:12:10] <bjs> kreg: you can only `await` inside an `async def`
[18:12:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:12:40] <kreg> hm yeah true then it makes sense, so i could pass my 'x' into an async def and await it there i guess
[18:13:11] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[18:13:58] *** Quits: p-i-_ (~Ohmu@223.206.70.53) (Remote host closed the connection)
[18:13:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:14:27] <bjs> yeah
[18:14:33] *** Joins: p-i- (~Ohmu@223.206.70.53)
[18:15:40] *** sgn_ is now known as sgn
[18:16:33] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[18:18:31] *** Joins: Togra (~Togra@user/togra)
[18:19:11] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Ping timeout: 265 seconds)
[18:19:24] <Togra> so I have a list with two items, and once every 24 hours, I secrets.random() the list to pick one. for a while now, it seems to only ever be picking the first one, is it possible I've goofed something, or am I not seeding it well, or is it just that this is random and sometimes random can pick the first element every time in a row for a while?
[18:19:46] <Togra> it's an IRC bot game, which is why it seems so gimmicky, it is exactly a gimmick
[18:20:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[18:20:01] <Togra> I'll pastebin it
[18:20:07] <grym> Togra: it's normal to flip a coin and get a lot of heads in a row
[18:20:26] <grym> but users generally don't think that's true :)
[18:21:04] <Togra> yeah, that's what I've been thinking, and I haven't been logging or keeping track
[18:21:20] <grym> Togra: with n>2, i've started shuffling indexes instead of really picking random rolls independently every time
[18:21:33] <Togra> well, in this case there's only ever two elements to pick from
[18:22:00] <grym> right, so you want "psuedorandomish but without too many streaks", which is kind of a fussy heuristic
[18:22:03] <Togra> there's another part of the code where it picks two random names out of a list of like 250 or so, and it does correctly and pretty randomly pick two names
[18:22:11] <Togra> ah, so more complicated than just random
[18:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:22:30] <grym> you could pre-generate a long list of 0s and 1s and prune the streaks out, maybe
[18:22:50] <grym> "250 pick 2" and "2 pick 1" won't behave the same
[18:22:58] <Togra> right
[18:22:59] <grym> or they totally will but it won't look that way :)
[18:23:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:23:12] <Togra> yeah, just with the massive list, it's harder to have streaks
[18:23:37] <grym> yep
[18:23:46] <grym> look at the output of random.choices([0,1], k=100) or something
[18:23:51] <Togra> I wasn't sure if somehow having it happen around the same time every day on a raspberry pi might be starving it of entropy, but I assume a part of why the secrets library is nice is that this simply isn't the case and I don't need to worry about entropy, it's covered
[18:23:52] <grym> and you'll see a lot of streaky behavior
[18:23:56] <Togra> ah ok
[18:24:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[18:25:35] <grym> you could also put your thumb on the scale explicity: bias the next roll towards the opposite of the previous one
[18:25:52] <grym> like "i have rolled a 0, so my chances of getting a 1 next are 75% not 50%" or something
[18:26:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:26:12] <InPhase> Togra: secrets doesn't appear to have a .random(), so I can't check the API you're using, but some random APIs use the last value as past the end.  So you might have set it to randomly select 0 all the time.
[18:26:17] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:26:38] <Togra> oh interesting
[18:26:39] *** Joins: wyclif (~wyclif@user/wyclif)
[18:26:55] <Togra> I tried a for loop to run secrets.choice() 100 times, and it behaved about the same as random.choices() in the example above
[18:27:05] <Togra> lots of streaks, but it does flip over to 1 from time to time
[18:27:13] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[18:27:18] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[18:27:29] <Togra> this might be trickier because I only get one result per day, rather than, say, 5 minutes- so I've only had maybe 5 results where I've been paying attention
[18:27:34] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:27:39] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:28:10] <InPhase> Togra: That's rare enough to bother testing it more carefully.  p < 0.05  :)
[18:28:22] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:28:33] <Togra> yeah
[18:28:38] *** Joins: briian (uid321220@id-321220.uxbridge.irccloud.com)
[18:29:00] <Togra> I've set it up to log the results now, and the list its picking from str()'d, so if something is broken with the list I'm giving it I should be able to tell
[18:29:03] <InPhase> Togra: Simple test, change the timestamp to 1 second and set another copy running.
[18:29:19] <InPhase> timestep
[18:29:22] <Togra> yeah
[18:29:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[18:30:34] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[18:31:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:32:07] *** Joins: wyclif (~wyclif@user/wyclif)
[18:32:35] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[18:33:22] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[18:33:36] *** Joins: waynew (~wayne@user/waynew)
[18:33:53] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[18:34:05] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[18:34:29] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:36:39] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[18:36:40] <zln> I get a strange "File ...", line 9 SyntaxError unexpected EOF while parsing for this code and cannot see what it is complaining about https://bpa.st/HTUA
[18:36:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[18:37:37] *** Joins: wyclif (~wyclif@user/wyclif)
[18:38:21] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[18:38:35] <grym> zln: your close parens and quote are in the wrong order on line 7
[18:38:45] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:38:50] <grym> or .. hm.
[18:39:18] <grym> ignore that :)
[18:39:19] <zln> I copied it from github readme page for textual
[18:39:22] <zln> :)
[18:39:25] <briian> it probably copied wrong
[18:39:28] <briian> format the file
[18:39:36] <grym> stray whitespace?
[18:39:37] <zln> hmm, I'll check line endings
[18:39:41] *** Joins: ano (~ano@user/ano)
[18:40:01] *** dcaro is now known as dcaro_meeting
[18:40:45] <zln> http://imgur.com/dAlJLDA
[18:42:10] <briian> can you unindent that line and then reindent it
[18:42:16] <zln> that's all whitespace newline etc
[18:42:18] <zln> very strange
[18:42:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:42:38] <briian> is this vim?
[18:42:53] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[18:43:07] *** Joins: wyclif (~wyclif@user/wyclif)
[18:43:48] *** Joins: sgn (~sgn@user/sgn)
[18:47:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:48:37] *** Joins: wyclif (~wyclif@user/wyclif)
[18:49:50] *** Quits: y1n (~y1n@178.115.53.20.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[18:50:17] *** Joins: y1n (~y1n@178.115.53.20.wireless.dyn.drei.com)
[18:51:01] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:52:31] <axisys> looking for a simple way to print based on env var. like DEBUG=true python foo.py .. how do I add that check in  foo.py? do I use os.environ.get('DEBUG') ?
[18:52:36] <lericson> psa: put your preconditions in asserts
[18:53:25] <grym> axisys: that'll work, yep
[18:53:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:54:00] <zln> axisys: thats vim
[18:54:06] <zln> I mean briian :D
[18:54:07] *** Joins: wyclif (~wyclif@user/wyclif)
[18:54:27] <axisys> grym: thanks
[18:54:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:55:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:55:27] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[18:55:39] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:52] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[18:56:00] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:56:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[18:56:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:56:49] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:57:34] <SnoopJ> axisys, it's worth pointing out that the `logging` module has a DEBUG level, although you'll have to DIY an environment variable to control the level
[18:57:36] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[18:57:56] <briian> zln: did you get it to work?
[18:58:09] <briian> also did you :set paste before pasting?
[18:58:13] <zln> nope
[18:58:18] <zln> yes, I used set paste
[18:58:23] *** Joins: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net)
[18:58:24] <briian> ah ok
[18:58:33] <zln> but first time I wrote the code manually and got the error
[18:58:39] <briian> wonder if the issue is in App then
[18:58:39] <zln> then I copy pasted
[18:58:56] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[18:59:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:59:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:59:38] *** Joins: wyclif (~wyclif@user/wyclif)
[19:02:05] <zln> lol, really dumb today :)
[19:02:14] <zln> You can ignore everything I said today
[19:02:18] *** Quits: bjs (sid190364@user/bjs) ()
[19:02:28] <zln> thank you for your cooperation
[19:02:36] *** Joins: bjs (sid190364@user/bjs)
[19:02:51] <zln> :p
[19:02:52] <briian> zln: what was it?
[19:03:01] <zln> don't ask plz :p
[19:03:01] *** Quits: bjs (sid190364@user/bjs) (Client Quit)
[19:03:05] <briian> lol
[19:03:07] <briian> i have to know
[19:03:16] *** Joins: bjs (sid190364@user/bjs)
[19:03:19] <briian> didnt save? lol
[19:03:22] <zln> lol, you're one of those >D
[19:03:23] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[19:04:01] <zln> The file I was running and the one I had open in vim were different files
[19:04:09] <briian> ha
[19:04:14] <zln> the one with errors missed the last paren
[19:04:17] <zln> :D
[19:04:22] <grym> haHA!
[19:04:27] <zln> multitasking here
[19:04:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:05:01] * zln /clear && reset ##python
[19:05:09] *** Joins: wyclif (~wyclif@user/wyclif)
[19:05:27] <zln> #python I mean :p
[19:05:41] <zln> not used to be able to join # chans :D
[19:05:55] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:06:49] <greyblue9> axisys: if you're running via pytest you could use --log-cli-level=DEBUG, but i do the same thing SnoopJ  mentioned, and set the level of the root logger to `DEBUG` `if "DEBUG" in os.environ`
[19:10:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:10:39] *** Joins: wyclif (~wyclif@user/wyclif)
[19:11:16] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:12:35] *** Joins: magla (~gelignite@55d412e9.access.ecotel.net)
[19:13:12] <aniruddha> Hello!, can anyone tell me https://dpaste.org/tufH#L9 what is happening in line no 9 like what we are checking in the if statement
[19:13:37] <bjs> aniruddha: it's asking if ret is larger than (1 << 31)
[19:14:01] <bjs> (some people would write 1<<31 as 2**31)
[19:14:46] *** Joins: TML (~tml@user/tml)
[19:14:51] <aniruddha> that't the 32 bit right?
[19:14:52] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:01] <aniruddha> we are checking i guess
[19:15:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:16:02] <CrtxReavr> I thought there was a .ini file reader module in base?
[19:16:11] *** Joins: wyclif (~wyclif@user/wyclif)
[19:16:16] <grym> CrtxReavr: configparser
[19:16:40] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:17:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[19:17:36] <CrtxReavr> did it get renamed from ConfigParser?
[19:17:50] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:18:53] <grym> configparser.ConfigParser()
[19:19:25] <CrtxReavr> I have old scripts with ``import ConfigParser``
[19:19:25] *** Quits: y1n (~y1n@178.115.53.20.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[19:19:32] <jinsun> it was renamed from 2 to 3
[19:19:49] <jinsun> in python2 you use the old Java naming
[19:20:25] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:20:33] *** Quits: vladoski (~vladoski@217.147.130.65) (Remote host closed the connection)
[19:21:30] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Remote host closed the connection)
[19:21:30] <CrtxReavr> That makes sense.
[19:21:36] *** Joins: pankid (~quassel@pankid.club)
[19:21:53] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:22:28] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:f1e5:9d26:3b71:29c5)
[19:26:07] *** Joins: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5)
[19:26:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:27:03] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Quit: Leaving)
[19:27:11] *** Joins: wyclif (~wyclif@user/wyclif)
[19:29:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:29:43] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:31:20] <orbisvicis> when building python I see "undefined reference to `__gcov_indirect_call_profiler_v4'", how do I disable gcov?
[19:31:27] *** Joins: fikran (~fikran@user/fikran)
[19:31:50] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[19:31:53] <lericson> have to recompile without gcov init, orbisvicis
[19:32:00] *** Quits: exciteabletom (~tom@58-7-220-242.dyn.iinet.net.au) (Ping timeout: 260 seconds)
[19:32:04] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:32:08] *** Quits: Mikaela- (~mikaela-@Feneas/Mikaela-) (Read error: Connection reset by peer)
[19:32:08] *** Quits: bim9262[m] (~bim9262@user/bim9262) (Read error: Connection reset by peer)
[19:32:10] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Read error: Connection reset by peer)
[19:32:10] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Write error: Connection reset by peer)
[19:32:10] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Write error: Connection reset by peer)
[19:32:11] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Write error: Connection reset by peer)
[19:32:11] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (Read error: Connection reset by peer)
[19:32:11] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Write error: Connection reset by peer)
[19:32:12] *** Quits: Maciej (~maciej@2001:470:69fc:105::ed7d) (Read error: Connection reset by peer)
[19:32:12] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Write error: Connection reset by peer)
[19:32:12] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Write error: Connection reset by peer)
[19:32:12] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Write error: Connection reset by peer)
[19:32:12] *** Quits: jinsun_ (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[19:32:12] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Write error: Connection reset by peer)
[19:32:13] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Write error: Connection reset by peer)
[19:32:13] *** Quits: streampunk (~streampun@2001:470:69fc:105::f1d1) (Read error: Connection reset by peer)
[19:32:13] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Read error: Connection reset by peer)
[19:32:13] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Write error: Connection reset by peer)
[19:32:14] *** Quits: jwon (~jwon@user/jwon) (Write error: Connection reset by peer)
[19:32:14] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Write error: Connection reset by peer)
[19:32:14] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Write error: Connection reset by peer)
[19:32:14] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Write error: Connection reset by peer)
[19:32:14] *** Quits: neolem[m] (~neolem@2001:470:69fc:105::c675) (Write error: Connection reset by peer)
[19:32:14] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[19:32:15] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Write error: Connection reset by peer)
[19:32:15] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Write error: Connection reset by peer)
[19:32:15] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Write error: Connection reset by peer)
[19:32:15] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Write error: Connection reset by peer)
[19:32:15] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[19:32:15] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Write error: Connection reset by peer)
[19:32:16] *** Quits: allegary (~allegary@apache/committer/gjm) (Write error: Connection reset by peer)
[19:32:16] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Write error: Connection reset by peer)
[19:32:16] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Write error: Connection reset by peer)
[19:32:40] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[19:32:44] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 246 seconds)
[19:33:02] <f8e4> is there a website to autofix json?
[19:33:10] <orbisvicis> lericson, I never ran "gcov init" and havent grepped anything gcov-related in makefile/configure.ac, etc
[19:33:17] <bjs> f8e4: fix it?
[19:33:40] <bjs> f8e4: what do you mean to "autofix" it?
[19:33:43] * CrtxReavr does ghetto arrays in configparser.
[19:33:46] <whatsupboy> f8e4: something like jsonbeautify?
[19:34:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:34:07] <whatsupboy> bjs:  I guess they want to check if json is valid or not
[19:34:19] <SnoopJ> orbisvicis, how are you building Python? As I understand it, gcov is only needed if you're trying to `make coverage`
[19:34:32] <bjs> whatsupboy: I'm not sure,  that's why I ask :)
[19:34:33] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[19:34:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:35:14] *** Joins: arknix (~arknix@2806:2f0:51e1:e697:2a53:6941:3e35:a767)
[19:35:19] *** Parts: Everything (~Everythin@37.115.210.35) ()
[19:36:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:36:35] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 246 seconds)
[19:36:53] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[19:37:13] <CrtxReavr> whatsupboy, I wrote a basic json linter in python.
[19:37:28] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[19:37:28] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[19:37:28] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[19:37:28] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[19:37:28] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[19:37:28] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[19:37:37] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[19:37:39] <grym> i usually either: pipe it through jq, which prettyprints it
[19:37:42] *** Joins: jwon (~jwon@user/jwon)
[19:37:56] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[19:37:56] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[19:37:56] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[19:37:56] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[19:38:00] *** Joins: akk (~akk@75.161.146.115)
[19:38:02] <grym> or M-x json-mode-beautify the file in my editor
[19:38:02] <CrtxReavr> This has an option for that.
[19:38:10] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[19:38:10] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:38:10] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[19:38:11] *** Joins: psydroid (~psydroid@user/psydroid)
[19:38:11] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[19:38:23] *** Joins: neolem[m] (~neolem@2001:470:69fc:105::c675)
[19:38:24] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[19:38:24] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[19:38:24] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[19:38:24] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[19:38:24] *** Joins: allegary (~allegary@apache/committer/gjm)
[19:38:24] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[19:38:24] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[19:38:24] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[19:38:24] <CrtxReavr> https://bpa.st/LZ7A
[19:38:24] *** Joins: jinsun_ (~jinsun@user/jinsun)
[19:38:38] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[19:38:38] *** Joins: Maciej (~maciej@2001:470:69fc:105::ed7d)
[19:38:38] *** Joins: bim9262[m] (~bim9262@user/bim9262)
[19:38:39] *** Joins: Mikaela- (~mikaela-@Feneas/Mikaela-)
[19:38:43] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[19:38:55] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[19:39:15] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:39:17] *** Joins: Chex (~Chex@user/chex)
[19:39:31] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[19:39:43] *** Joins: mickey (~user@user/mickey)
[19:40:08] *** Joins: Elzington (~Elzington@89.38.227.231)
[19:40:19] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[19:40:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:40:50] *** Quits: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5) (Remote host closed the connection)
[19:40:56] *** Joins: naan (~Naan@user/naan)
[19:40:58] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[19:41:20] *** Joins: wyclif (~wyclif@user/wyclif)
[19:41:42] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[19:42:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:42:34] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[19:43:11] <orbisvicis> SnoopJ: autoreconf; ./configure --enable-optimizations; make
[19:44:55] *** Quits: TomyWork (~TomyLobo@p200300e80f06af009532a697cfcf6f01.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:45:26] <lericson> what do you call it when you import like two-three dozen identifiers from another module?
[19:45:56] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:46:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:46:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:46:52] *** Joins: wyclif (~wyclif@user/wyclif)
[19:47:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:48:40] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:49:34] <SnoopJ> orbisvicis, it's possible the optimizations need gcov to perform PGO, I would try a build without them.
[19:49:59] *** Joins: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5)
[19:50:50] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:51:01] *** Joins: holgersson (~quassel@user/holgersson)
[19:51:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[19:52:22] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[19:53:59] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[19:55:47] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:56:43] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Remote host closed the connection)
[19:56:59] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[19:57:53] *** Joins: wyclif (~wyclif@user/wyclif)
[19:58:02] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[19:58:09] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:59:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[19:59:31] *** Joins: boxrick (sid98261@id-98261.hampstead.irccloud.com)
[19:59:38] <boxrick> Hello!
[19:59:51] <SnoopJ> hi boxrick
[20:00:06] <boxrick> I have a simple question I have this data format:
[20:00:06] <boxrick> [{'Key': 'Name', 'Value': 'datahere'}, {'Key': 'another_key', 'Value': 'true'}]
[20:00:09] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:00:20] <boxrick> I wish to retrieve the Value of Name
[20:00:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:00:36] <boxrick> So a list of maps... what would be the best way to do this?
[20:00:45] <boxrick> map <--> dict
[20:01:28] <lericson> a dict sounds good yea
[20:02:07] <boxrick> Well the list isnt needed, essentially got to remove the list then lookup the dict I assume?
[20:02:07] <SnoopJ> boxrick, do the individual mappings in this list 'update' each other, or are they completely independent?
[20:02:22] <boxrick> They are completely independent, I want to ignore them
[20:02:29] <boxrick> I only care about the key Name
[20:02:50] <boxrick> Just need to extract the value from it, as thats a returned data type.
[20:02:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:02:59] *** Quits: control (~v1@user/control) (Ping timeout: 252 seconds)
[20:03:24] *** Joins: wyclif (~wyclif@user/wyclif)
[20:03:35] *** Quits: kreg (~blight_@iqoqi060.uibk.ac.at) (Quit: Client closed)
[20:04:12] <SnoopJ> You could do `next(d['Value'] for d in list_of_dicts if d['Key'] == 'Name')`, but it's kind of unwieldy and can raise exceptions if the keys are missing or no such dict exists (there's dict.get() to handle missing keys with a default, and next() accepts a default as well).
[20:04:58] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 260 seconds)
[20:05:15] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[20:05:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[20:05:28] <SnoopJ> Alternatively, you could combine these into a single dict: `combined = {d['Key']: d['Value'] for d in list_of_dict}` and then you can just do `d['Name']` to get the associated value (this will be substantially faster than scanning the list if you have many such dicts)
[20:05:31] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[20:06:05] *** Joins: gusto (~Augustus@109.255.100.54)
[20:06:56] *** Joins: ano (~ano@user/ano)
[20:07:37] <boxrick> Option 2 works and is quite neat.
[20:08:22] <SnoopJ> it sounds like it more directly represents the mapping (in the maths sense) that you care about
[20:08:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:08:39] <SnoopJ> although note that if a 'Key' is repeated it will clobber the first one, which is why I asked about that
[20:08:54] *** Joins: wyclif (~wyclif@user/wyclif)
[20:08:56] <SnoopJ> s/the first/all but the last/
[20:09:14] *** dcaro_meeting is now known as dcaro
[20:09:14] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:09:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:11:33] <axisys> i same start and end time with datetime.datetime.now() and then print the diff which has too many decimals .. how do I show the diff with just two decimals?
[20:11:40] <axisys> i save*
[20:11:55] *** dcaro is now known as dcaro_away
[20:12:32] <lericson> f'{(t1-t0).total_seconds():.2f}' axisys
[20:12:51] <axisys> lericson: thanks
[20:13:16] <lericson> i generally go for .3g or .5g though because it's easier to read for me
[20:13:44] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[20:13:59] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:13:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:14:01] <lericson> e.g. if your timedelta is 0.00001 seconds, .2f shows 0.00 whereas .5g would give you 1.0e-5
[20:14:10] *** Joins: Adoi (~Adoi@user/adoi)
[20:14:20] <lericson> 1e-05 even
[20:14:24] *** Joins: wyclif (~wyclif@user/wyclif)
[20:15:07] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[20:15:44] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[20:16:00] <axisys> lericson: I am just measuring how long it takes to run the code.. bet if it were some astronomy or system time, the .5g would be lot accurate
[20:16:41] <lericson> there are usecases for both
[20:16:53] <lericson> let me know when you want to automatically choose units :p
[20:17:14] *** Quits: ConstantDesc (~textual@cpc146480-hari23-2-0-cust237.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:17:43] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[20:17:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:17:50] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:19:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:19:25] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:19:36] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:19:56] *** Joins: wyclif (~wyclif@user/wyclif)
[20:20:51] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[20:22:38] <axisys> lericson: now I am curious :-)
[20:24:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:25:27] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:01] *** Joins: Samian (~Sami@user/samian)
[20:27:23] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[20:30:01] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[20:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:30:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:30:58] *** Joins: wyclif (~wyclif@user/wyclif)
[20:31:08] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[20:31:13] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[20:31:20] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[20:34:05] *** Joins: p-i-_ (~Ohmu@223.206.70.53)
[20:35:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:36:06] *** Joins: ndwk (~ndwk@user/ndwk)
[20:36:24] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[20:36:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:37:05] *** Quits: p-i- (~Ohmu@223.206.70.53) (Ping timeout: 252 seconds)
[20:38:38] *** Quits: naan (~Naan@user/naan) (Quit: Leaving)
[20:38:44] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 252 seconds)
[20:38:47] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:79ae:6d91:1946:70f1)
[20:39:04] *** Joins: snalty (~Shhh@user/snalty)
[20:39:09] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[20:39:18] *** Joins: martums (~martums@user/martums)
[20:39:24] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:40:18] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:41:09] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[20:41:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:41:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d)
[20:42:02] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:18] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[20:42:29] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[20:45:23] *** Quits: arknix (~arknix@2806:2f0:51e1:e697:2a53:6941:3e35:a767) (Quit: Client closed)
[20:46:42] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:5471:91b3:893d:7d7d) (Quit: Leaving)
[20:47:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:47:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:09] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:49:02] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Ping timeout: 246 seconds)
[20:49:47] *** Joins: arti (~arti@193.40.103.195)
[20:49:59] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 265 seconds)
[20:51:56] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:52:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:53:03] *** Joins: wyclif (~wyclif@user/wyclif)
[20:56:10] *** Joins: djapo (~archangel@user/djapo)
[20:57:23] *** Quits: arti (~arti@193.40.103.195) (Quit: arti)
[20:58:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:58:33] *** Joins: wyclif (~wyclif@user/wyclif)
[21:00:06] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:02:00] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[21:02:50] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[21:03:00] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[21:03:08] <marduk> join #django
[21:03:12] <aphysically> python 3.10 soon \o/
[21:03:19] <marduk> sorry
[21:03:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:03:27] <aphysically> I'll have to figure out pyenv or the next best thing if I want to use it on debian stable though I guess
[21:04:05] *** Joins: wyclif (~wyclif@user/wyclif)
[21:05:06] *** Joins: fdan (~fdan@192.146.154.3)
[21:05:35] *** Joins: roped (~lonely_@user/roped)
[21:06:07] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[21:07:48] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[21:07:51] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[21:08:56] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[21:08:58] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:09:10] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:09:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:09:34] *** Joins: wyclif (~wyclif@user/wyclif)
[21:09:57] *** Joins: brabrax (~brabrax@user/brabrax)
[21:10:15] *** Joins: califax (~califax@user/califx)
[21:10:25] *** Quits: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5) (Remote host closed the connection)
[21:11:13] *** Joins: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5)
[21:13:11] *** Joins: adder` (~adder@user/adder)
[21:13:21] <grym> pyenv is good no matter the version
[21:14:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:15:06] *** Joins: wyclif (~wyclif@user/wyclif)
[21:16:43] *** Quits: portalrat_ (~portalrat@user/portalrat) (Quit: Leaving)
[21:17:00] *** Joins: portalrat (~portalrat@user/portalrat)
[21:17:36] <adder`> I'm writing a TCP SYN port scanner, I'm using trio. I spin up 15 tasks that each send 64K / 15 packets to 64K ports, and I have a receiver that sits in a loop and print the responses. However, some of the packets don't make their way back, making the receiver loop forever. I'm looking for a way to reliably detect that no more packets are coming so that I can retry sending the missing ones. any ideas?
[21:19:30] <SnoopJ> pyenv +1, it's one of my first setup steps on Debian/Ubuntu
[21:19:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:20:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:20:34] *** Joins: wyclif (~wyclif@user/wyclif)
[21:22:10] <llanhmod> Hi! Regarding list comprehension, I have 2 questions, 1) given this code https://bpa.st/BTPQ, are #1 and #2 essentially doing the same thing? and 2) Can someone point to an indepth resource for understanding list comprehension.
[21:23:09] <llanhmod> I am reading the one on realpython.com right now.
[21:23:35] <grym> llanhmod: well, output and output2 are not equal to each other
[21:23:40] <grym> so they're certainly not equivalent in that sense
[21:23:58] <llanhmod> grym: right, and I don't really understand why the output isn't the same.
[21:24:18] <phy1729> The logic isn't the same, you have a -1 in L6
[21:24:30] *** Joins: davidd (~hay_sup@user/memorious)
[21:24:40] <davidd> hey, I can't figure out how to fix this mypy error: https://gist.github.com/daviddavis/2da0d06bf4b133011e55488dcf3316b6
[21:24:40] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[21:24:52] <davidd> not even sure exactly what mypy is telling me
[21:24:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:25:17] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:25:23] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Client Quit)
[21:25:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:25:43] <phy1729> Presumably you also have a from typing import Optional?
[21:25:53] <llanhmod> phy1729: I don't think it matters...still the same result if i add it to the list comprehension.
[21:26:07] *** Joins: wyclif (~wyclif@user/wyclif)
[21:26:45] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:26:51] <bjs> llanhmod: they are not the same,  in one you loop to len(array1) -1 in the other to just len(array1)
[21:26:57] <jinsun> llanhmod: you have array1[i], array[j] in 1st case, but i, j in 2nd one
[21:27:03] <bjs> llanhmod: in one you append (array1[i], array2[j]) in the other you append just (i,j)
[21:27:28] <jinsun> and even in comparring with target
[21:27:47] <llanhmod> bjs: even worst if i add the to #2
[21:27:52] <bjs> llanhmod: even worst?
[21:27:55] <davidd> phy1729: yea I have that import
[21:28:05] <llanhmod> sorry, i mean the result isn't near the expected.
[21:28:13] <llanhmod> https://bpa.st/BTPQ
[21:28:16] <llanhmod> ooops...
[21:28:21] <llanhmod> dont mind that...
[21:28:26] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:28:35] <llanhmod> [[1, 2], [3, 5]]
[21:28:37] <salparadise> davidd: seems you have some code missing, this works https://mypy-play.net/?mypy=latest&python=3.10&gist=7f7655f3be8bf54230145fb9a67fb4d7
[21:28:45] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:28:53] *** Joins: zaquest (~notzaques@5.128.210.178)
[21:29:12] <bjs> llanhmod: there are at least 3 places where the two are just written to do different things. In one place you go to len(array1)-1 and not in the other. in one you say `if array1[i] + ...` in the other you just have `if i + ...`,  in one you have `[array1[i], ...` in the other you have `[i,...`
[21:29:17] <bjs> llanhmod: if you fix these 3 places, it should be the same.
[21:29:18] <llanhmod> bjs: jinsun that's from using array1[i]...etc
[21:29:41] <llanhmod> hmm..
[21:29:47] <davidd> salparadise: interesting, thanks
[21:30:32] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[21:30:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:31:06] <grym> array's getting mutated, too, i think
[21:31:17] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 264 seconds)
[21:31:33] *** Joins: nergar (~Nergar@177.225.157.49)
[21:31:38] *** Joins: wyclif (~wyclif@user/wyclif)
[21:31:43] *** Joins: lastshell (~lastshell@user/lastshell)
[21:32:39] <bjs> davidd: the mypy errors are talking about overloading __sub__
[21:32:44] <grym> llanhmod: you're looking for sequential elements that sum to a target, right
[21:33:07] <bjs> davidd: but your code doesn't do that,  so it's likely you've just attributed the error to the wrong thing and are hiding the real error in the other code
[21:33:10] <llanhmod> bjs: still getting [[1, 2], [3, 5]] with the changes you suggested. https://bpa.st/VQYQ
[21:33:18] <llanhmod> grym: yes!
[21:33:20] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:33:28] <grym> llanhmod: ok, but, there's no 4 in your list
[21:33:33] <bjs> llanhmod: here you have [i,j] in the comprehension but [array1[i], array1[j]] in the loop
[21:33:34] <llanhmod> right...
[21:33:37] <bjs> llanhmod: why are they different?
[21:33:38] <davidd> bjs: yea, I had to add an assert isinstance(...) and it looks like it's fixed now
[21:33:40] <grym> why is the output of either anything but [5,2]
[21:33:55] <llanhmod> target is 7
[21:34:46] <bjs> llanhmod: [i,j] is not the same thing as [array1[i],array1[j]]
[21:34:47] <grym> llanhmod: right, but in out1, [-4, 11] are not sequential
[21:34:50] <llanhmod> grym: even if i make them exactly the same, array1[j] isn't the result I expect.
[21:35:05] <llanhmod> grym: 11 + -4 = 7
[21:35:06] <grym> llanhmod: and in out2, [3, 4] is wrong because 4's not an element of array1
[21:35:13] <llanhmod> ^right
[21:35:14] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:35:22] <llanhmod> where is the 4 coming from?
[21:35:28] <bjs> llanhmod: it's coming from [i,j]
[21:35:37] <grym> llanhmod: i know 11 + -4 is 7, but in array1, 11 and -4 are not adjacent elements
[21:35:39] <bjs> but [i,j] is not the same as [array1[i],array1[j]] like you had in the loop
[21:35:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:36:06] <grym> llanhmod: here's what i'd do, because i _hate_ index juggling: https://bpa.st/DDZQ
[21:36:27] <grym> i don't know if that'll offer you much clarity
[21:36:29] <llanhmod> so, change the expression/
[21:36:31] <llanhmod> ?
[21:36:39] *** Joins: ikus060 (~ikus060@96.127.228.230)
[21:36:47] <bjs> llanhmod: just looking at your two codes, one has [i,j] and the other has [array1[i],array1[j]]
[21:36:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:36:57] <bjs> probably you didn't mean [i,j] in your comprehension at all, and you wanted the other
[21:37:07] *** Joins: pycurious (~Adium@user/pycurious)
[21:37:07] *** Joins: wyclif (~wyclif@user/wyclif)
[21:37:13] <llanhmod> oh...
[21:37:17] <llanhmod> that works
[21:37:33] <llanhmod> huh....all this time!
[21:37:36] <llanhmod> Thanks guys
[21:37:40] <pycurious> I am trying to compile Python3.8 without sudo access on an ubuntu 18 system, and can't get bzip2 support. I compile bzip2 in a directory - how do i tell Python's ./configure to pick it up?
[21:38:11] <jinsun> llanhmod: https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions for understanding comprehensions
[21:38:27] <grym> llanhmod: the zip(thing, thing[1:]) trick is good for this "walk two elements at once" game, more generally
[21:38:40] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:38:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[21:38:59] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[21:39:11] <llanhmod> grym: cool..I was looking into the zip approach also. and thanks jinsun .
[21:39:33] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:40:47] *** Joins: fikran (~fikran@user/fikran)
[21:41:34] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:41:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:41:56] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Quit: Leaving)
[21:41:56] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:42:01] *** Joins: besnn (~besnn@user/besnn)
[21:42:23] *** Quits: besnn (~besnn@user/besnn) (Remote host closed the connection)
[21:42:39] *** Joins: wyclif (~wyclif@user/wyclif)
[21:42:41] *** Joins: besnn (~besnn@user/besnn)
[21:43:01] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:43:48] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[21:44:04] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[21:45:07] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:45:19] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[21:47:01] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[21:47:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:47:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[21:47:38] *** Joins: besnn (~besnn@user/besnn)
[21:48:06] *** Joins: Akuli (~Akuli@213.216.210.21)
[21:48:09] *** Joins: wyclif (~wyclif@user/wyclif)
[21:48:50] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[21:48:52] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:49:26] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:49:47] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:51:56] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[21:52:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:53:15] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:53:40] *** Joins: wyclif (~wyclif@user/wyclif)
[21:54:21] *** Quits: rsx (~dummy@ppp-188-174-140-96.dynamic.mnet-online.de) (Quit: rsx)
[21:54:35] *** Joins: Y37I (~yeti@d75-156-114-156.bchsia.telus.net)
[21:57:08] <axisys> on argparse argument, is there way to make sure argument type is str ? I do not see any option for type=str but when I use it there is no error, so not sure if it is working .. if I put 1 instead of foo it still prints
[21:58:16] <grym> axisys: print the type of the argument name after you parse it, and see if they're different
[21:58:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:59:11] *** Joins: wyclif (~wyclif@user/wyclif)
[21:59:36] *** Joins: brabrax (~brabrax@user/brabrax)
[21:59:40] *** Joins: califax (~califax@user/califx)
[22:00:04] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[22:00:21] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[22:00:21] *** Joins: redoc (~redoc@user/redoc)
[22:00:30] *** Joins: Auron (~Auron956@user/auron)
[22:01:16] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:01:20] <jinsun> type of all args is str by default I think
[22:01:22] *** Quits: bninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[22:01:26] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[22:01:40] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[22:01:40] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[22:02:26] *** Joins: brabrax (~brabrax@user/brabrax)
[22:02:48] *** Gustavo6046_ is now known as Gustavo6046
[22:03:10] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:eca0:82c6:1c95:331c)
[22:04:15] *** Joins: califax (~califax@user/califx)
[22:04:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:04:33] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:272b:298b:5f9f:8d70)
[22:04:40] *** Joins: wyclif (~wyclif@user/wyclif)
[22:05:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:09:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:10:11] *** Joins: wyclif (~wyclif@user/wyclif)
[22:11:33] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 276 seconds)
[22:14:02] *** Joins: wilk (~wilk@user/wilk)
[22:14:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:15:45] *** Joins: wyclif (~wyclif@user/wyclif)
[22:18:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:18:17] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 246 seconds)
[22:18:52] <axisys> jinsun: yep. just printed type of the arg like grym said
[22:19:02] <axisys> ok. I can live with that. thanks!
[22:19:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[22:20:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:20:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:21:18] *** Joins: wyclif (~wyclif@user/wyclif)
[22:21:34] *** Joins: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl)
[22:21:52] *** Joins: Xaldafax_ (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:21:57] <axisys> if I use default, do I need to use required=True in argparse for add_argument?
[22:22:03] *** Parts: davidd (~hay_sup@user/memorious) (WeeChat 2.7.1)
[22:22:42] <axisys> probably not .. just wanted to check if there are any corner case there
[22:22:42] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[22:24:16] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 252 seconds)
[22:26:02] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:26:10] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) (Remote host closed the connection)
[22:26:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:27:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:27:06] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[22:27:54] *** Joins: brabrax (~brabrax@user/brabrax)
[22:27:59] *** Joins: califax (~califax@user/califx)
[22:28:00] *** Parts: redoc (~redoc@user/redoc) (Closing Window)
[22:28:04] *** Quits: Xaldafax_ (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 252 seconds)
[22:28:38] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[22:28:38] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[22:31:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:31:13] *** Joins: ianliu (~Ian_Liu_R@2804:431:cfcf:c747:2ef1:b511:8789:c7c4)
[22:31:29] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 252 seconds)
[22:32:18] *** Joins: wyclif (~wyclif@user/wyclif)
[22:32:26] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[22:32:40] <ianliu> I have a pandas dataframe with a 2-level index. I would like to groupby the first index and sum the values on the second index. Is it possible to do this without reseting the index?
[22:33:58] *** Joins: humbertowoody (~humbertow@2806:107e:f:1419:250e:c7b8:fcfc:fc85)
[22:34:50] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[22:35:00] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1158:ec04:b6fc:6f72)
[22:37:13] <jinsun> ianliu: `df.groupby(level=0).sum()` ?
[22:37:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:37:46] <ianliu> but that would sum the values, not the index
[22:37:49] *** Joins: wyclif (~wyclif@user/wyclif)
[22:38:05] <ianliu> I mean, to columns, droping the second index level
[22:38:23] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:38:23] *** Quits: califax (~califax@user/califx) (Quit: ZNC 1.8.2 - https://znc.in)
[22:39:00] <jinsun> okay so you don't care about the dataframe? just want to sum the index?
[22:39:06] <ianliu> yes
[22:40:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:42:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:43:13] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Remote host closed the connection)
[22:43:19] *** Joins: wyclif (~wyclif@user/wyclif)
[22:43:29] *** Joins: vimart (~vimart@148.252.128.65)
[22:44:20] *** Joins: semeion (~semeion@user/semeion)
[22:46:03] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:46:11] <jinsun> ianliu: well, you can convert the index to dataframe and do a groupby sum on that `df.index.to_frame().groupby(0).sum()`, not sure if this satisfies your no-reset index condition
[22:47:58] <ianliu> the problem is dask's reset_index doesn't work the same way of pandas. I can't reset_index(level=1) on dask
[22:48:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:48:50] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:48:51] *** Joins: wyclif (~wyclif@user/wyclif)
[22:48:53] *** Quits: Y37I (~yeti@d75-156-114-156.bchsia.telus.net) (Ping timeout: 265 seconds)
[22:48:53] <ianliu> I have a dask dataframe, and wanted to compute the sum of all level == 1 index values, grouped by the level == 0 index values
[22:49:13] <ianliu> I can't see a way of doing that without computing the index
[22:49:38] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[22:50:30] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:50:55] *** Quits: greedom (~greedom@2001:16b8:2e35:a700:aa1a:a588:4652:6af5) (Remote host closed the connection)
[22:51:05] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[22:51:37] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[22:51:40] <jinsun> well I didn't use reset_index in my example, but I have no idea about dask and what you can do with dask dfs, so probably that didn't help
[22:52:07] *** Joins: vicfred (~vicfred@user/vicfred)
[22:52:39] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:53:09] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Client Quit)
[22:53:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:54:22] *** Joins: wyclif (~wyclif@user/wyclif)
[22:54:37] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[22:54:50] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[22:55:23] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[22:56:30] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:56:38] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1158:ec04:b6fc:6f72) (Quit: Leaving)
[23:01:35] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[23:01:56] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[23:02:02] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[23:02:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:03:15] <noarb> is there a way to use Pillow and numpy to capture images from a webcam, in order to process the image for a qr code, or is a tool like opencv required? No drawing on the image or showing a feed in a gui or anything like that, but sampling the webcam at a fixed rate an handing the frame off for qr code processing
[23:04:08] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:04:20] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:05:46] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[23:05:52] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[23:05:59] *** Joins: srilyk (~wayne@user/waynew)
[23:06:01] <grym> if you have a qr code reader tool that consumes an image, pillow should work
[23:06:36] <grym> you _might_ find it easier to drag in cv2 just to do the webcam stuff, but you migh tnot
[23:08:49] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Ping timeout: 252 seconds)
[23:09:19] *** Joins: wyclif (~wyclif@user/wyclif)
[23:09:59] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:11:15] *** Joins: arti (~arti@193.40.103.195)
[23:14:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:14:51] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:19] *** Joins: waynew (~wayne@user/waynew)
[23:15:47] *** Joins: redrum88 (~redrum88@user/redrum88)
[23:16:15] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[23:17:01] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1158:ec04:b6fc:6f72)
[23:17:09] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:18:12] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[23:18:51] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 265 seconds)
[23:19:19] *** Quits: magla (~gelignite@55d412e9.access.ecotel.net) (Quit: Stay safe!)
[23:19:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:19:55] <noarb> what would be the non-opencv way? I'll probably end up using it. I'm using pyzbar, which supports PIL images. Would i Just manually read bytes from the device file and see if I can construct an image out of that? (I think it may be more complicated...)
[23:20:22] *** Joins: wyclif (~wyclif@user/wyclif)
[23:21:35] <axisys> can argparse do this? -c and -p mutually inclusive and they both are mutually exclusive with -u ?
[23:22:10] <axisys> I can do -c and -u mutually exclusive .. but -c must need -p and also -p cannot be used with -u
[23:22:53] *** Joins: semeion (~semeion@user/semeion)
[23:23:15] <axisys> I saw add_mutually_exclusive_group for -c and -u and then using code to verify the other relation
[23:24:04] <axisys> I am using -c and -u with add_mutually_exclusive_group
[23:24:19] *** Joins: Pickchea (~private@user/pickchea)
[23:24:23] *** Joins: oriba (~oriba@x4db7e220.dyn.telefonica.de)
[23:24:24] *** Joins: Guddu (~Guddu@190.84.88.92)
[23:24:42] *** Quits: humbertowoody (~humbertow@2806:107e:f:1419:250e:c7b8:fcfc:fc85) (Ping timeout: 260 seconds)
[23:25:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:25:53] *** Joins: wyclif (~wyclif@user/wyclif)
[23:28:06] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[23:28:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[23:29:32] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[23:29:47] *** Joins: Dan39 (~dan@user/dan39)
[23:30:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:30:53] *** Joins: nomic2 (~nomic@185.217.117.173)
[23:31:23] *** Joins: wyclif (~wyclif@user/wyclif)
[23:31:24] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:31:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:31:38] *** Joins: clime (~clime@37-48-38-254.nat.epc.tmcz.cz)
[23:31:43] <clime>     if sample_weights != None:
[23:31:45] <clime> ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
[23:31:58] <clime> where sample_weights is <class 'numpy.ndarray'>
[23:32:26] <clime> anyone knows how is that possible? I do None check, so idk why I get that error.
[23:33:32] <sco1> What is the goal of your if statement? What happens if there's only one None? What happens if there's more than one? What happens if all of them are None?
[23:33:43] <sco1> Or, none of them are None
[23:34:06] <clime> well ok, it's weird
[23:34:14] *** Joins: humbertowoody (~humbertow@187.202.172.132)
[23:34:17] <grym> it's consistent with numpy's data model
[23:34:23] <clime> i guess
[23:34:30] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1158:ec04:b6fc:6f72) (Ping timeout: 260 seconds)
[23:34:33] <clime> got surprised
[23:34:43] <clime> thx
[23:34:44] *** Quits: clime (~clime@37-48-38-254.nat.epc.tmcz.cz) (Client Quit)
[23:35:02] <grym> clime you want `is None` anyway
[23:35:35] *** Parts: ndwk (~ndwk@user/ndwk) ()
[23:35:54] *** Quits: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[23:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:36:34] <zware> Anyone know of a tool that will parse source code to create a set of package requirements?  Either parsing code directly or looking for magic comments?
[23:36:53] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:36:54] *** Joins: wyclif (~wyclif@user/wyclif)
[23:37:34] <zware> Or have any major holes to poke in the idea? :)
[23:37:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:39:09] <jtanner> you might run into version incompatibilities with things like pandas unless you have tests
[23:40:28] <jtanner> https://github.com/bndr/pipreqs per google
[23:40:42] <grym> zware: when i find code that doesn't have a sane dependency list, i tend to just rg for `import` and do it manually
[23:41:48] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[23:41:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:42:19] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[23:42:25] *** Joins: wyclif (~wyclif@user/wyclif)
[23:43:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Quit: Leaving)
[23:43:19] <zware> For some background, what we're currently doing is listing our dependencies (possibly with some form of version constraint, but usually not) in a `requirements.in` file, which then gets converted to a `requirements.txt` file with all dependencies fully pinned via a `pip install -r requirements.in`, and then `requirements.txt` is used  for deployment.  Think `pip-compile`, but homebrew.
[23:43:29] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[23:43:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Ping timeout: 246 seconds)
[23:43:52] <zware> We want to specify minimum dependencies when we start using some new feature of a project, but I don't want those minimum dependencies to get out of date
[23:44:23] <zware> So I had the thought that we could mark up the usage in the code with the minimum version, and a parser could just check for the highest specified minimum version to treat as the true minimum
[23:44:39] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[23:44:52] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:46:00] <zware> jtanner: pipreqs looks interesting, but a bit light on documentation (and possibly maintenance?)
[23:46:52] <jtanner> i presume that's the nature of something that attempts to solve a difficult problem
[23:47:04] <newdimension> I'd like to log some data in json is a better way to do it then json.dumps() ?
[23:47:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:47:30] <sco1> "Better" in what way?
[23:47:34] <yitz> newdimension: json.dumps() is great. You should use it unless it's not working for some reason
[23:47:55] *** Joins: wyclif (~wyclif@user/wyclif)
[23:47:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:48:00] *** nomic2 is now known as nomic
[23:48:09] <phy1729> You could setup a log handler that does the json dumping so most of the code does the standard logger.warning(...
[23:48:13] <newdimension> For logging I usually log via logger.info() etc... but I'd like to be able to load the data so I can debug my program when I come across unexpected behavior
[23:48:23] <stealth_> newdimension, best way to log is to write to file with append. anything else is an overhead
[23:48:37] *** Quits: adder` (~adder@user/adder) (Quit: Leaving)
[23:48:58] <sco1> Why can't you load your logger logs?
[23:49:12] <stealth_> when you are viewing/storing the data, you can then parse it however you want.
[23:49:18] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Ping timeout: 265 seconds)
[23:49:24] *** Joins: srilyk (~wayne@user/waynew)
[23:49:28] <grym> newdimension: eliot logs to json
[23:49:47] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Ping timeout: 265 seconds)
[23:50:07] *** Joins: fikran (~fikran@user/fikran)
[23:50:12] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:50:16] <phy1729> stealth_: it's often far easier to start with structure (by not throwing it away) than have to impose structure after the fact
[23:50:43] <zware> newdimension: It's pretty straightforward to write a `JSONHandler` for `logging`, but there is not a standard one
[23:51:00] <zware> (That I know about :))
[23:51:03] <newdimension> sco1: I'd need to write something to get rid of timestamps and such to be able to load the data. I'm thinking of having a json.dumps() that overwrites the file that way I can just load the last state as-is
[23:51:27] <The-Compiler> newdimension: https://github.com/qutebrowser/qutebrowser/blob/v2.3.1/qutebrowser/utils/log.py#L797-L809 is what I use
[23:52:03] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[23:52:10] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[23:52:30] *** Joins: subopt (~subopt@2603-8081-2302-459a-5034-2547-3a03-db1d.res6.spectrum.com)
[23:52:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:52:41] <The-Compiler> been around for over 5 years, never had to touch it again :)
[23:52:45] *** Quits: nomic (~nomic@185.217.117.173) (Quit: Leaving)
[23:52:49] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[23:52:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:53:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[23:53:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:54:06] <zware> The-Compiler: Quite close to what I finally wrote a couple months ago :).  I have some extras to handle `extras` passed to the log call and to handle non-JSON-able types, though
[23:54:12] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Read error: Connection reset by peer)
[23:54:12] <stealth_> phy1729, its not about ease, its about priority! say you are running a server, its job it to server data asap, you don't really want to be wasting time and resource making your log formated pretty.
[23:54:20] <The-Compiler> there's also https://github.com/hynek/structlog/ but no personal experience with it
[23:54:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[23:54:32] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[23:54:59] <The-Compiler> stealth_: the time it takes to format a json log is totally insignificant unless you're logging, dunno, megabytes of data with every request
[23:55:36] <grym> stealth_: ehhhh, my server takes 4 hours to run a job; what's a few extra milliseconds between friends if it makes tracking bugs faster
[23:55:38] <stealth_> json log, doesn't json write the whole file over every time you write to it?
[23:55:49] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:55:59] <grym> jsonlines or ndjson maybe
[23:56:29] <stealth_> grym, what i am talking about is best practice arong servers, i dono what users want to do
[23:56:40] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[23:56:44] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[23:56:56] <grym> the way i read that logger, it'll make ndjson
[23:57:00] <grym> that The-Compiler linked
[23:57:25] <grym> (were you to write it to a file)
[23:58:08] <sco1> "best practice" is a bit generous
[23:58:18] <grym> well, context dependent anyway
[23:58:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:58:32] <stealth_> you see highend stats software log to file a simple text file, then they parse it later
[23:58:44] <stealth_> you don't want to be parsing while event is happening.
[23:58:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:00] <sco1> Who is talking about parsing?
[23:59:22] <stealth_> w/e you wana call it, that takes up more time
