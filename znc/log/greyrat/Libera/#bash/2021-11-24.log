[00:00:03] <lovetruth> Is this working?!...
[00:00:08] <llua> no
[00:00:13] <lovetruth> Why?
[00:00:42] <llua> the lack of understanding what "$@" does and how bash expects it's arguments
[00:00:53] <lovetruth> In my terminal it works
[00:01:40] <lovetruth> GNU bash, version 5.1.8(1)-release
[00:01:46] <greycat> Just use set -x.
[00:02:58] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[00:03:03] <greycat> Oh, you're still trying to do this "ask permission every step of the way" thing too.  NOT logging.  Despite the name of the function.  Well, don't do it this way.
[00:03:42] <lovetruth> greycat, but how?
[00:03:44] <greycat> You have 7 functions, each of which does a thing.  Yes?  OK, then in EACH ONE of those 7 functions, you write a read -p command to ask permission.  You do not try to save effort by doing black belt backflips.
[00:04:16] <llua> prob just stuck shotgun debugging after the arbitrary change of code from the example given
[00:04:26] <llua> and didn't get to the logging part yet
[00:04:32] <greycat> You think bash is a programming language.  It's not.  At least not a GOOD one.  You can't generalize.  You can't make things indirect.  You just grind.
[00:05:11] <lovetruth> greycat, yes, I've been thinking of bash as a sort of a programming language, that was true indeed :)
[00:06:48] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:08:24] *** Joins: rgrinberg (~textual@201.198.177.243)
[00:10:37] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[00:13:18] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[00:15:04] <LambdaComplex> bash is a decent enough shell and a terrible programming language
[00:16:55] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[00:17:28] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[00:18:59] <lovetruth> LambdaComplex, recommending something else for a rudimentary armhf CPU device?... (I guess not ksh or zsh)?...
[00:19:23] <LambdaComplex> lovetruth: another shell or another programming language?
[00:19:33] <lovetruth> shell
[00:19:35] *** Quits: kj (~kj@beta.aerisnetwork.net) (Remote host closed the connection)
[00:20:01] <greycat> May I suggest NOT asking the user for permission every step of the way when you run a script?  That sounds incredibly obnoxious.
[00:20:23] <LambdaComplex> i mean....bash works fine? unless you're running out of memory, i suppose. maybe ash if you wanted?
[00:20:25] <greycat> Is this really just an X-Y?  Is it you trying to implement a debugger?
[00:20:54] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[00:21:22] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:21:26] <LambdaComplex> well, memory _or_ disk space. perhaps busybox would be a better choice than bash + GNU(?) coreutils if you're limited on disk space
[00:21:30] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Client Quit)
[00:21:59] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:23:16] <lovetruth> greycat, I would prefer something more like a "debugger" - but don't have to ask "every step of the way" - it's more like: I want to make some scripts more usable by other people who will interact with them.
[00:23:28] <lovetruth> So... a generic solution would have been great, really :)
[00:23:43] <lovetruth> Because it has to apply to several scripts made by others :)
[00:24:58] <lovetruth> So if I can have/make a solution which can just be pasted inside - here and there... would be great :) - that being the reason, of course, why I've been trying it with type my_function | sed ... and so on... :)
[00:25:20] <greycat> !bashdb
[00:25:21] <greybot> The Bash Debugger Project is a gdb-style debugger for bash, available from http://bashdb.sourceforge.net/
[00:25:27] <greycat> No idea whether it actually works.  Never used it.
[00:27:33] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[00:28:23] *** Joins: davef (~davef@user/davef)
[00:28:29] <birkoff> greycat: would that apply to  a file descriptor as well ?
[00:30:44] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:33:58] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[00:34:35] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[00:36:04] <rya> I may have missed the reason behind the debugger, but set -x and shellcheck have been handy for my bash debugging efforts.
[00:36:14] *** Quits: nabaiste^ (~nabaiste@68.101.63.101) (Ping timeout: 260 seconds)
[00:39:02] *** Quits: roadt_ (~roadt@36.5.217.183) (Ping timeout: 260 seconds)
[00:39:49] *** Joins: roadt_ (~roadt@36.5.217.183)
[00:42:06] <stemid> is there a way to iterate over an associative array in sequence? I only know of ${!array[@]} but it seems to be random order set when the array is declared. doesn't matter if I do declare -A array=([foo]=bar [foo2]=bar2) or one by one with array[foo]=bar; array[foo2]=bar2
[00:42:18] <greycat> associative arrays do not HAVE a "sequence"
[00:42:32] <greycat> if you want to retain an ordering of the keys, you need a second list
[00:42:52] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[00:43:14] <greycat> if you don't care about the order of the keys, then sure, ${!aa[@]} gives you all the keys, in some unpredictable order
[00:43:16] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[00:44:40] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:44:51] *** Quits: kill (~killown@user/killown) (Ping timeout: 264 seconds)
[00:45:42] <stemid> I see, thanks
[00:47:01] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[00:47:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:48:59] *** Joins: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net)
[00:49:43] *** Quits: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com) (Quit: leaving)
[00:49:50] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:51:07] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:53:15] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 264 seconds)
[00:55:04] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[00:55:12] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:00:07] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[01:02:47] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[01:03:46] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Quit: WeeChat 3.3)
[01:04:21] <zro> i wanna remove all but the X newest files (datetime named) in a directory. is this a stupid way to do it? http://sprunge.us/8gEkG1?sh
[01:06:24] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[01:07:54] *** Joins: drogas (~drogas@jump2.jet.uk)
[01:08:06] <geirha> that's a good way to do it
[01:13:26] <zro> cool
[01:13:38] <zro> thx, geirha
[01:13:45] <lopid> now quit before it all goes wrong
[01:15:40] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[01:15:51] <zro> psh. whats the fun in that!
[01:16:15] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:18:09] <emanuele6> zro: you don't need to set LC_COLLATE for range globs in bash
[01:18:29] <emanuele6> # shopt globasciiranges
[01:18:30] <shbot> emanuele6: globasciiranges on
[01:18:55] <lopid> the fun begins
[01:19:30] <emanuele6> ranges use only ascii characters by default (with globasciiranges on), it will only use LC_COLLATE if you disable that option
[01:19:33] <emanuele6> so you are good
[01:20:15] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[01:27:53] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[01:30:37] *** Quits: dj (~dj@162.223.44.49) (Quit: Leaving)
[01:30:40] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[01:30:53] *** Joins: marcel (~marcel@user/marcel)
[01:31:26] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249)
[01:32:42] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 260 seconds)
[01:33:53] *** Quits: angkat (~angkat@2a02:587:121f:f103:127b:44ff:fe42:43b1) (Quit: Leaving)
[01:34:21] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[01:34:33] *** Joins: zebrag (~chris@user/zebrag)
[01:40:47] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[01:42:28] *** Joins: Jong (~Jong@2620:10d:c090:400::5:ddb6)
[01:43:17] <bionade24> Why is the $test empty here?             df  /srv/cd_storage/ --output=avail | tail -n1 | read test
[01:43:26] <greycat> !faq disappear
[01:43:27] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[01:43:28] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[01:43:39] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Ping timeout: 264 seconds)
[01:43:40] *** Quits: magla (~gelignite@55d416db.access.ecotel.net) (Quit: Stay safe!)
[01:43:56] <greycat> in that particular case it sounds like you just want  test=$(df ... | tail -n1)
[01:45:15] *** Joins: seninha (~seninha@user/seninha)
[01:45:39] <bionade24> greycat: Damn why did I miss the obvious *facepalm* ... guess I'm too tired. Thx for the quick help and explanation!
[01:46:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[01:47:51] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249) (Ping timeout: 264 seconds)
[01:50:30] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[01:51:21] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[01:54:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[01:55:16] *** Quits: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl) (Quit: The Lounge - https://thelounge.chat)
[01:55:24] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[01:55:35] *** Joins: EerdAppel (~eerdappel@84-24-184-139.cable.dynamic.v4.ziggo.nl)
[01:56:34] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[01:56:40] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Client Quit)
[01:56:43] *** Joins: extern (~archer@213.137.70.119)
[01:59:31] *** Quits: kyledit (uid520162@id-520162.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:00:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:00:24] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[02:02:31] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:05:04] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:05:47] *** Joins: timj (~timj@user/timj)
[02:06:16] *** Joins: namkeleser (~namkelese@101.179.132.178)
[02:06:27] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[02:07:01] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:09:11] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:10:48] *** Quits: sazawal_ (~sazawal@122.161.81.235) (Quit: Leaving)
[02:11:25] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[02:11:47] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:15:42] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:15:46] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[02:23:01] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:23:33] *** Quits: acegallagher (~Ace@174-16-184-4.hlrn.qwest.net) (Ping timeout: 250 seconds)
[02:24:14] *** Joins: acegallagher (~Ace@71-33-192-49.hlrn.qwest.net)
[02:25:39] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:25:57] *** Joins: jinsun__ (~quassel@user/jinsun)
[02:26:01] *** Joins: sgn (~sgn@user/sgn)
[02:26:50] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[02:27:26] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[02:28:15] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[02:29:10] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[02:32:33] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:35:20] *** Joins: Betal (~Betal@user/betal)
[02:35:47] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[02:37:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:37:58] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249)
[02:38:22] *** Joins: akoana (~ah@user/akoana)
[02:39:06] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: john_johnk)
[02:39:51] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:40:40] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:40:41] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[02:42:47] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:43:03] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:45:06] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[02:45:34] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:03] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249) (Ping timeout: 264 seconds)
[02:46:05] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[02:47:12] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[02:47:24] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[02:48:27] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Quit: Client closed)
[02:49:29] *** Quits: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net) (Quit: Client closed)
[02:53:11] *** Quits: extern (~archer@213.137.70.119) (Quit: LOVE YOU ALL)
[02:53:12] *** Joins: igemnace (~ian@user/igemnace)
[02:53:51] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 264 seconds)
[02:54:50] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:54:54] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:55:53] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:56:09] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[02:58:49] <anddam> hello, can I force an interactive shell while providing a non option argument?
[03:00:06] <e36freak> bash -i
[03:00:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[03:00:28] <e36freak> oh you want to set $1 though
[03:00:50] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[03:01:17] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:02:53] <anddam> oh right, I thought it was not reading .bashrc, but I added an echo and it is being sourced
[03:03:05] <e36freak> bash -is -- arg
[03:03:05] <anddam> I'll cut the xy problem and describe the issue
[03:03:15] <e36freak> if that's what you actually wanted to do
[03:03:43] <e36freak> please do
[03:04:10] <anddam> when I run   'ssh $remote_host' then 'locale' I get LANG=en_GB.UTF-8, when I run 'ssh -t $remote_host local
[03:04:18] <anddam> when I run   'ssh $remote_host' then 'locale' I get LANG=en_GB.UTF-8, when I run 'ssh -t $remote_host locale' I get LANG=
[03:04:22] <anddam> sorry, fat-fingered
[03:04:25] *** Joins: kill (~killown@user/killown)
[03:04:44] <anddam> I thought this was due to remote bash being non-interactive
[03:05:02] *** Joins: thiras (~thiras@user/thiras)
[03:06:32] *** Quits: Lunatrius (~Lunatrius@77.38.77.136) (Ping timeout: 240 seconds)
[03:07:09] *** Joins: Lunatrius (~Lunatrius@77.38.77.136)
[03:07:34] *** Joins: rgrinberg (~textual@201.198.177.243)
[03:07:49] *** Quits: rgrinberg (~textual@201.198.177.243) (Client Quit)
[03:07:56] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 246 seconds)
[03:08:01] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[03:08:34] *** Joins: Lunatrius` (~Lunatrius@77.38.22.219)
[03:08:37] <wiscii> # t='x'; printf "$t\n"
[03:08:37] <shbot> wiscii: x
[03:08:51] <wiscii> # t='$x'; printf "$t\n"
[03:08:52] <shbot> wiscii: $x
[03:09:41] <e36freak> anddam: interactive, no. login shell, yes
[03:09:53] <e36freak> it's /etc/profile and friends that set environment variables
[03:10:34] *** Joins: WinterStar (~IceLight@user/icelight)
[03:10:55] <e36freak> you can force it with bash -lc locale
[03:11:04] <anddam> ohh, yep
[03:11:06] <anddam> just done
[03:11:08] <anddam> thanks
[03:11:36] *** Quits: Lunatrius (~Lunatrius@77.38.77.136) (Ping timeout: 245 seconds)
[03:11:36] *** Lunatrius` is now known as Lunatrius
[03:11:51] *** Joins: arinov (~arinov@213.194.126.155)
[03:13:03] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[03:14:25] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:15:06] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:15:06] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f0cc:7ce1:5401:36db)
[03:15:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:44] <wiscii> # x=88; t='$x'; f(){printf "$1\n";} f $t;
[03:16:45] <shbot> wiscii: bash: syntax error near unexpected token `{printf'
[03:16:59] <wiscii> # x=88; t='$x'; f(){ printf "$1\n"; } f $t;
[03:17:00] <shbot> wiscii: bash: syntax error near unexpected token `f'
[03:17:14] <wiscii> # x=88; t='$x'; f(){ printf "$1\n"; }; f $t;
[03:17:15] <shbot> wiscii: $x
[03:17:41] <wiscii> # x=88; t='$x'; f(){ printf "eval $1\n"; }; f $t;
[03:17:42] <shbot> wiscii: eval $x
[03:17:46] <wiscii> lol
[03:17:49] *** Joins: rcernin (~rcernin@124.190.139.235)
[03:19:07] <emanuele6> # x=88; t='hello %shell'; f(){ printf "$1\n"; }; f $t;
[03:19:08] <shbot> emanuele6: hello
[03:19:27] <emanuele6> # x=88; t='hello%shell'; f(){ printf "$1\n"; }; f $t;
[03:19:28] <shbot> emanuele6: hellohell
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:46] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f0cc:7ce1:5401:36db) (Ping timeout: 268 seconds)
[03:20:51] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 264 seconds)
[03:21:11] <wiscii> # x=88; t='$x'; f(){ printf "$1\n"; }; f $(eval echo "$t");
[03:21:12] <shbot> wiscii: 88
[03:21:16] <wiscii> ^
[03:21:49] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:21:57] <emanuele6> wiscii: what are you doing?
[03:22:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:22:11] <wiscii> emanuele6: i wish i knew !
[03:22:12] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:22:16] <larryv> other than not privately messaging the bot
[03:22:39] <wiscii> yes, i move to PM
[03:22:45] <wiscii> moved*
[03:23:28] <wiscii> i posted that last to show my intent
[03:23:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:23:40] <wiscii> dumb as it is ..
[03:24:01] <greycat> Consider using an associative array.
[03:25:10] *** Joins: arinov (~arinov@31.142.25.49)
[03:26:09] <wiscii> i reckon, at this point, bash may not be suitable for some of my needs
[03:27:01] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[03:27:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:28:03] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:28:24] <emanuele6> if you want to indirectly access $1, you can use "${!1}", but that is not great
[03:29:02] <greycat> if you want to retrieve the information stored with $1 as the key, you can use an associative array where $1 literally holds the key
[03:29:19] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[03:34:09] *** Joins: rcernin (~rcernin@124.190.139.235)
[03:34:39] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[03:35:33] <e36freak> !faq 5
[03:35:33] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[03:35:35] <e36freak> erm
[03:35:39] <e36freak> !faq indirect > wiscii
[03:35:39] <greybot> wiscii: https://mywiki.wooledge.org/BashFAQ/006 -- How can I use variable variables (indirect variables, pointers, references) or associative arrays?
[03:35:43] <e36freak> one off
[03:35:45] <wiscii> i am actually trying to work out what eval does to echo $t
[03:35:46] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 245 seconds)
[03:36:02] <e36freak> parses everything again
[03:36:04] <greycat> mostly introduces code injection bugs
[03:36:08] <e36freak> also that
[03:36:28] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[03:36:43] <e36freak> eval is one of those things that you just shouldn't mess with unless you know what you're doing
[03:36:58] <e36freak> although once you do you find you pretty much never need it
[03:37:11] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:37:31] <wiscii> i concur to that last
[03:37:54] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[03:38:14] <wiscii> # x=88; t='$x'; f(){ printf "$1\n"; }; f $(eval echo "$t");
[03:38:14] <shbot> wiscii: 88
[03:38:34] <greycat> that has SO many errors
[03:38:55] <wiscii> basically 'eval echo $t' becomes "echo $x"
[03:39:14] <larryv> # set -x; x=88; t='$x'; eval echo "$t";
[03:39:16] <shbot> larryv: + x=88
[03:39:17] <shbot> larryv: + t='$x'
[03:39:17] <shbot> larryv: etc... ( http://ix.io/3FVy )
[03:40:01] *** Quits: roadt_ (~roadt@36.5.217.183) (Ping timeout: 256 seconds)
[03:40:39] *** Joins: roadt_ (~roadt@36.5.217.183)
[03:42:04] <wiscii> i am curious about this statemment: badly designed functions that can't return useful data except through indirection
[03:42:21] <wiscii> my example above is sort of that but the other way around
[03:42:26] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[03:42:36] <greycat> passing values *to* a function is usually not the problem
[03:42:58] <Blondie101010> what are you trying to get at?  that you dislike shell scripting?
[03:43:54] <Blondie101010> shell scripts will always be useful, but not everything should be written in sh
[03:43:56] <wiscii> Blondie101010: who, me ?
[03:44:00] <Blondie101010> yes
[03:44:06] <wiscii> ok .. lol
[03:45:36] <greycat> what are you actually trying to do?
[03:45:38] <e36freak> your statement isn't a complete sentence
[03:46:24] <larryv> "For readers, the important takeaway is: 99% of the time, indirection is used on function parameters to compensate for POSIX shells having badly designed functions that can't return useful data except through indirection."
[03:46:32] <larryv> partial quote from faq 6
[03:46:50] <wiscii> i think i've found the start of exactly what i am looking for
[03:47:11] <e36freak> larryv: ah
[03:47:23] <e36freak> wiscii: you still haven't explained what the actual problem you're trying to solve is
[03:47:34] <wiscii> FAQ006 but a long way down: The following code demonstrates how to correctly pass a scalar variable name into a function by reference for the purpose of "returning" a value:
[03:47:56] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[03:47:57] <e36freak> larryv: basically it's people trying to write like a C function that takes a pointer to a var to populate
[03:48:19] <greycat> wiscii: are you trying to retrieve information (output) from a function?  If so, you have my sympathy.
[03:48:23] <wiscii> yes, that sounds correct
[03:48:34] <wiscii> ;-)
[03:48:39] <greycat> I strongly recommend using a global variable to hold the output.
[03:48:42] <larryv> e36freak: yup
[03:48:53] <e36freak> yeah, global variable is the easy way
[03:48:54] <greycat> I like "r".
[03:49:03] <greycat> Some other people like "_r".
[03:49:06] <wiscii> yup :)
[03:49:36] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:50:09] <wiscii> i suppose in very rRE CIRCUMSTANCES IT COULD BE OF VALUE BUT ISN'T IT BASICALLY THE SAME AS X=$()
[03:50:19] <wiscii> sorry caps freak out
[03:50:39] <greycat> x=$() forks.
[03:50:46] <e36freak> forks and creates a subshell
[03:50:48] <wiscii> x=$($y)
[03:51:20] <e36freak> running a function in a subshell could be good, could be very bad. depends on if you want the function to do more than just output a thing
[03:51:22] <wiscii> yes, that being the last reason to bother trying the other approach
[03:51:40] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[03:51:53] <e36freak> and usually the global variable is the easiest good way to get around it
[03:51:54] <wiscii> i'll read FAQ6 again anad aagain ..
[03:51:56] <e36freak> !faq return a string
[03:51:56] <greybot> https://mywiki.wooledge.org/BashFAQ/084 -- How do I return a string (or large number, or negative number) from a function?  "return" only lets me give a number from 0 to 255.
[03:52:00] <e36freak> also see that one
[03:52:01] *** Quits: dermoth (~dermoth@dsl-151-140.b2b2c.ca) (Ping timeout: 245 seconds)
[03:52:04] <wiscii> i've seen it before and chickened out
[03:52:18] <larryv> wiscii: what do you think "x=$($y)" does?
[03:52:19] <greycat> also the first page of BashProgramming has a section on this
[03:53:14] <wiscii> larryv: i was just being short but i mean f.e x=$(echo $y) # to be accurate
[03:53:41] <larryv> alright
[03:53:52] <greycat> well that's just a badly done x=$y
[03:54:06] <greycat> if you meant x=$(myfunc "$y") then say taht
[03:54:41] <wiscii> sorry .. i was hoping i had made enough context
[03:54:46] *** Joins: zeden (~zeden@user/zeden)
[03:54:55] <wiscii> in future full disclosure !
[03:55:31] <emanuele6> x=$($y) is valid and has a different meaning
[03:55:34] <greycat> if your function only needs to return one value, and if you don't care how slow your script runs, then x=$(myfunc args) is ok
[03:58:34] <wiscii> would it be "fair to say" that `eval`s original function *was* to do something C like ?
[03:58:39] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[03:58:41] <greycat> gods no
[03:58:52] <greycat> it's VERY much lisp-like
[03:59:07] <greycat> C has no analogous things at all
[03:59:56] <wiscii> ok, then i am very much on the wrong page, my book no doubt has a few pages missing
[04:00:01] <greycat> an eval-like function in C would open a temp file, write a bunch of C code to it, call system("cc tempfile.c"); and so on
[04:00:24] <wiscii> ok, yes i see
[04:01:03] *** Quits: arinov (~arinov@31.142.25.49) (Ping timeout: 264 seconds)
[04:01:15] <wiscii> then the idea of "dynamic" something is implied ?
[04:02:55] *** Joins: greentree (~greentree@pool-108-46-153-220.nycmny.fios.verizon.net)
[04:03:45] <greentree> is it possible to have some sort of ssh/sftp client configuration where your public key gets encoded differently somehow?
[04:04:07] <larryv> !nabq
[04:04:08] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[04:04:09] <greycat> sounds like a question for #openssh
[04:04:10] <e36freak> a pointer-like feature in sh would have been super awesome, but it's just not a practical thing to do in (ba)sh
[04:04:13] <Blondie101010> the encryptions allowed are defined in the ssh server
[04:04:21] <greentree> not encryptions
[04:04:23] <Blondie101010> the client can choose one of those
[04:04:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[04:04:24] <greentree> i'll ask there though
[04:04:40] <Blondie101010> a key is part of encryption
[04:04:43] *** Joins: dermoth (~dermoth@dsl-10-132-182.b2b2c.ca)
[04:05:33] <greentree> that's not what im asking. i understand you can generate different types of keys with different encryptions (rsa, dsa, ecdsa, so on and so forth).
[04:05:40] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:05:56] <Blondie101010> it is not a bash question at all
[04:06:24] *** Joins: rgrinberg (~textual@201.198.177.243)
[04:06:27] <wiscii> greentree: what tool are you using ?
[04:06:41] <greentree> ssh-keygen to generate the key, sftp client to connect.
[04:07:08] <greentree> im doing something a little wonky, im doing a little bit of external authentication by sending the public key over to a different endpoint
[04:07:17] <greycat> *plonk*
[04:07:20] <wiscii> then you need help with ssh-keygen, it's fairly easy to use though
[04:07:31] <greentree> the public key string somehow shows up differently in the payload
[04:07:37] <greentree> than what i see on my machine
[04:07:43] <wiscii> nnot a bash quesion ..
[04:07:46] <greentree> yeah, fair
[04:07:49] <greentree> i'm hopping chans
[04:08:02] <Blondie101010> greentree:  you asked about the public key encoding and then you say you don't talk about encryption
[04:08:07] <Blondie101010> that is encryption
[04:08:57] <wiscii> github have a few good helpful pages
[04:09:17] <wiscii> github *blech*
[04:09:32] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[04:09:35] * wiscii begs your pardon
[04:09:51] <greycat> I'm guessing he got banned from #openssh and that's why he's harassing other random channels
[04:10:11] <greycat> maybe ask ##politics next, because that's as relevant as #bash is
[04:10:22] <neshpion> what about #linux
[04:10:39] <wiscii> #easytls ;-)
[04:11:17] *** Joins: karstensrage (~karstensr@user/karstensrage)
[04:11:19] <greentree> that's a very creative take greycat, but wrong. just happened to connect to this channel first
[04:11:35] <greentree> i'm hoping you're putting those talents to good use though. perhaps creative writing on the side?
[04:11:52] <wiscii> here we go ...
[04:12:48] <Blondie101010> greentree:  at some point you will need to clarify what it is you're trying to understand
[04:13:02] <greentree> what?
[04:13:36] <Blondie101010> ok, can you rephrase your question?
[04:13:45] <greentree> if youre referring to anything i typed a few lines ago that topic is dropped completley. i'm not going to continue discussing something that was labelled as "off-topic".
[04:13:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:14:00] *** Quits: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[04:14:03] <Blondie101010> :)
[04:15:13] *** Joins: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[04:15:37] *** Quits: peve (~peve@2601:281:8700:5880::2804) (Quit: Leaving)
[04:15:46] <wiscii> greentree: join me in #easytls for a moment for a useful link
[04:16:39] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[04:21:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:22:59] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:23:57] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[04:26:15] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[04:26:23] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[04:26:41] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[04:29:06] *** Quits: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[04:29:15] *** Joins: koala_man (~vidar@157.146.251.23.bc.googleusercontent.com)
[04:31:03] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[04:31:35] *** Quits: defjam (~eb0t@90.197.81.95) (Ping timeout: 256 seconds)
[04:34:39] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[04:35:21] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[04:39:47] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[04:39:47] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[04:40:05] *** Joins: defjam (~eb0t@90.199.243.141)
[04:40:39] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Remote host closed the connection)
[04:40:58] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[04:41:08] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[04:41:20] *** Joins: cdown_ (~cdown@89.32.122.5)
[04:42:27] *** Joins: keypusher (keypusher@user/keypusher)
[04:44:02] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 260 seconds)
[04:44:04] *** cdown_ is now known as cdown
[04:46:43] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:47:26] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[04:53:49] *** Joins: jinsun (~quassel@user/jinsun)
[04:57:35] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[04:58:46] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:59:10] *** Joins: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:05:32] *** Joins: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net)
[05:06:46] *** Quits: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[05:07:03] *** Joins: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:07:26] *** Quits: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Remote host closed the connection)
[05:07:45] *** Joins: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:07:59] *** Quits: junebug (~juno@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Remote host closed the connection)
[05:08:14] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[05:12:45] *** Joins: BashMyHead (~BashMyHea@24.154.4.250)
[05:14:00] <BashMyHead> Hi! New to the channel. Was hoping someone could help me with a bash script im working on?
[05:14:58] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[05:15:04] <junebug> Sure, ask your question
[05:16:27] *** Joins: karakedi (~eAC53C340@user/karakedi)
[05:17:56] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[05:20:54] <k-man> how can i check if a file is owned by a specific user and group?
[05:21:37] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[05:21:42] <k-man> in a bash script that is
[05:21:57] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Remote host closed the connection)
[05:22:04] <BashMyHead> If I
[05:22:24] <k-man> BashMyHead: don't ask to ask, just ask your question
[05:22:45] <Blondie101010> man stat
[05:22:52] <emanuele6> k-man: if you have stat, you can use stat
[05:22:57] <Blondie101010> mm no
[05:23:37] <k-man> Blondie101010: i have stat
[05:23:38] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[05:23:47] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[05:23:48] <k-man> thanks, checking
[05:24:03] <emanuele6> stat is nonstandard though, so make sure you have a stat that supports formats
[05:24:11] <pj> k-man: as others have said stat, but if you want to check if the file is owned by the current user then you can use the -O flag
[05:24:28] <emanuele6> in GNU stat, you can use -c%U to get user and -c%G to get group
[05:24:31] *** Quits: BashMyHead (~BashMyHea@24.154.4.250) (Remote host closed the connection)
[05:24:46] <k-man> emanuele6: thanks, no i want to make sure it is owned by a specific user/group
[05:24:47] *** Joins: BashMyHead (~BashMyHea@24.154.4.250)
[05:24:49] <k-man> thanks
[05:24:49] <pj> ...and -G for group
[05:25:01] <k-man> stat -c "%U:%G" does the trick thanks
[05:25:06] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[05:25:37] <emanuele6> assumming you have stat and that stat is GNU stat, that will work
[05:26:08] <k-man> i do and it is
[05:26:11] <k-man> stat (GNU coreutils) 8.32
[05:26:47] <k-man> thanks for the warnings. its just for a local script i'm using to check some file permissions of wordpress files
[05:26:55] <k-man> not planning on publishing it or anything
[05:27:06] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (ERC (IRC client for Emacs 25.2.2))
[05:27:38] <greycat> The portable way to verify a file's owner and group would be with find.
[05:27:46] <greycat> It's definitely not convenient.
[05:27:53] <pj> k-man: all good, stat will return the permissions as well if you want.
[05:27:58] <greycat> This is because the normal way that you ENSURE the correct ownership and group of a file is simply to chown it.
[05:28:10] <greycat> CHECKING instead of ENSURING is weaksauce.
[05:28:23] <Blondie101010> no
[05:28:26] <k-man> ah... interesting
[05:28:39] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[05:28:45] <k-man> thank you for expanding my view of the problem
[05:29:21] <Blondie101010> don't overload and overuse your drives to alleviate your obsessions :)
[05:29:31] <Blondie101010> and it won't even work
[05:29:31] *** Joins: kj (~kj@kj.aerisnetwork.net)
[05:29:46] <emanuele6> well, you could use:  if ! find ./the_file -user "$user" -group "$group" -exec false {} +; then printf 'file owned by %s:%s\n' "$user" "$group"; fi  to do it posix compliantly, but yes inconvenient
[05:29:56] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[05:30:01] <Blondie101010> if you want to check permissions, there are plenty of ways to do it in bash
[05:30:36] <k-man> greycat is right, i don't really need to check them. just set them to what I want
[05:30:43] <Blondie101010> no
[05:31:01] <Blondie101010> writing over repeatedly will not make anything better
[05:31:04] <Blondie101010> check it
[05:31:43] <k-man> depends on context
[05:32:27] <k-man> due to wordpress shitness, i don't trust the web server to have write access to the files. but then you can't update wordpress
[05:32:47] <k-man> so i need to chown it to update it, then chown it back afterwards
[05:32:59] <pj> checking it makes you aware of a problem, if you blindly set it then you do not find out if there is an actual problem.
[05:33:00] <k-man> i don't really understand why I'm the only one who thinks this way but there you go
[05:33:24] <k-man> pj: this is true and why I was going down the check avenue
[05:34:45] <Blondie101010> k-man:  that seems like a safe approach, but an alternative would be to run the update from the command line as root
[05:35:05] <k-man> the wp cli tool complains about running as root
[05:35:25] <Blondie101010> or well in that case you set up ownerships accordingly
[05:35:54] <Blondie101010> use a different user
[05:36:11] <Blondie101010> and play mostly with group permissions for the web process
[05:36:11] <k-man> oh also for some plugins you can't update via the cli either as they aren't in the free wp repositories
[05:36:36] <k-man> like for paid plugins. so in that instance you need to momentarily let the web server do the updates
[05:37:11] <Blondie101010> if you must, you schedule a short downtime and firerewall it
[05:37:34] <k-man> like for paid plugins. so in that instance you need to momentarily let the web server do the updates (by changing the files to writable by the web server)
[05:39:44] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[05:41:02] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[05:41:23] <greycat> If this is a "check the ownerships and permissions of everything" type audit, then that's fine.  There are tools for that.  I know OpenBSD does an audit like this by default.  Not sure what language they wrote theirs in.
[05:42:08] <greycat> You could use GNU find -printf to dump the ownerships/perms/filenames of all the things you care about, and diff that against a known-good list.
[05:42:29] *** Quits: Laurenceb (~Laurenceb@68.207.208.46.dyn.plus.net) (Quit: Client closed)
[05:44:31] *** Quits: xizhendu_ (~xizhendu@36.112.188.169) (Ping timeout: 245 seconds)
[05:44:41] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[05:44:54] *** Joins: nf (~n@monade.li)
[05:45:47] *** Joins: caef^ (~caef@68.101.63.101)
[05:46:30] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:46:38] <BashMyHead> Alright, so I am completely new to bash. I posted this stackoverflow question about returning a directory name if all files in that directory were 90 days or older:
[05:46:39] <BashMyHead> https://stackoverflow.com/questions/69992241/linux-finding-the-max-modified-date-of-each-set-of-files-in-each-directory
[05:46:39] <BashMyHead> The person who answered the question was really helpful in their explaination, and I was able to expand on the script - adding arguments from the command line, arrays, etc.
[05:46:40] <BashMyHead> What I am working on now is splitting my script into two. One script will run directly on the server, and needs to be very simplistic and direct. This would be the piece that looks at each directory and pulls file information. The second script is where I will do my ordering, filtering, etc - and will call the first script I just mentioned.
[05:46:40] <BashMyHead> See my pastebin: https://pastebin.com/MmFDJESU
[05:46:40] <pasteban> Paste is available without ads on https://pastebin.com/raw/MmFDJESU
[05:46:41] <BashMyHead> My problem is, it seems like I took the original working script and wayyyy overcomplicated it when I split it into two - and it's not working. I want to start over with my original script (the one from stackoverflow), put essentially the for loop that looks into each directory and finds dates into one script, and the parsing into the second.
[05:48:48] *** Joins: xizhendu_ (~xizhendu@106.121.186.220)
[05:49:42] <greycat> Is it OK to rewrite the problem spec from "all files in that directory are 90 days or older" to "there is at least one file in the directory that's LESS than 90 days"?  The difference is how empty directories are treated.
[05:50:08] <greycat> But the latter allows you to write a much simpler find command and extract directory names out of that.  It's way more efficient.
[05:50:46] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:51:25] <greycat> Well, maybe two find commands.  One to generate the list of offending (too new) files, and the other to generate a list of all the directories.
[05:54:12] <BashMyHead> I think it's okay to rewrite that as any file less than 90 days. Essentially the directory I cd into has a list of database directories. Each database directory contains multiple files, and typically doesn't but can include subdirectories. The files in the database directories are MySQL table files and the like. So what I'm trying to do is say "if
[05:54:13] <BashMyHead> none of the files / subdirectories in the database directory have been modified within the last 90 days, this is a stale database and may need cleanup" So, I return the database directory indicating that this database needs cleaned up, and the date from the most recently modified file indicating when that database was last modified
[05:55:35] <BashMyHead> So:
[05:55:36] <BashMyHead> The folder that I 'cd' to is /dir/mypath/mysql/mysql-$instance/data. In that directory is folders that are the name of databases (ex: database_1, database_2). If all files I'm a database folder are 90 days or older, return the latest timestamp and database name. So if my directory structure was this:
[05:55:36] <BashMyHead> database_1/dir/table_1.file 2021-01-01
[05:55:37] <BashMyHead> database_1/dir/table_2.file 2021-01-15
[05:55:37] <BashMyHead> database_1/dir/table_3.file 2021-11-01
[05:55:38] <BashMyHead> database_2/dir/table_1.file 2021-07-05
[05:55:38] <BashMyHead> database_2/dir/table_2.file 2021-01-01
[05:55:39] <BashMyHead> database_2/dir/table_3.file 2021-01-01
[05:55:39] <BashMyHead> The script would return:
[05:55:40] <BashMyHead> database_2 2021-07-05
[05:55:41] <BashMyHead> Because for database 1 folder, there is a file that is not 90 days old. For database 2, all files are 90 days old so return the latest timestamp
[05:55:44] <emanuele6> !paste
[05:55:45] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[05:55:46] <pj> !paste > BashMyHead
[05:55:46] <greybot> BashMyHead: Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[05:59:25] <wiscii> i would like to propose a new standard with regard to paste: as things are a lot more quiet on libera, perhaps 3 lines could be increased to say 9 ?
[06:00:15] <wiscii> hohoho
[06:00:58] *** Joins: dre (~dre@2001:8003:c932:c301:6392:af25:80a5:9caa)
[06:00:59] <greycat> Ideally you won't paste more than a single line anyway, if you're asking a question about a line of code.
[06:02:41] <greycat> Anyway, for the "stale directories" thing, you can generate a list of ALL directories first.  Then generate a list of all the FILES that are too new.  Each file has a directory name attached to it, so you strip off the filename, and that leaves the directory name.  Scratch that directory from the list of all dirs.  Whatever's left are the dirs that do not have a too-new file.
[06:02:54] *** Quits: Feuermagier_ (~Feuermagi@154.28.188.153) (Remote host closed the connection)
[06:03:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:04:11] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[06:04:16] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[06:04:53] <wiscii> nope, 3 lines is sufficiet anywhere
[06:06:18] <wiscii> s/.t/nt/
[06:06:27] <pj> The facoid says five lines, I prefer three as the max.  When things are slower it becomes worse because you are left staring at it way longer before it scrolls off your screen.
[06:06:31] <pj> *factoid
[06:06:38] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 260 seconds)
[06:07:03] <wiscii> yeah, i thought it through and came to the same conclusion
[06:08:19] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[06:08:51] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[06:09:32] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 240 seconds)
[06:10:19] <wiscii> s/nt/ent/
[06:10:30] *** Joins: l4yer (~l4yer@195.181.170.210)
[06:11:20] <pj> Another approach would be to list all files in all directories with the timestamps, then sort by the timestamps descending, then process the first (sorted) file in each directory and compare the timestamp to one you have already generated from 90 days ago, and if the files timestamp is newer skip to the next directory, and check that.  If the file's timestamp is older then you output that file as the newest one in the directory and skip to the next directory.
[06:11:29] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[06:12:10] <pj> so that would require, one run of find, one of sort, and then some post-processing in bash.
[06:12:11] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:12:24] <greycat> and storage of previous results
[06:13:14] <greycat> I also don't really understand how your problem statement compares to the original problem statement.
[06:18:23] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[06:18:28] <pj> gnu find has %h which is the leading directories with the filename removed.  You can format the output: "%h %T+ %p" Then sort by the first two fields.
[06:18:41] *** Quits: Yorick_ (znc@vps.freegamehosting.eu) (Ping timeout: 246 seconds)
[06:18:41] *** Quits: xizhendu_ (~xizhendu@106.121.186.220) (Ping timeout: 256 seconds)
[06:18:46] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[06:19:06] *** Quits: vishal (~vishal@fedora/vishal) (Ping timeout: 245 seconds)
[06:20:03] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:d196:146d:5b42:1188)
[06:20:48] *** Joins: vishal (~vishal@fedora/vishal)
[06:21:04] *** Quits: armands (~armands@46.109.8.165) (Remote host closed the connection)
[06:21:26] *** Joins: armands (~armands@46.109.8.165)
[06:22:35] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 264 seconds)
[06:22:36] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[06:23:08] <BashMyHead> So let's back up a second. My original script cd's to dir/mypath/ which has the list of database directories. For the server side script - I assume I'll need a loop here? Or is there a way to do a single find command or something of the sort that will search each directory and attach the modified time?
[06:24:56] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:d196:146d:5b42:1188) (Ping timeout: 245 seconds)
[06:25:47] *** Joins: xizhendu_ (~xizhendu@106.121.186.220)
[06:29:51] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:31:37] *** Joins: rgrinberg (~textual@201.198.177.243)
[06:34:01] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:38:56] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[06:38:59] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[06:39:02] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:42:39] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:43:07] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:44:54] <dermoth> BashMyHead, you can control find's output you could for example print null-separated records containing timestamp, a space then the filename. The null character is the only one forbidden in a unix path, and by outputting a standardized timestamp first it's seay to parse it and take the rest as the full path/filename.
[06:46:50] <dermoth> you can also use -depth to print the parent directory last, so you can use it as an indicatio you can process all preceding entries as files in that directory
[06:48:04] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[06:49:22] <queue-> https://swizzin.ltd/ mother of god i never knew of this
[06:49:26] <queue-> lol
[06:49:35] <queue-> i was sitting here using containers
[06:53:02] *** Joins: luva7 (~luva@45.141.152.36)
[06:53:18] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[06:56:16] *** Quits: luva (~luva@37.120.197.45) (Ping timeout: 260 seconds)
[06:56:16] *** luva7 is now known as luva
[06:56:34] *** Joins: ano (~ano@user/ano)
[06:57:41] *** Quits: BashMyHead (~BashMyHea@24.154.4.250) (Quit: Client closed)
[06:58:03] <dermoth> well I was thinging something lik this but je just left...
[06:58:22] <dermoth> find $path -depth -printf '%T@ %P\0' |while read -r -d $'\0' ts path; do printf '%s: %q\n' "$ts" "$path"; done
[06:59:26] <dermoth> jjust need to insert the logis in the while loop
[06:59:33] <dermoth> logic
[06:59:57] <llua> you can't pass null bytes as arguments to commands
[07:00:08] <dermoth> It works for read afaik
[07:00:14] <llua> it doesn't
[07:00:19] <e36freak> it works for read because it sees an empty string
[07:00:24] <e36freak> -d $'\0' and -d '' are equivalent
[07:00:26] <dermoth> well then why is it stopping at the end of the line?
[07:00:42] <e36freak> both are really empty strings
[07:01:16] <e36freak> # [[ -z $'\0' ]] && echo empty
[07:01:17] <shbot> e36freak: empty
[07:01:27] <dermoth> ok well it works anyway :)
[07:01:43] *** Joins: arinov (~arinov@213.194.126.155)
[07:02:04] <dermoth> esle the alternative would have been xargs + split on space, or split with \0 and process two args per run
[07:02:33] <llua> you didn't really understand what was said eh
[07:02:51] <dermoth> xargs -0 calling a script that runs something like: for ent in "$@"
[07:03:18] <dermoth> I did understant, my point is it works either way, read stops on \0
[07:08:03] <dermoth> humm maybe not perfect anyway indeed...
[07:08:16] <e36freak> also strips whitespace from the filename
[07:08:34] <e36freak> while read -rd ' ' ts; IFS= read -rd '' path; do
[07:09:09] <dermoth> yeah I'd need a non-whitespace character maybe...
[07:09:21] <e36freak> that doesn't matter
[07:09:29] <e36freak> two separate read commands with IFS= for the second is the way to do it
[07:10:44] <dermoth> I'm m not sure about stripping at the ent, but an IFs that doesn't start with a whitespace wwould at leats avoig stripping the first chacacters of the filename if they'R ethe same as the separator
[07:11:18] <dermoth> anyway I dais maybe ot but I was testing on a dir structure that constantly change :/
[07:11:51] <e36freak> there also comes a time when you need to start considering a real database
[07:11:57] *** Quits: flying_sausages (~flying_sa@user/flying-sausages/x-2113186) (Ping timeout: 256 seconds)
[07:13:13] <dermoth> that seemed to be something to cleanup a real database, so using a database to maintain a database sounds counter-productive, whan's going to maintain the new database? :p
[07:13:38] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[07:13:41] *** Quits: jos1 (~jos3@dyndsl-091-096-038-005.ewe-ip-backbone.de) (Ping timeout: 245 seconds)
[07:15:27] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[07:15:46] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[07:16:17] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:18:36] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[07:18:37] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[07:18:37] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[07:18:40] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 260 seconds)
[07:19:25] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[07:19:32] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[07:19:58] *** Joins: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de)
[07:27:04] *** Joins: jos1 (~jos3@dyndsl-178-142-071-099.ewe-ip-backbone.de)
[07:33:54] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 260 seconds)
[07:35:28] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[07:35:40] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[07:35:55] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:00] <dermoth> that was bugging me and had to take another look... for my premilinary test I was just missing -- when using bash -c instead of a script...
[07:36:08] <dermoth> find . -printf '%T@:%P\0'|xargs -0 bash -c 'echo $#' --
[07:37:17] <dermoth> should then be able to split on : using IFS, and with a null ('', not $'\0') -d(elimiter) I would read form the first : separator to end of line
[07:37:31] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:37:48] *** Joins: earnestly (~earnest@user/earnestly)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:06] <dermoth> for ent in "$@"; do IFS=: read -r -d '' ts path <<<"$ent"; <do something with $ts and $path>; done
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:42:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80:24d7:18e7:aec6:a72d)
[07:44:32] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[07:48:59] <emanuele6> is that `xargs' used to count how many results find found?
[07:49:45] <wiscii> "Little skills necessary" .. scared
[07:50:21] <emanuele6> that is really not ideal since if there are many results xargs may decide to run the bash command multiple times with smaller groups of orguments
[07:50:25] <wiscii> queue-:^
[07:50:44] <emanuele6> a better solution would be just |gawk -vRS='\0' 'END{print NR}'
[07:51:22] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[07:51:22] <emanuele6> or even just: find . -printf '\n' | wc -l
[07:51:27] <dermoth> yeah good point, It seemed like there wasn't many files form the example, but yeah the script might have to maintain its state between runs
[07:52:06] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[07:52:27] <dermoth> If I wanted to do it rigth i'd go back to a while read loop, turn the newlines to  a textual \n and \ to \\, then unquote them later
[07:53:33] <dermoth> that can be done quickly with ${var//<search>/<repl>}
[07:53:43] <wiscii> "script might have to maintain its state between runs" .. how ?
[07:54:04] <dermoth> but not in the order I said it :D
[07:54:19] <emanuele6> it is really hard to understand what anything that you say means
[07:54:42] <queue-> lol wiscii
[07:54:42] <emanuele6> i honestly barely understood anything
[07:54:52] <dermoth> well that would be the fun part, you could always have a scratch dir and dump variables and source them after. make sure you cleat the scratch before or use ppid as a key?
[07:54:59] <queue-> they make it easy for you, it's honestly really good and defeats the purpose of buying a 'seedbox'
[07:55:06] <queue-> when you have something this robust in software itself
[07:55:17] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:55:22] <queue-> the only difference between this and docker containers is no containers...
[07:55:54] <queue-> i setup this ridiculous htpc w/ docker and saw this and im just like .... grrr
[07:55:56] <queue-> lol
[07:56:10] <wiscii> queue-: i'll look into it for sure . cheerz
[07:56:25] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 268 seconds)
[07:56:57] *** Joins: pj (~pj@ghettoforge/pj)
[07:57:21] <dermoth> emanuele6, to rephrase it, I'd go back to a while loop using use a non-whitespace separator (ex :), newline for EOL, and while loop, but reformat the files first to quote \ and newlines
[07:57:58] <dermoth> well while writing this I realized find probably can't quote anyway, so unless I replace find with a real script I can still xargs as a 2st pass to quote filenames...
[07:58:05] <emanuele6> dermoth: are you trying to do something with the output `find . -printf '%T@:%P\0'?
[07:59:19] <emanuele6> if so, it is really simple; just:   find . -printf '%T@:%P\0 | while IFS=: read -rd '' ts path; do something "$path" "$ts"; done
[07:59:34] <wiscii> "writing this I realized find probably can't quote anyway," .. GNU find ?
[07:59:49] <emanuele6> quote what?
[08:00:03] <wiscii> fk knows..
[08:00:03] <emanuele6> why would you need to quote something in gnu find?
[08:00:19] <wiscii> as above..
[08:01:03] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[08:01:24] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:01:44] <emanuele6> (i missed a quote after the 0, obviously you need a quote there)
[08:02:31] <wiscii> "writing this I realized find probably can't quote anyway," .. GNU find ?
[08:02:44] <wiscii> dermoth: ^
[08:02:49] <wiscii> meaning ?
[08:03:03] <emanuele6> i would like to know too
[08:03:15] <emanuele6> it sounds code injection-y
[08:03:27] <wiscii> i am being polite am i ?
[08:03:41] <dermoth> humm maybe I can express myself better with code...
[08:03:45] <dermoth> find . -printf '%T@:%P\0'|xargs -0 bash -c $'for ent in "$@"; do IFS=: read -r -d "" ts path <<<"$ent"; path=${path//\\/\\\\}; path=${path//$\'\\n\'/\\n}; printf \'%s:%s\\n\' "$ts" "$path"; done'|less
[08:04:02] <emanuele6> wtf is that
[08:04:03] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[08:04:32] <dermoth> sorry it's a bit of a quote hell since I have to use $'' inside $'' -- maybe just do this to see the unquoted version:
[08:04:37] <dermoth> # echo $'for ent in "$@"; do IFS=: read -r -d "" ts path <<<"$ent"; path=${path//\\/\\\\}; path=${path//$\'\\n\'/\\n}; printf \'%s:%s\\n\' "$ts" "$path"; done'
[08:04:38] <shbot> dermoth: for ent in "$@"; do IFS=: read -r -d "" ts path <<<"$ent"; path=${path//\/\\}; path=${path//$'\n'/\n}; printf '%s:%s\n' "$ts" "$path"; done
[08:05:02] <emanuele6> once again, why are you using `xargs'?
[08:05:09] <dermoth> it's just the first pass
[08:05:13] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[08:05:16] <emanuele6> did you not read my message?
[08:05:29] <emanuele6> if so, it is really simple; just: find . -printf '%T@:%P\0' | while IFS=: read -rd '' ts path; do something "$path" "$ts"; done
[08:05:44] <dermoth> I cna then feed that to a "while IFS=: read" loop
[08:06:05] <dermoth> actualyl it's probaby even safe to not use -r here since I excaps all \'s
[08:06:29] <emanuele6> wtf
[08:06:49] <emanuele6> # find . -printf '%T@:%P\0'
[08:06:50] <shbot> emanuele6: 1616358864.0000000000:1615669288.0000000000:.mkshrc1616358303.0000000000:.bashrc
[08:07:03] <dermoth> yhah now I can't evenb remember what was wrong with the \0
[08:07:23] <emanuele6> # find . -printf '%T@:%P\0' | while IFS=: read -rd ''; do printf 'ts=%s file=%s\n' "${ts}" "${file@Q}"; done
[08:07:24] <shbot> emanuele6: ts= file=
[08:07:24] <shbot> emanuele6: ts= file=
[08:07:24] <shbot> emanuele6: ts= file=
[08:07:28] <emanuele6> oops
[08:07:34] <emanuele6> # find . -printf '%T@:%P\0' | while IFS=: read -rd '' ts file; do printf 'ts=%s file=%s\n' "${ts}" "${file@Q}"; done
[08:07:35] <shbot> emanuele6: ts=1616358864.0000000000 file=''
[08:07:36] <shbot> emanuele6: ts=1615669288.0000000000 file='.mkshrc'
[08:07:36] <shbot> emanuele6: ts=1616358303.0000000000 file='.bashrc'
[08:07:39] <wiscii> .oO time bubble
[08:07:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[08:09:26] <emanuele6> why would you say read without -r is "safer"?
[08:09:33] <emanuele6> what the hell?
[08:09:49] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[08:09:50] <dermoth> because I escape all \ to \\
[08:10:00] <emanuele6> escape what for what?
[08:10:08] <wiscii> trousers off !
[08:10:18] <dermoth> anyway I can also use -r and manually uexcape them... I wouldn't say for sure there's no loopholes
[08:10:28] <emanuele6> and you say that is less safe?
[08:10:30] <dermoth> path=${path//\/\\}; path=${path//$'\n'/\n}
[08:10:36] <emanuele6> why do you need that??
[08:10:39] <emanuele6> !xy
[08:10:39] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[08:10:46] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[08:10:54] <wiscii> !zedfuck
[08:11:15] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[08:11:16] <emanuele6> also that code is just wrong
[08:11:18] <dermoth> thb, I thik I forgot there was nothing wrong with the while read and was looking for an alternatibe to the xargs issue :)
[08:11:28] <dermoth> I need to sign off and go to sleep I guess
[08:12:02] <dermoth> what's wrong exactly?
[08:12:14] <wiscii> come back when you are not paranoid sleep deprived
[08:12:32] <emanuele6> # path='a\b' path=${path//\/\\}; printf '%s\n' "$path"
[08:12:33] <shbot> emanuele6: a\b
[08:12:41] <emanuele6> i don't know. what is wrong?
[08:12:45] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[08:12:59] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[08:13:13] <dermoth> woops, clearly I forgot one level of escapes :S
[08:13:30] <emanuele6> what are these escapes for?
[08:13:33] <wiscii> dermoth: try to take a rest .. and then try to see what we just read
[08:13:39] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[08:13:44] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:14:15] <emanuele6> if you are planning to INJECT CODE in a shell, that is not a safe way to quote
[08:15:16] <emanuele6> there is ${par@Q} or printf%q for bash quoting and there is "'${par//\'/\'\\\'\'}'" for POSIX shells
[08:15:49] <emanuele6> ( "'${par//\'/\'\\\'\'}'" is not POSIX, but it generates a string that is "safe" to inject into a POSIX shell)
[08:15:49] <dermoth> # path=$'a\\r /b/fo\nc/' newpath=${path//\\/\\\\}; printf '%s\n' "$path" "$newpath"
[08:15:58] <shbot> dermoth: a\r /b/fo
[08:15:58] <shbot> dermoth: c/
[08:15:58] <shbot> dermoth: etc... ( http://ix.io/3FWc )
[08:16:08] <dermoth> damn sopie dthe wrong one
[08:16:08] <emanuele6> i don't get why you even need a stupid injection
[08:16:17] <dermoth> # path=$'a\\r /b/fo\nc/' newpath=${path//\\/\\\\}; printf '%s\n' "$path" "$newpath"
[08:16:20] <shbot> dermoth: a\r /b/fo
[08:16:20] <shbot> dermoth: c/
[08:16:20] <shbot> dermoth: etc... ( http://ix.io/3FWc )
[08:16:34] <dermoth> woops looks liek I can't even copyright
[08:16:38] *** Joins: pj (~pj@ghettoforge/pj)
[08:16:39] <dermoth> # path=$'a\\r /b/fo\nc/' newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; printf '%q\n' "$path" "$newpath"
[08:16:40] <shbot> dermoth: $'a\\r /b/fo\nc/'
[08:16:40] <shbot> dermoth: a\\\\r\ /b/fo\\nc/
[08:17:51] *** Joins: jcbjoe2021_ (sid520195@user/jcbjoe2021)
[08:17:51] <dermoth> well as I said I can as easily unquote manually with ${var//}
[08:18:10] <wiscii> dermoth: you can PM the bot if you like .. shbot not graybot
[08:18:31] <dermoth> but if read only unquote \ then it should be safe to use with the two substitutions I done
[08:18:37] <wiscii> you dont even need the # in PM mode
[08:18:38] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 268 seconds)
[08:18:45] <dermoth> yesh not the issue, I used the wrong clipboard
[08:18:49] <emanuele6> dermoth: really?
[08:19:26] <emanuele6> what about $, `, *, ?, [?
[08:19:28] <emanuele6> ;, >, (, ), etc
[08:19:29] * wiscii is not so bad after all
[08:20:06] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:20:17] <emanuele6> you keep not telling us why need to inject shell code
[08:20:24] <dermoth> # path=$'a\\r /b/fo\nc/' newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; oldpath=${newpath//\\n/$'\n'}; oldpath=${oldpath//\\\\/\\}; printf '%q\n' "$path" "$oldpath"
[08:20:25] <shbot> dermoth: $'a\\r /b/fo\nc/'
[08:20:25] <shbot> dermoth: $'a\\r /b/fo\nc/'
[08:20:26] <emanuele6> s/why/& you/
[08:20:28] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:20:57] <dermoth> here i'm not injecting shell core, and read do not inject shell code neither, it just interpret \ escapes
[08:21:06] <dermoth> s/core/code/
[08:21:36] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[08:22:01] <dermoth> read -r interpret $, `, *, ?, [, ;, >, (, ), etc ?
[08:22:15] <dermoth> err I mean without -er
[08:22:22] <dermoth> without -r
[08:22:54] *** Joins: Atque (~Atque@user/atque)
[08:22:54] <emanuele6> and why do you need to use `read' without `-r'?
[08:23:02] <emanuele6> for SAFETY??
[08:23:54] *** Quits: greentree (~greentree@pool-108-46-153-220.nycmny.fios.verizon.net) (Quit: greentree)
[08:23:54] <wiscii> a simple saple code would suffice .....................................................
[08:23:54] <dermoth> not for safetym because I already quotes all \ then turned newlines into \n - to read without -r would unto the \n and \\ escapes
[08:24:59] <emanuele6> i don't see where you did that since the input is `find . -printf '%T@:%P\0'' ...
[08:25:08] <wiscii> it's sort of like talking to that google super-computer but stuck in an infinite loop; dumb loop;
[08:26:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[08:26:34] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:28:02] <dermoth> input it actually: find . -printf '%T@:%P\0'|xargs -0 bash -c $'for ent in "$@"; do IFS=: read -r -d "" ts path <<<"$ent"; path=${path//\\\\/\\\\\\\\}; path=${path//$\'\\n\'/\\\\n}; printf \'%s:%s\\n\' "$ts" "$path"; done'
[08:28:20] <dermoth> if I see, not that read...
[08:28:21] <emanuele6> for what reason is that the input?
[08:28:25] <dermoth> the next read
[08:28:32] <dermoth> after that
[08:28:53] <wiscii> up-and-under
[08:28:55] <dermoth> no reason, as I said already, I was looking for a solution to a non-issue
[08:29:19] <emanuele6> that code clearly has issues
[08:29:23] <wiscii> with a twist
[08:29:41] <dermoth> thanks for the background comments wiscii, very entertaining
[08:29:59] <wiscii> dermoth: my pleasure :)
[08:30:46] <dermoth> ok I admin there wa sa few overlooks initially, but if you want to continue this you'll have to explain what the issues are
[08:30:51] <dermoth> *admit
[08:31:19] <dermoth> or don't reply and i'll just go away as I should have an hour ago already :)
[08:31:24] <wiscii> we have to explain .. ?
[08:31:28] <emanuele6> i feel like i already told you
[08:32:28] <emanuele6> and if you say, "that is input to the next read, that is just how it is" what am i even supposed to talk about
[08:32:33] <dermoth> so I process \0-delimited entries as arguments, escape the \ and newlines, and print in a newline-separated stream
[08:32:48] <dermoth> then I can read line by line, split on the first :, and unexcape the filename
[08:33:07] <dermoth> I'm trying to understand what is wrong with this
[08:33:10] <emanuele6> but then you proceed to output the records with printf'%s:%s\n'
[08:33:17] *** Joins: kdc (~kdc@196.211.197.159)
[08:33:19] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:33:32] <dermoth> yes
[08:33:36] *** Joins: sgn (~sgn@user/sgn)
[08:33:42] <emanuele6> and why?
[08:33:46] <dermoth> but nealines have been replaced with a textual '\n'
[08:33:55] <dermoth> easier to read maybe?
[08:34:08] <emanuele6> but then are read by a read without -r
[08:34:15] <emanuele6> so they become just n
[08:34:21] <emanuele6> so what was the point of it?
[08:34:28] <wiscii> !qefs
[08:34:28] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[08:34:29] <emanuele6> and what are you even doing?
[08:34:36] <dermoth> so it may be a choice to have null-separated vs newline-separated entries, but it's not "broken"
[08:35:07] <wiscii> lol
[08:35:18] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[08:35:22] <wiscii> crlf anybody
[08:35:43] <emanuele6> # printf '%s\n' 'string with \n' | { IFS= read var; printf '%s\n' "$var" ;}
[08:35:44] <shbot> emanuele6: string with n
[08:35:56] <dermoth> # path=$'foo\r\nbar'; newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; oldpath=${newpath//\\n/$'\n'}; oldpath=${oldpath//\\\\/\\}; printf '%q\n' "$path" "$oldpath"
[08:35:56] <shbot> dermoth: $'foo\r\nbar'
[08:35:57] <shbot> dermoth: $'foo\r\nbar'
[08:36:02] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:36:05] <dermoth> cose fine both ways
[08:36:07] <dermoth> goes
[08:36:34] <emanuele6> # { path=$'foo\r\nbar'; newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; oldpath=${newpath//\\n/$'\n'}; oldpath=${oldpath//\\\\/\\}; printf '%q\n' "$path" "$oldpath" ;} | while IFS= read var; do printf '%s\n' "$var"; done
[08:36:35] <shbot> emanuele6: $'foornbar'
[08:36:36] <shbot> emanuele6: $'foornbar'
[08:37:16] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[08:37:16] <emanuele6> i am getting annoyed at this point to be honest
[08:37:18] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[08:37:39] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[08:38:02] <wiscii> ++1
[08:38:16] *** Joins: ano (~ano@user/ano)
[08:39:16] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[08:39:16] *** Quits: caef^ (~caef@68.101.63.101) (Remote host closed the connection)
[08:39:37] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[08:39:49] <dermoth> hummm why isn't the first // not working?
[08:40:03] <llua> swoosh
[08:40:22] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:40:44] <dermoth> actually it it, passe dlitteral \r\n... anyway the non--r wayworks, tbh I never use read -r anyway
[08:41:06] <dermoth> I would have expected it to unquote the same way...
[08:41:26] *** Joins: ano (~ano@user/ano)
[08:41:54] <dermoth> but this works for quoting... newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n};
[08:42:02] <dermoth> and this works for unquoting: oldpath=${newpath//\\n/$'\n'}; oldpath=${oldpath//\\\\/\\};
[08:44:19] <dermoth> it seems read without -r turns \n into n - why isn't is doing newlines ? I don't really get what's the point otherwise
[08:44:46] <wiscii> why ?
[08:44:58] <wiscii> get this guy ..
[08:45:13] <dermoth> I always assumed it was interpreting c escapes I guess
[08:45:34] <wiscii> why is purple salty ?
[08:45:36] *** Joins: arinov (~arinov@213.194.126.155)
[08:45:54] <dermoth> anyway that's a detail, you can escape and unescape this way, just not with read (without -r)
[08:46:45] <wiscii> why is salt desired ?
[08:48:55] <wiscii> dermoth: have you tried quitting nicotine and caffine ?
[08:49:12] <dermoth> i'm not on either
[08:49:21] <dermoth> maybe I should
[08:49:27] <wiscii> no no
[08:49:52] <wiscii> then what the absolute fuck are is it that you are on ?
[08:50:03] <dermoth> anyway sorry for all the fuzz.. I said "maybe you can use read -r" I was wrong, but that wasn't the point, exacping and de-escaping works, and ois useless except maybe it you want for some reason a newline-separated stream
[08:52:04] <wiscii> i could save you .. but i can't be arsed
[08:52:30] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[08:53:08] *** Joins: jinsun (~quassel@user/jinsun)
[08:54:24] <dermoth> No need, I'm walking out of this chat and get back another day with (hopefully) a clearer mind :)
[08:54:32] <emanuele6> i can't believe you can actually think that works.
[08:55:10] <emanuele6> # path='\n'; newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; oldpath=${newpath//\\n/$'\n'}; oldpath=${oldpath//\\\\/\\}; declare -p path newpath oldpath
[08:55:12] <dermoth> well it does' I used techniques like this on other occasions
[08:55:15] <shbot> emanuele6: declare -- path="\\n"
[08:55:16] <shbot> emanuele6: declare -- newpath="\\\\n"
[08:55:16] <shbot> emanuele6: etc... ( http://ix.io/3FWh )
[08:56:37] <dermoth> hummm I'm clearly missing something.. or was lucky?
[08:56:51] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[08:57:03] <emanuele6> whatever. i don't care
[08:57:41] <wiscii> lucky .. lol
[08:59:04] *** Joins: zebrag (~chris@user/zebrag)
[08:59:06] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[08:59:31] <wiscii> Lucky .. like that guy in the hut in "The Thing", who was the one that came back and ate them all
[08:59:43] <dermoth> well the de-escape just need to be a little bit wiser, that's all
[09:00:17] <emanuele6> !plonk
[09:00:17] <greybot> The sound a name makes when it hits a kill file (or /ignore list).
[09:00:41] <wiscii> oh, so that's what that is
[09:01:08] <wiscii> i plonked earlier
[09:05:48] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[09:06:26] <larryv> can't say i'm surprised
[09:06:27] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[09:07:48] <dermoth> well you'Re funny... I'm stuck with bash 4.3 at work, but since you seem to use the new @ expansion, @e does exactly what you need
[09:08:00] <dermoth> # path=$'\n\\n\r'; newpath=${path//\\/\\\\}; newpath=${newpath//$'\n'/\\n}; oldpath=${newpath@E}; printf '%q\n' "$path" "$oldpath"
[09:08:01] <shbot> dermoth: $'\n\\n\r'
[09:08:01] <shbot> dermoth: $'\n\\n\r'
[09:09:57] <wiscii> larryv: m i really "that" bad ?
[09:10:39] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:11:12] <larryv> he has low tolerance.
[09:11:49] * wiscii mooches off for sleep and to grumble about that mean larryv guy
[09:12:11] <wiscii> ;-)
[09:15:41] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:16:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[09:17:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:18:57] *** Joins: pj (~pj@ghettoforge/pj)
[09:21:58] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:28:42] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[09:29:33] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:34:21] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:43:06] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:50:10] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 260 seconds)
[09:53:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[09:55:56] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[09:57:44] *** Joins: veek (~veek@117.192.20.125)
[09:58:35] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 264 seconds)
[10:01:59] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Remote host closed the connection)
[10:02:21] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:02:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:02:52] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[10:03:53] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[10:06:02] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 260 seconds)
[10:11:35] *** Joins: mixfix41 (~homefame@user/mixfix41)
[10:12:09] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[10:12:27] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[10:20:26] <ormaaj> larryv isn't mean 🙄
[10:22:09] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[10:22:24] *** Joins: cim (~cim@205.185.117.110)
[10:26:00] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[10:26:12] *** Joins: namkeleser (~namkelese@101.179.132.178)
[10:26:44] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[10:27:31] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[10:31:42] *** Joins: mei (~mei@user/mei)
[10:32:09] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[10:32:18] *** Joins: Mo (~Mo@dynamic-095-112-110-153.95.112.pool.telefonica.de)
[10:32:40] *** Quits: mei (~mei@user/mei) (Client Quit)
[10:33:25] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[10:34:16] *** Joins: mei (~mei@user/mei)
[10:34:36] *** Quits: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de) (Remote host closed the connection)
[10:34:37] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[10:35:37] *** Joins: k-man (~jason@user/k-man)
[10:37:20] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[10:37:46] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:38:57] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[10:39:24] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[10:39:34] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[10:40:59] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[10:41:25] *** Quits: joo-___ (~joo-_@fsf/member/joo--) (Quit: Lost terminal)
[10:41:28] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: Lost terminal)
[10:43:41] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[10:45:13] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[10:46:53] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[10:48:18] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:51:11] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:56:09] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[10:56:26] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[10:57:29] <mihaiadrian> https://pastebin.com/raw/Pp2qtkQX
[10:57:39] <mihaiadrian> i open up a new instance of chromium in a loop
[10:57:49] <mihaiadrian> why doesn't pkill chrome kills the instance?
[10:58:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:58:51] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: john_johnk)
[11:00:30] <ormaaj> probably because of the way its threads and processes are named
[11:01:04] <ormaaj> you may need pkill -f
[11:01:48] <mihaiadrian> there are a lot of processes
[11:01:51] <mihaiadrian> i installed it via snaps
[11:01:54] <mihaiadrian> lots of snap processes
[11:02:07] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[11:03:09] <mihaiadrian> pkill: killing pid 7151 failed: Operation not permitted
[11:03:09] <mihaiadrian> pkill: killing pid 8853 failed: Operation not permitted
[11:03:22] <mihaiadrian> how do i write pkill in a script without sudo?
[11:04:14] *** Joins: tobybl (~tobybl@213.31.134.21)
[11:04:14] <ormaaj> if they all run in the same process group killing that may be desirable.  i don't have chromium handy atm
[11:04:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:04:33] <mihaiadrian> but how do i normally kill a process in a script?
[11:04:47] <mihaiadrian> just `pkill name`?
[11:04:58] <ormaaj> not like that
[11:05:46] <ormaaj>  normally you track the pid. signaling by name is a last resort
[11:06:15] <ormaaj> !pm
[11:06:15] <greybot> http://mywiki.wooledge.org/ProcessManagement
[11:07:06] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[11:09:23] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:10:56] *** Parts: veek (~veek@117.192.20.125) (Leaving)
[11:11:00] <ormaaj> why pkill tor?
[11:11:54] <mihaiadrian> ormaaj: to generate a new ip
[11:14:54] <mihaiadrian> i dont know how to kill chrome
[11:14:59] <mihaiadrian> pkill chrome in the cli works
[11:15:06] <mihaiadrian> in the prompt
[11:15:15] <mihaiadrian> it doesn't work in the script
[11:15:30] <mihaiadrian> i mean nothing works in the script
[11:15:37] <mihaiadrian> ps -ef | grep chrome | grep -v grep | awk '{print $2}' | xargs kill
[11:18:52] <geirha> does your script name happen to include the word "chrome"?
[11:19:00] <mihaiadrian> nope
[11:19:20] <ormaaj> what OS?
[11:19:24] <mihaiadrian> noobuntu
[11:19:33] <geirha> also, are you sure "chrome" should match "chromium"?
[11:19:48] <mihaiadrian> pkill chrome is the only thing that kills chromium :/
[11:19:50] <mihaiadrian> idk why
[11:20:39] <ormaaj>  the permission errors are odd
[11:20:47] <geirha> must be something to do with how snap works then. chromium installs only by snap on ubuntu now iirc
[11:21:20] <mihaiadrian> ok, im installing it via deb
[11:21:34] *** Joins: joo-_ (~joo-_@80-62-117-50-mobile.dk.customer.tdc.net)
[11:21:34] *** Quits: joo-_ (~joo-_@80-62-117-50-mobile.dk.customer.tdc.net) (Changing host)
[11:21:34] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[11:22:21] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:23:19] <mihaiadrian> but `pkill tor` doesn't work either
[11:24:12] <ormaaj> should be using tor's control socket
[11:27:50] <ormaaj> i thought tor used to gIve you a new circuit wIth USR1. maybe they changed it.
[11:28:34] <gnoo> mihaiadrian: first see what ps "$(pgrep tor)" outputs
[11:29:12] <gnoo> or ps "$(pgrep chrome)" and ps "$(pgrep chromium)"
[11:29:20] *** Joins: rendar (~rendar@user/rendar)
[11:29:22] <gnoo> can also add -f to pgrep and see the difference
[11:29:53] <ormaaj> pgrep -a
[11:30:24] <gnoo> damn, should read manpages more often
[11:34:59] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Ping timeout: 250 seconds)
[11:34:59] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 250 seconds)
[11:35:25] *** Quits: prime (~prime@user/prime) (Ping timeout: 250 seconds)
[11:35:48] *** Joins: llua` (~llua@zsh/developer/llua)
[11:35:51] <ormaaj> Also https://github.com/ray-lothian/UserAgent-Switcher/ if you don't want the global --user-agent
[11:35:54] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:35:57] *** Joins: ninjabuf- (~ninjabuff@user/ninjabuffet)
[11:36:23] *** Quits: rya (~ry@user/rya) (Ping timeout: 264 seconds)
[11:36:23] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 264 seconds)
[11:36:23] *** Quits: joshbaptiste (~josh@192.210.151.34) (Ping timeout: 264 seconds)
[11:36:43] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 250 seconds)
[11:38:09] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[11:38:16] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[11:38:37] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:39:44] *** Joins: prime (~prime@user/prime)
[11:40:24] *** Joins: rya (~ry@47.23.188.138)
[11:40:46] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:42:15] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[11:42:50] *** Joins: TomyWork (~TomyLobo@p200300e80f0f2700fda4ee8d652668eb.dip0.t-ipconnect.de)
[11:43:40] <mihaiadrian> gnoo: https://pastebin.com/raw/3F8bfZZz
[11:44:14] <gnoo> mihaiadrian: yeah, ps -af chrome and ps -af chromium
[11:44:22] <gnoo> sorry
[11:44:24] <gnoo> pgrep
[11:44:24] *** Joins: sgn (~sgn@user/sgn)
[11:44:37] <gnoo> pgrep -af chrome and pgrep -af chromium
[11:45:12] <gnoo> also, to make the previous one work, i guess removing the quotes would've worked. but pgrep already has that built in
[11:45:35] <mihaiadrian> https://pastebin.com/raw/S5YTXZZB this si chrome
[11:45:38] <mihaiadrian> is*
[11:46:06] *** Joins: sazawal (~sazawal@122.161.81.235)
[11:46:16] <gnoo> so, pkill -f chromium should work
[11:46:33] <mihaiadrian> and this is chromium https://pastebin.com/raw/wBYivZS3
[11:46:55] <mihaiadrian> it works
[11:47:02] <mihaiadrian> but it doesn't work in script
[11:47:10] <mihaiadrian> it works when i kill it in the command prompt
[11:48:42] <gnoo> you did pkill -f chromium || echo can't kill chromium in the script?
[11:49:39] <gnoo> the above one will fail due to single quote
[11:49:49] <mihaiadrian> it works
[11:49:56] <mihaiadrian> i had to open chromium with a "&" operator at the end
[11:53:37] <mihaiadrian> i dont know
[11:53:41] <mihaiadrian> why it also kills my status tray
[11:53:48] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[11:53:50] *** Quits: dre (~dre@2001:8003:c932:c301:6392:af25:80a5:9caa) (Ping timeout: 268 seconds)
[11:54:06] *** Joins: extern (~archer@213.137.70.119)
[11:54:37] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[11:55:50] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:55:55] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:56:46] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[11:57:51] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[12:03:09] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Ping timeout: 250 seconds)
[12:03:41] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[12:05:09] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[12:10:44] *** Quits: extern (~archer@213.137.70.119) (Quit: im out because there's nothing i need help with GL)
[12:12:19] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[12:12:33] *** Quits: jaskal (jaskal@user/jaskal) (Remote host closed the connection)
[12:12:56] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[12:13:23] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[12:15:29] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[12:16:39] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 264 seconds)
[12:17:51] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[12:22:42] *** Joins: jaskal (~jaskal@user/jaskal)
[12:30:06] *** Quits: enick_741 (~dngray@user/dngray) (Quit: You have been kicked for being idle)
[12:33:09] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[12:34:33] *** Joins: totenkoph (~scythe@user/totenkoph)
[12:35:22] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[12:36:43] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:40:03] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:40:03] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[12:41:54] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 260 seconds)
[12:42:33] *** Quits: roadt_ (~roadt@36.5.217.183) (Ping timeout: 268 seconds)
[12:43:08] *** Joins: polve (~polve@twcitalia/polve)
[12:43:12] *** Joins: roadt_ (~roadt@36.5.217.183)
[12:45:02] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[12:52:34] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 260 seconds)
[12:54:15] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[12:54:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:54:46] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:55:33] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[12:56:46] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:57:27] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[12:57:40] *** Quits: armands (~armands@46.109.8.165) (Read error: Connection reset by peer)
[12:57:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[12:58:03] *** Joins: armands (~armands@46.109.8.165)
[12:58:55] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[12:59:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[13:00:21] *** Quits: ayaka (~randy@192.147.44.15) (Remote host closed the connection)
[13:05:11] *** Joins: Penguin666x (~Penguin66@217.138.205.135)
[13:05:22] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:07:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:08:03] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:08:13] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:08:16] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 245 seconds)
[13:14:33] <joo-_> grep -E "#.*min" doesnt catch #5min and #15min and #20min  - i wantch to catch anything that is starting with a hashtag and ends with min
[13:15:41] <emanuele6> catch?
[13:15:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:16:08] *** Joins: put_in (~put_somew@123.20.213.95)
[13:16:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[13:16:47] <emanuele6> # printf '%s\n' '#20min' '10min' 'a #5min a' 'dslajmin' 'line #2min' | grep -E "#.*min"
[13:16:48] <shbot> emanuele6: #20min
[13:16:48] <shbot> emanuele6: a #5min a
[13:16:48] <shbot> emanuele6: line #2min
[13:16:52] <emanuele6> it works
[13:16:58] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:17:06] <emanuele6> not sure what you mean with "catch"
[13:17:44] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:18:26] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[13:19:43] *** Quits: xizhendu_ (~xizhendu@106.121.186.220) (Ping timeout: 256 seconds)
[13:19:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:19:46] <joo-_> By catch i just mean match
[13:19:59] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[13:20:12] <Soliton> -E does nothing there, btw.
[13:20:12] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[13:20:32] <joo-_> this one catches anything that contains "min"
[13:20:40] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:20:41] <joo-_> even if it doesnt start with #
[13:20:47] <Soliton> prove it.
[13:21:13] <emanuele6> dslajmin was not printed in the example i sent before
[13:21:21] <emanuele6> and it contains min
[13:21:57] <joo-_> so this is basically being printed by that grep: 2021-11-24 09:12:       > here is some random text and it ends with this word that contains min fixminmac.
[13:22:20] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[13:22:25] <joo-_> ah there is actually a hashtag in the beginning so yeah
[13:22:30] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 260 seconds)
[13:22:57] *** Joins: joerg (~saturn@user/joerg)
[13:23:34] <joo-_> there is a hashtag before here - it says #here - thats why it mtches
[13:23:56] <Soliton> perhaps you want to match the digits instead of anything.
[13:24:50] <joo-_> yeah that is right, so the solution was grep -E "#[0-9]{1,4}min"
[13:25:14] <joo-_> that was not a very intelligent questions, sorry guys - but thx
[13:25:36] *** Joins: kiryin (~kiryin@85-76-138-131-nat.elisa-mobile.fi)
[13:26:33] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 250 seconds)
[13:28:03] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (ERC (IRC client for Emacs 27.2))
[13:29:20] *** Joins: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net)
[13:30:00] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[13:30:26] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[13:31:34] *** Joins: shad (~shad@user/shad)
[13:31:44] *** Joins: lavaball (felix@31.204.155.215)
[13:32:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[13:35:26] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.3)
[13:37:26] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 268 seconds)
[13:38:41] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[13:39:02] *** Joins: GuiToris (~GuiToris@user/guitoris)
[13:41:08] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[13:44:05] *** Joins: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de)
[13:44:35] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[13:44:51] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[13:46:01] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[13:47:56] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 268 seconds)
[13:48:27] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:49:04] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[13:49:14] *** Joins: xayto_ (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net)
[13:49:29] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 246 seconds)
[13:49:45] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[13:49:47] *** Quits: xayto (~xayto@cpc69403-oxfd27-2-0-cust296.4-3.cable.virginm.net) (Ping timeout: 268 seconds)
[13:49:57] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 250 seconds)
[13:51:27] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[13:54:46] *** Quits: Ox4 (~int@0x4.cx) (Quit: see you :))
[13:55:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:56:05] *** Joins: int (~int@0x4.cx)
[13:56:11] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[13:56:48] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[13:57:04] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[13:58:28] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[14:00:33] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[14:03:31] <mrtnt_> I have a CSV file with lot of fields. Each field is surrounded with double quotes. I'm using read to read in the fields on each line and remove the surrounded double quotes. Basically like this: while IFS=, read -r c1 c2; do c1="${c1#\"}" c1="${c1%\"}" c2="${c2#\"}" c2="${c2%\"}"; echo "$c1 $c2"; done < <(printf '"%s","%s"\n' "a" "b" "x" "y") Perhaps there is a more elegant way to do this than removing the
[14:03:32] <mrtnt_> double-quotes for each field separately?
[14:05:11] <mrtnt_> However, I can't use search and replace because I want to remove the double quote only if it is at the beginning of the field or at the end of the field.
[14:05:44] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[14:07:03] <Soliton> nothing wrong with that. perhaps check that the input really has those quotes.
[14:07:53] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[14:07:59] <Soliton> of course if there is a comma in the quoted field this will not work.
[14:09:12] <MiLeon> without comma is with double quotes
[14:09:23] <MiLeon> output
[14:09:33] <MiLeon> i have tried in my bash
[14:10:07] <MiLeon> a finer way to do this
[14:10:39] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 264 seconds)
[14:12:26] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[14:13:45] <koollman> mrtnt_: csv are really annoying to parse in shell, and it's generally pretty fragile since the format is a bunch of differents formats with different features. I would use some tool that knows about csv formats and can handle quoting (csvkit, or maybe directly python or perl)
[14:16:20] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[14:16:30] <mihaiadrian> i figured out how to increase the view count on telegram
[14:16:31] <mihaiadrian> it's very simple
[14:16:45] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Client Quit)
[14:16:48] <mihaiadrian> it doesn't require a browser
[14:17:00] <selckin> nobody cares, go away
[14:17:16] <mihaiadrian> selckin: why are you talking like that to me?
[14:17:55] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[14:18:00] <mihaiadrian> wtf is wrong with ppl on this channel
[14:19:30] <djph> mihaiadrian: maybe talking about 'telegram' on a "bash" channel
[14:19:54] <mihaiadrian> djph: so what?
[14:19:55] <djph> it's like those people who come into linux channels and spout off about how much it sucks, and then wonder why nobody is "nice" to them
[14:20:04] <mrtnt_> Soliton: ok, thanks! Input always has hose quotes and there should never be a comma in the quoted field. It simply felt weird to type repetitively those 'c1="${c1#\"}" c1="${c1%\"}"' lines dozens of times as each line has 39 fields.
[14:20:28] <mihaiadrian> djph: i'm using bash to hack something
[14:20:46] <mrtnt_> koollman: yes, that was just a proof of concept script. It will be changed to Python using CSV library.
[14:20:57] <djph> ... and that's going to elicit an even colder response, mihaiadrian
[14:21:43] <mihaiadrian> anyway, i did it
[14:22:04] <mihaiadrian> all you have to do is use telegram-cli to grab and forward the last message in the channel onto another public channel
[14:22:11] <mihaiadrian> load that public channel with bots
[14:22:25] <mihaiadrian> and simply post messages using those bots
[14:22:28] <djph> selckin: I should've stuck with your answer.
[14:22:45] <mihaiadrian> everytime a bot posts, the view counts goes ++
[14:22:49] <selckin> djph: yeah you have to stop replying and have they do it
[14:23:06] <mihaiadrian> it can be whatever message
[14:23:34] <mihaiadrian> dude
[14:23:44] <mihaiadrian> there are scripts on github, none of them works anymore
[14:23:48] <mihaiadrian> i came up with a method that works
[14:23:48] <djph> really need to put linux on my coffee machine (yeah, yeah, "go to my distro channel" :P )
[14:24:04] <koollman> mrtnt_: it's probably easier to use python right away. Even if it's just to generate a bunch of shell lines. I remember doing that a long time ago, for compatibility reasons. basically something like generating (from python): c1="val"; c2="val"; shell_function "$c1" "$c2"
[14:24:39] <koollman> turns out, writing csv parser and safe-quoting values is annoying, so reusing existing code is nice ;)
[14:24:40] <djph> koollman: I tried that once.  IIRC it broke things, only faster :)
[14:24:41] <mihaiadrian> i should be praised
[14:25:08] <koollman> djph: well, it worked really nicely for me. afaik, it may still be running in that company :)
[14:25:22] *** Joins: tobybl_ (~tobybl@213.31.134.21)
[14:25:48] <mrtnt_> koollman: heh
[14:26:30] <djph> koollman: nice :)
[14:27:10] <djph> koollman: in my case, it was a "simple" case of missing a counter / increment ... so it eventually worked
[14:27:48] *** Quits: joerg (~saturn@user/joerg) (Read error: Connection reset by peer)
[14:27:54] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[14:27:56] <koollman> and I still consider csv one of the worst 'format'. it's really inconsistent, when someone tells you "the data will be available as csv" ... you basically know nothing about the exact format used (ok, it will be text, some separator will be there, and maybe there will be quoting and escaping. and maybe newlines in values. or maybe not)
[14:28:03] *** Quits: tobybl (~tobybl@213.31.134.21) (Ping timeout: 264 seconds)
[14:29:54] *** Joins: rcernin (~rcernin@124.190.139.235)
[14:30:40] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[14:30:54] <djph> yeah, thankfully in my small group when we do work, it's pipe-separated
[14:31:09] <djph> it's still not "great" ... but it's at least consistent
[14:32:26] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 245 seconds)
[14:33:09] *** Joins: joerg (~saturn@user/joerg)
[14:33:19] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[14:34:40] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[14:34:52] *** Joins: timj (~timj@user/timj)
[14:35:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[14:35:15] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[14:36:00] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[14:38:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:43:03] *** Quits: eleventh (~eleventh@143.131.13.208) (Ping timeout: 264 seconds)
[14:43:04] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Read error: Connection reset by peer)
[14:43:20] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[14:43:38] *** Joins: eleventh (~eleventh@143.131.13.208)
[14:44:14] *** Joins: sublim20 (~sublim20@user/sublim20)
[14:46:56] *** Joins: Thominus (~Thominus@user/thominus)
[14:46:59] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:59:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:00:15] *** Joins: namkeleser (~namkelese@101.179.132.178)
[15:00:27] *** Quits: Mo (~Mo@dynamic-095-112-110-153.95.112.pool.telefonica.de) (Ping timeout: 264 seconds)
[15:02:09] *** Joins: gschanuel9 (~gschanuel@user/gschanuel)
[15:03:23] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:05:21] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Ping timeout: 245 seconds)
[15:05:21] *** gschanuel9 is now known as gschanuel
[15:06:11] *** Joins: earnestly (~earnest@user/earnestly)
[15:08:51] *** Joins: lavaball (felix@31.204.155.215)
[15:09:47] *** Joins: legola (~legola@46.235.101.181)
[15:11:00] *** Joins: thiras (~thiras@user/thiras)
[15:15:07] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[15:21:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:24:43] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[15:30:32] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[15:31:10] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:32:14] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[15:34:57] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:35:30] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[15:36:38] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:42:38] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[15:43:51] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[15:45:16] *** llua` is now known as llua
[15:48:42] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[15:48:45] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:54:10] *** Joins: dxv1d (~dxv1d@91.193.166.98)
[15:54:10] *** Joins: furrymcgee (~devuan@cgn-89-1-209-145.nc.de)
[15:55:23] *** Quits: dxv1d (~dxv1d@91.193.166.98) (Client Quit)
[15:57:33] *** Quits: GuiToris (~GuiToris@user/guitoris) (Remote host closed the connection)
[15:59:38] <olspookishmagus> hello is there a key combination that does the REVERSE of what the default keymapping of Alt-D does?
[16:00:02] <olspookishmagus> also is there a character that does the REVERSE of what "|" does?
[16:00:21] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:00:48] <llua> what would that even mean
[16:02:11] <Soliton> is the reverse putting the cut stuff back or cutting in the other direction?
[16:02:43] <Soliton> either ctrl-w or ctrl-y
[16:03:07] <Soliton> no clue what the reverse of | means either.
[16:03:24] <MiLeon>  < ?
[16:03:56] <MiLeon>  | right direction
[16:04:02] <MiLeon> < left direction
[16:04:03] <MiLeon> or?
[16:04:27] <Soliton> a pipe connects processes though.
[16:04:28] <MiLeon> olspookishmagus,
[16:04:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9c8e:a51b:7850:c853)
[16:04:57] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9c8e:a51b:7850:c853) (Changing host)
[16:04:57] *** Joins: skapata (~Skapata@user/skapata)
[16:05:07] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:02] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:06:36] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 245 seconds)
[16:07:59] <MiLeon> "Alt + d Delete the Word after the cursor" ?
[16:09:19] <MiLeon> olspookishmagus, strg + w ?
[16:09:32] <MiLeon>  ctl + w
[16:10:04] <olspookishmagus> sorry people had to make some MORE COFFEE
[16:10:14] <MiLeon> me too :-)
[16:10:22] <olspookishmagus> not yet
[16:10:24] <olspookishmagus> don't rush it
[16:10:37] <olspookishmagus> indeed, Ctrl-W is what I was looking for
[16:11:07] <olspookishmagus> yes pipe to the left side
[16:11:42] <djph> pipelines are unidirectional
[16:11:53] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:11:53] <olspookishmagus> as if you have something | xargs and you want want to change that something fast so you can mess with it with Ctrl-K without deleting that xargs part
[16:13:27] <Soliton> how does it make sense to pipe from xargs to something?
[16:14:23] <koollman> Soliton: about the same way it makes sense to pipe from anything else to something
[16:14:34] <koollman> depends what you use xargs for
[16:20:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[16:20:18] *** Joins: sabugus (~root@187.9.172.235)
[16:20:55] <sabugus> I need some help: I need to find the size of files with different extensions on a directory, what should I do?
[16:21:22] <sabugus> I need to find the size of all files that are .mp3 .mp4 .avi .png .jpg
[16:21:38] <sabugus> been trying to use du and find but with no success
[16:22:05] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[16:22:38] <koollman> sabugus: total size ?
[16:22:44] <sabugus> yes koollman
[16:23:00] <sabugus> I used find to get a list of all the files
[16:26:05] <koollman> ok. then you can complete it: find ... -print0 | xargs -0r du -c -h
[16:26:24] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[16:26:29] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[16:27:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[16:28:25] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[16:28:43] <olspookishmagus> nevermind my question I'll need to grasp some more keyboard shortcuts that just Ctrl-K or Alt-D
[16:28:53] <olspookishmagus> thank you everyone, you can now be sorry :D
[16:29:24] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:30:07] <koollman> or something like: (find ... -printf '%n+'; echo 0) | bc
[16:33:39] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[16:33:54] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:34:12] <MiLeon>  find . -name "*.mp3" -exec ls -al {} \;
[16:34:22] <MiLeon> maybe multible -name if this is possible
[16:36:49] <olspookishmagus> your command line music player suggestions? ideally I'd be happy if audacious could take such requests but I think it's struggling handling passed arguments from find or grep (of an already populated list of mp3 files)
[16:37:38] <olspookishmagus> ... | tr '\n' '\0' | xargs -0 audacious -E
[16:37:40] <olspookishmagus> ok that did it
[16:39:48] *** Joins: seninha (~seninha@user/seninha)
[16:40:37] <MiLeon> olspookishmagus, mp3blaster
[16:40:38] <olspookishmagus> Where there is a shell, There is a way.
[16:40:56] <MiLeon> :-)
[16:41:02] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:41:40] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[16:42:22] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[16:43:47] *** Joins: masterkorp (~masterkor@user/masterkorp)
[16:43:57] *** Joins: arinov (~arinov@77.67.129.200)
[16:45:26] *** Quits: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de) (Quit: Leaving)
[16:48:13] *** Joins: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de)
[16:48:16] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 245 seconds)
[16:48:47] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:49:04] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[16:50:26] *** Joins: iomari891 (~iomari891@129.205.113.32)
[16:51:39] *** Joins: ||arifaX (~Commodore@p4fc72daa.dip0.t-ipconnect.de)
[16:51:39] *** Quits: ||arifaX (~Commodore@p4fc72daa.dip0.t-ipconnect.de) (Changing host)
[16:51:39] *** Joins: ||arifaX (~Commodore@user/arifax/x-9857073)
[16:52:03] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[16:52:58] <tirnanog> sabugus: you should say which platform you are using, ideally.
[16:54:17] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:55:09] <sabugus> tirnanog: wym?
[16:55:37] <tirnanog> bash is bash, but there are different implementations of the standard utilities. so, it helps to mention the platform when asking general questions such as these.
[16:55:44] *** Joins: reallyme_ (~reallymem@2600:1017:b42c:e90:bd68:db1b:56fd:de01)
[16:55:53] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[16:56:53] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[16:57:15] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[16:57:16] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:57:26] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 245 seconds)
[16:58:13] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[16:58:42] *** Joins: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl)
[17:00:09] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 256 seconds)
[17:00:20] *** cdown_ is now known as cdown
[17:00:21] *** Joins: han-solo (~hanish@user/han-solo)
[17:03:07] *** Joins: shad (~shad@user/shad)
[17:04:41] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[17:05:07] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[17:07:39] *** Quits: namkeleser (~namkelese@101.179.132.178) (Quit: Client closed)
[17:07:45] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:08:39] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[17:09:02] *** Joins: ano (~ano@user/ano)
[17:14:14] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:14:15] *** Quits: iomari891 (~iomari891@129.205.113.32) (Ping timeout: 264 seconds)
[17:16:08] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:17:27] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:17:40] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:18:27] *** Quits: reallyme_ (~reallymem@2600:1017:b42c:e90:bd68:db1b:56fd:de01) (Ping timeout: 264 seconds)
[17:20:43] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:21:10] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:24:59] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:26:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[17:26:53] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[17:27:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:27:40] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[17:28:20] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:28:24] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:29:39] *** Joins: legola (~legola@46.235.101.181)
[17:30:12] <BSaboia> What is the best way to check the value of a temp value on a script? Let's say that I do something like $ FOO=BAR sh my-script.sh and I need to check if FOO is BAR, do I do if [ $FOO == 'BAR' ]; then foo-bar; endif
[17:30:45] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[17:30:58] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:31:30] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[17:32:39] <han-solo> # foo=BAR; [[ $foo = BAR ]] && echo "\$foo is $foo"
[17:32:39] <shbot> han-solo: $foo is BAR
[17:32:45] <Soliton> [ "$FOO" = BAR ]
[17:33:54] <Soliton> FOO is an env variable in what you showed.
[17:34:06] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 245 seconds)
[17:34:11] <han-solo> erm
[17:34:41] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:34:56] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 245 seconds)
[17:36:17] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:36:18] <BSaboia> han-solo, but I have this on a file
[17:36:51] <BSaboia> Soliton, yes, it is
[17:38:30] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[17:41:38] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[17:42:18] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[17:42:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:43:15] <BSaboia> I am asking this because a colleague had a problem running such an if with bare sh
[17:44:42] <Soliton> as you can see from the correction you missed quoting $FOO and used ==.
[17:45:43] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[17:46:54] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[17:46:59] *** Joins: igemnace (~ian@user/igemnace)
[17:50:01] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:50:10] *** Joins: sinaowolabi (~SinaOwola@41.58.247.249)
[17:51:33] *** Quits: omnigoat (~omnigoat@user/omnigoat) (Quit: Ping timeout (120 seconds))
[17:54:16] *** Quits: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net) (Remote host closed the connection)
[17:56:02] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:56:03] <BSaboia> Soliton, nice, thanks. I wonder why it worked on zsh. But I also wrote it wrong for you -- I actually had "$FOO" wrapped in double-quotes on my side
[17:58:14] <Soliton> !==
[17:58:14] <greybot> The == operator is used to test numbers for equality in ((arithmetic expressions)). In BASH and ksh it is the same as = in [[ ]]. It should not be used in the POSIX / Bourne compatible test or [ ], as this will not work in other shells.
[17:59:36] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[17:59:58] <geirha> # bash -c '[ x == x ] && echo bash' ; sh -c '[ x == x ] && echo sh'
[17:59:59] <shbot> geirha: bash
[17:59:59] <shbot> geirha: sh: 1: [: x: unexpected operator
[17:59:59] *** Joins: BUSY (~BUSY@user/busy)
[18:01:02] <geirha> somewhat odd error message from dash though. Since there are three arguments, it should expect the middle one to be the operator
[18:01:26] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[18:01:55] <Soliton> i just thought the same. could also start with ! though.
[18:05:57] <Soliton> # sh -c '[ "!" == x ]'
[18:05:58] <shbot> Soliton: sh: 1: [: ==: unexpected operator
[18:06:52] <Soliton> quite weird either way.
[18:09:04] <geirha> sh# [ a == b ]
[18:09:05] <shbot> geirha: sh: 1: [: a: unexpected operator
[18:09:18] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:09:56] <geirha> ah well, I might try to build the latest version later and see if it does the same
[18:10:08] <tirnanog> yash produces the best errors I've seen. such-and-such is not a binary operator. notwithstanding that it supports ==.
[18:11:04] <geirha> I vote we introduce javascript's === operator to bash. Who's with me?
[18:11:41] <wiscii> and then we take over thee world amigos
[18:14:05] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:14:06] <Riviera> embed javascript as scripting language for bash
[18:14:41] <Riviera> also lua
[18:15:27] <han-solo> !survey
[18:15:27] <greybot> survey says: No
[18:15:31] *** Joins: sublim20 (~sublim20@user/sublim20)
[18:15:57] <Riviera> in good tradition with western democracy, let's do it then!
[18:16:40] <wiscii> that's the spirit .. and then we take over thee world!
[18:19:36] *** Joins: legola (~legola@46.235.101.181)
[18:21:01] *** Quits: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de) (Remote host closed the connection)
[18:25:45] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:27:01] *** Joins: zeden (~zeden@user/zeden)
[18:27:08] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:28:05] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[18:28:21] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:29:41] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:35:05] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:35:47] *** Joins: rgrinberg (~textual@201.198.177.243)
[18:36:18] *** Joins: shad (~shad@user/shad)
[18:36:30] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:37:06] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[18:38:58] *** Quits: Inline (~Inline@2a02:908:1252:7a80:24d7:18e7:aec6:a72d) (Remote host closed the connection)
[18:39:19] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7363:e82d:2c27:f888)
[18:40:58] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7363:e82d:2c27:f888) (Remote host closed the connection)
[18:41:19] *** Joins: Inline (~Inline@2a02:908:1252:7a80:3233:dedc:9ad8:36c3)
[18:41:20] *** Joins: bbju (~bbju@2409:8929:353d:654:dc0b:bdab:6d2e:8aff)
[18:43:27] *** Joins: magla (~gelignite@55d4df7d.access.ecotel.net)
[18:44:02] *** Quits: geirha (~geirha@user/geirha) (Ping timeout: 260 seconds)
[18:47:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:3233:dedc:9ad8:36c3) (Ping timeout: 268 seconds)
[18:50:57] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (ERC (IRC client for Emacs 27.2))
[18:52:19] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[18:54:42] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:58:36] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[18:59:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:02:20] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4ac:ef70:daee:408f)
[19:06:46] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[19:07:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:08:35] *** Quits: ||arifaX (~Commodore@user/arifax/x-9857073) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:09:03] *** Joins: dj (~dj@162.223.44.49)
[19:09:44] *** Joins: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net)
[19:09:44] *** Joins: b100s (~b100s@133.237.7.86)
[19:10:10] *** Quits: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl) (Quit: gerwand)
[19:10:24] *** Joins: kj (~kj@beta.aerisnetwork.net)
[19:10:50] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd)
[19:11:37] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[19:12:03] <b100s> hi2all; stupid question about loops : ) here is inner loop seems to work not as I expect to: https://dpaste.org/815w  I expect to curl goodle 20 times not 2 : ) Why it might be?
[19:12:22] <relipse> how do I pass first argument of script to rsync command ?
[19:12:26] <relipse> $1 ?
[19:12:50] <Soliton> !lists > b100s
[19:12:50] <greybot> b100s: In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[19:12:52] <Soliton> !seq
[19:12:52] <greybot> seq(1) is nonstandard, inefficient and useless. For bash2.04+/zsh/ksh93, use for ((i = 1; i <= 10; i++)); do ..., bash3.0+, use for i in {1..10}, for POSIX and other shells, see !counting
[19:12:56] <tirnanog> relipse: "$1"
[19:13:29] <Soliton> if curl fails then it'll just run twice.
[19:15:11] <b100s> Soliton, it does not ;) https://dpaste.org/PLX8
[19:16:06] <Soliton> right, you changed IFS and hoped it would split your seq non-sense.
[19:16:18] <Soliton> so just fix the above mentioned issues.
[19:16:43] <b100s> lol, thx. the "for ((i = 1; i <= 10; i++))" works here perfectly : ) thx. Always confused by IFS : )
[19:17:02] <tirnanog> don't meddle with it, then.
[19:17:22] <Soliton> ports=(a b); for p in "${ports[@]}"; do ...
[19:17:27] <tirnanog> chances are that it's going to be a code smell anyway.
[19:17:34] <b100s> tirnanog, if I can. I know no other way to split string and iterate over it
[19:17:45] <tirnanog> you're asking the wrong question, in this case.
[19:17:51] <tirnanog> as above, use an array.
[19:17:56] <Soliton> using wordsplitting is pretty much never the solution.
[19:18:07] <b100s> tirnanog, that is for sure and I've got right answer for my wrong Q ; )
[19:18:28] <b100s> tirnanog, how to bring string into array?
[19:18:39] <Soliton> where does the string come from?
[19:18:55] <b100s> from output of another command
[19:19:00] *** Joins: superboot (~agentgasm@user/superboot)
[19:19:11] <Soliton> mapfile or read -a.
[19:19:13] <tirnanog> do you have a representative sample of the output of this command?
[19:19:54] <b100s> Soliton, let me check them. Thx. tirnanog here it is "80:51599/TCP,443:58354/TCP"
[19:20:06] <b100s> it's already cut -d' ' -f7
[19:20:26] <b100s> maybe I made mistake using cut to extract this part of the str?
[19:20:38] <Soliton> cut is rarely useful.
[19:20:39] <b100s> I mean I must use something instead of cut
[19:20:44] <Soliton> !faq 1
[19:20:44] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[19:20:46] <b100s> yeah, I knew \
[19:20:57] <b100s> whatever I do is already wrong :)
[19:21:11] <tirnanog> you haven't even shown anything that contains spaces. from that, I assume that this is not representative output.
[19:21:36] <Soliton> well, they want to split on comma.
[19:22:18] <b100s> tirnanog, why do you need spaces? I do iterate over ",". It's easy to understand from IFS=$',' , isn't it?
[19:22:22] *** Quits: bbju (~bbju@2409:8929:353d:654:dc0b:bdab:6d2e:8aff) (Ping timeout: 256 seconds)
[19:22:29] <Soliton> easier to see original output though to suggest how best to parse it.
[19:22:47] <tirnanog> because it feels like we're working backwards here, rather than forwards from the initial intent.
[19:23:21] <b100s> here it is, Soliton : "name    name               LoadBalancer   10.10.10.10    10.1.1.1   80:51599/TCP,443:58354/TCP                      268d"
[19:23:32] <b100s> tirnanog, oh, I see
[19:23:43] <b100s> let's work forwards then?
[19:26:25] <tirnanog> what should ports contain in that case?
[19:26:40] *** Joins: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr)
[19:27:28] <b100s> tirnanog, e.g. 51599 . Inside first loop I do extract it via `p=$(echo "$p" | cut -d':' -f2 | cut -d'/' -f1)`
[19:28:15] <b100s> Btw now all works perfect, no issues after replacing $(seq 1 10) to classic loop syntax. But I'd love to improve and learn something new
[19:28:18] <Soliton> while read -r name1 name2 stuff morestuff evenmorestuff ports rest; do IFS=, read -ra ports <<< "$ports"; ports=("${ports[@]%%/*}") ports=("${ports[@]##*:}"); for p in "${ports[@]}"; do curl ...; done; done < <(cmd)
[19:28:43] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[19:28:48] *** Joins: arinov (~arinov@77.67.129.200)
[19:28:49] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[19:28:52] *** Joins: extern (~archer@213.137.70.119)
[19:30:08] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4ac:ef70:daee:408f) (Remote host closed the connection)
[19:30:09] <b100s> Soliton, thx. Now I need to remember how bash works with strings/(arrays?) to understand ${ports[@]%%/*} and ${ports[@]##*:}
[19:30:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:17ed:d02:7ca7:bad1)
[19:30:35] <Soliton> !faq 100
[19:30:36] <greybot> https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[19:32:17] *** Joins: mongy (~mongy@user/mongy)
[19:32:38] <b100s> yup, thx a lot
[19:32:39] <tirnanog> note that you will need for consecutive whitespace to act as a safe field delimiter for that to work reliably. for instance, whatever "name" may be, it cannot contain whitespace. incidentally, what program is that?
[19:33:05] <b100s> tirnanog, program is kubectl
[19:33:08] <tirnanog> ah.
[19:33:19] *** Quits: rdz (~rdz@2001:620:120:1::12) (Read error: Connection reset by peer)
[19:33:39] <b100s> tirnanog, actually I do ignore name part in this part I do need only port
[19:33:39] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:34:03] <Soliton> you can use _ as variable name for fields you don't care about.
[19:34:29] <tirnanog> my point is that, if you're splitting on whitespace, as read normally would, the value of a field may ever contain whitespace otherwise it will break.
[19:34:42] <tirnanog> does kubectl guarantee this? I don't know. but you would need to know.
[19:34:50] <tirnanog> never*
[19:35:06] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:35:47] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[19:35:48] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[19:36:38] <Soliton> # cut -d' ' -f7 <<< "name    name               LoadBalancer   10.10.10.10    10.1.1.1   80:51599/TCP,443:58354/TCP                      268d"
[19:36:39] <shbot> Soliton: no output
[19:37:21] *** Joins: timj (~timj@user/timj)
[19:37:48] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:50] <Soliton> either we're missing something or there is perhaps different output based on stdout being a terminal or so.
[19:38:09] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:38:28] <b100s> tirnanog, good point. Actually I'n not sure can name containe whitespace or not.
[19:38:41] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 245 seconds)
[19:38:52] <Soliton> perhaps you can rather tell kubectl to only output what you care about.
[19:38:54] <tirnanog> it might be that you are also able to control the output format.
[19:39:19] <b100s> Soliton, tirnanog  yup, I think it is possible : ) (synced)
[19:39:37] *** Joins: djp (~djp@107-179-223-174.cpe.teksavvy.com)
[19:40:00] <tirnanog> while I can offer no specific guidance in the case of this program, that's the first thing that I would try to determine in the course of writing a parser.
[19:40:03] *** Joins: rgrinberg (~textual@201.198.177.243)
[19:41:36] *** Joins: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de)
[19:41:36] <Soliton> apart from the cut invocation not working it's the 6th field in the example anyway.
[19:42:09] <djp> Oops, it happened again: I got my script working, then atrted to add color, and now I can't read the code! Not just because of the `${blue}something${reset}` codes, but my vim hilighting is obscuring things. Can anyone suggest a vim colorscheme for working with bash colors?
[19:43:03] <Soliton> figure out what syntax the highlighter doesn't like.
[19:43:38] <Soliton> i doubt there is a big chance that there is a hidden schema that is simply better.
[19:44:00] <b100s> Soliton, tirnanog thank you very much for suggestions. I'll try to impelemt all of them and probably will be back with questions : )
[19:44:24] <djp> it hilites the color codes, and that's ok, but it also hilights the term in the middle.. not helpful (especially because both parts are hilighted in a similar color)
[19:44:37] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[19:45:23] <djp> a vim colorscheme that hilighted the enclosed terms with the color indicated, would be fine
[19:45:48] <tirnanog> that's not going to happen.
[19:46:11] <djp> tirnanog all is lost! ;-)
[19:46:13] <selckin> djp: got an example? feels wierd that you manage to break it
[19:46:33] <tirnanog> I mean, it could be done, in theory.
[19:47:13] *** Quits: Inline (~Inline@2a02:908:1252:7a80:17ed:d02:7ca7:bad1) (Quit: Leaving)
[19:47:32] <selckin> googled something random and like https://alinex.gitlab.io/bash-lib/libs/colors/ type of api should be fairly readable still
[19:47:35] <djp> it's not broken, just obscured. evrything enclosed with color codes, and the thing, are displayed in a similar blue..
[19:49:16] <tirnanog> https://vimcolorschemes.com/ might help you, though the samples are not bash. you can probably figure out which token in the samples is equivalent to that of your variable expansion, though.
[19:49:20] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:49:57] <tirnanog> i.e. type out some of the vimscript if you have to, and match it up based on your current scheme.
[19:50:00] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:50:05] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:50:11] <djp> selckin ya, that looks pretty good! thanks
[19:52:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[19:53:03] <dionys> !$!
[19:53:04] <greybot> $! expands to the process ID of the most recently executed background (asynchronous) command. In bash 4.4 and later this includes process substitutions.
[19:54:33] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:55:13] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[19:55:40] *** Joins: Lunatrius` (~Lunatrius@77.38.22.219)
[19:56:56] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[19:57:27] *** Quits: Lunatrius (~Lunatrius@77.38.22.219) (Ping timeout: 264 seconds)
[19:57:27] *** Lunatrius` is now known as Lunatrius
[19:59:35] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:00:08] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:02:47] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[20:03:29] <djp> selckin actually, i think AnsiEsc might be the answer!
[20:03:59] *** Quits: magla (~gelignite@55d4df7d.access.ecotel.net) (Quit: Stay safe!)
[20:04:11] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:04:24] *** Parts: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (WeeChat 3.4-dev)
[20:04:51] *** Joins: pigweed (~pigweed@97.119.229.83)
[20:05:18] *** Quits: extern (~archer@213.137.70.119) (Read error: Connection reset by peer)
[20:05:26] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[20:06:09] *** Joins: extern (~archer@213.137.71.159)
[20:06:28] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:06:52] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[20:06:52] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Changing host)
[20:06:52] *** Joins: wuseman (~wuseman@user/wuseman)
[20:08:23] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:09:17] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:09:34] *** Joins: zro (~zro@user/zro)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:37] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[20:12:14] *** Quits: extern (~archer@213.137.71.159) (Quit: WeeChat 3.3)
[20:13:56] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:16:00] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:17:26] *** Quits: sdu (~doo@185.44.146.165) (Read error: Connection reset by peer)
[20:17:55] *** Quits: sinaowolabi (~SinaOwola@41.58.247.249) (Ping timeout: 256 seconds)
[20:18:13] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 250 seconds)
[20:18:19] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:18:23] *** Joins: sdu (~doo@185.44.146.165)
[20:18:53] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[20:18:53] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[20:18:53] *** Joins: wuseman (~wuseman@user/wuseman)
[20:19:39] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:19:54] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:20:44] *** Joins: bbju (~bbju@103.144.148.53)
[20:21:21] *** Joins: totenkoph (~scythe@user/totenkoph)
[20:21:25] *** Joins: sinaowolabi (~SinaOwola@41.58.227.83)
[20:22:16] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[20:23:19] *** Joins: legola (~legola@46.235.101.181)
[20:26:40] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[20:27:45] *** Joins: gschanuel4 (~gschanuel@user/gschanuel)
[20:27:51] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 245 seconds)
[20:28:03] *** Quits: legola (~legola@46.235.101.181) (Ping timeout: 264 seconds)
[20:29:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:31:39] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Ping timeout: 264 seconds)
[20:31:39] *** gschanuel4 is now known as gschanuel
[20:31:46] *** Joins: m4n_ (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[20:32:01] *** Quits: liam_ (sid7517@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[20:33:11] *** Quits: et (~et@user/et) (Excess Flood)
[20:34:05] *** Joins: extern (~archer@213.137.71.159)
[20:34:06] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[20:34:22] *** Joins: liam_ (sid7517@id-7517.helmsley.irccloud.com)
[20:36:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:36:54] *** Joins: mei8 (~mei@user/mei)
[20:36:58] *** Joins: N0ZYC_ (~N0ZYC@173-16-166-245.client.mchsi.com)
[20:37:05] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[20:37:09] *** Joins: Penguin666 (~Penguin66@217.138.205.135)
[20:37:13] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[20:37:26] *** Joins: kj- (~kj@beta.aerisnetwork.net)
[20:37:29] *** Joins: kdc_ (~kdc@196.211.197.159)
[20:37:30] *** Joins: thiras_ (~thiras@user/thiras)
[20:37:37] *** Joins: thebombzen_ (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[20:37:38] *** Joins: useretail__ (~useretail@185.132.19.151)
[20:37:43] *** Joins: dj_ (~dj@162.223.44.49)
[20:37:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:37:48] *** Joins: lovetruth_ (~lovetruth@82.137.23.1)
[20:37:51] *** Joins: seninha_ (~seninha@user/seninha)
[20:37:52] *** Joins: davef_ (~davef@user/davef)
[20:37:53] *** Joins: sazawal_ (~sazawal@122.161.81.235)
[20:38:10] *** Joins: marcel8 (~marcel@user/marcel)
[20:38:27] *** Joins: vdsa (~pc@41.68.196.175)
[20:38:33] *** Joins: omnigoat1 (~omnigoat@user/omnigoat)
[20:38:38] *** Joins: Fjord5 (~Fjord@c-73-14-198-35.hsd1.co.comcast.net)
[20:38:39] *** Joins: setesat9 (~setesat@94.4.156.220)
[20:38:40] *** Joins: robobo76 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[20:38:40] *** Joins: luva3 (~luva@45.141.152.36)
[20:38:41] *** Joins: greknod282 (~grek@120.88.171.98)
[20:38:54] *** Quits: vdsa (~pc@41.68.196.175) (K-Lined)
[20:39:00] *** Joins: lilalinux_ (sid512618@id-512618.tinside.irccloud.com)
[20:39:10] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:39:13] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[20:39:13] *** Joins: eoli3n__ (~eoli3n@162.38.105.222)
[20:39:17] *** Joins: kapil_ (~kapil@2a01:4f9:c010:c9c3::1)
[20:39:21] *** Joins: TMan459_ (~TMan459@068-187-099-141.res.spectrum.com)
[20:39:27] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:39:29] *** Joins: kiryin_ (~kiryin@85-76-138-131-nat.elisa-mobile.fi)
[20:39:31] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[20:39:50] *** Joins: reallyme_ (~reallymem@70.107.110.8)
[20:39:54] *** Joins: wwallace (~afernande@63.240.73.102)
[20:39:59] *** Joins: llua` (~llua@zsh/developer/llua)
[20:40:04] *** Joins: pasteban_ (~pasteban@157.146.251.23.bc.googleusercontent.com)
[20:40:14] *** Joins: sabugus_ (~root@187.9.172.235)
[20:40:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:40:18] *** Joins: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[20:40:27] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[20:40:34] *** Joins: checkbot_ (~checkbot@157.146.251.23.bc.googleusercontent.com)
[20:40:38] *** Joins: geirha (~geirha@user/geirha)
[20:40:57] *** Joins: moviuro_ (~moviuro@znc.popho.be)
[20:41:00] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:01] *** Joins: maddx (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[20:41:02] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:41:12] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:41:31] *** Joins: earnest (~earnest@user/earnestly)
[20:41:34] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[20:41:35] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[20:41:35] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[20:41:35] *** Joins: millido_ (~millido@84.210.150.128)
[20:41:40] *** Joins: zostj_ (~rue@1-162-44-73.dynamic-ip.hinet.net)
[20:41:47] *** Joins: rundown (~eb0t@90.199.243.141)
[20:41:51] *** Joins: angkat (~angkat@2a02:587:121f:f103:127b:44ff:fe42:43b1)
[20:41:52] *** Joins: DaNeenja1 (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[20:41:53] *** Joins: n4dir_ (~user@mue-88-130-56-009.dsl.tropolys.de)
[20:41:56] *** Joins: dfdx_ (~F@user/dfdx)
[20:42:00] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[20:42:02] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[20:42:03] *** Joins: sgn_ (~sgn@user/sgn)
[20:42:14] *** Joins: prime- (~prime@user/prime)
[20:42:32] *** Joins: polve2 (~polve@twcitalia/polve)
[20:42:50] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[20:42:53] *** Joins: illuminated_ (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[20:42:58] *** Quits: joerg (~saturn@user/joerg) (Excess Flood)
[20:46:23] *** Joins: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net)
[20:46:24] *** Joins: jab416171_ (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net)
[20:46:43] *** Quits: reallymemorable (~reallymem@70.107.110.8) (*.net *.split)
[20:46:43] *** Quits: wuseman (~wuseman@user/wuseman) (*.net *.split)
[20:46:43] *** Quits: n4dir (~user@mue-88-130-56-009.dsl.tropolys.de) (*.net *.split)
[20:46:43] *** Quits: kj (~kj@beta.aerisnetwork.net) (*.net *.split)
[20:46:43] *** Quits: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net) (*.net *.split)
[20:46:43] *** Quits: dj (~dj@162.223.44.49) (*.net *.split)
[20:46:43] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (*.net *.split)
[20:46:43] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (*.net *.split)
[20:46:43] *** Quits: omnigoat (~omnigoat@user/omnigoat) (*.net *.split)
[20:46:43] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (*.net *.split)
[20:46:43] *** Quits: seninha (~seninha@user/seninha) (*.net *.split)
[20:46:43] *** Quits: sabugus (~root@187.9.172.235) (*.net *.split)
[20:46:43] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (*.net *.split)
[20:46:43] *** Quits: thiras (~thiras@user/thiras) (*.net *.split)
[20:46:43] *** Quits: earnestly (~earnest@user/earnestly) (*.net *.split)
[20:46:43] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[20:46:43] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (*.net *.split)
[20:46:43] *** Quits: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net) (*.net *.split)
[20:46:43] *** Quits: kiryin (~kiryin@85-76-138-131-nat.elisa-mobile.fi) (*.net *.split)
[20:46:43] *** Quits: Penguin666x (~Penguin66@217.138.205.135) (*.net *.split)
[20:46:43] *** Quits: polve (~polve@twcitalia/polve) (*.net *.split)
[20:46:43] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (*.net *.split)
[20:46:43] *** Quits: sazawal (~sazawal@122.161.81.235) (*.net *.split)
[20:46:43] *** Quits: sgn (~sgn@user/sgn) (*.net *.split)
[20:46:43] *** Quits: prime (~prime@user/prime) (*.net *.split)
[20:46:43] *** Quits: ninjabuf- (~ninjabuff@user/ninjabuffet) (*.net *.split)
[20:46:43] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[20:46:43] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (*.net *.split)
[20:46:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (*.net *.split)
[20:46:43] *** Quits: mei (~mei@user/mei) (*.net *.split)
[20:46:43] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (*.net *.split)
[20:46:43] *** Quits: pj (~pj@ghettoforge/pj) (*.net *.split)
[20:46:43] *** Quits: dsrt^ (~dsrt@68.101.63.101) (*.net *.split)
[20:46:43] *** Quits: kdc (~kdc@196.211.197.159) (*.net *.split)
[20:46:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[20:46:43] *** Quits: luva (~luva@45.141.152.36) (*.net *.split)
[20:46:44] *** Quits: defjam (~eb0t@90.199.243.141) (*.net *.split)
[20:46:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[20:46:44] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[20:46:44] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[20:46:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[20:46:44] *** Quits: marcel (~marcel@user/marcel) (*.net *.split)
[20:46:44] *** Quits: davef (~davef@user/davef) (*.net *.split)
[20:46:44] *** Quits: lovetruth (~lovetruth@82.137.23.1) (*.net *.split)
[20:46:44] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: Exterminador (sid116151@user/pegasus) (*.net *.split)
[20:46:44] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: robobo7 (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (*.net *.split)
[20:46:44] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (*.net *.split)
[20:46:44] *** Quits: greknod28 (~grek@120.88.171.98) (*.net *.split)
[20:46:44] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (*.net *.split)
[20:46:44] *** Quits: xx (~xx@user/xx) (*.net *.split)
[20:46:44] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (*.net *.split)
[20:46:44] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (*.net *.split)
[20:46:44] *** Quits: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66) (*.net *.split)
[20:46:44] *** Quits: wwilliam (~afernande@user/wwilliam) (*.net *.split)
[20:46:44] *** Quits: dale (dale@user/dale) (*.net *.split)
[20:46:44] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[20:46:44] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[20:46:44] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (*.net *.split)
[20:46:44] *** Quits: kapil (~kapil@o-k.website) (*.net *.split)
[20:46:44] *** Quits: millido (~millido@84.210.150.128) (*.net *.split)
[20:46:44] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (*.net *.split)
[20:46:44] *** Quits: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net) (*.net *.split)
[20:46:44] *** Quits: Strom (strom@fedora/strom) (*.net *.split)
[20:46:44] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (*.net *.split)
[20:46:44] *** Quits: eoli3n (~eoli3n@162.38.105.222) (*.net *.split)
[20:46:44] *** Quits: aaro (aaro@user/aaro) (*.net *.split)
[20:46:45] *** Quits: useretail_ (~useretail@185.132.19.151) (*.net *.split)
[20:46:45] *** Quits: moviuro (~moviuro@car.popho.be) (*.net *.split)
[20:46:45] *** Quits: lilalinux (sid512618@tinside.irccloud.com) (*.net *.split)
[20:46:45] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[20:46:45] *** Quits: dfdx (~F@user/dfdx) (*.net *.split)
[20:46:45] *** omnigoat1 is now known as omnigoat
[20:46:45] *** luva3 is now known as luva
[20:46:45] *** Fjord5 is now known as Fjord
[20:46:45] *** polve2 is now known as polve
[20:46:45] *** Lord_of_Life_ is now known as Lord_of_Life
[20:46:45] *** greknod282 is now known as greknod28
[20:46:45] *** setesat9 is now known as setesat
[20:46:45] *** mei8 is now known as mei
[20:46:45] *** ayusta is now known as ayustae
[20:46:45] *** marcel8 is now known as marcel
[20:46:45] *** robobo76 is now known as robobo7
[20:46:45] *** lilalinux_ is now known as lilalinux
[20:47:15] *** Quits: extern (~archer@213.137.71.159) (Quit: WeeChat 3.3)
[20:47:53] *** Quits: jab416171_ (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net) (Max SendQ exceeded)
[20:48:07] *** Joins: Gerula_ (~Gerula@user/gerula)
[20:48:07] *** Gerula is now known as Guest199
[20:48:07] *** Quits: Guest199 (~Gerula@user/gerula) (Killed (lithium.libera.chat (Nickname regained by services)))
[20:48:07] *** Gerula_ is now known as Gerula
[20:48:16] *** Quits: Darkfoe (sid402081@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[20:48:20] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[20:48:23] *** Joins: jab416171 (~jab416171@c-67-172-226-114.hsd1.ut.comcast.net)
[20:48:28] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:48:54] *** Joins: extern (~archer@213.137.71.159)
[20:49:26] *** Joins: Darkfoe (sid402081@id-402081.helmsley.irccloud.com)
[20:51:36] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[20:52:55] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[20:52:55] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[20:52:55] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[20:52:55] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:52:55] *** Joins: pj (~pj@ghettoforge/pj)
[20:52:55] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[20:52:55] *** Joins: Exterminador (sid116151@user/pegasus)
[20:52:55] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[20:52:55] *** Joins: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66)
[20:52:55] *** Joins: dale (dale@user/dale)
[20:52:55] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[20:52:55] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:52:55] *** Joins: Strom (strom@fedora/strom)
[20:52:55] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[20:52:55] *** Joins: aaro (aaro@user/aaro)
[20:53:18] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Max SendQ exceeded)
[20:53:35] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e84c:31fa:24ac:a92f)
[20:53:40] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[20:53:47] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:54:08] *** Joins: et (~et@user/et)
[20:54:20] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[20:54:35] *** davef_ is now known as davef
[20:54:50] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[20:56:46] *** Joins: g0g0do (~doe@184-75-138-166.resi.cgocable.ca)
[20:57:06] <g0g0do> weird link.. radio frequencies in a human being https://www.youtube.com/watch?v=E1ZqRhe4lZE
[20:57:16] *** Parts: g0g0do (~doe@184-75-138-166.resi.cgocable.ca) ()
[20:58:14] <superboot> What a garbage video.
[20:58:22] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[20:58:45] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[20:59:30] *** sazawal_ is now known as sazawal
[20:59:47] *** Quits: maddx (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[20:59:58] <geirha> I'll take your word for it
[21:00:13] *** Joins: maddx (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[21:00:57] <geirha> pretty much all bash-related videos are garbage, so all non-bash related are probably too
[21:01:14] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 260 seconds)
[21:01:19] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[21:01:19] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[21:01:19] *** Joins: wuseman (~wuseman@user/wuseman)
[21:01:33] *** Quits: TomyWork (~TomyLobo@p200300e80f0f2700fda4ee8d652668eb.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:02:38] *** Joins: AsenMx (~AsenMx@user/asenmx)
[21:04:27] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:05:17] *** Joins: joerg (~saturn@user/joerg)
[21:05:45] *** Joins: hsv (~unknown@user/hsv)
[21:06:26] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:06:55] *** Joins: docmax (~docmax@dynamic-077-001-121-175.77.1.pool.telefonica.de)
[21:08:51] *** Quits: zostj_ (~rue@1-162-44-73.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[21:08:55] *** Quits: furrymcgee (~devuan@cgn-89-1-209-145.nc.de) (Quit: leaving)
[21:09:11] *** Joins: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net)
[21:09:35] *** Joins: XV8 (~XV8@199.192.138.251)
[21:12:01] *** Joins: arinov (~arinov@213.194.126.155)
[21:12:03] *** Joins: WeedMan (~WeedMan@cpc151155-smal19-2-0-cust9.19-1.cable.virginm.net)
[21:13:26] <WeedMan> technically not a bash question, but does anyone know anything about  sakura terminal emulator  ?
[21:13:31] <knstn> Guys, if I have subdirectories like dir/1/1.1/1.1.1 ,  dir/1/1.2/1.1.1 ,etc and in every final subdirectory I have the same files names with different content, _file.txt and file.txt, how do I grep for a pattern each "file.txt"?
[21:13:58] <Soliton> find or globstar
[21:14:15] * knstn thumbs up
[21:14:25] *** llua` is now known as llua
[21:14:28] <WeedMan> I want to know if three is a way to change  [alt] + [left]  to  [ctrl] + [left]
[21:14:38] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[21:14:56] <superboot> knstn: shopt -s globstar; grep 'pattern' **/*file.txt
[21:15:20] <mooz> why would you join #bash to purposely ask a non-bash related question instead of going somewhere else..?
[21:15:25] *** Joins: xx (~xx@user/xx)
[21:16:00] <WeedMan> mooz: because there is no #sakura chan on this IRC server and I want to use bash with it?
[21:16:03] <superboot> mooz: Because there are a lot of smart people who use terminals all day long here, and are pretty active?
[21:16:56] <WeedMan> ^this^
[21:17:55] <superboot> WeedMan: What does alt+left do and what does ctrl+left do, in Sakura?
[21:18:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[21:18:26] *** Joins: magla (~gelignite@55d4df7d.access.ecotel.net)
[21:18:34] <WeedMan> tab left on the line
[21:19:04] <WeedMan> in mate-terminal it's  ctrl+left  on sakura terminal it's  alt+left
[21:19:15] <WeedMan> I prefer the mate-terminal way
[21:19:26] <hsv> Is there a better way to echo to both stdout and stderr?  cmd | tee >(>&2)
[21:19:40] <hsv> Or anything that doesn't involve tee?
[21:19:50] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:20:05] <WeedMan> maybe I should just go back to using mate-terminal
[21:20:18] <WeedMan> I hate how mate-terminal pastes file names
[21:20:37] <superboot> WeedMan: Because the keyboard bindings for moving around the commandline can be modified in Bash, using the "bind" built-in.
[21:20:37] <superboot> WeedMan: Like move one word to the left?
[21:20:42] <llua> so since there is a lot of smart people that use monitors all day long here, how can i get rid of burn-in on mine?
[21:20:55] <hsv> switch it off.
[21:21:06] <llua> tried it
[21:21:10] *** Quits: sazawal (~sazawal@122.161.81.235) (Ping timeout: 268 seconds)
[21:21:18] *** Joins: shad (~shad@user/shad)
[21:21:43] <llua> pls halp.
[21:22:39] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[21:22:46] <WeedMan> superboot: I'm not sure what you mean by bind, IDK how that works, but yeah for moving whole words to the left vs letter by letter
[21:22:46] <geirha> take a picture of it, invert it, then display that image constantly until you get a smooth burn over the entire monitor
[21:23:09] <larryv> WeedMan: i searched for like five seconds and found this. it does not seem particularly difficult to configure https://github.com/dabisu/sakura#keybindings
[21:23:41] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[21:23:54] <hsv> larryv: obviously you're one of the smart ones.
[21:24:15] <superboot> WeedMan: Check out "help bind". And try: bind -P | grep '\eb'
[21:24:36] <WeedMan> larryv: but I have tried sakura.conf and I there is no mention on  alt  anywhere
[21:24:54] <WeedMan> like, I searched the conf for  alt  and there wasn't any
[21:25:10] <larryv> the page i literally just linked mentions Alt. i am looking at it right now.
[21:25:16] <WeedMan> dafuk
[21:25:20] *** Quits: rgrinberg (~textual@201.198.177.243) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:25:20] <WeedMan> I literally looked
[21:25:26] *** Joins: sublim20 (~sublim20@user/sublim20)
[21:25:35] <larryv> https://github.com/dabisu/sakura#accelerators
[21:25:38] <hsv> smart fail.
[21:26:16] <WeedMan> accelerator means what?
[21:26:22] *** Quits: reallyme_ (~reallymem@70.107.110.8) (Remote host closed the connection)
[21:27:23] <geirha> "noun. a person or thing that causes something to happen or develop more quickly"
[21:28:12] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:28:34] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[21:29:09] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:29:43] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[21:29:56] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[21:30:31] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[21:30:34] *** Joins: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[21:30:35] *** Quits: ^wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[21:30:35] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[21:30:39] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:f13d:5107:e78c:5087)
[21:30:39] *** Joins: sazawal (~sazawal@122.161.81.235)
[21:30:46] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:f13d:5107:e78c:5087) (Changing host)
[21:30:46] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:31:12] *** Quits: tobybl_ (~tobybl@213.31.134.21) (Remote host closed the connection)
[21:31:25] *** Quits: sazawal (~sazawal@122.161.81.235) (Remote host closed the connection)
[21:31:36] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 245 seconds)
[21:31:42] <WeedMan> larryv: okay after further reading the 'accelerator' for Atl =8 , BUT I searched the sakura.conf for  8  and there is no 8 anywhere
[21:31:53] *** Joins: sazawal (~sazawal@122.161.81.235)
[21:32:28] <WeedMan> if moving tab is alt, it should be 8, but it isn't
[21:33:05] *** Quits: n4dir_ (~user@mue-88-130-56-009.dsl.tropolys.de) (Remote host closed the connection)
[21:33:12] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Excess Flood)
[21:33:31] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[21:33:32] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[21:33:32] *** Joins: wuseman (~wuseman@user/wuseman)
[21:34:06] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[21:34:36] *** Quits: bbju (~bbju@103.144.148.53) (Quit: Client closed)
[21:35:09] *** Joins: bbju (~bbju@103.144.148.53)
[21:35:22] <WeedMan> tried changing switch_tab_accelerator=5  to =4 and it still behaves the same way
[21:35:33] *** Quits: bbju (~bbju@103.144.148.53) (Client Quit)
[21:36:19] *** Joins: arinov (~arinov@31.142.60.102)
[21:36:20] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:36:35] <larryv> i'm sorry to hear that. try asking in a forum where someone can actually help https://answers.launchpad.net/sakura
[21:39:20] *** Quits: maddx (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Quit: WeeChat 3.4-dev)
[21:41:19] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[21:41:48] *** Joins: kexec (~kexec@user/kexec)
[21:42:04] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[21:42:04] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[21:42:04] *** Joins: wuseman (~wuseman@user/wuseman)
[21:43:50] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[21:46:34] *** Joins: dre (~dre@2001:8003:c932:c301:5609:7507:d2a0:8e2b)
[21:50:38] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:51:08] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:51:36] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[21:51:45] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[21:52:14] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:56:02] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 240 seconds)
[21:57:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:58:36] *** Quits: extern (~archer@213.137.71.159) (Quit: WeeChat 3.3)
[22:05:29] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 250 seconds)
[22:05:37] *** sublim20 is now known as Gordon_Ramsay
[22:06:40] *** Gordon_Ramsay is now known as sublim20
[22:11:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:13:31] *** Joins: Libero (~Libero@45.153.183.199)
[22:13:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[22:13:50] *** Quits: Libero (~Libero@45.153.183.199) (Remote host closed the connection)
[22:14:05] *** Joins: Libero (~Libero@45.153.183.199)
[22:14:30] *** Quits: Libero (~Libero@45.153.183.199) (Remote host closed the connection)
[22:14:32] *** Joins: sandb0y (~pirate@user/sandb0y)
[22:16:25] *** Joins: Atque (~Atque@user/atque)
[22:18:54] <Enissay> Any elegant way to strip an optional trailing slash from a path ?
[22:20:21] <Enissay> Or well, I guess I cant do better than `echo "/dada/" | sed 's/\/*$//g'`
[22:20:33] <larryv> where is this path? in some program's output? stored in a variable?
[22:20:51] <Enissay> Passed into script as variable
[22:21:11] *** Quits: kdc_ (~kdc@196.211.197.159) (Quit: Leaving)
[22:21:15] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[22:21:17] <yitz> Enissay: "${path%/}"
[22:22:39] <hsv> but note that it's usually unecessary... multiple /'s will be collapsed into a single /
[22:22:44] <CrtxReavr> Enissay, use $() not ``s.
[22:22:59] <CrtxReavr> Also what hsv said.
[22:23:13] <Enissay> Oh, I thought it wont work because the slash is optional and thus will remove the before last one
[22:23:24] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[22:23:29] <Enissay> yitz: but not using * makes it work fine
[22:23:46] <Enissay> hsv: True, good point
[22:24:15] <larryv> in parameter expansions the patterns are not regex. * doesn't do what you think it does
[22:25:20] <Enissay> ^_^""
[22:26:10] <hsv> # var=/path/; echo "${var%/}"
[22:26:10] <shbot> hsv: /path
[22:26:26] <hsv> # ls /
[22:26:27] <shbot> hsv: bin  dev  etc  init  lib  lib64  proc  root  tmp  usr  var
[22:26:29] <hsv> # ls //////
[22:26:30] <shbot> hsv: bin  dev  etc  init  lib  lib64  proc  root  tmp  usr  var
[22:28:02] <earnest> hsv: leading // may have special meaning
[22:29:27] *** Quits: arinov (~arinov@31.142.60.102) (Read error: Connection reset by peer)
[22:30:02] <hsv> alright then...
[22:30:11] <hsv> # ls /etc
[22:30:12] <shbot> hsv: group    ld.so.cache  nsswitch.conf  profile  terminfo
[22:30:12] <shbot> hsv: inputrc  ld.so.conf   passwd         termcap
[22:30:17] <hsv> # ls /etc///
[22:30:18] <shbot> hsv: group    ld.so.cache  nsswitch.conf  profile  terminfo
[22:30:19] <shbot> hsv: inputrc  ld.so.conf   passwd         termcap
[22:31:46] <hsv> # ls /etc/terminfo/d
[22:31:47] <shbot> hsv: dumb
[22:31:52] <hsv> # ls /etc/terminfo///d
[22:31:53] <shbot> hsv: dumb
[22:34:02] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 260 seconds)
[22:35:30] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[22:35:39] <olspookishmagus> is there a list about filesystem inconsistencies?
[22:35:49] <olspookishmagus> for example between ext3/ext4 and NTFS
[22:36:11] <olspookishmagus> and more specifically, in NTFS you can't have a directory with a '.' as last character
[22:37:05] *** Joins: akoana (~ah@user/akoana)
[22:37:22] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[22:39:54] *** Joins: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[22:40:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[22:41:41] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[22:43:21] <llua> !os
[22:43:21] <greybot> Take it to your OS channel. Your issue is specific to your Operating System or Distribution.
[22:43:49] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[22:44:20] *** Joins: shad (~shad@user/shad)
[22:44:26] <tirnanog> there are no constraints for filesystems that are native to unix, as it were, except that pathname components may not contain the NUL character, nor the slash.
[22:44:45] <tirnanog> as for NTFS, maybe? but yeah, !os seems applicable in that case.
[22:45:40] <olspookishmagus> llua: is handling multiple filesystems (such as: NTFS, NFS, ext3/ext4, btrfs, hammerfs, ...) specific to some specific OS or distribution?
[22:45:46] <llua> yes
[22:45:56] <olspookishmagus> interesting
[22:46:02] <olspookishmagus> so NTFS is off-topic in #bash?
[22:46:19] <llua> when unrelated to how bash work, yes.
[22:46:20] <tirnanog> given that it has nothing to do with bash, you probably won't find many takers here.
[22:46:39] <tirnanog> at least the posix constraints are easily described.
[22:46:42] <olspookishmagus> it is a filesystem issue indeed, but ok point taken, sorry for the noise
[22:47:38] <tirnanog> here, in case you're wondering: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html
[22:49:04] *** Joins: BSaboia (~bsaboia@177.37.198.11)
[22:49:31] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 245 seconds)
[22:49:32] <tirnanog> not only that, but NTFS limitations can arise not necessarily on account of the filesystem itself, but on account of the shell that's implementd by windows. again, not something that's likely to be a hot topic here.
[22:50:22] *** Joins: AsenMx (~AsenMx@user/asenmx)
[22:50:55] <olspookishmagus> what would be the most POSIX friendly format to use in BASH as an array of variables?
[22:51:18] <olspookishmagus> \t for field delimiter \0 for record (line) delimiter?
[22:51:40] <earnest> no
[22:51:48] <tirnanog> hmm? strings can't contain $'\0' in bash.
[22:51:51] <phy1729> If you're using bash, why do you care about POSIX at all?
[22:51:55] <earnest> The answer is no
[22:52:04] <tirnanog> I don't understand the thrust of the question.
[22:52:16] <earnest> tirnanog: array='this is what they want'
[22:53:10] <olspookishmagus> I want to able to process a list of directory names and on which storage disk they should be
[22:53:11] <tirnanog> array='...' - now I'm more confused.
[22:53:18] <olspookishmagus> I doing some cleanup to my NAS
[22:53:44] <llua> so just use bash with its actual arrays
[22:53:59] <olspookishmagus> the bash script will have to do a lookup
[22:54:14] <olspookishmagus> how would that file be constructed?
[22:54:25] <olspookishmagus> should I hardcode the values in the script?
[22:54:33] <tirnanog> an associative array?
[22:54:33] <earnest> Seems fine
[22:55:51] <tirnanog> if you're talking about populating such from records that are defined in a file (are you?), then using NUL to separate key value pairs is permissible in this context.
[22:56:43] <Enissay> I am confused why no match here ? `echo " main_db_path: db/db.sqlite" | sed -nE "s#^(\s*main_db_path:\s*).*#\1xxx#"`
[22:56:51] <tirnanog> or, you could just simply define the associative array in the first place.
[22:56:51] <olspookishmagus> sqlite eh?
[22:56:57] <olspookishmagus> now that's dirty talkin'
[22:57:14] <tirnanog> Enissay: \s is defined neither by BRE, nor ERE.
[22:57:22] <tirnanog> as such, it won't work in sed.
[22:57:38] <Enissay> Meh ? not my doing, just trying to update some config files xD
[22:57:46] <Enissay> tirnanog: Aha, I see
[22:57:56] <tirnanog> [[:space:]]
[22:58:18] <tirnanog> and https://man.archlinux.org/man/regex.7.en, for that matter.
[22:58:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:58:44] <Enissay> Still not working... Also, I used \s in another sed path and it seems to work fine
[22:59:31] <Enissay> !echo " main_db_path: db/db.sqlite" | sed -nE "s#^([[:space:]]*main_db_path:[[:space:]]*).*#\1xxx#"
[22:59:51] <olspookishmagus> <offtopic> I have huge respect in the wealth of knowledge in Archlinux's wiki </offtopic>
[23:00:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:00:24] <Enissay> Yes, I find gems whenever google sends me there
[23:00:32] <tirnanog> Enissay: what do you expect to happen, given that -n was specified?
[23:00:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:01:08] <Enissay> tirnanog: well, it is meant to show the modified line
[23:01:20] <llua> you kinda told it not to
[23:01:26] <tirnanog> ok. and do you know what -n does?
[23:01:39] <Enissay> hmmm, I used the same flag elsewhere and once more it works
[23:01:49] <tirnanog> okey doke.
[23:01:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:02:07] *** Joins: chuck_ (~chuck@181.191.143.126)
[23:02:18] <Enissay> `-n, --quiet, --silent`
[23:02:26] <Enissay> Hmm, let me revisit this
[23:02:31] <tirnanog> we don't need it to be read out here. rather, that you read it.
[23:02:58] <llua> hint: there is a flag that you can give to the s command
[23:03:24] <tirnanog> suffice to say, that if you suppress the automatic printing of the pattern space, it then falls upon you to determine where and when the pattern space should be printed (with p).
[23:05:42] *** Joins: particleflux_ (~particlef@ircb.hackthe.codes)
[23:06:47] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (Ping timeout: 265 seconds)
[23:07:56] *** particleflux_ is now known as particleflux
[23:08:16] *** Joins: emanuele6 (~emanuele6@net-37-182-19-105.cust.vodafonedsl.it)
[23:08:30] *** Quits: emanuele6 (~emanuele6@net-37-182-19-105.cust.vodafonedsl.it) (Changing host)
[23:08:30] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[23:08:37] <olspookishmagus> I am also worried about how bash will handle directories containing ampersand
[23:08:51] <olspookishmagus> hopefully double quote that variable
[23:09:43] <Enissay> tirnanog: indeed, I missed I have removed the p flag
[23:10:41] <tirnanog> olspookishmagus: it will handle them just fine. you're overthinking this.
[23:10:51] <olspookishmagus> that's classic me
[23:11:07] <tirnanog> there is nothing that a pathname component can contain that bash cannot 'handle'.
[23:12:06] <olspookishmagus> no fine print in that?
[23:12:16] <tirnanog> nope.
[23:12:26] <tirnanog> other than the usual. quote your expansions and so on and so forth.
[23:13:32] <tirnanog> not conveying pathnames to programs in such a way that they might be confused for option arguments is another good one.
[23:13:42] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:13:45] *** Joins: peve (~peve@ucb-np2-96.colorado.edu)
[23:13:50] <tirnanog> # touch --not-an-option
[23:13:51] <shbot> tirnanog: touch: unrecognized option '--not-an-option'
[23:13:51] <shbot> tirnanog: Try 'touch --help' for more information.
[23:14:18] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[23:15:11] <tirnanog> touch -- ... would work as was intended there.
[23:16:44] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[23:17:09] *** Quits: roadie (~user@2a02:8108:ec0:1427:c0fc:6d68:c426:f84b) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[23:19:17] *** Quits: zostj (~rue@1-162-44-73.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:20:11] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 268 seconds)
[23:20:23] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:21:42] *** Quits: BSaboia (~bsaboia@177.37.198.11) (Quit: This computer has gone to sleep)
[23:26:51] <olspookishmagus> $ grep -i -E '.*pattern.*' ~/Desktop/file1 ~/Desktop/file2
[23:27:01] <olspookishmagus> /home/olspookishmagus/Desktop/file2:linewithmatch
[23:27:08] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Quit: exiting 3.3)
[23:27:11] <olspookishmagus> why is this like I've supplied -H option?
[23:27:14] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[23:27:46] <larryv> https://www.gnu.org/software/grep/manual/html_node/Output-Line-Prefix-Control.html
[23:27:50] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[23:28:01] <olspookishmagus> is it because I supplied multiple files right
[23:28:03] <larryv> -H
[23:28:03] <larryv> --with-filename
[23:28:03] <larryv>     Print the file name for each match. This is the default when there is more than one file to search.
[23:28:03] <tirnanog> because there is more than one pathname specified.
[23:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:28:35] <olspookishmagus> thanks tirnanog what I suspected
[23:29:05] *** Joins: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net)
[23:29:14] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[23:30:04] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Quit: okbye)
[23:30:08] <larryv> if your pattern is actually bookended with .*
[23:30:12] <larryv> well. it doesn't have to be
[23:30:41] *** Quits: dj_ (~dj@162.223.44.49) (Quit: Leaving)
[23:34:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:35:15] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 264 seconds)
[23:35:22] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[23:35:28] *** Joins: extern (~archer@213.137.71.159)
[23:35:39] *** Joins: rgrinberg (~textual@201.198.177.243)
[23:35:42] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[23:36:31] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[23:37:04] *** Quits: extern (~archer@213.137.71.159) (Client Quit)
[23:37:51] *** Joins: Sqaure (~a@user/square)
[23:38:14] <Sqaure> Are there some alternative to bash that does full lambda calculus?
[23:39:24] <olspookishmagus> I heard Microsoft Excel has a lambda calculus nowadays xD
[23:40:07] <olspookishmagus> you reminded me a professor of mine who had his e-mail adress obscurified as a lambda calculus expression - thank you
[23:41:00] <earnest> Sqaure: 'full'?
[23:42:05] <Sqaure> earnest, well I guess simply typed, with casting possibilites, is fine.
[23:42:19] <earnest> Then no
[23:42:52] <Sqaure> earnest, anything coming close?
[23:42:53] <earnest> I think at one point 'shok' tried to do this, but that is very dead
[23:43:35] <earnest> Sqaure: No, the domain doesn't really lend itself to it.  You end up with not a shell but a repl, of which plenty exist
[23:44:50] <earnest> (Or else you end up with powershell-like designs such as nushell and co.  They're not really shells, just shoddy repls with shell-like DSLs of which languages tend to be better at)
[23:45:04] <Sqaure> earnest, im not sure how you define domain? And why it doesnt? I often feel, damn if i had a proper language id do this in 3 minutes
[23:45:17] <earnest> Then use a proper language
[23:45:39] <Sqaure> I guess I should start.
[23:46:24] <earnest> domain is command languages, doesn't because type system would have to somehow have knowledge of arbitrary programs, hence nushell/powershell where 'cat' becomes a library routine
[23:47:07] <earnest> The shell is often abused as a programming language where a real language would be better, so do encourage this
[23:50:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[23:52:26] *** Quits: causa-sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:53:21] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:54:13] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[23:58:22] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[23:59:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
