[00:00:20] <mikrosis> lol
[00:00:37] <mikrosis> now tell me what redux does? state management? so managing the react-UI state?
[00:00:44] <Slade> return new Date(Number((BigInt("1514764800000") + (BigInt(id) >> 23n))))    <-- no identifiers alowed directly after numeric literal
[00:00:51] <Slade> react native..
[00:01:23] <bomb> yeah mikrosis state management
[00:01:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:01:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:01:30] *** Joins: wroathe (~wroathe@user/wroathe)
[00:01:40] *** Joins: paule32 (~paule32@user/paule32)
[00:01:45] <bomb> basically takes care of the data here and there
[00:01:56] <bomb> but I don't think you'd need that. what kind of app you want to make?
[00:02:18] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:03:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[00:04:37] <Slade> is that a difference in runtimes?
[00:04:42] <Slade> javascript runtimes
[00:05:22] <ljharb> Slade: yes, it probably means the runtime you're using doesn't have bigints
[00:05:35] <ljharb> Slade: Date takes Numbers tho, so it makes no sense to use bigints there
[00:05:49] <Slade> ljharb, i have a bigint i need to turn it to a date
[00:06:06] <ljharb> Slade: then coerce it directly with `Number` and *then* do your math with it
[00:06:48] <Slade> actually console.log(23n) fails
[00:06:56] <Slade> BigInt(23) maybe?
[00:06:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[00:07:15] <ljharb> Slade: where are you getting the error from
[00:07:21] <ljharb> Slade: BigInt shouldn't exist if 23n doesn't work
[00:07:39] <Slade> indeed. cant find bigint
[00:08:07] <ljharb> ok so then you can't use either, which means you can't have a bigint in the first place
[00:08:18] <Slade> weird that its supported on ios but not android
[00:09:09] <ljharb> Slade: are you using v8 or hermes
[00:09:18] <ljharb> Slade: sometimes people use different ones on different platforms
[00:09:26] <ljharb> and hermes lacks support for a ton of things
[00:09:55] <Slade> ljharb, hmm good question. i'm using expo.
[00:10:37] <Slade> there a useful way to dump env info in javascript?
[00:10:58] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[00:11:12] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:11:36] <mikrosis> bomb: user can do an item selection (like a cart, but it isn't a shop, even simpler than that) and then confirm. and those selections should be listed somewhere
[00:11:47] <mikrosis> I guess one REST API endpoint for getting a list of selectable stuff and one for sending the selection?
[00:12:07] <bomb> mikrosis: yeah save yourself some time and just use vanilla js or jquery
[00:12:22] <Slade> ljharb, any preference on which one i should use looks like i can switch?  https://docs.expo.dev/guides/using-hermes/
[00:12:36] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Quit: Haxxa flies away.)
[00:12:43] <bomb> jquery mobile is an option, but you can't expect platform-specific styling with jquery mobile
[00:12:48] <bomb> it lets you ship, however.
[00:12:59] <mikrosis> bomb: yes! it should be very simple, and load very quickly.
[00:14:12] <ljharb> i think jquery mobile is deprecated
[00:14:23] <ljharb> save yourself some time and use react.
[00:14:32] <ljharb> Slade: i'd suggest using v8 if you want new features like bigint
[00:14:43] <ljharb> Slade: but you also shouldn't be using bigint with Dates
[00:14:51] <Slade> ljharb, JSC and hermes are the choices.
[00:15:02] <Slade> ljharb, i have a bigint, i'm turning into a non-bigint really
[00:15:24] <Slade> well.. i have a string that is a bigint, which i turn to a bigint, and manipulate, and then make a date
[00:15:58] <ljharb> Slade: then you have a string with has an integer in it
[00:16:03] <ljharb> it's not a "bigint" unless it's typeof bigint
[00:16:14] <Slade> correct. i only turn it to bigint to manipulate it
[00:16:46] <ljharb> Slade: right but why? 1514764800000 is a safe integer. there's zero point in using BigInt for that.
[00:16:56] <ljharb> Slade: iow, 1514764800000 is not a big int, it's a small int
[00:17:02] <ljharb> just use normal numbers
[00:17:11] <Slade> 'id' is a bigint
[00:17:33] <Slade> 'id' loses lots of precision when treated like a number
[00:17:51] <ljharb> Slade: IDs should never be numbers, only ever strings, and never used mathematically
[00:18:00] <ljharb> why are you doing math on an ID?
[00:18:14] <ljharb> (rather, IDs should be opaque identifiers - thus strings - and never operated on)
[00:18:37] *** Joins: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net)
[00:18:37] *** Quits: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net) (Changing host)
[00:18:37] *** Joins: wroathe (~wroathe@user/wroathe)
[00:18:48] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[00:19:11] <Slade> ljharb, its similar to snowflake.  https://discord.com/developers/docs/reference#snowflakes
[00:19:29] <ljharb> Slade: and snowflake IDs are supposed to be opaque identifiers once created
[00:19:37] <ljharb> Slade: so why are you doing math with them?
[00:19:41] *** Joins: thojanssens (~thojansse@ptr-178-51-171-193.dyn.mobistar.be)
[00:20:02] <ljharb> are you trying to extract parts out of it?
[00:20:50] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:21:11] <Slade> ljharb, well most important thing is ordering, but really to show timestamp.. which is basically what discord does with its snowflakes as well
[00:21:53] <ljharb> Slade: ok, so you should be using typed arrays to extract the last 12 bits, and then converting that to a number. and you should be using a library that does it, not rolling it yourself.
[00:21:58] *** Quits: thojanssens__ (~thojansse@ptr-178-51-171-193.dyn.mobistar.be) (Ping timeout: 252 seconds)
[00:22:36] <ljharb> Slade: given that 12 bits can only produce a number of length 4, can't you `.slice(-4)` and then convert to number directly?
[00:22:53] <ljharb> (and then do bitwise stuff on that 4 digit number to extract the last 12 bits)
[00:23:34] *** Quits: silly (~silly@user/silly) (Ping timeout: 252 seconds)
[00:23:45] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[00:23:54] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:01] <Slade> ljharb, yes. sadly simple bitmath seems to require specialized libs and such in javascript..  actually this hasnt been a problem except for the specific case of  Android devices inside react native
[00:24:27] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:25:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Ping timeout: 256 seconds)
[00:25:42] <ljharb> Slade: it would be silly to be forced out of using hermes just because you wrote a bigint bitwise oneliner instead of a number bitwise oneliner
[00:25:57] <Slade> ljharb, i'm not using hermes, i'm using jsc actually
[00:26:08] <Slade> hermes looks like its opt in
[00:27:12] <ljharb> ok
[00:27:18] <ljharb> then i don't know why the jsc version wouldn't be the same
[00:27:21] <ljharb> but, same feedback
[00:27:22] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[00:27:33] <ljharb> bigints are for big ints, 1514764800000 isn't big
[00:27:55] <Slade> yea. i think i need to get the to the heart of which engine i'm using first and foremost
[00:29:19] <ljharb> and fix your linter settings so you can't write things that can't be transpiled to your target engines
[00:29:27] <Slade> indeed
[00:29:36] <Slade> now to figure out my targets
[00:30:30] <Slade> this seems like the most critical thing, really
[00:31:21] *** Quits: thojanssens (~thojansse@ptr-178-51-171-193.dyn.mobistar.be) (Ping timeout: 245 seconds)
[00:32:13] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:33:13] *** Quits: pmercado (~pmercado@186.107.62.14) (Quit: Konversation terminated!)
[00:33:27] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:33:32] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[00:33:40] *** hanaan is now known as Naan
[00:34:12] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:39:34] *** Quits: rundown (~eb0t@90.213.43.87) (Ping timeout: 252 seconds)
[00:40:23] <banana_> \
[00:41:25] *** Joins: irthewinner (~null@bzq-79-178-176-117.red.bezeqint.net)
[00:42:09] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) ()
[00:44:02] <Slade> ljharb, i appreciate the troubleshooting
[00:44:25] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[00:47:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:49:18] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 265 seconds)
[00:51:05] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 264 seconds)
[00:51:13] *** Joins: WishBoy (~WishBoy@user/wishboy)
[00:51:42] *** Joins: pluri (~pluri@user/pluri)
[00:52:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:53:11] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[00:58:29] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 246 seconds)
[01:01:40] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:01:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:02:26] *** Joins: silly (~silly@user/silly)
[01:03:48] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[01:06:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:12:31] *** Joins: tga (~tga@p54a754f5.dip0.t-ipconnect.de)
[01:12:31] *** Quits: tga (~tga@p54a754f5.dip0.t-ipconnect.de) (Changing host)
[01:12:31] *** Joins: tga (~tga@user/tga)
[01:12:58] <tga> greetings. is there a go to library for logging? something that would allow me to easily toggle logging levels visible in the console
[01:13:53] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 264 seconds)
[01:14:13] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 252 seconds)
[01:14:16] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[01:15:14] <Alexendoo> tga: For node?
[01:16:56] *** Quits: bomb (~bomb@user/bomb) (Quit: o/)
[01:17:02] <Slade> ljharb, now i gotta look at what a typed array is :)
[01:20:13] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[01:20:33] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[01:20:48] <prussian> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays
[01:21:18] <prussian> You have some buffer that you use some other slathering on top to access
[01:21:58] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:15] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:22:45] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[01:22:56] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:23:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:23:07] <ljharb> Slade: i mean in your case you don't even need that
[01:23:25] <Slade> ljharb, still sounds like usefulness
[01:24:23] <ljharb> Slade: `+snowflake.slice(-4) & 0xFFF`
[01:24:31] <ljharb> Slade: that should be the last 12 bits, i think?
[01:24:52] <Slade> indeed
[01:26:20] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22) (Quit: Textual IRC Client: www.textualapp.com)
[01:27:03] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:27:55] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-067.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[01:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:33:58] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Ping timeout: 252 seconds)
[01:35:37] <fweht> any good js-library to perform fft or dct in 2 dimensions?
[01:35:56] <tga> Alexendoo: logging for frontend, not node
[01:36:16] <tga> vue in particular now, but it would be good to have something generic
[01:38:03] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[01:40:03] *** Joins: wroathe (~wroathe@user/wroathe)
[01:41:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:41:48] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[01:43:49] <Alexendoo> tga: You can toggle the levels from the built in console.debug/info/log/warn/error though I think what levels browsers consider toggleable vary
[01:44:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[01:55:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:55:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:55:14] *** Joins: wroathe (~wroathe@user/wroathe)
[02:00:18] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:04:16] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 245 seconds)
[02:05:44] *** Joins: Haxxa (~Haxxa@122.199.46.62)
[02:05:52] <ljharb> fweht: what does that even mean
[02:06:35] <Slade> temporal has no real polyfill yet eh
[02:07:02] <ljharb> Slade: nope
[02:07:07] <ljharb> it's still changing a lot
[02:07:18] *** Joins: rundown (~eb0t@2a02:c7d:f20e:ed00:216:44ff:fe6a:c888)
[02:07:35] <Slade> oh, i thought it was a bit higher on the maturity chain
[02:09:04] <ljharb> Slade: it got stage 3 but it really shouldn't have it yet; consider it as still stage 2
[02:10:11] *** Joins: gamara (~gamara@66-203-186-178.ded.execulink.com)
[02:10:21] *** Quits: Haxxa (~Haxxa@122.199.46.62) (Read error: Connection reset by peer)
[02:10:39] <Slade> oh i see
[02:11:03] *** Joins: zebrag (~chris@user/zebrag)
[02:11:11] *** Quits: tga (~tga@user/tga) (Ping timeout: 264 seconds)
[02:12:12] <gamara> Hey I am getting an error in my code and I dont see what is wrong at all, https://pastebin.com/kqhGGXkg I think it might because of this weird call back thing I am doing
[02:12:48] <gamara> on line 106
[02:13:15] <gamara> its calling the object state.iterateOverState, then at getIterator it says this is undefined
[02:14:12] <gamara> nvm i see the error I think
[02:14:13] <gamara> lol
[02:14:43] <gamara> nvm same error
[02:14:57] <gamara> line 44 I was doing an bitshift assignment
[02:15:02] <gamara> but i removed it and its still crashing
[02:15:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:17:51] <gamara> i think im having some kind of weird scope issue
[02:17:59] <spynxic> What is this importing, exporting, public and privating?
[02:18:16] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[02:19:04] <gamara> because its snippets of code from a project I am working on
[02:19:12] *** Quits: tex (~super@user/dix) (Ping timeout: 265 seconds)
[02:19:36] <gamara> everything is fine until I hit 93
[02:19:37] *** Joins: ferdna (~ferdna@user/ferdna)
[02:19:40] <spynxic> I mean it looks like Python and Java
[02:19:42] <gamara> Im using typescript
[02:20:08] <gamara> sorry I should have specified
[02:20:13] <ljharb> everything is `public`, that's redundant
[02:20:22] *** Parts: drew (~drew@user/drew) ()
[02:20:23] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22)
[02:20:39] <gamara> making things private is really for my own benefit
[02:20:43] <spynxic> Not to drive you away but there is a typescript channel too
[02:21:00] <gamara> since it helps me define interfaces
[02:21:05] <gamara> if I decide to abstract things
[02:21:17] <ljharb> private stuff is great, but JS has that built in
[02:21:24] <ljharb> i'm saying you don't need the keyword `public`, that's redundant
[02:22:00] <gamara> You are definitely right
[02:22:01] <ljharb> gamara: at any rate it's very strange why you're using all this statefulness and not-actually-how-JS-iterators-work iterator pattern
[02:22:20] <ljharb> QuadrantIterator shouldn't be a class, it should be a generator function
[02:22:33] <gamara> that would make sense
[02:22:49] <gamara> I guess I could make it a generator
[02:22:53] *** Quits: irthewinner (~null@bzq-79-178-176-117.red.bezeqint.net) (Quit: Leaving)
[02:23:00] <gamara> maybe that would fix my issue
[02:23:28] <gamara> I need it to hold my state though
[02:23:33] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[02:23:40] <gamara> I guess you can have generators in classes
[02:24:01] <gamara> my code is bad I know lol
[02:24:14] <gamara> but you dont get any better not writing code
[02:25:16] <gamara> this is more of a scope issue though I think
[02:25:32] <gamara> since I dont know why its seeing this as undefined when the object exists
[02:26:54] *** Joins: Haxxa (~Haxxa@122.199.46.62)
[02:29:00] <spynxic> Is typescript used to gain anything in particular
[02:29:49] <gamara> interfaces, typesafety
[02:30:34] <ljharb> gamara: generators do hold state, in a closure
[02:30:43] <gamara> so use a closure ok
[02:30:44] <ljharb> TS doesn't give type safety
[02:30:57] <gamara> well it prevents you from passing invalid states
[02:30:59] <ljharb> gamara: no i'm saying that generator functions are already a closure, they keep state across iterations
[02:31:05] <gamara> oh
[02:31:07] <ljharb> gamara: only in your own typechecked code, and not at runtime
[02:31:07] <gamara> interesting
[02:31:12] <ljharb> it's not real safety if it's not at runtime.
[02:31:19] <gamara> yeah I know
[02:31:22] <gamara> it compiles to javascript
[02:31:26] <gamara> transpiles
[02:31:45] <spynxic> Is interpreted, no?
[02:32:02] <spynxic> To c then compiled?
[02:32:22] <gamara> what
[02:32:30] *** Quits: pizdets_ (~pizdets@183.182.114.178) (Ping timeout: 250 seconds)
[02:32:30] <gamara> JavaScript is interpreted
[02:32:36] <spynxic> Right
[02:33:09] <spynxic> So typescript to javascript is compilation?
[02:33:13] <ljharb> technically JS isn't interpreted
[02:33:19] <ljharb> technically languages aren't, only implementations do
[02:33:31] <gamara> its transpilation
[02:33:35] <ljharb> however colloquially, JS is an interpreted language, even if it's compiled; and C++ is a compiled language, even if it's interpreted
[02:33:44] <gamara> everything we write in typescript is stripped down
[02:33:46] <ljharb> and yes, transpilation is a subset of compilation, and that's what TS is doing
[02:33:49] *** Joins: pizdets (~pizdets@183.182.110.175)
[02:34:00] <ljharb> but TS is not a superset of JS, it's a distinct language.
[02:34:51] *** slaughter is now known as schwurbler
[02:34:52] <spynxic> Does typescript allow numbers to be loaded into memory in the way c allows?
[02:35:29] *** Joins: bobdobbs (~user@14.137.23.74)
[02:35:46] <ljharb> spynxic: there's no such thing as memory
[02:35:47] <gamara> anyone able to see why this is undefined in my code
[02:35:51] *** schwurbler is now known as slaughter
[02:36:02] <ljharb> spynxic: a) because TS isn't an implementation, and neither is C; and b) because the JS language (and the TS language) don't have that as a concept
[02:36:06] <gamara> on line 83
[02:36:07] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[02:36:10] <ljharb> gamara: make a jsfiddle or codesandbox and i'll take a look
[02:36:13] <ljharb> gamara: or the TS playground
[02:37:17] <spynxic> So typescript is syntactic sugar for standard js code
[02:37:45] *** Joins: drew (~drew@user/drew)
[02:38:18] <spynxic> It must help with debugging then
[02:42:36] *** Quits: rundown (~eb0t@2a02:c7d:f20e:ed00:216:44ff:fe6a:c888) (Ping timeout: 245 seconds)
[02:44:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[02:45:19] <prussian> It's literally just types, erased at compile time once the type system says everything is gucci
[02:45:57] <prussian> Oh, and it did or does things like setup closures with weakmaps for private variables and what not.
[02:46:11] <spynxic> Are the types predefined
[02:46:39] <prussian> https://www.typescriptlang.org/docs/handbook/2/everyday-types.html
[02:46:49] <prussian> Typescript has some pretty nutty typesystem
[02:46:56] <prussian> Really powerful pattern stuff too.
[02:46:58] <prussian> Etc...
[02:47:24] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:6cb2:5adc:e217:1b34) (Quit: Leaving)
[02:48:29] <ljharb> spynxic: imo all it does is trick you into thinking you need fewer tests and runtime checks
[02:48:52] <ljharb> spynxic: it can definitely add convenience - you can get warned of some problems very quickly - but not outweighing the downsides
[02:49:40] <prussian> I use typescript for two reasons. IDEisms, documenting. It is just better jsdoc imo
[02:49:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:49:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:49:43] *** Joins: wroathe (~wroathe@user/wroathe)
[02:50:04] <prussian> I'm not one to really hold it up to some kind of stronger correctness
[02:50:06] <prussian> As noted.
[02:50:20] <prussian> You can still shoot your foot off with it like any other thing.
[02:52:30] <ljharb> it's better than jsdoc because jsdoc is useless
[02:52:36] <ljharb> but the best docs are hand-written docs
[02:52:47] <ljharb> and if your API is too complicated for that to be easy, then your API sucks and needs to be made simpler
[02:53:09] <prussian> I guess.
[02:53:15] <prussian> Dry bro
[02:53:21] <prussian> Write once. Etc.
[02:53:31] <prussian> I prefer my docs being in code anyhow.
[02:53:50] <spynxic> Literate programming
[02:53:50] <prussian> If I can have some tool crap out some html for everyone else.
[02:53:52] <prussian> Win win
[02:54:07] <prussian> L
[02:54:13] <prussian> Something programming anyhow.
[02:54:16] *** Quits: Haxxa (~Haxxa@122.199.46.62) (Ping timeout: 252 seconds)
[02:54:28] <prussian> I definitely recommend typescript though.
[02:54:37] <prussian> But like all things, do you etc.
[02:55:59] <KDev> After I go through the "main concepts" on the react documentation, what is the next step I should take? My goal is to land a react dev position one day
[02:56:10] <KDev> https://reactjs.org/docs/hello-world.html
[02:56:12] <prussian> Also everyone knows the cool kids use Rescript. Formerly ReasonML, Formerly Bucklescript, formerly....
[02:56:19] <prussian> Etc.
[02:56:24] <KDev> I'm up to part 10
[02:56:28] <prussian> KDev: make a site
[02:56:31] <prussian> Idk
[02:56:44] <ljharb> prussian: yeah but code and docs are different :-) they should be written separately
[02:56:46] <prussian> Depends how you learn. If I don't use it, I lose it.
[02:56:54] <ljharb> docs built into code isn't docs. but not everything needs separate docs.
[02:57:08] <ljharb> and self-documenting code is always great
[02:57:41] <prussian> I guess.
[02:57:47] <prussian> You aren't wrong
[02:57:50] <prussian> But I am lazy
[02:58:16] <prussian> And much like my use of nixos. Just reading the derivations and modules were enough for me to get on it.
[02:58:25] <prussian> Documentation, peh
[02:58:32] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[02:58:37] <prussian> (Mostly sarcasm)
[02:59:10] <KDev> So maybe I can do more projects but use react this time, and then after the knowledge solidifies, move onto the advanced section? Altho, a lot of it looks like it just explains under the hood stuff
[03:07:02] *** Joins: rundown (~eb0t@90.197.81.245)
[03:07:02] <spynxic> KDev: read the details of the place you'd apply to
[03:08:10] <spynxic> Not necessarily to cookie cutter yourself but to get a general idea of where their heads are
[03:09:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[03:09:50] <KDev> no specific place in mind, just planning to move in with a friend in CT, hartford. So i guess i'll browse around there. Might need to work part time until employers bite
[03:10:53] <gamara> Hey I am trying to create an interator over a bitstring and persist a state, also I have no idea how to specify a function as a generator in interface https://www.typescriptlang.org/play?#code/FASwdgLgpgTgZgQwMZQAQEkDiCC2UDKEC0qA3sKqgM5QSHFQBcqAFFUdM-...
[03:10:53] <gamara> anyone able to help me fix this code?
[03:11:59] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[03:14:12] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:14:59] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:22:45] <prussian> I think your link truncated there mate.
[03:22:50] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:23:07] <prussian> KDev: cigna is all about that Angular...
[03:23:17] <prussian> Not even sure if angular v2+
[03:23:27] <prussian> And who else is near hartford...
[03:23:40] <prussian> All the consult companies seem to scream angular
[03:23:49] <prussian> React in Connecticut?
[03:23:53] <prussian> Hmm
[03:25:07] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[03:28:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[03:28:26] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[03:30:18] <gamara> ok sorry
[03:30:38] <gamara> https://www.typescriptlang.org/play?#code/FASwdgLgpgTgZgQwMZQAQEkDiCC2UDKEC0qA3sKqgM5QSHFQBcqAFFUdM-dFQJSoBeAHyoAbgHsQAEwDcFVAHNa3Jq37DUYAK44ARrFQAfVCqpzK6aDAbMW6kZdjFxMADwBhcZCiQhM1AD0ARAAFiBUqOGKIKLgCqh4qAhgkd7wyGiwMC7AAL7AwBAAngAOaACyCDAA1oKaOvowcgWoxWWoAIpayRA6KnUslTVG1BAwcbwA2gC6za2laKZ12noGxl09fRxQ5m1ont6QdUO1xuzjYArNwEgANghUEQAqIEhPyE-iBNuRO
[03:30:38] <gamara> CW3UDwkAiWFw3wYZECASUEAgcSSKXAVkQKFQWRcqBCsCg8hK41EEPYNnqqyaUIwqAA7j1WuJUGUYFRwhBWmEIkSSAg4FZFD4nHCvLj8YSEKIoFIVMwVo05vStLpbq9UEgvOctEgIC42NspQ0DAJUAAGfjkSiUULhAB0NDo221DF45lQ+Vx8sVSGoyjtHNU0tgvGYEmkZHk5rZ1tF4v6Bp9TrDVp9dVj8hdlBKbqVMJUdl1pJDZtQMFoWhgKQtVGt2ydqblCqVACpHNZoAB5MUwbMBjBWZxuE4iU1mgEsnBVWoGgDMqAAZKyE1XUKG5xXE0I1waAExx1BFEBQW5SBJj6t5IA
[03:31:01] <gamara> Hey I am trying to create an interator over a bitstring and persist a state, also I have no idea how to specify a function as a generator in interface
[03:31:07] <gamara> anyone able to help me fix this code?
[03:33:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Quit: Client closed)
[03:35:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:38:24] <gamara> https://www.typescriptlang.org/play?#code/FASwdgLgpgTgZgQwMZQAQEkDiCC2UDKEC0qA3sKqgM5QSHFQBcqAFFUdM2AK44BGsAJSoAvAD5UANwD2IACYBuCqgDmtep1bDxqHv1hLK6aDAbMW2icdjFpMADwBhaZCiQxC1AHovEABYgVKiBqiCS4CqoeKgIYMGu8MhosDB2wAC+wMAQAJ4ADmgAsggwANaiurwCMEpZqLkFqACK3LEQvBpoIqzFZagAPtQQMBGCANoAurX1+WidQd161QPNrZAdHFCGDWjOrpAVveWD7CNgKrXASAA2CFRBACogSA-ID9IEm8E4ed
[03:38:25] <gamara> dQeJAglhcJ8GGRvF41BAIBEYnFwCZEChUCk7Kg-LAoMo8iNJGD2GZKvoahCMKgAO5terSVAFGBUQIQeoBIIEkgIOAmVRuGwwlzY3H4hCSKByTpcKoGOq07h8a7PVBIFynbhICB2NibCXEioABmE5EolH8gQAdDQ6JtNQxBIZUJlsbL5UhqOorWymETqoJmDJ5GRlMaWebhaLOhUPXag2aPRHNnaHZQ8k6FVDOhZtctDUaYLRuDA4iaqOb48pEzK5QrUAAqMb4HL8aTXU0gEy2GATDMYNvqhxHCTZyh-Jk4ErlboAZlQADJmTH46hA3Pi7GxGvugAmKOoHIgKDXORRMcJjJZYBw
[03:38:25] <gamara> bhgNUgFyoORQJAbvjgFj3pDMWI5A3KXPtAusN9UDXCR9VNdVCDOFQWA3W1T2HKIoD8CowCgclUCeF43g+dMAA4AHYJxwgBGWDzw1eCQD1TwQHsABOBQQAAakYwRsyVMAqCbKBTWuaQoLfJ8XzwPw6wbPgmxbHs7E7QRZIyIA
[03:39:07] <WishBoy> short URL?
[03:39:12] <WishBoy> lol
[03:39:23] <jaawerth> you're gonna need a URL shortener - that REPL is one of the ones that doesn't persist anything on the backend so they shove all the data into the url hash
[03:40:41] <gamara> alright sorry
[03:42:06] <gamara> any suggestions lol
[03:44:18] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[03:44:21] <gamara> https://pastebin.com/f35Qe1A7
[03:44:23] <gamara> here is the code
[03:45:17] <jaawerth> I could have sworn one of the nerdier paste sites like ix.io or something could also do shorteningit happens! I could have sworn one of the cli-based paste services I used could also do url-shortening without any fuss but I can't find it anymore lola
[03:51:18] <jaawerth> gamara: here you go https://is.gd/yDtH5k
[03:51:34] <gamara> did you just use a link shortener
[03:51:47] <jaawerth> (not to look at the code.. I can help with iterators, but dont use typescript super often because I find wrestling with the typedefs annoying)
[03:51:49] <jaawerth> I did
[03:52:01] <jaawerth> the benefit of the ts repl is it gives the type linting feedback
[03:54:02] <bkool> so I finally tried to do a vanilla js conversion of a jquery plugin i've have had to use a lot and couldn't find a good replacement for. it was a good learning experience as I hadn't done it before. https://github.com/kbwood/timeentry is the original plugin.
[03:55:04] *** Joins: jazzy (~jaziz@user/jaziz)
[03:55:21] <jaawerth> gamara: one thing that jumps out is that you're now correctly using `*[Symbol.iterator]() { }` in the class that implements IGameState but IGameState still has it named Iterate
[03:55:48] <jaawerth> also, typing aside, is that iterator supposed to be infinite?
[03:55:52] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[03:56:23] <gamara> well the purpose is that this object holds the state object
[03:56:44] <gamara> state number*
[03:56:55] <gamara> and I want to read that state number 2 bits at a time and return it
[03:57:43] <gamara> after 9 calls I want it to reset the state
[03:58:00] <jaawerth> right, so - a generator is a pausable function. when you use yield, it stops the function at that point in its execution and the iterator that returns it when it's first invokes will give that value, then the generator will resume the next time .next() is invoked on the iterator
[03:58:09] <gamara> yeah I get that
[03:58:18] <jaawerth> so you probably need a loop
[03:59:02] <gamara> yeah
[04:00:23] <theskillwithin> on typescriptlang.org/play  if you go to plugins theres a plugin called Link Shortene
[04:00:29] <theskillwithin> r
[04:00:32] <jaawerth> someting like `public *[Symbol.iteartor](): Itierator<Mark> { for (let i = 0; i < 9; i++) { const mark = 3 & this.state; this.state >>>= 2; yield mark; } this.setState(this.savedState); }` or what-have-you
[04:00:45] <jaawerth> I would suggest starting by having it iterate something arbitrary and then work on getting the right output
[04:06:20] <jaawerth> strictly speaking you don't even need to use a generator to make them, I often see if I can get around it when I'm writing modules since I don't want to require people to use the regenerator runtime just to use some little module I made
[04:07:02] <gamara> yeah I had something different
[04:07:10] <gamara> but it was saying this is undefined
[04:07:11] <wez> I like async generators
[04:07:20] <gamara> https://pastebin.com/kqhGGXkg
[04:07:39] <gamara> line 83 is saying this is undefined ;_;
[04:08:14] <jaawerth> !repaste
[04:08:15] <jellobot> jaawerth, Repasted gamara's paste to https://git.io/JKlaV
[04:09:35] *** Joins: z1haze (~z1haze@user/z1haze)
[04:09:38] <gamara> when I debug it says the object exists
[04:09:47] <gamara> and then when I enter it says this is undefined
[04:10:03] <z1haze> can someone please educate me on how to properly sort an array by 2 different values? this is my attempt: https://jsfiddle.net/z1haze/8mv971gh/13/ i think i dont understand how a sort actually iterates over elements
[04:10:17] <z1haze> primary sort is role, secondary sort is rank
[04:10:55] <z1haze> higher the number should come first
[04:11:51] <jaawerth> gamara: `this` is undefiend or `this.iterator` is undefined? per iterator protocol the method is `[Symbol.iterator]`, so if you want a convenience function to return it you'd do something like `values() { return this[Symbol.iterator](); }`
[04:11:53] <jaawerth> (.values() and .entries() are a pretty common convenience aliases for it them - both return iterators, but entries tends to give [key, value] pairs, whereas .values() is just.. values; the one that's an alias for Symbol.iterator is whichever makes the most sense in context)
[04:12:08] <gamara> this is undefined,
[04:12:56] <jaawerth> ahh, then it sounds like the object the object/class hasn't been initialized
[04:13:04] <gamara> but it has
[04:13:48] <gamara> you can see it was
[04:14:00] <gamara> if you look at TicTacToeState
[04:14:06] <gamara> i initialize it in the constructor
[04:14:09] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[04:16:16] <jaawerth> I don't see anywhere TicTacToeState is being instantiated though? Though I noticed when I pasted that lastest code into the typescript playgrouund it has 70 errors
[04:16:49] <jaawerth> so the typing might also be complicating things
[04:17:38] <gamara> yeah true
[04:17:49] <gamara> I guess I should remove the typing so I have a working example
[04:18:09] <gamara> prototyping is probably the only way
[04:18:45] <prussian> z1haze: horrifyingly https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#sort_stability
[04:18:56] <prussian> So you could theoretically just run another sort
[04:19:00] <prussian> For the other property
[04:19:05] *** Joins: gganbu (~yeurt@copyfree/advocate/tusko)
[04:19:05] *** ChanServ sets mode: +b *!*@copyfree/advocate/tusko
[04:19:05] *** gganbu was kicked by ChanServ (Banned: inapprops nick)
[04:19:05] *** ChanServ sets mode: +o litharge
[04:19:15] *** litharge sets mode: -o litharge
[04:19:25] <z1haze> i think my sort was working how it should, i just was not seeing it
[04:19:36] <prussian> Oh
[04:19:57] <prussian> Codepen on phone just is unusable
[04:22:22] <prussian> When the fuck was this added though.
[04:23:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:388e:bd49:b9aa:a0a6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:27:08] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:28:02] <wroathe> Not sure who icked that person just now, but I'm pretty sure that nick was based on it's recent usage in "Squid Game"
[04:28:05] <wroathe> kicked*
[04:28:27] <wroathe> It's used as a term of endearment to mean two people from the same neighborhood who share
[04:28:51] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Client Quit)
[04:29:18] <Maxdamantus> 16:58 -!- pussymoneyweed was kicked from #javascript by ChanServ [Banned: inapprops nick]
[04:29:41] <Maxdamantus> Same account.
[04:29:50] <wroathe> Oh, I see
[04:29:59] <wroathe> All I saw was:
[04:30:00] <wroathe> 19:49  -!- gganbu was kicked from #javascript by ChanServ (Banned: inapprops nick)
[04:30:41] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:31:02] <gamara> well I figured out my problem
[04:31:17] <gamara> You cant destructure member functions on an object
[04:31:48] <gamara> that is held as a member variable
[04:40:02] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Quit: Leaving)
[04:45:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[04:47:48] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[04:49:48] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[04:50:04] *** Joins: diamondbond (~diamondbo@175.157.91.8)
[04:50:15] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[04:50:48] *** Quits: diamondbond (~diamondbo@175.157.91.8) (Read error: Connection reset by peer)
[04:54:23] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[04:54:43] *** Joins: xiongxin (~quassel@113.116.224.79)
[04:57:28] *** Quits: dsrt^ (~dsrt@70.166.66.234) (Ping timeout: 252 seconds)
[05:00:51] <KDev> prussian, that is a bit discouraging, I don't know much about finding jobs in the industry, I was just looking on google in hartford haha..Maybe it could be another city in CT so I could go to interviews, but I could work remotely,
[05:01:13] <KDev> I almost decided on angular over react but looking at trends, react seemed like the more stable option
[05:01:37] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[05:01:51] <KDev> How did you come about seeing that most of CT is angular?
[05:08:12] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:11:01] *** Joins: VectorX (~sunilaiya@user/vectorx)
[05:12:14] <jaawerth> I see way more people saying all the companies using angular than I see companies using angular tbh. That said, it *dos* lend itself to large enterprisey java-esque things - it's a more opinionated framework than react in terms of the patterns it expects people to follow, and that can be helpful for large teams working on related projects, since the framework helps enforce a predictable/common
[05:12:15] <jaawerth> way to organize project code
[05:12:17] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Ping timeout: 256 seconds)
[05:12:27] <jaawerth> typescript plays into that as well
[05:13:30] <jaawerth> mind you, personally I find it gets in the way of iteration speed so it depends on what one's priorities are. if you're super good at react, though, you could pick up angular and vice versa. I've rarely seen it be a deal-killer on either side of an interview
[05:14:48] <jaawerth> well, in angular's case there's more stuff built-in you'd want to be familiar with, like observables/rx and typescript
[05:15:29] <jaawerth> (it may have changed in the N iterations since I last used it but I recall angular being like "let's use RxJS for ALLLL the things! Promises? What promises?"
[05:15:44] *** Joins: Rockwood (~Rocky@user/rocky)
[05:16:04] <sheetjs> jaawerth: i can say we have more customers using angular than react
[05:16:06] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[05:16:20] <Rockwood> sheetjs, o/
[05:17:12] <jaawerth> while I personally haven't seen it, I do beleive it for the reasons I mentioned above ;-)
[05:20:33] *** Joins: realies (~realies@user/realies)
[05:20:46] *** Quits: jmft2_ (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[05:21:07] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:21:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667)
[05:25:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[05:28:23] <KDev> well, I already started the react journey so I may as well stick to it. I wasn't really sure what to expect when learning react tho, but so far it seems pretty straight forward. Is it's main purpose to give you a more manageable way to build front end on a larger scale?
[05:28:40] *** Joins: The_Jag_ (~The_Jag@host-80-180-125-109.retail.telecomitalia.it)
[05:28:47] <KDev> As a react developer, would I be expected to be good in design as well? Because my goal with learning javascript was to get away from design and work on more functionality haha.
[05:29:08] <KDev> Design takes alot of mental power and I don't think it comes naturally to me
[05:29:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:29:15] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:29:15] *** Joins: wroathe (~wroathe@user/wroathe)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-79-51-167-242.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:31:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:31:39] <robertmaxrees> depends on the shop.  our team has dedicated designer types.  devs give feedback, but that's about it.
[05:34:02] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:36:27] *** Quits: shurane_ (sid132556@id-132556.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[05:36:34] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:36:46] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Ping timeout: 245 seconds)
[05:36:46] *** Quits: victor (sid208353@user/victor) (Ping timeout: 245 seconds)
[05:36:46] *** Quits: owlbynight (sid501016@id-501016.tinside.irccloud.com) (Ping timeout: 245 seconds)
[05:36:47] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[05:36:55] *** Quits: MachinShin_ (sid243317@id-243317.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[05:36:55] *** Quits: ross_ (sid305269@2a03:5180:f:1::4:a875) (Ping timeout: 268 seconds)
[05:36:55] *** Quits: themaxdavitt_ (sid433050@2a03:5180:f:4::6:9b9a) (Ping timeout: 268 seconds)
[05:36:55] *** Quits: beowulf_ (sid116@2a03:5180:f:2::74) (Ping timeout: 268 seconds)
[05:36:57] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 250 seconds)
[05:37:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:37:07] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:37:07] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:37:13] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:37:23] *** Quits: Ownix (sid11917@id-11917.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[05:37:26] *** Quits: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com) (Ping timeout: 246 seconds)
[05:37:40] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[05:37:50] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:38:09] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Ping timeout: 268 seconds)
[05:38:13] *** Quits: jsatk (sid304796@id-304796.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: systemfault (sid267009@id-267009.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[05:38:19] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[05:38:20] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:38:33] *** Quits: SrPx_ (sid108780@id-108780.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[05:38:33] *** Quits: naeluh (sid95128@id-95128.lymington.irccloud.com) (Ping timeout: 268 seconds)
[05:38:33] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 268 seconds)
[05:38:38] *** Joins: naeluh_ (sid95128@lymington.irccloud.com)
[05:39:07] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[05:39:12] *** Joins: fweht (uid404746@lymington.irccloud.com)
[05:39:12] *** Joins: graingert (sid128301@tinside.irccloud.com)
[05:39:14] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[05:39:17] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[05:39:21] *** Joins: systemfault (sid267009@uxbridge.irccloud.com)
[05:39:22] *** Joins: SrPx_ (sid108780@uxbridge.irccloud.com)
[05:39:31] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[05:39:49] *** Joins: itok_ (sid418430@ilkley.irccloud.com)
[05:39:50] *** Joins: rickbutton (sid410078@helmsley.irccloud.com)
[05:39:54] *** Joins: Ownix (sid11917@helmsley.irccloud.com)
[05:40:07] *** Joins: vqueiroz (uid340368@hampstead.irccloud.com)
[05:40:08] *** Joins: Argorok (sid195487@hampstead.irccloud.com)
[05:40:13] *** Joins: hnOsmium0001 (uid453710@hampstead.irccloud.com)
[05:40:15] *** Joins: owlbynight (sid501016@tinside.irccloud.com)
[05:40:28] *** Joins: victor (sid208353@user/victor)
[05:40:30] *** Joins: _0x1d3 (sid43116@tinside.irccloud.com)
[05:40:32] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[05:40:33] *** Joins: epolanski (uid312403@helmsley.irccloud.com)
[05:40:40] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[05:40:43] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[05:41:43] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:41:58] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[05:42:08] *** Joins: Memory (sid459764@user/memory)
[05:43:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[05:51:23] *** Quits: rundown (~eb0t@90.197.81.245) (Ping timeout: 264 seconds)
[05:52:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:548c:dba2:ff88:f667) (Quit: Client closed)
[05:53:00] *** Joins: rundown (~eb0t@90.194.34.18)
[05:53:05] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[05:53:07] *** Joins: themaxdavitt_ (sid433050@hampstead.irccloud.com)
[05:53:08] *** Joins: beowulf_ (sid116@lymington.irccloud.com)
[05:53:09] *** Joins: ross_ (sid305269@helmsley.irccloud.com)
[05:53:11] *** Joins: shurane_ (sid132556@helmsley.irccloud.com)
[05:54:22] *** Joins: MachinShin_ (sid243317@helmsley.irccloud.com)
[05:59:22] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:59:22] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:59:22] *** Joins: wroathe (~wroathe@user/wroathe)
[06:11:35] *** Joins: bd45522 (~ip4@2001:16a2:f80a:3100:9a6:9222:331a:81af)
[06:13:47] *** Quits: epolanski (uid312403@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:14:42] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:24:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:25:06] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[06:25:23] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[06:31:03] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:31:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:31:54] *** Quits: VectorX (~sunilaiya@user/vectorx) (Quit: Quit)
[06:32:48] *** Joins: VectorX (~sunilaiya@user/vectorx)
[06:34:39] *** Joins: laswd (~hlpme@user/hlpme)
[06:35:06] <laswd> If a node project allows me to do npm, does it mean I can use yarn as well?
[06:43:07] *** Quits: bd45522 (~ip4@2001:16a2:f80a:3100:9a6:9222:331a:81af) (Ping timeout: 252 seconds)
[06:43:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:44:09] <gde33> I'm looking for a client that will allow me to do magical things with json files
[06:44:35] <neshpion> jq :DDDD
[06:44:43] <gde33> I want to compare them from url, seamlessly move array elements from one to the other etc etc
[06:45:04] <gde33> preferably a no~code interface :P
[06:45:17] <gde33> and I want a pony
[06:46:13] <gde33> does such thing exist? A [say] blender of json files?
[06:46:17] *** Quits: trog (~trog@user/trog) (Quit: Switching computers. Be back soon :D)
[06:46:54] <gde33> I can think of a thousand useful things it could do
[06:47:26] <gde33> run sql queries? :P
[06:48:37] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:49:11] <gde33> come to think of it, it's rather silly people dont send json files?
[06:49:35] <neshpion> they dont?
[06:49:43] <gde33> neshpion: average joe doesnt
[06:50:01] <gde33> neshpion: what would be the default application? firefox? :(
[06:50:15] <neshpion> gde33: vim :^^^^^^^)
[06:50:17] *** Joins: Rockwood (~Rocky@user/rocky)
[06:50:24] <gde33> nah, not for grandma
[06:50:45] <neshpion> it's great for grandma since she can't leave it she never has to remember how to start it
[06:50:47] <gde33> its just data? I'm certainly not in love with excell
[06:51:15] <gde33> my occupation involves reading oversized excell screenshots on phones
[06:51:23] <gde33> makes me want to kill someone
[06:51:26] <neshpion> pain
[06:51:28] <neshpion> agony
[06:51:32] *** Quits: rundown (~eb0t@90.194.34.18) (Ping timeout: 268 seconds)
[06:51:56] <gde33> if only they send me a json, I could render all kinds of futuristic from those
[06:52:12] <gde33> compare, query etc
[06:52:34] <gde33> why is there no popular client? Are we lacking a multinational to lead us though the night?
[06:52:42] <neshpion> ask for csv export
[06:53:07] <gde33> anything asked is ideally imediately denied
[06:53:17] *** Joins: rundown (~eb0t@90.194.37.187)
[06:53:43] <gde33> worse case is that you have to ask again every few months without getting a clear NO
[06:55:08] <gde33> its strange, we have so many people who can do anything they want with json and ghee a hundred single purpous tools ?
[06:56:08] <gde33> there use to be wonky outliners trying to bring the magic but those seem to overly bussy themselves with setting popup coordinates and size
[06:56:37] <gde33> rss aggregators are all garbage too?
[06:56:42] <gde33> its so weird
[06:58:53] <gde33> what good are things like this to grandma? https://onlinejsontools.com
[06:58:56] <gde33> LOL
[07:01:09] <gde33> if web based it should prbl something   example.com?input=foo.bar/json.json&post-to=foo.bar/json.asp
[07:01:54] <gde33>  example.com?input[]=foo.bar/json1.json&input[]=foo.bar/json2.json&post-to=foo.bar/json.php
[07:01:55] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[07:03:05] <gde33> seems worth paying for, I would
[07:04:36] <gde33> https://geekflare.com/json-online-tools/
[07:04:43] <gde33> bweh
[07:05:57] <OhTheCode> u really love JSON
[07:06:04] <OhTheCode> i admire your passion for it
[07:06:23] <gde33> I like how I can make a backup every time anything changes
[07:06:24] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[07:06:44] <gde33> sql is like, oh well, nothing works anymore! bye!
[07:06:51] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[07:07:06] <gde33> then try figure out how and get no idea what happened
[07:07:12] *** Quits: tar_xvf_ (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:07:31] *** Joins: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:07:40] <OhTheCode> with json, it is so much more dynamic than csv file or spreadsheet or flat table
[07:07:53] <OhTheCode> its like a cell in a spreadsheet can have a list in it
[07:07:56] <gde33> someone just vandalized the admin area of one of my precious pet projects
[07:08:21] <gde33> no idea how they pulled it off but I can just put back the backup and laugh about it
[07:08:48] *** Joins: snake (~snake@user/snake)
[07:09:36] <gde33> OhTheCode: I don't actually love json but I passionately hate all the alternatives.
[07:09:45] <snake> hi, when you're doing asynchronous programming, and you start collecting some data and then using it separately, how do you prevent the code from exiting early (before all the data is collected, perhaps the code that consumes that data was faster than the code that collects it)
[07:09:50] <OhTheCode> hehehe yeah i hear u
[07:09:55] <gde33> and its used oftten enough
[07:10:18] <gde33> OhTheCode: I imagine xml was actually good for some small window of time
[07:10:21] <gde33> haha
[07:10:53] <OhTheCode> json can do all xml can can't it ? but xml can't do arrays. I could be wrong
[07:10:57] <gde33> OhTheCode: there is a grand total of 1 guy on irc who knows how xml works
[07:11:18] <gde33> OhTheCode: it has attributes which is kinda fun
[07:11:29] <gde33> OhTheCode: and actual specs for everything
[07:11:44] <OhTheCode> what can xml do that json can't? attributes?
[07:12:16] <gde33> OhTheCode: it has specs so if there is say an RSS feed you know what things are called
[07:12:25] <gde33> or say a product feed
[07:13:06] <OhTheCode> ok, good, is there anything else it can do that json can't?
[07:14:12] <OhTheCode> doesn't it take 30 mins to learn?
[07:14:20] <gde33> xpath would be a good example I guess?
[07:14:21] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Read error: Connection reset by peer)
[07:14:26] *** Joins: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com)
[07:15:09] <gde33> OhTheCode: you just make a json for whatever, with xml you coin a format
[07:15:27] <gde33> or use a format if it already exists
[07:15:31] *** Joins: earendel (uid498179@user/earendel)
[07:15:34] <gde33> makes it more compatible
[07:17:36] <gde33> nesting things seems less weird in xml, if you put [say] objects mixed with values in an object in an array in an object your coworkers might kill you
[07:19:47] <OhTheCode> hehe, so why did json become the dominant format? Is it because it's closer with javascript?
[07:19:57] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[07:20:08] <gde33> because people had actual work to get done
[07:20:23] <OhTheCode> snake - how are you collecting the data?
[07:20:37] <snake> json is so ez, i kinda had it figured out before i realized it was "a thing"
[07:20:55] <snake> OhTheCode, reading from disk and also from web
[07:21:08] <gde33> snake: you have a call back function that runs when the data is done. Or a prommise
[07:21:09] <snake> im forced to use asynchronous code so my whole application needs to be asynchronous
[07:21:13] <OhTheCode> in node? are u using fsp?
[07:21:19] <snake> yeah in node
[07:21:31] <snake> gde33, trying to avoid callback hell
[07:21:32] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Read error: Connection reset by peer)
[07:21:45] <OhTheCode> ok, that's as far as i can help u hehehe i don't claim to be a guru at all
[07:21:47] <gde33> its not a very hot hell, at least not at first
[07:21:49] <snake> or the promise pyramid of doom
[07:22:14] <gde33> snake: then just use setInterval and check if var completed === true
[07:22:24] <snake> ok
[07:22:34] <gde33> everyone will hate you but it works amazingly well
[07:22:39] <snake> xD
[07:23:46] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[07:24:23] <snake> i think i will actualyl create a job collection of sorts, and create the entries first... then wehn i get their information i will fill it in... and the otehr code will just say while (anyJobs()) for (job in readyJobs()) {}
[07:31:06] *** Quits: lantech19446 (sid237550@helmsley.irccloud.com) ()
[07:31:37] <snake> oh would object fields be thread safe
[07:31:55] <snake> like if i wanted to maybe add some more jobs im going to increase the count, but some other code might want to decrease the count too
[07:33:13] *** Joins: lantech19446 (~jon@144.202.10.138)
[07:33:22] <jaawerth> the only threads you get in a js environment are workers anyway, so they don't share mutable memory - they communicate by structural transfer/cloning. The closest you get is SharedArrayBuffer
[07:34:02] <jaawerth> which, with memory-mapping (like you'd do in C, haha) you can get a lot done with it
[07:34:03] <snake> yeah maybe threadsafe is entirely not the right word
[07:34:04] <snake> my bad
[07:34:26] <jaawerth> oh you're just talking concurrency and race conditions?
[07:35:10] <jaawerth> yeah promises are a great unit to work with for this - it's best to lean into it. with async/await you can still code as imperative as you want to with them
[07:35:13] <snake> yeah for like async code
[07:35:30] <snake> yeah issue with async is it creates more promises
[07:35:35] <snake> broken promises..
[07:35:37] <jaawerth> yes
[07:35:37] <chovy> i just discovered the web serial api
[07:35:37] <snake> ;-;
[07:35:43] <jaawerth> because once you're in async-land, there is no escape
[07:35:58] <theskillwithin> dun dun dun
[07:36:45] <jaawerth> promises and async/await in tandem are a good abstraction, but ultimately there's going to be callbacks somewhere because JS is event-bsed. anything that isn't await or yield and isn't doing something with a callback (.then() or otherwise) is a hack
[07:38:38] <snake> think i'll use a priority queue
[07:38:56] <jaawerth> task queues are useful
[07:39:36] <jaawerth> there's also a number of good util libraries out there for, like, mapping, filtering, reducing etc promises
[07:39:43] *** Joins: Haxxa (~Haxxa@122.199.45.217)
[07:39:55] <queue[m]> id appreciate if you didnt @ me
[07:40:06] <queue[m]> lol
[07:40:26] <queue[m]> jk man carry on :)
[07:40:30] <snake> lol
[07:40:44] <jaawerth> lol, I don't get how anyone can stand having a general term (especially a tech one) as a nick
[07:40:55] <queue[m]> right
[07:41:02] <queue[m]> i didnt think this would be a general term
[07:41:15] <queue[m]> so far it hasnt been, that was the first highlight all week
[07:41:22] <jaawerth> poor saml in #node.js has highlighted by me talking trash about SAML a number of times
[07:41:40] <queue[m]> lol
[07:41:44] <snake> oh, people tend to start talking about snakes at least every other day, interesting that snakes are more frequently said than a queue
[07:41:49] <queue[m]> we use SAML at work
[07:41:51] <snake> though queueu is a little hard to type
[07:42:49] <jaawerth> I too have been considering a usecase for one in a metrics tool and I was thinking "oh man I might have an excuse to write a heap data structure, I haven't done that since school!"
[07:48:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[07:55:55] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:58:20] *** Quits: lantech19446 (~jon@144.202.10.138) (Quit: WeeChat 3.2)
[08:05:33] <sheetjs> make react-heap or vue-heap or svelte-heap
[08:05:47] *** Quits: Haxxa (~Haxxa@122.199.45.217) (Ping timeout: 264 seconds)
[08:07:41] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[08:15:59] *** Quits: laswd (~hlpme@user/hlpme) (Ping timeout: 264 seconds)
[08:19:32] *** Joins: Lazenca (~lazenca@user/lazenca)
[08:27:01] <theskillwithin> sheetjs my votes for react-heap but well im biased
[08:32:40] <jaawerth> lit-heat 😂
[08:32:56] <jaawerth> heap, even
[08:33:10] <jaawerth> Works either way
[08:33:14] <gde33> chovy: wow
[08:34:16] *** Quits: snake (~snake@user/snake) (Ping timeout: 265 seconds)
[08:34:48] *** Joins: lantech19446 (sid237550@id-237550.helmsley.irccloud.com)
[08:35:16] <gde33> chovy: a way to talk to the outside world
[08:35:50] <theskillwithin> idk what heap even is
[08:35:59] <theskillwithin> i mean heap script
[08:36:00] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[08:36:09] <gde33> the S in IoT stands for Security
[08:36:58] *** Joins: snake (~snake@user/snake)
[08:39:02] <ljharb> that one wasn't half bad
[08:39:03] *** Joins: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64)
[08:40:20] <wroathe> You're a heap
[08:41:06] <gde33> open source killer robots, imagine it
[08:41:19] *** Joins: teut (~teut@182.68.178.118)
[08:41:31] *** Quits: snake (~snake@user/snake) (Ping timeout: 265 seconds)
[08:42:00] <teut> I want to use  the  _.get   from lodash but the lodash package is 1.41 mb , isnt there any light weight package?
[08:43:17] <theskillwithin> import get from 'lodash/get'
[08:43:22] <theskillwithin> will ionly import that part of it
[08:43:28] <theskillwithin> will only*
[08:43:40] <teut> oh tree shaking
[08:43:43] <theskillwithin> assuming your using module loading
[08:44:02] <ljharb> teut: why would you want to use that function tho
[08:44:13] <wroathe> No, not tree shaking. They export individual functions as standalone modules
[08:44:13] <ljharb> using strings as object navigation paths is gross
[08:44:18] <ljharb> teut: use `lodash.get` tho
[08:44:18] <teut> for longer paths in js objects
[08:44:24] <ljharb> teut: use a function for that
[08:44:34] <theskillwithin> key part is 'lodash/get' there,     import get from 'lodash/get'
[08:44:54] <teut> ok , I ll remember it , thanks theskillwithin
[08:44:54] <theskillwithin> ahh
[08:45:05] <ljharb> theskillwithin: yes but you don't want to use `lodash` at all
[08:45:06] <theskillwithin> or like ljharb says import get from 'lodash.get'
[08:45:09] <ljharb> because it's a CVE magnet
[08:45:17] <ljharb> only install the lodash subpackages you need
[08:45:38] <teut> lodash.get   is same as _.get
[08:45:45] <teut> what are you just saying
[08:46:00] <teut> https://www.geeksforgeeks.org/lodash-_-get-method/
[08:46:22] <theskillwithin> the one with the . in it is this https://www.npmjs.com/package/lodash.get
[08:46:23] <ljharb> teut: i'm saying that if you insist on using string object paths, use https://npmjs.com/lodash.get
[08:46:39] <theskillwithin> the one with the slash, is if you have full library but just want to import that one piece
[08:46:44] <teut> Issues
[08:46:44] <teut> 187
[08:46:45] <teut> Pull Requests
[08:46:45] <teut> 111
[08:46:46] <teut> Last publish
[08:46:46] <teut> 5 years ago
[08:46:49] <ljharb> so?
[08:46:54] <ljharb> teut: don't paste multiple lines please
[08:46:59] <teut> ok , sorry
[08:47:33] <teut> no, I too do not like string paths
[08:48:04] <teut> your package langs me to the  _.get page  ljharb
[08:48:09] <teut> lands*
[08:48:20] <ljharb> teut: that's fine, just use the `lodash.get` package instead of the `lodash` package.
[08:48:24] <teut> ok
[08:48:33] <theskillwithin> ljharb prob does it the more proper way,  but i just do the / way
[08:48:44] <Rockwood> onClick={() => handleClick(items)}> why its missing event argument?
[08:48:59] <teut> if I need to do it without strings then the only option is   dict["a"]["b"]["c"]
[08:49:04] <Rockwood> its passing just data instead of even things
[08:49:22] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Read error: Connection reset by peer)
[08:49:24] <teut> its clearly missing event
[08:49:29] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[08:49:38] <teut> onClick={(e) => handleClick(e, items)}>
[08:49:50] <Rockwood> lol
[08:49:53] <Rockwood> okay
[08:50:01] <ljharb> teut: why do you think you need to do it at all
[08:50:39] <teut> https://ibb.co/L9X3dx4
[08:50:53] <teut> I was refacoring some code
[08:51:10] <teut> this code previously had three nested .map
[08:51:19] <ljharb> and what's wrong with that
[08:51:24] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[08:51:26] <ljharb> that image doesn't load btw
[08:51:26] <teut> which  actually  should had been  forEach
[08:51:38] <ljharb> share code as text, not images.
[08:51:59] <teut> text wont show you the linter warnings
[08:53:00] <ljharb> i don't need those
[08:53:12] <teut> https://imgur.com/a/h9QCCiG
[08:53:15] <teut> try this
[08:53:45] <ljharb> that's just a typescript error
[08:53:46] <ljharb> those don't matter
[08:53:47] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[08:53:57] <ljharb> for..in is bad tho, and that's two of them
[08:54:04] <ljharb> no wait, three. plus a switch
[08:54:14] <ljharb> so yes, it's bad code, but i don't see any need for _.get
[08:54:31] <teut> if was nested if with map
[08:54:44] <teut> for loops look cleaner
[08:54:57] <teut> about switch, I ll remove that
[08:55:16] <teut> typescript error but the file is .jsx
[08:55:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:55:44] <teut> ah right, it says  "ts(2339)"
[08:55:48] <teut> thanks ljharb
[08:55:57] <ljharb> teut: for loops are never cleaner
[08:56:06] <ljharb> teut: and for-in, specifically, should NEVER be used, ever
[08:56:11] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[08:56:22] <ljharb> !for-in @teut
[08:56:22] <jellobot> teut, for..in is not to loop through indices/values of an array. Use for(init;cond;step) or Array#forEach. For..in iterates over *all* enumerable properties of an object, without any defined order. See also !iteration
[08:56:39] <teut> thats an iterator loop
[08:56:50] <ljharb> huh?
[08:56:54] <ljharb> teut: `for-of` is for iterators
[08:57:02] <ljharb> `for-in` is for object properties, including the entire prototype chain
[08:57:04] <teut> oh
[08:57:05] <ljharb> never ever use `for-in`, ever.
[08:57:09] *** Joins: laswd (~hlpme@user/hlpme)
[08:57:12] <ljharb> also loops are not cleaner.
[08:57:16] <ljharb> !loops are evil @ teut
[08:57:16] <jellobot> teut, Loops fail to clearly signal the intention of your code, and as such should be avoided whenever possible (prefer higher-order functions, such as .map, .reduce, .filter, ...). See also: http://qr.ae/RNMEGA and https://gist.github.com/robotlolita/7643014
[08:57:35] <ljharb> use Object.keys/entries/values, and array iteration methods.
[08:57:39] <ljharb> like .map or .forEach.
[08:57:49] <teut> forEach creates  that nested blocks and requires code to be wrapped in   "})"
[08:58:10] <teut> ok
[08:59:31] <Rockwood> \o/
[08:59:46] <ljharb> teut: yes, that is a good thing and better.
[08:59:51] <ljharb> teut: using functions instead of loops, i mean.
[08:59:57] <teut> ok
[09:00:45] <teut> Arr.forEach(item => {  `})`      , you see the nested paranthesis?
[09:00:55] <ljharb> teut: yes, and those are fine.
[09:00:59] <ljharb> teut: there's nothing wrong with nesting.
[09:01:09] <teut> if is quite a mess
[09:01:17] <teut> creates confusion
[09:01:23] <teut> it*
[09:01:28] <Rockwood> const recursive = () => {here loop}
[09:02:06] <ljharb> teut: loops create far more confusion
[09:02:08] <jaawerth> there loop. there castle
[09:02:11] <teut> its your  old callback hell problem
[09:02:16] <ljharb> teut: that's a made up problem
[09:02:21] *** Quits: gamara (~gamara@66-203-186-178.ded.execulink.com) (Ping timeout: 256 seconds)
[09:02:25] <teut> made up , really?
[09:02:26] <ljharb> teut: i mean look at your own code. you got confused about which of the three type of for loops you were using
[09:02:30] <ljharb> teut: yes, callback hell is not a real problem
[09:02:35] <ljharb> teut: it's easy to solve, in other words
[09:02:43] <jaawerth> oh hey that's the second Mel Brooks film I've used for bad wordplay derails
[09:02:50] <teut> ya , maybe by extracting the blocks out
[09:03:44] <ljharb> teut: yes, exactly
[09:03:52] <ljharb> teut: which is easy to do when things are functions
[09:03:54] <jaawerth> keep in mind that forEach is also the only of thee higher-order functions thaat encourages mutation - so you end up needing blocks a lot so you can set xyz things outside the scope
[09:04:00] <ljharb> !iterations @ teut
[09:04:00] <jellobot> teut, ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
[09:04:04] <jaawerth> with stuff like .map you're more likely to have => one-liners
[09:04:32] <jaawerth> no callbacks calling callbacks calling ballbacks there
[09:04:51] <jaawerth> if you just mean excess indentation, instead of passing all of them inline all the time, trying making them named functions
[09:05:37] <teut> https://dpaste.org/YK0b
[09:05:46] <teut> do I need a class here?
[09:05:57] <ljharb> teut: the answer to that question is basically always no
[09:06:04] <jaawerth> oh it's switch hell
[09:06:11] <teut> no its not
[09:06:14] <ljharb> teut: but if you're using `this` then you already have a class, so you might as well use the proper syntax
[09:06:22] <ljharb> teut: and yes, switch statements are terrible and should be avoided
[09:06:24] <teut> you can just replace it by if else
[09:06:31] <ljharb> yes, so do that
[09:06:31] <jaawerth> also are you indenting 8 spaces or are those raw tabs
[09:06:35] <ljharb> if/else is far far better
[09:06:49] <ljharb> jaawerth: it's 4 spaces
[09:07:01] <teut> https://dpaste.org/RyX9#L124,125
[09:07:07] <ljharb> teut: so, to recap. no switch, no for-in.
[09:07:11] <jaawerth> oh soit is. I dunno why it looks like so much, maybe my font is off
[09:07:14] <teut> the full code is this
[09:07:32] <teut> ok ljharb , let me check for of
[09:07:34] <ljharb> teut: so like getImage should be an object lookup, not a switch or if/else
[09:07:40] <jaawerth> ljharb: I curse the writers of the redux documentation for repopularizing switch statements
[09:07:40] <ljharb> teut: don't use for-of tho, use *iteration method*
[09:07:43] <ljharb> *methods
[09:07:47] <ljharb> jaawerth: seriously
[09:07:48] <teut> ok
[09:07:51] <ljharb> teut: avoid loops
[09:08:07] <ljharb> teut: also, `} else {`
[09:08:08] <ljharb> !otbs @ teut
[09:08:09] <jellobot> teut, The One True Brace style: https://en.wikipedia.org/wiki/Indent_style#Variant:_1TBS_.28OTBS.29
[09:08:14] <teut> ljharb  , ya it can be just a jsobject
[09:08:16] <ljharb> that's called "cuddled elses"
[09:08:20] <ljharb> teut: can and should
[09:08:30] <ljharb> teut: also, if you're using const/let, why is `var` ever used in that file
[09:08:45] <ljharb> teut: you badly need to use the airbnb eslint config
[09:09:00] <jaawerth> switch is just sad pattern matching
[09:09:00] <ljharb> it should autofix much of that, and then you can remove the switches and loops manually
[09:09:12] <jaawerth> speaking of, am I remembering right that there's now a pattern matching proposal?
[09:09:15] <teut> ya i will use the airbnb but that does allows me to write code if I ve unused import
[09:09:41] <teut> i was using mui and I had to again search for the stupid import statement again and again
[09:09:41] <ljharb> teut: why would you have unused imports
[09:10:03] <ljharb> teut: you can override eslint rules if needed, but you shouldn't ever be importing something you aren't using
[09:10:08] <ljharb> side-effect imports shouldn't have bindings
[09:10:15] <teut> ok
[09:10:31] <jaawerth> ljharb: oh you're a champion of it
[09:10:31] *** Joins: jmft2_ (~jmft2@213.31.248.255)
[09:10:33] <jaawerth> champ!
[09:10:47] <teut> jaawerth  , ya I understand, switch is just a lookup
[09:11:04] <teut> store functions in hashmap
[09:11:10] <jaawerth> don't mind me, I'm just being stream-of-consciousness about it
[09:11:23] <ljharb> jaawerth: lol yes, i am
[09:11:28] <ljharb> teut: yes
[09:11:35] <jaawerth> yayy
[09:11:42] <jaawerth> it's such a nice feature to have in a language
[09:12:24] <teut> but it might not be applicable in c++
[09:12:27] <Rockwood> bye cya
[09:12:47] <teut> i code in multiple languages so  doing common is what is better for me
[09:13:00] <jaawerth> it doesn't really fit in with the semantics of C, you'd need some kinda macro
[09:13:22] <teut> macros are ugly
[09:13:45] <jaawerth> one of js's confusing traits is its c-like syntax when it isn't really a c-like language
[09:13:47] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[09:14:17] <teut> ljharb , is K & R considered this bad?
[09:14:21] <jaawerth> it might be exaggerating to say it has more in common with lisp than C but not by as much as you'd think
[09:14:49] <ljharb> teut: absolutely
[09:14:52] <ljharb> teut: it's actually buggy in JS
[09:14:57] <ljharb> teut: but it's also gross-looking
[09:14:59] <teut> lol
[09:15:05] <jaawerth> JS makes *heavy* usage of closures functions as first-class objects that can be passed around and set as properties etc
[09:15:06] *** Quits: vinay (~vinay@2405:201:402c:a0a2:d667:a2a9:e560:3d64) (Ping timeout: 245 seconds)
[09:15:14] <teut> ya, I learned to write for loop without a body from it
[09:15:20] <jaawerth> closures over state and*
[09:15:35] <teut> ya , but not c++
[09:15:41] <teut> js and python do only
[09:15:54] <teut> and maybe ruby
[09:15:58] <jaawerth> I used to know C++ better than any other language I know and now it's closer to the bottom lol
[09:16:26] <jaawerth> also I do use switch statements (well case..esac statements) pretty heavily in bash scripts haha
[09:18:42] *** Quits: jmft2_ (~jmft2@213.31.248.255) (Read error: Connection reset by peer)
[09:18:48] <jaawerth> ljharb: anyway I'm excited that not only are you a champion of the pattern matching proposal but that it's also got what seems to be quite a lot of backing going by how many other people and their employers are listed haha
[09:19:01] *** Joins: Hazza (~Haxxa@122-199-44-126.ip4.superloop.com)
[09:19:42] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 265 seconds)
[09:24:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[09:26:45] *** Joins: xiongxin (~quassel@113.116.224.79)
[09:27:25] <ljharb> jaawerth: lol yeah, i'm hopeful
[09:27:33] <ljharb> we'll present again in november
[09:27:43] <ljharb> it'll be awhile for stage 2 tho
[09:27:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:29:11] *** Quits: Hazza (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[09:30:01] *** Quits: rundown (~eb0t@90.194.37.187) (Ping timeout: 268 seconds)
[09:31:37] <jaawerth> eh it's a good feature to slow roll, weve already seen in fennel how easy it is to make a wrong to with you how structure the syntax for xyz logic and made a breaking change to it haha
[09:31:53] <jaawerth> benefits of a language that's still on 0.x
[09:32:23] <theskillwithin> I don't even dare ask how temporal is going cuz i feel like i know the answer is the pollyfill hasn't been started yet
[09:32:43] <ljharb> theskillwithin: the proposal still isn't finished changing yet.
[09:32:48] <jaawerth> but it sure does make things like quickly and cleanly whipping up simple args parsing a breeze https://github.com/jaawerth/fnldocstor/blob/master/build/docsets.fnl#L97-L107
[09:35:29] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[09:35:38] <jaawerth> ljharb: aptly named then!
[09:36:31] <jaawerth> what I don't even rate a sad trombone
[09:45:00] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[09:45:14] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Quit: Lost terminal)
[09:45:41] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[09:46:15] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[09:46:17] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[09:46:27] *** Joins: xiongxin_ (~quassel@113.116.33.28)
[09:47:27] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Client Quit)
[09:47:48] <ljharb> lol
[09:49:23] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[09:52:03] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:52:36] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 245 seconds)
[09:54:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:54:03] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:54:03] *** Joins: wroathe (~wroathe@user/wroathe)
[09:54:59] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[09:57:52] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[09:58:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[09:59:08] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[09:59:15] *** Joins: tex (~super@user/dix)
[10:02:52] *** Joins: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com)
[10:06:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[10:11:11] *** Quits: Haxxa (~Haxxa@122-199-44-126.ip4.superloop.com) (Ping timeout: 264 seconds)
[10:12:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:12:31] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:14:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[10:16:20] *** Quits: laswd (~hlpme@user/hlpme) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[10:16:46] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[10:18:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[10:20:09] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:20:54] <fweht> what libary offers the best / most convenient fft implementation in js?  i just found tensorflow.js, it seems pretty good?
[10:23:45] <ljharb> what is fft
[10:24:13] <Maxdamantus> inb4 fast fourier transform
[10:26:24] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It's too late now.)
[10:27:41] <theskillwithin> the person who does that ml stuff at my work is like 15-20 years of math ahead of what i did lol
[10:28:39] <fweht> that seems a lot
[10:29:11] <theskillwithin> well I only got to like calc 1 i think
[10:30:12] <theskillwithin> im exaggerating, but at the rate i learn at, it might not be far from true
[10:30:44] <fweht> try linalg maybe, its fun i think, at least the basics
[10:30:55] <theskillwithin> that was prob my 6th year in community college
[10:31:49] <fweht> btw im so amazed how nice the people who do the mathjs library are
[10:31:57] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[10:32:27] <fweht> they implemented all my feature requests (i did only two or so, but still)
[10:33:06] <fweht> but js community seems nice in general
[10:33:19] <theskillwithin> ya part of that is because js community is awesome fo sure
[10:35:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[10:35:08] <theskillwithin> im sure the math community is as well.  so combining those
[10:36:10] <fweht> yup
[10:39:31] *** Joins: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com)
[10:40:34] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[10:41:50] *** Joins: Guest47 (~Guest47@2405:201:1002:f90d:8516:8879:c8b3:6282)
[10:42:48] *** Quits: Guest47 (~Guest47@2405:201:1002:f90d:8516:8879:c8b3:6282) (Client Quit)
[10:44:18] *** Quits: tex (~super@user/dix) (Quit: tex)
[10:44:19] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:49:41] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:6614:c3:8d:de11) (Ping timeout: 245 seconds)
[10:53:57] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[10:57:26] *** Quits: hnOsmium0001 (uid453710@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:05:36] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:3249:a18c:9f3b:8634)
[11:10:25] *** Quits: swn (~sweeney@user/swn) (Ping timeout: 252 seconds)
[11:16:22] *** Joins: kogepan (~kogepan@user/kogepan)
[11:17:28] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[11:20:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[11:21:49] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:22:21] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:22:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:36:05] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[11:36:31] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:34] *** Joins: parv (~quass@user/parv)
[11:38:53] *** Joins: mat001 (~mat001@213.143.69.121)
[11:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:50] *** Quits: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 268 seconds)
[11:50:38] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[11:53:51] *** Joins: Haxxa (~Haxxa@122-199-44-188.ip4.superloop.com)
[11:54:44] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[11:54:49] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:54:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[11:54:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[11:54:52] *** Joins: wroathe (~wroathe@user/wroathe)
[11:55:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[11:58:03] *** Gustavo6046_ is now known as Gustavo6046
[11:58:44] *** Quits: Haxxa (~Haxxa@122-199-44-188.ip4.superloop.com) (Remote host closed the connection)
[12:00:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[12:01:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[12:01:53] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a181:b695:2f41:75aa)
[12:08:39] *** Joins: src (~src@user/src)
[12:15:29] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[12:19:29] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[12:19:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[12:21:41] *** Joins: Snyp (~Snyp@49.207.212.233)
[12:21:42] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:24:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:27:14] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: Textual IRC Client: www.textualapp.com)
[12:28:39] *** Joins: Haxxa (~Haxxa@122-199-44-254.ip4.superloop.com)
[12:37:35] *** Quits: falafel (~falafel@2603-8000-d800-688c-c469-52c4-b20d-779e.res6.spectrum.com) (Ping timeout: 264 seconds)
[12:42:04] *** Joins: Snyp (~Snyp@49.207.212.233)
[12:42:05] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[12:42:23] *** Quits: Haxxa (~Haxxa@122-199-44-254.ip4.superloop.com) (Ping timeout: 264 seconds)
[12:45:57] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[13:02:50] *** Joins: rundown (~eb0t@90.212.144.152)
[13:03:14] *** Joins: teut (~teut@182.68.178.118)
[13:04:21] <teut> https://dpaste.org/SfbP  , how to make this function better ?  I dont like that boolToInt
[13:04:50] <efdee> hard to say not knowing what boolToInt does
[13:04:56] <teut> boolToInt just converts boolean to int
[13:05:03] <teut> true  -> 1 , false 0
[13:05:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:05:37] <teut>  if (bool === true)            return 1;        else            return 0;
[13:06:16] <efdee> where does 'professionals' come from?
[13:06:22] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:06:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:06:29] <teut> let professionals = 0
[13:06:51] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[13:06:52] <efdee> global variable? or closure?
[13:07:30] <teut> local variable in a function component in react otherwise global to this fuction
[13:07:41] <pavonia> I think (young_male ? t.young_male_count : 0) etc. would be more readable
[13:08:14] <teut> and do it for all?
[13:08:24] <teut> or manybe many if statements
[13:08:30] <efdee> what is t.young_male_count set to if young_male is false?
[13:08:40] <pavonia> For all, yes
[13:08:42] <efdee> 0? undefined?
[13:08:47] <teut> hey its a calculation effdee
[13:09:12] <efdee> yes, but if t.young_male == false, what's the value in t.young_male_count?
[13:09:14] <teut> if its 0 we dont add which is equivalent  of multiply by 0 and add 0
[13:09:32] <teut> wait
[13:09:42] <teut> t.young_male is an integer
[13:09:53] <teut> boolToInt(young_male)
[13:09:59] *** Quits: rundown (~eb0t@90.212.144.152) (Ping timeout: 264 seconds)
[13:10:03] <teut> young_male  is the bool
[13:10:05] <efdee> yes, but if young_male == false, what's the value in t.young_male_count?
[13:10:14] <efdee> it's not a hard question, please answer it
[13:10:32] <teut> it can be anything but since yyou will multiply it by 0
[13:10:42] <teut> its value will not be added to professionals
[13:10:52] <efdee> that's not what i'm asking
[13:10:57] <pavonia> lol
[13:11:07] *** Joins: rundown (~eb0t@90.210.94.119)
[13:11:21] <teut> you mean console log it?
[13:11:52] <efdee> i'm just asking you. i assume you know your data. what is stored in t.young_male_count if young_male is false?
[13:12:03] <efdee> is t.young_male_count == 0? is t.young_male_count not set? ...
[13:12:15] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:12:42] <teut> no, this data comes from api
[13:12:54] <teut> I am refactoring the code
[13:13:04] <pavonia> I guess if it were 0, the bools wouldn't be necessary at all
[13:13:09] <teut> its not my code but I saw the data
[13:13:11] <teut> it was int
[13:13:14] <efdee> pavonia: indeed
[13:13:24] <efdee> pavonia: or it could be undefined in which case we could just ||0 it
[13:13:39] <pavonia> Right
[13:13:44] <efdee> hence me asking
[13:13:53] <teut> v
[13:13:55] <teut> https://dpaste.org/aeS1
[13:14:15] <teut> it will be a number always , you can assume this
[13:14:29] <efdee> teut: can you show us an example set of data? preferably with some of the booleans set to false?
[13:14:29] <teut> its just a simple calculation step
[13:14:33] <teut> ok
[13:14:34] <efdee> actual data, not something you created yourself
[13:14:44] <teut> you can see the original data
[13:14:47] <teut> no prob
[13:14:56] <teut> hosted on github publically
[13:15:14] <teut> https://gist.githubusercontent.com/tejasborkar74/83de5c3d9bb53ea2a87aec538b5642ad/raw/9a22674d3a3e612ad254776589f9f113e1dd717e/CASE2
[13:16:35] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 264 seconds)
[13:17:55] <efdee> oh i see. young_male is not actually part of the data, only the count.
[13:19:29] <efdee> either one of these versions would work: https://pastebin.com/NfUfVGhS
[13:20:44] <teut> first one looks better , thanks
[13:21:09] <teut> oh ya , sorry , yes  young_male/female  etc  is a prop
[13:21:11] <sickdyd> teut: I'd desctructure `t` in `function calculateProfessionals(t) {`
[13:21:22] <teut> ya, I too want to
[13:21:40] <teut> but as I told I was refactoring so I need to focus on bigger parts first
[13:21:51] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:21:52] <teut> I dont even know what t is
[13:22:12] <sickdyd> teut: sounds like `t` needs a better naming :>
[13:22:29] <teut> I know , but refactoring will be done in stages
[13:22:38] <efdee> restructuring here would create more confusion imo. you'd have a harder part telling parts of the data (t.*) apart from the non-data (old_male, ...)
[13:23:07] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:23:31] <teut> so is then the boolToInt thing right as it is?
[13:23:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:24:00] <efdee> my versions don't use boolToInt at all
[13:24:22] <teut> ya , I will remove this bool to int thing
[13:24:26] <sickdyd> teut: maybe for clarity you could divide that big sum to multiple sums
[13:24:41] <teut> ya like efdee has done
[13:24:48] <sickdyd> ah, sorry, didn't see that
[13:25:23] <teut> even this function is bad since it says something and does something else additionsally
[13:25:28] <teut> additionally*
[13:26:36] <teut> what could be the name of it?
[13:28:47] <efdee> i hate naming things
[13:29:26] <efdee> conditionallyAddValuesFromDataToProfessionalsObject
[13:29:26] <efdee> ;-)
[13:30:59] *** Quits: rundown (~eb0t@90.210.94.119) (Ping timeout: 264 seconds)
[13:32:23] *** Joins: rundown (~eb0t@90.196.142.168)
[13:35:17] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[13:36:17] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[13:38:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[13:38:53] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:41:25] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[13:42:27] <teut> lol efdee , I too renamed it to that and then undo-ed it
[13:44:18] <theskillwithin> https://youtu.be/vKJ895IUbDw
[13:44:18] <skillbot> YouTube Title: Courtney Barnett - Hopefulessness (Live from Piedmont Park)
[13:49:43] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[13:49:55] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 252 seconds)
[13:54:05] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Read error: Connection reset by peer)
[13:56:12] *** Joins: src_ (~src@user/src)
[13:56:16] *** Quits: src_ (~src@user/src) (Remote host closed the connection)
[13:56:47] *** Joins: caef^ (~caef@70.166.66.234)
[13:58:51] <teut> in js  when we assign things, is it a reference to the object  or a copy is created?
[13:59:09] <teut> let a  = [78, 78]  , let b = a;
[13:59:47] *** Quits: src (~src@user/src) (Ping timeout: 264 seconds)
[14:00:02] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[14:01:41] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[14:02:13] *** Joins: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com)
[14:04:46] <efdee> teut: reference for objects and arrays, copies for primitives (number, string, ...)
[14:05:05] <teut> hmm, ok
[14:05:06] *** Quits: xiongxin_ (~quassel@113.116.33.28) (Ping timeout: 245 seconds)
[14:05:22] <parv> n> a= [ 1, 2] ; let b = a; b[0] = 3; a
[14:05:22] <teut> and how do you create copy for objects?
[14:05:23] <jellobot> (okay) [ 3, 2 ]
[14:05:53] <teut> in python we got copy module
[14:06:07] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:06:28] <teut> b = copy(a)    , b  is no more reference to a's object
[14:06:58] <efdee> there's a bunch of libraries that do something like that, but deep copies can be tricky (eg. if you have circular references)
[14:07:22] <efdee> lodash.clonedeep, just-clone, ...
[14:07:24] <teut> oh , yes I have heard of it
[14:07:36] <sickdyd> teut: for arrays you can use newArray = [...array]
[14:07:40] <efdee> you can use b = {...a} but that will only create a shallow copy
[14:07:52] <teut> ah yes , destructing , I learned that in react
[14:08:07] <teut> shallow, I didn't know that
[14:08:34] *** Quits: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com) (Quit: Haxxa flies away.)
[14:08:39] <sickdyd> teut: checkout underscore: https://underscorejs.org/#clone
[14:08:45] <efdee> b = {...a} ===> a !== b but a.blah === b.blah
[14:08:59] <efdee> better to use lodash than underscore imo
[14:09:17] <sickdyd> efdee: ah yeash sorry, I meant to say lodash
[14:09:23] <teut> are you sure that the copy is shallow?
[14:09:25] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-067.46.114.pool.telefonica.de)
[14:09:41] <sickdyd> teut: if you google how to clone js objects you'll find a ton of stuff
[14:09:51] <teut> ya , I was doing that
[14:09:51] <sickdyd> it's not as easy as it looks
[14:09:52] <efdee> teut: the {...copy} is shallow yes
[14:10:06] <efdee> it all depends on your situation and the object you're trying to copy
[14:11:00] *** Joins: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com)
[14:11:06] <teut> whats the difference in shallow and deepcopy here?
[14:11:34] <teut> in python shallow just shares the metadeta
[14:11:48] <teut> https://dpaste.org/zEU5
[14:13:16] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[14:16:06] <stenno> deep copy tends to be code smell
[14:17:24] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:18:23] <teut> where is it written?
[14:18:29] <teut> in which book?
[14:19:01] <teut> but it should be because its so hard
[14:19:14] <teut> and external libraries are required
[14:20:20] *** Quits: Haxxa (~Haxxa@122-199-44-32.ip4.superloop.com) (Ping timeout: 265 seconds)
[14:22:55] <parv> Is it possible to run|test code snippets outside of here? "/msg jellobot" & "/msg n>" did not work
[14:26:56] <teut> https://dpaste.org/h1Dr   anyway to make this piece of code cleaner and reduce number of lines?
[14:27:50] <teut> basically replace those loops
[14:27:57] <teut> with  forEach or something
[14:28:07] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:28:53] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[14:28:59] <teut>   var temp_arr = Array.from({ length: total_bio_markers }, val=>val);  this is maybe one
[14:29:13] *** Quits: Snyp (~Snyp@49.207.212.233) (Client Quit)
[14:31:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[14:32:01] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:33:30] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:35:01] *** Joins: xiongxin (~quassel@113.116.32.200)
[14:35:42] *** Quits: Snyp (~Snyp@49.207.212.233) (Client Quit)
[14:35:51] *** Joins: src (~src@user/src)
[14:36:11] *** Joins: Snyp (~Snyp@49.207.212.233)
[14:38:28] <wez> teut: nah, use let or const imo
[14:39:04] <teut> yes that I am changing consistenly
[14:39:37] <teut> changing to*
[14:41:43] <wez> :)
[14:41:49] <teut> https://dpaste.org/VbLm
[14:42:22] <teut> now this code is lying and refactoring an if else, is pretty dangerous
[14:42:32] <teut> what can I do to clean this?
[14:42:58] <teut> the intend might be to use   multiple if's only
[14:43:10] <teut> I dont know if these if else are mutually exclusive
[14:46:16] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:47:59] *** Joins: thojanssens (~thojansse@ptr-178-51-45-168.dyn.mobistar.be)
[14:48:23] <parv> teut, create a dispatch table with sort funcitons as values; keys would be *hand waves* the variables/values(?) being tested
[14:48:47] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:48:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:49:14] <teut> ya but I will need to know the intend  of the people who made the system
[14:49:23] <teut> and they are not in the company
[14:49:41] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:51:12] <parv> The code shown sure shows each else-if to be mutually exclusive, or rather in a preferred order of tests
[14:51:43] <parv> ... first match wins
[14:51:57] <teut> ya
[14:52:21] <teut> now whats a dispatch table?
[14:52:23] <fakuve> Hi guys , I have been trying to sync this animations with an own method I created by delaying the execution of the code to the next second split . The function works when executed with a simple function (the one that delays the execution of code) but it doesnt work when putting it together with a `.classList.toggle()` if anyone can give me his/her thoughts... https://jsfiddle.net/746hwvpd/
[14:52:24] *** Joins: pulse (~pulse@user/pulse)
[14:52:25] <fakuve> thanks
[14:52:28] <teut> is it a big switch statement?
[14:52:45] <teut> or dictionary with mapping?
[14:52:58] <teut> mapping to functions*
[14:52:59] <parv> dict (python)
[14:53:14] <teut> ok  ,thanks  , will try it
[14:53:16] <parv> or "associated array"
[14:53:33] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[14:54:23] <teut> https://dpaste.org/UwN1   I m getting this error again and again
[14:54:41] <teut> sometimes in that dispatchSort  function, now in this pUp
[14:54:51] <teut> js does the hosting right?
[14:55:00] *** Quits: xiongxin (~quassel@113.116.32.200) (Ping timeout: 268 seconds)
[14:55:06] <teut> so why I m getting this access before initialization
[14:56:50] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:58:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:59:53] <teut> https://dpaste.org/NZy6   oh now I brought everything  up before using usestate
[14:59:57] <teut> ok*
[15:00:13] <teut> now I get pUp is not defined when it is
[15:00:13] *** Joins: jmft2_ (~jmft2@213.31.248.255)
[15:03:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[15:04:16] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[15:08:39] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:11:09] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:12:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[15:15:14] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:15:28] *** Joins: Snyp (~Snyp@49.207.212.233)
[15:16:49] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:21:10] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 260 seconds)
[15:21:54] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:23:00] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:24:16] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:3249:a18c:9f3b:8634) (Ping timeout: 245 seconds)
[15:29:20] *** Joins: voltage_ (voltage@user/voltage)
[15:29:58] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 252 seconds)
[15:33:27] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:34:45] *** Joins: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net)
[15:36:43] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:38:16] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:3546:be8e:e7b8:5f67) (Ping timeout: 252 seconds)
[15:40:20] <efdee> teut: shallow vs deep copy is pretty well documented all over the internet
[15:40:32] <teut> nope, its never clear
[15:41:02] <teut> meta data they cover the thing  with
[15:41:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[15:43:30] *** Joins: dreamreal (~dreamreal@about/java/dreamreal)
[15:45:05] *** Joins: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com)
[15:45:23] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[15:46:31] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[15:46:49] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:47:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:49:01] *** Joins: pluri (~pluri@user/pluri)
[15:50:14] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[16:00:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:01:01] *** Quits: audiocat (~audio@2603-8081-1800-1546-569f-5b62-b4a9-4493.res6.spectrum.com) (Ping timeout: 265 seconds)
[16:01:25] *** Joins: tga (~tga@p54a754f5.dip0.t-ipconnect.de)
[16:01:25] *** Quits: tga (~tga@p54a754f5.dip0.t-ipconnect.de) (Changing host)
[16:01:25] *** Joins: tga (~tga@user/tga)
[16:01:25] *** Quits: rooo (~gjsgjsag@109-186-219-9.bb.netvision.net.il) (Read error: Connection reset by peer)
[16:01:44] *** Joins: rooo (~gjsgjsag@109-186-219-9.bb.netvision.net.il)
[16:05:39] *** Quits: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[16:08:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:11:02] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[16:12:11] *** Quits: thojanssens (~thojansse@ptr-178-51-45-168.dyn.mobistar.be) (Remote host closed the connection)
[16:12:12] *** Joins: thojanssens_ (~thojansse@ptr-178-51-45-168.dyn.mobistar.be)
[16:12:27] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[16:12:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[16:13:39] <teut> https://dpaste.org/NKyH  should I use a class to handle this code?
[16:14:10] <teut> class inside a  hooks function
[16:17:01] *** Joins: audiocat (~audio@2603-8081-1800-1546-b8ca-8a53-a084-61fd.res6.spectrum.com)
[16:17:46] <efdee> to handle what, exactly?
[16:22:28] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[16:22:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:24:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:24:36] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:26:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:27:23] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[16:32:47] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[16:37:17] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[16:39:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:41:53] *** Joins: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de)
[16:42:18] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[16:42:29] <qswz> there must be a better way:
[16:42:36] <qswz> window.location.href = window.location.pathname + (sp.keys().next().done ? '' : `?${sp}`);
[16:42:53] <qswz> where sp is a URLSearchParams
[16:43:22] <qswz> window.location.href = window.location.pathname + (`${sp}` ? '' : `?${sp}`);
[16:43:28] <qswz> variant 1
[16:43:47] <qswz> already looks better no?
[16:44:14] <qswz> hmm I think I know a better X way
[16:44:43] <qswz> const sp = new URLSearchParams(window.location.search);sp.delete('market'); window.location.href = window.location.pathname + (`${sp}` ? '' : `?${sp}`);
[16:44:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[16:44:51] <qswz> will be replaced by:
[16:45:36] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[16:45:44] <qswz> const url=new URL(window.location); url.searchParams.delete('market'); window.location.href = url
[16:45:57] <qswz> const url=new URL(window.location); url.searchParams.delete('market'); window.location.replace(url);
[16:46:04] <qswz> thanks guys
[16:46:05] *** Joins: jess (~jess@libera/staff/jess)
[16:46:23] *** Joins: WishBoy (~WishBoy@user/wishboy)
[16:47:46] *** Joins: xiongxin (~quassel@113.116.33.28)
[16:48:02] <qswz> 'abc'.match(/\d(\d)/d)
[16:48:07] <qswz> n> 'abc'.match(/\d(\d)/d)
[16:48:07] <jellobot> (okay) null
[16:48:21] <qswz> n> '123'.match(/\d(\d)/d)
[16:48:22] <jellobot> (okay) [ '12', '2', index: 0, input: '123', groups: undefined, indices: [ [ 0, 2 ], [ 1, 2 ], groups: undefined ] ]
[16:49:04] *** Quits: Snyp (~Snyp@49.207.212.233) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:50:26] <qswz> n> class A { #x = 2 } let a = new A(); 'x' in a
[16:50:27] <jellobot> (okay) false
[16:51:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:52:01] *** Joins: bomb (~bomb@user/bomb)
[16:52:34] <qswz> n> class A { #x = 2 } let a = new A(); '#x' in a
[16:52:35] <jellobot> (okay) false
[16:55:11] <qswz> n> class A { #x = 2 static foo(o){ return #x in o; } } A.foo(new A())
[16:55:11] <jellobot> (fail) SyntaxError: Unexpected strict mode reserved word
[16:55:49] <qswz> not yet in bot https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in#private_fields_and_methods
[16:56:24] <qswz> n> 'abc'.at(-1)
[16:56:25] <jellobot> (okay) 'c'
[16:56:39] <qswz> b> class A { #x = 2 static foo(o){ return #x in o; } } A.foo(new A())
[16:56:40] <jellobot> An async internal error occured: Missing semicolon (1:17)
[16:57:02] <qswz> b> class A { #x = 2; static foo(o){ return #x in o; }; }; A.foo(new A())
[16:57:03] <jellobot> (okay) true
[16:57:58] <qswz> n> ({}).hasOwn
[16:57:59] <jellobot> (okay) undefined
[16:58:12] <qswz> nb> ({}).hasOwn
[16:58:15] <qswz> b> ({}).hasOwn
[16:58:16] <jellobot> (okay) undefined
[16:58:55] <stenno> n> [...new URL('https://google.com/foo?bar=23').searchParams)]
[16:58:56] <jellobot> (fail) SyntaxError: Unexpected token ')'
[16:59:04] <stenno> n> [...new URL('https://google.com/foo?bar=23').searchParams]
[16:59:05] <jellobot> (okay) [ [ 'bar', '23' ] ]
[16:59:25] <qswz> n> Object.fromEntries(new URL('https://google.com/foo?bar=23').searchParams)
[16:59:26] <jellobot> (okay) { bar: '23' }
[17:00:43] <qswz> https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color
[17:00:47] <qswz> check this out
[17:01:49] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[17:02:30] <qswz> https://github.com/tc39/proposal-class-static-block wat
[17:02:52] <chovy> gde33: yes
[17:03:00] <qswz> they should have use do operator
[17:05:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 245 seconds)
[17:06:12] <qswz> I use 0.1% of all those class features
[17:06:30] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:06:34] <qswz> barely use class at all
[17:06:43] *** Quits: dreamreal (~dreamreal@about/java/dreamreal) (Quit: dreamreal)
[17:08:55] <stenno> who uses classes in 2021
[17:09:01] <ThePendulum> classholes
[17:09:20] <qswz> it's annoying window.location doesn't have searchParams
[17:10:14] <ThePendulum> ok that /is/ annoying
[17:10:38] <ThePendulum> at least you can just do new URL(window.location)
[17:10:40] <qswz> I think that's because it's a live object
[17:11:23] <qswz> mutating location.searchParams would reload, which would be even more annoying
[17:11:36] <stenno> lol
[17:11:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:11:42] <qswz> if you need to batch more changes
[17:12:02] *** Joins: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:13:26] <stenno> async iterators don't really help here i think
[17:13:35] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[17:13:51] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 265 seconds)
[17:15:52] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[17:16:16] <ThePendulum> maps allowed https://www.geoguessr.com/challenge/5cLZFCUJzMLE1qIt
[17:16:16] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[17:17:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[17:18:21] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:18:34] <qswz> can you make an AI for geogueesr
[17:18:49] <qswz> should work decently
[17:18:50] *** Quits: src (~src@user/src) (Quit: Leaving)
[17:19:09] *** Joins: src (~src@user/src)
[17:20:40] <qswz> Salary: $ 115-120,00 + 25% Share options
[17:20:48] <qswz> what does this mean?
[17:21:04] <stenno> something about stock
[17:21:08] <qswz> $115 per hour? $115k per year?
[17:21:20] <stenno> oh i see now lol
[17:21:20] <qswz> I man the first part
[17:21:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:22:01] <qswz> man 120k doubles my cuurent pay
[17:22:10] <stenno> that'd be a wage and not a salary right
[17:22:10] *** Quits: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[17:22:14] <stenno> if it was hourly
[17:22:21] <efdee> they need to learn how to write numbers if they meant $115k though
[17:22:23] <qswz> yea, I'd pay tax ofc
[17:22:33] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-067.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[17:22:34] <qswz> stenno: good point
[17:22:35] <stenno> 120k sounds indeed juicy for european standards
[17:22:36] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:22:46] <teut> how much experience does it requires to get that much money?
[17:23:06] <stenno> depends on your employer
[17:23:15] <efdee> you have to be good at negotiation :-)
[17:23:26] <stenno> if you are freelancing and well-networked, you can do it just by yourself without problems
[17:23:30] <efdee> 120k/y is not a european wage for a developer
[17:23:37] <stenno> nope
[17:23:44] *** Joins: onosendi (~onosendi@user/onosendi)
[17:23:45] <efdee> doesn't matter how good you are, 10k/m is not a salary you get unless you're a high end manager
[17:23:52] <teut> 14 lakh  to dollars       ->  14 lakh  to dollars    , this is what companies to freshers
[17:24:00] <teut> 19,990.66 United States Dollar
[17:24:10] <qswz> it is though, it's a London company DeversiFi*
[17:24:18] <teut> 14 lakh ctc   , in year
[17:24:30] <qswz> I declined tjo, because can't leave my buds for now
[17:24:30] <teut> this was for NCR corporation
[17:24:32] <efdee> why is a london company showing wages in dollars
[17:24:50] <qswz> efdee: weird, I know
[17:24:58] <efdee> also depends on if it's a salaried position or freelance
[17:25:14] <teut> how do you find clients in freelancing?
[17:25:19] <stenno> decentralized exchange == unregulated
[17:25:37] <qswz> one of you can try to apply, if ya want
[17:25:57] <qswz> stenno: means bad?
[17:25:58] <stenno> thats so weird
[17:26:02] <teut> like I know c, c++, js , python,     I know I know a lot less than you  but I have no specialization
[17:26:21] <stenno> i really don't trust anything which is built upon an etherium smart contract
[17:26:45] <teut> how to earn atleast first  salary?
[17:26:50] <qswz> me neither
[17:27:16] <qswz> anything blockchain smells too foreign to me
[17:27:40] <stenno> blockchain itself is cool
[17:27:53] <stenno> doing money business on the blockchain can be cool too
[17:28:15] <Donitz> the pokemon company needs to create a blockchain game
[17:28:19] <stenno> using the blockchain to build an exchange especially on ethereum seems really insane
[17:28:30] <onosendi> stenno: have you heard anymore, or done anymore research since our last convo regarding Web3?
[17:28:31] <teut> on its 25th anniversary ?
[17:28:34] <qswz> I'm just doing versioning over the blockchain (git)
[17:28:42] <stenno> onosendi: nope
[17:28:49] <stenno> qswz: yep
[17:29:05] *** Joins: Guest62 (~Guest62@p200300c8cf2dff000b002de1588c90bd.dip0.t-ipconnect.de)
[17:30:43] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:30:59] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 264 seconds)
[17:31:12] <qswz> teut: start small
[17:31:53] *** Joins: Intelo (~Intelo@88.244.94.240)
[17:32:00] <Intelo> Hi,
[17:32:01] <qswz> today, I went to the market, grabbed many leek leaves for free at the end, and helped the guys, got paid 2€ I tried to refuse but didn't work
[17:32:07] <teut> like what? I took an internship and for making full website this guy paid me only 8k rupees indian currency
[17:32:09] <Intelo> Can anyone see these lines: https://pastebin.mozilla.org/vr6ynGxv#L33,52
[17:32:16] <efdee> teut: wrt finding clients, for me it's mostly about my network
[17:32:33] <efdee> teut: there's also companies that can help you find customers. but word of mouth works best
[17:32:47] *** Quits: audiocat (~audio@2603-8081-1800-1546-b8ca-8a53-a084-61fd.res6.spectrum.com) (Ping timeout: 264 seconds)
[17:33:06] *** Joins: tex (~super@user/dix)
[17:33:10] <teut> people want fast delivery and giving less money
[17:33:24] <qswz> Intelo: DefinitelyTyped?
[17:33:27] <Intelo> teut thats a universal problem
[17:33:34] <qswz> there are many types there
[17:33:39] <Intelo> qswz what do you mean?
[17:34:04] <qswz> id={props.id}
[17:34:08] <qswz> https://definitelytyped.org/
[17:34:26] <teut> even if you know a whole lot of js  , you cant make the company website with 5 pages alone in 2 weeks
[17:34:32] <teut> these guys said me to do it
[17:34:47] <qswz> typescriptlang.org/dt/search?search=
[17:34:51] <teut> and I m just starting out
[17:34:55] <efdee> creating a company website usually doesn't involve a lot of js
[17:35:01] <efdee> it's more about webdesign at that point
[17:35:15] <teut> https://niroggyan.netlify.app/
[17:35:21] <teut> this they paid 8k for
[17:35:29] <teut> ok , it does
[17:35:47] <teut> I mean , sometimes it does
[17:35:49] <bomb> I'd do it for 9k
[17:35:55] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:36:08] <teut> what the heck
[17:36:16] <teut> 9k rupees
[17:36:18] <teut> not dollars
[17:36:22] <teut> and in 2 weeks
[17:36:24] <Intelo> qswz that will help me find types of libs that do exist. Not the ones that were never made.
[17:36:36] <Intelo> qswz so it might solve problem #4
[17:36:44] <bomb> that's 100 bucks teut
[17:36:53] <Intelo> qswz what about other problems and overall vote of yours?
[17:36:59] <teut> ok
[17:37:00] <qswz> when they don't exist, make a PR
[17:37:04] <efdee> can't compare indian wages to european to american
[17:37:06] <Intelo> qswz is ti worth banning ...spread fully ?
[17:37:10] <teut> what can you buy in 100 bucks?
[17:37:17] <bomb> a wordpress theme, I guess
[17:37:20] <efdee> cost of living is important
[17:37:22] <teut> hmm
[17:37:30] <teut> I was given the design
[17:37:32] <qswz> Intelo: would be unconvenient, I vote for banning TS
[17:37:35] *** Quits: thojanssens_ (~thojansse@ptr-178-51-45-168.dyn.mobistar.be) (Ping timeout: 268 seconds)
[17:37:38] <bomb> or bootstrap theme, I don't know
[17:37:39] <teut> that too not in one shot
[17:37:52] <Intelo> qswz oh so banning TS as a whole/ fully is your vote?
[17:37:54] <teut> and I did made the changes etc
[17:37:57] <qswz> for 20€ I can buy 5/6kg of dates
[17:38:01] <bomb> you don't have to start from scratch anyway. just style Boobtrap with the given colors and fonts
[17:38:03] <Intelo> qswz you would go with having ...spread instead?
[17:38:06] <efdee> banning ts, lol
[17:38:11] <qswz> Intelo: yep
[17:38:17] <teut> so finding a decent client who would pay something decent is so much tough
[17:38:23] <efdee> bomb: boobtrap :D
[17:38:33] <teut> finding who will pays that much will be very hard
[17:38:48] <Intelo> ok. I guess all here would agree? ( efdee , bomb )/
[17:38:59] <efdee> agree with what?
[17:39:13] <Intelo> efdee to use ..spread and not use ts at all https://pastebin.mozilla.org/vr6ynGxv#L33,52
[17:39:14] <bomb> bats are basically foxes, yeah. I agree with that
[17:39:20] <efdee> Intelo: absolutely not
[17:39:22] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[17:39:33] <efdee> Intelo: i write TS almost exclusively
[17:39:37] <teut> https://www.gobankingrates.com/saving-money/shopping/12-craziest-ways-spend-100/
[17:39:40] <efdee> if i have a choice, that is
[17:39:48] <teut> you can buy land in scotland for 100 bucks
[17:39:53] <teut> thats interesting
[17:40:06] <efdee> yes but it's like 3 square centimeters of land
[17:40:45] <Intelo> efdee oh ok. so I guess if you type in typescript && in react, then what would be your vote for the highlighted problem lines? https://pastebin.mozilla.org/vr6ynGxv#L33,52
[17:40:48] <teut> lol, ants can make colony there
[17:41:33] <efdee> Intelo: either they have types, or they don't. if they have types, use them. (always check with npm @types/*). if they don't have types, try to define it yourself or use 'any'.
[17:41:42] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:41:56] <teut> if you pick up a good 3 sq cm  , then you might be paid a lot for that iin future
[17:43:17] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[17:43:32] <efdee> Intelo: as for the props spread warning, decide for yourself if you agree with the warning. if you do, just write id={props.id} name={props.name} className={props.className}
[17:46:32] <onosendi> Props spreading warning is silly, especially if you're building a lot of reusable components. I normally just disable it.
[17:48:12] <Intelo> efdee what would go wrong if I use ...spread?
[17:49:12] <Intelo> other than any warning, can it break functionality?
[17:49:19] <efdee> Intelo: nothing per se, the code is just not being very clear about what the developer was meaning to pass through when it was written
[17:49:48] <efdee> Intelo: if you later add a property to TestCompProps because TestComp needs it (but SomeComp doesn't), that could get confusing
[17:49:54] <Intelo> efdee well, it can be any prop or functionality in the world. We should not limit our selves to my example
[17:50:01] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:50:02] <efdee> but it's a matter of opinion i guess
[17:50:03] <Intelo> so it needs not to be clear
[17:50:15] <efdee> i like my code to be clear about the intention of the developer
[17:50:37] <Intelo> efdee which means exactly what?
[17:50:47] <efdee> yes
[17:50:49] <Intelo> which means ...spread will loose clarity?
[17:50:54] <Intelo> and you don't like it?
[17:51:07] <Intelo> as it would make things not so clear about developer's intentions?
[17:51:14] <efdee> indeed
[17:51:15] <Intelo> did I uderstood correctly?
[17:51:18] <Intelo> hm..
[17:51:22] <Intelo> ok..!
[17:51:25] <efdee> the only instance where i would use props spread
[17:51:39] <efdee> is if TestComp and SomeComp use the same property interface
[17:51:50] <efdee> so that would mean const TestComp = (props: SomeCompProps)
[17:52:11] <efdee> that way you're always sure that TestComp and SomeComp use the same properties and there can be no confusion about it
[17:52:28] <Intelo> I am thinking and trying to understand what you said here: " if you later add a property to TestCompProps because TestComp needs it (but SomeComp doesn't), that could get confusing"
[17:52:52] <Intelo> efdee ok on your last message
[17:53:09] <efdee> literally what i said. at the moment you write the code, TestCompProps and SomeCompProps are the same. so you use the spread operator because you're lazy.
[17:53:16] <efdee> but who is to say that they will always be the same?
[17:53:31] <Intelo> hm..
[17:53:36] <onosendi> efdee: you would explicitly list every default html attribute, including arias, to every component?
[17:54:31] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[17:54:32] <efdee> onosendi: i don't often find myself in a position where i need to do such a thing, to be honest.
[17:54:43] <onosendi> efdee: gotcha
[17:54:52] <efdee> onosendi: can you post an example of where you think it's a good idea?
[17:57:08] *** Quits: peirik (~peirik@84.215.176.70) (Quit: WeeChat 2.8)
[17:58:05] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:d25b:1340:f3ad:1e10)
[17:58:28] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:d25b:1340:f3ad:1e10) (Changing host)
[17:58:28] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[17:59:30] <Intelo> efdee thanks!
[17:59:47] *** Quits: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Ping timeout: 264 seconds)
[17:59:53] <onosendi> efdee: I'd do it for something like a button, where I want to catch only a few props, but there could possibly be a lot more, including aria's: https://dpaste.org/FOZq
[18:01:35] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[18:02:45] <efdee> onosendi: i wouldn't write that, since now whoever uses Button has no idea whatsoever about what the supported props are
[18:04:01] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[18:04:15] <efdee> onosendi: which doesn't make it /wrong/ per se. i just like my things to be self documenting
[18:04:32] <onosendi> efdee: hmm, `[Index: string]: any` kills the typing for all of the other props :/ I'm just getting into TS myself.
[18:04:48] <bomb> TypoSkript
[18:06:09] <onosendi> I hear you though. One option would be don't spread props, and every time you need a new attr throughout your application just go and add it.
[18:06:40] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[18:07:16] <stenno> if you use 'any' you are doing it wrong most likey
[18:07:29] <onosendi> stenno: indeed.
[18:08:52] <efdee> onosendi: interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> { ... } is probably better
[18:09:32] *** Quits: xiongxin (~quassel@113.116.33.28) (Read error: Connection reset by peer)
[18:09:57] *** Joins: xiongxin (~quassel@113.116.224.79)
[18:10:31] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[18:11:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:11:33] <efdee> onosendi: eg. like this: https://pastebin.com/kL5rn5x8
[18:12:05] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[18:12:06] <efdee> (i don't have react/vscode on this machine so didn't actually test that)
[18:15:57] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:20:40] <onosendi> efdee: hmm, no complaints about passing a function that should be a string: https://dpaste.org/uPUN
[18:20:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[18:22:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:22:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:22:00] *** Joins: wroathe (~wroathe@user/wroathe)
[18:23:43] <Intelo> efdee is there a lint rule or some way that would not give me error if props of both components are same and I sue ...spread but it "would" give me error if props are not same and I use ...spread?
[18:24:05] <Intelo> I asked this because I don't want to use //eslint overrides all over the place nor allow them
[18:26:59] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:28:12] *** Joins: Naan (~naan@user/naan)
[18:28:48] <efdee> onosendi: TS definitely gives me a complaint about that
[18:29:11] <efdee> onosendi: Type '() => void' is not assignable to type 'string'. ts(2322)
[18:29:36] <efdee> Intelo: i think that is too much to ask from a linter rule, but maybe i'm wrong.
[18:30:21] <Intelo> efdee ya , I wonder what you would do other than overriding eslint rule in this case?
[18:30:40] <efdee> onosendi: unrelated, if you type your component as React.FC<TProps> you don't need to add the 'children' prop to your PropType, it's implicit
[18:30:46] <efdee> Intelo: i would not use a spread operator in the example that you gave
[18:31:14] <Intelo> but you said if props of both are same, you would use ...spread
[18:31:49] <efdee> i said if you're actually using the same props class. not just that they are the same at a given point in time.
[18:31:55] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:32:19] <Intelo> same props class?
[18:32:54] <efdee> same props itnerface, whatever. so not SomeCompProps and TestCompProps. just a single interface that they both use so you _know_ it'll remain the same.
[18:33:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:33:11] <efdee> and i guess in that case i would disable the spread lint rule
[18:33:18] <efdee> like i said, it doesn't happen often that i need it
[18:36:57] <Intelo> I se
[18:37:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[18:37:44] *** night_wulfe__ is now known as night_wulfe
[18:38:32] <Intelo> efdee so you mean if total are 12 props.  AComp uses 10 and calls BComp with 1={1} 2={2} ...props={remaining 10}.. In this case, A and B do not use "same" props
[18:40:58] <efdee> yes
[18:41:27] <Intelo> great. by the way, I got your idea from "same props itnerface, whatever. so not SomeCompProps and TestCompProps. just a single interface"
[18:42:26] <Intelo> efdee my fellow dev says, other than being explicit and typing too much, there is no harm if we use spread. I wonder what else to tell him. I think he is is afraid to type so much more for types :)
[18:44:46] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[18:46:41] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[18:48:47] *** Joins: nomic (~nomic@185.217.117.88)
[18:48:50] <ljharb> spread is fine, and it’s an actual use case of spread to have colliding properties and spread them together
[18:49:21] <ljharb> and no, eslint can’t tell what properties two variables have, it can’t even tell they’re objects
[18:51:16] *** Quits: The_Jag_ (~The_Jag@host-80-180-125-109.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[18:56:58] <ThePendulum> spread them together heh
[18:57:01] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-216.46.114.pool.telefonica.de)
[18:57:23] <mikrosis> oh my god - ionic framework is the most awesome thing that happened since sliced bread :O
[18:57:46] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:47] <Intelo> efdee and of course this would be not like having exactly same props. So spread here should NOT be used? https://pastebin.mozilla.org/T0gicbbE#L2
[18:57:49] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[18:58:13] <Intelo> ljharb for reference, it was these questions. https://pastebin.mozilla.org/vr6ynGxv#L33,52
[18:59:13] <Intelo> ljharb the main point of the discussion was to use ..spread here or not https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-spreading.md
[18:59:31] <Intelo> my fellow dev says, other than being explicit and typing too much, there is no harm if we use spread. I wonder what else to tell him. I think he is is afraid to type so much more for types :)
[18:59:37] <efdee> Intelo: like i said, it's personal opinion.
[18:59:42] <Intelo> hr argues, what harm it would give
[18:59:51] <efdee> Intelo: i would never use a spread operator to pass props to a component that it might not support
[19:00:14] <Intelo> efdee and I understand that your personal opinion is not to use ..spread until the prop interface is "exactly" same for both
[19:00:42] <efdee> unless the interface of the object you're spreading is the same or a subset of the props of the component you're passing it to
[19:01:12] <efdee> so if at some point TestCompProps has a property that SomeCompProps does not, i have a problem with just passing TestComp's props in its entirely to SomeComp
[19:01:13] <Intelo> efdee it looks like it is the subset. right? https://pastebin.mozilla.org/T0gicbbE#L2
[19:01:37] <efdee> right now it is. until you want to make SomeComp do something special (which I guess you will, else why make it a separate component).
[19:01:53] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[19:02:09] <efdee> and then maybe TestComp gets an upgrade later and adds a prop, and the prop collides with a prop in TestCompProps, and suddenly you're passing around things that you didn't want
[19:02:36] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[19:04:22] <onosendi> efdee: thanks for the info.
[19:04:56] *** Joins: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it)
[19:05:38] <Intelo> I see efdee
[19:05:56] <stenno> icfd
[19:06:24] <onosendi> efdee: here's a better example of a component that should use spread, where `Route` is from react-router-dom: https://dpaste.org/LuUg
[19:06:29] *** Joins: voltage (voltage@user/voltage)
[19:07:47] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[19:07:53] *** voltage is now known as voltage_
[19:09:43] *** Joins: trog (~trog@user/trog)
[19:10:21] *** Quits: voltage_ (voltage@user/voltage) (Client Quit)
[19:10:41] <Intelo> efdee hm.. I wonder what to do here in onosendi example
[19:12:06] *** Joins: voltage_ (voltage@user/voltage)
[19:12:15] <mikrosis> ah, interface props in react :O
[19:12:25] <mikrosis> is there an example for nested stuff, e.g. category/sub-category?
[19:13:20] <deadk> ls
[19:13:24] <deadk> oops sorry
[19:15:10] <onosendi> Intelo: When creating a component that passes props to a third-party component, you should definitely spread. Otherwise you'd have to explicitly define their props in your component, which are subject to change.
[19:15:33] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[19:16:05] <mikrosis> onosendi: lol, what you send Intelo would somehow also make sense for my question
[19:16:07] <mikrosis> :O
[19:16:25] <stenno> also there is #reactjs btw
[19:17:49] <Intelo> onosendi efdee one of someComp and TestComp can be a thirdparty comp
[19:19:50] <Intelo> https://pastebin.mozilla.org/vr6ynGxv#L33,52  https://pastebin.mozilla.org/T0gicbbE#L2,10,11  are the code files onosendi  . I kinda agree with efdee on explicit intent of dev and future upgrad/prop clash between those two components but let me know your opinion too
[19:21:14] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[19:24:20] *** Joins: xiongxin (~quassel@113.116.33.28)
[19:25:11] <Intelo> ljharb I see you contributed in https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-props-no-spreading.md  also, so as per my usecase where one of comp can be a third party lib, should I use ..spread. If I do, the rule needs to be bent. if not, I have to type more
[19:26:15] <ljharb> Intelo: yes, i maintain that plugin
[19:26:53] <ljharb> Intelo: in general i suggest not spreading props in react components, because it loses the explicit barrier, conceptually and for PropTypes, between components
[19:27:24] <Intelo> I see
[19:27:25] <ljharb> and onosendi’s advice is the opposite of mine - you SHOULD explicitly define their props in your component BECAUSE they are subject to change
[19:27:40] <Intelo> Ah I see
[19:27:42] <ljharb> explicit is better than implicit.
[19:28:21] <ljharb> you also don’t want the third party component to add a new prop and suddenly, magically, implicitly, your component’s API is expanded
[19:28:39] <ljharb> your wrapper should never support an addition to the thing being wrapped unless the wrapper explicitly adds it.
[19:28:54] *** Joins: mikrosis34 (~mikrosis@dynamic-046-114-174-216.46.114.pool.telefonica.de)
[19:29:11] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-216.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[19:30:13] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[19:32:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:33:13] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Remote host closed the connection)
[19:34:18] <Intelo> ljharb I see, wonderful advice !
[19:37:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:37:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:37:42] *** Joins: wroathe (~wroathe@user/wroathe)
[19:38:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:42:38] *** Quits: xiongxin (~quassel@113.116.33.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:43:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[19:44:23] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:48:49] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:51:41] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[19:52:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[19:54:44] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:01] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:06:55] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[20:10:06] *** Quits: trog (~trog@user/trog) (Quit: back later!)
[20:17:19] *** Joins: jazzy (~jaziz@user/jaziz)
[20:29:19] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:29:45] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[20:31:12] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[20:34:02] <efdee> pretty much exactly what i said :-)
[20:36:23] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 264 seconds)
[20:36:44] *** Quits: dante4431 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Quit: WeeChat 2.7.1)
[20:37:49] *** Joins: Tempesta (~Tempesta@user/tempesta)
[20:38:07] *** Pixi_ is now known as Pixi
[20:38:30] *** Joins: whitehot_robot (~whitehot_@cantelope.org)
[20:38:50] *** Parts: whitehot_robot (~whitehot_@cantelope.org) ()
[20:39:29] *** Joins: 042AAAVAJ (~whitehot_@cantelope.org)
[20:39:31] *** Quits: 042AAAVAJ (~whitehot_@cantelope.org) (Remote host closed the connection)
[20:43:19] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[20:44:31] <teut> https://dpaste.org/gS1c   https://dpaste.org/sgQA
[20:44:44] <teut> can someone help with this error plz?
[20:44:53] <teut> i googled it and theres no clue
[20:45:06] *** Quits: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:45:34] <teut> useContext,  that variable , everything is defined
[20:47:06] <stenno> you have to pass the context to useContext
[20:47:11] <stenno> https://reactjs.org/docs/hooks-reference.html#usecontext
[20:47:12] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[20:47:18] <Intelo> efdee yes!
[20:47:22] <qswz> Im back my girls
[20:47:27] <onosendi> ljharb: very interesting... that makes sense.
[20:49:07] <qswz> when you send an email too early, you say: o-no-send-i?
[20:50:01] <qswz> I love the 20s security delay of gmail
[20:50:04] <teut> thanks, I dont know how come I missed it
[20:50:12] <teut> I have used it several times
[20:50:24] <qswz> yea, a must feature
[20:50:33] <qswz> check in preferences
[20:50:41] <efdee> qswz: that delay has saved me more often than i like to admit
[20:51:07] <teut> I wish it was 40 seconds
[20:51:08] <stenno> i like that you have to keep cmd+q pressed for a few seconds to close chrome
[20:51:30] <stenno> it has happened in the past that i pressed cmd+q instead of cmd+w when i wanted to close a tab
[20:51:42] <qswz> hah me too
[20:51:43] <onosendi> stenno: that's saved me a few times, but other times it's annoying.
[20:52:31] <qswz> stenno: it's ctrl+w for me on linux
[20:52:38] <qswz> for closing tabs
[20:52:53] <stenno> and ctrl+q for closing chrome?
[20:53:00] <qswz> oh for a few seconds
[20:53:27] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:53:30] <stenno> also the chrome updates are so quick lol
[20:53:36] <qswz> doesn't work for me
[20:53:44] <stenno> maybe its macos specific then
[20:53:48] <qswz> yea
[20:53:55] <qswz> I hate chrome tab search
[20:53:56] <stenno> cmd+q closes programs
[20:54:02] <stenno> tab search?
[20:56:12] <qswz> https://www.bleepingcomputer.com/news/google/hands-on-with-google-chromes-new-tab-search-feature-rolling-out-now/
[20:57:00] <qswz> useless feature, can't even be hidden anymore
[20:57:38] <stenno> oh i see
[20:58:06] <stenno> i might be one of the few people left in the world who tries to minimize their browser tabs so i wouldn't really have a use for that feature anyway
[20:58:21] <stenno> i tend to only have 5-6 browser tabs at once
[20:58:35] <qswz> same here
[20:58:39] <onosendi> Same
[20:59:34] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[21:00:05] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:09] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[21:01:40] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[21:02:00] *** Joins: nomic (~nomic@185.217.117.88)
[21:07:55] *** Joins: trog (~trog@user/trog)
[21:13:16] <qswz> do you guys use React StrictMode.
[21:14:55] *** Joins: ruzui (~ruzu@107-179-252-71.cpe.teksavvy.com)
[21:15:31] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:16:25] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[21:18:14] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:18:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:22:12] *** Joins: Rockwood (~Rocky@user/rocky)
[21:25:03] <Rockwood> ljharb, hi
[21:31:49] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:32:25] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-c420-d162-78e2-1319.res6.spectrum.com) (Quit: Leaving)
[21:32:43] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Remote host closed the connection)
[21:34:55] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[21:38:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:38:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:38:48] <qswz> "Teen Girls Are Developing Tics. Doctors Say TikTok Could Be a Factor" seems to make sense to me
[21:39:39] <onosendi> qswz: Indeed. That app is horrible.
[21:40:05] <qswz> never used it
[21:40:21] <qswz> my phone wouldn't suport it
[21:40:48] <onosendi> My GF is always sticking it in my face trying to get me to watch stuff.
[21:40:51] <onosendi> qswz: which phone?
[21:41:20] <qswz> 2015 phone (android 4.2 samsung galaxy something)
[21:43:10] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[21:43:34] <qswz> it's super efficient, that way I don't spend more than 1 minute on it per day
[21:43:59] <onosendi> lol, that's a good way to look at it.
[21:44:28] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[21:45:06] <onosendi> qswz: being a linux user, are you into rooting/roms?
[21:45:43] <qswz> onosendi: I did it few years ago, but gave up, that old phone isn't much supported
[21:46:04] <qswz> would love to get some recent android on it
[21:46:19] <qswz> for example the tethering mode doesn't even support passwords
[21:46:44] <qswz> sucks, anyone in reach could suck my connection, but anyway for now I'm using my neighbors Wifi
[21:46:49] <silly> mehh i'm trying to install linage on a Huawei P10 lite right now
[21:47:18] <qswz> oh heard about it, well the installation are often so complex
[21:47:38] <onosendi> qswz: yeah, it really depends on the phone though.
[21:47:54] <silly> yeah, i have to install a patch file along with lineage, but it still crashes
[21:47:57] <onosendi> A lot of those phones try as hard as they can to lock the bootloader and keep everyone out.
[21:48:28] <silly> first i had to unlock the bootloader, but huawei won't tell you the unlock code anymore
[21:48:40] <systemfault> I did not find any good reason to root my phone...
[21:48:44] <silly> luckily i found potatonv
[21:48:52] *** Joins: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[21:49:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:49:15] <silly> the reason for lineage was that they stopped providing android security patches
[21:49:25] <silly> 24 months after release
[21:49:26] <onosendi> systemfault: I'm at that point now too, since it can pretty much do everything I want it to now. In the beginning, rooting definitely was a must though.
[21:49:41] <qswz> my reason is that samsung does't allow newer android updates
[21:49:52] <qswz> so I'm left with rooting
[21:50:18] <systemfault> I'll never buy a Samsung again unless they give up on their customization crap
[21:50:47] <systemfault> I've used the Nexus for maybe 8 years now, I'm a satisfied customer
[21:51:09] <silly> i said, i wouldn't ever pay for huawei.*
[21:51:20] <onosendi> Agreed. Samsung is terrible, especially now. I'm a Pixel fan.
[21:51:53] <systemfault> Ah sorry, I have the Pixel 5 at the moment... had a Nexus a few years back
[21:51:54] <silly> never again. the tablet without google services suggests you install software from apkmonk and the likes
[21:51:58] <systemfault> Not sure why I mixed the two
[21:52:21] <systemfault> Anyway, no matter the name.... Google phones.
[21:53:16] <onosendi> For sure. The Pixel 6 looks like it's going to be nice.
[21:54:08] <silly> i'm looking at the pinephone pro
[21:54:24] <onosendi> silly: I just watched a YT video on that by Techlore.
[21:55:13] <qswz> what's exciting about a phone?
[21:55:14] <onosendi> I'm all for the idea of a Linux phone, I really don't ever think it's going to be a thing though. There's just not enough market for them.
[21:55:37] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:56:27] <silly> well, they're already there. niche yes... but a thing after all
[21:57:36] <silly> just don't expect any official google/fb/whatever app for it - ever
[22:03:56] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:06:54] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Remote host closed the connection)
[22:07:38] *** Quits: Bombo_ (atom@p2e58ef40.dip0.t-ipconnect.de) (Changing host)
[22:07:38] *** Joins: Bombo_ (atom@user/bombo)
[22:07:38] *** Bombo_ is now known as Bombo
[22:08:59] *** Joins: ham5 (~iamfive@user/ham5)
[22:10:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:10:24] <ham5> if I do match(/^(string 1|string 2)/) || match(/^(string 3)/)
[22:10:35] <ham5> better to split up 1 and 2 or combine 3?
[22:10:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:10:53] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:13:19] <qswz> do you need a boolean result? If so use regex.test()
[22:13:31] <qswz> and better combining in one regex, yes
[22:13:44] <ham5> ty
[22:14:49] *** Joins: nomic (~nomic@185.217.117.88)
[22:15:06] <qswz> ham5: yw, also you might just need string.startsWith('..') || string.startsWith('..')
[22:15:35] <qswz> well, depends on your pref
[22:16:54] <stenno> match(/^(string 1|string 2|string 3)/)
[22:18:55] *** Quits: AndrewYu (~andrew@user/andrewyu) (Remote host closed the connection)
[22:19:39] *** Joins: AndrewYu (~andrew@user/andrewyu)
[22:20:00] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[22:23:37] <qswz> is there a web DOM api for signing documents (by hand)
[22:24:20] <stenno> i doubt it
[22:25:43] <stenno> like with a stylus?
[22:25:56] <qswz> or anything, mouse, touchpad
[22:26:02] <stenno> there are pointer events
[22:26:26] <qswz> I'm using this so far https://github.com/szimek/signature_pad
[22:27:36] <stenno> ah yeah
[22:27:46] <stenno> also uses pointerevents, makes sense
[22:28:35] <qswz> but would be great to have a standard dom API, where you browser stores your signatures
[22:28:36] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:28:53] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:29:41] <stenno> would be cooler if private keys were accepted as signature
[22:29:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22) (Quit: Textual IRC Client: www.textualapp.com)
[22:29:50] <stenno> so you could do ecdsa signing
[22:30:10] <qswz> most people would have no idea about this
[22:30:43] <qswz> butyea hand written signatures are so weak
[22:32:25] *** Joins: Betal (~Betal@user/betal)
[22:32:39] <stenno> sign/recover is so neat
[22:32:53] <stenno> a few days ago i learned how diffie-hellmann works and also was impressed
[22:33:18] <stenno> (slightly unrelated)
[22:33:58] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:34:24] <stenno> actually diffie-hellman handshake is also signed digitally so
[22:38:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[22:39:12] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:40:19] <conr> i know this is basic js, but how do i grab an error message that fires to `console.log` in node  from a package like `momentjs`?
[22:42:04] <onosendi> conr: capture it in a try/catch?
[22:42:34] <qswz> maybe it's just warnings
[22:42:50] <qswz> can you paste it?
[22:43:02] <conr> qswz: yeah the code this continues through
[22:43:16] <conr> and the default timezone is ued.
[22:43:43] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[22:43:47] <qswz> what's the warning?
[22:44:06] <conr> `Moment Timezone has no data for rock. See http://momentjs.com/timezone/docs/#/data-loading/.`
[22:44:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[22:44:52] <qswz> hmm, what's the code that triggered it? moment(date).t('rock')?
[22:45:17] <stenno> looks like it lol
[22:45:25] <conr> `moment().tz('rock')`
[22:45:26] <stenno> 'rock' is not a timezone, conr
[22:45:52] <conr> correct, but i want to provide feedback to my apps users
[22:46:03] <qswz> oh
[22:46:23] <qswz> there may be a tz validation method
[22:46:31] <stenno> so isn't there something like 'hasTimezone' or so
[22:46:33] <stenno> yeah
[22:46:41] <conr> oh good point
[22:46:44] <conr> thx
[22:46:45] <qswz> https://momentjs.com/timezone/docs/#/data-loading/checking-if-a-zone-exists/
[22:47:19] <stenno> https://momentjs.com/timezone/docs/#/data-loading/checking-if-a-zone-exists/
[22:47:26] <stenno> getting sniped 3 times in a row
[22:47:31] <stenno> sadge
[22:48:25] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:51:18] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Excess Flood)
[22:51:45] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[22:53:08] <qswz> what's better for a UI component splitting a page in 2? <Split content1={} content2={} /> or <Split><div>content1</div><div>content2</div></Split> and using React.Children and cloneElement to apply classes to each child
[22:53:50] <qswz> I'll keep #1 for now, looks ugly, but easy to implement
[22:56:37] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 268 seconds)
[22:58:06] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[22:58:31] *** Joins: Enissay (~Enissay@user/enissay)
[22:59:05] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:00:04] <onosendi> qswz: https://dpaste.org/aHMw maybe?
[23:00:24] <qswz> onosendi: eh nice one
[23:00:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:00:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:00:34] *** Joins: wroathe (~wroathe@user/wroathe)
[23:01:43] <qswz> that's what react-bootstrap likes to use too https://react-bootstrap.github.io/components/cards/
[23:01:59] *** Joins: Guest8766 (~relativit@171.11.13.109.rev.sfr.net)
[23:03:59] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[23:04:55] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[23:05:12] <stenno> <Split><Content1 /><Content2 /></Split> no?
[23:05:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[23:05:30] <qswz> stenno: that's solution #2
[23:05:40] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[23:06:06] <qswz> I need to apply css classes to the top container, and to each of the 2 child to have responsive behaviors
[23:06:09] *** Joins: danbak (~Daniel_Ba@84.215.176.70)
[23:12:06] *** Joins: snake (~snake@user/snake)
[23:12:08] <snake> class MyEmitter extends EventEmitter {}
[23:12:09] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:12:22] <snake> how do i do this without fancy typescript? (or whatever this class extends stuff is)
[23:12:35] <snake> sometimes the nodejs docs don't show both ways :(
[23:12:59] <qswz> class MyEmitter extends EventEmitter {} isn't TS, it's just JS
[23:13:40] <snake> oh ok
[23:17:41] <qswz> I've not seen nodejs.org mention TS yet in their docs :))
[23:17:51] <qswz> unlikely
[23:19:23] <snake> what is CIS vs ESM
[23:20:00] <onosendi> CJS?
[23:21:10] <snake> yeah CJS
[23:21:14] *** Joins: dMartian (~dMartian@2a0d:5600:24:a80::a77d)
[23:21:14] <snake> sorry
[23:22:10] <stenno> CJS = commonjs modules
[23:22:16] <stenno> ESM = ecmascript modules
[23:22:25] <onosendi> snake: cjs = CommonJs `const module = require('module');`, ESM = ES Modules `import module from 'module'`
[23:23:01] <snake> ah ok
[23:23:11] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 264 seconds)
[23:25:47] <snake> so class works in commonjs?
[23:25:58] <qswz> yep, it's unrelated
[23:26:37] <qswz> CJS/ESM module system (how to interconnect / import files)
[23:26:58] <qswz> class = core JS feature
[23:27:01] <snake> ah ok
[23:27:51] <qswz> well, not fully unrelated, for example top-level-await forks in ESM, not CJS
[23:28:00] <qswz> works*
[23:33:11] *** Joins: cn-j (~cn-j@user/cn-j)
[23:37:29] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[23:37:47] *** Quits: dMartian (~dMartian@2a0d:5600:24:a80::a77d) (Quit: Until next time! Farewell!)
[23:38:08] *** Joins: dMartian (~dMartian@2a0d:5600:24:a80::a77d)
[23:38:35] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:38:41] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[23:39:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:39:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:39:02] *** Joins: wroathe (~wroathe@user/wroathe)
[23:42:35] <conr> if i init `const { prefix, token, timezone, activity } = require('./config.json');` in the node index.js file how can then check if each one are not empty and prevent node from loading?
[23:44:00] <stenno> prefix ?? token ?? timezone ?? activity ?? throw (...)
[23:44:03] <stenno> (don't do that)
[23:44:11] <stenno> (but i guess it'd work)
[23:44:46] <qswz> if (prefix ?? token ?? timezone ?? activity) throw 'shit'
[23:45:13] <stenno> no that wouldn't work
[23:45:29] <stenno> thats the opposite
[23:45:51] <stenno> throw has to be last element of the ?? chain
[23:46:16] <stenno> n> const { foo, bar, baz } = {}; foo ?? bar ?? baz ?? throw 'shit';
[23:46:17] <jellobot> (fail) SyntaxError: Unexpected token 'throw'
[23:46:33] <stenno> ah damn no throw_expr
[23:46:49] <stenno> n> const { foo, bar, baz } = {}; foo ?? bar ?? baz ?? (() => throw 'shit')()
[23:46:50] <jellobot> (fail) SyntaxError: Unexpected token 'throw'
[23:47:00] <DPA> n> const { foo, bar, baz } = {}; foo ?? bar ?? baz ?? (()=>{throw 'shit'})();
[23:47:01] <jellobot> (fail) shit
[23:47:02] <stenno> n> const { foo, bar, baz } = {}; foo ?? bar ?? baz ?? (() => { throw 'shit' })()
[23:47:02] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[23:47:02] <jellobot> (fail) shit
[23:47:29] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[23:48:00] <Alexendoo> That doesn't check all, that'd be if any are non null/undefined right?
[23:48:11] <kalen> sad that people still use react when svelte blows it away in almost every aspect (aside from community size)
[23:48:22] <stenno> proif any are not null or undefined, yeah
[23:48:28] <stenno> thats what i thought 'empty' means
[23:49:29] <conr> basically a string that's not `''`/
[23:50:13] <stenno> oh
[23:50:15] <stenno> well then
[23:50:39] <Alexendoo> As in it wouldn't throw if only bar is some desired value, but foo and baz are undefined
[23:51:07] <stenno> oh i see now, you are right
[23:52:03] <stenno> n> const { foo, bar, baz } = {};  if (![foo, bar, baz].every(str => str.length)) ...
[23:52:04] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:52:04] <jellobot> (fail) SyntaxError: Unexpected end of input
[23:52:08] <qswz> if (!prefix || !token || !timezone || !activity) throw 'shit'
[23:52:18] <stenno> or .some
[23:52:26] <stenno> or .reduce even
[23:52:44] <qswz> if ([prefix, token, timezone, activity].some(s=>s.length===0)) throw 'shit'
[23:52:56] <stenno> yeah thats the some variant
[23:53:19] <stenno> ![foo, bar, baz].every(str => str.length)
[23:53:19] <qswz> if (prefix+token+timezone+activiy==='') throw 'shit'
[23:53:26] <qswz> don't do that hah
[23:53:29] <stenno> that wouldn't work
[23:53:52] <stenno> that would fail if at least one is set
[23:54:05] <stenno> same problem as with the ?? chain above
[23:56:01] <DPA> let params = ({}).filter(x=>new Set('foo','bar','baz').has(x)); if(params.some(x=>x=='')) throw 'shit'; with(params){  }
[23:56:12] <DPA> n> let params = ({}).filter(x=>new Set('foo','bar','baz').has(x)); if(params.some(x=>x=='')) throw 'shit'; with(params){  }
[23:56:12] <jellobot> (fail) TypeError: {}.filter is not a function
[23:56:21] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 245 seconds)
[23:57:06] <DPA> let params = Object.fromEntries(Object.entries({}).filter(([k,v])=>new Set('foo','bar','baz').has(x))); if(params.some(x=>x=='')) throw 'shit'; with(params){  }
[23:57:24] <DPA> n> let params = Object.fromEntries(Object.entries({}).filter(([k,v])=>new Set('foo','bar','baz').has(x))); if(params.some(x=>x=='')) throw 'shit'; with(params){  }
[23:57:25] <jellobot> (fail) TypeError: params.some is not a function
[23:57:44] <qswz> config has maybe more fields
[23:57:48] <DPA> n> let params = Object.fromEntries(Object.entries({}).filter(([k,v])=>new Set('foo','bar','baz').has(x))); if(Object.values(params).some(x=>x=='')) throw 'shit'; with(params){  }
[23:57:49] <jellobot> (okay) undefined
[23:57:53] <qswz> that he doesn't want to check
[23:58:13] <qswz> you should use a validation lib, like ajv
[23:58:24] <qswz> type: 'string', minChars: 1
[23:58:26] *** Joins: nomic (~nomic@185.217.117.88)
[23:58:28] <qswz> or required
