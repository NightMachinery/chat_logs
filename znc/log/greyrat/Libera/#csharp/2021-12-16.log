[00:02:04] <ki9a> that uses funclets though
[00:02:07] <ki9a> that's llvm/windows?
[00:02:48] <ki9a> ah it does both Landingpads too
[00:04:35] <blez> what's a funclet?
[00:06:12] <ki9a> function inside a function
[00:06:32] <ki9a> Because seh/win32 is lke a function stack
[00:07:02] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Ping timeout (120 seconds))
[00:07:07] <edcba> i thought iitwas a linked list
[00:08:53] <ki9a> it is
[00:09:54] <ki9a> edcba: a function stack is a linked list too..
[00:10:26] <ki9a> fp points to the return pointer and the previous fp
[00:11:49] <Suchiman> (ki9a btw. in .NET 6 blazor wasm with mono now does support full AOT too)
[00:12:31] <ki9a> the trouble is that browsers don't do EH
[00:12:35] <ki9a> like only Chrome does
[00:12:41] <ki9a> Safari doesn't, FF doesn't
[00:13:19] <Suchiman> i'm almost sure i saw the demo's running in firefox but could be wrong
[00:14:31] <ki9a> I don't understand safari versioning...
[00:14:32] *** Joins: xsperry (~xs@user/xsperry)
[00:14:37] <ki9a> but it seems the previews now support it
[00:14:43] <ki9a> Firefox does do wasm btw
[00:15:11] <ki9a> just not exceptions
[00:16:16] <Suchiman> ki9a: thought llvm would resort to javascript intermediate call frames if EH was not natively supported
[00:16:36] <ki9a> enscriptem does
[00:16:38] <ki9a> llvm does not
[00:16:42] <ki9a> note that that is nasty
[00:16:55] <Suchiman> ah
[00:16:58] <ki9a> you might as well send your input via carrier pigeon
[00:17:13] <Suchiman> ki9a: didn't firefox make that extremely efficient
[00:17:14] <ki9a> if you do ctx switches for each bit of SEH
[00:17:30] <ki9a> yes, but there's implicit SEH in a lot of code
[00:17:34] <ki9a> on the low level
[00:17:40] <Suchiman> i remember reading something about making JS -> WASM transitions very cheap
[00:18:52] <ki9a> oh yeah they did
[00:19:02] <ki9a> latest ff doesn't do EH
[00:19:32] <ki9a> I wonder if latest iPhone supports EH now
[00:19:44] <ki9a> should find someone that has hw like tat to try the detector
[00:30:30] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[00:30:55] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[00:32:40] <ki9a> Suchiman: the wasm landscape is a mess though
[00:32:50] <Suchiman> ki9a: so it seems
[00:32:53] <Suchiman> fucking google :P
[00:33:47] <ki9a> heh
[00:49:34] *** Joins: jvandle (~jvandle@12.230.173.12)
[00:54:47] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:12:50] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[01:14:36] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[01:16:05] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[01:20:35] *** Joins: Diablo-D3 (foobar@exelion.net)
[01:20:48] *** Quits: Diablo-D3 (foobar@exelion.net) (Remote host closed the connection)
[01:21:14] *** Joins: Diablo-D3 (foobar@exelion.net)
[01:21:18] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[01:23:10] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[01:27:32] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[01:27:49] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[01:28:06] *** Joins: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au)
[01:33:22] *** Quits: _genuser_ (2fb823e8@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[01:34:01] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[01:47:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[01:47:18] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[01:47:39] *** Joins: Klinda (~superleag@user/klinda)
[01:47:55] *** Quits: Shariff (~UserNick@starbase26.connected.by.freedominter.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:55:26] <MatthiasVance> üèá
[02:00:15] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:04:39] *** Quits: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net) (Remote host closed the connection)
[02:12:42] *** Joins: alguien (~alguien@user/alguien)
[02:15:53] <JakeSays> i sure hope the rocket launching the web telescope doesn't blow up.
[02:17:25] <Suchiman> https://twitter.com/MachinePix/status/1200117745247047681
[02:18:05] *** moose`` is now known as moose
[02:18:12] <moose> I guess my connection was bad earlier, jeeze.
[02:19:43] <moose> Suchiman: That's honestly some pretty cool equipment there
[02:19:51] <Suchiman> moose: indeed
[02:20:00] <Suchiman> never thought about how that's done
[02:20:04] <Suchiman> always assumed CGI
[02:20:10] <bpmedley> That's how I have always popped strawberries into my mouth.. nothing new..
[02:20:29] <moose> I can just imagine someone being like "I need splashy citrus fruits" and a CGI person going "That'll be $5,000 and we need to rent time on the rendering farm."
[02:20:31] <alguien> Is Microsoft.CodeAnalysis.CSharp.Scripting viable for embedding C#? Would you say it's fast enough or would you recommend lua or js instead?
[02:20:49] <JakeSays> bpmedley: LOL
[02:20:49] <moose> And the engineer is like "I can build you a fruit water throwing machine that you can re-use for $100k."
[02:20:56] <bpmedley> alguien : Have you seen dotnet script?
[02:20:57] <JakeSays> alguien: i use it extensively
[02:21:20] <bpmedley> Oh!  I misread the "embedding"..
[02:21:27] *** Joins: shoelaces (~shoelaces@pool-100-38-191-176.nycmny.fios.verizon.net)
[02:21:29] <alguien> JakeSays, mate, you work on some interesting thing
[02:21:32] <alguien> *things
[02:21:34] <JakeSays> bpmedley: i don't like dotnet script
[02:21:40] <bpmedley> JakeSays : Why?
[02:21:42] <Suchiman> alguien: what is your criteria for "fast enough" parse speed or execution speed?
[02:21:47] <JakeSays> alguien: i have to or i'll go insane
[02:22:21] <Suchiman> alguien: execution speed is the same as normal compiled C#, so, very fast, parse speed is also good i'd say
[02:22:50] <JakeSays> bpmedley: because dotnet gets in the way, and dotnet-script doesn't support custom script hosts
[02:22:57] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[02:23:17] <alguien> Suchiman, is both an ok answer? We're looking to make some calculations dynamic (code in DB).
[02:23:17] <bpmedley> I don't know what custom script hosts means.  What do you use instead?
[02:23:34] <alguien> Suchiman, they're the simplest of calculations though
[02:23:41] <JakeSays> bpmedley: i created my own dotnet-script tool
[02:23:46] <bpmedley> Nice!
[02:23:55] <JakeSays> it's designed specifically for building tools
[02:23:56] <Suchiman> alguien: yeah i'd argue it's super fast
[02:24:05] <alguien> JakeSays, Suchiman thanks
[02:24:25] <alguien> thanks bpmedley for the suggestion too :)
[02:25:14] <JakeSays> bpmedley: a script host is just a class that you can pass an instance of to the roslyn scripting runtime. all properties and methods on the instance are exposed as globals to the script
[02:25:29] <JakeSays> kind of like javascript's use of 'window' in the browser
[02:25:45] <moose> How is the security around that? heh
[02:25:57] <JakeSays> moose: security around what?
[02:26:14] <moose> I guess more specifically, how is security handled for dotnet-script scripts.
[02:26:28] <JakeSays> um, what security
[02:26:39] <moose> First I'm hearing of it, maybe Google is better here. But just curious if we can restrict what can be used from the script.
[02:26:41] <JakeSays> all it does is execute c# script
[02:27:12] <moose> Yes.
[02:27:24] <bpmedley> JakeSays : Neat!
[02:27:39] <JakeSays> moose: well, you can control what the script has access to
[02:27:42] <bpmedley> moose : File system permissions?
[02:27:57] <moose> JakeSays: I guess my question is, can you tell it explicitly what it can allow as far as classes/libraries or BCL functionality?
[02:28:17] <moose> Like exclude sockets or p/invoke
[02:28:18] *** Joins: DarkSeid (uid394293@id-394293.helmsley.irccloud.com)
[02:28:19] <JakeSays> moose: to an extent, yes
[02:28:33] <moose> Cool
[02:28:40] <JakeSays> to disallow sockets you just don't allow System.Net
[02:28:49] <moose> Perfect, that's what I wanted to know
[02:28:53] <moose> That's awesome
[02:28:59] <JakeSays> p/invoke might be an issue.
[02:29:07] <alguien> moose, good question
[02:30:16] <moose> JakeSays: Yeah I was thinking you could just exclude System.Runtime entirely?
[02:30:17] <DarkSeid> hi. im trying to run an EF migration on a postgres database and part of the migration file looks like: `EmailConfirmed = table.Column<bool>(nullable: false),` which is fine. But when I look at the column in the table it has type `text` and not boolean. Any idea what could be going on here?
[02:30:32] <JakeSays> moose: if you write a custom scripting tool then you can do anything you want because you can validate the script before it's ever executed
[02:30:46] <moose> Validation is difficult heh
[02:30:53] * alguien googles roslyn scripting sandbox
[02:31:00] <moose> I imagine there is a lot of trickery one can do to bypass behavioral validation
[02:31:22] <JakeSays> moose: you just analyze the parse tree
[02:31:26] <bpmedley> DarkSeid : Without more context answering is difficult.  How big is the migration code?
[02:31:29] <moose> I remember when it was common for programs to support modules via DLLs that get loaded at runtime and pushed into a sandboxed appdomain.
[02:31:41] <moose> People would do all kinds of whitelisting and such for different things, but there were so many ways around it
[02:32:01] <moose> That's how I found a .NET EE escape, playing with those sandboxes and bypassing them lol
[02:32:20] <DarkSeid> bpmedley: small, im just really learning dotnet tbh. i think the issue might be that the migration file was initially generated when i was using sqlite and i switched over to postgres so im going to re-generate the migration file
[02:32:37] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[02:32:38] <bpmedley> DarkSeid : Migration scripts are db specific.
[02:32:40] <alguien> How did it not occur to me it's RCE? *shakes head*
[02:32:44] <JakeSays> it'd be fairly straight forward to walk the parse tree to find usages of blacklisted BCL apis
[02:32:56] <moose> JakeSays: I guess I need to play more with roslyn and such. I've not done anything with runtime code analysis except for expression trees
[02:32:57] <DarkSeid> bpmedley: yeah that's what i figure
[02:33:13] <JakeSays> alguien: what do you mean?
[02:33:51] <bpmedley> I implemented a couple things that might be useful.  One is an "internal redirect" that, in the Minimal APIs, can call a different RequestDelegate and pass a file result back.  If anyone is interested, I can give a git link.
[02:33:58] <alguien> JakeSays, i want to execute code, and it has not occurred to me that that might be a security issue. Perhaps I was expecting a sandbox environment
[02:34:14] <alguien> I did move from considering JS to C#
[02:34:14] <bpmedley> The "internal redirect" is so a 302/301 is not sent to the browser.
[02:34:18] <DarkSeid> the syntax for minimal api's look so similar to a JS express app
[02:34:28] <JakeSays> alguien: well, that's true for any scripting environment
[02:35:06] <JakeSays> bpmedley: what's a 'minimal api'
[02:35:19] <bpmedley> JakeSays : Asp.Net 6 Minimal APIs
[02:35:34] <JakeSays> what makes them minimal
[02:35:39] <Nasp> You dont have controllers
[02:35:42] <Nasp> Only funcs
[02:35:42] <DarkSeid> bpmedley: that fixed it :)
[02:35:49] <Nasp> Like NancyFX
[02:36:02] <JakeSays> Nasp: ah ok
[02:36:04] <DarkSeid> https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0
[02:36:11] <Nasp> routes.MapGet("/api/{id}", request => dostuff);
[02:36:15] <bpmedley> https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0 JakeSays
[02:36:17] <Nasp> Not a huge fan
[02:36:19] <bpmedley> lol
[02:36:35] <bpmedley> lol was for the double urls..
[02:36:48] <DarkSeid> looks so similar to express.js it's crazy
[02:37:07] <alguien> JakeSays, could you make a whitelist, and forbid "uses" and all references to blacklisted assemblies? How practical would that be? A blacklist sounds risky
[02:37:46] <moose> You would want a whitelist approach and you would probably want to get specific to the classes, not just the namespaces.
[02:37:56] <JakeSays> alguien: well, yeah, anything is possible
[02:37:59] <alguien> *all references to NON-WHITELISTED assemblies
[02:38:02] <Nasp> alguien:  Make an analyzer
[02:38:05] <Nasp> I've considered doing the same
[02:38:06] <moose> Because little things here and there can open up pretty fun functionality, like reading/writing memory if you give System.Diagnostics
[02:38:39] <JakeSays> Nasp: analyzers don't run when scripts are compiled
[02:38:50] <Nasp> Thought we were talking normal C#
[02:38:55] <JakeSays> nope
[02:39:16] <bpmedley> also, https://docs.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis?view=aspnetcore-6.0#route-handlers is an answer for where you can put the handlers.  It's a question I had from earlier.
[02:39:39] <JakeSays> bpmedley: i'll tell ya where you can put yer handlers, dammit
[02:39:52] <alguien> JakeSays, Nasp, sure but my question is would that be safe without harming usability? I can imagine people are clever. And I can also imagine a whitelist that would prevent some basic things one might want to do.
[02:39:59] <bpmedley> grr
[02:40:02] <Nasp> I wonder if actionfilters are still run before those minimal apis
[02:40:14] <Nasp> alguien:  I dont know what your usecase is
[02:41:31] <JakeSays> alguien: it really depends on how much time you want to invest in your script embedding environment. as i said, you can use roslyn to walk the AST of your scripts and look for violations
[02:41:47] <JakeSays> you could go so far as to block specific methods, etc
[02:41:51] <alguien> Nasp, We want to make some calculations dynamic, and I want to avoid math expression evaluator lock-in
[02:42:15] <JakeSays> so you could allow FileStream.Read but not FileStream.Write
[02:42:23] <Nasp> And you want to restrict certain calls?
[02:43:08] <JakeSays> alguien: oh you're just wanting to execute expressions?
[02:43:10] <alguien> Nasp, no, that sounds risky. I want to allow certain calls :)
[02:43:38] <alguien> JakeSays, with the option of doing more complex things later
[02:43:43] <JakeSays> alguien: restrict == allowing :p
[02:44:03] <alguien> JakeSays, whitelist good, blacklist bad :P
[02:44:04] <JakeSays> alguien: how complex
[02:44:20] <JakeSays> alguien: both lists restrict access
[02:44:36] <alguien> one does a better job
[02:44:51] <MatthiasVance> Suchiman: Ah yeah every time I see effects like that and learn how they are made I'm surprised it's pretty low tech :D
[02:44:57] <JakeSays> alguien: my point is, for discussion purposes, you can just say restrict
[02:45:53] <Nasp> Seems like foldable smartphone manufactuers are now realizing you dont want a large phone that folds into an even larger tablet
[02:46:02] <Nasp> But that you want a small phone that turns into a slightly larger phone
[02:46:04] <bpmedley> A body phone
[02:46:17] <Nasp> Did you just say.... blacklist? :D
[02:46:22] <alguien> JakeSays, I don't know, I'm looking at scripting precisely because I can't predict what future may bring. But I reckon we'll need Int.TryParse from the System runtime
[02:46:55] <JakeSays> alguien: if i were implementing this, i'd allow both white and black capabilities.
[02:47:16] <JakeSays> so i could whitelist FileStream and then blacklist FileStream.Write, etc
[02:47:17] <Nasp> alguien: But who will be allowed to make these scripts
[02:48:24] <alguien> Nasp, only us, but I'm thinking I don't want to allow RCE to everyone with the access to the database (that's where they want to put the scripts)
[02:48:38] <Nasp> Well who will make these scripts
[02:48:48] <alguien> Us, developers.
[02:49:13] <Nasp> And you dont trust those?
[02:49:31] <alguien> JakeSays, I just called File.WriteAllBytes, and you have been cracked,s ir
[02:49:47] <alguien> Nasp, I trust myself? :D
[02:49:57] <alguien> kinda
[02:50:02] <JakeSays> lol
[02:50:04] <alguien> but that's precisely because I worry about these things
[02:50:11] <Nasp> You dont trust your collegues?
[02:50:23] <Nasp> Well then i think you've kinda lost already
[02:50:39] <alguien> nah, it's all good
[02:50:55] <JakeSays> the real question is, does the business trust its employees
[02:51:37] <alguien> Oh, sure. But they shouldn't trust all of their defensive programming prowess
[02:52:05] <JakeSays> well, these are c# scripts. csx is a subset of c#
[02:52:30] <JakeSays> .. not sure why i said that
[02:52:45] <alguien> JakeSays, thanks for pointing that out. Can you recommend a resource with diffs?
[02:53:01] <alguien> JakeSays, glad you did
[02:53:26] <Lukky> That feeling when you finally release your stuff...
[02:53:46] <JakeSays> Lukky: LOL taking a shit is what came to mind
[02:54:06] <Lukky> Hahaha, you're funny :-D
[02:54:14] <Slade> JakeSays, Woman from India won Miss Universe, I cant help but noticing Earth has won every Miss Universe Contest. I feel like its rigged
[02:54:25] <Lukky> But I'm not sure which of the two feelings is better ;-)
[02:56:30] <alguien> JakeSays, btw can you tell us what kinds of things you work on that require all that Roslyn?
[02:57:35] <MatthiasVance> Slade: :D
[02:58:02] <MatthiasVance> Pretentious little fucks, the humans
[02:58:34] <JakeSays> Slade: lol
[02:59:06] <JakeSays> alguien: i write tooling in c# scripts
[02:59:14] <JakeSays> like to control builds, etc
[02:59:14] <Slade> MatthiasVance, yea :(
[02:59:20] <JakeSays> or just very simple programs
[02:59:37] <alguien> Most women reside on earth. In fact, I know only two that are living that do not. But they're close by too
[02:59:51] <alguien> JakeSays, nice
[03:00:57] <alguien> JakeSays, is that a product or something internal?
[03:01:12] <Nasp> https://www.theverge.com/2021/12/15/22837149/oppo-find-n-hands-on-announcement-specs-price Sounds like the first interesting foldable
[03:01:36] <Nasp> JakeSays:  What do you use for building the builds?
[03:01:55] <moose> the build builder
[03:02:04] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:02:58] <Lukky> is it in the building?
[03:04:13] <Lukky> The building's build builder is building the most recent building's build
[03:04:28] * Lukky runs
[03:04:47] <MatthiasVance> The ruins runner runs to the runny ruins.
[03:05:07] * MatthiasVance envelops Lukky in an enigma
[03:05:52] <Lukky> I'm so tired I wouldn't even resist
[03:07:33] <JakeSays> alguien: it's internal until i decide to open source it
[03:07:39] *** Quits: alguien (~alguien@user/alguien) (Quit: Leaving)
[03:07:45] <JakeSays> Nasp: what do you mean?
[03:08:07] <MatthiasVance> VB5 of course
[03:09:12] <Slade> <alguien> Most women reside on earth. In fact, I know only two that are living that do not. But they're close by too   <-- provide evidence to support this statement
[03:09:33] *** Quits: MichaelLong (~ml@user/michaellong) (Ping timeout: 252 seconds)
[03:09:39] <JakeSays> Slade: the ones in the ISS
[03:09:51] <Slade> JakeSays, the first part i mean
[03:10:37] <JakeSays> Slade: the most women reside on earth?
[03:10:45] <Slade> JakeSays, indeed
[03:11:09] <JakeSays> well, lets just ask all the women where they reside
[03:11:28] <Slade> JakeSays, how would you establish a list of all the women to ask
[03:12:07] <JakeSays> i'd mind meld with them
[03:12:20] <JakeSays> one giant global mind melding
[03:12:21] <Nasp> JakeSays:  you said you wrote build tooling in C# scripts
[03:12:28] <JakeSays> Nasp: yes
[03:12:29] <Nasp> I assume what your build server runs
[03:12:34] <Nasp> So what do you use as build server
[03:12:40] <Nasp> Or do you only have your own custom build server
[03:12:48] <Slade> JakeSays, global, not universal
[03:13:03] <JakeSays> Slade: i could do a universal meld as well
[03:13:30] <JakeSays> Nasp: by build server do you mean CI?
[03:16:05] *** Quits: pingec (~pingo@84-255-226-67.static.t-2.net) (Remote host closed the connection)
[03:26:50] <merced> MatthiasVance: dont tempt me with a good time
[03:28:03] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:28:19] <Nasp> JakeSays:  Yes
[03:29:49] <JakeSays> Nasp: well, ci is separate from the build tooling. i'm talking about scripts that fetch dependencies, deploy to devices, etc.
[03:30:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[03:30:03] *** Quits: Jong (~Jong@2620:10d:c090:400::5:3f74) (*.net *.split)
[03:30:03] *** Quits: brianonymous_ (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net) (*.net *.split)
[03:30:03] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (*.net *.split)
[03:30:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[03:30:04] *** Quits: _Shurik_ (~pi@user/shurik/x-1325422) (*.net *.split)
[03:30:04] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:fcc3:c2aa:476f:b540) (*.net *.split)
[03:30:04] *** Quits: Andrio (Andrio@idlerpg/player/Andrio) (*.net *.split)
[03:30:04] *** Quits: jbe (~jbe@lysator/root/jbe) (*.net *.split)
[03:30:04] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (*.net *.split)
[03:30:04] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[03:30:04] *** Quits: MapMan (mapman@rick.hlds.pl) (*.net *.split)
[03:30:05] *** Quits: shurane (sid132556@id-132556.helmsley.irccloud.com) (*.net *.split)
[03:30:05] *** Quits: DevJohnC (~DevJohnC@about/csharp/DevJohnC) (*.net *.split)
[03:30:05] *** Quits: Arokh (~MoveAlong@ip-88-153-209-30.hsi04.unitymediagroup.de) (*.net *.split)
[03:30:05] *** Quits: GunArm (~barrett@firewall.mitsi.com) (*.net *.split)
[03:30:05] *** Quits: Diablo-D3 (foobar@exelion.net) (*.net *.split)
[03:30:05] *** Quits: jvandle (~jvandle@12.230.173.12) (*.net *.split)
[03:30:05] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (*.net *.split)
[03:30:05] *** Quits: abesab (~abesab@172.103.140.96) (*.net *.split)
[03:30:05] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (*.net *.split)
[03:30:05] *** Quits: canton7 (canton7@about/csharp/canton7) (*.net *.split)
[03:30:05] *** Quits: bin101 (~bin101@user/bin101) (*.net *.split)
[03:30:05] *** Quits: dan01[m] (~dan01@2001:470:69fc:105::1:2640) (*.net *.split)
[03:30:05] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (*.net *.split)
[03:30:06] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: luetm (sid505021@id-505021.helmsley.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: Netshroud (~Netshroud@user/netshroud) (*.net *.split)
[03:30:15] <JakeSays> Nasp: this is for c++ development, btw.
[03:30:16] *** Joins: jbe (~jbe@lysator/root/jbe)
[03:30:26] *** Joins: _Shurik_ (~pi@c-73-184-197-238.hsd1.ga.comcast.net)
[03:30:29] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[03:30:30] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[03:30:34] *** Joins: abesab (~abesab@172.103.140.96)
[03:30:35] *** Joins: viaSanctus (~viaSanctu@d5152c2f0.static.telenet.be)
[03:30:38] *** Joins: MapMan (~mapman@94.23.94.190)
[03:30:39] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[03:30:55] *** Joins: celphi_ (sid97751@helmsley.irccloud.com)
[03:30:56] *** Joins: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net)
[03:30:58] *** Quits: _Shurik_ (~pi@c-73-184-197-238.hsd1.ga.comcast.net) (Changing host)
[03:30:58] *** Joins: _Shurik_ (~pi@user/shurik/x-1325422)
[03:31:19] *** Joins: luetm (sid505021@helmsley.irccloud.com)
[03:31:26] *** Quits: viaSanctus (~viaSanctu@d5152c2f0.static.telenet.be) (Changing host)
[03:31:26] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[03:31:37] *** Joins: jvandle (~jvandle@12.230.173.12)
[03:31:40] *** Joins: ToAruShiroiNeko (~eva@178.249-241-81.adsl-static.isp.belgacom.be)
[03:31:45] *** Quits: ToAruShiroiNeko (~eva@178.249-241-81.adsl-static.isp.belgacom.be) (Changing host)
[03:31:45] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[03:31:53] *** Quits: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net) (Changing host)
[03:31:53] *** Joins: brianonymous (~int19h@user/brianonymous)
[03:33:18] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[03:33:39] *** Joins: Andrio (Andrio@idlerpg/player/Andrio)
[03:33:44] <Nasp> ok
[03:34:10] *** Joins: Diablo-D3 (foobar@exelion.net)
[03:34:14] *** Quits: celphi_ (sid97751@helmsley.irccloud.com) (Changing host)
[03:34:14] *** Joins: celphi_ (sid97751@user/celphi)
[03:34:18] *** Joins: canton7 (canton7@about/csharp/canton7)
[03:34:25] *** Joins: cacheyourdreams (~cache@user/cacheyourdreams)
[03:34:28] *** ChanServ sets mode: +v canton7
[03:34:35] *** Joins: bin101 (~bin101@user/bin101)
[03:34:39] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[03:34:46] *** Joins: Arokh (~MoveAlong@ip-88-153-209-30.hsi04.unitymediagroup.de)
[03:35:22] *** celphi_ is now known as celphi
[03:35:35] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Remote host closed the connection)
[03:36:08] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[03:37:43] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:849b:790b:ee58:764d)
[03:38:23] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[03:38:34] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[03:39:14] <MatthiasVance> merced: You like to run in runny ruins?
[03:42:25] *** Joins: bomb (~bomb@user/bomb)
[03:43:44] <brianonymous> does that imply he ran in rainy races
[03:44:19] <JakeSays> brianonymous: 'sup slut
[03:44:19] <bomb> talking about horse racing again?
[03:44:27] <brianonymous> JakeSays: evening, dirty ho
[03:44:49] <brianonymous> bomb: i dunno, i netslplit
[03:44:52] <bomb> you boomers discriminating sex workers
[03:45:15] <brianonymous> genx, you son of a
[03:45:20] <JakeSays> ^
[03:46:29] <bomb> sex contractors, even. "worker" implies hierarchy
[03:46:44] <brianonymous> depends on the state i suppose
[03:47:50] <bomb> https://www.youtube.com/watch?v=a93vTnFeA4U
[03:47:56] <bomb> Erik Satie played on Fender Rhodes
[03:48:01] <MatthiasVance> Everything is awesome?
[03:48:21] <bomb> metal drummers with purple hair need not click!
[03:48:33] <bomb> wait where is devjohnc?
[03:48:39] *** Joins: jinsun__ (~quassel@user/jinsun)
[03:48:51] <brianonymous> no, this is the proper use of a rhodes: https://www.youtube.com/watch?v=MVBOy7UF-XQ
[03:49:26] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[03:49:29] <bomb> cool but too funky
[03:49:37] <brianonymous> there can only be the funk
[03:50:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[03:50:05] <brianonymous> eg- i wouldnt want to put a b3 in classical music
[03:50:23] <brianonymous> https://www.youtube.com/watch?v=zGkSNsFCpEQ
[03:50:41] <bomb> I'd put my organ in many places
[03:50:49] <brianonymous> absolutely
[03:54:53] <brianonymous> b3's have made me bleed before, on a number of occasions
[03:55:14] <brianonymous> those keys will rip the flesh right off yo
[03:55:50] <Lizard_> how do you even deep copy in .net, what even implement iclonable?
[03:55:56] <bomb> you have a b3 at home?
[03:56:18] <brianonymous> depends on what your copying, but Buffer.BlockCopy is good for some stuff
[03:56:18] <Lizard_> stupid error I done time and time again, where I think I copied a list, but did not...
[03:56:33] <brianonymous> bomb: its in storage, but yeah
[03:57:09] <bomb> cool
[03:57:14] <bomb> a song for you then https://www.youtube.com/watch?v=k2QPJ2xGMiY
[03:58:20] <brianonymous> Lizard_: oh that type of copying can get weird
[03:58:49] <bomb> that band reunited in 2021
[03:59:03] <brianonymous> Lizard_: LOOK INTO CLONE
[03:59:06] <brianonymous> oops, caps, sorry
[03:59:42] <Lizard_> like I have a dictionary, I want to lock make a copy of values and release the lock, but i go full tardd new list = old list, then wonder for a bit why its fucked...
[04:00:10] <Lizard_> pretty much has to go member wise since I dont see any clone
[04:00:18] <Nasp> Why do you need the clone?
[04:00:40] <Lizard_> maybe it's an extention? not sure I have linq and all that crap in that env
[04:02:13] <brianonymous> theres even more issues if your list objs reference other shit too
[04:07:31] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f0bc:a1a7:555f:2527) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:13:20] <Lizard_> So.. none of the generic/templated function in the framework implement cloneable out of the box.. probably would be wonky if object are not themselves implementing a working deep copy.
[04:13:27] <Lizard_> no instead you get NOTHING!
[04:13:54] <brianonymous> https://finance.yahoo.com/news/international-trade-commission-bans-import-133000661.html wtf is this?
[04:13:57] <MatthiasVance> Why are you copying a list
[04:14:21] <MatthiasVance> brianonymous: log4j
[04:15:34] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[04:15:42] <brianonymous> https://portal.unifiedpatents.com/patents/patent/US-10593196-B2
[04:16:49] <Lizard_> stackoverflow people... some of the "solution" use the Binary serializer, use JSON... I have just trying to lock this thing for as short as possible
[04:17:20] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:17:23] <jonp> brianonymous: software patents
[04:17:43] <brianonymous> a weird one at that
[04:17:54] <jonp> they're *all* weird
[04:18:49] <jonp> Lizard_: binary serialization is dead
[04:19:05] <MatthiasVance> brianonymous: Is this patent bothering you sir?
[04:19:06] <jonp> Lizard_: as Nasp asked before, why do you need a deep clone?
[04:19:11] <MatthiasVance> ^
[04:19:20] <jonp> MatthiasVance: that patent means he can't get Rokus at some point in time.
[04:19:27] <jonp> maybe
[04:19:45] <brianonymous> MatthiasVance: naw, im just curious what type of violation it took to get all yer imports banned
[04:19:56] <MatthiasVance> Ohh, it's related to the import, didn't know
[04:19:56] <jonp> MatthiasVance: it'll be "fun" to see that make it to SCOTUS, and have SCOTUS slap down software patents *again*
[04:20:24] <jonp> which apparently doesn't mean anything
[04:20:29] <Lizard_> why would one not need deep clone once in a while ^^
[04:20:49] <jonp> Lizard_: a deep clone for a tree you control? sure, once in a while, and you can do that yourself.
[04:20:58] <MatthiasVance> Lizard_: You don't. Until you do. Not until you think you do.
[04:20:59] <jonp> a deep clone for an arbitrary object graph?  uh...
[04:21:37] <Lizard_> the build in it's not arbitrary I can do so myself... I just realised now after years using .net that it wasnt a thing is all
[04:21:53] <Lizard_> i accidently all of the words
[04:21:59] <jonp> it kinda sorta was, with binary serialization as a wonky workaround
[04:22:09] <jonp> but binary serialization is gone in .net 6 (5?)
[04:22:13] <jonp> too many security issues
[04:22:38] <MatthiasVance> Yeah you don't want to go the JSON route with type annotations either Lizard_
[04:22:38] <jonp> (not strictly limited to binary serialization; *any* serialization can have security issues.)
[04:22:58] <MatthiasVance> Lizard_: Which brings me back to my original question, why do you think you need this?
[04:23:10] <brianonymous> it looks like its a patent for literal remote control relay, like some kinda HDMI CEC
[04:23:36] <jonp> "but with a computer!"
[04:23:40] <brianonymous> lol
[04:24:31] <Lizard_> I implemented the Iclonable shit while bitching it's all good... I miss Java sometimes
[04:24:35] <brianonymous> the proper term is processing device made of shiny sand that stores electrons for gating electron transveral
[04:24:39] <Lizard_> only sometimes... rarely
[04:25:47] <MatthiasVance> Lizard_: Nobody misses Java this week
[04:26:16] <Lizard_> Buffer.BlockCopy looks like something I should look into, sound like raw buffer like NIO
[04:26:21] <JakeSays> brianonymous: i smell a patent troll
[04:26:53] <JakeSays> jonp: BinaryFormatter is no more?
[04:27:03] <brianonymous> it does have a certain odor
[04:27:41] <brianonymous> it does have 99 citations in the art, so it seems it would be valuable
[04:27:42] <jonp> JakeSays: apparently "in progress"? https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md
[04:28:32] <brianonymous> oh shit, roku is just the tip of the iceberg of this suit
[04:28:33] <JakeSays> i think that's bullshit
[04:28:51] <JakeSays> binaryformatter is very handy
[04:28:53] <jonp> JakeSays: https://docs.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide
[04:29:04] <jonp> see that warning
[04:29:13] <jonp> > BinaryFormatter is insecure and can't be made secure.
[04:30:04] <JakeSays> jonp: doesn't matter. it's highly useful for lots of things that aren't a security issue.
[04:30:31] <jonp> until they are
[04:30:35] <jonp> see also log4j
[04:31:05] <jonp> funnily enough, i have a "bug report" due to log4j workarounds!
[04:31:11] <jonp> it's fun!
[04:31:15] <Nasp> I've never needed to clone and if i needed to clone i would use records
[04:31:55] <JakeSays> well, no matter. i have a version of binary formatter that doesn't require anything special from the runtime.
[04:31:57] <phrosty> BinaryFormatter is useful in the same way a katana is useful for buttering bread
[04:31:59] <JakeSays> so FUCK YOU ms
[04:32:06] <jonp> phrosty: roflmao
[04:32:11] *** phrosty is now known as scalablecory
[04:32:16] <jonp> BUT I CAN BUTTER SO MUCH BREAD!!!
[04:32:18] <Nasp> Isn't newtonsoft insecure as well
[04:32:20] <scalablecory> :D
[04:32:23] <Lizard_> I knew a guy who invented one stupid shit, licensed it to the tune of millions a pop, fast forward 25 years, worth $2B, 200 employees who all do fuck all... guy gets cancer sold all of the things to fuck off somewehee hot, patent troll bought the corp %30 over market value, fired all of the dead wood, kept like 2 guys from R&D...
[04:32:26] <Nasp> If you use the $type fields
[04:32:30] <JakeSays> Nasp: everything is
[04:33:22] <JakeSays> so apparently the only secure serialization is text?
[04:33:23] <brianonymous> you guys talkin binary manipulation in general? or literal binaryFormatter
[04:33:37] <scalablecory> it being binary isn't what makes it insecure
[04:33:38] <MatthiasVance> CaseInsensitiveBinaryFormatter
[04:34:19] <JakeSays> brianonymous: the type
[04:34:19] <jonp> brianonymous: https://docs.microsoft.com/en-us/dotnet/api/system.runtime.serialization.formatters.binary.binaryformatter?view=net-6.0
[04:34:38] <scalablecory> while i appreciate the size/efficiency of binary formats, text is so much nice to troubleshoot...
[04:34:51] <JakeSays> wtf would someone use binaryreader/writer for xml/json
[04:34:52] <Lizard_> tfw your $2B corporation is listed on NASDAQ and the employees only purpose is to exist as a tax deduction vehicle
[04:35:00] <jonp> scalablecory: binary vs. text isn't the problem, per-se
[04:35:09] <jonp> the problem is *how* you do the deserialization
[04:35:20] <jonp> and whether that "how" allows ~arbitrary unbounded code execution
[04:35:31] <JakeSays> scalablecory: i was basing that on ms's "preferred alternatives" - they're all text based
[04:35:33] <jonp> you can do it badly via text
[04:35:36] <Lizard_> was a great guy, but patents are fucked...
[04:35:38] <scalablecory> jonp: yup! i was replying to jake :D
[04:36:20] <scalablecory> JakeSays: probably just because text is, largely, better...
[04:36:36] <scalablecory> why go to binary if you don't have to
[04:36:51] <JakeSays> why go text if you don't have to
[04:36:54] <brianonymous> many times i have to
[04:37:06] <brianonymous> but those are almost entirely homebrew cases
[04:37:09] <jonp> JakeSays: debuggability.  sanity.
[04:37:23] <MatthiasVance> Have you *met* JakeSays ?
[04:37:26] <jonp> versionability
[04:37:31] <JakeSays> MatthiasVance: indeed!
[04:37:59] <jonp> and yes, binary can be versioned, but it's harder to reason about, and had to be "retrofitted" in .NET 2.0, as it wasn't considered in the .NET 1.0 design
[04:37:59] <MatthiasVance> Ohh it's past 2 am on a regular wednesday night, I should really get some zzz's
[04:38:01] <jonp> so lol
[04:38:21] <Lizard_> I maded myself my own, it's horrid, but like I need to log millions of binary garbage an hour, it preallocate block by ^2 cluster size and use magic market with more magic escape. Wouha much performance
[04:38:27] <Lizard_> God Save Our Souls
[04:39:21] <brianonymous> the trick to any delicious binary management is proper containers
[04:39:22] <JakeSays> jonp: well, there are so many better solutions for serialization than what the bcl provides anyway
[04:39:58] <scalablecory> S.T.J is pretty good
[04:40:14] <JakeSays> except for that J part
[04:40:46] <bomb> JakeSays is good with S.T.D
[04:40:54] <scalablecory> true. i'm a little unhappy still that json became a thing. xml is the one true format
[04:41:04] <brianonymous> ew no
[04:41:08] <JakeSays> bomb: you're better (Suck That Dick)
[04:41:12] <brianonymous> xml gives me buttcramps
[04:41:20] <JakeSays> scalablecory: i've always preferred xml over json
[04:41:26] <brianonymous> growdy
[04:41:30] <scalablecory> the problem with json is that it doesn't really have a niche to fill?
[04:41:44] <scalablecory> like simple XML is simple to the point that it doesn't need improving
[04:41:46] <jonp> the problem with JSON is that it's fugly, and has no comments.
[04:41:56] <brianonymous> i just hate how verbose it is.. i mean, yeah theres some inherent dangers in brackety text.. but dang man
[04:41:57] <jonp> XML is differently fugly, but at least has comments
[04:42:04] <scalablecory> and at any sort of complexity, XML does things that JSON would just be *wildly* inappropriate for.
[04:42:07] <jonp> i've been corrupted by XML
[04:42:09] <jonp> i don't mind it
[04:42:13] <scalablecory> so it's sort of like... why json? ever? :D
[04:42:19] <JakeSays> jonp: same
[04:42:25] <jonp> scalablecory: JavaScript
[04:42:41] <JakeSays> yeah sending shit to a browser is about the only good use of json
[04:43:00] <brianonymous> i think json fits programmer brains better
[04:43:02] <scalablecory> yeah. it was only better because eval() made it so easy
[04:43:04] <JakeSays> since it is, ya know, javascript
[04:43:08] <Lizard_> xml... i have an xml story, so these guys are handling a metric fuckton of traffic through WCF, it somehow work, but they need to push it some more... infiniband setup at insane speed.. its all xml, ALL OF IT, use binary pipes... hero
[04:43:08] <JakeSays> brianonymous: not mine
[04:43:16] <JakeSays> scalablecory: right
[04:43:27] <brianonymous> just cuz of how near it is to actual codeybits
[04:43:43] <JakeSays> brianonymous: it's no less near than xml
[04:43:52] <scalablecory> most js devs are also very familiar with html
[04:44:11] <scalablecory> so another sgml variant should be no issue :)
[04:44:37] <brianonymous> thats it. i declare we all switch back to ini files
[04:44:47] <Lizard_> WCF is the spawn of satan by the way
[04:44:59] <Lizard_> AMQP is love, Rabbit is your saviour
[04:45:10] <scalablecory> WCF is what happens when one framework tries to support EVERYTHING
[04:45:17] <brianonymous> i actually do have legacy code at work that eats INIs
[04:45:35] <JakeSays> brianonymous: amateur
[04:45:49] <brianonymous> i dunno if it gets more basic man
[04:45:56] <brianonymous> yer=mom
[04:45:59] <JakeSays> lol
[04:46:21] * brianonymous does a search in the windows dir for inis
[04:46:26] <brianonymous> any bets?
[04:46:37] <Lizard_> brianonymous, the best is when you have config that look like xml, but it's read like an ini
[04:46:57] <JakeSays> Lizard_: so apache config files
[04:47:11] <brianonymous> oh damn! all kinds of ini files in the windows dir!!
[04:47:33] <scalablecory> never would have guessed
[04:47:33] <bomb> imagine they were all YAML and be thankful.
[04:47:34] <JakeSays> brianonymous: i bet system.ini is still there
[04:48:11] <bomb> system.yaml win.yaml
[04:48:20] <bomb> JakeSays you're so Windows 98 lol
[04:48:27] <bomb> I think they're all gone with Win 2000
[04:48:30] <brianonymous> it returned 457 ini files out of c:\windows
[04:48:34] <JakeSays> bomb: dude.. system.ini was in windows 1
[04:48:57] <bomb> yeah, and that ended in Win98, no?
[04:49:07] <brianonymous> i indeed found system.ini
[04:49:08] <Lizard_> Windows 1 and 2 are urban legend...
[04:49:09] <bomb> along with win.ini
[04:49:22] <brianonymous> CGA40WOA.FON=CGA40WOA.FON
[04:49:24] <brianonymous> lol, omg
[04:49:24] <JakeSays> bomb: they're still shipped with windows
[04:49:36] <JakeSays> Lizard_: i wrote code for windows 1.05
[04:49:58] <brianonymous> its cga/ega font definition and wave/timer driver paths
[04:50:17] <brianonymous> still untouched with its [386Enh] header
[04:50:28] <JakeSays> lol
[04:50:41] <bomb> is HYMEN.SYS still there, or you already broke it?
[04:50:56] <JakeSays> LOL wtf
[04:50:58] <brianonymous> real nerds used QEMM, damnit
[04:51:03] <jonp> i assume you mean HIMEM.SYS?
[04:51:18] <Lizard_> JakeSays, I ain't never seen that shit. There was DOS and then Windows 3 got teleported everywhere... alien did it.
[04:51:24] <bpmedley> The first time I ran QEMM I lost memory
[04:51:26] <bomb> no jonp I'm not into men
[04:51:52] <JakeSays> Lizard_: it was interesting - no overlapping windows
[04:51:55] <brianonymous> bpmedley: lol
[04:52:16] <bpmedley> QEMM and Desqview!  Bruhaha
[04:52:54] <brianonymous> i spent most of my time at the dos prompt til at least win95
[04:53:29] <brianonymous> and/or the discovery of trumpet/winsock connecting to my dialup shell
[04:53:32] <Lizard_> It's got DirectDraw bruh!
[04:54:33] <brianonymous> https://i.redd.it/aduhmdlfpbg11.png
[04:54:36] * brianonymous sheds a single tear
[04:55:08] <Lizard_> windows 3.11 had the tcp/ip stack... "You mean I no longer need to pay long distance through the ass and get killed by my mom to go fuck with Vlad in Soviet fuckistan, I'm in"
[04:55:51] <Lizard_> I got grounded once when I used a Russian BBS and the bill come at $3-400
[04:56:00] <JakeSays> Lizard_: https://th.bing.com/th/id/R.9f4d90ead8c10042b89d37841e87cbc4?rik=4zyZTdtAv5VAVQ&riu=http%3a%2f%2ffarm3.static.flickr.com%2f2428%2f3635572965_c18089d964_o.png&ehk=T5DWGt74tJXN3VCj8Eyjf7kD8CD%2bQRLO5uPwG%2b%2fh7ok%3d&risl=&pid=ImgRaw&r=0
[04:56:14] <brianonymous> Lizard_: oh man, me too. at least twice. my dad was sooo pissed
[04:56:22] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:dcd9:d1f0:6169:7145)
[04:56:39] <brianonymous> i remember he ripped the phone line out of my wall
[04:56:44] <JakeSays> LOL
[05:00:07] <bpmedley> Why did you not learn the 1st time, brianonymous ?
[05:00:27] <brianonymous> iirc, my first time was a compuserve bill.. that just got me banned from the computer for awhile
[05:00:34] <bpmedley> :-0
[05:00:50] <brianonymous> the second time was a pclink bill. that was maybe 4-5 years later.. and the wrath
[05:01:29] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[05:01:30] <bomb> lol Lizard_ wtf
[05:01:32] <brianonymous> and i knew 100% i was getting my ass in trouble, but i couldnt stop
[05:01:44] <Lizard_> it was Quantum Link in Montreal before AOL
[05:02:31] <bomb> I don't understand what happened
[05:02:50] <bomb> you accidentally ran a "dialer" program that calls a paid number?
[05:02:55] <Lizard_> Lids do not know the struggle of BBS through phone lines
[05:03:00] <Lizard_> kids*
[05:03:20] <bomb> I thought most BBSes were toll-free numbers
[05:03:25] <brianonymous> JakeSays: that right there was why i was so jealous of apple friends.. not the ][ ones..
[05:03:33] *** Joins: Fiji (~Fiji@user/fiji)
[05:03:57] <JakeSays> brianonymous: wut?
[05:04:13] <brianonymous> JakeSays: the original macs, vs win1, 2, 3
[05:04:18] <JakeSays> ah
[05:04:28] <brianonymous> and hell, maybe even 95
[05:04:30] <JakeSays> i had a mac
[05:04:49] <JakeSays> yeah windows didn't become useful until nt 3.1
[05:04:52] <Lizard_> "Them kids in my days we had one phone line for the entire village"
[05:05:03] <brianonymous> i still hold to this day that the IIgs was one of the best machines of the era too
[05:05:07] <JakeSays> party lines!
[05:05:18] <Lizard_> and most of the time you picked it up and it was transmitting morse
[05:05:21] <JakeSays> brianonymous: i never used a gs
[05:05:28] <brianonymous> it was like sparkle mac
[05:05:34] <JakeSays> lol
[05:05:45] <JakeSays> i also had a lisa
[05:05:53] <brianonymous> shoulda held onto that one
[05:06:12] <JakeSays> oh! i had sex with a Lisa in the same room as my lisa
[05:06:30] <brianonymous> thats the most 80s thing i ever heard
[05:06:37] <JakeSays> LOL
[05:06:46] <Lizard_> life achievement
[05:07:42] <JakeSays> man, i had forgot about her.
[05:07:46] *** Quits: sfields (~sfields@2605:a601:adea:7a00:b908:8b7:c380:7652) (Remote host closed the connection)
[05:08:06] <brianonymous> im certain feathered hair was involved. maybe an iroc
[05:08:20] <brianonymous> cue montage
[05:08:26] <JakeSays> no iroc. i had a '67 tbird
[05:08:44] <brianonymous> so you just didnt time advance the vehicle
[05:08:48] <brianonymous> all rules still apply
[05:08:53] <JakeSays> nope.
[05:09:06] <JakeSays> that car was a total fuck machine
[05:09:26] <JakeSays> huge back seat and the suicide doors opened just the right way
[05:09:47] <JakeSays> i'd love to find that car
[05:09:55] <jonp> the 67 tbird had suicide doors?
[05:09:59] <JakeSays> yup
[05:10:00] <brianonymous> its probably where you left Lisa and Lisa
[05:10:05] <JakeSays> brianonymous: LOL
[05:10:17] <jonp> ah, the 4 door version
[05:10:21] <JakeSays> yes
[05:10:40] <Lizard_> JakeSays, I did an air hostess in the bathroom of a McDonald at like 2 AM while sleeping in a bus stop drunk waiting for my bus to "get me out of this city". That was after spending the day drinking with the president of Microsoft NA like sailors...
[05:10:42] <Lizard_> life man
[05:11:20] <jonp> how/why was the air hostess interested?!
[05:12:08] <Lizard_> got out of plane had to wait for her bus too.
[05:14:19] <Lizard_> it's how we got our license for MSDN and MS silver partner for free too
[05:14:52] <Lizard_> and my boss was PISSED! I had taken his car key to get shit from it, and forgot to ever give them back...
[05:15:41] <Lizard_> and then this chick was probably scared of niggers about...
[05:17:13] <Lizard_> the bus stop downtown Mtl where all the traveller bus are is not exactly the safest place, you get out of there at night it's like a zombie movie
[05:20:04] *** Joins: sfields (~sfields@2605:a601:adea:7a00:2b70:ef9e:5d20:bc77)
[05:21:59] * bpmedley hugs .Net 6
[05:23:22] <Nasp> Not there yet
[05:23:29] <Nasp> But i've tested it and pew pew
[05:23:38] <bpmedley> Pew pew?
[05:24:01] <bpmedley> Do you dislike?
[05:24:12] <jonp> or like very much?
[05:24:25] <jonp> no idea how to interpret "pew pew"
[05:26:30] <brianonymous> could he have meant poopoo?
[05:27:07] * brianonymous shakes nasp
[05:27:11] <bpmedley> https://dotnetfiddle.net/r54SlO <-- This is cool.  Assuming a well synced clock (and 10 ms between calls), then uuid can be created in a unique fashion, I believe.
[05:27:35] *** Quits: DarkSeid (uid394293@id-394293.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:27:38] <Nasp> bpmedley:  As in fast
[05:27:50] <bpmedley> Oh!  It's really fast..
[05:28:00] <Lizard_> 10 ms is an eternity
[05:28:03] <Nasp> I noticed our production nodes are out of sync again again
[05:28:08] <Nasp> Like 5-10ms between servers
[05:28:18] <Nasp> For some reason i'm the only one who's annoyed by it
[05:28:40] <Nasp> bpmedley:  Why not just Guid.New() ?
[05:28:50] <bpmedley> Lizard_ : The Uuid is used in a db call, so some of that is "hidden".. ;)
[05:29:11] <brianonymous> im current doing another net5 upgrade, cuz i was so happy with the last one.. seeing 6-16% reduction in cpu load so far
[05:29:21] <brianonymous> net6 prolly would be even better
[05:29:27] <bpmedley> Nasp : I want to do an INSERT in a Db with a string text column used for Uuid.  I have a UNIQUE constraint on the column.
[05:29:28] <Nasp> We dont have cpu metrics :(
[05:29:42] <Nasp> But i kinda want to see how they are lowered when we go from .NET 4.8 -> .NET 5
[05:29:45] <Nasp> And then 6
[05:29:45] <bpmedley> brianonymous : How many apps ya got?
[05:30:00] <bpmedley> Why no cpu metros, Nasp ?
[05:30:10] <brianonymous> bpmedley: too many.. but the last two i did were heavy hitters.. big services
[05:30:12] <Nasp> bpmedley:  But can't you just do Guid.NewGuid() instead of that contraption
[05:30:17] <Nasp> bpmedley:  No idea
[05:30:18] <bpmedley> Nasp : If you're interested, I could show the code..
[05:30:28] <Nasp> For some reason CTO don't find it important to have those kind of metrics
[05:30:33] <bpmedley> Weird
[05:30:41] <Nasp> Same with monitors
[05:30:48] <Nasp> I just lost my second monitor in the new office move
[05:30:49] <bpmedley> I can look at benchmark metrics all day long..
[05:30:55] <brianonymous> i do, lol
[05:31:02] <brianonymous> great indication of state
[05:31:03] <Nasp> Same, but we barely have them for work, no cpu / memory / garbage collection
[05:31:21] <Nasp> We just parse million of logs files to get response times
[05:31:22] <bpmedley> Nasp : Guid.NewGuid will not return a deterministic Uuid, I don't think.
[05:31:41] <bpmedley> Nasp : Is that why you don't like w3c logs and all that?
[05:31:42] <Nasp> Ohh you want them to be deterministic
[05:31:53] <Nasp> Why are you mentioning w3c?
[05:31:55] <bpmedley> Yes, deterministic and unique
[05:31:59] <Nasp> Isn't that what  NewId is for
[05:32:12] <bpmedley> I remember you don't like the use of w3c logs and, I assume, other types of logs.
[05:32:13] <Nasp> Also there already is a time part in Guid but it depends on what version
[05:32:26] <Nasp> I think .NET in 6 or later can't remember might change them
[05:32:33] <Nasp> I've never mentioned w3c i think
[05:32:38] <bpmedley> Got it
[05:32:42] <Nasp> But i dont like to use logs for metrics
[05:33:14] <brianonymous> dont forget, net5 has built in metrics pipes
[05:33:15] <Nasp> Hmm that guid are you randomizing all of it
[05:33:26] <Nasp> Should'nt you rather do datetime / random part
[05:33:28] <bpmedley> Nasp : https://docs.microsoft.com/en-us/dotnet/api/system.guid.newguid?view=net-6.0 <-- Is this what you're speaking about?
[05:33:30] <Nasp> brianonymous:  I know
[05:33:32] <Nasp> And i really want to use it
[05:33:53] <Nasp> bpmedley:  Yeah was wondering why you needed to build your own guid
[05:34:05] <bpmedley> Nasp : Because of collisions
[05:34:13] <Nasp> But there's like this https://github.com/phatboyg/NewId and this https://docs.microsoft.com/en-us/dotnet/api/system.guid.newguid?view=net-6.0
[05:34:15] <Nasp> Ehm collisions?
[05:36:19] <moose> I would not be worried about .NET GUID colliding
[05:37:04] <bpmedley> Nasp : I thought that there was a small probably of System.Net.NewGuid producing collisions, over time.
[05:37:07] <bpmedley> moose : why?
[05:37:16] <bpmedley> Looking at NewId
[05:37:35] <Nasp> bpmedley:  No
[05:37:43] <Nasp> there's a higher chance it will do that with your implementation
[05:37:52] <bpmedley> How so?
[05:37:56] <Lizard_> it can happen, but like once in billions, which if you are processing billions message will be like once per day...
[05:37:58] <moose> bpmedley: Because the space of a GUID is 128 bits and a portion of it is monotonically increasing based on time. The odds of a collision being relevant are only true if you create 2^64 GUIDs
[05:38:01] <Nasp> BEcaus you just randomize it
[05:38:33] <moose> You have a 1 in 2^128 chance of a collision between two GUIDs produced at the exact same moment in time (to the resolution of the time integration in the GUID)
[05:38:34] <Nasp> You need to generate 1 billion guids a second for 85 years, and only then is there a 1 in a billion chance of a collision
[05:38:41] <Nasp> moose:  That's not true
[05:38:46] <Nasp> BEcause a guid isn't 128 of randomness
[05:38:52] <Nasp> bits*
[05:39:09] <Lizard_> saw it happen in a setup processing about 100M a day once a month or so, and be dismissed as ghost in the shell until I investigated
[05:39:22] <moose> My bad, you are correct. It's 2^(128-TimeIntegralSize)
[05:39:38] <Nasp> There's a higher chance of bit errors when checking for guid collision than actual colissions
[05:40:01] <moose> That's a good way to put it.
[05:40:09] <Nasp> bpmedley:  Just use Guid.NewGuid()
[05:40:29] <moose> I am sure if you are at 10,000 ft of altitude, there's a substantially higher risk of complete system failure due to error rate caused by cosmic radiation than colliding :p
[05:41:23] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[05:41:24] <moose> But overall, the odds of a collision are approximately 1 in 1^128 between any two GUIDs, unless they're at the same moment in time :)
[05:41:35] <moose> And on the same hardware... since they sample some system specific stuff too.
[05:41:44] <bpmedley> I could be fairly wrong.  Am looking..
[05:41:51] <Nasp> You are :D
[05:41:59] <Nasp> Also read this, it's a bit interesting
[05:42:19] <Nasp> I believe there's a Guid V6 in the specs to readd the date part
[05:42:40] <moose> That's neat
[05:42:43] <Nasp> What was the reason you taught guids caused collisions
[05:42:53] <moose> ^ they do :P
[05:42:56] <moose> Just not frequently haha
[05:42:56] <Nasp> And generating a random by datetime seed would be better
[05:43:04] <Nasp> Yeah well they do but not practically
[05:43:09] <moose> Yes, I am just being silly
[05:43:23] <Nasp> The problem with guid is the random distribution, it's not great for databases or sorting
[05:43:32] <bomb> moose wow I was wondering why are you so smarter today kekeke
[05:43:45] <moose> Right, which is why I scream at things when people use them as PKs in DBs fml
[05:43:51] <moose> bomb: Oh! Very funny sir.
[05:44:01] <Lizard_> they do if you have a time part, and generate insane amount them, then once in a billion can and will happen
[05:44:38] <moose> Lizard_: I will make a multithreaded collision generator and log collisions.
[05:44:52] <moose> How long do you think it'll take?
[05:44:58] <Nasp> Read that wiki article and see
[05:45:05] <Nasp> You need 45 exabyte of storage :D
[05:45:26] <Lizard_> we only had about 2Pb
[05:45:26] <moose> I am sure you can optimize that.
[05:45:28] <Nasp> Just to get 1 in a billion chance
[05:45:45] <moose> I have a lot of storage but not quite 45EB
[05:45:54] <Lizard_> and clearly the key was not the bulk of it
[05:46:05] <moose> My storage array is 14 PiB these days
[05:46:06] <Nasp> `The probability to find a duplicate within 103 trillion version-4 UUIDs is one in a billion.`
[05:46:14] <Nasp> 14PB?
[05:46:21] <Nasp> And here i am with my 8TB
[05:46:54] <moose> It's 3 rack mounted high density arrays in my garage
[05:47:33] <moose> I was doing weird things with lots of public data from twitter and other social media platforms :)
[05:47:44] <Nasp> Nice
[05:47:47] <Lizard_> tfw the office "datacenter" is only 2 racks and a pile of shit next to them...
[05:47:52] <moose> Yeah it was a super fun project, totally funded by not me.
[05:47:54] <Nasp> I've considered if i can get space for a small rack
[05:47:57] <Nasp> But dont think so
[05:48:06] <Nasp> I kinda want a rack where i can just plug in more drives when needed
[05:48:20] <moose> I have an extra rack and it's a pain in the ass, it's in my living room next to the TV.
[05:48:30] <moose> Nobody is happy about it being there.
[05:48:38] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[05:49:04] <moose> I put the network stack for the house on it to make it look useful but it's still only like 1/4 full.
[05:49:55] <moose> Nasp: You can buy a non-rack thing that looks like a desktop but it's full of drives, a desktop SAN basically.
[05:49:58] <Nasp> I was considering a small half depth
[05:50:06] <Nasp> rack + server
[05:50:09] <Nasp> But kinda impossible to find
[05:50:14] <Nasp> A full depth rack is just insane
[05:50:16] <moose> newegg has half depths for sure
[05:50:26] <moose> I have a full depth full height and yes, it is stupid
[05:50:38] <Nasp> I've barely found any, and i would kinda prefer if i could plug in drives in the front
[05:50:38] <moose> Half depth is super expensive though
[05:50:41] <Nasp> Not that it really matters
[05:50:49] <Nasp> Full height in the living room?
[05:51:33] <moose> Yep.
[05:52:03] <moose> I didn't have space in the garage since I installed a safe in there, so I was like "Oh I will sell this unused rack!" and it ended up in the living room "temporarily"
[05:52:22] <moose> Now it's occupied and I don't ever want to move it again. Those things are heavy.
[05:52:33] <Nasp> Ohh you have a garage
[05:52:37] <Nasp> This is in an apartment
[05:52:41] <Nasp> So it's a bit more difficult
[05:52:43] <moose> Yeah, a proper garage for the rest of the servers lol
[05:52:49] <Nasp> I considered i could put it in a basement where i could rent a room
[05:52:56] <Nasp> But with flooding and all i don't really like that idea
[05:53:08] <moose> I dunno your budget but colocation could be doable for cheap depending where you live
[05:53:18] <moose> but then you have to GO there to change anything
[05:53:38] <moose> A place local-ish to me does 1/4 cabinets for $150 / mo
[05:54:16] <moose> For your drive/ storage problem though... https://www.bhphotovideo.com/c/product/1334338-REG/lacie_stgb16000400_16tb_2big_dock_thunderbolt_3.html
[05:54:24] <moose> These high density things are amazing
[05:54:25] <Nasp> colocation is not doable
[05:54:31] <Nasp> Kinda free ish to host at home
[05:54:39] <Nasp> But colocation woul be like thousand of dollars
[05:54:45] <moose> Really thousands?! my god
[05:54:48] <moose> Where are you located?
[05:54:59] <Nasp> Denmark
[05:55:12] <moose> Ah, in Seattle it's very cheap for some reason lol
[05:55:28] <Nasp> And it kinda defeatts the purpose i want it at home
[05:55:33] <moose> True
[05:55:33] <Nasp> But my space is limited
[05:55:44] <Nasp> I've considered if i could build it into some kind of furnuture
[05:55:51] <Nasp> So it's part of a cabinet or something like that
[05:56:01] <moose> That would be amazing, like one of those little table things behind a couch or whatever
[05:56:13] <moose> I assume furniture is similar in Denmark :p
[05:56:37] <Nasp> TAble behind a couch?
[05:56:47] <Nasp> Hmm can't find the picture but i saw some who made it look rather cool
[05:56:52] <moose> Yes, it sounds like that's not something y'all do over there
[05:57:23] <moose> https://imgur.com/a/5JNGvDB this is fairly common in the states
[05:57:41] <moose> Instead of chairs, sometimes you see glass doored cabinets with like... fancy dishes or something in them
[05:57:58] <moose> Or a wine cabinet or a cigar humidor if they're into that stuff
[05:58:15] <moose> Perhaps a server rack that doubles as a space heater?
[05:58:45] <Nasp> Aint got space for that
[05:58:48] <Nasp> The couch is up against the wall
[05:58:55] <Nasp> I've never seen that before
[05:59:03] <moose> Do you have a stand your TV sits on?
[05:59:13] <Nasp> But kinda nice idea
[05:59:26] <Nasp> moose: An expensive space heater
[05:59:35] <Nasp> Sure but it's not tall enough
[05:59:40] <moose> https://imgur.com/a/iYNqSnU sometimes people put TV on top of this or above it
[05:59:44] <Nasp> Also not sure if i want the server in the living room, could get noisy
[05:59:45] <moose> But I've seen racks in these before
[05:59:59] <moose> Usually for the home entertainment stuff though, like if they have a fancy storage system for their movies they pirate lol
[06:00:12] <moose> or home security cameras, because we're all paranoid here apparently
[06:01:58] <Nasp> I've kinda been wanting security cameras even though i'm on 2nd floor
[06:02:04] <Nasp> But crazy shit happens outside
[06:02:10] <Nasp> Breakins, stabbing, shooting
[06:02:14] <moose> wild
[06:02:36] <moose> I have cameras because they reduce my insurance premiums and I like the deterrent factor
[06:02:37] <Nasp> One day a swat team showed up at 02:00
[06:02:44] <Nasp> Due to someone smashing a window and someone reported it as gunshots
[06:02:55] <Nasp> Not sure security cameras change anything
[06:03:03] <Nasp> They are usually quite expensive i think
[06:03:05] <moose> Haha we had the county sheriff show up down the road once because someone was breaking their ex-boyfriends windshield out with an axe
[06:03:14] <Nasp> I just wanted something selfhosted and some of those wide angle you can stick on windows now
[06:04:24] <bpmedley> Nasp : In Linux, the Guid is not time based.  It's random bytes.
[06:04:52] <bpmedley> Excuse me, it's not time and random bytes based.  It's all random.
[06:05:13] <Nasp> Depends on the guid implementation
[06:05:16] <bpmedley> https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Guid.Unix.cs
[06:05:23] <Nasp> Yet still it's qutie a lof of possibilities
[06:05:27] <Nasp> Your randomness, now so much
[06:05:35] <bpmedley> My randomness?
[06:05:40] <Nasp> Your homemade guid
[06:05:47] <bpmedley> I don't want a random guid..
[06:05:58] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:06:14] <Nasp> Well you wanted deterministic and no colissiosn
[06:06:16] <Nasp> Or what was it
[06:06:37] <bpmedley> I may change the code and base the guid bytes off of the db serial id..
[06:08:30] <Nasp> Just use NewId
[06:09:33] <bpmedley> Nasp : It's now clear how I can use NewId in this scenario.  Feels like I would need the last id so I can initialize NewId..
[06:09:37] <bpmedley> *not clear
[06:09:52] <Nasp> No you can still just new onw up
[06:10:01] <Nasp> But they contain Timepart + random
[06:10:06] <Lizard_> SCOPE_IDENTITY, GUID as key is pure heresy anyway...
[06:10:19] <Nasp> Like your said your solution you can't generate many ids at the same time
[06:10:25] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[06:10:25] <bpmedley> Lizard_ : I'm not using them as a key.  I just want a UNIQUE constraint to work.
[06:10:38] <Nasp> You also wanted them incremental right?
[06:10:53] <bpmedley> Nasp : Incremental is a nice-to-have.
[06:11:11] <Nasp> If you just want unique then a normal guid works just fine
[06:11:55] <bpmedley> Nasp : Do you believe that the implementation in Guid.Unix.cs produces a Guid v4 that has the unique constraints that were detailed a few minutes ago?
[06:12:39] <Nasp> Yes
[06:12:43] <Nasp> It's more unique than yours
[06:12:59] <Nasp> Even thought it was made that way accidentially and may or may not change in future .NET versions
[06:13:22] <bpmedley> How can it be as unique as was specified if it's almost all random bytes?
[06:13:42] <bpmedley> I really like NewId, though
[06:13:51] <Nasp> Why can't it be unique?
[06:13:51] <moose> I have a perfectly unique key algorithm that can exhaust its entire key space without fixed points across all time spaces that is monotonically increasing
[06:13:54] <Nasp> Isn't yours random bytes as well
[06:14:09] <moose> Takes up 128 bits of space.
[06:14:16] <bpmedley> Nasp : No, I seed a random generator.
[06:14:31] <Nasp> bpmedley:  Yes and do you think that's more or less random than the one you just linked?
[06:14:45] <bpmedley> moose : I don't think mine is random at all
[06:14:47] <bpmedley> Nasp
[06:15:02] <bpmedley> moose : I would very much appreciate that knowledge
[06:17:05] <moose> bpmedley: Sure lemme get it for you.
[06:17:28] <bpmedley> Nasp , moose : I'm adding NewId now.. looks like a great win..
[06:17:52] <Nasp> It's deterministic, sequaltial but still unique
[06:18:02] <Nasp> Guidv4 is just "random" and unique
[06:18:31] <Nasp> Although that NewId might not have implicit casting if i remember correctly, not sure why
[06:25:10] *** Joins: Fiji_ (~Fiji@user/fiji)
[06:28:37] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:40:29] <moose> bpmedley: OK so I rewrote it from memory https://dotnetfiddle.net/4dMOMR
[06:40:37] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[06:41:07] <moose> Odds of collision are, between runs on the same machine even, precisely 2^128
[06:41:43] <bpmedley> Impressive!!  And, thanks.  I hope you were not inconvenienced any.  I will peruse in detail in minute..
[06:42:46] <moose> It's monotonically increasing by exactly 1, it's globally unique with odds of collision on the same machine between processes is 1 in 8.64 x 10^12. It also requires very few cycles to run.
[06:43:00] <Nasp> Cough multiple threads
[06:43:08] <moose> Yeah it's not thread safe.
[06:43:23] <moose> But you can fix that with a couple interlocked CAS operations if you so desire lol
[06:43:49] <moose> Then it won't be monotonically increasing though, it would be a derived sequence and that would be fine for databases or what have you.
[06:44:53] <Nasp> Also it has a high chance of collision if you generate a lot
[06:45:28] <moose> It's more collision resistant than the RFC spec UUID
[06:45:39] <moose> But only on systems with high precision timers
[06:46:00] <moose> It absolutely requires 10-ns resolution to get the 1 in 8.64 X 10^12 collision rate between separate processes or systems
[06:47:19] <Nasp> I feel like what you've made is really just an integer with a timestamp in front
[06:47:25] <Nasp> In that case, why not just use an int
[06:48:15] <moose> There is a rollover problem, so if you generate many it does lose the sorting property eventually and it's not deterministic as to when it will. You can fix it by sacrificing total id key space and using the first bits of the MSB as something as precise as you want (day of the year, hour of the year, whatever)
[06:48:48] *** Quits: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca) (Remote host closed the connection)
[06:49:07] <moose> Nasp: The "integer with a timestamp in front" isn't quite accurate. The timestamp is the initial value of the MSB to allow for locality spacing, the "globally unique" part.
[06:49:21] <moose> It does use both halves as part of the counter.
[06:49:29] <Nasp> Not really sure what that solution can be used for
[06:49:30] <bomb> Nasp I want you to end your relationship with jmer I think the guy is a mass murderer
[06:49:32] <Nasp> Just use an integer
[06:49:47] <bomb> "Just use an integer" LOL famous last words.
[06:49:50] <moose> Nasp: Then you're not thinking hard enough :)
[06:49:57] <Nasp> Well instead of homemaking unique ids like that
[06:50:01] <Nasp> Which is just an integer
[06:50:08] <Nasp> Also it resets in reboot and starts all over
[06:50:09] <moose> It's not just an integer.
[06:50:12] <bomb> UUID FTW
[06:50:13] <moose> Why are you saying it's just an integer?
[06:50:19] <Nasp> Because it is
[06:50:23] <bomb> use Math.random() then XD
[06:50:25] <moose> No, it's not just an integer.
[06:50:59] <Nasp> Ok two longs then
[06:51:14] <moose> It's a 128-bit unique id that has a sparse locality property making it suitable as a globally unique identifier. This is a common technique used in sequences generated by RDBMS for parallel insertions and generating the primary keys under the surface.
[06:51:28] <moose> It's also pretty common in basically every HPC scheduling system
[06:51:59] <Nasp> Sure for systems where you need that and reset all data on reboot
[06:52:02] <moose> Yes, it's represented internally as two ulongs, for performance purposes. You could use a byte[] if you really wanted to. But everything under the hood is just a bunch of bytes, so I guess IRC is basically a friggin' byte and we should just use bytes instead of chatting.
[06:52:18] <Nasp> But then why not just use an integer type, much easier to use and understand
[06:52:43] <moose> It's cheaper to increment 2 ulongs than 4 uints.
[06:52:55] <moose> You would still needs to use 4 uints.
[06:53:01] <Nasp> Why not just a single long
[06:53:20] <Nasp> Also long is an itneger type
[06:53:39] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:53:40] <moose> Then it only provides 2^64 possibilities and after 2.4 billion generations you would have a 50% collision rate
[06:53:55] <moose> You also lose the locality.
[06:54:07] <bomb> how to make popsicles at home?
[06:54:09] <Nasp> Why would it have collisions
[06:54:18] <phrosty> i read something a while ago that showed GUID is not quite so difficult to cause collisions with
[06:54:21] <phrosty> definitely shouldn't pretend they can't happen, if that's important to you :D
[06:54:31] <moose> Nasp: Because an integer rolls over after many increments?
[06:55:03] <moose> If you have a 32-bit integer, as you've mentioned we should just use here, you will see a 50% collision rate at 50% of the exhaustion of the range
[06:57:09] <Nasp> Use an integer type and increment it, i dont care how many bits you use for it
[06:57:15] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:57:27] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[06:57:34] <moose> OK so on the first number you have a collision now between two processors, if you just use an integer type and increment it.
[06:57:42] <moose> to processes, not processors
[06:58:09] <bomb> you guys are nerding me out
[06:58:24] <moose> You need an initial value that is always ahead of previously generated numbers.
[06:58:40] <moose> So this is where the timestamp-derived component comes into play
[06:58:54] *** Joins: DevJohnC (~DevJohnC@about/csharp/DevJohnC)
[06:58:54] *** ChanServ sets mode: +v DevJohnC
[06:59:04] <moose> If you just used that and incremented it with say a ulong then you still have 2^64 possible numbers. The implementation I provided is 2^128 which is similar to GUID
[06:59:19] <moose> So until .NET has a UInt128, I think using two ulongs is required.
[06:59:28] <moose> And BigInteger is too slow.
[06:59:29] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[06:59:43] <bomb> finally a homo sapiens with a brain here. sup DevJohnC
[06:59:50] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[07:00:15] <moose> I don't understand your argument basically. It's not just an int. It's an implementation of a 128-bit unsigned integer basically, yes, but the selected initial value is important to make it globally unique with sparse locality.
[07:00:50] <Nasp> I dont see how the first long makes it globally unique
[07:01:00] *** Quits: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[07:01:05] <Nasp> Far from it
[07:01:37] <moose> The likelihood of having a collision on the first value is 1 in 8.64 X 10^12 and the second value is 1 in 2^64
[07:01:58] <moose> If you simply started counting from 0, you end up with a 100% collision rate across different instances, processes, restarts, etc.
[07:02:27] <Nasp> And if two system starts at the same time?
[07:02:35] <Nasp> Would'nt they then generate the same first part
[07:02:43] <moose> Not practically, no.
[07:02:57] <Nasp> There's a high risk right
[07:03:00] <moose> Nope.
[07:03:01] <moose> It would need to be two identical system start times with two identical process start times.
[07:03:14] <moose> They'd need to be at the same moment in time down to a 10 nanosecond interval.
[07:03:23] <moose> The difference in merely environmental temperature will offset that.
[07:03:41] <Nasp> So no  thread safety
[07:03:46] <Nasp> And not even process safety
[07:03:54] <moose> What do you mean "process safety"?
[07:03:59] <Nasp> If you start two of those processes on the same system
[07:04:05] <Nasp> Woud'nt they start at the exact same time
[07:04:09] <moose> No, they would not.
[07:04:21] <Nasp> Not start at the same time, but have the same tickcount
[07:04:25] <Nasp> Or process start time
[07:04:34] <Nasp> Then it's just if they start within the same 10 nanoseconds as you said
[07:04:41] <moose> A SINGLE cache miss during launch will cause it to trip a different initial value.
[07:04:52] <bpmedley> moose : Looks neat.  I like the simplicity of using two ulong for 128 bits.
[07:05:06] <moose> So, the odds are again, as provided. The odds are absolute.
[07:05:17] <moose> No matter how closely you try to launch your processes, those are the odds.
[07:05:57] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[07:06:05] <moose> I don't believe it is actually possible to reproduce a collision in practice outside of say extremely tightly controlled lab environments where you can cool the CPUs down or perhaps set their clock rate to the exact same time and heat/cool them to produce identical initial states.
[07:06:13] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[07:06:18] <moose> And even then, it's not going to happen on Windows and certainly not in a managed language.
[07:07:11] <bomb> DevJohnC if I buy that 7-string Djent guitar I want, can we tour the world together and bang chicks?
[07:07:14] <moose> You would really truly need to run these at identical times on identical hardware in identical conditions. They would need to be freshly booted CPUs with no cache state etc.
[07:08:01] <Nasp> I would still say it has a higher chance of collisions than just using a guid
[07:08:07] <moose> You would be wrong then.
[07:08:22] <moose> Go calculate the probability of a collision if you don't believe my calculations.
[07:08:40] <bpmedley> Omg, NewId is sortable?  Nasp ?
[07:08:48] <Nasp> Well i dont know what you've based your calculations on, but i just look at that current time tick - system u√•time
[07:08:55] <Nasp> bpmedley:  Yes
[07:08:59] <bpmedley> Sweet!
[07:09:07] <bpmedley> I already added NewId into the app
[07:09:34] <moose> Nasp: It's ticks representing the current date/time minus the ticks since the launch of the process.
[07:09:58] <moose> That gives you the absolute time of the origination of the application itself, at launch.
[07:10:07] <moose> Which no process can share.
[07:10:14] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:12:09] <moose> I took the probability of colliding a single value at 10ns intervals over a single day (two machines competing for space is only relevant for a few hours, actually, but lets assume 24) and combined that with the probability of colliding a single 128-bit unsigned integer and when you integrate them you end up with your true collision rate, which is very close to 2^128, it's actually like 2^127.2 or something.
[07:12:52] <moose> Anyway you can say that the key space for this is 2^128 and you are not wrong.
[07:13:18] <moose> And it always uses up its entire key space, making the random collision rate 1 in 2^128
[07:14:50] <moose> For quite a few HPC database engines, this is what is done to generate large sequences for clustered environments. The timestamp is derived a bit different by some, including a node identifier which is chosen in a sparse distribution based on the fixed node count
[07:15:26] <moose> bomb: why can't you bang chicks now
[07:16:21] <Nasp> Try redoing that collisions with 10ms instead of 10ns
[07:16:44] <moose> Why?
[07:17:04] <moose> Oh, it's retarded that TickCount64 is actually milliseconds.
[07:17:11] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[07:17:16] <moose> And it's 1ms not 10ms
[07:17:18] <Nasp> https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount?redirectedfrom=MSDN
[07:17:23] <Nasp> It's only precise from 10-16ms
[07:17:28] <moose> It should still be fine, probably 2^127 then.
[07:17:30] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[07:17:44] <moose> There will be sufficient jitter between startups.
[07:18:55] <moose> Even so, it's better than GUID still statistically :)
[07:19:20] <moose> You aren't going to start a process within the same tick count with the exact same startup duration
[07:19:26] <moose> It's just not going to happen.
[07:19:49] <moose> That's what the subtraction is for, to prevent issues with startup at the same time.
[07:21:30] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[07:21:43] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[07:21:52] <Nasp> Start two processes on the same machine, both will have same Environment.TickCount64
[07:22:43] <moose> That's not the only value I am using.
[07:23:09] <moose> I even went ahead and just launched 32 threads and tried to create parallel instances of the generator to collide the initial state and it is pretty far off.
[07:23:36] <moose> That's the fastest way to create instances with a chance to collide that simulates separate machines, processes, etc.
[07:23:57] <bomb> moose I'm not a rooster yet kekekek https://www.youtube.com/watch?v=uAE6Il6OTcs
[07:24:28] <Nasp> I just tried kinda the same and did it in 100000 iterations with a single core
[07:24:30] <moose> I was able to collide them in a for loop on one thread, that's aobut it.
[07:24:42] <moose> And that's expected and fine.
[07:25:10] <moose> You would use the generator as a singleton behind something like DeterministicUniqueId.New()
[07:28:41] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[07:28:54] *** Parts: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) ()
[07:56:16] <bomb> moose my significant other once told me I was the C++ of men. what does that even mean?
[07:56:55] <moose> That you're very quick and complicated with quite a bit of problems figuring out exactly what went wrong when something doesn't work out for you
[07:57:22] <moose> Do they code? If so, who knows.
[07:57:28] <moose> If not? Then they probably are calling you quick in bed,
[07:57:40] <bomb> lol
[07:57:49] <moose> Maybe you're high maintenance
[07:58:39] <moose> Or it's one of those "Once I understood how you worked, I could control your insides."
[07:58:47] * moose shrugs
[07:58:55] <moose> Either way, it sounds a bit kinky
[07:59:50] <moose> I wish I had an SO that was like C. Easy to understand, quick to do shit I want, and only complains when there's an actual problem.
[08:00:33] <bomb> that would mean I'm insecure AF with choke full vulnerabilities
[08:00:43] <moose> Only if your creator was a shithead
[08:01:02] <moose> But that's a good one. Insecure. Heh.
[08:01:13] <moose> As a joke in ##crypto for a while we would call algorithms "unsecure"
[08:01:35] <moose> I guess it's #crypto now. It's cryptography, not cryptocurrency.
[08:02:05] <moose> 153,995 DNS queries through my proxy thing and no failed requests. Only a few retransmissions that Windows decided to make because it probably doesn't handle 0 TTLs very well.
[08:02:17] <moose> I am TTL rewriting for testing, basically no cache.
[08:03:32] <bomb> why do you running a DNS proxy? blocking domains?
[08:04:21] <moose> I am building an endpoint protection service with a DNS analysis offering
[08:04:56] <moose> It can tell you the websites a specific client requested resolution for with classifications on them, block known malware/phishing/fakes, that kind of thing
[08:05:34] <bomb> cool. going to be a paid service?
[08:05:37] <moose> I am building an appliance as well where it can be thrown into an enterprise environment as a turnkey recursive DNS + endpoint protection thing
[08:05:39] <moose> Yeah.
[08:05:58] <moose> It'll have two brands, one for commercial and one for residential as a parental control thing.
[08:06:06] <bomb> hah, you ever watched the show Silicon Valley?
[08:06:09] <moose> Yes
[08:06:44] <bomb> the appliance scene here https://www.youtube.com/watch?v=_NeJ3Kg6OUo
[08:10:33] <moose> I just realized that they actually had two horses fucking.
[08:10:58] <bomb> hilarious innit
[08:11:35] <moose> yeah
[08:11:37] <moose> LETS WIN IT
[08:17:53] <bomb> do you like Radiohead moose huh?
[08:18:04] <moose> you asked me this already lol
[08:18:11] <moose> and provided a recommendation
[08:18:31] <bomb> oh. what was your recommendation?
[08:18:42] <moose> You provided one, not me
[08:18:56] <bomb> now you're being racist
[08:19:36] <bomb> drawing a clear line between you and me, even using the words "you" and "me"
[08:19:56] <moose> I wonder what you'd call that
[08:22:19] <bomb> so there is this sissy ass singer who calls his sorry self "RHODES"
[08:22:30] <bomb> and it screws up my ability to search for Fender Rhodes on YouTube.
[08:39:44] <bomb> https://youtu.be/EyofqsBQS5I?t=151
[08:44:55] <moose> Anyone know if it's possible to find the process ID of a particular process using a socket with a given source address? Socket isn't listening, but will be a client.
[08:45:14] <moose> Local to the machine, obviously. Just curious if I can trace the origin of a UDP packet hitting my DNS proxy :p
[08:48:45] <bomb> I know how to do that on Unixes.
[08:51:33] <moose> I mean programmatically.
[08:51:35] <moose> in C#
[08:51:42] <moose> Not netstat et al
[08:52:45] <bomb> ouch. you gotta freedive into winapi
[08:52:54] <moose> Do you know of a method?
[08:53:13] <moose> I was considering just invasively hooking sendto/recvfrom on every process XD
[08:53:26] <bomb> a quick DDGfu hints GetIpStatistics
[08:54:00] <bomb> nvm it's for stats obviously lol
[08:54:06] <moose> Yeah
[08:54:07] <moose> No enumeration
[08:54:15] <bomb> did you know that I bought PureBasic, by the way?
[08:54:18] *** Joins: brianonymous_ (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net)
[08:54:23] <bomb> it's a commercial BASIC dialect, compiler, and IDE.
[08:54:23] <moose> I wish there was a GetUdpTable for not just listeners, but senders
[08:54:28] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:54:33] <moose> god why
[08:54:38] <bomb> fully supports WinAPI, Posix, und Cocoa
[08:55:26] <bomb> I don't know, I was bored with all the deployment issues I was having for a small tool. I just wanted to shit code and compile to single program.
[08:56:12] <bomb> check out the features. it's cute, isn't it: https://www.purebasic.com/
[08:57:30] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[08:57:35] *** Quits: brianonymous (~int19h@user/brianonymous) (Ping timeout: 250 seconds)
[08:57:40] <bomb> moose do you think cajon sounds dumb when paired with keys? https://www.youtube.com/watch?v=kJqH9n36q7s
[08:58:22] <moose> Yes, it's quite bad
[08:58:31] <moose> Individually, wonderful
[08:59:25] <bomb> it sounds like a kindergarten kid hitting furniture with his toys right?
[09:01:58] <bomb> or worse, it sounds like an adult sitting on top of a wooden box and hitting it
[09:12:46] *** Joins: kstatz12 (~karl.stat@50-105-191-199.snpr.wi.frontiernet.net)
[09:14:51] <moose> how about watching a man with a speech impediment argue with a toddler about the existential crisis of artificial intelligence advancement
[09:14:57] <moose> https://www.youtube.com/watch?v=WSKYWu-S2G0
[09:15:47] <bomb> sounds hilarious, but I can't click right now. I'm in the middle of something
[09:16:20] <moose> I hope the "something" isn't your timer ticking down to zero with some kind of weird balance the water in some bottles challenge in the middle of a park
[09:17:21] *** jinsun__ is now known as jinsun
[09:18:18] <bomb> ehh, what is this, 1800s? what's up with that steampunk shit. we're fully switched to digital electronics decades ago.
[09:20:08] <moose> IDK
[09:20:15] <moose> But my god ConcurrentBag<T> is super memory inefficient
[09:20:29] <moose> I have a bag with a capacity of 16 and it has 137 WorkStealingQueue<T> inside of it
[09:20:41] <phrosty> moose, check out the NetworkInformation class
[09:21:07] <moose> That's like 16 + 1 per core and a random 1 somewhere
[09:21:42] <bomb> lol, what a silly name for a data structure
[09:22:25] <moose> phrosty: Yes, sadly it only lets you enumerate listeners
[09:22:41] <moose> I want to enumerate all sockets and get the local endpoint for it and the PID that owns it
[09:23:02] <bomb> I'll keep talking to make you type phr<Tab> on your every post lol
[09:23:17] <moose> That's not how my client works
[09:23:48] <bomb> you type the whole nickname, like manually?
[09:23:53] <moose> No.
[09:24:18] <bomb> you, god forbid, click the nickname with a pointing device like a mouse to quote it?
[09:24:24] <moose> I can just click on someone and select "conversation" and it will narrow down their messages and my prefixed replies, omitting the prefixes, and automatically prepend their name
[09:24:36] <bomb> JESUS DOGFUCKING CHRIST I KNEW
[09:24:39] <moose> bomb: So if I want to talk to you, I can just do this
[09:24:41] <bomb> that's so low
[09:24:43] <moose> bomb: And it will handle all of it for me
[09:24:49] <moose> bomb: It's kind of annoying for other users though lol
[09:25:09] <bomb> oh you only need to click once?
[09:25:11] <moose> bomb: It's also a little annoying for me, since I can't see other messages and it doesn't let me know unless someone highlights me.
[09:25:14] <moose> bomb: Yeah.
[09:25:21] <moose> bomb: I can only see your messages right now for example.
[09:25:27] <moose> bomb: Even if you don't prefix me.
[09:25:32] <bomb> well, useful in busy channels
[09:25:38] <bomb> is your client Pidgin, btw?
[09:25:40] <moose> bomb: Yep, also in Q&A sessions and such
[09:25:44] <moose> bomb: No, it's HexChat for Windows.
[09:25:57] <bomb> what? my hexchat can't do that
[09:26:04] <moose> bomb: That's right :)
[09:26:20] <bomb> so it's a custom script
[09:26:34] <moose> bomb: Correct.
[09:26:40] <moose> bomb: You know you can write addons and such in C or Lua, right?
[09:26:48] <moose> bomb: I've considered adding support for C# to HexChat
[09:26:55] <bomb> don't you think you have enough free time to build your own Hadron collider and rival CERN?
[09:27:02] <moose> bomb: I have a gamma spectrometer in my garage.
[09:27:18] <moose> bomb: More than one, actually :p
[09:27:54] <moose> bomb: I have a services business that does nuclear materials locating, testing, and site inspections and sorta-kinda home inspections for radon
[09:27:57] <bomb> alright man let's quit this brainfuck mode
[09:28:15] <moose> bomb: Oh, the prefixes? I told you!
[09:28:21] <moose> It's awful.
[09:28:43] <bomb> yeah, I mean I'm looking at this channel anyway, but when you quote me all your messages are fucking green
[09:29:32] <moose> hahaha
[09:29:42] <moose> That's terrible indeed
[09:30:15] <moose> But uh, yeah. If you ever need something tested for nuclear contamination, lemme know :p
[09:30:38] <moose> I've had people send me weird shit from all over back when the whole fukushima thing was in the news constantly
[09:31:27] <moose> Got a whole box of candy bars from a laboratory in australia who couldn't do food testing. No contamination, all safe to eat except for the part where they had been unwrapped already and manhandled by weirdos.
[09:32:03] <bomb> I mean, is this safe for you?
[09:32:43] <moose> I mean, I have safety precautions aligned with the NRC's requirements and the department of health oversees my licenses and such.
[09:33:02] <moose> It's mostly safe. Any radiation exposure carries calculable risk.
[09:33:35] <moose> I certainly have an increased lifetime risk of a deadly form of cancer compared to others, but it's probably around the same as pilots, flight attendants, etc.
[09:34:00] <moose> You get quite a bit of exposure in an airplane. More than working in a nuclear power plant.
[09:34:38] <bomb> sry urgentquit
[09:34:38] *** Quits: bomb (~bomb@user/bomb) (Quit: ‚Äé)
[09:36:25] <phrosty> moose: https://docs.microsoft.com/en-us/dotnet/api/system.net.networkinformation.ipglobalproperties.getactiveudplisteners?view=net-6.0
[09:36:25] <moose> he exploded
[09:36:54] <moose> Aye, that's just for listeners though.
[09:38:20] <moose> I will see if it shows something, but I don't think it will show a socket unless it called bind
[09:38:27] <moose> So, blind transmissions are probably not going to show.
[09:38:28] <phrosty> there's no such thing as a non-listening udp socket
[09:39:38] <moose> I wonder why netstat doesn't show me anything useful then.
[09:41:22] <moose> Yep, not showing any UDP connections that have not called bind
[09:41:32] <moose> sockets, that is
[09:41:38] <phrosty> well, yeah.
[09:41:42] <phrosty> but you can't send from an unbound socket either
[09:41:59] <phrosty> so i'd expect it to show up as soon as you use it
[09:42:34] <moose> Hm, maybe these sockets are unbinding after every send/receive.
[09:42:46] <phrosty> that seems... weird :)
[09:42:49] <moose> yes it does
[09:42:49] *** Quits: kstatz12 (~karl.stat@50-105-191-199.snpr.wi.frontiernet.net) (Ping timeout: 256 seconds)
[09:43:03] <moose> I've not seen a single client's port yet
[09:43:11] <phrosty> hrm
[09:43:32] <moose> It is showing loopback stuff and shows my bound socket on port 53
[09:43:45] *** Joins: pingo (~pingo@84-255-226-67.static.t-2.net)
[09:43:55] <moose> Ah, you know what wouldn't surprise me...
[09:44:52] <moose> I bet DNS lookup via windows API isn't creating a socket and doing anything with it at all really inside of those functions
[09:45:51] <moose> Probably goes through some interface that adds the query to a queue, checks cache, all of that. And if it does create a request, it uses an already existing socket I bet and correlates based on the DNS transaction ID.
[09:46:01] <moose> But that doesn't explain why all of the socket endpoints are different :)
[09:47:41] <moose> Wireshark confirms that the source and destinations are accurate in my log. Netstat does not show the requestors and neither does GetActiveUdpListeners
[09:49:28] <phrosty> what's your code look like
[09:50:01] <moose> The sample code lol
[09:50:12] <moose> I modified it to only print the remote endpoint
[09:50:23] <phrosty> ohhhh
[09:50:27] <phrosty> it will never show the remote endpoint
[09:50:42] <moose> I meant the port
[09:50:48] <moose> I get IPEndPoint back from the list
[09:50:50] <moose> I just dump the ports
[09:51:03] <moose> So, in this case it's the "remote port" from my server's perspective :)
[09:51:08] <moose> My brain crossed the words
[09:52:31] <moose> For example, my server receives a request from 127.0.0.1:57110 and replies to it. I never see that port anywhere on netstat or in that list.
[09:52:59] <moose> I can modify it and run it continuously to see if it picks it up at all and just add the ports to a HashSet<ushort> I guess.
[09:53:40] <bpmedley> I semi-badly ported a smart cropping library from skiasharp to ImageSharp.  I wonder what the best way to handle using it while asking the original author's opinion.
[09:53:41] <phrosty> hmmm is it possible it doesn't show loopback addresses?
[09:53:52] <bpmedley> moose : What are your netstat arguments?
[09:53:55] <moose> It shows me my listener on 53
[09:54:04] <moose> netstat -an -p udp
[09:55:04] <moose> And if you're thinking -q, it's the same for udp
[09:59:56] <phrosty> i bet it considers anything not explicitly bound to non-0 port to be a "client"
[10:00:56] <moose> Why's it show my server on 53 then? :p
[10:01:23] <moose> It's created on 127.0.0.1:53 and is bound and does send and receive.
[10:01:34] <bpmedley> moose : I punted, will you try: ss --udp --all ?
[10:01:51] <moose> What is ss?
[10:01:51] <bpmedley> Or, are you using Windows?
[10:01:55] <moose> I am on Windows
[10:01:56] <moose> lol
[10:01:58] <bpmedley> haha
[10:02:00] <bpmedley> my bad
[10:02:04] <moose> It's fine :)
[10:02:21] <moose> Who uses anything but Windows?! My goodness. It's the operating system of bUsInEsS1!
[10:03:43] <bpmedley> I've noticed, as a tangent, that there is increased startup interest in .net.
[10:04:04] <moose> Yeah a lot of folks are now making nice new things in C# instead of Python I've noticed
[10:04:11] <bpmedley> Sweet
[10:04:19] <moose> Probably because of the similar ease and now wide availability and support cross platform
[10:04:34] <moose> It's no longer "Use mono, the unsupported alternative to .NET and good luck with a good IDE"
[10:04:53] <moose> You can get VS Enterprise on Mac/Linux/Windows and run .NET 6 on any of them.
[10:06:21] <bpmedley> Just so amazing that a Linux and Windows executable is one publish command away.
[10:17:46] <phrosty> moose, it works for me
[10:18:11] <moose> Does netstat work for you though? :p
[10:18:25] <phrosty> https://gist.github.com/scalablecory/3c81ebdd5eb8a45dbaa75d280fc243a5
[10:18:33] <phrosty> lmk if that works
[10:19:40] <moose> I like how you didn't bind the socket after saying you had to :p
[10:19:46] <moose> haha
[10:20:01] <moose> I will give this a go but remove your send code and such
[10:20:07] <moose> I'm just going to steal your printlisteners
[10:20:17] <moose> It's basically what I have, but I will loop it and see
[10:20:19] <phrosty> you do need to, with the C apis -- Socket binds it for you if you haven't
[10:22:04] <moose> Yeah
[10:22:05] <moose> I know.
[10:22:19] <moose> It looks like this particular client is indeed creating a new socket for each request
[10:22:52] <moose> It's the Microsoft network connectivity status indicator
[10:23:12] <moose> So, they built a custom UDP client for that?
[10:23:12] <phrosty> ah, are you trying to trick it into thinking it's connected? :D
[10:23:17] <moose> Or maybe it bypasses cache every time.
[10:23:35] <phrosty> are you trying to capture the DNS packet?
[10:23:43] <moose> No, I am trying to figure out the origin of some requests for my DNS proxy, to see if it's sensible to try to correlate requests down to the process level as a feature
[10:23:54] <moose> I have a DNS proxy that is acting as an endpoint protection service.
[10:24:04] <moose> Or, part of one rather.
[10:24:18] *** Joins: _genuser_ (2fb823e8@67.205.143.82)
[10:24:22] *** Parts: _genuser_ (2fb823e8@67.205.143.82) ()
[10:24:28] *** Joins: _genuser_ (2fb823e8@67.205.143.82)
[10:24:30] *** Parts: _genuser_ (2fb823e8@67.205.143.82) ()
[10:24:39] *** Joins: _genuser_ (2fb823e8@67.205.143.82)
[10:24:41] <_genuser_> hello people.
[10:24:45] <moose> Right now I am correlating individual DNS requests to the specific user account on a given machine and reporting it. It would be cool to also display application data and allow for whitelist/blacklist at the process level.
[10:24:46] <phrosty> greetings
[10:24:58] <phrosty> hmmm
[10:25:07] <moose> But it seems pretty resource intense to scan for endpoints constantly.
[10:25:13] <phrosty> yes, it is very.
[10:25:18] <moose> and pretty much opportunistic
[10:25:38] <moose> It would be cheaper to hook bind on every process
[10:25:55] <moose> But that's super invasive and MS will probably drop my smartscreen whitelist for that.
[10:26:04] <phrosty> the best way would be to write a WFP driver
[10:26:49] <moose> Yeah I was originally going to do an NDIS filter driver
[10:26:52] <moose> But that's uh, quite awful
[10:27:30] <phrosty> WFP is simpler than NDIS, but... still gotta deal with the fun of writing a driver
[10:27:42] <phrosty> and then you need to get it code signed
[10:27:43] <moose> And getting it signed and verified and all of that.
[10:28:57] <moose> Even with WFP I don't think it will tell you the moment something happens like a bind
[10:29:04] <moose> Only send/receive probably and then it won't have process data
[10:29:17] <phrosty> it will give you packet and process data
[10:29:28] <phrosty> i don't think it has bind data but could be wrong
[10:29:30] <moose> Process data too? That's nice then.
[10:29:43] <phrosty> bind event*
[10:29:46] <moose> Well driver dev is exciting and glorious, maybe this is the way forward when I desire to do that feature
[10:30:21] <moose> I wonder if I could easily deploy system-wide TLS decryption that way
[10:31:40] <phrosty> you'd still need a way to get the key
[10:31:54] <bpmedley> _genuser_ : Are you still learning ML?
[10:32:09] <_genuser_> bpmedley not at the moment. Why do you ask?
[10:32:12] <moose> phrosty: I would just deploy a CA as part of the install.
[10:32:18] <moose> Make it a trusted root.
[10:32:30] <phrosty> ah
[10:32:40] <moose> Then just MITM the session
[10:32:43] <bpmedley> https://github.com/softawaregmbh/smartcrop.net  <-- Found this jewel.  Not sure it's relevant for your use cases.
[10:32:44] <moose> But that would be annoying/difficult I think.
[10:33:02] <phrosty> you'd have to parse TLS, but it's actually not that complicated
[10:33:12] <moose> Yeah, parsing TLS would be the daunting part I think
[10:33:17] <_genuser_> bpmedley interesting.
[10:33:27] <moose> But then again I thought DNS would be easy lol
[10:35:46] <phrosty> few things are both fun and easy
[10:35:52] <phrosty> hehe
[10:35:59] <moose> DNS was fun up until a point.
[10:36:13] <moose> Namely the shenanigans it does to compress data
[10:36:47] <phrosty> yeah lol that compression is fun
[10:37:40] <phrosty> and then you have DoH becoming popular
[10:39:52] *** Joins: Ducki (~ducki@p54bba1ba.dip0.t-ipconnect.de)
[10:39:52] *** Quits: Ducki (~ducki@p54bba1ba.dip0.t-ipconnect.de) (Changing host)
[10:39:52] *** Joins: Ducki (~ducki@user/ducki)
[10:40:00] <moose> That's essentially what I am doing. I have a local proxy that captures UDP/TCP DNS messages and forwards them to an API I built.
[10:40:17] <moose> It's not DoH proper, but the same concept
[10:40:21] <_genuser_> bpmedley are you learning ML stuff now?
[10:40:26] <phrosty> nice
[10:40:52] <bpmedley> Dunno.  I'm interested in Image Processing, so that may be the same thing, _genuser_
[10:41:20] <moose> One requirement for my project is auditing, so I can't really do DoH from the client direct. Always needs to be proxied with machine-specific data included such as machine id, name, user logged in, etc
[10:41:52] <_genuser_> bpmedley I was mainly interested in ML, so I could feed it trading data and see if it can help identify the correct options strikes for trading for the given time period.
[10:42:02] <_genuser_> bpmedley secondly, it would boost my resume.
[10:42:24] <_genuser_> bpmedley I see though data analytics is as a whole field getting more interesting and ML is just a part of it.
[10:42:26] <moose> _genuser_: AI says, sell all of your silicon!
[10:42:49] <_genuser_> moose ?? silicon? What are you heard? Or is this a joke that I missed?
[10:43:30] <phrosty> data scientists make a fuckton of money
[10:43:42] <_genuser_> true that.  it's a hot field.
[10:43:47] <phrosty> if ML could predict the stock market we'd all be rich by now tho
[10:43:48] <phrosty> :D
[10:43:54] <moose> _genuser_: It's a joke about the chip shortages.
[10:44:11] <moose> Chips are in high demand but nobody wanted my cheetos
[10:44:12] <_genuser_>  moose doh!
[10:44:25] <_genuser_> moose cryptos fell quite a bit.
[10:44:32] <moose> Yes, just you wait though
[10:44:38] <_genuser_> moose good time to buy. and then hold and wait for someone to tweet something. then bam!
[10:44:44] <moose> XRP is about to go nuts when the SEC releases it from the jail of tyranny
[10:45:01] <_genuser_> SEC is kinda gone crazy about cryptos, imo.
[10:45:11] <_genuser_> first they were like oh wait the gummit can't control it, it's bad.
[10:45:12] <moose> Yeah there's a public corruption review against them now
[10:45:23] <moose> There's a human rights lawsuit ongoing, and another one for the violation of the freedom of information act
[10:45:33] <_genuser_> then they were like ok, so nobody can really stop it. Let's just tax it to high heaven to make it difficult to use.
[10:45:48] <_genuser_> then they're like ok, maybe it's time to play along.
[10:45:53] <_genuser_> moose against xrp or sec?
[10:45:56] <moose> SEC
[10:46:17] <moose> Empower Oversight has them.
[10:46:18] <moose> https://empowr.us/empower-oversight-sues-sec-for-access-to-foia-documents-amid-crypto-conflict-of-interest-concerns/
[10:46:22] <_genuser_> it's like the president gets to appoint someone. to these posts. immediately they have political bent to it.
[10:46:27] <_genuser_> and the whole thing goes off track
[10:46:44] <moose> So there's a lot of stuff going on about XRP and the SEC
[10:46:57] <_genuser_> few years ago they picked on people trading on localbitcoin.org
[10:47:00] <moose> I ranted in discord earlier about this, so here's some copy/paste
[10:47:03] <moose> SEC Chairman Jay Clayton publicly stated Bitcoin was not a security after heavily investing in it, joining a hedge fund, and then as the price skyrocketed he left his position to full-time at One River Asset Management which is a BTC/ETH exclusive hedge fund.
[10:47:15] <_genuser_> and started arresting them for being illegal money mover.
[10:47:27] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:47:35] <_genuser_> that hay!
[10:47:38] <_genuser_> *that jay!
[10:47:47] <moose> So Jay Clayton was the person who initially was like "Unregistered securities are a danger to society, lets kill crypto"
[10:47:58] <moose> It gets better, a SEC officer... William Hinman received a bunch of money from the Enterprise Ethereum Alliance's law firm while he was at SEC and taking part in decision making around ETH's securities exchange status
[10:48:28] <moose> But you know what? That's fine... because the SEC enforcement director Marc Berger quit and went to work for Enterprise Ethereum Alliance literally right after that
[10:48:43] <_genuser_> hehe. interesting.
[10:48:45] <moose> By the way, he was actually working on an enforcement action at the time
[10:48:53] <_genuser_> not sure what you think of ETH, but I'm not a big fan.
[10:48:54] <moose> Against who? Ripple Labs.
[10:49:32] <moose> Essentially all of the big players in SEC worked against Ripple while holding Bitcoin and Ethereum and having direct contact and payments from EEA.
[10:49:42] <moose> Some even held XRP and then sold it before the action.
[10:49:50] <_genuser_> dang. heavy stuff that!
[10:49:56] <moose> It's absolutely unheard of.
[10:50:05] <moose> There's corruption in the states, but nothing this egregious and blatant.
[10:50:31] <_genuser_> lot of congress people and other gov't appointed people just whatever they like.
[10:50:31] <moose> Ethereum was cool in concept but now gas taxes are making it much too expensive.
[10:50:57] <moose> Yeah, pretty much!
[10:51:17] <_genuser_> ETH was also imo, misguided in using the token as digital currency and the same blockchain as an ecoverse for new digital/crypto solutions.
[10:51:38] <_genuser_> the ETH token should have just been used for paying gas and nothing else. and never beenpromoted as digital currency similar to BTC.
[10:51:40] <moose> I think that it becoming an exchange of value as natural. Any token can be used as a store of value really.
[10:51:54] <moose> But yeah the promotion of it is just money grabbing
[10:52:17] <_genuser_> AND allowing erc20 tokens on the ethereum blockchain basically allowed people to leverage the ethereum networks computing power without doing anything.
[10:52:23] <moose> It is quite late here, I must retire unfortunately
[10:52:26] <_genuser_> which is slowing it down to a crawl and causing gas prices to shoot up.
[10:52:57] <_genuser_> regarding being late there, makes sense. I'm off work so, just chilling.
[10:53:08] <moose> Yeah, it's 11:23 PM here :)
[10:53:18] <moose> I have a meeting with the NSA or something tomorrow so I should rest up.
[10:53:32] <_genuser_> lol 1:23am here.
[10:53:33] <moose> It's actually just my manager, about some super secret security crap he's going on about regarding log4j
[10:53:58] <moose> He has "inside information" which I am sure consists of basically the posts online
[10:54:25] <phrosty> ahhh log4j
[10:54:38] <_genuser_> I'm generally not a fan of managers coming in as a architects.
[10:54:44] <_genuser_> unless their role is architect, in which case they shouldn'
[10:54:46] <moose> My manager is definitely not an architect.
[10:54:47] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 256 seconds)
[10:54:52] <_genuser_> shouldn't be manager or scum master.
[10:54:55] <_genuser_> separation of concerns!
[10:55:00] <moose> He's pretty TERRIBLE actually.
[10:55:10] <_genuser_> moose lol that's implied when said manager.
[10:55:21] *** Quits: Sora (~Guest@user/sora) (Ping timeout: 256 seconds)
[10:55:27] <moose> He doesn't code but acts like he has solutions for code. Then when a programmer speaks up he says "lets not solution in this meeting"
[10:55:40] *** Joins: Sora (~Guest@static.82.113.12.49.clients.your-server.de)
[10:55:52] <_genuser_> I dislike all these agile terminologies: you're solutioning it!!!, let's parking lot it.
[10:56:04] <_genuser_> right, let's use nouns as verbs because: hipster agile
[10:56:08] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[10:56:21] <moose> So one time in a big old meeting full of grumpy program managers and other managers, who were solutioning in the meeting, I literally said "I think it's appropriate that we discuss the customer needs here but not solution in this meeting. I can create something after this discussion and get technical requirements composed for our engineers."
[10:56:38] <moose> Nobody enjoyed it.
[10:56:51] <moose> It was met with complaints actually, someone literally went the official complaint route and said "He called me an idiot in front of my peers."
[10:57:17] <moose> That person by the way, was referring to my manager somehow. As if he called them an idiot. I don't even understand.
[10:57:40] <_genuser_> that's the only time it's easier to point to some agile blog and say, "solutioning" is only done in specific times, not standups or such meetings.
[10:58:01] <moose> hahaha
[10:58:06] <moose> Yes that's wonderful
[10:58:45] <_genuser_> my scum master said, you're late on this project.
[10:59:04] <_genuser_> After I raised the concern to him and others right away when I noticed they're biting off more than they can chew.
[10:59:32] <_genuser_> and promising customer the moon and the stars, but only have enough time to run up a building - let alone shoot into sky, grab said moon and some stars and land back on earth.
[10:59:39] <moose> I'd also argue that deadlines are anti-agile and anti-scrum
[10:59:52] <_genuser_> with paying customers, agile just means micromanagement.
[11:00:04] <_genuser_> because they can only pay so much (their budget) and they always have deadlines.
[11:00:27] <moose> Certainly there are plenty of blogs which go on about how scrum masters need not allocate or assign points or time or deadlines and that people should pull estimated work to their own personal assignments once they've established it's something they can complete within the sprint
[11:00:48] <moose> Basically the team must allow each person to flow at their own rate for maximum performance
[11:01:16] <_genuser_> this is what agile should be about. however, what is has become is: this is a high delivery rate team, if yo'ure not up for it, you must not be good enough.
[11:01:27] <moose> Yeah
[11:01:33] <_genuser_> and the scum master says - we do x in y amount of time. You say no, and they think oh noes, he's just not good enough.
[11:01:37] <moose> Our team did that a few years ago and kept on pushing hard.
[11:01:39] <_genuser_> then I see them all working late sometimes.
[11:01:40] <_genuser_> 10pm.
[11:01:43] <moose> We've had 18 people quit this year
[11:01:57] <moose> They all went to Apple and weird startups
[11:02:01] <_genuser_> I wouldn't quit. but I also quit putting in extra effort if I didn't feel like that.
[11:02:16] <_genuser_> hehe, I have never seen a job ad by apple. I think super exclusive.
[11:02:17] <moose> I like promotions, so I work extra hard personally.
[11:02:19] <phrosty> my experience is that agile *can* work with deadlines, you just need to make sure the customer and everyone involved understands that the deadline will adjust along with everything else.
[11:02:24] <_genuser_> also means, super smart people who got hired there.
[11:02:37] <moose> phrosty: I mean it can, but that's not the agile way
[11:02:52] <moose> You can give roadmaps and estimates, but they're not deadlines
[11:02:52] <_genuser_> moose I like promotions too, but I've realized, promotions are more dependent on people skills and relations in your professional network.
[11:02:53] <_genuser_> not on hard work.
[11:03:04] <phrosty> indeed. as with any programming dogmas, turning your brain off is not allowed -- you gotta choose the parts of agile that work for you
[11:03:08] <moose> I think at my company it's highly dependent on actual value driving
[11:03:13] <moose> Yes, networking/visibility and all of thatr
[11:03:26] <moose> But your thing needs to solve a real problem and create real value
[11:03:35] <moose> phrosty: Yes, absolutely agree
[11:03:35] <_genuser_> phrosty true. but paying customer who has a deadline due to something else they're using, which will be going EOL or something. those people need to either re-up their license or force the contractor to deliver by the exact timeline.
[11:03:55] <moose> OK I will stay here forever at this rate. Y'all are awesome, goodnight
[11:03:56] <_genuser_> moose I've seen people get promoted without doing anything really.
[11:04:00] <moose> _genuser_: Same
[11:04:01] <phrosty> gn moose
[11:04:01] <_genuser_> goodnight
[11:04:25] <_genuser_> phrosty so you solving a work problem this late?
[11:04:31] <_genuser_> assuming you're in US.
[11:04:42] <phrosty> yeah i'm in US, not too late tho, only 11pm
[11:04:57] <_genuser_> pacific?
[11:05:01] <phrosty> yep
[11:05:25] <phrosty> luckily tomorrow is my last day of work for the year
[11:05:34] <_genuser_> taking vacation?
[11:05:37] <phrosty> yep
[11:05:43] <_genuser_> awesome. I started vacay today
[11:05:53] <phrosty> congrats :D
[11:06:00] <phrosty> using the time to code anything interesting?
[11:06:38] <_genuser_> oh geez no. I don't code in my free time anymore.
[11:06:49] <phrosty> hehe
[11:07:12] <_genuser_> a few months ago, I started vscode and tried to code something in angular and completely was uninterested. and closed it.
[11:07:32] <_genuser_> I do have a project which is an application that I used regularly. on a daily  basis.
[11:07:38] <phrosty> i developed a habit of working too much and making my "hobby" projects be sort of skunkworks R&D for work
[11:07:44] <_genuser_> even improving that is difficult. I just don't find the motivation to work on it.
[11:08:00] <phrosty> i'm trying to get back into coding non-work-related hobby stuff, so i've got an IoT project i'm working on rn
[11:08:24] <_genuser_> very nice.
[11:08:32] <phrosty> IoT with .NET is fun :)
[11:08:47] <_genuser_> my application has a matching mobile version so I can use it on my phone also. the mobile side I enjoy working on sometimes.
[11:08:54] <_genuser_> do the same thing in c#, then in java for mobile.
[11:09:14] <_genuser_> phrosty what kinda IoT stuff?
[11:09:45] <phrosty> i haven't coded for mobile since the Windows Mobile days. i did make a PWA a while back tho, so i guess technically i have
[11:10:19] <phrosty> it's an air quality monitor to let me know when to open a window while WFH.
[11:10:40] <phrosty> https://www.youtube.com/watch?v=VsS-zbfhtrs
[11:11:13] <_genuser_> ther'es specific IoT libraries in .NET for that?
[11:12:05] <phrosty> there is yeah. even a fair amount of pre-made drivers.
[11:12:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:51ae:332f:e744:1dea)
[11:12:44] <_genuser_> drivers? for raspberry pi and it's many gadgets and things like that?
[11:13:23] <phrosty> for talking to various embedded ICs -- sensors, displays, that sort of thing
[11:13:38] <_genuser_> very nice!
[11:13:45] <_genuser_> you got me thinking about some of this stuff.
[11:14:07] <phrosty> if you're familiar with networking, IoT driver dev is surprisingly similar
[11:14:15] <_genuser_> I used to want to have an idea of building a screen out of LEDs. So I can put it on a wall.
[11:14:22] <_genuser_> and then write software to be able to play tetris on it.
[11:14:41] <_genuser_> just a fun little thing. tetris screen on teh wall. turn it on and just grab a controller and play a game or two, etc.
[11:15:14] <phrosty> you can 100% do that with .NET and a Pi
[11:15:19] <_genuser_> I've done basic network - writing servers, clients, back in VB6 days, then in .NET days using server/client class, and now using tcpclient classes.
[11:15:48] <_genuser_> my alternative was an EQ display for music. stuck on a wall.
[11:15:53] <phrosty> ahh yes
[11:16:01] <_genuser_> there's a theme here - somethign something - display ON THE WALL!!
[11:16:15] <phrosty> i've wanted to build a nixie tube EQ
[11:16:32] *** Joins: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a882:4c5b:fb5f:fdc8)
[11:16:42] <_genuser_> nixie tube?
[11:16:47] <_genuser_> what is that?
[11:17:03] <phrosty> a super old display tech
[11:17:09] <_genuser_> I hesitate to google random stuff before asking, because lot of times, it's like accidentally googling the "porsche girl"
[11:17:22] <_genuser_> you can't unsee that.
[11:17:26] <phrosty> https://th.bing.com/th/id/OIP.xlTHOv7fs5y4LWaSG7HwswHaE8?pid=ImgDet&rs=1
[11:17:44] <_genuser_> interesting. looks cool.
[11:18:22] <phrosty> they don't make the tubes anymore so you need to ebay them. apparently russia made lots back in the day
[11:18:47] <phrosty> are you a fan of tetris?
[11:19:30] <phrosty> the new Tetris Effect game is solid and has amazing co-op multiplayer boss battles that don't feel like jumping the shark.
[11:19:40] <_genuser_> not so much. I'm a fan of somethign something, display ON THE WALL!!
[11:20:02] <_genuser_> I just loved the idea of X by Y grid of LEDs on the wall and it's dynamic. You can do stuff with it.
[11:20:03] <phrosty> maybe one of those leaf displays you see on streamers walls :D
[11:20:18] <phrosty> have you considered using a projector instead?
[11:20:22] <Suchiman> What‚Äôs new in .NET Productivity with Visual Studio 2022 - Visual Studio Blog (https://devblogs.microsoft.com/visualstudio/whats-new-in-net-productivity-with-visual-studio-2022/)
[11:20:26] <Suchiman> Neat
[11:20:37] *** Quits: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a882:4c5b:fb5f:fdc8) (Ping timeout: 240 seconds)
[11:20:53] <_genuser_> phrosty project can then basically project a regular computer screen. or display.
[11:21:02] <_genuser_> I guess my main interest was TONS of LEDs on the wall.
[11:21:04] <phrosty> _genuser_: https://www.youtube.com/watch?v=-6SJnpBfdBs
[11:21:06] <_genuser_> and then you do something with it.
[11:21:23] <_genuser_> phrosty my idea beings with LEDs on the wall. then thinking up a usecase for it.
[11:22:08] <phrosty> get some Matrix-like code running down the wall :)
[11:22:51] <_genuser_> hmm, probably a great project to work on. not long LEDs, but more like dot LEDs and then build a screen driver and the code would be super simple to pull random shapes from a list.
[11:23:15] <phrosty> the biggest challenge might be powering it
[11:23:22] <phrosty> LEDs are surprisingly expensive on power
[11:24:31] <_genuser_> hmm, lot of hardware stuff that ends up in electricity/voltage/wattage and seems to require even tiny electrical engineering knowledge, I tend to get frustrated.
[11:24:46] <MatthiasVance> lol Teams has been fucking up typing lists for a few weeks now
[11:24:54] <MatthiasVance> Unless you enter markup mode
[11:25:07] <MatthiasVance> I thought Teams was way better when it was relatively new
[11:25:27] <phrosty> it was definitely an improvement on Lync
[11:25:35] <_genuser_> phrosty but I think that lately with a lot more people using rpi and other solutions, that knowledge is more easily available. and more people have documented their projects.
[11:29:30] <phrosty> yeah it's pretty well understood, but off-the-shelf solutions are scarce.
[11:29:52] *** Joins: MaNa2k (~MaNa2k@109.247.79.178)
[11:29:55] <phrosty> one goal with my IoT project is that i want a version of it to be 100% soldering free so that nobody is scared to put it together
[11:30:09] <phrosty> the LEDs are the one thing i couldn't find anything for though, so it's the one soldered part :(
[11:30:49] *** Joins: MaNa3k (~MaNa2k@109.247.79.178)
[11:31:02] <phrosty> will MaNa4k show up
[11:31:06] *** Quits: blez (~blez@213.91.182.96) ()
[11:31:41] <phrosty> Suchiman: VS is really killin it lately
[11:32:46] <_genuser_> phrosty hehe, I had a bunch of lumber and a a project in mind. I have been waiting to work on that for a few months. I figured instead of coding in the break, I should work on that.
[11:33:45] <phrosty> man i'd love to do some carpentry stuff. i don't have the space for it :(
[11:34:20] <_genuser_>  mine's a simple projects. But I bought a router for it, so I can route out nice little breaks and create some joints, etc. already have the saw and all that.
[11:34:27] *** Quits: MaNa2k (~MaNa2k@109.247.79.178) (Ping timeout: 256 seconds)
[11:34:28] <_genuser_> but haven't started it yet.
[11:35:20] *** Joins: MaNa4k (~MaNa2k@109.247.79.178)
[11:36:31] <phrosty> i'm stuck 3D printing wood-ish things for now
[11:36:41] <phrosty> what will you build?
[11:37:35] *** Joins: MaNa2k (~MaNa2k@109.247.79.178)
[11:38:36] <_genuser_> 3d printing is nice.
[11:38:59] *** Quits: MaNa3k (~MaNa2k@109.247.79.178) (Ping timeout: 256 seconds)
[11:39:27] <_genuser_> looking to build a small shelf for the dining room. One of those that has a bunch of space for holding extra dishes that just can't fit in the kitchen and the cabinets. They tend to have a few wine holders, and then some extra space for wine glasses.
[11:39:38] <_genuser_> looking to build a basic one. So I can store extra stuff in it.
[11:39:48] <_genuser_> with doors. so it won't look rough
[11:40:17] *** Quits: MaNa4k (~MaNa2k@109.247.79.178) (Ping timeout: 240 seconds)
[11:40:32] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[11:41:05] *** Joins: cliluw (~cliluw@47.147.73.223)
[11:44:52] <phrosty> that would be super satisfying to build
[11:46:27] *** Joins: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:88ac:e9b2:30a2:73d7)
[11:46:47] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:52:01] *** Quits: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:88ac:e9b2:30a2:73d7) (Ping timeout: 268 seconds)
[11:56:08] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:51ae:332f:e744:1dea) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[12:10:39] <MatthiasVance> Fuck I hate when people ask me for a wish list
[12:10:48] <MatthiasVance> If I wanted something .. don't you think I would have bought it?
[12:11:16] <bpmedley> How dare they care!
[12:14:20] <MatthiasVance> ^^
[12:21:13] <MatthiasVance> Hm, 3.5 hours of sleep was not enough somehow.. =)
[12:25:00] <canton7> Mine is normally just "Chocolate; Wine"
[12:30:14] *** Joins: Klinda (~superleag@user/klinda)
[12:31:41] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[12:33:06] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:39:46] <MatthiasVance> canton7: Generalizing might help indeed
[12:40:02] <MatthiasVance> Some people give you a list of actual things, which I like because I rarely have inspiration
[12:42:15] *** Joins: Tobbi_ (~Thunderbi@31.209.188.226)
[12:45:04] <Nasp> MatthiasVance:  wish lists are hard
[12:45:20] <Nasp> The worst part is spending 14 days after christmas needing to visit multiple shops to return or get the correct items
[12:45:36] <Nasp> I also like giving direct list of thing
[12:45:46] <Nasp> My niece has a list with links where to buy stuff
[12:45:56] *** Joins: cliluw (~cliluw@47.147.73.223)
[12:48:39] <Tobbi_> Evening
[12:48:42] <Tobbi_> eeeh, morning
[12:49:21] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:dcd9:d1f0:6169:7145) (Ping timeout: 268 seconds)
[12:49:41] <MaNa2k> how can i ex. edit a property at a spesific row in a list ?
[12:50:04] *** Pokey is now known as ahorner
[12:50:06] <MaNa2k> ex. something how we do it with array  myStringArray[3] = 1223
[12:50:09] *** ahorner is now known as Pokey
[12:50:13] <MaNa2k> ex. something how we do it with array  myStringArray[3] = "1223"  *
[12:50:45] <MaNa2k> i tried the following hoping it would work.   myList[3].myProperty = "123123"
[12:52:57] <MaNa2k> last last one obiously dosnt work
[12:53:13] <MaNa2k> anyone ?
[12:53:45] <MaNa2k> or are you busy patching your log4j's  :P
[12:55:16] <MatthiasVance> No, busy patching my Windows for Workgroups 3.11
[12:57:36] <MizMahem> MaNa2k: hmm? That certainly should work
[12:58:00] <MaNa2k> MizMahem, hmm, i though so too it should work, but it isnt for some reason
[12:58:09] <MaNa2k> ah, maybe myobject class is fucked up lol
[12:58:42] <Nasp> Maybe provide more information
[12:58:49] <MaNa2k> so its actually an ienumerable<myobjct> i think
[12:59:27] <MaNa2k> MatthiasVance, wg 3.11 ? whats that
[12:59:35] <MaNa2k> was that a joke ?
[12:59:52] <MatthiasVance> https://en.wikipedia.org/wiki/Windows_3.1x#Windows_for_Workgroups_3.11
[13:00:03] <MatthiasVance> Yes I am not patching that
[13:00:14] <MizMahem> https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEUCuA7AHwAEAmARgFgAoIgBgAIiyUBua6gGQEsBnDAHgAqMPgD56AG14Ye9ALz08MAO4AKEgEoA3tXp7FK+sL6qNaXfqXKjIjKfNUAvmyrUpfHgG0yAXQB0ALIAngCSeBjy9ADMLu4y3v7BYRh+ACI4ALYADqYu1KQ2fPQ6VPqMUfRc4fRJ1Vr0AOYwGCz0PM2tjmXUjkA==
[13:00:33] <MaNa2k> hmm
[13:00:48] <MizMahem> well you don't get a `this[]` operator for an IEnumerable obviously.
[13:00:59] <MizMahem> But the same general principle applies.
[13:01:28] <MizMahem> You wouldn't be trying to edited the property of a `struct` property. Like say a `ValueTuple` or something?
[13:01:50] <MizMahem> `MyClass.ValueTuple.Property = x` will not work.
[13:02:00] <MizMahem> But that's about the only "gotcha" I can think of.
[13:04:36] <MaNa2k> hmm
[13:06:01] <MaNa2k> ah yes, it was deffinatly because of it was ienumerable. i just did a tolist then [3] then it works
[13:06:21] <MizMahem> üëç
[13:07:37] <MaNa2k> thanks
[13:09:24] <MaNa2k> MizMahem, so heres another sutpid question. its not updating when i did this myIEnumerableList.ToList[3].myProp = "---"
[13:09:32] <MaNa2k> how am i suppose to assign that back ?
[13:09:41] <MaNa2k> do i need to use return or something
[13:10:40] <MizMahem> when you say "not updating" what do you mean? That will certainly change the value of `myProp` for the 4th item on whatever collection `IEnumerable` wraps.
[13:10:56] <MaNa2k> if i do this var sdfsdf = myIEnumerableList.ToList[3].myProp = "---"; then the sdfsdf because a normal string var
[13:11:19] <MaNa2k> *becomes
[13:11:40] <MaNa2k> while the property in that list at that position dosnt change for me
[13:12:07] <MaNa2k> MizMahem, actually forget it
[13:12:21] <MaNa2k> it did change, i was looking at wrong index lol
[13:12:26] <MaNa2k> thanks :P
[13:12:31] <MizMahem> üëç
[13:12:37] <MizMahem> I thought it might be something like that.
[13:15:48] <MaNa2k> long time worked with indexes and arrays
[13:17:08] *** Joins: Babbage (Babbage@94.11.27.96)
[13:17:24] <Babbage> yyhey
[13:26:04] <Inge> MaNa2k: ClosedXML is basically a wrapper to make OpenXML easier to use when working with things like Excel.
[13:26:29] <Inge> It works in a linux docker container with .net core, so I presume it would work well in most cloud scenarios :)
[13:26:37] <MaNa2k> mhm
[13:34:07] *** Joins: teegee1 (~teegee@203-91-233-64.sta.wbroadband.net.au)
[13:36:14] *** Quits: teegee (~teegee@203-91-233-64.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[13:36:14] *** teegee1 is now known as teegee
[13:40:07] *** Joins: alguien (~alguien@user/alguien)
[13:40:47] <alguien> So what's the difference between a "C# script" (csx) and a C# file (cs) using top-level statements?
[13:51:01] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Ping timeout: 256 seconds)
[13:59:47] <canton7> Things like how the rest of the project is structured, how nuget packages are included, etc?
[14:02:49] <irwiss> one was also introduced way earlier than the other
[14:05:15] *** Joins: fredrikhr (~fredrikhr@195.204.172.170)
[14:32:28] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:13] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[14:33:14] *** Joins: csrf (~csrf@user/csrf)
[14:44:06] *** Joins: MaNa3k (~MaNa2k@109.247.79.178)
[14:48:23] *** Quits: MaNa2k (~MaNa2k@109.247.79.178) (Ping timeout: 268 seconds)
[15:01:08] *** Joins: MaNa4k (~MaNa2k@109.247.79.178)
[15:05:15] *** Quits: MaNa3k (~MaNa2k@109.247.79.178) (Ping timeout: 256 seconds)
[15:19:37] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 240 seconds)
[15:40:26] <MaNa4k> fine, ill do it my self. Fixed the new printer everybody was nagging about for weeks for getting it fixed
[15:41:05] <MaNa4k> were waiting for technitions who never came, probably due to corona\christmas soon
[15:41:28] <MaNa4k> all it needed was correct smtp setting
[15:46:12] *** Joins: razend (~razend@94.200.42.14)
[15:46:44] *** Joins: ap5[work] (~ap5work]@mailout2.ok.dk)
[15:48:17] <ap5[work]> Anybody here use Azure Data Studio?
[15:58:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a0b2:c99d:ea0d:cee6)
[15:59:52] *** Joins: dinowilliam (~dinowilli@138.204.26.75)
[16:02:36] *** Quits: dinowilliam (~dinowilli@138.204.26.75) (Remote host closed the connection)
[16:02:48] *** Joins: alguien_ (~alguien@user/alguien)
[16:03:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a0b2:c99d:ea0d:cee6) (Ping timeout: 268 seconds)
[16:04:57] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[16:04:59] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:15:26] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:16:57] *** Joins: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:f1e9:aa69:b106:4602)
[16:21:17] *** Quits: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:f1e9:aa69:b106:4602) (Ping timeout: 240 seconds)
[16:31:03] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[16:41:35] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[16:47:41] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[17:07:55] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[17:08:08] <MaNa4k> ap5[work]: i used it, now i dont
[17:08:29] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[17:08:31] <MaNa4k> i removed, dont remember why
[17:08:34] <MaNa4k> *removed it
[17:12:03] *** Quits: razend (~razend@94.200.42.14) (Quit: Client closed)
[17:19:39] *** Joins: bomb (~bomb@user/bomb)
[17:19:47] <bomb> 73 GB of sampled Yamaha DX7 keyboard: https://soundpaint.com/products/uds-green-dx7
[17:19:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[17:20:49] <interop_madness> bomb, what do they mean by "ultra-deep sampled"?
[17:21:31] <interop_madness> oh, disregard: UDS (Ultra Deep-Sampled) features all the natural variations that occur when you retrigger the same key. Designed for professionals.
[17:21:43] *** Quits: ap5[work] (~ap5work]@mailout2.ok.dk) (Quit: Client closed)
[17:22:50] <bomb> interop_madness kind of marketing talk. they claim they sampled all 127 note velocities in the standard edition, and also multiple round-robins per velocity in the UDS
[17:35:14] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:38:15] *** Quits: MaNa4k (~MaNa2k@109.247.79.178) (Ping timeout: 256 seconds)
[17:52:35] *** Joins: xsperry (~xs@user/xsperry)
[18:00:32] *** Quits: alguien_ (~alguien@user/alguien) (Ping timeout: 240 seconds)
[18:16:45] *** Joins: andrerav (~andreas@212.47.229.175)
[18:30:44] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[18:31:31] *** Joins: bomb (~bomb@user/bomb)
[18:36:07] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[19:36:45] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:37:39] <MatthiasVance> 3080 RTX just activated, let's see if I can go for 120FPS now :D
[19:38:01] <_Shurik_> noice
[19:38:08] <_Shurik_> at what res?
[19:40:37] <MatthiasVance> Any res? I have 3080 RTX as a service :D
[19:40:44] <MatthiasVance> Well, up to 1040p I guess
[19:40:48] <MatthiasVance> *1400p
[19:41:26] <_Shurik_> Should do 60 on 4k then I'd imagine
[19:41:38] <_Shurik_> that's the fastest my HDMI2.1 would allow anyway
[19:43:56] <MatthiasVance> _Shurik_: They say it's up to 4K HDR on Shield TV
[19:44:06] <MatthiasVance> But usually it's 1440p at 120FPS
[19:44:27] <_Shurik_> Nice
[19:44:36] <_Shurik_> I need to upgrade my video card too
[19:50:28] <brianonymous_> i badly need a video upgrade, but I just cant convince myself to spend $1300.. Ill wait until sanity returns
[19:50:29] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[19:52:06] <sysRPL> is anyone here still using .net framework rather than core, .net 5 or .net 6?
[19:52:46] <brianonymous_> our framework app count is getting lower and lower
[19:53:20] <sysRPL> brianonymous_: are those remainders built around webforms?
[19:53:28] <brianonymous_> sorry, no
[19:53:39] <sysRPL> what kind of projects then?
[19:54:13] <brianonymous_> we tackled the biggest ones first, which all had self hosted.. the remainder are more utility, support and log processing systems
[19:54:16] <_Shurik_> There are a lot of stuff still runs on .NET 4
[19:54:24] <_Shurik_> ton of MVC sites
[19:54:29] <sysRPL> i was using .net framework primarily because the pi zero couldn't use core
[19:55:29] <sysRPL> but now that pi zero 2 supports arm 8, i need to move my electronics libraries to .net 6
[19:55:31] <Slade> brianonymous_, sell your boat yet?
[19:55:51] <brianonymous_> Slade: not this season.. the work change made my time availability close to 0
[19:56:05] <Slade> brianonymous_, maybe you can find someone who will trade it for a video card
[19:56:09] <brianonymous_> lol
[19:57:04] <Slade> the way video card prices are getting, you might need to throw in a tank of gas or something to balance the trade
[19:57:20] <brianonymous_> pretty soon we will have video cards that host CPUs
[19:57:38] <Slade> i dont expect sanity to return for a few more years
[19:57:41] <brianonymous_> check out my sweet video card. its got a threadripper in it
[19:57:51] <Slade> 2025
[19:57:53] <sysRPL> i bought a radeon r7 for $90 in 2018 and sold it this year for $400
[19:58:22] <sysRPL> radeon 570 8gb
[19:58:53] <brianonymous_> id love a 3080 or a 3080ti
[19:59:12] <brianonymous_> im absolutely amazing how far this gtx970 has gotten me tho
[19:59:16] <brianonymous_> amazed
[20:00:45] <sysRPL> i bought a geforce gtx 1650 super 4gb for $150 on tuesday
[20:00:52] <sysRPL> it's already resold
[20:01:28] <sysRPL> for $300
[20:03:45] <brianonymous_> i believe it
[20:04:23] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:05:40] <Slade> brianonymous_, whats the best card your kids computers got
[20:05:46] <brianonymous_> 1070
[20:06:41] <Slade> child abuse
[20:06:59] <brianonymous_> hah
[20:07:20] <brianonymous_> if he wants an upgrade, he can get it himself
[20:08:14] <MatthiasVance> _Shurik_: Do note this isn't an upgrade! I said "as a service" :D
[20:08:20] <MatthiasVance> *a physical upgrade
[20:10:39] <irwiss> got myself a new pc this year, the last one lasted almost 10 years with just a single gpu RMA where i got offered 780 instead of 680, got a solid run out of that hardware, the main reason to upgrade was really the slow ssd speed and missing gpu features like dx12
[20:11:00] <irwiss> it outlived like 2.5 console gens
[20:12:32] <irwiss> scratch that, 9 years, got it around august 2012
[20:13:27] <MatthiasVance> Ah nice
[20:13:34] <MatthiasVance> Yeah I was going for a partial rebuild but mehhh can't be bothered
[20:13:43] <irwiss> yep not worth the bother
[20:14:01] <MatthiasVance> And if gaming in the cloud is good enough, I will just switch
[20:14:16] <Suchiman> irwiss: lol yeah although i can see my i5 4670K running 100% on all cores in many games nowadays
[20:14:35] <irwiss> even 3-5 years down the line you usually have ton of upgrade space... but mainboard won't support newer rams, cpu sockets will be different, better storage performance etc
[20:15:16] <irwiss> tbh unless you're playing something like solitaire or literally living inside the server room cloud gaming always sucks ass
[20:15:57] <MatthiasVance> I actually played Cyberpunk and it was really good
[20:16:18] <irwiss> even sitting "close enough" where i got ~35ms to nvidia now server the input lag was really noticeable
[20:16:26] <MatthiasVance> Ah I'm at <5ms
[20:16:53] <irwiss> 5ms could be bearable... although all the gaming services do dirty ass tricks so you're never at the level of native gpus anyway
[20:17:16] <irwiss> although at 5ms i'd probably consider that over buying gpu for light gaming
[20:18:00] <MatthiasVance> "The good news is that some heroes from GameStar have tested and confirmed that GeForce Now‚Äôs ‚Äòcompetitive‚Äô option provides the lowest latency ‚Äì even getting pretty close to the latency of a local connection."
[20:18:52] <MatthiasVance> I looked up some data
[20:19:11] <MatthiasVance> Hm apparently 1.5x as slow as locally
[20:19:18] <irwiss> yeah by dirty ass tricks i mean not the latency part - that's usually defined by your location, but rather the bad resolutions, heavy compression to the point where gradients look banded etc
[20:19:19] <MatthiasVance> but doesn't say much about the tests etc so nvm
[20:19:30] <MatthiasVance> ah yeah
[20:19:32] <Nasp> I remember a collegue demoing stadia "No input lag at all"
[20:19:39] <Nasp> Then i tested it, it was a lie
[20:20:05] <irwiss> i mean, stadia was DOA just because it was a google pet project and those go to the graveyard sooner or later
[20:20:25] <irwiss> along with whatever games you """bought"""
[20:21:24] <MatthiasVance> Yeah I love "gaming as a service" but would rather pay separately for GPU + games
[20:21:29] <MatthiasVance> Because of that
[20:22:31] <MatthiasVance> So just did a test, 6ms on wired, 8ms on wireless
[20:22:37] <irwiss> Suchiman: also that's a good thing, means games actually utilize background threads, rather than spin everything on main thread like all the bad console ports circa 2012 :P
[20:24:30] <Suchiman> irwiss: true, but it also means i'm bottlenecking so hard on CPU that FPS suffer a lot
[20:24:32] <Suchiman> with a bored GPU
[20:24:45] <MizMahem> TBF porting from those PowerPC arcs to x86 must have been a nightmare. Especially for multithreading
[20:26:24] <irwiss> Suchiman: yea i guess, although intel usually makes sure to change socket so you need to buy new mobo if you want anything but sidegrade to cpu so might as well throw everything in the garbage besides gpu and replace with new :P although you could try refreshing thermal paste and better cooling to make it turboboost a bit higher
[20:28:34] <Suchiman> irwiss: nah lol the CPU is already overclocked to 4.4GHz synchronously instead of the 3.4GHz base clock and up to 3.8GHz single core turbo
[20:34:33] <Suchiman> irwiss: and it never thermal throttles xD
[20:34:59] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:36:13] <irwiss> well it's like 4xxx is like 8ish gens ago, time to take it out back i guess :P
[20:36:31] <irwiss> my mid range fresh ryzen usually sits around 25% even in cpu intensive games
[20:36:51] <MizMahem> Do you guys have any console library you like? I've been using Spectre, but it's kinda to magic for my tastes, and the graphic stuff seems to have some major limitations
[20:37:04] *** Quits: Babbage (Babbage@94.11.27.96) (Remote host closed the connection)
[20:37:25] <MizMahem> Or at least, I haven't quite figured out the best way to make it work with me
[20:38:13] <Suchiman> irwiss: when you overclock and it runs all well and then you try 100MHz more for 4.5GHz and it just does not, always crashes, even when upping core voltage quite a bit :<
[20:38:51] <Suchiman> but about ~1GHz more than base frequency was quite nice though xD
[20:39:00] <irwiss> https://i.imgur.com/3qCDy98.png path of exile, not the most souped-up map though so mob density is medium
[20:39:39] <Suchiman> irwiss: mhm only so little system memory
[20:39:56] <brianonymous_> is it me, or is windows 10 starting to become a huge pile of shit
[20:40:24] <Suchiman> brianonymous_: how so, isn't microsoft busy screwing around with windows11?
[20:40:37] <irwiss> Suchiman: tbh with pcie4 ssd i don't even feel the difference vs 64gb ram workstation, i still got 2x empty dram slots but don't know if i can be bothered to fill them
[20:40:53] <brianonymous_> well, over the last month or so, im starting to notice really glitchy stuff.. mostly around explorer and display
[20:41:04] <brianonymous_> like right now, my taskbar is frozen
[20:41:29] <brianonymous_> i literally cant close some apps
[20:41:49] <Suchiman> mhm not for me luckily
[20:42:00] <brianonymous_> i mean, it totally could just be me
[20:42:09] <brianonymous_> and maybe its time for a repave.. ugh
[20:43:13] <irwiss> iirc i tested some memory heavy workload - processing some stupid amount of data in postgres, came out at 16% difference between work PC with 64gb ram and my home pc, probably cause by the time fs cache fills the extra RAM and the work is already done... or not enough indices in postgres
[20:51:24] *** Joins: Alexthek1d (~Alexthek1@p5b3ae3ec.dip0.t-ipconnect.de)
[20:51:28] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:13:44] <bomb> brianonymous_ I need a picture of your office with all the monitors seen
[21:13:48] <bomb> do you have one handy?
[21:13:48] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:13:56] <brianonymous_> i think so
[21:15:06] <bomb> my buddy's buying a Samsung Odyssey, but he's still unsure
[21:15:28] <brianonymous_> http://98.117.195.56:88/d3.jpg
[21:16:05] <brianonymous_> d1 if you want some reference scale of my beauty
[21:16:35] <Nasp> brianonymous_:  What irc client is that btw?
[21:16:42] <brianonymous_> hexchat
[21:16:49] <MatthiasVance> #csharp is in that photo
[21:16:51] <Nasp> ok
[21:17:20] <bomb> brt
[21:17:23] <bomb> brianonymous_ heh purrfect thxx
[21:17:28] <brianonymous_> no prob
[21:18:34] <MatthiasVance> brianonymous_: Nothing in that photo is secret?
[21:18:48] <brianonymous_> i was looking around and i didnt see anything
[21:19:00] <MatthiasVance> I noticed Confluence open that's why I asked :D
[21:19:24] <brianonymous_> yup! about a bajillion of them
[21:20:25] <bomb> lol this pic was also taken after my request :D
[21:20:27] <brianonymous_> i zoomed in, that page is just a UI requirements doc, im good :D
[21:20:35] <brianonymous_> lol, i think it was, yes
[21:21:08] <MatthiasVance> brianonymous_: Yeah and the tree of other documents is not a list of upcoming prjects? :P
[21:21:36] <brianonymous_> nope :)
[21:21:48] <MatthiasVance> I get so anxious when people post photos with *actual things* on their screens :D
[21:22:02] <brianonymous_> i had even minimized a lot of shit, lol
[21:24:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:24:50] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:28:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:21a3:4bf2:b994:55b1)
[21:30:14] <Nasp> MatthiasVance:  As in affraid they leak something?
[21:30:22] <MizMahem> Hmm, I wonder what the best way would be to convert my interpreter to handle run length encoding instructions
[21:31:55] <MizMahem> Right now that command library takes strictly a single command. I could change that to take a command and a data variable, but I wonder if I should take an additional step and just build a like instruction stack for it to use? Hmm
[21:32:15] <MatthiasVance> Nasp: Yeah! Even though it would have no impact on me I wouldn't wish that on someone
[21:32:17] <MizMahem> I don't think any languages would use that yet, but maybe...
[21:33:24] <MizMahem> Hmm... Thinking about that, would an instruction stack just be considered part of the programs state? Hmm...
[21:33:38] <Nasp> MatthiasVance: For some reason we share data where i work that i think shouldn't be public
[21:33:42] <Nasp> Like a list of all customers
[21:33:46] <Nasp> On a picture
[21:34:01] <brianonymous_> MizMahem: the pointer to the instruction would be
[21:34:27] <MizMahem> I already give the instructions access to the program tape anyways, so in theory I could just let an instruction handle reading more data of the take if necessary
[21:34:57] <brianonymous_> its usually the opcode itself that defines it length
[21:35:12] <brianonymous_> even if that happens to be bit encoded or a table
[21:35:33] <MizMahem> Hmmm that is fair, but difficult to implement in my current setup
[21:36:18] <MizMahem> I'm just using a dictionary to lookup instructions, so I kind of really on them having a common "key" shape
[21:37:08] <brianonymous_> weird question, but do you wanna see the code for my 6502 emulator
[21:37:19] <MizMahem> Sure!
[21:37:31] <brianonymous_> k, sec
[21:38:07] <MizMahem> I'm writing a Brainfuck and related languages interpreter, so it's probably very relevant
[21:39:21] <brianonymous_> whats a good online paster
[21:39:58] <MizMahem> paste mod gg?
[21:41:24] <brianonymous_> here ya go: https://paste.mod.gg/iofkfppjuovg/0
[21:41:31] <brianonymous_> its a work in progress, but fully compliant
[21:42:38] <brianonymous_> in the 6502 case, EIP = PC
[21:43:37] <brianonymous_> more context: http://98.117.195.56:88/c64.mp4
[21:44:31] <Suchiman> brianonymous_: now do a DBT
[21:44:47] <brianonymous_> a whowhat now?
[21:44:56] <Suchiman> brianonymous_: dynamic binary translator
[21:45:21] <brianonymous_> that would be pretty fun
[21:47:33] *** Quits: sfields (~sfields@2605:a601:adea:7a00:2b70:ef9e:5d20:bc77) (Read error: Connection reset by peer)
[21:48:04] <Nasp> 1 controller migrated, 200 more to go :D
[21:48:14] <brianonymous_> lol, i feel for you
[21:49:01] <Nasp> i've redone all our auth, now it's a bit easier to figure out what the hell it does
[21:49:20] <Nasp> Also two more people got allocated on the project
[21:56:48] *** Joins: Fiji_ (~Fiji@user/fiji)
[21:59:49] <MizMahem> brianonymous_: this is cool.
[21:59:58] <brianonymous_> MizMahem: it was super fun
[22:00:36] <brianonymous_> frustrating at times, trying to run an actual 6502 binary self test
[22:01:26] <MizMahem> a little out of date, but basically what I'm doing. https://paste.mod.gg/uzipxuwfxugj/0
[22:02:03] <brianonymous_> oh, like brainfuck for logo!
[22:02:26] <MizMahem> well it can do paintfuck and brainfuck but also pretty much anything in that shape
[22:02:36] <MizMahem> actually this is quite out of date, let me make a better paste
[22:07:02] <MizMahem> here we go, updated. https://paste.mod.gg/dfazbcicqmel/0
[22:07:35] <MizMahem> The basic difference here is I added an `TIO`context to every command.
[22:08:16] <brianonymous_> is that basically the cpu state
[22:08:35] <MizMahem> Which lets the interpreter provide different IO contexts as appropriate (IE, read input from a file, or the console, output data to the console or to an image or whatever)
[22:08:46] <brianonymous_> oh, so more like a bus state
[22:10:03] <MizMahem> mmm, maybe? I dunno. I'm basically fumbling through this not really knowing 110% what I'm doing lol. But as of right now I provide three discrete "states". The "Tape" which is basically the program instructions, I give this because the program may need to advance or retreat the instruction pointer as appropriate. The "State" which is like the memory state or whatever it acts on. And the IO as discussed above for providing ways to get data in and
[22:10:03] <MizMahem> out of the program.
[22:10:31] <brianonymous_> thats the best way to do it, its awesome learning experience doing that kinda stuff
[22:10:50] <MizMahem> Yeah it's been a fun project. Gone through several evolutions. This one is finally looking pretty C# like.
[22:11:01] <MizMahem> The very first version was also cool, but very C like.
[22:11:26] <MizMahem> Relying on state mutation to do everything. Which obviously I still *do* but now at least all the state mutations are encapsulated.
[22:12:14] <brianonymous_> is this why you needed a bit stream reader awhile back?
[22:12:30] <MizMahem> yeah kinda.
[22:12:30] *** Joins: MichaelLong (~ml@94.31.84.186)
[22:12:30] *** Quits: MichaelLong (~ml@94.31.84.186) (Changing host)
[22:12:30] *** Joins: MichaelLong (~ml@user/michaellong)
[22:12:36] <brianonymous_> awesome!
[22:13:09] <MizMahem> Brainfuck programs are kind primative and so they are likely to break if given the wrong sort of Line Endings as input.
[22:13:46] <MizMahem> As you may can see I already handled the same sort of problem for EOF input, but that problem is a lot simpler.
[22:14:08] <brianonymous_> fault handler! yup
[22:14:26] <MizMahem> but anyways, I probably want Line Ending translation behavior to be configurable. Still haven't decided on a method for that.
[22:15:06] <MizMahem> Hmm, actually as I think about it, doesn't C# have a filestream reader or something that will eat an entire line at a time? Maybe I should see what options it has in terms of handling line endings. Maybe it can handle the issue for me.
[22:15:19] <brianonymous_> it has a text line reader, yeah
[22:15:28] <MizMahem> or I might just ignore the problem honestly. GIGO and all that :p
[22:15:35] <bomb> I'm still a virgin, any tips?
[22:16:22] <brianonymous_> MizMahem: i dunno the full deets, but what about composition - just plug in input handlers
[22:16:34] <brianonymous_> bomb: uhh, vegas?
[22:16:53] *** Joins: Jong (~Jong@2620:10d:c090:400::5:3f74)
[22:16:59] <MizMahem> brianonymous_: hmm maybe. That's what I've done elsewhere. I'll have to ponder.
[22:17:22] <MizMahem> anyways, among the many question I am pondering is, if I wanted to provide a way to like mm.... "compress?" "optimize?" A brainfuck like program the obvious first step to do would be to translate the program into some sort of Run Length Encoding. Like instead of `+++++` I could "optimize" that to `+5`. But I'm not settled on the best way to then handle processing such an instruction.
[22:18:22] <brianonymous_> id do it all at once, but only on the boundaries.. like save to disk -> push through compression stream.. load from disk -> uncompress to mem
[22:18:30] <bomb> brianonymous_ prostitution is banned in Las Vegas, by the way
[22:19:04] <brianonymous_> oh..
[22:19:13] <MizMahem> I could add yet another parameter to my command library like a "instruction variable" or something. Or I could simply let the command handle it, it has access to the tape and so could "peek" ahead to pull a RLE property. Or I could rebuild the entire thing and build like an instruction stack or something, which I believe is more like how such things are commonly handled, I dunno.
[22:19:51] <bomb> so I'd need to break the law, or get laid without paying. both options are COOL AF
[22:20:00] <MizMahem> brianonymous_: mmm, I guess I'm more wondering how I would handle a language which had instructions in the shape of `instruction dataliteral`
[22:20:13] <MizMahem> which is common in the "real world" but not so much in esolangs it seems.
[22:20:29] <bomb> wow imagine getting your schlong wet without paying a dime
[22:20:39] <brianonymous_> MizMahem: yeah, thats why i think it should be handled by the opcode itself
[22:20:47] <MizMahem> fair.
[22:21:08] <bomb> maybe I can even go further a bit, and ASK MONEY to get laid. how cool is that?!
[22:21:09] <MizMahem> It would be the simplest way to handle it. I'd just need to write new instructions.
[22:21:26] <bomb> make money and make love at the same time
[22:21:48] <bomb> I've just noticed both words have the same vowels
[22:22:07] <bomb> but I won't argue if you consider y also a vowel
[22:22:12] <brianonymous_> if you are keeping it to ascii, and say you only have 16 instructions, that leaves you with 2^7-16 visible bit mappings
[22:22:41] <bomb> poor Lynyrd Skynyrd, they had to literally eat each other to survive
[22:22:57] <brianonymous_> so if you have like 4 memory index modes, you could just use 2 bits to define it
[22:23:01] <bomb> https://www.youtube.com/watch?v=ye5BuYf8q4o
[22:23:46] <Fiji_> roll tide
[22:23:49] <brianonymous_> bitwise ascii map of like Opcode-> [1234] Index mode-> [12] Bonus bit [1]
[22:23:51] *** Fiji_ is now known as Fiji
[22:25:04] <MizMahem> hmm...
[22:26:35] <brianonymous_> then just knowing the indexing mode tells you how far you need to inc IP to the next instruction. and how big the data payload will be
[22:27:46] <MizMahem> hmmm, that's an interesting thought, though I think my existing design is somewhat incompatible.
[22:28:05] <brianonymous_> yeah, itd be some bitbanging
[22:28:19] <bomb> sounds good already
[22:28:27] <bomb> bitbukkake
[22:28:54] <MizMahem> rightnow I rely on my program "Tape" implementing `IIndexedEnumerator<TCommandKey>` Which is basically just an `IEnumerator<TCommandKey>` except with the addition of an index so that jump operations are possible.
[22:28:58] <brianonymous_> another alternative would be having the opcodes as 2 bytes.. 1 for major mode, 1 for memory mode
[22:29:52] <MizMahem> `TCommandKey` though I designed to just normally be like a `char` or maybe a `string` because that is the type I use to lookup the matching command in my dictionary.
[22:30:17] <MizMahem> which currently has the shape `IReadOnlyDictionary<TCommandKey, Action<TTape, TState, TIO?>>`
[22:30:45] <bomb> bitgokkun
[22:30:49] <MizMahem> this kind of implies a 1:1 mapping of opcodes to commands, which is difficult if I parse them in different ways but... hmm...
[22:30:50] <brianonymous_> in that case, yet another option is 1 op code for every cmd and its associated payload...  a=north, b=north by next value, etc
[22:31:30] <MizMahem> Well since I am implementing custom logic for the IEnumerator anyways, I can certianly pass a `Current` value which is *strictly* just the next opcode.
[22:31:48] <MizMahem> But have like `MoveNext` jump to the opcode, passing over any data values. That would work.
[22:32:02] <brianonymous_> ya
[22:32:04] <MizMahem> hmm...
[22:32:26] <brianonymous_> at least you have a jillion ways to skin that cat
[22:32:55] <MizMahem> but, I could just as easily have the command attached to any opcode be assumed to handle advancing to the tape to the end of any associated data values as well. It is going to need to *look* at this kind of data anways... hmm.
[22:32:59] <MizMahem> Oh, doh, I've got it.
[22:33:15] <MizMahem> I'll just ad a like "data" property or something to the Tape interface.
[22:33:35] <MizMahem> that will point to any associate data literals for a given op code
[22:34:38] <brianonymous_> it depends on how fancy you get - do you have plans for the tape to be self modifying at all? :D
[22:34:42] <MizMahem> that way I can have an op code implementation just look at that, if necessary without having it get mixed up in poking about in the tape object itself and mutating it and what not unnecessarily.
[22:34:48] <brianonymous_> cuz then you wanna get into reference modes too :)
[22:34:58] <MizMahem> brianonymous_: none of the languages I am *currently* implementing have that feature.
[22:35:05] <MizMahem> But some I plan to implement in the future may.
[22:35:10] <brianonymous_> just something evil to think about :D
[22:35:41] <MizMahem> Well, (famous last words) but it *should* be as easy as simply swapping in a different sort of object for the tape library.
[22:35:44] <MizMahem> er tape object.
[22:36:04] <MizMahem> Right now I use a `string` as the backing field, so mutation isn't easy. But that is trivial to change.
[22:36:30] <MizMahem> and then at that point it's as "simple" as changing `Current` to be setable and... well away you go I guess.
[22:36:42] <MizMahem> self-modifying code ahoy!
[22:36:46] <brianonymous_> hell yeah
[22:37:20] <brianonymous_> but other advantages, like referencing a data area
[22:37:56] <MizMahem> I also want to add the ability to support a tape that exists in more than one dimension, for languages like Befung.
[22:38:39] <MizMahem> Which also has the complication that it potentially has commands that altere the *Dictionary* state, but I think I've figured out how to square that circle.
[22:38:56] <brianonymous_> the good part is that those could be treated as branches in a 1 dimensional collapse
[22:39:16] <MizMahem> mmm, maybe. Not quite so simple actually.
[22:39:34] <Slade> https://worldnewsdailyreport.com/lottery-winner-arrested-for-dumping-200000-of-manure-on-ex-boss-lawn/
[22:39:47] <MizMahem> any given section of Befung commands could be interpreted in any of 4 different "directions"
[22:39:56] <brianonymous_> why? every place where there is intersection could be considered an if case, which is just cmp/jmp, no?
[22:40:24] <brianonymous_> i honestly dont know much about befung tho
[22:41:14] <MizMahem> well above my pay grade, but I believe actually solving the above problem involves solving the halting problem I think :p.
[22:41:24] <brianonymous_> lol, good luck
[22:41:56] <MizMahem> Since without doing that, you have to solve for any possible direction it gets sent in, which I believe ends up with you having to interpret any given region in all 4 possible directions.
[22:42:19] <brianonymous_> im only suggesting that it could be collapsed back down to 1 :)
[22:42:20] <MizMahem> at least potentially. There are probably optimizations you can do where you can prove a given set of commands only can be executed one way
[22:42:28] <MizMahem> but not all instructions I think.
[22:42:39] <MizMahem> but again above my pay grade. I just want to get it to run first lol :p
[22:42:46] <brianonymous_> lol, fair enough
[22:43:15] <MizMahem> The main problem I'm hitting is like Befung has commands that says "until you hit this symbol, interpret following commands like this instead of like that." So it implies a change to the interpreter/dictionary state, which is problematic.
[22:43:57] <brianonymous_> youd have to carry the modifiers in your state
[22:44:14] <brianonymous_> probably in some kinda stack
[22:44:55] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:45:01] <MizMahem> yeah maybe. I think what I may do for now since the application of these commands is somewhat limited, is just have the "change state" command encompass all following commands as part of the same op code, and then return to normal function afterwards.
[22:45:48] <MizMahem> Because all it does is say "read the following commands as literals instead of instructions" and that is something I can easily do within a opcode itself.
[22:45:57] <MizMahem> But the implications of those kinds of instructions is troubling.
[22:46:29] <brianonymous_> i think its perfectly valid for the op code to drive its own data requirements
[22:46:51] <brianonymous_> just hand it control of your 'bus'
[22:47:14] <MizMahem> yeah. That's already baked in as a possibility, so probably the simplest solution.
[22:48:04] <brianonymous_> on that note, i must bail for a bit
[22:48:10] <brianonymous_> lunch awaits
[22:48:13] <brianonymous_> o/
[22:49:21] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[22:50:34] *** Quits: Bradley32110 (~IceChat95@071-013-010-066.biz.spectrum.com) (Quit: Me fail English? That's unpossible.)
[22:50:58] *** Joins: Bradley32110 (~IceChat95@071-013-010-066.biz.spectrum.com)
[22:51:47] <MizMahem> o/
[22:52:39] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:01:10] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:16:42] *** Quits: teegee (~teegee@203-91-233-64.sta.wbroadband.net.au) (Quit: Ping timeout (120 seconds))
[23:17:25] *** Joins: teegee (~teegee@203-91-233-64.sta.wbroadband.net.au)
[23:21:01] *** Joins: teegee2 (~teegee@203-91-233-64.sta.wbroadband.net.au)
[23:22:13] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[23:22:57] *** Quits: teegee (~teegee@203-91-233-64.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[23:22:57] *** teegee2 is now known as teegee
[23:23:31] *** Quits: MichaelLong (~ml@user/michaellong) (Quit: MichaelLong)
[23:27:21] *** Joins: ryann (~ryan@user/ryann)
[23:28:26] *** Quits: ryann (~ryan@user/ryann) (Remote host closed the connection)
[23:41:53] *** Joins: alguien_ (~alguien@user/alguien)
[23:45:09] *** Joins: MichaelLong (~ml@user/michaellong)
[23:51:23] *** Quits: Alexthek1d (~Alexthek1@p5b3ae3ec.dip0.t-ipconnect.de) (Quit: Leaving)
