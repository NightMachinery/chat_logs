[00:05:24] *** Quits: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[00:10:36] <Guillaum[m]> Haaaa, yes, that's possible. Thank you! (And now, I will have to rebuild everything with `-finfo-table-map` ;)
[00:17:23] *** Quits: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba) (Quit: coot)
[00:29:13] *** Joins: yauhsien (~Yau-Hsien@61-231-37-106.dynamic-ip.hinet.net)
[00:31:48] *** Quits: yauhsien_ (~Yau-Hsien@61-231-32-166.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[00:47:50] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-37-106.dynamic-ip.hinet.net)
[00:51:10] *** Quits: yauhsien (~Yau-Hsien@61-231-37-106.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[01:02:53] *** Quits: alanz (sid110616@id-110616.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[01:03:24] *** Quits: supersven (sid501114@id-501114.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[01:03:31] *** Joins: alanz (sid110616@id-110616.uxbridge.irccloud.com)
[01:03:32] *** Joins: supersven (sid501114@id-501114.ilkley.irccloud.com)
[01:05:00] *** Quits: pepeiborra (sid443799@id-443799.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[01:05:00] *** Quits: sooch_ (sid533113@id-533113.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:05:34] *** Joins: sooch_ (sid533113@id-533113.hampstead.irccloud.com)
[01:05:35] *** Joins: pepeiborra (sid443799@id-443799.ilkley.irccloud.com)
[02:52:10] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.3)
[02:57:10] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:57:23] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[07:37:38] <sooch_> :q
[07:37:47] <sooch_> Oops...
[07:52:32] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[07:53:52] *** Joins: hololeap (~hololeap@user/hololeap)
[10:58:56] *** Joins: coot (~coot@213.134.190.95)
[11:16:48] *** Joins: arrowd (~arr@2.93.163.158)
[11:55:59] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[12:40:25] <Guillaum[m]> I just wanted to tell you. I'm doing a huge refactor since ~3h, using HLS, on GHC 9.2. I think I opened all the files in my codebase. The experience is smooth, it helps me a lot. Thank a lot to you all!
[13:21:38] <cptwunderlich> OK sorry, I have to ask again about getting HLS working again for GHC development. It drives me crazy
[13:21:53] <cptwunderlich> So `HIE_BIOS_OUTPUT=/tmp/hie-test ./hadrian/hie-bios compiler/GHC.hs` finishes without errors.
[13:22:08] <cptwunderlich> When I run `./haskell-language-server-1.6.1.0-linux-9.2.1 --cwd ~/Projekte/haskell/ghc/compiler -d typecheck`
[13:22:19] <cptwunderlich> I get only failures 'Completed (0 files worked, 619 files failed)'
[13:22:38] <cptwunderlich> All with "hadrian/hie-bios: streamingProcess: exec: invalid argument
[13:22:38] <cptwunderlich>   (Bad file descriptor)"
[13:22:45] <cptwunderlich> https://pastebin.ubuntu.com/p/GzKMs69Rw6/
[13:43:25] *** Quits: michaelpj (~michaelpj@2001:470:69fc:105::86e) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: teto[m] (~keiichima@2001:470:69fc:105::3a35) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: sm (~sm@plaintextaccounting/sm) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: cdsmith (~cdsmithma@2001:470:69fc:105::284) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: jneira[m] (~jneiramat@2001:470:69fc:105::d729) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: maralorn (~maralorn@2001:470:69fc:105::251) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: expipiplus1 (~expipiplu@2001:470:69fc:105::d713) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: fendor[m] (~fendormat@2001:470:69fc:105::fcbd) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: jcwasmx86[m] (~jcwasmx86@2001:470:69fc:105::f26a) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: eddiemundo (~eddiemund@2001:470:69fc:105::a80) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: hpd_ (~hpdhpdeif@2001:470:69fc:105::230) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: lucasmsoares96[m (~lucasmsoa@2001:470:69fc:105::1:7793) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: PotatoHatsue (~berberman@2001:470:69fc:105::b488) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: dxld[m] (~dxldit-sy@2001:470:69fc:105::978) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: kokobd[m] (~kokobdzel@2001:470:69fc:105::1:b698) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: thomasc__[m] (~thomascma@2001:470:69fc:105::1:bf77) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: hjulle[m] (~hjullemat@2001:470:69fc:105::1dd) (Quit: Bridge terminating on SIGTERM)
[13:46:25] *** Joins: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9)
[13:55:38] *** Joins: hpd_ (~hpdhpdeif@2001:470:69fc:105::230)
[13:55:38] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[13:55:38] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[13:55:38] *** Joins: dxld[m] (~dxldit-sy@2001:470:69fc:105::978)
[13:55:38] *** Joins: maralorn (~maralorn@2001:470:69fc:105::251)
[13:55:39] *** Joins: michaelpj (~michaelpj@2001:470:69fc:105::86e)
[13:55:39] *** Joins: sm (~sm@plaintextaccounting/sm)
[13:55:39] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[13:55:39] *** Joins: fendor[m] (~fendormat@2001:470:69fc:105::fcbd)
[13:55:39] *** Joins: teto[m] (~keiichima@2001:470:69fc:105::3a35)
[13:55:39] *** Joins: PotatoHatsue (~berberman@2001:470:69fc:105::b488)
[13:55:39] *** Joins: anton-latukha[m] (~anton-lat@2001:470:69fc:105::fe99)
[13:55:42] *** Joins: jneira[m] (~jneiramat@2001:470:69fc:105::d729)
[13:55:42] *** Joins: jcwasmx86[m] (~jcwasmx86@2001:470:69fc:105::f26a)
[13:55:42] *** Joins: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac)
[13:55:43] *** Joins: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be)
[13:55:50] *** Joins: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9)
[13:55:51] *** Joins: lucasmsoares96[m (~lucasmsoa@2001:470:69fc:105::1:7793)
[13:55:51] *** Joins: eddiemundo (~eddiemund@2001:470:69fc:105::a80)
[13:55:51] *** Joins: kokobd[m] (~kokobdzel@2001:470:69fc:105::1:b698)
[13:55:52] *** Joins: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07)
[13:55:56] *** Joins: thomasc__[m] (~thomascma@2001:470:69fc:105::1:bf77)
[13:55:56] *** Joins: hjulle[m] (~hjullemat@2001:470:69fc:105::1dd)
[16:19:14] <maerwald> fendor[m]: https://github.com/haskell/hie-bios/pull/282#issuecomment-1030932987 this looks ok to me? Anything blocking this approach?
[16:19:34] <fendor[m]> yeah, it doesnt really work
[16:19:42] <fendor[m]> you also have to find out the ghc-pkg location
[16:19:59] <fendor[m]> the hack is slightly different to what you are using for discovering libdir
[16:20:17] *** Quits: idnar (sid12240@debian/mithrandi) (Ping timeout: 250 seconds)
[16:20:56] <fendor[m]> we pass in basically: `cabal repl -w <our-script>`. In the script, we have the ghc that actually compiles the dependencies
[16:21:20] <fendor[m]> if we use a different ghc version, then we also need to specify ghc-pkg
[16:21:31] *** Joins: idnar (sid12240@debian/mithrandi)
[16:22:11] <fendor[m]> if we use ghc-pkg from libdir, we have to basically infer the wrapper scripts of ghc-pkg , e.g. PKGCONF
[16:22:21] <maerwald> I think it's reasonable to assume that ghc-pkg lives in the same dir as ghc... that's guaranteed by the GHC build system
[16:23:00] <maerwald> yes, PKGCONF=libdir/package.conf.d
[16:24:12] <fendor[m]> I feel terrible adding hacks upon hacks onto something. So I hope to get https://github.com/haskell/cabal/pull/7500 merged and be done with it
[16:24:30] <maerwald> I don't see why this would be a hack
[16:25:03] <maerwald> and the main HLS shell wrapper already does this
[16:27:54] <maerwald> it's much more annoying to always switch the active GHC version, because HLS picks the wrong one
[16:28:34] <fendor[m]> We try to reproducing information we have not available, taking educated guesses on what might be correct when we should get the accurate information. I do think that's hacky.
[16:28:44] <fendor[m]> s/reproducing/reproduce/
[16:29:05] <fendor[m]> True, that is annoying
[16:29:12] <maerwald> yes and the fix is trivial
[16:29:27] <fendor[m]> I take your word that it works and I can finish the patch today
[16:30:05] <maerwald> here's shell code that infers ghc-pkg from ghc: https://github.com/haskell/haskell-language-server/blob/f1e146b5a6409106d89241581d4f3ab755481e2d/bindist/wrapper.in#L93-L107
[16:30:44] <maerwald> then we set PKGCONF from the libdir we got and invoke ghc-pkg: https://github.com/haskell/haskell-language-server/blob/f1e146b5a6409106d89241581d4f3ab755481e2d/bindist/wrapper.in#L75
[16:33:29] <fendor[m]> I presume the ABI hashes aren't relevant to hie-bios?
[16:34:14] <maerwald> that's something we want to refactor into haskell-language-server-wrapper at some point
[16:35:06] <maerwald> I mean, this is technically duplictation of logic
[16:35:42] <fendor[m]> it is, maybe we can invert the dependencies of the wrappers somehow s.t. we depend only on hie-bios
[16:35:45] <maerwald> I guess hie-bios is the entry point and the check could happen there
[16:35:58] <maerwald> because hls-wrapper gets the libdir from hie-bios anyway
[16:36:25] <fendor[m]> yeah
[16:36:44] <maerwald> but ABI checking is ad-hoc and should probably be discussed separately
[16:36:49] <maerwald> so I'd just skip that part for now
[16:37:53] <fendor[m]> ok!
[16:41:55] <maerwald> https://github.com/haskell/haskell-language-server/issues/2720
[17:11:27] <fendor[m]> can I pass the location of the global-package-db via an env variable or only on the cli?
[17:13:16] <fendor[m]> if it is the latter, we need to write a wrapper script for ghc-pkg on-the-fly, afaict. Or try to guess a ghc-pkg from the path
[17:13:27] <fendor[m]> Probably duplicating the logic from Cabal is fine?
[17:14:03] <fendor[m]> (I know the ghc-pkg detection in wrapper.in is basically that)
[18:02:08] *** Parts: coot (~coot@213.134.190.95) ()
[18:03:54] *** Joins: coot (~coot@2a02:a310:e241:1b00:ec1a:e9df:79ac:66ba)
[18:22:22] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[18:44:00] *** Joins: hololeap (~hololeap@user/hololeap)
[18:47:10] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:48:04] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:01:24] *** Quits: alanz (sid110616@id-110616.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[19:02:04] *** Joins: alanz (sid110616@id-110616.uxbridge.irccloud.com)
[20:42:28] *** Quits: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at) (Ping timeout: 272 seconds)
[21:21:46] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-37-106.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[22:07:43] <maerwald> fendor[m]: in what context?
[22:08:56] <maerwald> I mean the libdir is already passed via env var from hls-wrapper binary to hls shell wrapper
[22:10:22] *** Quits: arrowd (~arr@2.93.163.158) ()
[22:33:34] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:34:27] *** Joins: hololeap (~hololeap@user/hololeap)
[23:35:33] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:37:21] *** Joins: juhp (~juhp@128.106.188.82)
