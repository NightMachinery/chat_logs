[01:27:19] <byteit101[m]> looking at the comments from last night, what's the difference between realClass.getClassRuntime() and realClass.getRuntime() ?
[02:03:40] <headius> getRuntime goes metaClass.getClassRuntime
[04:24:43] <byteit101[m]> Popped that change to the ivar (fixed) PR
[04:24:43] <byteit101[m]> let me know if there is anything else that needs be be changed after further review
[06:30:55] *** Joins: subbu (~subbu@user/subbu)
[06:46:02] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 240 seconds)
[07:00:49] <headius> Yeah I will review and finalize tomorrow
[07:06:34] *** Joins: subbu (~subbu@user/subbu)
[07:26:41] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 256 seconds)
[07:31:12] *** Joins: subbu (~subbu@user/subbu)
[07:56:39] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 252 seconds)
[08:30:49] *** Joins: subbu (~subbu@user/subbu)
[08:44:12] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 240 seconds)
[10:08:53] *** Joins: sagax (~sagax_nb@user/sagax)
[17:36:15] <headius> ok I have modified the logger specs to guard on logger version rather than Ruby version
[17:36:28] <headius> updating logger tests from the gem brings us down to one failure I'm looking into
[18:23:38] <headius> ok I think I have an explanation
[18:24:44] <headius> the final failing test confirms that once a log file has been shifted (e.g. after a certain size or time) any other open logs against that file reflect the new name (old name + ".0")
[18:25:13] <headius> the test in this case is identical?(new name, old log File object)
[18:25:59] <headius> in CRuby I think they are using fstat to always get the actual name of the open file, which will reflect renames... but we use the original name the file was opened under
[18:28:47] <headius> ahh not quite that: in CRuby, File.identical? stats both file objects (or paths) and uses that to compare, while we just canonicalize the stored path and compare
[18:29:08] <headius> so this is a valid failure but unrelated to logger
[18:30:52] <headius> the renamed file should actually propagate to other open logs on the same entry but it is a querying/reporting bug in File.identical? preventing the test from seeing that
[18:31:09] <headius> so I will exclude this and we can deal with the identical? issue separately
[18:56:00] <headius> https://github.com/jruby/jruby/issues/7151
[18:58:50] <headius> I have pushed byteit101 PR as a test branch here to confirm the logger errors are gone: https://github.com/jruby/jruby/actions/runs/2022952391
[18:58:58] <headius> will review code again now
[19:31:00] <headius> ugh testing locally and just realized I had not rebuilt with that PR in place ü§¶‚Äç‚ôÇÔ∏è
[19:37:10] <headius> byteit101: ok I must be doing something wrong here... why does this output not include the stringField:
[19:37:44] * headius sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/6ff4cdf01a7c4f9ae91b1ded690271b83c650120
[19:38:04] <headius> I wanted to confirm outside of specs that the field was there and getting set so I could then also confirm invokedynamic is binding to the field
[19:41:20] <headius> I must be doing something wrong but this seems to match your example specs
[19:45:52] <headius> if I can get an explanation of that we can merge that PR any time and then I think 9.3.4 is ready
[19:45:56] <headius> enebo: ^
[19:46:16] <headius> the branch I pushed with the logger test fixes and ivar stuff together is green
[19:47:34] <enebo[m]> yeah great
[19:52:49] <headius> enebo: I tried to merge 9.3 to master but your kwarg change has a conflict and I'm not sure what to do
[19:53:21] <enebo[m]> oh I can do it.  It probably is confused because the 9.4 flag is very similar to the one on 9.3
[19:53:53] <headius> yeah that and setKeywordArguments vs setKeywordRestArguments
[19:54:20] <enebo[m]> yeah it appears both flags are still present in MRI
[20:22:35] <headius> enebo: something seems to be broken with my github account
[20:22:59] <headius> those commenting errors I got the other day are now preventing me from commenting or merging ahorek's jcodings fix, which we should ship in 9.3.4
[20:23:22] <headius> I tried to log out and got a 500. Tried to log in on an incog tab and a different browser and I get 500s.
[20:23:23] <enebo[m]> I can see if you are listed on jcodings
[20:23:38] <enebo[m]> oh ok well that likely is something else
[20:23:43] <headius> something is really screwed up with my account
[20:24:06] <enebo[m]> yeah I guess contact support.  We need to release jcodings?
[20:24:13] <headius> yes
[20:24:25] <headius> we did not mark the bug for 9.3.4 but since ahorek found the problem we might as well
[20:24:26] <enebo[m]> ok.  I can release.  we use the full release plugin for that
[20:24:36] <headius> it is that AIOOB issue in a japanese encoding
[20:24:59] <headius> I can release if you can do the milestones... git stuff seems to work but the site is not letting me do much
[20:25:55] <enebo[m]> I will merge https://github.com/jruby/jcodings/pull/57
[20:26:29] <headius> yeah just that
[20:26:49] <enebo[m]> the close issue associated with it and close milestone
[20:26:56] <enebo[m]> do you want me to make next version of one too?
[20:27:03] <headius> 500 error when I try to make milestone
[20:27:25] <headius> the issue he links in JRuby is just my jcodings update PR
[20:27:47] <headius> but that exclude can go away
[20:28:18] <headius> I will update my jcodings PR once the release is out
[20:28:26] <headius> and when that is pushed you can merge it and we should be good
[20:28:33] <enebo[m]> oh I thought this was related to https://github.com/jruby/jcodings/issues/42
[20:29:00] <enebo[m]> It is not linked and this only points at your PR which only changes a test
[20:29:08] <headius> I thought it was too but I guess this is a different failure
[20:29:12] <enebo[m]> ok
[20:29:23] <headius> it is a failure we had excluded
[20:29:38] <enebo[m]> so I will close out the milestone and make a new one
[20:29:43] <enebo[m]> It is merged
[20:29:49] <headius> ok
[20:30:14] <headius> it's weird... I can interact with jruby/jruby ok but not jruby/jcodings
[20:30:19] <headius> all 500s on jcodings
[20:30:40] <enebo[m]> I did notice one weird thing on jcodings
[20:31:09] <enebo[m]> The UI when setting mileston is not updating locally but if I click back on the selection pulldown it is marked
[20:31:38] <headius> it was doing that for me too
[20:31:41] <headius> I thought it was not updating
[20:31:51] <enebo[m]> That could be them doing 70 releases a day and messing something up or network or them breaking something with firefox support
[20:32:05] <enebo[m]> It appears to really be set though
[20:32:11] <headius> well I tried to log in on both chrome and safari and got 500 on both
[20:32:19] <enebo[m]> 500 is something else
[20:32:44] <enebo[m]> Perhaps they shard or something where you have a broken deploy
[20:32:54] <headius> I see merged PR, I will start release of jcodings 1.0.56
[20:32:59] <enebo[m]> ok
[20:33:42] <enebo[m]> I am trying to remember if it is github but I believe they said they have multiple versions of github running at the same time
[20:33:59] <enebo[m]> some for a/b testing and some because they mitigate pushing bugs by partial rollouts
[20:34:30] <headius> ugh
[20:34:33] <headius> I can't push tags to jcodings
[20:34:40] <enebo[m]> I might be thinking of another company too but i guess I am not saying anything unrealistic on any huge deployed codebase
[20:34:41] <headius> time to move to gitlab?
[20:34:47] <enebo[m]> lol
[20:35:10] <enebo[m]> That is really odd
[20:35:43] <enebo[m]> I cannot imagine that the actual git repo itself is anything other than git but the auth part must be tripping you up
[20:57:16] <byteit101[m]> headius: you are missing some requires. require 'jruby/core_ext'  or 'java' I think
[21:03:28] <headius> oh wow why is that
[21:04:02] <byteit101[m]> commented that on issue
[21:04:32] <headius> ok so this is not new but I don't like it
[21:04:38] <headius> no sir don't like it
[21:04:38] <byteit101[m]> it's why in the blog post draft I added `require 'jruby/core_ext' # required for become_java! to do anything useful` everywhere
[21:05:08] <headius> not your issue but we should do something better
[21:05:49] <byteit101[m]> Yes when writing the blog post I ran into this a few times and wanted to change it before realizing that even warning would affect jrubyc usage
[21:06:42] <headius> ok
[21:08:04] <byteit101[m]> could it be possible to have jrubyc automatically  include a no-op version, and default then gets a warning or b_j version?
[21:09:03] <headius> PR is merged
[21:09:14] <byteit101[m]> yay!
[21:09:48] <byteit101[m]> I'll prepare to fix it again :-P
[21:19:52] <headius> that's the spirit!
[21:25:10] <headius> lunch break, maybe GitHub will fix my issue and I can get back to work
[21:35:13] <byteit101[m]> btw, the test line you did didn't use any of the new code in the PR. add `, instance_variable: true` if you want to test it
[21:36:34] <headius> Yeah I was using that to dig into assembly but removed it for the simple example when I couldn't get the field to show up
[21:37:48] <headius> I suppose it is picking up the normal Java integration java_field when you don't have the require, so it just tries to bind a field that isn't there
[21:53:12] <byteit101[m]> yes
[21:58:59] <headius> GitHub support claims there were issues earlier today that are now resolved
[21:59:14] <headius> Continuous deployment is a giant steaming load of BS if you ask me
