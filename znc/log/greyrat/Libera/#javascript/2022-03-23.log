[00:00:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:00:39] <sheetjs> Excel treats "next Sunday" as a s string
[00:00:49] <sheetjs> strtotime of course tries to interpret that
[00:00:56] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[00:01:26] <blueagain> sheetjs: and also, as concerns addressing chromium, can't you just copy their code? or do you need the inverse function?
[00:01:52] <sheetjs> personal opinion
[00:02:03] <sheetjs> n> new Date("how is this a date 2")
[00:02:04] <jellobot> (okay) 2001-02-01T00:00:00.000Z
[00:02:14] *** Joins: crashrep (~crashrep@user/crashrep)
[00:02:15] <sheetjs> ^^ it is a personal opinion that V8 date parsing is broken
[00:03:12] <sheetjs> also a personal opinion that google would rather give sheetjs a hard time than address the broken nature of date parsing
[00:03:22] <sheetjs> so we're sorta boxed in and it's unclear which approach is better
[00:03:55] <blueagain> what does the standard say about passing that kind of string to the Date constructor
[00:04:07] <sheetjs> nothing, it's "implementation-dependent"
[00:04:23] <sheetjs> arguably IE10 does a better job than Chrome 99
[00:04:28] <blueagain> then there's no wrong (hence the personal opinion ig?)
[00:04:34] <sheetjs> right
[00:04:47] <sheetjs> Excel doesn't even spec out what formats it accepts
[00:05:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:05:12] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[00:05:34] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[00:05:51] <blueagain> though isn't really an issue that chromium doesn't accept some formats that excel does, no?
[00:06:02] <sheetjs> there's a spectrum
[00:06:05] <blueagain> you probably convert it internally to your own format before exporting?
[00:06:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[00:06:41] <sheetjs> it can be simultaneously true that "Chromium is way too forgiving" and "It's acceptable for Chromium to parse dates that Excel does not accept"
[00:07:33] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[00:07:33] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:07:40] <sheetjs> n> new Date("Mays Landing NJ 08330") // like this
[00:07:40] <jellobot> (okay) 8330-05-01T00:00:00.000Z
[00:08:00] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[00:08:07] <blueagain> but you always *know* whether you're a chromium or excel environment, no?
[00:08:15] <blueagain> in a*
[00:08:29] <sheetjs> Irrespective of whether Excel accepts the date (it does not interpret as date), it still seems off that Chrome accepts every city in America as a date
[00:09:06] <sheetjs> n> new Date("Beverly Hills, 90210")
[00:09:07] <jellobot> (okay) +090210-01-01T00:00:00.000Z
[00:09:16] <blueagain> n> new Date("Hell's Kitchen")
[00:09:16] <jellobot> (okay) Invalid Date
[00:09:23] <blueagain> oh, you mean with zip code
[00:09:44] <blueagain> that's just a best effort approach
[00:09:51] <blueagain> a dumb one though
[00:10:17] <sheetjs> n> new Date("Hell's Kitchen spans multiple zip codes, including 10018")
[00:10:17] <jellobot> (okay) +010018-01-01T00:00:00.000Z
[00:11:54] <blueagain> probably the intention is
[00:12:02] <blueagain> n> new Date("On a perfectly sunny day on January the first, 10018")
[00:12:03] <jellobot> (okay) +010018-01-01T00:00:00.000Z
[00:12:11] <blueagain> see? worked perfectly
[00:12:13] <sheetjs> its consistent with the spec
[00:12:24] <sheetjs> n> new Date("On a perfectly sunny day on January the second, 10018")
[00:12:25] <jellobot> (okay) +010018-01-01T00:00:00.000Z
[00:13:00] <blueagain> It's possible to construct cases where it kind of makes sense, hence best effort
[00:13:19] <sheetjs> Chrome is technically not wrong here
[00:14:04] <blueagain> n> new Date("On a perfectly sunny day on January the 1st, 10018")
[00:14:04] <jellobot> (okay) Invalid Date
[00:14:06] <blueagain> lol
[00:14:35] <blueagain> why is that invalid
[00:14:36] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 240 seconds)
[00:15:05] <blueagain> if anything that's *more* parseable than "first"
[00:15:05] <sheetjs> if you don't include "st" it is valid
[00:15:14] <sheetjs> n> new Date("On a perfectly sunny day on January the 1, 10018")
[00:15:15] <jellobot> (okay) +010018-01-01T00:00:00.000Z
[00:15:18] <bomb> blueagain y10k problem :P
[00:15:44] <blueagain> n> new Date("On a perfectly sunny day on January the 4, 10018")
[00:15:45] <jellobot> (okay) +010018-01-04T00:00:00.000Z
[00:16:07] <blueagain> ok, that kind of works
[00:16:24] <blueagain> n> new Date("On a perfectly sunny day on Feb the 25, 10018")
[00:16:25] <jellobot> (okay) +010018-02-25T00:00:00.000Z
[00:16:30] <blueagain> nice
[00:16:36] <sheetjs> n> new Date("in the future, will you be repeating the tired phrase 'may the 4'?")
[00:16:36] <jellobot> (okay) 2001-05-04T00:00:00.000Z
[00:17:00] *** Joins: duckgoose (~BurdIRC@user/duckgoose)
[00:17:14] <sheetjs> may the 4ce is not accepted for the same reason January the 1st is not
[00:18:39] <blueagain> n> new Date("I may be wrong on many different things, perhaps even 1000")
[00:18:40] <jellobot> (okay) 1000-05-01T00:00:00.000Z
[00:19:20] <ljharb> very few things with Date are technically wrong, because Date is terrible and is wildly underspecified
[00:19:37] <sheetjs> n> new Date("It's over 9000!!!1!!!1!!!")
[00:19:38] <jellobot> (okay) 9000-01-01T00:00:00.000Z
[00:19:46] <ljharb> (which, ofc, makes most of Date wrong in practice)
[00:19:51] <blueagain> wasn't it quickly hacked together atop java's Date
[00:20:01] <ljharb> probably
[00:20:08] <ljharb> java never ends up with anything that's good
[00:21:20] <blueagain> n> new Date("0000")
[00:21:21] <jellobot> (okay) 0000-01-01T00:00:00.000Z
[00:21:29] <blueagain> that's the earliest depictable date?
[00:22:13] <sheetjs> you can go lower
[00:22:30] <sheetjs> n> var x = new Date("0000"); new Date(x.valueOf() - 10000000)
[00:22:31] <jellobot> (okay) -000001-12-31T21:13:20.000Z
[00:24:57] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:25:11] <blueagain> n> new Date(new Date("0000").valueOf() - 10**15)
[00:25:12] <jellobot> (okay) -031689-04-06T22:13:20.000Z
[00:25:35] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[00:26:25] <blueagain> n> new Date(new Date("0000").valueOf() - 10**15.93334)
[00:26:26] <jellobot> (okay) -271798-10-26T11:58:14.501Z
[00:26:31] <blueagain> that's about the lowest I can get
[00:29:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[00:29:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[00:29:55] <ljharb> n> new Date(-(10**15.936513)) @ sheetjs
[00:29:56] <jellobot> sheetjs, -271821-10-07T23:05:11.364Z
[00:30:06] <blueagain> oh ok, it's 10**8 days up and down from 1 jan, 1970, according to the spec
[00:30:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:30:30] <blueagain> https://262.ecma-international.org/5.1/#sec-15.9.1.1
[00:30:33] <ljharb> cute that you think impls actually comply with the spec around Date :-p
[00:30:42] <ljharb> blueagain: also, it's a living standard, check the actual spec
[00:30:54] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:31:31] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[00:32:15] <sheetjs> this is amusing but not really relevant to the general problem of parsimony vs accuracy in JS date parsing
[00:32:26] <blueagain> just a comment, ljharb, about this https://262.ecma-international.org/
[00:32:35] <blueagain> IRC: #tc39 on freenode
[00:32:38] <blueagain> that's probably outdated?
[00:33:05] *** pmercado_ is now known as pmercado
[00:33:15] <bomb> Ecma International is outdated
[00:33:22] <blueagain> oh
[00:34:02] <blueagain> oh I see, on tc39.es it's already updated
[00:34:47] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:35:01] <blueagain> yeah, it stills says 10**8 days in the current spec
[00:38:49] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[00:39:40] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[00:40:00] *** Joins: pulse (~pulse@user/pulse)
[00:42:20] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:43:07] <Maxdamantus> n> new Date("next tuesday");
[00:43:08] <jellobot> (okay) Invalid Date
[00:43:53] <Maxdamantus> n> require("child_process").execSync("date --date='next tuesday'");
[00:43:54] <jellobot> (okay) <Buffer 54 75 65 20 4d 61 72 20 32 39 20 30 30 3a 30 30 3a 30 30 20 55 54 43 20 32 30 32 32 0a>
[00:43:58] <sheetjs> hmm so rollup is still thinking there's ~4.5KB of stateful code.  most of it is tied to workarounds for Buffer, but stripping Buffer references from the esm build means node ESM won't take advantage of Buffer benefits
[00:44:00] <Maxdamantus> n> require("child_process").execSync("date --date='next tuesday'").toString("utf8");
[00:44:01] <jellobot> (okay) 'Tue Mar 29 00:00:00 UTC 2022\n'
[00:45:59] *** Joins: mud (~mud@user/kadoban)
[00:46:44] *** Joins: Alex1231 (~Adium@210.sub-174-193-200.myvzw.com)
[00:46:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:48:05] *** Joins: skmo (eskimo@iglooirc.com)
[00:48:17] <skmo> hello there
[00:48:36] <skmo> i'm having a bit of an issue here with an on click listener
[00:49:16] <skmo> for some reason if my textarea is focused, and then i click on an element somewhere, instead of my click listener being triggered on the elemtn i click on, i'm getting a change event triggered on the textarea?
[00:49:32] <skmo> any ideas why this could be happening?
[00:50:17] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Ping timeout: 252 seconds)
[00:50:28] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:51:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:53:19] *** Joins: banana__ (~banana_@107.116.20.242)
[00:55:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[00:55:11] <ljharb> blueagain: yes, exactly. ES2022, which will be released in june, will update the ecma website to that snapshot of the real spec, tc39.es/ecma262
[00:55:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[00:57:03] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:57:11] *** Quits: coder7of9 (~coder7of9@user/coder7of9) (Quit: Client closed)
[00:57:14] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[00:57:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[00:58:14] *** Joins: gehn (~gehn@user/gehn)
[00:58:16] *** Quits: banana__ (~banana_@107.116.20.242) (Ping timeout: 245 seconds)
[00:59:14] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[00:59:55] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:02:01] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:05:15] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[01:06:17] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:06:20] *** Joins: stenno (~stenno@user/stenno)
[01:08:01] *** Quits: stenno (~stenno@user/stenno) (Client Quit)
[01:08:18] *** Joins: stenno (~stenno@user/stenno)
[01:09:57] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:11:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[01:12:39] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[01:15:07] *** Parts: skmo (eskimo@iglooirc.com) (Textual IRC Client: www.textualapp.com)
[01:15:26] <ThePendulum> man my vim linting is still broken for this one specific vue project and I don't get why. another nearly identical vue project is fine :/
[01:15:39] <ThePendulum> completely removed the eslint files and put in the exact ones from the other project. idk if it's some dependency
[01:15:59] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[01:15:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:22:07] *** Joins: pavonia (~user@user/siracusa)
[01:22:58] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:23:23] *** Joins: nomic2 (~nomic@185.217.117.249)
[01:23:28] *** Quits: nomic2 (~nomic@185.217.117.249) (Read error: Connection reset by peer)
[01:26:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[01:28:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:29:36] *** Joins: voltage (voltage@user/voltage)
[01:30:07] *** Quits: bomb (~bomb@user/bomb) (Quit: good night)
[01:30:31] <howdoi> When was the last time you used Symbol.species?
[01:32:37] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 240 seconds)
[01:33:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[01:33:20] *** Quits: Alex1231 (~Adium@210.sub-174-193-200.myvzw.com) (Quit: Leaving.)
[01:34:45] <blueagain> ThePendulum: you use neovim?
[01:35:34] *** voltage is now known as voltage_
[01:36:28] <ThePendulum> no just regular vim
[01:36:44] <blueagain> nvim is really nice
[01:36:57] <ThePendulum> it was fine for years, suddenly something became dislodged
[01:38:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:39:06] *** Quits: admin123 (~harrymore@ool-18b9adbf.dyn.optonline.net) (Ping timeout: 245 seconds)
[01:39:56] <blueagain> vim is a quality dutch product
[01:40:00] <blueagain> :D
[01:40:35] <blueagain> I think it's been in development for over 30 years?
[01:43:02] *** Joins: banana__ (~banana_@cpe-65-29-176-249.wi.res.rr.com)
[01:46:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[01:48:49] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:49:31] *** Quits: banana__ (~banana_@cpe-65-29-176-249.wi.res.rr.com) (Ping timeout: 245 seconds)
[01:51:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:54:07] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:54:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:02:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:02:15] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:02:27] *** Joins: trevors (~trevors@user/trevors)
[02:03:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[02:03:54] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Read error: Connection reset by peer)
[02:04:17] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[02:05:21] *** Joins: Guest49 (~Guest49@2600:1700:2050:1040:5d4c:e061:4689:d06a)
[02:07:16] *** Joins: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[02:07:55] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5)
[02:08:39] *** Quits: Guest49 (~Guest49@2600:1700:2050:1040:5d4c:e061:4689:d06a) (Quit: Client closed)
[02:08:41] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[02:09:02] *** Quits: lamein (~lamein@user/lamein) (Quit: WeeChat 2.8)
[02:09:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:10:03] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:10:37] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 240 seconds)
[02:11:00] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[02:11:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Client Quit)
[02:11:38] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:11:40] <banana_> y
[02:11:41] <banana_> yo
[02:14:40] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:14:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:15:20] *** austincheney_ is now known as austincheney
[02:15:49] <austincheney> n> Date.parse(0);
[02:15:50] <jellobot> (okay) 946684800000
[02:16:08] <austincheney> n> new Date(Date.parse(0));
[02:16:09] <jellobot> (okay) 2000-01-01T00:00:00.000Z
[02:16:20] *** spynx is now known as spynxic
[02:17:03] <austincheney> n> new Date(-1*Date.parse(0));
[02:17:03] <jellobot> (okay) 1940-01-02T00:00:00.000Z
[02:17:13] *** Quits: adsc84 (~adsc@2a02:1210:4a4e:1500:993d:b280:e3da:df51) (Quit: Client closed)
[02:17:19] <austincheney> that is unexpected
[02:18:29] <banana_> so the US might banish standard time
[02:18:58] <Decker> yay
[02:19:00] <banana_> or vice versa dunno
[02:19:53] <banana_> definitely there would be no "daylight savings time"
[02:20:28] *** Joins: hashfuncf39 (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[02:20:31] <banana_> just like no "national savings"
[02:23:47] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[02:25:58] *** Joins: src (~src@user/src)
[02:27:11] <Decker> notional savings
[02:30:13] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[02:32:36] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[02:36:37] *** Joins: vysn (~vysn@user/vysn)
[02:45:14] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[02:48:35] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:54:35] *** Quits: stagas (~stagas@2a02:587:c49d:51df:d1fb:e56e:9d27:952b) (Ping timeout: 252 seconds)
[02:56:22] *** Joins: stagas (~stagas@2a02:587:c4b1:6a04:53aa:8d8a:dd18:cc01)
[03:05:21] *** Quits: blahboybaz (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[03:05:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:10:53] <ThePendulum> grr I get an error "Property 'userIds' does not exist on type 'unknown'" but I'm not using typescript
[03:11:33] <systemfault> lol, where does it come from then? :p
[03:12:58] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Quit: Leaving)
[03:13:12] <ThePendulum> idk, from eslint or some other linter in vim. the error seems to appear in a similar area to where my browser throws a completely different error I don't understand (TypeError: Cannot read properties of null (reading 'emitsOptions'))
[03:13:16] <ThePendulum> this is vue
[03:15:37] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Ping timeout: 240 seconds)
[03:15:56] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:16:01] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[03:19:05] *** Joins: Guest3174 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net)
[03:19:46] *** Joins: crashrep (~crashrep@user/crashrep)
[03:21:36] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[03:24:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:31:26] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[03:31:35] *** Joins: Axy (~Axy@user/axy)
[03:32:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:32:52] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[03:33:51] *** Joins: pizdets_ (~pizdets@183.182.110.214)
[03:34:11] *** Quits: pizdets (~pizdets@183.182.115.102) (Ping timeout: 265 seconds)
[03:35:14] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:35:22] *** Joins: trevors (~trevors@user/trevors)
[03:36:57] <buu> Is there some way to remove duplicate entries from a URLSearchParams
[03:37:44] <buu> ThePendulum: "TypeError: cannot read..." has nothing to do with typescript
[03:37:45] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[03:38:08] <buu> Obviously your variable holds null
[03:39:48] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[03:40:57] *** Quits: hashfuncf39 (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[03:42:11] <systemfault> buu: Looking at the doc, you could probably abuse of the .set behavior to only keep the first match
[03:42:51] <buu> systemfault: Oh, huh, that does do that
[03:43:13] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[03:43:15] <buu> I'll have to think about that
[03:43:17] <systemfault> Something as dumb as  [...foo.keys()].forEach(key => { foo.set(key, foo.get(key)); })
[03:43:39] <systemfault> (not sure)
[03:43:45] <buu> It actually has a forEach method
[03:44:02] <systemfault> Ah, nice
[03:44:03] <ljharb> maps and sets do, yes
[03:44:08] <howdoi> When was the last time you used Symbol.species?
[03:44:15] <systemfault> Never.
[03:44:27] <ljharb> howdoi: nobody actually uses it
[03:45:06] <ljharb> howdoi: just like regex subclassing, it was all put in based on a theoretical subclassing model, but a) it doesn't work, and b) people don't subclass builtins in general, but especially because it doesn't work
[03:45:06] <systemfault> ljharb could possibly the only human who ever used it... and it was probably for implementing some shim
[03:45:15] <buu> x.forEach( (v,k) => x.set(k,v) )
[03:45:29] <ljharb> lol i don't think even i have
[03:45:36] <buu> ljharb: It's in that matchall code
[03:45:39] <buu> =]
[03:46:12] <ljharb> buu: oops, lol. that's the one then
[03:46:23] <howdoi> lol
[03:46:25] <howdoi> epic
[03:46:31] <ljharb> i usually don't bother, but matchAll's mine :-p
[03:46:32] <buu> One thing go does is: if x, ok := foo(); ok { fooer(x) }
[03:46:58] <buu> For some reason urlsearchparams.foreach passes v,k
[03:47:03] <buu> instead of k,v
[03:47:17] <systemfault> But hey... knowing about it could potentially make some interesting Christmas discussions with all of your family!
[03:47:33] *** Quits: average (~average@user/average) (Ping timeout: 250 seconds)
[03:48:19] <buu> =[]
[03:48:49] <howdoi> "Not so well known symbols" good blog title?
[03:49:09] <ljharb> howdoi: lol that's basically all of them
[03:49:18] <buu> When do you use @@
[03:49:18] <ljharb> Symbol.iterator is like the only one most everyone's heard of
[03:49:21] <buu> is what I want to know
[03:49:22] <howdoi> ljharb: hah hah
[03:49:34] <howdoi> I have thought collisions with this "Dmitri Pavlutin"
[03:49:41] <ljharb> huh?
[03:49:47] <ljharb> buu: lol nobody uses it except the spec
[03:49:56] <ljharb> altho i use it on my computer as a shortcut for my email address
[03:49:59] <howdoi> Like I think of blogging something, he would have covered it
[03:50:00] <buu> =[]
[03:50:07] <ljharb> howdoi: no idea who that is
[03:50:38] <buu> ljharb: There's a lot of weird stuff in that spec
[03:50:54] <ljharb> indeed
[03:51:11] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 245 seconds)
[03:51:12] <howdoi> DM'd
[03:51:23] <systemfault> At the same time... it's funny that a Perl dev says that...
[03:51:32] <howdoi> Easiest way to list all the well known symbols?
[03:52:00] <systemfault> n> Object.getOwnPropertyNames(Symbol)
[03:52:01] <jellobot> (okay) [ 'length', 'name', 'prototype', 'for', 'keyFor', 'asyncIterator', 'hasInstance', 'isConcatSpreadable', 'iterator', 'match', 'matchAll', 'replace', 'search', 'species', 'split', 'toPrimitive', 'toStringTag', 'unscopables' ]
[03:52:21] <ljharb> n> Reflect.ownKeys(Symbol).filter(x => typeof Symbol[x] === 'symbol')
[03:52:21] <jellobot> (okay) [ 'asyncIterator', 'hasInstance', 'isConcatSpreadable', 'iterator', 'match', 'matchAll', 'replace', 'search', 'species', 'split', 'toPrimitive', 'toStringTag', 'unscopables' ]
[03:53:30] <systemfault> Since I never personally use Proxy... I never even think of using Reflect
[03:53:57] <buu> What exactly is Symbol supposed to be
[03:54:01] <howdoi> noice
[03:54:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[03:54:11] <ThePendulum> buu: "Property does not exist on type" is something that seems to be associated with typescript, not cannot read
[03:54:14] <buu> Like, a set of constants to represent class method names?
[03:54:24] <buu> ThePendulum: Yeah, but that wasn't your seconde rror
[03:54:29] <ljharb> buu: a constructor?
[03:54:41] <ljharb> buu: if you mean symbols, it's a way to have string properties that avoid name collision by having identity
[03:54:55] <buu> Symbol.hasInstance
[03:55:16] <buu> I feel like 'having identity' is not the right way to put that
[03:55:47] <ljharb> it is
[03:55:56] <ljharb> Symbol.hasInstance is a well-known symbol, and it's what `instanceof` looks for.
[03:56:08] <buu> Sure, but .. everything has an identity
[03:56:26] *** Quits: karabaja4 (~karabaja4@dh207-94-81.xnet.hr) (Remote host closed the connection)
[03:56:42] <buu> it's a "well known value that is unlikely to collide with existing keys"
[03:56:59] <buu> The next level beyond "_key"
[03:57:57] <ljharb> buu: ok well, true. in my mental model, everything has identity, because every 3 is the same three
[03:58:07] <ljharb> buu: others on tc39 believe only objects and symbols have identity.
[03:58:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[03:58:17] <buu> that hurts my head
[03:58:18] <ljharb> buu: the "well-known" part is because it's the same `===` value across realms
[03:58:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:58:33] <ljharb> meaning, `Symbol.iterator` from one realm is `===` to `Symbol.iterator` in another realm (like in an iframe)
[03:58:37] <buu> Yeah
[03:58:45] <ThePendulum> buu: hence I said it's a completely different error
[03:58:49] <buu> But it's just an arbitrary value
[03:58:51] <ljharb> there's also "registered symbols" which are also cross-realm (`Symbol.for`)
[03:58:56] <ljharb> buu: yes, with a string description
[03:59:00] <buu> oh?
[03:59:16] <buu> Where does that hide
[04:00:28] <ljharb> in `.description`
[04:00:32] <ljharb> n> Symbol('buu').description
[04:00:33] <jellobot> (okay) 'buu'
[04:00:33] <buu> Neat
[04:00:47] <ljharb> that was added post-ES6 tho, so https://npmjs.com/symbol.prototype.description, natch
[04:00:53] <buu> n> Symbol('prototype').description
[04:00:54] <jellobot> (okay) 'prototype'
[04:01:13] <ljharb> n> Symbol.iterator.description
[04:01:13] <jellobot> (okay) 'Symbol.iterator'
[04:01:24] <ljharb> n> String(Symbol('buu'))
[04:01:25] <jellobot> (okay) 'Symbol(buu)'
[04:01:25] <ljharb> etc
[04:01:28] <buu> So is Symbol.prototype essentially == to Symbol('prototype')
[04:01:35] <systemfault> Why has the TC39 chosen to care about realms? Could they have left those implementation defined?
[04:01:36] <ljharb> huh? no
[04:01:40] <ljharb> buu: Symbol.prototype is an ordinary object
[04:01:46] <buu> er
[04:01:48] <ljharb> systemfault: leaving things impl-defined is always the worst possible outcome
[04:01:50] <buu> Symbol.match ?
[04:02:00] <ljharb> buu: that's a symbol
[04:02:08] <ljharb> buu: `.prototype` is always an ordinary object tho
[04:02:12] <buu> yeah bad example
[04:02:21] <ljharb> buu: `Symbol.for` and `Symbol.keyFor` are also not symbols
[04:02:24] <buu> n> Symbol('match').description
[04:02:24] <jellobot> (okay) 'match'
[04:02:31] <buu> n> Symbol.match.description
[04:02:32] <jellobot> (okay) 'Symbol.match'
[04:02:44] <buu> n> Symbol('Symbol.match').description
[04:02:45] <jellobot> (okay) 'Symbol.match'
[04:02:51] <buu> n> Symbol('Symbol.match') == Symbol.match
[04:02:51] <jellobot> (okay) false
[04:03:19] <buu> Is there any way to get back to Symbol.match without having a reference to Symbol etc?
[04:03:26] <buu> I mean, without the predefined value
[04:05:11] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[04:06:14] <ljharb> buu: only finding it elsewhere
[04:06:22] <ljharb> n> Object.getOwnPropertySymbols(RegExp.prototype) @ buu
[04:06:23] <jellobot> buu, [ Symbol(Symbol.match), Symbol(Symbol.matchAll), Symbol(Symbol.replace), Symbol(Symbol.search), Symbol(Symbol.split) ]
[04:06:30] <ljharb> otherwise no, once you lose it it's gone forever
[04:06:33] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[04:06:41] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:07:09] <systemfault> ljharb: then they should make setTimeout standard of what you're saying is right
[04:07:18] <systemfault> And other timers
[04:09:42] <systemfault> You once told me about the reasons why they were not in the standard... and it made sense
[04:09:43] <howdoi> n> Reflect.keys(RegExp.prototype)
[04:09:44] <jellobot> (fail) TypeError: Reflect.keys is not a function
[04:09:57] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxr625ly29kyuep.18120a2.ip6.access.telenet.be)
[04:09:59] <howdoi> n> Reflect.ownKeys(RegExp.prototype)
[04:10:00] <jellobot> (okay) [ 'constructor', 'exec', 'dotAll', 'flags', 'global', 'hasIndices', 'ignoreCase', 'multiline', 'source', 'sticky', 'unicode', 'compile', 'toString', 'test', Symbol(Symbol.match), Symbol(Symbol.matchAll), Symbol(Symbol.replace), Symbol(Symbol.search), Symbol(Symbol.split) ]
[04:12:06] <howdoi> n> [Symbol('match').description, Symbol.match.description]
[04:12:06] <jellobot> (okay) [ 'match', 'Symbol.match' ]
[04:17:05] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:18:07] <buu> Sometimes I really hate websites
[04:18:11] <buu> Why does a keyring have an isbn
[04:18:23] *** Joins: suss (~user@user/suss)
[04:18:45] <suss> 制作gif
[04:19:53] <systemfault> buu: Both contain the letter "i"?
[04:20:17] <buu> no
[04:20:20] <buu> just no
[04:20:24] <systemfault> :'(
[04:20:44] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxr625ly29kyuep.18120a2.ip6.access.telenet.be) (Ping timeout: 268 seconds)
[04:22:09] <buu> Hmph
[04:22:17] <buu> I want a giant cache of scraped websites
[04:27:12] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[04:27:28] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:28:21] *** Joins: Praise (~Fat@user/praise)
[04:29:49] *** Joins: kakashiAL (~kakashi@41.250.52.71)
[04:32:36] <sheetjs> common crawl?
[04:33:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[04:34:36] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:35:02] *** Quits: nepeat (~nepeat@79.110.170.59) (Quit: ZNC 1.8.2 - https://znc.in)
[04:35:28] *** Joins: nepeat (~nepeat@79.110.170.59)
[04:35:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[04:36:33] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:39:18] <ljharb> systemfault: yes, i'd love setTimeout to be standard, but i doubt it ever will be
[04:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f) (Remote host closed the connection)
[04:42:32] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f)
[04:44:05] *** Joins: lembron (~admin@user/lembron)
[04:44:36] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Ping timeout: 240 seconds)
[04:46:29] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[04:46:45] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:46:55] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:47:15] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f) (Ping timeout: 268 seconds)
[04:47:44] *** Joins: nomic (~nomic@185.217.117.249)
[04:54:57] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[04:56:07] *** Joins: Sayona_ (~Sayona@user/sayona)
[04:56:13] *** Quits: Sayona (~Sayona@user/sayona) (Ping timeout: 240 seconds)
[04:56:43] *** Sayona_ is now known as Sayona
[05:00:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:01:54] *** Joins: gizmore (~kvirc@p5de3366e.dip0.t-ipconnect.de)
[05:02:06] <gizmore> window['this'] = window;
[05:02:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:04:16] <suss> i was stuck in this case (in React app) that after insert char in contenteditable div, the cursor moved to the start position automatically, how did it happen?
[05:05:34] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:18b3:ab56:6ddb:c942) (Quit: Textual IRC Client: www.textualapp.com)
[05:06:55] <gizmore> suss: it feels like some js is causing havoc and you have no idea where it comes from?
[05:07:39] <gizmore> brb
[05:09:51] <suss> i have set onSelect event, it wont come to happen when onSelect just return to do nothing, but with that i cant record the selection from dom selection
[05:10:01] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:10:31] <gizmore> try to master chrome devtools
[05:10:50] <gizmore> you can maybe inspect event handlers when putting a breakpoint
[05:11:05] <gizmore> in your own js, you can put "debugger;" and chrome will halt
[05:11:21] <gizmore> that's the best tip i learned recently
[05:11:42] <gizmore> can put chrome breakpoint with "debugger;" iirc
[05:12:01] <suss> it seems gonna help while i have no idea of it where to start yet
[05:12:41] <suss> try it later
[05:12:51] <gizmore> i actually suffer a problem like... some code removes a header
[05:13:00] <suss> what header
[05:13:04] <gizmore> i have no idea which plugin deletes this header
[05:13:07] <gizmore> some header
[05:13:15] <gizmore> laravel8+adminlte3
[05:13:37] <gizmore> bootstrap....4maybe?
[05:13:50] <suss> for linux? for web frontend?
[05:14:02] <gizmore> for inhouse applications
[05:14:24] <gizmore> webgedöns.,yes
[05:14:39] <gizmore> IIS + PHP5-8
[05:14:48] <gizmore> most apps still use php5
[05:14:57] <gizmore> my stack is php8 meanwhile?
[05:15:16] <gizmore> my own framework is out of league
[05:15:34] <gizmore> https://github.com/gizmore/gdo6
[05:15:40] <gizmore> gdo6 is awe
[05:16:03] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[05:16:26] <suss> you code it all by yourself ?
[05:16:40] <gizmore> gdo6?
[05:16:43] *** Quits: relms (~relms@user/relms) (Quit: Byeeee)
[05:17:03] <suss> ya maybe, idk what it used for
[05:17:18] <gizmore> https://tbs.wechall.net
[05:17:28] <gizmore> nice
[05:17:31] <gizmore> no worx
[05:17:46] <gizmore> stupid software and admins and bits
[05:17:52] <gizmore> bits are stupid
[05:18:37] <gizmore> https://github.com/gizmore/gdo6/blob/master/DOCS/GDO_MODULES.md#site-module
[05:18:43] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[05:18:43] <gizmore> this is demo sites
[05:19:13] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[05:19:14] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 252 seconds)
[05:19:45] <gizmore> great... tbs down...
[05:20:13] <gizmore> ranzgruppe also down
[05:20:36] * gizmore is a full stack failure
[05:22:00] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[05:22:29] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[05:23:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[05:24:33] *** Joins: src (~src@user/src)
[05:25:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:25:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:25:27] *** Joins: wroathe (~wroathe@user/wroathe)
[05:26:05] <gizmore> ok box5 ran out of diskspace ... geez
[05:26:26] <gizmore> window.console = $('<body>');
[05:27:30] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[05:28:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[05:28:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[05:41:24] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:41:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:46:12] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[05:46:44] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[05:46:46] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[05:47:05] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[05:49:15] *** Joins: mohab (~mohab@45.243.43.173)
[05:50:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:52:44] <mohab> So, say I sent a request to an external API and I want to do a number of things with the response. There has got to be a better way than cramming everything inside .then(), right?
[05:52:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:53:49] <EdFletcher> mohab: You could use await instead and avoid .then altogether, but no if it’s an async call then you’ll have to wait to get the response somehow
[05:58:45] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[06:02:09] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[06:04:24] <mohab> EdFletcher: That is exactly what I needed actually, thanks. I just wanted my code to look cleaner.
[06:06:15] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:06:24] *** Joins: vysn (~vysn@user/vysn)
[06:06:27] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:06:46] <gizmore> i will never get the await thingy :( ... i am good with promises tho
[06:07:21] <EdFletcher> mohab: awesome, very glad it helped!
[06:07:41] <EdFletcher> gizmore: you should try, it's worth it. also not complicated once you get the hang of it.
[06:08:35] <gizmore> javascript is the like the COBOL on your ABAP
[06:09:02] <gizmore> and await is like SE80
[06:09:26] <gizmore> a sane developer would run /dev/NOP now
[06:11:56] <ljharb> lol wtf are you talking about
[06:12:24] *** Joins: dea_ (~dea@31.210.96.68)
[06:13:17] <EdFletcher> haha was just going to ask the same thing
[06:13:34] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f)
[06:15:54] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[06:16:12] *** Quits: Guest3174 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[06:17:55] *** Joins: ferdna (~ferdna@user/ferdna)
[06:18:50] <gizmore> ljharb: did you know that /dev/zero is an infinite stream of zeroes?
[06:19:57] <gizmore> so /dev/NOP would be an infinitive stream of NOP instructions
[06:20:10] <gizmore> it's like mc'donalds for your cpu
[06:20:54] <systemfault> Not sure what kind of drugs you're taking... they keep the same pusher, his stock is top notch.
[06:21:02] <systemfault> *then
[06:21:30] <gizmore> 0x90 syn/ack
[06:22:52] <systemfault> Why don't you try dd'ing /dev/urandom to /dev/sda1 for the lulz?
[06:23:00] <gizmore> and now i want to mention companies that did not sponsor this evening, like nord vpn
[06:23:24] <tabakhase> blueagain well, i took the struggle-bus and build the thing in "echarts" instead (cause gitlab uses that already) --- and there is still sooome "to rotate the whole thing 90° to the right..." impossibility i may have to revisit later...., "2 failed jobs get displayed as one", and id like to "visualize the stages" somewhat cleaner - BUT: https://i.imgur.com/Z6h1Ajs.png dada =)
[06:25:12] <ljharb> gizmore: yes, i knew that. Why
[06:25:21] *** Joins: Guest6258 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net)
[06:25:26] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:25:52] *** Joins: thojanssens (~thojansse@49.230.77.46)
[06:25:59] *** Joins: gizmore|2 (~kvirc@p5de33562.dip0.t-ipconnect.de)
[06:28:47] *** Quits: gizmore (~kvirc@p5de3366e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:30:22] <systemfault> The guy reminds me of someone on our ban list...
[06:30:43] <systemfault> Maybe his long lost brother... separated at birth
[06:31:19] <KevinX> how many are on the ban list?
[06:32:05] <systemfault> 6
[06:32:26] <theskillwithin> theres multiple lists
[06:33:55] <theskillwithin> prob closer to 14
[06:33:56] <systemfault> Just looked at the server one
[06:34:04] <ljharb> there’s 9 akicks
[06:34:12] <ljharb> +b isn’t the important one :-)
[06:34:12] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[06:36:15] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f) (Ping timeout: 252 seconds)
[06:37:28] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[06:38:55] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[06:42:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:43:00] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[06:48:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[06:52:01] *** Joins: pmercado (~pmercado@186.107.58.34)
[06:59:49] *** Quits: kakashiAL (~kakashi@41.250.52.71) (Ping timeout: 240 seconds)
[07:00:14] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:00:19] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[07:06:45] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:07:14] *** Joins: Rockwood (~Rocky@user/rocky)
[07:07:56] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[07:11:49] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:12:12] *** Quits: gizmore|2 (~kvirc@p5de33562.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:15:37] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[07:17:06] <thojanssens> how would you name a function that only keeps certain props of an object?
[07:17:19] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[07:17:21] <Decker> filter
[07:17:38] <thojanssens> filterProps ?
[07:17:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[07:17:50] <Decker> clean
[07:18:05] *** Quits: Guest6258 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:19:35] <Rockwood> o/
[07:20:21] *** Quits: dea_ (~dea@31.210.96.68) (Ping timeout: 256 seconds)
[07:23:05] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:24:20] *** Joins: k8yun (~k8yun@user/k8yun)
[07:24:48] <thojanssens> Decker, ty good naming!
[07:32:31] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[07:32:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:32:51] *** Joins: Guest9493 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net)
[07:37:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:40:37] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:43:55] *** Joins: pulse (~pulse@user/pulse)
[07:48:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:49:28] <ljharb> thojanssens: objects don't have props, react components do
[07:49:37] <ljharb> thojanssens: it's the full "properties" if it's just an object
[07:50:12] <thojanssens> ljharb, isn't prop an abbreviation for property?
[07:50:51] <Rockwood> yes it is
[07:51:11] <ljharb> thojanssens: i mean kind of, but that abbreviation was never really used before react, and colloquially that's what it refers to
[07:51:33] <ljharb> thojanssens: i'm just saying if you want your function to have a clear name, name it `filterProperties`.
[07:53:15] <thojanssens> ty indeed I agree
[07:53:34] *** Quits: mohab (~mohab@45.243.43.173) (Remote host closed the connection)
[07:54:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[07:56:43] <Rockwood> isn't faster real dom comparatively Virtual Dom?
[08:00:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[08:04:55] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Ping timeout: 240 seconds)
[08:05:16] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:05:30] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:09:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:09:05] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:12:04] <KevinX> I think props was used in jQuery days
[08:12:51] <Rockwood> Jquery really good for everyone
[08:12:53] <ljharb> KevinX: i mean, there was $.prop, but that deals with DOM properties, and not object properties, which i'd bet is why react chose that name
[08:13:00] <KevinX> I remember not understanding the difference between props and attributes. Kinda funny now thinking back to that time
[08:13:17] <KevinX> yeah true
[08:16:18] *** Joins: shokohsc0 (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[08:16:54] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[08:16:54] *** shokohsc0 is now known as shokohsc
[08:19:31] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[08:20:01] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[08:20:23] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:21:01] *** Quits: src (~src@user/src) (Quit: leaving)
[08:21:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:24:57] *** Quits: thojanssens (~thojansse@49.230.77.46) (Ping timeout: 256 seconds)
[08:25:56] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:27:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[08:28:12] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[08:34:35] *** Quits: Guest9493 (~blahboyba@c-67-161-96-190.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[08:35:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[08:38:05] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f)
[08:41:13] *** Joins: Guest7050 (~blahboyba@c-67-161-96-20.hsd1.wa.comcast.net)
[08:42:23] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[08:46:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[08:47:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:47:39] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:50:01] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[08:53:28] *** Joins: crashrep (~crashrep@user/crashrep)
[08:53:41] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[08:57:28] *** Joins: l__q (~modinfo@user/modinfo)
[08:57:58] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[08:58:43] *** Joins: crashrep (~crashrep@user/crashrep)
[09:00:35] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[09:03:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:06:52] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f) (Ping timeout: 268 seconds)
[09:12:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[09:23:12] <l__q> is there a alternative to codesandbox but for tui's?
[09:24:37] <theskillwithin> whats a tui?
[09:24:47] <theskillwithin> !fiddle
[09:24:47] <jellobot> theskillwithin, Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: runkit.com, gist.github.com. See also !mcve and !paste
[09:27:08] <l__q> theskillwithin: terminal user interface, i build in react-blessed a TUI and i want to share like on codesandbox, but csb works only with webpages
[09:27:41] <l__q> all the alternatives what this bot shared are only for webpages
[09:27:51] <l__q> i search for alternative for tui
[09:28:03] <buu> uh
[09:28:21] <buu> That's a good question
[09:29:16] <buu> https://hackernoon.com/codesandbox-containers-5864a8f26715
[09:29:20] <buu> dunno
[09:29:28] <l__q> this is a nice freamwork, but i have problem with lists and i want to share my code to show my problem, on live env https://github.com/Yomguithereal/react-blessed/
[09:30:02] *** Quits: Brewster (~Brewster@user/brewster) (Remote host closed the connection)
[09:30:35] <l__q> im try `ink` to, but im have the same problem like on blessed, here my code: https://github.com/vadimdemedes/ink/discussions/508
[09:30:53] *** Joins: Brewster (~Brewster@us.8bitshort.com)
[09:31:40] <l__q> comands "XXX" are pseudocode
[09:32:11] <ljharb> lol what, a "TUI"? that's not a thing
[09:32:19] <ljharb> it's either a CLI or a GUI
[09:32:28] <ljharb> using react on the cli doesn't make it "not a cli"
[09:32:29] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:32:51] <l__q> ljharb: no, CLI is a command program without interface
[09:33:07] <l__q> GUI is grapfhic program thats run on desktop
[09:33:22] <l__q> eg. ncdu is a TUI
[09:33:31] <l__q> curl is CLI
[09:33:35] <l__q> firefox is GUI
[09:33:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[09:35:48] <ThePendulum> ngl it makes sense
[09:40:25] <l__q> hmm, im asked on hn https://news.ycombinator.com/item?id=30775186
[09:41:35] <theskillwithin> l__q the fiddle command jellobot says gives lots of alternatives to codesandbox?
[09:41:42] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[09:41:54] <l__q> but only for webpages
[09:43:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:44:40] <theskillwithin> some of them work for just node too
[09:46:31] <ljharb> l__q: the entire CLI is the interface. that's what the 'i' is for
[09:46:35] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:46:37] <ljharb> l__q: there is no such thing as a TUI, that's a term you made up
[09:46:54] <ljharb> a CLI can be interactive or not, it's still a CLI. there's just two categories.
[09:47:49] <EdFletcher> i think "TUI" is what the kids calls curses-based interfaces these days
[09:48:23] <EdFletcher> (definitely a guess though, i'm probably a decade past knowing what the kids call anything at this point... just inferring from other contexts in which i've seen it recently)
[09:48:39] *** monoxane8 is now known as monoxane
[09:48:40] <l__q> command line interface (CLI); text-based interface (TUI)
[09:48:56] <EdFletcher> would "text-based interface" be "TBI"?
[09:48:59] <EdFletcher> *wouldn't
[09:49:11] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[09:49:17] <l__q> google: tui
[09:49:23] <suss> os is kindda of interface idk what to call it
[09:49:41] <l__q> hmm, im try runkit now
[09:49:50] *** Quits: pmercado (~pmercado@186.107.58.34) (Ping timeout: 252 seconds)
[09:49:58] <ljharb> that's a dumb name, it doesnt need its own thing
[09:50:06] <ljharb> l__q: all command line interfaces are text-based
[09:50:13] <ljharb> literally all of them. that's the "command line" part.
[09:50:16] <EdFletcher> yeah i've always seen it as "terminal user interfaces" but i guess "text-based user interfaces" works too
[09:50:29] <ljharb> "terminal" and "command line" are synonyms
[09:50:41] <ljharb> people just really want to make their thing sound more special than it is
[09:50:43] <EdFletcher> but anyway, in all contexts i've seen it used they've been referring to curses-based interfaces
[09:50:53] <l__q> ok
[09:51:00] <ljharb> i've seen plenty similar interfaces that don't use curses or react. it's not a new concept.
[09:51:01] <suss> runkit has bugs with importing immutablejs where error throwed up without obj.toJS()
[09:51:04] <ljharb> it's just a fancier CLI.
[09:51:07] <EdFletcher> so _maybe_ there is a real differentiation? i still agree it's a dumb term. just call them all CLIs, because they are.
[09:51:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:51:12] <ljharb> nah
[09:51:22] <EdFletcher> ah yeah i guess i just haven't seen it referred to enough
[09:51:25] <EdFletcher> damn, i held out hope
[09:51:32] <ljharb> i'm the champion of "transpiling is a distinct subset of compiling", but "TUI" is dumb and shouldn't exist
[09:51:39] <EdFletcher> lol
[09:51:56] <EdFletcher> solid comparison
[09:52:53] <l__q> ljharb: with TUI interfaces you can use mouse as well, with cli you can only parse parameters, like on curl, ncdu can use arrow keys to navigate throw menu
[09:52:56] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[09:53:24] <l__q> nice example is bbj to explaint TUI
[09:53:41] <l__q> https://github.com/bbj-dev/bbj
[09:54:02] <l__q> forum in terminal
[09:54:37] <EdFletcher> but_why.gif
[09:54:40] <l__q> blessed also supportmouse click on interface
[09:54:48] <EdFletcher> if you want to use a mouse, there's already a UX paradigm for that...
[09:55:08] <l__q> that only a example of possibilitys
[09:55:10] <theskillwithin> does this even circle back to JS somehow?
[09:55:27] <EdFletcher> very vaguely at best
[09:56:10] <EdFletcher> l__q: my point is that when i'm working on the CLI, i generally want to stay away from the mouse as the entire paradigm is driven around the keyboard. it seems like a usability regression, honestly.
[09:56:34] <l__q> yeah, me too
[09:56:48] <EdFletcher> there are entire window managers for linux built around avoiding the mouse entirely, and in the same vein they're awful to use. because they're trying to shoehorn one paradigm into another.
[09:57:11] <EdFletcher> anyway sorry theskillwithin, really off in the weeds now! rant done.
[09:58:37] <theskillwithin> EdFletcher your fine, i like the weeds
[09:59:12] <EdFletcher> theskillwithin: Haha same, glad to hear it!
[10:00:01] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5) (Remote host closed the connection)
[10:00:43] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5)
[10:02:17] *** Quits: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 240 seconds)
[10:03:16] *** Joins: Rockwood (~Rocky@user/rocky)
[10:03:29] <buu> ratpoison best window manager #2005
[10:05:15] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:05:49] <EdFletcher> lol indeed ratpoison was the (main) one i was thinking of 😆
[10:06:18] <ljharb> l__q: you can use the mouse on every CLI interface whatsoever
[10:06:23] <ljharb> l__q: TUI isn't a thing.
[10:06:35] <ljharb> l__q: and you could use the mouse, and arrow keys, etc, LONG before react ever existed.
[10:07:07] <l__q> thats true with curses, or fork ncurses
[10:07:18] <ljharb> it was true 20 years ago. none of it is new.
[10:07:21] <systemfault> You've been able to use the mouse in vim since.. it's been so long that I can't remember.
[10:07:31] <l__q> blessed is bassed on ncursed
[10:07:55] <ljharb> it's all CLI.
[10:07:57] <l__q> but blessed is js
[10:08:08] <ljharb> things made with blessed are still CLI programs.
[10:08:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:08:56] *** Joins: han-solo (~han-solo@user/han-solo)
[10:12:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:14:19] <l__q> hmm, if my list would correctly display items from array of objects, then my program would be ready, the most interesting thing is that in react-blessed the selected item returns the wrong id
[10:14:33] <l__q> and I don't know how to fix it
[10:15:28] <l__q> onSelect={(e) => {setSelected(e.index);} <= returns not existed id sometimes too
[10:17:14] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[10:17:33] <Maxdamantus> vim has mouse behaviour that always seems annoying to me, so I add `set mouse=` to vimrc on systems that have it enabled.
[10:18:05] <systemfault> Same... but "it's there"
[10:19:48] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[10:22:04] *** Joins: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[10:23:13] <han-solo> oh yeah, it's annoying
[10:29:03] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 256 seconds)
[10:32:21] *** Joins: gulzar (~gulzar@49.206.240.149)
[10:33:27] *** Joins: oakl11f (~a09q1as@2a02:587:3f37:6c00:807f:a760:1362:9520)
[10:33:35] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[10:34:29] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[10:36:43] <l__q> hmm, i have stupid idea to make it work, i will use react-blessed with ink, this should fix my issues
[10:36:57] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 240 seconds)
[10:37:07] *** chowmein__ is now known as chowmeined
[10:38:30] <l__q> the only problem, if i create a binary file with 'nexe' then will be ~200mb for a simple CLI program
[10:39:05] <l__q> i need to learn c++, but javascript is so nice
[10:40:35] *** Quits: l__q (~modinfo@user/modinfo) (Quit: brb, I'm going shopping)
[10:43:05] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[10:43:15] <pulse> C++ is nicer :p
[10:43:18] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[10:43:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:45:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Quit: leaving)
[10:45:37] *** Quits: oakl11f (~a09q1as@2a02:587:3f37:6c00:807f:a760:1362:9520) (Quit: Leaving)
[10:45:52] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: Lost terminal)
[10:46:23] *** Quits: stagas (~stagas@2a02:587:c4b1:6a04:53aa:8d8a:dd18:cc01) (Ping timeout: 256 seconds)
[10:48:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:48:53] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:da04:4b12:6c16:29ba)
[10:49:37] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[10:49:37] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[10:49:37] *** Joins: average (~average@user/average)
[10:51:32] <EdFletcher> lies!
[10:54:07] *** Joins: han-solo (~han-solo@user/han-solo)
[10:54:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:55:38] <systemfault> The C++ equivalent is going to take 2-3 times as much time to write... and will very likely be more buggy the first few releases
[10:56:32] *** Joins: audio (~audio@user/audio)
[10:57:27] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[10:57:56] <systemfault> I'm not saying that out of hatred for C++... C++ has been my first love, but writing solid code using C++ takes time.
[10:59:05] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[11:00:54] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[11:02:53] *** Joins: wand (~user@gateway/tor-sasl/wand)
[11:03:18] <theskillwithin> idk c++ but it sounds very positive
[11:03:58] <systemfault> Probably more than C--
[11:05:34] <mrdata> probably
[11:07:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Quit: Lost terminal)
[11:07:36] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[11:08:33] *** Joins: vysn (~vysn@user/vysn)
[11:09:18] <dave0> my brain is too small to fit c++ in it
[11:10:47] <pulse> the more you learn the greater your capacity
[11:11:03] <pulse> c++ is a great language, provided you work with your own code
[11:11:56] <mrdata> it's also a dangerous language
[11:12:19] <mrdata> beginners shoot themselves in the foot; intermediates shoot the entirr project in the foot
[11:12:50] <pulse> JS is dangerous too
[11:13:20] <pulse> i mean it's so flimsy at times you have to wrap it with layers of duct tape
[11:13:43] <pulse> in general, i think i like any language provided i get to write the code :D
[11:14:39] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[11:15:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:16:02] *** Joins: l__q (~modinfo@user/modinfo)
[11:17:51] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 252 seconds)
[11:18:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:19:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:19:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:21:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:22:19] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:22:34] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[11:23:02] *** Joins: thojanssens (~thojansse@49.230.77.46)
[11:25:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:25:23] *** Joins: dimi1947 (~dimi1947@46-108-90.adsl.cyta.gr)
[11:27:30] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[11:29:05] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5) (Remote host closed the connection)
[11:29:24] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:29:25] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5)
[11:30:49] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 256 seconds)
[11:31:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:35:44] <theskillwithin> RIP GreenJello https://git.io/J2m1C
[11:37:48] <pulse> :(
[11:39:02] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:39:19] *** Quits: Decker (~d3x0r@user/d3x0r) (Ping timeout: 256 seconds)
[11:39:29] <systemfault> He was the best jello
[11:41:26] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:42:02] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[11:45:08] <theskillwithin> systemfault ints kind of incredible, as soon as i think, ok we got all the comments in prob from having it in topic.  more come in
[11:47:08] <Donitz> what libarry would you use for doing arbitrary math in js
[11:47:14] <Donitz> such as vector and matrix mayth
[11:47:15] <Donitz> math*
[11:48:32] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[11:51:05] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Client Quit)
[11:51:19] *** Joins: plitter (~plitter@192.108.100.200)
[11:51:19] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[11:51:19] *** Joins: plitter (~plitter@user/plitter)
[11:55:44] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:59:57] <ThePendulum> if you made a library for it, what would you name it ml
[12:00:00] <ThePendulum> *?
[12:00:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[12:00:52] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[12:05:05] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:7f63:bd57:a0b4:7bb5) (Ping timeout: 268 seconds)
[12:05:41] *** Quits: remote (~self@user/hackers) (Ping timeout: 252 seconds)
[12:06:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:94ac:9102:da39:4ffe)
[12:07:20] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[12:09:24] <Maxdamantus> Maybe "glMatrix" would be a good name.
[12:10:17] <Maxdamantus> https://github.com/toji/gl-matrix/tree/master/src
[12:12:33] *** Joins: remote (~self@user/hackers)
[12:22:12] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:22:52] *** Joins: Duikb00t (~wardkenne@d54c71612.static.telenet.be)
[12:23:13] *** Quits: Guest7050 (~blahboyba@c-67-161-96-20.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:26:17] *** Quits: Anonamy (~Anonamy@node-1w7jr9qu7prr9kps3ciz4iqdz.ipv6.telus.net) (Remote host closed the connection)
[12:38:05] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:38:29] *** Joins: VoidSync (~sync@user/voidsync)
[12:46:01] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:52:23] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:55:05] *** Joins: stenno (~stenno@user/stenno)
[12:55:05] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:58:03] *** Joins: kakashiAL (~kakashi@102.53.13.200)
[12:58:14] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[12:58:28] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[13:00:27] *** Joins: average_ (uid473595@hampstead.irccloud.com)
[13:03:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f)
[13:03:58] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:04:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:94ac:9102:da39:4ffe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:06:00] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f91d:204d:f24c:a043)
[13:06:42] *** Joins: pulse (~pulse@user/pulse)
[13:08:13] *** Quits: kakashiAL (~kakashi@102.53.13.200) (Ping timeout: 240 seconds)
[13:08:38] *** Joins: shkurata (~shkurata@ptr-8riebuibdk9bv2ymb1c.18120a2.ip6.access.telenet.be)
[13:14:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:16:06] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f91d:204d:f24c:a043) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:20:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:26:55] *** Joins: trafficjam (~trafficja@203.176.111.34)
[13:27:12] <trafficjam> how do i pass 2 components to a next.js layout?
[13:27:37] <trafficjam> specifically to the `Page.getLayout = function getLayout(page) { ... }` function
[13:28:55] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[13:29:04] *** Joins: rendar (~rendar@user/rendar)
[13:31:06] *** Parts: trafficjam (~trafficja@203.176.111.34) ()
[13:33:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:36:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:37:35] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:4162:a81a:1dcb:ac9f) (Ping timeout: 268 seconds)
[13:37:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[13:40:11] <deltab> as an array or object?
[13:41:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:42:34] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[13:42:47] *** Joins: wand (~user@gateway/tor-sasl/wand)
[13:46:55] *** Quits: devslash (~devslash@46.232.211.210) (Quit: ZNC 1.8.2 - https://znc.in)
[13:47:07] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:47:30] *** Joins: devslash (~devslash@46.232.211.210)
[13:51:26] *** Joins: adroitmachine (~adroitmac@171.50.208.74)
[13:52:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:56:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:57:49] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[13:58:26] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[14:01:48] *** Joins: shuck (~shuck@user/shuck)
[14:03:59] *** Joins: suss` (~user@user/suss)
[14:04:23] *** Quits: suss` (~user@user/suss) (Remote host closed the connection)
[14:04:44] *** Joins: suss` (~user@user/suss)
[14:05:36] *** Quits: suss (~user@user/suss) (Ping timeout: 252 seconds)
[14:06:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[14:07:13] *** Joins: llorllale (~llorllale@198.98.119.85)
[14:07:41] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:08:54] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[14:09:59] *** Joins: earthToAdam (~user@84.9.160.201)
[14:10:31] <earthToAdam> How can I declare an object as const without also initializing it?
[14:10:50] *** Joins: pulse (~pulse@user/pulse)
[14:11:03] <Cork> uh, you can't?
[14:11:20] <han-solo> i don't think you can
[14:11:27] <han-solo> and which will also make it non constany ? :D
[14:11:30] <Cork> something can't be a const without existing
[14:11:31] <han-solo> constanty*
[14:11:41] <earthToAdam> Hmm...
[14:12:22] <Cork> its like defining a value without it existing
[14:12:25] <earthToAdam> Let me share some code: http://ix.io/3Tfo/javascript
[14:14:05] <earthToAdam> Basically, I want to declare the rellax variable with a scope that makes it available to onMounted() (which initializes it) and onUnMounted() which destroys it. How can I do this with const instead of var?
[14:14:35] *** Quits: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 256 seconds)
[14:14:53] <earthToAdam> If it helps, this is from a Vue.js app, using the Composition API...
[14:14:54] <Cork> you can't
[14:15:20] <Cork> cause if mount and umount can't modify it they can't create it
[14:15:57] <Cork> well specifically onMounted can't create it if it can't modify it
[14:15:58] <earthToAdam> Okay, so how about declaring within onMounted(). But somehow expanding the scope to also make it available to onUnMounted?
[14:16:14] <Cork> you can't expand a scope
[14:17:00] <Cork> you can freeze it though
[14:17:11] <earthToAdam> ?
[14:17:15] <Cork> Object.freeze might be what your looking for
[14:18:53] <earthToAdam> So declar with var outside both functions and then freeze it from within onMounted()?
[14:19:15] <Cork> ya, it can still be replaced though
[14:19:54] <Cork> ify ou want to prevent access from outside the mount to replace it you will have to prevent the access, but using a getter
[14:20:08] <Cork> if you*
[14:20:39] <Cork> uh i meant prevent modification by using a getter
[14:20:56] <earthToAdam> hmm... is it possible to declare with var outside and then convert to const from within onMounted?
[14:21:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[14:21:08] <Cork> no
[14:22:19] <earthToAdam> Cork okay, let's try this another way. How would you go about declaring an immutable variable with scope available to both functions, that gets initialized when the app is mounted?
[14:22:34] <earthToAdam> Am I missing something obvious?
[14:23:44] <Cork> function rellax() { return _rellax; }
[14:23:57] <earthToAdam> I know I can use const rellax = Object(); and then work with rellax.value from within both functions. But... value is now mutable, so what's the point?
[14:24:17] <Cork> meaning use a function to pass the object
[14:24:31] *** Joins: Anonamy (~Anonamy@node-1w7jr9qu7prr9kps3ciz4iqdz.ipv6.telus.net)
[14:24:34] <earthToAdam> Cork okay... so pass the value between each function as a parameter...
[14:24:44] <Cork> well no
[14:24:53] <Cork> make the access to it a function
[14:25:16] <Cork> that way the actual name isn't modifyable
[14:25:43] <Cork> you would still have to freeze the value if you don't have it to be modifyable
[14:25:57] <earthToAdam> What does the "_" in _rellax do?
[14:26:18] <Cork> the none publically avaliable value your backing it with
[14:26:57] <han-solo> isn't getter like `get relax() { .. }` though ?
[14:28:05] *** Joins: Everything (~Everythin@37.115.210.35)
[14:28:52] *** Joins: stenno (~stenno@user/stenno)
[14:29:45] <earthToAdam> Cork han-solo thanks. Will have to wrap my head around this one...
[14:31:15] *** Quits: adroitmachine (~adroitmac@171.50.208.74) (Ping timeout: 250 seconds)
[14:32:47] <earthToAdam> Hmm... this seems to work http://ix.io/3Tfp
[14:33:08] <earthToAdam> But does seem like a lot of work just to init a const...
[14:33:40] <earthToAdam> Well, maybe not that much "work"
[14:35:33] <earthToAdam> Vue.js has another way to do this with "const rellax = ref(null)" and later working with rellax.value. But... I just don't see the point of working with const if ultimately, rellax.value is mutable once initialized? What am I missing here?
[14:35:57] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:40:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[14:43:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:45:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:46:23] *** Parts: earthToAdam (~user@84.9.160.201) (ERC (IRC client for Emacs 27.2))
[14:47:29] *** Joins: cobwebs (~cobwebs@2600:1700:9296:8090:588d:acfd:9a3b:b8ed)
[14:49:22] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[14:50:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[14:51:22] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[14:53:07] *** Joins: lamein (~lamein@user/lamein)
[14:56:45] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 252 seconds)
[14:59:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:01:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:01:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:04:54] *** Joins: lapsi (~lapsi@85.14.25.194)
[15:08:12] *** Joins: Decker (~d3x0r@user/d3x0r)
[15:09:09] *** Quits: average_ (uid473595@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:24] *** Joins: type (~type@130.226.236.6)
[15:11:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:14:54] <type> Hi. I'm trying to integrate a JS script to my ReactJS project (set up with create-react-app), but when importing it, I get some strange errors (https://pastebin.com/Hu8HFVdX). This JS script runs just fine when executed with node. How can I fix this?
[15:15:52] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[15:17:10] *** Joins: l__q (~modinfo@user/modinfo)
[15:21:20] <stenno> those seem to be linting errors
[15:22:50] <stenno> TypeError: /Projects/myProject/src/myScript.js: Line must be greater than or equal to 1, got 0
[15:22:59] <stenno> is that a test assertion failing?
[15:23:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:25:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[15:26:19] *** Joins: sa0 (~sa0sin@88.120.82.205)
[15:27:06] <type> stenno: thanks for the reply. Not really. The thing is, it doesn't make sense to debug this script because it is generated from some bytecode. I can execute it just fine with node, but when integrating to my project, apparently webpack and/or babel fail to process it properly.
[15:27:23] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 250 seconds)
[15:28:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:28:41] <type> I tried avoiding the script to be transpiled, but unfortunately the error still persists.
[15:29:02] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[15:29:12] *** Quits: thojanssens (~thojansse@49.230.77.46) (Ping timeout: 252 seconds)
[15:30:24] *** Joins: nomic (~nomic@185.217.117.249)
[15:30:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:31:24] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 252 seconds)
[15:31:26] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:31:35] *** Joins: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch)
[15:32:02] *** Joins: dionysus70 (~Thunderbi@185.115.7.53)
[15:33:43] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[15:33:44] *** dionysus70 is now known as dionysus69
[15:34:59] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:37:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:40:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[15:40:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:40:50] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[15:41:15] *** Quits: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch) (Quit: Textual IRC Client: www.textualapp.com)
[15:42:28] *** Joins: llorllale (~llorllale@198.98.119.85)
[15:42:33] *** Joins: D4mned (~D1mned@212.101.251.141)
[15:46:34] *** Joins: chao (~stenno@user/stenno)
[15:47:37] *** Quits: type (~type@130.226.236.6) (Ping timeout: 240 seconds)
[15:47:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[15:50:11] *** Quits: dionysus69 (~Thunderbi@185.115.7.53) (Read error: Connection reset by peer)
[15:50:16] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[15:50:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:50:52] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[15:51:41] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:51:46] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Client Quit)
[15:52:48] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[15:54:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:57:19] *** Joins: type (~type@2a02:aa7:4008:4294:8d5b:d1fe:3382:b920)
[15:59:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:03:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:03:48] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[16:04:29] *** Quits: type (~type@2a02:aa7:4008:4294:8d5b:d1fe:3382:b920) ()
[16:04:31] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 245 seconds)
[16:05:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:09:42] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:12:17] *** Joins: otisolsen70_ (~otisolsen@sas08110.nat.sas.com)
[16:12:28] *** Joins: voltage_ (voltage@user/voltage)
[16:13:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[16:14:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[16:17:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:17:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:19:48] *** Joins: kakashiAL (~kakashi@41.141.70.104)
[16:22:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:24:07] *** Quits: kakashiAL (~kakashi@41.141.70.104) (Ping timeout: 260 seconds)
[16:25:24] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 240 seconds)
[16:25:37] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:26:40] *** Joins: tccki (~tccki@box.webslate.co.nz)
[16:27:51] *** Joins: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:27:51] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:28:34] *** Joins: chao (~stenno@user/stenno)
[16:34:02] *** Quits: otisolsen70_ (~otisolsen@sas08110.nat.sas.com) (Quit: Leaving)
[16:34:17] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 240 seconds)
[16:34:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:35:33] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[16:37:39] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 268 seconds)
[16:37:39] *** tccki_ is now known as tccki
[16:39:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[16:39:24] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[16:39:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:40:52] <austincheney> it looks like some weird evaluation error trying to minify the code
[16:41:14] *** Joins: wyclif (~wyclif@user/wyclif)
[16:41:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:44:26] *** Joins: pmercado (~pmercado@186.107.58.34)
[16:44:46] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 260 seconds)
[16:47:48] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:da04:4b12:6c16:29ba) (Ping timeout: 240 seconds)
[16:50:30] *** Joins: Rockwood (~Rocky@user/rocky)
[16:58:17] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: Client closed)
[17:00:05] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[17:00:13] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:04:03] *** Joins: cotko (~cotko@89-212-138-82.static.t-2.net)
[17:07:38] *** Joins: han-solo (~han-solo@user/han-solo)
[17:20:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:24:24] *** Joins: Rift (~x00@user/Rift)
[17:27:49] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:28:04] *** Parts: Rift (~x00@user/Rift) ()
[17:35:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:36:54] *** Joins: kakashiAL (~kakashi@41.143.7.80)
[17:41:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[17:42:49] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[17:43:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:44:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:49:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:49:18] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:55:25] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:55:51] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:55:58] *** Joins: alioui (~medeva293@197.244.100.90)
[17:58:23] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 260 seconds)
[17:59:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d5c4:f026:e451:bdeb) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:59:55] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[18:01:47] *** Quits: dimi1947 (~dimi1947@46-108-90.adsl.cyta.gr) (Quit: Leaving)
[18:03:43] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:04:18] *** Joins: gopar (~gopar@2600:8804:670d:2f00:14ac:487e:e822:ba6e)
[18:08:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:12:34] *** Joins: fillx (~fillx@185.103.110.235)
[18:13:08] *** Parts: fillx (~fillx@185.103.110.235) (Leaving)
[18:13:12] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:50] *** Joins: fillx (~fillx@user/fillx)
[18:18:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:18:16] *** Quits: gopar (~gopar@2600:8804:670d:2f00:14ac:487e:e822:ba6e) ()
[18:18:28] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[18:18:48] *** Joins: wyclif (~wyclif@user/wyclif)
[18:18:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:20:34] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[18:22:09] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:22:39] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[18:23:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[18:23:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:24:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:25:00] *** Quits: fillx (~fillx@user/fillx) (Quit: Leaving)
[18:27:16] <maret> Whats easier way to write this https://bit.ly/3IsibaU I need to reduce the items based on name property (replace null for Unknown) and sum up value and amount
[18:27:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:27:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:27:22] *** Joins: wroathe (~wroathe@user/wroathe)
[18:31:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:33:03] *** Quits: robyn (~robyn@user/robyndrake) (Quit: WeeChat 2.8)
[18:35:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:36:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:36:45] *** Joins: methbkts (~methbkts@82.138.90.40)
[18:38:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:38:31] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:38:36] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:40:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[18:41:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[18:42:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:43:14] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[18:45:00] *** Quits: w0ng (~w0ng@185.218.127.24) (Ping timeout: 260 seconds)
[18:45:13] *** Joins: banana__ (~banana_@cpe-65-29-160-189.wi.res.rr.com)
[18:46:01] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[18:49:13] *** Quits: banana__ (~banana_@cpe-65-29-160-189.wi.res.rr.com) (Client Quit)
[18:49:52] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:50:29] *** Joins: k8yun (~k8yun@user/k8yun)
[18:52:28] *** Joins: w0ng (~w0ng@185.218.127.23)
[18:54:06] <jwpapi> What exactly is the difference between an array and an object. An array can have named keys as well or?
[18:54:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:54:40] *** Joins: nsyd (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[18:59:38] *** Joins: robyn (~robyn@user/robyndrake)
[18:59:42] <banana_> hey anyone notice that mdn doesn't note when an attribute is obsolete just deprecated
[18:59:52] <banana_> html attribute
[19:00:52] <banana_> so I guess it's a term lesson https://wikidiff.com/obsolete/deprecated
[19:01:34] <banana_> "in disuse" vs. "please don't use"
[19:14:50] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:e602:7d0b:29:b457)
[19:17:31] *** Joins: [twisti] (~twisti@toadwater.com)
[19:19:32] <[twisti]> hi, im trying to figure out what im doing wrong with my dictionary. i have a dict that i declare like `export const FooConstants = { 'foo': 'bar' };. later, i try to use it like `import { FooConstants } from 'FooConstantFile.js'; ... fizz = 'foo'; something = FooConstants[fizz];` but something ends up 'undefined'. what am i doing wrong ?
[19:21:49] *** Joins: dea_ (~dea@31.210.96.68)
[19:22:06] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[19:22:30] *** Joins: k8yun (~k8yun@user/k8yun)
[19:23:49] <[twisti]> oh, disregard me, my fizz didnt contain what i though it did
[19:25:14] *** Joins: voltage (voltage@user/voltage)
[19:27:53] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:28:55] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 260 seconds)
[19:29:29] *** Joins: tester12 (~tester12@5.120.78.109)
[19:29:42] <tester12> hi freinds
[19:30:00] <tester12> I have this javascript code in main page
[19:31:32] <tester12>     var tk_err="2b3848d7993z3xjn";
[19:31:33] <tester12>     function tk_chk() {
[19:31:33] <tester12>         if(tkml_err!=='no_err')
[19:31:34] <tester12>         {
[19:31:34] <tester12>             alert("has error, contact us"+"\n tk_err= "+tk_err)
[19:31:35] <tester12>             return false;
[19:31:35] <tester12>         }
[19:31:36] <tester12>     }
[19:33:35] <tester12> and a little down of this function a number that typed by user check in DB and if exist return a warning in div with a button like this
[19:33:57] *** Quits: D4mned (~D1mned@212.101.251.141) (Ping timeout: 250 seconds)
[19:34:04] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[19:35:16] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:36:05] <tester12> <button onclick="tk_chk()" class="lvl_btn_sub">Continue</button> and if tk_err has string except "no_err" value show alert and return false
[19:36:13] *** Quits: CiaoSen (~Jura@p200300c95735b0002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:36:48] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[19:36:49] <tester12> but after click "OK" button of alert, the page get refresh
[19:37:00] <tester12> who can help me to know why?
[19:37:25] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[19:37:25] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[19:40:22] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:41:23] *** Joins: k8yun_ (~k8yun@user/k8yun)
[19:42:47] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[19:42:49] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:44:57] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[19:45:30] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 252 seconds)
[19:45:47] <since_> tester12: look at the context of <button>
[19:46:02] <since_> is it child of a <form>
[19:46:20] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[19:46:24] <since_> ?
[19:47:07] <tester12> since_ yes, this button created after ajax checking,
[19:47:26] *** Joins: nomic (~nomic@185.217.117.249)
[19:47:30] <tester12> yes this button is child of a form
[19:47:49] <tester12> so how can I prevent it to refresh?
[19:48:30] <since_> tester12: what arguments does the <form> have?
[19:49:31] <tester12> except this button has two buttons with button tag to submit manually
[19:49:42] *** Joins: D4mned (~D1mned@212.101.251.141)
[19:50:03] *** Quits: cotko (~cotko@89-212-138-82.static.t-2.net) (Ping timeout: 256 seconds)
[19:50:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:51:02] <tester12> since_  do you mean childs or attributes of form?
[19:52:51] <tester12> childs some input text like name,family,phone number and gender, and two buttons, Continue and Edit
[19:56:25] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: Visit me at: gopher://gcpp.world)
[19:57:03] *** Joins: calcmandan (~quassel@user/calcmandan)
[19:58:15] <tester12> since_  R u here?
[19:58:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[19:59:39] <since_> tester12: you are missing out something,  a fucntion returning false wont refresh the page
[19:59:45] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[20:01:53] *** Parts: [twisti] (~twisti@toadwater.com) ()
[20:03:32] *** Joins: syco (~mike@user/syco)
[20:03:37] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (Ping timeout: 240 seconds)
[20:03:38] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[20:07:29] <tester12> since_ yes youre right, But I couldnt find the problem and just add "return" before tk_chk() in onclick attribute of button and solved now
[20:07:42] *** Joins: vysn (~vysn@user/vysn)
[20:08:00] <tester12> but how can I find the main issue??
[20:08:39] <tester12> I couldnt find any extra running codes with debugging in chrome
[20:08:43] <tester12> browser
[20:08:52] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:11:10] *** Joins: D3mned (~D1mned@212.101.251.141)
[20:11:23] *** Quits: D4mned (~D1mned@212.101.251.141) (Ping timeout: 260 seconds)
[20:12:57] *** Parts: alioui (~medeva293@197.244.100.90) ()
[20:14:24] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[20:17:45] *** Joins: zebrag (~chris@user/zebrag)
[20:18:28] *** Quits: dea_ (~dea@31.210.96.68) (Remote host closed the connection)
[20:18:38] *** Joins: dea_ (~dea@31.210.96.68)
[20:18:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:20:28] <jwpapi> How do I make this non-mutating? or more concise? https://www.irccloud.com/pastebin/0NduSkio/
[20:21:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:22:44] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[20:22:50] *** Joins: kill (~killown@user/killown)
[20:24:16] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:24:53] <han-solo> `data.map(item => ({ [item.id]: item }))` // ?
[20:25:30] <han-solo> welp, nope
[20:26:21] <tabakhase> reduce?
[20:26:44] <han-solo> yeah, maybe reduce, but then it won't be as concise
[20:29:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:30:07] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[20:30:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:30:20] *** Quits: dea_ (~dea@31.210.96.68) (Read error: Connection reset by peer)
[20:30:33] *** Joins: zstix (~zstix@4.15.128.42)
[20:30:39] *** Joins: dea_ (~dea@31.210.96.68)
[20:32:39] *** Quits: D3mned (~D1mned@212.101.251.141) (Quit: Leaving)
[20:33:22] <jwpapi> That’s the best I have so far https://www.irccloud.com/pastebin/IRd3eHil/
[20:33:56] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:fdd5:f352:87eb:3be3)
[20:35:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:36:15] *** Joins: D4mned (~D1mned@212.101.251.141)
[20:38:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:38:13] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[20:38:55] *** Quits: dea_ (~dea@31.210.96.68) (Ping timeout: 260 seconds)
[20:39:14] <jwpapi> a more challenging question
[20:39:30] <jwpapi> How do I merge arr1 and arr2 to come out as arr3? https://www.irccloud.com/pastebin/LYkY3u0N/
[20:40:47] *** Joins: onosendi (~onosendi@user/onosendi)
[20:42:17] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 240 seconds)
[20:43:31] <tabakhase> just spread em into another
[20:43:37] <ThePendulum> I would use a recursive function
[20:44:07] <tabakhase> a pure o = {...arr1, ...ar2}; should actually do it
[20:44:11] *** Joins: kakashiA1 (~kakashi@41.251.32.52)
[20:44:21] <ThePendulum> that will only merge the top level properties
[20:44:31] *** Quits: kakashiAL (~kakashi@41.143.7.80) (Ping timeout: 260 seconds)
[20:44:36] <ThePendulum> abc in arr3 would end up being the same as in arr2 rather than merging in the props from arr1
[20:44:39] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[20:44:44] *** Quits: onosendi (~onosendi@user/onosendi) (Client Quit)
[20:44:48] <tabakhase> oh then i didnt read the sample data clearly ennuff :D - nevermind
[20:45:20] <tabakhase> totally missed the double abc m(
[20:46:53] <han-solo> concat and then maybe groupBy and then create an object maybe
[20:47:23] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Quit: leaving)
[20:47:39] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[20:47:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:48:10] <ThePendulum> never heard of groupBy, apparently support is practically non-existent so you'd need a library anyway, in which case there's probably a better one dedicated to deep merging
[20:48:23] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[20:49:24] * han-solo nods
[20:49:40] <jwpapi> ThePendulum: even lodash `merge` didn’t do it
[20:50:56] *** Quits: tester12 (~tester12@5.120.78.109) (Quit: Client closed)
[20:52:22] <ThePendulum> tabakhase: https://www.pastery.net/ekxkqy/
[20:52:27] <jwpapi> maybe I do something like `[...Object.keys(arr1),...Object.keys(arr2)].filter((val,i, self) => self.indexOf(value) === index).map(key => { return {...arr1[key], ...arr2[key]}
[20:52:29] <ThePendulum> here's a merge function I use for some settings file
[20:52:56] <ThePendulum> to merge a user's local settings with the defaults
[20:53:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:53:35] <ThePendulum> although hm, I think that would strip properties from arr2 by design, nvm
[20:53:47] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[20:53:48] <jwpapi> I think I have the solution give me a second
[20:54:24] <jwpapi> https://www.irccloud.com/pastebin/JdsKs6B3/
[20:54:31] <jwpapi> arr1 and arr2 is wcData and fbData
[20:55:50] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[20:55:53] <han-solo> jwpapi: https://bpa.st/254Q # not very clean, likely better ways to do this
[20:55:57] <jwpapi> I’m so stupid
[20:56:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:56:05] <jwpapi> lol I’m debugging in a function that never ran lol
[20:57:21] <jwpapi> and lodash works as well
[21:00:14] <han-solo> ah nice
[21:01:10] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:01:32] *** Joins: tester12 (~tester12@5.120.78.109)
[21:04:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:05:49] *** Quits: methbkts (~methbkts@82.138.90.40) (Quit: Client closed)
[21:05:55] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:10:21] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[21:11:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:12:49] *** Quits: tester12 (~tester12@5.120.78.109) (Quit: Client closed)
[21:13:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:13:43] *** Joins: Guts71 (~Guts71@41.104.96.154)
[21:18:28] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[21:21:59] *** Quits: blueagain (~blueagain@user/blueagain) (Quit: leaving)
[21:24:29] *** Joins: blueagain (~blueagain@user/blueagain)
[21:25:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[21:27:31] *** Quits: Duikb00t (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 256 seconds)
[21:28:00] *** Joins: Duikb00t (~wardkenne@d54c71612.static.telenet.be)
[21:28:51] *** Quits: kakashiA1 (~kakashi@41.251.32.52) (Ping timeout: 260 seconds)
[21:32:23] *** Quits: Duikb00t (~wardkenne@d54c71612.static.telenet.be) (Ping timeout: 256 seconds)
[21:33:43] *** Joins: kakashiA1 (~kakashi@105.158.60.226)
[21:34:57] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[21:36:07] <jwpapi> but I think my solution is very neat as well, since it’s understandable
[21:36:39] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) ()
[21:37:31] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[21:37:43] <qswz> what can be a good opposite name for "required"?
[21:37:57] <SpiceMan> not required
[21:38:07] <qswz> notRequired, hmm maybe
[21:38:13] <SpiceMan> optional
[21:38:19] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:38:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:38:56] <qswz> k
[21:39:02] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[21:43:19] *** Joins: kakashiAL (~kakashi@160.178.116.100)
[21:45:01] *** Quits: kakashiA1 (~kakashi@105.158.60.226) (Ping timeout: 240 seconds)
[21:46:02] *** Joins: kakashiA1 (~kakashi@adsl196-141-182-206-196.adsl196-6.iam.net.ma)
[21:47:59] *** Quits: kakashiAL (~kakashi@160.178.116.100) (Ping timeout: 260 seconds)
[21:48:47] *** Joins: kakashiAL (~kakashi@105.157.252.212)
[21:50:17] *** Quits: kakashiA1 (~kakashi@adsl196-141-182-206-196.adsl196-6.iam.net.ma) (Ping timeout: 240 seconds)
[21:51:18] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[21:56:53] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[21:57:24] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxsv5rmray8kb1y.18120a2.ip6.access.telenet.be)
[21:58:11] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[21:58:47] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[22:00:38] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[22:01:22] *** Quits: ivanf (~ivan@user/ivanf) (Remote host closed the connection)
[22:01:59] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxsv5rmray8kb1y.18120a2.ip6.access.telenet.be) (Ping timeout: 260 seconds)
[22:04:24] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[22:05:08] *** Joins: matsaman (~matsaman@user/matsaman)
[22:07:49] *** Joins: Akiva (~Akiva@user/Akiva)
[22:09:27] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:10:55] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[22:13:42] *** voltage is now known as voltage_
[22:14:46] *** Joins: kakashiA1 (~kakashi@160.178.132.120)
[22:16:01] *** Joins: nomic (~nomic@185.217.117.249)
[22:17:23] *** Quits: kakashiAL (~kakashi@105.157.252.212) (Ping timeout: 260 seconds)
[22:17:51] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[22:20:04] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[22:20:36] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:22:10] *** Joins: voltage (voltage@user/voltage)
[22:24:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[22:25:53] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[22:27:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:29:06] *** Joins: src (~src@user/src)
[22:30:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:30:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:30:10] *** Joins: wroathe (~wroathe@user/wroathe)
[22:31:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[22:31:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:33:36] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[22:34:08] *** Joins: relms (~relms@user/relms)
[22:34:36] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[22:35:50] *** Joins: audio (~audio@user/audio)
[22:35:51] *** Joins: ivanf (~ivan@user/ivanf)
[22:35:56] *** Joins: kakashiAL (~kakashi@160.179.19.59)
[22:36:04] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:36:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[22:38:23] *** Quits: kakashiA1 (~kakashi@160.178.132.120) (Ping timeout: 260 seconds)
[22:38:36] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:40:00] <systemfault> optional is usually used...
[22:40:06] <systemfault> Depends on the context.
[22:40:21] <systemfault> Oops, sorry, wasn't scrolled all the way down
[22:41:31] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[22:43:46] *** Joins: polyrob (~rob@user/polyrob)
[22:44:27] *** Quits: kakashiAL (~kakashi@160.179.19.59) (Ping timeout: 260 seconds)
[22:45:24] *** Joins: kakashiAL (~kakashi@41.141.179.134)
[22:46:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[22:47:25] *** Joins: terminalpusher (~terminalp@2a01:586:124a:1:832a:f4bb:6fb9:a240)
[22:47:44] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[22:50:59] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[22:51:49] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[22:52:26] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 245 seconds)
[22:53:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:55:07] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[22:55:07] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Client Quit)
[22:55:23] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[22:55:33] *** Joins: pulse (~pulse@user/pulse)
[22:55:48] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[22:56:04] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:58:16] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[23:00:29] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:01:39] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[23:02:56] *** Quits: kakashiAL (~kakashi@41.141.179.134) (Ping timeout: 252 seconds)
[23:04:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[23:05:00] *** Quits: kill (~killown@user/killown) (Ping timeout: 240 seconds)
[23:10:02] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[23:10:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:14:15] <KevinX> scrolling isn't optional
[23:16:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[23:16:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:20:28] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:21:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:21:10] *** Joins: justOkay (~justache@user/justache)
[23:22:33] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[23:23:46] *** Joins: Duikb00t (~wardkenne@ptr-1tweyxsv5rmray8kb1y.18120a2.ip6.access.telenet.be)
[23:24:30] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:fdd5:f352:87eb:3be3) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:24:35] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[23:28:15] *** Quits: Duikb00t (~wardkenne@ptr-1tweyxsv5rmray8kb1y.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[23:29:55] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:30:22] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:32:52] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:33:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[23:34:56] *** Quits: shkurata (~shkurata@ptr-8riebuibdk9bv2ymb1c.18120a2.ip6.access.telenet.be) (Quit: Leaving...)
[23:35:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:36:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:38:52] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:39:13] <banana_> yo question about debugger
[23:39:27] <banana_> dumb question about debugger statement and event loop
[23:39:40] <banana_> is there any correlation there
[23:39:47] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:40:54] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[23:43:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[23:43:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[23:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:47:01] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[23:47:09] *** Joins: c_89 (~c_89@151.54.144.26)
[23:47:34] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:51:52] <ox1eef> where's the ice cream and caramel, i want a banana split
[23:53:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:56:54] <banana_> dam
[23:57:14] <banana_> taken my question was diarrhea
[23:57:41] <banana_> ox1eef: that's banana_ to you
[23:59:43] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:cca3:219a:bf55:d453)
[23:59:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
