[00:00:21] *** Quits: Scarecr0w (internot@user/scarecr0w) (Ping timeout: 268 seconds)
[00:00:32] <InPhase> teut: It helps if you pick a job for which at least a reasonable fraction of your work time aligns with the activities you actually want to be doing.
[00:00:54] <teut> but the money offered is less than
[00:00:57] <InPhase> teut: That alone is typically worth more than a high salary, given how much time one spends at work.
[00:01:46] <InPhase> You need to cover the basic expenses, but buckets of money aren't useful if you don't have time to enjoy what you're doing.
[00:02:03] <teut> in india parents except atleast a salary of 12-15 lakhs per year
[00:02:09] <teut> expect*
[00:02:29] <davros> does vscode have a view which shows current changes - like the equvalent of running "git diff" - but perhaps reduced to 1 liners - pretty much, "a automatic list of bookmarks to the current changes"
[00:02:52] <teut> 16,148.74 United States Dollar   much , and this is very difficult t o get 
[00:02:59] *** Joins: alycidyne (~kova@lfbn-nan-1-386-99.w82-120.abo.wanadoo.fr)
[00:03:32] <alycidyne> Hello, I just discovered that ld has a default script - which it will print with `ld --verbose`! https://sourceware.org/binutils/docs/ld/Scripts.html#Scripts
[00:03:34] <bayaz> Title: Scripts (LD) 
[00:03:44] <alycidyne> This was lying under my nose this whole time...
[00:03:58] <teut> this you get by joining a startup and grinding yourself for hours and thats what amazon offers
[00:04:13] <teut> too
[00:04:54] <Izem> alycidyne: wha will you be using the script for?
[00:05:03] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:05:16] *** Joins: webnet4 (~0x100@32.211.211.39)
[00:05:32] <mawk> yes alycidyne 
[00:05:50] <mawk> now try to link a program yourself without using it
[00:06:00] <mawk> and without using the gcc wrapper for ld
[00:06:02] <alycidyne> Izem: well not a script in particular, but this is proof for me that linkers are seriously underrated pieces of software
[00:06:16] * webnet4 cat -v's /bin/ld
[00:06:22] <mawk> because actually when you link with gcc it doesn't just call ld, it calls some magic plugin that does a lot of magic around ld
[00:06:24] <webnet4> oh there it is!
[00:06:39] <Izem> yes, I thought all linkers would be scriptable
[00:06:41] <Izem> but no
[00:06:59] <mawk> well it's not general purpose script
[00:07:03] <alycidyne> as in, so many tasks can be expressed as linking and loading, and ld had the potential to manage all this complexity all along
[00:07:05] <mawk> it's just a way to place sections and symbols as you want
[00:07:15] <alycidyne> mawk: yes, as designed
[00:07:16] *** Joins: inom (~inom@176.59.111.80)
[00:07:17] <mawk> you can't do loops or ifs or funny stuff
[00:07:18] <mawk> yeah
[00:07:44] *** Quits: inom (~inom@176.59.111.80) (Client Quit)
[00:07:48] <alycidyne> But, in a single-level store, this would be the language for administrating the system
[00:07:49] <[itchyjunk]> mawk, does math have polymorphism?
[00:08:05] <mawk> no
[00:08:07] <Izem> yeah
[00:08:26] <Izem> + works on many types ;)
[00:08:26] <InPhase> [itchyjunk]: Yes.
[00:08:27] <[itchyjunk]> does pure math deal with type stuff?
[00:08:29] <alycidyne> I thought the linker scripts were just for special-case customization - no, the linker *is* a mini-interpreter indeed
[00:08:37] <InPhase> Izem wins the prize.
[00:08:38] <[itchyjunk]> oh math has polymorphism?
[00:08:42] *** Quits: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net) (Ping timeout: 250 seconds)
[00:08:45] <GeDaMo> http://norfs.sourceforge.net/linkers_and_loaders.pdf
[00:08:46] <bayaz> Type: application/pdf Size: 3.7 MB 
[00:08:57] <[itchyjunk]> its not the same +
[00:09:02] <mawk> isn't a monoid also a magma [itchyjunk] ?
[00:09:05] <mawk> that's kinda polymorphic to me
[00:09:06] <InPhase> [itchyjunk]: That's polymorphism for you.
[00:09:13] <[itchyjunk]> vector + is different from integer +
[00:09:19] <[itchyjunk]> oh
[00:09:22] <mawk> well yeah I wouldn't call + polymorphic
[00:09:31] <mawk> it's always defined in the context of the field/ring/whatever you're using
[00:09:43] <mawk> the symbol + is overloaded if you want to say that, but the underlying operations are not the same
[00:09:51] <Izem> it works on integers, reals, etc
[00:09:57] <[itchyjunk]> i think overloading is also considered polymorphism
[00:09:57] <alycidyne> mawk: well overloading is a form of polymorphism (ad-hoc)
[00:09:58] <mawk> and then it's just a symbol, and polymorphism stems from its ambiguity
[00:10:08] <mawk> well + that works on reals also works on integers because integers are reals
[00:10:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:10:16] *** Joins: scabby_ (~scabby@user/scabootssca)
[00:10:23] <InPhase> mat1.operator+(mat2);  2.operator+(2);  I fixed it for you to make it look polymorphic.
[00:10:30] <mawk> yes, look
[00:10:32] <mawk> is the keyword
[00:10:34] <kobalt> someone once challenged me to write a C program without main function. I changed the name of the symbol 'main' in the linker script and won.
[00:10:47] <mawk> that kind of overloading is just some kind of laziness from mathematics where they don't give unique names to unique things
[00:10:58] <InPhase> mawk: Which is what polymorphism is.
[00:11:07] <[itchyjunk]> i think overloading is a type of polymorphism
[00:11:12] <[itchyjunk]> accordin to wiki at least
[00:11:15] <Izem> are integers sets?
[00:11:15] <[itchyjunk]> ad hawk
[00:11:19] <mawk> if I rename the + on R using a funny symbol, it's still the same operation
[00:11:25] <[itchyjunk]> integers are elements of a set
[00:11:27] <mawk> but it's not looking like a + on paper anymore
[00:11:31] <alycidyne> GeDaMo: thanks :)
[00:11:38] <[itchyjunk]> integers are not sets
[00:11:42] <[itchyjunk]> {1} is a set
[00:11:43] <mawk> defining polymorphism using glyphs doesn't sound right
[00:11:44] <[itchyjunk]> 1 is an integer
[00:12:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[00:12:01] *** Lord_of_Life_ is now known as Lord_of_Life
[00:12:10] <Izem> mawk: well you are doing the same thing in programming
[00:12:23] <Izem> I guess it just wasn't important to define before
[00:12:28] <mawk> well in maths the underlying operation isn't related to the glyph
[00:12:36] *** Joins: inom (~inom@176.59.111.80)
[00:12:40] <mawk> if I called my addition on R using the symbol §, you couldn't argue anymore "it's the same as with integers"
[00:12:43] *** Quits: scabootssca__ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[00:12:50] <[itchyjunk]> what's your def of polymorphism?
[00:13:00] <Izem> I'm not talking about glyphs
[00:13:06] <mawk> I guess in maths it may be about categories [itchyjunk] 
[00:13:10] <mawk> if you want to formalize it
[00:13:10] *** Joins: motherr (~motherr@user/motherr)
[00:13:12] <mawk> but good luck with that
[00:13:18] <[itchyjunk]> category theory has that notion?
[00:13:20] <[itchyjunk]> interesting
[00:13:52] <alycidyne> Where this really gains significance is with scripting languages such as JCL - in such a language, each label would be an address... and so the script could be a linker script
[00:14:06] <[itchyjunk]> what was semi function again?
[00:14:11] <[itchyjunk]> or maybe relations
[00:14:17] <[itchyjunk]> maybe those are poly-morphisms?
[00:15:08] <mawk> "set" is polymorphic [itchyjunk] , it has a given ...set of properties that are always satisfied; many different objects can be a set, but they all share the same properties
[00:15:22] <mawk> and that kind of construction gets especially elaborate with category theory (which I don't know anything about)
[00:15:39] <mawk> or group, or ring, or whatever
[00:16:07] <mawk> and when you prove something for one abstract group, you've proven it for all of them
[00:16:24] <mawk> that's a bit akin to a polymorphic object defining a set of interfaces or whatever you call that in programming
[00:17:23] <mawk> the case with + is just an illusion imo, + is usually defined on a given particular set, like N, Z, R, C; and it's only thanks to set inclusions that the + of C can also work for R, Z, N
[00:17:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:18:17] <alycidyne> mawk: this is, I feel, where set theory and type theory differ drastically
[00:19:40] <alycidyne> insofar as type theory works on terms on a near-syntactic level whereas set theory works almost exclusively on a value level
[00:19:45] *** Joins: Auron (Auron956@user/auron)
[00:20:03] *** Quits: inom (~inom@176.59.111.80) (Quit: WeeChat 3.2)
[00:20:11] <mawk> yeah
[00:20:25] *** Joins: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net)
[00:21:10] <alycidyne> Indeed, polymorphism makes almost no sense outside of type theories
[00:21:16] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[00:21:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:22:04] *** Quits: motherr (~motherr@user/motherr) (Ping timeout: 252 seconds)
[00:22:31] <kobalt> so you mean polymorphism occurs when two things sharing same name has different types.
[00:23:49] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[00:24:20] <davros> differnt versions of the same named function for different types
[00:24:31] <mawk> kobalt: or implementing the same interface
[00:24:33] <mawk> doesn't have to be same name
[00:24:44] <mawk> or subtyping the same base class, if you're not a fan of interfaces
[00:24:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:25:01] <mawk> or even implementing the same methods and properties, if you're using templates in C++, or just duck-typing like in python I suppose
[00:25:59] <[itchyjunk]> that's called ad hoc polymorphism
[00:26:07] <[itchyjunk]> parametric polymorphism has one function
[00:26:12] <[itchyjunk]> but can take in different types
[00:26:17] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 245 seconds)
[00:28:40] <mawk> [itchyjunk]: \int_0^∞ dx/(1+x²)^n
[00:28:49] <mawk> find at least 2 different methods
[00:28:59] <[itchyjunk]> never!
[00:29:13] <[itchyjunk]> that's the e one?
[00:29:38] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[00:29:40] *** Joins: xff0x (~xff0x@2001:1a81:5207:3100:686a:e8fd:47a9:633d)
[00:30:15] <Izem> what's the difference between a type and a set?
[00:30:21] <[itchyjunk]> what formal system does type theory use?
[00:30:43] <mawk> what e one [itchyjunk] 
[00:30:44] <mawk> just try it
[00:31:13] *** Quits: molten (~molt@79.140.150.21) (Quit: Leaving)
[00:31:16] <teut> mawk use compex num
[00:31:28] <teut> 1 + i x )   (1 - ix)
[00:31:37] *** Joins: molt (~molt@79.140.150.21)
[00:31:41] <teut> or contour integration
[00:31:51] *** Quits: alycidyne (~kova@lfbn-nan-1-386-99.w82-120.abo.wanadoo.fr) (Quit: leaving)
[00:32:02] <teut> upper half contour
[00:32:08] <mawk> yeah
[00:32:11] <mawk> that's not the most obvious method
[00:32:35] <teut> sure, its not impressive 
[00:32:48] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[00:32:49] <teut> not obvious?
[00:33:07] <teut> I thought it was obvious, and kind of missed the "not"
[00:33:51] <mawk> yeah it's clearly a trig integral, 1/(1+x²) is derivative of arctan
[00:34:03] <mawk> so if you substitute some x = tan(u) you immediately get a wallis integral and you read the value off wikipedia
[00:34:06] <teut> there is another way but I m not sure of it
[00:34:09] <mawk> π/n/sin(π/n)
[00:34:19] <teut> ( 1 + ix) (1 - ix ) would not work
[00:34:21] <mawk> there's also a third way besides contour and that
[00:34:32] <mawk> well you can use the 1+ix stuff to make your life easier with the contour
[00:35:49] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[00:35:50] <teut> maybe, I do not remember contour int   fully , I did it in my 2nd year, now I m in my 5th
[00:36:00] <mawk> I don't remmeber it at all
[00:36:00] <mawk> lol
[00:36:03] <mawk> because I never learnt it
[00:36:06] <mawk> except on my free time
[00:36:17] <teut> but you are a math degree
[00:36:23] <teut> you told once
[00:36:28] <mawk> yeah, but it's not like a doctorate
[00:36:41] <mawk> we didn't cover complex analysis
[00:36:44] <[itchyjunk]> so fucking in over my head with this shit
[00:36:47] <teut> I dont know what that means. 
[00:37:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[00:37:14] <teut> I was taught it in MATH III  , common course acrooss all disciplines 
[00:37:54] <teut> you may be able to use it too   https://en.wikipedia.org/wiki/Cauchy_formula_for_repeated_integration
[00:37:55] <bayaz> Title: Cauchy formula for repeated integration - Wikipedia 
[00:38:07] <webnet4> itchyj, i'm stuck here wondering how it gets applied to programming
[00:38:15] <mawk> hmm maybe yes teut 
[00:39:28] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:39:28] <Izem> if a function references unresolved symbols does that mean the function is also unresolved when linking?
[00:39:28] <teut> factorial for negative nums isnt defined but except for fractions 
[00:39:39] <mawk> yeah
[00:39:40] <webnet4> izem, right
[00:39:45] <mawk> it's defined at every real except non-positive integers
[00:39:50] <mawk> uh
[00:39:51] <mawk> negative integers
[00:39:57] <webnet4> or partially resolved?
[00:40:04] <mawk> but the real "real" factorial is usually given shifted as (x-1)!
[00:40:14] <mawk> so then it's not defined at all non-positive integers
[00:40:53] <mawk> Izem: that means the linker will try to find that unresolved symbol, and give an error if it doesn't find it
[00:41:54] <teut> yes you r correct
[00:42:22] <mawk> originally gauss gave it non shifted as Π(x) iirc
[00:42:27] <mawk> but then someone else renamed it Γ or something
[00:42:38] <[itchyjunk]> webnet4, how what gets applied?
[00:43:26] <webnet4> type theory's formal system
[00:43:45] <teut> Legendre
[00:44:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[00:45:00] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[00:45:14] *** Joins: nekodesu (~bit@user/nekobit)
[00:45:20] *** Joins: euouae (~euouae@user/euouae)
[00:45:39] <euouae> Hello
[00:45:42] <mawk> my man adrien-marie
[00:45:53] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[00:45:54] <euouae> I don’t understand how ssh works 
[00:46:37] <euouae> in particular authentication. I think i understand public key cryptography , but I can log on to my work machine with just a password over ssh?
[00:46:49] <euouae> I don’t recall creating any keys
[00:47:24] <webnet4> isi this the 1910 theory of types?
[00:47:32] <teut> https://www.youtube.com/watch?v=ORcvSkgdA58 maybe this will be helpful euouae
[00:47:34] <bayaz> Title: How Secure Shell Works (SSH) - Computerphile 
[00:47:55] *** Parts: euouae (~euouae@user/euouae) ()
[00:47:58] <webnet4> from bertrand russell
[00:48:18] *** Joins: euouae (~euouae@user/euouae)
[00:48:24] <euouae> Sorry accidentally quit 
[00:48:35] <euouae> I missed the responses 
[00:48:49] <webnet4> if you didnt create a key then you're using some garbage default
[00:48:52] <teut> https://www.youtube.com/watch?v=ORcvSkgdA58
[00:48:53] <bayaz> Title: How Secure Shell Works (SSH) - Computerphile 
[00:49:03] <webnet4> RIP all hopes for having a secure session
[00:49:05] <euouae> I don’t want to watch yet video 
[00:49:09] <euouae> YT video 
[00:49:31] <euouae> Webnet4, ok so it defaults to some default?!
[00:49:34] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[00:49:45] <euouae> So ssh is trust on first use, right?
[00:49:45] <webnet4> it shouldn't
[00:49:58] <webnet4> your system was configured wrong
[00:50:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:50:10] <euouae> Client or server?
[00:50:19] *** Joins: zaher_ (~zaher@37.48.185.228)
[00:50:20] <webnet4> could be both for all i know
[00:50:23] *** Joins: flynn (~mcbloch@user/flynn)
[00:50:38] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[00:50:47] <webnet4> this isn't @#ssh-help though and crypto is mostly a scam so i don't know what to tell ya
[00:51:10] *** Quits: inky (~inky@89.249.195.33) (Ping timeout: 250 seconds)
[00:51:27] *** Quits: magla (~gelignite@55d4beb4.access.ecotel.net) (Remote host closed the connection)
[00:51:38] <euouae> Crypto is not a scam lol what? 
[00:51:48] <euouae> Are you talking about cryptography or coins?
[00:51:48] <webnet4> *mostly
[00:51:53] <webnet4> either or
[00:52:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:52:10] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 245 seconds)
[00:52:16] <euouae> In the sense of nsa back doors? Tin foil hat? Or what ?
[00:52:19] <Izem> webnet4 did you crack rsa encryption?
[00:52:26] <webnet4> rsa is defnitely a scam
[00:52:28] *** Quits: zaher (~zaher@37.48.153.139) (Ping timeout: 250 seconds)
[00:52:42] <Izem> great, not take down those bitcoin miners
[00:52:47] <Izem> s/not/now/
[00:53:00] *** Joins: inky (~inky@5.77.144.194)
[00:53:12] *** Quits: langstme (~langstme@user/langstme) (Read error: Connection reset by peer)
[00:54:08] *** Joins: frm (~frm@user/frm)
[00:54:19] <euouae> Is this the wrong channel to ask?
[00:55:03] <Izem> no, pretty sure there's some security guys in here
[00:55:18] <Izem> oh yeah there is a #security I think
[00:55:19] <euouae> How does the initial trust happen in ssh?
[00:55:28] <Izem> but it's a good question
[00:55:51] <Izem> diffie helman?
[00:55:55] <webnet4> you use special intel instruction to generate a totally random number
[00:55:58] *** Quits: glguy (x@libera/staff/glguy) (Quit: Quit)
[00:56:01] <webnet4> step1
[00:56:08] *** Joins: glguy (x@libera/staff/glguy)
[00:56:14] <euouae> No I mean, why does the server trust the clients public key?
[00:56:32] <webnet4> dont' forget to put it into a specially mapped region so everyone knows exactly where your secrets reside!
[00:56:36] <webnet4> ;)
[00:56:43] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[00:57:03] <euouae> Ok webnet4 you just want to bash intel for past mistakes 
[00:57:17] <euouae> We all know Intel has a very easy job anyhow
[00:58:24] <webnet4> i'm winking at you linux kernel
[00:58:42] <euouae> This is iOS
[00:59:07] <webnet4> lol you are sshing with some default ios app key?
[00:59:31] <euouae> No at work I ssh to another work computer
[00:59:44] <[itchyjunk]> This is sparta
[00:59:46] <euouae> i don’t understand, it just requires my username and password 
[00:59:56] <webnet4> lolll
[01:00:06] <euouae> Why are you lol ing 
[01:00:30] <webnet4> just use telnet
[01:00:41] <Izem> Last ditch effort since this is a really os specific question I cannot figure out after two days, but if anyone has experience with windows what library has printf? I cannot figure out how to link
[01:01:05] <mawk> libc
[01:01:14] <Izem> nope, it's not there
[01:01:23] <mawk> I'm pretty sure printf is mandated to be in libc
[01:01:35] <mawk> anyway even if you're on windows you can use gcc and the gnu libc
[01:01:38] <mawk> download the mingw compiler
[01:01:58] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:02:00] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[01:02:02] <mawk> but besides that, I'd be very surprised if printf wasn't mandated to be in libc
[01:02:10] *** Joins: webnet4 (~0x100@32.211.211.39)
[01:02:50] <Izem> printf is provided by some series of indirects it seems
[01:02:54] <Izem> it's not even in the sdk
[01:03:01] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:03:03] <euouae> How are you checking?
[01:03:15] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:03:26] <Izem> dumpbin, linker errors, windows explorer
[01:03:43] <Izem> I have been checking the docs to see where it is supposed to be as well
[01:03:57] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[01:04:10] <Izem> I just want to assemble this program https://bpa.st/I6NA
[01:04:11] <bayaz> Title: View paste I6NA 
[01:05:00] <Izem> while there are several ways to print, I did want to use libc...
[01:05:49] <Izem> don't bother to search btw I was just hoping someone else had this issue before
[01:05:51] <euouae> Which assembler ?
[01:05:54] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 250 seconds)
[01:05:57] <Izem> ml64
[01:06:06] <Izem> oh masm
[01:06:08] <euouae> I’ve heard of this issue before 
[01:06:21] <euouae> It’s common just search it
[01:06:28] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:08:09] <euouae> But back to ssh, if I want to ssh to a new machine, what is the process of client and server trusting each other?
[01:08:29] <euouae> does the server trust the public key shared from client (and vice verse) on first use? 
[01:08:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[01:08:57] <Izem> yes, it seems to require 3 libraries ... thanks
[01:08:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[01:09:13] <Izem> mawk: is that requirement in name/symbol only?
[01:09:22] *** Quits: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[01:09:30] <euouae> I’d use winapi, not libc 
[01:09:34] <euouae> on windows assembly 
[01:09:48] *** Quits: elnavigator (~elnavigat@105.196.151.191) (Ping timeout: 250 seconds)
[01:10:21] <Izem> actually just two libraries
[01:12:11] *** zaher_ is now known as zaher
[01:12:31] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[01:13:35] *** Quits: teut (~teut@106.213.43.121) (Quit: Connection closed)
[01:15:36] <CoderGuy> I have a question about coding extension logic.   So basically I have objects that are implementations of other objects so that they work inside my own codebase. IE Class AirPlane comes from PaperPlanes Toolkit, but maybe in the future a better PaperPlane comes out and I want to swap, well the way I set this up I can easily just change the implementation to match and my code will now work with all the new planes. My Question is, lets say I invent 
[01:15:36] <CoderGuy> a brand new plane, should I combine things from PaperPlanes to create the new plane, or should I use my existing AirPlanes that already implemented PaperPlanes?
[01:16:40] <karstensrage> what if its a WoodenPlane
[01:16:48] <karstensrage> or an AluminumPlane
[01:16:58] *** Quits: cth (~Cthulchu@213.174.21.101) (Read error: Connection reset by peer)
[01:17:08] <CoderGuy> exactly so A WoodenPlane doesn't exist i'd have to make that, should I use the toolkit of PaperPlanes to make this, or use my AirPlane which is based on PaperPlane?
[01:17:25] *** Joins: cth (~Cthulchu@213.174.21.101)
[01:17:31] <pyzozord> CoderGuy: it depends
[01:17:39] <CoderGuy> of course it does that's why i'm asking lol
[01:17:42] <karstensrage> your example is artificial and not your real use case obviously 
[01:17:47] <CoderGuy> yeah of course
[01:17:53] <CoderGuy> it's easier this way I think to see
[01:18:05] <karstensrage> so why dont you tell us your real use case so we can REALly help
[01:18:08] <pyzozord> there is no universal to a question like that. You set up your architecture with specific goals in mind
[01:18:26] <CoderGuy> yeah my goal is to be able to swap out the codebase but have my program still work
[01:18:41] <CoderGuy> I want my own internal objects that don't rely on external things
[01:18:45] <karstensrage> a wooden plane doesnt inherit from paper plane at all 
[01:18:47] *** Joins: audio (~audio@2603-8081-1801-3bb5-8f76-5f69-0a39-aaec.res6.spectrum.com)
[01:19:02] <CoderGuy> okay fine call it AirPlanes and we'll call mine CustomAirPlanes
[01:19:04] <karstensrage> so maybe apply SOC 
[01:19:25] <pyzozord> CoderGuy: then you need to create some sort of abstraction layer that wraps around the library so that all of your internal code depends only on the wrapper you wrote
[01:19:47] <CoderGuy> aww so pyzozord you think making the wrapper once it's done, creating new objects from said wrapper is best?
[01:20:02] <CoderGuy> instead of wrapping each individual thing?
[01:20:12] <karstensrage> i guess if you realiy want to pull this off then you have to come uup with an interface that satisfies today and somehow satisfies the future
[01:20:32] <karstensrage> but thats hard to impossible and im questioning if its really even a problem 
[01:20:51] <karstensrage> cause when new AirPlanes comes along, youll have to refactor, rearchitect, greenfield anyway
[01:20:58] *** Joins: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net)
[01:20:59] <CoderGuy> karstensrage, I already have this working i'm just looking at for classes that don't exist, say woodenplanes or aluminum, should I base them on my first CustomAirPlane or should I base it on the AirPlane from the AirPlanes toolkit, that's all
[01:21:23] <pyzozord> CodeGuy: yeah if the only goal is being as indeptended as possible from the third party library, then yes. Also make the wrapper more abstract so that it doesn't get infected with some of the preconceptions of the third party library by osmosis
[01:21:46] <CoderGuy> okay okay cool
[01:21:59] <karstensrage> ok well for the incredible artificial example thats fake anyway my answer is AirPlanes are your base class and probably are the easiest to extend for your new future unknown planes
[01:22:03] <CoderGuy> I think that answer works pyzozord now out of curiousity what is the benefit to not making everything based on my first wrapper?
[01:22:48] <CoderGuy> karstensrage, so you agree with pyzozord then? I think that is the right answer i'm just curious the benefits to constantly implementing everything if there even is one
[01:23:37] <karstensrage> CoderGuy, i am skeptical of the constantly coding everything, but how about code up three and see if there are enough similarities to refactor the interface to address all three
[01:23:44] <karstensrage> then you might be more assured of hitting the right one
[01:24:15] <karstensrage> for 4 5 and to infinity and beyond --- Buzz Lightyear
[01:24:23] <pyzozord> Less works comes to mind immidiatly. Also probably you lose some of control over the third party if you are writing a wrapper, because the wrapper needs to generalize for multiple third party libraries
[01:25:08] <CoderGuy> sure i'm just curious is there a benefit to saying Class WoodenPlane is made up of AirPlane from AirPlane Toolkit, and then I created some wood stuff. Class AluminiumPlane is based on AirPlane from Airplane Toolkit but I added aluminium. Versus Both Wooden and Aluminum are based on my Wrapped CustomAirplane, they are all my planes, and the root plane is the Airplane toolkit
[01:25:53] <CoderGuy> here imma draw.io it just to show
[01:27:39] <pyzozord> karstensrage's point is not orthogonal to mine. I think he is just remarking on the startegy when and how to abstract, specifically that it's best to wait a bit before abstracting because it will be much easier to spot the common patterns
[01:30:28] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[01:31:53] *** Joins: elnavigator (~elnavigat@105.196.151.191)
[01:32:01] <CoderGuy> Blue or Orange? https://viewer.diagrams.net/?highlight=0000ff&edit=_blank&layers=1&nav=1#R5Vhbk5MwFP41POpwawuPC63rjKvTmeqsfdpJIUBsIEwIW%2FDXG0pSYLEXVy1Un5rz5ULynfPlnEYx3Li4pyCNPhIfYkVX%2FUIx5oqua5ql858KKWtkZpg1EFLki0ENsELfoQBVgebIh1lnICMEM5R2QY8kCfRYBwOUkl13WEBw96spCGEPWHkA99FH5LOoRq2J2uDvIQoj%2BWVNFT0xkIMFkEXAJ7sWZCwUw6WEsLoVFy7EFXmSl3reuyO9h41RmLBLJqwXmycbfXAenC82WWbr8JO%2BfSNWeQY4Fwe%2BQ3SJQQI%2Fc5a3iCn6FPPlnQ3lrbBquRhkGZ8jB4rTsVJStosQg6sUeJW94
[01:32:02] <CoderGuy> 2HBJ0UsxtzSeBNkae2oABWQ780JEMYuwYTupxsbzfcDleMZo2QLWz2aOjNsvqjTP7o8B6QMFi1IUHEPSQwZLfkQ2TsVbhFxqRnC3jVePmBR28MSBCKywsPaDfm8Ifj%2FBV9YPSahz2NRmISyiIQkAXjRoA4leeJXLM4rxpoxD4Skgu9vkLFSCAvkjHS9cZTKjOTUgye2K4TNAA0hOx9i1VlOOoZCDBh67uruj5Os9wJexrObZ4zE%2F1ZU6%2FbgUT0dIqo5g7T8Ws1%2Fa6qWBNZ7wLZ1CcwL8YnaKtvWElLEGYBUgK8XinGhUPRRCcU4KpQ7nMcoyeMb1skLmZjWZGiZTAaWyaQtEu2MQF6vBfMmtWAe1cIj4RVvcsNK0K3RScEeX00aBHDqeT%2FzhT%2BzN%2BpJTVzuC9McXU2qmbdVlMq%2Fjeer0nHdMHLf
[01:32:02] <bayaz> Title: Flowchart Maker & Online Diagram Software 
[01:32:03] <CoderGuy> 171irhPW08noilLNGCTdFoi1si231jK98naTayvj91OtJp9LzknBHpcS%2Bk8SVyk8h7nix6CF%2Fl%2Fi%2FyTfvryY%2Fmq%2B5Wbz1rfva72YGosf
[01:32:06] <CoderGuy> jesus christ
[01:32:10] <CoderGuy> so sorry didn't realize hold on
[01:32:48] <euouae> Seo optimized 
[01:32:55] <CoderGuy> https://bit.ly/3z5fich
[01:32:56] <bayaz> Title: Flowchart Maker & Online Diagram Software 
[01:33:02] <CoderGuy> blue or orange?
[01:33:33] *** Parts: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Closing Window)
[01:33:44] <mrig> Are those the code instructions for an origami aeroplane? :P
[01:34:11] <CoderGuy> lol it's just, should everything extend CustomAirplane or should each thing individually extend AirPlane Toolkit?
[01:34:11] <mrig> CoderGuy: why not a vehicle class that implements the fly interface?
[01:34:19] <mrig> could be a helicopter then too.
[01:34:39] <euouae> Or a cool dude
[01:34:54] <CoderGuy> sure sure mrig all of that is fine i'm just curious, if you had an airplane already should the new ones each extend the original toolkit OR should 1 airplane extend original toolkit, and all the new planes extend that
[01:35:18] <mrig> CoderGuy: depends entirely on the context.
[01:35:43] <euouae> I think you’re asking about certain OO design patterns 
[01:35:45] <CoderGuy> context is I want existing airplane class in my code, but i'm also gonna create new planes from that
[01:36:03] <CoderGuy> so should I extend the old plane each time, or extend my brand new plane that I just created
[01:36:04] <mrig> are these all real world planes that hang from a bedroom ceiling, or are they flyable models in a flight simulator?
[01:36:22] <CoderGuy> they're 3d planes in a video game that i'm going to skin
[01:36:27] <mrig> without context the notion is somewhat meaningless.
[01:36:59] <mrig> Oh poor planes! I hope that you will kill them first :|
[01:37:06] <CoderGuy> lol
[01:37:07] <euouae> www.oodesign.com/
[01:37:23] <CoderGuy> but euouae you saw my example right< just pick blue or orange?
[01:37:35] <euouae> I d I d not click 
[01:37:39] <CoderGuy> oh
[01:37:40] <wedr> Oh poor planes! I hope that you will kill them first :|  <------    Not without putting up some dogfights.
[01:37:43] <CoderGuy> it's a link made from draw.io
[01:37:55] <CoderGuy> I assure you it's safe I promise, unless draw.io did something weird
[01:38:08] * mrig imagines snarling planes with fur and four legs.
[01:38:36] <CoderGuy> wait is there a way to decode a bitly before you view it?
[01:38:44] * wedr imagines dogs barking and woofing while wearing airplane costumes
[01:38:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:39:37] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[01:39:55] <mrig> Yikes; It is going to be one hell of a scrap!
[01:40:39] *** Parts: euouae (~euouae@user/euouae) ()
[01:40:43] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[01:40:58] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:41:31] <pyzozord> CoderGuy: getting familiar with design patterns might be useful to you, here is some traditional design patterns and few game related ones http://gameprogrammingpatterns.com/contents.html
[01:41:31] <bayaz> Title: Table of Contents · Game Programming Patterns 
[01:42:06] <CoderGuy> look i'll look at that i'm just curious like which one makes more sense lol
[01:43:18] <mrig> CoderGuy: Its an interesting though, I'm not sure how you would relate the skin to a class, but your type of plane is presumably only effecting its shape, so you might consider a plane class which implements a shell, different shells for different skins.
[01:44:08] <mrig> the game does not care if it is paper wood or aluminum, but the skin designer might have something to say about the shape.
[01:44:09] <CoderGuy> mrig, yeah but the question is, should each one I make rely on the original codebase of AirPlane toolkit, OR since I already implemented one AirPlane from AirPlane toolkit, should each one rely on that?
[01:44:46] <CoderGuy> like which is more logical and organized?
[01:44:52] <mrig> CoderGuy: sounds like a reasonable starting point to extent from, if it does everything that a plane should do.
[01:45:09] <CoderGuy> yeah nothing is going to change each one is going to be based on a plane
[01:45:15] <mrig> The logic is different for different scenarios.
[01:45:20] <CoderGuy> i'm just curious should they all have the original or should they be based on the first wrapper I created?
[01:45:38] <pyzozord> In practice you wouldn't mix presentation with functionality like that in a single class. You'd probably hame some GameEntity that has a model and a texture, an Airplane class that inherits from it, and few instances of Airplante with different models and textures
[01:45:42] <CoderGuy> here's why the question emerges, if I change the original it will change all the others
[01:45:53] <pyzozord> s/hame/have/
[01:45:56] <mrig> no harm in making your initial wrapper, you might want to swap that out some day.
[01:46:16] <CoderGuy> mrig, but if I do swap it, all the planes will change, is that a good thing or a bad thing?
[01:46:40] <mrig> not if you have a wrapper with the same interface for all the planes.
[01:47:05] <mrig> the only thing that would change would be the underlying model.
[01:47:08] <pyzozord> CoderGuy: using inheritance is probably something you want to avoid, and prefer composition instead https://www.youtube.com/watch?v=QM1iUe6IofM
[01:47:09] <bayaz> Title: Object-Oriented Programming is Bad 
[01:47:22] <CoderGuy> so the Blue option if I change the root toolkit, everything changes as you see in the blue diagram. But in the Orange Diagram I can make changes to say WoodenAirPlane without effecting the other planes
[01:47:26] <mrig> interfaces are nice.
[01:48:01] <CoderGuy> so my question is, is it a good thing that I would effect everything or not?
[01:48:22] *** Joins: snake (~snake@user/snake)
[01:48:40] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[01:50:24] <mrig> CoderGuy: why does the visual aspect of your plane need to access the content of the plane?
[01:50:40] <CoderGuy> oh it's just an example, I have a whole other seperate thing but it's too much to look at
[01:50:58] <CoderGuy> but this is a version that matches the basic problem, should my planes be based on an original plane, or should they all be unique
[01:51:12] <mrig> well it is a little vague, the important thing about a plane is its flight model and physics.
[01:51:45] <mrig> does the shape of the plane effect the aerodynamics and the flight model or are they unrelated?
[01:51:50] <CoderGuy> okay forget about it being a plane then, have the root be all those other things
[01:52:09] <CoderGuy> is it better to import all those things each time I have a new plane, or to have them all extend an existing object that already imports those?
[01:52:13] <mrig> Well to make classes logical the context is really important.
[01:52:25] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[01:52:40] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 240 seconds)
[01:53:16] <mrig> If you sim is realistic you would want different models for every plane, if it is just a bit of fun then only the visual model would change, in which case a simple variable in the plane could define that.
[01:53:16] <CoderGuy> here like in C# they have a class Control
[01:53:24] <CoderGuy> and eveyrthing always extends Control is that a good model?
[01:53:32] <CoderGuy> or should I import Control each time?
[01:53:38] <mrig> why not a skin variable in plane?
[01:53:58] <CoderGuy> no mrig you're missing the point
[01:54:04] <mrig> a simple enum could do it.
[01:54:10] <mrig> am i?
[01:54:48] <CoderGuy> it's not about what the plane can do, i'm asking, should I import the codebase of AirPlane IE AirPlane Toolkit, everytime I make a new Plane OR should I have 1 custom plane, and import that instead. The upside of having 1 CustomPlane I import is if the root class of AIrPlaneToolkit changes, it will change for all planes, the down side is, it would change for all planes
[01:54:55] <mrig> The control in C# is for the users controller?
[01:55:06] <mrig> a user controllable object?
[01:55:07] <CoderGuy> yeah and all the user controllers extend that same Control
[01:55:16] <mrig> I would wrap that yes.
[01:55:34] <CoderGuy> sure but i'm using an external Toolkit, maybe this toolkit is literally the C# Control Class
[01:55:47] <mrig> What does it do?
[01:55:47] <CoderGuy> should my objects always import the C# control class, OR should they just use the first one I wrap around Control
[01:56:05] <mrig> the logic needs to follow the logic of what the thing does.
[01:56:07] <CoderGuy> it's designed so I can switch maybe in the future I don't want to use C# Control and want to use Python or something
[01:56:44] <CoderGuy> so Option A, all the objects are based on the original wrapped C# Control, Option B, each one is unique they all import C# Control, if I wanted to change I have to update all the objects that want to change.
[01:57:13] *** Joins: MangyDog (Mange@user/mangy-dog/x-7397214)
[01:57:17] <mrig> You could put a control interface in there, if you want it to be easy to reuse.
[01:57:20] <CoderGuy> Which is more logical and best when it comes to wanting to decouple
[01:57:27] <Akuli> i would decide this based on how annoying/ugly option B would be
[01:57:27] <CoderGuy> oh I alreayd have that
[01:57:35] <mrig> interface are for coupling by definition.
[01:57:38] <CoderGuy> yeah Akuli so take a gander look https://bit.ly/3z5fich
[01:57:39] <bayaz> Title: Flowchart Maker & Online Diagram Software 
[01:57:43] <CoderGuy> Blue or Orange?
[01:57:45] <Akuli> if using the control class is just a couple lines, i wouldn't bother abstracting it away
[01:58:21] <Akuli> yeah so to me it would depend on how much copy/pasta i can remove by adding the custom class
[01:58:25] <CoderGuy> what I mean by decoupling is to make it so everything is not just the C# Control, it's my own stuff that can be different
[01:58:26] <mrig> CoderGuy: do it with an interface not with inheritance.
[01:58:27] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:58:37] <pyzozord> CoderGuy: I think your last pros/cons evaluation has a flawed assumption. You don't need to make just one custom airplane, you can have many. Your base abstraction layer that separates you from the third party library needs to encapsulate enough concepts so that it doesn't limit your program.
[01:58:47] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:59:07] <pyzozord> CoderGuy: besides it doesn't even need to be inheritance based. You can, and probably should, use composition.
[01:59:08] <Akuli> ...and if it ever limits, i find it's often best to delete the abstraction and use the library directly :D
[01:59:11] <CoderGuy> pyzozord, oh of course, but should I base my new objects on my new library or on the old one?
[01:59:14] <CoderGuy> Blue or Orange?
[01:59:20] <mrig> CoderGuy: an interface is a contract that insures that what ever is there must fit to the same thing.
[01:59:31] <mrig> It is what it is for.
[01:59:45] <mrig> CoderGuy: neither blue nor orange.
[01:59:48] <CoderGuy> mrig, fine, but should I import the library for the interface each time, or extend my original wrapped class that alreayd did that?
[01:59:57] <CoderGuy> Blue or Orange?
[02:00:18] <mrig> CoderGuy: an interface is a type in c# if I am not mistaken.
[02:00:30] <pyzozord> CoderGuy: nither, or both. That's not the only two options you have
[02:00:38] <CoderGuy> there's a third option?
[02:00:43] <mrig> https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/interface
[02:00:44] <bayaz> Title: interface - C# Reference 
[02:00:56] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 250 seconds)
[02:01:17] <pyzozord> There is many options.
[02:01:37] *** Quits: inky (~inky@5.77.144.194) (Ping timeout: 252 seconds)
[02:01:39] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:01:45] <CoderGuy> how else can you do this, I need the library that my objects are based on...so to me either you extend the initially wrapped class or you always import the library
[02:01:48] *** Joins: Shashin (Shashin@gateway/vpn/protonvpn/shashin)
[02:02:00] <pyzozord> We keep telling you. You can use interfaces. You can use composition. You can have multiple horizontal classes that serve as an abstraction layer.
[02:02:27] <CoderGuy> i'm already using interfaces that doesn't change anything because in order to use an interface I Need the implementation of it
[02:02:30] <[itchyjunk]> oh composition?
[02:02:34] <[itchyjunk]> composition of classes?
[02:02:36] <CoderGuy> what does composition even mean?
[02:02:44] *** Joins: inky (~inky@46.36.119.19)
[02:02:48] <pyzozord> Watch the video I linked.
[02:02:55] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[02:03:24] <pyzozord> And read about design patterns. There are many options. It will greatly expand what you think is possible here.
[02:03:25] *** Joins: nekodesu (~bit@user/nekobit)
[02:03:53] <[itchyjunk]> oh i've seen that video
[02:04:10] <CoderGuy> why do I feel like i'm watching a video on the flat earth lol
[02:04:22] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:48] <pyzozord> it's of course just one opinion, but it will serve as a good introduction to other concepts introducing the idea that this can be looked at from many points of view
[02:05:05] <pyzozord> s/it's/that video is/
[02:06:10] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[02:07:10] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 240 seconds)
[02:07:35] <CoderGuy> This guy is so obnoxious lol
[02:07:54] *** Joins: Izem (~Izem@65.95.173.5)
[02:08:07] <pyzozord> smart people often are :P
[02:08:11] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[02:08:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[02:09:21] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:09:40] <[itchyjunk]> i think i killed my remaining neurons
[02:09:42] <[itchyjunk]> " If an object contains the other object and the contained object cannot exist without the existence of that object, then it is called composition. "
[02:10:41] <CoderGuy> pyzozord, i'm watching this video he's taking forever to impress me, considering i'm just gonna use OOP for this, which do you think is best blue or orange? I'm still watching video just curious
[02:12:08] <pyzozord> CoderGuy: nither. I'd do a mix of both. I'd create a layer of abstraction with multiple classes and have my planes inherit from those abstract classes
[02:12:10] <mrig> CoderGuy: If you think that the video is supposed to impress you, you are perhaps approaching learning in the wrong way.
[02:12:10] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Ping timeout: 240 seconds)
[02:12:14] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[02:12:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[02:12:59] <rxndxs> if your learning does not impress you, then i'd say you are doing it wrong
[02:13:19] <CoderGuy> pyzozord, ohhh I see what you mean, so instead of the Orange having AirPlaneToolkit the Orange would have AbstractedLayer->Wooden  AbstractedLayer->Aluminum ?
[02:13:48] *** launchd is now known as l
[02:13:50] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[02:13:54] <pyzozord> then again it's just one opinion about oop, but I'm using it here mainly for it's secondary value of presenting more possibilities and widening horizons
[02:14:19] <pyzozord> you can ignore his opinon that OOP is bad, still learn from the arguments a whole lot
[02:14:44] <CoderGuy> yeah sure but pyzozord I thought I implied that I would have that abstraction layer for each in my diagram for blue
[02:15:07] <CoderGuy> but if I change the original it will change for each of the planes, granted they're based on the same abstraction layer
[02:15:16] <CoderGuy> I think this can be a good thing, but it can also be a bad thing
[02:15:25] <CoderGuy> and i'm just not sure what makes it better or worse
[02:15:48] <pyzozord> CoderGuy: you need to architecture your abstraction layer in a way that serves your goals
[02:16:07] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[02:16:08] <pyzozord> Again, many possibilities.
[02:16:20] <mrig> rxndxs: impress upon you is good, but the 'I' in there tends to get in the way.
[02:16:21] <pyzozord> Learning about traditional design patterns will be very helpful here.
[02:16:33] <CoderGuy> well I do like the idea "hey guess what we no longer are using this plane toolkit" great I change one file, I fix all my planes. But then again what if I only wanted to change some of the planes I guess would be the question
[02:16:49] <[itchyjunk]> composition is too advanced for me for now
[02:17:24] <pyzozord> CoderGuy: I think we are going in circles now, I feel like I already answere this question twice
[02:17:31] <CoderGuy> yeah sure
[02:17:33] <[itchyjunk]> i think i vaguely get the idea though
[02:17:34] *** Quits: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[02:18:01] <CoderGuy> hmmmmm at the very least pyzozord you've helped me to ask the question I needed to, which is "what if you only want to update some of the planes"
[02:18:19] <pyzozord> CoderGuy: others may still be able to add more, or describe things in better ways
[02:18:34] <CoderGuy> yeah sure sure it's fine, fascinatingly enough he's now talking about encapsulation
[02:18:40] *** Quits: webnet4 (~0x100@32.211.211.39) (Ping timeout: 240 seconds)
[02:18:48] <DPA> Which bytes are used for a UTF-8 BOM?
[02:19:31] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:20:00] <rxndxs> mrig: yea i think i know what you mean
[02:21:43] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[02:21:46] <vdamewood> DPA: Do you know how UT-8 encodes codepoints?
[02:21:58] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[02:22:01] <pyzozord> arahael: are you here? I've compiled latest version of nethack and ran into a room with lava (!) on like level 3.
[02:22:23] <vdamewood> UTF-**
[02:22:26] <vdamewood> Dammit
[02:22:42] <[itchyjunk]> oh i thought lava existed in old versions too
[02:22:51] <vdamewood> pyzozord: The floor is lava!
[02:23:03] <pyzozord> It kiled me!
[02:23:12] <pyzozord> [itchyjunk]: it did? I never seen it before
[02:23:16] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Read error: Connection reset by peer)
[02:23:18] <vdamewood> pyzozord barbecue?
[02:23:31] <[itchyjunk]> hmm i am not confident
[02:23:39] <pyzozord> [itchyjunk]: at least not on the 1-10 levels
[02:24:00] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:24:06] <pyzozord> vdamewood: baked polish noodles, sounds good :)
[02:25:00] <[itchyjunk]> yeah it probably didn't show up that early
[02:25:11] <[itchyjunk]> i didn't know it was still being developed even
[02:25:14] *** Joins: nekobyte (~based@user/nekobit)
[02:25:26] <[itchyjunk]> last i played it was 15 years ago?
[02:25:28] <[itchyjunk]> yikes
[02:26:15] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:26:24] <pyzozord> That's my point, only from the playing experience it feels like a lot has been changing over the last year or two. I've seen all kinds of new room types on the early levels
[02:26:46] *** Joins: freakazoid333 (~matt@35.136.210.185)
[02:27:08] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[02:27:40] <pyzozord> I've been playing it for years and nothing ever changed really but last two years I see new stuff every time I compile new version
[02:27:48] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[02:28:04] <pyzozord> Well to be honest I never went past level 10 or so. So I never really seen much of the game really
[02:28:14] *** Joins: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net)
[02:28:59] <CoderGuy> what I learned from this guys video, "what's the point of a car if you just drive it into the ocean?"
[02:29:27] <pyzozord> CoderGuy: that's his big point I told you to ignore :P
[02:29:41] <pyzozord> you can choose to agree with it, but that's not why I shared the video with you
[02:29:48] <CoderGuy> "we think cars are used for driving on the road, but when you drive it into the ocean do we really need cars? horses tend to avoid driving into the ocean, we should use horses"
[02:29:54] *** Quits: xyz111 (~Thunderbi@5751a772.skybroadband.com) (Quit: xyz111)
[02:29:56] <[itchyjunk]> class WhatILearnedFromThisGuy inherets WhatILearnedFromSomeGuy () {}
[02:30:37] <CoderGuy> "have you ever been to a parking lot, how hard is it really to find your car, we think we solved this problem of getting from one location to the next but we spend more time finding our car in a parking lot than we do on the road"
[02:30:47] *** Joins: webnet4 (~0x100@32.211.211.39)
[02:30:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:31:02] <CoderGuy> "just walk, it's easier and you don't have to find your car, we walked for thousands of years"
[02:31:06] *** Joins: nekobyte (~based@user/nekobit)
[02:31:06] <pyzozord> CoderGuy: wheter oop is good or bad is the same argument as are tabs better than spaces. It's a mute point. People have their preferences.
[02:32:09] <webnet4> is there an agreed upon definition of OOP?
[02:32:16] <pyzozord> I'm gonna repeat last time: I've shared this video to help you understand that there are many ways to approach this subject and maybe tease some other concepts you could go and learn more about. Not to convince you OOP is good or bad
[02:32:23] <vdamewood> webnet4: Nope.
[02:32:24] <CoderGuy> Roads create traffic, why not just have 1 road that goes from Point A to Point B, it's so much easier than having roads with options that create traffic
[02:32:25] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:32:41] *** Joins: mickey (~user@user/mickey)
[02:32:42] <vdamewood> And yeah, whether OOP is good or not depends heavily on what OOP is.
[02:33:04] <CoderGuy> awww thx pyzozord I appreciate you showing me that my ideas can get worse lol
[02:33:35] <pyzozord> CoderGuy: my tabs are better than your spaces
[02:33:45] <CoderGuy> lol
[02:33:50] <CoderGuy> I use tabs XD
[02:34:09] <pyzozord> Ok I take it as lesson learned, next! :P
[02:34:40] <CoderGuy> btw, I thought tabs were better cuz it's just press tab, and I had a friend who insisted spaces were better, then I looked at how they even use spaces, they convert there tabs to spaces XD
[02:35:50] <[itchyjunk]> that's what python recommends no?
[02:35:56] <[itchyjunk]> four space = 1 tab
[02:36:00] <[itchyjunk]> or something
[02:36:23] <webnet4> spaces are better because they don't have alternate sizes depending on some persons mood
[02:36:27] <vdamewood> There are two reasons I prefer tabs over spaces. 1: tabs only take up one character. 2: tabe can be adjusted in your editor to be as wide or narrow as you want.
[02:36:53] <CoderGuy> agreed vdamewood 
[02:36:55] <[itchyjunk]> i only use newlines
[02:37:29] <rxndxs> tabs are good until you start aligning code with them, as long as you use spaces for that is all good
[02:38:34] <CoderGuy> 38:27 is where this guy officially loses me
[02:39:01] <CoderGuy> "yeah instead of making each part of your function a structured name of what it is doing, just show me a high level documetnation where you comment on what is happening" XD
[02:39:13] *** Joins: freakazoid343 (~matt@35.136.210.185)
[02:40:53] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[02:41:07] <vdamewood> we should alternate tabs and spaces. /s
[02:41:16] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[02:41:34] <vdamewood> [itchyjunk]: By the way, yeah, 4 tabs for python.
[02:41:39] <vdamewood> spaces*
[02:41:45] *** Quits: freakazoid333 (~matt@35.136.210.185) (Ping timeout: 248 seconds)
[02:41:49] <pyzozord> There is a programming language called Whitespace https://en.wikipedia.org/wiki/Whitespace_(programming_language)
[02:41:50] <bayaz> Title: Whitespace (programming language) - Wikipedia 
[02:42:08] <cis> pyzozord: I wrote a toy interpreter for that for fun
[02:42:27] <pyzozord> heh, that's cool
[02:42:36] *** Joins: arcatech (~arcatech@user/arcatech)
[02:42:41] <cis> the spaces vs tabs debate was settled, btw: https://stackoverflow.blog/2017/06/15/developers-use-spaces-make-money-use-tabs/
[02:43:04] <pulse> correlation != causation
[02:43:27] <pyzozord> mute point
[02:43:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:43:47] <pulse> you can correlate consumption of walnuts to the number of Olympic gold winners who break their leg
[02:43:49] <pyzozord> I like both :P
[02:43:50] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 250 seconds)
[02:44:16] <jinsun> there is difference between what is pressed and what goes in the file, the correct answer is to press tab but make it insert 4 spaces in the file
[02:44:28] <pulse> no
[02:44:33] <pulse> that just wastes space
[02:44:43] <cis> jinsun: yes, but two spaces obviously, not four
[02:44:45] <pulse> tab is literally a character intended for alignment
[02:44:55] * pulse is a tabist
[02:45:07] <cis> pulse: then why can't it be used to line up things that are smaller than the tab width?
[02:45:10] *** Joins: freakazoid343 (~matt@35.136.210.185)
[02:45:25] <CoderGuy> I got bored and scrolled down, the best part of this video was this guys comment from Fred tingey 1 year ago "I once had 85 lines of procedural code replaced with a single line of (damn clever) SQL. Being a programmer is a bit like being a doctor. You can’t solve every problem with a scalpel. You can’t solve every problem with antibiotics. Every person is a bit different. You need years of training and a wide variety of diagnostic as well
[02:45:25] <CoderGuy>  as preventative as well as curative tools, medicines, machines and hands on experience - book learning alone will not cut it. "
[02:45:34] <rxndxs> using spaces for saving file size seems like a non-issue :p
[02:45:39] <pulse> cis, aligning things isn't important :p
[02:45:41] <rxndxs> s/spaces/tabs/
[02:46:02] <pulse> rxndxs, https://www.youtube.com/watch?v=SsoOG6ZeyUI
[02:46:03] <bayaz> Title: Tabs versus Spaces 
[02:46:07] <CoderGuy> needless to say he got 500 likes :D
[02:46:21] <jinsun> with tabs you will inevitablly have to mix spaces and tabs in a line to align things, which is just ugly
[02:47:08] <cis> pulse: I agree, and I'm only joking anyway (but I do prefer spaces)
[02:47:25] <pulse> i prefer tabs
[02:47:33] <[itchyjunk]> i only use /r in my codes
[02:47:42] <[itchyjunk]> no space, no new lines, no tab
[02:47:45] <cis> manually aligning code is like bonsai gardening for programming - basically pointless, but aesthetically satisfying
[02:47:53] <rxndxs> i have to say, engaging in tabs/spaces debate is at least more interesting than my classes i should be attending
[02:47:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:48:10] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 250 seconds)
[02:48:14] <pulse> if you HAVE to align, then just use spaces for alignment
[02:48:16] <pulse> but why would you do that
[02:48:16] <[itchyjunk]> i dont think bonsai is pointless
[02:48:18] <pulse> i never do that
[02:48:19] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:48:22] <pulse> just misalign
[02:48:24] <pulse> who cares
[02:48:25] <pulse> :D
[02:48:48] <pulse> rxndxs, next on schedule is vim vs emacs, and we have a windows vs linux booked for later tonight
[02:48:53] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:48:53] <cis> yeah, I use auto-formatters wherever possible since I don't want to spend the time doing any alignment, or having pointless debates over style in pull requests
[02:49:05] *** Joins: webnet4 (~0x100@32.211.211.39)
[02:49:19] *** Joins: ajmea97 (~jamea@189.231.74.254)
[02:49:27] <[itchyjunk]> pull requests
[02:49:30] <jinsun> yeah me too, and the auto-formatters prefer spaces too
[02:49:32] <[itchyjunk]> man i should leran git some day
[02:49:44] <rxndxs> pulse: ooo niiice
[02:50:21] <pulse> also we have a dark mode vs light mode thing scheduled but dark mode always wins so it's a non-issue at this point
[02:50:40] <[itchyjunk]> oh i prefer dark themes
[02:50:43] <pulse> (i still think light mode is much better but it's hard to argue against 1000 screaming voices)
[02:50:43] <[itchyjunk]> in browser and such
[02:50:44] <pyzozord> cis: from my experience those discussions are rarely about the style. More likely they are about establishing dominance
[02:50:45] <[itchyjunk]> and terminal
[02:50:52] <rxndxs> pulse: btw the comments are pretty funny "Instead of github, I read code aloud into a microphone and release it as an audiobook"
[02:50:55] <cis> pulse: I've got my OS set to cycle between light/dark depending on time of day :D
[02:51:01] <cis> pyzozord: yes, that's true
[02:51:03] *** Quits: jess (~jess@libera/staff/jess) ()
[02:51:11] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[02:51:11] <pulse> uh, oh :p
[02:51:12] <[itchyjunk]> lol
[02:52:14] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 258 seconds)
[02:52:54] <rxndxs> cis: configure it to change the color palette as a function of time for the full experience
[02:53:13] <cis> rxndxs: now you're talkin
[02:53:23] <cis> and adjust for holidays and important events
[02:54:01] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 248 seconds)
[02:54:05] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b)
[02:55:06] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[02:55:13] <rxndxs> cis: now im feeling like installing linux again just to mess with the graphics lol
[02:55:27] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[02:55:40] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 240 seconds)
[02:56:50] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[02:57:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:58:49] *** Quits: independent56 (~independe@185.50.0.80) (Ping timeout: 252 seconds)
[03:05:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:07:13] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:07:42] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Read error: Connection reset by peer)
[03:07:53] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[03:08:18] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:08:31] *** Joins: webnet4 (~0x100@32.211.211.39)
[03:11:38] *** audio is now known as audiobirb
[03:14:14] *** Quits: Inari (~Pinkishu@p4fe7eb52.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:14:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:14:33] *** Quits: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu) (Remote host closed the connection)
[03:16:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:20:31] *** Quits: geekcowboy_ (~geekcowbo@d-207-255-197-36.mdde.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[03:20:43] *** Joins: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu)
[03:22:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:22:26] *** Quits: Akuli (~Akuli@82-203-162-19.bb.dnainternet.fi) (Quit: Leaving)
[03:22:31] <Izem> As I understand it m$ wants apps to be developed in c# ?
[03:22:50] <Izem> I am talking about winui or uwp
[03:24:41] <Izem> How do you guys look for software as a user?
[03:24:57] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[03:25:39] <jinsun> c# or c++, but no one wants to use c++, so c# it isobviously
[03:28:50] <Izem> yeah guess I was going to have to learn c# eventually
[03:28:57] <Izem> seems really close to java
[03:30:22] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[03:30:30] <jinsun> it is much better
[03:30:39] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[03:30:53] <jinsun> once I got the taste of linq and extension methods, I want something like that everywhere
[03:31:28] <Izem> ok I think I have a fuzzy picture of windows development now
[03:31:51] <Izem> jinsun: have you ever tried to publish to the windows store?
[03:32:13] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:32:25] *** Joins: flynn (~mcbloch@user/flynn)
[03:32:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:33:09] *** Quits: Shashin (Shashin@gateway/vpn/protonvpn/shashin) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:33:27] <jinsun> nope, I just used it at work, where just shipping the exe files was enough
[03:33:38] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute!!!!)
[03:33:44] <Izem> oh ok
[03:33:51] *** Joins: Shashin (Shashin@gateway/vpn/protonvpn/shashin)
[03:33:56] *** Joins: nekobyte (~based@user/nekobit)
[03:34:02] <Izem> this diagram makes it seem like you can use uwp for systems stuff https://ibb.co/FVLFhFK
[03:34:03] <bayaz> Title: Capture 
[03:35:00] <Izem> I think that is also the point of C++winrt, to make a open ended arrow between win32 and uwp since uwp seems to be csharp stuff
[03:35:10] <jinsun> and I have not used uwp at all, just C#
[03:36:56] <Izem> interestingly enough rust for windows makes use of win32
[03:37:50] <Izem> but also seems to have the C++winrt style use of uwp apis
[03:38:02] *** Joins: Auctus (~auctus@user/auctus)
[03:38:48] <Izem> so much for COM :P
[03:38:52] *** Quits: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu) (Remote host closed the connection)
[03:39:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:39:24] <Izem> what about the web, is a web app one that uses a popular framework like react or angular?
[03:39:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:40:16] <Izem> or would you say a web app is just a web site?
[03:40:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:41:33] <vdamewood> A web app is an application that uses a web browser for its interface.
[03:42:10] <vdamewood> It has nothing to do with using a framework, or with whether it uses a web site (it could use multiple sites to do it's job, look at how CDN's work.)
[03:42:23] <vdamewood> s/it's/its/
[03:43:30] <Izem> oh ok
[03:45:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:4ae4) (Ping timeout: 240 seconds)
[03:47:48] <Izem> most software users would be media, academic, fiance or engineering? I assume casual software is mostly games?
[03:48:32] <vdamewood> Izem: Does that list exclude any field?
[03:48:44] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:49:14] <Izem> well when I think about it, no lol
[03:49:37] <cis> software users are generally human, but there are many exceptions
[03:50:07] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:50:31] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[03:51:09] <vdamewood> Oh, and Microsoft has kind of been very inconsistent with how they're suggesting people write GUI Windows apps. Sometimes they push UWP and WPF, sometimes they act as if Win32 is just as viable an option.
[03:51:18] <Izem> also software as a service is obviously a popular model (which makes sense if you own the infra the service is running on)
[03:52:05] <Izem> basically that model makes the software an aside even though it is critical for the service to be used
[03:52:20] <Izem> vdamewood: ah 
[03:52:43] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[03:52:45] <vdamewood> I should probably try writing a new Windows GUI app to see what's up.
[03:52:50] <cis> Izem: most saas is running on rented AWS/GCP/Azure
[03:53:14] <pulse> vdamewood, don't make it too gooey
[03:53:23] <vdamewood> Though, Qt is a viable option for writing Windows GUI software.
[03:53:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com) (Read error: Connection reset by peer)
[03:53:38] *** Joins: zaher_ (~zaher@37.48.180.77)
[03:53:39] * vdamewood melts the code
[03:53:44] <Izem> cis: yes technically :)
[03:54:01] <pulse> brr, qt
[03:54:02] <cis> the really big shops might still own their hardware
[03:54:14] <vdamewood> pulse: brr?
[03:54:19] <pulse> the mere mention conjures up images of medieval torture devices
[03:55:20] *** Quits: zaher (~zaher@37.48.185.228) (Ping timeout: 250 seconds)
[03:55:28] <vdamewood> pulse: FWIW, 'brr' in English has connotations of cold.
[03:55:51] <vdamewood> eg brr, It's -5C out.
[03:56:29] <Izem> do you think you can sell software without it being proprietary?
[03:57:07] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[03:57:27] <vdamewood> Not really. Most places that make money off open-source software sell related services.
[03:57:31] <Izem> seems like that would require a system for the user and the seller to negotiate pay
[03:57:46] <Izem> hmm
[03:58:18] <vdamewood> Red Hat, for example, sells subscriptions to RHEL, bu those subscriptions come with tech support phone numbers to call and email addresses to write to.
[03:58:20] <pulse> vdamewood, how about "sending shivers down your spine"? :p
[03:58:50] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[03:58:53] <vdamewood> pulse: Not really.
[03:59:01] <cis> it's also the sound that money printers make
[03:59:05] <pulse> hmm
[03:59:19] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:59:25] <pulse> money counters sound nice
[03:59:29] <pulse> flrrrrffrrrr
[03:59:45] <vdamewood> pulse: The cocaine must flow.
[04:00:02] <pulse> hmm, what was that movie again
[04:00:05] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[04:00:06] *** Joins: webnet4 (~0x100@32.211.211.39)
[04:00:13] <vdamewood> Movie?
[04:00:18] <pulse> with the cocaine dude
[04:00:23] <pyzozord> Dune
[04:00:26] <pulse> lol
[04:00:41] <vdamewood> Umm, that describes most movies from the 80s.
[04:00:42] <pyzozord> ah with cocaine, don't know, Pulp Fiction?
[04:00:53] <vdamewood> and early 90s.
[04:00:56] <pulse> ah, Blow
[04:01:15] <pyzozord> or yeah Scarface
[04:01:27] <vdamewood> I need to maintain the real-life Tomogachi that is me.
[04:01:37] <pulse> i thought it was Tamagochi
[04:01:44] <vdamewood> It is.
[04:02:06] <vdamewood> See, I really need maintenance right now.
[04:02:36] <vdamewood> Now, where did I put my blood-letting device?
[04:03:13] <Izem> would you say games are the #1 software that is sold and is proprietary?
[04:03:20] <pulse> lol no Izem 
[04:03:23] <pulse> they're big but there's bigger
[04:03:29] <webnet4> your package of medicinal leeches has not arrived yet
[04:03:35] <pulse> and games are an umbrella term anyway
[04:03:44] <Izem> it seems they sell really well, I don't hear about folks pirating it either
[04:03:44] <pulse> too vague to rigorously analyze
[04:03:51] <pyzozord> Izem: depends how you count
[04:03:54] <pulse> yes, they sell more than Hollywood
[04:04:02] <cis> games are probably at the top of the list
[04:04:07] <pulse> but if you take the umbrella of "enterprise software", it makes like 10x of that
[04:04:10] <pulse> or even more
[04:04:12] <cis> if you're going by install count
[04:04:28] <Izem> pulse those are sold to a lower amount of clients though
[04:04:32] <cis> if you're going by revenue, then maybe it's something else
[04:04:43] <Izem> cis: install count
[04:04:46] <pulse> Izem, for enormous sums of money
[04:04:57] <pyzozord> I guess OSes might be bigger than games. You guy an os every time you buy an iPhone, and windowses etc
[04:04:59] <Izem> yeah I'm not trying to think about that
[04:05:07] <pulse> server enterprise alone probably beats games
[04:05:07] <pyzozord> s/guy/buy/
[04:05:26] <pulse> i don't actually know though, could be i'm wrong
[04:05:28] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:05:30] <pulse> but i'm probably not
[04:05:35] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:42] *** Joins: webnet4 (~0x100@32.211.211.39)
[04:05:46] <pulse> or how about military software
[04:05:50] <pulse> untold sums of money spin there
[04:05:59] <Izem> just wondered, what about folks that want to sell software in the same fashion but not make games
[04:06:05] <pyzozord> regarding enterpise software honestly I havent
[04:06:07] <vdamewood> webnet4: Naw, not leeches.Little pokie pieces of metal I stab my fingers with.
[04:06:10] <pulse> Izem, check the price of Maya3D :D
[04:06:28] <pyzozord> seen much enterprise software in companies I worked with. The usually use as much open source as they can
[04:06:29] <pulse> there's definitely a lot of money there but it's probably harder to start
[04:06:32] <pulse> unless you go into mobile
[04:06:36] <[itchyjunk]> Cheaper than Maya4D
[04:06:38] <pulse> it's easy enough to make a killer mobile app
[04:06:53] <webnet4> damn thats metal
[04:06:54] * vdamewood kills pulse's mobile app.
[04:06:59] <pulse> (!)
[04:07:30] <Izem> cause I am thinking, ok you want to make a really good calculator or a roladex, I get the impression you might aswell release it for free
[04:07:49] <Izem> but I guess that is called doing market research?
[04:08:14] <vdamewood> Holy Fuck. 1700 USD / year?
[04:08:22] <Izem> o.O
[04:08:41] <pulse> that's peanuts vdamewood 
[04:08:47] <pulse> (for enterprise)
[04:08:49] <vdamewood> Izem: Cost of Audodesk Maya.
[04:09:03] <Izem> oof
[04:09:09] <pulse> but yeah for end user that's ... way too much
[04:09:49] <pulse> imagine how many cartoon studios use maya though
[04:09:49] <vdamewood> If you spend $50,000 / year on software to earn $3,000,000 / year on products you produce, it's going to be worth it.
[04:09:49] <Izem> yeah I guess they suspect all there clients are part of some group
[04:09:56] <Izem> like a school or studio
[04:09:58] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:10:13] <vdamewood> Indie devs get Blen der
[04:10:15] <pulse> autodesk is swimming in gold from that alone, and then you add autocad to that
[04:10:25] <pulse> imagine how many things in our civilization desperately depend on autocad
[04:10:39] <vdamewood> I kind of wonder why they still maintain 3DS Max and Maya separately.
[04:10:45] <Izem> I guess they must be pushing a lot of updates?
[04:11:01] <Izem> or support etc? cause that's a lot to be running on my own pc
[04:11:12] <Izem> or is there like a cloud off load xD
[04:11:17] <pyzozord> I'd bet that cad software makes way more money, it's required in real life engineering not just games and movies
[04:11:19] <vdamewood> I think they do quarterly updates or something like that.
[04:11:29] <Izem> oh ok
[04:11:46] <pulse> cad makes more money by virtue of being in wide use in anything from road design to fine mechanics
[04:11:53] <Izem> yeah
[04:11:54] <pulse> it's like, the most used industrial software i think
[04:12:15] <pulse> there's no good alternatives so everyone just uses autocad
[04:12:40] <Izem> my fellow intern was doing a nice job with freecad
[04:12:42] <vdamewood> Even if there were good alternatives, it's basically an industry standard now.
[04:12:48] <pulse> your sewage systems, your electric grid, your road network, your bus stops, the cogs in your car, etc etc etc. all made in autocad probably
[04:13:07] <Izem> yeah it has lisp in it apparantly
[04:13:13] <pulse> it has everything
[04:13:19] <pyzozord> Enterprise software in that sense must make waay more than games. Not SMB server software. Really big software. Logistics for global corporations and those kinds of "industrial" software
[04:13:31] <pulse> my first job involved autocad plugins, they were written in C++
[04:13:42] <Izem> cool
[04:13:43] <pulse> pyzozord, i bet it makes more, yes
[04:14:55] *** Joins: Guest25 (~Guest25@2607:fea8:1e5f:8df0:45c5:fbb4:7a1a:44c0)
[04:15:09] <pulse> heck the shipping industry software alone probably makes way more
[04:15:18] <pulse> and that's without all the software that goes into actually making ships
[04:15:22] <pyzozord> writing a plugin for cad seems like very cool idea for a business
[04:15:24] <pulse> just moving them around
[04:15:28] <Izem> yeah telemetry and logistics is pretty crazy
[04:15:28] <pulse> pyzozord, oh, don't
[04:15:29] <pulse> it's hell
[04:15:37] <pulse> autocad is literally hell
[04:15:45] <pulse> god bless those engineers that work with it every day
[04:16:10] <pulse> or shiva in my case
[04:16:12] <pyzozord> yeah I can imagine it's the complexity of like 10 linuxes together
[04:16:25] <pulse> meh, i remember when i pressed F1 in our autocad + like 10 inhouse plugins
[04:16:31] <pulse> it froze for like 5 minutes before the help finally popped up
[04:16:51] <pulse> it's just an unbelievably complex piece of software, and then you add more complexity on top of that
[04:16:54] <vdamewood> Well, crap. My system's clock is set wrong.
[04:16:57] <pulse> and then you're supposed to maintain that mess
[04:17:31] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute!!!!)
[04:17:46] <Guest25> So I tried to include this library: https://github.com/istareatscreens/ToJSON/blob/master/ToJSON.h in multiple class files in C++ and I am getting a ton of these errors: "multiple definitions of 'ToJSON::ToJSON::insert etc.."
[04:17:48] *** Joins: nekobyte (~based@user/nekobit)
[04:17:48] <bayaz> Title: ToJSON/ToJSON.h at master · istareatscreens/ToJSON 
[04:18:36] <Guest25> Anyone know how to fix this error, sorry I am no means a pro at C++ I put the ifndef guards so shouldn't it only copy the code once?
[04:18:38] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[04:19:05] *** Joins: nekobyte (~based@user/nekobit)
[04:19:20] <vdamewood> Oh, wait, no it's not.
[04:19:49] <Guest25> the build system is also automated because I am working in some weird simulation software so I can't really touch it
[04:20:16] <Izem> they did talk about cad in the acm queue recently https://queue.acm.org/detail.cfm?id=3469844
[04:21:31] <Izem> pulse: your new startup "The hardware industry is desperate for a modern way to do mechanical design. "
[04:21:51] <pulse> no thanks, think i'll stick to games :p
[04:21:58] <Izem> lol
[04:22:10] <pulse> games are very zen. the only software you can write that literally doesn't have any purpose to it
[04:22:12] <pulse> i respect that
[04:22:17] <Izem> not ready to make something modern but have to support legacy formats and constraints?
[04:22:34] <pulse> it's too much work and everyone would still use autocad anyway :p
[04:22:43] <Izem> lol
[04:22:45] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[04:23:00] <pyzozord> Izem: remind me what is queue about? Cacm is like a general one for programmers, right?
[04:23:05] <Izem> ok guess that's on the hardware people then lol
[04:23:09] *** Joins: nekobyte (~based@user/nekobit)
[04:23:22] <Izem> these magazines are pretty much the same
[04:23:34] <Izem> queue is shorter and pretty general
[04:24:07] <Izem> I need to reread the cacm one about vpns, when I learned what that was it blew my mind
[04:25:19] <Izem> mdns blew my mind too, I am sort of getting ideas for networking based apps
[04:25:53] <pyzozord> need to get into habbit of reading acm more than lobste.rs
[04:26:14] <Izem> lobste.rs, you mean product ads and rants? :P
[04:26:23] <Izem> nice search tool though
[04:26:47] *** Joins: Fangs (sid141280@id-141280.stonehaven.irccloud.com)
[04:26:55] <pyzozord> lobste.rs is actually way better than the orange site
[04:27:18] <Izem> you might like this https://devurls.com/
[04:27:19] <bayaz> Title: DevURLs – A neat developer news aggregator 
[04:27:29] <Izem> is the orange site even about hacking anymore? lol
[04:27:53] <Izem> I don't really want to get stuck in that pool either
[04:28:03] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute is yes?)
[04:28:51] <pyzozord> oh nice, but it shows things in different order, I'd prefer it to just show stuff in the same order the original site does
[04:29:08] <Izem> it's like sort by new? not sure
[04:29:25] <Izem> there's like 6 or 7 things in the ***urls series
[04:29:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:30:08] <Izem> see the hamburger menu
[04:30:10] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[04:30:14] <pyzozord> yeah seems like it just shows newest at the top, the og sites usually have some kind of rencency/voting rating system
[04:30:26] *** Quits: elnavigator (~elnavigat@105.196.151.191) (Ping timeout: 250 seconds)
[04:30:28] <Izem> but don't remember not get get stuck in the pool :P
[04:31:11] <Izem> no one using voting properly anyways
[04:31:18] <Izem> s/using/uses/
[04:31:57] <Izem> website seems made nicely though
[04:32:15] <Izem> then again I'm not sure what design criteria for a website is
[04:32:20] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:32:20] *** Joins: Thedarkb (~Thedarkb@185.69.145.14)
[04:34:30] <pyzozord> Izem: how do you get cacm? How much are you paying?
[04:35:16] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:35:37] *** Joins: webnet4 (~0x100@32.211.211.39)
[04:35:39] <Izem> nope
[04:35:42] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[04:35:50] <Izem> I only read cacm and queue sometimes
[04:36:06] *** Joins: molt (~molt@79.140.150.21)
[04:36:55] *** zaher_ is now known as zaher
[04:37:31] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[04:37:56] *** Joins: digilink (~digilink@user/digilink)
[04:39:06] <pyzozord> Looks like certain articles are available for free, but not all. https://dl.acm.org/toc/cacm/2021/64/8 
[04:39:08] <bayaz> Title: CACM: Vol 64, No 8 
[04:39:46] <vdamewood> Last time I got CACM it was part of my ACM membership.
[04:41:40] <Guest25> Figured it out just needed to declare all functions inline
[04:41:49] <pyzozord> Yeah, looks like CACM Proffessional Membership is $99. Or Subscription to a Publication $160.
[04:43:22] <pyzozord> Well I'll read the free articles for a while and see how I like that
[04:43:38] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:43:52] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[04:43:56] *** Joins: JanC (~janc@user/janc)
[04:45:08] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[04:45:31] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:46:17] <pyzozord> Actually I've been wanting to subscribe to some physical magazine. It would be cool to turn some pages IRL :P
[04:46:29] <pyzozord> I'll think about that.
[04:47:17] *** Quits: Izem (~Izem@65.95.173.5) (Quit: Going offline, see ya! (www.adiirc.com))
[04:47:20] *** Quits: snake (~snake@user/snake) (Remote host closed the connection)
[04:47:34] *** Joins: snake (~snake@user/snake)
[04:50:06] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:50:43] *** Joins: Lyn (~Lyn@user/law)
[04:51:22] *** Joins: JanC (~janc@user/janc)
[04:52:06] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 250 seconds)
[04:55:09] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[04:55:09] <vdamewood> I miss GamePro.
[04:55:34] <Lyn> googling tells me GitKraken is the most popular Git GUI, but do people just pay for it then? or is the free version typically good enough for people
[04:55:45] <vdamewood> And Nintendo Power.
[04:58:16] <vdamewood> Lyn: Most coders I know don't use a GUI at all.
[04:59:51] *** Quits: DefiantN (~DefiantN@user/defiantn) (Remote host closed the connection)
[05:00:17] <cis> vdamewood: I miss gamefaqs when every walkthrough was a monospaced text file
[05:01:56] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:02:20] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[05:03:22] <vdamewood> cis: I mis gamefaqs when it was gamefaqs.
[05:03:28] <vdamewood> miss*
[05:03:48] <cis> I haven't been there in forever... must be entirely different now
[05:04:14] <vdamewood> Well, now it's gamefaqs.gamespot.com
[05:05:14] <cis> hey, you can still find those old monospaced text walkthroughs!
[05:06:17] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 248 seconds)
[05:06:46] <RenAdjest> Those text walkthroughs is still superior than today youtube walkthroughs.
[05:10:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 268 seconds)
[05:12:14] *** Joins: digilink (~digilink@user/digilink)
[05:14:07] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 252 seconds)
[05:14:20] *** Joins: Samian (~Sami@163.114.130.5)
[05:14:37] *** Quits: Samian (~Sami@163.114.130.5) (Client Quit)
[05:14:40] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[05:15:05] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:15:11] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[05:18:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:18:47] *** Quits: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx) (Quit: leaving)
[05:19:02] *** Joins: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx)
[05:22:08] <rxndxs> hey, if i wanted to put some C projects in my resume to look like i actually have experience, what sort of projects would you recommend ? I'm looking for something to work on of actual value
[05:22:12] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[05:22:24] <rxndxs> (note: college resume, no work experience)
[05:22:36] *** Joins: molt (~molt@79.140.150.21)
[05:23:41] <cis> rxndxs: you could contribute to open source projects
[05:24:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[05:24:48] <rxndxs> can i put that in my resume ? i'd love to get more into that, i've had some PR's acepted before
[05:25:10] <cis> you can put anything you want on your resume
[05:25:40] *** Joins: nekobyte (~cat@user/nekobit)
[05:26:28] *** Joins: JavaBean (~JavaBean@user/javabean)
[05:27:08] <rxndxs> well i mean i could just put in that i have 300 hours in skyrim but maybe they wouldn't be that interested in that, so i'm kinda looking into the best way of spending my time and getting something that could get me a job
[05:27:45] <cis> well, if you're a contributor to open source projects, you could put that
[05:28:00] <cis> and then they might ask you to talk about that experience
[05:28:45] *** Quits: juliaEnv (~juliaEnv@ip-86-49-242-28.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[05:28:48] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[05:28:51] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:29:04] <rxndxs> cool, and what about my own projects? like say, i create my own simple shell, or some other utility program, do they care about that sort of thing ?
[05:29:45] <cis> some do - it's a good demonstration of your ability and interest
[05:31:17] <rxndxs> hopefully i can do something to be proud of (:
[05:31:39] <rxndxs> i actually have a planned internship next year, so if all goes well that should be a good start
[05:34:53] <vdamewood> Food!
[05:36:43] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:37:52] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:39:14] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[05:40:49] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[05:42:58] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[05:43:16] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[05:44:05] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Remote host closed the connection)
[05:45:39] *** Quits: ajmea97 (~jamea@189.231.74.254) (Read error: Connection reset by peer)
[05:46:50] *** Joins: ajmea97 (~jamea@189.231.74.254)
[05:49:48] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:51:40] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[05:52:24] <rxndxs> i think i'm about to go down the emacs rabbit hole, wish me luck
[05:52:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[05:53:46] <vdamewood> rxndxs: Should I put you out of your misery?
[05:54:23] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:54:28] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[05:54:42] *** Joins: jazzy (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02)
[05:54:45] <vdamewood> Okay, Pandora, what are you on? How the hell is Fort Minor similar to all American Rejects, Fall Out Boy, and Panic! At the Disco?
[05:55:18] <rxndxs> vdamewood: perhaps, vim was doing just fine, until i wanted to find all references of a symbol and it just failed me
[05:56:10] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 240 seconds)
[05:56:51] *** Joins: Teacup (~teacup@user/teacup)
[05:57:44] <beaky> nice i like emacs
[05:57:57] * vdamewood gives beaky an emac.
[05:58:55] *** Joins: DefiantN (~DefiantN@user/defiantn)
[05:59:31] <rxndxs> whaaat !! i always thought emacs was a terminal app
[06:00:03] <vdamewood> was? Sure, a long time ago.
[06:00:27] <vdamewood> And now It's playing Linkin Park.
[06:00:34] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 250 seconds)
[06:00:39] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[06:00:40] <[itchyjunk]> I am interested in emacs
[06:00:45] <[itchyjunk]> but too intimetading
[06:00:46] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:00:50] <[itchyjunk]> i'll stay away from it
[06:01:09] <rxndxs> excuse my bad use of the english grammar, i meant was as in right before i installed it lol
[06:01:22] <vdamewood> emacs doesn't even come with my OS anymore.
[06:01:52] <vdamewood> Speaking of bad use of grammer, s/the english/English/
[06:01:54] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[06:02:28] <vdamewood> rxndxs: Anyway, serious answer, yes, It's a terminal app, and also a GUI app.
[06:02:39] <vdamewood> rxndxs:mHow did you install it?
[06:03:05] *** Joins: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net)
[06:03:36] <rxndxs> vdamewood: # apt install emacs
[06:03:42] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[06:03:55] <jeaye> rxndxs: LSP is the way to go with vim and IDE-like features, including finding references.
[06:04:05] <vdamewood> rxndxs: Which distro?
[06:04:07] *** Joins: molt (~molt@79.140.150.21)
[06:04:18] <jeaye> NeoVim has LSP support built-in. Vim has plenty of LSP plugins which provide support.
[06:04:42] *** Quits: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[06:04:42] *** Joins: death916 (AdiIRC@user/death916)
[06:04:45] <rxndxs> jeaye: that's what i had, coc + ccls, but for some reason the references command just freezes (i think it may be file size)
[06:05:09] <rxndxs> vdamewood: wsl -> ubuntu (i know, i know ...)
[06:05:46] <jeaye> rxndxs: Sounds more like a ccls issue than a vim issue.
[06:06:04] <jeaye> Emacs using LSP + ccls may even have the same issue. Wouldn't that be a shame? :P
[06:06:54] <rxndxs> jeaye: damn you are convincing me to leave emacs alone
[06:07:28] <rxndxs> for some reason learning a whole new environment seemed to me like less work
[06:07:38] <jeaye> rxndxs: Just saying that jumping vim to emacs because of one plugin issue is a huge investment for something which is most likely much easier to fix or work around.
[06:08:52] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[06:08:55] <jeaye> Depends how invested you are in vim, but moving a well configured vim setup, with various plugins to emacs is a pretty big undertaking.
[06:09:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:09:19] <jeaye> rxndxs: Which lang are you using LSP with?
[06:09:50] <vdamewood> rxndxs: You know what?
[06:09:56] <jeaye> ccls does C/C++/ObjC
[06:10:12] <vdamewood> ObjC++?
[06:10:22] <jeaye> Not according to their docs.
[06:11:10] <vdamewood> Explicitly, or just no mention of it?
[06:11:12] <beaky> is lsp the future of ides
[06:11:19] *** Joins: Samian (~Sami@2620:10d:c091:480::1:ccaa)
[06:11:26] <vdamewood> Beware the ides of March.
[06:11:40] <jeaye> No mention.
[06:12:16] <vdamewood> Hmm... might actually support it then. No one uses Objective C++ for anything otther than glue code.
[06:12:54] <rxndxs> jeaye: oh wow, i was remapping the binding i had for goto definition, it actually works correctly *facepalm*
[06:13:15] * vdamewood gives rxndxs the PEBCAK award.
[06:13:34] <rxndxs> phew, another day i can go without learning emacs
[06:13:40] *** Quits: xff0x (~xff0x@2001:1a81:5207:3100:686a:e8fd:47a9:633d) (Ping timeout: 240 seconds)
[06:14:12] <jeaye> rxndxs :)
[06:14:25] <beaky> i like emacs but the syntax highlighting is very slow so i disable it
[06:14:52] <vdamewood> LSP doesn't cover things like build support and toolchain scripting, right?
[06:15:04] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[06:15:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[06:15:50] <rxndxs> i don't think so, you mean things like having cmake options tell it what to include and things like that ?
[06:15:52] *** Joins: xff0x (~xff0x@2001:1a81:523e:7200:987e:5abc:19e1:66f6)
[06:16:52] <vdamewood> rxndxs: Perhaps, but I was thinking more like actual builds ofthe project.
[06:17:04] <vdamewood> As in You go Project --> Build and it buidls the project.
[06:17:36] <vdamewood> On in VS Code: Terminal --> Run Build Task
[06:17:43] <vdamewood> s/On in/Or in/
[06:19:20] *** Joins: kmh (~kmh@p200300df5f365c009493f11912ec5635.dip0.t-ipconnect.de)
[06:20:07] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[06:20:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:21:17] <rxndxs> vdamewood: so like the build system ? i imagine it does not, man how much i hate build systems for c
[06:21:22] *** Quits: kmh_ (~kmh@p200300df5f08f1000d0a33b4e315afb6.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:21:29] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[06:21:38] <smallville7123> how should a view group handle multiple touch events?
[06:21:42] *** Joins: gggp__ (~gggp@li1772-101.members.linode.com)
[06:21:59] <vdamewood> rxndxs: CMake's pretty good, these days.
[06:22:58] <rxndxs> vdamewood: yea i have some experience with it, but the ecosystem as a whole is just a mixture of systems that never work well together
[06:23:31] <rxndxs> at least is not like js with 100 bundlers, 100 transpilers, 100 frameworks, 100 utilities, etc, etc ...
[06:24:14] <arahael> pyzozord: congrats on compiling nethack :)  i play evil, so lava is pretty common! i guess vanilla has added it!
[06:24:26] <beaky> woah nethack now has lava?
[06:24:31] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:24:44] <arahael> pyzozord: i'd normally be online at that time you mentioned me but i... slept in today!
[06:25:15] <arahael> beaky: yes. and evil has forges, which gives you a chance of repairing metal items (particularly armour and weapons).
[06:25:18] *** Joins: brabrax (~brabrax@user/brabrax)
[06:25:19] *** Quits: Shashin (Shashin@gateway/vpn/protonvpn/shashin) (Remote host closed the connection)
[06:26:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:27:42] <beaky> nice soon i will be immune to rust monsters
[06:29:05] *** Joins: Atque (~Atque@user/atque)
[06:30:22] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:30:30] <rxndxs> jeaye: huh, apparently is not completely fixed, reference navigation still freezes for some reason :(
[06:30:49] <rxndxs> might have to try clangd instead
[06:32:10] <arahael> beaky: yeah, but the flipside is that in evil, a lot more affects your armour.
[06:32:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:34:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[06:35:07] *** Quits: psb (sid500598@user/psb) (Ping timeout: 245 seconds)
[06:36:30] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Ping timeout: 256 seconds)
[06:36:30] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[06:36:30] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 252 seconds)
[06:36:30] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[06:36:36] *** Joins: LiftLeft (~LiftLeft@172.83.47.105)
[06:36:50] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[06:37:00] *** Joins: psb (sid500598@user/psb)
[06:37:10] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[06:37:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:38:34] *** Joins: mickey5 (~user@user/mickey)
[06:39:06] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[06:39:06] *** mickey5 is now known as mickey
[06:42:18] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[06:43:32] <beaky> what are some common antipatterns in documentation and how to fix them i think 99% of manpages are guilty of them https://jvns.ca/blog/confusing-explanations/
[06:43:33] <bayaz> Title: Patterns in confusing explanations 
[06:44:18] <computerquip> Boost is definitely guilty in unrealistic examples.
[06:44:23] <beaky> lol
[06:44:30] <computerquip> Half the examples are some fringe bullshit that you'd never do
[06:44:56] <beaky> what is the most egregious unrealistic example in boost
[06:44:58] <InPhase> You found boost documentation with examples?
[06:45:06] <computerquip> Like all of the Spirit examples.
[06:45:22] <computerquip> If you can find them, they're fairly hard to find
[06:47:26] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[06:48:29] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:49:21] <oldlaptop> beaky: goodness, the "instead" for "pattern 10" is shady
[06:49:39] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[06:50:54] <oldlaptop> (in that quite a lot of C compilers, erm, /will/ let you use a function "before declaring its type", though fortunately it's less likely than it used to be)
[06:50:55] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 245 seconds)
[06:50:59] *** RenAdjest2 is now known as RenAdjest
[06:51:42] *** Quits: rifl (~user@user/rifl) (Ping timeout: 250 seconds)
[06:52:52] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[06:54:14] <beaky> yes i agree with the point of pattern 10 but i dont like the examples she picked (because the very next paragraph kinda substantiates the crucialness) and how in general using examples in C like that is very dangerous for the resaon you metnioned
[06:54:54] <beaky> 'it just works see heres an exampel of something compiling' 
[06:55:28] <beaky> or 'it doesnt compile on my system so c forbids it'
[06:55:36] *** Quits: zaher (~zaher@37.48.180.77) (Ping timeout: 250 seconds)
[06:57:13] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[06:57:27] <oldlaptop> it's definitely a lot less bad if (in context) it's somehow clear that we're all using C99 now and the compiler really does ban implicit declarations
[06:57:31] *** Quits: ajmea97 (~jamea@189.231.74.254) (Ping timeout: 252 seconds)
[06:58:22] <oldlaptop> and that would be a lot more likely if, oh, say, a certain popular compiler hadn't defaulted to C89-plus-enough-extensions-to-look-like-C99-only-subtly-incompatible for, what, a decade and a half after C99?
[06:59:16] <oldlaptop> it
[06:59:52] <oldlaptop> *it's all perfectly true *now*, but alas, C89 isn't really the two decades in change in the past that it ought to be
[07:00:01] <oldlaptop> *decades and change
[07:03:29] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:03:36] <computerquip> People still target C89 since not all compilers fully support C99 still
[07:03:50] <beaky> i think i remember where the pattern 3 'strained analogy' comes from a cartoon explaining how kafka and event streams works with otters in a actual stream https://www.gentlydownthe.stream/
[07:03:50] <bayaz> Title: Gently Down the Stream 
[07:04:31] <beaky> yes like how all linux distros target amd k8 when everyone uses skylake now
[07:06:09] <oldlaptop> computerquip: which is to say microsoft refused point-blank to implement most of it, to the point that the committee had to make many of the new features optional (and add microsoft's bogus strfoo_s interfaces into the bargain)
[07:06:19] <beaky> hopefully in 20 years distros will finally get around to targeting sandybridge
[07:09:15] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 245 seconds)
[07:11:32] <beaky> i love boost it is a peer reviewed c++ library
[07:13:14] <rxndxs> so i'm looking at this code right, and there is a 'static int func' in it, i grep the file and, it is not used anywhere ??? :o
[07:15:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[07:16:19] <computerquip> Boost is far better than most give it credit for 
[07:17:02] <computerquip> oldlaptop, I'm not sure how much influence MS had in that. Those *_s functions are being almost outright rejected though 
[07:17:35] <oldlaptop> The interfaces originated in Microsoft's C library, as I recall. They're bad, so nobody uses them.
[07:17:45] <oldlaptop> (Except in microsoft land.)
[07:18:23] <oldlaptop> Contrast standard C threads, which nobody uses because everybody was already using pthreads.
[07:19:29] *** Joins: caramel (~caramel@user/caramel)
[07:23:18] <computerquip> C11 threads are weird to implement if you've ever tried
[07:26:20] <computerquip> They do fit the WinAPI threads a bit better though. WinPthreads for say MinGW aren't the best implementations of pthreads
[07:31:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:ccaa) (Ping timeout: 240 seconds)
[07:33:16] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[07:34:10] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 240 seconds)
[07:36:09] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:36:21] *** Joins: mickey (~user@user/mickey)
[07:36:45] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[07:37:21] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:39:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[07:40:16] *** Joins: ajmea97 (~jamea@177.239.80.89)
[07:40:47] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fffe:f875:a4f3:42b4)
[07:42:00] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:47:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:48:41] *** Joins: cth (~Cthulchu@213.174.21.101)
[07:48:55] <beaky> wha tis the best way to build a hash function and prove it correct http://jonkagstrom.com/bit-mixer-construction/
[07:49:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:51:04] *** [_] is now known as [itchyjunk]
[07:53:33] <beaky> one application of program syntheis
[07:53:54] *** Joins: srikavin (~srikavin@user/srikavin)
[07:54:23] <[itchyjunk]> A hash function is a trap door function?
[07:58:50] <vdamewood> [itchyjunk]: Yes.
[07:59:22] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[07:59:47] <vdamewood> Oh, wait no. There's no trapdoor.
[08:00:17] <CoJaBo> Yeh, don't put hash in a trapdoor, it's somehow "drug trafficking"
[08:01:13] <vdamewood> [itchyjunk]: The only way to reverse a hash is brute force.
[08:01:19] *** Quits: LiftLeft (~LiftLeft@172.83.47.105) (Ping timeout: 252 seconds)
[08:01:43] <CoJaBo> Depends on the hash, that's only true for unbroken ones =D
[08:02:18] <oldlaptop> careful observers will note a certain difficulty in reversing a function that produces a 256-octet output from a 256-gigaoctet input
[08:03:12] <oldlaptop> "broken" hashes are not reversible, that's not the problem - it's possible to find two inputs that produce the same value relatively easily
[08:03:15] <CoJaBo> oldlaptop: My hash function only hashes 256GB of YEEEEEEEEEEEEEEEEEE[…]EEEEEEEEEEEEEEEEET
[08:03:58] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[08:04:30] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 250 seconds)
[08:04:34] * vdamewood sees all of this talk of hash, looks around for vendu, and gets sad.
[08:04:40] <beaky> yes rip vendu
[08:05:07] <oldlaptop> it is, again, obviously possible to find two inputs that produce the same output, for a function that produces a fixed-size output from an arbitrarily large input - in fact there are, in prinicple, infinitely many inputs that produce any given output
[08:05:09] <CoJaBo> but yeh, I misread that as collisions; cuz like, you can't reverse a hash by brute force :P
[08:05:38] <vdamewood> Yes you can, it just takes longer than the heat-death of the universe in many cases.
[08:05:47] <oldlaptop> You can reverse a hash by brute force in that you can, with brute force, find one of the inputs that produces a given output.
[08:06:05] <CoJaBo> vdamewood: You literally can't, because you can't know which answer is the "correct" one
[08:06:19] <oldlaptop> The usual reason you might want to reverse a hash is to crack passwords, for which purpose it doesn't matter which one is the "correct" one
[08:06:20] <vdamewood> Okay, fair point.
[08:07:07] <vdamewood> oldlaptop: Right, but in the context of the original question, whether hashes are trapdoor functions, It makes a difference about whether you found the 'correct' one.
[08:07:10] <oldlaptop> (also I suppose it's not necessarily true that *each* possible output much have infinitely many possible inputs - but at least one must
[08:07:55] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 252 seconds)
[08:07:55] <vdamewood> My hash function produces a 12-bit hash, except for all input greater than 12-bits, the hash will be 0xFFF.
[08:09:03] <CoJaBo> oldlaptop: I think it is expected that each output has to be equally possible, otherwise the algo is biased in a way that'll likely make it easy to break
[08:09:06] <vdamewood> So yeah, a hash function can't even be refersed, one can only find an input that produces the same output.
[08:09:25] <CoJaBo> (That's actually true for some CRC hashes tho lol)
[08:09:40] *** Quits: nekobyte (~cat@user/nekobit) (Quit: cute!!!!)
[08:10:04] *** Joins: nekobyte (~cat@user/nekobit)
[08:10:33] <CoJaBo> There is no reverse, only collide
[08:11:10] <CoJaBo> So basically, hash algos are like Dodge Mustangs
[08:11:17] <vdamewood> I am the encryption key master.
[08:11:43] <CoJaBo> Also, I screwed that up too
[08:12:29] <vdamewood> [Pikachu comforting Caterpie]
[08:13:53] <vdamewood> ... Darmok and Jalad, at Tenagra.
[08:15:47] <oldlaptop> vdamewood: Apparently that is a bumper sticker. (Funniest thing I saw that week.)
[08:16:12] <vdamewood> oldlaptop: Which, Pikachu or Darmok?
[08:16:21] <oldlaptop> the latter
[08:18:20] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:21:31] *** Joins: mei (~mei@user/mei)
[08:21:59] <smallville7123> how do i split a vector into sub vectors based on ummm comparison of contents? as i need to split a list of views into a seperate list of views based on if the location X is inside the view's location
[08:23:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[08:26:02] *** Joins: jamea97 (~jamea@177.239.85.103)
[08:27:53] *** Quits: ajmea97 (~jamea@177.239.80.89) (Ping timeout: 248 seconds)
[08:30:44] <beaky> you can use std::copy_if 
[08:32:10] *** Quits: Guest25 (~Guest25@2607:fea8:1e5f:8df0:45c5:fbb4:7a1a:44c0) (Ping timeout: 246 seconds)
[08:34:27] *** Quits: venue (~venue@user/venue) (Quit: adios)
[08:39:47] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[08:40:24] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[08:41:00] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[08:43:07] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[08:48:47] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[08:49:10] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[08:51:01] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[08:52:01] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:59:04] *** Joins: nekodesu (~bit@user/nekobit)
[08:59:22] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[09:00:25] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[09:07:39] *** Joins: dre (~dre@2001:8003:c932:c301:ef2c:1b38:ddbc:e3bd)
[09:08:47] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[09:09:23] *** Quits: |smlckz| (smlckz@user/smlckz) (Quit: WeeChat 3.1)
[09:10:29] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d3a:b7ee:1470:f205) (Read error: Connection reset by peer)
[09:11:08] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[09:13:52] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:490d:3e6d:d3dd:18ba)
[09:15:05] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[09:20:18] *** Joins: Samian (~Sami@2620:10d:c091:480::1:75d7)
[09:22:55] *** Quits: nekobyte (~cat@user/nekobit) (Quit: cute!!!!)
[09:23:13] *** Joins: nekobyte (~cat@user/nekobit)
[09:23:22] *** Quits: jamea97 (~jamea@177.239.85.103) (Ping timeout: 268 seconds)
[09:28:28] <beaky> what are some common flaws or warts in large popular projects like postgres or gnome 
[09:28:36] <beaky> that will be encountered when programming with them
[09:28:43] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[09:29:01] <beaky> such as the very recently fixed in postgres CTEs as optimization fence thing
[09:29:23] <beaky> fixed in version 13
[09:30:04] <beaky> version 12*
[09:33:06] <beaky> or common examples in php and mysql
[09:33:30] <beaky> which are now fixed too but since i dont use them very often i cant recall them
[09:38:32] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[09:38:36] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[09:44:33] *** Joins: manin (~x@185.242.190.95)
[09:44:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[09:45:46] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:46:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:46:48] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 268 seconds)
[09:47:23] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[09:48:56] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-60dd-0669-6d92-7e2a.res6.spectrum.com) (Ping timeout: 250 seconds)
[09:49:45] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[09:50:05] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[09:50:14] <blahboybaz> When they way something has a "header" (where the header contians meta information abotu some object) how is that normally implmentedd - say, in javascript for example?
[09:51:02] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[09:51:41] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-0c41-37e4-5cb2-ccbe.res6.spectrum.com)
[09:52:38] <blahboybaz> In a js weakmap, if the key has to be an object then how can that be useful unless you access the contents of the object? 
[09:52:59] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[09:53:24] <blahboybaz> Doesn't having an object for a map key automatically imply that you should be accessing the key's contents?
[09:54:04] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[09:54:22] *** Joins: rsonx (~rsonx@user/kobalt)
[09:55:08] <blahboybaz> I guess what I'm wondering is why else would you have an object for a map key unless you wnated to use the object you wre using for the key?
[09:56:22] <blahboybaz> Is json an object?
[09:56:34] <blahboybaz> a flattened object?
[09:56:36] *** Quits: rsonx (~rsonx@user/kobalt) (Changing host)
[09:56:36] *** Joins: rsonx (~rsonx@user/rsonx)
[09:56:40] <blahboybaz> serialized
[10:01:47] *** rsonx is now known as kobalt
[10:01:57] *** Joins: joqmos (~joqmos@pc-207-74-156-186.cm.vtr.net)
[10:02:34] *** Quits: kobalt (~rsonx@user/rsonx) (Changing host)
[10:02:34] *** Joins: kobalt (~rsonx@user/kobalt)
[10:02:46] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:03:03] *** Joins: manin (~x@185.242.190.95)
[10:05:40] *** Joins: cth (~Cthulchu@213.174.21.101)
[10:06:34] <beaky> yes json is a utf-8 text-based data interchange format and 'serialized' means encoding values into that format (where the text is a utf-8 string) and 'object' is one of the json values (the others are array, value, string, number, or whitespace) so 'flattened object' means a json-encoded javascript object indeed
[10:08:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:10:15] <beaky> btrees an outdated data structure https://erthalion.info/2020/11/28/evolution-of-btree-index-am/
[10:10:16] <bayaz> Title: Evolution of tree data structures for indexing: more exciting than it sounds · Erthalion's blog 
[10:12:38] <blahboybaz> I've spend the last few days agonaizing over a design decision. I haven't wanted to tlak about it here because it such a stupid (trivial) thing to be coding and I figured I'd get responses that make it seem like what I"m doing doesn't matter enough to implemnet a really robust solution. Idk, it's late, maybe if I sleep on it one more night somethind will click
[10:13:47] <beaky> yes you must always go for the most robust solution so that you can find ways to make the robust solution simpler and easier than the non-robust one
[10:14:52] <PlanckWalk> I think it's very unlikely that in here you'd be mocked for doing something that isn't important.
[10:15:14] <PlanckWalk> Well, you will *now*, of course.  Whether you say anything more or not ;-)
[10:15:32] <blahboybaz> its just an excuse to learn and explore really but I think it's important (it is to me is what I mean to say)
[10:16:02] <cis> burn down the bike shed
[10:16:05] <blahboybaz> you guys are awesom
[10:16:12] <joqmos> hi! quick question about win32 api: is it safe to reuse the WNDCLASS struct passed RegisterClass?
[10:16:29] <PlanckWalk> I once spent a week implementing a directed search algorithm for a corner case in a dying online game where not even the other players cared about the result.
[10:16:58] <joqmos> passed to*
[10:17:18] <beaky> nice i like search algorithms i think they are important
[10:17:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:17:32] <joqmos> was it worth it?
[10:17:57] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[10:19:23] <PlanckWalk> Of course it was worth it :)
[10:20:00] <PlanckWalk> Not only did I learn more about search tree pruning, I became the best player in the game at that particular activity!
[10:20:03] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[10:20:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:21:01] *** Quits: cth (~Cthulchu@213.174.21.101) (Ping timeout: 252 seconds)
[10:21:57] <PlanckWalk> But even if the game didn't exist and the algorithm ended up worthless, it was still an enjoyable excercise.
[10:21:59] *** Quits: nekobyte (~cat@user/nekobit) (Quit: cute!!!!)
[10:23:21] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[10:23:22] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[10:23:41] <joqmos> yeah, i know the feeling
[10:24:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:24:55] *** Joins: steam (~steam@user/steam)
[10:25:33] *** Joins: deathonater (~deathonat@2603-7000-e206-3fd8-a133-ff7e-5f7d-e5d5.res6.spectrum.com)
[10:25:33] *** Quits: deathonater (~deathonat@2603-7000-e206-3fd8-a133-ff7e-5f7d-e5d5.res6.spectrum.com) (Changing host)
[10:25:33] *** Joins: deathonater (~deathonat@user/smeef)
[10:28:04] <vdamewood> Yay! Updates!
[10:28:14] <beaky> nice did you recompile your gentoo
[10:28:33] <vdamewood> Nope. Just installed an ipdate to macOS.
[10:28:41] <vdamewood> update*
[10:28:48] <vdamewood> (hmm... iPdate)
[10:29:23] *** Quits: Smeef (~deathonat@user/smeef) (Ping timeout: 252 seconds)
[10:29:58] <joqmos> ew proprietary
[10:30:13] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:30:24] <joqmos> sleek and polished ux on the other hand...
[10:31:46] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:33:25] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[10:33:31] <kobalt> I made my own pixel sprite maker https://i.imgur.com/SRlErkB.png How do you like my drawing?
[10:33:32] <bayaz> Type: image/png Size: 5.6 kB 
[10:33:44] <beaky> nice fish
[10:33:52] <beaky> is it written in rust
[10:34:09] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[10:34:16] <kobalt> in c++
[10:35:28] <joqmos> hmm fish
[10:35:51] <joqmos> what graphics stack are you using?
[10:36:04] *** Joins: nekodesu (~bit@user/nekobit)
[10:36:23] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[10:38:07] <kobalt> joqmos: I used sdl2
[10:39:14] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[10:40:16] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 252 seconds)
[10:44:50] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Ping timeout: 250 seconds)
[10:47:08] <beaky> nice i like sdl all the games use sdl for some reason
[10:47:29] *** Quits: mei (~mei@user/mei) (Quit: mei)
[10:48:21] *** Joins: mei (~mei@user/mei)
[10:48:31] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[10:49:53] <kobalt> yes SDL2 is fun. I am considering to create a nes emulator next. 
[10:50:00] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:50:50] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[10:51:57] *** Quits: NEYi (~NEYi@109.251.216.38) (Client Quit)
[10:54:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:57:15] *** Joins: node1 (~node1@user/node1)
[10:58:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:58:50] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[10:59:31] *** Quits: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx) (Ping timeout: 252 seconds)
[10:59:57] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[11:01:06] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[11:06:10] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 240 seconds)
[11:06:45] <BrkThruCopyWritr> Saddly I think I have to tune out of social media apps and IM apps (messenger,whatsapp,etc) ... People simply can't comprehend my level of English writing and it's very frustrating.
[11:07:08] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[11:15:42] <PlanckWalk> It doesn't seem too poor to me.
[11:15:44] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:490d:3e6d:d3dd:18ba) (Read error: Connection reset by peer)
[11:18:09] *** Joins: vysn (~vysn@user/vysn)
[11:18:12] <PlanckWalk> (Though tuning out of most social media apps is probably a good thing regardless of mutual comprehensibility)
[11:18:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:20:09] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 248 seconds)
[11:20:57] *** Joins: mrig (~mrig@user/mrig)
[11:21:18] *** Joins: node1_ (~node1@203.189.249.217)
[11:21:31] *** Quits: node1 (~node1@user/node1) (Ping timeout: 252 seconds)
[11:23:40] *** Quits: node1_ (~node1@203.189.249.217) (Read error: Connection reset by peer)
[11:23:52] *** Joins: node1_ (~node1@203.189.249.217)
[11:25:07] <arahael> BrkThruCopyWritr: Yes, the biggest problem with writing english on social media sites is the expectation that people actually *read* them.  They don't.
[11:26:10] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:e5d0:36e1:dc57:f933) (Read error: Connection reset by peer)
[11:27:28] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:28:18] *** Joins: lapno_ (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[11:28:33] *** Quits: node1_ (~node1@203.189.249.217) (Ping timeout: 268 seconds)
[11:28:46] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[11:28:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78)
[11:30:36] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[11:31:38] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[11:33:45] *** Joins: node1 (~node1@user/node1)
[11:34:09] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[11:34:43] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[11:35:28] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[11:37:05] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Killed (NickServ (GHOST command used by RenAdjest2)))
[11:37:13] *** RenAdjest2 is now known as RenAdjest
[11:38:09] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[11:39:21] *** Parts: RenAdjest (~RenAdjest@user/renadjest) ()
[11:48:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[11:49:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:50:07] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[11:50:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:50:40] *** Quits: joqmos (~joqmos@pc-207-74-156-186.cm.vtr.net) (Read error: Connection reset by peer)
[11:56:15] *** Quits: paulo (paulo@paulo.jujube.ircnow.org) (Remote host closed the connection)
[11:56:15] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[11:56:15] *** Quits: sandman13 (sandman13@user/sandman13) (Remote host closed the connection)
[11:57:16] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7882:3af9:d2f8:e7ed) (Remote host closed the connection)
[11:59:52] *** Joins: |smlckz| (smlckz@user/smlckz)
[12:00:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:02:47] <chives> Speaking of search algorithms... Do y'all have problems with
[12:03:13] <chives> it seems like on most of the websites i go to i have those problems
[12:03:46] *** Joins: palasso (~palasso@user/palasso)
[12:04:05] <chives> I'm currently looking for snake shot ammunition... and having a hard time believing that walmart.com doesnt sell ammo.. and that academy.com can't find "snake shot" exception finding clothing items...
[12:05:04] <pyzozord> Oh, a nes emulator! I just realized that knowing what I know about DFA, stack and registers, context-free languages and parsers I should be able to write a nes emulator now!
[12:05:05] <chives> I need to find a place i can buy an item and then pick it up... after i quality check it to make sure it hasn't been tampered with or the items provided are faulty in some way
[12:05:57] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[12:06:18] <pyzozord> chives: it sounds like you are talking about traveling salesman problem. That problem is famously NP-hard.
[12:07:50] <chives> pyzozord: its pretty messed up... if i buy online... the item is usually tampered with or broken in some way...
[12:08:19] <chives> or even completely changed
[12:08:37] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[12:08:41] <chives> and then you have two problems...
[12:08:47] <chives> the wrong item and still needing the right item
[12:08:53] *** Joins: programmar (~networker@118.69.128.37)
[12:09:07] <chives> getting rid of the wrong item is harder than just paying for something you didnt need in the first place
[12:09:10] <programmar> i feel illegal when asking about html here but is there any reason why people usually tell me to incude <html><head> then <body> for every webpage ? i feel like without those, my page can still work fine
[12:09:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78)
[12:10:26] <chives> and in the mean time i've got this huge snake in my home
[12:10:44] <chives> we're talking... maybe 4 ft, 3 at least
[12:10:50] <GeDaMo> Get a mongoose! :P
[12:11:04] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 250 seconds)
[12:11:15] <chives> I must not know what that is
[12:11:27] <GeDaMo> It's an animal known for fighting snakes
[12:11:32] <|smlckz|> programmar: *sigh* 
[12:12:17] <pyzozord> programmar: It's a reasonable question. They include it because that is the correct structure of a html document. Browsers always try to make the best out of what html code you give them, even if it's incorrect. But if you want to be more certain what will be rendered you should write according to specification.
[12:12:25] *** Joins: paulo (paulo@jujube.ircnow.org)
[12:12:49] *** Joins: sandman13 (sandman13@user/sandman13)
[12:13:01] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[12:15:01] <chives> Am I the only one this happens to or is it common?
[12:15:30] <chives> Is anyone able to shop for ammo on walmart?
[12:16:01] <GeDaMo> There are #guns and ##guns channels
[12:16:12] <pyzozord> chives: that is like the most US question I ever read.
[12:16:33] <chives> GeDaMo: but it's not really a gun question... just my current example
[12:17:08] *** Joins: Guest38 (~Guest38@37.157.32.226)
[12:17:23] <Guest38> https://www.wikipediasucks.co/forum/viewtopic.php?f=5&t=2011
[12:17:26] <bayaz> Title: Freenode, the WMF's favorite IRC system, is sold off - Wikipedia Sucks! 
[12:17:30] <programmar> pyzozord: is there any browser when i don't conform to this "correct structure", it will refuse from rendering ?
[12:17:30] <Guest38> explains a lot lol
[12:17:34] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:17:36] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[12:18:07] <GeDaMo> Browsers are not the only tools which process web pages
[12:19:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:19:17] <pyzozord> programmar: I don't know of any. Also I'm not sure what exactly does the standard says about conformance to the standard. You could try and find out here https://html.spec.whatwg.org/
[12:19:19] <bayaz> Title: HTML Standard 
[12:19:28] *** Quits: Guest38 (~Guest38@37.157.32.226) (Quit: Client closed)
[12:19:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:19:54] *** Joins: mickey (~user@user/mickey)
[12:20:38] <programmar> pyzozord: well u did say that including primary tags such as <body>, <html> is the correct structure tho :P
[12:21:09] <pyzozord> programmar: yes, because it is
[12:21:39] <beaky> nice i like html
[12:22:44] *** Quits: lapno_ (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[12:22:48] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[12:23:07] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[12:23:08] *** Joins: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl)
[12:25:21] *** Joins: independent56 (~independe@163.172.58.132)
[12:25:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-0c41-37e4-5cb2-ccbe.res6.spectrum.com) (Quit: jarthur)
[12:27:38] *** Joins: reumeth (~reumeth@user/reumeth)
[12:28:30] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:29:43] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 252 seconds)
[12:30:49] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[12:34:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[12:39:04] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:42:51] *** Quits: independent56 (~independe@163.172.58.132) (Read error: Connection reset by peer)
[12:46:27] *** Joins: independent56 (~independe@163.172.58.132)
[12:47:57] *** Joins: aradesh (~aradesh@user/aradesh)
[12:50:03] *** Quits: independent56 (~independe@163.172.58.132) (Read error: Connection reset by peer)
[12:50:10] *** Joins: independent_ (~independe@185.50.0.80)
[12:54:28] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[12:54:49] *** Joins: gggp (~textual@111.63.14.121)
[12:55:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:55:33] *** Joins: gggp_ (~gggp@li1772-101.members.linode.com)
[12:57:48] <pyzozord> There are so many journals, how do people keep up with it? https://dl.acm.org/journals
[12:57:51] <bayaz> Title: ACM Journal 
[12:58:20] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:58:22] <arahael> People... Keep up with journals? :D
[12:58:27] <JanC> https://www.techdirt.com/articles/20210819/12311847389/google-has-been-paying-wireless-carriers-billions-to-not-develop-competing-app-stores.shtml
[12:58:41] <beaky> yes all the people of hackernews read all the articles of every journal on there its why they're so informed i have to make do by skimming the cliff's notes at https://blog.acolyer.org/
[12:58:42] <bayaz> Title: the morning paper | a random walk through Computer Science research, by Adrian Colyer 
[12:58:52] *** Quits: gggp__ (~gggp@li1772-101.members.linode.com) (Ping timeout: 252 seconds)
[12:59:14] <beaky> even more well-informed of hackernews write the journals themselves of course.
[12:59:20] <beaky> elite phds
[12:59:25] *** Quits: gggp (~textual@111.63.14.121) (Ping timeout: 252 seconds)
[12:59:40] *** Joins: gggp (~textual@60.10.23.160)
[12:59:41] <arahael> Actually I've just looked at that site, haven't looked at it in _years_, lots of great stuff there.
[12:59:55] <beaky> but the most well-informed of all is industry programmers who are 10-20 years ahead of academia so dont need to even read the journal at all, like jandrewrogers on hacker news
[13:00:14] <arahael> Yeah, it's unfortunate. :(
[13:00:23] <arahael> A lot of private industry are ahead of academia.
[13:00:58] <JanC> arahael: on very narrow topics probably?
[13:01:01] <beaky> yes all of his posts are 'i worked on this in industry 10 years ago but i cant elaborate further because of industry secrecy'
[13:01:36] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Quit: Leaving)
[13:01:40] <beaky> where the topic is some form of cutting edge db research according to a journal on db technology or something
[13:02:07] <arahael> JanC: Not really, there's a _lot_ of private industry.
[13:02:10] *** Quits: gggp_ (~gggp@li1772-101.members.linode.com) (Ping timeout: 252 seconds)
[13:02:20] <arahael> beaky: It's really unfortunate. :(
[13:02:48] <JanC> I mean, all of them are ahead of academia on a very narrow topic, but way behind on almost everything else  :)
[13:03:00] <beaky> database systems isnt a very narrow topic
[13:03:45] *** Joins: juliaEnv (~juliaEnv@ip-86-49-242-28.net.upcbroadband.cz)
[13:03:53] <beaky> they're pretty much ahead in every regard in terms of distributed systems design down to basic data structures for indexes
[13:04:42] <chives> If yall come across a web page that doesnt appear to be possible... what do you do?
[13:04:58] <beaky> i hit f5 of course
[13:05:11] *** Joins: zaher (~zaher@37.48.148.85)
[13:05:50] <chives> Is this web page really suggesting catch a snake in a garbage can, or a glue trap to release in cooking oils? https://www.thisoldhouse.com/pest-control/21373344/how-to-get-rid-of-snakes
[13:05:51] <bayaz> Title: How to Get Rid of Snakes and Keep Them Away 
[13:06:11] <JanC> beaky: I doubt any company understands the whole field of "database systems"
[13:06:30] <arahael> JanC: Ah, yes, in the sense that the data scientists have astonishingly good stuff, but often terrible with the maintenance, testing side of things, etc, whereas a lot of applications dev are just slapping mud on the wall and seeing what sticks, but making good process on , uh...  Anwyay, and web service developers are making good progress on ensuring they have a specified API with good
[13:06:32] <arahael> schemas and the like - that what you mean?
[13:06:36] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe)
[13:07:00] <arahael> That they all do various things well, just not consistently across the whole software dev.
[13:07:41] <beaky> JanC yes its doubtable but they actually do understand the whole field
[13:07:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:08:08] <beaky> its why jandrewrogers posts are consistently the most informative on every applied databases topic
[13:08:41] *** Quits: programmar (~networker@118.69.128.37) (Quit: Leaving)
[13:08:41] <JanC> I've never seen a "database specialist" who understood all database systems
[13:09:16] <beaky> just start skimming his posts on hacker news and behold https://news.ycombinator.com/threads?id=jandrewrogers
[13:09:20] <JanC> (e.g. git, filesystems, etc. are "databases" too)
[13:09:28] <beaky> he comments on those too
[13:09:45] <JanC> right, maybe he's one exception to the rule  :P
[13:10:33] <beaky> yes it is my duty to skim all the most brilliant ideas of all the industry prodigies of database design and implement them in my tea database
[13:11:55] <beaky> like in those 'tao of programming' posts where the students go 'noo you cant do x' but the master says 'you can' 
[13:12:21] <beaky> and the student gets enlightened like thats teh exact experience i get just reading his latest post on graph theory
[13:13:13] <arahael> JanC: If he understood all database systems, he'd be a "database generalist". ;)
[13:13:24] <arahael> JanC: Those who only know one or two are the specialists. ;)
[13:13:37] <beaky> the three classic forms of graph representation: pointer models, adjacency lists, adjacency matrices. but there's much more out there 
[13:13:51] <beaky> yes he wrote all the specialized databases
[13:14:15] <beaky> its how he gets to be both a specialist and generalist at once
[13:15:11] <arahael> :)
[13:15:36] <pyzozord> adjecency list is just a list of edges. Adjecency matrix is just 2d table of all vertices on both x and y axis. What is the pointer model?
[13:16:40] <chives> https://www.dickssportinggoods.com/search/SearchDisplay?searchTerm=ammunition&storeId=15108&catalogId=12301&langId=-1&sType=SimpleSearch&resultCatEntryType=2&showResultsPage=true&fromPage=Search&searchSource=Q&pageView=&beginIndex=0&DSGsearchType=Keyword&pageSize=48&pageNumber=0&filterFacets=facetCatgroup%3A12301_908551%3B5382%3AAmmunition
[13:16:41] <bayaz> Title: Search Results 
[13:17:31] <chives> Does dicks sporting goods really only sell 50 cal bullets?
[13:18:03] <beaky> the pointer model is structs and pointers
[13:18:19] <pyzozord> ooh interesting
[13:18:36] <beaky> struct vertex { stuct vertex *neighbor; }
[13:18:37] <pyzozord> so more literal interpretation of a graph
[13:19:42] <beaky> yes and there are many more other representations than just those 3 that are more efficient for large-scale graphs that im puzzling myself to come up with
[13:20:10] <pyzozord> any examples?
[13:20:52] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 252 seconds)
[13:20:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78)
[13:21:07] <mrig> Why do we need graphs that are so big?
[13:21:42] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 250 seconds)
[13:22:03] <beaky> yes the first one i can think of ethat is similar to adjacency matrix but different is a list of bitmaps of all the vertices in a relation
[13:22:27] <beaky> but im sure jandrewrogers has worked in industry 20 years ago with a more sophisticated representation
[13:24:03] <pyzozord> so that sounds like a adjecancy matrix put inside adjecancy matrix. That kind of sounds like quad tree spatial indexing
[13:24:57] <chives> Is there a way to break out of this filter?
[13:25:10] * mrig starts counting the grains of sand on a beach, content in the knowledge that his knowledge is progressing with every increment.
[13:25:18] <chives> It's obvious... i cant even see the guns they have...
[13:25:38] <beaky> yes you need big graphs so that you can represent all the relationships in the world of enterprise
[13:25:49] <chives> they only ave 50 cal ammo but the guns disappear shortly after i click the category with a "only available in store" 
[13:26:24] *** Joins: gggp (~textual@60.10.23.165)
[13:27:07] * mrig misses the sunset due to focus upon the sand, and concludes that the after a certain number of grains the visibility starts to dim.
[13:28:23] * vdamewood gives mrig a heap problem.
[13:28:33] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[13:28:36] <beaky> nice i like heaps
[13:28:45] * vdamewood gives beaky a heap problem.
[13:28:55] <mrig> vdamewood: I see only solutions, there, and weeds.
[13:29:12] * mrig sorts the problems into sane and insane.
[13:29:35] * mrig gives all the dirty ones back to vdamewood.
[13:29:44] <vdamewood> mrig: https://en.wikipedia.org/wiki/Sorites_paradox
[13:29:45] <bayaz> Title: Sorites paradox - Wikipedia 
[13:30:35] <pyzozord> yeah any kind of categorization becomes fuzzy when you think about it hard enough
[13:31:00] * vdamewood hands pyzozord a language or a dialect.
[13:31:04] <pyzozord> or maybe it's just human language that is the problem here
[13:31:10] <pyzozord> yeah exactly :D
[13:31:13] <beaky> how do we apply category theory to solve the heap problem
[13:31:25] <vdamewood> beaky: We don't.
[13:31:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:a540:64ec:8bf6:ef78) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:32:27] <mrig> what if by the time you are down to the last grain the heap is no longer made from the erosion of the same material, it is now plastic, is it still sand?
[13:32:44] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:33:03] <mrig> coast lines are notoriously fractal in nature.
[13:33:59] <mrig> pyzozord: the categorization takes on a geometry when you get to certain scales, which is rather cool.
[13:34:44] <pyzozord> mrig: it does sound cool :)
[13:35:15] <mrig> seems to have symmetry too
[13:36:37] <mrig> computers are amazing things, the way that they make all of this our playground :D
[13:38:41] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:39:06] <arahael> beaky: The heap problem, I think, is a category of it's own. :)  You "solve" it by defining mappings in and the co-mappign out. ;)
[13:39:15] <mrig> beaky: are categories applied to heap problems a description of garbage collection?
[13:39:39] <mrig> some kind of sieve I suppose would be useful.
[13:40:40] *** Quits: gggp (~textual@60.10.23.165) (Ping timeout: 240 seconds)
[13:43:13] <beaky> at last i have found it the ultimate way to represent a graph with trillions of edges that scales up to multiple machines the secret sauce is adjacency matrices ordered using hilbert curves to maximize locality for processing this is what jandrewrogers must be talking about https://blog.acolyer.org/2017/05/30/mosaic-processing-a-trillion-edge-graph-on-a-single-machine/
[13:43:14] <bayaz> Title: Mosaic: processing a trillion-edge graph on a single machine | the morning paper 
[13:44:37] <beaky> "Unless your graph is bigger than Facebook’s, you can process it on a single machine"
[13:44:43] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:45:30] *** Quits: independent_ (~independe@185.50.0.80) (Remote host closed the connection)
[13:45:31] <pyzozord> what does ℝ^d stand for? I thin ℝ stands for real numbers, but I'm not sure what does superscript d stand for
[13:45:33] <beaky> not a single supercomputer but a single <$5000 doller machine (would be a threadripper today)
[13:45:42] <beaky> the d is for dimensions i think
[13:45:54] *** Joins: independent_ (~independe@185.50.0.80)
[13:46:30] <mrig> A graph that you can fit in your desktop draw, nice.
[13:46:36] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[13:47:02] <beaky> so ℝ² is 2d vectors, ℝ³ is 3d vectors, etc
[13:47:16] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[13:47:32] <pyzozord> oh ok yeah that makes sense
[13:48:08] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe) (Ping timeout: 250 seconds)
[13:49:10] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[13:49:20] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Remote host closed the connection)
[13:49:32] <beaky> (3d vector as in tuple with 3 elements like the infamous point used in 3d programming)
[13:49:32] <pyzozord> I'm missing option in unicode to put any symbol in superscript
[13:49:34] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[13:49:49] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe)
[13:50:15] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:50:16] <pyzozord> Actually it would be nice if unicode was able to represent all common math notations
[13:50:34] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 252 seconds)
[13:51:08] *** Joins: humky (~humky@user/humky)
[13:51:13] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[13:51:22] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[13:51:24] <beaky> will math adopt more emoji
[13:52:24] <pyzozord> I don't see a problem with that, they already have random zigzags :P
[13:53:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe) (Remote host closed the connection)
[13:55:04] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:56:04] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[13:56:13] *** Joins: independent_ (~independe@185.50.0.80)
[13:56:39] <mrig> Tracking whitespace in a parsetree, for test in an editor, is pretty tricky.
[13:56:47] <mrig> for text rather.
[13:58:09] *** Joins: jaysicks (~jaysicks@212-40-83-106.pool.digikabel.hu)
[13:58:42] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[14:00:33] <GeDaMo> http://lambda-the-ultimate.org/tensor-considered-harmful
[14:00:43] *** Joins: zealot (~zealot@182.70.236.250)
[14:01:00] <beaky> nice i like pytorch
[14:01:16] <beaky> using pytorch i can deep learn my teas and have my tea database recommend the best tea 
[14:02:26] <beaky> but he is right you always have to reshape and broadcast tensors and keep track of the indexes which is very messy that is why i hope someday we will use dependent types like in agda or idris to solve the problem
[14:03:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:03:21] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:04:17] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[14:04:30] <beaky> ezyang i think i've read his blog before 
[14:04:56] <beaky> all the cool kids in programming language theory are on that lambda the ultiamte website
[14:05:47] <beaky> now i need to try them out ill have a tea dimension and dimensions for each flavor https://pytorch.org/docs/stable/named_tensor.html
[14:05:47] *** Joins: biberu (~biberu@user/biberu)
[14:05:47] <bayaz> Title: Named Tensors — PyTorch 1.9.0 documentation 
[14:08:09] <pyzozord> 🍵ⁿ
[14:09:11] <beaky> whence the term "codes" for the artifacts produced by programming https://news.ycombinator.com/item?id=16378939
[14:09:46] <beaky> (not codes as in "codes in rust")
[14:10:35] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[14:12:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[14:14:25] <vdamewood> Yay! I'm bored.
[14:14:41] <beaky> hi bored im beaky
[14:14:59] <vdamewood> Yay! You're beaky.
[14:15:07] <beaky> yey
[14:16:00] <vdamewood> Want to paint Kyrgyzstan blue with me?
[14:19:03] *** audiobirb is now known as audiocat
[14:19:07] *** Joins: alguien (~alguien@user/alguien)
[14:19:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:19:26] <vdamewood> Testing the bot. https://vdamewood.com/
[14:19:28] <bayaz> Title: Home—vdamewood.com 
[14:20:23] <vdamewood> Testing the bot again. https://vdamewood.com/software/
[14:20:25] <bayaz> Title: Projects—vdamewood.com 
[14:24:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:24:40] *** Joins: flynn (~mcbloch@user/flynn)
[14:27:58] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[14:29:55] *** Quits: lapno (~lapno@eoy141.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[14:30:06] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[14:30:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:22] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 250 seconds)
[14:35:51] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:38:20] <beaky> nice website powered by fedora
[14:38:25] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 252 seconds)
[14:38:46] * mrig wonders what it might feel like to experience boredom, never having done so before.
[14:39:03] *** Joins: gggp (~textual@45.8.158.107)
[14:39:19] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[14:39:48] <pyzozord> Boredom is cool, I need to be more bored. It creates space in your brain, lets it rest
[14:40:24] <alguien> vdamewood, why not a normal dash with spaces around it instead of the em dash without?
[14:40:27] <arahael> mrig: Attend a catholic service.
[14:44:27] <alguien> arahael, A mass is a representation the (n.b.) Sacrifice, its purpose is not to entertain you, but to direct your thoughts to the Holy Lamb. That said, you can hardly be bored if you know and believe what happens at a mass
[14:45:20] <alguien> Direct your soul, even
[14:45:36] <arahael> alguien: I suppose it's better for most people now that they actually use english for the service, but in my case, I'm deaf, so whenever i had to attend mass due to being in a religious school, it was just mega-boring.
[14:47:46] *** Quits: gggp (~textual@45.8.158.107) (Ping timeout: 252 seconds)
[14:48:19] *** Joins: gggp (~textual@45.8.158.107)
[14:48:48] <arahael> alguien: Also, I'm not catholic. (I'm protestant, infact, but going into the details is probably not what this channel needs!)
[14:49:34] <alguien> arahael, I saw people praising the traditional Latin mass for the quiet not a few days ago. On one hand I understand people around you might not have explained or testified with their own disposition to the reality of the Mass, but on the other, faith is both a gift of God and our choice - he who searches will find. Even if they go different routes, they come back where they started realizing what is there (see chnetwork.org). What I'm saying is 
[14:49:34] <alguien> that mass requires a disposition
[14:50:29] <alguien> Disposition borne out of a belief. If you're a Christian, then imagine an atheist reading the Bible. It's wasted on him. He probably thinks it's boring too
[14:50:52] <pikapika> Each faith has their own gods
[14:51:05] <alguien> In fact, it might just be boring to your own flesh, but to your spiritual man it's none the less reinvigorating, as you probably know
[14:51:11] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Read error: Connection reset by peer)
[14:51:38] <arahael> alguien: Yeah, well, I do partake in the Lord's supper at my church when we celebrate it, but at teh catholic services I was forced to attend I had to do so with no explaination as to what was going on, though, being well read of the bible, I could guess, but I mean, there wasn't much to see: Some dude in the altar area just standing, or sitting, or moving a little.  And people suddenly,
[14:51:39] <arahael> randomly, kneeling, standing, or sitting.
[14:51:51] <alguien> pikapika, there is only one Name under heaven by which a man may be saved, that of Christ Jesus, and there is only one God, Him that He who has seen Him testified with His life and love for
[14:52:06] <arahael> alguien: I know quite a bit of the theory, but the actual service I find pretty boring, frankly.
[14:52:11] <pikapika> arahael, home might say the trinity is the ultimate god; others might say Jesus is one of the many angels but different from Allah
[14:52:20] <pikapika> *some
[14:52:58] <arahael> alguien: I mean, I didn't even get the prompts: "And now we're celebrating mass. And now we're doing a Psalm", I had... *nothing*.
[14:52:59] <alguien> arahael, I understand, but it's not boring in and of itself, except to the fleshly or uncatechized man
[14:53:02] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:53:07] <cis> religions are extremely successful memes
[14:53:44] <pyzozord> alguien: make sure to be mindful of the /topic
[14:53:44] <arahael> alguien: It would have been *much* less boring if they bothered to come up with a way for me to know, broadly speaking, what the heck is going on, or even put up a clock so that i could track the passage of time!
[14:53:51] <arahael> pyzozord: This is my fault, here.
[14:53:56] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[14:54:25] <alguien> arahael, here's a quick intro ;) https://www.youtube.com/watch?v=q-FwgO_s5_A
[14:54:26] <bayaz> Title: The Mass in A.D. 155: St. Justin Martyr describes the early Christian liturgy 
[14:54:52] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 250 seconds)
[14:54:59] <pikapika> cis, each faith have their own gods
[14:55:06] <arahael> alguien: The irony of your response there: That video has no subtitles!
[14:55:24] <alguien> pikapika, i addressed this objection already
[14:55:38] <alguien> arahael, it's just images, music, and text on the screen
[14:55:40] <cis> pikapika: faith is an extremely useful meme, even outside of religious context
[14:55:51] <pikapika> alguien, and each of the faiths says the same thing, most of them at least
[14:55:53] <pikapika> Whom do I trust?
[14:55:55] <alguien> arahael, (instrumental music)
[14:56:10] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[14:56:14] <alguien> pikapika, that too is addressed by my answer if you study it closely
[14:56:22] <pikapika> The follower of Allah says the same thing
[14:56:26] <arahael> alguien: What's the purpose of the music?
[14:56:26] <alguien> nope
[14:56:33] <pikapika> The follower of the multiple Hindu gods also say the same thing
[14:56:33] <pikapika> etc
[14:56:57] <arahael> alguien: Try watching that video *with the sound off* 10 times, and then tell me it's not boring. :)
[14:57:34] <pyzozord> arahael: I think the music is just supposed to feel you a certain way. That's pretty much the only function on music in all circumnstances
[14:57:53] <pyzozord> s/to feel you/to make you feel/
[14:58:07] <arahael> pyzozord: That's pretty much exactly my point, except I can't hear it.
[14:58:15] <pikapika> Are you south american?
[14:58:20] <pikapika> You were raised catholic
[14:58:31] <pikapika> If you were born in say lebanon
[14:58:35] <pikapika> You'd have been raised muslim
[14:58:43] <alguien> arahael, you can skip images, but here, a version without images just for you: https://www.youtube.com/watch?v=2J_bamuM_4k
[14:58:44] <bayaz> Title: The Catholic Mass in 155 A.D. 
[14:58:59] <pyzozord> arahael: hmm the visual equivalent would be stained glass I think. It's there only to make you feel a certain way.
[14:59:31] <alguien> pikapika, actually there are quite a few Catholics and Orthodox Christians in Lebanon
[14:59:31] <arahael> alguien: Seems like an odd choice, wouldn't it be better to present this as... An article?
[15:00:03] <pikapika> alguien, and why would their ideas about spirituality be any better than the Muslims there/
[15:00:32] <arahael> pikapika, alguien: I'd rather we didn't flat out compare religions here.
[15:01:10] <mrig> arahael: heh
[15:01:20] <pikapika> Your version of christianity claims only followers of jesus are able to get in heaven.
[15:01:29] <arahael> In any case, _I_ found the catholic masses I had to attend quite boring, though that was, honestly, likely because they weren't accommodating my deafness at all at the time.
[15:01:33] <pikapika> And the muslim would say while jesus is an important angel, Allah is the key
[15:01:38] <alguien> arahael, at your service: https://www.newadvent.org/fathers/0126.htm , Chapter 67. (I'd have linked the chapter but there's no id on the element)
[15:01:40] <bayaz> Title: CHURCH FATHERS: The First Apology (St. Justin Martyr) 
[15:01:40] <arahael> I probably should have picked a different example!
[15:01:54] <cis> let's not debate the old religions of the past - let's program a new religion
[15:02:18] <alguien> cis, how about a true religion instead?
[15:02:19] <cis> we'll keep the doctrine and dogma on github
[15:02:59] <cis> alguien: there is only one true religion, and it is the one which makes no claims about the great mystery at the heart of existence
[15:03:18] <mrig> last time that I was in a church service, though not of that belief system myself I found the content to be very sane. Certainly did not get bored though as I was kept amused by the antics of the father of my then girlfriend (and that girlfriend) mocking the proceedings; I really did get the impression that this adult was a child :D
[15:03:24] <mrig> curious thing age.
[15:03:41] <alguien> arahael, traditional latin mass has booklets that explains things, and you can find readings online pre-printed. But the primary reason anyone is (or should be, at least) there is Christ in the Eucharist
[15:04:35] <alguien> cis, truth has been revealed by Truth Himself, to continue in lack of knowledge is to be ignorant then
[15:04:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:04:48] <cis> the central tenet of a True Religion would be: "We don't know."
[15:04:55] <cis> all others are storytelling
[15:04:59] <arahael> alguien: Yeah, I usually read those in the first 5 minutes. :)  Interesting article, actually, I do agree that a regular worship is essnetial to keep the community and faith, though.
[15:05:29] <alguien> cis, this seems to be the religion of Pilate. Jesus said I came to testify for the truth, and Pilate responds: What is truth? (while staring Truth in the face)
[15:06:25] <alguien> arahael, us and the first Christians have more than a gathering, Jesus is there in the flesh (cf John 6)
[15:06:33] <cis> alguien: https://en.wikipedia.org/wiki/Thought-terminating_clich%C3%A9
[15:06:34] <bayaz> Title: Thought-terminating cliché - Wikipedia 
[15:06:52] <cis> The /dev/null of the mind
[15:07:29] <arahael> alguien: It seems we're somewhat on the same page, even if we disagree as to the services themselves.  We should probably continue this elsewhere, though.
[15:08:30] <alguien> cis, in unix file terms, it's /dev/tcp, you just don't have it (but this analogy only stretches so far, you have other things on your system that substitute /dev/tcp)
[15:08:52] <alguien> arahael, i'm in #Jesus
[15:10:01] <arahael> alguien: Cya there!
[15:10:14] *** Joins: zaher_ (~zaher@37.48.146.176)
[15:10:15] <cis> alguien: Using that metaphor - there are many ways to network, but you are stuck on one protocol.
[15:10:33] <pikapika> You are South American, many people are Arabs
[15:10:41] <pikapika> Both of you have been raised on a different religion
[15:11:46] *** Quits: zaher (~zaher@37.48.148.85) (Ping timeout: 250 seconds)
[15:11:47] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[15:12:22] *** Joins: mrig (~mrig@user/mrig)
[15:12:48] <mrig> oh I got disconnected, not sure if that question got sent so I will send again, sorry if it is a repeat.
[15:13:00] <mrig> Is there a name for a type of encoding that puts tokens onto a tape like a turing machine and that machine flits back and forth over the tokens rather than over bits?
[15:13:02] *** Joins: manin (~x@185.242.190.95)
[15:13:06] <mrig> as a way of implementing a micro program within a program being the context.
[15:14:01] <GeDaMo> How are those two things different?
[15:15:05] <mrig> easier to write when tokens, such as ascii char but I suppose it is only the encoding and the operation is still the same.
[15:15:48] <GeDaMo> So it's a bytecode using printable characters instead of binary?
[15:15:48] <mrig> I suppose it is a sort of byte code then.
[15:15:56] <mrig> right yes.
[15:16:07] <GeDaMo> Brainfuck? :P
[15:16:17] <mrig> heh, nice and legible :D
[15:16:54] <cis> brainfuck... at least it isn't malbolge
[15:16:56] <mrig> Am still pondering how to deal with svg leaves, seems that having a little string of bytecode for each case is going to be the best solution.
[15:17:53] <mrig> Just reading that paper on micro-grammars, quite fascinating as it is a similar circumstance in a way.
[15:18:04] <GeDaMo> "A Parsing Machine for PEGs" http://www.cs.tufts.edu/~nr/cs257/archive/roberto-ierusalimschy/lpegcompiler.pdf
[15:19:14] <mrig> thank you :)
[15:19:34] *** Quits: Enitin (~Enitin@82.102.22.86) (Remote host closed the connection)
[15:20:08] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:20:24] *** Joins: mickey (~user@user/mickey)
[15:20:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:21:28] <GeDaMo> https://swtch.com/~rsc/regexp/regexp1.html
[15:21:29] <bayaz> Title: Regular Expression Matching Can Be Simple And Fast 
[15:22:36] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[15:22:49] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 248 seconds)
[15:23:50] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:24:19] *** Joins: vysn (~vysn@user/vysn)
[15:24:19] *** Joins: Twipply (~Twipply@user/twipply)
[15:25:12] *** Joins: independent_ (~independe@185.50.0.80)
[15:25:25] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[15:26:16] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[15:28:40] <pyzozord> wow I see first time wikipedia page like this https://en.wikipedia.org/wiki/Thompson%27s_construction
[15:28:41] <bayaz> Title: Thompson's construction - Wikipedia 
[15:29:25] <pikapika> pyzozord, its very intuitive and common sense
[15:30:50] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 250 seconds)
[15:32:14] <smallville7123> how do i split a vector into multiple vectors that contain duplicates of whatever elements are found? eg { 1, 1, 2, 3, 3, 2, 4 } -> {1, 1}, {2, 2}, {3, 3}, {4}
[15:32:43] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[15:33:10] <pikapika> Use a hash table and a counter
[15:33:43] <pikapika> for e in v { h[e]++ }
[15:34:14] <smallville7123> eg assuming input of vector<int> array;
[15:34:50] <pikapika> You just need a map and a counter
[15:34:56] <pikapika> Unless you need to preserve the order
[15:35:55] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 245 seconds)
[15:37:06] <smallville7123> i do
[15:37:47] <pikapika> You could store the indices of the output vector in the hashmap then
[15:38:04] <pikapika> and update counter as well as populate the output vector at the same time
[15:38:11] <pikapika> ie appending
[15:38:47] *** Joins: kobalt (~rsonx@user/kobalt)
[15:39:17] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 258 seconds)
[15:39:27] <pikapika> and you'll have to do that once actually over a complete pass then populate in another pass but
[15:39:40] <pikapika> A simpler approach can be to simply sort the input list once and iterate over it
[15:40:02] <pikapika> Though "in theory" it has more big o complexity
[15:42:05] <smallville7123> wait why a counter?
[15:42:26] <pikapika> to record how many copies of that element exists
[15:46:41] *** Joins: unbuggedware (~unbuggedw@2602:fe90:300:1a2::40e1:8aec)
[15:47:42] <pikapika> A two pass algorithm would be best. Step 1: Populate both a hash map and a temp vector. Each would only contain as many unique elements as have been found yet. The hash table contains an index to the entry in the vector, and the vector contains the count of it. Step 2: Temp vector now contains all the elements as well as their counts, in the order of their first appearance in the input.  "Explode" this temp vector into the final 
[15:47:43] <pikapika> output.
[15:48:35] <pyzozord> Think I found the original paper from Thompson about regular expression NFAs http://www.oilshell.org/archive/Thompson-1968.pdf
[15:48:35] <bayaz> Type: application/pdf Size: 529.8 kB 
[15:49:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:49:31] *** Joins: flynn (~mcbloch@user/flynn)
[15:49:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:75d7) (Ping timeout: 240 seconds)
[15:50:08] <GeDaMo> That's it
[15:50:31] *** Joins: plastico (~plastico@neomutt/plastico)
[15:51:55] <GeDaMo> There's more about regex here https://swtch.com/~rsc/regexp/
[15:51:56] <bayaz> Title: Implementing Regular Expressions 
[15:53:10] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 240 seconds)
[15:54:49] *** Quits: independent_ (~independe@185.50.0.80) (Remote host closed the connection)
[15:55:14] *** Joins: independent_ (~independe@185.50.0.80)
[15:56:36] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[15:57:27] <pikapika> That "hardware is forced to behave like a PDP-11" argument is such a load of bullshit
[15:57:42] *** Quits: gggp (~textual@45.8.158.107) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:57:46] <pikapika> This proves that a lot of C haters are basically morons
[15:57:48] *** Joins: Lyn (~Lyn@user/law)
[15:58:12] *** Joins: gggp (~textual@45.8.158.107)
[15:58:44] <pyzozord> pikapika: I'd do one pass. Do a linear scan on the input, collecting the frequencies to a hashmap, at the same time collecting "first occurances" into array of size N. Kind of the same as you
[15:59:12] <pikapika> pyzozord, but you'll have to have all the same elements in the same bucket
[15:59:27] <pikapika> See the 2 in his example input
[16:00:00] <pyzozord> oh right, there is second pass nontheless because I need to go over the firs occurances array to produce output
[16:00:01] <pikapika> So the 2nd pass is necessary
[16:00:10] <pikapika> Correct
[16:00:24] *** Quits: gggp (~textual@45.8.158.107) (Remote host closed the connection)
[16:00:24] <pyzozord> I forgot algorithms need to output stuff :P
[16:00:52] <pikapika> In mine I am just using the hashmap to store indexes of the temp vector, and the temp vector to store frequencies (and implicitly the first occurence, because it is populated by appends)
[16:01:28] *** Joins: gggp (~textual@60.10.194.48)
[16:01:51] *** Joins: zaher (~zaher@37.48.147.146)
[16:02:02] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:02:13] <pyzozord> yeah that's the same idea, I guess yours is more elegent, mine is a bit more crude "where counts? here. where positions? here"
[16:03:23] <pikapika> pyzozord, one thing we have to remember that a hashmap could emit its contents in any order. You have to be careful to not have had any implicit ideas in your argument regarding hashmaps output having any particular order, or even its order staying the same
[16:03:49] <pikapika> I haven't yet thought about your version, but mine came as the first result of an algorithm that takes into account this characteristic of hash maps
[16:04:38] *** Quits: zaher_ (~zaher@37.48.146.176) (Ping timeout: 250 seconds)
[16:05:19] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[16:07:21] <beaky> nice a guide to how you can exploit webapp timing attacks in practice https://soatok.blog/2021/08/20/lobste-rs-password-reset-vulnerability/
[16:07:21] <bayaz> Title: Timing Attack on SQL Queries Through Lobste.rs Password Reset 
[16:09:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:10:21] *** Joins: ajmea97 (~jamea@177.239.85.103)
[16:14:27] *** Joins: lsync (~ls@user/deepspace-link)
[16:16:28] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[16:16:46] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 250 seconds)
[16:18:23] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-8f76-5f69-0a39-aaec.res6.spectrum.com) (Ping timeout: 258 seconds)
[16:19:15] *** Joins: Qchmqs (~qchmqs@197.205.79.166)
[16:19:15] *** Quits: Qchmqs (~qchmqs@197.205.79.166) (Changing host)
[16:19:15] *** Joins: Qchmqs (~qchmqs@user/qchmqs)
[16:20:51] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 268 seconds)
[16:21:16] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[16:24:49] *** Joins: independent_ (~independe@185.50.0.80)
[16:29:51] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[16:32:22] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:34:34] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[16:41:00] *** Quits: CoJaBo (~aztec@user/CoJaBo) (Ping timeout: 258 seconds)
[16:41:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:45:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:50:25] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 252 seconds)
[16:51:50] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[16:52:44] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 250 seconds)
[16:55:35] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:55:51] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[16:58:20] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[16:58:58] *** Joins: pulse (~pulse@user/pulse)
[16:59:14] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 250 seconds)
[17:02:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:02:27] *** Joins: independent_ (~independe@185.50.0.80)
[17:03:05] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 248 seconds)
[17:03:34] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[17:11:52] <juliaEnv> have you ever had the idea to use JBoss Drools or other rules engine as your personal expert system? By that I mean, you would extract facts about a topic that you don't have a time to learn. You would know that knowledge comprises know-how (procedures for solving instances of problems), know-why (scientific explanations of why it works), know-that (facts). And you would enter rules in it, and then it would reason (i.e. by 
[17:11:52] <juliaEnv> giving it a problem instance it would deduce the solutions). It's case-based reasoning. Not sure if a rules engine supports CBR.
[17:11:52] *** Quits: ajmea97 (~jamea@177.239.85.103) (Ping timeout: 252 seconds)
[17:13:18] <juliaEnv> http://mycbr-project.org/ seems readily usable
[17:13:19] <bayaz> Title: myCBR 
[17:14:57] *** Quits: independent_ (~independe@185.50.0.80) (Remote host closed the connection)
[17:15:21] *** Joins: independent_ (~independe@185.50.0.80)
[17:15:29] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[17:17:54] <pyzozord> Oh this is pretty interesting https://ghidra-sre.org/
[17:17:55] <bayaz> Title: Ghidra 
[17:18:23] <pyzozord> It tries to generate c code based on assembly
[17:20:07] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[17:26:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:26:57] <beaky> nice i like c
[17:28:25] *** Joins: tkob (tkob@user/thekingofbandit)
[17:31:00] *** Joins: zaher_ (~zaher@37.48.150.249)
[17:32:10] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 240 seconds)
[17:33:08] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[17:33:29] *** Quits: zaher (~zaher@37.48.147.146) (Ping timeout: 248 seconds)
[17:33:30] *** Quits: Qchmqs (~qchmqs@user/qchmqs) (Remote host closed the connection)
[17:33:49] *** Joins: zaher (~zaher@37.48.185.85)
[17:34:48] <mawk> everyone likes C
[17:35:53] <beaky> c everyone's favorite pdp11
[17:36:04] *** Quits: zaher_ (~zaher@37.48.150.249) (Ping timeout: 250 seconds)
[17:37:22] *** immibis_ is now known as immibis
[17:38:36] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[17:40:04] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[17:43:14] <mrig> bottom up parsing of binary or asm I suppose, rather than a language.
[17:46:12] <mrig> Everyone loves a little undefined behaviour, it is key to good humor :p
[17:46:40] <mrig> where is the fun in predictability?
[17:48:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[17:50:15] <mrig> Reading about PEG grammar, I suppose google use something like this to regularly rewrite their JS code in different ways.
[17:54:02] <sandman13> That reminds me, craftinginterpreters.com :P
[17:54:17] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 248 seconds)
[18:00:00] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[18:01:23] <mrig> if there are many different parse trees for the same AST then you could just shuffle the tree until you got another one that matches the desired program and then use that to reprint the code. Spoiling the fun of any who use your layout to generate some script.
[18:01:48] <mrig> There must be a way to write crawlers that do the same though I suppose.
[18:02:33] <mrig> non deterministic I suppose rather than a determined pattern.
[18:02:38] *** Joins: entuland (~entuland@user/entuland)
[18:07:04] *** Joins: ajmea97 (~jamea@200.68.141.43)
[18:07:58] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 252 seconds)
[18:09:04] *** Joins: zaher_ (~zaher@37.48.185.85)
[18:09:37] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[18:09:45] *** Joins: exvicesindaco_ (~exvicio@host-80-116-9-227.retail.telecomitalia.it)
[18:09:45] *** exvicesindaco_ is now known as exvicesindaco
[18:11:41] <sandman13> Crawlers as in web crawlers?
[18:12:54] *** Quits: zaher (~zaher@37.48.185.85) (Ping timeout: 250 seconds)
[18:13:50] *** Joins: zaher (~zaher@37.48.149.191)
[18:15:17] <mrig> well yes or a scraper.
[18:15:37] *** Quits: zaher_ (~zaher@37.48.185.85) (Ping timeout: 248 seconds)
[18:15:39] <mrig> or just some code that turns of an annoying JS functionality.
[18:16:54] <mrig> Just pondering bottom up parsing when reading a web page.
[18:17:02] <sandman13> "annoying JS functionality" that's too broad xD
[18:17:17] <mrig> Yes it is rather all encompassing :D
[18:17:38] *** Joins: independent_ (~independe@185.50.0.80)
[18:18:02] <mrig> There are aspects of JS that are not annoying, but they seem to be rather well camouflaged.
[18:18:25] <sandman13> Only time I think JS is useful is quick change without refreshing whole page. Rest is bloat.
[18:18:34] <mrig> I need an interface for attributes, cant think of what to name it.
[18:18:43] <sandman13> Vikara mrig 
[18:18:59] <sandman13> or Visheshata :P
[18:19:23] <mrig> oh there is a thought, get some nice logical grammar into the nomenclature too!
[18:19:57] <mrig> vikara and vakara depending upon its sense.
[18:21:18] <mrig> vikari too :)
[18:22:34] <sandman13> Interface usually doesn't change no?
[18:22:51] *** Joins: jess (~jess@libera/staff/jess)
[18:23:18] <sandman13> Going with vikari-avikari notion 
[18:23:42] <mrig> thinking about how to name the methods that they implement too though.
[18:24:28] <mrig> ... and an attribute that can contain a list of attributes as it value.
[18:25:28] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:25:29] <mrig> vikaram makes more sense as a word when reading a few of the different formations.
[18:25:54] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 250 seconds)
[18:26:17] <mrig> vikAramaya
[18:28:26] <sandman13> vikArmAdhyama 
[18:28:38] <mrig> always strikes me as having been conceived for regexp.
[18:29:07] <mrig> logical searching is on a whole other level.
[18:29:15] <sandman13> More accurate: guNamAdhyama :P
[18:30:31] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 252 seconds)
[18:32:15] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[18:38:48] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[18:39:38] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[18:39:56] *** Joins: _Shurik_ (~pi@user/shurik/x-1325422)
[18:42:37] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[18:44:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[18:45:30] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[18:47:38] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 268 seconds)
[18:49:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:50:58] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[18:51:26] *** Joins: martums (~martums@user/martums)
[18:51:37] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:53:06] *** Joins: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net)
[18:53:09] *** Parts: _Shurik_ (~pi@user/shurik/x-1325422) (WeeChat 2.3)
[18:55:34] <pyzozord> sandman13: but but, most of the annoying stuff comes out of the fact js is trying to make webpages not reload
[18:57:15] *** Joins: snake (~snake@user/snake)
[18:57:24] <sandman13> Javascript and it's consequences have been a disaster for the programmers :P
[18:59:16] <sandman13> Javascript may survive or it may break down. If it survives then everything will be written in Javascript but only after passing through a long and painful period of what the fuckery. If it breaks down, programmers will have to deal with a lot of legacy code.
[18:59:20] <sandman13> xD
[19:03:26] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[19:03:36] <pikapika> Javascript has some good and some bad
[19:03:55] <pyzozord> Not sure, but I think it's possible most lines of code in existance are in javascript. It's gonna be hell of a legacy
[19:04:03] <pikapika> pyzozord, cobol
[19:04:14] <pikapika> But js could have overtaken by now
[19:04:56] <pyzozord> actually I'm curious how a cobol job would be nowadays, it could be quite fun
[19:05:09] <GeDaMo> "most lines of code" isn't necessarily a metric to aspire to :|
[19:06:45] <GeDaMo> https://www.folklore.org/StoryView.py?story=Negative_2000_Lines_Of_Code.txt
[19:06:58] <pyzozord> Agreed. For me most popular != best
[19:07:44] <pikapika> pyzozord, the best spot is somewhere in the middle but still close to popular
[19:08:04] <pyzozord> I mean not that most popular cannot be the best, but just one doesn't imply the other
[19:08:11] <pikapika> Therefore it will have both the weight and power of a community/industry and the aspects you like
[19:08:15] <pikapika> pyzozord, yes
[19:08:21] <pikapika> There is no relation
[19:09:33] *** Quits: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[19:09:33] *** Joins: death916 (AdiIRC@user/death916)
[19:10:02] *** Joins: nekobyte (~cat@user/nekobit)
[19:10:38] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[19:12:30] <pyzozord> Yeah there is a separate question of lines of code in the sense of conciseness and elegance of code produced. But I meant "most lines of code" more in the general sense of "there is more javascript code written than any other language"
[19:13:16] <pikapika> pyzozord, how many lines cobol do you think exists
[19:13:34] <GeDaMo> Yeah but how much of that is creating new frameworks doing the same thing as the old frameworks under different names? :P
[19:15:03] <mrig> I think that greater linguistic understanding will lead to the replacement of JS and a lot of other cruft in the system eventually.
[19:15:12] <pyzozord> pikapika: I don't know. Lets say there is about 100-500k lines per company. And there is... A bilion companies that still use cobol?
[19:15:32] <mrig> If the logic is there then it will just happen.
[19:15:43] <mrig> heat rises, it just does.
[19:16:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[19:16:48] <pyzozord> Bilion might be too much. Maybe a milion companies, or even less.
[19:16:53] *** Quits: jamesatjaminit (~jamesatja@user/jamesatjaminit) (Quit: The Lounge - https://thelounge.chat)
[19:17:35] <pyzozord> Actually I still feel like I'm overestimating, but that's a random guess, based on nothing.
[19:17:52] <sandman13> You can narrow it down.
[19:18:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:18:13] <sandman13> AFAIK, most of the COBOL's use case is in banking sector.
[19:18:37] <GeDaMo> "Reuters calculates that there’s still 220 billion lines of COBOL code currently being used in production today" https://askingthelot.com/how-many-lines-of-cobol-code-are-there/
[19:18:38] <bayaz> Title: How Many Lines Of Cobol Code Are There? 
[19:18:50] <sandman13> GeDaMo: my hero :P
[19:19:03] <pikapika> COBOL is very important
[19:19:22] <pyzozord> heh I wasn't that far off
[19:19:46] *** Joins: nekodesu (~bit@user/nekobit)
[19:19:48] <GeDaMo> https://skeptics.stackexchange.com/questions/5114/did-cobol-have-250-billion-lines-of-code-and-1-million-programmers-as-late-as-2
[19:19:49] <bayaz> Title: Did COBOL have 250 billion lines of code and 1 million programmers, as late as 2009? 
[19:20:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[19:20:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:21:07] <sandman13> If there's a common library or software, we can't count it as distinct, can we?
[19:21:23] <pyzozord> oh wow 1 milion programmers? That's quite a lot of competition. Although 250k lines per programmer is a lot. One person can't handle 250k lines well without extended time spent getting to know that code.
[19:23:01] *** Joins: nuncanada (~dude@181.213.52.63)
[19:23:03] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[19:23:13] <sandman13> pyzozord: I think most of them are 35-40+ in age.
[19:23:24] <sandman13> I could be wrong though
[19:23:34] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:23:37] *** Quits: nuncanada (~dude@181.213.52.63) (Remote host closed the connection)
[19:24:09] <GeDaMo> More likely 60+
[19:25:14] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[19:26:07] <sandman13> "Here at AuxCord we have decided to rewrite our core software Leviathan in Javascript from COBOL" type of headlines when?
[19:26:23] <GeDaMo> More likely to be Java, I suspect
[19:27:16] <pyzozord> Lots of tax offices hire COBOL programmers I see
[19:27:41] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[19:27:43] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[19:29:06] <pyzozord> Some truck company with 250 IT professionals.
[19:30:21] <pyzozord> It might be too much effort to invest into a technology that is sunsetting. It seems like a whole different world. I don't know any of these acronyms and technologies.
[19:31:14] <pyzozord> And the salary seems almost the same, just a bit lower.
[19:31:56] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:32:00] <pyzozord> That's too bad, I bet these COBOL programmers have much more relaxed time at work.
[19:35:26] *** Joins: zaher_ (~zaher@37.48.153.31)
[19:37:13] *** Quits: zaher (~zaher@37.48.149.191) (Ping timeout: 248 seconds)
[19:39:37] *** Joins: kZel (~kZel@90.199.64.48)
[19:40:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:45:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:45:34] *** Joins: arcatech (~arcatech@user/arcatech)
[19:49:28] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[19:50:34] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:51:43] *** Joins: freakazoid343 (~matt@35.136.210.185)
[19:52:49] *** Joins: teser (uid514068@id-514068.tinside.irccloud.com)
[19:53:13] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 248 seconds)
[19:53:32] <teser> quick question? most managers are stupid nowadays?
[19:53:36] <teser> hmm
[19:54:07] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 252 seconds)
[19:54:46] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[19:55:00] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[19:55:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[19:55:09] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[19:58:42] <gravypod> Has anyone here done reverse engineering of .NET/windows things?
[19:58:51] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:59:50] <InPhase> gravypod: See #winehq and #winehackers
[20:00:04] <pikapika> InPhase, hi uwu
[20:00:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[20:00:39] <InPhase> Hello.  :)
[20:00:57] <GeDaMo> Possibly also ##re
[20:01:31] *** Quits: teser (uid514068@id-514068.tinside.irccloud.com) (K-Lined)
[20:01:34] <gravypod> Good catch :). Don't know how that didn't come to my mind 
[20:02:32] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 250 seconds)
[20:02:55] *** Joins: independent_ (~independe@185.50.0.80)
[20:07:47] *** Joins: rxndxs (~ed@201.160.157.102.cable.dyn.cableonline.com.mx)
[20:08:19] <[itchyjunk]> If i make a new type MyVec
[20:08:28] <[itchyjunk]> where i pass in stuff like arrays
[20:08:43] <[itchyjunk]> and work with MyVec via arr.clone() or somesuch
[20:08:51] <[itchyjunk]> is it inefficient?
[20:09:06] <[itchyjunk]> since evertime i work with MyVec type, it has to make copy of some array?
[20:09:13] <[itchyjunk]> i can post my code, sec
[20:11:20] <[itchyjunk]> https://bpa.st/PCNQ
[20:11:21] <bayaz> Title: View paste PCNQ 
[20:11:50] <[itchyjunk]> other.getArr() has to make a copy of the arr each time and pass it on right?
[20:12:27] <GeDaMo> I suspect you don't need to use this getArr method, if it's the same class you should be able to access the array directly
[20:12:55] <[itchyjunk]> other is a different object i think
[20:13:00] <[itchyjunk]> its of MyVec type
[20:13:22] *** Joins: Auron (Auron956@user/auron)
[20:13:40] <[itchyjunk]> it's being passed to the class when dot gets invoked
[20:15:58] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 250 seconds)
[20:17:16] <[itchyjunk]> yehai  think it returns a copy of the arr each time
[20:17:22] <[itchyjunk]> but is it a different copy each time?
[20:17:32] <[itchyjunk]> does that mean i occupy more and more memory with clones?
[20:17:38] <GeDaMo> [itchyjunk]: https://ideone.com/D8hlgR
[20:17:41] <bayaz> Title: Ideone.com 
[20:19:25] <[itchyjunk]> you're passing integers no?
[20:19:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:19:29] <[itchyjunk]> i'm passing arrays
[20:19:37] <GeDaMo> No, passing an object
[20:19:41] <GeDaMo> Line 17
[20:20:36] <[itchyjunk]> The type of the expression must be an array type but it resolved to MyVec 	at MyVec.dot(MyVec.java:23)
[20:20:43] <[itchyjunk]> As soon as i remove getArr()
[20:21:03] <GeDaMo> other.arr[1]
[20:21:14] <GeDaMo> Er, other.arr[i]
[20:21:45] <[itchyjunk]> yeah your constructer is taking in int's it seems
[20:21:48] <[itchyjunk]> mines taking array
[20:21:58] <GeDaMo> Doesn't matter
[20:22:02] *** Quits: zealot (~zealot@182.70.236.250) (Ping timeout: 250 seconds)
[20:22:15] <GeDaMo> Mine is accessing the private arr member of the other object
[20:22:24] <[itchyjunk]> i get that error though
[20:22:27] <[itchyjunk]> without getArr
[20:22:28] *** Quits: lsync (~ls@user/deepspace-link) ()
[20:22:30] <GeDaMo> Show code
[20:22:35] <[itchyjunk]> one i posted
[20:22:42] <GeDaMo> You changed it
[20:23:21] <[itchyjunk]> https://bpa.st/KTBQ
[20:23:22] <bayaz> Title: View paste KTBQ 
[20:23:42] <GeDaMo> Not other[i], other.arr[i]
[20:24:03] <GeDaMo> It's possible for objects to have more than one private instance variable
[20:24:54] <[itchyjunk]> what's arr even here?
[20:24:57] <[itchyjunk]> think i am confused
[20:25:01] <[itchyjunk]> i pass in an array
[20:25:06] <[itchyjunk]> and it turns it to instance array
[20:25:08] <GeDaMo> The name of the instance variable, you declare it on line 2
[20:25:47] <[itchyjunk]> but in dot, i don't pass an array, I pass MyVec object
[20:26:02] <GeDaMo> And a MyVec object has an arr instance variable
[20:26:02] <[itchyjunk]> which i guess takes array at some point?
[20:26:34] <[itchyjunk]> having a type array and a type MyVec is a bit confusing i suppose
[20:26:55] <[itchyjunk]> so internally it's only working with array
[20:27:01] <[itchyjunk]> so i gont need to clone anything
[20:27:16] <[itchyjunk]> wait, but this changes the original one i am passing right?
[20:27:27] <GeDaMo> You don't write to that array
[20:27:33] <[itchyjunk]> i probably shouldn't be changing the original copy of array the user is working with
[20:27:34] <[itchyjunk]> oh
[20:27:40] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[20:27:47] <[itchyjunk]> doesn't this.arr point to the same memory location?
[20:27:52] <[itchyjunk]> if i change it at some point by mistake
[20:27:57] <[itchyjunk]> i change the oriignal array?
[20:28:02] <GeDaMo> Yes
[20:28:15] <[itchyjunk]> should i avoid that?
[20:28:30] <GeDaMo> Depends on what the method is doing but probably yes
[20:30:17] *** Quits: kZel (~kZel@90.199.64.48) ()
[20:31:30] <[itchyjunk]> i wonder if everytime i call getArr() it takes up new memory location though
[20:31:40] <GeDaMo> It does when you clone it
[20:31:59] <[itchyjunk]> does the computer automatically clean it up right after or something?
[20:32:14] <GeDaMo> Garbage collection
[20:32:22] <[itchyjunk]> ah
[20:32:27] <[itchyjunk]> so not really a worry then?
[20:32:52] <GeDaMo> It can be but most of the time you shouldn't worry
[20:33:04] <[itchyjunk]> ah okay
[20:33:15] <[itchyjunk]> wonder how it knows when to garbage something and what not to
[20:33:29] <GeDaMo> It detects if it's still referenced
[20:33:43] *** Quits: Thedarkb (~Thedarkb@185.69.145.14) (Ping timeout: 252 seconds)
[20:34:16] <[itchyjunk]> oh
[20:34:16] *** Joins: jazzy2 (~jaziz@172.58.35.245)
[20:34:27] <[itchyjunk]> i can tell if something is sitll pointing to it or not?
[20:34:31] *** jazzy is now known as Guest6196
[20:34:31] <GeDaMo> Yes
[20:34:34] <[itchyjunk]> impressive
[20:34:39] *** jazzy2 is now known as jazzy
[20:36:28] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[20:37:10] *** Quits: Guest6196 (~jaziz@2600:380:863a:4889:5425:f710:b04a:de02) (Ping timeout: 240 seconds)
[20:42:27] *** Quits: nekobyte (~cat@user/nekobit) (Quit: cute!!!!)
[20:43:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[20:44:43] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 252 seconds)
[20:45:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:47:36] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[20:47:49] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[20:47:59] *** Joins: nekodesu (~bit@user/nekobit)
[20:49:47] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:50:50] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[20:51:14] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:d925:c30a:b85b:b3ae)
[20:51:29] *** Joins: motherr (~motherr@user/motherr)
[20:56:16] *** Quits: motherr (~motherr@user/motherr) (Ping timeout: 252 seconds)
[20:58:17] *** Joins: node1 (~node1@user/node1)
[21:00:17] <[itchyjunk]> if the hardware comes with a set of instruction, all the different things in the programming language would always break down to those fixed set of instruction, right?
[21:00:44] <[itchyjunk]> i wonder if you can alaywas knwo right off the bat what something in programming language gets converted too
[21:01:06] <[itchyjunk]> like if else probably gets converted to the jump if jump thing
[21:01:22] <GeDaMo> There are different ways to do things
[21:01:46] *** Quits: jazzy (~jaziz@172.58.35.245) (Ping timeout: 252 seconds)
[21:01:49] <repne_scasb> c compilers do very sophisticated optimizations so it would be hard to predict
[21:02:05] <repne_scasb> and some other languages are so abstract that one statement would have too many opcodes to think about
[21:02:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:03:01] *** Joins: manin (~x@185.242.190.95)
[21:03:09] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:03:10] <repne_scasb> and then there's just-in-time compilation and VMs
[21:04:38] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[21:05:35] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[21:05:49] *** Joins: alguien (~alguien@user/alguien)
[21:06:00] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[21:06:23] *** Joins: inom (~inom@176.59.111.80)
[21:07:02] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Remote host closed the connection)
[21:07:05] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[21:07:55] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:09:01] *** Quits: inom (~inom@176.59.111.80) (Remote host closed the connection)
[21:09:28] <[itchyjunk]> hmm what did opcode mean again?
[21:09:39] *** Joins: inom (~inom@176.59.111.80)
[21:09:39] <[itchyjunk]> all sounds complciated :P
[21:09:44] <[itchyjunk]> maybe i should write a compiler
[21:10:03] <GeDaMo> opcode is a machine instruction
[21:10:16] <GeDaMo> https://blog.regehr.org/archives/320#example7
[21:10:19] <bayaz> Title: Comparing Compiler Optimizations – Embedded in Academia 
[21:11:09] *** Quits: inom (~inom@176.59.111.80) (Remote host closed the connection)
[21:11:46] *** Joins: inom (~inom@176.59.111.80)
[21:12:27] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[21:13:04] <bob_x1> which build systems are most popular on the linux ? 
[21:13:20] <bob_x1> gnu make is the first one ? 
[21:13:30] <rxndxs> probably cmake, make, autotools
[21:13:37] <rxndxs> in no particular order
[21:13:46] <bob_x1> how I can identify which one being used by the project ?
[21:13:46] *** Joins: src (~src@user/src)
[21:13:49] <InPhase> bob_x1: "popular" is a nebulous metric due to legacies, but cmake is certainly the most recommended.
[21:14:19] <rxndxs> look for Makefile, CMakeLists.txt, configure, etc
[21:14:29] <bob_x1> InPhase: no prob
[21:14:34] <bob_x1> so I have makefile in the folder
[21:15:15] <InPhase> bob_x1: Also, cmake, qmake, and autotools are all front-loaders for make, so this is not independent.
[21:15:54] <rxndxs> yeah, plus sometimes projects will provide multiple options
[21:15:56] <bob_x1> so all these tools create an input for make ?
[21:16:27] <bob_x1> when I do run 'make' command in the folder with makefile, which routine is being used by default ? 
[21:16:28] <InPhase> bob_x1: It's safe to say that the vast majority of Linux project builds use make within the process.  Those three first-pass tools are all about what gets used to configure the libraries in a system-specific manner.
[21:17:07] <rxndxs> bob_x1: i believe it runs the top most command in the file, which is usually 'all'
[21:17:16] <InPhase> bob_x1: Note that qmake is nearly abandoned as a project, as in the competitive space between cmake and qmake, cmake has grown favor even with the original authors of qmake.  Autotools still has its adherents, but has lost popularity as it is harder to work with.
[21:18:58] <InPhase> bob_x1: Some people roll their own configuration scripts and such as well, which can work.  There are downstream tools one can use manually, like pkg-config, to query information about available libraries.  But cmake will generally handle this more automatically for most libraries.
[21:21:16] <InPhase> bob_x1: Of course then you have different lanaguages with their own custom build systems.  Like, Rust has Cargo.
[21:22:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[21:22:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:23:13] *** Joins: aradesh (~aradesh@user/aradesh)
[21:23:54] <bob_x1> Well maybe somebody can understand here my problem
[21:24:43] <[itchyjunk]> https://alexander-hansen.dev/blog/benefits-of-not-using-an-ide
[21:24:44] <bayaz> Title: Benefits of not using an IDE 
[21:24:48] <bob_x1> Im compiling lynx sources on my own. Here is the 'make' command output: https://termbin.com/54ni , and here is 'ldd lynx' ldd output for the compiled binary https://termbin.com/f8sk
[21:24:49] <bayaz> Type: text/plain; charset=utf-8 
[21:24:50] <bayaz> Type: text/plain; charset=utf-8 
[21:26:10] <InPhase> bob_x1: Looks fine.  What's the issue?
[21:26:36] <bob_x1> InPhase: I keep getting the error when start lynx for https website: Alert!: This client does not contain support for HTTPS
[21:27:20] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[21:28:29] <InPhase> [itchyjunk]: Yeah, agreed.  Linux is my IDE.
[21:28:32] <rxndxs> [itchyjunk]: cool
[21:28:48] <bob_x1> Yes IDE is set of tools 
[21:29:06] <bob_x1> But sometimes I got stuck with problems like mine
[21:29:15] <rxndxs> bob_x1: you probably need to set up some compile option for that feature, maybe the build guide says something about that ?
[21:29:30] <[itchyjunk]> i noticed that i forgot how to do `public void main(String args[]) {}` because i was ticking that one button in eclipse to do it lol
[21:29:37] *** Joins: Dreg (~Dreg@fr33project.org)
[21:29:37] <oldlaptop> bob_x1: You should probably ask the lynx people, if you still haven't solved your problem after reading their documentation
[21:29:53] <bob_x1> rxndxs: There is docs/README.ssl . I did both flags --with-ssl and --with-gnutls , and ldd output shows that there are some ssl built in 
[21:29:54] <InPhase> bob_x1: Did you check the documentation for how to configure ssl support at build time for lynx?
[21:30:00] <[itchyjunk]> maybe you don't have the SSL libraries and such needed?
[21:30:27] <bob_x1> [itchyjunk]: wouldnt it fail during building process ?
[21:30:32] <InPhase> bob_x1: Your build process paste does not show what commands you used.
[21:30:51] <InPhase> bob_x1: Do you have the full build log including the configuration commands?
[21:31:06] <[itchyjunk]> bob_x1, not sure. maybe you have to force fail it if ssl is missing?
[21:31:17] <oldlaptop> [itchyjunk]: The pastes make clear that those libraries are present, and being *linked*.
[21:31:22] *** Quits: snake (~snake@user/snake) (Ping timeout: 250 seconds)
[21:31:32] <[itchyjunk]> ok
[21:31:38] *** Joins: cthulchu (~Cthulchu@94.153.37.190)
[21:31:59] <oldlaptop> My guess offhand is that lynx needs to be told to actually use them, and bob_x1 is not doing that. (If so, the lynx people will have documented the whole procedure.)
[21:32:20] <bob_x1> InPhase: here is config.log https://termbin.com/svbm
[21:32:21] <bayaz> Type: text/plain; charset=utf-8 
[21:32:50] <oldlaptop> are --with-ssl and --with-gnutls mutually exclusive, perhaps?
[21:33:08] <GeDaMo> Are you sure the lynx you're running is the one you compiled?
[21:33:11] <oldlaptop> (if the former is asking for it to be linked against openssl)
[21:33:38] <bob_x1> GeDaMo: yes. It's saved in the source folder as result of the build. And I run it ./lynx https://
[21:33:41] <oldlaptop> to be clear, this is a guess, because you aren't asking in a lynx channel
[21:34:14] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:34:50] <bob_x1> And lynx has no separate channel. I have to write to a newsletter
[21:35:18] <rxndxs> bob_x1: what's output of 'ldd ./lynx' ?
[21:35:19] <InPhase> Is it snail mail?
[21:35:26] <rxndxs> it may be using some other installed lib
[21:35:39] <bob_x1> rxndxs: https://termbin.com/s2b4
[21:35:40] <bayaz> Type: text/plain; charset=utf-8 
[21:36:22] <bob_x1> The last output is for build without --with-gnutls flag. Tried the idea of mutual exclusivity
[21:36:52] <GeDaMo> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=753699
[21:37:07] <InPhase> bob_x1: Note that gnutls is marked as experimental in lynx.
[21:38:07] <oldlaptop> from a sig in GeDaMo's link: (gnutls can also be used, but if you are compiling lynx for your own use,
[21:38:07] <oldlaptop> there is no reason to consider using that package)
[21:38:07] <oldlaptop> 	-- Thomas E. Dickey on the Lynx mailing list, about OpenSSL
[21:39:01] <InPhase> bob_x1: And does that build function for https?
[21:39:29] *** Quits: independent_ (~independe@185.50.0.80) (Remote host closed the connection)
[21:39:46] <oldlaptop> debian spent many years assuming they could not link GPL software against openssl for distribution with debian because of licensing issues on openssl's end; IIRC they relatively recently decided that was mistaken anyway
[21:39:48] *** Joins: independent_ (~independe@185.50.0.80)
[21:40:09] <oldlaptop> their old legal reasoning doesn't apply to you building lynx for yourself in any case
[21:40:37] <bob_x1> InPhase: no. I cannot get it work with any combination of flags
[21:40:41] <rxndxs> bob_x1: this might help you, https://github.com/archlinux/svntogit-packages/blob/packages/lynx/trunk/PKGBUILD this is how the pkg is built for arch as an example
[21:40:42] <bayaz> Title: svntogit-packages/PKGBUILD at packages/lynx · archlinux/svntogit-packages 
[21:41:13] <InPhase> oldlaptop: lynx is GPLv2...  What exactly did they think was a problem with that license?  It's not exactly a rare choice.  :-P
[21:41:25] <oldlaptop> Not lynx's license, OpenSSL's licence.
[21:41:30] <oldlaptop> *license
[21:41:47] *** Quits: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:41:53] <oldlaptop> or rather the interaction between GPL and OpenSSL's license (which is a very rare choice)
[21:42:27] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[21:43:27] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:43:32] <oldlaptop> many GPL programs have specific license exceptions explicitly permitting them to be linked with openssl
[21:43:42] <InPhase> "As the OpenSSL License is Apache License 1.0, but not Apache License 2.0, it requires the phrase "this product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit" to appear in advertising material and any redistributions (Sections 3 and 6 of the OpenSSL License). Due to this restriction, the OpenSSL License and the Apache License 1.0 are incompatible with the GNU GPL."
[21:43:56] <InPhase> People need to stop shooting themselves in the foot with edge cases.
[21:44:36] <oldlaptop> some OS vendors that are not debian have relied on the GPL's general exception for linking with libraries that are "part of the operating system"
[21:44:48] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 250 seconds)
[21:44:57] <InPhase> I try to avoid using licenses that impose bonus requirements for what gets bundled in downstream releases.  This tends to cause problems people don't foresee at the time of initial release, while they're just thinking about fair credit.
[21:45:07] <oldlaptop> that isn't as clear a distinction for debian as it is for, say, openbsd, and they decided twenty years ago or more that they couldn't do it
[21:46:23] <InPhase> If someone creates a device that uses OpenSSL as a small piece, and then runs a TV commercial, would they expect an announcer to ramble through that statement at the end of the commercial?  If not, people should not choose licenses with such sweeping statements.  :)
[21:46:24] <oldlaptop> last year (I thought it was a little longer ago) they finally decided they can: https://lists.debian.org/debian-devel/2020/10/msg00165.html
[21:46:25] <bayaz> Title: Do Debian now simply ignore OpenSSL incomatibilities with GPL? 
[21:46:45] <[itchyjunk]> https://aws.amazon.com/blogs/industries/announcing-amazon-genomics-cli-preview/
[21:46:45] <bayaz> Title: Announcing Amazon Genomics CLI (Preview) | Amazon Web Services 
[21:46:50] <[itchyjunk]> petabyle level
[21:47:05] <[itchyjunk]> hmm, maybe learning how to work with big data is important these days
[21:47:05] <oldlaptop> InPhase: Hence the more or less complete removal of such clauses from the licenses used in actual BSDs (where they originated)
[21:47:06] <pikapika> Who owns openssl
[21:48:37] <InPhase> [itchyjunk]: There's going to be a lot of business available for the people who can work well with big data going forward.
[21:49:29] <[itchyjunk]> Yeah, need to learn big data
[21:49:30] <[itchyjunk]> somehow
[21:49:42] <[itchyjunk]> need access to HPC too while i'm at it :s
[21:51:33] <bob_x1> Ok I downloaded a little lower version lynx2.9.0dev.8 and it works there
[21:53:09] <[itchyjunk]> Maybe i can do scraping or something with Java
[21:53:12] <[itchyjunk]> sounds a bit horrible though
[21:53:38] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:53:52] *** Quits: ^[ (~user@user//x-8473491) (Quit: ^[)
[21:54:51] *** Joins: kobalt (~rsonx@user/kobalt)
[21:54:54] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:55:09] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:55:21] *** Quits: elnavigator (~elnavigat@105.196.201.223) (Ping timeout: 248 seconds)
[21:56:22] *** Quits: exvicesindaco (~exvicio@host-80-116-9-227.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[21:56:23] *** Quits: gggp (~textual@60.10.194.48) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:01:20] *** Joins: zaher (~zaher@37.48.177.45)
[22:02:40] *** Joins: nekobyte (~cat@user/nekobit)
[22:03:07] *** Quits: zaher_ (~zaher@37.48.153.31) (Ping timeout: 268 seconds)
[22:05:11] *** Joins: pavonia (~user@user/siracusa)
[22:09:39] <pikapika> [itchyjunk], its perfectly fine for scraping
[22:09:47] <pikapika> I have used java before for that
[22:11:55] <mrig> oh! vim can do printf commands in its substitution, that is so cool! :)
[22:12:53] *** Joins: zaher_ (~zaher@37.48.154.251)
[22:13:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:14:16] *** Quits: cthulchu (~Cthulchu@94.153.37.190) (Ping timeout: 250 seconds)
[22:14:42] *** Quits: zaher (~zaher@37.48.177.45) (Ping timeout: 250 seconds)
[22:16:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:16:30] <[itchyjunk]> oh i see
[22:16:34] <mrig> Well that was a time saver :)
[22:16:35] <[itchyjunk]> maybe that's a good thing to try then
[22:16:43] <[itchyjunk]> use java to do some weby things
[22:16:48] <[itchyjunk]> might learn sockets
[22:17:13] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[22:17:35] <pikapika> [itchyjunk], scraping is quite nice on java
[22:17:42] <pikapika> Java is a nice language
[22:18:15] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[22:18:54] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:d925:c30a:b85b:b3ae) (Quit: Textual IRC Client: www.textualapp.com)
[22:19:52] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[22:20:20] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[22:22:22] *** Joins: snake (~snake@user/snake)
[22:23:08] <pyzozord> mrig: I warn you, this rabbit hole goes deep! :D
[22:23:53] <lf94> rust or c++ which is overall more complex
[22:24:15] <InPhase> lf94: C++ is a much more complex language.
[22:24:29] <InPhase> lf94: It has to hold up a lot of legacy approaches.
[22:24:37] <pyzozord> Rust didn't have time to grow all the extra weight yet
[22:25:31] <InPhase> C++ is a 32 year old language with 49 years of backwards compatibility.
[22:25:46] <pyzozord> Also c++ has a unhealthy combination of "must support legacy" and "must have modern features" at the same time
[22:26:49] <lf94> If we delineated legacy and modern C++
[22:26:51] <lf94> modern C++
[22:26:54] <lf94> vs rust
[22:27:08] <lf94> Would you say the complexity is probably on-spar?
[22:27:10] <lf94> on-par
[22:28:09] <pyzozord> you can't really do that. Can chop off a head of someone and compare how tall they are :P
[22:28:19] <pyzozord> s/Can/Can't/
[22:28:23] *** Joins: elnavigator (~elnavigat@105.196.201.223)
[22:28:39] <lf94> That is not a good analogy
[22:28:52] <lf94> I know for a fact there are people doing "modern C++"
[22:29:12] <InPhase> lf94: If you stick to a thin modern subset of C++, they're not really too different.  Just Rust has some slightly more modernized design elements that C++ can't adopt because of that backwards compatibility, which many Rust adherents think makes Rust easier to scale up with.  They both have some learning overhead, but that's probably about even if you only have to ever face clean modern C++ code.
[22:29:32] <InPhase> lf94: The problem arises in that C++ deviates from that rapidly as soon as you bring in libraries.
[22:29:49] <lf94> deviates as in, degrades, because the libraries are supporting legacy?
[22:30:05] <InPhase> lf94: As in the interfaces for libraries are rarely modernized.
[22:30:14] <lf94> Ok, that's what I figured.
[22:30:20] <pyzozord> Fine. Not head, feet.
[22:30:22] <lf94> welp looks like I'll continue to use rust :^)
[22:30:52] <lf94> I know Rust very well, I guess I was just having one of those "all you need is C" delusional moments.
[22:31:01] <InPhase> lf94: If you want jobs in 2021 and upcoming short term years, C++ will get you a lot farther.  :)  But Rust is likely to have a promising future.
[22:31:17] <lf94> Yeah, I'll be in demand in 10 years
[22:31:28] <lf94> I already have about 3 years experience with rust
[22:31:33] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[22:32:11] <InPhase> lf94: You probably wouldn't find modernized C++ too hard to pick up.  I think Rust makes a good background for doing C++ right.
[22:33:31] <InPhase> I gave bonus points to a C++ job applicant recently for also having a Rust background.  It makes sense.
[22:33:37] *** Joins: JT1 (~JT1@pat-89-23-173-136.pool.powernet.com.ru)
[22:33:45] <JT1> Hi
[22:33:52] <GeDaMo> Hi JT1 :)
[22:34:39] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[22:34:43] <pyzozord> Hmm, I'm thinking about rust but I think if I wanna go this way I should go all the way and just learn agda. I think I'll add agda to my list of esoteric languages to learn.
[22:36:18] *** Joins: rsx (~dummy@ppp-188-174-148-251.dynamic.mnet-online.de)
[22:38:34] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 252 seconds)
[22:39:13] <mrig> oh why are there differing SVG colour names with the same color values, that is just crazy :|
[22:40:15] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[22:40:16] *** Joins: inky (~inky@5.77.169.163)
[22:40:30] <pyzozord> I saw this yesterday, but I couldn't follow most of it https://www.youtube.com/watch?v=bRudW0aBNg
[22:40:32] <bayaz> Title: - YouTube 
[22:40:49] <mrig> I suppose i'll pick one and stick to it, but include the other in what is allowed, presumably for backwards compatibility or something.
[22:40:57] <rxndxs> speaking of c++ and rust, what are people's opinion on inheritance vs traits ?
[22:42:02] <jinsun> pyzozord: what is so hard to follow about "Video unavailable" :p
[22:42:29] <pyzozord> oh sorry I ate the last character, https://www.youtube.com/watch?v=bRudW0aBNg8
[22:42:31] <bayaz> Title: Eliminating Run-Time Errors with Agda - Computerphile 
[22:43:49] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[22:44:02] <jinsun> oh I saw that too, (and closed mid way because it was just greek to me)
[22:44:13] *** Quits: rsx (~dummy@ppp-188-174-148-251.dynamic.mnet-online.de) (Quit: rsx)
[22:44:59] <pyzozord> I watched the whole thing but missed most of the nitty gritty.
[22:45:22] <pyzozord> Also it seemed like those programms written this way would be extremly inefficient.
[22:46:46] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 250 seconds)
[22:47:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[22:47:54] *** Joins: magla (~gelignite@55d457aa.access.ecotel.net)
[22:50:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:50:21] <pyzozord> beaky: you are doing a lot of agda right? What's a difference between type theory and category theory?
[22:51:40] *** Joins: jjido (~Denis@2a01:4b00:80e2:7100:94f3:a79f:8eb9:c547)
[22:52:39] *** Joins: independent_ (~independe@185.50.0.80)
[22:55:48] <blahboybaz> In MDN documentation about javascript:  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#static_properties  They have some kind of notation "@@species" can beseen in "get Map[@@species]" -for example. What does the "@@" represent? And, what does the "species" represent? Or, is there some MDN documentation that explains that notation they are using?
[22:55:48] <bayaz> Title: Map - JavaScript | MDN 
[22:57:19] <[itchyjunk]> you import the package right?
[22:57:24] <[itchyjunk]> import java.net; ?
[22:57:48] <[itchyjunk]> (and dont need to import module)
[22:58:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:58:15] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:d925:c30a:b85b:b3ae)
[22:59:28] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[23:00:19] *** Joins: Akuli (~Akuli@82-203-162-147.bb.dnainternet.fi)
[23:01:07] *** Quits: independent_ (~independe@185.50.0.80) (Ping timeout: 252 seconds)
[23:02:53] <blahboybaz> [itchyjunk]: Not sure who you talking to -sorry
[23:03:28] <[itchyjunk]> to you
[23:03:34] <[itchyjunk]> answer me now, damnit!
[23:03:45] <[itchyjunk]> by you i mean "i should do this right?!"
[23:03:50] <[itchyjunk]> i want to do socket stuff in java
[23:04:10] <[itchyjunk]> there seems to be different packages but java.net seems to be standard?
[23:04:28] <Trashlord> try it and see
[23:04:36] <Trashlord> surely you can find a tutorial somewhere
[23:04:58] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 250 seconds)
[23:05:36] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:05:44] <[itchyjunk]> ah, time to shut down this channel then. everyone can find tutorial somewhere
[23:05:45] *** Quits: byanka (~byanka@78.137.43.40) (Ping timeout: 248 seconds)
[23:07:33] *** Joins: rany (~rany@user/rany)
[23:07:34] *** Joins: mathAndRhetorics (~juliaEnv@ip-86-49-242-28.net.upcbroadband.cz)
[23:08:08] *** Quits: juliaEnv (~juliaEnv@ip-86-49-242-28.net.upcbroadband.cz) (Read error: Connection reset by peer)
[23:08:15] *** Joins: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl)
[23:09:38] <[itchyjunk]> apparently, you can't import packages
[23:09:41] <blahboybaz> fuck it
[23:10:11] <[itchyjunk]> sorry blahboybaz,  i dunno js
[23:13:13] *** Quits: ajmea97 (~jamea@200.68.141.43) (Ping timeout: 252 seconds)
[23:13:40] <pikapika> [itchyjunk], java is a well liked language
[23:14:11] <GeDaMo> [itchyjunk]: try import java.net.*;
[23:14:14] <[itchyjunk]> is it?
[23:14:29] <[itchyjunk]> someone said visual code was most liked in some poll
[23:14:41] <[itchyjunk]> visual studio? err i can't remember
[23:14:43] <[itchyjunk]> visual script?
[23:14:47] <[itchyjunk]> GeDaMo, ah that works
[23:15:04] <[itchyjunk]> what's the difference  ?
[23:15:14] <[itchyjunk]> between java.net and java.net.*
[23:15:15] <GeDaMo> You import classes, not packages
[23:15:17] <pikapika> * imports all calsses there into your namespace
[23:15:20] <[itchyjunk]> oh i see
[23:15:27] <pikapika> otherwise you mention specific classes
[23:15:31] <pikapika> there is also static imports
[23:16:21] <pikapika> Java is a superb language. Static typing and nice libraries built in.
[23:16:31] <pikapika> Good aesthetics too
[23:16:47] <[itchyjunk]> hmm
[23:17:09] <[itchyjunk]> idk what staticlly typed means actually. i hear that a lot too "X is a staticlly typed language"
[23:17:31] <[itchyjunk]> oh
[23:17:40] <[itchyjunk]> just mean you explicetly declare types
[23:17:55] <rxndxs> types are figured at compile time
[23:17:57] <pikapika> and the compiler nicely points out type errors to you
[23:18:12] <rxndxs> as opposed to say python, where a value could be anything at runtime
[23:18:13] <[itchyjunk]> right
[23:18:42] <[itchyjunk]> i am guessing there is a lot of pros and cons for both since different language seems to use different models
[23:18:57] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[23:19:28] <pikapika> Dynamic has its uses but really there is no getting around the fact that type errors are a halting problem class of problems in dynamic langs
[23:19:32] *** Joins: independent_ (~independe@185.50.0.80)
[23:19:42] <[itchyjunk]> interesting, i can create sockets via java.net.* but i need java.io.* to read and write to them
[23:19:49] <pikapika> Yes
[23:19:51] <pikapika> Thats the beauty of it
[23:20:04] <pikapika> Java library is quite well abstracted
[23:20:11] <pikapika> Streams are orthogonal from their input
[23:20:39] <rxndxs> pikapika: kinda weird how something like js is dynamic from design, and then they just add types on top of it
[23:20:56] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:d925:c30a:b85b:b3ae) (Quit: Textual IRC Client: www.textualapp.com)
[23:21:12] <pikapika> rxndxs, there is no escaping the halting problem
[23:21:41] <pikapika> a type error could occur anywhere and anytime in your code. It could occur immediately in the first function or it could occur in a rare codepath that gets executed after 10 hours
[23:22:06] <pikapika> And the problem with dynamic typing is that, codepath can't be statically determined
[23:22:08] <pikapika> its a halting problem
[23:22:23] <[itchyjunk]> how do you mean the halting problem here, btw.
[23:22:33] <[itchyjunk]> how does type relate to the halting problem?
[23:22:34] <pikapika> [itchyjunk], types can change any time during run time
[23:22:44] *** Quits: JT1 (~JT1@pat-89-23-173-136.pool.powernet.com.ru) (Ping timeout: 250 seconds)
[23:23:06] <pikapika> So determining the possible types is a similar class of problem as a halting problem
[23:23:13] <[itchyjunk]> oh i see
[23:23:16] <pikapika> in that, you have to actually execute the program to know
[23:23:36] <pikapika> its impossible to predict statically in the general case
[23:23:39] <[itchyjunk]> the type of a variable can change at anytime, that is?
[23:23:43] <pikapika> yes
[23:24:08] <rxndxs> i don't like dynamic-ness of languages for that reason >:( 
[23:24:13] *** Quits: inky (~inky@5.77.169.163) (Ping timeout: 252 seconds)
[23:24:13] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 252 seconds)
[23:24:19] <[itchyjunk]> hmm i am missing a lot of programming langauage jargons to think clearly here
[23:24:25] *** Joins: Drek45 (~jrept371@102.129.152.109)
[23:24:27] <rxndxs> it's impresive for example the amount of static analisys rust has accomplished
[23:24:45] *** Joins: inky (~inky@46.36.119.19)
[23:24:49] *** Quits: magla (~gelignite@55d457aa.access.ecotel.net) (Quit: Stay safe!)
[23:24:49] <rxndxs> analysis? not sure
[23:24:56] <[itchyjunk]> does python actually let some var v start off as int and later same var v have a different type?
[23:25:05] <pikapika> all the time [itchyjunk] 
[23:25:12] <pikapika> no syntax needed
[23:25:13] <[itchyjunk]> interesting
[23:25:15] <pikapika> just a normal assignment
[23:25:16] <[itchyjunk]> oh
[23:25:17] <GeDaMo> http://blogs.perl.org/users/ovid/2010/08/what-to-know-before-debating-type-systems.html
[23:25:18] <bayaz> Title: What to know before debating type systems | Ovid [blogs.perl.org] 
[23:25:19] <bjs> [itchyjunk]: did you try? `x = 1; print(x); x = "hello"; print(x)`
[23:25:19] <pikapika> thats how dynamic langs are
[23:25:28] <rxndxs> its actually used lots of times, e.g. type None
[23:25:37] <[itchyjunk]> v = "abc", v = 2 type?
[23:25:43] <[itchyjunk]> bjs, ah
[23:26:39] <pikapika> [itchyjunk], you could input anything to a function
[23:26:51] <bjs> [itchyjunk]: what does ah mean :)
[23:27:07] <pikapika> which means you could send a string to a function expecting an int and thered' be no compile time error
[23:27:13] <pikapika> you'll only know when the runtime reaches that area
[23:27:20] <rxndxs> GeDaMo: that article is nice, will have to read it all some time
[23:27:30] <pikapika> at least with ypthon the typing is strong so when it does reach that code, it would generate a type error
[23:27:38] <pikapika> with some langs like js, strange type coercions would silently occur
[23:28:18] <rxndxs> worst part is in js it may not even error at runtime, it might just interpret like, 'oh yes, compare the int and the string'
[23:28:58] <pikapika> Thats what I maent with coercions
[23:29:04] <pikapika> and its not just strings
[23:29:13] <pikapika> it does strange things between objects, integers, arrays and strings too
[23:29:24] <pikapika> but there are pluses and minuses to js
[23:30:18] <rxndxs> i mean, c doesn't have the strongest of types as well, and it is helpfull as well, pluses and minuses everywhere :)
[23:32:45] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[23:34:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Remote host closed the connection)
[23:36:48] <jinsun> F# on the other hand doesn't even implicity convert ints to floats, so you get a type error if you do `let x: float = 1`
[23:37:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:42:53] <pikapika> GeDaMo, one point I would disagree in that article is Java having a stricter type system than C++. While it may be true for some primitive types (ie the various integers, reals and bool), at the object level and otherwise C++ provides more type safety and compile time gaurantees
[23:43:23] <xsperry> jinsun interestingly, neither does haskell (implicitly convert ints to floats), but x :: Float; x = 1 still works
[23:43:51] <pikapika> Thats a matter of literals though
[23:44:04] <xsperry> yes
[23:44:40] <nitrix> C has a good balance. Things are properly typed, up until you get into generic code, in which case the Standard goes into what it calls "effective types" and you're ought to use `void *`.
[23:45:12] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[23:45:18] <pikapika> Yeah C is nice. It provides a decent static system but also allows you an escape hatch in void* and casting
[23:45:22] <nitrix> It keeps the type system from exploding in complexity. At some point, it's simpler for the developer to verify the invariants themselves than trying to encode them into types.
[23:45:45] <pikapika> nitrix, its not beyond the pale to simulate C++ templates via macros though
[23:47:14] <nitrix> People try to do templates with it, but I don't think that's a good idea. The modern compilers are already capable of taking `void *`-like implementations that uses `memcpy`, inline them and specialize the calls to the underlaying type. It's practically parametric polymorphism, but it's done as an optimization pass.
[23:48:44] <pikapika> Does it do that with primitive types like int too? For hefty objects I won't mind the void* cost because we'd pass it as pointers anyways but ints and floats are where it can kill it to naively dereference
[23:48:54] <jinsun> xsperry: oh nice, so even though there is no conversion, the type of the literal is not fixed, it can be int and float depending on what it is being assigned to
[23:49:14] <xsperry> jinsun, type of 1 literal is Num a => a
[23:49:22] <xsperry> so you're right
[23:50:05] <nitrix> Yes, it does for primitives. I believe what triggers the optimization is the SSA constant propagation of the `sizeof *element` once it gets inlined.
[23:50:30] *** Joins: jacks2 (~bc8167eb@217.29.117.252)
[23:50:54] <jacks2> "At some point, it's simpler for the developer to verify the invariants themselves than trying to encode them into types." <- true. but C is VERY far from reaching that point though :)
[23:51:22] <Stefan26> have you ever tweaked the compilation output? e.g. rearranging the "assembly"?
[23:52:23] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[23:58:29] *** kinduff4 is now known as kinduff
