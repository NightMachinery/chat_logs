[00:24:38] *** Quits: lisp123 (~lisp123@45.86.202.65) (Remote host closed the connection)
[00:25:16] *** Joins: lisp123 (~lisp123@45.86.202.65)
[00:29:49] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 252 seconds)
[00:43:17] *** Joins: lisp123 (~lisp123@45.86.202.65)
[00:50:59] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:26:25] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[01:34:40] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[01:36:37] *** Joins: aeth (~aeth@user/aeth)
[02:17:15] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 244 seconds)
[02:20:08] *** Quits: lisp123 (~lisp123@45.86.202.65) (Remote host closed the connection)
[02:21:22] *** Joins: lisp123 (~lisp123@45.86.202.65)
[02:26:25] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 252 seconds)
[02:54:31] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:59:55] *** Joins: lisp123 (~lisp123@45.86.202.65)
[03:00:05] *** Joins: selwyn (~selwyn@user/selwyn)
[03:10:28] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 244 seconds)
[03:15:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:30:06] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 244 seconds)
[03:34:33] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 248 seconds)
[03:34:57] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[03:36:29] *** Quits: lotuseater (~user@p200300e7871bf00038fb8d6cf7d8260d.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[03:45:06] *** Joins: lisp123 (~lisp123@45.86.202.65)
[03:49:37] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 245 seconds)
[03:54:29] *** Joins: selwyn (~selwyn@user/selwyn)
[04:01:34] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:35:12] *** Quits: random-nick (~random-ni@87.116.183.125) (Ping timeout: 244 seconds)
[05:42:56] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[06:27:05] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Quit: Client quit)
[06:29:09] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c)
[06:31:54] *** Joins: Oladon (~olad@98.43.81.226)
[06:32:52] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c) (Client Quit)
[06:35:05] *** Joins: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c)
[07:21:34] *** Quits: sts-q (~sts-q@91.200.108.216) (Ping timeout: 244 seconds)
[07:23:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 256 seconds)
[07:37:10] *** Joins: sts-q (~sts-q@212.53.219.134)
[08:05:02] *** Quits: jeffrey (~jeffrey@2001:1c00:b11:8800:6035:eeff:fe81:bf1c) (Quit: Client quit)
[08:21:42] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:39:57] *** Joins: lisp123 (~lisp123@45.86.202.65)
[08:40:48] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:43:27] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:45:35] *** Joins: lisp123_ (~lisp123@45.86.202.65)
[08:46:18] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 244 seconds)
[09:47:29] *** Quits: lisp123_ (~lisp123@45.86.202.65) (Read error: Connection reset by peer)
[10:16:56] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[10:42:30] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:45:46] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:53:14] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[11:04:26] *** Joins: shka (~herr@109.231.62.239)
[11:20:36] *** Joins: lotuseater (~user@p200300e7871bf00038fb8d6cf7d8260d.dip0.t-ipconnect.de)
[11:39:04] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:42:28] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[12:35:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:39:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:51:39] *** Joins: Harag (~user@105.243.9.173)
[12:51:41] *** Joins: selwyn (~selwyn@user/selwyn)
[14:49:44] *** Joins: silasfox (~silasfox@xdsl-85-197-57-82.nc.de)
[14:59:19] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:03:29] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Quit: Leaving...)
[15:18:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:17:21] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:40:11] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:42:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[17:42:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:58:09] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[18:22:35] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:28:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:32:52] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[18:34:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Client Quit)
[18:34:32] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[18:44:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[18:46:46] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:55:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:06:04] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:36:10] *** Joins: thrig (~thrig@65.113.153.50)
[19:39:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:39:26] *** Quits: silasfox (~silasfox@xdsl-85-197-57-82.nc.de) (Quit: silasfox)
[19:41:04] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:43:18] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:54:00] *** Joins: selwyn (~selwyn@user/selwyn)
[20:14:39] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[20:14:57] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:15:04] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:18:22] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:18:23] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:21:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:22:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:24:19] *** Joins: Oladon (~olad@98.43.81.226)
[20:26:28] *** Joins: selwyn (~selwyn@user/selwyn)
[20:29:23] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:30:31] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:31:42] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:33:46] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[20:34:45] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[20:38:10] <anddam>  beginner's question: what interpreter should I install for following Seibel's Practical Common Lisp?
[20:39:45] <thrig> any? there aren't any CLISPisms like there are in "Land of Lisp"
[20:42:55] <beach> anddam: Most people here use SBCL.
[20:43:02] <beach> anddam: But it is not an interpreter.
[20:43:57] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 244 seconds)
[20:44:07] <beach> anddam: The recommended installation is SBCL + Emacs + SLIME + Quicklisp.  It is all packaged together in a system called Portacle, in case you don't already have the other components. 
[20:44:46] *** Joins: makomo (~makomo@user/makomo)
[20:45:04] <travv0> he mentions the now defunct "lisp in a box" in the book, portacle is pretty much the modern version of that
[20:45:35] <beach> anddam: It is important to realized that, just because you have an interactive read-eval-print-loop (REPL) it doesn't mean that there is an interpreter.
[20:45:56] *** Joins: aeth (~aeth@user/aeth)
[20:46:21] <beach> anddam: It is important because people who think that REPL implies interpreter then also incorrectly infer that Common Lisp is slow because it is interactive.  In reality, most modern Common Lisp systems compile to native code on the fly.
[20:47:25] <thrig> SBCL getting pretty close to C speeds with lower chance of segfaults
[20:53:54] <beach> anddam: Are you still here?
[20:58:12] <anddam> yes
[20:58:23] <beach> anddam: Did all that make sense to you?
[20:58:31] <anddam> maybe, I am reading now
[20:58:39] <anddam> I was losing a fierce battle against a win10 vm
[20:59:39] <anddam> beach: I am not clear on the definition of "interpreter" then
[21:00:09] <anddam> I think I was suggested either sbcl or ecl on #lisp
[21:00:20] <beach> A program that executes code directly, as opposed to first translating it into native code for the processor and then executing that code, which is what a compiler does.
[21:00:27] <anddam> side note, I already have emacs and sly installed
[21:00:52] <beach> anddam: Then definitely SBCL is the best choice, for getting help and such.
[21:01:08] <anddam> so you were saying I can have a REPL and not an interpreter, but a compiler, right?
[21:01:21] <anddam> because some agent has to do something to the code I input
[21:01:27] <beach> anddam: Yes, SBCL compiles on the fly.  No interpreter involved.
[21:01:50] <anddam> ok, and it is still a "live" environment due to clisp runtime-magic
[21:01:57] <beach> anddam: Some people mistakenly think a compiler implies a "batch translation". 
[21:02:28] <beach> anddam: Oh, and CLISP is a particular implementation of Common Lisp.  So don't use CLISP as an abbreviation for Common Lisp.
[21:02:41] <beach> Use CL if you don't have your abbrev processor on in Emacs.
[21:02:46] <anddam> beach: oh right
[21:02:58] <anddam> wow, this school teaches stuff
[21:03:17] <beach> Heh!
[21:03:25] <anddam> beach: I am not sure to grasp the meaning of "batch translation" there
[21:03:47] <beach> A source file as input and an object file as output.
[21:04:09] <beach> Typically followed by link, execute, fail, edit, compile...
[21:04:13] <anddam> ok, that's roughly my concept of compiler
[21:04:19] <beach> But that's wrong.
[21:04:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[21:04:36] <beach> A compiler is just a program that translates to native instructions for the processor.
[21:04:49] <beach> A Common Lisp compiler does that every time you type a form to the REPL.
[21:05:30] <beach> In SBCL, try (say) (defun ff (x) (+ x 1)) and then (disassemble #'ff).
[21:05:40] <beach> You will see native code.
[21:05:54] <anddam> whereas what woule the "object file" mentioned earlier contain?
[21:06:13] <beach> That's why this is totally important, because people might avoid Common Lisp, thinking that it must be slow because to them, it looks interpreted. 
[21:06:34] <beach> An object file contains native code. 
[21:06:57] <beach> So a "batch compiler" does compile to native code, but it doesn't HAVE to be a batch file compiler to be a compiler.
[21:07:13] <beach> Like I said, a modern Common Lisp system compiles each expression as you type it. 
[21:08:18] <beach> Oh, I forgot one step.  Interpreted implies slow most of the time.
[21:08:26] <beach> So that part of their reasoning is correct.
[21:08:47] <beach> The part that is incorrect is that REPL implies interpreted.
[21:09:46] <thrig> /bin/sh being hella slow
[21:10:44] <beach> anddam: I need to vanish to have dinner with my (admittedly small) family.  I hope others can answer your questions.
[21:12:24] <anddam> thank you so much
[21:12:35] <anddam> enjoy 
[21:15:15] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:18:59] *** Joins: selwyn (~selwyn@user/selwyn)
[21:19:45] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[21:20:10] *** Joins: selwyn (~selwyn@user/selwyn)
[21:21:54] <lotuseater> anddam: on what platform do you run?
[21:32:40] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[21:33:49] *** Joins: thrig (~thrig@65.113.153.50)
[21:51:11] <anddam> "but it doesn't HAVE to be a batch file compiler to be a compiler."  <-- this bit meaning that batch file compilers compile a whole file rather than a single element like a form?
[21:51:19] <anddam> lotuseater: a linux system
[21:52:11] <thrig> most folks probably think "gcc" or "clang" when "compiler" comes up, but that's not the only way
[21:54:16] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[21:54:38] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:54:54] <lotuseater> okay so you may be lucky and SBCL comes with your default package manager
[21:58:26] <anddam> it does
[21:58:32] <anddam> 2.1.7
[21:58:37] <anddam>  I already installed it
[21:59:56] <lotuseater> oh sounds good
[22:00:31] <lotuseater> and on the quicklisp page are the instructions for installing it too
[22:04:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:09:33] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[22:13:36] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[22:15:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:24:36] <White_Flame> anddam: also think about what goes on in the JVM, your browser's running javascript, and so on with JIT
[22:24:57] <White_Flame> those are both interpreters and compilers, where the compilation is done even without any user interaction on it
[22:25:28] <thrig> pretty sure my w3m ain't running javascript
[22:29:14] <White_Flame> I think I would call the other older model "offline compilation" instead of "batch compilation", as it's done outside of the executing program.  In Lisp, the compiler is generating machine code inside its own running process and can execute it without creating a separate executable binary & OS process
[22:29:44] <lotuseater> thrig: hopefully
[22:29:47] <White_Flame> but there's certainly lots of different ways to describe it
[22:31:34] <thrig> compile-and-exec can run afoul certain security restrictions, e.g. W^X
[22:31:34] <White_Flame> (note that there is also ECL, which translates lisp to C, so in some instances would generate a .c file, compile it externally into a .so/.dll, and dynamically link it at runtime.  So there's all sorts of combinations that are possible)
[22:37:12] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:43:10] *** Joins: Oladon (~olad@98.43.81.226)
[22:49:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:57:45] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[23:00:31] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:34:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:40:55] *** Quits: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[23:45:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:50:40] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 252 seconds)
