[00:00:55] <aquanight> because the function needs to be on a newline for some strange reason
[00:01:24] <aquanight> bashevalnl: echo
[00:01:25] <perlbot> aquanight: ﻿ 
[00:01:32] <mst> ohfuck
[00:01:36] <aquanight> bashevalnl: echo; echo
[00:01:38] <perlbot> aquanight: ﻿  
[00:01:42] <aquanight> dammit give me the char
[00:01:46] <aquanight> basheval: echo; echo
[00:01:47] <perlbot> aquanight: ␤␤
[00:01:53] <aquanight> thank you
[00:02:04] * GumbyPAN CPAN Upload: Geo-Address-Formatter-1.98 by EDF https://metacpan.org/release/EDF/Geo-Address-Formatter-1.98
[00:02:36] <aquanight> sweval: use Inline C => (q{ union PackIF { int; float f; };␤void go(int x) { printf("[%d]", x); } =~ s/␤/\n/r); go(123);
[00:02:38] <perlbot> aquanight: ERROR: Can't find string terminator "}" anywhere before EOF at (IRC) line 1. 
[00:02:44] <xenu> Inline::C must know somehow what functions are defined in the code, so it uses a half-assed regex based parser
[00:02:46] <aquanight> sweval: use Inline C => (q{ union PackIF { int; float f; };␤void go(int x) { printf("[%d]", x); } } =~ s/␤/\n/r); go(123);
[00:02:48] <perlbot> aquanight: [123]
[00:03:00] *** Quits: rgrinberg (~textual@2806:101e:7:2b:35cd:febc:a65a:3a4f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:03:33] <aquanight> this is probably where someone tells me I didn't need to use the s///r trick
[00:03:58] <corwin> I mean, maybe not but I was impressed..
[00:04:12] <mst> oh, right, it's about how Inline::C detects functions
[00:05:08] <mst> sweval: use Inline C => q{ union PackIF { int; float f; } }."\n".q{void go(int x) { printf("[%d]", x); }; go(123)
[00:05:10] <perlbot> mst: ERROR: Can't find string terminator "}" anywhere before EOF at (IRC) line 1. 
[00:05:34] <mst> sweval: use Inline C => q{ union PackIF { int; float f; } }."\n".q{void go(int x) { printf("[%d]", x); } }; go(123)
[00:05:34] <xenu> so you both aren't aware of qq
[00:05:36] <perlbot> mst: ERROR: Running Mkbootstrap for IRC_fd5a () chmod 644 "IRC_fd5a.bs" "$BLEAD/bin/perl5.35.8" -MExtUtils::Command::MM -e 'cp_nonempty' -- IRC_fd5a.bs blib/arch/auto/IRC_fd5a/IRC_fd5a.bs 644 "$BLEAD/bin/perl5.35.8" "$BLEAD/lib/5.35.8/ExtUtils/xsubpp"  -typemap "$BLEAD/lib/5.35.8/ExtUtils/typemap"   IRC_fd5a.xs > IRC_fd5a.xsc mv IRC_fd5a.xsc IRC_fd5a.c ... [Output truncated. http://perl.bot/p/qnx3im ]
[00:05:42] <mst> augh
[00:05:52] <aquanight> xenu: I'm well aware of qq
[00:06:06] <aquanight> actually
[00:06:16] <aquanight> other than string literals qq wouldn't be as bad
[00:06:20] <mst> given the lack of interpretables in there yeah qq with \n would likely work fine
[00:06:30] <mst> normally one drives Inline using here docs
[00:06:36] <aquanight> the only problem is string literal toothpicks
[00:07:37] <mst> <<~'END'
[00:07:47] * xenu <3 indented heredocs
[00:08:52] *** Joins: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it)
[00:08:54] <aquanight> one of these days I'll actually bother with local::lib. I've done too much 'sudo cpan' crap on this to be arsed with turning back now.
[00:09:08] <xenu> just use perlbrew
[00:09:17] <mst> I mean I only invented it in here a decade ago
[00:09:22] <mst> you'll catch up eventually
[00:09:38] <mst> xenu: perlbrew + plx :D
[00:10:16] <xenu> 1. it's spelled "please" 2. i don't know what perlbrew+ is
[00:11:32] <aquanight> I mean. at this point, I have no idea what it would take to "unfuck" things so I could have a good clean local::lib/perlbrew/whatever the fuck the flavor is now
[00:11:51] <aquanight> I would probably have to just purge the system perl altogether
[00:11:58] <xenu> perlbrew is easy because it's a completely separate perl
[00:12:07] <xenu> with local::lib, i guess reinstall your os :P
[00:12:26] <aquanight> I mean shit I'm probably due to do that eventually anyway
[00:12:55] <aquanight> maybe I'll even try gentoo again
[00:15:57] <aquanight> hmm
[00:16:04] <gordonfish> sweval: use Inline C => q{ union PackIF { int i; float f; }; }; use Inline C => q{ void go(int x) { printf("[%d]", x); } }; go(123);
[00:16:08] <perlbot> gordonfish: [123]
[00:16:09] <gordonfish> That works too.
[00:16:13] <aquanight> mst: is local::lib supposed to put stuff in .bashrc?
[00:16:26] <mst> aquanight: no
[00:16:37] <mst> it tells you what to put there
[00:17:57] <mst> xenu: plx is my directory based executor, means you get two local libs (local and devel) per directory it's initialised in plus a preconfigured perl from either PATH or perlbrew
[00:19:17] <mst> aquanight: -if- you're using bash, 'plx --userstrap' will put stuff in .bashrc for you, otherwise you get to copy+paste the eval line yourself
[00:21:19] <aquanight> yeah I think I figured it out
[00:23:08] <aquanight> [DZ] "strace" died to signal "SEGV" (11) at /home/aquanight/perl5/lib/perl5/Dist/Zilla/Dist/Builder.pm line 859.
[00:23:19] <aquanight> that's a *MUCH* more useful error message don't you think?
[00:27:03] <mst> what does it do on non-zero exit code without a signal and what makes it more useful than just using IPC::System::Simple ?
[00:27:54] <Grinnz> and what does it do on exit code -1
[00:28:05] <Grinnz> if the answer doesn't involve $!, just use IPC::System::Simple
[00:28:43] <mst> aquanight: you're trying to do freestanding code on a project that already (intentionally) depends on half of cpan and it's *silly*
[00:30:10] <mst> there aren't 'how many fucking places to add the dependency'
[00:33:56] <aquanight> well
[00:34:19] <aquanight> for all I knew there would've been like 17 files to add this too and of course I would miss one
[00:34:24] <aquanight> but apparently that wasn't the case
[00:34:48] <aquanight> anyway
[00:34:52] <aquanight> 13:06:59/8BE8B < mst> aquanight++ # well volunteered, tell me when you want me to review your patch ## https://github.com/rjbs/Dist-Zilla/pull/703
[00:34:54] <Paperbot_> Link title(s): [ Improve error message for failed 'dzil run' by aquanight · Pull Request #703 · rjbs/Dist-Zilla · ... ]
[00:34:57] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[00:34:57] <aquanight> enjoy
[00:35:32] <aquanight> it's almost stupid how simple a change it is
[00:36:34] <aquanight> now I can get back to work trying to figure out why { my $x; sub x :Pure { $x; } x = 42; } is crashing
[00:38:01] <aquanight> actually no
[00:38:04] <aquanight> that's not what's crashing
[00:38:24] <aquanight> dzil run perl -MAttribute::Pure -Mv5.32 -w -e 'my $x; sub x :Pure { $x } x = 42; printf STDERR "%d\n", x;'
[00:38:30] <aquanight> *this* is crashing
[00:38:40] <aquanight> without the printf I get an "attempted modification of readonly value"
[00:38:46] <aquanight> which, honestly, I expected
[00:39:11] <aquanight> even stranger...
[00:39:12] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[00:39:44] <Adura> How much faster is the inlined code with your module?
[00:40:09] <aquanight> I've not done any kind of benchmarks
[00:40:31] <aquanight> but in theory, it should be on par with 'use constant'
[00:40:57] <Adura> Sounds nice
[00:42:31] <mst> aquanight: <3
[00:42:43] <mst> aquanight: it being that simple was rather my thought :D
[00:42:43] <aquanight> that is to say... given a cube root function which might be defined as sub cuberoot :Pure { (shift) ** (1/3); }, my $x = cuberoot 27; vs. use constant THREE => cuberoot 27; my $x = THREE; should be equivalent.
[00:43:18] <aquanight> but this crash scenario is baffling me
[00:43:21] <Adura> I don't know what use it'd be to me/how to use Sub::Quote for the sake of speed.
[00:43:55] <aquanight> sweval: my $x; use constant X => $x; X = 42;
[00:43:56] <perlbot> aquanight: ERROR: Can't modify constant item in scalar assignment at (IRC) line 1, near "42;" 
[00:44:01] <aquanight> sweval: my $x; use constant X => $x; printf STDERR "%d\n", X;
[00:44:03] <perlbot> aquanight: Use of uninitialized value in printf at (IRC) line 1. 10 
[00:44:10] <aquanight> 10?
[00:44:20] <aquanight> oh
[00:44:38] <aquanight> the return value of printf
[00:44:57] <aquanight> that can't be right
[00:44:58] <aquanight> whatever
[00:45:05] <aquanight> sweval: my $x; use constant X => $x; X = 42; printf STDERR "%d\n", X;
[00:45:07] <perlbot> aquanight: ERROR: Can't modify constant item in scalar assignment at (IRC) line 1, near "42;" 
[00:45:12] <aquanight> ok
[00:45:21] <aquanight> so now I know it's *specifically* something I'm fucking up
[00:45:27] <aquanight> but what I don't know is ... what.
[00:46:20] <aquanight> dammit.
[00:46:25] <aquanight> it's crashing with -MO=Concise
[00:46:33] <aquanight> so it's *definitely* me fucking something up.
[00:53:57] <aquanight> ok this is weird
[00:54:12] <aquanight> for (SV** svp = AvARRAY(sv) + AvFILLp(sv); svp >= AvARRAY(sv); --svp)
[00:54:20] <aquanight> is this not the right way to iterate through an AV* ?
[00:55:22] <aquanight> AvFILLp isn't even documented
[00:56:42] <aquanight> or at least not normally
[00:58:04] <mst> aquanight: AvFILLp sounds like it'll be the -allocated- entries in the backing store, not the entries that necessarily contain anything?
[00:59:33] <aquanight> av.h describes it as "the maximum value of the indicies of all the array elements which are currently defined"
[00:59:43] <aquanight> OR
[00:59:50] <aquanight> apparently, -1 if the array is empty
[01:01:09] <aquanight> ok
[01:01:10] <aquanight> somehow
[01:01:11] <aquanight> sv = MUTABLE_SV(av_make(items, MARK+1));
[01:01:11] <aquanight> this
[01:01:29] <aquanight> I think it returned an empty array
[01:03:45] <aquanight> but... how is it even doing list nonsense to begin with?
[01:04:00] <aquanight> this makes no sense for many reasons
[01:05:13] <aquanight> 1) I shouldn't even be in list context right now.
[01:05:22] <aquanight> the sub is :Pure it should be forced to scalar
[01:07:09] * GumbyPAN CPAN Upload: DateTime-Format-Natural-1.12_01 by SCHUBIGER https://metacpan.org/release/SCHUBIGER/DateTime-Format-Natural-1.12_01
[01:09:53] <aquanight> grrr fucking <optimized out> bullshit
[01:12:07] <LeoNerd> aquanight: I sometimes want a -Oabsolutely-fucking-not
[01:12:09] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000102 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000102
[01:12:43] <aquanight> ok that explains how it got into the list code to begin with
[01:13:48] <aquanight> for some reason, op_contextualize(entersub, G_SCALAR) did not actually contextualize the sub
[01:14:07] <aquanight> it's going in with "UNKNOWN"
[01:14:51] <aquanight> why would op_contextualize not change the context
[01:16:57] <gordonfish> sweval: use Inline C => q{ union PackIF { int i; float f; }; }. qq{\n}. q{ void go(int x) { union PackIF pk; pk.i=x; printf("<C: i=%d f=%f>", pk.i, pk.f); } }; my $i = 1123483648; go($i); printf '<Perl: i=%d f=%f>', $i, unpack f => pack i => $i;
[01:16:59] <perlbot> gordonfish: <Perl: i=1123483648 f=123.500000><C: i=1123483648 f=123.500000>
[01:17:10] * GumbyPAN CPAN Upload: Statocles-Plugin-VideoTag-0.0400 by GENE https://metacpan.org/release/GENE/Statocles-Plugin-VideoTag-0.0400
[01:17:35] <aquanight> ............
[01:17:38] <gordonfish> Could someone please tell me why 'Perl:' prints before 'C:' when go() is called first ?
[01:17:49] <aquanight>         if (!o || (PL_parser && PL_parser->error_count)
[01:18:14] <aquanight> apparently
[01:18:29] <aquanight> if there's a parser error op_contextualize will refuse to change context, at least for G_SCALAR
[01:18:51] <aquanight> and it's likely this is true of other GIMME_Vs
[01:19:17] <aquanight> translation: I need to abort pure attempts if a parser error occurs
[01:19:40] * gordonfish . o O ( Does Perl have cheerleaders? GIMME a P, GIMME an e, ... )
[01:20:13] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 240 seconds)
[01:20:18] *** Joins: whynot (~whynot@37.73.73.249)
[01:21:35] <aquanight> oh
[01:21:42] <aquanight> this is like "BEGIN not safe after errors" type of stuff
[01:22:04] *** Quits: deadmarshal (~deadmarsh@95.38.114.110) (Ping timeout: 250 seconds)
[01:22:20] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[01:22:26] <aquanight> I don't know why I keep thinking parser errors will just stop in place
[01:22:34] <aquanight> wait
[01:22:39] <aquanight> how does use constant avoid this
[01:23:39] *** Joins: kensanata (~user@user/kensanata)
[01:23:45] *** Joins: jayray (~jayray@user/jayray)
[01:23:48] <gordonfish> aquanight: Maybe it has something to do with 'use', though would be at the same phase as BEGIN blocks
[01:24:02] <gordonfish> *though that
[01:24:08] <aquanight> yeah
[01:24:22] <aquanight> parser error is confusing me honestly
[01:24:31] <aquanight> I would think it should just stop and die at the first error
[01:24:40] <gordonfish> Can you give an example of what parser error you mean?
[01:24:48] <aquanight> but no it can barrel onward for a while until it either hits a BEGIN (which is not safe) or something else.
[01:24:55] <gordonfish> (To be a better idea of what you're doing)
[01:25:06] <aquanight> but even stranger is that it can still produce a compiled main_cv. It just won't try to run it.
[01:25:15] <gordonfish> *(To get a better
[01:25:37] <aquanight> dzil run perl -MAttribute::Pure -Mv5.32 -w -MO=Concise -e 'my $x; sub x :Pure { $x } x = 42; printf STDERR "%d\n", x;'
[01:26:04] <aquanight> this raises Can't modify constant item in scalar assignment at -e line 1, near "42;"
[01:26:11] <aquanight> which I expect to happen
[01:26:12] <gordonfish> What is :Pure supposed to do? Don't think I've seen that attribute
[01:26:22] <aquanight> it's the one I'm creating with this module
[01:26:30] <gordonfish> Oh
[01:26:46] <gordonfish> So what is its purpose?
[01:27:10] <aquanight> it causes any call to that sub which has no non-constant argument will have that sub fully inlined and evaluated at parse time
[01:27:11] *** Quits: Darkcoal (~user@130.164.146.159) (Quit: Darkcoal)
[01:27:20] <aquanight> basically, think constant folding on steroids
[01:27:47] *** Quits: magla (~gelignite@55d4ea14.access.ecotel.net) (Quit: Stay safe!)
[01:27:51] <aquanight> like how sub X :prototype() { 42 } is a constant
[01:27:51] <gordonfish> Oh, nice
[01:28:03] <aquanight> but now you can say: sub X :Pure { 42 } if you wanted
[01:28:21] <aquanight> or sub X :Pure { 42 + shift; } and it'll inline the result if you pass a constant
[01:28:30] <aquanight> anyway
[01:28:40] <aquanight> the above test case was crashing and now I figured out why
[01:29:00] <gordonfish> What was the reason?
[01:29:08] <aquanight> after 'x = 42;' trips the "Can't modify constant" parser error, the later attempt to inline 'x' in the printf call crashes
[01:29:48] <aquanight> normally I would've forced the call to 'x' to be in scalar context (I don't know context at parse time due to the parsing order, so it's decided by whether you use :Pure (scalar) or :PureList (list))
[01:30:25] <aquanight> but apparently Perl_scalar (the internal function which changes the entersub op to scalar contejxt) will refuse to do anything if a parser error has been logged
[01:30:45] <aquanight> so the sub was going into my inlining procedure with a "want" value of unknown
[01:30:57] *** Quits: ufobat (~martin@dynamic-077-004-046-204.77.4.pool.telefonica.de) (Ping timeout: 240 seconds)
[01:30:57] <aquanight> not void context, not scalar context, not list context, "unknown" context
[01:31:14] <aquanight> I think that's the same context return <expr>; gets
[01:32:16] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:39a5:2e97:f033:949a)
[01:32:35] <aquanight> of course, because I was a fucking idiot in writing my conditions, "unknown" context got treated as list context when handling the *result* of the operation, but not when actually shoving the ops through runops
[01:32:44] <aquanight> I have no idea what actual context it ran in
[01:33:26] <aquanight> if it's "return <expr> context", that probably means it inherits the context of the containing execution frame... main_cv. Which I believe is void context. That's why I got nonsense from make_av
[01:33:41] <gordonfish> Wait, isn't parse/compile time phase _supposed_ to stop when an actual compile error (rather than a warning) is encountered?
[01:34:03] <aquanight> gordonfish: misspell a variable on multiple lines and you'll get complained at about all of them
[01:34:06] <aquanight> unless it hits a BEGIN first
[01:34:25] <gordonfish> That's a warning not an error though
[01:34:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:35:14] <aquanight> except it is an error
[01:35:24] <aquanight> "Global symbol '$x' requires explicit package name" is an error
[01:35:29] <aquanight> but it doesn't instantly stop the parse
[01:35:41] <aquanight> same with the 'Can't modify constant' error
[01:35:57] <gordonfish> Re: <aquanight> dzil run perl -MAttribute::Pure -Mv5.32 -w -MO=Concise -e 'my $x; sub x :Pure { $x } x = 42; printf STDERR "%d\n", x;'
[01:35:57] <gordonfish> Aren't you missing :lvalue ?
[01:36:10] <aquanight> gordonfish: no. the lack of it is intentional
[01:36:26] <gordonfish> Since you're using x = 42. (Also x is a crappy name for a sub since that is also an operator.)
[01:36:28] <aquanight> in fact, if you try to :lvalue and :Pure simultaneously it will fail
[01:36:51] <gordonfish> So :Pure already makes it an lvalue sub?
[01:36:55] <aquanight> nope
[01:37:06] <gordonfish> Then how is x = 42 supposed to be able to work?
[01:37:15] <aquanight> it isn't
[01:37:19] <aquanight> it's *supposed* to fail
[01:37:25] <gordonfish> Oh, that's a test case
[01:37:30] <aquanight> exactly
[01:37:43] <aquanight> as for why it doesn't trip a "trying to call sub without :lvalue" or something like that
[01:37:46] <aquanight> again, parsing order
[01:38:19] <aquanight> while I'm parsing that entersub, the 'sassign' operator it's going to be put into doesn't even exist yet
[01:38:59] <aquanight> literally no one knows at that moment that someone's trying to do a sub call on the left side of =
[01:39:10] <gordonfish> That seems strange. I'd fully expect it to barf due to lvalue if it's not an lvalue, I don't recall other attributes having that sort of effect
[01:39:19] <aquanight> and by the time anyone can know, I've already replaced the OP_ENTERSUB with OP_CONST
[01:39:27] <gordonfish> Hmm
[01:40:27] <aquanight> basically, imagine the expression in these terms: scalar-assignment { entersub { gv(*x) }, const(42) } -- scalar-assignment doesn't know the left side is an entersub (to thus look for :lvalue) until it's parsed that side into an OP_ENTERSUB
[01:40:43] <aquanight> but the moment the OP_ENTERSUB tree is built, the callchecker fires, which triggers my inlining logic
[01:40:50] <aquanight> scalar-assignment never gets to see the entersub
[01:41:02] <gordonfish> { Re: <aquanight> and by the time anyone can know, I've already replaced the OP_ENTERSUB with OP_CONST } Are you sure that that is what 'use constant' is going ?
[01:41:06] <aquanight> so in theory
[01:41:16] <aquanight> if I returned a modifiable scalar, :Pure would effecitvely act as :lvalue
[01:41:18] <gordonfish> *doing
[01:41:30] <aquanight> use constant does the same thing
[01:41:43] <aquanight> by the time scalar-assignment can ever see it, it's already been replaced by the constant
[01:41:57] <aquanight> sweval: use constant FOO => 42; FOO = 7;
[01:41:59] <perlbot> aquanight: ERROR: Can't modify constant item in scalar assignment at (IRC) line 1, near "7;" 
[01:42:12] <aquanight> sweval: sub FOO { 42 }; FOO = 7;
[01:42:13] <perlbot> aquanight: ERROR: Can't modify non-lvalue subroutine call of &main::FOO in scalar assignment at (IRC) line 1, near "7;" 
[01:42:19] <aquanight> note the difference
[01:42:24] <aquanight> sweval: sub FOO :prototype() { 42 }; FOO = 7;
[01:42:24] <gordonfish> Right
[01:42:25] <perlbot> aquanight: ERROR: Can't modify constant item in scalar assignment at (IRC) line 1, near "7;" 
[01:42:48] <aquanight> the moment FOO became eligible for inlining, scalar assignment never gets the chance to check that it's :lvalue
[01:42:49] <gordonfish> And you're also making it a constant
[01:43:35] <gordonfish> Thing is, if you're making it a constant, then assigning to it doesn't make sense.
[01:43:44] <aquanight> correct
[01:43:55] <aquanight> it's a test case. it's *supposed* to fail.
[01:43:59] <aquanight> but it should fail the right way
[01:44:02] <aquanight> and it was failing the wrong way
[01:44:25] <gordonfish> Do you have source code for what you're doing up anywhere?
[01:44:26] <aquanight> it was failing to fail with the expected fail
[01:44:54] <aquanight> https://github.com/aquanight/Attribute-Pure/
[01:44:55] <Paperbot_> Link title(s): [ GitHub - aquanight/Attribute-Pure: Make any perl sub inline-able ]
[01:45:43] <aquanight> minor fun fact: despite the name, it's not just perl subs. in theory, an XSUB could even be inlined that way.
[01:45:57] <aquanight> I don't yet have a test case for that though.
[01:46:25] <aquanight> also
[01:46:28] <aquanight> I should rephrase
[01:46:45] <gordonfish> Makes sense, since you're basically replacing subs with constants
[01:47:02] <aquanight> it *was* failing the right way, but failing to account for PL_parser->error_count was causing problems in later actions
[01:47:21] <LeoNerd> Oh, yeah you have to keep an eye on that all the time
[01:48:05] <aquanight> of course, I now have a new question: should I simply refuse to inline subs once an error_count exists, or should I be like BEGIN and force a fatal error?
[01:48:28] <LeoNerd> Yeah the moment that count exists you need to just abort
[01:48:38] <aquanight> right
[01:48:43] <gordonfish> aquanight: If it was failing correctly, do you know what change made it stop?
[01:48:51] <aquanight> but again: just abort doing anything special or force a full abort of the compile?
[01:49:20] <aquanight> gordonfish: I think it might actually be a test escape. A scenario I hadn't tested for previously.
[01:50:31] <aquanight> hmm
[01:50:55] <aquanight> sweval: my $x; BEGIN { $x = 42; } use constant FOO => 42; $x = 3; [ $x, FOO ]
[01:50:56] <perlbot> aquanight: [3,42]
[01:51:03] <aquanight> good, as it should be.
[01:52:19] <aquanight> LeoNerd: so did make_av give me nonesense because the parameters didn't make sense in consideration of the fact that the ops were probably evaluated in void context?
[01:52:32] <LeoNerd> ?
[01:52:42] <aquanight> the crash happened because AvFILLp() was -1
[01:52:56] <LeoNerd> That just means the array is empty
[01:53:00] <aquanight> right
[01:53:12] <LeoNerd> (FILL is the highest index)
[01:53:18] <aquanight> now in theory, adding that to AvARRAY() should've resulted in exiting the for loop
[01:53:22] <aquanight> except AvARRAY() was 0
[01:53:30] <aquanight> and (0 + -1) > 0
[01:53:37] <aquanight> in C logic
[01:53:46] <aquanight> in C pointer* logic
[01:54:03] <aquanight> so should I expect AvARRAY() == 0 for an empty array?
[01:54:31] <LeoNerd> Not at all
[01:55:04] <LeoNerd> It may well still point to some valid storage
[01:55:10] <aquanight> let me rephrase
[01:55:12] <LeoNerd> my @x = (1); shift @x;
[01:55:17] <aquanight> is AvARRAY() == 0 valid for an empty array
[01:55:29] <aquanight> or does this indicate make_av gave me garbage
[01:55:35] <LeoNerd> Hmm. I think it may be valid. Personally I don't think I'd be in a situation to rely on that
[01:55:49] <LeoNerd> If the array is empty (by asking FILL), don't go looking at AvARRAY
[01:56:08] <aquanight> maybe I should go see how perl core dealt with this
[01:56:21] <aquanight> because I'm pretty sure I cribbed the loop straight out of core's list constant code
[01:56:38] <aquanight> but maybe I've missed something
[01:57:03] <aquanight>     if (AvFILLp(av) != -1)
[01:57:06] <aquanight> son of a bitch
[01:57:13] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000103 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000103
[01:57:54] <aquanight> waaaaait a minute
[01:58:00] <aquanight> I have that exact condition
[01:58:02] <aquanight> what the shit?
[01:59:48] <aquanight> (gdb) print ((XPVAV*)  sv->sv_any)->xav_fill
[01:59:48] <aquanight> $1 = -1
[01:59:52] <aquanight> how the fuck am I even in the loop
[02:01:52] <gordonfish> sweval: use Inline C => q{ void do_c() { printf("<C>"); } }; do_c; print '<Perl>'; do_c; print '<Perl>' # Why do inline C prints get delayed like this?
[02:01:55] <perlbot> gordonfish: <Perl><Perl><C><C>
[02:04:26] <aquanight> LeoNerd: I'm absolutely confused
[02:05:14] <aquanight> https://github.com/aquanight/Attribute-Pure/blob/main/lib/Attribute/Pure.xs#L157 ## can you see any possible reason it got to this line (or at least, so is claimed by gdb reading the core dump) with AvFILLp returning -1
[02:05:15] <Paperbot_> Link title(s): [ Attribute-Pure/Pure.xs at main · aquanight/Attribute-Pure · GitHub ]
[02:05:50] <aquanight> I can't figure it out.
[02:06:19] *** Joins: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5)
[02:06:21] <Grinnz> Paperbot_: nick Paperbot
[02:06:21] *** Paperbot_ is now known as Paperbot
[02:07:19] <aquanight> gordonfish: you're mixing perl io with C stdio
[02:07:36] <aquanight> gordonfish: add newlines or flush calls to get the correct order
[02:07:57] <aquanight> sweval: use Inline C => q{ void do_c() { printf("<C>\n"); } }; do_c; print '<Perl>\n'; do_c; print '<Perl>\n'
[02:08:00] <perlbot> aquanight: <Perl>\n<Perl>\n<C> <C> 
[02:08:04] <aquanight> ..
[02:08:14] <aquanight> sweval: use Inline C => q{ void do_c() { printf("<C>\n"); } }; do_c; print "<Perl>\n"; do_c; print "<Perl>\n"
[02:08:17] <perlbot> aquanight: <Perl> <Perl> <C> <C> 
[02:08:22] <aquanight> ... huh.
[02:08:30] <aquanight> oh
[02:08:33] <aquanight> C might not autoflush
[02:08:45] <aquanight> sweval: use Inline C => q{ void do_c() { printf("<C>\n"); fflush(stdout); } }; do_c; print "<Perl>\n"; do_c; print "<Perl>\n"
[02:08:48] <perlbot> aquanight: <C> <Perl> <C> <Perl> 
[02:09:07] <gordonfish> Ah
[02:09:33] * gordonfish hates those who forget to flush...
[02:10:06] <aquanight> basically you were mixing two different forms of buffered I/O without flushing. You'll stop up your pipes doing that.
[02:10:33] <gordonfish> Probably better to returned an sprintf'ed string instead of printing from the C side.
[02:12:15] * GumbyPAN CPAN Upload: perl-5.35.8 by ATOOMIC https://metacpan.org/release/ATOOMIC/perl-5.35.8
[02:12:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:13:17] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 240 seconds)
[02:21:02] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[02:21:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:21:55] *** Joins: alex11 (~alex11@user/alex11)
[02:22:16] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000104 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000104
[02:22:16] * GumbyPAN CPAN Upload: Net-DNS-Resolver-Unbound-1.02 by RWF https://metacpan.org/release/RWF/Net-DNS-Resolver-Unbound-1.02
[02:25:14] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:29:32] *** Quits: furrymcgee (~devuan@cgn-89-1-211-103.nc.de) (Quit: leaving)
[02:33:33] *** Quits: pizdets (~pizdets@183.182.114.97) (Ping timeout: 256 seconds)
[02:34:05] *** Joins: pizdets_ (~pizdets@183.182.111.82)
[02:36:13] *** Quits: perlmaros (~perlmaros@master.k-1.com) (Ping timeout: 240 seconds)
[02:36:20] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[02:36:58] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[02:45:18] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[02:45:36] *** Quits: ratagin (~ratagin@208.96.144.68) (Quit: Leaving)
[02:46:41] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[02:46:51] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[02:46:51] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[02:51:13] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Client Quit)
[02:51:23] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[02:52:33] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Client Quit)
[02:54:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[02:55:37] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[02:56:18] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[02:56:18] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[03:04:30] <xenu> https://github.com/tiangolo/fastapi/issues/3273
[03:04:31] <xenu> lol
[03:04:31] <Paperbot> Link title(s): [ Too many emojis in 'Concurrency and async / await' explanation · Issue #3273 · tiangolo/fastapi ·... ]
[03:05:13] <xenu> i hope cpan modules won't adopt this style of documentation
[03:07:40] <Adura> I don't know about the entirety of its documentation, but I'm reminded of Mojolicious.
[03:08:33] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 268 seconds)
[03:08:37] *** Quits: morte_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[03:15:57] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[03:18:25] <Grinnz> oh god
[03:19:07] <Grinnz> even raku lets you use ascii alternatives
[03:19:11] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[03:20:53] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 268 seconds)
[03:26:08] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[03:26:18] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[03:26:18] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[03:26:21] * GumbyPAN CPAN Upload: CPAN-Perl-Releases-5.20220120 by BINGOS https://metacpan.org/release/BINGOS/CPAN-Perl-Releases-5.20220120
[03:28:35] *** Quits: haj (~haj@95.91.235.152) (Quit: Leaving.)
[03:31:22] * GumbyPAN CPAN Upload: Module-CoreList-5.20220120 by BINGOS https://metacpan.org/release/BINGOS/Module-CoreList-5.20220120
[03:34:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:38:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[03:44:50] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[03:48:38] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:54:01] *** Joins: monkey_ (~user@190.104.116.153)
[03:54:02] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:57:45] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[03:58:14] *** Quits: whynot (~whynot@37.73.73.249) (Quit: leaving)
[04:01:57] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 240 seconds)
[04:02:27] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[04:06:06] *** Quits: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[04:14:34] *** Joins: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net)
[04:14:39] *** Parts: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net) ()
[04:17:39] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:19:27] *** Joins: HvszrStykp (~X@81.171.62.86)
[04:20:22] <simcop2387> aquanight: issues with spam sadly, but i promise i'll find time to get around to fixing it
[04:21:06] <simcop2387> ah crap, anyone want to have some fun with the eval? https://seclists.org/oss-sec/2022/q1/54
[04:21:06] <Paperbot> Link title(s): [ oss-sec: Linux kernel: Heap buffer overflow in fs_context.c since version 5.1 ]
[04:21:23] *** Joins: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it)
[04:22:39] <simcop2387> ah wait the eval shouldn't be exploitable since it needs cap_sys_admin or non-root namespaces.  so it'd work against a privileged docker container, but the seccomp rules i have should still prevent iy
[04:22:55] <simcop2387> it since they don't allow you to call clone() with the right params
[04:23:11] <simcop2387> but everyone should update their kernels
[04:23:35] <simcop2387> i won't be restarting for a bit regardless so if anyone wants to try...
[04:24:43] <simcop2387> easiest way to prove it is to read /etc/shadow, there's a special user in there for anyone who can escape the sandbox restrictions (though if you escape the entire sandbox there isn't a special user but it'd still work to prove it)
[04:26:12] <simcop2387> and geeze, the fix is a bit facepalmy too.  https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=722d94847de29310e8aa03fcbdb41fc92c521756H
[04:28:25] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:33:30] <pragma-> i get "bad object id: 722d94847de29310e8aa03fcbdb41fc92c521756H" for that link
[04:40:32] *** Quits: brunoramoslu (~brunoramo@94.252.122.2) (Ping timeout: 250 seconds)
[04:44:32] <simcop2387> pragma-: typo, https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=722d94847de29310e8aa03fcbdb41fc92c521756
[04:44:32] <Paperbot> Link title(s): [ kernel/git/torvalds/linux.git - Linux kernel source tree ]
[04:44:36] <simcop2387> accidentally the H
[04:44:53] <simcop2387> pragma-: it's of course an unsigned integer underflow
[04:46:32] <simcop2387> here's a twitter feed of it, planned release time for PoF is in a week and a half, https://twitter.com/ryaagard/status/1483592308352294917
[04:49:59] <simcop2387> i'll have the kernel on this system upgraded sunday night in America/New_York time, so that'll be the deadline for the impromtu CTF :)
[04:53:18] <simcop2387> there, matrix and discord now know too
[04:54:53] *** Joins: brunoramoslu (~brunoramo@94.252.122.250)
[04:56:17] *** Joins: troller (~p@80.240.216.69)
[04:56:28] *** Quits: proller (~p@2a02:6b8:b081:a412::1:24) (Ping timeout: 268 seconds)
[04:56:29] * GumbyPAN CPAN Upload: Alien-Meson-0.02 by ZMUGHAL https://metacpan.org/release/ZMUGHAL/Alien-Meson-0.02
[04:58:48] *** Joins: gast0n (~g4570n@user/gast0n)
[04:59:22] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[05:01:04] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[05:01:15] *** Joins: ology (~gene@user/ology)
[05:01:28] *** Joins: troller (~p@2a02:6b8:b081:6432::1:36)
[05:04:43] <ology> Fwiw: /c
[05:04:48] <ology> heh. whoops
[05:06:48] <gordonfish> Re: <aquanight> sweval: use Inline C => q{ void do_c() { printf("<C>\n"); fflush(stdout); } }; do_c; print "<Perl>\n"; do_c; print "<Perl>\n"
[05:06:50] <gordonfish> sweval: use Inline C => q{ SV* do_c() { char b[32]; sprintf(b, "<C>"); return newSVpv(b, strlen(b)); } }; say do_c; say '<Perl>'; say do_c; say '<Perl>'
[05:06:53] <perlbot> gordonfish: <C> <Perl> <C> <Perl> 
[05:06:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:07:56] <gordonfish> I think I like this way a little better, this way all the printing is done with one buffered I/O type.
[05:11:30] * GumbyPAN CPAN Upload: Test-File-1.991 by BDFOY https://metacpan.org/release/BDFOY/Test-File-1.991
[05:14:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[05:17:57] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 240 seconds)
[05:22:48] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[05:22:54] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:26:27] <ology> Ok. Trying again... Fwiw: https://ology.github.io/2022/01/20/musical-fingerprints-with-radial-bar-charts/
[05:26:28] <Paperbot> Link title(s): [ Musical Fingerprints with Radial Bar Charts - Gene Boggs ]
[05:26:28] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Remote host closed the connection)
[05:35:21] <aquanight> gordonfish: except for leaking the SVs, sure.
[05:35:34] <aquanight> you forgot to sv_2immortal
[05:35:37] <aquanight> er
[05:35:39] <aquanight> sv_2mortal
[05:35:56] <gordonfish> Oops, thanks
[05:36:32] * GumbyPAN CPAN Upload: Overload-FileCheck-0.012 by ATOOMIC https://metacpan.org/release/ATOOMIC/Overload-FileCheck-0.012
[05:36:33] * GumbyPAN CPAN Upload: Tie-Timely-1.024 by BDFOY https://metacpan.org/release/BDFOY/Tie-Timely-1.024
[05:37:48] *** Quits: ndorf (~nd@ob.noxio.us) (Remote host closed the connection)
[05:40:57] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[05:43:04] <xenu> i'm pretty sure Inline::C mortalizes its return values
[05:49:03] *** Joins: ndorf (~nd@ob.noxio.us)
[05:55:24] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:57:35] *** Joins: tejr (~tejr@user/tejr)
[06:14:10] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:17:09] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Quit: Paperbot)
[06:17:10] *** Quits: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster) (Quit: Repaster_)
[06:25:50] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Ping timeout: 250 seconds)
[06:25:53] *** Quits: Su-Shee (~Susanne@p4ffc7b08.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:27:18] *** Joins: Su-Shee (~Susanne@p50894337.dip0.t-ipconnect.de)
[06:29:55] <aquanight> xenu: oh I think it does it by virtue of the XS typemap
[06:30:18] <aquanight> hmm. easy way to find out.
[06:30:51] <aquanight> sweval: use Inline C => q{ SV* do_c() { char b[32]; sprintf(b, "<C>"); SV* sv = newSVpv(b, strlen(b)); sv_2mortal(sv); return sv; } }; say do_c; say '<Perl>'; say do_c; say '<Perl>'
[06:30:54] <perlbot> aquanight: <C> Attempt to free unreferenced scalar: SV 0x5569a2be5348 at (IRC) line 1. <Perl> <C> Attempt to free unreferenced scalar: SV 0x5569a2be5348 at (IRC) line 1. <Perl> 
[06:31:03] <aquanight> ok
[06:31:14] <aquanight> that confirm you do *not* have to mortalize your SV*
[06:33:23] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[06:37:33] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:38:17] <aquanight> sweval: use Scalar::Util 'tainted'; use Inline C => q{ void foo() { TAINTING_set(TRUE); TAINT_WARN_set(FALSE); } }; use Inline C => q{ void make_evil(SV* sv) { sv_taint(sv); } }; BEGIN { foo; } my $x = 42; make_evil $x; my $y = ($x < 40); [ tainted($x), tainted($y) ]
[06:38:20] <perlbot> aquanight: [1,0]
[06:40:53] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[06:46:25] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:47:51] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[06:51:39] * GumbyPAN CPAN Upload: Sodium-FFI-0.001 by CAPOEIRAB https://metacpan.org/release/CAPOEIRAB/Sodium-FFI-0.001
[06:57:31] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:57:31] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:57:31] *** finn_elija is now known as FinnElija
[06:59:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[07:05:55] *** Joins: djerius_ (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[07:06:07] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[07:07:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:09:23] <buu> "After some hair pulling, I found the root cause: Perl doesn't like being lied to. It was told the incoming data was Latin-1 (the neolothic database format), but was instead being given Unicode (the modern format). This essentially resulted in Perl saying, "the f*ck is this?", and throwing a question mark wherever there were invalid characters. Mystery solved."
[07:09:52] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:19:34] <rewt> unicode?
[07:24:08] *** Joins: HvszrStykp (~X@81.171.62.86)
[07:29:42] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:40:48] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Quit: leaving)
[07:40:58] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[07:41:45] * GumbyPAN CPAN Upload: CPAN-2.33-TRIAL by ANDK https://metacpan.org/release/ANDK/CPAN-2.33-TRIAL
[07:49:11] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 256 seconds)
[07:56:37] *** Joins: frost (~frost@user/frost)
[07:59:27] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[08:06:11] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:11:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:06] *** Joins: Martchus (~martchus@2a01:c22:7b37:e400:d250:99ff:fe49:3cce)
[08:14:10] *** Quits: Martchus_ (~martchus@dynamic-077-009-120-027.77.9.pool.telefonica.de) (Ping timeout: 250 seconds)
[08:15:54] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 250 seconds)
[08:16:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[08:21:29] *** Quits: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[08:28:48] <gordonfish> { Re: <aquanight> sv_2mortal } { Re: <xenu> i'm pretty sure Inline::C mortalizes its return values } This is what I assumed, as with sv_2mortal it appears to try to free too soon:
[08:28:53] <gordonfish> sweval: use Inline C => q{ SV* do_c() { char b[32]; sprintf(b, "<C>"); return sv_2mortal(newSVpv(b, strlen(b))); } }; say do_c; say '<Perl>'; say do_c; say '<Perl>';
[08:28:56] <perlbot> gordonfish: <C> Attempt to free unreferenced scalar: SV 0x5573a86a5b48 at (IRC) line 1. <Perl> <C> Attempt to free unreferenced scalar: SV 0x5573a86a5b48 at (IRC) line 1. <Perl> 
[08:29:15] <gordonfish> (Though it does still print.)
[08:29:55] <gordonfish> aquanight: Oh I see you did a similar test already
[08:30:02] *** Joins: dhruv__ (~dhruv.sha@111.223.26.226)
[08:30:19] <buu> rewt: It seemed like a kind of weird story, does perl actually insert question marks even when given unexpected data?
[08:30:43] <buu> https://kurtisknodel.com/blog/posts/y_aBAQhkjeuRhe_WRipwzA
[08:31:00] <buu> I'd expect almost anything else to happen other than a literal '?'
[08:31:14] *** Joins: frost (~frost@user/frost)
[08:32:24] <rewt> well, you can't put unicode into files or network traffic without encoding it, and latin-1 is an option for encoding a subset of unicode, so that statement didn't make much sense
[08:34:06] <rewt> is that the same blog that someone else here said was confusion unicode with encoding methods?
[08:34:11] <gordonfish> buu: I've seen ? used as a placeholder/fallback when a character can't be encoded in the target encoding, like going from utf-8/16/32 to iso-8859-* and it's not set to die on failure.
[08:35:27] <gordonfish> Kind of hard to fathom that this is still an issue today
[08:36:19] <rewt> ah, no, Grinnz was saying that about the moe doc
[08:36:50] * GumbyPAN CPAN Upload: Module-Extract-DeclaredVersion-1.024 by BDFOY https://metacpan.org/release/BDFOY/Module-Extract-DeclaredVersion-1.024
[08:37:05] *** Joins: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it)
[08:38:31] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:40:51] <rewt> "The raw bytes are 0xc58d, which is Unicode for 'ō'." ... no, 0xc58d is the utf-8 encoding of the unicode character 'ō'
[08:44:57] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e974:656b:a40a:b91a) (Ping timeout: 240 seconds)
[08:48:24] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[08:52:07] *** Quits: dhruv__ (~dhruv.sha@111.223.26.226) (Quit: Leaving)
[08:55:06] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[08:56:20] *** Joins: frost15 (~frost@user/frost)
[08:56:30] *** Quits: frost15 (~frost@user/frost) (Client Quit)
[08:56:45] *** Joins: frost21 (~frost@user/frost)
[08:56:48] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[08:57:15] *** Quits: frost21 (~frost@user/frost) (Client Quit)
[08:58:00] *** Joins: frost31 (~frost@user/frost)
[08:59:04] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:00:21] *** frost31 is now known as frost
[09:00:38] <gordonfish> utf8 ō
[09:01:01] <gordonfish> perlbot: utf8 ō
[09:01:01] <perlbot> gordonfish: U+014D (c5 8d): LATIN SMALL LETTER O WITH MACRON [ō] 
[09:01:43] <Grinnz> yeah, this post is even more confused about what unicode is
[09:06:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:09:10] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:11:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[09:17:04] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:17:14] *** Quits: earthbre| (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Ping timeout: 260 seconds)
[09:17:56] *** Joins: earthbreaker (~earthbrea@li778-229.members.linode.com)
[09:17:59] *** Joins: n_shp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[09:18:43] *** Quits: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67) (Ping timeout: 250 seconds)
[09:20:28] *** Quits: japh (~scp1@user/japh) (Ping timeout: 250 seconds)
[09:20:47] *** Joins: japh (~scp1@user/japh)
[09:24:55] <tirnanog> the post whiffs fairly strongly of mysql operating without strict_trans_tables being in effect. at any rate, it's probably easier to moan about "ancient Perl scripts" than root cause the matter.
[09:25:05] *** Joins: frost (~frost@user/frost)
[09:32:07] <Grinnz> i could very likely determine the root problem quickly if i read the post in full, but i have better things to do 
[09:32:18] *** Joins: llh (~llh@user/llh)
[09:32:40] *** Joins: mexen (uid495612@user/mexen)
[09:34:35] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[09:34:57] <tirnanog> you're definitely not missing anything.
[09:36:57] * GumbyPAN CPAN Upload: Captcha-reCAPTCHA-V3-0.05 by WORTHMINE https://metacpan.org/release/WORTHMINE/Captcha-reCAPTCHA-V3-0.05
[09:37:54] *** Joins: mattil (~mattil@87-95-104-182.bb.dnainternet.fi)
[09:39:12] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:39:20] *** Joins: mattil_ (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[09:39:43] *** Quits: mattil_ (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:39:44] *** Quits: mattil (~mattil@87-95-104-182.bb.dnainternet.fi) (Read error: Connection reset by peer)
[09:43:53] *** Joins: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[09:50:37] *** Quits: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:52:21] *** Quits: mason (~mason@redhat/mason) (Quit: leaving)
[09:54:05] *** Joins: mason (~mason@redhat/mason)
[09:54:50] *** Joins: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[09:57:01] *** Quits: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:59:00] *** Joins: mattil (~mattil@87-95-104-182.bb.dnainternet.fi)
[09:59:38] *** Joins: mattil_ (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[10:03:17] *** Quits: mattil (~mattil@87-95-104-182.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[10:07:00] * GumbyPAN CPAN Upload: Lang-HL-0.37 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.37
[10:07:26] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[10:09:51] *** Quits: mattil_ (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:12:10] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[10:14:06] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[10:20:53] *** Joins: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[10:20:58] *** Quits: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:21:17] *** Joins: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi)
[10:21:56] *** Joins: HvszrStykp (~X@81.171.62.86)
[10:22:01] * GumbyPAN CPAN Upload: Lang-HL-0.38 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.38
[10:22:13] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:26:02] *** Quits: mattil (~mattil@d5np5fhcwyv-mhmg808-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[10:38:54] *** Joins: jplesnik (~jplesnik@83.240.61.101)
[10:42:04] * GumbyPAN CPAN Upload: App-sizecheck-0.061 by TULAMILI https://metacpan.org/release/TULAMILI/App-sizecheck-0.061
[10:46:48] *** Quits: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:12] *** Joins: ufobat (~martin@dynamic-077-002-114-080.77.2.pool.telefonica.de)
[10:49:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[10:51:05] *** Quits: edr (~edr@user/edr) (Ping timeout: 256 seconds)
[10:51:28] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 250 seconds)
[10:51:47] *** Joins: edr (~edr@enlo.co)
[10:51:47] *** Quits: edr (~edr@enlo.co) (Changing host)
[10:51:47] *** Joins: edr (~edr@user/edr)
[10:59:06] *** Joins: Darkcoal (~user@130.164.146.159)
[11:00:14] *** Joins: frost (~frost@user/frost)
[11:01:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:02:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:02:29] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:04:41] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 256 seconds)
[11:06:31] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[11:12:07] * GumbyPAN CPAN Upload: Lang-HL-0.39 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.39
[11:15:44] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[11:27:45] *** Joins: art1 (~romeyke@p200300ccdf05d3003e810e8e3bea90e6.dip0.t-ipconnect.de)
[11:29:12] *** Joins: Repaster (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[11:29:12] *** Joins: Paperbot (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[11:29:12] *** Quits: Repaster (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Changing host)
[11:29:12] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[11:29:12] *** Quits: Paperbot (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Changing host)
[11:29:12] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[11:31:30] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[11:32:09] * GumbyPAN CPAN Upload: SPVM-0.9126 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9126
[11:38:41] *** Quits: Croran (~Croran@71.231.214.173) (Ping timeout: 256 seconds)
[11:39:02] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[11:40:00] *** Quits: Darkcoal (~user@130.164.146.159) (Ping timeout: 256 seconds)
[11:41:44] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Remote host closed the connection)
[11:41:51] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[11:41:57] *** Joins: Darkcoal (~user@2001:16a2:77c9:6300:26a6:c9f4:dfde:a93c)
[11:42:10] * GumbyPAN CPAN Upload: Lang-HL-0.44 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.44
[11:42:19] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[11:46:17] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 240 seconds)
[11:47:22] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 250 seconds)
[11:50:37] *** Quits: Darkcoal (~user@2001:16a2:77c9:6300:26a6:c9f4:dfde:a93c) (Ping timeout: 240 seconds)
[11:52:23] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:52:41] *** Joins: Darkcoal (~user@139.64.70.208)
[11:55:34] *** Joins: fwg (~fwg@user/fwg)
[11:59:54] <olspookishmagus> an oneliner that would convert this: "\x50\x45\x52\x4C" to this: "PERL" ?
[12:00:02] *** Joins: randir (~randir@93.159.239.42)
[12:01:08] <tirnanog> perl -e 'print "\x50\x45\x52\x4C"'
[12:05:46] *** Quits: earthbreaker (~earthbrea@li778-229.members.linode.com) (Quit: I Break D Ert)
[12:06:05] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[12:10:24] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[12:10:38] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:11:05] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[12:12:04] *** Quits: Darkcoal (~user@139.64.70.208) (Ping timeout: 250 seconds)
[12:15:34] *** Joins: Darkcoal (~user@130.164.163.44)
[12:17:14] * GumbyPAN CPAN Upload: Lang-HL-0.88 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.88
[12:29:48] *** Joins: furrymcgee (~devuan@cgn-89-1-211-103.nc.de)
[12:31:36] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:33:17] *** Quits: Repaster (~Repaster@perlbot/bot/grinnz/repaster) (Ping timeout: 240 seconds)
[12:33:17] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Ping timeout: 240 seconds)
[12:34:24] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 256 seconds)
[12:36:25] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:37:44] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:39:29] <Botje> olspookishmagus: say map {pack "H*", $_} q(\x50\x45\x52\x4C) =~ /\\x(..)/g
[12:45:36] *** Joins: Repaster (~Repaster@dsl-50-5-168-166.fuse.net)
[12:45:36] *** Quits: Repaster (~Repaster@dsl-50-5-168-166.fuse.net) (Changing host)
[12:45:36] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[12:45:41] *** Joins: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net)
[12:45:41] *** Quits: Paperbot (~Paperbot@dsl-50-5-168-166.fuse.net) (Changing host)
[12:45:41] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[12:45:56] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[12:46:07] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[12:47:11] *** Quits: Michelle (~michelle@203.206.128.220) (Read error: Connection reset by peer)
[12:48:13] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 268 seconds)
[12:48:40] *** Joins: klys (~mdasoh@show.op8.us)
[12:49:01] *** Joins: Michelle (~michelle@2407:8800:bc20:200a:18b1:3f36:db6f:7bd4)
[12:54:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[12:55:57] *** Quits: noctux (~noctux@user/noctux) (Read error: Connection reset by peer)
[13:01:59] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[13:02:21] *** Joins: klys (~mdasoh@show.op8.us)
[13:05:48] *** Joins: Pali (~pali@user/pali)
[13:08:24] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 256 seconds)
[13:08:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[13:09:31] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[13:10:11] *** Joins: vanessa (~annada@103.160.128.7)
[13:10:15] *** Joins: HvszrStykp (~X@81.171.62.86)
[13:13:41] *** Joins: noctux (~noctux@user/noctux)
[13:15:07] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:16:37] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 240 seconds)
[13:18:46] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[13:20:21] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:20:35] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: Connection reset by peer)
[13:21:26] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:26:21] * GumbyPAN welcomes RESSAM - Samuele Bonino to CPAN!
[13:33:17] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 240 seconds)
[13:41:05] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[13:51:24] * GumbyPAN CPAN Upload: Module-Extract-Namespaces-1.023 by BDFOY https://metacpan.org/release/BDFOY/Module-Extract-Namespaces-1.023
[13:55:19] *** Joins: klys (~mdasoh@show.op8.us)
[13:58:31] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[13:59:27] <Altreus> I was curious about that blog post and within the first few sentences it had said PHP and I lost any probationary respect I was holding for it
[14:01:35] *** Quits: ilmari (~ilmari@user/ilmari) (Quit: reboot for kernel update)
[14:04:34] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:08:32] *** Joins: ilmari (~ilmari@user/ilmari)
[14:12:45] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[14:16:27] * GumbyPAN CPAN Upload: Lang-HL-0.93 by RAJ https://metacpan.org/release/RAJ/Lang-HL-0.93
[14:32:23] <choroba> eval: use Time::Piece; print 'Time::Piece'->strptime('1900-01-01', '%Y-%m-%d') - 987654321
[14:32:25] <perlbot> choroba: Sun Sep 13 19:34:39 1868
[14:32:36] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:32:50] <choroba> eval: use Time::Piece; print 'Time::Piece'->strptime('1868-09-13', '%Y-%m-%d')
[14:32:52] <perlbot> choroba: ERROR: Error parsing time at $BLEAD/lib/5.35.8/x86_64-linux/Time/Piece.pm line 598. 
[14:33:07] <choroba> No roundtrip? :-(
[14:33:13] *** Quits: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[14:33:22] *** Joins: csrf (~csrf@user/csrf)
[14:33:30] <choroba> also, it seems to work in 5.10
[14:38:38] *** Joins: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it)
[14:43:29] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[15:00:04] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:09:00] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:10:45] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[15:13:45] *** Quits: troller (~p@2a02:6b8:b081:6432::1:36) (Ping timeout: 268 seconds)
[15:15:57] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[15:16:07] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[15:16:07] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[15:19:35] *** Quits: sgrs_ (~sgrs@185.112.146.78) (Quit: leaving)
[15:22:10] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[15:22:32] *** Joins: HvszrStykp (~X@81.171.62.86)
[15:22:56] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[15:40:34] *** Joins: sshine (~simon@hubris.eta.solutions)
[15:43:56] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[15:47:16] *** Joins: lispy (~lispy3@84.69.59.93)
[15:51:49] <sshine> does Perl have an equivalent to Python's requirements.txt?
[15:52:37] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 240 seconds)
[15:53:36] <Botje> cpanfile
[15:53:54] <Botje> https://metacpan.org/dist/Module-CPANfile/view/lib/cpanfile.pod
[15:53:54] <Paperbot> Link title(s): [ cpanfile - A format for describing CPAN dependencies for Perl applications - metacpan.org ]
[15:54:58] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[15:56:07] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[15:58:10] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:58:53] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:59:01] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:59:55] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:05:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[16:09:23] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:13:43] <aquanight> ugh.
[16:14:13] <aquanight> this continues to make no goddamned sense
[16:14:53] <aquanight> how is it possible to be inside an if block with a false condition and no goto labels.
[16:15:26] <Botje> confused debugger and/or outdated debug info? corrupted instruction pointer?
[16:15:45] <Botje> compiler decided to lift that one line of code?
[16:16:15] <aquanight> I'm going to have to see if I can tweak this to build with -O0 instead of -O2
[16:16:23] <Botje> not -Og?
[16:16:28] <aquanight> what's -Og
[16:16:37] <vague> original ganster
[16:16:49] <vague> gangster*
[16:17:02] <Botje> minimal optimizations but still debuggable
[16:17:38] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:17:39] <Botje> -O0 is really when you're chasing compiler bugs or get a kick out of stepping through 10x as many instructions 
[16:18:09] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:22:32] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[16:22:50] <aquanight> bah
[16:22:56] <aquanight> it doesn't obey CFLAGS="..."
[16:23:08] <aquanight> where the hell are the compile flags set up
[16:23:35] <Botje> what is "it", exactly? I missed yesterday's discussion
[16:24:43] <aquanight> Botje: https://github.com/aquanight/Attribute-Pure/blob/main/lib/Attribute/Pure.xs#L157
[16:24:44] <Paperbot> Link title(s): [ Attribute-Pure/Pure.xs at main · aquanight/Attribute-Pure · GitHub ]
[16:24:50] <aquanight> somehow gdb says it is getting to this line
[16:25:01] <aquanight> despite AvFILLp(sv) being -1 (which should've skipped the loop entirely)
[16:25:24] <aquanight> and it makes no goddamned sense
[16:25:35] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:25:58] <aquanight> so now I have to dive into the rabbit hole that is Module::Build to figure out how I can change the gcc flags because right now it's using -O2 -g
[16:26:11] <aquanight> which is fine normally
[16:26:23] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:26:35] <aquanight> but a lot of variables are getting optimized out and for all I know it is deciding it can skip the if conditional for some really stupid reason
[16:26:58] <Botje> --config ccflags="-Og -g" ?
[16:27:08] <Botje> when invoking Build.pl
[16:27:09] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:27:13] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:27:23] <aquanight> great
[16:27:28] <aquanight> now how do I get dzil to do that
[16:27:30] <Botje> should perhaps try that for myself before suggesting :P
[16:27:40] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:29:10] <Botje> doing that leaves me with "-Og -g -Os" mrrr.
[16:30:59] *** Parts: sshine (~simon@hubris.eta.solutions) ()
[16:36:06] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: No route to host)
[16:38:38] <aquanight> Botje: maybe --config optimize="..."
[16:39:08] <aquanight> but that still leaves me with "how do I get dzil to pass this to Build
[16:44:36] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[16:45:13] *** Joins: troller (~p@2a02:6b8:0:40c:fc33:a590:b557:35f7)
[16:45:32] <aquanight> jesus h christ google is being useless here
[16:45:56] <aquanight> starting to wonder if it can even be done
[16:47:47] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:49:58] <lispy> I understand your pain, I can't wait for the day when search engines aren't useless in finding solutions for my problems
[16:51:43] * GumbyPAN CPAN Upload: Set-Object-1.42 by RURBAN https://metacpan.org/release/RURBAN/Set-Object-1.42
[16:52:25] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[16:55:19] <aquanight> ok well
[16:56:25] <aquanight> after some RTFS it seems like the ModuleBuild plugin for Dist::Zilla straight does not believe in letting you adjust anything in Build.PL
[16:57:02] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:57:28] *** Joins: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi)
[17:01:32] *** Quits: mattil (~mattil@d5np5f4m4gstlswqc2f-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[17:05:52] *** Joins: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net)
[17:09:25] <daemon> aquanight, maybe a post on the github or mail list or wiki or tracker
[17:09:27] <daemon> or w/e it has
[17:09:48] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[17:11:07] <aquanight> well in the mean time I've beaten Dist::Zilla into submission with the sledgehammer that is 'dzil run bash'
[17:11:24] <aquanight> unfortunately -Og I still have a problem
[17:11:52] <aquanight> also I was lied to. I was told -g3 -gdwarf-2 would ensure I could see the preprocessor macros in gdb
[17:12:56] <aquanight> I cannot for the life of me understand how this is possible
[17:15:32] <aquanight> https://l.perl.bot/p/79enz7
[17:15:33] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:15:53] <aquanight> how is it getting into the for loop?
[17:16:09] <aquanight> it's like that 'if' was just a suggestion
[17:17:10] *** Joins: frost (~frost@user/frost)
[17:18:30] <choroba> wait, you said AvFILLp(sv) == -1
[17:19:18] <choroba> so, -1 != 1, condition is true
[17:19:25] <choroba> what's the question?
[17:19:29] <aquanight> ..
[17:19:32] <aquanight> fucking.
[17:19:34] <aquanight> hell.
[17:19:48] <aquanight> typo from hell apparently.
[17:19:56] <choroba> seems like you need a break
[17:19:58] <aquanight> and for some dumbass reason I kept mentally inserting the missing -
[17:20:08] <choroba> and I'm not talking about breakpoints
[17:20:53] <aquanight> I must have looked at that a thousand times
[17:21:23] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:21:44] <LeoNerd> This is why I suggest using av_count() instead
[17:21:55] <LeoNerd> Quite often you can just use it as truth
[17:22:09] <LeoNerd> if(av_count(av)) ... 
[17:22:10] <choroba> is it the same as scalar @arr?
[17:22:14] <LeoNerd> yes
[17:22:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:22:20] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 250 seconds)
[17:23:01] <aquanight> I mean hell
[17:23:15] <aquanight> at that point you probably don't even need the conditional, you can just C-for-loop it
[17:23:22] <aquanight> for (int ix = 0; i < av_count(av); ++i) ...
[17:23:33] <LeoNerd> Mhmmm
[17:23:46] <LeoNerd> or  i <= AvFILL(av)
[17:24:02] <aquanight> admittedly, the only reason my loop even looks that way, is because I was leveraging S_gen_constant_list as a reference
[17:24:14] <aquanight> and that's how *they* did it, but without the dumb typo
[17:24:46] <Altreus> I have this in a one-liner and I don't know where I got it from: $killed = 1 if ($?<<8)-1
[17:24:58] <aquanight> in all honesty, I would've rather just *called* S_gen_constant_list. But S_
[17:25:22] <Altreus> After a system, specifically intended to catch the situation that I ^C the subprocess
[17:26:00] <Altreus> It seems to also be true if it exits with a status code for any other reason
[17:26:12] <Altreus> maybe I should just use POSIX
[17:26:20] <aquanight> LeoNerd: probably 68% of Pure.xs is shit I ripped out of op.c S_ functions
[17:26:59] <LeoNerd> Mmmm ;)
[17:28:01] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[17:28:11] <gordonfish> { Re: <aquanight> for (int ix = 0; i < av_count(av); ++i) ... } Did you mean int i = 0; instead of int ix = 0; ?
[17:28:22] <aquanight> gordonfish: yeah probably
[17:29:36] <aquanight> look it's 0700. I just spent much of last night and this morning trying to understand something that I thought should've been impossible. Only for choroba to point out the very stupid typo I kept glossing over every single damned time I looked at the loop.
[17:30:00] <aquanight> anyway.
[17:30:14] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:30:24] <aquanight> Altreus: I'm not even sure if that bitshift makes sense.
[17:31:27] <aquanight> sweval: my $p = fork; unless($p) { exit 4; } say $?;
[17:31:28] <perlbot> aquanight: 0 
[17:31:54] <aquanight> ... oh right I don't think perlbot is allowed to fork is it
[17:32:07] <aquanight> sweval: my $p = fork//die; unless($p) { exit 4; } say $?;
[17:32:09] <perlbot> aquanight: 0 
[17:32:43] <aquanight> ...what.
[17:32:47] <aquanight> sweval: my $p = fork//die; unless($p) { die; } say $?;
[17:32:49] <perlbot> aquanight: 0 
[17:32:57] <aquanight> oh I need to wait()
[17:33:16] <aquanight> sweval: my $p = fork//die; unless($p) { exit 4; } wait; say $?;
[17:33:18] <perlbot> aquanight: 1024 
[17:33:20] <aquanight> there it is
[17:33:24] <Altreus> turns out using POSIX is far easier :D
[17:33:27] <aquanight> sweval: my $p = fork//die; unless($p) { die; } wait; say $?;
[17:33:29] <perlbot> aquanight: ERROR: Died at (IRC) line 1. 0 
[17:33:40] <aquanight> sweval: my $p = fork//die; unless($p) { dump; } wait; say $?;
[17:33:42] <perlbot> aquanight: ERROR: dump() must be written as CORE::dump() as of Perl 5.30 at (IRC) line 1. 
[17:33:49] <aquanight> sweval: my $p = fork//die; unless($p) { CORE::dump; } wait; say $?;
[17:33:50] <perlbot> aquanight: 6 
[17:34:01] <Altreus> aquanight: no idea where I found it
[17:34:17] <Altreus> now I have $killed = WTERMSIG($?) == SIGINT
[17:34:23] <Altreus> and it works!
[17:34:32] <aquanight> you might want WIFSIGNALED($?)
[17:34:39] <aquanight> unless you *specifically* want SIGINT
[17:34:56] <aquanight> but even so, I believe technically under POSIX WTERMSIG is "undefined" if !WIFSIGNALED
[17:35:58] <aquanight> though I find the bit order to be strange
[17:36:07] <aquanight> why is WTERMSIG in the low bits and WEXITSTATUS in the high bits
[17:36:36] <aquanight> (especially considering the two are mutually exclusive)
[17:36:48] * GumbyPAN welcomes MBESSON - Maxime Besson to CPAN!
[17:36:59] <Altreus> ah it does say "only meaningful if WIFSIGNALED"
[17:37:12] <Altreus> so this might intend that I could get a meaningless value
[17:37:26] <Altreus> rather than it just helpfully returning no
[17:37:41] <aquanight> I'm guessing that the convention that term signal/exit status are separate is not a guarantee in all platforms
[17:38:30] <aquanight> admittedly I'm exactly the sort of person that would stuff the two in the same bits
[17:38:43] <aquanight> because I don't see the point in separating them
[17:39:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:39:29] <Altreus> It is actually sometimes quite important to know whether something intervened in the exiting of a program, or whether it ran to the end of its own accord
[17:39:41] <aquanight> but it's also relevant because the process could've been stopped (not terminated) by SIGINT, though I think this requires ptrace() involvement
[17:40:35] <aquanight> Altreus: I don't mind knowing if a code is an exit or a signal. I just mean that I don't understand why they're not a 'union', given that an exit status can only be one or the other.
[17:41:56] <aquanight> like
[17:42:26] <aquanight> just have the low 8 bits be union { char exit; char signal; }; and then you can have your WIFEXITED/WIFSIGNALED/WIFSTOPPED/WCOREDUMP flags in the upper bits
[17:44:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:44:11] <aquanight> at least it's not Win32's 32-bit exit status
[17:45:23] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:45:53] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[17:46:48] * GumbyPAN CPAN Upload: CBI-Wrapper-0.01 by RESSAM https://metacpan.org/release/RESSAM/CBI-Wrapper-0.01
[17:51:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:51:22] <Botje> 64-bit exit statuses, ISAGN.
[17:51:33] <Botje> "process killed because user got impatient"
[17:51:47] <Botje> "process killed due to cosmic rays"
[17:52:00] <Botje> "process killed in the name of progress"
[17:52:07] <daemon> lol
[17:52:12] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[17:52:15] <Botje> "process killed to set an example for the others"
[17:52:52] *** Quits: japh (~scp1@user/japh) (Ping timeout: 256 seconds)
[17:54:52] *** Joins: japh (~scp1@user/japh)
[17:56:17] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[17:58:43] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[18:00:57] *** Joins: frost (~frost@user/frost)
[18:01:50] * GumbyPAN CPAN Upload: CBI-Wrapper-0.02 by RESSAM https://metacpan.org/release/RESSAM/CBI-Wrapper-0.02
[18:05:26] *** Quits: tybalt89_ (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[18:06:07] <genio> It's certainly not all there yet, but https://metacpan.org/pod/Sodium::FFI
[18:06:08] <Paperbot> Link title(s): [ Sodium::FFI - FFI implementation of libsodium - metacpan.org ]
[18:08:29] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:09:34] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:11:15] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[18:13:25] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:16:41] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:16:42] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:16:52] * GumbyPAN CPAN Upload: DateTime-Calendar-Julian-0.106_02 by WYANT https://metacpan.org/release/WYANT/DateTime-Calendar-Julian-0.106_02
[18:16:52] * GumbyPAN CPAN Upload: DateTime-Calendar-Julian-0.106_03 by WYANT https://metacpan.org/release/WYANT/DateTime-Calendar-Julian-0.106_03
[18:17:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:17:31] *** Joins: morte_ (~user@186.151.118.62)
[18:19:33] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[18:20:57] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[18:21:44] <simcop2387> genio: nice
[18:23:53] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:24:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:26:21] <genio> Add to it. quite a bit left to get in there
[18:27:09] <genio> libsodium has a literal crap-ton of functions
[18:36:42] <LeoNerd> Also most users don't need most of it. It's a huge grab-bag of lots of separate things
[18:40:16] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:40:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:42:56] <Altreus> aquanight: historical reasons I'm sure
[18:42:59] <Altreus> :)
[18:47:25] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:48:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:49:39] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:53:36] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[18:57:00] *** Joins: morte_` (~user@186.151.118.62)
[18:58:26] <japh> mm, encryption. The other day I found out about a function in core perl that I hadn't heard of. I thought I knew it all. The function was crypt, and it has been used for encryption at $work since 1997
[18:58:43] <simcop2387> crypt doesn't encrypt
[18:58:52] <simcop2387> it's actually hashing stuff
[18:59:01] <japh> yes
[18:59:40] *** Quits: morte_` (~user@186.151.118.62) (Remote host closed the connection)
[18:59:46] <japh> but the ceo told me he just used whatever he found that sounded sort of like encryption
[19:00:17] *** Quits: morte_ (~user@186.151.118.62) (Ping timeout: 240 seconds)
[19:01:19] <Botje> "your data has been crypt(1)ed. If you want to recover, send 5 BTC to this address and notify totallylegithackers@gmail.com"
[19:02:31] *** Quits: WantToHelp (~WantToHel@user/wanttohelp) (Quit: Lost terminal)
[19:05:48] *** Joins: WantToHelp (~WantToHel@user/wanttohelp)
[19:06:08] *** Quits: jplesnik (~jplesnik@83.240.61.101) (Quit: Leaving)
[19:08:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:08:13] <genio> LeoNerd: I'm basically planning on adding the functions made available in PHP first.
[19:13:03] <daemon> suo suo Altreus 
[19:14:43] *** Joins: khosruw (~khosruw@vps-6df5f188.vps.ovh.net)
[19:18:28] <khosruw> Hey guys, I got a question about Parser::MGC. Should I use $self->commit when every rule starts? For example (concept code): sequence_of({ $self->commit; ...(inner_rule){$self->commit} })
[19:18:48] <LeoNerd> You should commit once the /structure/ of the thing you are parsing has been determined
[19:19:01] <LeoNerd> Once you're sure no other 'any_of' or similar could be applied
[19:20:10] <Altreus> daemon: o/
[19:21:58] <xenu> for example, if you're parsing perl code, after seeing " you should commit because it can't possibly be anything else than a string literal
[19:22:08] <xenu> and if you encounter something that doesn't belong in a string literal, it should be an error
[19:22:54] <khosruw> LeoNerd, i've commited my "sequence_of" that is inside of my "commited_scope_of" that it is in my main commited "sequence_of". is this the right way? (everything work fine + debug msgs)
[19:22:56] <xenu> (okay, i know, i oversimplified that a bit, that " may be inside a comment blah blah)
[19:23:22] <khosruw> xenu, no! it gave me the whole idea! thanks!
[19:25:22] <khosruw> thanks guys <3 xenu++ LeoNerd++
[19:25:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:25:42] <khosruw> rindolf my guy joined!
[19:26:26] <rindolf> khosruw: meow
[19:27:03] <graham> hey there, I'm trying to prompt for someone to enter a password. I'd like to set no echo without needing to exec `stty`. I saw `IO::Prompt[er]` supports this, but they seem eager to read from ARGV -- which I definitely don't want. Is there a good way to set noecho in perl itself, or is there another recommended module?
[19:27:18] <khosruw> rindolf: croak()
[19:27:54] <Altreus> so I suppose commit just prevents backtracking to see if it could have been something else
[19:30:12] *** Joins: mattil_ (~mattil@87-92-80-235.bb.dnainternet.fi)
[19:31:01] *** Quits: khosruw (~khosruw@vps-6df5f188.vps.ovh.net) (Quit: leaving)
[19:31:08] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[19:35:15] *** Quits: mattil_ (~mattil@87-92-80-235.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[19:35:32] <Altreus> graham: IO::Prompt has -t for "Prompt to terminal no matter what"
[19:35:37] <Altreus> I wonder if that skips ARGV
[19:37:17] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[19:37:23] <Altreus> nope
[19:37:38] <Altreus> oh I did it wrong :D
[19:37:43] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[19:38:24] <Altreus> yep
[19:39:10] <Altreus> graham: $ echo "asfasfsd" | perl -MIO::Prompt -E'say prompt "Say something ", "-t", "-e" => ""'
[19:39:36] <Altreus> without -t it just outputs asfasfsd
[19:39:40] <Altreus> with -t it ignores it
[19:44:31] <xenu> that api is insane
[19:44:57] <genio> I need a knee replacement or some sort of fake cartilage. none of this looks fun
[19:47:17] <Altreus> xenu: it's very old isn't it
[19:47:31] <Altreus> from a time when perl functions were written to look like shell commands for some reason
[19:49:46] <choroba> https://github.com/Dual-Life/Time-Piece/issues/56
[19:49:46] <Paperbot> Link title(s): [ strptime can't parse years before 1900 · Issue #56 · Dual-Life/Time-Piece · GitHub ]
[19:51:40] <graham> I went to just use Term::ReadKey directly: https://github.com/NixOS/hydra/pull/1130/commits/76fbde6d6b45415b004c2468973da0cff2f3576f#diff-e3da564acea38589951a0c20268cc0cafb6a22499ff92d66f62a9b6cadfa3e6cR146
[19:51:40] <Paperbot> Link title(s): [ hydra-create-user: support prompting for password by grahamc · Pull Request #1130 · NixOS/hydra ·... ]
[19:55:23] <simcop2387> eval: q{strings!} =~ m"!" ? yay : nay
[19:55:25] <perlbot> simcop2387: Unquoted string "yay" may clash with future reserved word at (IRC) line 1. Unquoted string "nay" may clash with future reserved word at (IRC) line 1. yay
[19:55:52] <Altreus> If I set $^I will that in-place edit all files, or just ones processed by ... erm ... something
[19:55:55] <LeoNerd> Oh, boo. I missed a trick there. Rather than the builtin booleans being called `true` and `false`, they should have been the equilateral `yay` and `nay`
[19:56:33] <Altreus> LeoNerd: then later on "maybe" would feel more at home
[19:56:38] <alh> I believe you meant yea or nay
[19:56:53] <alh> Guess we can bikeshed that
[19:57:02] <Altreus> yea or nea
[19:57:12] <Altreus> the ayes have it
[19:57:28] <LeoNerd> Well then they can keep it. The nays don't want it back
[19:58:47] <simcop2387> LeoNerd: we'd also need neigh
[19:59:34] <alh> To be used with equineity comparisons 
[19:59:40] <genio> neigh's for horses.
[20:00:00] <genio> man I used to hate that when my grandfather'd be annoyed with our use of the word "hey"
[20:00:14] <gordonfish> yay or neight for hay
[20:00:57] <gordonfish> s/t\b//
[20:02:03] * GumbyPAN CPAN Upload: Win32-LongPath-2.2 by RBOISVERT https://metacpan.org/release/RBOISVERT/Win32-LongPath-2.2
[20:02:22] * gordonfish wonders how 'neigh' got autocorrected to 'neight', is that even a word?
[20:02:43] <v`> https://twitter.com/BostonGlobeTech/status/1484234191642451974
[20:02:43] <Paperbot> Boston Globe Technology (@BostonGlobeTech) 21h53m ago in reply to @BostonGlobeTech #1484234190258327559: For health officials, the data confirms whether COVID spikes in the community are real, and not due to increased testing or other factors.   Moreover, COVID levels in wastewater are a leading indicator for new clinical cases.
[20:03:14] <aquanight> okay yeah I want to know how had this idea... https://metacpan.org/dist/IO-Prompt/source/lib/IO/Prompt.pm#L187
[20:03:14] <Paperbot> Link title(s): [ lib/IO/Prompt.pm - metacpan.org ]
[20:03:55] <aquanight> s/how/who/
[20:04:14] <gordonfish> Wastewater?? I've heard time and again that things like covid require a warm blooded host to survive for more than a short while
[20:04:16] <aquanight> in what world does reading from *ARGV for prompting make sense
[20:04:24] <aquanight> read from TTY or read from *STDIN
[20:04:46] <aquanight> does rm -i read from the files it deletes? No? Didn't effin think so.
[20:05:11] <gordonfish> aquanight: Yeah that sounds rather bizarre
[20:05:29] <aquanight> this one doesn't list a github
[20:05:54] <Altreus> yes | app wouldn't work if it didn't take responses from ARGV
[20:05:57] <Altreus> well
[20:06:12] <Altreus> STDIN, but ARGV is the slightly more scriptable version of that
[20:06:18] <aquanight> Altreus: uh wut
[20:06:32] <Altreus> did I misunderstand
[20:06:34] <Altreus> hang on
[20:06:54] *** justJustache is now known as justache
[20:06:54] <aquanight> yes | app ./files*.txt wouldn't work at all
[20:06:59] <aquanight> if it used *ARGV
[20:07:21] <aquanight> that would only work if it used *STDIN
[20:07:30] <Altreus> that's right, it would read the prompt responses from the files
[20:07:47] <Altreus> that may or may not be what you want, depending on whether or not you want that
[20:07:59] <Altreus> it does seem more likely that you wouldn't than that you would
[20:08:20] <gordonfish> basheval: perl -MO=Deparse -pe '' foo bar baz
[20:08:21] <perlbot> gordonfish: -e syntax OK␤LINE: while (defined($_ = readline ARGV)) {␤    ();␤}␤continue {␤    die "-p destination: $!\n" unless print $_;␤}␤
[20:08:23] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:08:29] <gordonfish> That's where ARGV is typically used
[20:08:37] <gordonfish> -p and -n
[20:08:42] <aquanight> Altreus: you almost certainly do not want to read prompt responses from your *ARGV
[20:08:52] <ology> Altreus - Master of the Subjunctive Case
[20:08:53] <ology> :)
[20:08:57] <aquanight> I cannot fathom when you would *ever* want to read interactive responses from ARGV
[20:09:07] <Altreus> ology: would that it were so
[20:09:10] <aquanight> *STDIN at the minimum, if not directly from TTY
[20:09:18] <aquanight> I've half a mind to fork this IO::Prompt
[20:09:22] <aquanight> and fix this nonsense
[20:09:28] <Altreus> well I didn't look at IO::Prompter
[20:09:29] *** Joins: magla (~gelignite@55d4db0b.access.ecotel.net)
[20:09:33] <aquanight> read from *STDIN, and also fix it so on Windows it can read from CONIN$
[20:09:44] <Altreus> Given the interface of IO::Prompt, and the fact it's not core, maybe it's a sleeping dog to let lie
[20:09:57] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[20:09:59] <aquanight> maybe
[20:10:00] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[20:10:13] <Altreus> I'm more concerned that I have a git plugin for zsh that puts the current branch in my prompt but doesn't do anything so useful as also putting it in an environment variable
[20:10:39] <genio> indeed. best to just forget that IO::Prompt exists. 
[20:10:46] <aquanight> I mean
[20:11:04] <ology> Looks like I use that a bit. Hmm
[20:11:12] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:11:36] <aquanight> it's generally easy to: { STDERR->autoflush(1); STDERR->print("Prompt: "); scalar readline(*STDIN); }
[20:11:51] *** Joins: mattil (~mattil@87-92-80-235.bb.dnainternet.fi)
[20:12:22] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[20:12:26] <ology> Guess I use IO::Prompt::Tiny too :)
[20:12:30] <gordonfish> basheval: echo 123 | perl -e '{ STDERR->autoflush(1); STDERR->print("Prompt: "); print scalar readline(*STDIN); }'
[20:12:31] <perlbot> gordonfish: Prompt: 123␤
[20:12:40] *** Joins: XV8 (~XV8@2601:5cb:c001:50:552:a21c:75c1:657)
[20:12:48] <aquanight> if you want direct from tty, open my $fd, ">+/dev/tty";
[20:13:06] <aquanight> or on windows, open my $fd, ">+CON";
[20:13:11] <gordonfish> True, at the expense of portability
[20:13:39] <gordonfish> (Could see that in a module that does platform checking)
[20:13:51] <aquanight> $^O isn't hard
[20:13:56] <gordonfish> yep
[20:14:59] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Read error: Connection reset by peer)
[20:15:31] *** Quits: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[20:16:06] *** Quits: mattil (~mattil@87-92-80-235.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[20:17:04] * GumbyPAN CPAN Upload: Unknown-Values-0.102 by OVID https://metacpan.org/release/OVID/Unknown-Values-0.102
[20:19:05] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:c19b:db88:7730:1f66)
[20:19:14] <aquanight> huh. for some reason I thought there was a vt escape for noecho
[20:22:49] <LeoNerd> Nope
[20:22:56] <LeoNerd> It's a termios setting
[20:26:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:295b:27c3:87b1:2b8f) (Ping timeout: 240 seconds)
[20:30:29] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[20:31:07] *** Joins: rezhit (~rezhit@45.137.151.75)
[20:31:52] *** Joins: diskin (~diskin@87.117.48.146)
[20:37:17] <rezhit> Hi. I have a while loop of a array of the package names and want to execute them. Well, We have "say Foo::Bar->baz($data) but we have to import the package.. there was a cpan module that could do what I want but forgot its name
[20:37:51] <LeoNerd> Module::Runtime
[20:38:38] <rezhit> LeoNerd Exactly, Thank you ;-)
[20:40:21] <Adura> https://metacpan.org/search?q=NFT For shame!
[20:40:21] <Paperbot> Link title(s): [ Search for "NFT" - metacpan.org ]
[20:40:54] *** Joins: stanrifkin (~stanrifki@p200300dbcf167700bafc34e52f0bf804.dip0.t-ipconnect.de)
[20:41:06] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[20:41:49] <choroba> They use wastewater to measure how many cases there are, they don't say the water can spread the disease
[20:42:14] <rezhit> Adura, "No result." god thanks!
[20:43:10] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[20:43:24] *** choroba is now known as choroba_
[20:43:45] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[20:43:54] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[20:44:22] *** Quits: rezhit (~rezhit@45.137.151.75) (Quit: Client closed)
[20:47:23] *** Joins: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5)
[20:50:19] *** Parts: art1 (~romeyke@p200300ccdf05d3003e810e8e3bea90e6.dip0.t-ipconnect.de) ()
[20:55:34] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:58:38] *** Quits: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:12] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[21:05:57] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:06:05] <rjbs> A remedial IRCCloud question…
[21:06:31] <rjbs> Sometimes I come back to IRCCloud after 24h and see there's some mention of me 23h ago.  Scrolling back to scan for it is very tedious.  Is there some command for "jump back to last mention of me"?
[21:07:26] <Grinnz> unfortunately not
[21:07:33] <rjbs> Ah well, thanks anyway.
[21:07:33] <LeoNerd> If there is I'm keen to steal it for Circle ;)
[21:07:52] <rjbs> LeoNerd: I should ask you for some help on my non-working IRC bot code.
[21:07:59] <Grinnz> discord is actually a good example of such a feature
[21:08:08] <LeoNerd> You're making a non-working IRC bot? That sounds eeeeasy
[21:08:10] <Grinnz> you can see a list of your highlights, and jump around to the messages
[21:08:22] <rjbs> (It works on Discord, Slack, Twilio, and more.  But the IRC interface, which I bodged together while eating a bowl of cereal, only barely works.)
[21:09:27] <rjbs> I'll have to swap it back in.  Once I have it running-but-not-working I'll pester you/etc on #io-async sometime.
[21:09:36] <LeoNerd> :)
[21:10:19] <rjbs> p.s. since I have probably not said it either at all or enough: thanks for IO::Async, I use it and its related code all the time now, with good success
[21:10:25] <LeoNerd> :)
[21:13:28] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:22:36] <simcop2387> LeoNerd: irssi has /lastlog -hi
[21:22:43] <LeoNerd> Eh.. no
[21:23:00] <LeoNerd> that's a command to print -new- lines directly at the end of the current buffer, as copies of the log
[21:23:15] <LeoNerd> The request was one that jumps the scroller view backwards to that point in context in the history
[21:23:20] <LeoNerd> I -really- dislike irssi's way of doing it
[21:24:34] *** Quits: djerius_ (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[21:26:41] <simcop2387> LeoNerd: yea i've not seen a great ui for it either, discord is ok, slack is annoying (at least with the modern version of it), and teams is just batshit nutty, yammer is even worse
[21:26:44] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[21:27:26] <LeoNerd> My vague handwavy thoughts involve a :split-alike UI, where the bottom half of the scroller still shows the current end tail, but the top half shows the search context.. and allows jumping around between matches
[21:27:38] *** Joins: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5)
[21:28:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:29:02] <LeoNerd> But then I have lots of vague handwavy thoughts of a lot of exciting UI that I haven't got around to because eeeeeverything else
[21:29:13] <LeoNerd> e.g. currently adding 'experimental' warnings to the builtin:: functions because, oops, I forgot first time
[21:30:09] *** Joins: anthk__ (~anthk_@92.176.105.30)
[21:30:48] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:24] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:33:30] *** Joins: deadmarshal (~deadmarsh@95.38.113.215)
[21:35:02] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:39:19] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:c19b:db88:7730:1f66) (Quit: Leaving)
[21:40:54] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Remote host closed the connection)
[21:45:27] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:51:26] *** Quits: vague (~vague@irssi/staff/vague) (Ping timeout: 252 seconds)
[21:52:35] <El_Che> LeoNerd: success with the grant proposal
[21:54:41] <japh> I use this irssi script for that purpose, and simply switch to the ... status window (?) whenever I leave the computer. https://github.com/irssi/scripts.irssi.org/blob/master/scripts/showhilight.pl
[21:54:41] <Paperbot> Link title(s): [ scripts.irssi.org/showhilight.pl at master · irssi/scripts.irssi.org · GitHub ]
[21:58:57] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[21:59:30] <LeoNerd> El_Che: Hm? Has it been accepted yet? That'd be news to me if it was
[21:59:31] *** Quits: ovid__ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[21:59:49] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:02:54] *** Joins: vague (~vague@irssi/staff/vague)
[22:03:21] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[22:05:57] *** Quits: troller (~p@2a02:6b8:0:40c:fc33:a590:b557:35f7) (Ping timeout: 240 seconds)
[22:07:43] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[22:13:18] *** Joins: tomaw_ (tom@libera/staff/tomaw)
[22:13:42] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[22:14:44] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Quit: Leaving...)
[22:16:08] *** Quits: tomaw (tom@libera/staff/tomaw) (Ping timeout: 612 seconds)
[22:16:08] *** tomaw_ is now known as tomaw
[22:30:45] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[22:34:01] <graham> I have a problem that I'm not sure how to resolve or research. I'm using yath, and inside a test I have `print STDERR "new machine ‘xxx’";` When I run that test with `yath test -v ./t/my-test.t` it prints out `( STDERR )  job  1    new machine â`. My  .t file has `use feature 'unicode_strings';` on line 1. any suggestions on where to look?
[22:35:10] <El_Che> LeoNerd: success wished. Sorry for the poor phrasing
[22:36:00] <gordonfish> graham: What is the expected output?
[22:36:07] <mst> graham: I presume you've checked it by directly running the file?
[22:36:25] <mst> also wondering if you meant to encode() the string before printing it
[22:37:26] <gordonfish> graham: Is the 'xxx' in print STDERR "new machine ‘xxx’"; coming from a variable or is that just a placeholder, and the output should contain xxx (whatever xxx is a placeholder for) ?
[22:38:24] <graham> I've replaced the variable with the string xxx while I try to figure out what is going on
[22:38:37] <gordonfish> (It can be useful to paste the actual code being used.)
[22:38:37] *** Quits: ferz (~ferz@93-39-141-232.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[22:38:58] <graham> yeah, let me try and whittle this down a bit more and then I'll share that!
[22:40:07] <rewt> if you have non-ascii characters in the file, and the file is encoded as utf-8, you need `use utf8;` at the top to tell perl that the file has utf-8 characters
[22:43:38] <mst> also if the thing is coming from externally, you need to decode it, then assemble it into the message, then encode it for ptining
[22:45:51] <graham> sorry, I've been trying to debug this and I keep seeing confusing behavior that I'm trying to understand before asking more questions.  This is to solve a problem I'm seeing where in my tests I call an external program which prints something like `adding new machine ‘localhost’`, which is then printed to STDERR in Perl, which comes out of Yath as new machine â.
[22:47:06] <gordonfish> As I said, it can help to just paste your whole code (or as much as you can) to allow other eyes to perhaps catch the problem.
[22:47:34] *** Quits: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:48:00] <graham> yeah, I'm still trying to get there -- the issue somewhat mysteriously went away and so I'm trying to understand that
[22:49:29] <Grinnz> graham: is your script using Test2::V0 or use utf8?
[22:49:30] <mst> yeah, once unciode is involved 98% of problems turn out to be 'you forgot -one- detail somewhere' so other than reciting the general rules of not blowing your foot off with unicode there's probably not much that can be done without you showing us the details so we can try and help you spot the missing one
[22:50:01] <Grinnz> if you use Test2::V0, everything should just work
[22:50:07] <Grinnz> if you're using Test::More, it's going to be painful
[22:50:26] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:50:37] <Grinnz> oh you're printing directly to STDERR, so not through Test2
[22:50:42] <Grinnz> so yeah, you have to encode it
[22:50:54] *** Joins: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5)
[22:51:02] <Grinnz> alternatively you could use diag/note to debug via Test2
[22:51:15] <graham> okay, I see how I made the problem go away (but don't understand it yet.) My .t file contains `use Test2::V0; print STDERR "new machine ‘xxx’"; done_testing;`.  I made the problem go away by commenting out `done_testing;`.
[22:51:53] <Grinnz> that's not a solution, you just removed all the testing
[22:52:03] <graham> I mean, I know that obviously
[22:52:14] <Grinnz> anyway, Test2::V0 implies use utf8, so you need to encode your unicode characters before printing them to STDERR
[22:52:22] <Grinnz> if you use diag or note instead, that will handle it
[22:53:29] <Grinnz> also make sure your file is actually encoded in UTF-8 (this is usually not a problem anymore but it's possible)
[22:58:53] *** Joins: kensanata (~user@user/kensanata)
[23:02:20] <graham> great, so I've verified the file is encoded in UTF-8. I'd like to figure out how to encode the characters, so I've given this a try: use Test2::V0; use Encode; use utf8; print STDERR Encode::encode_utf8("new machine ‘xxx’"); is(1, 2); done_testing; but it still comes out as "new machine â". Is there another encode I should be using?
[23:03:48] <ether> you need to set the binmode of STDERR.  there may be a Test2 way of doing that, but you can also just:  use open ':std', ':encoding(UTF-8)'; # force stdin, stdout, stderr into utf8
[23:04:08] <ether> and your terminal should be set to expect utf8-encoded bytes as well
[23:04:19] <ether> it *probably* is already, these days, but you never know, especially if you're on windows
[23:04:38] <graham> oh good to know
[23:04:48] <choroba> graham: I saved the code you gave, replacing xxx by kůň
[23:04:52] <choroba> it prints OK
[23:05:03] <choroba> have you saved the file as utf-8?
[23:06:22] * GumbyPAN CPAN Upload: App-Easer-0.010 by POLETTIX https://metacpan.org/release/POLETTIX/App-Easer-0.010
[23:08:38] <graham> yeah, the f ile is saved as utf8
[23:09:40] <choroba> verified by a hexdump?
[23:10:20] *** Joins: troller (~p@80.240.216.69)
[23:10:57] *** Quits: anthk__ (~anthk_@92.176.105.30) (Ping timeout: 240 seconds)
[23:13:31] <graham> yes
[23:14:46] <choroba> what terminal do you use?
[23:17:04] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[23:20:58] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[23:31:48] *** Quits: dustinm`_ (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[23:32:57] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[23:34:32] *** Joins: troller (~p@2a02:6b8:b081:1211::1:6)
[23:35:00] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 250 seconds)
[23:35:29] *** Quits: tomaw (tom@libera/staff/tomaw) (Read error: Connection reset by peer)
[23:36:39] *** Joins: tomaw (tom@libera/staff/tomaw)
[23:42:33] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[23:54:30] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 250 seconds)
