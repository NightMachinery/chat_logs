[00:09:53] *** Joins: re101-coati-41 (~re101-coa@pool-100-37-122-152.nycmny.fios.verizon.net)
[00:14:31] <re101-coati-41> I have \s*(?:,\s*)+ here https://regex101.com/r/Jbh5MZ/1 and want to modify so it also selects any instance of a colon followed by a comma ( :, ) I am using it in Google
[00:14:44] <re101-coati-41> any ideas how to modify?
[00:17:36] *** Joins: M3r (~M3r@user/M3r)
[00:18:07] *** Joins: lavaball (felix@31.204.155.215)
[00:20:58] <OnlineCop> re101-coati-41: Make the colon optional: :?,
[00:21:11] <OnlineCop> That is, colon followed by a '?' quantifier, followed by comma.
[00:21:36] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 245 seconds)
[00:21:37] <re101-coati-41> not sure how to answer
[00:21:41] <re101-coati-41> are you asking me?
[00:21:45] <OnlineCop> If it matches the colon, great. But it must always match the comma. If it can't match a colon, that's fine too as long as it matches the comma.
[00:21:57] <re101-coati-41> No
[00:22:05] <re101-coati-41> AND :,
[00:22:05] <OnlineCop> https://regex101.com/r/Jbh5MZ/2
[00:22:52] <OnlineCop> Notice that in the (?:...) group, it looks for `:?` (colon with a '?' quantifier, which means 0-or-1).
[00:22:53] <re101-coati-41> I think that works
[00:23:06] <re101-coati-41> right
[00:23:12] <OnlineCop> Do you want line 2 to match?
[00:23:23] <re101-coati-41> no
[00:23:31] <re101-coati-41> let me test the above in context
[00:24:43] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:27:50] *** Joins: jinsun__ (~jinsun@user/jinsun)
[00:27:54] <re101-coati-41> yes that definitely works, but now that I tested I realize it wont achieve what I need
[00:28:31] <re101-coati-41> because I was using it to replace earlier instances of multiple commas and spaces with a single comma and space ", "
[00:28:44] <OnlineCop> What's  your end goal? To remove whitespace around commas and/or ':,' ?
[00:28:46] <re101-coati-41> but now I started seeing ":," popping up
[00:28:58] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[00:29:00] <re101-coati-41> In that case I need to only keep the :
[00:29:20] <OnlineCop> If you encounter ':?' you want to keep the ':' but remove the ',' ?
[00:29:53] <OnlineCop> Capture the ':?' and use it in the substitution. If it's found, it gets added back in. If it wasn't found, the group is empty, and "nothing" is added back in.
[00:30:11] <OnlineCop> https://regex101.com/r/Jbh5MZ/3
[00:30:13] <OnlineCop> However...
[00:30:30] <re101-coati-41> I dont know if that works in google, I dont think it will allow lookback
[00:30:50] <OnlineCop> There's a known gotcha when you have a capturing group inside a "repeat". It "clobbers" old values stored in that group.
[00:31:08] *** Joins: phenom (~primus@user/phenom)
[00:31:22] <re101-coati-41> REGEXREPLACE(A1,"\s*(?::?,\s*)+" , ", ")
[00:32:02] <OnlineCop> How often do you expect to see ':, :, :,' ?
[00:32:22] <OnlineCop> That is, multiple colon-then-comma in a row?
[00:34:21] <OnlineCop> Is the purpose of this to simply remove whitespace AND commas in A1?
[00:35:11] <OnlineCop> Is it to combine multiple commas without other values between them into a single comma?
[00:38:30] <OnlineCop> https://regex101.com/r/Jbh5MZ/4 might be a way you could combine some repeated commas.
[00:39:51] <OnlineCop> That is, match any whitespace before a comma, capture a colon if found, match at least one comma, and then match all subsequent whitespace and any other colons it finds. Then replace that with the optional colon (if captured) and then the comma-space replacement that you want.
[00:45:18] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 260 seconds)
[00:49:51] <OnlineCop> re101-coati-41: https://regex101.com/r/Jbh5MZ/5 (adds some questions)
[00:51:41] <re101-coati-41> no, yes
[00:51:42] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 260 seconds)
[00:51:50] <OnlineCop> Context?
[00:52:10] <re101-coati-41> [4:04:22 PM] <OnlineCop> Is the purpose of this to simply remove whitespace AND commas in A1?
[00:52:10] <re101-coati-41> [4:05:11 PM] <OnlineCop> Is it to combine multiple commas without other values between them into a single comma?
[00:52:32] <OnlineCop> Okay, just making sure you were answering the IRC questions, and not the ones embedded in version /5.
[00:52:36] <re101-coati-41> yes, context is lots of concatenation
[00:52:53] <re101-coati-41> it was working well, but then a few :,
[00:52:57] <OnlineCop> In version 5, what do you want done for lines 4 and 5?
[00:53:20] <re101-coati-41> were introduced.
[00:53:26] <re101-coati-41> Let me test.
[00:56:52] <re101-coati-41> version 5 does not seem to work because :, does not get replaced by :
[00:57:06] <OnlineCop> On regex101?
[00:57:09] <re101-coati-41> goal would be replace , spaces , with ,
[00:57:43] <re101-coati-41> to replace :, with :
[00:57:59] <re101-coati-41> I didnt even realize that on 101 it doesnt repalce?
[00:58:09] <OnlineCop> On version /5 under the SUBSTITUTION section, it should be replacing with "$1, " (that $1 will either contain a ':' if it was found, or be an empty '' if it was not).
[00:58:49] <re101-coati-41> ab:,:,:,:,<-- should this combine multiple:,into a single one? Yes
[00:59:01] <re101-coati-41> combine to :
[00:59:08] <re101-coati-41> ": "
[00:59:39] <re101-coati-41> ab::,:,:,:,:,<-- should this combine non-sequential:,or keep them separate? this should also be ": "
[00:59:41] <OnlineCop> Notice on line 4 that there are some ':' that have spaces between them and the commas.
[01:01:19] <OnlineCop> re101-coati-41: Given this string: "ab : cd : ef" should anything be modified? Note that there are no commas.
[01:01:21] <re101-coati-41> Yes. Generally if the : is followed by a , then the , gets deleted.
[01:01:25] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-d52a-96ed-4a77-faed.fixed6.kpn.net) (Ping timeout: 240 seconds)
[01:01:45] <re101-coati-41> string should be ab: cd: ef
[01:01:52] <OnlineCop> If the ':' is immediately followed by a comma, or can there be whitespace between : and , ?
[01:02:17] <OnlineCop> Okay, so you're wanting to remove whitespace before colons AND commas.
[01:02:19] <re101-coati-41> could be a whitespace in beteween
[01:02:27] <OnlineCop> Do you want to combine "ab : : cd" into "ab: cd" ?
[01:03:10] <re101-coati-41> I want to avoid any consecutive commas, colon+comma
[01:03:23] <re101-coati-41> so yes ab : : would be ab: cd
[01:03:41] <re101-coati-41> ab : , cd ---> ab: cd
[01:04:07] <re101-coati-41> ab: , ,              , cd--->ab: cd
[01:04:08] *** Quits: eggbean (~eggbean@user/eggbean) (Quit: Client closed)
[01:10:07] <OnlineCop> Hmm. If ':' exists anywhere, then you want output to be ': ' but if ':' is not found, you want output to be ', '
[01:11:25] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:37] <re101-coati-41> its basically an OR condition from the original regex I was using that would replace :,-->:
[01:14:33] <OnlineCop> "ab , , , , , cd" ---> "ab, cd"
[01:15:39] <OnlineCop> "ab , , : , , cd" ---> "ab: cd"
[01:15:50] <re101-coati-41> yes
[01:16:34] <OnlineCop> https://regex101.com/r/Jbh5MZ/6
[01:19:29] <OnlineCop> Should "ab:cd" (no spaces) be left unchanged, or does it need to insert a space: "ab:cd" ---> "ab: cd" 
[01:20:04] <OnlineCop> If it needs to insert a space, change the `[:,\s]+` to `[:,\s]*`
[01:24:23] *** Joins: WildMan (WildMan@Undernet/admin/WildMan)
[01:44:41] <dob1> which regexp can I use for an username for a linux system?
[01:44:49] <dob1> \w+ ?
[01:51:20] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:57:54] <OnlineCop> That matches only [a-zA-Z0-9_]
[01:59:37] <OnlineCop> https://www.linuxquestions.org/questions/linux-server-73/valid-user-names-573768/ 
[02:00:36] <OnlineCop> `^[a-z][a-z0-9\-]*$`
[02:08:10] <dob1> I suppose there is a min,max length
[02:08:22] <OnlineCop> Min length from that would be 1 character.
[02:08:40] <OnlineCop> I suppose a theoretical max length would be the length of a directory.
[02:08:51] *** Joins: seifeslimene (~seifeslim@102.158.105.22)
[02:09:04] <dob1> not so important this constraint, just thinking about it
[02:09:17] <OnlineCop> https://unix.stackexchange.com/questions/157426/what-is-the-regex-to-validate-linux-users suggests 32 characters.
[02:10:39] <dob1> ok nice
[02:51:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:19:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:20:43] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:20:57] *** Joins: JanC (~janc@user/janc)
[03:41:57] *** Joins: pluri (~pluri@user/pluri)
[03:43:34] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[03:49:56] *** Quits: integral (sid296274@user/integral) (Ping timeout: 245 seconds)
[03:51:27] *** Joins: integral (sid296274@user/integral)
[03:56:27] *** Joins: epony (epony@user/epony)
[04:09:44] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[04:11:19] *** Joins: ahmedelg1 (~ahmedelga@77-164-236-89.fixed.kpn.net)
[04:15:55] *** Quits: ahmedelg1 (~ahmedelga@77-164-236-89.fixed.kpn.net) (Ping timeout: 260 seconds)
[04:18:17] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:28:11] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net)
[04:40:09] *** Quits: re (~user@user/re) (Remote host closed the connection)
[04:40:59] *** Joins: re101-falcon-2 (~re101-fal@221.239.136.99)
[05:01:37] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:09:35] *** Joins: vlm (~vlm@user/vlm)
[05:26:51] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net) (Ping timeout: 260 seconds)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:54] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:55] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:55] *** Joins: maetthew (~maetthew@user/maetthew)
[06:05:30] *** Quits: re101-falcon-2 (~re101-fal@221.239.136.99) (Quit: Client closed)
[06:16:12] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[06:16:12] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[06:16:31] *** Joins: rebot (~death@about/regex/rebot)
[06:16:31] *** ChanServ sets mode: +o rebot
[06:16:31] *** Joins: digitok (~death@about/regex/digitok)
[06:44:03] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 260 seconds)
[06:48:16] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net)
[06:57:40] *** Quits: seifeslimene (~seifeslim@102.158.105.22) (Ping timeout: 250 seconds)
[06:57:54] *** Joins: vlm (~vlm@user/vlm)
[07:02:28] *** Joins: vlm_ (~vlm@user/vlm)
[07:03:10] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 246 seconds)
[07:03:44] *** vlm_ is now known as vlm
[07:05:43] *** Joins: adeliktas1 (~adeliktas@i59F52D62.versanet.de)
[07:08:00] *** Quits: adeliktas (~adeliktas@i59F52E5A.versanet.de) (Ping timeout: 272 seconds)
[07:08:01] *** adeliktas1 is now known as adeliktas
[07:15:29] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net) (Ping timeout: 252 seconds)
[07:16:26] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:21] *** Quits: jinsun__ (~jinsun@user/jinsun) ()
[09:08:21] *** Quits: jargon (~jargon@184.101.173.186) (Remote host closed the connection)
[09:20:41] *** Joins: jargon (~jargon@184.101.173.186)
[09:24:24] *** Joins: jinsun (~jinsun@user/jinsun)
[10:20:29] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[10:22:23] *** Joins: rvalue (~rvalue@user/rvalue)
[10:23:04] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:23:54] *** Joins: jinsun__ (~jinsun@user/jinsun)
[10:23:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[10:25:22] *** Joins: jinsun___ (~jinsun@user/jinsun)
[10:27:24] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[10:28:03] *** jinsun___ is now known as jinsun
[10:28:12] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[10:28:43] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 256 seconds)
[10:43:41] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Ping timeout: 246 seconds)
[10:44:19] *** Quits: jinsun (~jinsun@user/jinsun) ()
[10:45:40] *** Joins: jinsun (~jinsun@user/jinsun)
[10:52:44] *** Joins: M3r (~M3r@user/M3r)
[11:00:57] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net)
[11:05:24] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-f11a-fd38-a156-c728.fixed6.kpn.net) (Ping timeout: 240 seconds)
[11:17:40] *** Quits: re101-birman-62 (~re101-bir@155.190.1.6) (Ping timeout: 250 seconds)
[11:37:27] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:39:29] *** Joins: palasso (~palasso@user/palasso)
[11:43:54] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:08:59] *** Quits: friend (~friend@user/friend) (Remote host closed the connection)
[12:18:58] *** Joins: re101-koala-95 (~re101-koa@14.143.179.194)
[12:19:11] <re101-koala-95> Hi
[12:19:45] <re101-koala-95> I need help
[12:20:01] <re101-koala-95> "test0-1",12," hel yes"no lo",33
[12:20:40] <re101-koala-95> I need an expression which returns below one
[12:20:41] <re101-koala-95> "test0-1",12," hel yesno lo",33
[12:21:26] <re101-koala-95> In this as you see there was double quotes between yes no. Which got replaced with empty string
[12:21:29] <re101-koala-95> Please help out
[12:22:05] <arash> Hello, is there a better way to extract src image url in this sample? https://regex101.com/r/Ji0BWu/1
[12:24:32] *** Joins: jinsun__ (~jinsun@user/jinsun)
[12:24:33] *** jinsun is now known as Guest3467
[12:24:33] *** jinsun__ is now known as jinsun
[12:25:23] *** Joins: ahmedelg1 (~ahmedelga@2a02:a446:d88a:1:f11a:fd38:a156:c728)
[12:28:29] *** Quits: Guest3467 (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[12:38:36] *** Joins: lavaball (felix@31.204.155.215)
[12:39:44] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Read error: Connection reset by peer)
[12:45:17] *** Joins: re101-canaan-16 (~re101-can@47-213-93-31.chlncmta02.res.dyn.suddenlink.net)
[13:06:33] *** Quits: re101-canaan-16 (~re101-can@47-213-93-31.chlncmta02.res.dyn.suddenlink.net) (Quit: Client closed)
[13:08:48] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[13:09:08] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[13:11:32] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[13:12:35] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Remote host closed the connection)
[13:13:29] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[13:13:30] <tinystoat> re101-koala-95: hm well this might do -> s/^("[^"]+"[^"]+[^"]+)"(.*)$/\1\2/
[13:14:01] <tinystoat> it's a mess but it should work.
[13:15:40] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[13:15:40] *** Joins: belphegor666 (~satan@user/belphegor666)
[13:24:51] *** Quits: capn (~capn@user/capn) (Ping timeout: 272 seconds)
[13:31:17] *** Joins: capn (~capn@user/capn)
[13:36:53] *** Joins: re101-snake-67 (~re101-sna@2a00:102a:4018:b49:d162:d841:d734:a384)
[13:37:05] *** Joins: re101-snake-72 (~re101-sna@2a00:102a:4018:b49:d162:d841:d734:a384)
[13:37:05] *** Quits: re101-snake-67 (~re101-sna@2a00:102a:4018:b49:d162:d841:d734:a384) (Client Quit)
[13:39:20] *** Quits: AMG (ghebo@user/amg) (Quit: Quit)
[13:40:11] *** Quits: re101-snake-72 (~re101-sna@2a00:102a:4018:b49:d162:d841:d734:a384) (Client Quit)
[13:42:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[13:44:02] *** Joins: re101-mole-65 (~re101-mol@103.109.108.101)
[13:47:05] *** Quits: re101-mole-65 (~re101-mol@103.109.108.101) (Client Quit)
[13:58:40] *** Joins: re101-puma-23 (~re101-pum@47-213-93-31.chlncmta02.res.dyn.suddenlink.net)
[13:59:37] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[14:07:47] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[14:13:30] *** Joins: shiv (~shiv@123.252.225.161)
[14:14:28] *** Quits: re101-puma-23 (~re101-pum@47-213-93-31.chlncmta02.res.dyn.suddenlink.net) (Quit: Client closed)
[14:15:58] *** Quits: shiv (~shiv@123.252.225.161) (Client Quit)
[14:28:16] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:34:05] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net)
[14:37:08] *** Quits: ahmedelg1 (~ahmedelga@2a02:a446:d88a:1:f11a:fd38:a156:c728) (Ping timeout: 260 seconds)
[14:38:05] <M3r> !paste
[14:38:05] <perlbot> Please use https://bpa.st/ for sharing large amounts of code/data, or https://ideone.com/ to share an executable code sample.
[14:41:36] *** Joins: re101-eagle-17 (~re101-eag@85.203.141.63)
[14:48:50] *** Joins: re101-puma-23 (~re101-pum@47-213-93-31.chlncmta02.res.dyn.suddenlink.net)
[14:51:31] <re101-eagle-17> I have the following regex: https://regex101.com/r/9nPBYv/1 - but I don't understand why it matches the first (#1) "property": "value A":,\n". It seems that \n (in the regex) is greedy. If I replace \n with \t in the regex, it matches the second line (with "val    ue B") as expected, but it doesn't work for newlines. Flavor is C#. Anyone have an
[14:51:31] <re101-eagle-17> idea on how to make the expression match only #3?
[14:52:49] *** Quits: re101-puma-23 (~re101-pum@47-213-93-31.chlncmta02.res.dyn.suddenlink.net) (Client Quit)
[15:02:25] <M3r> \"property\": \".*?(?(\")|\")\"
[15:02:49] <M3r> re101-eagle-17 this matches everything but ¤3
[15:02:53] <M3r> #3
[15:05:38] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Ping timeout (120 seconds))
[15:05:54] <re101-eagle-17> Ok yes, that's of course an alternative. Though I still don't get why \n seems to be greedy.
[15:06:04] <purplex> https://regex101.com/r/9nPBYv/2
[15:06:41] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[15:07:06] <re101-eagle-17> Thanks purplex
[15:07:20] <purplex> add \" after it to skip the ,
[15:07:54] <re101-eagle-17> perfect, thanks.
[15:19:19] *** Quits: re101-koala-95 (~re101-koa@14.143.179.194) (Quit: Client closed)
[15:24:36] <M3r> re101-eagle-17 I played around some more with your question :) You could always capture the erroneous value and try and correct it afterwards: \"property\": \"(?([^\"]+\n)(?'error'.+\n.*)\"|.*[\"]+)
[15:26:45] <M3r> which you totally could with purplex example as well e.g -notmatch
[15:27:51] <re101-eagle-17> Ok, thanks M3r. I'll have that in mind when making the final implementation.
[15:29:13] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[15:29:16] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[15:32:02] <purplex> yea that could work but using just one case its not possible catch all errors: https://regex101.com/r/9nPBYv/4
[15:32:36] <purplex> for that we'll need to modify our regex..
[15:35:37] *** Joins: re101-zonkey-66 (~re101-zon@net-2-40-114-86.cust.vodafonedsl.it)
[15:36:03] *** Quits: re101-zonkey-66 (~re101-zon@net-2-40-114-86.cust.vodafonedsl.it) (Client Quit)
[15:38:20] <M3r> okay :)
[15:43:45] *** Joins: digitok (~death@about/regex/digitok)
[15:43:45] *** Joins: rebot (~death@about/regex/rebot)
[15:43:45] *** ChanServ sets mode: +o rebot
[15:44:54] <purplex> M3r: https://regex101.com/r/9nPBYv/5
[15:48:45] *** Quits: re101-eagle-17 (~re101-eag@85.203.141.63) (Quit: Client closed)
[15:54:41] <M3r> cool! Or like this: https://regex101.com/r/9nPBYv/6
[16:09:10] <purplex> yea
[16:11:05] <purplex> what happens if you remove |\G ?
[16:15:13] <M3r> yeah my misstake, wasn't supposed to be in the save
[16:16:10] <M3r> https://regex101.com/r/9nPBYv/7
[16:20:49] <M3r> last one: https://regex101.com/r/9nPBYv/8 :P
[16:21:04] <purplex> right note that you are still catching just one case of error where the last " is present on the next line https://regex101.com/r/9nPBYv/9. That's what I tried to demonstrate in /5
[16:24:16] <M3r> damn it
[16:30:02] *** Quits: wbg (~wbg@user/wbg) (Quit: WeeChat 3.0)
[16:51:10] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[16:51:22] *** Quits: digitok (~death@about/regex/digitok) (Ping timeout: 240 seconds)
[16:51:25] *** Joins: rvalue (~rvalue@user/rvalue)
[16:52:20] *** Quits: rebot (~death@about/regex/rebot) (Ping timeout: 260 seconds)
[16:57:00] *** Joins: digitok (~death@about/regex/digitok)
[16:57:02] *** Joins: rebot (~death@about/regex/rebot)
[16:57:02] *** ChanServ sets mode: +o rebot
[17:00:47] *** Joins: wbg (~wbg@home.zedat.fu-berlin.de)
[17:00:47] *** Quits: wbg (~wbg@home.zedat.fu-berlin.de) (Changing host)
[17:00:47] *** Joins: wbg (~wbg@user/wbg)
[17:01:17] <M3r> purplex: I'm going crazy... why isn't this working :D https://regex101.com/r/9nPBYv/10
[17:03:21] <Andrio> M3r, this probably needs to be changed: [ \n\"]
[17:10:11] <purplex> yea i see what you are trying to do there
[17:11:10] <purplex> if you really want groups you can take my /5 and do: https://regex101.com/r/9nPBYv/11
[17:25:12] *** Joins: re (~user@user/re)
[17:28:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[17:37:59] *** Quits: FightingFalcon (~none@2a01:4f8:1c17:6cd5::1) (Changing host)
[17:37:59] *** Joins: FightingFalcon (~none@user/fightingfalcon)
[18:18:56] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:21:03] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[18:21:21] *** Quits: Hash (~Hash@hey.howstoned.ru) (Quit: ZNC - https://znc.in)
[18:24:58] *** Joins: nbin (~nbin@user/nbin)
[18:25:10] *** Joins: Hash (~Hash@hey.howstoned.ru)
[18:42:50] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[18:43:28] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[18:47:30] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[18:47:57] *** Quits: Hash (~Hash@hey.howstoned.ru) (Quit: ZNC - https://znc.in)
[18:54:06] *** Joins: nbin (~nbin@user/nbin)
[19:01:06] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[19:06:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:06:26] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:13:47] *** Quits: Hash (~Hash@hey.howstoned.ru) (Ping timeout: 260 seconds)
[19:30:40] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:33:04] *** Quits: Hash (~Hash@hey.howstoned.ru) (Max SendQ exceeded)
[19:35:01] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[19:35:08] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:35:10] *** Joins: oprypin (~irc@pryp.in)
[19:38:30] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 272 seconds)
[19:38:33] *** Quits: Hash (~Hash@hey.howstoned.ru) (Max SendQ exceeded)
[19:41:17] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:42:27] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[19:42:49] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[19:44:22] *** Quits: Hash (~Hash@hey.howstoned.ru) (Max SendQ exceeded)
[19:45:16] *** Joins: palasso (~palasso@user/palasso)
[19:46:28] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:49:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[19:53:12] *** Quits: Hash (~Hash@hey.howstoned.ru) (Max SendQ exceeded)
[19:54:31] *** Joins: Hash (~Hash@hey.howstoned.ru)
[19:58:38] *** Quits: Hash (~Hash@hey.howstoned.ru) (Remote host closed the connection)
[19:59:42] *** Joins: Hash (~Hash@hey.howstoned.ru)
[20:05:10] *** Quits: Hash (~Hash@hey.howstoned.ru) (Max SendQ exceeded)
[20:05:33] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net) (Ping timeout: 260 seconds)
[20:05:44] *** Joins: Hash (~Hash@hey.howstoned.ru)
[20:09:56] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[20:10:59] *** Quits: Hash (~Hash@hey.howstoned.ru) (Ping timeout: 252 seconds)
[20:15:15] *** Joins: Hash (~Hash@hey.howstoned.ru)
[20:25:15] <OnlineCop> !strings
[20:25:16] <perlbot> You can match common double-quoted strings with  "[^\\"]*(?:\\.[^\\"]*)*"  which handles "strings \"within\" strings". Replacing the double quotes with single quotes can allow 'this \'string\' to match' if desired.
[20:26:09] <OnlineCop> In PCRE, I'd suggest changing the `(?:` to `(?>` to avoid backtracking, if possible.
[20:26:30] <OnlineCop> Oh wow. Look at that time difference. Sorry for the necromancy.
[20:27:19] <OnlineCop> Wait... I don't like that !strings description either.
[20:28:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:31:02] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net)
[20:35:24] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net) (Ping timeout: 240 seconds)
[20:37:59] *** Quits: re101-coati-41 (~re101-coa@pool-100-37-122-152.nycmny.fios.verizon.net) (Quit: Client closed)
[20:43:34] <OnlineCop> ECMAScript: `["](?:[^\\"]+|\\[\n\s\S])*["]` (note: vscode won't match newlines with `\s` unless it sees `\n` at least once). PCRE/.NET: `["](?>[^\\"]+|\\[\s\S])*["]` (note: Visual Studio also won't match newlines with `\s` unless it sees `\n` at least once).
[20:44:21] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:44:59] *** Quits: az103 (~az103@071-087-062-195.res.spectrum.com) (Ping timeout: 246 seconds)
[20:45:44] *** Joins: az103 (~az103@071-087-062-195.res.spectrum.com)
[20:48:02] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net)
[20:48:38] <OnlineCop> M3r: https://regex101.com/r/9nPBYv/12 adds scenario #8 where in many (most?) languages, an escaped newline is valid.
[20:49:02] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[20:50:32] <OnlineCop> Ugh. I keep forgetting special CRLF handling. `|\\[\n\s]` might handle "hello \[newline]world!" in a LF document but will only match the CR and not the LF in a Windows document.
[20:51:39] <OnlineCop> Maybe it should be `["](?>[^"\\]+|[\\]\r?\n|[\\][\s\S])*["]`
[20:52:43] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-240b-a10a-60c4-4a53.fixed6.kpn.net) (Ping timeout: 260 seconds)
[21:05:52] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:06:35] *** Joins: epony (epony@user/epony)
[21:08:02] *** Quits: subie (~subie@2601:4c0:4080:bc0::4) (Remote host closed the connection)
[21:08:23] *** Joins: subie (~subie@2601:4c0:4080:bc0::4)
[21:08:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:12:20] <OnlineCop> Quoted strings: According to [json.org](https://json.org/), strings may not be `"text[newline]text"` even if there's a \ literal before the newline. In C++, `foo="abc" [any whitespace, including newline] "def";` is valid for string literal concatenation, and `bar="abc\[newline]def";` would be identical, where [newline] is a literal line break.
[21:14:55] <M3r> OnlineCop: Dont worry about the time difference... and sorry for hopping onto the Necromancer-train again.. actually with /10 I tried to capture the lines that were properly formatted into a group and the others that weren't into another group
[21:15:35] <M3r> I managed to capture the good ones, but for the bad ones, my brain couldn't handle anymore
[21:16:30] <OnlineCop> If this were JSON, any newline characters within a string would be invalid, but whitespace between the "key":"value" strings is ignored (valid).
[21:17:09] <OnlineCop> Other languages allow limited breaks, like `foo="bar" "baz";` compile-time concatenation of string literals.
[21:17:29] <M3r> I've been challenging myself to do 5 regex exercises a day, with my personal touch to them all, today's challenges crapped many brain fuses
[21:17:58] <M3r> Yes?
[21:18:03] <M3r> Those are captured as good :)
[21:18:16] <OnlineCop> From version /10, which lines are good and which lines are bad?
[21:18:30] <M3r> let me reformat the examples... sec
[21:18:46] <M3r> https://regex101.com/r/9nPBYv/13
[21:18:54] <OnlineCop> .NET supports "te\[newline]xt" where you have a \ followed by a literal line break.
[21:18:59] <M3r> #1, #4 and ¤6
[21:20:20] <M3r> for the "bad"-group I'm not able to capture the value until the last "
[21:21:12] <OnlineCop> #1, #4, and #6 are bad? and #2, #3, #5, #7 are good?
[21:21:18] <M3r> opposite
[21:21:27] <OnlineCop> Will you ever have a situation like #8 on version /12?
[21:21:43] <M3r> Its all made up
[21:21:45] <M3r> I have no idea
[21:22:04] <M3r> the original question was with fewer examples by a fellow re101-user that came in her
[21:22:20] <M3r> I just continued to experiment
[21:22:25] <OnlineCop> Cool. I love academic learning.
[21:22:38] <M3r> *here lol
[21:22:40] <OnlineCop> Since this is YOUR regex and data, you can set the rules.
[21:23:22] <M3r> is't #7 and #8 on /12 about the same?
[21:23:35] <OnlineCop> Is #2 valid or invalid?
[21:23:42] <M3r> invalid
[21:23:51] <M3r> any linebreaks is invalid
[21:24:30] <OnlineCop> Okay. In /12, #7 is like #3. #8 has \ at the end of each line (which is valid in C++/C# but not in JSON).
[21:24:37] <M3r> rules are "property"*:*"*"
[21:24:46] <M3r> where * is whitespaces
[21:25:06] <M3r> or nothing
[21:25:45] <OnlineCop> #9 "property": "text \"quoted\" text"  <-- valid or invalid?
[21:25:51] <M3r> ahh sure, about the \ at each line is invalid yes
[21:26:19] <M3r> didn't think of that but I'd say invalid yes
[21:26:36] <OnlineCop> In CSV, for example, escaped quotes are: "text ""quoted"" text"
[21:26:37] <M3r> if you should follow json rules :D
[21:26:48] <M3r> yep
[21:26:50] <OnlineCop> JSON rules allows \"quoted\"
[21:27:44] <M3r> if I'd define the challenge, at least for me, was to filter out the bad ones that included values with line breaks. didn't think of any other invalid scenarios really
[21:31:01] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 240 seconds)
[21:31:52] <M3r> (?'good'\"property\":(?: *\"|\")+(?:[^\n]*\"))|(?'bad'\"property\":(?:[ \n\"])(?:.*\n|.*).*\")
[21:32:07] <M3r> the last .*\" captures some bad ones
[21:32:19] <M3r> but the ones with values including multiple line breaks doesnt get captured
[21:32:43] <M3r> #7 isn't captured
[21:35:23] <M3r> finally! https://regex101.com/r/9nPBYv/14
[21:37:31] <purplex> no, https://regex101.com/r/9nPBYv/15 :p
[21:38:35] <M3r> oh my god! wtf did you change :D
[21:38:40] <M3r> you broke it!
[21:38:41] <M3r> :D
[21:39:01] <OnlineCop> https://regex101.com/r/9nPBYv/16
[21:39:23] <purplex> i just added some more lines
[21:39:25] <OnlineCop> Don't be afraid to use the /x flag, especially when learning.
[21:40:26] <M3r> nice! didn't know about the x option
[21:41:35] <OnlineCop> PCRE, .NET, Python "re" and "regex" modules, and Javascript's XRegExp module (plugin? 3rd-party-library?) should all support /x to allow the pattern to ignore the whitespace.
[21:41:50] <purplex> welcome to /x club
[21:41:52] <OnlineCop> Java too, apparently.
[21:42:18] <OnlineCop> purplex: /16 isn't balking at any of your lines either. :P
[21:42:27] <M3r> purplex so what part in my regex is wrong? I'm assuming you've got the answer but dont want to give it just yet (until I go crazy) :D
[21:43:05] <purplex> https://regex101.com/r/9nPBYv/17 :p
[21:44:18] <purplex> anyway, its not nice to keep breaking it. actually you need to set a goal first what you are trying to do..
[21:44:28] <OnlineCop> M3r: `[^\n]` is the same as `.` so you essentially have `.*` in places. The problem with "any character" is usually that it doesn't stop when it finds some kind of invalid sequence, which may cause issues if you want to do "check for this OR that" edge case.
[21:45:07] <M3r> oh yeah, its any character not in that range... thanks
[21:45:26] <M3r> purplex the goal is to learn
[21:45:35] <M3r> so break it however you want :D
[21:45:48] <M3r> crazyness guaranteed
[21:46:05] <purplex> probably that works too :p
[21:47:08] <M3r> but I'm gonna take a break, get a beer and then mindlessly slay some demons in diablo ;) cheers folks!
[21:47:34] <purplex> not sure why you have \\ now, they weren't in original question so I added just \ to break it
[21:47:57] <M3r> well we kept breaking it I guess 
[21:48:45] <M3r> I wonder if the one that originally asked the question will ever discover the many versions on his link :D
[21:51:01] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[21:51:32] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[21:53:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:57:05] *** Joins: vlm (~vlm@user/vlm)
[21:59:43] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[22:03:12] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Changing host)
[22:03:12] *** Joins: AMG (ghebo@user/amg)
[22:09:46] *** Joins: re101-fousek-45 (~re101-fou@136.144.42.11)
[22:10:55] *** Quits: re101-fousek-45 (~re101-fou@136.144.42.11) (Client Quit)
[22:16:42] *** Joins: lavaball (~Melissa@31.204.155.215)
[22:23:48] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 260 seconds)
[22:24:16] *** bn_work is now known as b
[22:24:46] *** b is now known as Guest9323
[22:25:14] *** Guest9323 is now known as bn_work
[22:37:15] *** Joins: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de)
[22:37:26] *** Quits: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de) (Client Quit)
[22:38:35] *** Joins: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de)
[22:39:11] *** Quits: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de) (Client Quit)
[22:39:27] *** Joins: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de)
[22:40:06] *** Quits: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de) (Client Quit)
[22:41:37] *** Joins: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de)
[22:41:57] *** Quits: re101-zebra-55 (~re101-zeb@dslb-188-097-177-076.188.097.pools.vodafone-ip.de) (Client Quit)
[22:57:48] *** Joins: re101-fousek-45 (~re101-fou@136.144.42.11)
[22:57:54] <re101-fousek-45> Hello
[22:58:05] *** Quits: re101-fousek-45 (~re101-fou@136.144.42.11) (Client Quit)
[23:01:25] *** Joins: re101-fousek-45 (~re101-fou@45.132.227.21)
[23:01:49] <re101-fousek-45> I have problems Who is my regex
[23:02:31] <re101-fousek-45> With ( sorry not who)
[23:04:57] <re101-fousek-45> I want modify the final result that I will receive from the original message that I forwarded.
[23:04:57] <re101-fousek-45> Example:
[23:04:58] <re101-fousek-45> BUY
[23:04:58] <re101-fousek-45> #BTC/USD
[23:04:59] <re101-fousek-45> SL: 11000(original)
[23:04:59] *** rebot sets mode: +q re101-fousek-45!*@*
[23:05:00] <rebot> 14re101-fousek-45: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[23:05:29] *** rebot sets mode: -q re101-fousek-45!*@*
[23:05:53] *** Quits: re101-fousek-45 (~re101-fou@45.132.227.21) (Client Quit)
[23:06:59] *** Joins: re101-fousek-45 (~re101-fou@45.132.227.21)
[23:07:09] <re101-fousek-45> https://regex101.com/r/tNVCi5/1
[23:07:28] <OnlineCop> Thanks; links don't kill the text formatting while IRC... well, mangles everything.
[23:07:43] <OnlineCop> It helps if you have some example/sample text to go with it.
[23:07:57] <OnlineCop> Could you toss in some sample text and click "Update Regex"?
[23:08:07] <OnlineCop> It should give you the same URL, but with /1 at the end changed to /2 .
[23:12:08] <re101-fousek-45> https://regex101.com/r/tNVCi5/2
[23:12:08] *** Joins: M3r (~M3r@user/M3r)
[23:12:57] <OnlineCop> Did you add any sample text to TEST STRING?
[23:13:16] <re101-fousek-45> No
[23:13:33] <re101-fousek-45> I’m kind lost
[23:14:22] <OnlineCop> Get some of the text that you're trying to process with the regex. Paste it into TEST STRING, and remove/replace any proprietary/private data.
[23:14:43] <re101-fousek-45> I ask the admin channels to help me to modify the regex. He doesn’t seems very cooperative. I try to do this since one year and a half now
[23:14:53] <OnlineCop> What is `/replacerx`, by the way? Is it a command you run or literal text within the sample text you're parsing?
[23:15:09] <re101-fousek-45> I don’t know nothing in coding
[23:15:53] <re101-fousek-45> OK basically I have a forwarding channel.
[23:16:06] <OnlineCop> Basically: Show us some text (on regex101) that you have now. Then a few lines later, show us what you want the text to be after it's been altered.
[23:16:51] <OnlineCop> For example, if you have text "Signal: SELL 1.23 ..." and want it to be "Signal: BUY $1.23 ...", then put that into the TEST STRING portion.
[23:16:55] <re101-fousek-45> The /replacerx it’s too em place the sentence
[23:17:25] <re101-fousek-45> sorry Siri Write sh….
[23:18:11] <OnlineCop> Which regex program or language is this using?
[23:18:24] <re101-fousek-45> The replacerx modify the message that been forwarded to me
[23:19:41] <re101-fousek-45> Golang “flag Single line”
[23:20:09] <re101-fousek-45> Did you understand what I’m trying to do
[23:20:20] <re101-fousek-45> I am in Crystal Signal
[23:20:33] *** Joins: ahmedelgabri (~ahmedelga@2a02:a446:d88a:1:240b:a10a:60c4:4a53)
[23:21:19] <re101-fousek-45> Basically when I’m receiving the message from The box that I forward it to me. I would like to change some data
[23:21:28] <re101-fousek-45> SL
[23:21:34] <re101-fousek-45> TP
[23:21:43] <re101-fousek-45> ENTRY
[23:22:19] <re101-fousek-45> Because I don’t know what numbers are coming it’s better to put percentage right?
[23:22:43] <re101-fousek-45> Like that whatever number are coming it will be calculated by the percentage.
[23:22:49] <re101-fousek-45> I don’t know if you understand me
[23:22:49] *** Joins: re101-possum-42 (~re101-pos@2806:103e:14:10f0:14b:e9f1:b65:6964)
[23:22:56] <re101-fousek-45> Let me give you an example
[23:23:03] <OnlineCop> Don't post the example in here, please.
[23:23:06] *** Quits: re101-fousek-45 (~re101-fou@45.132.227.21) (Quit: Client closed)
[23:23:18] <OnlineCop> Post the example on that regex101 page, and then Update Regex and share the new link.
[23:23:33] *** Joins: re101-fousek-45 (~re101-fou@136.144.42.12)
[23:23:58] <re101-fousek-45> Is just numbers
[23:24:15] <OnlineCop> So far, the regex is looking for the text "Signal:"
[23:24:18] <re101-fousek-45> To help you understand what I’m telling you
[23:24:27] <OnlineCop> plus a bunch of stuff after it.
[23:24:50] <OnlineCop> I'd want to see that text under TEST STRING on regex101, since a regex should try to match that text.
[23:25:03] *** Quits: ahmedelgabri (~ahmedelga@2a02:a446:d88a:1:240b:a10a:60c4:4a53) (Ping timeout: 260 seconds)
[23:25:45] <re101-fousek-45> How to do that
[23:27:21] *** Quits: re101-fousek-45 (~re101-fou@136.144.42.12) (Client Quit)
[23:27:43] <OnlineCop> https://regex101.com/r/tNVCi5/3
[23:28:15] *** Joins: re101-fousek-45 (~re101-fou@136.144.42.12)
[23:28:35] <OnlineCop> re101-fousek-45: https://regex101.com/r/tNVCi5/3
[23:30:40] <re101-fousek-45> What is supposed to do?
[23:31:14] *** Quits: re101-fousek-45 (~re101-fou@136.144.42.12) (Client Quit)
[23:31:37] *** Joins: re101-fousek-45 (~re101-fou@136.144.42.12)
[23:32:31] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[23:33:30] <OnlineCop> TEST STRING needs to contain the text you're trying to match.
[23:34:00] <OnlineCop> I don't care about the REGULAR EXPRESSION pattern at the top right now: I want to know what the text is that you HAVE, and what the text is that you WANT.
[23:34:44] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 246 seconds)
[23:35:14] <re101-fousek-45> https://regex101.com/r/tNVCi5/4
[23:36:40] <re101-fousek-45> Give me o minute let me try to fill out the text. Please stay tight
[23:41:27] *** Joins: travisghansen (~travisgha@192.74.130.86)
[23:45:36] *** Quits: re101-possum-42 (~re101-pos@2806:103e:14:10f0:14b:e9f1:b65:6964) (Ping timeout: 250 seconds)
[23:46:37] *** Quits: M3r (~M3r@user/M3r) (Ping timeout: 260 seconds)
[23:48:23] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 260 seconds)
[23:49:02] *** Quits: re101-fousek-45 (~re101-fou@136.144.42.12) (Quit: Client closed)
[23:53:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[23:54:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[23:54:28] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[23:54:47] *** Joins: vlm (~vlm@user/vlm)
[23:57:01] *** Joins: blddk (~blddk@user/blddk)
[23:58:06] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
