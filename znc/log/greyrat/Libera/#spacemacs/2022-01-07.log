[00:39:14] <FromGitter> <alex-ilin> I have opened an issue in `company`, let's see if anything happens.
[00:39:15] <FromGitter> <alex-ilin> https://github.com/company-mode/company-mode/issues/1290
[00:42:35] <FromGitter> <alex-ilin> Triggering `company-other-backend`, it seems that there is a unique match for `begin` (see issue description), and one completion is therefore aborted, but another backend kicks in and offers its suggestions all over again, this time not paying attention to the existing full match.
[01:25:35] <FromGitter> <dalanicolai> @magicaltrout_gitlab That's great!
[02:02:24] <FromGitter> <kassick> @alex-ilin if you have candidates `begin`, `BeginRead` and `BeginWrite`, then the input `begin` may be a *full* match of one of the candidates, but it's certainly *not unique*
[02:02:54] <FromGitter> <kassick> the flag you've set is used along with the predicate `company--unique-match-p` , which returns true when:
[02:03:22] <FromGitter> <kassick> 1) the list is not empty ‚èé 2) the list contains a single entry ‚èé 3) the single entry is equals to the input
[02:04:02] <FromGitter> <kassick> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61d76e5a742c3d4b2184c8b9]
[02:24:33] <FromGitter> <kassick> in the issue, you mentioned that some other backend would be responsible
[02:25:11] <FromGitter> <kassick> which of those backends used returned the single candidate `begin` ?
[02:26:56] <FromGitter> <kassick> (here, calling company-dabbrev-code explicitly gives me all candidates beginning with `begin` , so I could not reproduce)
[02:57:17] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[03:06:44] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:14:13] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Ping timeout: 240 seconds)
[04:32:38] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[06:47:41] *** Quits: baldlizard (~Thunderbi@p57985874.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:02:57] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 240 seconds)
[08:59:24] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Quit: Leaving)
[11:05:16] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[11:08:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[11:43:47] <FromGitter> <keyb0ardninja:kde.org> Hey everyone! I would like to set `ctrl + g` in insert mode to take me back to normal mode. Can you please tell me how I can do this?
[11:43:51] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4)
[13:04:20] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[13:08:03] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:13:53] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:17:41] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:33:27] <FromGitter> <glmdgrielson:matrix.org> Doesn't Escape already do that?
[13:36:05] <FromGitter> <keyb0ardninja:kde.org> glmdgrielson (https://matrix.to/#/@glmdgrielson:matrix.org) Yes, but I would `ctrl + g` because that allows me to keep my hand position closer to the home row. Moving your hand to hit `Esc` every single time to get out of normal mode just breaks the flow. Do you know how I can set `ctrl + g` to take me back to normal mode from insert mode?
[13:36:47] <FromGitter> <dalanicolai> @keyb0ardninja:kde.org Do you use caps-lock?
[13:37:21] <FromGitter> <keyb0ardninja:kde.org> Normally in vim, you can hit `ctrl + c` as an alternative to `Esc`, but `ctrl + c` has special meaning in Emacs, so that doesn't work.
[13:37:30] <FromGitter> <dalanicolai> I have caps-lock remapped to ESC
[13:37:34] <FromGitter> <dalanicolai> Which works great for me
[13:37:46] <FromGitter> <keyb0ardninja:kde.org> I've mapped caps-lock as an extra `Ctrl`
[13:38:01] <FromGitter> <dalanicolai> you can also press `fd` quickly b.t.w to exit insert state
[13:38:36] <FromGitter> <glmdgrielson:matrix.org> Try `C-[` which Emacs should already map to Escape?
[13:38:38] <FromGitter> <dalanicolai> So is your caps lock at the outside from the fn key?
[13:38:59] <FromGitter> <dalanicolai> Then I can understand... if it is at the inside then it is a convenient key to type
[13:39:30] <FromGitter> <dalanicolai> And I would undo that remapping of caps-lock
[13:40:02] <FromGitter> <keyb0ardninja:kde.org> Yes, I'm aware of that, and that's what I use for now. But it's unreliable. Besides, `Ctrl + g` isn't even mapped to anything in insert mode. Isn't it possible to map `ctrl + g` to get me out of insert mode?
[13:41:06] <FromGitter> <dalanicolai> `Ctrl+g` is keyboard-quit
[13:41:43] <FromGitter> <dalanicolai> the general key to interrupt Emacs (like C-c in the terminal)
[13:42:02] <FromGitter> <dalanicolai> however, I think you can simply remap it
[13:43:26] <FromGitter> <keyb0ardninja:kde.org> Yes, exactly. But when in insert mode, `C-g` doesn't do anything useful. It would be incredibly useful to get me out of insert mode. How can I do that? I'm asking here because I'm completely new to Emacs. I don't know how to write elisp etc.
[13:48:06] <FromGitter> <dalanicolai> Got interrupted
[13:48:10] <FromGitter> <keyb0ardninja:kde.org> Thanks, that's very nice! This is a big improvement over hitting `fd` quickly. But `C-g` would be better since `g` is in the homerow and much easier to reach compared to `[`. Moreover, it kind of makes idiomatic sense to me. ‚èé  ‚èé For example, in vim `Ctrl+c` is the sort of equivalent of `Ctrl+g` in Emacs, you know the "bail me out" shortcut. And `Ctrl+c` gets you out of insert mode in vim. So, it 
[13:48:10] <FromGitter> ... makes sense to me to set `Ctrl+g` as the get me out of insert mode shortcut in Emacs evil.
[13:48:17] <FromGitter> <dalanicolai> `(evil-global-set-key 'insert (kbd "C-g") 'evil-normal-state)`
[13:48:25] <FromGitter> <dalanicolai> That should do the trick
[13:48:55] <FromGitter> <dalanicolai> But you read about the `fd` also?
[13:49:30] <FromGitter> <dalanicolai> Ah okay
[13:51:16] <FromGitter> <keyb0ardninja:kde.org> Thanks! Do I put this in the `dotspacemacs/user-config ()` section of the `~/.spacemacs` file?
[13:51:23] <FromGitter> <dalanicolai> Yes
[13:56:02] <FromGitter> <keyb0ardninja:kde.org> Hey it worked!!! Thank you so much! It's insanely more comfortable to use now :)
[13:58:33] <FromGitter> <dalanicolai> Haha... doesn't sound comfortable to me :)
[13:58:48] <FromGitter> <dalanicolai> But that's great then!
[13:59:23] <FromGitter> <dalanicolai> I hope you will not need the 'real' `C-g`
[14:00:18] <FromGitter> <dalanicolai> But as long as you are not hacking too much on Emacs, that possibility is small from insert-state
[14:00:46] <FromGitter> <keyb0ardninja:kde.org> Haha that's alright, I'm just used to hitting `ctrl+c` in vim. So, I accidentally keep hitting the same out of habit when I'm in evil insert mode too, which then opens the Emacs `C-c` menu, then I realize that wait I'm in Emacs. Then I start hitting `C-g`, but no matter how many times I hit `C-g`, I still remain in insert mode, which is very annoying.
[14:01:41] <FromGitter> <dalanicolai> Makes sense...
[14:03:14] <FromGitter> <keyb0ardninja:kde.org> Thanks again :)
[14:03:42] <FromGitter> <dalanicolai> üëç
[14:09:01] *** Joins: baldlizard (~Thunderbi@p5798597c.dip0.t-ipconnect.de)
[14:46:32] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4) (Ping timeout: 240 seconds)
[16:10:23] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4)
[18:15:17] <FromGitter> <erichlf> I don't know the solution to your problem, but I think you have a typo: `line-spaing` -> `line-spacing`.
[19:11:11] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[19:48:37] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::5cc4) (Ping timeout: 240 seconds)
[20:02:22] *** Joins: Mooncairn (~mooncairn@user/mooncairn)
[22:52:17] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Ping timeout: 240 seconds)
[23:22:05] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
