[00:00:45] *** Joins: vlm (~vlm@user/vlm)
[00:04:20] <relipse> no tml look here
[00:04:21] <relipse> https://cdn.discordapp.com/attachments/862784909922795600/959530906710859796/Screen_Shot_2022-04-01_at_9.12.24_PM.png
[00:04:41] <relipse> <Thinkverse[d]>  in #phpc ran it and no notices or warnings
[00:05:00] <relipse> i'm not sure what php is doing there
[00:07:53] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[00:08:16] *** Joins: vlm (~vlm@user/vlm)
[00:11:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[00:12:30] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[00:18:31] *** Joins: magla (~gelignite@55d450ea.access.ecotel.net)
[00:20:04] *** Parts: ordos (~ordos@user/ordos) (Leaving)
[00:29:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:31:06] *** Quits: brentaarnold (~brentaarn@24.112.47.164) (Ping timeout: 272 seconds)
[00:31:20] *** Quits: guido (~weechat@host-79-52-253-241.retail.telecomitalia.it) (Quit: WeeChat 3.5)
[00:31:47] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[00:33:39] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:36:31] <__adrian> "relipse> that code is in a function"  doesn't look like it - your paste starts on line 2 (i assume line 1 is the  <?php  tag)
[00:36:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[00:36:57] <relipse> __adrian: it is a snippet from a function
[00:37:15] <__adrian> where is $row first defined?
[00:37:18] <relipse> which thinkverse added himself to code
[00:37:26] <relipse> $row is never defined, that's what I cannot figure out
[00:37:37] <relipse> why is it working
[00:39:25] <__adrian> can't tell from that. it's assigned somewhere. you need to find it.
[00:40:34] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[00:42:03] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:42:17] *** Quits: PTNapivoski (~PTNapivos@2804:60:1c2:9b00:283d:c55f:359b:1ac0) (Quit: Leaving)
[00:42:24] <relipse> it's not assigned somewhere
[00:42:29] <relipse> you're not believing me
[00:42:57] <relipse> besides the unset($row) should prove that regardless
[00:43:46] <The_Blode_> Good evening guys. :) Quick one. Anybody know of any AD auth modules for PHP? Preferably something that is current.
[00:44:31] <The_Blode_> I know of AD-X but the project looks to be abandoned.
[00:44:55] <__adrian> no idea, check packagist
[00:45:19] <The_Blode_> Thank you checking
[00:47:29] *** Joins: l__q (~modinfo@user/modinfo)
[00:49:22] <AllenJB> You might want to check if you can use Microsoft OpenID Connect (OIDC) and Graph APIs
[00:49:27] *** Joins: filename (~kilitary@188.242.105.134)
[00:54:10] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:57:01] *** Quits: magla (~gelignite@55d450ea.access.ecotel.net) (Quit: Stay safe!)
[01:00:15] *** Joins: thiras (~thiras@user/thiras)
[01:01:16] *** Joins: pepper (~pepper@user/pepper)
[01:06:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:10:41] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.3)
[01:10:53] *** Quits: jgrim (~jgrim@159.223.114.62) (Quit: Buh bye!)
[01:11:45] *** Joins: jgrim (~jgrim@159.223.114.62)
[01:27:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[01:31:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[01:32:52] *** Quits: jgrim (~jgrim@159.223.114.62) (Quit: Buh bye!)
[01:33:30] *** Joins: jgrim (~jgrim@159.223.114.62)
[01:44:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[01:46:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[01:54:08] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[01:56:17] *** Quits: genom (~g@37.214.57.161) (Remote host closed the connection)
[02:17:02] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[02:17:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 252 seconds)
[02:17:17] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[02:19:58] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:26:12] *** Joins: delboy1978uk (~delboy197@62-205-71-30.access.telenet.be)
[02:27:25] *** Quits: newwebdev13 (~newwebdev@78.135.91.44) (Quit: Leaving)
[02:30:35] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[02:59:18] <entropy_> question
[02:59:20] <entropy_> $id = $_GET["account"] ?? "";
[02:59:28] <entropy_> is this vulnerable to SQL Injection?
[03:03:06] <Albright> That alone won't stop SQL injection, but whether that's really a problem will have to do with what the code that actually interacts with the DB looks like.
[03:03:29] <Albright> So I guess the answer would have to be "yes."
[03:04:41] <__adrian> entropy_: it's got absolutely nothing to do with sql or sql injection.
[03:04:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:04:58] <entropy_> ok thanks
[03:05:02] <entropy_> just wondering
[03:05:39] <__adrian> you're wondering about the wrong part. this is like asking whether requiring people to wear blue to your concert will prevent fights.
[03:05:48] <Blondie101010> do you pass all your SQL query data separately?
[03:05:54] <__adrian> ^
[03:06:02] <__adrian> use parameters. that's all.
[03:06:10] <entropy_> i use PDO execute()
[03:06:32] <Blondie101010> do you prepare the query?
[03:06:32] <__adrian> that doesn't answer the question
[03:06:40] <entropy_> yes Blondie101010
[03:06:54] <__adrian> do you prepare the query and **use parameters**?
[03:06:56] <Blondie101010> do you pass the data to execute()
[03:07:01] <entropy_> yes
[03:07:14] <Blondie101010> you'd have to show code to confirm but that sounds ok
[03:07:33] <__adrian> so your SQL looks like  "select x from y where id = :id"  ?
[03:07:39] <entropy_> yes
[03:07:50] <__adrian> that's what prevents sql injection.
[03:08:09] <Blondie101010> if the data is not in the SQL statement string, you can't get SQL injections
[03:08:16] <entropy_> what about: 'SELECT * FROM table where id = ? ';
[03:08:21] <entropy_> and execute
[03:08:24] <__adrian> rule of thumb: "hard code" your sql statements. e.g., make them constants.  const SELECT = "select x from y where id = :id";
[03:08:25] <Albright> Yay!
[03:08:29] <Blondie101010> you should read on the subject
[03:08:36] <Blondie101010> seems like you don't know what the terms mean
[03:08:45] <entropy_> ok
[03:08:55] <__adrian> entropy_: yes, that's a parameter also.  ? is for positional parameters. :name is for named parameters.
[03:10:29] <Blondie101010> basically, an injection, is passing data that will affect the query, such as: $sql = "SELECT * FROM sometable WHERE id = $id"; // with $id = "10 or id != 10"
[03:10:35] <Blondie101010> that would dump the whole table
[03:12:08] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:14:58] *** Quits: delboy1978uk (~delboy197@62-205-71-30.access.telenet.be) (Quit: delboy1978uk)
[03:16:04] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:21:28] *** Quits: pmercado (~pmercado@190.22.73.57) (Ping timeout: 272 seconds)
[03:24:19] *** Joins: travisghansen (~travisgha@192.74.130.86)
[04:03:07] *** Quits: jgrim (~jgrim@159.223.114.62) (Quit: Buh bye!)
[04:04:11] *** Joins: jgrim (~jgrim@159.223.114.62)
[04:04:41] *** Joins: newwebdev13 (~newwebdev@78.135.91.44)
[04:07:34] *** Joins: chozorho (~chozorho@2601:146:300:c30:2a9:3c03:9117:1e4b)
[04:09:29] *** Joins: mixfix41 (~homefame@user/mixfix41)
[04:10:03] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:12:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:13:50] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[04:18:50] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 252 seconds)
[04:38:40] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:40:13] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:40:49] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:44:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[05:01:51] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:02:16] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:04:06] *** Joins: vlm (~vlm@user/vlm)
[05:06:55] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[05:14:14] *** Quits: melchior (melchior@user/melchior) (Quit: Matthew 2:1-16)
[05:21:39] *** Joins: filename (~kilitary@82.148.25.66)
[05:21:41] *** Quits: DaNeenjah (~jake@adsl-74-230-4-23.hsv.bellsouth.net) (Quit: WeeChat 3.5)
[06:04:02] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[06:27:55] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[06:29:40] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Client Quit)
[06:30:11] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[06:30:58] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[06:34:55] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Ping timeout: 256 seconds)
[06:36:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 256 seconds)
[06:54:25] *** Quits: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au) (Ping timeout: 256 seconds)
[06:54:49] *** Joins: mr_gant (~mr_gant@103.192.80.172)
[07:18:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[07:26:28] *** Quits: newwebdev13 (~newwebdev@78.135.91.44) (Quit: Leaving)
[07:27:04] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:27:17] *** Joins: _filename (~kilitary@188.242.105.134)
[07:29:13] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 260 seconds)
[07:31:29] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[08:00:43] *** Quits: sreve_ (~quassel@p54a70c2b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:01:06] *** Joins: sreve (~quassel@p54a712fc.dip0.t-ipconnect.de)
[08:08:12] *** Quits: chozorho (~chozorho@2601:146:300:c30:2a9:3c03:9117:1e4b) (Ping timeout: 240 seconds)
[08:20:04] *** _filename is now known as filename
[08:21:03] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 260 seconds)
[08:35:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[09:05:11] *** Joins: l__q (~modinfo@user/modinfo)
[09:11:30] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-EA9F-80FF-FEB6-644A-dynamic.midco.net)
[09:44:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[09:47:18] *** Joins: filename (~kilitary@188.242.105.134)
[10:24:32] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:29:11] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[10:32:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[10:34:55] *** Quits: keypusher (keypusher@user/keypusher) (Read error: Connection reset by peer)
[10:37:00] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 240 seconds)
[10:37:12] *** Joins: keypusher (keypusher@user/keypusher)
[10:38:38] *** Joins: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it)
[10:53:08] *** Joins: hh (~g@37.214.57.161)
[11:01:27] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[11:05:28] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[11:39:05] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[11:40:26] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-EA9F-80FF-FEB6-644A-dynamic.midco.net) (Remote host closed the connection)
[11:48:25] *** Joins: filename (~kilitary@188.242.105.134)
[12:00:02] *** Quits: BrunoFontes (~bruno@2a02:c207:2026:6264::1) (Quit: WeeChat 2.8)
[12:22:23] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:22:57] *** Quits: Atlas (~atlas@user/atlas) (Quit: ZNC - https://znc.in)
[12:25:09] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[12:25:51] <hans> suddenly forgot how to bitflags, if i want everything *except* index, it's (new mysqli_driver())->report_mode = MYSQLI_REPORT_ALL & ~MYSQLI_REPORT_INDEX;   yes?
[12:32:02] <TinoDidriksen> Correct
[12:32:24] <hans> thanks
[12:34:38] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:47] <hans> also why is mysqli report mode a global setting? what if i have some code using a mysqli and wanting it in that (imo horrible) silent $statement->errno mode, and some other code wanting mysqli in exception mode, they they'd clash with each others, no?
[12:37:21] <hans> every time the shitty code sets it to ->errno mode, it would break the exception mysqli code, and vise-versa?
[12:37:56] <TinoDidriksen> Yet another reason to use PDO instead.
[12:38:18] <hans> yeah, sigh.. unfortunate that PDO doesn't do async queries tho
[12:38:32] <hans> afaik that's the only reason to choose mysqli over PDO these days
[12:39:10] <hans> ie PDO doesn't have https://www.php.net/manual/en/mysqli.reap-async-query
[12:41:28] <TinoDidriksen> I can't think of a case where I have wanted async queries in a single process.
[12:44:12] <hans> TinoDidriksen: for example https://i.imgur.com/BmmeLhc.png
[12:44:36] <hans> would be nice to fetch those in parallel no?
[12:46:49] <hans> mysqli could do that, PDO can't (afaik)
[12:48:10] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:48:30] <hans> but i agree that it's very rarely needed, at least the stuff i do basically never have the development budget for such micro-optimizations ^^
[12:50:08] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:52:23] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:58:29] <hans> .. still hope PDO gets async support one day tho.
[13:06:28] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[13:08:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:08:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:08:47] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[13:09:07] *** Joins: pepper (~pepper@user/pepper)
[13:22:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[13:35:23] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[13:50:54] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[13:54:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:57:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:14:18] *** Quits: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) (Quit: delboy1978uk)
[14:39:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:05:39] *** Joins: thiras (~thiras@user/thiras)
[15:12:52] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:19:15] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:29:13] *** Quits: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it) (Read error: Connection reset by peer)
[15:29:16] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:31:27] *** Joins: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it)
[15:33:42] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[15:34:05] *** Joins: delboy1978uk (~delboy197@d51a4773c.access.telenet.be)
[15:34:18] *** Quits: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it) (Client Quit)
[15:52:17] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[16:01:05] *** Joins: ms49434 (~ms49434@user/ms49434)
[16:03:06] *** Joins: newwebdev13 (~newwebdev@78.135.91.44)
[16:17:32] *** Joins: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it)
[16:19:12] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[16:22:16] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr) (Quit: Ping timeout (120 seconds))
[16:23:41] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[16:35:18] *** Joins: vlm (~vlm@user/vlm)
[16:39:13] *** Joins: vlm_ (~vlm@user/vlm)
[16:40:44] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 272 seconds)
[16:40:44] *** vlm_ is now known as vlm
[16:53:40] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[17:08:35] *** Quits: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it) (Read error: Connection reset by peer)
[17:18:26] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[17:22:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:23:16] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 245 seconds)
[17:23:19] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[17:35:18] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[17:38:24] <__adrian> "hans> also why is mysqli report mode a global setting?" don't complain, it used to be more than global.
[17:39:40] <__adrian> though honestly i don't follow why you'd want exceptions in one place and not another
[18:06:38] *** Joins: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it)
[18:07:20] *** Joins: l__q (~modinfo@user/modinfo)
[18:12:06] *** Quits: guido (~weechat@host-87-6-250-182.retail.telecomitalia.it) (Read error: Connection reset by peer)
[18:16:33] <Blondie101010> hans:  whatever deserves the title of "microoptimization", at the same time becomes undesirable as it implies the process won't be significantly faster while the code will be harder to maintain
[18:27:25] *** Joins: ssh073 (~thelounge@79.164.47.232)
[18:27:46] <Blondie101010> that said, I can't see imagine what you have in mind to optimize web service with parallelism/async, especially with the front-end async example you made, which is totally irrelevant
[18:29:11] <Blondie101010> even if you did have such a solution that makes a single request faster, it would still most likely be a bad idea for any web server optimization as it would focus the whole server on a single request, instead of all of them
[18:33:47] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Ping timeout: 260 seconds)
[18:39:20] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[18:39:43] *** Joins: thiras (~thiras@user/thiras)
[18:54:03] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:58:37] *** Quits: ssh073 (~thelounge@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[18:59:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[19:00:23] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[19:01:46] *** Joins: filename (~kilitary@188.242.105.134)
[19:03:42] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:04:17] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[19:04:44] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[19:06:19] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Ping timeout: 256 seconds)
[19:12:18] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[19:18:09] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:24:45] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[19:27:04] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[19:32:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[19:52:17] *** Quits: delboy1978uk (~delboy197@d51a4773c.access.telenet.be) (Quit: delboy1978uk)
[20:04:43] *** Joins: csm3105 (~csm3105@47.61.127.217)
[20:04:51] <netstar> Hi.  I've created a session cookie with various parameters (secure/httponly/samesite)...the cookie is created and session fine, until I come to delete the session and reset the session cookie by name with the exact same parameters except the value and expires. It seems to create a completely new cookie with all the parameters set.
[20:05:32] <dag> lets say I have an object $logger that I want to use in a few of my functions and class methods. i dont want to make it a global variable. how could i do it? i think of this as a variable scoped to a module or file, kind of like static in C
[20:05:44] <Naktibalda> netstar: do you see 2 cookies?
[20:06:02] <Naktibalda> parameters that matter are domain and path
[20:06:40] <dag> i had this particular problem with duplicated cookies and it was because of different subdomain
[20:06:41] <Naktibalda> dag: there are no such scopes in php
[20:07:23] <netstar> I see one cookie. When it's created all fine params are set. I come to delete
[20:07:26] <__adrian> dag: you could use DI, you could pubsub, you could use a message bus/event system...
[20:07:36] <dag> Naktibalda: so next alternative to a global var is perhaps a singleton? like $logger = Logger::getInstance()
[20:07:57] <__adrian> dag: that's an alternative to a global var, but it's also basically a global var.
[20:08:05] <AllenJB> netstar: It may help you to use the browser dev tools to inspect the response headers
[20:08:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[20:08:12] <netstar> AllenJB: Thanks
[20:08:14] <netstar> Yes :)
[20:08:25] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[20:13:23] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[20:15:36] <gonogo> Hi everyone. Curious in php8 I've got a lot of curl connections hanging out in CLOSE_WAIT state. The doc's say curl_close() has no effect anymore. Can you force close a curl connection now?
[20:16:37] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:16:38] <Naktibalda> isn't it handled by destructor now?
[20:16:50] <__adrian> should go away when the connection goes out of scope
[20:17:05] <AllenJB> gonogo: It has no effect because PHP switched from using a resource handle to an object. The connection closes when the object is destroyed
[20:17:54] <gonogo> Ahh this is a long running daemon. I'll search for why it's hanging around. Thank you!
[20:18:35] <__adrian> presumably you have just one big scope and are keeping the $variable
[20:21:05] <gonogo> the handles are created inside a main loop but the ref to that object should be overwritten on the next loop.
[20:21:42] <gonogo> at that point the garbage collector should pick it up
[20:24:41] <Naktibalda> I think that it doesn't run garbage collector immediately if this is all happening in the same scope, try running gc_collect_cycles()
[20:24:52] <__adrian> not sure what the behavior is, but just experimentally seems you'd end up with at least two at once that way
[20:24:53] <AllenJB> My first instinct would be to try moving the contents of the loop to a function / method. As far as I know the garbage collector basically runs on scope changes, so it should run when the function / method finishes.
[20:25:36] <__adrian> i.e., looping on $c=curl_init();var_dump($c); gives me two object handles (1 and 2) and they alternate.
[20:26:07] <__adrian> assuming curl_init() creates a new object and then the first is not overwritten until assignment
[20:26:40] <__adrian> internally there might be a reference to the "other" object...  ¯\_(ツ)_/¯
[20:26:58] <AllenJB> You also might want to look at only using one curl handle and making multiple requests on that. Instead of creating an new instance on each loop.
[20:27:05] <__adrian> ^
[20:27:32] <gonogo> So everything curl related is inside a custom curl class and the loop does just consist of a set of functions. I'll try manually running the gc and look for another ref to that object I may be missing.
[20:28:05] <gonogo> at least this takes me from wtf to something to fix haha
[20:28:20] <TinoDidriksen> Ideally reuse the cURL object.
[20:28:24] <__adrian> ^
[20:29:01] <gonogo> Hmm and default all the params on each use?
[20:29:07] <__adrian> though if you're inside a class, "why?" depends a lot on how you did specific things
[20:29:19] <TinoDidriksen> curl_reset() exists to clear an object.
[20:29:36] <__adrian> ^
[20:29:45] <gonogo> well damn I could just make it a singleton then.
[20:29:47] <__adrian> make a method that resets and then sets the desired params
[20:29:56] <__adrian> you don't need a singleton
[20:30:07] <__adrian> singletons are antipatterns
[20:30:52] <TinoDidriksen> A singleton would work and is often easier to use, but it is bad code in the long run.
[20:31:26] <__adrian> "easier to use" ...eh, this is superficial
[20:32:31] <gonogo> What's a better method if I'm creating a new curl object inside a few different functions. Pass the object into each function?
[20:32:43] <__adrian> don't
[20:32:54] <__adrian> create the object and _pass it_ where needed
[20:33:12] <__adrian> this is _dependency injection_. this is why functions have $arguments
[20:33:29] <__adrian> *constructors
[20:34:32] <__adrian> i thought you said you were using a class?
[20:40:19] <gonogo> I am it creates the new handle. Has some methods for various curl functions etc...
[20:40:51] <__adrian> oh, but your program (the loop) is not being handled by a class
[20:41:41] <gonogo> correct
[20:42:35] <__adrian> so you could still keep your $curl object in scope and use it in each iteration of the loop.
[20:43:13] <__adrian> or it might be easier/more beneficial to wrap the whole process in its own object
[20:46:23] <gonogo> Looking at this further. Everything is handled inside another class method that creates the curl object. This only happens inside a function in the main loop.
[20:46:31] <gonogo> So this goes back to making no sense.
[20:48:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[20:52:24] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[20:55:10] *** Joins: l__q (~modinfo@user/modinfo)
[20:56:47] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 246 seconds)
[21:00:48] <netstar> gosh, can I have a moan about php :)
[21:03:46] <netstar> As far as I have ascertained, to delete a session, you start the session (session_start), empty the super global $_SESSION by reassigning it, set the session cookie and expire it then session_destroy
[21:04:33] <Blondie101010> maybe you should back up...  why do you need to expire the session that way?
[21:05:25] <Blondie101010> 99% of web apps do not need such a thing
[21:05:37] <AllenJB> As far as I am aware you should not have to manually set / expire PHP session cookies. (And if you've blanked the server-side session, it's pointless anyway)
[21:05:42] <netstar> I have a session which I use to authenticate, I assign some values to the superglobal on successful auth. I'm trying to logout cleanly
[21:06:03] <Blondie101010> sure, unset the logged in status however you do it
[21:06:09] <Blondie101010> done
[21:06:35] <netstar> :)
[21:09:09] <netstar> Why do you think PHP overtook Perl?
[21:09:29] <netstar> was it Perl's whacky syntax?
[21:10:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[21:12:59] *** Joins: pmercado (~pmercado@190.22.83.12)
[21:13:25] <AllenJB> Likely no single reason, but probably: WordPress. Apparent ability to lock down PHP for shared hosts (altho most of that is security theatre). Ease of learning and the ability to mix HTML and PHP.
[21:14:14] <__adrian> netstar: session_destroy(); that's all
[21:18:08] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[21:22:17] <Blondie101010> new languages do not get developped after community forums and discussions...  they simply get done by someone who thinks it's a good idea, and then adoption either follows or not
[21:22:36] <Blondie101010> there's no concertium
[21:24:42] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:29:29] *** Quits: BlackIkeEagle_ (~BlackIkeE@archlinux/trusteduser/blackikeeagle) ()
[21:29:54] *** Joins: konrados (~konrados@user-5-173-20-21.play-internet.pl)
[21:31:59] *** Joins: _filename (~kilitary@188.242.105.134)
[21:32:22] *** Joins: BlackIkeEagle (~BlackIkeE@archlinux/trusteduser/blackikeeagle)
[21:33:32] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 246 seconds)
[21:37:51] <gonogo> Interesting running gc_collect_cycles(); cleans up those hung connections. Even though curl is completely out of scope.
[21:39:16] <TinoDidriksen> That's bug report worthy. The destructor should close the connection. GC should just clean up memory later.
[21:43:25] <Blondie101010> I agree, though I think it shouldn't matter to a better solution
[21:44:39] <TinoDidriksen> It's very similar to https://bugs.php.net/bug.php?id=80830
[21:50:12] <gonogo> Interesting __destruct() in the object I'm using to house the curl functions is not called unless I call gc_collect_cycles(); There must be a ref somewhere but I don't see how that is possible. The entire life of the curl object is inside another object inside a function inside the main loop.
[21:50:53] <Blondie101010> gonogo:  try to simply unset($obj)
[21:51:03] <Blondie101010> that should call the destructor
[21:51:36] <Blondie101010> this issue seriously sounds like a dependency structure problem
[21:51:48] <Blondie101010> gonogo:  are you familiar with SOLID?
[21:52:11] <Blondie101010> if applied, the problem should not exist anymore
[21:54:45] <gonogo> I am. And this seems like a bug.
[21:56:22] <gonogo> The the inner __destruct isn't called when you unset the outer object. Odd. Only after gc_collect_cycles();
[22:00:33] <da_wunder> have you tried to use `$handler = null; unset($handler);` ?
[22:00:59] <da_wunder> that should trigger garbage collection, if I remember that correctly
[22:01:47] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[22:07:51] <harpia> Debian deletes inactive sessions after a while, which includes any CSRF token you had in your session. If I leave a form page idling for a long time and then try to submit it, the CSRF token used in it is no longer in the session. Because of that, the CSRF validator invalidates the request. What would you suggest to handle this situation?
[22:08:27] <harpia> Only thing I could think of is running a JS script to check for session status and update the csrf token in the current page... or something like that.
[22:08:53] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 260 seconds)
[22:10:07] <harpia> The "remember_me" cookie takes care of reauthenticating when the session is lost, but now I have this problem with CSRF tokens.
[22:10:30] <gonogo> da_wunder, yeah the outer __destruct() is called without issue as soon as the function returns. Those curl handles just hang around until gc_collect_cycles() is called
[22:13:54] <gonogo> gc_collect_cycles(); wouldn't do anything if that class still had ref's
[22:14:23] <Blondie101010> gonogo:  the only case where the internal destructor wouldn't be called is if there's still a reference to the object
[22:14:31] <Blondie101010> does it refer to itself by any chance?
[22:15:05] <gonogo> Blondie101010, but why would gc_collect_cycles(); Clean it up if there was still a reference?
[22:15:37] <Blondie101010> I'm guessing that it may be a solution to solve a problem with the code
[22:15:54] <Blondie101010> can you make a 20-30 line demo of the problem?
[22:15:55] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Ping timeout: 260 seconds)
[22:16:30] <Blondie101010> if I'm rigth, you won't be able to or it will be very obvious
[22:17:27] <gonogo> Yeah I'm curious enough to see if I can replicate this with a lab test
[22:17:54] <Blondie101010> that's always a necessity for troubleshooting and bug reporting anyways
[22:19:16] <__adrian> "TinoDidriksen> That's bug report worthy"  maybe, maybe not. destructor doesn't have to run *immediately*. in most cases it wouldn't matter, and i don't think anything guarantees it. and in any case... gc will clean up when resources are needed, at the latest.
[22:19:20] *** Joins: delboy1978uk (~delboy197@d51A4773C.access.telenet.be)
[22:20:14] <__adrian> for this specific case, i'd suspect it's something to do with how the curl extension handles the objects internally.
[22:20:28] <__adrian> and maybe curl's procedural history
[22:21:27] <__adrian> worth asking someone that might know, though.
[22:22:02] <gonogo> I need to review the code more as well. But that's for later. Thanks for the insight everyone
[22:22:05] <__adrian> blondie: php can recognize circular references
[22:22:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[22:28:00] <Blondie101010> __adrian:  that has been the cause of many valid bug reports over the years
[22:28:33] <Blondie101010> but I do agree there is some uncertainty with the extenion
[22:28:36] <Blondie101010> *extension
[22:28:52] <Blondie101010> gonogo:  please poke me when you get your test case done
[22:30:27] <__adrian> yeah i've got a strong (but not firmly founded) suspicion that curl tracks handles internally for {some possibly [in]valid reason}, so the object isn't actually un-referenced until some point after it's gone from userland
[22:32:43] * Blondie101010 nods
[22:36:06] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:36:40] <gonogo> Blondie101010, is there a preferred place to post such a thing?
[22:36:44] *** Joins: eddof13 (~eddof13@2806:102e:12:64:44a9:6380:b1d9:f15)
[22:36:53] *** Quits: eddof13 (~eddof13@2806:102e:12:64:44a9:6380:b1d9:f15) (Client Quit)
[22:37:04] <Blondie101010> any paste site that you link here
[22:37:15] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[22:37:38] <__adrian> mostly "not pastebin.com"
[22:39:18] <TinoDidriksen> PHP guarantees "The destructor method will be called as soon as there are no other references to a particular object" - this is entirely separate from whenever the GC gets around to reclaiming the underlying memory.
[22:39:36] <Blondie101010> definitely
[22:39:40] *** Parts: delboy1978uk (~delboy197@d51A4773C.access.telenet.be) ()
[22:39:54] *** Joins: ssh073 (~serg073@79.164.47.232)
[22:39:57] <Blondie101010> and I have seen similar cases before ;)
[22:40:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:40:21] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[22:40:21] <Blondie101010> always caused by a dependency problem
[22:40:35] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[22:40:47] <TinoDidriksen> Given that curl_close() is now a no-op, I would certainly expect that destructor is the one closing sockets - otherwise, what is the point of the destructor.
[22:42:17] <Naktibalda> https://github.com/php/php-src/blob/d23e36da81fb929242fb6762c649211e51dd1eb3/ext/curl/interface.c#L3424-L3469
[22:43:01] <__adrian> hm. interesting
[22:43:26] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Quit: harpia)
[22:43:41] <Naktibalda> conveniently right below curl_close
[22:45:21] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Ping timeout: 245 seconds)
[22:50:29] <TinoDidriksen> I was looking at that earlier, but that's the function the GC calls. There is no actual destructor.
[22:57:24] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[23:01:44] *** Joins: eddof13 (~eddof13@2806:102e:12:64:44a9:6380:b1d9:f15)
[23:01:58] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Ping timeout: 260 seconds)
[23:02:32] *** Joins: slashasdf (~slashasdf@030-245-128-083.dynamic.caiway.nl)
[23:03:47] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336)
[23:07:22] *** Quits: slashasdf (~slashasdf@030-245-128-083.dynamic.caiway.nl) (Remote host closed the connection)
[23:07:53] *** Quits: roadie (~user@2a02:8108:5a40:1d87:ed46:a690:3e4e:e336) (Client Quit)
[23:08:18] *** Quits: eddof13 (~eddof13@2806:102e:12:64:44a9:6380:b1d9:f15) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
