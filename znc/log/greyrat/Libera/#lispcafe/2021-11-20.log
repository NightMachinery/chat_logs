[00:06:12] <Alfr> gilberth, that'd be equal for list being #1=(a #1#), in the sense that equal will not return nil, as list contains circles equal might simply not terminate.
[00:07:17] <gilberth> Alfr: Somehow I knew, that you would come up with that.
[00:08:04] <gilberth> Next try: (cons (car list) (list (gensym)))
[00:08:06] <Alfr> gilberth, sorry. But it took me some minutes to work it out on paper.
[00:09:40] <gilberth> Alfr: I realized it right as I hit RET. What took you so long?
[00:10:39] <Alfr> gilberth, dinner.
[00:11:08] <gilberth> That is a good excuse. Actually I should find something edible, too.
[00:13:35] <Alfr> gilberth, to make it a bit more readable, that'd be (list (car list) (gensym)) right? Guess, that should be fine then.
[00:15:11] <gilberth> Yep. I wanted to emphasize that we create a cons.
[00:17:34] *** Quits: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com) (Read error: Connection reset by peer)
[00:23:19] <selwyn> https://cdn.discordapp.com/attachments/873281830856577044/911358460925456464/unknown.png
[00:24:02] <shka> evolution complete
[00:24:46] <Alfr> selwyn, you shall not excessively cool nor heat the Queen.
[00:38:23] <Gnuxie> lel
[00:45:39] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[00:46:06] *** Joins: sm2n (~sm2n@user/sm2n)
[00:58:09] *** Joins: clothesp_ (~awolven@2601:246:4000:1030:dff:58c2:ec0:caf8)
[01:03:50] <shka> https://www.youtube.com/watch?v=TbzfCaxryaM
[01:03:50] -ixelp- Gang Of Four - Shrinkwrapped - YouTube
[01:07:18] <shka> selwyn: just let me know when we should start blasting https://www.youtube.com/watch?v=eubgWMwSD0k
[01:07:18] -ixelp- The Smiths - The Queen Is Dead - YouTube
[01:08:39] <hayley> Hey, that was my idea smh
[01:09:28] <selwyn> before she dies, she will hatch out a hundred million new englings to spread all over the world
[01:09:36] <selwyn> and then you guys will be really fucked
[01:09:46] <selwyn> so i wouldn't look forward to it if i were you
[01:10:34] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[01:11:36] *** Joins: sm2n (~sm2n@user/sm2n)
[01:22:22] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[01:23:37] <moon-child> gilberth: afaik ryu is the state of the art
[01:24:31] <gilberth> moon-child: yep.
[01:26:06] <hayley> https://www.youtube.com/watch?v=_nw6j0MSW_s
[01:26:06] -ixelp- 'Dogs' Pink Floyd Demo's 1976 Alternative version rare - YouTube
[01:26:09] <gilberth> Although I don't know how big the advantage actually is.
[01:28:54] <hayley> https://www.youtube.com/watch?v=3Zm4-tyv2AA üê¶Ô∏è
[01:28:55] -ixelp- Bird wtf - YouTube
[01:30:46] <moon-child> gilberth: hmm, I don't know anything about dragon4, but I do know ryu requires very large lookup tables.  So that might be a mark against it
[01:31:04] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[01:35:06] <gilberth> moon-child: I briefly looked at RYU and it's definitely larger than dragon4, which is just half a page and could be implemented straight from the paper in no time. Provided you have integers, of course.
[01:35:54] <gilberth> How recent is RYU? My dive into FP printing was some ten years ago.
[01:37:19] <gilberth> I mean, look at the LISP code I posted; it's tiny.
[01:38:56] <gilberth> Oh no, I read too much ancient papers and said "LISP" in all capital. :/
[01:43:40] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 268 seconds)
[02:02:06] *** Quits: clothesp_ (~awolven@2601:246:4000:1030:dff:58c2:ec0:caf8) (Remote host closed the connection)
[02:36:25] <sham1> You need penance
[02:36:51] <hayley> https://www.youtube.com/watch?v=UFdn7LA56uE
[02:36:51] -ixelp- Pink Floyd - Interstellar Overdrive (Official Audio) - YouTube
[02:51:21] <gilberth> sham1: For using "much" instead of "many"? Yes.
[02:53:32] <moon-child> or for using 'papers' instead of indefinite 'paper'
[02:55:10] <gilberth> lol
[02:57:46] <selwyn> have been on websites that ban capital letters to avoid shouting
[02:57:53] <moon-child> gilberth: re INTEGER-DECODE-FLOAT:  ((union{float f;int i;}){f}).i,  or  *(int*)&f  if you feel lazy
[02:59:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Remote host closed the connection)
[02:59:18] <gilberth> moon-child: That would not be entirely portable and invokes UB.
[03:00:05] <moon-child> latter yes, former no; hence laziness
[03:00:45] <moon-child> can also do: *(int*)memcpy(&(int){0},&f,sizeof(float))
[03:02:08] *** Joins: kuao (uid504326@helmsley.irccloud.com)
[03:02:37] <gilberth> You would need to assume IEEE floats. What if you face BCD floats, say? Or floats of a different size?
[03:03:23] <gilberth> moon-child: Otherwise I would regard the union approach the best approach.
[03:03:30] <moon-child> gilberth: sure, fair enough
[03:04:23] <moon-child> gilberth: curious, how goes your algorithm for float formatting?
[03:04:33] <hayley> https://www.youtube.com/watch?v=YHRxvUqy3Uw
[03:04:34] -ixelp- EEVblog 1438 - The TOP 5 Jellybean Regulators & References - YouTube
[03:09:24] <gilberth> moon-child: I would need to find it, give me a minute for the details. I need to remember a file name.
[03:12:45] *** Quits: minion (~minion@common-lisp.net) (Killed (NickServ (GHOST command used by minion1)))
[03:13:17] *** Joins: minion (~minion@common-lisp.net)
[03:13:21] <kuao> Hi, was (common)lisp made with precise intention ?
[03:23:09] <edgar-rft> kuao: here's a realistic report from Kent Pitman who was a member of the ANSI committee -> http://www.nhplace.com/kent/Papers/cl-untold-story.html
[03:23:10] -ixelp- Common Lisp: The Untold Story
[03:24:04] <kuao> cool.
[03:24:08] <kuao> Ty
[03:26:27] <gilberth> moon-child: Got it. The idea is we have a float as m * 2^k + 10^j and only 64 bits for 'm'. 'j' is initially 0 and 'm' and 'k' are from INTEGER-DECODE-FLOAT. The goal is to have 'k'=0. I do this this in an iterative fashion and first decrease 'j' until 10*m will no longer fit. Then I increase 'k', by dividing 'm' by 2 until only about 60 bits are left. Rinse and repeat.
[03:27:30] <gilberth> This is perhaps not the fasted approach, but it won't need bignums and is tiny.
[03:28:28] <gilberth> Crucial is the low margin of significant bits we tolerate in our 'm'.
[03:31:56] <gilberth> This is only half the story, the other half is rounding the result.
[03:33:11] <moon-child> I don't quite follow.  If the goal is k=0, then you have m + 10^j, but I don't see why that's helpful
[03:34:49] <gilberth> I misstyped '*'
[03:35:04] <gilberth> It's m * 2^k * 10^j of course.
[03:35:08] <moon-child> oh!--m*2^k*10^j?  that makes more sense, ok
[03:35:20] <gilberth> http://clim.rocks/gilbert/decimal-decode-float.lisp
[03:37:00] <gilberth> The idea is, I multiply by 10 as long as I can within 64 bit and divide by two as long as I can without losing too many bits. My aim was to be tiny, not necessarily fast.
[03:41:09] <moon-child> oh, I see!  That is clever.  But I find it rather unsatisfying
[03:41:51] <moon-child> because the manner in which bits are thrown away is not clearly defined.  It seems essentially to be 'as many as we can get without using bignums, or performing too many iterations'
[03:41:56] <gilberth> Sorry. This is one silly approach that once appeared to me.
[03:42:49] <gilberth> moon-child: Yep. And this is why I have no clue how to prove it's correctness.
[03:43:05] <gilberth> s/'//
[03:45:09] <gilberth> And, yes, this was an attempt to do without bignums. 128-bit integers would probably be ok two. As I said, my aim was to be as tiny as possible. And finally written in C.
[03:56:35] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[03:56:59] <hayley> https://www.youtube.com/watch?v=_muuC5ZI88w
[03:57:00] -ixelp- Tarkus (live) - YouTube
[04:29:01] *** Joins: Catie (~user@user/catie)
[04:45:57] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[04:46:24] *** Joins: Catie (~user@user/catie)
[05:01:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[05:09:57] *** Quits: random-nick (~random-ni@87.116.180.220) (Ping timeout: 256 seconds)
[05:13:01] <hayley> Still no idea how to guesstimate entropy for picking easy targets in my RE engine. Do I need a table of all characters -> Shannons to be useful?
[06:09:51] <gilberth> The first I noticed about Pitman's article is that he complained again for not making money off his MACLISP manual.
[06:15:16] <gilberth> Anyhow, funny coincidence as I am reading his manual right now as I am interested in how much they did without strings and using symbols instead. E.g. there is GETCHARN function. In CL that would be (GETCHARN x i) = (CHAR (SYMBOL-NAME x) i) but returning a fixnum as there are is character datatype in MACLISP.
[06:18:38] <hayley> ...but then any character -> entropy table falls apart if we search for, say, IDs or random text.
[06:21:17] <hayley> https://www.youtube.com/watch?v=JsaPb3DjIbw
[06:21:18] -ixelp- New Order - Elegia (Full Version) [High Quality] - YouTube
[06:22:56] <hayley> But I'd like such a table if I have to use heuristics to decide how to SIMD or something like that.
[06:44:12] <hayley> gilberth: To the best of my knowledge, most "fast" RE engines these days aren't fast at RE searching, they're fast at finding constant strings.
[06:51:08] <hayley> But some results I found in the wild seem ridiculous. 60GB/s over a 20MB (UTF-8 encoded) string? So, we have a big L3 cache which runs at 60GB/s?
[06:59:48] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[07:00:08] <hayley> .oO(Why is my engine now like 30% slower than the baseline? Oh, I wrote ALL-MATCHES not FIRST-MATCHES, it's still 4x as fast.)
[07:02:03] <hayley> Negative cost abstractions: you forgot that you're doing the slow thing.
[07:23:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Ping timeout: 264 seconds)
[07:28:19] <gilberth> hayley: How come that this doesn't surprise me? I mean, who is bold enough to compile their REs to _D_FAs?
[07:39:36] <gilberth> This is what I expected. MACLISP has no strings, symbols are used for strings. "Hello Lispcaf'^He" would read as an interned symbol with its value cell bound to itself. A special property +INTERNAL-STRING-MARKER would be set to guide the printer to use double quotes.
[07:42:15] <gilberth> I was a bit curious, because muLisp also has no strings and worked in almost the same with the minor twist that unbound symbols would always evaluate to themself. What also makes me curious how exactly JS is getting away with the reverse: Using strings for symbols.
[07:42:50] *** Quits: Catie (~user@user/catie) (Quit: good)
[07:44:30] <gilberth> There is another curious thing. The EXPLODE function would return a list of symbols as characters. It's like (defun explode (x) (map 'list (lambda (x) (intern (string x))) (prin1-to-string x)))
[07:45:14] <gilberth> Since the character^Wfixnum version is called EXPLODEN, thus a longer name, I suspect EXPLODE is older.
[07:49:23] *** Joins: ln43 (~ln43@user/ln43)
[07:49:32] <gilberth> XLISP is clever. All stream functions would accept a cons of (<head> . <tail>), with <tail> pointing to the last cons in the list <head>. Writing would append no conses with character codes, reading would pop from the beginning.
[07:53:42] <ln43> Good morning... 
[07:53:53] <ln43> ... !
[07:54:15] <gilberth> It's at the middle of the night.
[07:55:21] <ln43> yes but i was considering to start documenting myself about orbital mechanics and celestial dynamics to extend the game i discovered yesterday
[08:02:11] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 264 seconds)
[08:12:43] <mfiano> Anyone here use htop?
[08:15:46] *** Quits: mzan (~quassel@mail.asterisell.com) (Ping timeout: 260 seconds)
[08:17:57] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:18:19] <dave0> maw
[08:23:08] <gilberth> Hello dave0, how are you doing?
[08:24:48] <hayley> mfiano: I guess, but I couldn't answer questions on it.
[08:25:25] <mfiano> i just figured it out. i was just curious what the memory bar colors represent. it wasn't mentioned in the manual, but it's on the f1 help screen
[08:25:28] <dave0> maw gilberth 
[08:26:23] * mfiano is trying to optimize parallelized compression settings for various algorithms on various hardware to maximize cpu and memory without faulting/swapping
[08:27:08] <dave0> what are you compressing?
[08:27:28] <mfiano> tarring my homedir piped to various compressors
[08:28:23] <dave0> i have a parallel gzip if you want to try it :-)
[08:28:25] <mfiano> trying to decide what the ratio and performance is for various algorithms, and the cpu/memory limits in order to optimize my filesystem's internal compression scheme (ZFS)
[08:28:28] <mfiano> I do too
[08:30:14] <dave0> https://termbin.com/fonc
[08:30:48] <dave0> compile with     gcc -O fonc.c -pthread -lz
[08:31:45] *** Quits: ixelp (~ixelp@p5b157756.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:31:54] *** Quits: gilberth (~gilberth@p5b157756.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:35:38] <hayley> Some make DFAs, but few generate DFAs and compile to machine code.
[08:35:50] <hayley> The Hyperscan SIMD bit-parallel NFA simulator cracks me up every time.
[08:36:09] <hayley> "Hey, (2^n)/256 is better than 2^n, right?"
[08:36:44] <dave0> 2^(n-8)
[08:36:55] <dave0> it's 8 better
[08:38:13] * mfiano notices most compressors write to swap space quite a bit when a block kept in main memory is finished and written to disk when cache has a lot to spare
[08:38:26] <mfiano> depending on block size of course
[08:39:37] *** Joins: gilberth (~gilberth@p5b157756.dip0.t-ipconnect.de)
[08:39:38] *** ChanServ sets mode: +o gilberth
[08:40:16] <hayley> gilberth: Some make DFAs, but compilation and DFAs are uncommon. e.g. Hyperscan sometimes generates a NFA, but uses SIMD to simulate a whole lot of machines somehow.
[08:40:45] <hayley> "(2^n)/256 is better than 2^n, right?" (dave0 thinks so btw)
[08:41:07] <dave0> lol yes :-)
[08:41:37] <gilberth> dave0: Can the result be inflated again? How does it work? It seems like each thread reads a chunk and compress it individually. Won't the stream be shuffled then?
[08:42:05] <dave0> gilberth: the trick is  gunzip   will uncompress concatenated gzip files
[08:42:49] <gilberth> hayley: Having an NFA does not count.
[08:43:14] <dave0> gilberth: the tickets keep things in the correct order, i borrowed it from the ticket lock (it maintains things in FIFO order)
[08:43:59] <gilberth> dave0: Ah ok, I see. Clever.
[08:44:13] <hayley> https://branchfree.org/2018/05/30/smh-the-swiss-army-chainsaw-of-shuffle-based-matching-sequences/ smh my head
[08:44:41] <gilberth> dave0: I missed that you "close" the deflate stream.
[08:46:07] *** Joins: mzan (~quassel@mail.asterisell.com)
[08:47:08] <hayley> gilberth: What do you think of https://branchfree.org/2019/04/04/question-is-matching-fixed-regexes-with-back-references-in-p/ btw?
[08:47:24] *** Joins: ixelp (~ixelp@p5b157756.dip0.t-ipconnect.de)
[08:47:25] *** ChanServ sets mode: +o ixelp
[08:48:13] <gilberth> hayley: You don't really concern yourself with back references?
[08:48:36] <hayley> gilberth: I don't implement back references, but this article subverts my expectations of back references.
[08:50:06] <hayley> Well, there is abuse of O() syntax (who cares about N^(2k+1), N*N^k gets the idea across).
[08:51:04] <gilberth> Ok. So his N is the size of the input, right?
[08:51:31] <hayley> Yes.
[08:53:02] <gilberth> This is tricky.
[08:53:27] <hayley> I guess being O(N) rather than O(f(size of RE)) for arbitrary f means you can't make a DFA obviously.
[08:54:04] <dave0> is backreference like   (a*)b\1   where \1 is the a* bit in brackets?
[08:54:16] <hayley> Yes.
[08:54:37] <dave0> i don't think is context-free
[08:54:38] * gilberth thinks.
[08:54:51] <hayley> Right, it is not.
[08:54:52] <dave0> because it can count  a^n b a^n
[08:55:32] <gilberth> A string of length N has N continuous substrings, right?
[08:57:10] <hayley> N-m+1 for length m substrings?
[08:58:23] <gilberth> Nah, it's O(N^2) sub-strings of a string of |N| perhaps. Silly me. Still not exp.
[08:59:05] <gilberth> I am reasoning along the line, whether we could secretly augment \Sigma somehow. /me scratches head.
[08:59:15] <hayley> "Hyperscan had ports to MIPS, ARM, PowerPC and Tilera at one stage. These ports were a lot of hassle to maintain, and I don‚Äôt think it takes a genius to see how these ports were not particularly strategic for Intel to devote resources to."
[09:01:49] <gilberth> The trouble is things like (a*)a*\1. dave0's example won't make the run time larger. As the (a*) only has one solution: It must be followed by a 'b'.
[09:04:23] <gilberth> But: an RE like a*[t]a* has N solutions for an input of |N|. An RE like a*[t1]a*[t2]a* has O(N^2) solutions. Or for k tags it's O(n^k), right?
[09:05:55] <hayley> Right.
[09:06:04] <gilberth> So it trivially in P, when N is the size of the input. Enumerate each of the possible |N^k| tag assignment for a given input and then decide, whether that particular solution is a match, which should be doable in another N. Where is my error?
[09:07:12] <hayley> I don't see any.
[09:09:52] <gilberth> There must be some error in my reasoning.
[09:10:36] * gilberth thinks.
[09:11:01] * hayley now has to figure where to find the diluted not-fucking-lethal calcium lime and rust remover bottles.
[09:11:31] <hayley> Apparently I can get a 20L bottle of the concentrated stuff. No, I'm not trying to dissolve a body, so I don't need it.
[09:13:12] <gilberth> hayley, it's not that easy. I would need to give it more thought, since those backreferences backfire.
[09:13:36] <hayley> What happens if you throw in multiple backreferences?
[09:14:35] <gilberth> E.g. (a*)(a*) would pick the longest match for the first group. Consider (a*)(a*)b\1 on "aaaba", the only solution would be to put¬† the parens like: "(a)(aa)ba".
[09:15:14] <gilberth> While for (a*)(a*) we'd have (aaa)() as solution.
[09:16:24] <gilberth> So we can't prun solutions as we currently do. What puzzles me still that there cannot be more than n^k solutions with k tags.
[09:19:08] * hayley still needs to think about handling $ and ^, and of course killing registers when re-entering (blah)* too.
[09:20:23] <gilberth> hayley: I'll give it more thought tomorrow. I have a BFI reference implementation of matching, which keeps every possible solutions and applies the POSIX rules only as a last step to find the single correct solution. I used it for BFI testing on generated REs. I'll see if I could rework that for backreferences.
[09:20:50] <hayley> What does BFI mean? Brute force i.*?
[09:21:02] <gilberth> Ignorance.
[09:21:07] <hayley> Right.
[09:23:11] <gilberth> I once used every CPU I had access to, to test my algorithm on all REs enumerated up to a certain length. I let it run for like ten days.
[09:24:11] <hayley> https://www.youtube.com/watch?v=6klZx7IhwsI ‚Üê DFA generator after being tasked with lookbehind/ahead
[09:24:11] -ixelp- Cussing Parrot - YouTube
[09:24:17] <gilberth> On seven machines total. I would have had use for one of those 64-core CPUs. :-)
[09:25:09] <hayley> I could see about borrowing one of three (ideally, all three, but don't bite the hand that feeds) of the university machines with 40 threads each.
[09:27:07] <gilberth> The colling of my Linux machine is not suffice somehow. When I really burn cycles, the CPU would throttle after a few minutes.
[09:27:17] <hayley> Sadly I can't get anything from the HPC department, which would actually make sense.
[09:27:23] <hayley> watch sudo sensors
[09:28:08] <gilberth> Yep. I want to get new one anyway. My cousin said it would be ok to deposit it in the basement here and run a cable up to my room.
[09:28:39] <hayley> When I tried to ask someone, they referred me to the HPC department, and the person at the department told me it was rather for staff only.
[09:29:23] <gilberth> I would need to send a shopping list to my wife for I cannot spend any money on myself.
[09:29:27] <hayley> Also note that many cloud computer credit things only give you credit for tiny virtual machines, and nothing over 2 cores basically.
[09:30:28] <hayley> So I would actually have to pay money to rent a machine, which is...stressful when the rent is like $10/hour. 
[09:30:50] <gilberth> Yep, that's just marketing. For for people needing just any vanilla server with just connectivity.
[09:31:27] <gilberth> hayley: Indeed, that becomes expensive quick.
[09:32:00] <gilberth> And expensive.
[09:32:58] <hayley> Yes, a 224-thread machine on Google Cloud is some $10.41/hour.
[09:33:31] <hayley> Then again, that's a hell of a lot of threads. You may ask, how much does compiling rustc cost then?
[09:34:21] <hayley> About 57 cents apparently. I guess it's not bad?
[09:35:06] <hayley> But it's absurd that anything should be on the scale of minutes with 96 threads.
[09:36:25] <hayley> "said Joel Marcey, Member Director at the Rust Foundation and Staff Developer Advocate at Meta (formerly Facebook)." fucking what
[09:36:37] * hayley puts https://www.youtube.com/watch?v=x2xfpMMQIJ8 on jukebox
[09:37:39] <gilberth> I can rent a 32-core (64 threads) machine for about EUR 300.00 a month. And it would be all mine. That's EUR 0.63 per hour, if I done the math right.
[09:38:08] <hayley> How many months before you better just buy it? I guess for 32 cores it's rather on the scale of years.
[09:40:19] <mfiano> compression apps should think about job stealing instead of setting affinities per block...
[09:40:32] <gilberth> Sure. I haven't looked for the cheapest option. It's just the price my hoster lists for a dedicated root server. And this includes power, cooling, connectivity and backup. And 256GB RAM.
[09:40:55] <mfiano> when there are no more blocks left, cores sit idle in all algorithms i tried
[09:41:26] <hayley> Are said apps expecting that, most of the time, you have enough blocks to go around? 
[09:42:11] <hayley> As https://www.youtube.com/watch?v=Q_B4oK4Mpzk describes, shit gets weird with hundreds of cores though.
[09:42:11] -ixelp- [YTP] ElectroBOOM Clicks a Cliff - YouTube
[09:42:32] <mfiano> when the smallest block finishes, a core is idle for minutes not being utilized at all. though when another ores finishes, it is only seconds or so before they all do
[09:43:24] <hayley> gilberth: Still, I had expected to get access through university somehow. I mean, I pay $100/semester for university services, and I don't see the psychologist, I don't leave crap at campus for cleaners to clean up... 
[09:44:21] <gilberth> You'd need a mentor.
[09:45:06] <gilberth> Isn't there some group doing similar things you could sneak into?
[09:45:19] <hayley> I don't know any. And do you expect anyone else to compile DFAs?
[09:45:54] <hayley> There is a blockchain club though. Can we make RE matching into a proof-of-work scheme? 
[09:45:58] <gilberth> Well, would I still be at my uni, I would know whom to sell that.
[09:47:01] <hayley> beach suggested that I stalk PhD students, but I never saw any in the only three weeks I went to campus.
[09:48:33] <gilberth> Or how do you think, I managed to be able to play with top of the line SGIs at that time, whenever I wanted to?
[09:48:41] <hayley> idk
[09:48:49] <gilberth> hayley: beach is right.
[09:49:00] <hayley> He tends to be usually.
[09:49:08] <gilberth> Yep.
[09:49:46] <hayley> This PHP tutorial from university (as for some reason, old course notes are google-able) states that POSIX regular expressions are easier to learn than PCRE.
[09:50:42] <hayley> "PHP used to support both POSIX and PCRE, however with newer realeases, POSIX is deprecated as the relevant PHP functions have been deprecated." Goddammit
[09:51:35] <gilberth> hayley: You infiltrate a group. In my case it was robotics and I fixed some CL software of theirs, had fun with artificial hands and some machine planing. They had the SGIs. And as I was into 3d graphics at that time, I enjoyed to be able to come by anytime at sit down at one of their workstations.
[09:51:56] <hayley> So I just have to find a CL group. Sure.
[09:52:19] <hayley> Apparently we used to have a web mirror of CLtL2. Fancy.
[09:52:42] <gilberth> You have to find a compiler group or some group concerned with automata. It's not about CL.
[09:54:05] <hayley> No matches for '<university> "regular expressions"' either.
[09:54:43] <gilberth> Milady, you need to go outside and hit the campus and talk to people.
[09:56:07] <hayley> Won't happen, most classes are still online.
[09:56:10] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:57:13] <gilberth> I figure that. Still, get a good overview about what research is happening where at your uni.
[09:59:04] <hayley> I can get $22.5k for a regex startup but no hardware loans. How weird.
[09:59:30] <gilberth> A startup?
[10:24:29] <hayley> Yes, recall I got second place in the hackathon and thus was invited to the "accelerator" programs.
[10:25:57] <hayley> "An extremely early evaluation [of Hyperscan] version even occasionally printed curse words on the console, a behaviour not normally desired in software libraries."
[10:32:13] <moon-child> reminds me of when radare2 got rid of their insults
[10:34:35] *** Quits: kuao (uid504326@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:34:38] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[10:34:38] *** ChanServ sets mode: +o MichaelRaskin
[10:42:49] <dave0> there's the hacker story of using   f001   as a canary and then a program written by a senior professor called him a fool, which did not impress the professor
[11:16:29] <hayley> One funny thing about optimistic stack allocation is that you sometimes want to GC the stack. But the stack is a generational GC on steriods; there are NO old->new pointers, and so you can just compact any part of the hot end of the stack that you like.
[11:18:37] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[11:19:08] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:19:45] <hayley> You can also promote by rearranging stack regions (just make sure you have the same number, and application code shouldn't be any the wiser), instead of immediately promoting to the "real" heap.
[11:30:42] <hayley> "Capturing subexpressions: at once stage we had an experimental product that (in block mode only, not streaming) could accurately model libpcre‚Äôs capturing semantics. This worked by scanning the data backwards with a backwards version of the pattern, making a trace of the states visited, and tracing forwards through the backward state trace in order to correctly model the behavior that libpcre would have done."
[11:47:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[11:52:32] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:57:19] *** Joins: treflip (~user@95.79.32.99)
[12:43:38] <hayley> "I recommend the following three step program. 1) Cook 18 eggs in a pot for 3 minutes. 2) Convince yourself that throughput == latency. 3) Throw away your original eggs, cook another egg for 10 seconds and bon app√©tit!"
[12:47:31] <shka> who the fuck cooks egg for 3 minutes
[12:48:35] <hayley> gilberth: w.r.t handling $ and ^ in arbitrary places, perhaps we could generate a derivative assuming that we just passed the start/end of a line, and one assuming we didn't?
[12:50:36] <hayley> It'd be 4 derivatives. But I guess we could have an analogue to DERIVATIVE-CLASSES which tells us which cases we actually have to handle.
[12:50:55] <hayley> 4 derivatives for (start of line, not start) √ó (end of line, not end)...
[12:54:53] <hayley> Or, rather, $ and ^ behave like \eps under NULLABLE when satisfied, or like √∏ when not satisfied. idk
[13:15:40] <selwyn> http://blog.nuclearsecrecy.com/2021/11/19/surely-youre-joking-comrade-beria/
[13:15:40] -ixelp- Surely You're Joking, Comrade Beria! | Restricted Data
[13:17:10] <selwyn> 3 minutes gives you a underdone egg surely
[13:17:19] <selwyn> not nice to go under that time though
[13:17:56] <shka> i literally boil my eggs for around 1.5 minutes top
[13:18:26] <selwyn> oh ok
[13:18:47] <shka> and usually not even that
[13:18:53] <shka> i want it still liquid
[13:19:06] <selwyn> how do you eat it?
[13:19:16] <shka> with a spoon
[13:19:34] <hayley> Well, yeah, but this is 18 eggs.
[13:21:46] <selwyn> i thought you meant that 3 minutes was way too short lol
[13:22:02] <shka> 3 minutes is fine
[13:22:13] <moon-child> selwyn: 3 * 18 = 54
[13:22:17] <shka> i have no desire to cook egg for more xD
[13:22:25] <moon-child> you don't need as much time when you have more eggs
[13:25:35] <hayley> How does e.g. (?>(?<=u)u)+ work? We just read the u before the current one?
[13:30:49] <hayley> PCRE thinks that a lookbehind has to be of fixed length, so that it doesn't really have to run another matcher backwards. Wonder how much I have to break derivatives in order to be able to handle another RE scanning with some offset.
[13:34:03] <hayley> Probably not by much, though now DFA generation requires you consider multiple "processes" at once.
[13:36:46] <hayley> But having multiple processes sounds an awful lot like an NFA, moreso if the additional processes do not have fixed lengths.
[13:37:21] <hayley> Though a NFA has a big / for its processes (i.e. only one has to win to match), and this has a big /\ (i.e. all have to win at some point).
[13:52:38] <hayley> But...what happens if I have something like ((?<=cc)c)*? Then the number of processes is related to string length, which won't work with a DFA.
[13:54:17] <hayley> ((?<=c*)c)* would be a better example, as those won't die off.
[13:55:09] <hayley> Hence I suspect arbitrary lookbehind/forward won't work in a DFA.
[13:55:14] <selwyn> considering making my own kefir
[13:55:21] <selwyn> too expensive from the shop
[13:58:02] <hayley> But then https://arxiv.org/abs/1907.08837 has lookahead.
[13:59:04] <hayley> No, that's not lookahead, that's just making Laurikari behave slightly.
[14:25:24] <hayley> OTOH there are finite derivatives, so an "infinite" stream of processes must have similarities. But that's a dangerous thing to prove.
[14:26:33] * hayley just wanted $ and ^ anyway. How weird.
[14:27:09] <dave0> i wish regex had never hijacked the ?
[14:27:20] <dave0> ? should be for help
[14:27:26] <selwyn> halp
[14:27:44] <dave0> help i'm trapped in a tiny box!
[14:32:24] <sham1> How would you represent an optional matcher? {0,1}?
[14:32:56] <shka> selwyn: i think that you gonna need the right bacteria for that 
[14:33:10] <shka> no idea how do you do that otherwise 
[14:33:40] <selwyn> it seems that i need 'grains'
[14:34:36] <hayley> Œµ+0+1
[14:35:20] <shka> but is kefir really expensive in the UK?
[14:35:20] <selwyn> https://www.youtube.com/watch?v=aHJpJ23iaSc seems very easy
[14:35:21] -ixelp- How to make Kefir at home, forever! - YouTube
[14:35:47] <selwyn> shka: well i can only find it in my local polish shop
[14:35:57] <shka> seriously?
[14:35:58] <selwyn> which is usually kind of expensive anyway
[14:36:06] <hayley> But the big question is how to handle (^...)|(...) since we might take the other alternation rather than lose.
[14:36:17] <shka> this is funny because kefir is not even traditionally polish
[14:36:18] <selwyn> i mean, i'm sure i could find it in some large supermarket, but the one closest to me doesn't have it iirc
[14:37:26] <shka> kefir comes from the Balkans IIRC
[14:37:31] <selwyn> north caucasus
[14:37:42] <shka> that makes sense as well
[14:38:03] <treflip>  Hehe, kefir is a popular drink here in Russia. Every grocery store has it :)
[14:38:13] <shka> well, same for Poland
[14:38:24] <shka> that's why i am surprised that it is not in the UK
[14:38:34] <treflip> I like it with muesli
[14:39:09] <shka> i usually drink it with vegies or some baguette 
[14:39:23] <selwyn> hm
[14:39:51] <selwyn> we should have it, because imo we produce more milk than we know what to do with
[14:40:02] <shka> it is not "morning" so no gilberth
[14:40:10] <shka> we can't ask how about Germany 
[14:40:48] <shka> but anyway, i think that kefir is probably one of the oldest diary product 
[14:40:55] <shka> *products
[14:41:20] <shka> i am seriously surprised that it is not widely popular in UK 
[14:41:29] <shka> seems to be untapped market 
[14:41:35] <shka> shame that it is not in the EU :P
[14:41:37] <selwyn> not necessarily that simple
[14:42:15] <selwyn> britain has a very complicated relationship with food due to the class system, which results in many unexpected situations
[14:42:25] <shka> oh, tell me about that
[14:42:33] <shka> it sounds like fun :D
[14:42:44] <selwyn> for example, polenta is considered as a food for snobby middle class elites
[14:42:56] <selwyn> because it is associated with trendy 90s cooking
[14:43:27] <selwyn> yet it is a staple food in italy (where it originates from) in large part due to its price
[14:44:11] <selwyn> i don't think kefir is as widely known in the uk, but it would probably get categorised exactly the same way
[14:44:33] <selwyn> because it is fermented, which is kind of exotic and trendy
[14:45:26] <shka> ... weird
[14:45:43] <selwyn> there is a massive snobbery and classism at work here, which is namely that if you enjoy certain types of things, you concede being working class
[14:45:47] <selwyn> which makes no sense at all
[14:46:00] <shka> ok, so let me get this strait 
[14:46:01] <selwyn> if you are really interested in this topic i recommend reading
[14:46:03] <selwyn> https://www.theguardian.com/commentisfree/2021/oct/02/food-choices-proxy-class-britain
[14:46:03] -ixelp- From polenta to lemons: the everyday foods demonised by Britain‚Äôs class wars | Jonathan Nunn | The Guardian
[14:46:26] <shka> AFAIK in UK buckwheat is not widely eaten
[14:46:34] <selwyn> again, i have to go to the polish shop to find that
[14:47:01] <shka> and if i would try to widely introduce buckwheat, it would be picked first by middle class
[14:47:32] <shka> and would be associated with it, even though it was eaten for centuries by Russian peasants because land was not fertile for anything else
[14:47:52] <selwyn> sort of yes
[14:47:57] <MichaelRaskin> I would say in Germany there is different buckwheat you will get as Bio and from Polish/Latvian-targeting-Russians shelves in a supermarket
[14:48:13] *** Joins: random-nick (~random-ni@87.116.180.220)
[14:48:28] <shka> selwyn: shame, because i really like buckwheat 
[14:49:28] <selwyn> i feel that i had a fairly typical experience of my generation by going to the polish shop after ~2005 and trying to figure out what all this weird stuff is
[14:49:44] <selwyn> often very nice, but weird
[14:50:17] *** Joins: ln43 (~ln43@user/ln43)
[14:50:24] <ln43> Hi all !
[14:50:47] <selwyn> as the article points out, this often becomes part of a culture war which gets played out in politics
[14:50:55] <selwyn> hi ln43
[14:51:16] <ln43> Just found another inspiring game that surpassed the one of yesterday (https://github.com/phoboslab/q1k3)
[14:51:24] <ln43> enough interesting, give it a check
[14:51:47] <ln43> and without the use/abuse of the google closure compiler
[14:52:12] <ln43> ok anyway anyone is using external tools so it's not so bad using even the latter
[14:53:03] <shka> selwyn: the most funny part of that all is that there is a lot of Polish immigrants in the UK
[14:53:21] <shka> and they are often members of the underclass
[14:54:23] <selwyn> although the polish in the uk are big in numbers, there are basically no polish celebrities or public figures
[14:54:28] <selwyn> and not much interest in the culture
[14:55:36] <ln43> i would like to say thanks to external eternal universal force to have make possible the concept of games and so restore myself a bit from the hardness of the "real" life
[14:55:42] <shka> but promoting food trough celebrities is a very middle class thing to do?
[14:56:49] <selwyn> uh, well promoting it through celebrity chefs is partly a thing
[14:57:06] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:57:19] <shka> selwyn: i am like that vulcan right now 
[14:57:21] <shka> https://youtu.be/hdQcGzbpN7s?t=92
[14:57:21] -ixelp- Quark solves the problem of War with Economics - YouTube
[14:58:35] <selwyn> lol
[14:59:13] <shka> selwyn: ok, so let's say there would some polish kid, that in few years will represent UK in the Olympics or something
[14:59:22] <selwyn> ok
[15:00:21] <shka> he saying that he grew big and strong because of buckwheat would shift it to the middle class category despite the fact that said kid used to be underclass?
[15:00:50] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 260 seconds)
[15:02:34] <selwyn> probably - i would doubt that his humble origins would play a role in how popular buckwheat would become
[15:02:53] <selwyn> it is not about adopting the foods of the rich in other countries
[15:03:05] <shka> right, so like sushi
[15:03:10] <selwyn> it is very difficult to answer this question, though, because these rules are unwritten and rarely get spoken about
[15:04:18] <selwyn> there are some systemic obstacles to popularising polish food in general that don't apply to other cultures
[15:04:46] <selwyn> for a start, there are very few polish restaurants in london, which i have to put down to a lack of trying
[15:05:28] <selwyn> not easy to popularise any food culture here without restaurants
[15:06:39] <shka> this stuff is fascinating to me
[15:07:09] <shka> i never really understood social life
[15:07:21] <selwyn> don't worry if you can't understand this bullshit
[15:07:29] <selwyn> we don't understand it most of the time :D
[15:07:47] <selwyn> the british class system applied to international cuisine, with baffling results
[15:08:44] <shka> yeah, but it is funny that food that is popular because it fills the belly real good at a low price in  one place is considered "trendy" somewhere else 
[15:09:16] <selwyn> it is interesting, but it upsets me a little, because it is a broken culture
[15:09:22] <selwyn> and this is partly why people eat badly
[15:09:44] <shka> it is weird to me because although i probably should consider myself "middle class" i never picked it all up 
[15:10:14] <selwyn> i seriously doubt they have this much class system built into your culture though
[15:10:14] <shka> i still largely think like a village dude 
[15:11:49] <shka> selwyn: there is some, but it is not widely distributed, being a programmer in Bia≈Çystok is completely different from being a corporate programmer in Warsaw
[15:12:04] <shka> i mean, culturally 
[15:12:09] <selwyn> oh
[15:13:29] <shka> province programmers are just your working class, but better paid
[15:13:46] <shka> they enjoy the same kind of things as everybody else
[15:13:59] <shka> though more nerdy
[15:14:02] <shka> obviously 
[15:14:28] <selwyn> bit similar here
[15:18:09] <selwyn> better to not have to buy into tech culture imo
[15:18:52] <shka> "tech culture" has some weird quirks to it 
[15:18:59] <shka> like the personality cults
[15:21:03] <shka> ok, time to go
[15:21:14] <selwyn> cya
[15:21:22] <shka> will be back tomorrow
[15:23:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:32:28] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 268 seconds)
[15:41:06] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[15:51:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Quit: Leaving)
[15:54:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a)
[16:26:12] *** Quits: treflip (~user@95.79.32.99) (Quit: ERC (IRC client for Emacs 27.2))
[17:11:33] <dave0> nite all
[17:11:37] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:49:19] *** Joins: notzmv (~zmv@user/notzmv)
[18:01:37] *** Quits: Inline (~Inline@2a02:908:1252:7a80:4744:6074:ea58:ae8a) (Quit: Leaving)
[18:03:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:dd3:2a50:6ae0:62a1)
[18:22:55] *** Joins: vats (~vats@103.158.91.169)
[19:15:45] *** Quits: vats (~vats@103.158.91.169) (Remote host closed the connection)
[19:27:36] *** Joins: vats (~vats@103.158.91.169)
[19:51:00] <gilberth> Good morning #lispcafe!
[20:05:03] *** Quits: vats (~vats@103.158.91.169) (Ping timeout: 268 seconds)
[20:09:03] <clothespin> good morning
[20:09:44] <gilberth> Hi there, long time no see.
[20:12:14] <sham1> Good $TIME_OF_DAY
[20:16:51] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Read error: No route to host)
[20:19:19] <clothespin> finally got some good sleep
[20:19:25] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[20:19:25] *** ChanServ sets mode: +o MichaelRaskin
[20:20:11] <gilberth> That's terrific. What happened the other nights?
[20:20:37] <clothespin> woke up feeling like i was run over by a truck
[20:21:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:21:37] <gilberth> Oh dear, are you sure there actually wasn't a truck travelling right through your bed room?
[20:23:01] <gilberth> Or put otherwise: Choose your place to crash more carefully; It's not the middle of a motorway. ;)
[20:24:02] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:52:35] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[20:53:08] *** Quits: X-Scale (~ARM@83.223.248.137) (Ping timeout: 268 seconds)
[20:54:14] *** X-Scale` is now known as X-Scale
[21:36:14] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[21:58:35] *** Joins: Jacobis9000 (~jonaholuf@host86-174-205-15.range86-174.btcentralplus.com)
[21:58:38] <Jacobis9000> hi!
[22:04:02] <Alfr> Jacobis9000, hello. Have a seat, but we ran out of coffee.
[22:04:35] <Jacobis9000> Oh gosh!
[22:04:39] <Jacobis9000> I'll have a beer
[22:05:17] <Jacobis9000> Well I'm having a beer :)
[22:05:35] <Jacobis9000> Old Empire IPA
[22:05:53] <gilberth> Alfr: Out of coffee? You must be kidding. Where is the management?
[22:06:40] <Alfr> gilberth, you are!
[22:07:07] <gilberth> By chance, does somebody have a recommendation of a Youtube channel of good videos on English? Grammar, vocabulary and such?
[22:08:09] <gilberth> Alfr: Oh, thanks for reminding me. So I better rush to the store for more coffee.
[22:16:24] <gilberth> Or perhaps a book?
[22:16:42] <Jacobis9000> Yes I know a book.
[22:16:51] <Jacobis9000> Ah let me think!
[22:17:06] <Jacobis9000> It is an important work on grammar... it's there somewhere...
[22:17:37] <Jacobis9000> Gah sorry, all that is coming up is Schott's Miscellany and it's not that at all.
[22:18:24] <gilberth> ok
[22:23:18] <Jacobis9000> I can't find it by searching, all I can remember now is that my copy had a white dustjacket.
[22:24:01] <Jacobis9000> It was an old book though... Maybe just go to the library and ask for a good old book on English grammar?
[22:24:57] <gilberth> Alright, then all I need to do is to find a white dust jacket; easy enough. ;)
[22:25:37] <Jacobis9000> Heheh :D
[22:26:22] <gilberth> I doubt that hitting the library would help. And I definitely won't go outside for that pandemic and for my bad health.
[22:26:43] <Jacobis9000> You don't go outside? o.O
[22:27:32] <gilberth> Nope, and where should I go anyway?
[22:32:02] <Jacobis9000> Just for a walk
[22:32:12] <Jacobis9000> It is pleasant.
[22:32:32] <Jacobis9000> Good for you :)
[22:33:03] <gilberth> It's pretty exhausting to me.
[22:37:52] <Jacobis9000> Ok fair enough
[22:38:00] <Jacobis9000> Have you got a garden you can sit in?
[22:38:13] <Jacobis9000> I say this because I would be unhappy if I could never go outside
[22:38:19] <Jacobis9000> Maybe I am projecting my own stuff onto you?
[22:39:11] <Jacobis9000> I also know all the research which shows the positive benefit being around trees and nature and animals has on one's mental health.
[22:39:32] <gilberth> we have a garden. But 9¬∞C and rain is a fairly chilling.
[22:39:50] <Jacobis9000> Fair enough, where are you from sir?
[22:40:05] <gilberth> Hamburg.
[22:40:13] <Jacobis9000> Oh lovely :)
[22:41:00] <Jacobis9000> I had a lovely time in Germany as a schoolboy. Big fan of the German people.
[22:41:02] <gilberth> Yep, a better place than where my haunted house is in rural North Germany.
[22:42:05] <Jacobis9000> Are you from a wealthy old aristocratic family? You seem that way to me haha!
[22:44:01] <gilberth> Heh, what makes you believe that?
[22:44:40] <Jacobis9000> Your old haunted house in the Prussian wilds, your aristocratic manner and interest in English grammar...
[22:45:05] *** Quits: defb (~defb@user/defb) (Read error: Connection reset by peer)
[22:45:12] <gilberth> Aristocratic manner?
[22:45:17] <Jacobis9000> Oh I remember a book I used as an English teacher, but it may be more for people with a lower level of English than you, it was called 'English Grammar in Use'.
[22:46:15] <Jacobis9000> Maybe it's just the mood I'm in, I'm listening to Debussy, I imagine you sat in a leather armchair with a fine armagnac.
[22:46:31] <gilberth> No, seriously we have aristocratic roots, but some of my ancestors was bad at handling money and so no wealth is left. Even the title was sold somewhen.
[22:47:29] <Jacobis9000> I am from a long line of commoners, farmers, miners, and railwaymen, at least on the one side.
[22:48:02] <gilberth> The armagnac would fit my previous life. Yet it's no alcohol for me for the foreseeable future.
[22:48:58] <Jacobis9000> Why's that?
[22:49:49] <gilberth> About the grammar: I still make mistakes all the time and since my formal English education cannot be regarded as even a joke as bad as it was, I figure I'll need to do something about it.
[22:50:35] <gilberth> Jacobis9000: Frankly, I had my fair share of alcohol the last couple years. It certainly is enough for a lifetime.
[22:50:57] <Jacobis9000> Ah I've had enough booze for a lifetime too! But never say never, I say!
[22:51:07] <Jacobis9000> But I don't drink much these days.
[22:51:37] <gilberth> I would rather prefer to live.
[22:52:10] <Jacobis9000> You have an alcohol related illness?
[22:52:43] <gilberth> Kind of, yes. I'll recover, slowly.
[22:53:24] <Jacobis9000> Well stay off it then, quite right.
[22:53:49] <Jacobis9000> I recommend a soda water and lime, best non-alcoholic drink available in all pubs and clubs.
[22:54:34] <gilberth> Anyhow, why isn't assembler written in a way that would be clear on what happens? Why isn't it just "%eax+=%edx" instead of "addl %edx, %eax"? And which way are those instructions written today? Source first, destination first, or some other random way?
[22:55:27] <Jacobis9000> What is the difference between Assembler and Assembly?
[22:55:40] <gilberth> Jacobis9000: There still is alcohol-free beer, that's fine.
[22:56:02] <Jacobis9000> Not available in all pubs and clubs though.
[22:56:07] <Jacobis9000> In fact, none where I live.
[22:56:13] <gilberth> What is "assembly"? Isn't that what you get after you assembled?
[22:57:16] <Jacobis9000> https://en.wikipedia.org/wiki/Assembly_language
[22:57:16] <Alfr> gilberth, how about %accumulator <- %edx + %eax ?
[22:58:24] <gilberth> Jacobis9000: It's usually available everywhere here. But then I would need to recover a bit more and pandemic needs to vanish before I'll be hitting pubs again. Which I'll really have to do since I need to get to know people and find a GF.
[22:58:29] <Jacobis9000> Ah, the 'assembler' is the program which converts assembly into machine code.
[22:59:04] <gilberth> Alfr: How is %accumalator different from %eax?
[22:59:55] <gilberth> Jacabis9000: Perhaps, but I write in "assembler" not in "assembly". I believe the former usage is more common.
[23:00:16] <Alfr> gilberth, I don't know. Maybe the obscure isa has a designated accumulator register separate from %eax?
[23:00:46] <Jacobis9000> Assembly is what I was taught the language is called. Perhaps calling it 'assembler' is an Americanism? Which indeed would be more common, but less correct.
[23:00:56] <Alfr> gilberth, note that I know very little about writing anything in assembly.
[23:00:58] <Jacobis9000> languages are called*
[23:01:29] <gilberth> Alfr: The Intel x86 ISA has only fainted traces of having a designated accumulator left over.
[23:02:47] <Alfr> gilberth, noted.
[23:03:14] <gilberth> Alfr: But you are right. When I write e.g. 8080 assembler (assembly?), you say "ADD B" and mean A=A+B as jut could do alu operations in the accumulator only -- modulo 16-bit addition which happens in HL to be precise --. The 8080 ISA therefore is a one-address ISA.
[23:03:50] <edgar-rft> I always thought of an "assembler" as a person or a thing that assembles something, in the meaning of "putting the program binary code together".
[23:04:42] <gilberth> One-address means, that instructions take one address. The accumulator is implied. A two-address ISA is what the x86 ISA is. An instruction takes two addresses. Like "add ebx, ecx" = ebx += ecx [Intel syntax]. The destination is one of the source operands.
[23:05:22] <gilberth> Three-address is what most RISC architectures use. The both sources and the destination are given. e.g. "add r1, r2, r3" = "r1 = r2+r3".
[23:06:06] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[23:06:29] <Alfr> Oh joy. But interesting still.
[23:06:33] <gilberth> egdar-rft: Technically correct. But always have seen the use to call the language, if you wish, "assembler", too. Perhaps an abbrev of "assembler code"? idk
[23:06:41] * Alfr rather sticks with lisp for the time being.
[23:07:34] <Jacobis9000> I have to pop to the shop
[23:09:04] <gilberth> Well, anyhow, I would find assembler code way more readable when using syntax like <dest> = <src-1> <op> <src-2> and perhaps [<something>] for indirection. Only trouble: This syntax would allow for more than there are instructions for.
[23:09:18] <edgar-rft> On my very first computer I myself was the assembler. I wrote the assembly instructions on a piece of paper, then I looked-up the op-codes in the CPU manual and typed hex-digits into a mobile-phone-like keyboard with a 6-digit display.
[23:09:29] <gilberth> Jacobis9000: Bring coffee, please.
[23:11:09] <gilberth> edgar-rtf: Yes, my second machine was like just that. I didn't need to lookup opcodes though, as I memorized them. But I still would need to count for jump targets. Hex-keypad plus 4+2 display. Four digits for the address, two for the byte there.
[23:17:24] <pjb> For those who would want to try this first experience, there are nowadays emulators. :-)
[23:18:10] <edgar-rft> I always thought of "assembly" being the language and "assembler" being the person or tool that translates assembly instructions into binary machine code. I also heard people talk about the "assembler language" (most often in germany) but I think they confuse things.
[23:19:31] <gilberth> Perhaps you're right.
[23:25:28] *** Quits: phossil (tophullyte@gateway/vpn/protonvpn/tophullyte) (Quit: Leaving)
[23:26:04] <edgar-rft> I'm always right [tm].
[23:28:39] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[23:33:33] <hayley> https://www.youtube.com/watch?v=_nw6j0MSW_s
[23:33:33] -ixelp- 'Dogs' Pink Floyd Demo's 1976 Alternative version rare - YouTube
[23:42:38] <gilberth> clang is funny in a way that makes me to rub eyes. It handles { int a[3]; ... } different from struct i3 { int i[3]; }; { struct i3 a; .. }. You'd believe that this would have the very same IR very early on. This doesn't seem to be the case as different code is generated. For once the former features a stack overflow test, while the latter does not.
[23:43:16] <hayley> gilberth: So, could I generate separate derivatives for end of line or not and start of line or not for ^ and $?
[23:43:38] <hayley> If the condition is satisfied, either acts like Œµ, otherwise √∏
[23:44:19] <gilberth> I noticed with GCC, too. When you wrap what would otherwise be some pointer data type inside a struct for some type checking, like typedef struct { struct blah *ptr } blah_ptr; instead of typedef struct blah *blah_ptr;, you get less efficient code.
[23:44:19] <selwyn> good morning everyone
[23:45:05] <gilberth> hayley: I wish you good luck.
[23:45:26] * hayley uploaded an image: (11KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pVWZIKIxQUZMbNHqSWPCPAMV/bruhcha.jpg >
[23:45:29] <gilberth> selwyn: Hello selwyn! You're better tonight?
[23:45:39] <selwyn> yes thank you
[23:45:59] <hayley> What did I do this time? That would be a zero width assertion.
[23:46:17] <gilberth> Yep. /me grins.
[23:47:40] <hayley> Another idea I had was to be able to fork regex "processes" which can scan backwards or forwards at some offset, but the implementation would be much harder.
[23:47:57] <hayley> It is too general for my tastes.
[23:49:33] <gilberth> I told you how to handle ^ and $, milady. And you want arbitrary lookehead and lookbehind, because your next stop will be \< and \> as well as \b or \B.
[23:50:13] <hayley> Sorry, I can't exactly check logs for ^ and $.
[23:50:43] <gilberth> Milady, are you listening when I talk to you?
[23:50:53] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[23:51:30] <hayley> Yes, but I only need these things later than when you tell me.
[23:51:36] <hayley> Sorry.
[23:53:35] <gilberth> For a lookahead the trick is to handle this by kinda spawning a second RE, which runs simultaneously to the RE per se.
[23:54:23] <hayley> .oO(Just said that.)
[23:54:35] <gilberth> You spawn it, when you do \nu($). It would need to look for either EOF or \n.
[23:55:32] <gilberth> For lookbehind you have an automaton running all the time that checks for beginning or \n. ^ becomes nullable, when that automaton is an accepting state.
[23:56:09] <gilberth> It's almost written in my draft IIRC.
