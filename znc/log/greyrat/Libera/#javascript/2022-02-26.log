[00:03:51] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[00:04:03] <blueagain> ljharb: I just discovered node has stream/web
[00:04:11] <blueagain> via the mdn page for the Streams API
[00:04:26] <stenno> indeed
[00:04:27] *** Joins: z1haze (~z1haze@user/z1haze)
[00:04:30] <stenno> finally a decent stream api
[00:04:42] <blueagain> has had it since 16.5, that's pretty cool for portability
[00:04:59] <stenno> portability is overrated in that case at least imo
[00:05:13] <z1haze> anyone familiar enough with the workspace/packages fields in a package.json to break down in laymen's terms how it works and what a realworld usecase might be?
[00:05:19] <ljharb> i don't know if it's decent
[00:05:22] <ljharb> but it's "what the web has"
[00:05:39] <ljharb> z1haze: are you familiar with any monorepo tooling?
[00:05:41] <ljharb> yarn, lerna, etc?
[00:05:49] <blueagain> stenno: if you use the es import in node your code is 1:1 portable, given you're not using any node-particular deps
[00:05:58] <ljharb> false
[00:06:02] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:06:22] <ljharb> blueagain: to be truly portable you must be using zero deps, because import maps aren't standard in browsers yet
[00:06:34] <ljharb> blueagain: native ESM has only downsides; stick to transpiled ESM.
[00:06:34] <blueagain> oh right, you don't need the import at all in the browser
[00:06:38] <ljharb> (in browsers too)
[00:06:41] <z1haze> no, unfortunately i am not
[00:06:50] <ljharb> z1haze: what about with the concept of a monorepo at all?
[00:07:01] <stenno> i thought import maps were supported by default by modern browsers
[00:07:06] <z1haze> i dont believe so. at least im not familiar with the term
[00:07:32] <z1haze> i guess i have fallen behind
[00:07:55] <ljharb> stenno: only in chrome, so no
[00:08:02] <ljharb> z1haze: monorepos aren't a good thing, you're fine
[00:08:16] <ljharb> z1haze: it's usually when a big company tries to shove multiple projects into the same repo, because they misunderstand the tradeoffs
[00:08:30] <ljharb> but, once you DO that, you need tooling to manage it, and "workspaces" is the category of tooling that does
[00:08:51] * joepie91 grumbles something about monorepos being an indictment of the sorry ideological state of modern FOSS communities
[00:09:04] <z1haze> so are they independent projects but in the same repo?
[00:09:07] <ljharb> not sure what it has to do with foss
[00:09:08] <ljharb> z1haze: yes
[00:09:18] <ljharb> z1haze: often, conceptually related, but still independent
[00:09:31] <ljharb> z1haze: for example, the airbnb styleguide is a monorepo
[00:09:33] <ljharb> z1haze: also enzyme
[00:09:38] <blueagain> is there any particular reason that imports without ending wouldn't be possible in the browser too?
[00:09:45] <ljharb> blueagain: what do you mean "without ending"
[00:09:53] <ljharb> blueagain: bare specifiers are not allowed in the browser at all
[00:10:00] <blueagain> yeah, but why not?
[00:10:02] <ljharb> blueagain: chrome supports them via import maps which are still quite nonstandard
[00:10:03] <z1haze> ljharb, can you see this? https://github.com/SalesforceCommerceCloud/sfcc-sample-apps
[00:10:15] <ljharb> blueagain: because in browsers, specifiers are URLs, and they wanted to reserve bare specifiers for possible compat with node
[00:10:50] <ljharb> blueagain: but even if import maps become standard, native esm will still be worse than transpiling and bundling, for the foreseeable future
[00:10:54] <joepie91> ljharb: monorepos are conceptually antithetical to the core concept of FOSS, which is that anybody should have the freedom to modify and fork as they desire, and that it is *desirable* for a broader community to independently iterate on designs and concepts. because with a monorepo, the cost of doing so is a lot higher - there are almost always implicit dependencies between components in a monorepo, often shared build processes, and this means that
[00:10:54] <joepie91> instead of the project being optimized for discrete forkable components, you need to pull in an entire bag of complexity in such a fork and it'll almost always be difficult to integrate with upstream components
[00:10:57] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:6940:6bd7:6496:6991) (Remote host closed the connection)
[00:11:05] <blueagain> ljharb: import maps are also supported in opera!
[00:11:13] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:6940:6bd7:6496:6991)
[00:11:14] <blueagain> the most relevant browser on planet earth
[00:11:15] <ljharb> blueagain: opera doesn't exist, that's just chrome
[00:11:20] <blueagain> oh :(
[00:11:23] <ljharb> joepie91: that seems like perhaps an unintended consequence of it, but not directly related
[00:11:25] <joepie91> TL;DR forking cost unnecessarily high in monorepos
[00:11:29] <z1haze> what im going is just some research into some new 'headless' api that salesforce has been working on and want to start on a poc. but the example projects are structured differently than im used to. im not sure if its because these packages arent public or what
[00:11:46] <ljharb> joepie91: the cost of forking can be unnecessarily high from a ton of things, and almost never is that because anyone was thinking about foss at all
[00:11:52] <joepie91> ljharb: unintended or not, the fact that this isn't widely called out and considered a Bad Thing says a lot about how 'in touch' modern FOSS communities are with the core ideological principles
[00:11:55] <ljharb> joepie91: a single large project is just as painful
[00:12:05] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:12:14] <ljharb> joepie91: sure, fair. the core principles may not be all that important anymore tho, in the same way as copyleft licenses' time has passed
[00:12:18] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:12:18] <joepie91> because to anyone who is in touch with said principles, this should stand out as an obviously undesirable situation
[00:12:27] <joepie91> they are even more important today than they were in the past
[00:12:38] <joepie91> corporate appropriation of the community does not change that
[00:12:39] <ljharb> tbf it always gives me pause when a position i hold also is held by FOSS zealots :-p
[00:12:50] <ljharb> (iow, i hate monorepos)
[00:13:00] <ljharb> z1haze: ok so this is a lerna monorepo
[00:13:14] <joepie91> there's a big difference between "someone who holds an explicitly ideological position" and "a zealot"
[00:13:22] <ljharb> joepie91: oh i didn't mean you
[00:13:35] <ljharb> z1haze: lerna.json configures it, and the root package.json has private true, and it has npm scripts in it that use lerna to manage the subprojects, which are usually in `packages/`
[00:13:53] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:14:06] <z1haze> so would i be forced to use this sort of pattern if i want to build an app using these private packages?
[00:14:13] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[00:14:32] <z1haze> you must work on salesforce if you can see that, i think. til
[00:14:41] <blueagain> what's salesforce
[00:14:49] <z1haze> pure evil
[00:14:50] <ljharb> z1haze: no, i can see it
[00:14:57] <ljharb> z1haze: private: true just means you can't publish it
[00:14:59] <ljharb> it's a public repo
[00:15:02] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[00:15:03] <z1haze> ah ok
[00:15:06] <ljharb> blueagain: also i hope that's not a serious question
[00:15:17] <ljharb> z1haze: the subpackages are probably/usually published
[00:15:18] <blueagain> ljharb: it is. I know the name, but nothing more about it
[00:15:29] <z1haze> its one of the largest companies in the work
[00:15:32] <z1haze> world* ?
[00:15:35] <blueagain> I also know that
[00:15:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:15:41] <ljharb> blueagain: it's the most popular CRM tool for the last 20+ years. basically everyone uses it.
[00:15:50] <blueagain> but I have no clue what it does
[00:15:55] <blueagain> what's CRM?
[00:15:57] <z1haze> well, its much more than a crm. its literally everything
[00:15:58] <ljharb> blueagain: CRM is "customer relationship management"
[00:16:02] <blueagain> oh
[00:16:03] <z1haze> customer relation manager
[00:16:08] <blueagain> so what people used to do with email?
[00:16:10] <ljharb> blueagain: so, any company with a sales staff or a customer service department probably uses it
[00:16:11] <z1haze> but its evolved into just a monster of everything
[00:16:17] <ljharb> blueagain: "used to do" 30 years ago, sure
[00:16:23] <ljharb> blueagain: nobody does it with just email as of this millenium
[00:16:53] <blueagain> but what does it actually give you as an added value? like send automated reminder mails to your customer?
[00:17:21] <z1haze> i think he just said what it gives in the definition of crm
[00:17:28] <ljharb> blueagain: i'm really not trying to make a sales pitch for salesforce here, but such a tool can make or break your entire company
[00:17:38] <blueagain> ok, noted
[00:18:16] <ljharb> a company interacting with customers that doesn't use a CRM tool is like a software company that doesn't use version control
[00:18:30] <stenno> my previous company developed a CRM which was mainly used by our customer for datamining their customers
[00:18:45] <z1haze> sure, lots of crm out there
[00:18:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:19:07] <blueagain> oh
[00:19:08] <z1haze> salesforce is just the business and has the most connections with virtually everything
[00:19:13] <blueagain> so it's basically like google analytics
[00:19:16] <blueagain> on steroids
[00:19:25] <z1haze> its a piece
[00:19:34] <ljharb> blueagain: kind of. GA is for passive visitors, this is for anyone you interact with
[00:19:36] <z1haze> literally take everything you could ever potentially want to do for your business, and salesforce does it
[00:19:52] <z1haze> and anything it doesnt do itself, it probably owns
[00:20:03] <blueagain> but it can't make me rich out of nothing? I have to have a good product to pitch
[00:20:05] *** Joins: _xxoxx (~Junxter@121.237.60.195)
[00:20:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[00:20:16] <z1haze> are you kidding me
[00:20:22] <z1haze> people will buy anything
[00:20:24] <ljharb> lol
[00:20:25] <stenno> you can do datamining and, say, targeted advertisement
[00:20:39] <z1haze> not even joking. you can sell literally anything
[00:20:39] <ljharb> blueagain: no, it's a tool you use to sell something that you already have
[00:20:40] *** Joins: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39)
[00:20:45] <z1haze> if you have the right marketing. its going to sell
[00:20:46] *** Quits: Junxter (~Junxter@222.95.164.193) (Ping timeout: 245 seconds)
[00:21:07] <blueagain> so we don't actually need people working in marketing anymore?
[00:21:29] <ljharb> blueagain: of course you do, it's not automated
[00:21:36] <ljharb> blueagain: again it's like version control
[00:21:37] <stenno> if you have a good datamining model, its worth a lot already
[00:21:40] <ljharb> blueagain: git doesn't mean you don't need engineers
[00:21:46] <blueagain> hm
[00:21:50] <ljharb> blueagain: it's just that your engineers can't do a good job without version control
[00:22:21] <blueagain> I guess I don't know enough about marketing to understand the analogy
[00:22:25] *** Joins: pavonia (~user@user/siracusa)
[00:22:34] <stenno> (we are talking about millions of customers here)
[00:22:50] <ljharb> blueagain: you only have to know about git to understand the analogy :-)
[00:23:00] <stenno> or like, a bonus point system, where you get an account, and when you buy something you get points, like bonus miles or the like
[00:23:07] <stenno> that is also handled by a crm
[00:23:11] <blueagain> I see
[00:23:34] <blueagain> so it's like a collection of tools that support marketing people?
[00:23:48] <ljharb> yes
[00:23:53] <ljharb> and sales, and customer service
[00:23:56] <z1haze> also things like live chat on your website, which will automatically create a case, and link it to a contact and/or a lead. and that gets auto routed to an agent based on the skills the agent needs based on the inquiry. it just goes and goes
[00:23:59] <ljharb> and the executives that want reporting on all of those
[00:24:14] <blueagain> oh, that sounds more tangible already
[00:24:30] <z1haze> salesforce core is "robust" to put it nicely
[00:24:34] <blueagain> so I imagine it's something like
[00:24:38] <z1haze> its so big, and so extensible that its a nightmare to use
[00:24:58] <blueagain> someone writes an email to my company, this system opens up a case and routes it to the person who needs to take care of it? (or possibly 'triage' it?)
[00:25:19] <ljharb> sure
[00:25:35] <z1haze> yes. and then it collects all sorts of analytics, and then builds campaigns based on that. its like someone said earlier. big datamining
[00:25:36] <blueagain> sounds interesting indeed
[00:26:13] <stenno> yeah datamining and targeted advertisement is where it really gets interesting imo
[00:26:42] <stenno> a certain customer bought this and that, lets present to him an advertisement for another product we think he might like
[00:26:48] <blueagain> I was thinking that it was interesting if this system analyses the mail and uses learning methods to route it properly
[00:27:02] <z1haze> not on its own
[00:27:07] <z1haze> but it can
[00:27:35] <z1haze> theres a lot of configurations you can check boxes and stuff. salesforce pushes hard on "clicks not code" but still a lot of code to write
[00:27:52] <blueagain> and what's the business model?
[00:27:57] *** Quits: hashfunc1818 (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be) (Ping timeout: 240 seconds)
[00:27:58] <blueagain> you pay monthly to use x features?
[00:28:12] <blueagain> or they get % on sales?
[00:28:22] <z1haze> depends on the service
[00:28:37] <stenno> i'd assume that it is a simple licensing model
[00:28:45] <stenno> i doubt that they get % on sales
[00:28:53] <sheetjs> n> typeof undefined
[00:28:53] <jellobot> (okay) 'undefined'
[00:28:58] <z1haze> the ecommerce platform is contract but generally its % of each transaction
[00:29:04] <blueagain> I see
[00:29:10] <stenno> n> typeof null
[00:29:11] <jellobot> (okay) 'object'
[00:29:16] <z1haze> so it is % of sales
[00:29:21] <stenno> oh ok
[00:29:32] <z1haze> but that's just for the ecommerce stuff
[00:29:32] <sheetjs> writing a sed script to strip out references to `process`
[00:29:38] <blueagain> oh wow, they have a huge tower in san francisco
[00:29:47] <blueagain> that looks like a spaceship
[00:30:01] <ljharb> sheetjs: are you really trying to use naive string operations to transform code? just use babel
[00:30:05] <z1haze> they have an event each year in cali. it takes over the whole multiple entire city blocks in san fran
[00:30:11] <sheetjs> webpack does not honor the browser field node suppression when the base package has type: module
[00:30:14] <z1haze> i think its called dreamforce or something i cant remember
[00:30:19] <z1haze> they literally control the city though
[00:30:21] <sheetjs> which was ok in webpack 4
[00:30:38] <ljharb> lol webpack 5 is so broken
[00:30:40] *** Quits: phrix (~phrix@185.76.176.47) (Quit: Leaving)
[00:30:42] <sheetjs> but webpack 5 changed the behavior, so in fact the simplest thing to do is bring out the sed
[00:30:46] <z1haze> i used to go when work paid for it. we don't go anymore
[00:30:51] <ljharb> sheetjs: you can have a "browser" condition in "exports" tho
[00:30:59] <ljharb> sheetjs: and why would you use type module?
[00:31:01] <z1haze> :( i finally bit the bullet and updated to webpack 5 a month or so ago
[00:31:04] <blueagain> didn't realise SF had such skycrapers, always thought LA was the west coast city in the US with many skycrapers
[00:31:14] <blueagain> skyscrapers*
[00:31:15] <z1haze> they have them in every big city dude
[00:31:22] <z1haze> new york, chicago, la
[00:31:24] <stenno> no more process in webpack 5
[00:31:39] <ljharb> lol
[00:31:43] <sheetjs> so angular started complaining about CJS modules
[00:31:49] <ljharb> stenno: you can fix webpack 5 to properly provide node globals again
[00:31:49] <sheetjs> big scary yellow messages about performancd
[00:31:57] <ljharb> sheetjs: type module isn't "not a CJS module" tho
[00:32:05] <ljharb> but as i said, you should just let angular complain. screw angular.
[00:32:57] <sheetjs> google decided to go with the name and shame approach to get projects to move to ESM
[00:33:35] <sheetjs> "name" via bundlephobia and "shame" via angular, so the doublet is technically accurate
[00:34:15] <ljharb> ok
[00:34:17] <ljharb> but you can still ignore it
[00:34:27] <ljharb> and, their heuristic is bad; type module doesn't mark a package as "ESM"
[00:34:37] <ljharb> it only changes .js to mean ESM. you can still ship only .cjs in it
[00:34:53] <ljharb> or, you can have the root say type module, but put all your code in src, and have src/package.json say type commonjs :-p
[00:37:32] <blueagain> interesting, node supports "exports", but npm only documents "main"
[00:37:38] <blueagain> in package.json
[00:37:41] *** Quits: bambanxx (~bambanx@2800:150:106:1061:20bf:ac88:1ad0:6e39) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:38:09] <ljharb> npm doesn't care about main either
[00:38:28] <blueagain> oh, why does it document it then
[00:38:36] <ljharb> history
[00:39:27] *** Joins: kakashiAL (~kakashi@105.157.34.82)
[00:40:35] <sheetjs> there's one line referencing process
[00:40:43] <sheetjs> var has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node);
[00:40:56] <sheetjs> just using sed "s/require('.*')/undefined/g;s/ process / undefined /g;s/process.versions/({})/g", that becomes
[00:41:01] <sheetjs> var has_buf = (typeof Buffer !== 'undefined' && typeof undefined !== 'undefined' && typeof ({}) !== 'undefined' && !!({}).node);
[00:41:12] <sheetjs> probably should take out the Buffer as well
[00:41:15] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[00:41:38] <blueagain> typeof undefined !== 'undefined' is always false
[00:41:48] <sheetjs> that's the goal
[00:42:00] <sheetjs> the goal is to force it to be undefined without webpack trying to do something magical
[00:42:23] <blueagain> isn't it just simpler to set has_buf to false
[00:42:28] <blueagain> or am I missing something
[00:42:33] *** Joins: TubbyTommy (~blank@user/slimmyjimmy)
[00:43:02] <ljharb> sheetjs: just configure webpack to shim process, like it's supposed to
[00:43:14] <sheetjs> hmm like s/has_buf = (.*)/has_buf = false/g
[00:43:14] <ljharb> sheetjs: i'm really confused why you keep trying to solve these problems in the hardest possible ways
[00:43:30] <sheetjs> webpack doesn't honor those from the library if the type is set to "module"
[00:43:56] <sheetjs> the issue is that the package includes both CJS and ESM scripts and people are explicitly using an override to use the CJS files
[00:43:57] *** Quits: twiclo1 (~twiclo@mail.twil.cx) (Ping timeout: 240 seconds)
[00:44:06] *** Quits: _xxoxx (~Junxter@121.237.60.195) (Quit: Leaving)
[00:44:10] <ljharb> right but like i said, don't set it to module
[00:44:12] <sheetjs> the old fix was to set package.json field
[00:44:24] <ljharb> you can also set type module in the root and set type commonjs in a subfolder
[00:44:33] <sheetjs> between a rock ("webpack") and a hard place ("google")
[00:44:34] <ljharb> angular's dumb heuristic will miss it, and webpack should detect it properly
[00:44:40] <ljharb> right but "google" doesn't matter here
[00:44:45] <ljharb> they bailed on their attempt to build this into chrome
[00:44:59] <ljharb> bundlephobia is just a website, and angular can easily be badgered into fixing their heuristic
[00:45:21] <ljharb> and, you're sheetjs. you don't need to compete, there's no viable alternative - so why do you care if they shame you?
[00:45:50] <ljharb> it'd be different if there were other JS xls libraries out there worth using. but there aren't. so you have all the leverage, and you don't ever have to care about external pressures.
[00:45:53] <sheetjs> you might understand the warnings and why they are misguided
[00:46:07] *** Joins: twiclo1 (~twiclo@vpn.utahbroadband.com)
[00:46:19] <blueagain> I don't get the part about shaming
[00:46:34] <blueagain> would people stop using something because it uses cjs and not esm? (I mean users, not developers who contribute)
[00:46:42] <sheetjs> but the userbase doesn't, and google's scary message is concerning
[00:47:02] <blueagain> the work I work at uses sheetjs
[00:47:12] <blueagain> I don't think cjs was ever a concern or a question
[00:47:22] <blueagain> the company*
[00:47:24] <sheetjs> blueagain: there's a constant battle between "functionality" and "code size"
[00:48:01] <blueagain> sheetjs: I get it, I try to keep my own stuff as minimal as possible
[00:48:11] <blueagain> but I wouldn't do something or not do something because someone tried to shame me
[00:49:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:49:05] <blueagain> I might change it if the arguments hold, but not because of the shaming per se
[00:50:09] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[00:50:36] *** Quits: stagas (~stagas@2a02:587:c404:7045:19a6:ba60:5eda:c6f6) (Ping timeout: 240 seconds)
[00:51:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:51:23] *** Joins: stagas (~stagas@2a02:587:c42d:c386:8863:779d:c066:1c7f)
[00:51:38] <blueagain> lol, I broke bundlephobia
[00:51:50] <blueagain> Module parse failed: Cannot use keyword 'await' outside an async function (7:19)
[00:52:05] <blueagain> they need to update their node version
[00:58:07] <systemfault> wtf is bundlephobia...
[00:58:35] <systemfault> I usually add dependencies if I have to... not for fun.
[00:59:23] <sheetjs> "find the cost of adding a npm package to your bundle"
[00:59:38] <systemfault> Find the cost or rewriting a complete package.
[00:59:41] <systemfault> *of
[01:00:13] <sheetjs> google proposed integrating this into their lighthouse performance metrics and best practices
[01:00:27] <systemfault> Google proposed to make Dart a main web language.
[01:00:32] <sheetjs> e.g. if you are using MomentJS, it would recommend you use something else
[01:01:00] <systemfault> I can propose you to send me a nice bottle of whisky...
[01:01:27] <stenno> wait in which node version can you use await outside of async functions (disregarding TLA)?
[01:01:58] <stenno> or was it exactly TLA
[01:02:08] <blueagain> in non
[01:02:09] <blueagain> e
[01:02:11] <blueagain> it was TLA
[01:02:42] <stenno> ah
[01:02:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:04:00] <blueagain> most alternatives I get on xlsx though are larger
[01:04:41] <sheetjs> the relevance to sheetjs is that google invested $10K at the end of July 2019 and the first commit after the investment was in September 2019.  The commit added exactly one new category: "Excel File Readers, Manipulators & Writers"
[01:05:24] <blueagain> that category sucks for the others, not for xlsx though
[01:05:32] <sheetjs> the reason it shows smaller is because we added the ESM build
[01:05:36] <blueagain> only thing that's smaller is excel4node
[01:06:12] <sheetjs> the CJS build is still larger.  node-xlsx is literally a light wrapper around xlsx so you can get a sense for what the size would have been
[01:06:31] <blueagain> oh
[01:06:52] <blueagain> 6.5s on slow 3G! my goodness!
[01:07:14] *** Quits: darkdrgn2k (~darkdrgn2@23-233-76-221.cpe.pppoe.ca) (Quit: Leaving)
[01:08:01] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[01:08:24] <sheetjs> the overwhelming majority of the code size comes from a bunch of encoding tables we have to include to support XLS files.  the workaround for sites that just use XLSX was to create a separate build that did not include the XLS features.  that build is significantly smaller
[01:08:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[01:08:56] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Read error: Connection reset by peer)
[01:09:18] <sheetjs> the whole thing worked properly in the past because webpack actually honored the `browser` field node suppression by default.  but now with `type: module`, webpack 5 does something unexpected and now we have to manually strip out the parts webpack doesn't like
[01:11:04] <blueagain> npm says unpacked size is 10 MB on xlsx
[01:11:11] <blueagain> that is without the xls support?
[01:11:20] <sheetjs> yeah there are a number of files in the bundle
[01:12:00] <sheetjs> there's a script for nodejs, a script for esm, a script for photoshop, and a handful of browser scripts for different use cases
[01:12:10] <blueagain> I see
[01:12:38] <systemfault> sheetjs: What does the script for photoshop do?
[01:13:18] <sheetjs> in photoshop and indesign, you can write custom automation scripts.  Some users use the library to read from files and perform actions
[01:13:33] <systemfault> From excel files? Crazy
[01:14:55] <sheetjs> adobe really should consider just embedding V8 rather than their own JS engine.  there are funny grammatical issues
[01:15:21] <sheetjs> https://cloud.githubusercontent.com/assets/6070939/24274581/8ce50c70-0fff-11e7-962f-56ab6509dea0.png
[01:16:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:16:43] <sheetjs> the error was cut off but the reported problem is that /=+$/ is not treated as a regexp
[01:16:56] <blueagain> do you really need the es 3 compat though?
[01:17:05] <blueagain> you could write modern and use babel, or am I missing something?
[01:17:17] <sheetjs> photoshop in 2022 doesnt support modern JS
[01:17:59] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[01:18:17] <sheetjs> it also doesn't play nice with uglify-js output
[01:18:19] <sheetjs> https://github.com/mishoo/UglifyJS/issues/1930
[01:18:51] *** Quits: kakashiAL (~kakashi@105.157.34.82) (Ping timeout: 256 seconds)
[01:18:52] <sheetjs> the issue here was that uglify-js (and terser) strip the trailing semicolon in a switch block
[01:19:04] <blueagain> oh, so basically, babel can't output something that would work in photoshop?
[01:19:05] <sheetjs> and for whatever reason photoshop expects it
[01:19:16] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[01:19:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:19:46] <sheetjs> more energy would be spent fighting the tooling to get it to produce something that would work
[01:20:27] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[01:20:33] <sheetjs> easier to just write bits and use simple unix tools like cat / sed / awk to weave together a script that photoshop will be happy with.  one nice side effect is that writing an ESM version is straightforward
[01:22:07] <blueagain> https://www.npmjs.com/package/babel-preset-extendscript
[01:22:10] <blueagain> wouldn't that be an option?
[01:22:29] <blueagain> (isn't actively maintained as far as I can see)
[01:23:25] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[01:24:42] *** Joins: onosendi (~onosendi@user/onosendi)
[01:25:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:25:57] <sheetjs> strictly speaking its not impossible to write a babel plugin, but "energy spent figuring out the babel plugins and dealing with the babel ecosystem" >>>> "adding one simple sed line to a makefile"
[01:27:06] <blueagain> yeah, just thought it would be neat if you just specified the different targets you need and bam
[01:28:36] *** Quits: pmercado (~pmercado@186.107.40.57) (Ping timeout: 240 seconds)
[01:31:07] *** Quits: dmaislin_ (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:31:35] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[01:33:52] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:35:25] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-cd96-22ac-0dbe-ac68.res6.spectrum.com)
[01:35:53] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[01:36:03] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[01:36:11] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[01:38:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[01:41:43] <theskillwithin> today I switched to flavored coffee beans, not regretting it
[01:43:16] *** Quits: TubbyTommy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[01:43:23] <theskillwithin> Ukraine is game to you!?!  esmmmack!
[01:48:19] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[01:48:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[01:49:40] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[01:51:36] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[01:52:17] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[01:52:25] *** Joins: TubbyTommy (~blank@user/slimmyjimmy)
[01:52:54] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[01:54:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:57:30] *** Joins: crashrep (~crashrep@user/crashrep)
[01:57:46] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c47f:a31f:302d:f1aa) (Ping timeout: 260 seconds)
[02:02:11] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 256 seconds)
[02:02:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:02:27] *** Joins: velix (~velix@user/velix)
[02:02:58] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c824:ac82:a20e:dd72)
[02:05:15] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:05:37] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:09:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[02:09:42] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:10:38] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:6940:6bd7:6496:6991) (Quit: Leaving...)
[02:11:25] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[02:12:48] *** Quits: coder7of9 (~coder7of9@user/coder7of9) (Quit: Client closed)
[02:13:51] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 272 seconds)
[02:14:06] *** Joins: stenno (~stenno@user/stenno)
[02:14:14] *** Joins: teut (~teut@122.161.83.81)
[02:14:14] <teut> https://dpaste.org/A35iÂ  what kind of code is this?
[02:14:33] <teut> this is very weird use of React.createContext api
[02:15:12] <onosendi> teut: do you mean the TypeScript part? Otherwise it looks pretty common.
[02:15:38] <teut> no what I had seen wasÂ Â  wrapping your jsx with the tags
[02:15:47] <teut> what I had seen till now*
[02:16:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:16:49] <teut> https://reactjs.org/docs/context.html#when-to-use-context
[02:17:05] <teut> I m used to this kind of use
[02:20:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[02:21:22] <onosendi> teut: You'd wrap your entire `<App />` with `<AuthProvider><App /></AuthProvider>`. Then you have access to `const { login, loggedIn, logout } = useAuth();` anywhere in your application.
[02:23:09] <teut> hmm, nice.
[02:23:31] *** Joins: zebrag (~chris@user/zebrag)
[02:25:10] <teut> thanks for the help onosendi
[02:25:16] <onosendi> teut: any time.
[02:25:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[02:28:16] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:28:48] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:34] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:33:43] *** Joins: pizdets_ (~pizdets@183.182.115.3)
[02:34:12] *** Joins: crashrep (~crashrep@user/crashrep)
[02:34:32] *** Quits: pizdets (~pizdets@183.182.111.223) (Ping timeout: 265 seconds)
[02:36:56] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:37:31] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:7576:c270:5b87:7182:8cf1)
[02:38:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:38:59] <ljharb> sheetjs: sure but who cares if the userbase is worried? *they don't have another choice*
[02:39:26] <ljharb> sheetjs: keeping the userbase happy is great when they're right, but when they're wrong, and you're the only qualified alternative, it's better to ignore them
[02:40:33] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:41:01] *** Joins: trevors (~trevors@user/trevors)
[02:41:31] *** Quits: VoidSync (~sync@user/voidsync) ()
[02:42:12] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-cd96-22ac-0dbe-ac68.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:45:01] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[02:45:19] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:48:46] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:50:43] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[02:51:29] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:54:02] *** Joins: cheater (~Username@user/cheater)
[03:01:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[03:04:17] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:04:29] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[03:06:43] *** Joins: audio (~audio@user/audio)
[03:10:25] * velix runs nude through the channel
[03:14:35] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[03:15:07] *** Joins: eugercek (~user@user/eugercek)
[03:15:11] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[03:17:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:19:23] *** Joins: filename (~kilitary@kilitary.xyz)
[03:20:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:22:43] *** Joins: wyclif (~wyclif@user/wyclif)
[03:22:44] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[03:27:29] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:29:41] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:32:29] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:c270:5b87:7182:8cf1) (Remote host closed the connection)
[03:32:33] *** Joins: N4buc0 (~N4buc0@201.22.12.94.dynamic.adsl.gvt.net.br)
[03:33:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:34:50] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[03:36:17] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[03:38:32] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:38:38] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[03:39:59] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:35] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:40ae:8beb:c034:8e08)
[03:44:32] *** Joins: filename (~kilitary@kilitary.xyz)
[03:46:02] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:40ae:8beb:c034:8e08) (Ping timeout: 260 seconds)
[03:54:41] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:56:00] *** Joins: trevors (~trevors@user/trevors)
[03:56:04] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:57:10] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[03:58:05] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[04:01:10] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[04:03:04] *** Quits: nomic (~nomic@185.198.243.229) (Quit: Leaving)
[04:04:31] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:05:58] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[04:07:29] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c824:ac82:a20e:dd72) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:09:28] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:11:04] *** Joins: blahboybaz (~blahboyba@c-67-161-98-150.hsd1.wa.comcast.net)
[04:13:26] <blahboybaz> When you chain methods together - ie:  let something = runc1().func2().func3();   What order do they execute in and what happens? Does the result of the execution get passed to the next one in the chain? If so, in what way does it get passed? Added to the this of the next function or something?
[04:13:43] <blahboybaz> runc()\func()
[04:13:57] *** Joins: panella32 (~panella32@154.6.22.12)
[04:15:43] <ljharb> blueagain: left to right. how else would it work
[04:15:47] <ljharb> blahboybaz: left to right. how else would it work
[04:16:10] <blahboybaz> from the end back towards the equal sign (why not?)
[04:16:19] <Decker> the next function does not get a return value from previous
[04:16:27] <ljharb> blahboybaz: because that would be completely ridiculous and no programming languages work like that
[04:16:31] <Decker> it's called on the return value actually
[04:16:43] <ljharb> blahboybaz: `func1()` is called, the return value has `.func2` accessed off of it, it's called with the return value of func1 as the receiver, and then the return value of `func2()` has `.func3` accessed off of it, and then it's called with the return value of func2 as the receiver
[04:17:06] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:17:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:17:57] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:17:59] <blahboybaz> When you say is called on the return value are you describing somethinkg like..  func1() {return func2();} ...
[04:18:08] *** Parts: panella32 (~panella32@154.6.22.12) ()
[04:18:14] <blahboybaz> func2() {return func3();}
[04:18:16] <ljharb> blahboybaz: no
[04:18:33] <ljharb> blahboybaz: like `const a = func1(); const b = a.func2(); const c = b.func3()`
[04:18:43] <ljharb> blahboybaz: iow, the same way method chains work in every single other programming language
[04:19:11] <ljharb> (and then ofc `const something = c;`)
[04:19:58] <blahboybaz> What can I do to understand this better? Is there something in particular that I would read?
[04:20:12] <blahboybaz> to understand what happens when you chain functions
[04:20:14] <ljharb> blahboybaz: and to be clear, i'm not implying you asked a dumb question. i'm just confused where you'd have a different expectation from
[04:20:18] <ljharb> !eloquent @ blahboybaz
[04:20:18] <jellobot> blahboybaz, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[04:21:25] *** Joins: ferdna (~ferdna@user/ferdna)
[04:21:38] <Maxdamantus> There is a slight exception with lazy languages, though it doesn't quite apply to the example, since the example involves dynamic dyspatch based on something produced by the "previous" function call.
[04:21:45] <blahboybaz> ljharb: In the absense of knowledge (and I know nothing about how chaining works in any language) the answer could, potentially, be anything. Then you add a little common sense to it and it narrows it down to a couple possibilites but still nothing conclusiv
[04:21:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[04:22:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[04:22:31] <Maxdamantus> (JavaScript isn't a lazy language though)
[04:22:34] <ljharb> blahboybaz: since you're writing in english, it seems reasonable to assume that everything by default is left to right, top to bottom
[04:22:38] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:23:00] <ljharb> blahboybaz: that ofc isn't entirely accurate for code, but it'd start you off decently enough
[04:23:04] <ljharb> blahboybaz: either way, read eloquent
[04:23:41] <blahboybaz> I'm not looking for something that covers the entirety of the language then try to find some part thats relevant. Is there something I can look at that would talk about how chaining does what it does in a technincal way of explaining it? Somthing that's reliable?
[04:23:55] <Decker> many vector math libraries use a chaining API; that is they always return the target vector; so each return value can immediately be used as an objct and call another method on it
[04:24:14] <Decker> yes it's reliable... it's really not magic
[04:26:31] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:26:53] <blahboybaz> I just meant that on the internet you encounter a lot of people talking about things -- part of why I come on these channels is I have a cognitive issue with reading (comprehending things throught that medium). Sometimes, if its just an article I can get through it and get something out of it but I've got a stack of buoks sitting next to me that I can't get through.
[04:27:12] *** duch_kazatel is now known as robertmaxrees
[04:28:12] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:28:38] <ljharb> blahboybaz: chaining is a language basic, and you really do need to learn the entirety of the language
[04:28:49] <Decker> there's no reason you can't ust expandit as ljharb's example abouve with const a const b etc... if you don't feel comfortable understanding the return of a function is an object to call a method on, break it into separate steps.
[04:28:55] <ljharb> blahboybaz: JS and web dev take way more skill and rigor than would allow someone to just dip in casually
[04:29:55] *** Joins: pmercado (~pmercado@186.107.40.57)
[04:32:37] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:34:19] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:35:07] *** Joins: crashrep (~crashrep@user/crashrep)
[04:35:51] <blahboybaz> I'm learning about all of it (one bite at a time) I can't do it all at once (I've never met anyone that can). Today I'm learning about chaining. Yesterday it was something different. There is not way to explain to someone what you have already comprehended about somthing nor am I sure it would be helpful. Anyone who has ever tried to learn to code discovers that it takes rigor (the discipline
[04:35:57] <blahboybaz> itself makes that obvious). I'm here year after year because I want to and because I haven't given up (miraculously so).
[04:36:00] <blahboybaz> Decker: When it comes to where a return value is stored I only know if it being stored in a variable. But a function is not a variable (that I know of at my level of understanding) - yet it is a function that the returning function is chained to (not a variable). So when I hear that the furction returns the value to another function I want to know how. With a variable it is through the use of "=".
[04:36:06] <blahboybaz> That I am aware of with functions it is when a function is called and an arguments is "passed in". So how does what is returned for the chained function get in there? Get into the function it is chained to?
[04:36:42] <Decker> it sits around in memory anonymous... you can't use it unless you use it in that statement block/expression.
[04:36:45] <blahboybaz> That's why I suggested that maybe "this" was being used to pass the value (though I don't know)
[04:36:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[04:37:13] <blahboybaz> So a reference to the value is passed?
[04:37:14] <Decker> it is; but the 'this' was just the treturn value from the previous function... it's not a new calling convention
[04:37:33] <blahboybaz> hmm
[04:38:39] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:38:41] <blahboybaz> Well thanks for talking about it with me
[04:39:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[04:41:24] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:42:33] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Client Quit)
[04:43:13] *** Quits: Vladimir_ (~vlad@23.111.121.4) (Quit: Lost terminal)
[04:44:44] *** Quits: kerat58 (~tarek58@user/tarek58) ()
[04:46:40] <velix> I (h)ate Stripe!
[04:48:27] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929)
[04:50:29] *** Joins: Intelo (~Intelo@88.244.88.201)
[04:51:03] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:51:26] <theskillwithin> I find stripe a lot easier than alternatives
[04:52:05] <Intelo> Hi
[04:52:06] <Intelo> Is it possible to have one token for CI / github actions for all the repositories I have so I don't have to got to settings of each repository and setup a token there. I want to use one global token. My use case to have `npm run lint` in javascript projects.
[04:53:09] <velix> theskillwithin: I'm just afraid I forgot something in the webhook ;)
[04:53:41] <velix> theskillwithin: So I'm reading it over and over again.
[04:53:53] <velix> in English and German (which differ by wording)
[04:55:04] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[04:55:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:55:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:55:41] *** Joins: wroathe (~wroathe@user/wroathe)
[04:57:52] *** Quits: blahboybaz (~blahboyba@c-67-161-98-150.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[04:58:03] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929) (Quit: I have gone to sleep. ZZZzzzâ€¦)
[05:01:07] <ljharb> velix: you ate it? whatâ€™s the parens around the h for
[05:01:19] <ljharb> Intelo: yes but not easily
[05:01:35] <ljharb> Intelo: but also thereâ€™s already a GitHub token in actions by default, what other token do you need
[05:01:50] <Intelo> secrets.GITHUB_TOKEN? My use case to have `npm run lint` in javascript projects.
[05:02:06] <velix> ljharb: In German we say: "Ich hab's gefressen" (gefressen = slang for gegessen) ~ I ate it. When you're fed up with something.
[05:02:43] <ljharb> Intelo: you donâ€™t need a token for that, the linter is just eslint
[05:02:51] <ljharb> velix: lol ok, noted
[05:02:59] <Intelo> ljharb so what exactly should be done?
[05:03:25] <ljharb> Intelo: for that? Nothing, it just works
[05:03:42] <Intelo> ljharb can you paste me your .yml in .github/workflow?
[05:04:17] *** Joins: crashrep (~crashrep@user/crashrep)
[05:04:46] <ljharb> Intelo: i have 300 repos, pick one
[05:05:01] <ljharb> Intelo: very few things need secrets of any kind
[05:05:33] <Intelo> any.. :)
[05:05:53] <ljharb> Intelo: like just go to my GitHub and pick one
[05:07:26] <Intelo> https://pastebin.mozilla.org/OmnnUPuA
[05:07:38] <Intelo> oh ok
[05:08:02] *** Joins: onosendi (~onosendi@user/onosendi)
[05:10:32] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[05:14:22] <Intelo> ljharb this one I pasted above works though. Thanks!
[05:15:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:15:32] <Intelo> ljharbÂ  just curious, How much /many times can I run this on free account in a month? or per day? https://pastebin.mozilla.org/OmnnUPuA
[05:18:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:18:13] *** Joins: Guest4913 (~blahboyba@c-67-161-96-93.hsd1.wa.comcast.net)
[05:18:23] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[05:20:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:21:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:22:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:23:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:28:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:28:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:28:02] *** Joins: wroathe (~wroathe@user/wroathe)
[05:30:57] <ljharb> Intelo: infinite
[05:31:00] <ljharb> public repos are free
[05:31:14] <ljharb> i have 300+ repos and every CI run has 200-400 jobs.
[05:31:53] <theskillwithin> ljharb you missed my Seinfeld reference earlier =]
[05:32:02] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:32:21] <ljharb> ah, so i did
[05:32:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:35:02] <Intelo> ljharb I see. mine are private on free plan. so I guess I will get 2000 minutes as per https://github.com/pricing which means if my `npm i; npm run lint` takes 1 minutes, I can have 2000 times of lint checks.
[05:35:31] <ljharb> private repos are very limited, yes
[05:38:17] *** Joins: henry404082 (~henry4040@175.181.176.30)
[05:39:19] *** Joins: trevors (~trevors@user/trevors)
[05:40:05] *** Quits: henry40408 (~henry4040@175.181.177.116) (Ping timeout: 256 seconds)
[05:40:05] *** henry404082 is now known as henry40408
[05:40:29] *** Quits: henry40408 (~henry4040@175.181.176.30) (Client Quit)
[05:46:09] *** Joins: bambanxx (~bambanx@2800:150:106:1061:ec1d:f40d:a839:ab6)
[05:47:00] *** Quits: pmercado (~pmercado@186.107.40.57) (Ping timeout: 240 seconds)
[05:48:31] *** Joins: Lionyx (~user@179.232.62.41)
[05:52:27] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[05:58:19] *** Joins: tabakhase (tabakhase@user/tabakhase)
[06:08:37] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:09:18] *** Joins: justAstache (~justache@user/justache)
[06:12:53] *** Joins: Rockwood (~Rocky@user/rocky)
[06:14:23] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cfa2:d3d5:9e90:b1e8)
[06:18:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:22:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:22:12] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[06:29:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:30:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:33:22] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[06:34:39] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[06:34:39] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:36:22] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[06:40:20] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[06:40:23] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[06:40:32] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[06:44:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[06:46:13] *** Quits: Lionyx (~user@179.232.62.41) (Remote host closed the connection)
[06:47:38] *** Joins: filename (~kilitary@51.15.9.205)
[06:48:58] *** Quits: filename (~kilitary@51.15.9.205) (Remote host closed the connection)
[06:50:37] *** Quits: shailangsa (~shailangs@host109-152-9-189.range109-152.btcentralplus.com) (Ping timeout: 256 seconds)
[06:50:56] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:52:24] *** Joins: silverdust (~silverdus@user/silverdust)
[06:58:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[06:59:49] *** Joins: wyclif (~wyclif@user/wyclif)
[07:04:18] *** Joins: matsaman (~matsaman@user/matsaman)
[07:04:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:05:05] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:05:22] *** Joins: wyclif (~wyclif@user/wyclif)
[07:10:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:10:51] *** Joins: wyclif (~wyclif@user/wyclif)
[07:11:23] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[07:13:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:15:24] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[07:15:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:16:35] *** Joins: wyclif (~wyclif@user/wyclif)
[07:17:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:17:37] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[07:18:31] *** Joins: Betal (~Betal@user/betal)
[07:19:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:21:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[07:22:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:22:44] *** Joins: henry40408 (~henry4040@175.181.176.30)
[07:23:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:23:54] *** Joins: mikey_p (uid129477@id-129477.uxbridge.irccloud.com)
[07:27:10] *** Guest4913 is now known as blahboybaz
[07:27:27] <blahboybaz> Seems almost like chaining with arrow functions
[07:28:50] <blahboybaz> Is that the samw way chaining with function calls works?
[07:29:15] <blahboybaz> same
[07:32:28] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:35:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:35:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:35:15] *** Joins: wroathe (~wroathe@user/wroathe)
[07:43:48] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[07:44:10] <Decker> can be?  the arrows would have to return an equivalent 'this'
[07:44:18] <Decker> or whatever they themselves are calling
[07:50:25] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[07:50:42] *** Joins: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com)
[07:51:14] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[07:52:20] <austincheney> blahboybaz, function chaining typically implies methods available from a prototype, such as:  myString.slice(0, 5).toUpperCase().split("")
[07:52:46] <austincheney> blahboybaz, in that case all the methods are available from String.prototype
[07:53:19] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[07:54:09] <austincheney> blahboybaz, the "this" reference in a function points to that which calls the function, which in the above example is the "myString" reference.
[07:54:41] <austincheney> blahboybaz, arrow functions are different because the "this" reference is lexical so instead it points to that which contains the arrow function
[07:56:55] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:59:40] <blahboybaz> austincheney: I see
[08:00:27] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:00:58] <blahboybaz> I was asking around earlier about how chaining works (how it does what it does if you were to peel back the curtiain and look inside) - then I came across this (the code I posted) and it made me think of it again
[08:03:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[08:12:09] *** Joins: nomic (~nomic@185.198.243.229)
[08:12:56] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[08:19:24] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[08:19:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:22:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:24:50] *** Joins: audio (~audio@user/audio)
[08:24:51] <bluehoney> i'm not a js expert, but doesn't chaining take the output of a previous function and pass it into a new function
[08:25:23] <bluehoney> i.e. example.toUpperCase().slice()
[08:27:48] <bluehoney> maybe some different behavior with promises considering .then() and .catch()
[08:36:27] <Decker> it doesn't really pass it to the new function; it calls the next function on that returned object
[08:36:44] <Decker> which implies passing as 'this' since it'sjust object.method()
[08:37:09] <bluehoney> ah cool
[08:40:34] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:40:49] *** Joins: TheFreim (~user@2604:2d80:6305:5a00::1002)
[08:42:59] <TheFreim> Is there a good way of cutting specific parts out of an HTML string? E.x. I have a long string of HTML returned from an api and I want to retrieve only elements in a certain div. I know I can do this through some searching/splitting/looping/regex type action but maybe theres a better cleaner way
[08:44:14] <blahboybaz> TheFreim: regex? idk. I'm just guessing.. trying to be helpful
[08:44:19] <blahboybaz> xpath?
[08:44:24] <ljharb> blahboybaz: ftr you weren't authed when you said your Curried thing, so nobody saw it
[08:44:44] <ljharb> blahboybaz: it's not chaining unless it's using `.` or `[]` to grab a property off the previous return value
[08:44:47] <blahboybaz> ljharb: thanks for pionting that out
[08:44:50] <blahboybaz> i didn't know
[08:45:34] *** Joins: silverdust (~silverdus@user/silverdust)
[08:45:40] <blahboybaz> on both things
[08:45:58] <TheFreim> blahboybaz: xpath looks interesting ill check that out
[08:46:40] <blahboybaz> I mean, I know that to implement chaining involves "." or "[]" but I was more focusing on how chaining does what it does
[08:46:43] <blahboybaz> its all good
[08:47:16] <blahboybaz> TheFreim: right on
[08:47:21] <ljharb> it's just that a method returns an object, that has more methods
[08:47:31] <ljharb> that's all chaining is
[08:47:54] <blahboybaz> has more methods inside the object you mean?
[08:48:37] <ljharb> blahboybaz: they don't have to be the same object
[08:48:57] <ljharb> blahboybaz: you can call a method on object A that returns object B. then call a method on object B that returns object C. that's chaining
[08:49:07] <ljharb> it's just that they're *usually* the same object, or same kind of object.
[08:49:19] <blahboybaz> so function(){ return {function(){ return { ... }}}}
[08:49:20] <blahboybaz> ?
[08:49:46] <ljharb> blahboybaz: no, those are just funcitons
[08:49:49] <ljharb> chaining requires *methods*
[08:49:54] <ljharb> an object that HOLDS a function
[08:50:05] <ljharb> `foo()()()()` isn't chaining
[08:50:17] <blahboybaz> hmm
[08:50:27] <ljharb> blahboybaz: i know you said you're trying to learn a little piece but the way to do that is a page of Eloquent at a time
[08:51:45] <blahboybaz> Someone does (it that way) but you have to realize I'm 47, went through college (most of the way) and have my own unique struggles. You realize there exist people with learning disabilities right?
[08:51:54] <blahboybaz> You know that's out there?
[08:52:12] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[08:52:22] <ljharb> i don't have a degree at all. what's your point
[08:52:34] <ljharb> if you're saying you can't learn from a book, then i'm not sure how that's different than reading irc
[08:53:01] <blahboybaz> Not everyone learns the same but it doesn't make any difference for them if others can't understand that
[08:53:17] *** Quits: TheFreim (~user@2604:2d80:6305:5a00::1002) (Remote host closed the connection)
[08:53:24] *** Quits: Cyp (~cyp@213.237.87.172) (Ping timeout: 240 seconds)
[08:53:31] <ljharb> i do understand that. i'm not saying a book, or this book, is the only way through. i'm trying to politely say that you're focusing too deeply on a specific emergent property of the way objects and methods work
[08:53:45] <ljharb> you need to first learn how objects and functions work - language basics - and then you'll understand chaining intuitively
[08:53:53] <theskillwithin> maybe they will turn the book into a movie someday
[08:54:33] <blahboybaz> Thanks for pointing that out. Perhaps I have learned something about myself along the way that I can not explain to others
[08:54:36] <theskillwithin> https://beginnerjavascript.com/
[08:56:04] <KevinX> Not much to chaining anyway. You find out pretty fast if you're doing it wrong.
[08:56:42] <KevinX> Common mistake is to call array methods on objects
[08:56:59] <blahboybaz> Its cool - I get so frustrated about the way convos go. I used to blow the eff up (in these channels). But I've learned (or started to) that that does no good
[08:57:19] <blahboybaz> I imagine there's some people around here that remember how I was
[08:58:02] <ljharb> under this name, or a different one
[08:58:17] <KevinX> like because you got frustrated with people explaining something?
[08:59:06] <theskillwithin> there is a skill to asking for help,  you get better at it over time, and get faster responses
[08:59:18] <blahboybaz> Because people seem to gravitate toward judging why you want to know what you are asking about and worse than that whether you ought to want to know that
[08:59:27] <blahboybaz> Then they make assumptions
[08:59:41] <blahboybaz> Then they show that they've completely ignored stuff you've said
[08:59:59] <blahboybaz> I have to stop and realize (try to) that they're (hopefully) trying to help
[09:00:02] <ljharb> judging why people want what they're asking about is necessary, because most people fail to provide it
[09:00:11] <ljharb> almost every single question people ask is an xy problem
[09:00:19] <theskillwithin> !xy
[09:00:19] <jellobot> theskillwithin, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[09:01:10] <blahboybaz> Alomost every question I ask has to do with HOW something does what it does. Occasionally its about how to do something
[09:01:35] *** Joins: silverdust (~silverdus@user/silverdust)
[09:02:19] <ljharb> sure. but it's still useful to know why you want to know that - including, what prompted it
[09:02:43] <ljharb> and in the case of it being a fundamental language thing, it's important for us to know what other gaps you may have
[09:04:41] <blahboybaz> For me I'm just taking it as it comes. I happen to be working through a series of challenges in a code camp but occasionally something I'm working on raises other, deeper questions. Somtimes things (questions about things) just pop into my head from God knows where
[09:04:45] <blahboybaz> thats my life
[09:06:13] <KevinX> the question might be too hard too if you're asking how things work behind the scenes. Like if you ask how .sort() works I coulnd't tell ya. quick sort?
[09:06:37] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[09:06:41] <blahboybaz> When I try to read long books (textbooks) my attention span just doesn't sustain it - it very quickly just becomes blah blah blah and I get nothing out of it. This is the reason I try to pick out specific things to learn and just add one thing to another - little by little
[09:06:47] <blahboybaz> sorry I was wrinting that before
[09:06:54] <ThePendulum> I don't think how sort works is defined by the language, is it?
[09:06:56] <blahboybaz> KevinX: I hear ya
[09:07:10] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:07:17] <ThePendulum> not sure what v8 uses
[09:07:25] <theskillwithin> learn by doing then
[09:07:32] <KevinX> ThePendulum up to the engine i think
[09:07:48] <ThePendulum> don't just do then, also do catch and await
[09:07:56] <ljharb> ThePendulum: it is
[09:08:03] <ljharb> ThePendulum: it is defined to be a stable sort
[09:08:12] <ljharb> as of ES2018 iirc
[09:08:42] <blahboybaz> theskillwithin: That's exacly how I try to appoach it but sometimes even that is inadequate. Sometimes it seems like something mistical is going on right outside the reach of my understanding; and, if I could just grasp it, a whole universe of knowledge (in that language) would open up to me.
[09:08:49] <blahboybaz> Like chaining for example
[09:09:08] <blahboybaz> mystical?
[09:09:35] <ThePendulum> ljharb: so I guess a bit of both then? stable sort is a property of an algo and not one algo right?
[09:09:38] <Decker> there's really nothing magic about it; and insisting there is isn't helping you
[09:10:03] <ljharb> ThePendulum: true. but it's specified enough
[09:10:03] <KevinX> Everything is magic until you understand it
[09:10:05] <blahboybaz> its an allegory (allegory? is that right?)
[09:10:08] <ljharb> blahboybaz: no, it's not
[09:10:21] <blahboybaz> it wasn't meant literally but I think that's obvious
[09:10:21] <ljharb> blahboybaz: it is literally just an object method that returns an object, that has more methods
[09:10:33] <ljharb> oh you mean your magic comment is an allegory, sure
[09:10:39] <blahboybaz> yeah
[09:11:14] <KevinX> the only gotcha with chaining is that you need to make sure the object returned from the previous method has the next method on its prototype
[09:11:15] <blahboybaz> What KevinX said I agree with " Everything is magic until you understand it "  and so I aim to understand it
[09:11:26] <KevinX> Maybe that is confusing
[09:11:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:12:03] <blahboybaz> KevinX:  discovering how something works makes it not "magic" anymore (so to say)
[09:12:14] <KevinX> but tooling usually helps there more than anything else
[09:12:22] <blahboybaz> ljharb: I get that - I undestand object prototypes a little bit
[09:12:27] <theskillwithin> within reason, learning takes time,  experience, learning how to be resourceful,  learning how to learn
[09:12:33] <KevinX> and executing the code and seeing the negative feedback
[09:12:54] <blahboybaz> ev in js is an object and prototypes define them
[09:13:03] <ljharb> not everything
[09:13:06] <ljharb> there's also primitives.
[09:13:16] <ljharb> and not every object has a prototype; an object can have a null prototype
[09:13:48] <ThePendulum> I still don't quite understand prototypes. or I guess I think I do but I've never used them and I feel like I would have if I understood them properly
[09:14:01] <KevinX> famously, `Object.create(null)`
[09:14:50] <KevinX> ThePendulum you mean adding methods to the prototype?
[09:14:58] <blahboybaz> ljharb: you mean like the operators?
[09:15:16] <ljharb> blahboybaz: huh? no
[09:15:20] <ljharb> blahboybaz: numbers are primitives, not objects
[09:15:24] <ljharb> !primitives
[09:15:24] <jellobot> ljharb, undefined, boolean, number, string, symbol
[09:15:28] <ljharb> that needs updating
[09:15:36] <ljharb> !prototype intro @ ThePendulum
[09:15:37] <jellobot> ThePendulum, A short (and practical) explanation of how prototypal inheritance works in JavaScript: https://hughfdjackson.com/javascript/prototypes-the-short%28est-possible%29-story/ For a much more in-depth introduction, see !oop
[09:15:42] <blahboybaz> I see
[09:15:54] <theskillwithin> ljharb for record and tuple?
[09:16:04] <ljharb> no, for bigint
[09:16:08] <theskillwithin> ah
[09:16:17] <blahboybaz> That seems interesting (at the link)
[09:17:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:17:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:17:03] *** Joins: wroathe (~wroathe@user/wroathe)
[09:18:32] <blahboybaz> " The Short(est Possible) Story " <-- that made me laugh   :)
[09:19:38] <ThePendulum> KevinX: I've just never really felt a need for inheritance or doing foo.do() instead of do(foo)
[09:20:03] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:20:11] <ThePendulum> It's been 15 years lol
[09:21:06] *** Joins: han-solo (~han-solo@user/han-solo)
[09:21:22] <KevinX> I used it more often a decade ago.
[09:21:26] <wyclif> ljharb: "The Pendulum"?
[09:21:33] <KevinX> Im not even sure it's worth learning about now
[09:21:44] <KevinX> Beyond that it exists and what it means
[09:21:52] *** Joins: Aaron_ (~Aaron@c-73-73-137-44.hsd1.il.comcast.net)
[09:21:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[09:22:23] <blahboybaz> ThePendulum: That freaked me out. I was just thinking about time (the nature of time and how you can get engrossed in something and seems like only a moment went by when really its been a lot longer).. then I look down and see "It's been 15 years.."
[09:22:25] <KevinX> classes are  better abstraction, or skip OOP entirely and onyl use composition
[09:22:29] <blahboybaz> Oh WOW
[09:23:01] <ljharb> wyclif: yes?
[09:23:05] <ljharb> wyclif: what's your question
[09:23:08] <theskillwithin> if you wan't to trip out about time checkout Severance on apple tv.  no spoilers plz
[09:23:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:23:25] <ThePendulum> ljharb: just tell them a little about me
[09:23:46] <ljharb> well, it swings back and forth, according to the motion of the earth's movement
[09:23:53] <KevinX> ThePendulum wait, it's about "time" - that's a spoiler in itself. I didn't know that lol
[09:23:58] <KevinX> theskillwithin *
[09:23:58] <ThePendulum> I think they are confused why you put me in @ when linking that mdn
[09:24:07] <ljharb> then they can ask that
[09:24:08] <blahboybaz> theskillwithin: Severence hun? sounds neat
[09:24:17] *** Joins: silverdust (~silverdus@user/silverdust)
[09:24:55] <wyclif> ljharb: What is the Pendulum in that article? It's not the name of the blog
[09:25:00] <KevinX> I watched the first two episodes. mmm Not sold on it yet but I have hopes
[09:25:26] *** Joins: filename (~kilitary@51.15.0.88)
[09:25:38] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:26:07] <KevinX> wyclif it was a tag intended to bring attention to a user here with the nick ThePendulum
[09:26:26] <wyclif> Ah I see now, that just threw me
[09:26:40] <ljharb> wyclif: it's not in the article, right. i was pointing the factoid at a user
[09:26:44] <ljharb> !about @ wyclif
[09:26:44] <jellobot> wyclif, I'm written entirely in JavaScript using Node.js. Look under the hood on Github: <https://github.com/ljharb/jellobot>
[09:26:51] <KevinX> your client doesn't highlight that? wyclif
[09:27:05] <wyclif> Not really
[09:27:22] <ThePendulum> what client are you using?
[09:27:23] <KevinX> what are you using? Just curious what others use
[09:27:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:27:29] <wyclif> although I have recently changed my theme and scripts and things for the first time in a while, so maybe that';s it
[09:27:29] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:27:29] *** Joins: wroathe (~wroathe@user/wroathe)
[09:27:36] <wyclif> irssi
[09:27:48] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.4)
[09:28:36] <ljharb> irccloud ftw
[09:28:57] *** Joins: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[09:30:12] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[09:31:54] <theskillwithin> KevinX i like trippy stuff like that, its study of consciousness adjacent.  or maybe iv been taking too many edibles
[09:32:20] <KevinX> ep 3 just came out. ill take one and watch it later then ha
[09:32:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:36:12] *** Quits: wez (~wyoung@about/web/wez) (Quit: BBL)
[09:37:46] *** Quits: voltage_ (~voltage@user/voltage) (Quit: Leaving)
[09:38:04] *** Joins: _filename (~kilitary@188.242.105.134)
[09:40:03] *** Quits: filename (~kilitary@51.15.0.88) (Ping timeout: 256 seconds)
[09:40:08] *** Quits: suss (~user@user/suss) (Remote host closed the connection)
[09:42:01] *** Joins: suss (~user@user/suss)
[09:42:20] *** Quits: mikey_p (uid129477@id-129477.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:42:51] *** Joins: jazzy (~jaziz@user/jaziz)
[09:45:10] *** Joins: Rockwood (~Rocky@user/rocky)
[09:46:53] *** _filename is now known as filename
[09:47:01] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[09:47:05] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:48:40] *** Joins: D4mned (~D1mned@212.101.253.19)
[09:48:54] *** Joins: filename (~kilitary@51.159.55.86)
[09:49:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:51:11] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[09:56:36] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[09:57:22] *** Joins: _filename (~kilitary@188.242.105.134)
[09:59:03] *** Quits: filename (~kilitary@51.159.55.86) (Ping timeout: 256 seconds)
[09:59:28] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:59:46] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[10:00:34] *** Joins: filename (~kilitary@67.207.94.176)
[10:01:17] *** Quits: filename (~kilitary@67.207.94.176) (Remote host closed the connection)
[10:02:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[10:03:09] *** Quits: _filename (~kilitary@188.242.105.134) (Ping timeout: 272 seconds)
[10:07:23] *** Quits: bambanxx (~bambanx@2800:150:106:1061:ec1d:f40d:a839:ab6) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[10:17:59] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:20:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:23:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:28:31] *** Quits: N4buc0 (~N4buc0@201.22.12.94.dynamic.adsl.gvt.net.br) (Ping timeout: 256 seconds)
[10:30:03] *** Joins: k8yun (~k8yun@user/k8yun)
[10:33:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cfa2:d3d5:9e90:b1e8) (Ping timeout: 240 seconds)
[10:39:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:45:44] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:60bd:eab0:b8ef:4eaa)
[10:50:28] *** Joins: silverdust (~silverdus@user/silverdust)
[10:55:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[10:57:25] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[10:57:43] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:59:00] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 240 seconds)
[11:02:41] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[11:03:35] *** Quits: p-i-_ (~Ohmu@183.89.30.105) (Remote host closed the connection)
[11:03:47] *** Quits: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[11:04:01] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[11:04:17] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:c8be:56be:db7d:b5f2)
[11:04:26] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[11:06:34] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[11:07:44] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 272 seconds)
[11:08:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:09:21] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Quit: l8r)
[11:09:40] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:09:50] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Remote host closed the connection)
[11:10:36] *** Quits: stagas (~stagas@2a02:587:c42d:c386:8863:779d:c066:1c7f) (Ping timeout: 240 seconds)
[11:10:44] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:11:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:12:04] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Client Quit)
[11:12:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:12:55] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:13:08] *** Joins: tex (~super@user/dix)
[11:13:18] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Remote host closed the connection)
[11:14:12] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:14:21] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:15:15] *** Joins: sa0 (~sa0sin@88.120.82.205)
[11:17:49] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[11:18:25] *** Joins: wolfshappen (~waff@irc.furworks.de)
[11:18:54] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Client Quit)
[11:19:04] *** Joins: stenno (~stenno@user/stenno)
[11:19:22] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:21:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:21:09] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Client Quit)
[11:21:32] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:23:03] *** Quits: nomic (~nomic@185.198.243.229) (Quit: Leaving)
[11:23:21] *** Joins: relms (~relms@user/relms)
[11:24:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:28:01] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[11:28:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:28:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:28:17] *** Joins: wroathe (~wroathe@user/wroathe)
[11:29:07] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:14c2:362b:4032:a582)
[11:29:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.133) (Read error: Connection reset by peer)
[11:30:49] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[11:31:28] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Quit: l8r)
[11:31:55] *** Quits: Pajus (~Pajus@user/pajus) (Quit: Lost terminal)
[11:32:10] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:32:16] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Remote host closed the connection)
[11:32:44] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:fc98:bb5f:7d17:fcbd) (Ping timeout: 250 seconds)
[11:33:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[11:33:08] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[11:33:26] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:38:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:4dc6:c962:9f81:ed65)
[11:41:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:43:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:48:47] *** Quits: doc|home (~doc@user/doc) (Read error: Connection reset by peer)
[11:48:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:50:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:55:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[11:55:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:03:56] *** Quits: pycode (~pycode3@2001:b07:5d28:551:4dc6:c962:9f81:ed65) (Ping timeout: 250 seconds)
[12:04:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:60bd:eab0:b8ef:4eaa) (Ping timeout: 240 seconds)
[12:04:50] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Quit: Leaving)
[12:06:44] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[12:06:55] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8108:1493:c1db:6c2d)
[12:07:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[12:08:36] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:14:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:17:09] *** Joins: doc|home (~doc@user/doc)
[12:19:03] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 256 seconds)
[12:21:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:21:34] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:21:51] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[12:25:06] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[12:25:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[12:25:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:28:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:30:54] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:31:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:36:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:37:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:38:33] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[12:39:48] *** Quits: D4mned (~D1mned@212.101.253.19) (Read error: Connection reset by peer)
[12:39:52] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:c8a4:5259:5fd4:c7df)
[12:41:05] *** Joins: D4mned (~D1mned@89.108.142.39)
[12:44:03] *** Joins: Junxter (~Junxter@121.237.60.195)
[12:48:21] *** Quits: D4mned (~D1mned@89.108.142.39) (Quit: Leaving)
[12:50:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:56:26] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:40ae:8beb:c034:8e08)
[12:57:01] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[12:57:18] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:c8a4:5259:5fd4:c7df) (Remote host closed the connection)
[12:57:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:57:32] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:c8a4:5259:5fd4:c7df)
[12:58:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:05:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[13:07:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[13:07:07] *** Joins: eugercek (~user@user/eugercek)
[13:07:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:12:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:13:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:15:30] <sheetjs> n> var dst = Array.from({length:20}), src = Array.from({length:500000}); dst = dst.concat(src); dst.length
[13:15:31] <jellobot> (okay) 500020
[13:16:09] <stenno> n> [].concat([[1]])
[13:16:10] <jellobot> (okay) [ [ 1 ] ]
[13:16:17] <sheetjs> FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
[13:16:30] <sheetjs> probably coming from the actual entries
[13:17:52] *** Joins: average (uid473595@user/average)
[13:18:27] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[13:21:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:22:04] <sheetjs> yeah that was it, using too much memory
[13:22:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:22:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:23:40] *** Joins: taupiqueur (~taupiqueu@232.144.204.77.rev.sfr.net)
[13:24:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:25:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:26:36] *** Quits: blahboybaz (~blahboyba@c-67-161-96-93.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[13:27:36] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4175-9514-3609-a368.res6.spectrum.com)
[13:29:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:29:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:29:03] *** Joins: wroathe (~wroathe@user/wroathe)
[13:31:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:32:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:34:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[13:37:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[13:40:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:41:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:43:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:43:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:45:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:47:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:47:58] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[13:49:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:54:13] *** Joins: han-solo (~han-solo@103.82.184.202)
[13:54:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:55:17] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Ping timeout: 240 seconds)
[13:57:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:58:39] <Rockwood> sheetjs, o/
[14:00:34] *** Quits: han-solo (~han-solo@103.82.184.202) (Changing host)
[14:00:34] *** Joins: han-solo (~han-solo@user/han-solo)
[14:01:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[14:02:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:04:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:04:42] *** Quits: tex (~super@user/dix) (Quit: tex)
[14:06:42] *** Quits: taupiqueur (~taupiqueu@232.144.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[14:08:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:09:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[14:11:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:14:20] *** Joins: ejjfunky (~ejjfunky2@125.164.21.83)
[14:15:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:17:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:22:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:25:07] *** Quits: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com) (Remote host closed the connection)
[14:25:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:26:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[14:28:33] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[14:28:34] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[14:29:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:29:07] *** Joins: eugercek (~user@user/eugercek)
[14:37:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:38:56] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[14:39:12] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[14:40:44] *** Joins: kmh (~kmh@2a00:6020:5004:6800:b805:34de:7020:2510)
[14:43:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:43:14] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:387b:dd5f:4504:33ce)
[14:46:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:c8be:56be:db7d:b5f2) (Ping timeout: 252 seconds)
[14:47:42] *** Quits: kmh (~kmh@2a00:6020:5004:6800:b805:34de:7020:2510) (Remote host closed the connection)
[14:47:53] *** Joins: kmh (~kmh@2a00:6020:5004:6800:b805:34de:7020:2510)
[14:52:15] *** Joins: silverdust (~silverdus@user/silverdust)
[14:57:00] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[14:57:40] *** Joins: tarek58 (~tarek58@user/tarek58)
[14:59:16] *** Joins: litches (~litches@160.242.39.18)
[14:59:46] *** Quits: litches (~litches@160.242.39.18) (Client Quit)
[14:59:49] *** Joins: voltage_ (voltage@user/voltage)
[15:01:30] *** Joins: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com)
[15:07:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[15:10:41] *** Quits: ejjfunky (~ejjfunky2@125.164.21.83) (Quit: Leaving)
[15:10:56] *** Quits: suss (~user@user/suss) (Ping timeout: 272 seconds)
[15:11:43] <silly> my favorite commit messages "aio" and "ketchup"
[15:12:04] *** TubbyTommy is now known as SlimmyJimmy
[15:12:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:13:48] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[15:17:10] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4175-9514-3609-a368.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:22:29] *** Joins: han-solo (~han-solo@user/han-solo)
[15:23:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:24:21] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[15:25:37] *** Joins: stagas (~stagas@2a02:587:c42d:c386:e334:2751:48e4:366c)
[15:25:39] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:26:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:26:12] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:26:48] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[15:27:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:32:42] <Rockwood> \o/
[15:34:10] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[15:36:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:38:39] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[15:43:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:46:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:50:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:54:18] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:57:01] *** Joins: src (~src@user/src)
[15:57:47] *** Joins: suss (~user@user/suss)
[15:58:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:02:51] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[16:03:22] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:04:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:07:08] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[16:09:49] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:c8a4:5259:5fd4:c7df) (Remote host closed the connection)
[16:10:34] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:e5f1:eb2:1937:622)
[16:11:40] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[16:12:57] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:23:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:27:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:29:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:29:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:35:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:36:25] *** Joins: filename (~kilitary@51.158.144.31)
[16:39:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:39:55] *** Joins: teut (~teut@122.161.83.81)
[16:41:17] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:42:31] *** Joins: fef (~thedawn@user/thedawn)
[16:42:51] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:44:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[16:47:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:47:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:47:25] *** Joins: wroathe (~wroathe@user/wroathe)
[16:47:59] *** Joins: _filename (~kilitary@188.242.105.134)
[16:48:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:49:32] *** Quits: filename (~kilitary@51.158.144.31) (Ping timeout: 240 seconds)
[16:52:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:52:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:58:17] *** Quits: _filename (~kilitary@188.242.105.134) (Ping timeout: 240 seconds)
[17:05:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:07:34] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[17:08:56] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:09:28] *** Joins: filename (~kilitary@51.15.0.88)
[17:09:48] *** Joins: trevors (~trevors@user/trevors)
[17:11:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:11:49] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[17:13:44] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[17:15:22] *** Quits: filename (~kilitary@51.15.0.88) (Remote host closed the connection)
[17:15:27] *** Joins: silverdust (~silverdus@user/silverdust)
[17:17:15] *** Joins: stenno (~stenno@user/stenno)
[17:18:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:20:11] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[17:21:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[17:22:46] *** Joins: Giovanni (~Giovanni@216.73.161.200)
[17:23:35] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:24:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:24:50] *** Joins: cheater (~Username@user/cheater)
[17:25:58] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:26:06] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:387b:dd5f:4504:33ce) (Remote host closed the connection)
[17:27:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:27:39] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:c96d:948a:38af:d765)
[17:31:58] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:32:46] *** Joins: wroathe (~wroathe@user/wroathe)
[17:33:43] *** Quits: SlimmyJimmy (~blank@user/slimmyjimmy) (Quit: Going offline, see ya! (www.adiirc.com))
[17:33:53] *** Quits: Giovanni (~Giovanni@216.73.161.200) (Ping timeout: 250 seconds)
[17:34:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:34:58] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[17:39:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:40:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:48:02] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Quit: WeeChat 3.4)
[17:48:16] *** Joins: karabaja4 (~karabaja4@dh207-93-84.xnet.hr)
[17:57:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:58:30] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[17:58:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:08:40] *** Joins: trevors (~trevors@user/trevors)
[18:09:01] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[18:09:02] <recyclehero> I have used mongodb connection promise style before.  a createMongoClient function which returned a resolved promise returning the client
[18:09:27] <recyclehero> now in the docs they moved to await async and I have no idea how to implement that with the new method
[18:10:33] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:10:36] <stenno> so you used to be createMongoClient(...).then(...) ?
[18:10:44] <stenno> or what do you mean with 'promise style'?
[18:10:54] <stenno> async/await are just syntax sugar for .then
[18:11:01] <stenno> they are compatible in that sense
[18:11:43] <stenno> `foo().then(result => console.log(result))` is the same as `const result = await foo(); console.log(result);`
[18:11:43] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[18:11:57] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[18:12:16] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[18:12:26] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:e5f1:eb2:1937:622) (Quit: Leaving...)
[18:13:02] <stenno> you can await any function returning a promise
[18:13:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:13:45] *** Joins: silverdust (~silverdus@user/silverdust)
[18:14:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:14:48] <leduyquang753>  /exit
[18:14:55] <leduyquang753> Oops.
[18:14:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:27] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[18:20:33] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:20:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:20:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:20:51] *** Joins: wroathe (~wroathe@user/wroathe)
[18:23:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:24:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:25:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:26:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:27:52] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[18:28:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:29:37] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 256 seconds)
[18:29:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:29:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:29:43] *** Joins: wroathe (~wroathe@user/wroathe)
[18:33:12] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[18:34:07] *** Joins: masoudd (~masoudd@user/masoudd)
[18:34:27] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[18:36:53] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[18:42:48] <recyclehero> stenno: yeah i went and read what you are confirming.
[18:43:16] <recyclehero> maybe I am wondering how to close the connection in dependency injection style
[18:43:19] <recyclehero> https://docs.mongodb.com/drivers/node/current/fundamentals/connection/#connect-to-a-mongodb-server-on-your-local-machine
[18:48:16] *** Joins: ferdna (~ferdna@user/ferdna)
[18:48:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[18:49:02] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[18:50:04] <recyclehero> Your paste can be seen here: https://dpaste.com/DYR7XDM9K
[18:50:14] <recyclehero> see I dont understand what I have done previosuly
[18:50:45] <recyclehero> what is returned, what does the then and the catch are doing after return statement
[18:50:48] <recyclehero> ?
[18:52:28] *** Joins: junebug (~junebug@2600:1700:3db0:2540:71e8:c719:1f8c:6b4f)
[18:55:16] <silly> return client.connect()
[18:56:19] <silly> yours should do the same tho
[18:56:45] <silly> except .then(()=>client) this looks wrong
[19:01:58] *** Joins: pulse (~pulse@user/pulse)
[19:08:47] *** Joins: terminalpusher (~terminalp@2a01:586:91e7:1:6498:94da:f7da:72b2)
[19:16:00] *** Joins: silverdust (~silverdus@user/silverdust)
[19:23:19] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[19:25:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:28:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:36:56] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[19:40:20] *** Joins: d3x0r (~d3x0r@user/d3x0r)
[19:41:03] *** Quits: Decker (~d3x0r@user/d3x0r) (Ping timeout: 256 seconds)
[19:41:10] *** d3x0r is now known as Decker
[19:45:45] *** Joins: _sa0sin_ (~sa0sin@88.120.82.205)
[19:46:32] *** Quits: terminalpusher (~terminalp@2a01:586:91e7:1:6498:94da:f7da:72b2) (Remote host closed the connection)
[19:46:59] *** Joins: david__ (~david@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7)
[19:47:12] *** Joins: Naan (~naan@user/naan)
[19:48:37] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:40ae:8beb:c034:8e08) (Ping timeout: 240 seconds)
[19:54:42] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[20:02:14] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[20:07:18] *** Joins: silverdust (~silverdus@user/silverdust)
[20:12:13] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[20:13:00] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:17:38] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[20:18:54] <ljharb> david__: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[20:25:14] <david__> Hi everyone
[20:25:17] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:25:31] <david__> I'm having a hard time with clearInterval. Can someone telle me why it doesn't work ? https://ubri.fr/test.html
[20:27:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:28:17] *** Joins: ubri (~ubri@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7)
[20:28:57] <ljharb> david__: are you also ubri?
[20:29:17] <ljharb> davve: so, first of all, avoid setInterval/clearInterval entirely
[20:29:20] <ljharb> david__: ^
[20:29:23] <ubri> Yes. That's me. Just tryjing web interface
[20:29:29] <ubri> trying
[20:29:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:29:35] <ljharb> david__: second, please use codesandbox instead of your own website :-)
[20:29:44] *** Quits: ubri (~ubri@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7) (Quit: Client closed)
[20:29:51] <ljharb> david__: and third, because it's `clearInterval`, not `ClearInterval`.
[20:30:03] <ljharb> david__: but also, JS should only be in a .js file, never inside an html file directly
[20:30:18] <david__> Only that. You're kidding...
[20:30:38] <david__> I feel so dumb...
[20:31:07] <ljharb> if your JS is in a separate JS file, you can lint it with eslint, and it'd have caught that
[20:31:29] <david__> Finaly... Three hours and couldn't understand. Thanks a lot.
[20:32:30] *** Joins: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[20:33:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:33:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:33:41] *** Joins: wroathe (~wroathe@user/wroathe)
[20:36:21] *** Joins: average (uid473595@user/average)
[20:38:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:40:31] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[20:41:01] *** Joins: silverdust (~silverdus@user/silverdust)
[20:41:26] *** Quits: henry40408 (~henry4040@175.181.176.30) (Quit: The Lounge - https://thelounge.chat)
[20:43:02] *** Joins: filename (~kilitary@188.242.105.134)
[20:44:39] *** Joins: henry40408 (~henry4040@175.181.176.30)
[20:45:57] *** Joins: ASUS (~ASUS@user/ASUS)
[20:46:16] <ASUS> Which IDE do you guys use for JavaScript?
[20:46:36] <blueagain> ASUS: nvim + plugins
[20:46:50] <ASUS> neovim?
[20:46:56] <blueagain> yup
[20:46:59] <ASUS> oh
[20:47:09] <ASUS> you don't use Visual Studio code or WebStorm?
[20:47:23] <blueagain> nope
[20:47:24] <ljharb> ashnur: vscode
[20:47:26] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[20:47:28] <ljharb> ASUS: vscode
[20:47:44] <ASUS> I heard that WebStorm is better than vscode
[20:47:46] <ljharb> but it's really more of an editor
[20:48:00] <ljharb> webstorm is an IDE, which you don't need or want, and also webstorm imo has very poor UX
[20:48:02] <theskillwithin> vscode took over the world
[20:48:23] <ljharb> for JS there's just no argument at this point to use anything but vim/emacs, or vscode
[20:48:31] <ASUS> ok
[20:48:36] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[20:49:03] <ASUS> It's weird that #javascript has 531 people when javascript is the most popular language in the IT industry
[20:49:11] <ASUS> and #python has like double
[20:49:43] <ljharb> it's irc
[20:49:50] <ljharb> most people are on slack or discord
[20:50:01] <ljharb> the node slack has over 14000 people
[20:50:19] <ASUS> wow
[20:50:26] <ASUS> what about frontend
[20:50:49] <ljharb> i'm not in any frontend-specific slacks
[20:50:56] <ljharb> but most node people are also doing web dev
[20:52:09] *** Joins: wroathe (~wroathe@user/wroathe)
[20:52:12] <silly> with 14000 users, do you need to throttle incoming messages somehow?
[20:52:37] <silly> like /ignore every other user at least temporarily, maybe even automated?
[20:53:31] <silly> oh, i've seen some modern messenger app that made foldable threads of messages
[20:55:04] *** Joins: han-solo (~han-solo@user/han-solo)
[20:55:09] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:7135:7a36:37fa:2aa3)
[20:55:26] <ljharb> huh? no
[20:55:34] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:7135:7a36:37fa:2aa3) (Client Quit)
[20:55:45] <ljharb> it's not a channel, it's more like a server
[20:55:52] <ljharb> so the messages are split into channels
[20:55:54] *** Joins: nomic (~nomic@185.192.69.129)
[20:58:43] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e84d:ee3b:80fc:7368)
[21:01:18] *** Joins: Cyp (~cyp@213.237.85.100)
[21:01:20] *** Joins: silverdust (~silverdus@user/silverdust)
[21:02:11] <silly> oic
[21:06:28] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[21:08:25] *** Quits: ThePhilgrim (~ThePhilgr@151.41.9.171) (Ping timeout: 268 seconds)
[21:11:49] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[21:12:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:17:07] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:19:00] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:20:12] *** Joins: rendar (~rendar@user/rendar)
[21:20:17] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 240 seconds)
[21:20:57] <rendar> is O(1) adding elements to an array at the start with unshift()?
[21:25:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:25:41] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:27:34] <han-solo> O(n) i would assume
[21:27:47] <han-solo> it has to shift all the rest of the elements no ?
[21:28:08] <rendar> i don't know!
[21:28:28] <rendar> there is a deque-like object in js?
[21:29:07] *** Joins: phryk (~totallyno@user/phryk)
[21:29:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:29:25] <EdFletcher> a quick thought experiment will show that it is implementation dependent: if the underlying data structure is indeed a list (in-memory or singly-linked) then unshift must be O(n). if it's implemented as a doubly-linked list (unlikely but possible) _then_ unshift could be O(1).
[21:29:48] <EdFletcher> but really: this is javascript, you needn't care about that. use the methods that make semantic sense and move on.
[21:30:09] <rendar> EdFletcher, no, i should care, i don't want to use O(n)
[21:30:42] *** Quits: phryk (~totallyno@user/phryk) (Remote host closed the connection)
[21:31:24] <blueagain> rendar: that sounds a bit like premature optimisation to me
[21:31:31] <EdFletcher> ^this
[21:32:23] <EdFletcher> is your _n_ very large already, so large that O(n) is actually a significant slowdown over O(1)? 'Fancy algorithms are slow when n is small, and n is usually small.' https://twitter.com/CompSciFact/status/1495879759854817284
[21:32:23] <rendar> blueagain, that's why that kiwiirc application takes 100% CPU (Threadripper) for some seconds, when it logs like 5000 lines of log of irc channels
[21:32:34] <rendar> EdFletcher, yep
[21:32:39] <rendar> otherwise i wouldn't car
[21:32:43] <rendar> care*
[21:32:52] <Svitkona> 5000 is not that much at all...
[21:32:58] <EdFletcher> and you're already having performance troubles?
[21:33:09] <rendar> Svitkona, indeed!
[21:33:19] <rendar> Svitkona, but it's bugged like hell
[21:33:33] <rendar> EdFletcher, not yet, since my project doesn't exist yet
[21:33:46] <Svitkona> it's probably not because they're using an O(n) unshift
[21:33:47] <blueagain> I don't think that unshift will majorly impact the performance of your project
[21:33:50] <EdFletcher> rendar: ah ha! so it _is_ premature optimization.
[21:34:01] <rendar> EdFletcher, what?
[21:34:14] * rendar facepalms
[21:34:20] <EdFletcher> rendar: you are prematurely optimizing for an issue that doesn't even exist yet
[21:34:26] <rendar> ok ok
[21:34:28] <rendar> i see
[21:34:28] *** Joins: phryk (~totallyno@user/phryk)
[21:34:29] <EdFletcher> and may (likely) never exist
[21:34:29] <rendar> you're right
[21:34:31] <blueagain> first get correctness done, then assess if performance matters for your use case
[21:34:33] <EdFletcher> yes i know
[21:34:39] <rendar> see ya
[21:35:33] <EdFletcher> "first get correctness done" is doubly good advice because you don't want to optimize bugs either ðŸ˜†
[21:35:47] *** Joins: Rockwood (~Rocky@user/rocky)
[21:35:55] <rendar> i know i will have 1T of data, and i use a linked list instead of an hash table because my project still doesn't exist, then its premature omptiz.
[21:35:59] <rendar> it's logic!
[21:36:09] <blueagain> imagine you optimised without correctness and then discovered your optimisations killed your logic...
[21:36:17] <EdFletcher> huge oof
[21:36:24] <Rockwood> lol
[21:36:31] <EdFletcher> you'd be devastated, demoralized
[21:36:35] <Rockwood> not correct question still
[21:37:01] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:14c2:362b:4032:a582) (Ping timeout: 240 seconds)
[21:37:04] <blueagain> you'd have to retrace your optimisations till you reached your previous state of unconfirmed correctness, but still "working"
[21:37:07] <EdFletcher> rendar: until you have a concrete performance issue with actual, running code on real data, then yes it is premature optimization
[21:37:08] <blueagain> it'd be a mess
[21:37:24] <rendar> EdFletcher, so it's legit using a linked list for 1T of data, right?
[21:37:33] <EdFletcher> rendar: to do _what_ on it?
[21:37:40] <rendar> searching
[21:37:54] *** Quits: phryk (~totallyno@user/phryk) (Remote host closed the connection)
[21:38:12] <EdFletcher> why would you even write this yourself? use elastic search or similar like everyone else does, where all of these issues have already been well thought out
[21:38:12] <han-solo> 1TB+ RAM ?
[21:38:47] <rendar> EdFletcher, i have 1T of financial data, i have to search data into this huge, huge, haystack, i will use a linked list, since the project isn't started yet, there isn't any issue
[21:38:51] <blueagain> huge chunks of data aren't really a huge case for a programming language
[21:38:53] <rendar> using an hash table is premature optimiz.
[21:39:02] <blueagain> rendar: you need a real database for 1 TiB
[21:39:03] *** Joins: phryk (~totallyno@user/phryk)
[21:39:11] *** Joins: rcoote (~rcoote@2a02:908:690:a140:e096:d67e:8fd2:8304)
[21:39:26] <rendar> blueagain, no! premature optimization! since it's still doesn't exist yet
[21:39:31] <rendar> i will start with a linked list
[21:39:38] <rendar> if it doesn't work, i will optimize with a dv
[21:39:39] <rendar> db*
[21:40:00] <rendar> it's EdFletcher's logic. Powerful.
[21:40:03] <han-solo> i can't really figure if that's sarcasm or ...
[21:40:05] <EdFletcher> if you're just going to get emotional about our use of a term you don't like, it's going to be hard to help you further
[21:40:06] <han-solo> ah...sarcasm
[21:40:12] <Rockwood> EdFletcher, o
[21:40:16] <Rockwood> EdFletcher, o/
[21:40:27] <EdFletcher> rendar: and also, i wasn't the first to note that you were prematurely optimizing
[21:40:28] <rendar> EdFletcher, sorry but i simply think it doesn't make any sense, cased closed! :)
[21:40:31] <EdFletcher> hey hey!
[21:41:10] <EdFletcher> rendar: that's your prerogative, problem is that we're speaking facts so if you decide to not listen the detriment will be entirely yours
[21:41:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:4d3e:ae3:d6a0:1183)
[21:41:53] <rendar> let's move on, in python we've None as a sentinel, like C's null, in js i should use null or undefined?
[21:42:42] <EdFletcher> Rockwood: oops, that "hey hey!" was meant for you but i messed up. how're you!?
[21:43:19] <han-solo> null should be fine
[21:43:39] <rendar> ok
[21:44:00] <bliminse> null to denote absence of value, undefined to denote that the variable doesn't exist
[21:44:06] <bliminse> generally speaking
[21:44:33] <Rockwood> EdFletcher, i am fine bro :D
[21:44:42] <ASUS> I'm so stupid wasting all my time making python projects when I should make a javascript project
[21:44:55] <ASUS> employers value javascript the most I think
[21:45:20] <EdFletcher> Rockwood: great to hear!
[21:45:34] <han-solo> really depends on the things they wanna build i guess
[21:45:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:45:59] <Rockwood> EdFletcher, good night cheers :D
[21:46:40] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[21:47:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:47:26] <EdFletcher> Rockwood: Ah yes this is the end of your day haha ðŸ˜‚ Great to see you, goodnight and good sleep!
[21:48:16] <Rockwood> EdFletcher, you are from where?
[21:48:31] <Rockwood> if you don't mind it
[21:48:58] <EdFletcher> Rockwood: Nope I donâ€™t mind at all! Iâ€™m in California
[21:49:05] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[21:49:27] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[21:50:00] <EdFletcher> So just getting my day started, gotta get more coffee in fact!
[21:50:20] <Rockwood> lol
[21:50:49] <blueagain> it's 19:20 here, so the day will be soon over
[21:51:05] <Rockwood> lol
[21:51:43] <EdFletcher> IRC is truly a global community, love it
[21:52:09] <Rockwood> yeah :D
[21:53:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:53:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:53:20] *** Joins: wroathe (~wroathe@user/wroathe)
[21:54:11] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 256 seconds)
[21:56:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:58:11] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[22:00:02] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a068-f96d-6ad8-5504.res6.spectrum.com) (Remote host closed the connection)
[22:01:46] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:02:04] *** Joins: zebrag (~chris@user/zebrag)
[22:04:29] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:04:58] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e84d:ee3b:80fc:7368) (Ping timeout: 250 seconds)
[22:05:52] *** Joins: kill (~killown@user/killown)
[22:05:53] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[22:06:17] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:06:29] *** Joins: ekathva (~ekathva@2001:999:409:1b9d:fde2:72ac:eabf:c1c)
[22:06:30] *** Quits: ekathva (~ekathva@2001:999:409:1b9d:fde2:72ac:eabf:c1c) (Remote host closed the connection)
[22:06:33] *** Joins: eugercek (~user@user/eugercek)
[22:07:55] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:08:34] *** Joins: terminalpusher (~terminalp@2a01:586:91e7:1:6498:94da:f7da:72b2)
[22:08:51] *** Joins: trevors (~trevors@user/trevors)
[22:09:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[22:10:25] *** Joins: Andrm (~Andrm@190.244.62.157)
[22:10:53] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:12:55] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:14:14] *** Joins: crashrep (~crashrep@user/crashrep)
[22:14:17] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:17:52] *** Joins: mechanist (~mg@95.236.242.231)
[22:17:54] <mechanist> hello
[22:18:33] <mechanist> https://jsfiddle.net/8y5ekhm1/ this is a dropdown menu. Why it closes any time I click on 'Shop'?
[22:20:08] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:d105:8e7e:434e:d10f)
[22:21:03] *** Joins: silverdust (~silverdus@user/silverdust)
[22:21:59] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:22:12] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:23:24] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[22:24:54] <Andrm> hey mechanist
[22:25:15] <Andrm> it closes because you're setting the parent div as the menu toggler
[22:25:59] <Andrm> you should toggle the menu when the "Menu" link is clicked
[22:26:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:26:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:26:11] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[22:26:44] <Andrm> <a href="#!" id="menu">Menu</a>
[22:26:55] <Andrm> $("#menu").click(function(){
[22:26:56] <Andrm> Â  Â  Â  Â  Â  Â $(".listbox1").toggle();
[22:26:56] <Andrm> Â  Â  Â  Â });
[22:27:24] *** Quits: junebug (~junebug@2600:1700:3db0:2540:71e8:c719:1f8c:6b4f) (Ping timeout: 240 seconds)
[22:27:49] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 240 seconds)
[22:29:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:30:47] *** Joins: dimi1947 (~dimi1947@46-107-189.adsl.cyta.gr)
[22:31:52] <dimi1947> I am little confused about modules..is the code inside a module executed like a standard d scipt?
[22:32:06] <dimi1947> d=js
[22:32:36] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:33:56] *** Quits: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:d105:8e7e:434e:d10f) (Quit: dingdreher)
[22:35:23] <Andrm> what do u mean?
[22:35:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:36:54] <dimi1947> ok...I will put it this way
[22:38:31] <mechanist> Andrm: fixed, thanks.
[22:39:15] <dimi1947> from my understanding a module can be: a script that runs code and imports code from elsewhere and a file that exports code...this code..that is to be exported does not run
[22:39:59] <Andrm> @mecha
[22:40:17] <Andrm> oops. new to irc, sorry. mechanist you're welcome.
[22:40:55] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[22:42:08] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:42:17] <Andrm> dimi1947 an exported module is executed when it's imported
[22:42:39] <Andrm> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
[22:43:27] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:43:28] <dimi1947> yes..that is what I understand....but in order for a script to import a module this script must be type=module
[22:43:47] <dimi1947> a type=script cannot import
[22:43:56] <dimi1947> am I correct?
[22:43:57] *** Parts: mechanist (~mg@95.236.242.231) ()
[22:45:55] *** shan is now known as shantaram
[22:47:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[22:48:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:49:51] <ljharb> dimi1947: yes
[22:50:00] <ljharb> dimi1947: but don't use native ESM. use babel and a bundler.
[22:50:36] <dimi1947> why?
[22:51:17] <ljharb> dimi1947: because there's no point in using it. it only has downsides - and it's slower.
[22:52:05] *** Quits: terminalpusher (~terminalp@2a01:586:91e7:1:6498:94da:f7da:72b2) (Remote host closed the connection)
[22:52:14] <dimi1947> so you are sayingg in other wwords that module functionality can be provided by babel too...correct?
[22:52:35] <ljharb> dimi1947: of course it can
[22:52:45] <ljharb> dimi1947: author in ESM, transpile with babel, bundle with a bundler.
[22:52:47] <ljharb> best of both worlds.
[22:53:16] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[22:54:25] *** Joins: onosendi (~onosendi@user/onosendi)
[22:55:28] <dimi1947> my knowledge of babel in related to mosules is limted....I must look at it...
[22:57:15] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[22:58:55] <ljharb> dimi1947: babel is the primary way people have been writing ESM for almost a decade now
[22:59:31] <ljharb> k, i guess 8 years
[23:00:59] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:01:55] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 250 seconds)
[23:04:44] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:07:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3d9a:66f1:32c0:2d52)
[23:19:22] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:22:43] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3d9a:66f1:32c0:2d52) (Ping timeout: 250 seconds)
[23:22:55] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[23:25:38] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[23:26:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:27:43] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 256 seconds)
[23:29:49] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[23:29:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[23:30:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[23:32:22] *** Quits: Decker (~d3x0r@user/d3x0r) (Quit: Going offline, see ya! (www.adiirc.com))
[23:32:34] *** Joins: Decker (~d3x0r@user/d3x0r)
[23:35:29] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[23:37:59] *** Joins: silverdust (~silverdus@user/silverdust)
[23:38:21] *** Quits: rcoote (~rcoote@2a02:908:690:a140:e096:d67e:8fd2:8304) (Quit: Konversation terminated!)
[23:42:56] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[23:43:18] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[23:49:50] *** Joins: Betal (~Betal@user/betal)
[23:51:13] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[23:55:06] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[23:55:19] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[23:55:43] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 256 seconds)
[23:56:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8108:1493:c1db:6c2d) (Ping timeout: 240 seconds)
[23:58:21] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[23:58:23] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
