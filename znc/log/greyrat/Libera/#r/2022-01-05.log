[00:00:06] <Bayes> I get it when some assumptions are made because otherwise things become like too hard to handle, that's arguable but fair
[00:00:17] <Bayes> but many times it's because we don't know any better
[00:00:24] <Bayes> or even worse, we're not even aware :/
[00:00:32] <fendur> it's not hard for someone who knows the right tools 
[00:00:53] <Bayes> fair enough
[00:01:17] *** Quits: marcello42 (~mp@2001:1a81:12a9:b900:4ccd:c26d:723b:afc2) (Ping timeout: 240 seconds)
[00:01:33] <fendur> but not many people know probabilistic programming languages and the canned packages are there in some cases, but can still be challenging to use (i.e.,introduce new challenges)
[00:01:44] <eliocamp> You can get a resonable fix by just correcting p-values for FDR
[00:02:14] <fendur> "reasonable" from who's perspective? :D
[00:02:20] <Bayes> im just thinking that we're at a point in technology and knowledge where a gaussian process with SE covariance can be fit ootb
[00:02:54] <Bayes> im sure that people reading my work can similarly spot 30 basic things that I omitted just because I wasn't aware of them
[00:03:07] <Bayes> but are very obvious to them
[00:03:25] *** Quits: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com) (Ping timeout: 240 seconds)
[00:04:42] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[00:20:48] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (Quit: Leaving)
[01:26:45] *** Parts: frmg (~frmg@190-72-79-137.dyn.dsl.cantv.net) (Abandonando - Leaving)
[01:36:47] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[01:51:49] <Bayes> functions arguments are passed by reference and copied on modify
[01:51:59] <Bayes> that's a nice thing I just learned
[01:52:45] <Bayes> I feel like I've learned R on the way, I don't know of any succinct reference for this kind of a thing
[02:29:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[02:36:59] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[02:41:58] <since_> My fun wikipedia scraping R project result: https://wwwcip.cs.fau.de/~ax20yhum/kreativ/kevin2.svg
[02:44:46] <since_> The next question is "When will we hit 1min"
[02:58:11] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:58:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:12:12] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:25:45] *** Joins: arthurpbs (~arthurpbs@168.121.98.7)
[03:39:25] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[04:59:15] *** Joins: marcello42 (~mp@2001:1a81:12be:e200:d599:14bd:bbbe:8542)
[05:43:06] *** Quits: eliocamp (~eliocamp@user/eliocamp) (Quit: The Lounge - https://thelounge.chat)
[06:18:59] *** Quits: marcello42 (~mp@2001:1a81:12be:e200:d599:14bd:bbbe:8542) (Quit: WeeChat 3.3)
[06:40:11] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[09:38:36] *** Joins: triberio13 (~triberio1@195.53.32.158)
[10:25:10] *** Joins: palasso (~palasso@user/palasso)
[11:36:17] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[11:49:26] <torbjorn_> is there something tidyverse'ish that corresponds to %>% `[`(1) ? there is pluck, but I'm specifically looking for the [ operation, not [[ , on a list
[11:59:20] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[12:33:37] <confuzius> since_: interesting graph but seconds. some serious mental math for musical lovers then. also, does your graph suggests that there are fewer popular songs now than in the past?
[12:43:49] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[13:00:57] <since_> confuzius: i had the same question, and i have no definitive answer yet. It could be a problem of my web scraper as throw away items i can not assign to a specific release year (i.e. not in the wikipedia infobox but in the description text, or having multiple release years) but those should not be too many and the effect seems to be consistent the last decades. It could also be that it is the release
[13:01:00] <since_> year and not the chart peak year, i.e. a christmas song from 1980 when peaked in 2020 gets the label popular and is assigned to 1980. I count every song only once, regardless how often it peaked.
[13:24:12] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:40:01] *** Joins: LogIN (~LogIN@82-132-232-165.dab.02.net)
[13:40:05] *** Quits: LogIN (~LogIN@82-132-232-165.dab.02.net) (Remote host closed the connection)
[13:42:32] *** Joins: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com)
[13:44:21] *** Quits: confuzius (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[13:47:29] *** Joins: confuzius (~h_m@186-149-117-154.bitcointernet.co.za)
[13:50:49] *** Quits: confuzius (~h_m@186-149-117-154.bitcointernet.co.za) (Read error: Connection reset by peer)
[13:51:38] *** Joins: confuzius (~h_m@186-149-117-154.bitcointernet.co.za)
[15:00:37] *** Quits: confuzius (~h_m@186-149-117-154.bitcointernet.co.za) (Ping timeout: 240 seconds)
[15:03:51] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[15:38:30] *** Joins: h_m (~h_m@186-149-117-154.bitcointernet.co.za)
[16:22:36] <fendur> since_: cool graphic. what makes you think we _will_ hit 1 min?
[16:23:27] <fendur> since_: how is "popular" defined?
[16:35:21] *** Quits: h_m (~h_m@186-149-117-154.bitcointernet.co.za) (Quit: Leaving)
[16:35:56] *** Joins: confuzius (~h_m@186-149-117-154.bitcointernet.co.za)
[16:41:00] *** Joins: LogIN (~LogIN@82-132-232-165.dab.02.net)
[16:41:19] *** Quits: LogIN (~LogIN@82-132-232-165.dab.02.net) (Remote host closed the connection)
[16:41:25] *** Joins: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de)
[16:55:49] *** Quits: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[16:56:20] *** Joins: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de)
[16:56:48] *** Joins: eliocamp (~eliocamp@user/eliocamp)
[17:05:53] <fendur> since_: incidentally, the 1min question i asked isn't a critique. i'm curious if there's more behind that. i make music and imagine 1 min shorts as a real thing.
[17:06:38] <fendur> a real thing in popular culture, i mean.
[17:06:53] *** Quits: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[17:07:10] *** Joins: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de)
[17:10:00] *** Quits: computerfarmer (~thomas@p200300ca073550bc3d7a3290262c5d02.dip0.t-ipconnect.de) (Client Quit)
[17:20:09] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[17:30:02] *** Joins: davor_ (~davor@user/davor)
[17:31:22] *** Quits: davor (~davor@user/davor) (Ping timeout: 268 seconds)
[17:37:36] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[17:40:27] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[18:04:55] <Bayes> since_ cool stuff!
[18:06:10] <Bayes> wait what's a 1min? a 1 minute long song?
[18:18:00] <since_> fendur: a friend of mine told me that he started listening to 80s music. he is always surprised how interesting some songs actually are with solos and interesting elements, whereas we have the 80s music compositionally rather boring in our heads, because the currently played radio versions of the 80s songs have cut out all the interesting elements. and then the question came up if this is really a thing
[18:18:02] <since_> that new songs are designed for less attention, complexity and duration.
[18:20:11] <since_> fendur: for sake of simplicity popular is just from wikipedia "Billboard 100 Top 10 $year" Lists
[19:00:14] *** Quits: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com) (*.net *.split)
[19:00:14] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[19:00:14] *** Quits: triberio13 (~triberio1@195.53.32.158) (*.net *.split)
[19:00:14] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a21f:ef4a:1372:da5b) (*.net *.split)
[19:00:14] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0::7e04) (*.net *.split)
[19:00:14] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (*.net *.split)
[19:00:15] *** Quits: JoshStark0 (~JoshStark@linuxserver.io/stark) (*.net *.split)
[19:00:15] *** Quits: averell (~averell@user/averell) (*.net *.split)
[19:00:15] *** Quits: zxtx (~zxtx@sunnythinking.org) (*.net *.split)
[19:00:15] *** Quits: shr2 (~shrysr@user/shrysr) (*.net *.split)
[19:00:16] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (*.net *.split)
[19:00:16] *** Quits: arthurpbs (~arthurpbs@168.121.98.7) (*.net *.split)
[19:00:16] *** Quits: twrk (~user@user/twrk) (*.net *.split)
[19:00:16] *** Quits: kaos (~kaos@88.164.10.175) (*.net *.split)
[19:00:16] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (*.net *.split)
[19:00:16] *** Quits: torbjorn_ (~torbjorn@88.81-166-205.customer.lyse.net) (*.net *.split)
[19:00:16] *** Quits: Vultyre (~vultyre@user/vultyre) (*.net *.split)
[19:00:16] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (*.net *.split)
[19:00:16] *** Quits: jootoi- (~jootoi@130.61.158.197) (*.net *.split)
[19:00:17] *** Quits: TheLink (~TheLink@user/thelink) (*.net *.split)
[19:00:18] *** Quits: gnyeki (~gnyeki@user/gnyeki) (*.net *.split)
[19:00:19] *** Quits: px (~px@user/px) (*.net *.split)
[19:00:19] *** Quits: ttkap (~ttkap@user/ttkap) (*.net *.split)
[19:00:20] *** Quits: shadowpaste (~shadowpas@kitty.scsys.co.uk) (*.net *.split)
[19:00:20] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[19:00:22] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[19:00:22] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[19:00:22] *** Quits: Kabouik_ (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d) (*.net *.split)
[19:00:23] *** Quits: jonasbits (~quassel@2a00:66c0:1:1::58) (*.net *.split)
[19:00:23] *** Quits: reaVer (~reaVer@80-100-12-65.ip.xs4all.nl) (*.net *.split)
[19:00:23] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[19:00:24] *** Quits: fendur (~nj@user/fendur) (*.net *.split)
[19:00:25] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[19:00:25] *** Quits: zaratustra_ (~zaratustr@idlerpg/player/zaratustra) (*.net *.split)
[19:00:25] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[19:00:26] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (*.net *.split)
[19:00:27] *** Quits: Unode (~Unode@194.94.44.220) (*.net *.split)
[19:00:27] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (*.net *.split)
[19:00:27] *** Quits: redrum88 (redrum88@user/redrum88) (*.net *.split)
[19:00:27] *** Quits: Betawolf (~matthew@xn--bta-yla.net) (*.net *.split)
[19:00:27] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[19:00:27] *** Quits: dschk (~dschk@244.102.83.34.bc.googleusercontent.com) (*.net *.split)
[19:00:28] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[19:00:28] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[19:00:28] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (*.net *.split)
[19:01:11] *** Joins: ChanServ (ChanServ@services.libera.chat)
[19:01:11] *** Joins: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com)
[19:01:11] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:01:11] *** Joins: triberio13 (~triberio1@195.53.32.158)
[19:01:11] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a21f:ef4a:1372:da5b)
[19:01:11] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0::7e04)
[19:01:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[19:01:11] *** molybdenum.libera.chat sets mode: +o ChanServ
[19:01:57] *** Joins: Kabouik_ (~Kabouik@2a03:4000:4d:fbd:4fe:b1ff:fee3:35d)
[19:01:57] *** Joins: jonasbits (~quassel@2a00:66c0:1:1::58)
[19:01:57] *** Joins: reaVer (~reaVer@80-100-12-65.ip.xs4all.nl)
[19:01:57] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[19:02:02] *** Joins: shadowpaste (~shadowpas@kitty.scsys.co.uk)
[19:02:02] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[19:02:07] *** Joins: OverCoder (~OverCoder@user/overcoder)
[19:02:07] *** Joins: taeaad (~taeaad@user/taeaad)
[19:02:13] *** Joins: fendur (~nj@user/fendur)
[19:02:13] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[19:02:13] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[19:02:13] *** Joins: zaratustra_ (~zaratustr@idlerpg/player/zaratustra)
[19:02:19] *** Joins: px (~px@user/px)
[19:02:19] *** Joins: ttkap (~ttkap@user/ttkap)
[19:02:26] *** Joins: JoshStark0 (~JoshStark@linuxserver.io/stark)
[19:02:26] *** Joins: averell (~averell@user/averell)
[19:02:26] *** Joins: zxtx (~zxtx@sunnythinking.org)
[19:02:26] *** Joins: shr2 (~shrysr@user/shrysr)
[19:02:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[19:02:49] *** Joins: TheLink (~TheLink@user/thelink)
[19:02:49] *** Joins: gnyeki (~gnyeki@user/gnyeki)
[19:03:04] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[19:03:04] *** Joins: Unode (~Unode@194.94.44.220)
[19:03:04] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[19:03:04] *** Joins: redrum88 (redrum88@user/redrum88)
[19:03:04] *** Joins: Betawolf (~matthew@xn--bta-yla.net)
[19:03:04] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[19:03:04] *** Joins: dschk (~dschk@244.102.83.34.bc.googleusercontent.com)
[19:03:04] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[19:03:07] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[19:03:15] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[19:03:15] *** Joins: arthurpbs (~arthurpbs@168.121.98.7)
[19:03:15] *** Joins: twrk (~user@user/twrk)
[19:03:15] *** Joins: kaos (~kaos@88.164.10.175)
[19:03:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:03:15] *** Joins: torbjorn_ (~torbjorn@88.81-166-205.customer.lyse.net)
[19:03:15] *** Joins: Vultyre (~vultyre@user/vultyre)
[19:03:15] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[19:03:15] *** Joins: jootoi- (~jootoi@130.61.158.197)
[19:03:19] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[19:33:37] <since_> fendur: just for fun
[20:32:53] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[20:37:30] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:52:15] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[21:15:32] *** Joins: Vojtaeus (~vojta@user/vojtaeus)
[21:38:39] *** Joins: Figworm (~inoor@user/figworm)
[22:24:37] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[22:25:59] *** Joins: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net)
[22:33:50] *** Quits: triberio13 (~triberio1@195.53.32.158) (Remote host closed the connection)
[22:35:42] <Bayes> would you have liked it if R had multiple assignments?
[22:36:21] <Bayes> something as X, y <- simulate(...) instead of having simulate return a list?
[22:36:31] *** Joins: triberio13 (~triberio1@195.53.32.158)
[22:36:58] <fendur> who are you asking?
[22:37:21] <rickyrick> lists are love lists are life
[22:37:31] * rickyrick tips LISP textbook
[22:38:08] <tdsmith> there is a package that lets you type that, because R https://cran.r-project.org/web/packages/zeallot/vignettes/unpacking-assignment.html
[22:40:05] <tdsmith> it's not something i use very often in python but exceptions are so useless in R that you could think about using it to implement a go-style (result, err) pattern, though that's not very R-like either
[22:40:12] <tdsmith> "error handling is not very R-like" tbh
[22:41:03] <rickyrick> neat.jpg
[22:42:06] <rickyrick> Even provided a %->%
[22:42:13] <tdsmith> lol
[22:42:39] <tdsmith> once you've started, why stop, i guess
[23:03:57] *** Quits: rickyrick (~rickyrick@S01069050ca454523.vf.shawcable.net) (Ping timeout: 240 seconds)
[23:04:33] <since_> error handling in R? :-DD
[23:05:51] <since_> R system() crashes when supplying binary data into stdin that contains nullbyte
[23:06:03] <since_> or it cuts the string etc
[23:09:19] <Bayes> does go have (result, err) return?
[23:13:44] <since_> yes, only. no exceptions.
[23:14:12] <Bayes> hm cool
[23:14:13] <Bayes> interesting
[23:14:36] <since_> num, err := strconv.Atoi(str)
[23:14:41] <since_> if err != nil {
[23:14:45] <since_>     return err
[23:14:47] <since_> }
[23:14:51] <since_>  
[23:15:17] <since_> all the time the code looks like this, every 5 lines such a err != nil block
[23:15:32] <Bayes> xD
[23:15:48] <Bayes> I mean, to be fair try catch blocks can be a bit intrusive as well
[23:15:55] <Bayes> especially cause you need to nest code
[23:16:07] <Bayes> possibly with more than { } block
[23:17:55] <since_> i got used to it, now its possible stockholm syndrome that i stay with it
[23:19:38] <since_> the nice thing when errors are values is that you can warp them, put them into channels and stream them somewhere else etc. but 90% of the time its just if err != nil { return err }. and the next time the err variable exist from the previous lines, but the value variable not etc :D
[23:25:41] <Bayes> is there any purpose why they designed it that way?
[23:26:04] <Bayes> I mean you're making it sound like a thing that no engineer would ever consider good :P
[23:27:31] <since_> its simple
[23:29:03] <since_> simplicity wins. now many network applications are written in go, while go has no exceptions, no generics, only "for" for loops etc
[23:29:23] <Bayes> and hugo
[23:29:26] <Bayes> my favorite go app ever :D
[23:29:41] *** Quits: triberio13 (~triberio1@195.53.32.158) (Quit: Konversation terminated!)
[23:31:37] <since_> yes hugo is nice. i used go for https://regenampel.de/ and telnet snake ( telnet telnetgames.de 2323 ). one of the best things of go and R are the big stdlibs
[23:32:09] <Bayes> funny that you mention R for big stdlibs
[23:32:37] <Bayes> cause python is a very strong and rich general purpose programming language that happens to be a nice sci stack
[23:32:59] <Bayes> while R is a strong stats programming language with rather limited general purpose stack
[23:33:17] <Bayes> while it's catching up, it'd never be good at "stdlibs"
[23:33:32] <since_> well but only when you use N external libraries. javascript is a step more worse where you cant write a 100 line app without 1000 npm libraries of random github people
[23:33:43] <Bayes> xD
[23:33:58] <Bayes> that's more or less the R approach as well
[23:34:03] <Bayes> which is the lisp approach AFAIK
[23:34:28] <Bayes> R ships bare bone with enough tools to let the community expand it
[23:34:45] <Bayes> while python seems to be adding stuff to their base over time
[23:34:47] <Bayes> which is kinda neat
[23:36:07] <since_> python does not understand matrices without numpy etc, right?
[23:36:18] <since_> and without pandas i cant even read a dataframe
[23:36:41] <Bayes> well that's the sci stack I was talking about above
[23:36:58] <Bayes> python is a robust general programming language with a nice sci stack
[23:37:30] <Bayes> that probably makes it a better fit for statistical apps
[23:38:05] <Bayes> cause you've got a good amount of general purpose tools built-in (things like json and things for rest apis and whatnot)
[23:38:16] <Bayes> and you only need the specifics of your sci project
[23:38:40] <since_> and those (pandas, matplotlib, numpy, ...) are maintained by the language authors?
[23:39:02] <Bayes> in R you have matrices and data frames, but you pretty much have to load a package for all things general purpose
[23:39:49] <Bayes> but then in R you gotta move some stuff to C++.
[23:39:54] <Bayes> so in the end ... I don't know
[23:41:21] <since_> https://docs.python.org/3/library/ thats what i would call the stdlib of python :)
[23:41:48] <since_> (and wikipedia does so aswell https://en.wikipedia.org/wiki/Standard_library apparently )
[23:41:58] *** Quits: fendur (~nj@user/fendur) (Remote host closed the connection)
[23:43:25] <since_> but yes python datascience has also its place :D (look at R keras that uses reticulate to use tensorflow in R, so that you can have meaningless error messages of two different languages at once)
[23:44:16] <Bayes> xD
[23:56:03] <Bayes> so im doing some optim work here
[23:56:33] <Bayes> now, the target function takes a `par` vector and returns a scalar
[23:56:42] <tdsmith> my coldish take is that a big standard library is a poor substitute for a robust package publishing ecosystem and the latter is probably more interesting
[23:57:02] <Bayes> and the target function calls some underlying function
[23:57:18] <tdsmith> the python batteries-included philosophy is an artifact of its age
[23:57:32] <Bayes> what's the best way to call the underlying function with do.call yet keep the `par` vector pretty flexible?
[23:57:59] <tdsmith> why would do.call limit your flexibility?
[23:58:31] <Bayes> cause par can contain two parameters, one being a K-vector and the other a scalar, as a  K+1 vector
[23:58:45] <Bayes> split(par, names(par)) is the best I can think of, assuming I keep par well named all along
[23:59:30] *** Joins: fendur (~nj@user/fendur)
