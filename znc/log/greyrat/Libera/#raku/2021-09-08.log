[00:00:16] <lizmat> aqi?
[00:03:29] <tonyo> air quality
[00:04:19] <lizmat> ah, I guess the US should stop smoking  :-(
[00:05:02] <tonyo> https://www.purpleair.com/map?opt=1/mAQI/a10/cC0#10.47/43.9983/-121.2851
[00:05:42] <tonyo> we've had too many fires here, this is the best it's been in a week but i'm still walking around with a respirator mask
[00:33:10] <xinming> Where do I check the log for the channel please?
[00:33:34] <xinming> I want to find a question I asked before
[00:34:11] <xinming> got it
[00:34:12] <codesections> https://colabti.org/irclogger//irclogger_log_search/raku is the current/old place
[00:36:55] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[00:50:30] <xinming> Is .map call allowed for @array within .hyper.map({ ... }) ???
[00:51:12] <xinming> I got     `Cannot call method 'fully-reified' on a null object` randomly, I'll try to narrow down the snippets
[00:51:26] <xinming> so you can easier focus on where the issue is
[01:01:28] <lizmat> yeah, that sounds wrong :-)
[01:03:52] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[01:04:16] *** Quits: Kaipi (~Kaiepi@156.34.44.192) (Ping timeout: 252 seconds)
[01:16:13] <tbrowder> tonyo: the update to Data::Dump is great! thnx. i've already set my fav env var and removed :color and other vars from s
[01:16:14] <tellable6> 2021-09-07T19:04:12Z #raku <tonyo> tbrowder indeed the env var egg is in the nest
[01:16:34] <tbrowder> *my active using code
[01:24:17] <japhb> xinming: Was there anything you needed for your use case with round-tripping Captures that is more advanced than a tagged 2-tuple of map and array?
[01:29:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[01:36:47] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[01:48:41] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:57:41] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[02:11:07] <Geth> ¦ doc: a9dcda5d7b | Coke++ | doc/Language/packages.pod6
[02:11:07] <Geth> ¦ doc: preferred variant
[02:11:07] <Geth> ¦ doc: 
[02:11:07] <Geth> ¦ doc: whitespace
[02:11:07] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/a9dcda5d7b
[02:11:07] <Geth> ¦ doc: 23018392fc | Coke++ | doc/Language/packages.pod6
[02:11:07] <Geth> ¦ doc: pass examples compilation
[02:11:09] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/23018392fc
[02:11:10] <linkable6> Link: https://docs.raku.org/language/packages
[02:11:11] <Geth> ¦ doc: 1112bd9b48 | Coke++ | xt/pws/code.pws
[02:11:13] <Geth> ¦ doc: cleanup word list
[02:11:15] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/1112bd9b48
[02:54:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:54:20] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:54:20] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[03:54:20] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:54:20] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[03:55:30] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[03:55:37] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[03:55:53] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:56:09] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[03:56:19] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[03:56:33] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[03:56:48] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[03:56:49] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[03:56:50] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[03:56:51] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[03:57:00] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[04:56:00] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[04:56:21] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[04:56:36] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[05:27:08] *** Joins: Altai-man_ (~koto@94.142.239.45)
[05:30:02] *** Quits: Altai-man (~koto@94.142.239.45) (Ping timeout: 252 seconds)
[05:34:20] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:44:53] *** Joins: frost (~frost@59.71.240.119)
[05:55:55] *** Quits: lichtkind (~lichtkind@p200300d0a7115d824dd07640acb24ce1.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:56:16] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[05:57:10] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:56:32] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[07:05:47] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 265 seconds)
[07:09:21] *** Joins: frost (~frost@59.71.240.119)
[07:44:45] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 260 seconds)
[07:50:16] *** Joins: frost (~frost@59.71.240.119)
[08:50:17] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:50:17] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:50:17] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:17] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:50:46] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:51:27] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:51:28] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[08:52:02] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:52:15] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:52:24] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:52:24] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:52:32] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:52:46] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:50:32] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[09:50:35] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[09:51:40] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:51:49] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:52:53] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:53:08] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[10:22:46] *** Joins: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de)
[10:27:05] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[10:27:56] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[10:29:16] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[10:31:53] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[10:32:43] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:59] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[10:33:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:51:04] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:57:44] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:59:00] <xinming> !paste
[10:59:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[11:02:40] <xinming> linkable6: https://pastebin.com/33maUDJi  <--- With this example script, When I provide the small arg which is like 1000, it works pretty fine. But when I specify larger number, which is like 4000, It'll report  `Cannot call method 'fully-reified' on a null object`
[11:02:43] <xinming> oops
[11:02:49] <xinming> lizmat: https://pastebin.com/33maUDJi  <--- With this example script, When I provide the small arg which is like 1000, it works pretty fine. But when I specify larger number, which is like 4000, It'll report  `Cannot call method 'fully-reified' on a null object`
[11:04:24] <xinming> I think there is a small bug where sync is out of sync, I don't know if it's a bug, as IIRC, the auto-vivification doesn't work within hyper.
[11:05:36] <xinming> BTW, this code is just for illustration about the bug, Not what I really do, this is the early version, now, I don't use List in the result.
[11:06:33] <xinming> japhb: I don't need it yet, What I was thinking is, if we can have some json-like format which also supports capture, then the json-rpc will be more "neat"
[11:15:49] <moon-child> xinming: sounds like an mvm bug
[11:22:56] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:31:30] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:19:07] *** Joins: patrickb (~patrickb@55d40fe7.access.ecotel.net)
[12:37:00] *** Quits: patrickb (~patrickb@55d40fe7.access.ecotel.net) (Remote host closed the connection)
[12:38:55] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:47:15] <japhb> xinming: Ah, understood.  I'm currently reading up on the current CBOR extensions to figure out whether there's an existing construct to reuse for Capture, or if I should spec a new one.
[12:52:42] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[13:08:33] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:48:09] *** Joins: lichtkind (~lichtkind@p200300d0a7115d034dd07640acb24ce1.dip0.t-ipconnect.de)
[14:09:44] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:10:58] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[14:38:41] *** sono is now known as Guest3787
[14:38:41] *** Quits: Guest3787 (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Killed (sodium.libera.chat (Nickname regained by services)))
[14:39:04] *** Joins: Guest3787 (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[14:41:16] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:21:29] *** Joins: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:34:08] *** Quits: Guest3787 (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[15:43:37] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
[15:56:43] *** Joins: keutoi (~keutoi@157.48.131.132)
[16:24:35] <sena_kun> releasable6, status
[16:24:36] <releasable6> sena_kun, Next release in ≈10 days and ≈7 hours. There are no known blockers. Changelog for this release was not started yet
[16:24:37] <releasable6> sena_kun, Details: https://gist.github.com/a165046135da78dba5dc024f9b4e74ff
[16:31:42] *** Quits: lichtkind (~lichtkind@p200300d0a7115d034dd07640acb24ce1.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[16:32:32] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:04] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:41:57] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[16:42:23] *** Joins: neither (~neither@5.177.243.76)
[16:43:11] *** Joins: lichtkind (~lichtkind@p200300d0a7115d03ac072a13f09fa777.dip0.t-ipconnect.de)
[16:44:27] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[17:02:31] *** Quits: neither (~neither@5.177.243.76) (Ping timeout: 252 seconds)
[17:11:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[17:35:03] *** Joins: neither (~neither@5.177.243.76)
[17:37:41] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:52:57] *** Quits: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[17:53:15] *** Joins: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[18:08:55] *** Quits: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de) (Ping timeout: 260 seconds)
[18:26:27] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:26:28] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:26:28] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[19:48:24] *** Parts: homura (root@user/homura) ()
[19:51:45] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[19:56:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[20:28:44] *** Quits: keutoi (~keutoi@157.48.131.132) (Ping timeout: 252 seconds)
[20:28:59] *** Joins: keutoi (~keutoi@157.48.131.132)
[20:31:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:09:41] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 265 seconds)
[21:20:01] *** Joins: zacts (~zak@user/zacts)
[21:20:53] <zacts> hi, must I know C to contribute to core raku?
[21:21:20] <zacts> (just curious)
[21:21:54] *** Joins: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[21:21:57] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[21:22:04] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[21:22:53] <lizmat_> zacts: depends how core you wanna go
[21:23:05] <lizmat_> a large part of Raku is written in Raku, with some nqp sprinkled in
[21:23:19] <lizmat_> see src/core.*/* files in the distribution
[21:23:21] <zacts> cool
[21:23:30] <zacts> like if I wanted to change synatx would I need to know C?
[21:23:45] <zacts> or is C mainly needed for optimization and other core tasks?
[21:24:09] <zacts> I would probably be most interested in extending the language itself
[21:24:21] <lizmat_> depends on what syntax you want to change: some modules in the ecosystem change syntax with Raku code only
[21:24:32] <zacts> ok
[21:24:54] <lizmat_> m: sub postfix:<!>(\a) { "the answer" }; say 42!
[21:24:55] <camelia> rakudo-moar b451f89b6: OUTPUT: «the answer␤»
[21:25:02] <lizmat_> ^^ syntax changing :-)
[21:25:54] <zacts> cool
[21:25:56] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[21:26:05] *** Quits: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Client Quit)
[21:26:18] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[21:27:10] <Altreus> fly-by lizmat
[21:30:33] <codesections> I thought there was some way to interpolate *into* pod6, but all I'm seeing in the docs is using pod6 values in Raku.  Did I just imagine that there's a way to do something like
[21:30:43] <codesections> =begin pod
[21:30:58] <codesections> This is $*PROGRAM-NAME
[21:31:01] <codesections> =end pod
[21:32:13] <Util> xinming: trying https://pastebin.com/33maUDJi , I can reproduce your `fully-reified on a null object` error on Mac with Rakudo v2020.10 .
[21:32:18] <Util> On FreeBSD with Rakudo v2021.04, I get no error, even with a change from 4000 to 8000. Can you reproduce on v2021.04 or newer?
[21:34:37] <gfldex> codesections: if there is anything, then in https://design.raku.org/S26.html
[21:39:07] <xinming> Util: I'm using the newest 2021.08
[21:39:18] <xinming> not master branch though
[21:39:59] <xinming> Util: BTW, it's random, It may happen, if you lower the 4000 to 1000, it'll work pretty fine
[21:40:21] <xinming> with the List grow large, the chances will be higher
[21:40:33] <xinming> I use gentoo BTW
[21:41:18] <Util> xinming: About the randomness, yes, when I can make it crash, it is from running it 10-20 times in a row.
[21:41:43] <xinming> so the hyper may lose sync in some cases
[21:43:37] <Util> codesections: Closest things I see are https://design.raku.org/S26.html#Placement_links , https://design.raku.org/S26.html#Alias_placements , and https://design.raku.org/S26.html#Aliases , but I don't see any of those having made it into production.
[21:43:51] <xinming> Util: in your test, you get harder to trigger the bug, Could you please try to compile a large project in the background, and load up all cpus, then try the script again?
[21:44:20] <Util> xinming: will do
[21:45:23] <xinming> I test this within a qemu-vm, with 4000, and host is busy doing something, It's high likely the load will cause the bug appear often
[21:46:20] <codesections> thanks, Util, that's what I'm concluding too.  I *guess* there's the nuclear option of just EVALing $=pod, but that would have its own set of issues! 
[21:53:22] <gfldex> codesections: POD is part of the AST. RakuAST might become helpful.
[21:57:00] *** Quits: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[21:59:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[22:02:37] <neither> hello how would you write an `all` function that applies a predicate to each values of an Iterable and has a short-circuiting behaviour? Returns True if all are True under predicate, False otherwise.
[22:02:46] <neither> my attempt with de morgan is
[22:02:56] <neither> m: my &oll = { not $^vals.grep(!*.&^pred) }; say oll(* < 177, 8..1_500_000)
[22:02:56] <camelia> rakudo-moar b451f89b6: OUTPUT: «False␤»
[22:03:30] <codesections> are you wanting to avoid the builtin all?
[22:03:48] <neither> But that doesn't short-circuit does it?
[22:04:18] <neither> constructs the entire junction no matter what, if I understand correctly
[22:05:17] <neither> # ($_ < 177 for 8..1_500_000).all
[22:05:20] <neither> ^this takes time
[22:05:46] <codesections> Well, (if I have it right) it has semantics that would *allow* for short circuiting – or at least returning when one parallel branch is false.  But that's NYI anyway, so I take your point
[22:06:06] <neither> (I meant with so at the end `($_ < 177 for 8..1_500_000).all.so`)
[22:06:28] <neither> In boolean context right?
[22:06:37] <neither> Like `grep` does
[22:07:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:10:32] <Util> m: sub oll ( &pred, $iter ) { not defined $iter.first(*.&pred.not) }; say oll(* < 177, 8..1_500_000);
[22:10:32] <camelia> rakudo-moar b451f89b6: OUTPUT: «False␤»
[22:10:48] <Util> neither: ^^^
[22:21:57] <Util> I expect `say ?((8..1_500_000).all < 177)` will short-circuit someday. (but not today)
[22:22:32] <codesections> agreed.  This is a little longer, but I might be tempted to go with
[22:23:13] <codesections> m:  sub oll(&pred, @vals) { for @vals { return False if !pred($_)}; True}; say oll * < 177, 8..1_500_000
[22:23:13] <camelia> rakudo-moar b451f89b6: OUTPUT: «False␤»
[22:23:28] <Util> Oh! Perhaps even better:
[22:23:38] <Util> m: sub oll ( &pred, $iter ) { not defined $iter.race.first(*.&pred.not) }; say oll(* < 177, 8..1_500_000);
[22:23:38] <camelia> rakudo-moar b451f89b6: OUTPUT: «False␤»
[22:27:05] <codesections> in 6.e.PREVIEW, there might be a nice way to do it with &last returning a value: https://github.com/rakudo/rakudo/pull/4415
[22:28:57] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[22:29:09] <neither> Util: Thank you. With `first`, what if a value in the iterable itself wasn't DEFINITE?
[22:29:13] <neither> e.g.:
[22:29:18] <neither> m: sub oll ( &pred, $iter ) { not defined $iter.first(*.&pred.not) }; say oll(*.defined, [5, Int, 12]);
[22:29:18] <camelia> rakudo-moar b451f89b6: OUTPUT: «True␤»
[22:29:57] <neither> should we go with :k adverb or something?
[22:30:13] <neither> (by the way, why is `&defined ~~ Callable` is False?)
[22:30:25] <neither> m: say &defined ~~ Callable
[22:30:25] <camelia> rakudo-moar b451f89b6: OUTPUT: «True␤»
[22:30:39] <neither> Oh it's True?
[22:32:03] <neither> I tried with 2020.05.1 and it gives False..
[22:32:34] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:34:47] <neither> m: $*RAKU.compiler.say
[22:34:48] <camelia> rakudo-moar b451f89b6: OUTPUT: «rakudo (2021.08.22.gb.451.f.89.b.6)␤»
[22:35:18] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:42:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:51:35] <[Coke]> 2020.05 is pretty old.
[22:51:36] <tellable6> 2021-09-07T18:59:32Z #raku <tbrowder> [Coke] i think yr relevant chgs are fixed in my doc PR, but pls ck it when you get a chance
[23:03:22] *** Quits: keutoi (~keutoi@157.48.131.132) (Quit: leaving)
[23:08:16] <ugexe> ximming: i also reproduced your error but also got this to pop up once
[23:08:18] <ugexe> raku(2746,0x70000b6bf000) malloc: Double free of object 0x7fdf72168010
[23:08:20] <ugexe> raku(2746,0x70000b6bf000) malloc: *** set a breakpoint in malloc_error_break to debug
[23:18:10] <Geth> ¦ doc: 076ce1dbbf | (Silvio Mayolo)++ | doc/Language/rb-nutshell.pod6
[23:18:10] <Geth> ¦ doc: Corrected Ruby nutshell typo
[23:18:10] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/076ce1dbbf
[23:18:10] <Geth> ¦ doc: fcd90780a2 | (Will Coleda)++ (committed using GitHub Web editor) | doc/Language/rb-nutshell.pod6
[23:18:10] <Geth> ¦ doc: Merge pull request #3956 from Mercerenies/master
[23:18:10] <Geth> ¦ doc: 
[23:18:10] <Geth> ¦ doc: Corrected Ruby nutshell typo
[23:18:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/fcd90780a2
[23:36:22] <xinming> ugexe: yea, I use that error because that error is more easy to produce.
[23:37:06] <xinming> easier to produce, the `double free` error sometimes will let the program exit silently.
[23:37:49] <xinming> So, this bug is reproducable, and I think will be a bug hard to debug. :-)
[23:38:24] <xinming> Hope we can have this bug fixed in next stable release.
[23:54:38] <[Coke]> . ask tbrowder didn't see the PR when I just checked, can you ping me the link if you still need me to review it? if it was related to xtest failures, just ship it and we'll fix it in post.
[23:54:49] <[Coke]> .ask tbrowder didn't see the PR when I just checked, can you ping me the link if you still need me to review it? if it was related to xtest failures, just ship it and we'll fix it in post.
[23:54:50] <tellable6> [Coke], I'll pass your message to tbrowder
