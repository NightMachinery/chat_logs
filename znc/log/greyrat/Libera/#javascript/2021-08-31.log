[00:00:23] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 244 seconds)
[00:01:25] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 244 seconds)
[00:01:31] *** Quits: killall (~killown@user/killown) (Client Quit)
[00:02:25] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[00:02:27] *** Quits: killown (~killown@user/killown) (Ping timeout: 244 seconds)
[00:09:56] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[00:10:40] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[00:13:47] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Client Quit)
[00:15:19] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:19:11] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[00:19:27] *** Joins: matsaman (~matsaman@user/matsaman)
[00:23:27] *** Quits: dachi_ (~dachinat@37.232.98.166) (Ping timeout: 240 seconds)
[00:26:37] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[00:26:56] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[00:27:17] *** Joins: k162 (k162@user/k162)
[00:29:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:43:16] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:10] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[00:46:27] *** Joins: silly (~silly@user/silly)
[00:47:17] *** Joins: Guest33 (~Guest33@p200300c8cf227600cb1855d9a3693c92.dip0.t-ipconnect.de)
[00:47:21] *** Quits: Snyp (~Snyp@49.207.225.119) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:50:06] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:53:53] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:54:48] *** Joins: zebrag (~chris@user/zebrag)
[00:55:33] *** Joins: Snyp (~Snyp@49.207.225.119)
[00:56:50] *** seabass is now known as Guest1364
[00:56:50] *** Quits: Guest1364 (~seabassfo@user/seabass) (Killed (tungsten.libera.chat (Nickname regained by services)))
[00:57:07] *** Joins: Guest1364 (~seabassfo@2001:470:69fc:105::187)
[00:58:19] *** Quits: Snyp (~Snyp@49.207.225.119) (Client Quit)
[00:58:50] *** Joins: volgar1x (~volgar1x@37.172.111.138)
[01:00:58] *** Joins: anton (anton@tloks.com)
[01:02:23] *** Quits: roadt_ (~roadt@114.102.181.0) (Ping timeout: 244 seconds)
[01:02:58] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[01:03:19] *** Quits: anton (anton@tloks.com) (Client Quit)
[01:05:51] *** Joins: anton (anton@tloks.com)
[01:05:58] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:5858:dac0:b16:e469)
[01:06:28] *** Joins: silly_ (~silly@user/silly)
[01:06:56] <electrostatic> We should invent the Internet
[01:07:52] *** Quits: silly (~silly@user/silly) (Ping timeout: 252 seconds)
[01:07:55] *** Joins: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net)
[01:07:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:07:58] <sheetjs> does any web browser, other than microsoft edge, use "Edge/" in the UA?
[01:09:19] <nullbytes> When calling close() in a WebWorker, are the WebWorker's subworkers also closed or do they need to be closed separately?
[01:09:50] *** Quits: silly_ (~silly@user/silly) (Client Quit)
[01:10:42] *** Quits: roman_ (~roman@mob-194-230-147-119.cgn.sunrise.net) (Quit: Leaving)
[01:12:16] *** Joins: alyx (alyx@atheme/alyx)
[01:19:31] *** Quits: volgar1x (~volgar1x@37.172.111.138) (Read error: Connection reset by peer)
[01:20:07] *** Joins: mexen (uid495612@user/mexen)
[01:27:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:28:02] *** Joins: Snyp (~Snyp@49.207.225.119)
[01:30:07] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89)
[01:31:20] *** Joins: Northwoods_ (~Northwood@202.14.122.173)
[01:32:07] *** Joins: legit (petru@2a03:b0c0:3:f0::60:1000)
[01:33:27] *** Quits: Northwoods (~Northwood@202.14.122.173) (Ping timeout: 240 seconds)
[01:34:25] <legit> Hi, I'm fairly new to JS. Why does const still work when I'm using it in a loop to add elements? https://dpaste.com/AN5DXUBYS
[01:35:14] <GreenJello> it's block scoped, so there's an independent newImage variable for every iteration
[01:35:59] <GreenJello> for example, if you used that variable inside onClick, each click handler would see the element from its iteration, instead of all seeing the last element
[01:36:30] <legit> Is there any advantage to using const here instead of let?
[01:36:43] <legit> IMO, let makes more sense to me
[01:37:07] <GreenJello> no technical benefit, just a convention
[01:37:55] <celphi> what correct way to add form elements to FormData object?
[01:38:03] <celphi> what *is
[01:38:17] <legit> GreenJello: thanks!
[01:38:33] <sheetjs> celphi: append
[01:38:41] <celphi> i have to append one at a time?
[01:38:57] <GreenJello> or pass the form to the constructor
[01:38:59] <celphi> isnt there a way to pass in argument into FormData?
[01:39:17] <sheetjs> yeah the constructor takes a FORM dom element
[01:39:24] <celphi> new FormData(document.querySelector('form')) ?
[01:39:29] <sheetjs> yeah
[01:40:11] <sheetjs> and if you want to do an upload, you need to construct a File object
[01:40:29] <sheetjs> formdata.append('datafile
[01:40:33] <celphi> it doesnt appear to be adding
[01:40:42] <sheetjs> formdata.append('datafile', new File([data], 'path'))
[01:40:49] <sheetjs> are you trying to modify the existing form?
[01:41:02] <celphi> it's just a basic form with fetch sending it
[01:41:25] <celphi> body: new FormData(document.querySelector('form'))
[01:41:32] <celphi> method: "POST"
[01:42:09] <GreenJello> inspect the request in devtools
[01:42:15] <celphi> yeah it's empty
[01:42:27] <sheetjs> iterate the  fd
[01:42:27] <GreenJello> do your fields have name attributes?
[01:42:57] <sheetjs> actually, first check if document.querySelector('form') is actually returning something
[01:43:15] <GreenJello> and returning the right thing
[01:43:35] <sheetjs> once you're sure the dom element is correct, save the formdata and loop it
[01:43:57] <sheetjs> const fd = new FormData(...); for(let x of fd) console.log(x);
[01:44:26] <celphi> argh im such a noob
[01:44:45] <celphi> i had ids on them for labels but forgot to add names
[01:45:56] <GreenJello> I've done that
[01:46:16] <sheetjs> or forgetting to memoize
[01:47:11] <sheetjs> was trying to figure out why sprintf-js was faster than printj, turns out the former memoizes the parsed printf string while the latter does not
[01:47:49] <GreenJello> leaking memory for time savings is cheating
[01:48:23] <GreenJello> but also smart
[01:48:49] <sheetjs> in context, you usually have a small number of format strings that are used repeatedly
[01:48:54] <sheetjs> so it makes sense there
[01:52:32] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:57:11] <sheetjs> before changes, the benchmarks found sprintf-js about 4x faster than printj with no specifiers and comparable performance with 2 specifiers
[01:58:20] <sheetjs> after memoization, the benchmarks show printj 2x faster than sprintf-js with no specifiers and 4x faster with 2 specifiers
[01:59:15] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: leaving)
[02:00:52] *** Joins: bambanxx (~bambanx@181-163-47-91.baf.movistar.cl)
[02:02:41] <sheetjs> hmm does memoization merit a major or minor or patch version bump?
[02:03:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[02:03:49] <celphi> just implement your own?
[02:04:14] <sheetjs> yeah that was the change
[02:04:43] <sheetjs> so its currently 1.2.3, question is whether the change merits a major bump (2.0.0) or a minor bump (1.3.0) or a patch bump (1.2.4)
[02:05:55] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[02:07:04] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:07:17] *** Joins: federico_it (~textual@151.95.116.125)
[02:09:27] <nullbytes> When calling close() in a WebWorker, are the WebWorker's subworkers also closed or do they need to be closed separately?
[02:11:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[02:14:56] <sheetjs> https://html.spec.whatwg.org/multipage/workers.html#close-a-worker
[02:17:18] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 244 seconds)
[02:18:23] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:84c0:bcf1:845f:92bb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:40] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c1d0:e929:bfa7:e50e)
[02:22:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[02:26:45] *** Joins: nomic (~nomic@185.217.117.169)
[02:31:57] *** Joins: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607)
[02:36:13] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:c5eb:f09:75ba:bf2e)
[02:37:20] *** Joins: voltage (voltage@user/voltage)
[02:37:37] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[02:37:40] *** voltage is now known as voltagE_
[02:37:44] *** voltagE_ is now known as voltage_
[02:41:47] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[02:42:06] *** Joins: pavonia (~user@user/siracusa)
[02:43:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:44:30] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:45:21] *** Joins: silly_ (~silly@user/silly)
[02:45:39] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[02:45:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:46:49] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:47:12] *** Quits: teut (~teut@106.212.2.35) (Quit: Connection closed)
[02:51:38] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:51:47] <nullbytes> sheetjs: It doesn't say whether close() closes the subworkers
[02:52:17] <sheetjs> right, so it's probably better to assume it doesn't
[02:53:49] *** Joins: hakeem (~hakeem@user/hakeem)
[02:54:03] *** Joins: federico_it (~textual@151.95.116.125)
[02:54:52] *** Quits: codemin (~codemin@69.167.14.151) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:56:10] *** Quits: Snyp (~Snyp@49.207.225.119) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:56:45] *** Joins: codemin (~codemin@69.167.14.151)
[02:58:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[03:00:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:02:46] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:51] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[03:05:34] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[03:07:21] *** Joins: Snyp (~Snyp@49.207.225.119)
[03:08:00] *** Gustavo6046_ is now known as Gustavo6046
[03:09:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 252 seconds)
[03:09:40] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[03:10:43] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:12:56] *** Joins: Karatsuba (~jamer05@user/karatsuba)
[03:16:07] *** Quits: byanka__ (~byanka@78.137.43.40) (Ping timeout: 240 seconds)
[03:21:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:21:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:21:10] *** Joins: wroathe (~wroathe@user/wroathe)
[03:21:29] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Quit: Leaving)
[03:24:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[03:31:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[03:31:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:33:25] *** Gustavo6046_ is now known as Gustavo6046
[03:34:13] *** Quits: Snyp (~Snyp@49.207.225.119) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:41:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:48:36] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[03:49:01] *** Quits: junktext (~junktext@109.201.152.169) (Ping timeout: 252 seconds)
[03:53:06] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[03:55:20] *** Joins: RogerSUSE (~RogerSUSE@2600:6c51:7b7f:b4f:1cd9:8f74:3d62:a671)
[03:57:21] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:58:34] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[04:01:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 244 seconds)
[04:12:08] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[04:13:10] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Ping timeout: 252 seconds)
[04:15:11] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[04:16:40] *** Quits: Guest33 (~Guest33@p200300c8cf227600cb1855d9a3693c92.dip0.t-ipconnect.de) (Quit: Client closed)
[04:20:03] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[04:20:52] *** Joins: ferdna (~ferdna@user/ferdna)
[04:21:18] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 244 seconds)
[04:28:04] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:30:03] *** Joins: yurakeshi (~ale@2804:14c:c4:83b5:791a:18da:7d68:21d3)
[04:31:12] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[04:37:49] *** Joins: zebrag (~chris@user/zebrag)
[04:39:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:41:03] *** Joins: Crash1hd_ (~Crash1hd@64.56.153.179)
[04:41:16] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 252 seconds)
[04:51:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:57:47] *** Joins: zebrag (~chris@user/zebrag)
[05:01:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:02:20] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c1d0:e929:bfa7:e50e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:09:06] *** Quits: RogerSUSE (~RogerSUSE@2600:6c51:7b7f:b4f:1cd9:8f74:3d62:a671) (Quit: RogerSUSE)
[05:11:10] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[05:11:29] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[05:11:37] *** Quits: OhTheCode (~OhTheCode@118.210.126.109) (Ping timeout: 248 seconds)
[05:13:43] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:14:49] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:16:38] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:18:18] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[05:20:44] *** Joins: Snyp (~Snyp@49.207.225.119)
[05:21:08] *** Joins: Achylles_ (~Achylles_@177.188.61.119)
[05:22:06] *** Quits: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607) (Remote host closed the connection)
[05:22:27] *** Joins: zebrag (~chris@user/zebrag)
[05:24:09] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:33:44] *** Joins: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83)
[05:34:09] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 244 seconds)
[05:34:58] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[05:41:10] *** Joins: masoudd (~masoudd@user/masoudd)
[05:41:33] *** Quits: kmh (~kmh@p200300df5f0533005dc82434a697d12d.dip0.t-ipconnect.de) (Quit: Leaving)
[05:41:43] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:42:04] *** Joins: earendel (uid498179@user/earendel)
[05:42:31] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Client Quit)
[05:42:45] *** Quits: bambanxx (~bambanx@181-163-47-91.baf.movistar.cl) (Quit: Textual IRC Client: www.textualapp.com)
[05:43:54] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:44:22] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[05:44:33] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[05:48:19] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[05:49:23] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[05:49:28] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[05:50:01] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:50:56] <evidlo> I'm interested in learning why the login textbox on piazza.com gets defocused when Firefox loses focus.  How can I use the inspector to figure this out?
[05:52:54] *** Quits: Achylles_ (~Achylles_@177.188.61.119) (Remote host closed the connection)
[05:54:03] <hassoon> evidlo: probably a behaviour natife to firefox, otherwise, you can force it to behave like in chrome using custom js logic
[05:54:10] <hassoon> * native *
[05:54:18] *** Joins: pavonia (~user@user/siracusa)
[05:54:35] <theskillwithin> does the same in chrome
[05:55:38] <masoudd> evidlo, I'd start by bringing the modal forward, right click on it and inspect, See the <dev id=loginModal ...> and see the events registered on it
[05:55:42] *** Joins: strive (~strive@user/strive)
[05:55:50] <theskillwithin> i mean it kinda makes sense, cuz if that browser isn't even in focus, why would something inside of it be
[05:55:54] <hassoon> theskillwithin: nope
[05:56:33] <evidlo> the problem is that the textbox isn't refocused when window focus is returned
[05:56:48] <masoudd> But a normal text field doesn't lose focus like that modal
[05:57:26] <theskillwithin> ohhh
[05:59:16] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[06:00:55] <theskillwithin> thats odd
[06:03:10] <hassoon> theskillwithin: https://ghanhass.github.io/fast-demo/
[06:03:15] <hassoon> they are not the same
[06:03:20] <hassoon> evidlo: is right
[06:03:31] <theskillwithin> hassoon ya i figured that out since
[06:03:42] <hassoon> evidlo: ya you can fix that behaviour with custom javascript, not big of a deal
[06:04:34] <evidlo> I'm going to report it to piazza and I wanted to be a more technical with my submission
[06:05:21] <evidlo> so what is the cause exactly?  I just created a test html file with a single input box and the behavior is corrected
[06:05:22] <evidlo> correct*
[06:05:28] <hassoon> evidlo: nope, i suggest you make a fiddle sample to watch the whole thing closely first, if the behaviour persists with your sample fiddle, it's related to the browsers, otherwise, you can inform them
[06:05:52] <hassoon> evidlo: reproduce the use case first
[06:05:56] <hassoon> in a smaple fiddle
[06:06:55] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[06:07:08] <evidlo> I'm saying I don't know how to recreate it.  I don't know the cause
[06:07:44] <hassoon> evidlo: it's simple, make an input autofocus, and test it in different borowsers
[06:07:47] <hassoon> * browsers
[06:08:26] <hassoon> it's one simple input, and some few simple  lines of code, if not one ,
[06:09:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[06:09:20] <evidlo> the autofocus property controls whether the element gets focus on page load.  I'm talking about if the element gets focus when the window is refocused
[06:09:21] <theskillwithin> ah i know why
[06:09:32] <theskillwithin> they have tabIndex="-1" on the parent
[06:09:47] <masoudd> http://ix.io/3xuW/js Now where is that shown.bs.modal being fired
[06:09:48] <theskillwithin> if you remove that attribute on the parent element, then it works
[06:10:45] <theskillwithin> see the div with id loginModel, has tabindex="-1"
[06:10:55] <theskillwithin> delete that attribute
[06:11:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[06:12:09] <masoudd> yeah
[06:12:30] *** Quits: Snyp (~Snyp@49.207.225.119) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:13:07] <evidlo> so how could I have figured that out with the inspector?
[06:13:38] <theskillwithin> practice
[06:14:27] <masoudd> https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex
[06:14:27] <theskillwithin> in inspector when i saw that, i was like hmm is that the cause, and i deleted it, focused the input  then changed windows and back and saw it started working properly
[06:14:27] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[06:15:07] <evidlo> also why does tabIndex influence the refocusing behavior when that property is about keyboard navigation?
[06:15:23] <theskillwithin> well it has to start somewhere
[06:15:56] <masoudd> This:"The tabindex global attribute indicates that its element can be focused". Basically tells the browser don't focus this
[06:17:15] <evidlo> it looks like its supposed to mean, "don't cycle through this element when the user is pressing tab"
[06:21:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 252 seconds)
[06:25:11] *** Parts: strive (~strive@user/strive) (= "")
[06:25:20] *** Joins: Snyp (~Snyp@49.207.225.119)
[06:26:19] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:5858:dac0:b16:e469) (Ping timeout: 252 seconds)
[06:34:17] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[06:35:39] *** Quits: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net) (Remote host closed the connection)
[06:43:42] *** Quits: codemin (~codemin@69.167.14.151) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:43:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:46:25] *** Quits: Karatsuba (~jamer05@user/karatsuba) (Quit: WeeChat 2.8)
[06:46:52] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:49:04] *** Joins: Rockwood (~Rocky@user/rocky)
[06:50:25] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:52:48] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:54:15] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:58:22] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:58:42] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:59:22] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[06:59:56] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[07:01:38] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:01:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:01:44] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:02:07] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:02:48] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:03:06] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:04:06] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:04:24] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[07:07:44] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[07:08:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:08:45] *** Joins: zuQe8 (~thelounge@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[07:09:34] *** Quits: zuQe8 (~thelounge@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[07:10:10] *** Quits: caseDor7 (~caseDor7@2a01:e34:ec4d:78e0:d2cf:828f:70fc:908b) (Ping timeout: 240 seconds)
[07:10:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:10:28] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:10:28] *** Joins: wroathe (~wroathe@user/wroathe)
[07:11:12] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[07:12:41] *** Joins: caseDor7 (~caseDor7@2a01:e34:ec4d:78e0:d2cf:828f:70fc:908b)
[07:22:25] *** Quits: Lynn (~Lyn@user/law) (Ping timeout: 252 seconds)
[07:22:35] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:25:06] *** Quits: sagax (~sagax@213.138.71.146) (Excess Flood)
[07:27:43] *** Quits: Snyp (~Snyp@49.207.225.119) (Quit: Textual IRC Client: www.textualapp.com)
[07:29:01] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[07:33:24] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:36:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:38:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[07:38:57] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:5e03:f088:4523:9a92)
[07:42:39] *** Quits: wintersky (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:43:30] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:796c:f1ba:8b6a:73cc)
[07:45:43] *** Joins: nomic (~nomic@185.217.117.169)
[07:47:43] *** Quits: alyx (alyx@atheme/alyx) (Remote host closed the connection)
[07:48:38] *** Joins: carlino3 (~carlino3@user/carlino3)
[07:48:38] <carlino3> hi
[07:48:53] <electrostatic> ello
[07:48:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:49:34] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[07:51:29] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[07:51:36] <carlino3> what is the best approach to solve this problem in nodejs? class based or modular based? export the class or the instance? (it is supossed to be a singleton) https://pastebin.com/jwcT8zJd
[07:52:47] <Rockwood> o/
[07:55:39] <GreenJello> just use a variable?
[07:59:04] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:59:55] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:00:29] <carlino3> GreenJello, sorry,what do you mean?
[08:01:04] *** Joins: matsaman (~matsaman@user/matsaman)
[08:01:55] *** Quits: anton (anton@tloks.com) (Quit: anton)
[08:02:15] <carlino3> this is an example, of course if i would just need to increment a counter i would use a variable. imagine that it does something complex or useful
[08:03:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[08:05:54] <GreenJello> oh. In general it's best to avoid exporting singletons instead of the factory/class
[08:06:23] <GreenJello> you can have another module that instantiates it and exports that if you specifically need a stateful module
[08:07:11] <GreenJello> you want to be able to create multiple instances for testing, or future requirements
[08:08:45] *** Quits: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:08:56] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:12:36] <carlino3> GreenJello that's a good point yes
[08:18:31] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:796c:f1ba:8b6a:73cc) (Ping timeout: 252 seconds)
[08:22:26] <carlino3> GreenJello what about dependency injection? is it common to use this pattern in node? https://pastebin.com/Kb3WArsA
[08:25:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:25:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:25:05] *** Joins: wroathe (~wroathe@user/wroathe)
[08:29:51] <GreenJello> when you have a reason to do so, sure
[08:29:59] *** Joins: db (uid18678@id-18678.helmsley.irccloud.com)
[08:30:00] <GreenJello> not for everything all the time
[08:30:12] <carlino3> i understand
[08:30:20] <carlino3> and what would be a good reason for using it?
[08:30:37] <carlino3> for example, in this example. is it justified?
[08:31:14] <GreenJello> unclear
[08:32:19] <GreenJello> you tell me, what's the reason you're using it here?
[08:33:13] <carlino3> i don't know. maybe you have multiple user models and want to have multiple user managers with different models?
[08:33:58] <GreenJello> and if that was the case, it'd be perfectly fine
[08:34:19] <GreenJello> if you could write it either way, then go with explicit imports
[08:35:01] <GreenJello> it's easier to follow code that doesn't use DI as you follow the imports instead of grepping for every caller and working backwards
[08:37:37] *** Parts: Rockwood (~Rocky@user/rocky) (I am coming back in few)
[08:38:58] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[08:39:32] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[08:39:32] *** Joins: mrdata_ (~mrdata@user/mrdata)
[08:42:07] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[08:42:18] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 250 seconds)
[08:42:24] <carlino3> right. thanks for your help
[08:43:11] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[08:43:16] *** mrdata_ is now known as mrdata
[08:43:28] *** Quits: carlino3 (~carlino3@user/carlino3) (Quit: Client closed)
[08:44:15] *** Quits: pizdets (~pizdets@183.182.114.107) (Ping timeout: 245 seconds)
[08:44:25] *** Joins: pizdets_ (~pizdets@183.182.114.153)
[08:49:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:58:28] <KevinX> why is array.fill() broken?
[08:58:37] <matsaman> the better to love you with
[08:59:42] <KevinX> the start argument is 0 index based, and the end argument is indexed starting at 1
[08:59:48] <KevinX> =/
[08:59:48] *** Quits: Northwoods_ (~Northwood@202.14.122.173) (Quit: Leaving)
[09:00:32] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[09:00:45] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[09:00:47] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[09:00:47] *** Quits: merced (merced@user/merced) (*.net *.split)
[09:00:47] *** Quits: mikebald (~mikebald@159.203.185.106) (*.net *.split)
[09:00:47] *** Quits: samsch (~samsch@171.ip-192-99-69.net) (*.net *.split)
[09:00:54] *** Joins: samsch (~samsch@171.ip-192-99-69.net)
[09:00:57] *** Joins: masoudd (~masoudd@user/masoudd)
[09:01:05] *** Joins: merced (merced@user/merced)
[09:01:06] *** Joins: mikebald (~mikebald@159.203.185.106)
[09:02:09] <matsaman> KevinX: welcome to the world my dude
[09:02:14] <matsaman> designed by humans for thousands of years
[09:02:18] <matsaman> aged to perfection
[09:02:31] <matsaman> best not to dwell on it
[09:02:39] <matsaman> write your own function that does it the way you want it to and move on =)
[09:03:10] <KevinX> this mishap caused my rocket corp startup to fail
[09:04:35] <KevinX> but really, there was some impromptu code challenge at work and i fumbled that one assuming the end arg was 0 index based
[09:05:48] <GreenJello> KevinX, you meant some other method?
[09:06:21] <KevinX> which other method?
[09:06:32] <GreenJello> fill takes one argument
[09:07:40] <KevinX> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill
[09:07:51] <GreenJello> oh
[09:08:05] <GreenJello> I've never actually seen it used with more than one argument
[09:08:20] <KevinX> Yeah same here
[09:08:49] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[09:08:56] <GreenJello> but it's just a range, which are usually inclusive on the low end and exclusive on the high end
[09:09:10] <GreenJello> across many languages and functions
[09:09:28] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[09:09:47] <GreenJello> e.g. Math.random returns a value in the range [0, 1)
[09:09:57] <GreenJello> it can return 0 but never 1
[09:10:16] <KevinX> yeah Im sure it's the right way to do it
[09:10:20] <KevinX> Just caught me
[09:11:24] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[09:11:29] <KevinX> isnt slice 0 based though?
[09:12:20] <GreenJello> slice is also inclusive on the low end, exclusive on the high end
[09:12:33] <KevinX> slice is 0 based but exclusive
[09:12:40] <KevinX> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice
[09:13:01] <GreenJello> .slice(0, 2) is from 0 until 2 (but not including 2)
[09:13:13] <GreenJello> so it returns two items
[09:15:00] <KevinX> so same behavior just documented differently
[09:17:25] *** Joins: mei (~mei@user/mei)
[09:19:30] *** Quits: mrdata (~mrdata@user/mrdata) (Read error: Connection reset by peer)
[09:20:15] *** Joins: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca)
[09:20:56] *** Quits: mrdata (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[09:20:56] *** Joins: mrdata (~mrdata@user/mrdata)
[09:29:25] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Ping timeout: 252 seconds)
[09:39:14] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:42:36] <sheetjs> is it worth dropping Edge 15-18 from browser testing?
[09:43:18] <GreenJello> check usage data?
[09:43:33] <sheetjs> its for a library
[09:46:04] <sheetjs> basically, edge 15 somehow broke toExponential and it was never fixed
[09:46:04] <matsaman> https://caniuse.com/usage-table
[09:46:04] <sheetjs> https://camo.githubusercontent.com/7fdaffc2107892f21c3a3fae3bd5dab0cfc1752ce26b5228c94eb077aa9a7758/68747470733a2f2f73617563656c6162732e636f6d2f62726f777365722d6d61747269782f7072696e746a2e737667 so left with this test result
[09:46:04] <matsaman> you could certainly justify dropping all pre edge-79/blink microsoft browsers
[09:46:04] <GreenJello> caniuse says it's about 0.11% for those versions combined
[09:46:05] <sheetjs> the heartbreaking part is how IE9 and edge 14 do the right thing
[09:46:05] <matsaman> and 0.12% for all versions of edge <=18
[09:46:26] <matsaman> fix it for fun, but not for profit unless it's a hell of a lot of it
[09:48:03] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[09:48:25] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[09:48:34] <sheetjs> gotta think about the environment
[09:50:22] *** Joins: Daniel159 (~daniel@d.sb)
[09:50:47] <ljharb> sheetjs: no, just polyfill it
[09:51:00] <ljharb> sheetjs: DM me details and i'll make a separate npm package for it so you don't have to rely on the polyfill
[09:51:08] <ljharb> sheetjs: and then babel will include it in env data
[09:51:17] <sheetjs> this was the thing from 3 years ago
[09:51:19] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[09:51:31] <sheetjs> an edge engineer said it was fixed in edge 17 but it was not
[09:51:33] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[09:51:34] *** Quits: Daniel15 (~daniel@d.sb) (Read error: Connection reset by peer)
[09:51:34] *** Daniel159 is now known as Daniel15
[09:51:52] <sheetjs> https://github.com/es-shims/es5-shim/issues/453
[09:51:57] <ljharb> ha, ty
[09:52:25] <ljharb> sheetjs: ok well i'll add it to my short list for that shim, and then i'll make a separate package for it.
[09:55:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[09:56:05] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[09:56:21] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[09:57:38] *** tccki_ is now known as tccki
[09:59:07] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[10:01:57] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:12:06] *** Parts: db (uid18678@id-18678.helmsley.irccloud.com) ()
[10:12:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:16:11] *** Joins: dachi_ (~dachinat@37.232.98.166)
[10:18:52] *** Joins: gggp (~textual@111.63.14.115)
[10:19:02] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[10:21:10] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[10:28:04] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:32:20] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[10:37:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[10:39:21] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:41:31] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[10:54:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:54:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:54:30] *** Joins: wroathe (~wroathe@user/wroathe)
[10:57:57] *** Joins: sQVe (~sQVe@user/sqve)
[10:58:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[11:05:27] <tcsc> is there a good reason that the depth for `Array.prototype.flat` defaults to 1 (as opposed to whatever is needed to fully flatten the array — i guess `Infinity`?)
[11:05:27] *** Joins: kakashiA1 (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de)
[11:05:31] <tcsc> that seems like a really weird call
[11:06:36] <sheetjs> it parallels the oddities with concat
[11:07:17] <sheetjs> n> [1,2].concat(3).concat([4])
[11:07:18] <jellobot> (okay) [ 1, 2, 3, 4 ]
[11:08:11] <sheetjs> n> [1,2].concat(3).concat([4]).concat([[5]])
[11:08:12] <jellobot> (okay) [ 1, 2, 3, 4, [ 5 ] ]
[11:08:33] <sheetjs> n> [1,2,3,[4],[[5]]].flat()
[11:08:34] <jellobot> (okay) [ 1, 2, 3, 4, [ 5 ] ]
[11:09:05] <tcsc> hmmm
[11:09:40] <systemfault> n> [1,2,3,[4],[[5]]].flat(Infinity + 1)
[11:09:41] <jellobot> (okay) [ 1, 2, 3, 4, 5 ]
[11:10:28] <tcsc> i'm not sure i follow why concat's auto-append behavior means flat makes more sense that way
[11:10:42] <tcsc> i guess there's probably some discussion of this somewhere in a tc39 repo
[11:10:46] <systemfault> The .concat shit makes absolutely no sense...
[11:11:01] <systemfault> But it was there from the start and they can't change it
[11:11:16] <systemfault> So, there's no discussion to be had.
[11:11:30] <gkatsev> idk, concat kind of makes sense, if you concat two arrays, you should get an array, but if one of the arrays has an array as a property, it should stay as a property
[11:12:51] <systemfault> gkatsev: The point of concat is to concatenate 2 __***ARRAYS***__
[11:12:51] *** Joins: mexen (uid495612@user/mexen)
[11:13:07] <systemfault> n> [].concat(2) // Doesn't make sense
[11:13:08] <jellobot> (okay) [ 2 ]
[11:13:15] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:13:20] <gkatsev> eh
[11:13:32] <tcsc> i can see why concat behaves the way it does but i wouldn't have done it. i see the rationale for flat is here https://github.com/tc39/proposal-flatMap/issues/9
[11:13:50] <theskillwithin> you know how they say don't drop the soap?  i never understood that,  just don't pick the soap up
[11:13:51] <gkatsev> the alternative is to either do nothing or throw an error. I think what we have is _fine_
[11:14:04] <tcsc> i think thats some dubious logic (it seems way more obvious that flattening would do a deep flatten by default), but whatever
[11:14:46] <tcsc> it does seem a little surprising that passing `Infinity` to an api like this is reasonable but fair enough
[11:18:33] <gkatsev> not sure I agree with the reasoning to default to 1, but that's what we have now
[11:19:07] <gkatsev> probably worth just always passing in Infinity unless you specifically want to limit it
[11:20:28] <sheetjs> its like complaining about parseInt
[11:20:34] <sheetjs> if you care, pass the argument
[11:21:43] <gkatsev> not quite, since there was the opportunity for flat to have a different default
[11:21:52] *** Joins: steve0 (~steve0@static24-89-75-24.r.rev.accesscomm.ca)
[11:21:59] <gkatsev> also, now we have Number.parseInt, which is slightly better, I believe
[11:22:28] <gkatsev> er, never mind, Number.parseInt is equivalent
[11:22:38] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:796c:f1ba:8b6a:73cc)
[11:22:59] <gkatsev> Number.isNaN is the fixed one
[11:23:06] <sheetjs> there was an opportunity for concat and for parseInt to do something different
[11:23:15] <sheetjs> a choice was made and we live with those decisions
[11:23:37] <gkatsev> there's a difference between stuff that are in ES3 and the newer stuff, though
[11:23:52] <gkatsev> though, your point does stand that there isn't changing it now.
[11:24:35] <sheetjs> we can speculate why eich chose to do things a certain way
[11:24:53] <sheetjs> for example, why are months 0-indexed but days 1-indexed?
[11:25:20] <systemfault> The JS Date API was stolen from Java IIRC
[11:25:31] <gkatsev> yup, was going to say because java
[11:25:46] <sheetjs> correct, instead of a "different default", eich stuck with the thing everyone was familiar with
[11:25:59] <gkatsev> which, from a certain perspective does make sense
[11:26:04] <theskillwithin> btw sometimes eich didn't choose for himself, did to please others and regretted latter
[11:26:10] <electrostatic> >n -0 === 0
[11:26:19] <sheetjs> n> -0 === 0
[11:26:20] <jellobot> (okay) true
[11:26:41] <sheetjs> electrostatic: in comparisons zero and negative zero are equal
[11:26:52] <systemfault> sheetjs: Familiar? The Date API was shipped with Java 1.0 and was already deprecated in 1.1
[11:27:08] <systemfault> There wasn't any time for anyone to get "familiar" with it
[11:27:14] <sheetjs> time.h (K&R C) uses the same convention
[11:27:28] <sheetjs> https://www.cplusplus.com/reference/ctime/tm/
[11:27:41] <sheetjs> tm_mday is 1-31 while tm_mon is 0-11
[11:27:49] <sheetjs> that's where java got it from iirc
[11:32:18] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7521:4f72:5039:2cc8)
[11:34:09] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:34:35] *** o is now known as niko
[11:36:36] <theskillwithin> systemfault is that why you were late to our last date?
[11:36:58] <sheetjs> theskillwithin: were you irate?
[11:37:42] <theskillwithin> oh ya, its like he doesn't even care about me anymore
[11:37:45] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:38:57] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:39:19] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net)
[11:39:42] <Svitkona> of course
[11:39:45] <Svitkona> we can blame it on C
[11:39:50] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Quit: WeeChat 3.3-dev)
[11:42:41] *** Quits: emo (~emo@2601:88:300:2690:69a8:ab00:c194:b0c) (Ping timeout: 250 seconds)
[11:43:15] <sheetjs> if ritchie were alive we could ask him if it was something from BCPL or some older language
[11:44:47] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[11:45:05] *** Joins: emo (~emo@2601:88:300:2690:7406:180b:c2d3:fb2a)
[11:45:22] <Svitkona> that's ok, i'm content with blaming it on C
[11:45:36] <Svitkona> i like to blame C for every bad thing in current year
[11:47:16] <sheetjs> its difficult to break convention
[11:48:02] <sheetjs> and sometimes people accidentally do it
[11:48:21] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:48:21] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[11:48:21] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[11:48:45] <sheetjs> for example, `Number.prototype.toPrecision` deviates from printf "%g" form in a very specific range
[11:49:09] <sheetjs> which almost feels like an oversight
[11:49:36] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[11:50:22] *** Quits: emo (~emo@2601:88:300:2690:7406:180b:c2d3:fb2a) (Ping timeout: 250 seconds)
[11:51:22] *** Joins: emo (~emo@2601:88:300:2690:e7b2:620f:e24:5150)
[11:52:19] *** Joins: nomic (~nomic@185.217.117.169)
[11:52:47] <sickdyd> what's the semantic html orrect way to have an h1 with different colors?
[11:52:51] <sickdyd> correct *
[11:53:08] <sickdyd> have multiple h1? use a span with a class within the h1 element?
[11:55:18] <interop_madness> I'd vote for h1 with spans
[11:57:47] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[11:59:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net) (Quit: Client closed)
[11:59:59] *** jaamro is now known as ormaaj
[12:00:07] *** Quits: arthurpbs (~arthurpbs@168.121.98.204) (Ping timeout: 252 seconds)
[12:05:43] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[12:09:06] *** Joins: vysn (~vysn@user/vysn)
[12:10:37] *** Quits: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83) (Ping timeout: 252 seconds)
[12:11:13] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[12:19:09] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:19:57] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:20:15] *** Quits: Crash1hd_ (~Crash1hd@64.56.153.179) (Ping timeout: 244 seconds)
[12:24:31] *** Joins: ArchNoob (~maotora@user/archnoob)
[12:28:00] *** Joins: federico_it (~textual@151.95.116.125)
[12:34:27] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[12:34:33] <Maxdamantus> Yes, spans. A single heading should have a single h1.
[12:35:31] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:01] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[12:37:08] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[12:39:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:38] *** Quits: emo (~emo@2601:88:300:2690:e7b2:620f:e24:5150) (Ping timeout: 250 seconds)
[12:44:00] *** Joins: emo (~emo@c-73-195-2-140.hsd1.nj.comcast.net)
[12:52:21] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:57:02] *** Joins: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net)
[12:58:34] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[13:00:02] *** Quits: steve0 (~steve0@static24-89-75-24.r.rev.accesscomm.ca) (Quit: Client closed)
[13:01:17] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[13:01:18] *** Joins: silasfox47 (~silasfox@xdsl-85-197-57-82.nc.de)
[13:02:04] *** Quits: silasfox47 (~silasfox@xdsl-85-197-57-82.nc.de) (Client Quit)
[13:09:47] *** Joins: kakashiAL (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de)
[13:12:13] *** Quits: kakashiA1 (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[13:12:43] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 252 seconds)
[13:18:06] *** Joins: diamondbond (~diamondbo@116.206.245.127)
[13:31:26] *** Joins: Lyn (~Lyn@user/law)
[13:35:44] *** Quits: diamondbond (~diamondbo@116.206.245.127) (Quit: Leaving)
[13:53:18] *** Joins: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net)
[13:55:58] *** Quits: codebam (~codebam@user/codebam) (Quit: ZNC 1.8.2 - https://znc.in)
[13:57:18] *** Joins: codebam (~codebam@user/codebam)
[14:01:53] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:08:10] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Ping timeout: 240 seconds)
[14:11:01] *** Joins: Naan (~Naan@user/naan)
[14:13:33] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[14:19:06] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[14:20:40] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:796c:f1ba:8b6a:73cc) (Ping timeout: 240 seconds)
[14:30:50] *** Quits: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net) (Quit: Client closed)
[14:34:49] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:38:50] *** Joins: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de)
[14:39:48] <cthulchu_> my wonderful folks
[14:40:02] <cthulchu_> why would you ever use a function constructor to define a function?
[14:40:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:41:12] *** Quits: Talon (Talon@172.77.135.215) (Read error: Connection reset by peer)
[14:41:42] *** Joins: Talon (Talon@172.77.135.215)
[14:45:15] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[14:49:25] <Alexendoo> cthulchu_: If you're writing a template language I guess
[14:50:32] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[14:52:18] <cthulchu_> well, no, except the template language case hehe :)
[14:55:39] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[14:57:05] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[14:58:00] *** Quits: CiaoSen (~Jura@p549cbd40.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:04:36] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[15:06:43] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:09:40] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:11:33] <Lyn> what's the diff between npm and yarn? I ran into a dependency conflict when trying to install @react-navigation/material-bottom-tabs and Stackoverflow is saying using yarn solved the issue
[15:12:46] <Dorward> Lyn: They are different tools that have the same core purpose. They do some things in slightly different ways. They have slightly different features around the edges.
[15:14:55] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:15:21] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[15:18:58] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[15:21:29] *** Joins: Thomas25 (~textual@46.197.96.36)
[15:22:58] *** Joins: Hay (~joe@84.215.37.126)
[15:23:01] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Remote host closed the connection)
[15:23:20] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[15:25:30] *** Quits: caseDor7 (~caseDor7@2a01:e34:ec4d:78e0:d2cf:828f:70fc:908b) (Quit: Leaving)
[15:25:37] *** Joins: caseDor7 (~caseDor7@2a01:e34:ec4d:78e0:d2cf:828f:70fc:908b)
[15:30:53] <bobdobbs> How can I test to see if a node has no html in it?
[15:31:23] <bobdobbs> Initially I googled to try and find a test to see if a node is empty. But apparently this isn't the same thing as having no html nodes in it.
[15:31:43] <bobdobbs> So if a node has a space or a line break, it isn't "empty empty"
[15:32:15] <Cork> bobdobbs: a node never have html in it, it can have child nodes
[15:32:50] <Cork> that childnodes can be a textnode or an element
[15:33:06] <Cork> hmm *or elements
[15:33:11] *** Joins: mouseghost (~draco@user/mouseghost)
[15:33:16] <mouseghost> hewoooo
[15:37:15] *** Joins: codemin (~codemin@69.166.223.220)
[15:38:42] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:39:07] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[15:40:12] *** Quits: Hay (~joe@84.215.37.126) (Quit: WeeChat 3.0.1)
[15:41:07] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:41:30] <Dorward> @bobdobbs: https://developer.mozilla.org/en-US/docs/Web/API/Element/children will tell you if there are any HTML elements among the children. So you can do:   node?.children?.length
[15:42:08] <bobdobbs> thanks
[15:51:39] *** Quits: udev_not_initial (~udev_not_@194.11.164.3) (Quit: Client closed)
[15:52:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:53] *** Joins: Hay (~joe@84.215.37.126)
[15:55:53] *** Quits: Hay (~joe@84.215.37.126) (Quit: leaving)
[15:57:15] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[15:59:25] *** Quits: dachi_ (~dachinat@37.232.98.166) (Ping timeout: 252 seconds)
[16:01:42] *** Quits: yurakeshi (~ale@2804:14c:c4:83b5:791a:18da:7d68:21d3) (Quit: Leaving)
[16:03:54] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[16:07:40] <peteyboy1> ok... i've been struggling for weeks, even with help of 2 different "seniors" if you will, to deploy a react/node/postgres project to heroku, with no success. is there anyone here with the patience and knowledge to help a brother out with a call? i'd be screen-sharing and all that. it's most likely something between postgres and heroku. we've gone through all the tutorials, all the FAQs and whatnot...
[16:08:44] <silly_> don't you have specific questions? error messages and such?
[16:08:45] <peteyboy1> it's pretty damn frustrating as it makes it hard to be able to look for a job properly, as i have no link to share in order to show my last and best project to date...
[16:09:34] <peteyboy1> silly_, there is probably 700 different ones. trust me, doing it over chat would take a month, with the utmost dedication on your part included...
[16:09:36] <silly_> lol, that's really not the best start
[16:10:13] <peteyboy1> you mean not being able to show my last project to a potential employer? yeah...
[16:10:15] *** Joins: hay (~joe@84.215.37.126)
[16:10:18] *** Quits: codemin (~codemin@69.166.223.220) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:10:24] <silly_> it works locally?
[16:10:50] <peteyboy1> also, i've spent 2-3 hours with 2 different knowledgeable people trying to help me over a call and screen-sharing, so chat is a no-go
[16:10:51] <peteyboy1> it does
[16:12:26] <peteyboy1> if anyone has the patience, i'll provide my skype or a zoom link or whatever
[16:14:36] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[16:16:29] *** Joins: codemin (~codemin@69.166.223.220)
[16:17:56] *** Quits: Thomas25 (~textual@46.197.96.36) (Read error: Connection reset by peer)
[16:31:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[16:33:30] *** Joins: gggp (~textual@111.63.14.115)
[16:35:15] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[16:43:07] *** Quits: Guest1364 (~seabassfo@2001:470:69fc:105::187) (Quit: Reconnecting)
[16:43:24] *** Joins: Guest1364 (~seabassfo@2001:470:69fc:105::187)
[16:44:15] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Read error: Connection reset by peer)
[16:45:46] *** Joins: pulse (~pulse@user/pulse)
[16:48:05] *** Joins: dachinat (~dachinat@37.232.98.166)
[16:48:16] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:48:42] *** Joins: pizdets (~pizdets@183.182.110.19)
[16:48:55] *** Quits: pizdets_ (~pizdets@183.182.114.153) (Ping timeout: 252 seconds)
[16:52:03] *** Quits: Guest1364 (~seabassfo@2001:470:69fc:105::187) (Changing host)
[16:52:03] *** Joins: Guest1364 (~seabassfo@user/seabass)
[16:52:12] *** Guest1364 is now known as seabass_
[16:54:42] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[16:55:23] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:01:06] *** Quits: chia (sid510567@id-510567.tinside.irccloud.com) ()
[17:03:08] *** Joins: chia (sid510567@id-510567.tinside.irccloud.com)
[17:04:36] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[17:09:11] *** Joins: yurakeshi (~ale@2804:14c:c4:83b5:b8c3:c412:b2e8:c0c)
[17:09:15] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[17:09:40] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[17:09:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[17:12:03] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: Deide (~deide@user/deide) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: repo[m] (~repo@user/repo) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Quit: Bridge terminating on SIGTERM)
[17:12:10] *** Quits: seabass_ (~seabassfo@user/seabass) (Quit: Bridge terminating on SIGTERM)
[17:12:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[17:14:43] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[17:16:31] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:17:14] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[17:17:14] *** Joins: repo[m] (~repo@user/repo)
[17:17:14] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[17:17:14] *** Joins: seabass_ (~seabassfo@2001:470:69fc:105::187)
[17:17:14] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[17:17:14] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[17:17:14] *** Joins: kadoban (~kadoban@user/kadoban)
[17:17:14] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[17:17:14] *** Joins: Deide (~deide@user/deide)
[17:17:14] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[17:17:14] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:17:14] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[17:17:14] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[17:17:18] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[17:17:31] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[17:17:49] *** Joins: wintersky (uid453465@id-453465.helmsley.irccloud.com)
[17:18:02] *** Quits: seabass_ (~seabassfo@2001:470:69fc:105::187) (Client Quit)
[17:18:20] *** Joins: seabass_ (~seabassfo@2001:470:69fc:105::187)
[17:18:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:18:55] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[17:19:53] *** Quits: Ducki_ (~ducki@user/ducki) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:20:13] *** Joins: Ducki (~ducki@user/ducki)
[17:23:45] *** Quits: Talon (Talon@172.77.135.215) (Read error: Connection reset by peer)
[17:25:48] *** Joins: paule32 (~paule32@user/paule32)
[17:25:58] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:c5eb:f09:75ba:bf2e) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:28:00] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[17:28:33] *** Joins: nomic (~nomic@185.217.117.169)
[17:29:41] <onizu> hi, if I get an element as:  let elem =  document.getElementById('elemId'); then if I try: elem.onclick(function(event) {}); -- it gives an error: .onclick is not a function... How can I use an onclick event on an element?
[17:31:12] *** Joins: Talon (Talon@172.77.135.215)
[17:35:05] <leduyquang753> You need to assign the callback function to it.
[17:35:06] *** Joins: Junxter (~Junxter@114.221.66.47)
[17:36:21] <silly_> !onclick @onizu
[17:36:22] <jellobot> onizu, Using ".onclick", ".onchange", or "on" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
[17:37:21] <onizu> it was giving the same error with addEventListener as well
[17:37:33] <leduyquang753> What did you try?
[17:37:52] <onizu> elem.addEventListener(function(event) {});
[17:38:09] <silly_> elem.addEventListener('click', function(event) {});
[17:38:16] <onizu> yes, sorry
[17:38:26] <onizu> I had tried 'mouseover'
[17:39:09] <silly_> and the error message was...
[17:39:10] <onizu> i'll check the html part
[17:39:36] <onizu> it was : elem.addEventListener  is not a function
[17:39:52] <silly_> then you did something else wrong
[17:40:06] <onizu> i think it must be in the html part, checking
[17:40:10] <silly_> maybe document.getElementsBy... or querySelectorAll?
[17:41:04] <onizu> err.. it was .getElementsByClass
[17:41:18] <silly_> key here is getElement(s!)
[17:41:33] <silly_> this will return a html collection of several elements
[17:41:41] <onizu> yeah
[17:41:43] <silly_> you'll have to iterate over it
[17:41:52] <onizu> doing
[17:41:57] <silly_> and call addEventListener on each
[17:42:17] <onizu> it's an object, right?
[17:42:22] <silly_> what?
[17:42:40] <silly_> the html collection?
[17:42:43] <onizu> for(var [key, val] of Object.entries(elemSet)) {    console.log(`${key}: ${value}`); } is not printing anything in the console
[17:42:46] <onizu> yes the html collection
[17:43:25] <silly_> [...elements].forEach
[17:43:38] <silly_> or Array.from(elements)
[17:44:02] <onizu> .forEach works on an object?
[17:44:06] <silly_> it's an array like iterable thing
[17:44:07] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[17:44:17] <silly_> but also has already .forEach i think
[17:44:34] <silly_> you can try elemSet.forEach
[17:46:08] <onizu> not printing anything
[17:46:10] <onizu> :/
[17:46:18] <silly_> you'll have to create an array of it
[17:46:26] <onizu> how?
[17:46:31] <onizu> type-casting
[17:47:10] <silly_> [...elements].forEach, Array.from or the old way Array.prototype.slice.call(elemSet)
[17:48:18] <onizu> why can't I use  the elemSet object as is?
[17:48:40] <onizu> to cycle through
[17:49:04] <silly_> use querySelectorAll, this will return a NodeList instead, these do have .forEach methods
[17:49:17] <onizu> k
[17:49:25] <silly_> getElementsBy... are ancient functions
[17:50:23] *** Joins: gehn (~gehn@user/gehn)
[17:50:46] <onizu> difference between querySelector and querySelectorAll ?
[17:51:03] <silly_> modern NodeList vs ancient HTMLCollection
[17:51:20] <silly_> ah wait not that...
[17:51:22] <onizu> the querySelector() does not take classes?
[17:51:44] <silly_> querySelector returns first match, querySelectorAll returns all matches in a NodeList
[17:52:00] <silly_> they both take css selectors
[17:52:36] <onizu> I passed a class ".className" to querySelector() and it gave:  null
[17:52:54] <silly_> then, there was no match
[17:53:47] <silly_> document.querySelector or el.querySelector
[17:54:29] <silly_> https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
[17:54:40] <silly_> https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector
[17:54:44] *** Joins: teut (~teut@106.212.2.35)
[17:54:57] <teut> is https://dpaste.org/4WwT   a right custom hook?
[17:55:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[17:56:19] <silly_> teut, useItems returns an array, but you're trying to destructure object properties in line 74
[17:56:41] <teut> oh right
[17:56:46] <teut> I will correct that
[17:57:37] <teut> const [startingIndex, setStartingIndex, items] = useItems(links, component);
[17:57:38] <teut>   ok I made it this
[17:58:20] <teut> but is   useItems a custom hook or is it just a normal function which I just named like one with the "use" convention?
[17:58:37] <teut> I cant understand what a custom hook is
[17:58:37] <silly_> this is a custom hook
[17:58:54] <teut> let me show one more
[17:58:59] <silly_> you can put it in it's own module file
[17:59:10] <silly_> and export/import
[17:59:38] <teut> Uploaded file: https://uploads.kiwiirc.com/files/14bea2220540a19c64263f882b175c2c/pasted.txt
[17:59:42] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 244 seconds)
[17:59:47] <teut> what about this?
[18:00:16] <onizu> looks like querySelectorAll gets executed at the first load of the document..
[18:00:34] <silly_> teut, this looks like an Component to me
[18:00:57] <teut> https://dpaste.org/eMid full code for that
[18:01:00] <silly_> not really, just an array of react items
[18:01:37] <teut> hmm, so a custom hook should use other hooks and  some of useState, useEffect etc
[18:01:45] <teut> so that can be a rule
[18:01:50] <silly_> yea, you can put these somewhere as childnodes or wrap in a fragment
[18:02:35] <silly_> i don't know the exact definition of react hooks
[18:02:51] <teut> put these somewhere as childnodes or wrap in a fragment  <<--  how it this related to custom hooks?
[18:03:09] <silly_> not at all
[18:03:26] <silly_> https://reactjs.org/docs/hooks-intro.html
[18:03:28] <teut> hooks are state variables which are updated  during rehydration of doms
[18:03:39] <teut> is what I follow as the definition of hook
[18:04:19] <onizu> silly_: https://jsfiddle.net/saLugy7d/1/
[18:05:05] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[18:05:06] <silly_> teut, bookmark this https://usehooks.com/
[18:05:33] <teut> nice site , I once visited it but forgot to bookmark it
[18:05:48] <teut> thanks for the help and the link
[18:06:20] <silly_> too bad they have no search... but you can always scope your google search :/
[18:07:12] <teut> that shouldn't be required , ctrl + s should work
[18:07:32] <silly_> i wonder if this is their full list https://github.com/gragland/usehooks#post-index
[18:07:48] <teut> hmm
[18:08:18] <teut> really nice reusable usecases
[18:08:26] <silly_> onizu, looks good?
[18:09:22] <onizu> silly_: don't know why it's not returning results on my local file
[18:09:23] <onizu> :/
[18:09:48] <silly_> onizu, probably execution order
[18:11:36] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:11:48] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[18:12:55] <onizu> nodelist length = 0
[18:13:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:14:03] <silly_> by the time this function is executed, there are no matching elements in the dom
[18:14:30] <silly_> it's either order or a typo in the selector
[18:14:33] <onizu> ok
[18:14:53] <onizu> so is there a way to execute something after the page has loaded?
[18:15:13] <onizu> like $( document ).ready()
[18:15:20] <silly_> yes, window.addEventListener('load'), function...
[18:15:24] <silly_> or jquery...
[18:15:32] <silly_> which does the same
[18:15:37] *** Joins: tavares (~tavares@user/tavares)
[18:16:05] <silly_> you can also put your js at the end of body
[18:16:23] <onizu> nah, it's loaded in a common header
[18:16:35] <onizu> anyway, I added the jquery $( document ).ready()
[18:16:37] <onizu> now it works
[18:16:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:16:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:16:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:17:55] <silly_> <script src="" defer> should work as well
[18:18:06] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[18:18:17] <onizu> window.addEventListener('load', (event) => { }); works too
[18:18:52] <silly_> https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event
[18:19:23] <silly_> just read the first 3 sentences ^
[18:19:28] <onizu> " without waiting for stylesheets, images, and subframes to finish loading."
[18:19:32] <onizu> need stylesheets
[18:19:52] <silly_> not for js
[18:19:57] <silly_> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer
[18:20:09] <silly_> or... probably not...
[18:20:40] <silly_> do you use Window.getComputedStyle()?
[18:20:50] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net)
[18:21:08] <onizu> nope
[18:21:16] <onizu> I mostly use jquery..
[18:21:19] <silly_> then you don't need stylesheets
[18:21:23] <onizu> in this case I had to avoid it
[18:21:29] <silly_> to be loaded, when executing js
[18:21:33] <onizu> but for the querySelectorAll to work?
[18:21:46] <onizu> does it not need the stylesheet?
[18:21:51] <silly_> nope, it's just takes css selectors
[18:22:17] <silly_> selectors, not stylesheets
[18:22:53] <onizu> but the selectors are defined in the stylesheets
[18:23:12] <onizu> ah,  that's only for styling
[18:23:22] <silly_> querySelector takes any css selectors, even if you load only empty stylesheets
[18:23:56] <silly_> look at the first example
[18:23:59] <silly_> https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector#examples
[18:24:17] <silly_> these are two valid css selectors
[18:24:24] <onizu> yea, the parent id is not there in the stylesheet
[18:24:32] <onizu> thanks
[18:25:11] <silly_> you can add parent selectors
[18:25:40] <silly_> #someId > .link + nodeAfter
[18:26:32] <onizu> no no, I mean the id="parent"
[18:26:48] <silly_> that's "#parent"
[18:26:59] *** Quits: hay (~joe@84.215.37.126) (Ping timeout: 250 seconds)
[18:27:00] <onizu> is not in the stylesheets, but this still works: document.querySelector('#parent');
[18:27:02] <onizu> got it
[18:27:17] <silly_> and you can extend on that like all spans below querySelectorAll("#parent span")
[18:27:36] <onizu> yep
[18:27:47] <onizu> the usual query selector
[18:27:51] <silly_> yes
[18:31:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[18:31:50] *** Joins: onosendi (~onosendi@user/onosendi)
[18:35:33] <onizu> I change the elem.style.display = "inline" for an element on mouseover, but then it stays "inline" on mouse out too. Do I need to explicitly specify a mouseout even too ?
[18:36:07] <Dorward> onizu: Yes. The JS does exactly what you tell it to do and no more. Consider CSS `:hover` instead.
[18:36:44] <Dorward> (Oh, a different element I guess you mean, probably best to avoid :hover tricks)
[18:36:47] <onizu> but I want some other element's display to be toggled on moving mouse over another element
[18:37:21] <onizu> what's the best way to do this?
[18:39:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:40:21] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[18:40:21] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[18:40:21] *** Joins: Heraes (~Heraes@user/romarain)
[18:40:34] <onizu> anyway, I added a 'mouseout' event too
[18:42:06] *** Quits: Anarchic` (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[18:43:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[18:43:42] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[18:45:19] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[18:46:24] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[18:48:53] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[18:48:58] *** Joins: hay (~joe@129-241-230-53-gw.cgn.ntnu.no)
[18:53:33] *** Joins: zebrag (~chris@user/zebrag)
[18:54:11] <systemfault> Use mouseenter/mouseleave, mouseover/mouseout are rarely what the dev actually want
[18:54:22] *** Joins: Akimb (~Akimb@86.100.13.100)
[18:55:30] *** Quits: hay (~joe@129-241-230-53-gw.cgn.ntnu.no) (Ping timeout: 244 seconds)
[18:58:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:00:54] *** Joins: dachi_ (~dachinat@199.83.209.138)
[19:01:09] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[19:01:19] *** Joins: cismee (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[19:02:27] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[19:03:15] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 244 seconds)
[19:03:22] *** Quits: dachinat (~dachinat@37.232.98.166) (Ping timeout: 245 seconds)
[19:03:42] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:5e03:f088:4523:9a92) (Ping timeout: 250 seconds)
[19:04:08] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:05:04] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[19:05:17] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net) (Ping timeout: 256 seconds)
[19:07:52] <Ronalds_Mazitis_>  if (!crossOriginIsolated){ SharedArrayBuffer = ArrayBuffer } else { console.log("CORS PROBLEMA") };
[19:08:19] <Ronalds_Mazitis_> Uncaught ReferenceError: SharedArrayBuffer is not defined
[19:09:14] *** Joins: dachi__ (~dachinat@37.232.98.166)
[19:10:22] <Lyn> I feel it's dangerous to remove packages from a node project lol
[19:10:37] <Ronalds_Mazitis_> I did not
[19:10:58] <Lyn> well I am removing atm
[19:11:04] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:11:23] <onosendi> ljharb: what's your opinin on oauth?
[19:11:55] *** Quits: dachi_ (~dachinat@199.83.209.138) (Ping timeout: 252 seconds)
[19:13:26] <teut> Uploaded file: https://uploads.kiwiirc.com/files/dd62ea1df44d64efe95f6ada820d9b8d/image.png
[19:13:37] <ljharb> onosendi: oauth 1 is fine, oauth 2 https://web.archive.org/web/20130806054836/http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/
[19:15:27] *** Quits: tavares (~tavares@user/tavares) (Ping timeout: 245 seconds)
[19:16:09] <Ronalds_Mazitis_>  SharedArrayBuffer = ArrayBuffer
[19:16:25] <Ronalds_Mazitis_> Uncaught ReferenceError: SharedArrayBuffer is not defined
[19:17:00] *** Joins: hay (~joe@84.215.37.126)
[19:17:39] <onosendi> ljharb: aren't we still having to store the token somewhere client-side, thus running into the same issues we do with JWTs?
[19:18:11] <systemfault> Ronalds_Mazitis_: Just Google, Chrome has had an update that disables SharedArrayBuffer unless you do something
[19:18:49] <Ronalds_Mazitis_> I did changed CORS settings for server to serve header
[19:19:03] <systemfault> What if it's unrelated to CORS?
[19:19:04] <Ronalds_Mazitis_> in apache2.conf and .htaccess
[19:19:14] <Ronalds_Mazitis_> idnk might be
[19:19:18] <systemfault> And unrelated to apache2.conf and .htaccess
[19:19:21] <systemfault> GOOGLE
[19:19:27] <Ronalds_Mazitis_> I tried
[19:19:28] <ljharb> onosendi: um, you don't oauth from the browser
[19:19:39] <Ronalds_Mazitis_> bit later ok
[19:19:42] <ljharb> onosendi: oauth has a secret, so it can only work via the webserver
[19:20:27] <Ronalds_Mazitis_> ah yeah and
[19:20:32] <Ronalds_Mazitis_> for this exact website
[19:20:36] <Ronalds_Mazitis_> f5 does not reload
[19:20:42] <Ronalds_Mazitis_> css nor javascript
[19:20:49] <Ronalds_Mazitis_> chrome
[19:21:14] <Ronalds_Mazitis_> I hate removing browser data every time
[19:21:17] <systemfault> Ronalds_Mazitis_: https://developers.google.com/search/blog/2021/03/sharedarraybuffer-notes
[19:21:43] <Ronalds_Mazitis_> yeah I did 3rd point
[19:21:50] <Ronalds_Mazitis_> I think my browser is stuck
[19:22:14] <onosendi> ljharb: I guess I need to do some more homework on it, thanks for the link.
[19:22:45] <ljharb> onosendi: the link is just about oauth 2 vs oauth 1
[19:22:51] *** Joins: DarkSeid_ (~textual@94.3.103.210)
[19:23:11] <ljharb> onosendi: in either case the oauth dance involves both the browser, the webserver, and a third party website/webserver
[19:24:30] <systemfault> Most of the OAuth interactions will be forced on you... so, no matter the opinion...
[19:24:44] <systemfault> (Mostly when trying to integrate some third-party API)
[19:25:38] *** Joins: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com)
[19:25:42] <horribleprogram> is this for typescript?
[19:25:57] <ThePendulum> if I keep ending sentences with ; I should probably go outside, right?
[19:29:13] <horribleprogram> ThePendulum: what are u implying
[19:29:44] <horribleprogram> Semicolons are not free
[19:30:00] <horribleprogram> they're like.... a crazy amount of bits long
[19:30:20] <horribleprogram> UTF-32 would mean a semicolon is 32 BITS!!!
[19:30:59] <horribleprogram> ThePendulum: however, I always always always use semicolons
[19:31:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:34:31] <ThePendulum> in JS yes but not when writing messages to other humans
[19:37:46] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[19:38:06] <DarkSeid_> i'd start worrying if you begin to say them in conversation
[19:38:54] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 244 seconds)
[19:44:19] *** Quits: doji (~doji@user/doji) (Ping timeout: 252 seconds)
[19:44:35] *** Quits: teut (~teut@106.212.2.35) (Ping timeout: 244 seconds)
[19:45:19] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:46:08] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 244 seconds)
[19:46:48] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net)
[19:47:46] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[19:48:46] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[19:50:41] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[19:52:01] *** Joins: Naan (~Naan@user/naan)
[19:57:11] *** Quits: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com) (Quit: Leaving...)
[19:59:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:04:14] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[20:08:48] *** Joins: matsaman (~matsaman@user/matsaman)
[20:09:09] *** Joins: voltage_ (voltage@user/voltage)
[20:09:18] *** Joins: polyrob_ (~rob@user/polyrob)
[20:11:12] *** Joins: teut (~teut@106.212.2.35)
[20:11:49] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[20:11:49] *** polyrob_ is now known as polyrob
[20:12:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net) (Ping timeout: 256 seconds)
[20:14:36] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[20:15:28] *** Joins: jazzy (~jaziz@172.58.36.139)
[20:16:03] *** Joins: jazzy2 (~jaziz@172.58.36.139)
[20:18:21] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:20:07] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 252 seconds)
[20:22:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[20:23:27] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:27:04] *** Parts: evidlo (~evidlo@2001:470:69fc:105::7fc) ()
[20:30:21] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[20:33:44] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net)
[20:34:42] <teut> const  Component = ()=>{};    export default Component;      whats the  way to write it in one statement?
[20:35:06] <teut> export default function (){}   works but not this
[20:36:12] <GreenJello> that, since you can add a name
[20:36:24] <GreenJello> export default function Foo(props) {
[20:37:08] <GreenJello> two statements with const and an arrow function is also good
[20:38:10] <ljharb> teut: components shouldn't be arrow functions.
[20:38:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[20:38:21] <teut> export default (function () {})()       this I use  if I want to export default an array object or something
[20:38:33] <teut> what ljharb?
[20:38:42] <teut> they are always arrow functions
[20:38:49] *** jazzy2 is now known as jazzy
[20:39:19] <ljharb> teut: no they are not
[20:39:28] <ljharb> teut: `export default function Component() {}` is not an arrow function, and shouldn't be
[20:39:47] <ljharb> teut: they CAN be arrow functions. but they literally never need to be, and imo (and in dan abramov's opinion as well) they shouldn't be
[20:39:52] <teut> Uploaded file: https://uploads.kiwiirc.com/files/1112cb50c7ab2aeacb3e6e5f7fa8cfab/pasted.txt
[20:39:58] <teut> the following code works
[20:40:06] <GreenJello> except when using TS
[20:40:10] <teut> ok the default is always a function
[20:40:58] <teut> I swear I didnt copy this code, I m forgetting stuff too fast
[20:41:42] <ljharb> teut: Services there is not an arrow function
[20:42:05] <teut> yes , I saw my other components too , I had used a function(){}
[20:42:11] <teut> sorry
[20:43:08] <teut> whats special about Dan Abramov that people follow him so much?
[20:43:13] <teut> is he a senior dev?
[20:43:29] <teut> he isnt a senior dev !
[20:43:31] <systemfault> Nothing, he became famous for inventing Redux.
[20:43:38] <teut> fk
[20:43:50] <teut> and there is Ryan Florence
[20:43:56] *** Joins: RogerSUSE (~RogerSUSE@097-093-110-093.biz.spectrum.com)
[20:43:57] <systemfault> Never heard of him
[20:44:13] <teut> =D  nice
[20:44:21] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[20:44:52] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:05] <teut> I read his article and I dont think he s that experience to be followed
[20:45:29] <teut> and given advice based on what he does
[20:45:41] <systemfault> Redux was lifechanging for a lot of people... especially because of time travel and hot-reloading
[20:45:48] <teut> he might be good but whatever
[20:46:07] <systemfault> That Ryan dude, he's a guy who invented yet another react router...
[20:46:09] <seed0> 🤔
[20:46:17] <teut> I havent been part of class components
[20:46:29] <teut> I learned react last year only
[20:48:01] <teut> hot reloading is due to the "chowkidar" library
[20:48:12] <teut> hows it related to him?
[20:48:59] <GreenJello> that's a small part of it
[20:49:14] <teut> I understand hot reloading as restarting server every time you change something
[20:49:17] <ljharb> chokidar isn't related
[20:49:24] <teut> m I wrong?
[20:49:52] <teut> that kind of thing vscode does too,  with live server extension
[20:49:53] <samsch> It's not really related to Dan. Hot *reloading* and Hot *module replacement* are two different things that are sometimes conflated.
[20:49:54] <GreenJello> hot reloading is where you swap out part of the code with new code, without restarting a sever, or refreshing a web page
[20:50:14] <teut> ok so the server isnt restarted
[20:50:35] <GreenJello> in this context it refers to updating the code without refreshing the web page
[20:50:36] <teut> I didnt know that
[20:50:43] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 244 seconds)
[20:50:59] <samsch> Redux was designed as a way to extract the state out of your components and into a global store, so you could do hot module replacement and not lose your state.
[20:51:05] <teut> I wonder how that works
[20:51:13] <samsch> (While also following a flux pattern)
[20:51:19] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[20:51:35] <GreenJello> jellobot is a rare example of hot reloading on the backend
[20:51:35] <matsaman> needs more x
[20:52:29] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:53:00] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[20:53:07] *** Joins: Betal (~Betal@user/betal)
[20:54:46] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[20:56:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:56:40] *** Joins: doji (~doji@user/doji)
[20:58:59] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[21:00:02] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:00:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[21:02:36] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 244 seconds)
[21:04:54] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[21:06:09] <teut> btw the hot reloading doesnt work very well, once the error comes after adding new code on the webpage , then I have to referesh too often
[21:06:15] <teut> refresh*
[21:06:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net) (Ping timeout: 256 seconds)
[21:06:44] <GreenJello> yeah, HMR is super unreliable
[21:07:04] <samsch> I just don't use it at all
[21:07:16] <teut> I have no problems with F5
[21:07:29] <teut> I use F5 in django all the time , no problems
[21:07:30] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[21:07:34] <samsch> Refresh on save is fine enough for me
[21:08:00] *** Joins: silly_ (~silly@user/silly)
[21:08:07] <GreenJello> I just refresh if I suspect it won't work, or it doesn't behave how I expected. I still find it's a net positive to the experience
[21:08:25] <samsch> One of the React talking heads recently talked about doing a TDD-like thing with Cypress, and I've considered that.
[21:08:27] <teut> yes , its a net positive
[21:09:12] <teut> TDD, I always wanna try it but it requires to learn the test tramework
[21:09:34] <teut> then learn different methods of testing and libraries first, really makes life more tough
[21:09:54] *** Joins: keir (~keir@user/keir)
[21:10:16] <teut> and you have more code to manage
[21:10:21] <samsch> I probably wouldn't do TDD anyway. Strict TDD always seemed like a waste of time to me
[21:10:54] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Quit: No Ping reply in 180 seconds.)
[21:10:59] <teut> yes , even uncle Bob agrees to this
[21:11:29] <silly_> i've really enjoyed coding in devtools when chrome added support for live updated js and at one point it even updated sass files after you changed css in styles pane
[21:12:14] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[21:12:15] <silly_> devtools workspaces... to bad it was a dead end
[21:12:27] *** Joins: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net)
[21:13:08] <teut> https://www.youtube.com/watch?v=pMuiVlnGqjk   this is a good approach I think in the agile
[21:13:08] <skillbot> YouTube Title: What is DDD - Eric Evans - DDD Europe 2019
[21:13:10] <ljharb> teut: https://qntm.org/clean
[21:13:46] <teut> ljharb , I have seen the old man s videos
[21:14:10] <teut> and he himself says do not adhere to SOLID just respect them
[21:14:38] <ljharb> teut: read that article tho. "clean code" is not a good book.
[21:15:02] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[21:15:08] <teut> you are showing it to me 4th time maybe
[21:15:32] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[21:15:33] <teut> other than that ChrisWarrick on #python  showed it 3 -4 times too
[21:15:41] <teut> and its just a review
[21:15:47] <ljharb> lol oh
[21:16:00] <teut> I have seen the  videos , I download from torrent
[21:16:08] <matsaman> god, methodologies...
[21:16:09] <teut> and they are good
[21:16:18] <teut> so you can ve them too
[21:16:35] <ljharb> i have no interest in consuming his content
[21:16:42] <ljharb> he's not a nice man
[21:17:19] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[21:17:23] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[21:17:32] <matsaman> some oddly abrasive regulars in #python =P
[21:17:37] *** Quits: keir (~keir@user/keir) (Quit: keir)
[21:18:41] <teut> matsaman  , but I remember some other folks came supporting that resource
[21:19:12] <teut> ljharb  hates misogynist   , he told previously and thus he hates him
[21:19:19] *** Quits: Junxter (~Junxter@114.221.66.47) (Read error: Connection reset by peer)
[21:19:24] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:6d14:18b3:1a63:6512)
[21:19:57] <matsaman> I try not to hold grudges, but that nick does vaguely remind me of some kind of abrasiveness <shrugs>
[21:20:16] <matsaman> would have to get logs on other computer to confirm
[21:20:39] <ljharb> teut: it's a weird thing to say that you don't hate misogynists tbh
[21:21:22] <teut> I dont care about people's opiniona
[21:21:23] <teut> s
[21:22:04] <teut> and misogamy  has no related to code
[21:22:17] <teut> relation*
[21:22:20] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[21:22:36] <ljharb> everything is related to code, and to everything else. nothing is an island.
[21:22:45] <teut> misogyny    <<<-- this
[21:23:32] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[21:24:43] <merpnderp> So, if you were a manager and this debug log made it to a users console in production, how would you handle the dev who did it? console.log("Send luser to watch video!")
[21:25:02] <teut> the idea of misogyny may be bad if applied to people but good in code,  since you dont want all objects to have equal rights over all the resouces
[21:25:12] <GreenJello> merpnderp, you improve your linting setup
[21:25:56] <merpnderp> GreenJello: Good point. I wouldn't think its that big a deal.
[21:26:03] <merpnderp> Seemed funny to me.
[21:26:11] <matsaman> ljharb: bloody ibiza
[21:27:23] <ljharb> teut: that's not the comparison i'm making. i'm saying that supporting the content from bad people is supporting everything those people believe in.
[21:27:28] <ljharb> matsaman: no idea what that means
[21:27:39] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[21:28:06] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[21:28:07] <teut> I m more on the side of ideas, even in the talks he says put more ladies devs in the coding world
[21:28:22] <systemfault> There's nothing wrong with Clean Code... it's a book aimed at beginners and that's it.
[21:28:30] <ljharb> systemfault: did you read the article?
[21:28:35] <systemfault> What article?
[21:28:46] <systemfault> Some blog post saying that they didn't like it "because"
[21:28:48] <systemfault> ?
[21:29:00] <teut> there's a podcast on SO
[21:29:08] <teut> with Martin and Jeff
[21:29:17] <teut> have you heard it too?
[21:29:34] <systemfault> ljharb: This? That's the first I found https://qntm.org/clean
[21:29:37] <ljharb> yes
[21:29:42] *** Quits: hay (~joe@84.215.37.126) (Ping timeout: 245 seconds)
[21:29:49] <ljharb> content for beginners that teaches bad habits is harmful
[21:29:50] <teut> https://stackoverflow.blog/2009/02/12/podcast-41/
[21:30:28] <teut> the problem is Java , not his book or ideas
[21:30:53] <teut> saying it wrt  the article
[21:31:36] <ljharb> i mean, java is terrible, so that's an interesting argument
[21:31:37] *** Joins: nomic (~nomic@185.217.117.169)
[21:32:13] <teut> the so much of useless code which does nothing, well that is due to the visible interface
[21:32:15] <matsaman> heh
[21:32:41] <teut> and I heard its called metaprogramming, and its coming as a practice in c++ too
[21:32:51] <onizu> when I send 56.1 as a value by JSON from JS, why is it received as 56.10000000000000142108547152020037174224853515625 in PHP ?
[21:33:10] <onizu> or rather, received as 56.10000000000000142108547152020037174224853515625 back in JS when I return it from PHP
[21:33:20] <teut> and they say to explicitly  write the interface, since explicit better than implicit
[21:33:21] <matsaman> 'cause you're not sending it as a string
[21:33:28] <onizu> oh
[21:33:35] <onizu> we can't send floats?
[21:33:39] <matsaman> and so PHP is interpreting it as a floating point
[21:33:49] <matsaman> you can, but floats are not very reliable, as you have just seen
[21:33:57] <GreenJello> onizu, don't use floats if you care about the exact value
[21:34:00] <systemfault> ljharb: Looks more like an article nitpicking on shit for the lulz.
[21:34:05] <onizu> ok
[21:34:09] <teut> send data as string
[21:34:09] <GreenJello> that's basically the same number as 56.1
[21:34:28] <systemfault> ljharb: But yeah, if there are betters book, that's great :)
[21:34:32] <matsaman> yes, it's fine for a world where you're already using a decimal point
[21:34:32] <onizu> though I'd like to understand why it made it such a long float
[21:34:34] <teut> sorry, its on the parser of php
[21:34:38] <teut> so whatever
[21:34:49] <matsaman> onizu: that's just the nature of floats combined with converting to another language you aren't used to
[21:34:51] <GreenJello> onizu, 56.1 can't be represented exactly
[21:35:10] <matsaman> php probably has some facility or library that will allow you to get what you want
[21:35:11] <GreenJello> but maybe you're converting it to a 32 bit float at some point, or doing math on it
[21:35:29] <onizu> just json_decode() in php
[21:35:32] <matsaman> but by default it's just a (very fine) approximation
[21:35:33] <onizu> anyway, thanks
[21:35:37] <onizu> will send as string
[21:35:46] <onizu> matsaman: ok
[21:35:50] <teut> https://www.delftstack.com/howto/php/how-to-show-a-number-to-two-decimal-places-in-php/
[21:36:14] *** Quits: DarkSeid_ (~textual@94.3.103.210) (Quit: Textual IRC Client: www.textualapp.com)
[21:36:34] <matsaman> if you aren't going to work on the number, a string will be fine
[21:36:48] <matsaman> if you are going to, it will probably be converted to something other than '56.1' exactly regardless
[21:37:35] <matsaman> you'd probably need a library specifically for super accurate math if it mattered that much to you, which honestly it probably doesn't
[21:37:39] * matsaman revives horse
[21:38:21] <onizu> I will be working on the number.. But I think I'll just convert it to a number in PHP
[21:38:30] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[21:38:35] <onizu> and round off
[21:39:19] *** Quits: federico_it (~textual@151.95.116.125) (Ping timeout: 252 seconds)
[21:39:30] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[21:39:43] <GreenJello> if you're going to round to an integer, that's fine
[21:39:52] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[21:40:36] <GreenJello> or accept that it's approximate. There isn't anything wrong with the number you gave in general
[21:41:54] <GreenJello> as long as you're not doing equality checks (which you shouldn't with floats), or displaying it naively
[21:42:19] *** Joins: federico_it (~textual@151.95.116.125)
[21:42:54] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 244 seconds)
[21:43:42] *** Joins: salad (~cucumber@82.76.150.120)
[21:45:32] *** Joins: libera_chat_user (uid514280@id-514280.highgate.irccloud.com)
[21:48:08] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:49:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[21:52:08] *** Joins: Rockwood (~Rocky@user/rocky)
[21:53:04] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[21:54:35] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:59:00] *** Joins: Pixi (~Pixi@user/pixi)
[22:00:32] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[22:01:10] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[22:02:57] *** Quits: Crash1hd (~Crash1hd@S0106a84e3f475583.cg.shawcable.net) (Read error: Connection reset by peer)
[22:03:02] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:05:33] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[22:05:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:05:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:05:40] *** Joins: wroathe (~wroathe@user/wroathe)
[22:06:42] *** Joins: earendel (uid498179@user/earendel)
[22:10:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[22:11:44] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Quit: phil294)
[22:15:21] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:16:28] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:16:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[22:18:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:18:25] *** Joins: dev4449 (~dev4449@188.126.94.50)
[22:20:31] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[22:29:14] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net)
[22:32:13] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[22:37:37] *** Joins: onosendi (~onosendi@user/onosendi)
[22:40:26] *** Quits: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[22:44:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7521:4f72:5039:2cc8) (Quit: Textual IRC Client: www.textualapp.com)
[22:44:55] *** Joins: dachi_ (~dachinat@199.83.209.138)
[22:46:58] *** Quits: dachi__ (~dachinat@37.232.98.166) (Ping timeout: 244 seconds)
[22:50:05] <onizu> GreenJello: not to an integer, but round to 2 decimals
[22:58:05] <GreenJello> onizu, you need to do the rounding as part of the display logic
[22:58:35] <GreenJello> you can't round to X decimals and get a a number back
[22:59:01] <GreenJello> you need to render the number to a string with a specific number of digits after the decimal
[22:59:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:00:48] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:796c:f1ba:8b6a:73cc)
[23:01:50] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:04:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[23:04:25] *** Joins: vysn (~vysn@user/vysn)
[23:04:50] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[23:08:10] *** Quits: MachinShin (sid243317@id-243317.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[23:08:19] *** Joins: MachinShin (sid243317@id-243317.helmsley.irccloud.com)
[23:08:25] *** Quits: chia (sid510567@id-510567.tinside.irccloud.com) (Ping timeout: 252 seconds)
[23:08:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[23:08:39] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[23:08:48] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[23:08:59] *** Joins: chia (sid510567@id-510567.tinside.irccloud.com)
[23:09:34] *** Quits: teut (~teut@106.212.2.35) (Quit: Connection closed)
[23:09:50] *** Quits: wintersky (uid453465@id-453465.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[23:10:07] *** Quits: dachi_ (~dachinat@199.83.209.138) (Read error: Connection reset by peer)
[23:10:17] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:10:24] *** Joins: dachi_ (~dachinat@199.83.209.138)
[23:11:57] *** Joins: wintersky (uid453465@id-453465.helmsley.irccloud.com)
[23:15:34] *** Quits: codemin (~codemin@69.166.223.220) (Ping timeout: 252 seconds)
[23:16:35] *** Joins: dachi__ (~dachinat@199.83.209.138)
[23:17:20] *** Quits: dachi_ (~dachinat@199.83.209.138) (Read error: Connection reset by peer)
[23:19:43] *** Joins: dachi_ (~dachinat@37.232.98.166)
[23:21:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:22:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:22:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:22:32] *** Joins: wroathe (~wroathe@user/wroathe)
[23:22:40] *** Quits: dachi__ (~dachinat@199.83.209.138) (Ping timeout: 240 seconds)
[23:26:34] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[23:28:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net) (Ping timeout: 256 seconds)
[23:29:00] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[23:29:43] *** Joins: dachi__ (~dachinat@199.83.209.138)
[23:29:51] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[23:30:29] *** Quits: dachi__ (~dachinat@199.83.209.138) (Remote host closed the connection)
[23:31:07] *** acidsys is now known as cranberry
[23:31:17] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[23:31:19] *** Quits: dachi_ (~dachinat@37.232.98.166) (Read error: Connection reset by peer)
[23:31:26] *** cranberry is now known as Lysergsaeure
[23:33:12] *** Joins: thiras (~thiras@user/thiras)
[23:35:57] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:37:06] *** Joins: linguist (~brunodOut@177.75.142.99)
[23:38:09] <linguist> Hello there!!
[23:38:53] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7521:4f72:5039:2cc8)
[23:39:05] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:42:31] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:42:33] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[23:43:12] *** Quits: dev4449 (~dev4449@188.126.94.50) (Quit: Client closed)
[23:43:22] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[23:43:37] *** Joins: dachinat (~dachinat@199.83.209.138)
[23:46:54] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Updating details, brb)
[23:47:03] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:47:32] *** Joins: dachi_ (~dachinat@199.83.209.138)
[23:48:22] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Client Quit)
[23:48:31] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:49:40] *** Quits: dachinat (~dachinat@199.83.209.138) (Ping timeout: 252 seconds)
[23:50:02] *** Joins: dachi__ (~dachinat@199.83.209.138)
[23:50:16] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:51:43] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[23:52:14] <Lyn> Why does the 'centered' prop here only work for Web and not mobile? https://github.com/callstack/react-native-paper/blob/main/src/components/TouchableRipple/TouchableRipple.tsx
[23:53:37] *** Quits: dachi_ (~dachinat@199.83.209.138) (Ping timeout: 244 seconds)
[23:54:36] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Updating details, brb)
[23:54:37] *** Quits: dachi__ (~dachinat@199.83.209.138) (Ping timeout: 252 seconds)
[23:54:40] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[23:54:46] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:55:15] *** Joins: dachinat (~dachinat@199.83.209.138)
[23:58:07] *** Quits: dachinat (~dachinat@199.83.209.138) (Remote host closed the connection)
[23:58:16] *** Quits: kakashiAL (~kakashi@ppp-188-174-52-248.dynamic.mnet-online.de) (Ping timeout: 244 seconds)
[23:58:27] *** Joins: dachi_ (~dachinat@199.83.209.138)
[23:58:58] *** Quits: dachi_ (~dachinat@199.83.209.138) (Read error: Connection reset by peer)
[23:59:35] *** Joins: dachi_ (~dachinat@199.83.209.138)
