[00:03:27] *** Joins: King_julian (~King_juli@41.1.142.79)
[00:12:15] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[00:31:19] *** Joins: lisp123 (~lisp123@120.154.103.52)
[00:34:33] *** Joins: Oladon (~olad@98.43.81.226)
[00:35:48] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[00:38:21] *** Joins: Everything (~Everythin@37.115.210.35)
[00:42:19] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Ping timeout: 250 seconds)
[00:42:34] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[00:46:12] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[00:53:12] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:54:18] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[00:56:26] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:58:15] *** Inline__ is now known as Inline
[01:08:37] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:15:02] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:18:10] *** Quits: wacki (~wacki@87.122.80.85) (Quit: Leaving.)
[01:22:13] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 240 seconds)
[01:28:27] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:32:03] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 256 seconds)
[01:33:44] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[01:34:10] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[01:35:50] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:42:12] *** Quits: King_julian (~King_juli@41.1.142.79) (Ping timeout: 240 seconds)
[01:43:53] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:59:22] *** Joins: Oladon (~olad@98.43.81.226)
[02:00:29] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Quit: Leaving)
[02:07:40] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[02:13:11] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[02:17:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[02:19:38] *** Joins: lisp123 (~lisp123@120.154.103.52)
[02:23:57] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[03:11:01] *** Joins: beach` (~user@2a01:cb19:150:3400:9691:841f:4631:45ac)
[03:15:06] *** Quits: beach (~user@2a01:cb19:150:3400:25f5:58f7:d461:f8de) (Ping timeout: 250 seconds)
[03:19:11] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[03:28:37] *** Quits: taiju-sub (~taiju@240b:253:ec40:2400:7839:8326:ccbc:7f0e) (Ping timeout: 240 seconds)
[03:34:10] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 250 seconds)
[03:36:47] <VincentVega> anyone know if there a non-destructive remove function for plists? maybe in some util library?
[03:37:03] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 252 seconds)
[03:38:06] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[03:38:06] <mfiano> golder-utils has it
[03:38:12] <mfiano> golden-utils*
[03:38:36] <mfiano> (shameless plug)
[03:39:24] <VincentVega> mfiano: thanks. i don't mind writing it on my own, but it seems strange to me that i have to.
[03:39:33] <mfiano> https://github.com/mfiano/common-lisp/blob/master/misc/utils/src/list-plist.lisp#L18
[03:39:41] <mfiano> It should be in QL as "golden-utils"
[03:40:06] <VincentVega> ok thank you
[03:41:04] <mfiano> Oh lord, why am I using :append?
[03:41:39] <mfiano> Well it's been a while since I authored this utility library. It could use some optimizations and more idiomatic code...but it works, so there's that I guess?
[03:44:07] <VincentVega> ah, it's cool. i will just write my own with iterate, since it's so small, but it's good to know there's some library with full fledged functionality for this.
[03:48:07] *** Joins: lisp123 (~lisp123@120.154.103.52)
[03:49:42] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Ping timeout: 252 seconds)
[03:49:43] *** Joins: taiju-sub (~taiju@240b:253:ec40:2400:7839:8326:ccbc:7f0e)
[03:50:36] *** Joins: eddof13 (~eddof13@192.154.196.162)
[03:52:12] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[03:52:16] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[03:53:05] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[03:57:56] *** Quits: eddof13 (~eddof13@192.154.196.162) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:02:41] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:02:55] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:06:02] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[04:11:23] *** Quits: taiju-sub (~taiju@240b:253:ec40:2400:7839:8326:ccbc:7f0e) (Quit: Quit)
[04:11:43] *** Joins: igemnace (~ian@user/igemnace)
[04:13:07] *** Joins: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925)
[04:15:54] *** Joins: zacque (~zacque@124.82.52.252)
[04:17:11] <zacque> Hi, is there an example of using CL to create another Sexp-based language?
[04:17:15] <hashfunc569> i'm still having trouble figuring out how to construct an instance of a struct similar to how LET* works
[04:18:02] <zacque> Hmmm, I heard it's easy to hack a new language with CL?
[04:20:37] <zacque> So, given a target language A, my thought is to come up with a lispy version of A, then add lisp-like macro-programming to it
[04:23:08] <yitzi> hashfunc569: Can you clarify? Do mean that you want to initialize slots based on previous slot values?
[04:24:33] <hashfunc569> yitzi: yeah that's what i'm going for
[04:24:35] <hashfunc569> e.g.,
[04:24:41] <hashfunc569> (defstruct s (x) (y))
[04:24:45] <hashfunc569> (defun square (x) (* x x))
[04:24:46] <hashfunc569> (defvar *s-instance*)
[04:24:47] <hashfunc569> (setf *s-instance* (make-s :x 10 :y (square (s-x *s-instance*))))
[04:25:46] <yitzi> Unless you have a specific reason to use structs you should use defclass. Then use `defmethod initalize-instance :after` to do late time initialization.
[04:26:30] <hashfunc569> yitzi: ok thanks, i'll give that a try
[04:31:01] <yitzi> hashfunc569: https://plaster.tymoon.eu/view/2990#2990
[04:39:00] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[04:41:36] *** Quits: zacque (~zacque@124.82.52.252) (Read error: Connection reset by peer)
[04:41:51] <hashfunc569> yitzi: thanks! that saved me some digging
[04:42:46] <yitzi> np
[04:46:18] *** Joins: blacked (~blacked@user/blacked)
[04:46:23] <blacked> Hey guys
[04:46:39] <blacked> is there socket.io implementation for common lisp , for realtime data
[04:48:01] *** Parts: blacked (~blacked@user/blacked) ()
[04:48:59] <drbluefall> ðŸ¤”
[04:49:08] <drbluefall> Well that was fast.
[04:56:06] <raeda> zacque: how complicated is your target language? Making a bunch of macros might be enough if you want it like CL
[04:56:22] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:3d21:1f25:8637:ba0b) (Read error: Connection reset by peer)
[04:57:42] <raeda> If you want a compiler for a sexp language, it's still going to be a lot of work, but stuff like READ and AST manipulation will be easier
[05:00:57] *** Quits: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925) (Ping timeout: 240 seconds)
[05:21:00] *** Quits: VincentVega (~user@212.97.4.48) (Ping timeout: 252 seconds)
[05:21:38] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 250 seconds)
[05:22:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:36:15] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[05:38:36] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[05:43:02] *** Joins: eddof13 (~eddof13@192.154.196.145)
[05:45:45] *** Quits: beach` (~user@2a01:cb19:150:3400:9691:841f:4631:45ac) (Ping timeout: 252 seconds)
[06:02:51] *** Joins: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net)
[06:06:36] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[06:07:56] *** Quits: eddof13 (~eddof13@192.154.196.145) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:08:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:08:31] *** Joins: aeth (~aeth@user/aeth)
[06:10:24] *** Joins: Inline__ (~Inline@p200300cd470a26002e72b25ea400e9f0.dip0.t-ipconnect.de)
[06:12:57] *** Quits: Inline (~Inline@p200300cd470cd6007b9a329b320e25d9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:28:08] <qhong> For DSL creation I think there's a lot to learn from Scala's LMS framework. I'm writing a Lisp version that should be much better than the Scala one, stay tuned.
[06:33:34] <raeda> That sounds cool, is there a git repo?
[06:37:12] <qhong> raeda: Maybe I'll put it up this week
[07:00:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:08:45] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:09:33] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[07:15:05] *** Joins: beach (~user@2a01:cb19:150:3400:91c8:17b3:d153:b444)
[07:20:28] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[07:24:47] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:25:06] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:30:29] <beach> Good morning everyone!
[07:33:43] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[07:34:17] <Guest74> is there an xml comparison like the json one?
[07:39:48] *** Joins: semz_ (~semz@user/semz)
[07:42:28] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:43:24] *** Joins: vats (~vats@103.216.143.225)
[07:43:33] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:46:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[08:01:04] *** semz_ is now known as semz
[08:17:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[08:21:42] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[08:23:42] <hashfunc569> what is the simplest way to get the absolute directory of a given file pathname. e.g., in pseudo-code: (pathname-directory (pathname "/home/user/file.lisp")) => #P"/home/user/" OR => "/home/user/"
[08:28:54] <hashfunc569> *is there a function that does just that, or will i have to process the result of PATHNAME-DIRECTORY
[08:33:35] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:34:15] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[08:38:22] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:46:42] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[08:49:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[08:53:05] *** Quits: fitzsim (~user@69-165-165-189.dsl.teksavvy.com) (Read error: Connection reset by peer)
[08:56:23] *** Joins: aartaka (~aartaka@46.36.118.93)
[08:56:32] *** Joins: zacque (~zacque@2001:e68:6061:ae01:c4d7:4535:f8e8:e7dc)
[08:57:53] <zacque> raeda: Haven't settled down on my target language yet, could be JS, C, or Bash script
[08:58:15] <zacque> That might work, I'll give it a try
[08:58:52] <zacque> My goal is to simply have a lispy frontend to language that I'm using
[08:59:04] <zacque> Then maybe put a macro on top of it
[08:59:45] <zacque> qhong: Ah, first time heard about LMS, thanks for pointing it out
[09:00:12] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:02:26] *** Quits: aartaka (~aartaka@46.36.118.93) (Read error: Connection reset by peer)
[09:02:47] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:10:53] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[09:11:15] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[09:11:57] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:12:45] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[09:22:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:33:07] <qhong> The idea behind LMS is absolutely beautiful, which is essentially "Normalization by Evaluation". I'm surprised that this method haven't seemed to be used for metaprogramming at all in Lisp world. LMS itself is clunky because Scala sucks. It still says a lot about the versatility of NbE, as it can enable powerful metaprogramming even in a horrible language
[09:41:49] *** Joins: occ (~occ@user/occ)
[09:44:48] <beach> "Normalization" as in "computing a normal form"?
[09:48:11] <qhong> beach: Yes, but in some custom rewriting system
[09:48:17] <beach> Sure.
[09:51:42] *** Quits: zacque (~zacque@2001:e68:6061:ae01:c4d7:4535:f8e8:e7dc) (Quit: Goodbye :D)
[09:57:51] *** Joins: zacque (~zacque@2001:e68:6061:ae01:c4d7:4535:f8e8:e7dc)
[10:05:02] *** Joins: paul0 (~paul0@user/paul0)
[10:29:36] *** Joins: notzmv (~zmv@user/notzmv)
[10:34:06] *** Joins: Josh_2 (~user@197.185.99.223)
[10:34:48] <Josh_2> Good morning
[10:38:57] <Josh_2> How to explain my problem
[10:39:32] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[10:39:59] <Josh_2> I have a frontend and a backend, the backend is standalone (lisp ofc ;) ) I want a way to verify with the backend that the client (the frontend, not the user) is an authorized client
[10:41:21] <aeth> authorized as in DRM?
[10:41:45] <Josh_2> Uh
[10:42:15] <Josh_2> Just trying to avoid abuse of the API because the backend sells tickets to events
[10:42:26] <Josh_2> dont want a malicious user to reserve all of the events
[10:43:23] <Josh_2> all of the tickets*
[10:45:29] <Josh_2> Right now there is a shared secret and the nodejs server that serves the frontend makes a request to the backend using the shared secret to authenticate specific requests with an authentication HTTP header
[10:57:03] <aeth> It's heresy here, but I think I'd use FFI for hiding that
[10:59:32] <Josh_2> FFI?
[11:00:14] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[11:10:07] <aeth> Josh_2: foreign function interface, i.e. a foreign library
[11:10:19] <Josh_2> I thought so, but I dont see how that helps
[11:10:28] <Josh_2> the problem is middle men seeing the headers in HTTP requests
[11:10:51] <aeth> https, then?
[11:11:17] <aeth> or encrypt the secret separately.
[11:12:06] <Josh_2> right now the malicious user could use the authenticated client to grab a bearer token and then put that token into their own application which would then abuse the API
[11:12:24] <Josh_2> because its just an Authentication: Bearer <token>
[11:12:47] <Josh_2> HTTP header. I need a way to make it so even if a third party could get access to <token> it doesn't matter
[11:12:58] <Josh_2> Idk :(
[11:13:22] <Josh_2> Ofcourse I can just do something completely different
[11:13:27] *** Joins: mfiano_ (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[11:14:48] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 250 seconds)
[11:14:48] *** mfiano_ is now known as mfiano
[11:15:28] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:15:46] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[11:23:05] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 256 seconds)
[11:23:52] *** Joins: shka (~herr@109.231.3.55)
[11:25:11] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[11:27:48] *** Quits: vats (~vats@103.216.143.225) (Ping timeout: 250 seconds)
[11:29:11] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[11:33:19] *** Joins: s-liao (~s-liao@101.86.164.158)
[11:34:09] *** Quits: zacque (~zacque@2001:e68:6061:ae01:c4d7:4535:f8e8:e7dc) (Quit: Goodbye :D)
[11:49:14] <loke[m]> Josh_2: You make the bearer tokens expire after a certain amount of time.
[11:54:51] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[11:55:21] <Josh_2> They do
[11:55:28] *** Joins: amb007 (~a_bakic@22.147.204.77.rev.sfr.net)
[11:58:53] <phoe> aw shit
[11:59:04] <phoe> I have positive news, namely, my COVID test
[12:00:13] *** Joins: s-liao2 (~s-liao@101.86.164.158)
[12:02:11] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[12:06:18] <flip214> phoe: get negative soon, monday is ELS
[12:07:01] <phoe> flip214: that's the whole thing! they won't let me out of my house until 26th
[12:08:40] <beach> phoe: Wow, weren't you supposed to do something important in Porto like the video stuff?
[12:08:49] <phoe> beach: that's the thing
[12:08:57] <phoe> we're working around this now
[12:09:04] <beach> Yeah, I see.
[12:11:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[12:11:46] <flip214> phoe: get better soon! And good luck with Long Covid...
[12:12:03] <phoe> flip214: I'm not feeling all that bad right now, we'll see about the future - thanks
[12:13:24] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[12:21:15] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:22:48] *** Joins: lispy (~lispy@user/lispy)
[12:22:59] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Client Quit)
[12:23:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:26:09] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[12:26:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[12:34:57] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:35:15] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[12:37:34] *** Quits: amb007 (~a_bakic@22.147.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[12:39:35] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:39:36] *** Joins: amb007 (~a_bakic@30.151.22.93.rev.sfr.net)
[12:46:57] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[12:47:17] *** Quits: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[12:49:09] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:49:48] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[12:52:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[12:54:05] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[12:54:37] *** Joins: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[12:56:05] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[12:59:46] <Josh_2> phoe: I had covid at christmas, I had a runny nose
[12:59:55] <Josh_2> You will be A-okay
[13:01:36] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[13:02:25] <splittist> My covid was less sever than my hay fever. Different people react differently, but, as Josh_2 says, be of good cheer. We'll have a port cocktail and a francesinha for you...
[13:02:32] <splittist> *severe
[13:02:39] <splittist> (No severing was involved)
[13:04:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:07:48] *** Quits: amb007 (~a_bakic@30.151.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[13:07:48] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[13:07:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:09:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:25:25] <flip214> people, abstain from duplicating health data on unsecured communication channels... no gdpr will help cleaning up here
[13:31:09] *** Quits: s-liao2 (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[13:43:36] *** Joins: SR-71 (~user@user/SR-71)
[13:45:01] <SR-71> Hello everyone
[13:46:24] *** Joins: s-liao (~s-liao@101.86.164.158)
[13:51:36] *** Joins: vats (~vats@103.216.143.225)
[13:52:24] <SR-71> What do you guys think about https://www.udemy.com/course/common-lisp-programming/
[13:55:31] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 256 seconds)
[13:55:31] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[13:59:20] <Duuqnd> From the little I can see without buying the course it seems okay, but I'm sure there's better material available for free.
[14:00:23] <SR-71> I was actually planning to write a common-lisp learning material myself.
[14:00:43] <SR-71> Common lisp doesn't get the love it deserves.
[14:01:04] <SR-71> gi<SR-71> What do you guys think about
[14:01:04] <SR-71> 	https://www.udemy.com/course/common-lisp-programming/  [15:51
[14:01:53] <SR-71> sorry, accidently pressed paste
[14:02:48] *** Joins: kevingal (~quassel@149.157.122.151)
[14:03:41] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:06:11] <SR-71> Do you guys have any suggestions on how should I organize my course?
[14:06:57] *** Quits: kevingal (~quassel@149.157.122.151) (Ping timeout: 240 seconds)
[14:07:05] *** Joins: kevingal (~quassel@2001:770:c0:401:f0ef:5a6b:8538:91c)
[14:08:31] *** Joins: Posterdati (~posterdat@user/Posterdati)
[14:11:30] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Ping timeout (120 seconds))
[14:11:54] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:12:40] <jackdaniel> start with an answer to the question "Why Lisp?", then describe REPL and define a simple database as the third part ,)
[14:13:37] <SR-71> Should I include also code walkthroughs?
[14:13:38] <jackdaniel> (this is a joke - point being that practical common lisp is a wonderful introduction course and these are three first chapters)
[14:14:48] <jackdaniel> if I were writing a course, I'd pick a topic that is not covered for common lisp anywhere and work on that
[14:15:31] <jackdaniel> or some topic that is covered somewhere but poorly
[14:15:53] <jackdaniel> (or that the coverage is outdated)
[14:16:32] <SR-71> Initially I planned to write a udemy clone as an exercise.
[14:17:19] <SR-71> But, with a slightly different UI
[14:18:15] *** Joins: wacki (~wacki@87.122.86.228)
[14:20:27] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[14:25:05] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:28:29] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[14:37:16] *** Joins: razetime (~quassel@117.254.34.2)
[14:37:27] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:38:01] *** Quits: vats (~vats@103.216.143.225) (Ping timeout: 256 seconds)
[14:38:34] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[14:39:03] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[14:42:02] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[14:52:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[14:54:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:58:17] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[15:00:36] *** Quits: X-Scale (~ARM@83.223.232.29) (Ping timeout: 272 seconds)
[15:00:37] *** X-Scale` is now known as X-Scale
[15:10:58] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:13:22] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:15:59] *** Joins: heisig (~heisig@109.190.253.13)
[15:16:26] *** Joins: taiju-sub (~taiju@240b:253:ec40:2400:7839:8326:ccbc:7f0e)
[15:17:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:19:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:21:55] *** Joins: nature (~nature@45.32.235.173)
[15:28:35] *** Joins: occ (~occ@user/occ)
[15:33:32] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[15:33:58] *** Joins: heisig (~heisig@109.190.253.13)
[15:40:26] *** Joins: attila_lendvai (~alendvai@2a02:ab88:7509:f780:ed82:a496:f55:e07b)
[15:43:02] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[15:44:05] <Josh_2> The course is written by Vindarel, its probably pretty solid
[15:44:10] <Josh_2> but ofc you have to pay for Udemy
[15:57:02] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[15:57:27] *** Joins: heisig (~heisig@109.190.253.13)
[16:01:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[16:18:32] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[16:18:56] *** Joins: heisig (~heisig@109.190.253.13)
[16:19:06] *** Quits: Brucio-61 (~Brucio-72@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[16:19:31] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[16:25:57] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:31:14] *** Joins: Bike (~Glossina@71.69.170.70)
[16:44:32] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[16:44:57] *** Joins: heisig (~heisig@109.190.253.13)
[16:48:06] *** Joins: Brucio-61 (~Brucio-72@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:50:01] *** Quits: raeda (~raeda@74.215.153.92) (Remote host closed the connection)
[16:56:03] *** Joins: raeda (~raeda@74.215.153.92)
[17:02:17] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[17:05:20] <flip214> can a DEFMETHOD check for an _exact_ class, ie. so that subclasses do not use that method? Or would I need to declare methods for all subclasses as well?
[17:07:29] <Bike> no, clos is more or less based on liskov substitution
[17:07:54] *** Joins: fitzsim (~user@69-165-165-189.dsl.teksavvy.com)
[17:10:55] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[17:11:51] <Bike> you can do things like (when (eq (class-of object) (find-class whatever)) ...) if you need
[17:12:00] <scymtym> not portably, but SB-PCL::CLASS-EQ-SPECIALIZER does exactly that
[17:15:27] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[17:17:43] *** Quits: wacki (~wacki@87.122.86.228) (Quit: Leaving.)
[17:18:45] <flip214> I helped myself by splitting the class tree up, with a new common parent class
[17:26:32] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[17:26:57] *** Joins: heisig (~heisig@109.190.253.13)
[17:34:47] *** Joins: mgl (~mgl@2a00:79e0:4a:203:7803:12f7:8f4d:1d05)
[17:36:21] *** Quits: attila_lendvai (~alendvai@2a02:ab88:7509:f780:ed82:a496:f55:e07b) (Ping timeout: 252 seconds)
[17:36:29] *** Joins: wacki (~wacki@87.122.86.228)
[17:47:09] *** Joins: attila_lendvai (~alendvai@2a02:ab88:7509:f780:ed82:a496:f55:e07b)
[17:48:32] *** Quits: razetime (~quassel@117.254.34.2) (Ping timeout: 240 seconds)
[17:54:15] *** Joins: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it)
[17:58:04] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[17:58:25] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[18:03:02] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[18:03:34] *** Joins: heisig (~heisig@109.190.253.13)
[18:05:11] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[18:06:48] *** Joins: aeth (~aeth@user/aeth)
[18:08:06] <pjb> flip214: but You SHALL respect the LSP !!!
[18:08:25] <pjb> flip214: https://en.wikipedia.org/wiki/Liskov_substitution_principle
[18:08:42] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 268 seconds)
[18:10:20] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:15:02] *** Quits: heisig (~heisig@109.190.253.13) (Remote host closed the connection)
[18:19:35] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 256 seconds)
[18:21:22] *** Joins: razetime (~quassel@117.254.35.116)
[18:21:41] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:24:02] *** Inline__ is now known as Inline
[18:30:02] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 240 seconds)
[18:31:36] *** Quits: Odin- (~odin@cybernetic.anarchism.is) (Ping timeout: 245 seconds)
[18:32:08] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[18:36:01] *** Quits: razetime (~quassel@117.254.35.116) (Ping timeout: 256 seconds)
[18:39:54] *** Joins: VincentVega (~user@212.97.4.48)
[18:52:36] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[18:52:40] *** Joins: X-Scale` (~ARM@89.214.146.27)
[18:53:08] *** X-Scale` is now known as X-Scale
[19:07:31] <Guest74> bike: couldn't you do something with method combinations that would restrict methods to the class they specialize on?
[19:07:52] <Bike> No, method combinations don't deal with method selection
[19:08:34] <Bike> you could maybe hack some weird thing up, but it would have to be basically equivalent to the eq check anyway
[19:08:36] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[19:09:37] <Guest74> learning about them has been on my todo list for years, so I probably don't remember right.Â  I really should get around to that.
[19:11:13] *** Joins: razetime (~quassel@117.254.34.2)
[19:12:34] *** Joins: asarch (~asarch@2806:10ae:7:2198:c359:d1ec:eb4b:c2b9)
[19:26:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:29:10] *** Quits: nature (~nature@45.32.235.173) (Remote host closed the connection)
[19:32:50] <beach> A good way of learning about them is to implement CLOS. :)
[19:33:26] *** Parts: travv0 (sid293381@user/travv0) ()
[19:38:31] <Guest74> implementation always seems to be
[19:39:33] <Guest74> probably why I implement so many things!
[19:39:45] <beach> Excellent!
[19:40:09] *** Quits: Brucio-61 (~Brucio-72@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Remote host closed the connection)
[19:41:35] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[19:42:12] *** Joins: igemnace (~ian@user/igemnace)
[19:43:33] *** Joins: Brucio-61 (~Brucio-35@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[19:44:21] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:45:25] *** Quits: _whitelogger_ (~whitelogg@uruz.whitequark.org) (Remote host closed the connection)
[19:46:26] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[19:46:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[19:48:31] *** Joins: lisp123 (~lisp123@120.154.103.52)
[19:53:32] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 268 seconds)
[20:09:04] *** Quits: kevingal (~quassel@2001:770:c0:401:f0ef:5a6b:8538:91c) (Remote host closed the connection)
[20:10:49] <edgar-rft> todo lists are only good for reading all the things that you will never do
[20:12:18] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:12:37] <Guest74> automatic brain storage. writing wastes too much time you could be doing something on the todo list.
[20:13:02] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[20:13:31] <semz> I don't remember ever forgetting something I've not written down on the list.
[20:14:37] *** Quits: mgl (~mgl@2a00:79e0:4a:203:7803:12f7:8f4d:1d05) (Ping timeout: 256 seconds)
[20:15:04] *** Joins: aeth (~aeth@user/aeth)
[20:15:12] <edgar-rft> my todo list is full of collected garbage :-)
[20:18:04] *** Quits: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net) (Read error: Connection reset by peer)
[20:18:11] *** Joins: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net)
[20:19:09] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[20:22:10] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:25:05] *** Quits: SR-71 (~user@user/SR-71) (Read error: Connection reset by peer)
[20:43:46] *** Joins: tyson2 (~user@24.114.49.225)
[20:43:51] <Shinmera> edgar-rft: Idunno man, seems more like you're just bad at making todo lists.
[20:56:12] *** Quits: razetime (~quassel@117.254.34.2) (Ping timeout: 240 seconds)
[21:00:21] *** Quits: ski (~ski@remote12.chalmers.se) (Remote host closed the connection)
[21:00:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:01:19] *** Joins: Everything (~Everythin@37.115.210.35)
[21:02:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:22:25] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:23:12] *** Joins: nature (~nature@45.32.235.173)
[21:23:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[21:25:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:26:15] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:26:24] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[21:26:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:28:59] *** Joins: lisp123 (~lisp123@120.154.103.52)
[21:31:32] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[21:31:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:33:24] *** Quits: tyson2 (~user@24.114.49.225) (Read error: Connection reset by peer)
[21:33:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:33:36] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[21:34:19] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com)
[21:38:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:38:53] *** Quits: asarch (~asarch@2806:10ae:7:2198:c359:d1ec:eb4b:c2b9) (Quit: Leaving)
[21:40:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[21:40:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:22] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:42:18] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[21:44:30] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Read error: Connection reset by peer)
[21:45:49] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[21:46:31] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[21:54:58] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:56:23] *** Joins: unyu (~pyon@user/pyon)
[21:59:35] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[22:00:57] *** Quits: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it) (Remote host closed the connection)
[22:03:12] <jasom> I'm great at making todo lists; I've got dozens of them that I haven't looked at in months
[22:06:47] *** Quits: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net) (Read error: Connection reset by peer)
[22:07:09] *** Joins: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net)
[22:07:29] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[22:11:17] *** Joins: asarch (~asarch@2806:10ae:7:2198:c359:d1ec:eb4b:c2b9)
[22:11:38] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:1144:c1e4:88cd:c0db)
[22:14:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:16:12] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[22:16:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:18:13] *** Joins: aeth (~aeth@user/aeth)
[22:26:45] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:1144:c1e4:88cd:c0db) (Read error: Connection reset by peer)
[22:32:51] *** Joins: yewscion (~yewscion@72-21-196-66.amazon.com)
[22:32:58] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[22:34:16] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[22:34:50] *** Joins: aeth (~aeth@user/aeth)
[22:43:52] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[22:44:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[22:46:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:49:06] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 245 seconds)
[22:50:58] <Guest74> anybody know any good guides on formatting and layout?Â  Trying to format svg, it works, but indentation is all over the place.
[22:56:56] *** Joins: hashfuncf39 (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[23:03:49] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 256 seconds)
[23:09:54] <Demosthenex> Guest74: formatting and layout of what?
[23:10:30] <Guest74> formatting as in use of format or pprint.
[23:12:56] <Demosthenex> Guest74: https://en.wikipedia.org/wiki/Format_(Common_Lisp) https://gigamonkeys.com/book/a-few-format-recipes.html
[23:17:21] *** Joins: lisp123 (~lisp123@120.154.103.52)
[23:17:52] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[23:18:07] <Guest74> something that covers layout
[23:19:43] <Demosthenex> like, padding?
[23:20:02] <Demosthenex> the wikipedia article had padding
[23:21:32] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[23:32:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:33:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[23:34:48] *** Lord_of_Life_ is now known as Lord_of_Life
[23:40:26] *** Quits: occ (~occ@user/occ) (Ping timeout: 252 seconds)
[23:45:04] *** Joins: morganw (~user@80.225.24.132)
[23:48:15] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[23:48:37] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[23:48:55] *** Joins: notzmv (~zmv@user/notzmv)
