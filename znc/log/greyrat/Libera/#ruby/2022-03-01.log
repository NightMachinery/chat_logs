[00:01:49] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[00:09:26] *** Joins: ur5us (~ur5us@203.86.198.200)
[00:25:56] <mooff> the RubyDoc for it shows it is a Hash, with a special #[] method, plus #fields and #types 
[00:28:04] <mooff> it depends on what the thing is when you want what you want
[00:28:35] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:30:08] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[00:31:03] <mooff> #fields is an array of the field names
[00:32:28] <mooff> #[] is def [] key
[00:32:28] <mooff>   key = fields[key] if key.is_a? Numeric
[00:32:28] <mooff>   super key
[00:32:28] <mooff> end
[00:34:39] <mooff> so the class exists to convert [0] into [:field_name], [1] into [:field_name_two] etc
[00:35:58] <mooff> otherwise it simply is the basic Hash you want for your other purpose :)
[00:37:21] <mooff> if you really need to convert it.. 
[00:40:16] <mooff> :: class MyHash < Hash; def [](*) "useless" end; end; h = MyHash.new; h['test'] = 'useful'
[00:40:17] <ruby-eval> => "useful"
[00:40:24] <mooff> :: h['test']
[00:40:24] <ruby-eval> => "useless"
[00:40:36] <mooff> :: h.to_hash.class
[00:40:36] <ruby-eval> => MyHash
[00:40:39] <mooff> :: h.to_h.class
[00:40:39] <ruby-eval> => Hash
[00:40:44] <mooff> :: h.to_h['test']
[00:40:45] <ruby-eval> => "useful"
[00:42:48] <mooff> to_h ought to work on the HashWithTypesAndFields. it's equivalent to MyHash
[00:44:58] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:46:44] <rapha> adam12: yeah, that was me solving it by not solving it but finding out what triggers it and then not doing it, like i always end up doing, lol
[00:49:21] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[00:53:25] *** Joins: TCZ (~tcz@91.150.178.124)
[00:56:12] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:01:25] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[01:02:59] *** Quits: bluedust_ (~bluedust@89.45.224.214) (Remote host closed the connection)
[01:03:31] *** Joins: bluedust (~bluedust@89.45.224.214)
[01:05:05] <adam12> rapha: lol
[01:05:08] <adam12> yay computers!
[01:08:34] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 272 seconds)
[01:14:28] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[01:27:27] *** Joins: gproto23_ (~gproto23@user/gproto23)
[01:27:50] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:28:37] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[01:29:36] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[01:45:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:46:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:58:36] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 272 seconds)
[02:00:00] *** Joins: va5c0 (~vasco.nun@94.46.13.80)
[02:06:02] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:11:14] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:11] *** Quits: va5c0 (~vasco.nun@94.46.13.80) (Ping timeout: 252 seconds)
[02:35:54] *** Quits: basso (~basso@195.139.200.7) (Quit: The Lounge - https://thelounge.chat)
[02:36:10] *** Joins: basso (~basso@195.139.200.7)
[02:39:25] *** Quits: cognemo_ (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Ping timeout: 240 seconds)
[02:41:16] *** Quits: basso (~basso@195.139.200.7) (Quit: The Lounge - https://thelounge.chat)
[02:41:33] *** Joins: basso (~basso@195.139.200.7)
[02:41:56] *** Joins: cognemo (~cognemo@cpe-46-164-14-20.dynamic.amis.net)
[02:44:18] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[02:51:48] *** Quits: cognemo (~cognemo@cpe-46-164-14-20.dynamic.amis.net) (Ping timeout: 272 seconds)
[02:53:40] *** Joins: cognemo (~cognemo@cpe-92-37-82-231.dynamic.amis.net)
[02:55:58] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:22] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[03:07:36] *** Quits: mooff (mooff@awful.cooking) (Remote host closed the connection)
[03:08:10] *** Joins: mooff (mooff@awful.cooking)
[03:22:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:38:13] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[03:42:29] *** Quits: ua__ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 256 seconds)
[03:50:03] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[03:51:19] *** Joins: justAstache (~justache@user/justache)
[04:21:00] *** Joins: Synthead (~Synthead@50.35.186.220)
[04:21:47] <Synthead> I have this typical line in a network-enabled program:
[04:21:52] <Synthead> Faraday::Connection.new do |faraday|
[04:21:52] <Synthead>   faraday.request(:authorization, :Bearer, access_token)
[04:21:52] <Synthead> end
[04:22:10] <Synthead> How can I use rspec to test that faraday is getting configured with the access token?
[04:25:51] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[04:30:08] <adam12> Synthead: Not really what I would test, and I don't use rspec, but you could mock Faraday::Connection.new to yield a double, and then expect on that double to receive request, with the data you expect.
[04:30:21] <adam12> Technically you're mocking what you don't own tho, and that's kind of a no-no
[04:32:11] <Synthead> yeah I don't like it either
[04:36:11] <adam12> Synthead: Maybe you can mock that access_token is expected? Or inspect the faraday connection? I'm not sure.
[04:36:42] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[04:36:44] <Synthead> adam12: yeah... there aren't a lot of great options is what I'm finding
[04:37:04] <Synthead> I'm doing the yield thing now, but I'm also calling more than #request on the object, so it's kind of funky
[04:37:37] <Synthead> there isn't a great way to read the token either, unless I want to pick at instance vars in the faraday object
[04:43:11] <adam12> Could you yield a null object, then expect on that?
[04:43:25] <adam12> Then your other calls to the faraday object wouldn't matter?
[04:43:33] <adam12> I'd have to see code to give any more suggestions, I think.
[04:45:27] <Synthead> adam12: I am yielding a double, yeah
[04:47:52] <mooff> agree it's sus
[04:56:51] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[04:56:56] <mooff> can you test that it sends a sensible request, rather than 'uses Faraday and calls this method then that method with these args'?
[05:01:17] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[05:01:57] <adam12> Doh. Misconfigured Rack::Static and realized I lost a few days of Rubygem webhooks for gemdocs.org..
[05:05:10] *** Joins: bluedust (~bluedust@89.45.224.214)
[05:10:01] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 256 seconds)
[05:19:37] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[05:25:09] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:27:43] *** Joins: kaivai (~kaivai@user/kaivai)
[05:29:49] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:31:02] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:33:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:39:13] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:10:29] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:11:45] *** Joins: justAstache (~justache@user/justache)
[06:29:57] *** Joins: Guest77 (~Guest77@218.108.32.154)
[06:30:01] <Guest77> sdl【】
[06:32:09] *** Quits: Guest77 (~Guest77@218.108.32.154) (Quit: Client closed)
[06:57:50] *** Joins: ur5us (~ur5us@203.86.198.200)
[07:24:37] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[07:46:09] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[07:49:41] <michigan> adam12: Hey!
[07:51:14] <michigan> adam12: Cool!
[07:51:26] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 260 seconds)
[07:56:32] <michigan> Better to put my heart and soul into my Ruby buddies, rather than some random boss who only wants me for his fame and fortune
[07:57:53] <michigan> adam12: I redid that latest version based on architectural principles
[07:58:14] <michigan> Everything is pixel-perfect and evenly spaced
[08:01:06] <michigan> And tilted by 12°
[08:01:52] *** Joins: bluedust (~bluedust@89.45.224.214)
[08:02:50] <michigan> Oh yo!
[08:03:06] *** Joins: bluedust_ (~bluedust@103.148.21.74)
[08:04:22] <michigan> Doubt I can make a logo as great as Gemdocs, but the other day you also introduced me to NLP.
[08:04:25] <michigan> ruby-nlp
[08:04:56] <michigan> It's been taking up all my time lately! nor-nlp: https://i.imgur.com/4gyrsRt.png
[08:06:12] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 240 seconds)
[08:10:29] *** Joins: Starfoxxes (~Starfoxxe@ip-037-201-006-167.um10.pools.vodafone-ip.de)
[08:17:42] <michigan> People ask me, who is Adam12?
[08:18:05] <michigan> I tell them the same thing every time: Disintegrin and metalloproteinase domain-containing protein 12 (previously Meltrin) is an enzyme that in humans is encoded by the ADAM12 gene.
[08:18:15] <michigan> lol
[08:18:29] <michigan> Later brotherman, I'm out!
[08:20:54] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Quit: Lost terminal)
[08:23:44] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[08:38:01] *** Joins: fef (~thedawn@user/thedawn)
[09:11:57] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Remote host closed the connection)
[09:13:42] *** Quits: hololeap (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[09:13:42] *** Quits: aeris (~aeris@user/aeris) (Read error: Connection reset by peer)
[09:13:42] *** Quits: fef (~thedawn@user/thedawn) (Read error: Connection reset by peer)
[09:16:11] *** Joins: hololeap (~hololeap@user/hololeap)
[09:16:30] *** Joins: aeris (~aeris@user/aeris)
[09:23:12] *** Joins: fef (~thedawn@user/thedawn)
[09:27:16] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:49:35] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[09:50:37] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[09:50:37] *** Quits: fef (~thedawn@user/thedawn) (Write error: Connection reset by peer)
[09:50:37] *** Quits: aeris (~aeris@user/aeris) (Write error: Connection reset by peer)
[09:50:53] *** Joins: aeris (~aeris@user/aeris)
[09:51:06] *** Joins: fef (~thedawn@user/thedawn)
[09:52:05] *** Joins: hololeap (~hololeap@user/hololeap)
[10:02:03] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[10:05:34] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[10:08:12] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[10:13:18] *** Quits: Synthead (~Synthead@50.35.186.220) (Quit: Leaving)
[10:15:48] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[10:21:34] *** Quits: seabre (~seabre@user/seabre) (Ping timeout: 250 seconds)
[10:24:23] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:25:20] *** Joins: seabre (~seabre@user/seabre)
[10:34:22] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[10:56:28] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[10:56:45] *** Joins: TzilTzal (~TzilTzal@158.140.134.198)
[10:58:19] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[11:08:34] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:30:18] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[11:42:39] *** Joins: ZAJDAN (~ZAJDAN@195.122.199.179)
[11:43:52] *** Joins: Rounin (~david@84.212.130.215)
[11:51:21] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[11:51:51] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Client Quit)
[11:52:35] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[12:03:59] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:20:29] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[12:20:51] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[12:23:09] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:28:27] *** Joins: cybertron (~cybertron@2a03:4000:5:32a:6447:c0ff:fe3a:2af4)
[12:35:19] *** Quits: bluedust_ (~bluedust@103.148.21.74) (Remote host closed the connection)
[12:35:37] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[12:39:23] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 256 seconds)
[12:40:11] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[12:40:50] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:52:45] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:45] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 250 seconds)
[12:59:42] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[13:10:12] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:10:57] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[13:15:57] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 256 seconds)
[13:17:14] *** Joins: bluedust (~bluedust@103.148.21.74)
[13:17:39] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[13:17:52] *** Quits: mitt3ns (~agent_whi@user/mitt3ns) (Quit: later)
[13:21:48] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 240 seconds)
[13:22:12] *** Joins: bluedust (~bluedust@117.207.234.120)
[13:33:55] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[13:42:03] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:42:25] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[13:46:22] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[13:51:41] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:52:16] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[13:53:33] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:56:09] *** Quits: TzilTzal (~TzilTzal@158.140.134.198) (Remote host closed the connection)
[13:56:27] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[13:57:48] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[13:59:12] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:59:29] *** Quits: ZAJDAN (~ZAJDAN@195.122.199.179) (Read error: Connection reset by peer)
[13:59:36] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[14:02:25] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[14:03:17] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[14:05:21] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:12] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 272 seconds)
[14:08:50] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[14:19:49] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 240 seconds)
[14:20:12] *** Quits: splud (~noneya.bi@user/splud) (Remote host closed the connection)
[14:29:16] *** Joins: splud (~noneya.bi@user/splud)
[14:39:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:42:26] *** Joins: Aylat (~Aylat@225.red-83-47-87.dynamicip.rima-tde.net)
[14:42:26] *** Quits: Aylat (~Aylat@225.red-83-47-87.dynamicip.rima-tde.net) (Changing host)
[14:42:26] *** Joins: Aylat (~Aylat@user/Aylat)
[14:43:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:50:48] *** Joins: TCZ (~tcz@91.150.178.124)
[14:51:08] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[14:55:59] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[14:58:10] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 268 seconds)
[15:13:30] *** Joins: TomyWork (~TomyLobo@p200300e80f158200e0a0a550bb296489.dip0.t-ipconnect.de)
[15:18:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[15:18:45] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:26:38] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 250 seconds)
[15:32:10] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[15:40:30] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[15:42:03] *** Joins: bluedust (~bluedust@117.207.234.120)
[15:45:44] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 272 seconds)
[15:46:11] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[15:50:55] *** Quits: dhruvasagar (~dhruvasag@49.207.194.244) (Ping timeout: 256 seconds)
[15:57:17] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[16:02:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:04:55] <rapha> y'all
[16:05:38] <rapha> why does `if foo = :foo; ...; end` work, but `if (foo, bar = [:foo, :bar]); ...; end` doesn't?
[16:15:45] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:17:07] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:23:57] *** Joins: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369)
[16:24:03] *** Quits: Aylat (~Aylat@user/Aylat) (Read error: Connection reset by peer)
[16:27:51] <leah2> wfm?
[16:28:07] <leah2> has a warning tho
[16:29:15] <rapha> "wfm", leah2?
[16:29:19] <rapha> oh, "works for me"
[16:29:31] <rapha> ok maybe i'm on too new of a ruby and in yours its just deprecated
[16:29:46] <leah2> mine is ruby 3.0
[16:30:01] <rapha> oh wait, i get the warning, too, trying it in pry now
[16:30:02] <leah2> what does it say in yours?
[16:30:05] <rapha> (3.0, too)
[16:30:11] <rapha> sad
[16:30:16] <rapha> this is very practical
[16:30:22] <rapha> but i hate using things that give warnings
[16:30:32] <leah2> the warning makes sense in the one-argument case :p
[16:30:42] <rapha> hmmm, but there, no warning
[16:30:52] <rapha> huh, wait
[16:30:55] <rapha> oooooooh
[16:31:19] <rapha> ONLY gives a warning if you assign a value
[16:31:26] <rapha> gives NO warning if you call upon a function
[16:31:44] *** Joins: some14u (~textual@109.139.93.183)
[16:32:12] <rapha> and then you can also use 2
[16:32:16] <rapha> veeeeeeeeery nice
[16:34:08] <leah2> ah reasonable
[16:34:25] <leah2> >> if foo = :foo.itself; foo; end
[16:34:27] <leah2> :D
[16:34:53] <leah2> iirc one didnt need the ()?
[16:35:07] <leah2> ah hm, one does
[16:35:43] <rapha> hmm i'm using it without () when just needing one
[16:35:48] <rapha> also nice hack there :P
[16:37:49] <leah2> :p
[16:39:09] *** Quits: some14u (~textual@109.139.93.183) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:42:36] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[16:42:44] *** Joins: some14u (~textual@109.139.93.183)
[16:47:58] *** Quits: some14u (~textual@109.139.93.183) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:55:50] <rapha> is there some nice way of inserting into a Hash after a specific key and before whichever comes next? or is rebuilding the hash manually the only option?
[16:57:01] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[16:58:19] *** Joins: justAstache (~justache@user/justache)
[17:04:21] <leah2> not sure one has control over the order except when adding new stuff
[17:05:50] *** Joins: TzilTzal (~TzilTzal@58.96.213.198)
[17:06:35] <leah2> not sure adding the order at all was such a great idea :p
[17:08:09] *** Quits: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369) (Ping timeout: 252 seconds)
[17:10:09] <rapha> i would not be able to properly use them if they weren't order-of-insertion
[17:10:29] <rapha> but well, fair enough ... i'll make it into an Array, insert where it's needed, and .to_h it oncem ore
[17:18:32] *** Quits: TzilTzal (~TzilTzal@58.96.213.198) (Remote host closed the connection)
[17:20:04] *** Joins: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369)
[17:26:50] *** Quits: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369) (Ping timeout: 252 seconds)
[17:27:13] *** Joins: dhruvasagar (~dhruvasag@49.207.194.244)
[17:29:08] *** Joins: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369)
[17:30:06] <ox1eef> at one time it was said that ordered hashs in Ruby are an implementation detail (of Ruby) and shouldn't be relied on. Not that practical though, i think all implementations of Ruby have ordered hashes. 
[17:39:15] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[17:39:46] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[17:42:34] <rapha> yeah if they removed that implementation detail i think i would either never update ruby again or implement my own OHash class or whatever
[17:42:44] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[17:44:32] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[17:45:38] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[17:45:41] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[17:47:28] <ox1eef> hehe
[17:47:57] <ox1eef> maybe there's some die hards out there running 1.8.6 or before.
[17:55:23] <leah2> it was added later no?
[17:55:33] <leah2> 1.9 wow
[17:57:13] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[17:57:33] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[18:00:19] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[18:01:36] *** Joins: justAstache (~justache@user/justache)
[18:10:32] <ox1eef> yeah, that rings a bell. 
[18:16:10] <havenwood> rapha: Now it's documented and guaranteed. ;)
[18:18:27] <havenwood> Set is the new thing that's currently ordered but Matz reserves the right to make it unordered in the future.
[18:25:43] <ox1eef> what of SortedSet then? gone, or just an alias?
[18:26:56] <havenwood> ox1eef: It's out of stdlib. External gem.
[18:27:42] <havenwood> Regular Set happens to be sorted by insertion order, since it's based on Hash, but Matz wants to keep it open to change. Seems kinda like folk are probably relying on it and it'd be hard to change in Ruby 3 but ¯\_(ツ)_/¯ 
[18:29:47] <ox1eef> good to know thanks.
[18:30:05] <rapha> havenwood: Thanks for that reassurance :-D
[18:30:54] <havenwood> "I weakly disagree with #16992. Currently set orders are determined by the internal hash. We may change the implementation in the future to improve performance or memory overhead. Fixing the order could possibly restrict the future implementation choice." -Matz
[18:34:37] * mooff currently relying on it :)
[18:35:13] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:36:02] * mooff even wants Set#first,last,pop,shift,unshift,insert
[18:37:44] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[18:40:05] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[18:50:36] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:43] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:32] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[19:02:36] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[19:06:36] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:09:20] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[19:15:36] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:18:08] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[19:26:44] <ox1eef> interesting implementation: https://github.com/knu/sorted_set/blob/master/lib/sorted_set.rb
[19:27:23] <ox1eef> mooff: i thought sorted set might have those, but doesn't look like it.
[19:27:32] *** Joins: mmalter (~mmalter@88.126.10.237)
[19:34:32] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[19:35:00] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[19:43:39] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:44:03] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:44:33] *** Joins: bluedust (~bluedust@117.207.234.120)
[19:45:12] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[19:53:55] <nakilon> isn't sorted set a tree + optionally hash for lookup?
[19:59:15] *** Joins: bluedust (~bluedust@117.207.234.120)
[19:59:16] <nakilon> I don't get how it's integrated; the rbtree rubygems homepage link is rubyforge and is dead
[19:59:58] <nakilon> ah, I see, "The interface is the almost identical to that of Hash." -- that's how it glued together
[20:07:46] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[20:19:44] <mooff> interesting, yes: https://github.com/knu/sorted_set/blob/master/lib/sorted_set.rb#L51
[20:38:18] *** hesco3 is now known as hresco3
[20:40:27] <ox1eef> jruby is usually a special case :)
[20:40:56] <ox1eef> i could never really get behind the jvm or its ecosystem, undoubtedly it has cool stuff though.
[20:41:43] *** Joins: bluedust (~bluedust@117.207.234.120)
[20:47:12] *** Quits: bluedust (~bluedust@117.207.234.120) (Ping timeout: 272 seconds)
[21:00:04] <havenwood> nakilon: When SortedSet was in the stdlib it was a strange implementation where by default it was in Ruby built on top of Set but if rbtree gem (or one of the modern variants that all have lib/rbtree) then it'd use them instead.
[21:00:51] <nakilon> the rubygems says it's modern but I don't understand where is the source
[21:00:53] <nakilon> code
[21:00:56] <havenwood> Like https://github.com/kyrylo/rbtree3
[21:01:39] <havenwood> nakilon: Ah, yeah, looks like rbtree is actively maintained again. It had a lull a few years back and I wasn't tracking.
[21:12:46] <ox1eef> SortedSet still seems useful, it's a different kind of sort using the spaceship operator.
[21:41:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:47:44] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[21:48:32] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[21:48:47] <mooff> yeah. spaceship sorted, rather than insertion ordered
[21:53:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:57:04] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.156)
[22:06:42] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-bc3c-c504-f41c-b7e6.ip6.gigabit.dk)
[22:07:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:09:32] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.156) (Ping timeout: 272 seconds)
[22:13:09] <ox1eef> pretty cool and done with very little code, obviously there's more to it when you consider the source of rbtree.
[22:16:53] <mooff> substitution principle in action :)
[22:26:36] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:45:56] *** Joins: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net)
[22:45:56] *** Quits: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net) (Changing host)
[22:45:56] *** Joins: mitt3ns (~agent_whi@user/mitt3ns)
[22:55:47] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[22:59:39] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[23:04:29] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[23:09:24] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[23:12:08] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:59] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 252 seconds)
[23:26:50] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[23:27:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[23:30:13] *** Joins: justAstache (~justache@user/justache)
[23:30:37] *** Quits: roadie (~user@2a02:8108:5a40:1d87:5057:8648:def2:c369) (Ping timeout: 268 seconds)
[23:31:51] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:39:42] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[23:41:23] *** Quits: gigamo (~gigamo@user/gigamo) (Ping timeout: 252 seconds)
[23:41:41] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (Ping timeout: 250 seconds)
[23:42:07] *** Joins: gigamo (~gigamo@user/gigamo)
[23:43:08] *** Quits: Exa (exa@irc.moe) (Quit: see ya!)
[23:43:55] *** Joins: Exa (exa@irc.moe)
[23:48:31] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:51:10] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[23:51:30] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[23:53:37] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[23:55:42] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[23:56:10] *** Joins: roadie (~user@2a02:8108:5a40:1d87:ac7d:6693:e15d:83a5)
[23:59:27] *** Joins: SebasDev (~SebasDev@191.95.131.135)
