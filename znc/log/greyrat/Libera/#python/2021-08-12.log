[00:00:42] <acresearch> no_gravity:  i am not familiar with what are curses and this information, can you guide me where i can learn more about it?  so the terminal output is clean
[00:00:49] *** Joins: georgios (~georgios@user/georgios)
[00:00:51] <Akuli> for example, "tput clear | hexdump -C" says "1b 5b 48 1b 5b 32 4a 1b  5b 33 4a" which translates to print(bytes.fromhex("1b 5b 48 1b 5b 32 4a 1b  5b 33 4a").decode())
[00:00:58] <KirkMcDonald> `curses` is the name of a module in Python's standard library.
[00:01:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[00:01:22] <zware> acresearch: Also note that these suggestions are all *nix-based, it's a whole different world if you happen to be on Windows
[00:01:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:01:38] <acresearch> zware: ah i see
[00:02:06] <no_gravity> acresearch: https://docs.python.org/3/howto/curses.html
[00:02:19] <acresearch> no_gravity: thanks
[00:02:34] <shrysr> how to curse :)
[00:03:08] <KirkMcDonald> https://en.wikipedia.org/wiki/ANSI_escape_code
[00:03:54] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:04:10] *** Joins: Mach (~mach@2a02:2f09:d303:5d00::738)
[00:04:28] <KirkMcDonald> So, assuming a normal Unix-ish terminal, `print("\033[2A") will move the cursor two lines up, for example.
[00:04:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 276 seconds)
[00:05:29] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:06:10] <KirkMcDonald> Or perhaps "\033[2F", which will go two lines up and place the cursor at the start of that line.
[00:07:16] <KirkMcDonald> Though now I'm wondering how this behaves if a line is longer than the terminal width; I suspect it will literally just go two terminal rows up, which may require some consideration when crafting your output.
[00:07:26] <stealth_> is that really what acresearch problem trying to solve? hmm
[00:07:39] <KirkMcDonald> Oh, really I would just use Urwid.
[00:07:47] *** Joins: zeden (~zeden@user/zeden)
[00:07:49] <KirkMcDonald> And not worry about things on this level.
[00:08:07] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:09:03] <KirkMcDonald> But you can always just play around with this stuff: https://bpa.st/42HQ
[00:09:27] <no_gravity> Anybody here doin user authentication in a Django or Flask project?
[00:09:36] *** Joins: matsaman (~matsaman@user/matsaman)
[00:09:56] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[00:10:09] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68)
[00:10:39] <acresearch> no_gravity: i can't seem to understand how curses work, i think it might be overkill of a simple thing i am trying to do
[00:10:52] *** Joins: audiophile (~audiophil@user/audiophile)
[00:11:03] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[00:11:08] <matsaman> many have argued there are simpler things for python than curses
[00:11:14] <matsaman> s/things/libs/
[00:11:24] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[00:11:33] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:12:53] *** Joins: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at)
[00:12:54] <no_gravity> acresearch: I have not used it. I have done an extensive TUI project that uses tput but that was a PHP project.
[00:12:56] <stealth_> acresearch, how about something like this https://bpa.st/X64A
[00:13:21] <stealth_> acresearch, add/popleft from deque
[00:13:51] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[00:14:26] *** Parts: ska (~ska@user/ska) (Leaving)
[00:15:12] <zware> stealth_: I think that's a bit off-base; to my understanding acresearch is wanting to replace three lines of text in a terminal instead of constantly appending three new lines on each update
[00:15:29] <acresearch> stealth_: hmmm not what i had in mind,   but it is ok i think i can work it with os.system('clear') before the print statement,, it will clear the terminal   but keep the text "live"
[00:16:04] <graingert> rendar: I'd highly recommend anyio ;)
[00:16:23] <stealth_> ya i wasn't sure, so its actually a terminal thing, thought it was more of reading multiple lines and printing single line at a time
[00:17:36] <rendar> graingert: thanks
[00:21:35] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:21:47] *** Joins: anorthall (~anorthall@user/anorthall)
[00:22:20] *** Joins: rinwa (~user@141.226.14.13)
[00:23:19] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 268 seconds)
[00:24:20] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:27:55] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:27:57] *** Quits: magla (~gelignite@55d48471.access.ecotel.net) (Quit: Stay safe!)
[00:30:28] *** jpds1 is now known as jpds
[00:32:46] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:33:27] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 245 seconds)
[00:34:40] *** Joins: neilthereildeil (~neilthere@70.21.11.5)
[00:34:47] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[00:35:33] *** Joins: Skyfire (~pyon@user/pyon)
[00:35:36] <neilthereildeil> what does this syntax mean? embedded = Embedding(num_classes, name='embedding')(input)
[00:35:56] <neilthereildeil> what are we passing input to?
[00:36:28] <KirkMcDonald> neilthereildeil: To whatever object was returned by the call to Embedding()
[00:36:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:36:48] <neilthereildeil> how do you pass an object to an object?
[00:36:54] <neilthereildeil> you pass an object to a function...
[00:37:01] <KirkMcDonald> neilthereildeil: To call something is just an operator like any other.
[00:37:09] <dale> neilthereildeil: If Embedding is a class, look for a __call__ method on it.
[00:37:21] <KirkMcDonald> You can, for example, define a __call__ method to make instances of a class callable.
[00:37:32] <neilthereildeil> ah ok
[00:37:57] <KirkMcDonald> Alternatively, Embedding could be a function, and it could return a function.
[00:38:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[00:38:15] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: quit)
[00:38:23] <neilthereildeil> heres the EMbedding class: https://keras.io/api/layers/core_layers/embedding/
[00:38:31] <neilthereildeil> it doesnt saying anything about __call__
[00:39:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:39:38] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[00:39:52] <KirkMcDonald> That documentation doesn't seem to say *anything* about what you can do with instances of that class.
[00:40:46] <neilthereildeil> so what does that mean for me? what does this code do?
[00:40:50] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:41:03] <zware> neilthereildeil: Basically, `thing(arg)` always means "call `thing` with `arg`", and it really doesn't matter what `thing` happens to be.  If `thing` is a callable object, it will be called with `arg`; if it's not, an exception will be raised
[00:41:20] <stealth_> neilthereildeil, where did you get that code from?
[00:41:35] <dale> neilthereildeil: I think it comes from here: https://github.com/keras-team/keras/blob/948df87f1669e203e16e39daeaca52e2ea3253ad/keras/engine/base_layer_v1.py#L622
[00:41:40] <neilthereildeil> its a small program that uses Keras/tensorfloe libararies
[00:41:50] *** Joins: Bushwick (~bushwick@158.62.142.198)
[00:41:53] <dale> neilthereildeil: Embedding is a subclass of Layer: https://github.com/keras-team/keras/blob/948df87f1669e203e16e39daeaca52e2ea3253ad/keras/layers/embeddings.py#L31
[00:42:07] <KirkMcDonald> neilthereildeil: Hmm, if I'm interpreting these docs correctly, then 'Input shape' is the thing you pass to the object, and 'Output shape' is what it returns.
[00:42:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[00:43:04] <KirkMcDonald> I suspect this would make more sense if I knew more about the overall design of this library, but I don't really feel like digging into that right now.
[00:43:49] <neilthereildeil> how was i supposed to know that Embedding is a subclass of layer without looking at the code? is it in the docs?
[00:44:04] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 272 seconds)
[00:44:11] <SnoopJ> neilthereildeil, the word "layer" is right in the title of the page you linked
[00:44:24] <SnoopJ> and the page is part of the Layers API documentation, under "Core layers"
[00:44:58] <SnoopJ> https://keras.io/api/layers/ is probably something you should read to understand the broad view
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:07] *** Joins: daoudr (~daoudr@178.197.205.92)
[00:46:49] <neilthereildeil> ok that note was super helpful
[00:46:50] <neilthereildeil> thx
[00:47:24] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:50] <stealth_> neilthereildeil, their homepage literally has an example of how to use `Embedding` https://keras.io/
[00:48:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:50:38] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[00:50:48] <gerty> neilthereildeil, this way of composing NN is what's referred to as Keras functional API: https://keras.io/guides/functional_api/
[00:52:58] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[00:55:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:57:42] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:58:08] <neilthereildeil> thanks
[00:58:27] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[00:58:49] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[00:59:27] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:00:32] *** Quits: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[01:03:41] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:04:31] *** Quits: neilthereildeil (~neilthere@70.21.11.5) (Quit: Client closed)
[01:05:35] *** Quits: mexen (uid495612@user/mexen) ()
[01:06:01] *** Joins: besnn (~besnn@user/besnn)
[01:07:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[01:07:56] *** Joins: nergar (~danie@177.225.146.7)
[01:12:18] <anorthall> i like python
[01:12:46] *** Joins: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at)
[01:13:03] <SnoopJ> me too
[01:13:10] <anorthall> SnoopJ: omg, same!
[01:14:01] *** Joins: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs)
[01:17:07] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[01:17:41] <xheimlich> when I saw "dir(object)" I get a list of strings. Can I say if "transform" in dir(obj)?
[01:18:38] <zware> xheimlich: I'd generally go for `if hasattr(obj, "transform")` instead
[01:19:16] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[01:23:03] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[01:23:08] <xheimlich> I had forgotten about that.
[01:23:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:23:26] *** Joins: jinsun (~quassel@user/jinsun)
[01:23:35] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[01:23:39] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[01:25:45] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.78.162)
[01:26:26] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[01:26:33] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[01:26:52] *** Joins: et (~et@user/et)
[01:27:13] *** Joins: BlessJah (~BlessJah@user/blessjah)
[01:28:58] *** Joins: streety (~streety@li761-24.members.linode.com)
[01:29:39] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:29:40] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[01:32:23] *** Quits: rendar (~rendar@user/rendar) ()
[01:32:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[01:34:52] *** Quits: gildasio1 (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio1)
[01:35:37] *** Quits: rndm (~rndm@143.59.164.79) (Ping timeout: 248 seconds)
[01:36:12] *** Quits: daoudr (~daoudr@178.197.205.92) (Remote host closed the connection)
[01:38:10] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:39:11] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[01:40:41] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[01:41:31] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[01:42:17] <ferz> Using SQL Alchemy can I declare a column as read-only?
[01:45:42] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 256 seconds)
[01:45:45] *** Quits: rinwa (~user@141.226.14.13) (Read error: Connection reset by peer)
[01:46:18] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[01:46:32] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:47:08] *** Quits: Mach (~mach@2a02:2f09:d303:5d00::738) (Quit: q)
[01:48:01] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[01:48:58] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[01:49:26] <stealth_> ferz, read-only column? https://www.postgresql.org/docs/current/sql-set-transaction.html ?
[01:50:23] *** Quits: yakiza (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Read error: Connection reset by peer)
[01:51:58] *** Quits: greedom (~greedom@2001:16b8:2e98:cd00:34f0:3e06:18df:7359) (Remote host closed the connection)
[01:53:04] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.78.162) (Ping timeout: 256 seconds)
[01:56:26] *** Joins: minip (minip@user/minip)
[01:56:59] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.78.162)
[01:57:38] *** Joins: Pickchea (~private@user/pickchea)
[01:58:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:59:22] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:00:45] *** Quits: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[02:00:57] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 245 seconds)
[02:01:00] <newdimension> I've used previously used beautiful soup to find nested elements in an HTML documents. Now, I'm giving Selenium a try and I'm wondering if people use it in conjunction with BeautifulSoup or should I be able to find all elements without resorting to beautiful soup?
[02:01:36] <b_jonas> ooh! I'm so leading edge, I just tried to use a function new to python 3.9 in an earlier python version. I think this is a first. it's happened to me with earlier python versions, but not for 3.9 yet
[02:01:52] <b_jonas> (bytes.removeprefix)
[02:02:49] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.78.162) (Quit: Connection closed)
[02:03:03] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[02:05:16] <ferz> stealth_: thank you, but your link seems not related to my question.  I know how make a column read only server side, I need to know if I can make it read only only for SQLAlchemy.
[02:05:34] <ferz> At least for SQLAlchemy ORM
[02:06:54] <dale> ferz: How do you make a column read-only server-side?
[02:07:25] <dale> Maybe some GRANT/REVOKE...?
[02:08:09] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 268 seconds)
[02:08:32] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:08:50] <ferz> dale: yes, using user permissions.
[02:09:28] <ferz> but I need to make it read-only from the python app, not for the user.
[02:10:30] <ferz> dale: I can do also server side with a trigger
[02:10:50] <dale> Oh, OK, so you don't care that someone could some_sqlalchemy_engine.execute("UPDATE users SET password = ''"), you just want to block changes to the O-R mapped objects made by SQLAlchemy?
[02:11:00] <dale> ferz: Yeah, trigger was my next guess.
[02:11:07] <ferz> there are always many ways to do things.
[02:11:18] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[02:11:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[02:11:28] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[02:12:25] <ferz> Yes, I need only to protect db from some nasty parts of an existing application.
[02:13:10] <stigz> alternatively, depending on the database, you could use a computed column.
[02:13:10] *** Joins: y1n (~y1n@84-115-64-103.wifi.dynamic.surfer.at)
[02:14:08] <dale> ferz: I have never done this, but https://stackoverflow.com/q/23455506/ might have something for you.  https://groups.google.com/g/sqlalchemy/c/eesWU5fQDuA is old but it might have some ideas.
[02:14:29] <ferz> stigz: ok, right.  But here it's a python chan. I can try to ask same question about SQL Alchemy on a Ruby or Rust channel :D
[02:16:03] <stigz> i was more interested in offering a suggestion in general rather than making sure the suggestion involved python in some way.
[02:16:07] <dale> ferz: Oh, I think there's this SQLAlchemy concept of a "computed column", some kind of @property or something.
[02:16:39] <dale> ferz: I was going to suggest that you could map the column as _column_name_here and then @property def column_name_here(self): return self._column_name here
[02:16:55] <dale> (Don't be like me, don't forget the final underscore before "here".)
[02:17:42] <dale> I keep hitting annoying limitations of things like dataclasses, attrs, and Pydantic.  Time to write my own serialization/deserialization framework.  But this time, I'll get it right!
[02:17:52] <ferz> dale: thank you
[02:17:52] *** Quits: Barones (~Barones@2804:48dc:8500:0:c583:969:38ff:428a) (Quit: Leaving)
[02:19:15] *** Quits: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[02:19:33] <ferz> stigz: thank you anyway.
[02:21:54] *** Joins: besnn (~besnn@user/besnn)
[02:22:07] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[02:27:30] *** Joins: finsternis (~X@23.226.237.192)
[02:27:46] *** Joins: qlixed (~qlixed@152.170.36.244)
[02:28:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:28:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:28:24] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[02:29:25] *** Joins: rinwa (~user@141.226.14.13)
[02:29:48] *** Joins: computeiro (~Wender@191.54.95.27)
[02:30:45] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:31:05] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:32:11] *** Joins: molt (~molt@79.140.150.21)
[02:32:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:32:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:33:50] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:34:28] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[02:34:28] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[02:34:42] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 245 seconds)
[02:35:54] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:36:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:40:27] *** Quits: Narrat (~omnius@p200300df5f0ae58d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:41:14] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:42:44] *** Joins: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net)
[02:42:49] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:42:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:43:03] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:43:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:44:09] *** Joins: Fiji (~Fiji@user/fiji)
[02:44:18] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[02:45:08] *** Quits: computeiro (~Wender@191.54.95.27) (Ping timeout: 268 seconds)
[02:45:44] *** Joins: female_student_4 (~female_st@2a01:388:475:150::1:b3)
[02:46:01] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:46:57] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[02:48:23] *** Quits: bninja (~bloodninj@user/bloodninja) (Ping timeout: 252 seconds)
[02:49:37] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:49:49] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:51:27] *** Joins: mci64 (~mci64@185.242.190.95)
[02:52:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:53:12] *** Quits: Akuli (~Akuli@87-94-109-27.bb.dnainternet.fi) (Quit: Leaving)
[02:54:28] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:55:32] <stealth_> any way to inject an attribute to `async def` function?
[02:57:30] <jarthur> stealth_ what do you mean by inject an attribute? You can pass arguments to one as you would a plain function.
[02:58:02] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:58:06] *** Quits: p-i-_ (~Ohmu@mx-ll-171.6.248-30.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[02:58:29] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:58:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:59:39] *** Joins: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a)
[02:59:52] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:00:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:00:33] *** Quits: y1n (~y1n@84-115-64-103.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[03:00:34] <stealth_> jarthur, currently i do `some_function, (arg1, arg2)` it would be better to do `some_function(arg1, arg2)` -> `some_function(arg0, arg1, arg2)`
[03:01:17] <stealth_> since they are `async`, they are not triggered till `await` happens
[03:01:37] *** Joins: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net)
[03:03:18] <jarthur> stealth_ in most cases, it's more readable to pass arguments to the async function in the same statement you await the function. When you do that it behaves very similarly to calling a non-async function.
[03:03:33] <jarthur> i.e. await some_async_function(arg1, arg2, arg3)
[03:03:52] *** Quits: jess (~jess@libera/staff/jess) (Ping timeout: 600 seconds)
[03:04:02] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 272 seconds)
[03:04:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[03:04:25] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[03:05:41] <stealth_> jarthur, yes, for `some_function, (arg1, arg2)` i take that and do `wait_task(some_function(arg0, arg1, arg2))`
[03:06:10] <stealth_> `some_function, (arg1, arg2)` can get confusing and easy to make mistakes with.
[03:06:12] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[03:06:43] <jarthur> What loop are you using? asyncio? Trio? curio?
[03:06:59] <stealth_> jarthur, custom
[03:07:29] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:08:08] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[03:09:42] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 245 seconds)
[03:09:58] *** Quits: p-i- (~Ohmu@2403:6200:8870:dac3:24e5:4716:580b:a52a) (Read error: Connection reset by peer)
[03:10:01] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 248 seconds)
[03:10:57] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[03:12:00] <jarthur> Trio and anyio use a callback style for times when you schedule-but-don't-immediately-await an async function, e.g. tasks.call_soon(some_async_func, arg1, arg2). It helps avoid confusion around whether or not you're actually "running" the function or not when you "call" it.  asyncio has you pass in the realized coroutine object (result of calling some_async_func(arg1, arg2)) which is a prettier syntax but can
[03:12:00] <jarthur>  cause that confusion for new users who don't realize its code isn't immediately being run.
[03:12:09] *** Joins: djapo (~archangel@user/djapo)
[03:12:26] <jarthur> But I'm not sure exactly what syntax or style you're shooting for
[03:13:06] *** Joins: y1n (~y1n@84-115-64-103.wifi.dynamic.surfer.at)
[03:13:45] *** Joins: devcpu (~rusty@208.116.227.242)
[03:13:53] *** Quits: female_student_4 (~female_st@2a01:388:475:150::1:b3) (Quit: Client closed)
[03:14:11] <stealth_> jarthur, well i am doing the trio style, but would like to do it asyncio style but i need to pass a custom argument
[03:14:40] <stealth_> jarthur, its used to handle io related tasks
[03:15:02] *** Quits: cbasah (~armycook2@202.185.71.229) (Remote host closed the connection)
[03:15:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:16:15] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[03:16:50] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[03:16:56] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[03:17:05] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Read error: Connection reset by peer)
[03:17:25] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[03:17:33] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[03:17:46] <jarthur> stealth_ alright. If you've already created the coroutine object from calling the async function, but need to adjust a variable later for the actual running/awaiting, there's a chance that contextvars satisfies the need:
[03:17:47] <jarthur> https://docs.python.org/3/library/contextvars.html
[03:17:52] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:19:30] <stealth_> jarthur, ok thanks, let me read up on it
[03:20:23] *** Joins: computeiro (~Wender@189.37.65.53)
[03:21:25] *** Joins: de-facto (~de-facto@user/de-facto)
[03:21:30] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[03:21:48] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 276 seconds)
[03:23:24] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:23:41] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:23:52] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 245 seconds)
[03:24:08] *** Joins: luna-is-here (~quassel@ip-95-223-59-176.hsi16.unitymediagroup.de)
[03:26:01] *** Joins: Alexer (~alexer@alexer.net)
[03:26:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:27:28] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:27:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:29:32] *** Quits: junktext (~junktext@77.247.181.219) (Ping timeout: 268 seconds)
[03:31:23] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[03:31:34] <dre> this is really interesting:
[03:31:34] <dre> https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result
[03:31:52] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:33:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:34:26] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[03:35:42] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[03:35:42] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[03:35:57] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:38:30] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:39:01] <jinsun> dre: slightly more interesting, predict the output of this https://bpa.st/A23A
[03:40:33] <dre> jinsun, "4" 5 times.
[03:40:44] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:41:30] <jinsun> correct
[03:41:36] <dre> yay!
[03:42:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 248 seconds)
[03:42:49] *** Joins: ice9 (~ice9@user/ice9)
[03:42:50] <dre> jinsun, it's a bit easier to know once you read what I linked :P
[03:43:03] <dre> same idea happening basically.
[03:43:05] *** Joins: female_student_4 (~female_st@2a01:388:475:150::1:b3)
[03:43:20] <jinsun>  I guessed 1 instead of 4 when I first saw, but the x is looked up in the frame where the function is defined not where it is called
[03:43:53] <dre> yep, that would make sense if it were lambda x=x I think
[03:45:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:46:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:46:33] *** Joins: xnbq (~xnbq@user/xnbq)
[03:46:44] *** Quits: female_student_4 (~female_st@2a01:388:475:150::1:b3) (Client Quit)
[03:46:45] *** Joins: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884)
[03:47:28] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:39] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:47:42] <X4> Hi, is there a way to verify if each element of a dict isn't empty or None before assigning a variable to it?
[03:48:14] <X4> I've tried iterating over it using any() here's my minimal example: https://pastebin.com/scRStruQ
[03:48:14] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:49:25] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:49:37] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[03:50:35] <X4> I'm trying to sanitize and validate requests coming in with flask on a google cloud function. It seems like I cannot use anything else other than flask and I'm really out of my GoogleFu with Flask
[03:52:10] <Dan39> i feel like validating request fields is such a common thing there has to be something existing to make it easier than plain python :P
[03:52:10] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:52:12] *** Quits: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884) (Quit: Client closed)
[03:52:30] <mat001> What could be at play if I deprecation warning prints when running Py app from python repl, versus "python myapp.py". I added the warning myself, but only shows in the repl
[03:52:54] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:52:56] <nedbat> mat001: the warning level defaults could be different in the two settings
[03:53:13] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 248 seconds)
[03:53:18] *** Quits: luvalon1 (~luva@178.239.167.170) (Read error: Connection reset by peer)
[03:53:31] *** Joins: de-facto_ (~de-facto@user/de-facto)
[03:53:31] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 244 seconds)
[03:53:45] *** Joins: luvalon1 (~luva@178.239.167.170)
[03:54:07] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:54:14] *** Joins: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884)
[03:54:25] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[03:54:40] *** Quits: luna-is-here (~quassel@ip-95-223-59-176.hsi16.unitymediagroup.de) (Read error: Connection reset by peer)
[03:54:40] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[03:54:42] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:54:51] <X4> Dan39 sorry, got disconnected. I fully agree! But I'm also new to python, but not to programming. :)
[03:55:07] <Dan39> X4: i would look it up in the context of Flask
[03:55:12] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:55:23] <sybariten> Sooo....  I'm sorry to harp on about these dictionaries, but i'm kinda stuck at something since a while now, but rather close to getting finished
[03:55:27] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[03:55:45] <stealth_> X4, you know all the stuff you get will be string right? unless you are getting serialized content
[03:55:54] *** de-facto_ is now known as de-facto
[03:56:33] <sybariten> https://bpa.st/RE7A    so here's a small test case for something i'm trying to do. There are some countries in there, in dictionaries. Their population and their GDP is listed. Now, i can take the gdp dictionary and sort the countries so that obviously China comes first.
[03:57:49] <sybariten> But then i want to look at taking each gdp value and divide it with the population (from another dict), and sort that. And i think i am succeeding, belgium has the highest followed by chile etc. The problem is that i'm still printing the actual national GDP values, and not the per capita ones
[03:58:50] <sybariten> Which is obvious when running the script. The figures don't decrease in the list, basically. If you understand what i'm after, how can i present the actual figures for gdp per capita , when doing this?
[03:59:47] <Repiphany> Easiest would just be to make a new dict, or sort a compression of the values you wanted in the first place
[04:00:09] *** Quits: y1n (~y1n@84-115-64-103.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[04:00:15] <sybariten> Aha, i dont really understand what the second suggestion means Repiphany
[04:00:28] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:00:40] <X4> stealth_ in the example I provided there are strings and ints and possibly also floats in the actual example: https://pastebin.com/scRStruQ
[04:00:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[04:00:45] <sybariten> i guess with sorted() i am getting a list right? Or maybe already with gdp.items() , i had a list
[04:01:19] <Repiphany> sorted([(country, gdp[country]/populations[country]) for country in gdp], key = lambda x : x[1])
[04:01:20] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:01:26] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[04:01:42] *** Joins: tims (~tims@61.69.131.46)
[04:01:43] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:02:12] <X4> Also I was surprised that there is no library in python that finds out the real IP address of the client. Yes of course an application firewall or vpc is better, but sometimes it's not possible.
[04:02:15] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:02:36] <sybariten> Repiphany:  uhm, two questions, is there a name for writing for loops like that (very compact on a row) and is there a way this thing could have been done with the "other" way of writing for loops?
[04:02:48] <Repiphany> or gdp_capita = {country: gdp[country]/populations[country] for country in gdp}
[04:02:55] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:03:01] <stealth_> X4, are you getting the data by json or something?
[04:03:22] <cluelessperson> sybariten, do not use Repiphany 's one liner of code, please.
[04:03:25] <X4> I convert that data to json using req = request.json
[04:03:47] <cluelessperson> it's neat if you are familiar enough to easily read that, but it's difficult and annoying to troubleshoot things like that
[04:03:55] <cluelessperson> :P
[04:03:58] <X4> in the example I provided it's "handmade" poorly, because I'm a beginner in Python =)
[04:04:11] <sybariten> cluelessperson: aha aha
[04:04:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 248 seconds)
[04:04:25] <Repiphany> sybariten: list or dict comprehensions
[04:04:25] *** Wulf4 is now known as Wulf
[04:04:39] <mat001> nedbat: ty. repl is the default. Changing the app log level doesn't produce the deprec warning output... I'm using the "Deprecated" from pypi
[04:05:09] <sybariten> cluelessperson: which one , they were both one liners   :)
[04:05:23] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:05:49] <Repiphany> The second one liner is just to make the dictionary of gdp per capita, you still have to do the sorting in the same way you already were
[04:05:49] <sybariten> Repiphany: is it possible to make any of those (involving for loops) less compact and more newbie readable?
[04:05:51] <cluelessperson> sybariten, just avoid one liners
[04:06:13] <cluelessperson> sybariten, don't try to be a clever coder, bad!
[04:06:36] <Repiphany> https://bpa.st/D2PA
[04:06:43] <cluelessperson> sybariten, to answer your question, yes.
[04:06:44] <sybariten> Repiphany: aha! you're shifting values from both dicts into a new one
[04:07:19] <mat001> nedbat: actually it worked, I called the wrong api, ty
[04:07:44] <stealth_> X4, you check if all values are true https://bpa.st/N3AQ
[04:08:16] <sybariten> Repiphany: thank you! I will look at this over a cuppa tea
[04:08:27] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:09:11] <cluelessperson> sybariten, Repiphany    I think what makes python so strong is that it's easy to read.   I think this leads to something important in all of coding, that code be easily maintainable and readable.   Otherwise I consider it useless and you're just asking people to trust that it works.
[04:09:24] <cluelessperson> I for example see one liners and my eyes glaze over.
[04:10:12] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:10:30] <Repiphany> Comprehensions like the above aren't that hard to grok
[04:10:48] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:10:55] <Repiphany> and tbh the better place to start would be using more appropriate data structures amenable to the types of calculations
[04:11:00] <cluelessperson> I consider this example to be too much too:   sorted(filter(lambda x: x == 1, [0, 1, 1, 4, 1]))
[04:11:42] <jinsun> that isn't a compreehension though
[04:11:50] <cluelessperson> sure
[04:11:52] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:11:57] <Repiphany> It's not really a great example when the example doesn't actually do anything
[04:12:00] <cluelessperson> I'm more speaking on the complexity of a line of code.
[04:12:06] <nedbat> cluelessperson: also, why "sorted"? It's [1, 1, 1]
[04:12:09] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[04:12:36] <cluelessperson> meh, bad example off the top of my head, I was going for a complexity example.
[04:13:00] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:13:02] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[04:13:05] <Repiphany> You can also spread out more complicated comprehensions over multiple lines more akin to how they'd be written with loops anyway
[04:13:12] <nedbat> i was just writing a blog post about a too-complicated piece of Python code: https://nedbatchelder.com/blog/202108/pythonic_monotonic.html
[04:13:18] *** Joins: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at)
[04:14:08] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:14:36] <Repiphany> Incidentally, I wrote something convoluted to get monotonic slices from an array, let me dig it up
[04:14:51] <cluelessperson> nedbat, <3
[04:15:22] *** Joins: jdmark (~jdmark@67.8.137.130)
[04:15:37] *** Quits: xnbq (~xnbq@user/xnbq) (Ping timeout: 248 seconds)
[04:16:34] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:16:34] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:16:46] *** Joins: Pilate (~pilate@pilate.io)
[04:17:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:17:39] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[04:17:52] <KirkMcDonald> nedbat: I have to admit, I'm sort of a fan of passing a mutable key function to itertools.groupby(). There's just so much you can do with that, to the point where I wonder if there's some more potent function waiting in the wings to express that idea more clearly.
[04:18:09] <stealth_> X4, https://bpa.st/53GA
[04:19:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[04:19:23] <KirkMcDonald> I suppose the general pattern is, "This sequence of things consists of some pattern, repeated a number of times."
[04:19:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[04:20:02] <KirkMcDonald> ... I'm describing regular expressions, aren't I? Goddammit.
[04:20:43] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:20:43] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:20:56] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:20:59] <dale> Heh, I was just using itertools.groupby the other day for conveniently grouping together runs of + and - lines while reading a diff.
[04:21:30] <Repiphany> https://bpa.st/IHJA slightly different requirement as I wanted to slice other arrays depending on the first
[04:21:53] <Repiphany> Very much on the impossible to follow
[04:22:45] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[04:23:12] <KirkMcDonald> So I guess what I'm proposing is (isomorphic to) "regular expressions but for arbitrary iterables." Hmph.
[04:23:33] <KirkMcDonald> Not even sure what that would *look* like.
[04:23:36] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:23:49] <weibullguy> nedbat: your last sentence is the most salient, and most important, point you make
[04:24:09] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:24:25] <nedbat> KirkMcDonald: I'm not sure i've ever used groupby in real code :)
[04:24:51] <nedbat> weibullguy: i wanted to mention it, but also not get onto an "interview rant"
[04:25:04] <audiophile_> hello, collections.counter is O(n) for constructing from a dictionary/string whatever but the resulting dictionary is sorted in descending order based on frequency right? so it's more like O(n + d*log(d)) where d is the number of distinct elements right?
[04:25:07] <dale> The most confusing thing about that code, to me, was the [::-1] to reverse a list because I use it so infrequently. :)
[04:25:17] <nedbat> btw, the person who showed me this code wanted to use a closure instead, but I don't have that example to include.
[04:25:32] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[04:25:33] <audiophile_> im being pedantic yes because O(n) is upper bound anyway but just wanted to check
[04:25:46] <Repiphany> audiophile_: Counter isn't sorted
[04:26:06] <cluelessperson> nedbat, you're one of my favorite people. :)
[04:26:18] <nedbat> cluelessperson: wow, thanks :)
[04:26:24] <Repiphany> It remembers insertion order like ordinary dicts
[04:26:28] <audiophile_> Repiphany: >>> c = Counter("jaskldjfhgluhlasdkjfklasjdf")
[04:26:28] <audiophile_> >>> c
[04:26:28] <audiophile_> Counter({'j': 4, 'l': 4, 'a': 3, 'd': 3, 'f': 3, 'k': 3, 's': 3, 'h': 2, 'g': 1, 'u': 1})
[04:26:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[04:26:38] <audiophile_> it is...?
[04:26:51] <weibullguy> nedbat: discretion is the better part of valor; you made your point
[04:27:03] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[04:27:06] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Read error: Connection reset by peer)
[04:27:20] <Soni> how would you clean up/refactor/rewrite something like this? https://bpa.st/UN5A
[04:27:20] <KirkMcDonald> audiophile_: The repr sorts it. Compare to list(c)
[04:28:00] <audiophile_> hmm I see, yeah even dict(c) seems random
[04:28:22] <dale> nedbat: My primary objection with the first block was indeed defining a whole class just to track a number, and within the function no less. :)
[04:28:23] <KirkMcDonald> audiophile_: Strictly speaking, not random; insertion order.
[04:28:27] <Soni> it's used like so: https://bpa.st/JIIA
[04:28:38] <audiophile_> yes youre right!
[04:28:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:28:52] <nedbat> dale: yeah, nesting the class in the function is odd
[04:29:05] <audiophile_> oh im on python2 no wonder ha
[04:29:18] <KirkMcDonald> audiophile_: Ah, yes, the order is totally arbitrary there.
[04:29:37] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[04:29:52] <nedbat> dale: i didn't mention it, but the original "pythonic" code used "A" as the argument, not "seq".  A for "whatever it is, it's definitely not an array" I guess :)
[04:30:03] *** Joins: de-facto (~de-facto@user/de-facto)
[04:31:00] <dale> nedbat: Upper-case argument names?  Now I have strong objections.
[04:31:35] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[04:31:37] <Soni> trying to figure out/understand how other ppl write code kinda sucks honestly...
[04:31:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 248 seconds)
[04:31:42] <nedbat> dale: :)
[04:31:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:31:58] *** Joins: srhm (~ascii@user/srhm)
[04:32:08] <KirkMcDonald> nedbat: I wonder if some mileage could be had out of a variant of groupby() which is passed two elements at a time, and returns True if the transition from one to the other represents a "boundary" in the sequence.
[04:32:35] *** Quits: Bushwick (~bushwick@158.62.142.198) (Quit: Leaving)
[04:33:08] <KirkMcDonald> nedbat: But that's unsufficient for the "monotonic runs" problem, hmm.
[04:33:56] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[04:34:05] *** Quits: BernieMont (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab) (Ping timeout: 258 seconds)
[04:34:07] <KirkMcDonald> insufficient*
[04:34:24] <dale> nedbat: Are those functions even right for an input like [5, 4, 3, 2, 1]?
[04:34:47] <nedbat> dale: they both assume the first run is ascending
[04:34:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:35:16] <stealth_> nedbat, what values you give to run it? `[1, 2, 3]` ?
[04:35:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:e9d2:464c:d2f2:fb68) (Quit: Leaving)
[04:35:46] <nedbat> stealth_: something like that.  [1,3,5,7,5,4,3,1,2,3,4]
[04:37:05] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[04:37:34] <Repiphany> It also doesn't handle repeated elements I guess, like [1,2,3,4,4,3,3,2,3,4]
[04:37:57] <nedbat> Repiphany: yeah, i skipped over concerns like "less than" or "less than or equal"
[04:38:08] <dale> I wonder if the job involved lots of monotonic runs and the identification thereof.
[04:38:24] <nedbat> dale: the example is from a book, not a specific job interview
[04:38:51] <dale> nedbat: Oh, missed that it was from a *book* about job interviews.  I feel slightly better.
[04:38:55] <Repiphany> Do those complications justify my unreadable implementation :P https://bpa.st/IHJA
[04:39:09] <nedbat> Repiphany: yikes
[04:39:19] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[04:39:41] <dale> The better interview question is probably to give one of these solutions and then ask the candidate to identify the bugs. :)
[04:40:00] <stealth_> if a function doesn't have an example on how to actually run it, might not be very useful :)
[04:41:19] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:8193:3758:a9ca:44ec)
[04:42:07] <nedbat> stealth_: showing a run is a good idea
[04:42:40] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:43:10] <stealth_> nedbat, i literally write types/example/... on pretty much every function/class/methods, come back year down the road, you have no clue what you wrote or what it does.
[04:43:26] <dale> I had to take a "Python skills test" for a placement firm and after I showed that I actually knew Python it indeed started pelting with really pretty obscure questions.
[04:43:57] <damonlynch> Is there a standard library function to escape windows paths like "problem_comma,.txt", for passing to tools like explorer.exe?
[04:44:22] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 268 seconds)
[04:44:38] <dale> For many of the skills test questions, the answer should have been something like "you should put the person who wrote this code on notice".
[04:45:04] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[04:45:16] <nedbat> damonlynch: i don't think so. that's a windows shell concern, not a filesystem one.
[04:45:26] <nedbat> dale: ugh
[04:45:52] <mat001> Does python provide deprecation warning on class attributes or on individual arguments in __ini__ method? I've only seen it on methods and classes
[04:46:23] <sybariten> so, basically, when doing for item in dictionary: print(item)    ..... if the dictionary is something like  china:2342342342  , i would still only get the name china in the printout. Why is it that python only looks at the key and not the value in this case?
[04:46:30] *** Joins: qpdb_ (~qpdb@user/qpdb)
[04:46:38] <nedbat> mat001: can you show us the code and the warning?
[04:46:48] <sybariten> is it somehow understood, just because i didnt do for item1,item2 in dictionary    ?
[04:46:49] <dale> sybariten: Iterating over a dictionary is defined to iterate over its keys.
[04:46:53] <damonlynch> nedbat, I can't even figure out how to do it from the windows shell itself :-D Tried a ^ before the , seemed to have no effect
[04:47:01] <nedbat> sybariten: iterating a dict gives you keys.  use d.items() if you want both
[04:47:05] <sybariten> dale: aha, so that's just "how it is"
[04:47:06] <dale> sybariten: If you want both key and value, do for key, value in dictionary.items(): ...
[04:47:14] <sybariten> gotcha. thanks
[04:47:24] <stealth_> sybariten, `print(dict.items())`
[04:47:28] <sybariten> (and then we have a list right)
[04:47:49] <sybariten> ?
[04:48:10] <dale> sybariten: dict.items() returns an "items view", each element of which is a 2-tuple IIRC.
[04:48:19] <sybariten> aha
[04:48:50] *** Joins: irreitug (uid23254@id-23254.tooting.irccloud.com)
[04:48:50] <dale> sybariten: https://docs.python.org/3.9/library/stdtypes.html#dict-views
[04:49:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[04:49:13] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 248 seconds)
[04:49:46] *** Quits: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884) (Ping timeout: 246 seconds)
[04:50:35] <mat001> nedbat: yes. I'd like to issue warning on "experiments_map" like in this code. Full code here: https://github.com/optimizely/python-sdk/blob/master/optimizely/optimizely_config.py#L55 Just like Swift can issue deprecation warnings on properties here: https://github.com/optimizely/swift-sdk/blob/3850038a3270dc923b6b094c37451430d22c5e83/Sources/Optimizely/OptimizelyConfig.swift#L46
[04:50:51] <sybariten> so for item in dictionary: print(item)    could also have been done as      for item in dictionary.keys(): print(item)    ?
[04:50:54] <mat001> nedbat: my code is here: https://bpa.st/K7OQ
[04:51:35] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[04:51:59] *** Joins: srhm (~ascii@user/srhm)
[04:53:19] <nedbat> mat001: why would there be a warning on experiments_map ?
[04:53:53] <dale> sybariten: Yes.
[04:54:12] <mat001> nedbat: because it's a legacy use we need to keep, but mark as deprecated
[04:54:35] <nedbat> mat001: i guess you want:  if experiments_map is not None: ....
[04:55:02] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e54c-ad56-d060-cb6b.res6.spectrum.com) (Read error: Connection reset by peer)
[04:56:13] <mat001> nedbat: yes, smth like this? https://bpa.st/EYSA
[04:56:26] <sybariten> dale: ok interesting. Maybe even more readable that way, perhaps
[04:56:35] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:57:22] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[04:57:28] <nedbat> mat001: yes, something like that.  maybe a decorator for the method would be more convenient.
[04:58:23] <mat001> I used this last piece of code and I get the warning output in the repl, but when I use that whole SDK I don't get the warning output....maybe it's configuration issue. But the code looks correct I guess
[04:59:53] *** Quits: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[05:00:36] <mat001> nedbat: could decorator for the method be written to only apply to experiments_map or would it impact the whole __init_- method. Asking because there is a PyPi package that provides the method based decorator, but that doesn't only work on one property
[05:02:06] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[05:03:07] <nedbat> mat001: it could be something like  @deprecated_argument("experiments_map")
[05:03:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[05:04:36] <sybariten> i have a hard time understanding the logic of these very common for-loop-constructions .  https://bpa.st/6NIA   the first one here is very obvious to me - it's like natural language: "for each item, do this".   I have a hard time seeing the same structure in the second construction.
[05:04:41] <mat001> hmm, thx, can dig into that
[05:04:50] <sybariten> I obviouslly see the division and understand that the end result is a new dict being built up piece by piece but is there a dumber way to explain how i should "think" of a construction like that?
[05:05:30] <sybariten> it just throws me off that the for thing comes so late
[05:06:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:07:00] *** Joins: Guest51 (~Guest51@pool-100-7-38-116.rcmdva.fios.verizon.net)
[05:08:30] <Repiphany> The for-loop coming later in list/dict/generator comprehensions is just something you get used to
[05:08:43] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:09:32] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:14] <Guest51> Hi I am trying to get a certain number of words per line in a text file. In other words, I do not want long lines of text throughout the file. https://dpaste.org/2Xzv
[05:10:14] <sybariten> ok
[05:10:19] <jinsun> sybariten: you can just take the thing before the fisrt for and stick it in the end, then both look similar
[05:10:27] <Guest51> The stackoverflow shows how to do it with a list, but how do you do it per line?
[05:10:53] <Repiphany> sybariten: https://bpa.st/DPUA
[05:10:58] <sybariten> jinsun: yeah thats true i suppose!
[05:11:21] <Repiphany> The end result is the same and you can split over multiple lines to get back the loopyness
[05:11:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[05:11:37] <Soni> how would you clean up/refactor/rewrite something like this? https://bpa.st/UN5A it's used like so: https://bpa.st/JIIA
[05:11:39] <dale> I was just thinking of how comprehension/generator expressions have a similar problem to SQL where the "here's how you get the things" part comes *after* the "here's what to do with those things" part.
[05:11:53] <jinsun> sybariten: although that  works better for list comprehension, dict comprehensionn looks weirder
[05:12:12] <cluelessperson> stealth_, types, example?   what does that mean? :P
[05:13:07] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:13:09] <stealth_> cluelessperson, https://github.com/YoSTEALTH/Liburing/blob/master/liburing/helper.py something like that, anyone that sees the function has a idea or what it does
[05:13:11] *** Joins: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at)
[05:14:51] <dale> Guest51: Are you actually wrapping text or is this some other kind of problem?
[05:15:09] <Guest51> yes wrapping text
[05:15:16] <dale> Guest51: If you're actually wrapping text, do you have paragraphs separated by blank lines or something?
[05:15:21] *** Quits: summonner (~summonner@188.24.22.156) (Ping timeout: 248 seconds)
[05:15:28] <Guest51> no
[05:15:37] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:15:39] <dale> Guest51: Can you load the whole file into memory?
[05:15:40] <Guest51> i am taking long articles found online basically
[05:15:58] <dale> (You have long articles that are a single paragraph?)
[05:16:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:16:48] <phy1729> Guest51: https://gist.github.com/phy1729/ca3cb15c9eae389d1abbe4a46f53bf88
[05:18:04] *** Joins: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4)
[05:18:35] <dale> Guest51: If you can load the whole thing into memory I'd probably just use textwrap and do something like: with open("the_file.txt") as fh: print(textwrap.fill(fh.read()))
[05:18:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:19:15] <Soni> how can we clean up/refactor/rewrite something like this? https://bpa.st/UN5A it's used like so: https://bpa.st/JIIA
[05:19:48] *** Joins: debayer (~debayer@2603-8000-cf00-0010-b0d1-acda-42ae-962c.res6.spectrum.com)
[05:21:37] <Guest51> no they could be multiple paragraphs
[05:21:42] <sybariten> Repiphany: hmm yeah you're right they're very similar written like that.   Oh and btw theres no syntactial problem in breaking up a line like that, in the second case?
[05:22:07] <Guest51> ok let me try some of those suggestions
[05:22:09] <dale> Guest51: You probably want to wrap each paragraph individually, right?
[05:22:24] <Guest51> oh did not think of doing that
[05:22:40] <Repiphany> It's fine inside []{}()
[05:23:27] *** Joins: zebrag (~chris@user/zebrag)
[05:24:00] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:24:58] <dale> Guest51: I'd probably do something like read lines from the file and collect them in a list until you encounter [at least] two consecutive newlines, which indicates the end of a paragraph.  Then print(textwrap.fill(''.join(that_list_of_paragraph_lines))), that_list_of_paragraph_lines = [], and repeat until EOF.
[05:25:17] <dale> Guest51: Now, do you have any other formatted text like numbered or bulleted lists, block quotes, headings... ;)
[05:25:50] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[05:26:02] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:26:04] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:26:15] <Guest51> i try to remove those beforehand with find and replace
[05:26:47] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[05:26:48] <Guest51> only thing left is quotes, -, commas and stuff like that
[05:26:52] *** Joins: xnbq (~xnbq@user/xnbq)
[05:26:55] *** Joins: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884)
[05:27:04] <X4> Does the following code check each element for non-emptyness? >> if any(i in req for i in ['language', 'framework', 'version_info', 'examples', 'boolean_test'])
[05:27:18] *** Joins: jinsun (~quassel@user/jinsun)
[05:27:39] <nedbat> X4: it doesn't check non-emptyness at all.  it will be fine with req = {"language":"", etc}
[05:28:04] <stealth_> X4, did you not see the code i provided?
[05:28:21] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[05:28:30] <X4> Unfortunately I got disconnected.. maybe it's because of this web client
[05:28:39] <X4> Do you still have the link?
[05:28:51] <stealth_> x4 https://bpa.st/53GA
[05:29:11] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:29:28] *** Joins: srhm (~ascii@user/srhm)
[05:29:54] <X4> stealth_ oh niice! that looks clever!
[05:30:20] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:26] <stealth_> :)
[05:31:01] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[05:33:02] <X4> stealth_ is it order independent?
[05:33:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:33:36] <stealth_> X4, order or key doesn't matter
[05:34:29] *** Joins: vlm (~vlm@user/vlm)
[05:35:16] <stealth_> *of
[05:36:40] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:37:58] *** Joins: KombuchaKip (~kip@192.252.230.5)
[05:39:03] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[05:39:03] *** brabrax_ is now known as brabrax
[05:39:53] <X4> stealth_ I justed tested a value with None and also empty value, but it still enters the if condition. See here: https://pastebin.com/7YuJTHcN
[05:40:16] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 268 seconds)
[05:40:53] <stealth_> X4, all the `validate` needs to match
[05:41:59] *** Joins: heco (~redrum@user/redrum88)
[05:42:14] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[05:42:40] *** Joins: srhm (~ascii@user/srhm)
[05:43:46] <stealth_> X4,  https://bpa.st/BZUA
[05:44:19] <stealth_> X4, isn't that what you wanted?
[05:44:57] *** Quits: heco (~redrum@user/redrum88) (Client Quit)
[05:45:12] *** Joins: yvehan (~yvehan@183.14.134.147)
[05:45:20] <X4> stealth_ I'm not sure if the condition does check all values in req or the set ones for non-emptyness
[05:45:23] *** Joins: matsaman (~matsaman@user/matsaman)
[05:45:58] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[05:46:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:46:36] <stealth_> x4 why i wrote them in 2 separate condition first
[05:47:43] <switchnode> i am fetching some data with requests' iter_content, and want to bail when i find the pattern i'm looking for, but i can't guarantee it won't be broken across chunks. is there some cleverer method of doing this than just repeatedly adding (or f-string joining) the chunk to an accumulator string and re-testing the result with the (compiled) regex?
[05:47:44] <stealth_> x4 in this case `req` does not contain all the keys `validate` has, also `leverage` is `None` so that fails as well. so both condition fails
[05:47:46] <switchnode> (itertools' accumulate will make this prettier, but not, per my understanding, any more efficient.)
[05:48:13] *** Quits: X4 (~Guest54@2a02:908:178:1900:19e0:bce:f54c:c884) (Quit: Client closed)
[05:48:25] <dale> Huh, I really expected foo: Optional[int] in an attrs class to default to None.
[05:48:58] *** Joins: X4 (~X4@2a02:908:178:1900:19e0:bce:f54c:c884)
[05:49:03] <Guest51> this seemed to work https://stackoverflow.com/questions/64326079/how-to-read-a-file-and-wrap-the-text-at-80-characters
[05:49:47] <X4> stealth_ Oh I see it actually works! =)  =)
[05:50:23] <stealth_> x4 mhmm
[05:51:04] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 256 seconds)
[05:52:20] *** Quits: xnbq (~xnbq@user/xnbq) (Quit: The Lounge - https://thelounge.chat)
[05:52:49] *** Joins: zrsm (~mrrobot@173.171.254.123)
[05:55:40] <dale> switchnode: If it's really important you could probably kind of write your own regexp engine that's capable of matching across hunks, or look into one of the alternative regexp libraries that might have some concept of "possible/partial matching" so you could know when you need to accumulate input or when you can throw it out, letting you avoid reading everything into memory.
[05:56:17] <foo> dale: I am sorry to disappointed.
[05:56:19] <dale> switchnode: But just reading it all into a StringIO or something is going to be just fine for a *lot* of use cases, and you may have better things to do with your time than to optimize this.
[05:56:45] <dale> foo: I don't understand?
[05:56:59] <foo> dale: 18:18 < dale> Huh, I really expected foo: Optional[int] in an attrs class to default to None.
[05:57:08] <dale> lol
[05:57:42] <foo> Err, typo's kill my humor. s/disappoint/disappointed/ -> side effects of FUBAR
[05:57:56] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:57:57] <SnoopJ> surely you mean foobar
[05:59:35] <matsaman> baz
[06:00:09] *** Quits: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[06:00:28] <X4> stealth_ I think I'm running into an edge case. Not all values are required. Only the values in validate should be validated for non-emptyness, but those not defined in there can be ignored from the condition
[06:03:16] *** Joins: adelfino (~adelfino@2800:21c1:c400:a94:a1f1:e3c1:2852:5b94)
[06:03:57] <adelfino> Hi! Is it possible for a log file to be written *after* the python process that wrote it exits?
[06:04:30] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:04:41] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[06:05:25] <Repiphany> Sounds like a question about an underlying file system rather than python specifically
[06:06:35] <dale> Depends on the definition of "written" I suppose.
[06:07:01] <adelfino> written as in: in disk
[06:07:03] <Repiphany> https://en.wikipedia.org/wiki/Journaling_file_system
[06:07:53] <dale> Where "on" the "disk"? ;)
[06:08:03] <dale> adelfino: What makes you ask this question?
[06:08:13] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:08:32] <adelfino> Repiphany: thanks for the info
[06:08:55] <adelfino> dale: after a python process exits, I have to check the log it wrote
[06:09:16] <adelfino> I see the file created, always
[06:09:25] <adelfino> Sometimes, the file is empty, even after the process exited
[06:09:38] <adelfino> Shortly afterwards the content appears
[06:09:56] <dale> adelfino: How are you testing that the process exits?
[06:10:09] <adelfino> Tried calling sync <filename> before reading the file, but it didn't change a thing
[06:10:16] <dale> adelfino: And how is the log file being written?
[06:10:28] <adelfino> dale: pgrep -fx <whole command line>
[06:10:41] <adelfino> dale: it's written via the logging module
[06:10:56] *** Joins: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at)
[06:10:57] <dale> adelfino: Is it possible the process is writing through a child process?
[06:11:12] *** Joins: asarch (~asarch@2806:10ae:7:defb:627b:ef7f:734a:76f5)
[06:11:30] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:11:31] <asarch> If I have these tables from PostgreSQL, how could I create the primary column in SQLAlchemy for the table 'book_authors'?
[06:11:39] <adelfino> no, a coworker suggested that, but no
[06:11:42] <dale> I don't think the logging module will do that on its own, but maybe your program is forking or something?  Using multiprocessing or concurrent.futures or something?
[06:12:14] <dale> adelfino: Is this a networked file system or anything?
[06:12:14] <SnoopJ> adelfino, it sounds like your OS may be buffering the writes to the file
[06:12:43] <adelfino> dale: nope, the log is local
[06:12:45] <SnoopJ> especially if it's a relatively short-lived process
[06:12:57] <dale> SnoopJ: Is that terribly common, that a process does I/O, *exits*, and the writes aren't visible to other processes?
[06:12:57] <adelfino> SnoopJ: it is a short-lived process
[06:13:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[06:13:24] <switchnode> dale: thanks! i think you're right on all counts. :)
[06:13:26] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:13:30] <SnoopJ> dale, I don't know how common it is, but it fits their description of the file content sometimes not being there when they check.
[06:13:30] <adelfino> Is this more common when the processes are short-lived?
[06:13:48] *** Joins: srhm (~ascii@user/srhm)
[06:13:51] <dale> SnoopJ: I'm struggling to even think of a case where I've ever seen this on Linux and it wasn't a bug.
[06:14:19] <dale> It really seems like, once the process exits, everything should at least be flushed into buffers where other processes could see it, even if it wasn't written to disk, but maybe I've just never tried hard enough.
[06:14:22] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[06:14:45] <SnoopJ> dale, this is what I would expect, too, but I don't think it will necessarily hold up the exit process?
[06:15:09] <SnoopJ> i.e. I think the sequence [p1 exit] â†’ [p2 begin, read file] â†’ [p1 buffers flushed to disk] is possible?
[06:15:41] <SnoopJ> could be that my understanding of file descriptors is wacky/wrong
[06:16:07] <dale> POSIX has many dark corners, so I couldn't say for certain.
[06:16:28] *** Joins: him (~him@173.222.3.194)
[06:17:33] <dale> adelfino: Have you tried actually calling waitpid or whatever on the PID, rather than polling pgrep?  Or at least pgrep for something less than the whole command line?
[06:17:37] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:18:00] <SnoopJ> adelfino, if the process is short-lived, there is much less likelihood that the writes would be flushed to the disk, if they're buffered.
[06:18:06] <dale> adelfino: This shouldn't be necessary but I'm wondering if the process name temporarily appears in the process table as [foo] or something, rather than the full command, whiel the process is exiting.
[06:18:15] <SnoopJ> (there's just less time in there where the OS might decide to flush writes)
[06:18:39] <stealth_> x4 use `find_keys ^ (find_keys | req.keys())` to find keys outside of once not defined
[06:18:41] *** Quits: cypris (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[06:19:04] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[06:19:07] <adelfino> dale: no, haven't tried that, makes sense; I'll give it a try tomorrow
[06:19:12] <stealth_> x4 try it with `req['bad-key'] = True`
[06:19:17] <adelfino> SnoopJ: right, makes sense
[06:19:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:20:07] <dale> Surely the process must have called write(2) (or equivalent) for all of its buffers before it exits, so it's handed all that off to the kernel at that point, before it disappears from the process table.  But OSes are under no obligation not to violate my expectations.
[06:20:12] <adelfino> https://bpa.st/L37Q
[06:20:24] <adelfino> Wrote that quick script and it didn't fail once
[06:20:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:20:47] <adelfino> (also tried with python3, don't remember which is the actual version we're using)
[06:21:25] <dale> adelfino: Is this Linux?
[06:21:33] <adelfino> Yes, Ubuntu 20.04
[06:21:52] *** Quits: kapad (~kapad@46.246.193.116.dsl.dyn.forthnet.gr) (Quit: Leaving)
[06:23:26] <SnoopJ> 20.04 ships python3, yep (python2 is ancient, definitely solidly "legacy" now)
[06:24:06] <adelfino> Python versions in our product is a funny thing :)
[06:24:11] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[06:24:31] <adelfino> Reading, what's the Python provided by Ubuntu doesn't say much
[06:24:52] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[06:24:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:25:50] <dale> I, too, doubt the version of Python has anything to do with it, unless the logging module is doing something real funny.
[06:26:40] <adelfino> Sorry, that's not what I meant
[06:27:13] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:27:37] <adelfino> I do think the version *may* be important (have no reason for/against it). Just that we have several Debian packages each one working with its own venv, and don't rememeber the Python version of this specific package
[06:27:53] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:28:55] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:28:56] <adelfino> I wish there was an optional Off switch to make sure buffering is not involved :P
[06:28:58] *** mpmc is now known as ShowDonkey
[06:29:07] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[06:29:41] <adelfino> It's time consuming to discard that explanation
[06:32:01] <adelfino> dale: SnoopJ: thanks for the help!
[06:32:13] <dale> adelfino: Can you remount with -o sync,dirsync?  (Not actually sure if dirsync is redundant.)
[06:32:37] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:32:55] <dale> You still have buffers somewhere but at least logging should be calling flush, and I'd think -o sync would mean the writes go out to disk before write(2) returns.  Not actually positive that's how it works.
[06:33:32] <dale> Unfortunately if you're working with a timing-related thing, something like -o sync might make the problem go away coincidentally.
[06:34:08] *** Quits: yvehan (~yvehan@183.14.134.147) (Ping timeout: 256 seconds)
[06:34:25] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:34:25] <adelfino> dale: I'm not sure, we have some delicate directories regarding mounting, not sure if this is one of them
[06:34:47] *** Joins: yvehan (~yvehan@117.136.79.156)
[06:34:49] *** Joins: srhm (~ascii@user/srhm)
[06:35:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 248 seconds)
[06:36:05] <adelfino> Will come back, hopefully with a nice war story :)
[06:36:13] <adelfino> Thanks again for your help
[06:36:38] *** Quits: adelfino (~adelfino@2800:21c1:c400:a94:a1f1:e3c1:2852:5b94) (Quit: Leaving)
[06:37:15] <dale> Argh, why does attrs have to hide the defaults on the class.  Fails with AttributeError: https://bpa.st/TIOA
[06:37:18] *** Joins: jdmark (~jdmark@67.8.137.130)
[06:37:33] <dale> dataclasses lets me Y.foo without issue.  Pydantic similarly hides this on the class.
[06:38:01] <dale> I was trying to make a joke earlier when I said I was going to write my own [de]serialization library.
[06:40:07] *** Quits: yvehan (~yvehan@117.136.79.156) (Read error: Connection reset by peer)
[06:40:27] *** Joins: yvehan (~yvehan@119.147.212.245)
[06:40:42] *** Joins: Elzington_ (~Elzington@66.115.189.153)
[06:41:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:42:08] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:42:19] *** Lando-SpacePimp is now known as RoboCop
[06:43:12] *** Quits: Elzington (~Elzington@104.129.24.120) (Ping timeout: 256 seconds)
[06:43:22] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:43:25] *** RoboCop is now known as Lando-SpacePimp
[06:44:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:44:30] *** Quits: kmh (~kmh@p200300df5f0c180024ffd0b69acc61a1.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:46:16] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:46:43] *** Quits: ente_ (~ente@p200300dc5f09dc000d6d4b0d74cc670f.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:46:57] <dale> There's typing.ClassVar but then the attribute gets ignored by attrs.
[06:47:59] *** Joins: cheater (~Username@user/cheater)
[06:48:37] *** Joins: ente_ (~ente@p200300dc5f0e88004800c925eda717c4.dip0.t-ipconnect.de)
[06:48:41] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:51:49] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:53:37] *** Quits: emerent (~quassel@p200300cd57058cb0ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:54:14] *** Joins: emerent (~quassel@p200300cd57058c48ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:55:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:55:15] *** Abrax is now known as listchans
[06:55:21] *** listchans is now known as Abrax
[06:56:38] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:56:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (copper.libera.chat (Nickname regained by services)))
[06:56:38] *** finn_elija is now known as FinnElija
[06:57:45] *** Quits: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net) (Ping timeout: 248 seconds)
[06:57:56] *** Quits: flyback (~flyback@2601:540:8201:1e60:bcb9:12e:e899:e26) (Ping timeout: 256 seconds)
[06:58:16] <dale> I guess dataclasses wins again.
[06:58:22] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:58:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[06:59:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:59:36] *** Joins: jess (~jess@libera/staff/jess)
[06:59:48] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[06:59:53] *** Quits: y1n (~y1n@84-115-64-8.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[07:01:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[07:01:29] *** Parts: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4) (ollies out)
[07:03:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:04:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:07:14] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:08:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:08:33] *** Joins: WarpedAI (~Warped@user/warped)
[07:08:53] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:10:01] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:10:45] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[07:11:14] *** Joins: flyback (~flyback@2601:540:8201:1e60:f91d:60fc:906f:7e8a)
[07:11:17] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[07:11:21] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:12:41] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[07:13:08] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[07:14:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[07:16:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:16:29] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:17:42] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:17:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[07:17:46] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[07:17:59] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:19:37] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:20:38] *** Quits: MrNaz (sid133418@id-133418.highgate.irccloud.com) (Quit: Updating details, brb)
[07:20:47] *** Joins: MrNaz (sid133418@id-133418.highgate.irccloud.com)
[07:23:07] <dre> does anyone know when using py.test and -s to attach the ipdb.sset_trace() function
[07:23:20] <dre> is there a way i can remove the -s and NOT raise a OSError
[07:24:29] <dre> if i just have the script with ipdb.sset_trace() - it will raise an error unless I have -s, which will put me in the ipdb shell. I just want to skip over it for one run without having to changethe code each time
[07:24:36] <dale> You could maybe try something semi-nuts like opening /dev/tty on stdin/out/err yourself before calling ipdb.
[07:24:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:25:29] <dale> dre: Oh, that's different.  Try: if os.isatty(0): ipdb.set_trace()
[07:25:56] <dale> dre: My theory is that os.isatty(0) will return True only when you provide -s to pytest.
[07:26:08] <dre> oh interesting
[07:26:14] <dale> If that doesn't work, try os.isatty(1) instead.
[07:26:41] <dale> Hm, actually, pytest might be touching up sys.stdin/stdout/stderr instead, and leaving the FDs alone.  I guess I'm not sure how it works.
[07:28:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:31:11] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-117.46.114.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:33:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[07:35:37] *** Quits: nyah (~nyah@51.146.30.113) (Ping timeout: 248 seconds)
[07:35:49] <sybariten> What do you suggest is a good way to print the output of this operation?  https://bpa.st/XE3A   I mean, this is a list, how do i print the countries and their values in a sensible way?
[07:36:12] *** Quits: him (~him@173.222.3.194) (Quit: Client closed)
[07:36:25] *** Quits: Xeago (~Xeago@user/xeago) (Ping timeout: 268 seconds)
[07:36:46] <sybariten> i was thinking maybe something with f-strings or .format
[07:38:07] *** Joins: Xeago (~Xeago@user/xeago)
[07:39:14] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:42:15] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[07:42:38] *** Joins: srhm (~ascii@user/srhm)
[07:44:09] *** Quits: yvehan (~yvehan@119.147.212.245) (Ping timeout: 248 seconds)
[07:44:18] *** Joins: yvehan (~yvehan@117.136.40.255)
[07:47:21] *** Joins: wyclif (~wyclif@user/wyclif)
[07:50:12] <newdimension> I want to store a bunch of variables in a dict with keys being the variable name and value being the value. I remember one I came across a way to do it that is more clever than  mydict = {'a': a, 'b': b}
[07:50:58] *** Joins: kmh_ (~kmh@p2e511ac0.dip0.t-ipconnect.de)
[07:51:04] <dale> newdimension: Oh, maybe you mean something like extracting what you want from locals()?
[07:51:19] <dale> And/or globals()
[07:52:09] <newdimension> dale: it wasn't that. I just remember defining the variables e.g. a = 'foo' but then finding a way where I avoided mydict = {'a':a, ...}
[07:52:31] <newdimension> I kind of want to say I defined them all in a structure and passed that to something that created the dict
[07:52:33] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[07:52:46] <phy1729> sybariten: gdp_per_capita = {gdp[c]/population[c] for c in gdp}; print('\n'.join(f'{country}: {gdp}' for country gdp in gdp_per_capita.items()))
[07:53:00] *** Joins: srhm (~ascii@user/srhm)
[07:56:41] *** Quits: yvehan (~yvehan@117.136.40.255) (Read error: Connection reset by peer)
[07:56:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[07:57:03] *** Joins: yvehan (~yvehan@14.21.31.50)
[07:57:39] *** Joins: wyclif (~wyclif@user/wyclif)
[08:02:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[08:05:25] *** Quits: Guest51 (~Guest51@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[08:05:44] *** Joins: tg (~tg@rockylinux/infra/tg)
[08:06:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:06:22] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[08:06:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:07:33] *** Joins: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net)
[08:09:49] *** Quits: nergar (~danie@177.225.146.7) (Quit: Leaving)
[08:10:42] *** Quits: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net) (Excess Flood)
[08:11:11] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[08:11:45] *** Joins: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e)
[08:12:39] *** Joins: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs)
[08:13:24] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[08:13:50] *** Joins: srhm (~ascii@user/srhm)
[08:17:40] *** Joins: wyclif (~wyclif@user/wyclif)
[08:19:47] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:ec18:bf34:5b61:2f62)
[08:20:03] *** Joins: djapo (~archangel@user/djapo)
[08:26:55] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:31:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[08:32:02] *** Quits: zrsm (~mrrobot@173.171.254.123) (Quit: BitchX-1.2.1-419-geaf6456 -- just do it.)
[08:32:11] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:33:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:33:29] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[08:33:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:36:02] *** Quits: yvehan (~yvehan@14.21.31.50) (Ping timeout: 268 seconds)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:34] *** Joins: yvehan (~yvehan@117.136.31.232)
[08:36:37] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[08:37:01] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:41:56] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:43:01] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[08:44:12] <dale> In def f(x: int = None), x should actually be typed as typing.Optional[int], right?
[08:44:56] <dale> That's how I've always typed it, that's how the Mypy cheat sheet types it, but I'm surprised IntelliJ isn't giving me an error on it without the Optional.
[08:45:06] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[08:45:14] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:46:12] *** Joins: him (~him@173.222.3.194)
[08:49:47] *** Joins: Socra (~Socra@206.217.216.27)
[08:51:16] *** Quits: him (~him@173.222.3.194) (Ping timeout: 246 seconds)
[08:52:09] *** Joins: mci64 (~mci64@185.242.190.95)
[08:54:34] *** Joins: yogoyo (~paddy@user/yogoyo)
[08:54:43] <phy1729> mypy has a strict optional flag to require it
[08:55:04] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[08:55:28] *** Joins: srhm (~ascii@user/srhm)
[08:57:25] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[08:58:36] *** Joins: poorboy (~poorboy@104.131.46.87)
[09:02:00] <yogoyo> see. there is no chat amoung so many "people". this might support my theory of a chrooted environment
[09:02:18] *** Joins: shonudo (~user@user/shonudo)
[09:05:23] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[09:05:39] *** Quits: X4 (~X4@2a02:908:178:1900:19e0:bce:f54c:c884) (Quit: Client closed)
[09:07:49] *** Joins: nattiestnate (~nate@180.243.1.7)
[09:08:49] *** Joins: alxndr (~alexander@ybti.net)
[09:10:15] *** Quits: ilmostro (~ilmostro@user/ilmostro) (Quit: WeeChat 3.2)
[09:11:24] *** Joins: manti7 (~manti7@176.10.104.94)
[09:11:43] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[09:11:57] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:12:55] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[09:13:02] *** Quits: yvehan (~yvehan@117.136.31.232) (Ping timeout: 268 seconds)
[09:15:36] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) ()
[09:18:32] *** Joins: aakashi2009 (~aakashi20@103.61.255.3)
[09:20:58] *** Joins: yvehan (~yvehan@183.14.134.147)
[09:21:02] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[09:21:14] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:21:39] *** Joins: srhm (~ascii@user/srhm)
[09:22:11] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:ec18:bf34:5b61:2f62) (Read error: Connection reset by peer)
[09:22:16] *** Quits: nattiestnate (~nate@180.243.1.7) (Ping timeout: 268 seconds)
[09:28:09] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:29:06] *** Joins: dvx (~dvx@185.63.97.64)
[09:30:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:31:24] *** Joins: stranac (~stranac@195.29.239.126)
[09:34:01] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 248 seconds)
[09:40:32] *** Joins: IceMichael (~IceMichae@dynamic-046-114-158-008.46.114.pool.telefonica.de)
[09:40:33] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:41:11] *** Joins: remexre (~nathan@user/remexre)
[09:41:49] <remexre> should typing.Iterable[T] be covariant in T?
[09:42:06] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:42:20] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:42:28] *** Joins: srhm (~ascii@user/srhm)
[09:44:12] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 258 seconds)
[09:44:42] *** Quits: yvehan (~yvehan@183.14.134.147) (Ping timeout: 245 seconds)
[09:45:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[09:48:35] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[09:49:00] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:49:54] *** audio is now known as audiocat
[09:51:02] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:51:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:57:30] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:00:42] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[10:00:44] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[10:02:14] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[10:02:42] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@80.89.77.2)
[10:03:58] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:04:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:05:27] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[10:06:06] *** Joins: kosh (~kosh@user/kosh)
[10:06:16] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[10:07:05] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[10:07:33] *** Joins: yvehan (~yvehan@119.147.212.245)
[10:08:13] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:09:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[10:09:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:10:50] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[10:12:25] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[10:13:35] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[10:14:00] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[10:14:01] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[10:14:08] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[10:17:00] *** Joins: frost (~frost@59.71.240.119)
[10:17:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[10:18:02] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 245 seconds)
[10:18:49] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[10:22:31] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:26:54] *** Joins: upsala (~zcb@185.213.155.160)
[10:31:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:31:39] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:33:10] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:33:31] <Ronalds_Mazitis_> how do I add python to system path in win 10
[10:33:35] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (Ping timeout: 252 seconds)
[10:33:36] *** Joins: jp (jeanpaul@112-54-174-82.ftth.glasoperator.nl)
[10:34:07] *** Joins: rendar (~rendar@user/rendar)
[10:34:25] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[10:34:48] *** Joins: srhm (~ascii@user/srhm)
[10:34:55] <Ronalds_Mazitis_> PS C:\Python39> python
[10:34:55] <Ronalds_Mazitis_> python : The term 'python' is not recognized as the name of a cmdlet,
[10:34:56] <Ronalds_Mazitis_> function, script file, or operable program. Check the spelling of the name, or
[10:34:56] <Ronalds_Mazitis_> if a path was included, verify that the path is correct and try again.
[10:40:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:40:10] *** Joins: stpz (~stpz@240e:341:2298:ea00:3c2f:c2e9:d148:8b95)
[10:41:33] *** Quits: resmo (~resmo@2a00:d420:9:8a00:2fcd:2871:26f9:43b3) (Remote host closed the connection)
[10:41:48] *** Joins: resmo (~resmo@2a00:d420:9:8a00:faf2:a6e:baf4:26ad)
[10:41:52] *** jp is now known as drjp
[10:43:13] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[10:44:16] <yvehan> Hello, if c++ define : typedef int DWORD, how to express it in python
[10:44:17] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[10:44:41] <yvehan> Use ctypes
[10:44:47] *** Joins: Pyt001 (~Pyt001@2402:e280:3d22:227:3842:7e50:1cb4:b6c6)
[10:45:41] <gcbirzan> DWORD = ctypes.c_int? :)
[10:45:48] <gcbirzan> yvehan: What are you trying to do?
[10:46:02] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:16] <yvehan> Call a c++ lib
[10:46:32] *** Joins: seednode (~seednode@user/seednode)
[10:46:33] *** Joins: wyclif (~wyclif@user/wyclif)
[10:47:38] *** Joins: rsrx (~rsrx@103.225.149.167)
[10:47:52] <Pyt001> Hi , i want to redraw the curve image which is 8 shaped  in the image , using opencv python, i am getting outlines rather than perfect 8 , anyone knows any library for this
[10:48:00] <gcbirzan> yvehan: Okay, but what in particular are you having issues with?
[10:48:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 248 seconds)
[10:48:27] *** Quits: LiftLeft (~LiftLeft@154.21.23.18) (Ping timeout: 245 seconds)
[10:48:44] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:48:50] *** Quits: obiwahn (~heini@obiwahn.org) (Quit: WeeChat 3.2-dev)
[10:49:03] <yvehan> T.method.restype=POINTER(c_int)
[10:49:03] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:49:03] <yvehan> e =T.method()
[10:49:03] <yvehan> print(e.contents)
[10:49:22] <yvehan> But I got segmentation fault
[10:49:49] <yvehan> Method return DWOD
[10:50:09] *** Quits: irreitug (uid23254@id-23254.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:50:34] *** Joins: derelict (~derelict@user/derelict)
[10:51:11] <gcbirzan> I mean, I'm not sure DWORD is really an int
[10:51:40] <yvehan> I found it in .h file
[10:51:57] <yvehan>  typedef int DWORD
[10:52:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:52:17] <yvehan> I have less experience about c/c++
[10:53:10] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[10:53:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[10:55:18] *** Joins: gusto (~Augustus@109.255.100.54)
[10:55:56] *** Joins: jinsun (~quassel@user/jinsun)
[10:56:41] *** Quits: stpz (~stpz@240e:341:2298:ea00:3c2f:c2e9:d148:8b95) (Quit: Client closed)
[10:58:01] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:58:21] <Pyt001>  i want to redraw the curve image which is 8 shaped  in the image , using opencv python, i am getting outlines rather than perfect 8 , anyone knows any library for this
[10:59:13] <gcbirzan> vbgunz: To be honest, I'd recommend cffi, but not sure if that'd help here. and without more info, don't think we can help
[10:59:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:59:43] *** Lord_of_Life_ is now known as Lord_of_Life
[11:02:09] <Pyt001> gcbirzan: i will check CFFI , the requirement is redrawing curve images which crosses typically 8 shaped curve, When i try with outline edgedetect i am not getting continous curve instead it gives outlines of 8 and two circles of 8
[11:02:10] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[11:02:57] *** Joins: p-i- (~Ohmu@mx-ll-171.6.229-217.dynamic.3bb.co.th)
[11:03:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[11:03:17] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:04:29] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:05:34] <gcbirzan> Pyt001: I wasn't answering you, cffi will not help you at all.
[11:05:46] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[11:05:48] <gcbirzan> And I don't know of any libraries or algorithms that might help, sorry
[11:06:08] *** Joins: srhm (~ascii@user/srhm)
[11:06:42] *** Quits: sharperguy (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 272 seconds)
[11:06:59] *** Quits: yogoyo (~paddy@user/yogoyo) (Quit: WeeChat 3.2)
[11:07:23] *** Joins: mg42 (~mg42@216-75-166-120.ded.execulink.com)
[11:07:42] <Pyt001> gcbirzan: ok sorry about that , and thanks for the clarifications
[11:07:51] *** Joins: fdan (~fdan@192.146.154.3)
[11:09:11] *** Quits: rsrx (~rsrx@103.225.149.167) (Quit: Leaving)
[11:10:48] *** Quits: aakashi2009 (~aakashi20@103.61.255.3) (Ping timeout: 268 seconds)
[11:11:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:11:50] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2)
[11:12:04] *** Joins: node1 (~node1@user/node1)
[11:13:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[11:14:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[11:14:33] *** Joins: wyclif (~wyclif@user/wyclif)
[11:15:08] *** Quits: p-i- (~Ohmu@mx-ll-171.6.229-217.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[11:18:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:19:10] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[11:25:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:25:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[11:26:44] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[11:27:08] *** Joins: srhm (~ascii@user/srhm)
[11:27:29] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 252 seconds)
[11:30:30] *** Joins: Vonter (~Vonter@user/vonter)
[11:32:58] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[11:34:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[11:37:06] *** Joins: slav0nic (slav0nic@python.su)
[11:38:26] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[11:39:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[11:41:22] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 245 seconds)
[11:44:02] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[11:44:10] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 240 seconds)
[11:44:28] *** Joins: mexen (uid495612@user/mexen)
[11:44:55] *** Joins: sharperguy (~sharpergu@2001:1438:4010:3101:10a::3133)
[11:45:02] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[11:45:45] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[11:45:46] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[11:49:04] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[11:50:28] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[11:50:29] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[11:51:26] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 244 seconds)
[11:51:49] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:52:24] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[11:52:27] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:00:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:37] *** saschi_ is now known as saschi
[12:02:03] *** Quits: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: No Ping reply in 180 seconds.)
[12:02:34] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[12:03:03] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[12:03:30] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[12:03:58] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[12:05:23] *** Joins: jirib (~jiri@109.105.40.231)
[12:05:28] <andlabs> Hi. What is the *actual* minimum supported version of macOS for Python 3.9? I strangely can't seem to find it, apart from some documentation that suggests that the binaries should run as far back as 10.6, but I', running the binary distribution in 10.8 in a VM and it does not run â€” "dyld: Symbol not found: ___strlcat_chk" in libSystem (the macOS libc). So is the minimum version higher, or is there a bug in the ibnary
[12:05:28] <andlabs>  distribution? Thanks!
[12:06:15] *** Quits: mg42 (~mg42@216-75-166-120.ded.execulink.com) (Quit: Leaving)
[12:06:49] <jirib> hi. i'd like to scrape an old web which uses old html <frameset>. is it possible?
[12:07:58] *** Joins: reset (~reset@user/reset)
[12:08:41] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 248 seconds)
[12:08:47] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:09:03] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[12:09:04] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:09:41] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:09:50] *** Joins: simplicity (~yti@user/simplicity)
[12:10:00] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 268 seconds)
[12:10:33] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[12:10:50] <Yhg1s> andlabs: the installers have said 'for 10.9 and later' for a while. I believe the MacOS 11 'universal2' build _should_ work for older versions, but it's somewhat experimental.
[12:11:21] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 248 seconds)
[12:11:29] *** Joins: luersuve (uid512702@id-512702.charlton.irccloud.com)
[12:11:40] <andlabs> hmmm
[12:12:05] <andlabs> does it say that *after* you download it? because then I would need to go back and check which version is the oldest to still support 10.8 (or build from source)
[12:12:52] <Yhg1s> andlabs: no, it says so on the download page. https://www.python.org/downloads/release/python-396/
[12:13:18] *** Joins: simplicity (~yti@user/simplicity)
[12:13:25] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[12:13:41] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[12:14:38] <andlabs> OH I somehow missed it the first time
[12:14:39] <andlabs> hmm
[12:15:20] *** Joins: eyepeetee (~aa@user/eyepeetee)
[12:16:10] <eyepeetee> hi, if i am to call this function `convert_args({'a': 1, 'b': 2})['kwargs']`, is there a way i can do this in a single line without the use of that function instead? https://pastebin.com/raw/T2W7DVBK
[12:16:19] <andlabs> 3.7.6 should work for my needs (meson)
[12:16:24] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 256 seconds)
[12:16:44] <andlabs> is there an uninstall script or will I have to pick the files out myself?
[12:17:05] <Yhg1s> eyepeetee: I'm not sure what you're asking. You're not passing any keyword arguments to convert_args.
[12:17:41] <Yhg1s> andlabs: doesn't MacOS have a 'pkgutil' command for uninstalling packages?
[12:17:57] <Yhg1s> I don't know if Python's package has its own thing.
[12:17:59] <andlabs> not exaclty
[12:18:15] *** Joins: Hax0r (~TP1@93.168.116.37)
[12:18:16] <andlabs> I can remove the package piece by piece that way yes
[12:18:17] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:18:20] <andlabs> (manually)
[12:18:29] <andlabs> pkgutil will tell me what files were installed
[12:20:27] <andlabs> I'll just do that for now
[12:20:50] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:20:59] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[12:21:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:22:00] *** Quits: audiocat (~audio@2603-8081-1800-00ad-5769-2572-6cf8-a685.res6.spectrum.com) (Ping timeout: 272 seconds)
[12:22:23] *** Joins: wyclif (~wyclif@user/wyclif)
[12:24:22] *** Joins: mei (~mei@user/mei)
[12:24:48] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[12:25:29] *** Joins: JavaBean (~JavaBean@user/javabean)
[12:27:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:27:52] *** Joins: wyclif (~wyclif@user/wyclif)
[12:29:11] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f)
[12:32:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:33:13] <andlabs> got it; thanks
[12:33:22] *** Joins: wyclif (~wyclif@user/wyclif)
[12:35:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:35:42] *** Joins: shad (~shad@user/shad)
[12:36:01] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:09] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[12:37:56] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[12:38:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:38:28] *** Joins: ano (~weechat@user/ano)
[12:38:31] *** Joins: mci64 (~mci64@194.25.223.4)
[12:38:51] *** Joins: wyclif (~wyclif@user/wyclif)
[12:39:27] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[12:39:29] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:30] <Repiphany> eyepeetee: You're not even giving convert_args any kwargs in your example
[12:39:50] <Repiphany> {'a':1, 'b':2} is presumably already the exact form you want
[12:40:50] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[12:41:51] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[12:42:10] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:42:47] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[12:43:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[12:44:22] *** Joins: wyclif (~wyclif@user/wyclif)
[12:44:59] *** Joins: op0x0f05 (~op0x0f05@5.29.10.223)
[12:45:16] *** Joins: darksun (~darksun@user/darksun)
[12:46:23] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[12:46:33] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[12:46:41] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 252 seconds)
[12:47:50] *** Joins: sharperguy_ (~sharpergu@78.47.72.154)
[12:48:04] *** Joins: iflema (~ian@user/iflema)
[12:48:57] <eyepeetee> i'm sorry guys, i mistyped my question, i meant: `convert_args(a=1, b=2)['kwargs']`
[12:49:05] <eyepeetee> but the rest of my question remains the same
[12:49:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:49:52] *** Joins: wyclif (~wyclif@user/wyclif)
[12:50:32] *** Quits: sharperguy (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 252 seconds)
[12:50:57] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[12:51:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:52:16] <Repiphany> dict(a=1, b=2)
[12:52:25] <Yhg1s> eyepeetee: I still don't know what you're asking, really.
[12:53:11] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[12:53:24] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[12:53:29] *** Quits: sharperguy_ (~sharpergu@78.47.72.154) (Ping timeout: 248 seconds)
[12:55:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:55:03] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[12:55:23] *** Joins: wyclif (~wyclif@user/wyclif)
[12:55:24] *** Joins: sazawal (~sazawal@122.161.170.192)
[12:55:35] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[12:55:58] *** Joins: srhm (~ascii@user/srhm)
[12:56:15] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[12:59:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:00:09] *** Trieste_ is now known as Trieste
[13:00:36] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 256 seconds)
[13:00:53] *** Joins: wyclif (~wyclif@user/wyclif)
[13:01:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-71fb-3d31-207c-c860.res6.spectrum.com)
[13:03:52] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 268 seconds)
[13:04:28] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:04:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:05:03] <sazawal> Hi people. How can I secure TCP connection made with Twisted using TLS? I followed this example without TLS and it works for me, https://notoriousno.blogspot.com/2017/11/simple-self-signed-tls-server-and.html
[13:05:11] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[13:05:22] *** Joins: sharperguy_ (~sharpergu@78.47.72.153)
[13:05:44] <sazawal> Oops sorry wrong url. Here, https://www.oreilly.com/library/view/twisted-network-programming/9781449326104/ch02.html
[13:06:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:06:22] <sazawal> The one from notoriousno.blogspot.com uses treq on the client side, which I am looking to avoid.
[13:06:23] *** Joins: wyclif (~wyclif@user/wyclif)
[13:06:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[13:07:58] *** Quits: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 256 seconds)
[13:08:27] *** Joins: plastico (~plastico@neomutt/plastico)
[13:09:19] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[13:09:58] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[13:10:08] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 272 seconds)
[13:10:26] <wyre> SnoopJ, what do you think it's the difference between write() and send_feature_report()? https://trezor.github.io/cython-hidapi/api.html
[13:10:56] *** Joins: Naan (~Naan@user/naan)
[13:11:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:11:47] *** Joins: Pickchea (~private@user/pickchea)
[13:11:54] *** Joins: wyclif (~wyclif@user/wyclif)
[13:12:26] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[13:13:25] <Yhg1s> sazawal: https://twistedmatrix.com/documents/current/core/howto/ssl.html
[13:13:40] *** Joins: Payam (~Payam@138.106.57.131)
[13:14:04] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[13:14:41] <Payam> Hi, I am trying to .deb-package for python3 but when installing the package it seems to run the application with python2.7 and complains about the syntax
[13:14:58] <hexnewbie> wyre: The Cython wrappers are identical, except one calls hid_write(), the other hid_send_report() - https://github.com/trezor/cython-hidapi/blob/master/hid.pyx#L275 and then #L136
[13:15:31] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:15:35] *** Quits: asarch (~asarch@2806:10ae:7:defb:627b:ef7f:734a:76f5) (Quit: Leaving)
[13:15:41] <hexnewbie> wyre: Maybe the upstream documentation explains the difference: http://hidapi-d.dpldocs.info/hidapi.bindings.hid_send_feature_report.html
[13:15:48] <sazawal> Yhg1s, I found this yeah. But looked hard to relate with the earlier example of oreilly.com
[13:16:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[13:17:24] *** Joins: wyclif (~wyclif@user/wyclif)
[13:17:31] <sazawal> Don't understand what is the purpose of task and defer. Do I really need them to make the oreilly example TLS-secured?
[13:17:57] <Payam> Hi, I am trying to .deb-package for python3 but when installing the package it seems to run the application with python2.7 and complains about the syntax. here is control file, setup and rules : https://bpa.st/2JCA
[13:18:03] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[13:18:27] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 245 seconds)
[13:18:29] *** Joins: Gerula (~Gerula@user/gerula)
[13:19:05] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 248 seconds)
[13:20:07] <sveinse> Are there any ways to delay the evaluation of an fstring? E.g. for conditional printing
[13:20:40] *** Joins: kosh (~kosh@user/kosh)
[13:21:23] <Payam> sveinse delay?
[13:21:35] <Payam> fstrings came in 3.6.
[13:21:45] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[13:21:56] <Yhg1s> sazawal: the o'reilly example is _extremely_ basic, but if you actually read the TLS howto, you'll see that it says to replace listenTCP/connectTCP with listenSSL/connectSSL, in the third sentence.
[13:22:08] *** Joins: srhm (~ascii@user/srhm)
[13:22:12] <Yhg1s> sveinse: not really. that's what functions are for.
[13:22:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:22:33] <Yhg1s> Payam: what are you running that's using Python 2.7 when you don't expect it to?
[13:22:54] <Payam> I have a application for python3.
[13:22:56] *** Joins: wyclif (~wyclif@user/wyclif)
[13:23:01] <Payam> let me show you the error Yhg1s
[13:23:06] <Yhg1s> Payam: what are you *running*?
[13:23:23] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[13:23:24] <susam> sveinse: Not without jumping through a lot of hoops. See https://stackoverflow.com/a/42497694/303363 for example. I think you would be much better of making a regular string with format control in it and formatting it later with .format() later.
[13:23:46] <Payam> I package the application. then I install it. and when running it I get an error about the syntaxt
[13:23:55] <Yhg1s> Payam: yes. _what are you running_?
[13:23:59] <Yhg1s> Payam: what is the actual command you type?
[13:24:12] <Payam> mypackage
[13:24:15] <hexnewbie> sveinse: It's somewhat odd, but I've been using this for lazy values: https://bpa.st/J66A (be warned that the belated evaluation *will* change the value) - in this case, I think it's an overkill and too odd, refactoring and putting the f-string inside the if would make more sense.
[13:25:06] <Yhg1s> Payam: what does 'which mypackage' say?
[13:25:42] <sazawal> Yhg1s, Yes it is very basic, that is why I prefer it. I am new to Twisted and TCP communications.
[13:25:58] <sveinse> Yeah, I don't need to go over hoops to insistently use f-strings. I was only wondering. str.format() work well
[13:26:15] <Yhg1s> sazawal: if you don't know about defer or tasks, it's going to be hard to do anything _but_ very basic things. But as I said, the very basic switch is to use the TLS-specific reactor methods.
[13:26:57] <Payam> Yhg1s , this is the traceback https://bpa.st/WFYA ,   which osim gives /home/vagrant/.local/bin/osim
[13:27:21] <Yhg1s> Payam: you said it was 'mypackage', not 'osim'. Which is the thing you're running?
[13:27:23] *** Joins: entuland (~entuland@user/entuland)
[13:27:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:27:46] <Payam> My bad. I  forgot to change the name. Classified stuff you know.
[13:27:55] <Payam> it is mypackage.
[13:27:56] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 252 seconds)
[13:28:09] <Yhg1s> Payam: rriiight. Well, you're not running the script that's part of your debian package. You're running the script that is in ~/.local.
[13:28:21] <Payam> yeah I see
[13:28:26] *** Joins: wyclif (~wyclif@user/wyclif)
[13:28:51] <sazawal> Yhg1s, Yes I gotta start with basic, and when I need more features I will probably move to the other modules of Twisted. Let me try the TLS-specific reactor methods for now, like you said.
[13:29:03] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[13:29:04] <Yhg1s> sazawal: like the howto said.
[13:29:15] <sazawal> Right
[13:30:19] *** Joins: wender (~Wender@189.37.65.46)
[13:31:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:32:20] *** Joins: ubert (~Thunderbi@178.165.160.157.wireless.dyn.drei.com)
[13:33:05] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[13:33:09] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:33:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:33:52] *** Quits: computeiro (~Wender@189.37.65.53) (Ping timeout: 268 seconds)
[13:33:58] *** Joins: wyclif (~wyclif@user/wyclif)
[13:34:04] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[13:34:28] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:34:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[13:35:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:37:12] *** Joins: Kvothe (~weechat@user/elodin)
[13:37:32] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[13:38:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:38:52] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[13:38:55] *** Joins: besnn (~besnn@user/besnn)
[13:39:28] *** Joins: wyclif (~wyclif@user/wyclif)
[13:42:30] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[13:44:03] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[13:47:21] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 248 seconds)
[13:47:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:47:44] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 252 seconds)
[13:48:45] *** Joins: wyclif (~wyclif@user/wyclif)
[13:48:46] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 256 seconds)
[13:51:24] *** Joins: dermato (~dermatobr@154.21.23.75)
[13:53:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:54:15] *** Joins: wyclif (~wyclif@user/wyclif)
[13:54:15] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:58:59] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[13:59:17] *** Joins: cheater (~Username@user/cheater)
[14:01:43] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[14:03:30] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 256 seconds)
[14:04:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:05:16] *** Joins: wyclif (~wyclif@user/wyclif)
[14:06:45] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[14:07:06] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: stoiclunchbox)
[14:07:08] *** Joins: CoolerX (~CoolerX@user/coolerx)
[14:07:23] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[14:07:33] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[14:10:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:10:46] *** Joins: wyclif (~wyclif@user/wyclif)
[14:11:36] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:13:46] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[14:14:35] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[14:14:39] *** Quits: op0x0f05 (~op0x0f05@5.29.10.223) (Quit: Client closed)
[14:15:20] *** Joins: rany (~rany@user/rany)
[14:15:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:16:16] *** Joins: wyclif (~wyclif@user/wyclif)
[14:18:27] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 245 seconds)
[14:18:38] <wyre> can I use numbers in the package name? ðŸ¤”
[14:20:15] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:20:34] <sveinse> I want to mock os.stat_result() and in the code it seems to be a class with named attrs, however I seems to be unable to make an instance of it without initalizing it with a tuple of 10 elements. Is is possible to initialize it with fewer elements and hopefully by attr name instead?
[14:21:17] <sveinse> I found a unittest in cpython that actually tests that init of a stat_result() instance with lesser elements raises an exception...
[14:21:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:21:48] *** Joins: wyclif (~wyclif@user/wyclif)
[14:23:35] *** Joins: a6a45081-2b83 (~aditya@223.226.228.68)
[14:24:28] *** Quits: Cache_Money (~Cache_Mon@c-67-160-112-6.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[14:25:14] <Yhg1s> sveinse: if you want to mock it, just use an autospec mock instead of instantiating the real type.
[14:25:50] <Yhg1s> wyre: a package name can be any valid Python identifier, which means it can contain numbers as long as it doesn't start with one.
[14:26:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[14:26:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:27:18] *** Joins: wyclif (~wyclif@user/wyclif)
[14:28:04] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[14:28:24] <sveinse> Yhg1s: aha, let me read more about autospecing. Thanks
[14:29:33] <Yhg1s> sveinse: if you use unittest.mock, always, always, always use a spec. autospec is convenient.
[14:31:00] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:32:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[14:32:12] *** Quits: Pyt001 (~Pyt001@2402:e280:3d22:227:3842:7e50:1cb4:b6c6) (Quit: Client closed)
[14:32:49] *** Joins: wyclif (~wyclif@user/wyclif)
[14:34:17] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 248 seconds)
[14:35:38] *** Joins: dez (uid92154@user/dez)
[14:37:10] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:37:26] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae)
[14:37:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:38:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:38:19] *** Joins: wyclif (~wyclif@user/wyclif)
[14:40:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[14:40:29] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:41:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:42:11] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:564:11b6:9005:4ae) (Ping timeout: 252 seconds)
[14:43:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:43:15] *** AmyMalik is now known as Ellenor
[14:43:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:43:50] *** Joins: wyclif (~wyclif@user/wyclif)
[14:43:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[14:44:55] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:48:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[14:48:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:49:20] *** Joins: wyclif (~wyclif@user/wyclif)
[14:49:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:48] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[14:55:15] *** Joins: X4 (~X4@2a02:908:178:1900:8043:84a0:37a2:e550)
[14:55:44] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[14:55:51] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[14:56:08] *** Joins: srhm (~ascii@user/srhm)
[14:56:29] <X4> Hi, I seem to have fabricated the most utter crappy code ever made in python probably.. How do you trim this this crappy code into a few lines? https://pastebin.com/VhKNbh5w
[14:56:57] <X4> I'm sorry your eyes had to see this mess :/
[14:57:25] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[14:57:26] <X4> at least it seems to work
[14:57:40] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[14:57:42] <deniska> X4: `('side' and 'qty' and 'symbol' and 'price' and 'leverage') in request_data` doesn't do what you probably think it does
[14:58:32] <rannnn8888> https://bpa.st/CD3Q what him want more  to not get i scrap this ?
[14:59:20] <deniska> X4: `'side' and 'qty' and 'symbol' and 'price' and 'leverage'` evaluates to 'leverage' because `and` evaluates either to the first value if it's falsy, or to the second value if it's truthy, and non-empty strings are truthy
[14:59:36] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:59:55] <X4> Oh noes, then it's also not functioning aswell as crappy :(
[15:00:02] <bjs> X4: also just saying `ValueError("value is empty")` doesn't raise an exception, you actually need to `raise` an error
[15:00:12] <deniska> X4: so you essentially just do `if 'leverage' in request_data`
[15:00:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:00:17] <Yhg1s> X4: lines 1-11 could be a single dict literal, instead of setting keys by hand.
[15:00:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:51] <deniska> X4: and I'm not too sure what's the purpose of this code :)
[15:00:53] <Yhg1s> X4: you may also be interested in dict.pop().
[15:01:02] <Yhg1s> or, dict.get().
[15:01:13] <anorthall> X4: am I right in saying lines 1-11 are just for our benefit to help us understand the code and would usually be passed as an argument to a method
[15:02:26] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 256 seconds)
[15:03:47] <X4> I tried a a lot of things, including lambda and also stupid things like this mandatory_keys = {"side", "qty", "symbol"}
[15:03:48] <X4>  mandatory_values = [req[k] for k in mandatory_keys]   kv = (dict(zip(mandatory_keys, values)))
[15:04:15] <X4> but then found out I'm back at square 1 xD
[15:04:38] <bjs> X4: "at square 1"?  What is the goal here
[15:04:50] <grawity> if all([k in request for k in mandatory_keys]):
[15:05:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:05:34] <X4> basiscally check if all those mandatory values are set properly and ignore empty optional values, but if optional values are given they must be checked if set too
[15:05:44] <X4> and raise an error otherwise
[15:05:53] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:55] <bjs> X4: okay, surely "are given" is the same as "if set"
[15:06:59] <X4> Python is frightening, so many things you just spell may actually be working code.. so "if set price" would actually do something?
[15:07:11] <grawity> no
[15:07:22] <bjs> X4: no I'm asking *you* what you meant by "set" and "given"
[15:07:38] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[15:08:10] <X4> set and given means not undefined, not empty, not None to me
[15:08:26] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[15:08:43] <Yhg1s> X4: can something be given *but not* set?
[15:09:14] <bjs> X4: in your example is "market" given, or is it set, or is it both?
[15:09:19] <bjs> it's there, but it's None ?
[15:09:37] <grawity> checking for empty or None makes sense, though there's no 'undefined' in python (you get an exception if trying to access a nonexistent key instead)
[15:09:57] <Repiphany> Why not a function with positional and keyword arguments
[15:09:57] <bjs> X4: "given" and "set" aren't Python terms,  what do you mean when you say them
[15:10:04] <grawity> e.g. if not req.get(k): raise ValueError(f"key '{k}' is either empty or None")
[15:10:10] <X4> I am actually only interested in the values in request_data
[15:10:27] *** Joins: matkor (~matkor@93.179.197.152)
[15:10:41] <bjs> X4: your code currently will print None None None  (for the optional ones).  Is that what you want the code to do?
[15:11:08] <X4> bjs that the value must exist in request_data and not be empty, None or unedefined
[15:11:22] <bjs> X4: what if it does exist but is None, like in your example?
[15:11:34] <bjs> (also "undefined" is another thing that isn't a Python term, what did you mean by that?)
[15:11:45] *** Quits: wender (~Wender@189.37.65.46) (Quit: Leaving)
[15:12:42] <X4> hmm, in that case an error should be raised for mandatory fields, the optional values just shouldn't be empty
[15:12:55] *** Joins: computeiro (~Wender@189.37.65.46)
[15:12:55] *** Quits: computeiro (~Wender@189.37.65.46) (Client Quit)
[15:12:58] <bjs> X4: ... but in your own example, you have `request_data['misc'] = None`
[15:13:12] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 256 seconds)
[15:13:15] <X4> yes, just to test if I get the error
[15:13:20] <bjs> Should your code (1) ignore it and not print it? or (2) print None, or (3) get an error?
[15:13:29] <bjs> X4: okay so you want it to raise an error because it was None
[15:13:34] <X4> yes
[15:13:44] *** Joins: computeiro (~Wender@189.37.65.46)
[15:13:44] *** Joins: bikeshedder (~bikeshedd@2001:a62:14b5:ae01:4e2b:3279:e73c:d2b6)
[15:14:11] *** Quits: Hax0r (~TP1@93.168.116.37) (Quit: I'll be back..)
[15:14:24] <X4> I don't know howto make certain keys mandatory and others optional, but also verify in both cases that the values are not empty, if the key is given
[15:14:59] <X4> request_data is a value that is originally supplied by flask
[15:15:16] <bjs> X4: https://bpa.st/WUXQ
[15:15:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:16:14] *** Quits: Elzington_ (~Elzington@66.115.189.153) (Ping timeout: 268 seconds)
[15:16:54] *** Joins: wyclif (~wyclif@user/wyclif)
[15:17:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:17:20] <grawity> X4: are the optional keys independent, or are they tied in "if one is present, all others must be present too"?
[15:17:48] *** Quits: mickey86 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:17:51] <X4> they are independant
[15:17:58] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[15:18:12] <bjs> X4: if my paste does what you want, you can clean it up with something like https://bpa.st/KFYQ as an example.  Hopefully these are "close enough" to what you really want you can edit it easier
[15:18:18] *** Joins: mickey86 (~user@user/mickey)
[15:18:26] *** Joins: gin (~gin@user/gin)
[15:18:42] *** Joins: Elzington (~Elzington@66.115.189.149)
[15:18:47] <X4> The source of all keys and values is request.data or request.json. I just tried to replicate it (crappily unfortunately)
[15:18:58] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[15:19:37] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 248 seconds)
[15:20:09] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 248 seconds)
[15:20:15] <gin> rendar: please do not PM me and abuse my father!
[15:20:23] <X4> hmm, what if the value is just empty like ""?
[15:20:29] <rendar> 12:49 | <gin> Wow! You really are an idiot!
[15:20:33] <rendar> you're the one PMing me
[15:20:36] <bjs> X4: well you never said anything like that
[15:20:37] <gin> rendar: Please stop this!
[15:20:43] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e)
[15:20:43] <rendar> gin you have to stop, moron
[15:20:52] <bjs> gin: rendar: perhaps here is not the appropriate place for this discussion?
[15:20:55] <rendar> someone can ban this guy?
[15:20:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[15:21:01] <bjs> for what? For PMing y ou?
[15:21:12] <rendar> no, for saying in this channel i'm PMing him
[15:21:21] <rendar> this channel is totally unrelated
[15:21:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[15:21:25] <rendar> and he started PMing me
[15:21:30] <gin> rendar: no!
[15:21:34] <rendar> yes
[15:21:36] <rendar> i have a screenshot
[15:21:45] <Repiphany> /ignore
[15:21:46] <grawity> X4: imo start with the most straightforward, verbose checking of the values one by one https://paste.rs/mRE and simplify from there (see what can be turned into a loop etc https://paste.rs/Y5y)
[15:21:49] <bjs> rendar: your client has an /ignore function probably
[15:21:56] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:22:08] <bjs> rendar: if y
[15:22:10] <bjs> oops
[15:22:10] <rendar> https://imgur.com/UCS71UX
[15:22:19] <rendar> this is the screenshot guys...he started insulting me in PM
[15:22:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:22:28] <grawity> X4: in checks like "if something" and "if not something", both None and empty string are treated identically (like False), so one check covers both
[15:22:28] <rendar> and then messages in this channel, competely without any reason
[15:22:29] <bjs> rendar: if you think they are going against Libera's own ToS then you should talk to Libera staff
[15:22:36] <rendar> and this is not the first time he does that
[15:22:43] <bjs> rendar: okay but right now you are doing the same
[15:22:50] <bjs> so if they get banned shouldn't you too?
[15:23:01] <rendar> bjs: i'm just defending myself from his accusation of abusing his PM, that's all
[15:23:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:23:22] <rendar> https://imgur.com/UCS71UX <- this is my proof, now i'm finished, thanks
[15:23:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:24:49] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:24:57] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[15:25:25] *** Joins: fpc (~fpc@user/fpc)
[15:25:25] <bjs> X4: I'd take my paste(s) and edit them to try get what you want
[15:25:44] <bjs> X4: you can probably see how to take get_not_none and make it a get_not_empty that checks None and "" (and whatever else you want) ?
[15:26:25] <fpc> Is there any `return value if cond` construct in Python?
[15:26:33] <bjs> fpc: `if cond: return value`
[15:26:52] <fpc> bjs: that was simple. thanks!
[15:27:11] *** Quits: dre (~dre@2001:8003:c932:c301:8028:ecc5:f3df:cd14) (Remote host closed the connection)
[15:27:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[15:27:51] <anorthall> test
[15:27:57] *** Quits: sharperguy_ (~sharpergu@78.47.72.153) (Ping timeout: 268 seconds)
[15:27:58] *** Joins: wyclif (~wyclif@user/wyclif)
[15:29:39] *** Joins: summonner1 (~summonner@188.24.45.0)
[15:30:26] *** Quits: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133) (Read error: Connection reset by peer)
[15:30:39] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[15:32:01] *** Joins: y1n (~y1n@84-115-64-124.wifi.dynamic.surfer.at)
[15:32:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e) (Quit: Leaving)
[15:32:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:33:29] *** Joins: wyclif (~wyclif@user/wyclif)
[15:35:07] *** Quits: BigShip (~BigShip@user/bigship) (Read error: Connection reset by peer)
[15:35:58] *** Joins: BigShip (~BigShip@user/bigship)
[15:37:57] *** Quits: et (~et@user/et) (Quit: ZNC 1.8.0 - https://znc.in)
[15:38:17] *** Quits: yvehan (~yvehan@119.147.212.245) (Ping timeout: 248 seconds)
[15:38:24] *** Joins: et (~et@user/et)
[15:38:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:38:43] *** Joins: yvehan (~yvehan@117.136.31.244)
[15:39:06] *** Joins: wyclif (~wyclif@user/wyclif)
[15:40:19] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[15:40:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[15:40:50] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[15:42:37] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 245 seconds)
[15:43:32] *** Quits: mickey86 (~user@user/mickey) (Remote host closed the connection)
[15:43:57] *** Joins: mickey86 (~user@user/mickey)
[15:44:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:44:31] *** Joins: wyclif (~wyclif@user/wyclif)
[15:44:39] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:44:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 272 seconds)
[15:45:14] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:45:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[15:47:10] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[15:47:38] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 252 seconds)
[15:49:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[15:50:04] *** Joins: wyclif (~wyclif@user/wyclif)
[15:50:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 245 seconds)
[15:51:20] *** Quits: X4 (~X4@2a02:908:178:1900:8043:84a0:37a2:e550) (Quit: Client closed)
[15:51:47] *** Joins: Pickchea (~private@user/pickchea)
[15:52:56] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[15:53:20] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[15:55:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:55:32] *** Joins: wyclif (~wyclif@user/wyclif)
[15:55:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[15:58:08] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[16:00:25] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: stoiclunchbox)
[16:00:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:01:03] *** Joins: wyclif (~wyclif@user/wyclif)
[16:02:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:02:37] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 245 seconds)
[16:03:33] *** Joins: X4 (~X4@2a02:908:178:1900:211a:50d8:e200:aaf2)
[16:03:56] *** Quits: yvehan (~yvehan@117.136.31.244) (Read error: Connection reset by peer)
[16:03:59] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[16:04:15] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[16:04:16] *** Joins: yvehan (~yvehan@59.63.207.69)
[16:04:47] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Client Quit)
[16:05:14] *** Joins: oldguy (~oldguy@90.244.247.40)
[16:05:37] <jaggz> these are keystrokes (a,b,'\n', etc.) in a dict, mapping them to strings..
[16:05:50] <jaggz> how do I convert that \n in my menu to enter?  (like a map)
[16:05:52] <jaggz>     print(' '.join( [ f"({bcya}{s}{rst}){commands[s]}" for s in sorted(commands.keys()) ]))
[16:06:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[16:06:06] <jaggz> hmm.. ignore bcya and rst.. those are colors
[16:06:34] *** Joins: wyclif (~wyclif@user/wyclif)
[16:06:39] <jaggz> (outputs cyan, then the s (character), then a color-reset)
[16:06:43] *** Joins: me-sudoer-dentne (~me-sudoer@45.112.144.181)
[16:07:04] <jaggz> so that outputs a list like  "(p)previous (z)zebra"
[16:07:20] *** Joins: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[16:07:29] *** Joins: ethycol (~ethycol@d-216-189-168-37.fl.cpe.atlanticbb.net)
[16:07:32] <jaggz> but one of those is a newline and that jus don look right
[16:07:59] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[16:08:18] *** Quits: ethycol (~ethycol@d-216-189-168-37.fl.cpe.atlanticbb.net) (Remote host closed the connection)
[16:09:08] <grawity> just make a function prettyprintkey(s) that returns "â†µ" if s == "\n" and call it in place of {s}
[16:09:21] <grawity> and ... does this *have to be* all in one line?
[16:09:26] <op0x0f05> oooh fancy
[16:09:42] *** Quits: resmo (~resmo@2a00:d420:9:8a00:faf2:a6e:baf4:26ad) (Ping timeout: 245 seconds)
[16:10:27] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[16:10:43] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[16:11:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:11:52] <jaggz> shoot, this almost worked, except I'm then referencing the commands[s]
[16:11:54] <jaggz>     print(' '.join( [ f"({s}){commands[s]}" for s in map(lambda x: x if x != '\n' else 'Enter', sorted(commands.keys()))] ))
[16:12:06] <jaggz> grawity, ok
[16:12:11] *** Joins: wyclif (~wyclif@user/wyclif)
[16:12:25] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[16:12:52] *** Joins: audiocat (~audio@2603-8081-1800-00ad-2824-e77f-f464-cbf5.res6.spectrum.com)
[16:14:01] *** Quits: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs) (Ping timeout: 248 seconds)
[16:14:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 250 seconds)
[16:14:11] <jaggz> grawity, kewl.. done.  thanks :)
[16:15:44] *** Quits: a6a45081-2b83 (~aditya@223.226.228.68) (Remote host closed the connection)
[16:15:44] <jaggz> need a way to wrap these menu items properly (including handling the invisible length of the color sequences): https://i.imgur.com/BDlhGLz.png
[16:15:57] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[16:16:08] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[16:16:19] <jaggz> whatever.. that's not urgent I guess
[16:16:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[16:17:14] *** Quits: audiocat (~audio@2603-8081-1800-00ad-2824-e77f-f464-cbf5.res6.spectrum.com) (Ping timeout: 256 seconds)
[16:17:42] *** Joins: wyclif (~wyclif@user/wyclif)
[16:18:22] *** Joins: thefuture_ (~thefuture@197.237.1.179)
[16:18:27] *** Joins: Macuser (~Macuser@2600:1003:b440:ad72:ac2e:6fee:dd7c:f236)
[16:19:30] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:19:33] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[16:19:53] *** Quits: me-sudoer-dentne (~me-sudoer@45.112.144.181) (Ping timeout: 248 seconds)
[16:20:43] <azidhaka> Hi, simple question (i guess). I have a function that returns a list, which can be empty or contain one member. What is the proper way with 'if' to see if the_list[0] exists?
[16:20:53] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:20:57] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[16:21:10] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[16:21:47] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[16:22:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:22:51] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[16:23:15] *** Joins: thiras (~thiras@user/thiras)
[16:23:15] *** Joins: wyclif (~wyclif@user/wyclif)
[16:23:21] <grawity> azidhaka: len(the_list) > 0
[16:23:27] <Yhg1s> azidhaka: 'if L' or 'if len(L) > 0'
[16:23:30] <grawity> or really `if the_list`
[16:23:38] <grawity> since empty lists are False-y
[16:23:51] *** Joins: masber (~masber@vpn-126.cscs.ch)
[16:23:57] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:24:11] *** Joins: death916 (~death916@user/death916)
[16:24:23] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[16:24:54] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[16:25:07] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 245 seconds)
[16:25:14] *** Joins: shad (~shad@user/shad)
[16:25:20] *** Joins: srhm (~ascii@user/srhm)
[16:26:06] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[16:26:16] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[16:26:26] *** Joins: thiras (~thiras@user/thiras)
[16:26:32] <azidhaka> grawity: i am getting list index our of range, but i am doing: if list and list[0] == 'something':
[16:26:38] <azidhaka> i guess len is the best way
[16:26:43] <grawity> hmm
[16:26:47] *** Quits: yvehan (~yvehan@59.63.207.69) (Ping timeout: 245 seconds)
[16:26:54] <grawity> are you sure it's a list
[16:27:21] <azidhaka> grawity: type shows class 'list'
[16:27:25] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[16:27:26] *** Quits: y1n (~y1n@84-115-64-124.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[16:27:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:27:48] *** Joins: yvehan (~yvehan@117.136.31.244)
[16:27:51] *** Quits: devcpu (~rusty@208.116.227.242) (Quit: leaving)
[16:28:21] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[16:28:23] <grawity> does the exception's stack trace actually point to this specific line?
[16:28:25] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (Ping timeout: 248 seconds)
[16:28:39] <azidhaka> grawity: never mind, found my error, thanks everyone
[16:28:45] *** Joins: wyclif (~wyclif@user/wyclif)
[16:30:08] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: stoiclunchbox)
[16:30:09] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[16:30:23] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[16:30:27] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[16:33:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:34:15] *** Joins: wyclif (~wyclif@user/wyclif)
[16:34:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[16:34:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:34:36] *** Joins: Atque (~Atque@user/atque)
[16:34:44] *** Joins: dcaro (~dcaro@user/dcaro)
[16:34:56] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 252 seconds)
[16:35:05] <gitesh> So if we want to get an attribute of an instance object we use dot notation instead of brackets in python
[16:35:35] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[16:35:36] <Yhg1s> gitesh: yes, attribute access is with the dot operator.
[16:35:51] <Yhg1s> (any kind of attribute, off of any kind of object.)
[16:35:58] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 272 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:56] *** Joins: df_data (sid466269@id-466269.charlton.irccloud.com)
[16:40:42] *** Joins: y1n (~y1n@84-115-64-38.wifi.dynamic.surfer.at)
[16:41:03] *** Parts: zbe (~zbe@pleiades.zbe.bz) (Leaving)
[16:41:22] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 245 seconds)
[16:41:59] *** Quits: masber (~masber@vpn-126.cscs.ch) (Quit: Client closed)
[16:42:26] *** Joins: chris_99 (uid26561@id-26561.tooting.irccloud.com)
[16:43:08] *** Joins: masber (~masber@vpn-126.cscs.ch)
[16:43:52] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[16:44:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:44:34] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e)
[16:45:16] *** Joins: wyclif (~wyclif@user/wyclif)
[16:45:18] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@80.89.77.2) (Quit: Connection closed)
[16:45:25] *** Quits: X4 (~X4@2a02:908:178:1900:211a:50d8:e200:aaf2) (Quit: Client closed)
[16:45:39] *** Joins: dcaro (~dcaro@user/dcaro)
[16:45:40] *** Joins: X4 (~X4@2a02:908:178:1900:211a:50d8:e200:aaf2)
[16:46:25] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[16:47:33] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[16:48:45] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[16:49:11] <chris_99> Hi, can anyone think of a reason why a dealloc function may be called but not a finalizer, in a C lib using python.h,  I have the following flags set:  .tp_flags = (Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE)
[16:49:58] *** Quits: yvehan (~yvehan@117.136.31.244) (Ping timeout: 268 seconds)
[16:50:04] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[16:50:50] <chris_99> i found in a pep442 it says "In normal reference-counted disposal, an object's finalizer is called just before the object is deallocated."
[16:51:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 272 seconds)
[16:51:28] <jaggz> https://www.flickr.com/photos/32284628@N05/51373564263/in/dateposted-public/
[16:51:31] *** Joins: etienneme (~etienne@user/etienneme)
[16:52:10] <jaggz> better.. 90% accuracy on my validation set (classifying family audio. differentiating between someone on a ventilator speaking and noise..   ofteh the husband was classified as noise too)
[16:52:44] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:52:45] <SamuelMarks> hi
[16:53:04] *** Quits: etiennem- (~etienne@user/etienneme) (Ping timeout: 268 seconds)
[16:53:19] <SamuelMarks> Rather than `pip install` and `pip uninstall` how do I bootstrap a module in my unittests? - sys.modules and PYTHONPATH hackery?
[16:53:33] <grawity> venv?
[16:53:50] <SamuelMarks> grawity - I'm generating a module, installing it, testing it, then uninstalling it
[16:53:59] <SamuelMarks> which means my tests run slow
[16:55:12] *** Quits: oldguy (~oldguy@90.244.247.40) (Ping timeout: 256 seconds)
[16:55:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:56:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:56:30] *** Joins: wyclif (~wyclif@user/wyclif)
[16:58:00] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[16:58:20] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b)
[16:58:37] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 268 seconds)
[17:00:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:02:15] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[17:02:27] *** Joins: wyclif (~wyclif@user/wyclif)
[17:03:00] <df_data> hi all, how can i add more headers so match df =df[df[Names] i tried 'Names',Names2' etc but it errors out  heres my code https://bpa.st/TITA
[17:03:02] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:6476:9018:df7:656b) (Ping timeout: 245 seconds)
[17:03:52] *** Quits: X4 (~X4@2a02:908:178:1900:211a:50d8:e200:aaf2) (Quit: Client closed)
[17:06:16] *** Joins: zeden (~zeden@user/zeden)
[17:06:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:07:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:07:58] <jinsun> df_data: what is the error? you should put that in the paste also
[17:08:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:08:57] <df_data> if i try df = df[df['Names'].isin(class_list)] or df[df['Names2'].isin(class_list)]
[17:09:12] <df_data> ValueError: The truth value of a DataFrame is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
[17:09:54] <df_data> if i do df = df[df['Names','Names2'].isin(class_list)]
[17:10:07] *** Joins: nyah (~nyah@51.146.30.113)
[17:10:18] <df_data> Error is:  in get_loc
[17:10:18] <df_data>     raise KeyError(key) from err
[17:10:25] *** Quits: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com) (Remote host closed the connection)
[17:10:28] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:10:38] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:10:39] *** Joins: georgios (~georgios@user/georgios)
[17:10:46] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[17:11:08] <jinsun> okay, doing `a or b` actually does `bool(a) or bool(b)` and bool(df["Name"].isin(class_list)) will try to convert that entire dataframe to a single True or False value
[17:11:25] <jinsun> so to prevent that pandas complains when bool(df) is done
[17:11:26] *** Quits: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 272 seconds)
[17:11:58] <Payam> hi
[17:12:35] <jinsun> df_data: you can use the bitwise or `|` instead of `or` if you want to do elementwise or, `df = df[df['Names'].isin(class_list)] | df[df['Names2'].isin(class_list)]`
[17:12:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:13:20] *** Quits: thefuture_ (~thefuture@197.237.1.179) (Ping timeout: 272 seconds)
[17:13:31] *** Quits: Macuser (~Macuser@2600:1003:b440:ad72:ac2e:6fee:dd7c:f236) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:13:34] *** Joins: wyclif (~wyclif@user/wyclif)
[17:14:09] <df_data> Throws this out: TypeError: unsupported operand type(s) for |: 'float' and 'bool'
[17:15:08] <jinsun> aah put those `df[...].isin(...)` inside parenthesis
[17:15:48] <jinsun> df_data: `df = df[(df['Names'].isin(class_list)]) | (df[df['Names2'].isin(class_list))]`
[17:16:01] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[17:16:16] <Yhg1s> jinsun: that... doesn't change anything.
[17:16:17] *** Joins: stac47 (~stac@2a01:cb1d:16b:7e00:4dd6:457b:7d1f:575e)
[17:16:24] *** Joins: Macuser (~Macuser@2600:1003:b440:ad72:ac2e:6fee:dd7c:f236)
[17:16:50] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e) (Quit: Leaving)
[17:16:53] <jinsun> ah yes I didn't see properly
[17:17:08] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e)
[17:17:24] *** Joins: Pickchea (~private@user/pickchea)
[17:17:47] <df_data>  ahh i was outside parenthesis, thank you so much
[17:18:09] <Payam> How do you include images when packaging a python project to .deb?
[17:18:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:18:36] <jinsun> df_data: it should have been `df = df[df['Names'].isin(class_list) | df['Names2'].isin(class_list)]`
[17:18:48] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:19:17] *** Joins: wyclif (~wyclif@user/wyclif)
[17:19:28] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:20:21] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[17:20:24] <jinsun> that outer df[ should take the result of the | operation
[17:20:28] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[17:21:46] *** Joins: Lando-SpaceIzzle (~Lando@user/lando-spacepimp)
[17:22:03] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[17:22:35] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[17:23:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:23:29] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[17:23:31] *** Joins: shad (~shad@user/shad)
[17:24:06] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 272 seconds)
[17:24:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:25:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:25:25] *** Joins: X4 (~X4@2a02:908:178:1900:95aa:d17:981d:a57a)
[17:25:29] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 248 seconds)
[17:27:12] *** Quits: y1n (~y1n@84-115-64-38.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[17:28:29] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:28:54] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[17:29:13] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[17:29:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:30:23] *** Joins: wyclif (~wyclif@user/wyclif)
[17:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:30:36] *** Joins: grawity (grawity@star.nullroute.eu.org)
[17:30:43] <very_sneaky> has it become quieter here since the migration from freenode?
[17:31:25] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:58] <Yhg1s> not in number of connected users, no.
[17:32:50] <very_sneaky> hmm, in terms of channel pop it seems like there's ~600 fewer people - i assume idlers
[17:33:10] <InPhase> very_sneaky: I haven't quantitatively assessed the activity, but it feels like the same volume of active chatter.
[17:33:14] <Yhg1s> very_sneaky: no, there were 1100 or so users around this time of day before freenode's troubles began.
[17:33:16] <very_sneaky> but idk, i've mostly been lurking and it doesn't seem like i see the same chat walls i used to. lots of part/join blocks
[17:33:55] <very_sneaky> Yhg1s: hmm. i seem to remember seeing it at 1700-1800 whenever i looked. admittedly ad hoc samples
[17:34:01] <Lando-SpaceIzzle> lol you don't hide parts/joins in this mega-channel?
[17:34:04] <Yhg1s> that was quite a while ago.
[17:34:19] <kosh> the channel is very bursty, depending on the time of day, time of year and day of the week you get lots of conversations or very little
[17:34:34] <kosh> right now it is summer and many are on vacation
[17:34:59] <very_sneaky> yeah, don't get me wrong, hwenever i have a question someone is always here to discuss - just seemed a little quieter than it used to be
[17:35:00] <InPhase> Yeah, August is traditionally the slowest IRC month.
[17:35:02] <very_sneaky> true
[17:35:02] <kosh> this seems pretty normal to me and I have been on #python for a LONG time
[17:35:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:35:20] <InPhase> So considering it's August, it's pretty active.
[17:35:33] <InPhase> Expect more homework questions in a month.  :)
[17:35:51] <very_sneaky> honestly, i'm surprised school students still even find us on irc
[17:35:53] <kosh> if you ask sunday morning european time then expect the channel  to be nearly dead
[17:35:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:36:24] <very_sneaky> whenever i mention irc in the real world i always get "whats that" lol
[17:36:33] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[17:36:50] <kosh> it is tiny at this point
[17:36:53] <Armen> whatsapp for *old people* ;)
[17:36:57] <kosh> the python discord channel is VASTLY larger
[17:37:01] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[17:37:19] <very_sneaky> having said that, i'm glad we don't get the same kinds of questions they get on the python discord. the tech barrier certainly filters a lot out
[17:37:27] <kosh> something ilke 40K there right now
[17:37:32] <very_sneaky> yeah that's huge
[17:37:33] <Yhg1s> very_sneaky: we get the same kinds of questions.
[17:37:53] <very_sneaky> Yhg1s: some, but i feel like the ratio of questions that are asked properly is higher here
[17:38:00] <InPhase> very_sneaky: Slack/Discord used to be described as proprietary IRC with pictures.  Now we describe IRC as open source Slack/Discord without pictures.  Times shifted a little.
[17:38:03] <very_sneaky> less "got this error, how i fix"
[17:38:20] <Yhg1s> very_sneaky: we get plenty of those, don't worry.
[17:38:37] <very_sneaky> _far_ less lol - at least what i see
[17:38:40] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 272 seconds)
[17:38:55] <very_sneaky> maybe it's just that the most active voices i see here are regulars
[17:39:01] <kosh> depends on the time of day that you look
[17:39:06] <very_sneaky> probably
[17:39:14] <kosh> and month and day
[17:40:08] <very_sneaky> i've spent the past couple of weeks getting neck deep in c++ package management
[17:40:15] <very_sneaky> i've never been so thankful for pip
[17:40:36] <BtbN> C++ has no package management
[17:40:43] *** Joins: y1n (~y1n@84-115-64-49.wifi.dynamic.surfer.at)
[17:40:48] <very_sneaky> well, let me blow your mind
[17:40:52] <BtbN> Has the advantage of no malicious typo-squatting
[17:40:56] <very_sneaky> https://conan.io/
[17:41:05] <BtbN> That's some random third party tool, not a C++ feature
[17:41:05] *** Joins: rsx (~dummy@ppp-188-174-136-60.dynamic.mnet-online.de)
[17:41:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:41:16] <BtbN> obviously people have written package managers that provide C++ libraries
[17:41:18] <very_sneaky> not sure what you mean, c++ is a standard
[17:41:31] *** Joins: wyclif (~wyclif@user/wyclif)
[17:41:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:41:56] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[17:41:57] <very_sneaky> we're going to get offtopic here pretty quickly - i just wanted to express how much i now appreciate pip :P
[17:42:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:42:50] <BtbN> You could even count conda as "C++ package manager" with that definition
[17:42:59] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:43:10] <Armen> and meson
[17:43:21] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[17:43:30] <BtbN> meson is just a cmake like something, isn't it?
[17:43:36] <very_sneaky> sure, in the same way that i could also call conan a python package manager
[17:43:48] <Yhg1s> It is indeed quite off-topic.
[17:44:22] <BtbN> The major difference is, setuptools/setup.py/pip is basically a native feature of Python itself. While C++ has nothing like that.
[17:44:47] <Armen> wasn't pip originally a module that had to be installed separately
[17:44:53] <Yhg1s> Armen: it still is.
[17:44:57] *** Joins: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs)
[17:45:02] <Armen> so... not really a native feature then
[17:45:08] <BtbN> It's more the ecosystem with setup.py/distutils than pip itself
[17:45:12] <Armen> just happens to be there most of the time
[17:45:14] <BtbN> There's also good old easy_install
[17:45:27] *** Joins: wender (~Wender@191.54.183.32)
[17:45:32] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:45:35] <very_sneaky> the reason it's "native" (ish) is because python has a centralised body that drives forward development - it's not an ISO langauge to my knowledge like c++ is. C++ relies on third parties to implement it's compilers
[17:45:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:45:57] <very_sneaky> just a different way of doing things, that results in fewer "official" ways to do things
[17:46:08] <zamba> can someone explain what this code does: https://dpaste.org/5MGx ?
[17:46:10] <BtbN> I'm not up to date on what's going on with C++ Modules. So something like that might actually be on the way.
[17:46:19] <zamba> or.. write it in some other way?
[17:46:39] <nedbat> zamba: if finds the first service with that uuid
[17:46:43] <nedbat> *it finds
[17:46:48] *** Joins: c10l (~c10l@89.34.167.207)
[17:46:57] *** Joins: Payam (~Payam@138.106.57.131)
[17:47:05] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:20] <zamba> so it could be written as for s in self.service: if s.uuid == "6e40fff0-b5a3-f393-e0a9-e50e24dcca9e": device_information_service = s ?
[17:47:38] <nedbat> zamba: yes
[17:47:52] <grawity> with a 'break' inside that if
[17:47:53] *** Quits: computeiro (~Wender@189.37.65.46) (Ping timeout: 248 seconds)
[17:48:01] <phy1729> Are metaclass and metatype distinct concepts?
[17:48:15] <grawity> since next() doesn't run the generator beyond the first result
[17:48:31] <zamba> https://dpaste.org/06qF/slim  ?
[17:48:34] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Quit: stoiclunchbox)
[17:48:46] <Yhg1s> phy1729: 'type' and 'class' are synonyms in Python, but 'metatype' is not something I've heard used before. What context was it used in?
[17:48:54] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[17:48:59] <grawity> zamba: those now do the same thing, yes
[17:49:04] <phy1729> Yhg1s: https://github.com/python/cpython/blob/main/Modules/_ctypes/_ctypes.c#L2583
[17:49:19] *** Quits: debayer (~debayer@2603-8000-cf00-0010-b0d1-acda-42ae-962c.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:49:20] <phy1729> The doc string has metatype too
[17:49:44] <Yhg1s> phy1729: it just means metaclass, yes.
[17:49:45] <Payam> Anyone know how to include images to a .deb file?
[17:49:46] <Payam> ?
[17:49:57] <Payam> The images in my directory won't get included in the package
[17:49:59] <phy1729> Yhg1s: Thanks
[17:50:49] <Yhg1s> Payam: which part is the problem, the installing the package with pip part, or the turning it into a debian package part?
[17:51:01] <Payam> turning it to debian package
[17:51:34] <Yhg1s> Payam: then perhaps a better place to ask would be a debian forum.
[17:51:59] <Payam> I think that would be done with setup.py
[17:52:09] <Payam> it should have some thing for including images and data
[17:52:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:52:18] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:52:33] <Yhg1s> Payam: well, that's why I asked what part was the problem. If the files are getting installed if you install with pip, setup.py is properly installing them.
[17:52:46] *** Joins: wyclif (~wyclif@user/wyclif)
[17:52:59] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:53:00] <Payam> no it doesn't seem to be included
[17:53:02] <no_gravity> Good Afternoon
[17:53:21] <Yhg1s> Payam: okay: make sure you are correctly listing the files as things to install, in your setup.py, setup.cfg or pyproject.toml.
[17:53:43] <Payam> yes I am
[17:53:56] <Payam> but it picks up only the python files
[17:54:00] <Payam> and not images and all files
[17:54:08] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[17:54:39] <Yhg1s> Payam: sounds like you *aren't* properly listing them then. Can you show the setup.py file and the project layout?
[17:54:48] <Payam> yes
[17:54:50] <Payam> a sex
[17:54:51] <no_gravity> Anybody here runing a Django project that involve user accounts?
[17:54:51] <Payam> sec
[17:54:57] <df_data> @jinsun I tried to change it from a list but i get the following error TypeError: Cannot perform 'ror_' with a dtyped [object] array and scalar of type [bool] i cannot use isin for the list so im trying df['Names'] == Names_List2
[17:55:17] <df_data> Names_list2 = 'John' just a single value
[17:56:26] <Payam> Yhg1s https://bpa.st/LQBQ
[17:57:18] <Yhg1s> Payam: where are you listing the files to install?
[17:57:26] *** Leonarbro_ is now known as Leonarbro
[17:57:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:58:05] *** Joins: wyclif (~wyclif@user/wyclif)
[17:58:06] <Payam> Yhg1s https://bpa.st/S7JQ
[17:58:52] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[17:58:55] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[17:58:59] <Yhg1s> Payam: setup.py doesn't use that Makefile. Where *in your setup.py file* are you telling it what data files to install?
[17:59:18] *** Joins: srhm (~ascii@user/srhm)
[17:59:50] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[18:00:10] <Payam> I have the include packages
[18:00:16] <Payam> is that what you mean Yhg1s
[18:00:50] <Yhg1s> Payam: I'm trying to find out if you left out the details about how you're actually telling setup.py to install the images you're saying aren't getting installed, but that you correctly listed in setup.py as needing installation.
[18:01:15] <Yhg1s> Payam: you need to tell setup.py what to install. You are curently only telling it about Python package directories -- directories with .py files.
[18:01:38] <Payam> how do I tell it?
[18:01:43] <Yhg1s> Payam: if you want it to install other files, you have to tell it to. https://setuptools.readthedocs.io/en/latest/userguide/datafiles.html
[18:02:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[18:03:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:03:56] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[18:04:22] <jinsun> df_data: can you paste the new code and the error that gives on https://bpa.st/+python+pytb, can't understand what you changed from the description you gave
[18:04:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:05:13] *** Joins: jaggz (~jaggz@user/jaggz)
[18:05:19] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[18:05:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:05:40] *** Joins: wyclif (~wyclif@user/wyclif)
[18:05:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:06:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:06:21] <jaggz> what multi-process/threading method should I use if I need to share audio samples between processes, while running them through a neural net
[18:06:38] <df_data> @jinsun thank you for the reply, i worked it out with () around them https://bpa.st/OQXQ
[18:06:47] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[18:06:47] <jaggz> (live-recording of audio, then classification with tensorflow)
[18:07:00] <jaggz> live capturing*
[18:07:21] <df_data> Now just got to make a list of all my values and make Names_list2 go through each of the values saving each csv with the name (couldnt do it the other way)
[18:07:22] <SamuelMarks> jaggz - implement it at the codec level
[18:07:31] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[18:07:31] <jaggz> hm?
[18:07:35] <jinsun> df_data: okay great, yes you have to put parens around those == because | gets more preference otherwise
[18:07:46] <SamuelMarks> jaggz - Anything else will have too much latency
[18:08:39] <jaggz> my neural classification itself might be slow, so I expect I'll have to feed a queue but have samples skipped by whatever's handing it off to the neural net
[18:08:57] <SamuelMarks> nah that's way too slow
[18:09:04] <SamuelMarks> you need to do it inline
[18:09:14] <jaggz> inline?
[18:09:55] <SamuelMarks> in codec
[18:10:02] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[18:10:07] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[18:10:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:10:09] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[18:10:10] <SamuelMarks> maybe with callbacks of constant size lists
[18:10:12] <jaggz> what codec?
[18:10:23] <SamuelMarks> jaggz - your own; or an off the shelf one
[18:10:27] <jaggz> I'm using sounddevice to get data from the microphone
[18:11:21] <SamuelMarks> Oh also you might want to bump this issue https://github.com/tensorflow/io/issues/50
[18:11:31] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[18:11:40] *** Joins: wyclif (~wyclif@user/wyclif)
[18:12:49] *** Leonarbro_ is now known as Leonarbro
[18:12:52] <jaggz> good find
[18:13:02] *** Quits: y1n (~y1n@84-115-64-49.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[18:13:16] <jaggz> in the meantime, I'm thinking I can have one process just recording the mic, and maybe passing it into a fifo
[18:13:26] <jaggz> I'm doing .25s audio snippets at a time right now
[18:13:49] <jaggz> the "recording" part needs to not miss anything though, but the classification can miss stuff
[18:14:07] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[18:14:08] *** Joins: maum (~maum@1.245.147.30)
[18:14:09] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Client Quit)
[18:14:11] <maum> hello
[18:14:22] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[18:14:28] <df_data> @jinsun any idea why this would come back empty https://bpa.st/IFUA
[18:14:45] <jaggz> I'm not sure what you mean about codec stuff.. I'm not encoding or anything.. just reading raw data and handing it off to the net right now
[18:15:05] <maum> how can I change button color in tkinter? http://codepad.org/rzYAEJ0m
[18:15:08] *** Quits: masber (~masber@vpn-126.cscs.ch) (Quit: Client closed)
[18:15:26] <maum> how can I change button color whenever I click the button in tkinter? http://codepad.org/rzYAEJ0m
[18:15:40] <jinsun> df_data: that code will not even run, the 1st line is syntax error
[18:16:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:16:46] <stealth_> df_data, whats up with the first line? its got space and no = and missing '
[18:16:53] <jaggz> maum, did you look it up at all?
[18:16:57] <jaggz> maum, https://stackoverflow.com/questions/41705631/python-tkinter-how-to-change-color-of-button-on-press
[18:17:00] *** Joins: wyclif (~wyclif@user/wyclif)
[18:17:08] *** Quits: X4 (~X4@2a02:908:178:1900:95aa:d17:981d:a57a) (Quit: Client closed)
[18:17:12] <stealth_> df_data, you should use linter with your code editor so it catches silly mistakes like that.
[18:17:13] <jaggz> maum, from a search for: tkinter change style onpress
[18:17:15] <df_data> never mind i think i know why, the CSV was modifying the dataframe all good
[18:18:00] <df_data> thanks guys sorry about the typo's
[18:18:18] <maum> jaggz: I like to use access_seat_numb function in my code
[18:18:31] <jaggz> maum, no experience with it myself
[18:18:38] <jaggz> SamuelMarks, maybe shared mem
[18:19:40] <SamuelMarks> YEAH
[18:19:46] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[18:19:48] <SamuelMarks> or just mmap
[18:19:57] <df_data> so the dataframe is getting modified once and thats clearing it for the loop so the other values are blank because its search for the first item and resaved the dataframe as df
[18:19:58] <SamuelMarks> the main thing is you don't want to buffer too much
[18:20:08] *** Joins: srhm (~ascii@user/srhm)
[18:20:10] <SamuelMarks> otherwise lag will be noticable
[18:21:27] <df_data> @jinsun do i need to add a count for df so it changes each time and doesnt modify the df value or is there some other way to approach this?
[18:21:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:22:19] <df_data> repaste https://bpa.st/CBQA
[18:22:22] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:22:30] *** Joins: wyclif (~wyclif@user/wyclif)
[18:23:08] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:23:22] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:25:29] <jinsun> df_data: just don't reuse the name df, instead of `df = df[...]` do `df1 = df[...]` then in the next lines decide whether you want the old unfiltered df or the new df1 and change accordingly
[18:26:08] <jaggz> SamuelMarks, yeah.. should only be the past few seconds.. maybe more if some processing is needed
[18:26:14] <jaggz> (if some more-elaborate processing)
[18:26:40] <jaggz> (although it's possible I can hand that off to another process)
[18:27:00] <jaggz> https://programming.vip/docs/python-multiprocess-lock-and-shared-memory.html
[18:27:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:27:35] <df_data> so basic lol, thank you @jinsun you're a legend.
[18:27:36] <jinsun> df_data: btw that huge or filter can be shortened a lot, something like `df_filtered = df[(df[[f"Names{x} for x in range(1, 10)]] == Names_list2).any(axis=1)]`
[18:28:06] *** Joins: wyclif (~wyclif@user/wyclif)
[18:28:39] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 268 seconds)
[18:28:44] <jinsun> but don't bother with that if it looks confusing
[18:28:52] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 245 seconds)
[18:28:53] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[18:29:38] <stealth_> df_data i am not sure what `df` is, maybe your code should be something like this? https://bpa.st/EPTA
[18:30:44] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[18:31:19] <df_data> @stealth_ what im doing is seeing if any of the Names_list2 values are in the Names1,Names2, Names3 headers, if they are it saves the CSV with the name.
[18:31:46] <df_data> @jinsun thanks once again that makes life easier
[18:31:52] <stealth_> df_data, ya, rather then checking for each, key, you can just look at the value
[18:32:41] *** Quits: hyper_dave (~hyper_dav@197.156.107.121) (Ping timeout: 248 seconds)
[18:32:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:33:09] <df_data> ill have a play and see what you mean
[18:33:14] <stealth_> df_data, you also overwrite `df = df[...]` so for next loop, its not searching from original `df`
[18:33:33] *** Joins: wyclif (~wyclif@user/wyclif)
[18:33:53] <df_data> renaming df to df1 solved that i think
[18:36:10] *** Joins: hyper_dave (~hyper_dav@197.156.107.121)
[18:37:12] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[18:39:01] <sybariten> phy1729: hey, i went to bed before your answer. Thank you!!   May i ask whats actually going on there?  For instance, why is the .join needed? Couldnt i just for-loop over each item in the list and do some kind of double prints, one for [0] and one for [1] ?
[18:39:25] <sybariten> wait thats even a double for loop you have thre
[18:39:43] <phy1729> sybariten: sure you could loop rather than join, but I think the join is more idiomatic
[18:40:05] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[18:41:11] *** Joins: magla (~gelignite@55d4ac4e.access.ecotel.net)
[18:41:22] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 245 seconds)
[18:42:08] *** Joins: computeiro (~Wender@189.37.65.46)
[18:44:04] *** Quits: wender (~Wender@191.54.183.32) (Ping timeout: 268 seconds)
[18:45:03] *** Joins: Mudkip875 (~blackred@173.208.202.60)
[18:45:44] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:45:45] <sybariten> phy1729: aha aha , and why is it, if you excuse my naive question, that i couldnt just do something like this?  for country, amount in gdp_per_capita: print("{} has {} per capita".format(country, amount)) ?
[18:45:52] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:45:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:46:16] <sybariten> i mean that syntax may be way off but maybe my idea shines through. It just seems shorter. So i've probably missed something fundamental
[18:46:50] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[18:47:47] *** Joins: akk (~akk@75.161.157.26)
[18:50:25] <zware> sybariten: If you're just printing and not doing anything else with the data, `for country, gdp_ in gdp.items(): print(f'{country} has {gdp_ / populations[country]} per capita')` would be fine
[18:50:52] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[18:51:22] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 256 seconds)
[18:51:24] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[18:52:04] <stealth_> sybariten, once you have the structure right `{'country': [population, gdp, some_combination]}` then you can sort it however you want.
[18:56:15] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:56:50] <stealth_> sybariten, maybe use something like dataclasses to properly store and get https://docs.python.org/3/library/dataclasses.html
[18:56:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[18:56:57] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[18:57:02] *** Joins: d0ku (~d0ku@188.47.121.244.ipv4.supernova.orange.pl)
[18:57:03] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[18:57:13] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 248 seconds)
[18:57:16] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:58:05] <sybariten> zware: but.. you're looking back at the gdp structure. Do i need any of that or populations, once i've done the operation which is in my script? I make a new dict.
[18:59:22] <sybariten> stealth_: aha aha. See my reply to zwa above
[19:00:07] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[19:00:52] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[19:00:56] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:99b8:7b50:6d30:ffec)
[19:01:05] *** Joins: sebastianos (~sebastian@user/sebastianos)
[19:01:09] <stealth_> sybariten, i am not sure what your script is or your end goal is. normally ppl store such info into a db (like sqlite), then you can call for data however you want it.
[19:01:12] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[19:01:34] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 256 seconds)
[19:01:35] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[19:01:37] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[19:01:58] *** Joins: srhm (~ascii@user/srhm)
[19:02:56] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:03:08] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[19:03:24] *** Joins: hifi (hifi@m.vi.fi)
[19:03:32] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 272 seconds)
[19:04:32] <zware> sybariten: Right, why do you need the new dict?  If your only goal is to print the 'country has x per capita' message per country, you don't need it
[19:04:37] <sybariten> stealth_: yeah yeah, absolutely. This is for a school exercise. We were given data in this way, some values for a big amount of countries were listed in one dict, and then some basic characteristic data for those countries were kept in another. I agree it looks a bit like how you'd do with a RDBMS, i dunno why they chose to present the data like that.
[19:05:14] *** Joins: paravida (~myChateau@user/paravida)
[19:05:45] <sybariten> stealth_: the end goal is various types of sort, but thats not really visible or relevant in my paste here cause it's just a model of the data. The goal here was to combine data structures. And i think i need to do it as a new dict, for clarity. But i just wanted to pretty-print some values from that dict afterwards
[19:06:36] <sybariten> zware: well in reality my data looks a little bit different althouygh similar, but i _think_ that the best way for me to solve it is to just build up new dicts and then work on those.
[19:06:42] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[19:07:18] <stealth_> sybariten, it would be normal to data to be provided in a dict. its your job to store it accordingly. i gave that 1 example how you can rearrange the data, maybe you can start from there.
[19:07:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[19:08:00] *** Joins: y1n (~y1n@84-115-64-128.wifi.dynamic.surfer.at)
[19:08:27] <rendar> i'm afraid to invest some time to learn a library that won't be developed anymore, or has a lot of bugs and makes my production code to suffer.. so i ask: is anyio something like that, or not?
[19:08:36] *** Joins: oriba (~oriba@dynamic-089-014-170-143.89.14.pool.telefonica.de)
[19:08:48] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[19:09:11] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:09:21] <oriba> how to access the parsing table from PLY? I want to print some kind of "allowed commands" help if the parse fails (parsing cli args)
[19:09:32] <stealth_> sybariten, can you provide link to your paste again
[19:10:01] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[19:11:08] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 252 seconds)
[19:11:26] *** Joins: ska (~ska@user/ska)
[19:11:48] *** Joins: rsrx (~rsrx@103.225.150.81)
[19:11:48] <ska> Is there  any reason not to use named parameters in a class __init__?
[19:11:49] <sybariten> stealth_: sure.  https://bpa.st/XE3A   one dict provides gdp for the whole country, one dict provides the number of people in said country. ( In the end i may want to present a sorted "text output" of the gdp per capita in these countries, from highest to lowest )
[19:12:32] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Killed (NickServ (GHOST command used by xheimlic1)))
[19:12:39] *** Joins: xheimlic1 (~xheimlich@179.218.1.150)
[19:12:49] <xheimlic1> Is there a channel for more generic programming questions?
[19:12:50] <sybariten> stealth_: like i said though, in my actual exercise case, the dicts are a little bit more convoluted so i definitely am leaning towards creating new dicts , in this way
[19:12:53] <ska> Or is there a compelling reason to use __init__(self, **kwargs) instead?
[19:13:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 272 seconds)
[19:13:18] <xheimlic1> I'm a Python user but I have vague, overarching feelings of impotence.
[19:14:09] <sybariten> interesting choice of words....
[19:14:20] <stealth_> sybariten, sure, new dict with values stored in dict, ... there are so many ways to go about it!
[19:14:40] <ska> xheimlic1: ##programming maybe
[19:14:47] *** Joins: dcaro_ (~dcaro@user/dcaro)
[19:15:09] <sybariten> stealth_: more than one way to skin a cat eh
[19:16:07] <sybariten> stealth_: i guess in a real world production case, _maybe_ there is an incentive to not always create a whole new dict from a structure, in order to save resources?  Or maybne that was a 70s issue more
[19:16:22] <sybariten> When floppies were all the rage
[19:16:33] <stealth_> sybariten, programing is all about manipulating of bit/code/text...
[19:16:56] <sybariten> xheimlic1: freenode used to have #programming , IIRC . Maybe they moved here too?
[19:17:28] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 272 seconds)
[19:17:28] *** dcaro_ is now known as dcaro
[19:17:40] <stealth_> sybariten, event though database table/column/rows come from the past, they are very much still valid way of storing data.
[19:18:18] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:18:27] *** Quits: y1n (~y1n@84-115-64-128.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[19:18:55] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:19:37] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 248 seconds)
[19:19:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:99b8:7b50:6d30:ffec) (Ping timeout: 252 seconds)
[19:20:14] <stealth_> even*
[19:20:17] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[19:21:44] *** Joins: torandu (~sean@94.10.125.197)
[19:21:54] <sybariten> yes sure
[19:21:59] *** Quits: axisys_ (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[19:22:55] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[19:23:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e) (Quit: Leaving)
[19:24:20] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[19:25:32] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[19:26:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[19:26:34] *** Joins: waynew (~wayne@user/waynew)
[19:27:13] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:27:14] *** summonner1 is now known as summonner
[19:27:45] *** Joins: LiftLeft (~LiftLeft@212.102.58.168)
[19:28:22] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[19:28:38] *** Quits: ldlework (~hexeme@user/hexeme) (Quit: co'o ro do)
[19:29:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:29:04] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[19:29:58] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[19:30:05] *** Joins: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net)
[19:30:39] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:30:46] *** Quits: hyper_dave (~hyper_dav@197.156.107.121) (Ping timeout: 272 seconds)
[19:31:20] *** Joins: y1n (~y1n@84-115-64-49.wifi.dynamic.surfer.at)
[19:31:29] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[19:31:33] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 268 seconds)
[19:32:12] *** Joins: hexeme (~hexeme@user/hexeme)
[19:32:23] *** Joins: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net)
[19:32:38] *** Joins: ouzel8_ (~ouzel8_@110.148.212.146)
[19:32:46] <ouzel8_> Hi everyone!
[19:32:50] <yogoyo> hello
[19:33:14] <ouzel8_> I am looking for a shorthand pythonic approach for creating a list with x 0 elements.
[19:33:22] <ouzel8_> Any ideas?
[19:34:14] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 252 seconds)
[19:34:21] *** Quits: summonner (~summonner@188.24.45.0) (Quit: Leaving)
[19:34:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[19:35:10] *** Joins: doko (~doko@2a02:8106:1a:7600:397a:f99e:919a:179b)
[19:35:19] *** Joins: hyper_dave (~hyper_dav@197.156.77.243)
[19:35:22] <stealth_> ouzel8_, try asking that question again, its not clearly what you are asking for
[19:35:52] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 268 seconds)
[19:35:53] *** Joins: sharperguy (~sharpergu@78.47.72.153)
[19:35:58] <ouzel8_> I am looking for a shorthand way to create a list of n zeroes.
[19:36:08] <ouzel8_> i.e. [0, 0, 0, 0, ... n]
[19:36:17] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:36:24] <stealth_> ouzel8_, `[0 for _ in range(3)]`
[19:36:24] <ouzel8_> test_list = [0] * n
[19:36:29] <stealth_> or that
[19:36:35] <stealth_> depends
[19:36:38] *** Joins: RedAero (~RedAero@20014C4E1C9D6900E5A907E1FAF69521.dsl.pool.telekom.hu)
[19:37:11] <ouzel8_> stealth_ can you explain how it depends, or is it coding preference?
[19:38:19] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[19:38:31] <stealth_> ouzel8_, as in depends what your use-case is, nothing technical with that bit of code
[19:39:30] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:40:38] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[19:40:43] <ouzel8_> stealth_ in this case preinitialising an array for an algorithm
[19:41:03] <ouzel8_> @stealth in the docs this example is given `squares = [x**2 for x in range(10)]`
[19:41:25] *** Quits: sharperguy (~sharpergu@78.47.72.153) (Ping timeout: 268 seconds)
[19:41:50] <stealth_> ouzel8_, ok, ya now you are doing calculation vs just defining 0, 1**2, 2**2, ..
[19:42:41] <ouzel8_> @stealth_ yes but in my use case, I only require the array initialised with zeros. Is this what you mean by depends on the usecase?
[19:43:08] <stealth_> ouzel8_, yes, for your case `[0]*n` is valid
[19:43:30] <ouzel8_> @stealth_ also can you explain, or refer in the docs to what the _ operator means?
[19:43:43] <ouzel8_> @stealth_ ah, I understand
[19:44:05] <stealth_> ouzel8_, `_` just means ignore (to put it simply)
[19:44:46] <ouzel8_> @stealth_ ah, thank you very much
[19:45:14] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 252 seconds)
[19:46:12] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[19:47:06] <sybariten> a question about error messages....    heres my structure   {'kenya': 1807.1143237587978, 'russia': 11805.555555555555, 'china': 10228.89842632332, 'belgium': 46509.59860383944, 'chile': 14881.26649076517}    when i try doing a for loop on this , erroneously of courtse, python says  ValueError: too many values to unpack (expected 2)   I'm a bit confused by that message. I'm looping over the dicrt,
[19:47:08] <sybariten> which i realize should maybe only give the keys ?
[19:47:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[19:47:31] <grawity> please show your loop
[19:47:42] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:47:52] *** Joins: wyclif (~wyclif@user/wyclif)
[19:48:02] <sybariten> and i'm asking to loop with country,value ... which is two values. But i would rather expect pytyhon to say: valuerror: to _few_ values to unpack (expected 2)
[19:48:23] <stealth_> sybariten, `for key, value in countries.items():` you are most likely missing the `.items()` part
[19:48:41] <sybariten> cause keys are just one value...          grawity , i did for country,number in gdp_per_capita1: print(country)
[19:49:02] <sybariten> stealth_: thats true, i did not itemize it ... i'm just a bit confused over what too _many_ values means
[19:49:03] *** Joins: raub (~Raub_Voge@cpe-107-15-44-154.nc.res.rr.com)
[19:49:10] <stealth_> sybariten, `gdp_per_capita1.items():`
[19:49:34] <grawity> right, so you're not looping over [("kenya", 1807), ("russia", 11805), ...] -- you're actually looping over ["kenya", "russia", ...]
[19:49:50] <grawity> if you just iterate over a dict, it's the same as using .keys()
[19:50:04] <sybariten> is that _fewer_ values (just one (the country)) than what python expects (two)
[19:50:04] <grawity> so your first iteration actually does: key, value = "kenya"
[19:50:12] <sybariten> arrgh s/is/isnt
[19:50:19] <raub> Stupid question: if I pass a list to a function, is the list passed or a copy of it (like a variable would)?
[19:50:20] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:50:27] <grawity> and since strings are iterable, "kenya" has 5 values
[19:50:35] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[19:50:36] <sybariten> grawity:ooooh .....
[19:50:50] <sybariten> it splits it to chars, somewhere?
[19:50:52] <grawity> yes
[19:51:00] <sybariten> well that explains it.  :)  thanks
[19:51:30] <grawity> e.g. a,b,c = "xyz" gives the same result as a,b,c = ["x", "y", "z"]
[19:51:40] <sybariten> damn i wouldnt have thought of that, haha
[19:51:44] <grawity> raub: the actual list object is passed
[19:51:57] <stealth_> raub, the list is passed to the function, you can "update" that list and the list outside value is updated as well.
[19:52:12] <stealth_> outside function is updated as well*
[19:52:48] <raub> grawity: That explains it. So I need to create a list inside function to return a diff/massaged list
[19:52:50] <grawity> if you want a copy, you have to explicitly make a copy and pass that, e.g. myfunc(list(mylist)) or myfunc([*mylist]) or myfunc(copy.copy(mylist)) -- not 100% sure which is preferred generally
[19:52:58] <grawity> or yes, make a copy inside the function
[19:53:10] <stealth_> raub, make sure not to do `def my_function(one=[])` thats a gotcha
[19:53:21] <grawity> in general python is "pass by object"
[19:54:30] <ouzel8_> I am interested in printing each element of a array on a single line separated by tabs. using a foreach loop, and the print function prints each on a new line.
[19:54:38] <ouzel8_> Any ideas?
[19:54:51] <raub> Which option is "the proper way"?
[19:55:10] <grawity> ouzel8_: you could use print(..., end="") to avoid the newline, or even end="\t"
[19:55:21] *** Quits: ubert (~Thunderbi@178.165.160.157.wireless.dyn.drei.com) (Ping timeout: 248 seconds)
[19:55:23] <grawity> ouzel8_: but you can also do away with the loop, and use print(*the_whole_array, sep="\t")
[19:55:35] <SnoopJ> you could also do `myfunc(mylist.copy())`
[19:55:41] <SnoopJ> (which I would personally prefer)
[19:55:51] *** Quits: rwb (~augh@theguntretort.com) (Remote host closed the connection)
[19:55:56] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[19:56:04] *** Joins: rwb (~augh@theguntretort.com)
[19:56:10] <raub> SnoopJ: I htought I would want to use deepcopy()
[19:56:36] <stealth_> raub, do you have list within list?
[19:56:41] <grawity> I'm not sure if there's a single "the proper way"
[19:57:07] <SnoopJ> raub, you would want deepcopy() where a shallow copy wouldn't suffice. There isn't enough information in your question to know whether you do or don't need that.
[19:57:26] <raub> stealth_: I think this is a list of dicts
[19:57:57] <grawity> hm yeah, if you want a deep copy, then deepcopy() is the only one that does it
[19:58:04] <grawity> depends on whether you're actually altering those dicts themselves
[19:58:11] <grawity> or only shuffling the parent list
[19:58:28] <ouzel8_> grawity thank you!
[19:58:45] <stealth_> raub, think of it like so `List[reference_to_dict1, reference_to_dict2, ...]` even if make a copy, the reference still stay the same.
[19:59:07] <grawity> ouzel8_: hm though I think the most common method would be to print "\t".join(the_array)
[19:59:09] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:59:16] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[19:59:34] <stealth_> raub, you are doing `NewList[reference_to_dict1, reference_to_dict2, ...]` inside reference are the same
[19:59:41] <ouzel8_> @grawity ah alright
[19:59:53] <raub> I was taught to always work on a copy and only change the original if I have a damn good reason. And then be explicit about that
[20:00:25] <stealth_> python is a reference based language
[20:01:02] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:02:30] *** Joins: ubert (~Thunderbi@178.165.183.198.wireless.dyn.drei.com)
[20:02:44] *** Quits: mickey86 (~user@user/mickey) (Remote host closed the connection)
[20:02:56] *** Joins: summonner (~summonner@188.24.45.0)
[20:03:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:03:17] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:03:43] *** Joins: fdee (~fdee@178.49.152.151)
[20:03:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:04:01] <fdee> is it possible to share an int variable between scripts?
[20:04:13] <stealth_> raub, https://bpa.st/NQJA
[20:04:22] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[20:04:23] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[20:04:37] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[20:04:48] *** Joins: srhm (~ascii@user/srhm)
[20:05:47] <stealth_> fdee, of course!
[20:06:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:06:09] <grawity> fdee: what's the actual situation
[20:06:33] *** Quits: ubert (~Thunderbi@178.165.183.198.wireless.dyn.drei.com) (Ping timeout: 248 seconds)
[20:06:58] *** Joins: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net)
[20:07:26] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[20:07:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:09:00] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 256 seconds)
[20:09:13] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[20:09:16] *** Joins: mickey86 (~user@user/mickey)
[20:11:02] *** Quits: Macuser (~Macuser@2600:1003:b440:ad72:ac2e:6fee:dd7c:f236) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:11:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:11:53] *** Quits: y1n (~y1n@84-115-64-49.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[20:12:21] *** Quits: mbrndtgn5 (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[20:12:36] <fdee> i want two scripts to share a variable
[20:12:55] *** Joins: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com)
[20:13:04] *** Joins: mbrndtgn5 (~mbrndtgn@undecidable.de)
[20:13:47] *** mickey86 is now known as mickey
[20:13:48] <SnoopJ> fdee, you can import values from other packages (in this case, another file)
[20:14:20] *** Joins: ano (~weechat@user/ano)
[20:14:26] <fdee> but can I import int?
[20:14:29] <SnoopJ> sure
[20:14:58] <SnoopJ> https://bpa.st/VWOA
[20:14:59] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:15:07] *** Quits: stac47 (~stac@2a01:cb1d:16b:7e00:4dd6:457b:7d1f:575e) (Ping timeout: 245 seconds)
[20:15:12] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:15:36] *** Quits: Keira (~k@lulzsec.co.uk) (Quit: Keira)
[20:16:01] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:16:17] <ouzel8_> Is there a better way to increment variables, at the moment I use `i += 1`
[20:16:28] <SnoopJ> ouzel8_, better how?
[20:16:47] <ouzel8_> SnoopJ I am looking for a shorter way
[20:17:00] <ouzel8_> Something like the C-style `i++`
[20:17:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[20:17:52] *** Joins: wyclif (~wyclif@user/wyclif)
[20:17:59] <SnoopJ> ouzel8_, `val += 1` is the shortest spelling of an integer increment
[20:18:12] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:18:19] <ouzel8_> SnoopJ Alright, thank you.
[20:18:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:19:03] *** Joins: ice9 (~ice9@user/ice9)
[20:19:32] *** Quits: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e) (Ping timeout: 272 seconds)
[20:20:15] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[20:20:48] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:21:12] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:22:17] *** Joins: ckdcreation (~ckdCreati@147.55.133.131)
[20:22:32] <stealth_> sybariten, here you go https://bpa.st/EJZA you can read up on how this works https://towardsdatascience.com/searching-or-sorting-a-list-of-objects-based-on-an-attribute-in-python-6cffb26a57c3
[20:22:34] <kittonian> hi all. i know this is not strictly python, but it has to do with a python product installed into zope5 called Products.PluggableAuthService. I have it installed via pip into my virtual env and while it shows up in the zope interface and I can add a pluggable auth service, none of the plugins are showing up and I can't figure out why. There's very little documentation on this thing, especially for troubleshooting. I've ensured p
[20:22:34] <kittonian> ermissions are correct, stopped/started zope, and confirmed that all the plugins are in the plugins folder. Can't figure it out.
[20:22:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:23:20] *** Joins: wyclif (~wyclif@user/wyclif)
[20:24:06] <rendar> if i'm writing a python C plugin, i can pass around all python objects I want just by taking 1 pointer, right?
[20:24:18] *** Joins: neilthereildeil (~neilthere@70.21.11.5)
[20:24:52] *** Quits: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 256 seconds)
[20:25:13] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[20:25:19] <SnoopJ> rendar, you can refer to exactly one PyObject with one (PyObject*) pointer
[20:25:23] *** Joins: y1n (~y1n@84-115-65-191.wifi.dynamic.surfer.at)
[20:25:29] <rendar> yes, that's what i wanted to say
[20:25:54] <rendar> SnoopJ: so, to create a list of py objects, i just have to allocate sizeof(void*)*N
[20:26:23] *** Lando-SpaceIzzle is now known as Lando-SpacePimp
[20:27:02] <SnoopJ> rendar, that's the memory N pointers would take up, if you want a *list* of them, you'll have to allocate whatever the list needs, too.
[20:27:23] <rendar> yes, right
[20:27:59] *** Quits: matkor (~matkor@93.179.197.152) (Quit: Konversation terminated!)
[20:28:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:28:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:28:55] <SnoopJ> ideally you shouldn't be worrying about that kind of detail, just use the existing objects (i.e. PyList_New(N))
[20:29:16] *** Joins: audiophile_ (~audiophil@user/audiophile)
[20:29:51] *** Joins: audiophile (~audiophil@user/audiophile)
[20:30:35] <stealth_> hey SnoopJ do you wana give this a look https://bpa.st/EJZA why the `min` is returning wrong result!
[20:30:50] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:31:18] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:31:28] <audiophile> implementing __lt__ in a class is sufficient for comparison but that's only for py3 right?
[20:31:41] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:31:51] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:32:07] <stealth_> o, its not being sorted using `key` but only returns that value! err
[20:32:21] <nedbat> audiophile: that will also work in py2
[20:32:33] <audiophile> ok thanks
[20:32:40] <audiophile> and hi nedbat nice to see ya around
[20:33:00] <nedbat> audiophile: hi :)
[20:33:22] *** Joins: Barones (~Barones@2804:48dc:8500:0:d8d9:bd51:346:2891)
[20:33:28] <rendar> SnoopJ: well, in theory yes, but my aim is to have a table of py objects, so i want to allocate a bunch of pointers
[20:33:56] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 256 seconds)
[20:33:57] *** Joins: stdout (~stdout@50.115.255.72)
[20:33:57] <nedbat> rendar: why not use a Python list?
[20:34:03] *** audiophile is now known as audiophile_
[20:34:40] <rendar> nedbat: because i'm trying to put those py objects in a n-dimensional table, it's a quite complex data structure
[20:34:58] <rendar> see that as a kind of panda's DataFrame
[20:35:54] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[20:36:11] <rendar> one of the core features of pandas is that it allocates data with malloc, so even very big timeseries has little memory overhead
[20:36:20] *** Joins: srhm (~ascii@user/srhm)
[20:36:21] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[20:36:35] *** Joins: lethu (~lethu@196.117.122.155)
[20:36:38] *** Quits: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[20:36:48] *** dcaro is now known as dcaro_away
[20:36:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:36:58] *** Quits: lethu (~lethu@196.117.122.155) (Changing host)
[20:36:58] *** Joins: lethu (~lethu@user/lethu)
[20:37:14] *** Quits: lethu (~lethu@user/lethu) (Client Quit)
[20:37:33] *** Joins: lethu (~lethu@user/lethu)
[20:37:48] <audiophile_> is there any advantage to converting a collections.counter to dict?
[20:37:52] *** Joins: wyclif (~wyclif@user/wyclif)
[20:37:54] *** Quits: y1n (~y1n@84-115-65-191.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[20:37:55] <audiophile_> or any case where taht makes sense
[20:38:01] *** Quits: hyper_dave (~hyper_dav@197.156.77.243) (Quit: WeeChat 3.2)
[20:38:09] <audiophile_> it feels 'icky' to have a different data type other than the standard ones
[20:38:31] *** Joins: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com)
[20:38:33] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 248 seconds)
[20:39:07] <zware> audiophile_: collections.Counter *is* a dict
[20:39:22] *** Joins: xnbq (~xnbq@user/xnbq)
[20:39:40] <zware> audiophile_: Or, rather, *a* collections.Counter is a dict
[20:39:58] *** Quits: bikeshedder (~bikeshedd@2001:a62:14b5:ae01:4e2b:3279:e73c:d2b6) (Quit: Leaving)
[20:40:18] <audiophile_> OH!
[20:40:38] *** Quits: rsx (~dummy@ppp-188-174-136-60.dynamic.mnet-online.de) (Quit: rsx)
[20:40:44] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:40:44] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 256 seconds)
[20:40:58] <audiophile_> is it like a subclass of dict? because it has other methods like most_common()
[20:41:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:41:49] <supakeen> "A Counter is a dict subclass for counting hashable objects."
[20:41:50] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e)
[20:41:54] <supakeen> https://docs.python.org/3/library/collections.html#collections.Counter
[20:42:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[20:43:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:43:41] *** Quits: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[20:45:18] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[20:45:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:46:46] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 272 seconds)
[20:47:06] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:f8f2:84a2:79d0:4f6f) (Ping timeout: 240 seconds)
[20:51:19] *** Joins: audiophile (~audiophil@user/audiophile)
[20:51:36] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[20:52:05] <kittonian> never mind. i figured it out
[20:52:08] *** Quits: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Quit: Leaving)
[20:53:07] *** Joins: audiophile__ (~audiophil@user/audiophile)
[20:53:22] <petaflot> hello! anyone know how to set A4 paper size when using pylatex?
[20:53:46] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 256 seconds)
[20:53:53] *** audiophile__ is now known as audiophile_
[20:54:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:54:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:54:48] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:55:30] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:55:57] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 245 seconds)
[20:55:59] <petaflot> for some obscure reason it's defaulting to US letter and this ust ruined my day (and possibly more)
[20:58:33] *** Joins: hyper_dave (~hyper_dav@197.156.77.243)
[20:58:33] *** Joins: dermato (~dermatobr@154.21.23.75)
[20:59:44] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[21:00:27] <jinsun> petaflot: seems like it would go in document_options in the Document constructor, pylatex.document.Document(..., document_options=["a4paper"])
[21:01:20] <jinsun> because in latex you do \documentclass[a4paper]{article} in the beginning, to set a4paper
[21:01:34] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:05:42] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[21:09:02] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[21:09:07] *** Joins: ano (~weechat@user/ano)
[21:09:48] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:12:39] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:fd24:2e5d:b6a0:9496)
[21:14:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:15:01] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[21:16:32] *** Quits: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[21:18:11] *** Joins: nathanjell (~Nathan@64.141.52.164)
[21:19:36] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[21:20:59] *** Joins: dbristow (~dbristow@user/dbristow)
[21:21:19] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 268 seconds)
[21:23:46] *** Quits: neilthereildeil (~neilthere@70.21.11.5) (Ping timeout: 246 seconds)
[21:25:07] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 245 seconds)
[21:26:59] *** Quits: hyper_dave (~hyper_dav@197.156.77.243) (Ping timeout: 252 seconds)
[21:28:51] *** Quits: andlabs (~andlabs@pool-72-69-43-115.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:29:57] *** Joins: wender (~Wender@179.104.244.247)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[21:30:14] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:30:29] <bjs> audiophile_: it happens to be a subclass yeah but it doesn't matter really, you can do everything you'd do with a dict with a Counter. e.g. index and .get() and all the usual MutableMapping things
[21:30:43] <cloudbender> I don't understand why I am seeing this error
[21:30:46] <cloudbender> https://gist.github.com/cloudbender/c8eaaa1cf85b87a5d525797fef366859
[21:30:52] <audiophile_> gotcha, that's good enough for me, bjs
[21:32:12] *** Quits: computeiro (~Wender@189.37.65.46) (Ping timeout: 245 seconds)
[21:33:48] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[21:33:54] <bjs> cloudbender: you forgot self
[21:34:07] <bjs> cloudbender: methods always take `self` as the first argument.
[21:34:16] <cloudbender> dammit sorry
[21:34:19] <cloudbender> noob
[21:34:36] <bjs> cloudbender: it's not your fault,  we all make this exact mistake. It's Python's fault for not telling you with a better error.
[21:35:25] <cloudbender> worked with stackless on a tiny project years ago, forgot most of what I remembered
[21:35:32] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[21:35:44] <cloudbender> @bjs thanks
[21:36:38] *** Joins: Betal (~Betal@user/betal)
[21:36:39] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Client Quit)
[21:37:58] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 256 seconds)
[21:39:28] *** Joins: godofsea (~dark@146.196.46.15)
[21:39:33] <godofsea> Hi
[21:39:35] *** Joins: cloudbender55 (~cloudbend@user/cloudbender)
[21:39:53] *** Quits: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net) (Ping timeout: 248 seconds)
[21:40:25] *** Quits: Allegretto (~allegrett@89-186-97-71.pool.digikabel.hu) (Ping timeout: 248 seconds)
[21:43:05] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 248 seconds)
[21:43:07] <godofsea> I am trying to compare 2 most recent versions of a file in a directory of multiple versions of that file. What's the best way to find the those 2 files ?
[21:43:52] *** Quits: cloudbender55 (~cloudbend@user/cloudbender) (Ping timeout: 245 seconds)
[21:43:57] *** Joins: zebrag (~chris@user/zebrag)
[21:44:10] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[21:44:49] <godofsea> Each file is has a timestamp on it's name in this format : %d_%m_%Y_%H_%M_%S , if that's helpful
[21:45:38] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[21:45:47] *** Joins: gggpkm (~gggpkm@60.10.23.162)
[21:48:03] <stealth_> godofsea, if  you have access to when file was created vs modified sure.
[21:48:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:48:54] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[21:49:20] *** Joins: srhm (~ascii@user/srhm)
[21:49:37] *** Joins: Betal (~Betal@user/betal)
[21:49:55] <godofsea> stealth_, yeah I do have access to them... The files are automatically generated so both of them should be the same... I didnt frame my question properly, there are different files in a directory, how do i find the last 2 modified files ?
[21:49:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e) (Quit: Leaving)
[21:50:05] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 252 seconds)
[21:50:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c161:5dea:b116:d76e)
[21:50:26] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 256 seconds)
[21:51:03] <stealth_> godofsea, scan the dir and look for its `stat.ST_MTIME`
[21:51:05] *** Quits: gggpkm (~gggpkm@60.10.23.162) (Ping timeout: 248 seconds)
[21:52:00] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[21:52:14] <godofsea> But that gives the time in seconds
[21:52:41] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[21:52:41] *** Joins: matsaman (~matsaman@user/matsaman)
[21:53:01] <godofsea> stealth_, How do I find the latest 2 files using that ?
[21:53:03] *** Joins: ice9 (~ice9@user/ice9)
[21:53:04] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[21:53:29] <stealth_> godofsea, ya, so highest 2 would be last modified!
[21:53:38] <godofsea> Ah nice!!
[21:55:22] *** Joins: Allegretto (~allegrett@94-21-231-38.pool.digikabel.hu)
[21:55:40] *** Parts: chris_99 (uid26561@id-26561.tooting.irccloud.com) ()
[21:56:09] <stealth_> godofsea, sloppy but something like this https://bpa.st/CMWQ
[21:56:20] *** Joins: darksun (~darksun@user/darksun)
[21:58:03] *** Joins: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[21:58:31] <godofsea> stealth_, Thanks ! I was wondering should I use a list or not. can you explain line 9 ? I think you are appending to the list but I am not familiar with this method
[21:58:33] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[21:58:54] *** daevski is now known as daevski_
[21:59:01] <stealth_> godofsea, i am adding to a dict
[21:59:28] <stealth_> godofsea, since, `print` also prints the path of the file
[21:59:33] *** Joins: nergar (~Nergar@177.225.152.13)
[21:59:38] *** Joins: rndm1 (~rndm@143.59.164.79)
[22:00:03] *** daevski_ is now known as daevski
[22:00:24] <rndm1> is there a way to have a (non-dataclass) mixin add an argument to init on a dataclass?
[22:00:29] <stealth_> godofsea, use the `mode` to get the time, then use `sorted` to sort lowest to highest, then using `[-2:]` to give me highest/last 2
[22:00:39] <godofsea> stealth_, yes. My bad. list is [], dict is {} .
[22:00:55] <jinsun> with pathlib, `sorted((f for f in Path("/your/path").glob("*") if f.is_file()), key=lambda f: f.stat().st_mtime)[-2:]`
[22:01:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[22:01:21] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:01:25] <stealth_> godofsea, you can uncomment `print('path:', pathname, mode)` to see what each for loop does, i left it there so you can see it in action
[22:01:33] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[22:02:07] <ska> Can I use a custom class as a typing type?
[22:02:50] <jinsun> yes, otherwise typing will be kind of useless
[22:02:53] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[22:03:23] <godofsea> yeah stealth_ , it makes sense when I print it out. Thanks ! This should do the trick. thanks.
[22:03:24] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 272 seconds)
[22:04:26] *** Joins: Samian (~Sami@2620:10d:c091:480::1:656f)
[22:04:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:05:33] *** Joins: darksun (~darksun@user/darksun)
[22:06:33] <godofsea> Hey jinsun thanks . it looks for files only. Awesome !
[22:07:03] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f) (Read error: Connection reset by peer)
[22:07:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:07:22] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f)
[22:08:44] *** Joins: d00gy (~d00gy@user/d00gy)
[22:09:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:09:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:09:43] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:10:08] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f)
[22:10:09] *** Joins: srhm (~ascii@user/srhm)
[22:10:12] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Ping timeout: 276 seconds)
[22:10:44] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f) (Read error: Connection reset by peer)
[22:10:58] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[22:11:20] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[22:15:42] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-acbf-94fe-4259-3302.res6.spectrum.com)
[22:15:56] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 252 seconds)
[22:16:09] *** Joins: daoudr__ (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f)
[22:16:25] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f) (Read error: Connection reset by peer)
[22:17:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 256 seconds)
[22:18:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:18:13] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:18:33] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:19:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 244 seconds)
[22:20:05] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:20:05] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:20:28] *** Joins: srhm (~ascii@user/srhm)
[22:20:33] *** Joins: Narrat (~omnius@p200300df5f0ae5c606ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:22:46] <fdee> what types are passed into function byval?
[22:23:02] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[22:24:10] <bjs> fdee: no type is
[22:24:18] <ssbr> fdee: "references", which are not a first-class thing in Python.
[22:24:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 248 seconds)
[22:25:27] <SnoopJ> some reading on the calling model: https://jamesgerity.com/backup/call-by-object.htm
[22:25:36] *** Quits: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[22:25:53] *** Joins: daevski (~daevski@76-253-184-89.lightspeed.rlghnc.sbcglobal.net)
[22:27:12] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 245 seconds)
[22:27:21] <fdee> i don't understand, if I have a variable n, and call f(n), can it change n?
[22:27:42] <deniska> fdee: it can't make n point to another object, but it can mutate object n
[22:27:50] <bjs> fdee: variables are not what are passed to functions at all, objects are
[22:27:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:28:03] <bjs> fdee: so yes and no,  no you cannot change `n` (the variable) but yes you can change the object n pointed to (if it was mutable)
[22:28:54] <bjs> fdee: Python variables aren't like C variables. in Python a variable is just a "tag" for a particular object in memory.  f(n) simply looks up the object with the tag "n" and gives a reference to it (if you want to think in those terms) to f.
[22:29:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[22:29:42] <bjs> fdee: so, you can have `def append_1(L): L.append(1)`  then `X = []; append_1(X)` will append 1 to the list that X refers to.
[22:29:49] <SnoopJ> very helpful read on how names work: https://nedbatchelder.com/text/names1.html
[22:30:14] <fdee> oh I see that primitives are immutable in python. very interesting
[22:30:25] <SnoopJ> that isn't correct, or related
[22:30:49] <bjs> fdee: Python doesn't really have "primitives", and the type of the object doesn't affect how it's passed to a function at all
[22:31:25] <SnoopJ> and in the same way, it doesn't really have "variables" in the sense that other languages that have declarations do. In Python, there are objects, and names that refer to objects. When you do `somename = ...` you're assigning whatever value is on the right-hand side to the given name.
[22:32:01] <SnoopJ> and when you call f(somename), you're calling f with the object associated with that name as the argument
[22:32:38] *** Joins: hafat (~hafat@159.146.87.68)
[22:33:03] *** Quits: daoudr__ (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f) (Read error: Connection reset by peer)
[22:33:22] *** Joins: daoudr__ (~daoudr@2a02:1205:c681:1650:e9e9:3f86:a82e:2c4f)
[22:33:35] *** Joins: audiocat (~audio@2603-8081-1800-00ad-6392-7d53-21a5-11ac.res6.spectrum.com)
[22:34:08] *** Joins: Stenean (~Stenean@cpc83645-brig20-2-0-cust98.3-3.cable.virginm.net)
[22:35:02] <nedbat> fdee: people say that python passes references around (which is true), but keep in mind, this is very different than other languages' "pass by reference".
[22:35:19] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[22:35:20] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-acbf-94fe-4259-3302.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:35:49] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[22:38:09] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-914a-fad4-07db-7f18.res6.spectrum.com)
[22:39:17] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 245 seconds)
[22:39:25] *** Joins: hyper_dave (~hyper_dav@197.156.77.243)
[22:39:42] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 245 seconds)
[22:40:55] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[22:41:18] *** Joins: srhm (~ascii@user/srhm)
[22:41:25] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[22:44:13] <dale> Is there something hiding around in the stdlib that, given two iterables/iterators x and y, returns alternating elements from each?  I.e. next(x), next(y), next(x), next(y), etc.
[22:44:42] <dale> I wrote my own but I am haunted by a vague sense that I have unnecessarily duplicated an existing function in itertools or something.
[22:44:51] *** Joins: Akuli (~Akuli@82-203-162-135.bb.dnainternet.fi)
[22:45:13] *** Quits: EGH (~EGH@185.25.195.104) (Remote host closed the connection)
[22:45:34] <bjs> dale: (i for a, b in zip(x, y) for i in [a, b])  (or equivalently itertools.chain.from_iterable(zip(x, y)))
[22:46:04] <bjs> although this doesn't quite work if the two iterators are unequal length,  for that see itertools.zip_longest
[22:46:52] <dale> bjs: Clever!  My personal taste is not in favor of that generator expression, but chain.from_iterable with zip is wise.
[22:47:10] <SnoopJ> chain is great
[22:48:10] <dale> I'm still stuck in Python 2 thinking that zip is not lazy, bad dale.
[22:48:13] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[22:49:14] <dale> I'll probably err on the side of readability for work and keep my little function, but I may use that other one later on, in my own personal stuff.  Thanks bjs. :)
[22:49:45] *** Joins: emika (~emika@83.136.182.47)
[22:49:54] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[22:50:18] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[22:50:45] *** Joins: audiophile (~audiophil@user/audiophile)
[22:52:07] *** Quits: jirib (~jiri@109.105.40.231) (Quit: WeeChat 3.2)
[22:52:12] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[22:52:22] *** Joins: audiophile__ (~audiophil@user/audiophile)
[22:52:23] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[22:52:42] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:53:02] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 245 seconds)
[22:53:10] *** audiophile__ is now known as audiophile_
[22:53:38] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[22:53:50] <rama> Hey i got a dumb question about attributes that are set to None, why when calling a.a is nothing printed out, i'm surprised that it does not printout None https://bpa.st/WMYA
[22:54:13] *** Joins: EGH (~EGH@185.25.195.104)
[22:54:27] <nedbat> rama: in the repl, None isn't printed.  If you used print(a.a), it would print None
[22:54:27] <bjs> rama: you forgot to say print(a.a)
[22:54:29] <zware> rama: The REPL suppresses `None`; if you want to see something that may be `None`, do `repr(thing)`
[22:54:42] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 272 seconds)
[22:54:47] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[22:55:08] <zware> or `print(thing)`, or `str(thing)` :)
[22:55:13] <rama> gotcha thx :)
[22:55:32] *** Quits: audiophile (~audiophil@user/audiophile) (Ping timeout: 252 seconds)
[22:56:06] <cdown> rama: in case you're wondering why, this is the kind of reason why:
[22:56:06] <cdown> In [7]: type(print("foo"))
[22:56:06] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:707c:2e67:8040:3848)
[22:56:10] <cdown> foo
[22:56:13] <cdown> Out[7]: NoneType
[22:56:24] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[22:57:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-6392-7d53-21a5-11ac.res6.spectrum.com) (Ping timeout: 256 seconds)
[22:57:27] *** Joins: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com)
[22:58:44] *** Joins: audiophile (~audiophil@user/audiophile)
[22:59:30] *** Quits: sazawal (~sazawal@122.161.170.192) (Read error: Connection reset by peer)
[22:59:35] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[23:00:24] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 272 seconds)
[23:00:24] *** audiophile is now known as audiophile_
[23:00:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[23:01:16] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:01:45] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[23:02:02] *** Joins: georgios (~georgios@user/georgios)
[23:02:08] *** Joins: srhm (~ascii@user/srhm)
[23:02:09] *** Joins: audiocat (~audio@2603-8081-1800-00ad-03a9-2109-fc11-cd8e.res6.spectrum.com)
[23:04:12] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 272 seconds)
[23:07:14] *** Joins: rememberYou (~someone@user/rememberyou)
[23:07:32] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[23:07:37] *** Quits: audiocat (~audio@2603-8081-1800-00ad-03a9-2109-fc11-cd8e.res6.spectrum.com) (Ping timeout: 245 seconds)
[23:10:45] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[23:12:07] *** Joins: bomzh1018 (~user@176.52.33.249)
[23:13:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:14:26] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:07] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 245 seconds)
[23:15:47] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[23:17:04] *** Quits: bomzh1018 (~user@176.52.33.249) (Quit: Leaving.)
[23:17:32] *** Quits: ubert (~Thunderbi@77.119.168.246.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[23:17:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:18:28] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[23:19:23] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[23:19:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:19:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:19:38] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[23:19:56] *** Joins: wyclif (~wyclif@user/wyclif)
[23:20:09] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[23:20:22] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[23:21:43] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:24:08] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[23:24:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[23:25:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:28:31] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:28:48] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[23:29:44] *** Joins: molt (~molt@79.140.150.21)
[23:31:07] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[23:31:18] *** Joins: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131)
[23:31:24] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[23:31:30] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:31:36] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[23:32:16] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:32:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:33:13] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[23:33:17] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:34:06] *** Joins: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at)
[23:35:06] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:35:39] *** Quits: p-i- (~Ohmu@2403:6200:8870:2b0f:c024:180d:a6e2:7131) (Ping timeout: 258 seconds)
[23:35:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:36:03] *** Joins: dakotakae (~dakotakae@2601:680:cb80:a6d0:498f:4d34:9368:cfd6)
[23:36:26] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:36:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:36:33] *** Joins: zeden (~zeden@user/zeden)
[23:36:37] <dakotakae> Anyone here familiar with the Google API clients for Python? I'm running into a weird issue with the credentials working for one request but not the next.
[23:37:36] *** Joins: computeiro (~Wender@189.37.65.46)
[23:37:46] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:707c:2e67:8040:3848) (Quit: Textual IRC Client: www.textualapp.com)
[23:38:10] <fdee> what condition should be used with type(x)?
[23:38:13] *** Quits: nergar (~Nergar@177.225.152.13) (Ping timeout: 268 seconds)
[23:38:27] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[23:38:44] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-914a-fad4-07db-7f18.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:38:46] *** Joins: nergar (~Nergar@177.225.152.13)
[23:38:48] <SnoopJ> fdee, if you're checking if something is an instance of a type T, you should do `if isinstanec(obj, T): ...`
[23:38:49] <matsaman> fdee: hrmm?
[23:38:58] <SnoopJ> oops, isinstance*
[23:39:07] <fdee> == or is?
[23:39:25] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-914a-fad4-07db-7f18.res6.spectrum.com)
[23:39:25] <SnoopJ> neither, use isinstance()
[23:39:40] <matsaman> a lot of people will 'try' assuming the type they want, too, and then 'except' for the rest
[23:39:42] <rjwiii> pandas is kicking my ass ... :(
[23:39:43] <SnoopJ> unless you care about the *exact* type to the exclusion of subtypes
[23:40:04] *** Quits: wender (~Wender@179.104.244.247) (Ping timeout: 268 seconds)
[23:40:10] <SnoopJ> dakotakae, let's assume the answer is yes, share the error report if there is one
[23:41:24] *** Quits: RedAero (~RedAero@20014C4E1C9D6900E5A907E1FAF69521.dsl.pool.telekom.hu) (Quit: Client closed)
[23:41:52] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[23:41:59] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:43:48] <dakotakae> SnoopJ : https://pastebin.com/N6p9NbSc
[23:44:49] *** Joins: piscvau (~odile@aclermont-ferrand-257-1-17-125.w92-129.abo.wanadoo.fr)
[23:44:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:44:57] <dakotakae> Basically, we have a spreadsheet with a list of doctors and their calendar IDs. From that, I need to extract when they have available appointments.
[23:45:17] *** Quits: auri (~admin@static.46.108.40.188.clients.your-server.de) (Changing host)
[23:45:17] *** Joins: auri (~admin@fsf/member/auri)
[23:45:32] *** Joins: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net)
[23:45:36] <dakotakae> The request to pull in the information from the sheet works fine, I can fetch the doctors in the state and get their info from the sheet.
[23:46:21] <dakotakae> The very next request, though, in the "retrieve_slots()" function, fails. The same credentials object is being used across functions, fetched from an env variable as this is meant to be run in a Lambda eventually.
[23:47:15] <SnoopJ> it looks like the name `http` is of an unexpected type in the library. Not sure why that would be, best guess based on seeing `google.py` there is that a file you've created has confused an import statement somewhere.
[23:47:28] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:47:50] <SnoopJ> dakotakae, can you share the output of `tree /Users/dakotabrown/Code/interim-scheduler/` ?
[23:47:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:49:52] <godofsea> if there a library that shows the diff between 2 files git shows. Or like the diff command in linux ?
[23:50:05] <dakotakae> SnoopJ https://pastebin.com/vzNNQ3Hp
[23:50:06] <godofsea> *like git shows
[23:50:12] *** Joins: Auron (Auron956@user/auron)
[23:50:23] <grym> godofsea: it's stdlib
[23:50:34] <grym> https://docs.python.org/3/library/difflib.html
[23:50:40] <dakotakae> I'm using pyenv-virtualenv to manage my virtualenvs, this one is running in 3.8.10 (as that's the highest Lambda supports)
[23:50:55] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[23:51:22] <SnoopJ> dakotakae, try removing that google.cpython-38.pyc file, that looks like it's probably stale and might be confusing stuff that lives in the google.* namespace
[23:51:27] <dakotakae> I just changed the name of google.py to attempt avoiding a confused import, as you suggested.
[23:51:29] <piscvau> hello when under my virtualenv, I need to execute a python script as sudo. The module pymsql is installed under my virtualenv in site packages. Ihave added this path to the syspatn. yet I get a module not found error. Any hint?
[23:51:51] <grym> piscvau: sudo /path/to/your/venv/bin/python yourfile.py
[23:51:52] <nedbat> fdee: if you don't mind me asking, why are you checking types?
[23:52:01] <dakotakae> SnoopJ nope, same result.
[23:52:02] <SnoopJ> dakotakae, yes, I see that, but the .pyc still being around can persist the problem.
[23:52:12] <SnoopJ> hmm
[23:52:27] <SnoopJ> dakotakae, not sure what else to look at without seeing the application code.
[23:52:31] <grym> piscvau: you may be getting hung up if you're relying on shell activation, which probably won't work
[23:52:31] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Ping timeout: 258 seconds)
[23:52:54] <fdee> because I have a value that can be int, None or class
[23:53:34] <piscvau> @grym what do you mean by relying on shell activation?
[23:54:05] <godofsea> @grym thanks!
[23:54:29] <grym> piscvau: if you `source bin/activate`, and then `sudo something`, sudo won't "see" the activated shell of your venv
[23:54:32] <grym> (probably)
[23:55:57] *** Quits: Elzington (~Elzington@66.115.189.149) (Ping timeout: 245 seconds)
[23:56:13] <dakotakae> SnoopJ there's nothing super confidential in there and this is just a patch service meant to last us until v2 of our main app is up, so I can share: https://pastebin.com/hLqtWpEA
[23:56:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:56:41] *** Joins: Elzington (~Elzington@66.115.189.145)
[23:56:58] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[23:57:12] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:57:28] *** Joins: wyclif (~wyclif@user/wyclif)
[23:57:58] <dakotakae> I know the creds work because I'm running an interpreter to test the functions, and retrieve_doctors_for_state() runs just fine after doing creds = get_credentials(). But the get_schedule() function is where I run into this issue of the creds object not working.
[23:58:00] <SnoopJ> dakotakae, can we see the code that calls get_schedule() as well? Looks like that's in your __main__.py, I guess what you've shared here is google_services.py
[23:58:48] <nedbat> fdee: interesting.  What will you do in those three cases?  Often, it's better to check the available methods or attributes than to check the type.
[23:59:03] <dakotakae> If you want a __main__.py https://pastebin.com/tYqvs5q
[23:59:21] <SnoopJ> That link appears to be broken
[23:59:50] <jinsun> dakotakae: seems like you have to do credentials=creds in the build fucntion call (line 127) https://github.com/googleapis/google-api-python-client/blob/master/googleapiclient/discovery.py#L175
