[00:00:47] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:01:00] <programmerq> docker is a thing that runs stuff. set -x is a bash thing. if the stuff you are running in docker is bash, then sure
[00:01:07] <programmerq> without more context, it's hard to say.
[00:01:37] <programmerq> docker's logging system pretty much just shows the stdout/stderr of whatever the thing is that you have containerized.
[00:01:58] <programmerq> so if that thing expands a variable and prints it to stdout, docker just passes it along.
[00:08:40] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[00:09:12] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[00:12:05] *** Joins: mickey80 (~user@user/mickey)
[00:13:57] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:14:39] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (Quit: BinarySavior has dropped the mic)
[00:16:00] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[00:23:09] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:23:22] *** Quits: Alex86ns (~Alex86ns@93-87-67-225.static.isp.telekom.rs) (Quit: Client closed)
[00:23:31] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[00:25:06] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:26:20] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Quit: Leaving)
[00:35:15] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[00:35:16] *** mickey80 is now known as mickey8
[00:41:34] *** Joins: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945)
[00:45:11] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Client Quit)
[00:47:56] <C0nundrum> back again
[00:48:20] <C0nundrum> So i'm still dumb
[00:48:26] <C0nundrum> Why is this wrong ? echo ${docker-compose -f docker-compose.yml -f deploy.docker-compose.yml config}
[00:48:53] <C0nundrum> THis gets outputed: compose -f docker-compose.yml -f deploy.docker-compose.yml config
[00:49:03] <ikke> () not {}
[00:49:09] <C0nundrum> arg
[00:49:19] <ikke> and echo $(x) == x
[00:49:33] <C0nundrum> Wait no, that gives:  type: none\mnt\auto\xstorage\site-cache-dbt-err-disabledite-cachenode_modules:rw
[00:49:44] <C0nundrum> whats that even mean...
[00:49:46] <C0nundrum> why
[00:50:05] <C0nundrum> ugh should have never updated.
[00:50:07] <C0nundrum> so dumb
[00:50:08] <ikke> You echo the output of a command, which is the same as just executing the command
[00:50:24] <C0nundrum> If i take out the braces i get a proper config file
[00:50:29] <C0nundrum> that is not happening here for some reason
[00:50:38] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[00:50:41] <C0nundrum> idk if the binary is detecting something or my syntax is incorrect
[00:50:52] <C0nundrum> jesus make your tools less smart and simpler
[00:51:26] <C0nundrum> all this worked and now i'm cecumventing changes that had no benificial inpact except inforcing some abritrary standard
[00:51:29] <ikke> C0nundrum: start with mentioning what you want to achieve in the first place
[00:51:38] <C0nundrum> sigh
[00:51:46] <C0nundrum> I'm trying to combine 2 docker files into a valid config
[00:51:56] <C0nundrum> some updates ago they stopped the binary from outputing the version
[00:52:07] <C0nundrum> so i have to add an extra echo to add the version
[00:52:23] <C0nundrum> Was hoping if someone could please help me write a command to achieve that because mines aren't working
[00:53:16] <C0nundrum> 2 compose files, sorry
[00:53:19] <C0nundrum> Yes this works
[00:53:24] <C0nundrum> the config file outputs the binary
[00:53:41] <C0nundrum> so its basiclly a bash problem. Output the config to a file, then output the version line
[00:53:52] <C0nundrum> then we have a perfect config yay. then i can run a stack deploy
[00:53:59] <C0nundrum> Just stuck on the building the file part
[00:54:58] <ikke> { docker-compose -f docker-compose.yml -f deploy.docker-compose.yml config; echo "1.2.3";} >path/to/file
[00:55:00] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:55:00] <ikke> something like that?
[00:55:21] <C0nundrum> Hm well, i'll try it and we'll see lol
[00:55:27] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[00:55:34] <ikke> Do you want to specify the docker-compose version?
[00:55:44] <C0nundrum> Yes, as version: "3.6"
[00:55:45] <ikke> I mean, the compose file yaml version
[00:55:48] <ikke> ok
[00:55:50] <C0nundrum> you have to
[00:55:53] <ikke> yes
[00:55:56] <C0nundrum> or the binary wil yell at you
[00:56:35] <ikke> { printf 'version: "3.6"\n'; docker-compose -f docker-compose.yml -f deploy.docker-compose.yml config; } >new-file.yaml
[00:57:25] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[00:58:23] *** njka is now known as traderjoe
[00:59:12] <C0nundrum> Dope, that did it !! Thanks man
[01:00:49] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[01:01:30] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[01:01:32] *** Quits: LtHummus (~lthummus@97-126-101-182.tukw.qwest.net) (Ping timeout: 240 seconds)
[01:03:11] *** Joins: karstensrage (~karstensr@user/karstensrage)
[01:03:55] <karstensrage> i have a docker-compose.yml that sets up the entire app that i want running
[01:04:18] <karstensrage> but how do i start thinking about it if i want a bunch of those running siloed from each other
[01:04:30] <karstensrage> like one entire up is the app but for a particular custoemer
[01:04:49] <karstensrage> but i have to do another "up" for another customer
[01:05:16] <karstensrage> but its all the same stuff except for maybe a config file that gets copied to the instance
[01:06:29] <rawtaz> im guessing now but i think you could do like  COMPOSE_PROJECT_NAME=foo docker-compose up -d  several times each time replacing foo with something else
[01:06:32] <ikke> karstensrage: Just copy the directory mutliple times
[01:06:47] <ikke> or that, but having multiple copies is more clear imho
[01:06:59] <rawtaz> (if you dont want to duplicate it all i mean, instead basically controlling which instance youre working with using the env var there)
[01:07:07] <rawtaz> yeah i agree, much clearer with seprate instances
[01:07:19] <rawtaz> i guess one could pretty easily create a shell script to help you though
[01:07:39] <tabakhase> multiple copys breaks horrifically if you call em all the same 
[01:07:50] <ikke> yes, you need to give them separate names
[01:07:52] <tabakhase> projectname / "-P" is the deal
[01:08:04] <ikke> tabakhase: isn't the project name by default based on the directory name?
[01:08:09] <tabakhase> yep
[01:08:32] <ikke> app-customer-a, app-customer-b, etc
[01:09:00] <karstensrage> ikke, the directory?
[01:09:03] <ikke> yes
[01:09:14] <ikke> the directory where the docker-compose file in
[01:09:19] *** Joins: physikoi (~physikoi@user/physikoi)
[01:09:25] <rawtaz> yeah. its the dir unless you have the env var in .env or in the env
[01:09:57] <rawtaz> i always set the variable in the .env even if i dont think i'll have colliding dirnames, because eventually i will :>
[01:10:18] <ikke> belts and suspenders
[01:10:55] <rawtaz> the way we like it :3
[01:11:01] <karstensrage> so youd have customer-a directory with a docker-compose.yml in it and then a customer-b directory with the same docker-compose.yml?
[01:11:17] <ikke> yes
[01:11:30] <rawtaz> yeah thats one way. downside is redundancy. so another ay is to just control what composer thinks is the project name (which becomes part of all containers, networks etc it creates)
[01:11:33] <ikke> You can even decide per customer to update to a newer version
[01:11:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:11:55] <ikke> If you just have a single docker-compose file, then every change affects all customers at the same time
[01:11:58] <karstensrage> yeah the redundancy worries me this is 10's of customers
[01:12:00] <rawtaz> it really boils down to what youre trying to acheive and what changes you might need to make etc
[01:12:34] <rawtaz> karstensrage: you can use common compose files and customer-specific ones as a compromise
[01:12:37] <karstensrage> i want to mimimize redunancy since we have a culture of set it and forget it and its killing us
[01:12:45] <rawtaz> then youll have separate dirs per customers which is good.
[01:13:02] <ikke> karstensrage: and you are willing to take the risk that one change affects all customers at the same time?
[01:13:28] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 268 seconds)
[01:13:36] <ikke> (you might, but you should make the choice if you want to)
[01:13:41] <rawtaz> here are two ways to do that: https://docs.docker.com/compose/extends/
[01:13:54] <karstensrage> well could i have a docker-compose in the top level that refers to the customer-a directory for the Dockerfile and docker directory 
[01:13:57] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:14:17] <karstensrage> then it would only affect the customer that got up'ed at that time right?
[01:14:42] <ikke> changes to the compose file would still affect all
[01:15:02] <rawtaz> you really just have to read that article, it tells you the best solution for your use case :)
[01:15:04] <karstensrage> but only if i re-up'ed them?
[01:15:11] <ikke> karstensrage: yes
[01:15:19] <karstensrage> oh rawtaz thanks, let me read
[01:15:36] *** Joins: pycurious (~Adium@user/pycurious)
[01:16:39] <rawtaz> so like either you use the extends way, or you can use the docker-compoes.overrides.yaml way with the docker-compose.yaml being a symlink to which one of multiple base compoes files you want to use (so you can support multiple bases)
[01:19:09] <physikoi> hi #docker. Is there like a best-practice when it comes to using docker-compose for both development and production?
[01:19:56] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Remote host closed the connection)
[01:20:21] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:22:02] <rawtaz> physikoi: hmmm anything in particular you are thinking about?
[01:24:11] <rawtaz> on a general note i write all my compose files such that they use variables for anything that should be dynamic of configurable. i use e.g. ${SERVICENAME_VARNAME-defaultvaluehere} for those that should be configable but are optional, and i use just ${SERVICENAME_VARNAME} for those that are mandatory
[01:24:25] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[01:24:33] <rawtaz> and then put e.g. SERVICENAME_VARNAME=foo in the corresponding .env file
[01:24:46] <rawtaz> and i always in there set COMPOSE_PROJECT_NAME=bleh as well
[01:25:16] <rawtaz> so my point is that this way you can reuse the same compose file(s) but you have different configuration in the .env vars depending on which environment you are in
[01:25:32] <rawtaz> in general, using environment to drive configuration and injecting settings is the way to go
[01:26:17] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Remote host closed the connection)
[01:26:43] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:27:13] <physikoi> rawtaz: yeah. So, I have a pre-existing web-app that I made with a apache+typescript+PHP+sqlite stack. I have semi-working docker-compose setup. That said, I'm stumbling with the fact that development should have a continously running command for front-end development (npm start), and production just needs to successfully run `npm build`. Then there's the issue of my sqlite database. Should that even be 
[01:27:13] <physikoi> a part of the docker image? I mean, how would I deploy without losing that data generated from the prior deployment? ... sorry so confused
[01:28:04] <physikoi> rawtaz: yes, that seems smart. 
[01:28:32] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.40) (Ping timeout: 240 seconds)
[01:29:04] <rawtaz> youre not the only one confused :P
[01:29:25] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[01:29:41] <rawtaz> i'd just start the  npm start  manually inside the image when i run it in dev env
[01:30:07] <rawtaz> and the sqlite database i'd just bind mount
[01:30:30] <rawtaz> but like what is our goal, are how do you intend to deploy this in the end?
[01:31:22] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:32:11] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:32:21] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 256 seconds)
[01:33:09] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:33:21] <physikoi> rawtaz: ty. For context, this is all for practice! I want to be able to either upload this to a VPS that has docker running, or to any other computer that I or a friend owns
[01:34:00] <physikoi> rawtaz: to clarify, do you have two separate docker-compose.yml files for development and for production?
[01:34:04] <rawtaz> no
[01:34:12] <rawtaz> same file
[01:34:32] <physikoi> oh
[01:35:45] <rawtaz> i think in general, build the Dockerfile (if any, its not always you need one) and compose file such that you can docker-compose up and the stuff runs like you want it in production.
[01:36:21] <rawtaz> then you use that in your dev env and just replace the .env variables with whatever you use for development db etc. and if you need to start npm then just exec into the running container and execute that manually
[01:37:45] <physikoi> is that to say, the only difference for you might be that you enter a container and execute "npm start" for development (assuming continuous transpilation of typescript, for example)?
[01:38:23] <rawtaz> yep, correct
[01:38:35] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 256 seconds)
[01:38:38] <rawtaz> and of course that in the .env i might have another database host, user, etc.
[01:38:45] <rawtaz> in the variables, assuming i have those
[01:38:56] <rawtaz> like, WEB_DB_HOST etc
[01:39:07] <rawtaz> that would be different in my dev env than it is in production
[01:39:07] <physikoi> hmmmmm
[01:39:19] <physikoi> ok, i'm beginning to see the light
[01:39:29] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:40:32] <rawtaz> and it doesnt matter if in my compose file i use an image from docker hub for e.g. the webserver or if i just build:. instead - that only has to do with how the image is built, the setup with a compose file having web, db, mail etc services is the same
[01:41:39] <physikoi> *thinks*
[01:41:50] <rawtaz> one thing where you MIGHT want to have different settings is if e.g. in your production your webapp uses an external mail server to send mail, while in your development you want to use e.g. mailhog to "sent" mail from the webapp. you can then e.g. create a docker-compose.override.yaml (or if it's "overrides", see reference) that contains the mailhog service. compose will read both files
[01:43:35] *** Quits: kold_ (~quassel@S0106b0e4d5642fb6.cg.shawcable.net) (Quit: kold_)
[01:44:13] *** Joins: kold (~quassel@S0106b0e4d5642fb6.cg.shawcable.net)
[01:44:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 240 seconds)
[01:44:40] <physikoi> yeah, i was just wondering what you do if you have different environment variables for production and development. So, docker-compose.override.yaml might be just used to load a different environment file?
[01:45:19] <rawtaz> no. you use different .env files for that, thats what ive been saying two times or so now :P
[01:45:40] <rawtaz> your compose files only uses env vars for the stuff you need to be dynamic with, settings and such
[01:45:48] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[01:45:49] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:45:52] <rawtaz> then you have those VAR=value in .env file
[01:46:12] <rawtaz> in your prod env you have the .env file that contains production settings for e.g. database
[01:46:29] <rawtaz> in your dev env you have another .env file that contians the same vars but with other values
[01:47:29] *** Quits: gooble_gobble (~gooble_go@c-76-16-103-215.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[01:48:21] <physikoi> rawtaz: i think where i'm slipping is not understanding how you use .env1 for development and .env2 for production. Where is the distinction being made?
[01:48:34] *** Church is now known as Xf
[01:49:10] <rawtaz> there is no distinction except in that they have different values
[01:49:33] <physikoi> but how are you telling docker-compose which to use?
[01:49:34] <rawtaz> in your production server you have docker.compose.yaml with a .env file that contians your production settings (VAR=value).
[01:49:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:50:43] <rawtaz> in your development env on your locla machine you have the same docker-compose.yaml file, but possibly with an extra docker-compose.override.yaml file contianing additional services in the same compose file format, and then you have the .env file which is just the same as the one in production but with different values (e.g. another, local, database host or similar)
[01:51:59] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 264 seconds)
[01:52:04] <rawtaz> docker-compose automatically reads any existing .env file and uses it to provide environment variables in the compose file.
[01:53:24] <physikoi> sorry to be obtuse. So, upon deployment, i need to make sure the correct .env file is installed to the server?
[01:53:47] <rawtaz> no worries
[01:54:12] <rawtaz> yes. but thats like you would make sure to configure the server/environment/whatever with environment variables for settings anyway.
[01:54:33] <rawtaz> its like you (if you werent using environment variables for configuraiton) was instead placing a configuration file there.
[01:55:08] <rawtaz> neither the .env im talking about or the configuration file you might otherwise use are part of your source code, these are separate from the actual application artifact/package
[01:55:43] <physikoi> right. *thinks*
[01:56:42] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:58:03] <rawtaz> consider these two files in your production server: https://kopy.io/y4CHJ
[01:58:29] <rawtaz> then imagine the same two files on your local machine where you develop the application
[01:59:08] <rawtaz> ok that was a bad example, let me update it
[02:00:12] <physikoi> ok. still here fyi
[02:01:04] <rawtaz> https://kopy.io/9LwZb
[02:01:08] *** Joins: mickey8 (~user@user/mickey)
[02:01:17] <rawtaz> take those two files, one copy on your prod server, one on your local dev machine.
[02:01:17] <physikoi> looking
[02:01:31] <rawtaz> you'd set the MAIL_SERVER variable's value differently
[02:01:41] *** Joins: nickdiazswag209 (~bjpenn_@98.45.203.239)
[02:04:55] <physikoi> Does deployment include the .env file, or is that ignored?
[02:05:42] <rawtaz> totally ignored, should not be version controlled
[02:06:26] <rawtaz> that file is just something that docker-compose reads automatically if it's there. its not uncommon to provide/inject environment variables to a process/service by other means.
[02:06:45] <rawtaz> and in those cases they sure as heck arent going to be version controlled in the same place as the compose file
[02:08:10] *** Quits: jwr (~jwr@131.226.34.93) (Remote host closed the connection)
[02:08:27] <physikoi> ohhhh, ok that helps. i was thinking the .env would be included
[02:09:24] <rawtaz> right. nope nope. then you'd make the mistake so many does, publishing your passwords and other sensitive things on github
[02:09:37] <rawtaz> so consider the .env file a way to *inject* configuration into your compose solution
[02:09:48] <physikoi> so, in that case, i might have a .env that's referenced by the app itself. the way the values are interpolated would then depend on the presence of the /.env at top of project (there for development machine, not for production machine)
[02:10:13] <rawtaz> NOW, once that part is clear, loook at this example. you ahve the app service with the actual webapp yuo made. and you have its database. and in production you set MAIL_SERVER to some external smtp server for sending.
[02:10:46] <rawtaz> but locally when developing you want to test your mails, see what they look like, e.g. so you want to use e.g. mailhog (google it). but that mailhog service isnt in your compose file so its not running. how do you add it you ask?
[02:11:06] <rawtaz> you dont reference the .env file at all, docker automatically reads it and populates the environment.
[02:12:01] <physikoi> *processing*
[02:13:26] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:15:11] <rawtaz> you add your development mail server with this:  https://kopy.io/A0fck
[02:18:04] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[02:18:12] <physikoi> ohmygod. OK, so in docker-compose.yml, i might actually define, say, the mail server like this: `MAIL_SERVER: ${MAIL_SERVER:-mail.mysite.com}`. In development, MAIL_SERVER is interpolated to "mailhog" since I might set `MAIL_SERVER=mailhog` in .env. However, deployment wouldn't include .env and so docker would get mail.myite.com when building.
[02:18:14] <physikoi> Am i close?
[02:19:28] <physikoi> looking now
[02:19:52] <rawtaz> that would be correct yes, you are talking about making use of the default value for that environment variable
[02:20:25] <rawtaz> i would however not recommend to have a default value like that, as it's better to keep that type of variable as required and not have a default
[02:20:32] <rawtaz> also the syntax for default value is just - not :-
[02:24:20] <physikoi> ah, yeah, i mixed up bash and docker syntax
[02:24:22] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[02:25:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:26:25] <physikoi> In your example posted online, you invoke docker-compose with both docker-compose.override.yaml  and docker-compose.yaml in your development environment. Deployment would then just somehow entail invoking docker-compose with docker-compose.yml only, right?
[02:26:51] *** Joins: pycurious (~Adium@user/pycurious)
[02:27:06] <rawtaz> if you are running  docker-compose up  in the same dir as those files, it will automatically read them both, no need to specify either of them
[02:27:32] *** Joins: evocatus (~evocatus@213.193.2.105)
[02:29:20] <physikoi> But deployment would need to exclude  docker-compose.override.yaml?
[02:29:43] <devslash> physikoi, not sure if someone recommentded this but you can set env vars in your compose script that can be read from php/node/server side code
[02:30:36] <rawtaz> physikoi: you dont need to version the override file, correct. it has nothing to do with the production, and all you version is what's relevant for production. the fact that you add some additional sugar in your dev env is outside of the production sources
[02:30:40] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:30:50] <BtbN> Does a .dockerignore only work when it's in the top-level source dir?
[02:31:05] <BtbN> or context-dir. i.e. right next to the Dockerfile
[02:31:06] <physikoi> rawtaz: nice. i have a strategy. thank you so much. wow, what a lesson
[02:31:12] <rawtaz> yeah devslash made a good point - these env vars we're talking about here are simple environment variables that are injected into the actual containers. so they are the end target for using them
[02:31:16] <rawtaz> physikoi: yw
[02:31:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:27] <rawtaz> physikoi: not that this is probably far from the best practice - it's just what *i* do :P
[02:31:46] <physikoi> devslash: something to think about for sure. entry script is what you're referring to, i think
[02:32:11] <physikoi> right, right.
[02:33:07] <physikoi> i must go, and i don't have a continous connection; i won't see further replies. Thank you so much, rawtaz . Take care all
[02:33:22] <rawtaz> bai
[02:33:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:36:06] <devslash> no
[02:36:08] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:36:34] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 260 seconds)
[02:37:31] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 256 seconds)
[02:39:23] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 264 seconds)
[02:41:49] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:44:41] *** Joins: pycurious (~Adium@user/pycurious)
[02:55:19] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[02:59:23] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:59:57] *** Joins: nickdiaz1wag209 (~bjpenn_@144.sub-174-194-206.myvzw.com)
[03:01:22] *** Quits: nickdiazswag209 (~bjpenn_@98.45.203.239) (Ping timeout: 268 seconds)
[03:16:46] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:18:28] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:23:23] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:24:11] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 268 seconds)
[03:25:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:28:39] *** Joins: Proxysna_ (~Proxysna@62.119.254.142)
[03:29:35] *** Quits: phenom (~primus@user/phenom) (Quit: See ya! Wouldn't want to blah blah..)
[03:29:35] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[03:29:38] *** Quits: averell (~averell@user/averell) (Quit: .)
[03:29:41] *** Quits: c10l (~c10l@user/c10l) (Quit: Ping timeout (120 seconds))
[03:29:50] *** Joins: c10l (~c10l@user/c10l)
[03:29:54] *** Joins: averell (~averell@user/averell)
[03:31:01] *** Joins: phenom (~primus@user/phenom)
[03:31:09] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[03:33:34] *** Joins: Nightah (~Nightah@user/nightah)
[03:34:07] *** Joins: nickdiazswag209 (~bjpenn_@98.45.203.239)
[03:36:27] *** Quits: nickdiaz1wag209 (~bjpenn_@144.sub-174-194-206.myvzw.com) (Ping timeout: 256 seconds)
[03:47:16] *** Quits: evocatus (~evocatus@213.193.2.105) (Quit: Leaving)
[03:47:36] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:49:37] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[03:50:50] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[03:54:14] *** Joins: Hackerpcs (~user@user/hackerpcs)
[03:58:03] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[03:58:46] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[04:01:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:17:47] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 264 seconds)
[04:20:11] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 264 seconds)
[04:23:13] *** Joins: OPK (~OPK@user/opk)
[04:24:31] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:29:29] *** Quits: karstensrage (~karstensr@user/karstensrage) (Quit: ZNC - http://znc.in)
[04:33:42] *** Quits: nickdiazswag209 (~bjpenn_@98.45.203.239) (Ping timeout: 260 seconds)
[04:40:39] *** Quits: rpthms (~rpthms@user/rpthms) (Ping timeout: 268 seconds)
[04:47:14] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 260 seconds)
[04:47:55] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:48:57] *** Joins: karstensrage (~karstensr@user/karstensrage)
[04:58:06] *** Joins: pycurious (~Adium@user/pycurious)
[04:58:22] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[04:58:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 268 seconds)
[05:00:16] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:05:15] *** Joins: physikoi (~physikoi@user/physikoi)
[05:09:57] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 256 seconds)
[05:19:35] *** Joins: rpthms (~rpthms@user/rpthms)
[05:29:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:40] *** Joins: pycurious (~Adium@user/pycurious)
[05:30:45] *** Joins: physikoi (~physikoi@user/physikoi)
[05:43:23] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 256 seconds)
[05:45:37] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[05:51:32] *** Joins: DoofusCanadensis (~DoofusCan@S01061056117e7f56.cg.shawcable.net)
[05:53:02] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 260 seconds)
[05:56:09] *** Joins: nrg (~NRG@user/nrg)
[06:07:04] *** Joins: physikoi (~physikoi@user/physikoi)
[06:10:28] *** Xf is now known as Church
[06:11:49] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[06:11:55] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 268 seconds)
[06:23:32] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:27:02] *** Quits: emerent (~quassel@p200300cd571f93e8ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:30:35] *** Joins: emerent (~quassel@p200300cd574532b8ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:30:40] *** Joins: physikoi (~physikoi@user/physikoi)
[06:36:20] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:36:26] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 260 seconds)
[06:39:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[06:42:31] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[06:43:36] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[06:43:59] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 268 seconds)
[06:45:27] *** Joins: pycurious (~Adium@user/pycurious)
[06:50:11] *** Joins: slice (~slice@user/slice)
[07:10:05] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:15:11] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[07:15:55] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[07:16:38] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[07:22:24] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:25:24] *** Joins: physikoi (~physikoi@user/physikoi)
[07:27:52] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[07:28:07] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[07:30:14] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 268 seconds)
[07:30:16] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[07:33:53] *** Joins: yeirr (~yeirr@user/yeirr)
[07:44:30] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[07:49:11] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[07:58:58] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[07:59:43] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[08:14:41] *** Quits: dinowilliam (~dinowilli@168.194.162.220) (Ping timeout: 256 seconds)
[08:20:47] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[08:25:07] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 268 seconds)
[08:30:49] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[08:30:52] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:31:06] *** Joins: pycurious (~Adium@user/pycurious)
[08:36:53] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[08:43:55] *** traderjoe is now known as njka
[08:44:47] *** njka is now known as le0n
[08:49:36] *** Quits: DoofusCanadensis (~DoofusCan@S01061056117e7f56.cg.shawcable.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:54:06] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[08:57:48] *** Joins: yeirr (~yeirr@user/yeirr)
[09:22:42] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Remote host closed the connection)
[09:23:24] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[09:27:46] *** Joins: realies0 (~realies@user/realies)
[09:28:34] *** Quits: realies (~realies@user/realies) (Ping timeout: 260 seconds)
[09:28:35] *** realies0 is now known as realies
[09:33:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:35:10] *** le0n is now known as njka
[09:47:41] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[10:03:56] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[10:15:52] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[10:21:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:25:10] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:26:31] *** Quits: andycooper (uid246432@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:31:21] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[10:32:01] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:35:47] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 256 seconds)
[10:41:26] *** Joins: mei (~mei@user/mei)
[10:57:26] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[10:58:03] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 268 seconds)
[11:03:09] *** Joins: n9nes (~n9nes@user/n9nes)
[11:04:09] *** Quits: C0nundrum (~C0nundrum@68.204.87.132) (Remote host closed the connection)
[11:07:32] *** Quits: n9nes (~n9nes@user/n9nes) (Ping timeout: 240 seconds)
[11:22:05] *** Joins: bouncy (~ben@user/benoit)
[11:27:08] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[11:32:38] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:33:37] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[11:36:03] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 265 seconds)
[11:37:32] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[11:38:00] *** Quits: travisghansen (~travisgha@192.74.130.86) (Read error: Connection reset by peer)
[11:38:10] *** Joins: travisghansen4 (~travisgha@192.74.130.86)
[11:38:50] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 260 seconds)
[11:45:57] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2917:5181:4d7e:6abc:396a:57e8)
[11:47:42] *** Quits: AnapodoPsalidi (~AnapodoPs@154.57.4.229) (Ping timeout: 260 seconds)
[11:47:54] *** Joins: OPK (~OPK@user/opk)
[11:56:41] *** Quits: bn_work (uid268505@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:19:35] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Read error: Connection reset by peer)
[12:32:42] *** Joins: rsx (~dummy@ppp-188-174-146-173.dynamic.mnet-online.de)
[12:39:47] *** Quits: TheFatherMind (~TheFather@user/thefathermind) (Read error: Connection reset by peer)
[12:42:40] *** Joins: TheFatherMind (~TheFather@user/thefathermind)
[12:44:35] *** Quits: TheFatherMind (~TheFather@user/thefathermind) (Read error: Connection reset by peer)
[12:46:18] *** Joins: TheFatherMind (~TheFather@user/thefathermind)
[12:52:09] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[12:54:29] *** Quits: mthall (~quassel@mail.thalliman.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:02:08] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:03:52] *** Joins: zuritat (~zuritat@user/zuritat)
[13:03:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[13:18:54] *** Joins: l4yer (~l4yer@195.181.170.210)
[13:19:37] *** Joins: slice (~slice@user/slice)
[13:22:42] *** Joins: forgotmynick (uid24625@hampstead.irccloud.com)
[13:37:26] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[13:37:41] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[13:38:20] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[13:42:38] *** Joins: l4yer (~l4yer@195.181.170.210)
[13:43:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:48:44] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[13:49:36] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[13:59:30] *** Parts: CRCinAU (~CRCinAU@user/crcinau) ()
[14:23:26] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.3)
[14:26:48] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[14:40:42] *** Joins: goldfish (~goldfish@user/goldfish)
[14:58:04] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[14:58:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:42:30] *** Quits: forgotmynick (uid24625@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:19] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:58:54] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[15:59:06] *** Joins: goldfish (~goldfish@user/goldfish)
[16:08:28] *** Joins: riv (river@tilde.team/user/river)
[16:08:29] <riv> hey
[16:08:35] <riv> can I create a non root user in docker?
[16:08:40] <riv> by default in root
[16:08:50] <riv> but that makes things weird with mount bind on my host
[16:10:05] <BtbN> yes
[16:14:46] <wez> riv: werd
[16:14:51] <riv> yo
[16:15:00] <riv> can i run a java game in docker? (minecraft)
[16:15:11] <wez> The answer is yes, like what BtbN said
[16:15:12] <riv> i will try it... xforwarding and stuff
[16:15:24] <wez> riv: yes
[16:15:30] <riv> this is exciting
[16:15:35] <BtbN> Why would you WANT to do that though
[16:15:43] <BtbN> it's a lot of pain for no reason
[16:15:44] <wez> BtbN: Not the point
[16:15:57] <wez> BtbN: Why would ylu want to use docker when LXC is a thing :)
[16:16:03] <wez> BtbN: but people do
[16:16:12] <wez> :P
[16:16:12] <BtbN> Because it solves different problems
[16:16:18] <wez> BtbN: nup
[16:16:35] <BtbN> yup
[16:17:03] <wez> haha
[16:17:05] <BtbN> LXC is closed to a VM, and Docker with its Dockerfiles, layered approach, standardized building and huge library of default images is a whole different beast
[16:25:11] <riv> docker is easier
[16:27:06] *** Joins: liefer4 (~liefer@user/liefer)
[16:28:21] <tabakhase> riv the user thing is a little complicated as multiple things play together there, have a read https://github.com/boxboat/fixuid
[16:29:11] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 264 seconds)
[16:29:11] *** liefer4 is now known as liefer
[16:29:33] <rawtaz> why is that complicated? if you just make the ownership and permissions match the user in the container, and if you want make a group or similar so that the host user can access them the same way, like you would with any other scenario where you have multiple users needing access to some files, whats the problem?
[16:30:01] <rawtaz> i dont see the need to match user ids on the host and the container, just let the files be the containers' and thats it
[16:30:46] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[16:30:50] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[16:31:39] <ikke> lxc and docker are much more alike
[16:31:51] <ikke> though, lxc usually comes with an init system
[16:32:03] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[16:32:07] <ikke> but it still runs on the kernel of the host
[16:33:38] <tabakhase> its "complicated" as not only do you suddenly have two /etc/passwd & /etc/group files, but also actually only one kernel that cares about nummerics-only mixed with the whole portiability issue (my needed id is different than yours) and that you have to solve all of this at runtime while also needing the user during build and you have to mesh this all together nicely
[16:34:58] <tabakhase> once you "know whats going on" its pretty straight forward sure, but first time you hit it its lots of ??? ;-)
[16:34:59] <rawtaz> i probalby just dont get it. to me the dirs and files given to the container is the containers. so it can set whichever ownership it wants. on the host i adapt to that.
[16:35:32] <rawtaz> yeah everything docker can be a bit daunting in the beginning and after that as well :-)
[16:35:50] <tabakhase> if you are "lucky to only need volumes" - yea, you prob have to worry a whole lot less about this - but that aint the case for everyone
[16:36:21] <rawtaz> yeah. i never ever use volumes, i always use bind mounts from the host fs
[16:36:59] <BtbN> That's pretty much what a volume is
[16:37:06] <tabakhase> no?
[16:37:22] <BtbN> With a bunch of abstraction on top, but in the end, it's a bind mount
[16:37:27] <tabakhase> no
[16:37:31] <BtbN> yes
[16:38:23] <BtbN> Sits in /var/lib/docker/volumes/yourvolume/_data
[16:38:33] <BtbN> and gets bind mounted into the container
[16:40:46] <wez> hi BtbN 
[16:41:08] <wez> BtbN: LXC isn't closed
[16:41:43] <BtbN> ?
[16:43:03] <BtbN> "closeR to a VM"...
[16:43:32] <tabakhase> BtbN ill stick to "no" there ;-) thats an implementation detail of the "local" driver, but not "what dcoker volumes are"
[16:44:08] <BtbN> "I want to be right so I define it how I like", fine, whatever you say
[16:44:32] <tabakhase> pretty clear that people talking about volumes talk about named volumes - and bind-mounts people talk about -v /some/path:/some/other
[16:45:08] <tabakhase> otherwise youd also need to take long-form volumes (what nowadays can also take a full path) into that and dont get anywhere
[16:45:45] <rawtaz> both of you are right. speaking from a user perspective bind mounts and volumes dont appear to be the same thing, but technically they are the same as BtbN pointed out. its all good, just different definitions or contexts
[16:46:50] <tabakhase> they also act very differently, so you rly cant just throw em in one bucket
[16:48:53] <tabakhase> say, how `docker run --rm -it -v $PWD:/bin/ debian echo yay` horifically explodes, while `docker run --rm -it -v named:/bin/ debian echo yay` works just fine
[16:59:42] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:59:59] *** Joins: mickey8 (~user@user/mickey)
[17:08:54] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[17:09:01] *** Joins: fmy (~fmy@219.95.58.195)
[17:09:08] *** Joins: mickey8 (~user@user/mickey)
[17:11:50] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[17:12:03] *** Joins: mickey8 (~user@user/mickey)
[17:12:26] *** Quits: Reepicheep (~Reepichee@207-68-211-140.nctc.net) (Read error: Connection reset by peer)
[17:14:08] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[17:15:40] *** Parts: mickey8 (~user@user/mickey) ()
[17:15:54] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[17:18:22] *** Quits: mei (~mei@user/mei) (Quit: mei)
[17:19:46] *** Joins: mei (~mei@user/mei)
[17:24:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:32:01] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:37:14] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:44:05] *** Joins: maret (~maret@196.245.151.22)
[17:54:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:58:36] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:03:53] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[18:10:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:11:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:12:03] *** Joins: slice (~slice@user/slice)
[18:12:26] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[18:12:56] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:13:11] *** Joins: pycurious (~Adium@user/pycurious)
[18:13:31] *** Quits: slice (~slice@user/slice) (Client Quit)
[18:14:05] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.3)
[18:14:22] *** Joins: Hackerpcs (~user@user/hackerpcs)
[18:17:57] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[18:18:15] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[18:24:12] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:24:24] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[18:24:59] *** Joins: pycurious (~Adium@user/pycurious)
[18:25:37] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[18:29:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[18:41:45] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[18:44:15] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[18:44:27] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[18:46:30] *** Joins: pycurious (~Adium@user/pycurious)
[18:46:36] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[18:49:23] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[18:53:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[19:09:41] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[19:14:33] *** Joins: setesat (~setesat@94.4.156.220)
[19:15:13] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:16:11] *** Joins: liefer8 (~liefer@user/liefer)
[19:16:28] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[19:18:23] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 264 seconds)
[19:18:23] *** liefer8 is now known as liefer
[19:19:33] <jimmyb> Heyo, I am looking at a Dockerfile which has this in the entrypoint, ${@}, what does that mean?
[19:20:17] <ikke> ${@} is $@, which represents all arguments passed
[19:22:19] <tabakhase> in effect, will be CMD
[19:22:46] *** Joins: minimal (~minimal@user/minimal)
[19:25:25] <jimmyb> Aaaah, okay.
[19:25:38] <tabakhase> so ENTRYPOINT script.sh CMD thing -host 0.0.0.0 - ends you up with a container doing "script.sh thing -host 0.0.0.0" - and the exec "$@" in script will get the "thing -host..." 
[19:26:14] *** Joins: pycurious (~Adium@user/pycurious)
[19:30:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[19:31:56] *** Joins: pycurious (~Adium@user/pycurious)
[19:32:11] <jimmyb> Exactly, and that really helped, thank you very much ikke and tabakhase (in case you care lol https://github.com/gitpod-io/openvscode-server/issues/228)
[19:34:13] <ikke> Yeah, entrypoint + command is really nice
[19:36:23] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[19:36:36] <jimmyb> Yeah, definitely made my life a lot easier haha
[19:36:42] <tabakhase> jimmyb if you want to make this extra fancy, one pattern is that you check if you $1 starts with a "-" or not   --- that way "docker run php:8.0 php -f something" works just as "docker run php:8.0 -f something"  would (note no binary) while still ALSO allowing "docker run php:8.0 bash" for say debugging 
[19:37:21] <jimmyb> Oh nice nice, that's really slick! Thanks!
[19:37:54] <tabakhase> dada https://github.com/docker-library/php/blob/master/docker-php-entrypoint
[19:47:16] <ikke> nice method
[19:48:25] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[19:48:51] *** Joins: physikoi (~physikoi@user/physikoi)
[19:49:28] *** Joins: pycurious (~Adium@user/pycurious)
[19:50:14] *** Joins: RougeR (~rougex250@user/rouger)
[19:53:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[19:55:05] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 256 seconds)
[19:59:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:02:45] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 265 seconds)
[20:05:32] *** Joins: martums (~martums@user/martums)
[20:05:53] *** Joins: pycurious (~Adium@user/pycurious)
[20:05:53] *** Joins: RoXX (~RoXX@user/roxx)
[20:07:44] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[20:10:06] *** Joins: momomo (~momomo@user/momomo)
[20:22:05] *** Joins: factor7 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[20:23:01] *** Quits: factor7 (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[20:25:44] *** Quits: momomo (~momomo@user/momomo) (Quit: Textual IRC Client: www.textualapp.com)
[20:28:08] *** Joins: factor7 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[20:28:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:28:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[20:30:46] *** Quits: rsx (~dummy@ppp-188-174-146-173.dynamic.mnet-online.de) (Quit: rsx)
[20:34:42] *** Quits: factor7 (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[20:35:01] *** Joins: factor7 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[20:38:08] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[20:45:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:45:10] *** Joins: rolo (~rolo@2a02:8108:8d80:7aa4:74ba:9fac:38b7:d47d)
[20:55:01] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400::7674)
[21:01:44] *** Joins: physikoi (~physikoi@user/physikoi)
[21:04:21] *** Quits: calm-steam (~calm-stea@2a02:810a:980:1400::7674) (Remote host closed the connection)
[21:04:38] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[21:04:41] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400:5f98:3a66:b46d:598d)
[21:06:43] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 268 seconds)
[21:08:29] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[21:20:46] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 260 seconds)
[21:21:39] *** Joins: pycurious (~Adium@user/pycurious)
[21:22:02] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[21:26:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[21:32:32] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 240 seconds)
[21:34:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:34:46] *** Joins: riotz (~riotz@user/riotz)
[21:41:52] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[21:43:18] *** Joins: pycurious (~Adium@user/pycurious)
[21:44:10] *** Joins: n9nes (~n9nes@user/n9nes)
[21:47:01] *** Joins: afidegnum (~user@102.176.94.82)
[21:48:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:50:59] <afidegnum> hi, i have a docker container having a db browser. I would like to connect the external db IP address being on the docker's host IP. using : host.docker.internal`didn't work out for me. what's the correct host configuration? 
[21:54:04] *** Quits: riotz (~riotz@user/riotz) (Quit: Leaving)
[21:54:10] <rawtaz> uh what
[21:54:22] <rawtaz> what is "the external db IP address"?
[21:54:49] <rawtaz> you want to be able to connect to your host's ip on some port, and end up at some port in the container, i guess?
[21:56:26] <afidegnum> the external db ip address is 192.168.1.100 that's my PC's IP address... i have configured my db to listen to connections from all ip addresses
[21:56:50] *** Joins: riotz (~riotz@user/riotz)
[21:57:27] <afidegnum> but the docker ip address is callable via localhost:3001
[21:57:58] <afidegnum> i mean the container ip addresses
[21:58:58] *** Quits: RoXX (~RoXX@user/roxx) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:00] <rawtaz> what is the actual problem you are having/trying to solve?
[21:59:39] <afidegnum> I want the db browser in the container to be able to connect to the DB server on the host. 
[21:59:45] <rawtaz> right
[22:00:07] <rawtaz> cant you just put there the host's IP, 192.168.1.100 ?
[22:00:21] <tabakhase> afidegnum "container -> host" via IP on the docker0 interface on your host (can be looked up as the gatway used inside the container) -- this host.docker.internal is a not supported everywhere (came from docker-for-mac or so and has only been added recently on linux)
[22:00:23] <afidegnum> it didn't work out
[22:01:04] <rawtaz> afidegnum: if it didnt work, what were the symptoms?
[22:01:13] <tabakhase> if that "doesnt work" a) ensure your db is actually also listening on that IP (localhost of the host is impossible to reach!) and b) firewalling. docker0 is kinda just like another LAN
[22:02:16] <afidegnum> https://imgur.com/bgknvaA.png
[22:02:51] <afidegnum> https://imgur.com/bUVR8Kh.png
[22:04:34] <rawtaz> afidegnum: might want to first inside the container make sure you can ping 8.8.8.8 and then try 192.168.1.100
[22:05:47] <afidegnum> ok, let me try
[22:07:04] <rawtaz> you know how to exec into the container to be inside it?
[22:08:34] <afidegnum> i'm trying to access the container. i've forgotten the procedure
[22:09:11] *** Joins: minimal (~minimal@user/minimal)
[22:11:12] <afidegnum> everythings works, i needed to configure pg_hba.conf as well
[22:12:07] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 265 seconds)
[22:12:38] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:6999:ff47:3a05:9d4f)
[22:12:41] <rawtaz> ok so now all of it works like you want, problem solved?
[22:12:53] <DoofusCanadensis> yay problems solved
[22:12:55] <afidegnum> yes, problem solved. I
[22:13:26] <afidegnum> I used my host ip address and configure my db file to listen to all ip address
[22:14:01] <rawtaz> nice
[22:14:10] <afidegnum> thanks a lot
[22:14:28] *** Quits: afidegnum (~user@102.176.94.82) (Quit: ERC (IRC client for Emacs 27.2))
[22:14:44] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[22:15:27] *** Quits: maret (~maret@196.245.151.22) (Quit: maret)
[22:15:47] <rawtaz> :)
[22:18:40] *** Joins: ShArkZ (sharkz@user/sharkz)
[22:19:10] *** Joins: sehrope (~sehrope@23-24-81-162-static.hfc.comcastbusiness.net)
[22:19:45] *** Parts: ShArkZ (sharkz@user/sharkz) ()
[22:28:35] *** Quits: riotz (~riotz@user/riotz) (Ping timeout: 264 seconds)
[22:28:44] *** Joins: polymorphic (~polymorph@066-169-158-111.res.spectrum.com)
[22:29:36] *** Joins: dtux (~dtux@2601:646:8f00:3f2:1f8d:523e:11a:1242)
[22:32:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 264 seconds)
[22:33:00] *** Quits: polymorphic (~polymorph@066-169-158-111.res.spectrum.com) (Read error: Connection reset by peer)
[22:33:27] *** Joins: polymorp- (~polymorph@066-169-158-111.res.spectrum.com)
[22:33:51] *** polymorp- is now known as polymorphic
[22:42:01] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[22:45:58] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:50:16] *** Joins: riotz (~riotz@user/riotz)
[22:51:09] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[22:55:12] *** Joins: pycurious (~Adium@user/pycurious)
[22:59:38] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[23:00:52] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[23:07:26] *** Quits: riotz (~riotz@user/riotz) (Quit: Leaving)
[23:19:36] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:21:22] *** Joins: pycurious (~Adium@user/pycurious)
[23:25:32] *** Joins: moha (uid506645@helmsley.irccloud.com)
[23:30:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:36:22] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:37:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:41:02] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 240 seconds)
[23:41:54] *** Joins: finsternis (~X@23.226.237.192)
[23:42:39] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[23:42:56] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[23:44:54] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[23:51:30] *** Joins: physikoi (~physikoi@user/physikoi)
[23:58:58] *** Quits: physikoi (~physikoi@user/physikoi) (Ping timeout: 260 seconds)
