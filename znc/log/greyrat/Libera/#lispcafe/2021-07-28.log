[00:35:58] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: brb)
[00:36:46] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[00:42:46] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[00:42:46] *** ChanServ sets mode: +o MichaelRaskin
[00:46:00] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 256 seconds)
[00:51:07] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[02:00:16] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[02:04:12] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:07:31] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[02:13:24] *** Joins: zacts (~zacts@user/zacts)
[02:25:40] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[02:58:07] <gilberth> Sigh. This DSL line is down again.
[03:00:19] <hayley> https://www.reddit.com/r/lisp/comments/osqgqe/common_lisp_still_beats_java_rust_julia_dart_in/h6rcyxg/ how did Djikstra, Lamport, Doligez and Leroy fool themselves into thinking they had on the fly GCs smh clearly you need to pause
[03:00:21] -ixelp- Common Lisp still beats Java, Rust, Julia, Dart in 2021 on benchmarks based on phone number encoding from the famous pap [...]
[03:02:51] <Gnuxie> Well aside from being wrong, I think benchmark should just be idiomatic and not optimized 
[03:03:23] <Gnuxie> I also think *
[03:03:53] <Gnuxie> But at the end of the day there's probably no escaping bollocks benchmarks 
[03:04:44] <selwyn> bollocks to benchmarks
[03:05:11] <hayley> "Put micro-trust in micro-benchmarks"
[03:07:28] <gilberth> Well this all fails IMHO because there isn't really some application which is available in multiple languages/environments.
[03:08:32] <gilberth> And the kind of memory management available to you would influence how you implement things. E.g. w/o a proper GC you tend to copy a lot of things when in doubt.
[03:08:36] <hayley> https://www.youtube.com/watch?v=v2DLG522Kws
[03:08:37] -ixelp- Joan Of Arc - Maid Of Orleans (Live 1981) - OMD - YouTube
[03:09:19] <hayley> IMO the Java code looks fine but I write Java in a funny way.
[03:09:33] <gilberth> Best example the p2c translator: You have a nice AST data type, yet when you construct new nodes, which share an existing subnode, you need to copy it.
[03:10:51] <gilberth> Because when an AST is free'ed, it is assumed that there is no sharing and you'll get a double free, if you don't copy.
[03:11:27] <gilberth> Anyhow, no Youtube for me tonight.
[03:12:10] <hayley> how the f*uck did they make ZGC when this 1000 IQ game developer sez you need big pauses?
[03:13:01] <gilberth> Define "pause" to begin with.
[03:13:31] <hayley> every time I don't get 144 FPS it is clearly the GC
[03:13:38] <gilberth> I mean, it's said that reference counting introduces no pause. What if, you wind up freeing sth huge?
[03:13:58] <hayley> what is a reference, is that like a pointer
[03:13:58] <gilberth> 144FPS? Is your screen that fast?
[03:14:13] <hayley> jon blow said a child dies every time you use a pointer
[03:14:33] <gilberth> Why?
[03:14:52] <hayley> bro you are going to blow out L1 cache
[03:14:53] <gilberth> After all it's called "instruction pointer" :)
[03:15:04] <hayley> oh god oh fuck
[03:15:22] <gilberth> So less than a second and all children are dead. :/
[03:16:52] <gilberth> I wonder, whether I somehow could run UCSD Pascal.
[03:18:51] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:21:51] <hayley> https://www.youtube.com/watch?v=1YXu7vRJ5tA
[03:21:51] -ixelp- Pretending To See The Future (2003 Digital Remaster) - YouTube
[03:42:05] <hayley> https://www.reddit.com/r/lisp/comments/osqgqe/common_lisp_still_beats_java_rust_julia_dart_in/h6rjcur/ tl/dr: crab reinvents fixnums (but probably without the tag bit) and claims you can get high performance like that
[03:42:07] -ixelp- Common Lisp still beats Java, Rust, Julia, Dart in 2021 on benchmarks based on phone number encoding from the famous pap [...]
[03:52:42] *** Joins: zacts (~zacts@user/zacts)
[04:03:05] <hayley> https://www.youtube.com/watch?v=afcT34E_zco
[04:03:05] -ixelp- 66 And Fading (2008 Digital Remaster) - YouTube
[04:29:31] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[04:46:42] *** Quits: random-nick (~random-ni@87.116.182.181) (Ping timeout: 240 seconds)
[04:47:04] * gilberth got LaTeX 2.09 working.
[04:47:21] <hayley> Congratulations!
[04:48:16] <gilberth> I could do a whole TeX distribution :)
[04:48:45] <gilberth> A pity though that pdftex is a lot of C code. :(
[04:53:03] <hayley> https://www.youtube.com/watch?v=JAT1m_Wu_Po
[04:53:03] -ixelp- Youtube Poop Anthony Sullivan Tortures Lobsters - YouTube
[04:53:13] <hayley> gilberth: Can we get a blowtorch to torture crabs?
[05:02:44] <gilberth> hayley: Why would I want to torture any entity?
[05:03:16] <hayley> Cause I feel like it.
[05:03:46] <hayley> Call it returning the favour.
[05:06:48] <hayley> gilberth: Cause I don't appreciate my work being said to be impossible. "Hah, you need alien functions for the tightest loops." No, not really. "You can't write code 'close to the metal' in Lisp." Yeah, you kinda can.
[05:06:58] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 240 seconds)
[05:09:19] <gilberth> hayley: Yes, that is obvious, as we have reasonable compilers. Do people still believe that Lisp would be interpreted?
[05:09:42] <hayley> gilberth: idk. Sometimes I wonder.
[05:12:32] <hayley> .oO( Every sufficiently bad programming performance discussion is just plain gaslighting. "I did X in Lisp." "No, there's no way you could do X in Lisp." "Pretty sure I did." "Last time I did Lisp I needed external C code, you can't have done anything that fast." )
[05:14:28] <gilberth> Well, milady, our RE stuff beats any C lib hands down. So much for that.
[05:15:08] <gilberth> I mean, could you compile code at runtime in C?
[05:15:12] <hayley> Okay, are you going to publish it? :)
[05:16:21] <gilberth> hayley, I can't do everything at once. And, yes, I am at cleaning up, so that at least CLEX could be released.
[05:16:42] <hayley> Sure.
[05:17:13] * hayley probably would write up something on linear-tag REs because some of the rules are substantially different.
[05:17:24] <gilberth> And as it seems, I am my cousins bank, secretary and cleaning lady. Take your pick! :)
[05:19:03] <gilberth> hayley: I don't see that I publish my paper anytime soon. I contemplate about turning it into an article, which I could just put on my website.
[05:19:48] <gilberth> And I am at new stuff: Arbitrary leading and trailing context. Of which "^", "$", "\<", and "\>" are just a special case.
[05:19:53] <hayley> gilberth: If you submit it for ELS '22 then I'll see what the hell I can do about flying there.
[05:20:27] <gilberth> Corona will be over then? And I doubt I'll be in any shape to travel by then.
[05:20:32] <hayley> Right, how do you do ^ and $? The paper mentioned a variation of the GREP machine.
[05:22:25] *** Joins: elflng (~elflng@5.28.137.182)
[05:22:37] <hayley> Or rather that we stick a (.\n) before and then the actual value can be another submatch.
[05:23:05] <gilberth> Indeed, this is what I do. The current scanner implementation handles ^ and $ only at the beginning and end of the expression. I have a prototype for handling it at every position. And: The scanner skeleton notes \n's already. This is the bogus first transition you see in my DFA. I first dispatch on on-a-newline/not-on-a-newline and then on the context (in lex(1)'s sense).
[05:23:19] <hayley> Then again, in a real compiler we'd probably special case to search for every \n (after testing at the very start too) and test for a trailing \n or EOF.
[05:23:53] <gilberth> hayley: lex(1) style trailing context like a/b is already handled, and my implementation is the only one, which does that correctly.
[05:24:01] <hayley> Neat.
[05:24:24] <gilberth> Milady, have you read the draft?
[05:24:53] <hayley> The draft paper? Yes. The clex code? Not really.
[05:25:25] <gilberth> It's in the paper. IIRC. And clex code is not a nice read.
[05:25:39] <hayley> Indeed, 5.1
[05:26:13] <gilberth> What I also should get out of the door: I have a lex(1) compatible implementation in C.
[05:29:14] <gilberth> A real compiler would also special case on "." not matching \n, or in general recognize that the 'x' in '^x$' does not match \n. Or not?! idk.
[05:29:46] <gilberth> Or rather "does not match .*\n.*
[05:30:11] <gilberth> hayley: But I would need to write a manual.
[05:30:55] <gilberth> Which reminds me, that I'll want a printer.
[05:43:42] *** Joins: zacts (~zacts@user/zacts)
[06:03:07] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: brb)
[06:04:11] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[06:10:14] <gilberth> Ah, DSL is there again. Good.
[06:15:19] <hayley> This is so sad can we have Randall Smith Common Lisp
[06:16:00] <hayley> If you use CFFI or early bind anything then it deletes your code
[06:23:04] <gilberth> Who deletes what?
[06:23:41] <hayley> the Randall Smith Common Lisp expert system
[06:24:35] <hayley> Alternately, you are transported into the Alternate Reality Kit https://www.youtube.com/watch?v=I9LZ6TnSP40 for re-education
[06:24:35] -ixelp- Alternate Reality Kit by Randall Smith at Xerox PARC 1986 (VPRI-0131) - YouTube
[06:24:40] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[06:25:18] *** Joins: zacts (~zacts@user/zacts)
[06:30:48] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:33:11] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 255 seconds)
[06:33:12] <edgar-rft> The Edgar Franke Expert System just deleted all your code!
[06:34:47] <White_Flame> hayley: it's funny seeing him have to grab buttons as they float away from where he dropped them without specifically stopping the cursor
[06:34:54] * hayley wonders where the Randy stash is if every video ends in one Randy dying to some vaporize button
[06:35:44] <hayley> Yeah, the velocity calculation could be wrong. Perhaps it is smoothed out too much.
[06:36:48] <White_Flame> nah, he just releases the mouse button a frame too early
[06:37:01] <hayley> Or that, sure.
[06:37:10] <White_Flame> (on a low framerate system)
[06:44:10] <hayley> Hm, with 4 byte characters (e.g. SBCL strings) I am not entirely sure if SIMD searching would pay off. There is also the problem that IIRC I need to compute = over 4 byte packs rather than 1 byte packs. /me checks the intrinsic list.
[06:44:46] <hayley> Aha, PCMPEQD does 4 byte packs.
[06:46:03] <hayley> Though movemask will produce four bits light up per match, but there is probably some way to clean it up.
[06:52:12] <hayley> Could just bitwise-and with a mask like #b0001000100010001 to get the lower bits lit up only. Then we have to divide every position by 4 but that's fine.
[07:17:45] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[07:17:57] <gilberth> I really wonder, why Knuth writes the string pool to a file. Ok. He uses ASCII in his programs without any bets on what a CHAR is, but still he could have embedded the pool directly in the Pascal file. This however would be procedure calls, as Pascal has no means to initialize arrays with a array constant.
[07:19:05] <gilberth> The only reason could be to reduce the total memory use of the program.
[07:19:08] <hayley> Did Multics have a RE compiler?
[07:19:32] <gilberth> Milady, I am old, but not that old.
[07:20:01] <hayley> If we have COMPLR and NCOMPLR and QED then I might be immodest and call my code generator NQED
[07:20:33] <gilberth> No proof?
[07:20:47] <hayley> Well, it wasn't quite easy to make.
[07:21:04] <hayley> "Not quite easily done"
[07:21:48] *** Joins: nihaal (~nihaal@106.201.177.18)
[07:23:52] <gilberth> Heh. Randall's environment would drive me crazy as you always need to catch objects, which are on their way to float away.
[07:24:31] <hayley> Yes, this is why we send the people who want to write C in () in there.
[07:25:14] <hayley> Of course, we hide the button that disables the law of motion.
[07:25:39] <hayley> gilberth: idk, beach used Multics...in the early 80s or something.
[07:26:52] <gilberth> As I said, I am not that old. In the early 80s, I was like 6+yo.
[07:30:34] <gilberth> How about compiling Pascal to PostScript and run TeX on your printer? Bonus points for running METAFONT there too to generate the fonts.
[07:31:01] <hayley> https://hack.org/mc/texts/classic-multics.pdf "Multics offered considerably stronger security than most systems commercially available today. What factors contributed to this?"
[07:42:45] <gilberth> A Pascal compiler could perhaps recognize A[1]:=42; A[2]:=69; and so on right at the start of the program and make that into initial values for the global array A. I wonder, if any Pascal compiler ever did that.
[07:46:29] <gilberth> That would also make dumping easier. The original TeX kind of relied on being able to turn a core dump into an executable again. You would load what ever you'd need like plain.tex or LaTex and then SIGQUIT the program to get a core dump and turn that into an executable of a ready to go plain TeX or LaTex. There is a variable called ready_already, which TeX probes on startup for being set to 314159.
[08:09:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:13:36] <dave0> maw
[08:18:39] <hayley> Hey dave0
[08:18:47] <dave0> hi hayley 
[08:18:51] <dave0> how's it going?
[08:18:58] <hayley> It's fine. How are you?
[08:19:53] <hayley> (BTW I read for a recursive grep, the best thing to do is to load small files eagerly and only mmap large files, so we don't blow out the TLB so much.)
[08:39:02] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Quit: leaving)
[08:42:32] * gilberth always considered mmap a gross hack to distract from short-comings of read(2).
[08:44:03] * hayley just wants a damn byte vector.
[08:44:38] <gilberth> There is an :element-type argument to make-array, forgot?
[08:45:38] <hayley> Yes, but I want to get a whole byte vector for the file, so I don't have to seek it, but files can be big and so copying would be dumb.
[08:47:45] <gilberth> There is FILE-LENGTH, if you have a file, that is. Otherwise: See above.
[08:50:15] <hayley> Hm, so now it has been suggested that I am to make register allocation decisions for SICL, after hash tables and concurrency. At least I have studied the latter two.
[08:51:32] * hayley puts https://www.youtube.com/watch?v=c30vu2yP8vM on the jukebox
[09:05:03] *** Joins: derelict_ (~derelict@user/derelict)
[09:23:43] <dave0> for some reason i thought you were diff'ing but you're grep'ing
[09:24:04] <dave0> weird my brain is
[09:24:08] <dave0> yoda
[09:38:52] * hayley is never going to clean up one chat server someone from her old high school runs, but at least asked if they could blame it on someone other than Jewish people next time they make up some crap.
[09:43:26] <hayley> Somehow I don't think I'll even achieve that much, but at least I tried to not make it a shitshow. Any advice? (I guess "leave and ghost everyone involved" is still an option, sure.)
[09:56:48] *** Quits: mariari (~mariari@user/mariari) (Ping timeout: 256 seconds)
[09:57:11] *** Joins: mariari (~mariari@user/mariari)
[10:08:46] *** Quits: mariari (~mariari@user/mariari) (Ping timeout: 268 seconds)
[10:10:23] *** Joins: mariari (~mariari@user/mariari)
[10:13:31] <hayley> https://www.youtube.com/watch?v=4SDt1TLUbzY
[10:13:32] -ixelp- King Crimson - Indiscipline (Live In Japan 1995) - YouTube
[10:14:23] *** Joins: selwyn (~selwyn@user/selwyn)
[10:24:42] *** Quits: mariari (~mariari@user/mariari) (Ping timeout: 245 seconds)
[10:28:17] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[10:29:02] *** Joins: mariari (~mariari@user/mariari)
[10:39:16] <hayley> When did dmesg first require root? I don't recall it doing that last time.
[10:41:11] <MichaelRaskin> It's a question about your distribution, which you did not specify.
[10:42:42] <dave0> worse than that is the W^X flag which breaks all the JIT's out there
[10:42:59] <dave0> and you need a special program to enable it
[10:43:00] <hayley> I run Arch. Guess I should check the news once in a while.
[10:44:26] <MichaelRaskin> dave0: it does not really, some JITs have switched to re-protecting pages before that change
[10:45:13] <hayley> How do they do inline caching then?
[10:46:02] <MichaelRaskin> They don't do it at the granularity of a single call, sure
[11:05:53] * hayley calls something a strategy and begins to wonder if she is really safe from Java OOP.
[11:31:27] <gilberth> See. Updates only break things and never improve things.
[11:32:29] <hayley> https://www.reddit.com/r/lisp/comments/osqgqe/common_lisp_still_beats_java_rust_julia_dart_in/h6sn7ri/
[11:32:30] -ixelp- Common Lisp still beats Java, Rust, Julia, Dart in 2021 on benchmarks based on phone number encoding from the famous pap [...]
[11:32:39] <hayley> Dear crabs, where is NonBlockingHashMap in Rust
[11:37:33] *** Joins: shka (~herr@109.231.62.239)
[12:28:44] *** Joins: treflip (~user@95.79.32.99)
[12:45:34] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Ping timeout: 265 seconds)
[12:49:45] <hayley> selwyn: Have you ever observed the OS (say, scheduler) stealing out of your frame time budget?
[12:50:59] <hayley> In the server Java land they have a thing called "JVM jitter" which is their noise floor for latency measurements, which IIRC scheduling is a significant part of.
[12:52:49] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[13:34:18] *** Joins: makomo (~makomo@user/makomo)
[13:45:11] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:48:54] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 276 seconds)
[14:15:19] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:60a6:d0c5:4d01:36c6)
[14:39:17] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 252 seconds)
[14:56:11] <sm2n> hayley, a couple months now
[14:56:34] <hayley> Oh no
[14:58:51] *** Joins: random-nick (~random-ni@87.116.182.181)
[15:09:25] <hayley> https://www.youtube.com/watch?v=x-xTttimcNk
[15:09:26] -ixelp- Comfortably Numb - YouTube
[15:11:03] <dave0> is there anybody out there?
[15:13:08] <dave0> pink floyd is genius
[15:14:30] <hayley> https://www.youtube.com/watch?v=XSvH78ZYqmc
[15:14:31] -ixelp- This Wreckage - YouTube
[15:15:16] <dave0> hayley: remember nine inch nails? https://youtu.be/wqSKqS91UdA
[15:15:17] -ixelp- Weird Al Yankovic - Germs - YouTube
[15:15:52] <hayley> Not that much.
[15:43:35] <hayley> https://www.youtube.com/watch?v=OfYaG-qpmpQ
[15:43:36] -ixelp- Travel Weary Capricorn / Mars (Live at Fillmore West, Dec. 14, 1969) - YouTube
[15:50:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[15:53:06] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[16:09:43] <hayley> https://www.youtube.com/watch?v=lb79fD_ez2c
[16:09:43] -ixelp- Telegraph (The Manor Version 1981) - YouTube
[16:12:16] *** Joins: selwyn (~selwyn@user/selwyn)
[16:13:00] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[16:13:26] *** Joins: selwyn (~selwyn@user/selwyn)
[17:11:53] *** Quits: cond (~example@user/aeth/bot/cond) (Ping timeout: 265 seconds)
[17:21:51] * hayley is watching a Cliff Click talk where he uses very good words to describe Java code
[17:21:52] <hayley> "Peephole will clean up your junk shit, pardon my French" - Dr Cliff Click
[17:35:41] <selwyn> he doesn´t write it very idiomatically
[17:35:44] <selwyn> but who cares tbh
[17:36:50] <hayley> "Peephole will clean up your merde trois mal, pardon my French s'il vous plaît"
[17:37:34] <hayley> *très, I mix up the two.
[17:38:17] <dave0> nite all
[17:38:24] <hayley> Sleep tight!
[17:38:36] <dave0> byes hayley 
[17:38:48] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:39:10] <ck_> selwyn: do you have any freenode ties yourself?
[17:39:27] <selwyn> not any more
[17:40:38] <ck_> the whole thing went surprisingly quickly, I'd expected a lot longer tail.
[17:40:50] <selwyn> same
[17:41:55] * hayley wonders why the comment "how the hell did Djikstra and Lamport, then Doligez and Leroy think they had on the fly GCs when you need to pause clearly 😳😳😳" was poorly received and then a comment with the same point but without 😳 was received well
[17:42:17] <hayley> Cause I can't spell Dijkstra?
[17:46:28] <hayley> Also, both pairs are D. and L. and then Doug Lea is DL - coincedence?
[18:00:57] <hayley> https://www.youtube.com/watch?v=ntzCGKOsF4c
[18:00:57] -ixelp- [Greek YTP] Ο Ηλιας Μαμαλακης φτιαχνει Σαλαλα του Κεεεεεεε - YouTube
[18:10:50] <pjb> hayley: Definitely Ludicrous
[18:14:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:21:11] <hayley> pjb: Beats Bjourne Stroupsoup (+- some letters) being BS...
[18:25:10] <hayley> Or I guess perhaps "on the fly" garbage collection is not in the minds of r/lisp and my downcased ironic 😳 style was not well appreciated. Which is funny as I got in trouble for writing too formally and my writing was eventually called a psyop (I shit you not).
[18:44:30] <shka> well, being informal does not have to mean that you are being sarcastic
[18:45:28] <shka> and if you want communicate, doing this in the strait forward and sincere fashion is usually the most effective approach 
[18:45:30] * hayley is never sarcastic.
[18:45:42] <shka> well, then ironic
[18:46:17] <shka> anyway, the trick is to, say exactly what you want to communicate 
[18:46:54] <shka> while you seem to put way to much effort into shit talking other communities 
[18:49:59] <shka> hayley: this intends to be a constructive criticism, i hope that you don't find this offensive
[18:50:32] <hayley> Sure.
[18:51:02] <hayley> I admit I have to put up with their shit the rest of the time, so when I see categorically wrong stuff in r/lisp I am not motivated to be nice.
[18:52:27] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 276 seconds)
[18:53:39] * hayley notes "/me is never sarcastic" was sarcastic, but the tone in her head clearly didn't transfer.
[18:58:43] <shka> hayley: remember that sarcrasm and irony was considered in bad taste for a loooooooooooong time
[18:58:55] <shka> and think that those people were right
[18:59:51] <shka> ok, work time is over, now let's play some Quake!
[19:01:35] <hayley> Again, I tried to be nice, and I got called a fucking psychological operation. At this rate I don't care.
[19:05:19] <hayley> Say I did in fact win as gilberth said with RE engines. No one cares, so I will just use it and poke at people with implementation esoterica to pass the time.
[19:08:28] <hayley> In the grand scheme of things I am probably a minor nuisance to them, as there's only one of me, and they are a total pain in the ass for me as there are a lot of them. So there is a lot of scale that I can, well, compensate for.
[19:09:44] <selwyn> sarcasm was considered bad taste? just in general?
[19:10:06] <ck_> "win" in what way, was there a discussion? can you provide a link please?
[19:10:41] <hayley> ck_: Another performance pissing contest.
[19:12:02] <ck_> I see
[19:14:52] <hayley> It's not like, y'know, anyone has ever changed their mind on such things.
[19:17:59] <pjb> Misplaced chair shuts down nuclear plant in Taiwan <https://www.theregister.com/2021/07/28/taiwan_nuclear_plant_shutdown/>
[19:18:00] -ixelp- D'oh! Misplaced chair shuts down nuclear plant in Taiwan • The Register
[19:18:24] <pjb> Sometimes, less options is better.
[19:18:38] <pjb> Solder the chairs down the floor!
[19:21:31] <hayley> But what if someone licks the chairs?
[19:23:15] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[19:24:37] <pjb> hayley: that shouldn't switch the powerplant controls.
[19:25:46] <shka> selwyn: it used to be considered to be in the bad case back in the XIX century
[19:25:47] <pjb> There's something to be said of GUI as control interfaces there: at least GUI can ask confirmation: do you really want to shut down the nuclearn power plant [ ] yes [x] no 
[19:26:17] <shka> selwyn: and I personally came to agree with this sentiment
[19:26:45] <ck_> https://mitpress.mit.edu/books/irony-and-sarcasm
[19:26:45] -ixelp- Irony and Sarcasm | The MIT Press
[19:28:34] <shka> i think that sarcasm is used most often as either a disguise or way to feel better about yourself
[19:28:57] <shka> and that's why i think it is generally speaking a bad taste
[19:29:19] <shka> also, sarcasm looks completely stupid when put against 100% sincerity 
[19:36:43] <selwyn> > Staff working in the control room moved the chair to clean and, in the process, knocked the acrylic protective cover of a main steam isolation valve switch causing it to tilt, shift, and close, setting off a chain reaction that tripped the main steam turbine and stopped the reactor.
[19:36:47] <selwyn> like homer simpson
[19:37:30] <selwyn> i suppose i am more used to sarcasm as a way of being humorous
[19:37:59] <selwyn> shka: i suppose i agree with those points
[19:38:47] <ck_> sarcasm is difficult to recover from when it fails to land, so best applied between familiar people or when the context is very clear I think
[19:39:04] <selwyn> https://www.youtube.com/watch?v=FRK8uPlXOYo
[19:39:04] -ixelp- The Simpsons - Sarcasm Detector - YouTube
[19:39:42] <shka> arcane dimensions has some interesting visuals for sure https://www.youtube.com/watch?v=6ev5cRtrF2Y
[19:39:42] -ixelp- Quake: Arcane Dimensions 1.8 - ad_grendel Grendel's Blade - All Secrets No Commentary - YouTube
[19:40:06] <selwyn> https://www.youtube.com/watch?v=iQGwrK_yDEg though the lie detector is better
[19:40:06] -ixelp- The Simpsons - Moe and the Lie Detector - YouTube
[19:41:59] <ck_> https://www.youtube.com/watch?v=HNLC-b8zWEk
[19:41:59] -ixelp- The Simpsons - Homer lie detector - YouTube
[19:43:14] *** Joins: zacts (~zacts@user/zacts)
[19:51:42] <ck_> What do you think about this next fall, with respect to The Pandemic? Huge uptick again or no?
[19:54:54] <shka> yeah, probably 
[20:02:44] <selwyn> i think maybe not but we would have to be lucky
[20:08:36] <selwyn> most legal restrictions have been lifted here but cases continue to fall
[20:09:06] <shka> selwyn: weather may something to say about it
[20:09:08] <selwyn> the optimistic take is that vaccines work
[20:09:25] <shka> summer is not typically associated with viral infections
[20:09:31] <selwyn> but yes, other factors like 1) weather 2) the restrictions have not been lifted for long enough to show up in the daily case rate
[20:09:51] <selwyn> nevertheless, there was no reason to suspect the cases to drop like that
[20:11:03] <selwyn> the predictions were to have 100k daily cases by now
[20:11:03] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[20:11:42] *** Joins: derelict_ (~derelict@user/derelict)
[20:30:21] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:33:03] *** Quits: jealousmonk (~jealousmo@brettgilio.com) (Ping timeout: 258 seconds)
[20:46:05] *** Joins: jealousmonk (~jealousmo@brettgilio.com)
[20:46:24] *** Quits: lad (~lad@user/lad) (Ping timeout: 268 seconds)
[21:04:54] *** Joins: lad (~lad@user/lad)
[21:48:20] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[22:08:05] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:14:07] *** Joins: cond (~example@user/aeth/bot/cond)
[23:05:01] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:20:31] *** Joins: zos (~zosthegoa@ool-457a8044.dyn.optonline.net)
[23:25:10] *** Joins: selwyn (~selwyn@user/selwyn)
[23:43:33] <gilberth> Good morning #lispcafe!
[23:45:08] <selwyn> hi
[23:45:11] <gilberth> I slept in and dreamt of people, which is strange as I usually don't do that. Hmm.
[23:45:23] <gilberth> selwyn: Hi there!
[23:45:40] <selwyn> my dreams are getting more vivid recently
[23:45:56] <gilberth> Join my club then.
[23:46:42] <gilberth> It's really kind of strange as mine are getting way more vivid, too. At times I wake up from them.
[23:46:47] <selwyn> in my case it is probably caused by less drinking and smoking recently, and living a more boring life in general
[23:46:56] <selwyn> i am really tired of writing this paper
[23:47:18] <selwyn> people say that hard work is good for you
[23:47:34] <gilberth> My life is super boring and I don't drink since January. Not a single drop as it would kill me.
[23:47:35] <selwyn> i no longer believe that, at least if it is the kind of work that i do
[23:47:44] <selwyn> gilberth: well done!
[23:48:21] <gilberth> selwyn: There is a reason I hide out at my cousin's place. Worked so far.
[23:49:04] <gilberth> So, the paper you write feels like tedious work?
[23:49:10] <pjb> gilberth: I hope you still drink water!
[23:49:28] <gilberth> pjb: Sure. And coffee!
[23:49:29] <pjb> gilberth: may I suggest sparkling waters? 
[23:49:40] <pjb> there are several different sparkling waters.
[23:49:48] <gilberth> pjb: No, I like it non-sparkling. Thanks.
[23:49:57] <pjb> ok
[23:51:00] <gilberth> Anyhow, any idea how to preserve comments in an AST?
[23:52:06] <gilberth> Block comments ought to easy, should attach them to the next form. But line comments?
[23:53:05] <gilberth> The pretty printer will get interesting though. Hmm
[23:54:58] <shka> https://renato.athaydes.com/posts/revisiting-prechelt-paper-comparing-languages.html
[23:54:59] -ixelp- Renato Athaydes
[23:55:29] <shka> someone decided to re-examine the findings 20 years later
[23:55:31] <shka> cool
[23:56:19] *** Quits: derelict_ (~derelict@user/derelict) (Quit: WeeChat 3.2)
[23:56:31] <selwyn> gilberth: there is an unexpected issue with the numerical simulations that has come up, which is very tedious to resolve
[23:56:41] <selwyn> either the physics is wrong, or the code is wrong (or both)
[23:57:07] <selwyn> we don´t really have any idea what it is yet, very frustrating
[23:57:08] <shka> i wonder why rust program ran so slow
[23:58:05] <shka> it is funny that CL STILL came out on top
[23:58:05] <pjb> gilberth: making the AST more complex, allowing comment nodes between any nodes (and maintaining the ordering).
[23:58:17] <gilberth> selwyn: Yes, I remember you talking about that. Kinda scary.
[23:59:15] <selwyn> scary?
[23:59:20] <gilberth> pjb: Between? I would prefer at. As a comment applies to a form, at least in my mental model. And that way I could handle them more easily.
[23:59:45] <gilberth> selwyn: Well, what if, the physics are wrong?
[23:59:52] <selwyn> oh
[23:59:53] <selwyn> lol
