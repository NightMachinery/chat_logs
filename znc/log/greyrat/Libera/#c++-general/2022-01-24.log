[00:04:09] *** Quits: Cyp (~cyp@213.237.88.120) (Excess Flood)
[00:04:34] *** Joins: Cyp (~cyp@213.237.88.120)
[00:06:19] *** Joins: xkuru (~xkuru@user/xkuru)
[00:23:57] *** Joins: john99 (~john99@138.246.103.34.bc.googleusercontent.com)
[00:27:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 250 seconds)
[00:34:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:35:15] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) ()
[00:35:59] *** Joins: KombuchaKip (~kip@192.252.230.5)
[00:39:37] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[00:46:57] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:53:23] *** Joins: proller (~p@2a02:6b8:b081:1213::1:16)
[00:55:33] *** Quits: paul424 (~tom@ip-5-172-233-77.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:57:52] *** Joins: markong (~kvirc@213.146.188.203)
[00:58:33] *** gentooclimax is now known as climax
[01:00:49] *** Quits: Leo_V (~Leo@157.52.18.77) ()
[01:03:13] *** climax is now known as gentooclimax
[01:19:20] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:23:45] *** Joins: Crowley99 (~Crowley99@208.59.191.14)
[01:24:47] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:26:49] *** Quits: magla (~gelignite@55d42e32.access.ecotel.net) (Quit: Stay safe!)
[01:31:26] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:33:11] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[01:33:20] <CarloWood> Hmm, find backwards in and a string_view starting from a given offset...
[01:33:30] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[01:34:35] <CarloWood> I think you have to use remove_suffix first and then find_last_of.
[01:36:21] <PJBoy> just find_last_of with the offset
[01:37:12] <PJBoy> << "123412341234"sv.find_last_of('4', 10)
[01:37:13] <geordi> 7
[01:38:11] <PJBoy> or rfind
[01:38:21] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[01:38:31] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:39:36] <CarloWood> { string_view sv = "VkDescriptorSet 0xf3eaa0000000081[m_imgui.m_descriptor_set.m_handle[0] [0x55f351f62b60]]"; auto bracket_pos = sv.find_first_of('['); auto val = sv.find_last_of('x', bracket_pos); --val; cout << sv.substr(val, brack_pos - val); }
[01:39:36] <geordi> error: 'brack_pos' was not declared in this scope; did you mean 'bracket_pos'? (fix known)
[01:39:48] <CarloWood> geordi: fix
[01:39:48] <geordi> 0xf3eaa0000000081
[01:40:12] <johnny> oh, i didn't even know geordi could do that!
[01:40:26] <johnny> that's pretty cool
[01:40:40] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[01:40:49] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[01:41:26] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:33] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:33] *** ChanServ sets mode: +v npaperbot
[01:41:55] <CarloWood> *random job interview* Interviewer: "Mr. Smith, I don't understand how you can be THIS bad at C++!? You won that prestigious coding tournament!"
[01:42:23] <CarloWood> Mr. Smith: "Yeah well - I am used to using geordi to fix my programs!"
[01:42:51] <johnny> hah
[01:44:06] <PJBoy> fwiw it's GCC that offers the fix
[01:45:26] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Quit: Quit)
[01:45:29] <PJBoy> or at least I thought it did...
[01:45:36] <PJBoy> I've seen that "fix known" elsewhere
[01:48:15] *** gentooclimax is now known as climax
[01:57:08] *** climax is now known as gentooclimax
[02:04:18] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790:2c60:a960:306:b346)
[02:12:46] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:13:57] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[02:19:04] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[02:25:02] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[02:25:26] *** Joins: kevr (~kevr@user/kevr)
[02:27:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[02:40:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:40:51] <john99> umm exist some problem if i include a C header with char val[static N] in a c++ program?
[02:42:47] <NyB> hello! does anyone have any pointers on why [[no_unique_address]] may be behaving (AFAICT) a bit inconsistently? E.g. https://wandbox.org/permlink/1g8rDu9GHSp1702i
[02:44:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[02:45:47] <CarloWood> NyB: my *guess* would be to guarantee that &Test0::e1 still is a *valid* address.
[02:47:11] <CarloWood> I mean... not unique could be interpreted as that &e0 == &e1 == &x in the second case, but it is not true that &x == &e0 in the first case.
[02:47:14] *** gentooclimax is now known as climax
[02:48:22] <NyB> so, it's because both fields are of the same type?
[02:48:50] <CarloWood> No, because Empty is the last element of the struct
[02:49:08] <CarloWood> It seems that in that case it's size still has to be 1.
[02:49:41] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[02:49:57] <NyB> CarloWood: Using separate empty types works, though: https://wandbox.org/permlink/CdNrs9pohVUVWqkL
[02:50:21] *** climax is now known as gentooclimax
[02:51:14] <CarloWood> That's the same program
[02:51:29] <CarloWood> Oh wait
[02:51:50] <CarloWood> I guess my guess was wrong then.
[02:51:56] <CarloWood> Now it seems a bug :P
[02:52:14] <NyB> CarloWood: not sure: https://stackoverflow.com/a/59109480
[02:52:33] <NyB> (old answer, but might be valid)
[02:55:45] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:57:42] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:00:35] <Alipha> john99: c++ doesn't have the `char val[static N];` syntax, so, yes, that's a problem.
[03:00:47] <john99> yup, i tested
[03:01:04] <john99> i hoped in exxtern "C" the code do a exception
[03:01:06] <john99> but no
[03:01:34] <john99> its a pretty nice problem of compativility
[03:01:38] <john99> compatibility
[03:02:04] <CarloWood> NyB: Seems so. But my guess was correct too though. In the case of Test0 e1 overlaps with x, but in the case of Test1 it has to point outside of Test1, which apparently isn't allowed.
[03:02:16] <CarloWood> So, it has to be different types AND at the end of the struct.
[03:02:31] <CarloWood> Or.. you could put too many at that start of the same type.
[03:02:42] <CarloWood> https://wandbox.org/permlink/0HaB9tvuXG3Jx1KT
[03:03:25] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:04:16] <CarloWood> https://wandbox.org/permlink/6ZCKdcb9nb2SHcPT <-- 9 of them also results in size of 16.
[03:04:24] <CarloWood> They did eat up all of x.
[03:04:30] <Alipha> john99: from what i understand, `char val[static N];` just documents that val must point to an array of at least N elements... so you can just remove `static`? maybe go ahead and remove the N too?
[03:04:56] <john99> its no so direct becouse with taht i can achieve array bound checking
[03:05:31] <john99> but yes, its pretty equivalent to ptr* somehtin, size_t n
[03:05:55] <john99> and null check too i think
[03:07:47] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790:2c60:a960:306:b346) (Quit: Never gonna give you up, never gonna let you down...)
[03:19:38] *** Joins: seninha (~seninha@user/seninha)
[03:22:45] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:23:26] *** Quits: john99 (~john99@138.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[03:23:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[03:34:37] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:34:38] *** Quits: bobb_ (~bobb_@dslb-088-066-131-043.088.066.pools.vodafone-ip.de) (Quit: Client closed)
[03:37:10] *** Joins: AmR (~AmREiSa@156.199.9.4)
[03:41:27] <yolo> for mutex/lock, I read somewhere saying "you should always lock the data, not the code", does it stand all the time?
[03:42:18] <yolo> is there a way to lock/unlock without involving thread
[03:43:05] <PJBoy> NyB, re: different types needed for saving space: http://eel.is/c++draft/intro.object#9.sentence-2
[03:43:40] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 250 seconds)
[03:43:42] <PJBoy> (where [[no_unique_address]] declares an overlapping lifetime)
[03:44:07] <yolo> "Lock data, not code" is enforced in Rust.
[03:47:18] *** gentooclimax is now known as climax
[03:50:21] <RandomReader> yolo I'm not sure what you're asking, it seems to be several different things put together
[03:50:46] <RandomReader> what is it you're trying to do or understand?
[03:52:46] *** climax is now known as gentooclimax
[03:54:10] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:56:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[03:56:29] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[03:59:04] *** Joins: ethrl (~ethereal@user/doforlove33)
[04:01:17] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[04:02:53] *** Joins: xiongxin (~Thunderbi@2409:8954:38c4:44c4:53d0:6eda:c8cd:506c)
[04:04:05] *** Joins: hexingb (~hexingb@36.155.28.143)
[04:04:14] *** Quits: ethrl (~ethereal@user/doforlove33) (Quit: WeeChat 2.8)
[04:05:42] *** Joins: chozorho (~chozorho@2601:146:300:c30::708b)
[04:07:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:07:42] <yolo> RandomReader: trying to do write a struct safely, the original code was using pthread-locking functions that modifying the struct, i'm trying to change it to lock the struct directly
[04:08:33] <yolo> meanwhile i don't really need thread(as the original code), then I was like, is there a way to lock without pthread lib(not atomic)
[04:09:05] <Alipha> yolo: I don't think either accurately describes what you're supposed to do. A mutex protects data (which may mean it is used to guard more than one variable. For instance, if you had a thread-safe vector, you'd want one mutex to guard the data pointer, size value, and capacity value--not 3 separate mutexes.
[04:09:07] <yolo> s/pthread-locking fuctions/pthread locking a few functions/
[04:09:13] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:09:39] <Alipha> However, "lock data, not code" is likely to cause you to lock at the wrong abstraction level
[04:10:50] <Alipha> For instance, suppose I have this thread-safe vector. And I put locks inside all of its functions. Sounds all good, except, when someone then goes to use this vector and does something like:
[04:11:39] <Alipha> if(!v.empty()) { value = v.back(); v.pop_back(); }
[04:12:47] <Alipha> This is "thread safe" because empty, back, and pop_back all lock the data, do their operation, and then unlock the data, right? Wrong.
[04:13:11] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[04:13:42] <Alipha> If another thread did v.clear() between any of those 3 operations, this code would completely fail
[04:14:55] <yolo> so what should I do then?
[04:14:59] <Alipha> So really, you need code like: v.lock(); if(!v.empty()) { value = v.back(); v.pop_back(); } v.unlock();
[04:15:22] <Alipha> (preferably with an RAII scoped_lock or such)
[04:15:42] <yolo> basically we need lock operations for containers? as locking container is not robust?
[04:16:40] <yolo> because, the algorithms on containers will not respect your data(container)-only-locking, as they are not aware your intention, there is no way they can be aware
[04:17:52] <Alipha> Right, a "locking container" is not useful because it's locking at the wrong abstraction level. The code that is working with the container generally needs to do several operations while under the same lock.
[04:18:20] <Alipha> Or at least, you'd write a locking container differently that I proposed.
[04:18:33] <yolo> that makes sense, thanks!
[04:18:44] <RandomReader> ...for one of the earlier questions, I don't understand what you mean about locking without threads .. if there aren't multiple threads, what is the race condition you are guarding against?
[04:20:03] <yolo> RandomReader: when i look at the pthread mutexes i was thinking "i probably don't need pthread_lock and pthread in general, what else can I do", then I recall i could just use posix-semaphore to lock/unlock, while i was asking i forgot the posix-ipc thing
[04:20:27] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:21:27] <yolo> i used to do some kerne work, which provides spinlock/barrier/etc for free, which are very handy.
[04:24:20] <RandomReader> but how is any of this relevant if you don't have multiple threads?
[04:24:32] <RandomReader> what is the *purpose* of the lock?
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:26:05] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:26:35] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:27:22] <AmR> I need encryption tool that have one key, Any one know one ?
[04:27:43] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 256 seconds)
[04:28:02] *** Joins: hexingb (~hexingb@111.32.64.41)
[04:28:33] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[04:29:47] <RandomReader> most encryption tools use one key, what do you mean?
[04:30:42] <AmR> I don't need private and public leys, I need key that can decrypted text file. I need include that key in my App to decrypted text file
[04:31:30] <RandomReader> so use symmetric encryption algorithm (which is more common anyway) instead of an asymmetric one
[04:32:03] <RandomReader> even most .zip tools have that functionality
[04:38:17] *** Quits: xiongxin (~Thunderbi@2409:8954:38c4:44c4:53d0:6eda:c8cd:506c) (Ping timeout: 240 seconds)
[04:41:44] <Alipha> AmR: there's plenty of tools which let you encrypt using a passphrase. you can use 7zip, as RandomReader mentioned. also `age`, the scrypt command line utility, or even pgp ( https://superuser.com/questions/1680979/how-to-encrypt-the-pgp-symmetric-key-passphrase-with-following-options )
[04:42:34] <Alipha> yolo: what i would probably do would be just create a generic lockable<T> class: https://wandbox.org/permlink/IuAbhMSGb38xCniP
[04:44:23] <Alipha> note this is very similar to the std::weak_ptr api
[04:45:29] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:45:43] <kalven> do you use such a thing?
[04:46:17] <Alipha> kalven: i've yet to really do threading in c++, actually. sounds like you have an opinion though?
[04:46:41] <Alipha> and i wrote up that lockable and locked template just now, heh
[04:48:46] <kalven> ah ok.. I haven't used classes like that myself. Perhaps mostly because I find it common to access more than one thing with a lock
[04:49:03] <kalven> and wrapping those things into a struct in order to use a lockable class seems like a waste
[04:51:51] <Alipha> right. again, my lockable/locked templates are still abstracting too low, generally, but it's a better api than a "thread-safe" container that wraps individual operations.
[04:52:31] <kalven> yeah, those are even less useful
[04:52:45] <Alipha> as i was writing it, i was also thinking it would be nice to have a function to lock multiple lockable<T> objects at once, e.g., auto [v, w, x] = lock_all(vec, foo, bar);
[04:54:17] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[04:54:49] *** Joins: xiongxin (~Thunderbi@120.197.198.189)
[05:00:25] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[05:00:40] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:02:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b988:430e:a589:fdf3) (Ping timeout: 240 seconds)
[05:03:40] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:04:55] *** Joins: xiongxin1 (~Thunderbi@120.197.198.177)
[05:06:15] *** Quits: xiongxin (~Thunderbi@120.197.198.189) (Ping timeout: 256 seconds)
[05:06:15] *** xiongxin1 is now known as xiongxin
[05:09:34] *** Quits: xiongxin (~Thunderbi@120.197.198.177) (Client Quit)
[05:18:55] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:19:36] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[05:20:20] *** Joins: malloy (~jimery@116.30.223.163)
[05:20:52] *** Joins: Guest38 (~Guest38@202.81.231.204)
[05:21:10] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 250 seconds)
[05:23:21] *** Quits: jsbach (~jsbach@2a01:c23:6565:4d00:570e:ac61:35a8:83b7) (Ping timeout: 268 seconds)
[05:29:05] *** Joins: hexingb (~hexingb@111.32.64.41)
[05:29:42] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:32:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:35:14] *** Joins: kevr` (~kevr@user/kevr)
[05:37:30] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[05:41:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:41:26] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:36] *** ChanServ sets mode: +v npaperbot
[05:48:59] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:52:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:53:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:55:16] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:03:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:04:03] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[06:05:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[06:06:52] *** Joins: skapata (~Skapata@user/skapata)
[06:17:11] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[06:18:18] *** kevr` is now known as kevr
[06:33:34] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:35:40] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[06:42:17] *** Joins: ferdna (~ferdna@user/ferdna)
[07:01:19] *** Quits: Guest38 (~Guest38@202.81.231.204) (Quit: Connection closed)
[07:02:15] *** Joins: Guest38 (~Guest38@202.81.231.204)
[07:05:10] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[07:11:00] *** Joins: adeliktas3 (~adeliktas@i59F5FF62.versanet.de)
[07:12:57] *** Quits: adeliktas (~adeliktas@i59F5F6AB.versanet.de) (Ping timeout: 240 seconds)
[07:12:57] *** adeliktas3 is now known as adeliktas
[07:18:19] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:20:22] *** Quits: DSpider (~DSpider@82.79.237.89) (Quit: Leaving)
[07:21:10] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:22:37] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:23:49] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:24:09] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:25:10] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:25:24] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[07:26:21] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[07:31:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:32:44] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:33:45] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:34:55] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:35:35] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:38:08] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:42:05] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[07:44:12] *** vinleod is now known as vdamewood
[07:44:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[07:45:06] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[07:48:56] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 250 seconds)
[07:56:20] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:01:06] *** Joins: indigaz (~Indigaz@c-73-168-117-231.hsd1.in.comcast.net)
[08:05:22] *** Joins: hexingb (~hexingb@36.155.28.143)
[08:12:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[08:35:18] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 250 seconds)
[08:36:17] *** Joins: hexingb (~hexingb@111.32.64.41)
[08:42:10] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:55:34] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:56:16] *** Quits: indigaz (~Indigaz@c-73-168-117-231.hsd1.in.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[08:58:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:06:45] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:13:59] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[09:28:02] *** Quits: emerent (~quassel@p200300cd57044307ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:28:51] *** Joins: emerent (~quassel@p200300cd57044325ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:36:50] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[09:37:59] *** Quits: hexingb (~hexingb@111.32.64.41) (Read error: Connection reset by peer)
[09:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:35] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:35] *** ChanServ sets mode: +v npaperbot
[09:48:33] *** Joins: hexingb (~hexingb@111.32.64.41)
[09:50:09] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:54:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:00:24] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:08:26] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[10:34:34] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[10:35:49] <kalven> re the usefulness of having random access to codepoints: https://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/
[10:43:07] <ville> thread-safe message queue is a perfectly fine
[10:45:19] <ville> and you can have get operations that: block indefinetly, block for timeout, block until time, fail if it would block and that's all the interface you need
[10:47:03] <AmR> an I build Qt 5.6.3 with openssl 1.1.1 ????
[10:47:58] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:49:05] <ville> AmR: you really should try to put more thought into how you present your questions. your questions are often so void of any context that they are impossible to answer or near nonsensical
[10:50:05] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Remote host closed the connection)
[10:53:14] <ville> AmR: to even begin to answer your questions would require people to aks you multiple questions them from you making it not worth the effort
[10:53:30] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:54:59] *** Joins: jsbach (~jsbach@2a01:c22:a90b:a500:ea94:d29d:c08b:3a52)
[10:58:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[11:10:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:27:17] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[11:32:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:39:02] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:39:14] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:40:12] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:40:12] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Client Quit)
[11:41:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:46:35] *** Quits: talisein (~talisein@user/talisein) (Ping timeout: 250 seconds)
[12:07:18] *** Quits: Crowley99 (~Crowley99@208.59.191.14) (Quit: Connection closed)
[12:11:34] *** Quits: adeliktas (~adeliktas@i59F5FF62.versanet.de) (Quit: like, subscribe, turn notifications on, buy my merch, write me an email and have a nice day.)
[12:12:16] *** Joins: adeliktas (~adeliktas@i59F5FF62.versanet.de)
[12:13:58] *** Quits: Guest38 (~Guest38@202.81.231.204) (Remote host closed the connection)
[12:15:04] *** Joins: JohnMS_AWAY (~kvirc@user-5-173-136-38.play-internet.pl)
[12:16:07] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[12:16:55] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[12:17:05] *** Quits: JohnMS_AWAY (~kvirc@user-5-173-136-38.play-internet.pl) (Read error: Connection reset by peer)
[12:17:57] *** Joins: JohnMS_AWAY (~kvirc@185.73.229.242)
[12:19:23] *** Joins: robod34 (~Username@79.113.195.239)
[12:19:37] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Ping timeout: 240 seconds)
[12:20:07] *** Quits: chozorho (~chozorho@2601:146:300:c30::708b) (Quit: WeeChat 3.0)
[12:20:59] <LordKalma> !rq
[12:20:59] <nolyc> LordKalma: <cbreak> LordKalma: friendship is magic
[12:31:19] *** Quits: proller (~p@2a02:6b8:b081:1213::1:16) (Ping timeout: 268 seconds)
[12:33:16] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[12:34:45] *** Joins: Simplar (~quassel@188.163.93.76)
[12:39:32] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:52:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[13:07:52] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 250 seconds)
[13:08:36] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:11:20] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[13:11:23] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:11:50] *** Quits: JohnMS_AWAY (~kvirc@185.73.229.242) (Read error: Connection reset by peer)
[13:13:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:21:43] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 256 seconds)
[13:30:15] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:30:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:34:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:39:38] *** Joins: luizfrds (~Luiz@152.250.243.147)
[13:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:35] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:35] *** ChanServ sets mode: +v npaperbot
[13:44:32] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 240 seconds)
[13:44:34] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[13:48:19] *** Joins: seninha (~seninha@user/seninha)
[14:06:58] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[14:11:37] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 240 seconds)
[14:12:48] *** Joins: hexingb (~hexingb@36.155.28.143)
[14:15:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:19:49] *** Joins: syrius (syrius@titan.stormtek.net)
[14:30:17] *** Quits: letto (~letto@86.120.81.105) (Ping timeout: 240 seconds)
[14:30:20] *** Joins: Burgundy (~NA@86.121.143.206)
[14:32:44] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:37:34] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 250 seconds)
[14:40:11] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:41:19] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Quit: Leaving)
[14:44:17] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[14:45:33] *** Joins: acm1pt (~netadm666@45.178.2.0)
[14:45:44] *** Joins: letto (~letto@86.120.81.105)
[14:48:11] *** Joins: cursey (~cursey@user/cursey)
[14:48:44] *** Joins: proller (~p@2a02:6b8:0:40c:c30b:1605:e861:ef65)
[15:04:57] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[15:11:17] *** Joins: syrius (syrius@titan.stormtek.net)
[15:13:19] *** acm1pt is now known as admred2018
[15:19:18] *** admred2018 is now known as lucho666
[15:38:07] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:38:15] *** Joins: DSpider (~DSpider@82.79.237.78)
[15:39:32] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 250 seconds)
[15:49:32] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:50:59] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:52:57] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 240 seconds)
[15:53:35] *** Quits: Simplar (~quassel@188.163.93.76) (Ping timeout: 256 seconds)
[16:07:20] *** Joins: Leone (~Leo@157.52.18.77)
[16:08:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:15:06] <xkoncek> !rq
[16:15:07] <nolyc> xkoncek: <kkd> The Q in QVariant is for "Questionable"
[16:15:24] <kkd> I have been summoned.
[16:16:38] <xkoncek> Questionable GUI framework
[16:17:02] <xkoncek> Questionable Toolkit?
[16:20:54] <PJBoy> have a great day kkd
[16:21:22] * PJBoy sends kkd to the graveyard
[16:21:31] <LordKalma> wtf?! this is the internet, fight!
[16:21:34] <LordKalma> ahh that's better
[16:22:13] * LordKalma sacrifices the Dark Magician to bring kkd back from the Shadow Realm
[16:26:27] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[16:27:27] *** Joins: hexingb (~hexingb@36.155.28.143)
[16:38:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:42:43] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:47:36] *** Quits: lucho666 (~netadm666@45.178.2.0) (Quit: lucho666)
[16:51:02] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[16:52:12] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Read error: Connection reset by peer)
[16:53:49] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[16:58:42] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[16:58:59] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Remote host closed the connection)
[17:00:23] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Read error: Connection reset by peer)
[17:00:48] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[17:07:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:13:30] *** Joins: Simplar (~quassel@188.163.93.76)
[17:14:14] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[17:38:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[17:41:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:37] *** ChanServ sets mode: +v npaperbot
[17:54:28] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[17:59:02] *** Joins: HvszrStykp (~X@81.171.62.81)
[18:00:32] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:01:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:03:06] *** Joins: hexingb (~hexingb@180.212.209.125)
[18:06:35] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:07:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:08:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:10:39] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:11:35] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[18:13:33] *** Quits: hexingb (~hexingb@180.212.209.125) (Ping timeout: 256 seconds)
[18:16:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5) (Ping timeout: 268 seconds)
[18:19:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:22:09] *** Quits: nelubit (~nelubit@user/nelubit) (Read error: Connection reset by peer)
[18:22:28] *** Joins: nelubit (~nelubit@user/nelubit)
[18:24:36] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:25:14] <ville> rpav: CMakeList.txt or cmake in general is not required. any means to produce a compile_commands.json suffices
[18:25:34] <LordKalma> most notably, bear instead of make
[18:27:44] <ville> you can write your makefile to produce compile_commands.json just fine
[18:27:49] <rpav> fair but if you're not using cmake, you're a bad developer
[18:28:02] <LordKalma> !grab rpav
[18:28:02] <nolyc> LordKalma: The operation succeeded.
[18:29:55] <rpav> bah, that will look pretty quaint in 20-30 years when people are finally starting to migrate indecisively to something else
[18:34:16] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:39:03] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[18:39:23] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[18:39:49] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:39:58] *** Joins: seninha (~seninha@user/seninha)
[18:42:00] <PJBoy> and we're still on IRC
[18:42:19] <LordKalma> https://xkcd.com/1782/
[18:44:37] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[18:44:59] *** Joins: seninha (~seninha@user/seninha)
[18:45:46] <ashafq> LordKalma: beacause it's the best 😊
[18:46:05] <LordKalma> says the member sending emoji over irc
[18:46:45] <ashafq> LordKalma: Because UTF-8 is everywhere
[18:47:02] <LordKalma> laughs in windows cmd
[18:47:29] <ashafq> lol
[18:47:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:48:47] <rpav> yeah but that's the thing .. irc can really do all the things if you want, and it's not dependent on the bottom line of some single org introducing more and more freemium features to keep it afloat
[18:49:12] <rpav> emoji? sure .. you really want embedded media? sure
[18:49:51] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[18:50:42] <PJBoy> it's true though
[18:50:53] <PJBoy> I don't like slack's interface
[18:51:02] <PJBoy> and my IRC is roughly set up how I like it
[18:51:17] <PJBoy> and if it wasn't, there's something I can do about it
[18:52:16] <rpav> yeah .. compare that to "customizing" discord or slack, which involve selecting one of a handful of predetermined colors, and because they're feeling generous, font size
[18:52:38] *** Joins: hexingb (~hexingb@36.155.28.143)
[18:53:02] <rpav> also having entire "servers" for single topics is a bit weird, and tbh so are most of the people i've encountered on most of them
[18:56:22] <lxsameer> hey folks, is it possible to build a target in release mode and the rest of targets in debug mode using CMake
[18:56:41] *** Joins: sonic (~sonic@user/sonic)
[18:58:55] <rpav> lxsameer: why / what is your goal
[19:00:35] <rpav> the short answer is no; but if you're trying to build multiple versions of libraries in one build (e.g., debug/profile/...) then the usual approach is to actually have multiple targets
[19:00:36] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:01:32] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[19:01:56] <lxsameer> rpav: I have a tool that the source is in my project as well. I use that tool to generate some C++ code. so I want to use it during the build
[19:02:05] <lxsameer> and i want it to be in release mode
[19:02:07] <rpav> the longer answer is it _might_ be possible to change CMAKE_BUILD_TYPE on the fly, or implement some kind of per-target build type, but i haven't tried and i'm not sure what you should do there .. and depending, you might not want to do it
[19:02:24] <rpav> oh, see, that's the easy one
[19:03:05] <lxsameer> rpav: thanks, let me try
[19:03:11] <rpav> add_custom_command / add_custom_target which calls `cmake -DCMAKE_BUILD_TYPE=Release ...` and make your stuff depend on it
[19:03:44] <rpav> i would probably have a separate build tree for that though, because it's going to mess with CMakeCache.txt
[19:04:07] *** Joins: Crowley99 (~Crowley99@208.59.191.14)
[19:04:17] <rpav> alternatively you could probably hack the specific target's build flags, but that kinda sucks if you want to debug the tool
[19:04:44] <lxsameer> ah gotcha
[19:08:42] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:10:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:17:46] *** Joins: pulse (~pulse@user/pulse)
[19:19:00] <LordKalma> lxsameer, you may want to learn superbuilts
[19:19:09] <LordKalma> superbuilds*
[19:19:23] <LordKalma> basically you have one master build that is full of custom targets pretty much calling cmake on other targets
[19:19:33] <LordKalma> *on other projects
[19:19:35] <rpav> or also simply having external projects
[19:19:46] <LordKalma> which you manage with a super build :p
[19:19:59] <rpav> you _can_, though whether the added hierarchy is worth it depends
[19:20:12] <rpav> CPM.cmake is another solution which can build your things without a superbuild, submodules, etc
[19:20:25] <rpav> you don't even need that really but it sortof automates things
[19:21:16] <LordKalma> https://github.com/SerenityOS/serenity/blob/master/CMakeLists.txt#L86
[19:21:18] <LordKalma> a good example
[19:22:37] *** Quits: dld (~davidlowr@2601:197:600:1210:88d:2354:617:54b5) (Ping timeout: 240 seconds)
[19:23:31] <LordKalma> interesting takes https://twitter.com/benj_fry/status/1484880594236411907
[19:23:44] *** Joins: dld (~davidlowr@73.61.8.28)
[19:24:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:487f:1da5:d721:b5d5)
[19:24:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:28:18] <rpav> not surprising; C/C++ people don't really _have_ a problem with safety that rust really solves, whereas JS (or other) people often have a fear of C++ and will pick some perceived alternative
[19:28:43] *** Quits: dld (~davidlowr@73.61.8.28) (Ping timeout: 256 seconds)
[19:28:58] <LordKalma> yeah, I think this is the "scary" language
[19:29:18] <LordKalma> and rust is also perceived as more "Modern" perhaps
[19:29:55] <rpav> there's a lot of "eww c++!" (i.e. "i had a bad experience once and/or all my friends say this")
[19:29:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[19:30:04] <LordKalma> indeed
[19:30:05] *** Joins: dld (~davidlowr@2601:197:600:1210:5064:96c:65f6:1d79)
[19:30:10] <rpav> which i mean pre-c++11 sortof you had a point, but
[19:30:20] <LordKalma> the JS ecosystem is also very particular. it's full of webdevs which are a class of their own
[19:30:26] <LordKalma> they have a different understanding of programming
[19:30:37] <LordKalma> which I think doesn't fit well with the c++ mindset
[19:30:40] <lxsameer> LordKalma: oh cool
[19:30:42] <rpav> basically
[19:30:44] <LordKalma> not worse, just different
[19:30:54] <bobb_> the conan stuff didn't convince me yet
[19:31:03] <rpav> though probably less different than they think these days
[19:31:23] <LordKalma> conan is going trough puberty and it sucks
[19:31:33] <LordKalma> everything is going to break for 2.0
[19:31:34] <LordKalma> ffs
[19:31:42] <rpav> JS is kinda surprisingly close to C++ in a lot of ways now .. in C++ you manage the low-level value things but otherwise can do a lot of similar things with the higher-level APIs
[19:31:45] <bobb_> maybe its just me but it reminds me on pip
[19:32:10] <bobb_> LordKalma this is exactly how it feels
[19:32:22] <LordKalma> are you on the slack bobb_ ?
[19:32:26] <LordKalma> I rant with them all the time
[19:33:01] <bobb_> LordKalma i'm rarely there but what are you rant about? About conan not (really) working?
[19:33:19] <LordKalma> I've been warning them they are pulling a "Python 3"
[19:33:36] <PJBoy> python 3 was fine
[19:33:42] <bobb_> haha chances are good
[19:33:43] <PJBoy> it was linux that messed up there
[19:33:46] <LordKalma> the transition was not :D
[19:33:58] <PJBoy> the transition on Windows was squeaky clean
[19:34:05] <LordKalma> the fuck it was
[19:34:19] <PJBoy> you just download python 3 and you're sorted
[19:34:22] <LordKalma> did you try using numpy and derivates for *years* after py3?
[19:34:31] <LordKalma> yeah, the bare language doesn't count
[19:34:35] <LordKalma> your shit must work
[19:34:43] <PJBoy> eh you use python 2 for whatever legacy stuff
[19:34:48] <PJBoy> and python 3 for whatever modern stuff
[19:35:02] <LordKalma> but with conan recipes break :)
[19:35:08] <bobb_> i'm involved in a c++ project with about 5 super trivial library dependencies one could easily check with an existing CMake module but no, bring conan in and let one person work full-time to keep it running
[19:35:26] <LordKalma> yeah, sometimes ExternalProjectAdd is all it takes
[19:36:09] <bobb_> (need to add that ansible and vagrant was added, this takes another huge amount of time to maintain)
[19:36:32] <LordKalma> if your company/project has a build-system engineer, it's fine
[19:36:32] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:36:37] <LordKalma> if it doesn't, I'm sorry :)
[19:37:10] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Quit: Client closed)
[19:37:21] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[19:37:40] <bobb_> haha thank you LordKalma they have one but he has no time for that and cannot work for that project
[19:38:43] <bobb_> instead of improving code quality and reducing technical debts, the projects gains additional "tooling debts" like i call it :D
[19:39:14] <LordKalma> bringing in tooling should be made in a makes-sense approach
[19:39:53] <bobb_> the approach was more like "install traffic lights on a street crossing with one car per month"
[19:40:19] <LordKalma> some will call that "ready for scalability" :D
[19:41:08] <bobb_> yes! Imagine if they add another 20 developers to the project, that would be around 10 times more than now, then i maybe brings some benefits
[19:41:40] <bobb_> and you can say: "everything is automated"
[19:43:12] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[19:44:20] <LordKalma> you shouldn't create technical debt, as in, write proper cmake please, don't harcode crap
[19:44:31] <LordKalma> otoh, don't superscale the project prematurely
[19:45:45] <bobb_> i mean they advertised that a new developer would not need to select the screen resolution in the VM because ansible and vagrant will do it
[19:46:39] <bobb_> you think okay, it takes 10 seconds to select that in KDE but the best is, ansible for whatever reason is not able to do it, nobody found out why..
[19:46:45] <LordKalma> and world piece was achieved
[19:47:53] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:48:28] <PJBoy> 4.5 billion years ago a Mars sized planet crashed into the Earth
[19:48:29] <PJBoy> creating the moon
[19:48:39] <PJBoy> now *that's* what I call a world piece
[19:49:02] <LordKalma> I want to see you speaking fucking portuguese
[19:49:10] <PJBoy> hahahahaha
[19:49:33] <bobb_> but yeah, the existing cmake is okay, i'm currently cleaning it up, removing globs and other dirty hacks
[19:49:50] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:49:55] <PJBoy> os menino vai pra escola
[19:50:03] <LordKalma> that's wrong :)
[19:50:14] <PJBoy> but I copied it from wikipedia
[19:50:19] <PJBoy> https://en.wikipedia.org/wiki/Brazilian_Portuguese
[19:51:14] <LordKalma> fuck you, you choose PT-br just to annoy me
[19:51:19] <PJBoy> hahahaha
[19:51:29] <LordKalma> but yeah, that sense is wrong, even in pt-br
[19:53:07] <PJBoy> if it's any consolation, my partner constantly rinses me for being monolingual
[19:53:44] *** Joins: chozorho (~chozorho@2601:146:300:c30::aec1)
[19:54:16] <LordKalma> "this mofo can't even use his tongue straight"
[19:54:23] <PJBoy> bahaha
[19:55:12] <BurumaSerafuku> :9~~~~
[19:55:31] <BurumaSerafuku> quem não cola, não sai da escola
[19:56:14] <PJBoy> my partner does know some portuguese though
[19:56:18] <BurumaSerafuku> eu falo português! e como teu cu também :D
[19:56:23] <PJBoy> I might get her to try and type something
[19:56:28] <LordKalma> what the fuck
[19:57:01] <BurumaSerafuku> just kidding. it's nice that you also know it :)
[19:57:12] <BurumaSerafuku> how long are you living abroad?
[19:57:36] <LordKalma> wut? I'm a portuguese citizen... like, born here
[19:58:02] <PJBoy> 0 would be the answer then
[19:58:13] <BurumaSerafuku> OIC
[19:58:26] <BurumaSerafuku> brazil or portugal?
[19:58:36] <PJBoy> brazil
[19:58:44] <LordKalma> SHUT THE FUCK UP PJBoy
[19:58:48] <PJBoy> bahahahaha
[19:58:57] <BurumaSerafuku> are you leonardo?
[19:59:13] <LordKalma> I'm portuguese :)
[19:59:15] <PJBoy> man I love national pride
[19:59:50] <PJBoy> ...although I forget the actual word for it
[20:00:07] <LordKalma> mfw this mofo can't even speak his own language
[20:00:27] <PJBoy> we have too many damn words
[20:00:42] <PJBoy> patriotism was the word
[20:01:00] <PJBoy> that thing most Americans claim to have
[20:01:36] <LordKalma> which I'm not. it's just a channel joke at this point :) but in general we do like to be acknowledge as the actual "portuguese" speakers :)
[20:01:56] <LordKalma> if you want to see actual nuts about their language, meet a french
[20:02:29] <PJBoy> I wonder about the French and Spanish now
[20:02:52] <PJBoy> obviously Portuguese split between Portugal and Brazil is well known
[20:03:07] <PJBoy> and the English split between the US and UK is fairly well known I guess
[20:03:16] <LordKalma> the spanish make zero effort to understand portuguese. We mostly understand them, they do zero effort on the other way around
[20:03:24] <PJBoy> and the Chinese split between the tranditionalists and the simpletons
[20:03:45] <PJBoy> but unsure of Spain-Mexico and France-Canada
[20:04:32] <LordKalma> Ubisoft Quebec, the only reason to learn french :)
[20:07:41] *** Joins: dfkfs90 (~dfkfs@178.49.152.42)
[20:07:55] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[20:08:42] *** Joins: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf)
[20:11:47] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Ping timeout: 256 seconds)
[20:13:19] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[20:13:29] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:14:08] *** Joins: cpuid (~cpuid@co5.at)
[20:14:08] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[20:14:08] *** Joins: cpuid (~cpuid@user/cpuid)
[20:17:18] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[20:18:35] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[20:18:39] *** Joins: seninha (~seninha@user/seninha)
[20:18:44] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[20:28:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0)
[20:28:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0) (Changing host)
[20:28:32] *** Joins: skapata (~Skapata@user/skapata)
[20:29:20] *** Joins: magla (~gelignite@55d4d2c6.access.ecotel.net)
[20:29:25] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[20:32:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:32:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[20:38:02] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[20:43:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2040:9516:dc69:4989)
[20:45:55] <PJBoy> what about Disney Land?
[20:46:04] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:48:28] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:48:55] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:49:02] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[20:49:44] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[20:50:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:51:54] <Haohmaru> !fact
[20:51:55] <nolyc> Haohmaru: All forms of copy/move constructor may be declared for a class.
[20:52:12] <rpav> 🤔
[20:52:36] <rpav> what's the definition of "forms"
[20:52:53] <Alipha> {} struct foo { foo(foo &) {} foo(const foo &) {} };  // both copy constructors
[20:52:53] <geordi>  
[20:53:35] <ville> Alipha: http://www.eelis.net/c++draft/class.copy.ctor#1.sentence-1
[20:54:36] <ville> so the set of valid copy ctors is open
[20:54:41] <Alipha> perhaps i should have said "both of these are copy constructors". i didn't mean to imply that those are the only two forms of copy constructors
[20:55:20] <Alipha> though i forgot about the fact that default arguments can be used.
[20:55:56] <rpav> right but "forms" .. like, is `T(T&)` the form, or does the form include the entire declaration
[20:56:19] <ville> ...now we need non-empty parameter lists for dtors and then more-than-one parameter for operator =s
[20:56:31] <PJBoy> it's non-normative text that nolyc quoted
[20:56:38] <PJBoy> so the human interpretation of "form"
[20:57:10] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[20:57:42] <PJBoy> can copy ctors deduce this?
[20:57:45] <rpav> well certainly it makes sense if you know what it's talking about, but it's probably dubiously specified as a fact ;)
[20:58:31] <PJBoy> I expect they can
[20:58:53] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[20:59:13] <Alipha> ville: that would be helpful for std::source_location. were there other uses for default arguments on operator= and dtors?
[20:59:46] <ville> Alipha: no. that's the use to get good more relevant logging info propagated down
[21:01:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:02:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:02:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:04:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:06:06] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[21:06:26] *** Joins: pulse (~pulse@user/pulse)
[21:07:05] *** Joins: klimnbrk (~barakvoid@2.55.178.14)
[21:12:08] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[21:12:46] *** Quits: klimnbrk (~barakvoid@2.55.178.14) (Ping timeout: 250 seconds)
[21:20:28] <norias> ugh
[21:21:32] <PJBoy> indeed
[21:23:30] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 268 seconds)
[21:30:33] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:39:36] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[21:41:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:37] *** ChanServ sets mode: +v npaperbot
[21:45:42] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 268 seconds)
[21:52:45] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:54:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:57:11] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 256 seconds)
[22:14:33] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:16:49] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:6902:1585:61e9:45ff)
[22:17:09] *** Quits: proller (~p@2a02:6b8:0:40c:c30b:1605:e861:ef65) (Ping timeout: 268 seconds)
[22:18:09] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[22:19:57] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[22:23:11] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:24:28] <ashafq> Does derive class automatically call base constructor without writing a derived constructor?
[22:24:39] <ashafq> Or am I an idiot?
[22:26:31] <Alipha> ashafq: only for copy/move constructors.
[22:26:46] <ashafq> Alipha: oh dear ☹️ that's no fun
[22:27:12] <Alipha> ashafq: you can type `using BaseClass::BaseClass;` inside the class definition
[22:27:36] <Alipha> though typically the derived class adds additional member variables, so that's not very useful.
[22:27:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[22:27:43] <Alipha> hm
[22:27:46] <ville> Alipha: call... not inhert
[22:28:07] <ashafq> Alipha: the difference between the base and derived for my case is really one method
[22:28:25] <ashafq> So maybe I am doing somethign wrong?
[22:28:34] <ashafq> Or maybe C++ has a better tool for this?
[22:29:14] <ashafq> The data members are the same.
[22:29:18] <ville> ashafq:  http://coliru.stacked-crooked.com/a/1156cbc89eb183cb
[22:29:26] <Alipha> ashafq: why isn't the method a non-member function instead?
[22:29:31] <Alipha> { Derived d(3); cout << d.x, d.y; } struct Base { Base(int val) : x(val) {} int x; }; struct Derived : Base { using Base::Base; int y = 5; };
[22:29:32] <geordi> 3, 5
[22:30:19] <ville> ashafq: so yes a base ctor will be called when you construct a derived object
[22:30:39] <Alipha> okay, so the derived class also synthesizes a default constructor if the derived class defines no other constructors
[22:30:58] <ashafq> Alipha: what about for non-default constructors?
[22:31:06] <Alipha> { Derived d(3); cout << d.x, d.y; } struct Base { Base(int val) : x(val) {} int x; }; struct Derived : Base { int y = 5; };  // but not synthesize other constructors
[22:31:06] <geordi> 3, 5
[22:31:09] <Alipha> eh
[22:31:09] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:31:16] <Alipha> ... i swore this behaved differently
[22:31:30] *** Quits: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf) (Quit: Konversation terminated!)
[22:31:56] <ville> Alipha: http://coliru.stacked-crooked.com/a/59ab00ccfb6cf278
[22:32:50] *** Quits: dfkfs90 (~dfkfs@178.49.152.42) (Quit: Client closed)
[22:34:05] <Alipha> so... apparently the derived class will synthesize constructors which call the corresponding base constructors, as long as you don't define any constructors in the derived class yourself?
[22:34:28] <ashafq> Alipha: that actually works very well for my use-case 😊
[22:34:47] <PJBoy> Derived there doesn't define any ctors
[22:34:51] <PJBoy> it's an aggregate
[22:36:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:38:41] <rpav> Alipha: it _can_ be pretty useful, e.g. inheriting runtime_error or whatever
[22:39:44] <rpav> or basically any similar thing where you mostly want a strong new typename
[22:39:49] <Alipha> that's true. though typically i do something like: struct foo_error : std::runtime_error { foo_error(std::string message) : std::runtime_error("foo_error: " + message) {} }; // :-)
[22:43:30] <ashafq> Another shitty/stupid question. I have a templated base class which I want to iterate over, all of the templated class will have one method in common... Is there a mechanism in C++ to do that?
[22:44:12] <ashafq> If not, I guess I'll write a macro 😢
[22:44:37] <Alipha> ashafq: can you post a testcase of what you want to do?
[22:46:22] <Alipha> ashafq: what are you "iterating"? objects of said templated base class in a std::tuple?
[22:47:17] <ashafq> So, something like `Process({A, B, C})` will map out to: `A.process(), B.process(), C.process()`
[22:48:00] <ashafq> and A, B, C could be completely different types, but will have a process method that is common.
[22:48:22] <PJBoy> make a function template that calls `arg.process();`
[22:48:42] <PJBoy> and a variadic template that calls that function on each of its arguments
[22:48:49] <PJBoy> possibly combining the two steps into one
[22:49:01] <Alipha> ashafq: what's the argument for Process? a std::tuple<Args...>?
[22:49:22] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:c2b8:b157:be3f:ced2)
[22:49:32] <ashafq> Alipha: no arguments, `void process() noexcept`
[22:49:47] <Alipha> ashafq: i'm referring to `Process({A, B, C})`
[22:50:23] <ashafq> Alipha: that's what I am trying to figure out, how should I write Process()?
[22:50:59] <ashafq> Alipha: I gues std::tuple work for this use-case?
[22:52:06] <Alipha> ashafq: https://wandbox.org/permlink/MdTZCL0ykwJeTHoU
[22:52:32] <ashafq> Alipha: wow that is simple! 😊
[22:52:46] <Alipha> c++17
[22:53:03] <ashafq> will it work on C++11 by any chance? 😕
[22:53:40] <ashafq> nvm, C++17 it is then
[22:53:45] <PJBoy> with a bit of work
[22:53:49] <Alipha> c++11 is a lot more code, heh
[22:54:16] <PJBoy> https://wandbox.org/permlink/RVam4JlUp2UW1blR
[22:54:19] <PJBoy> not a huge amount
[22:54:37] *** Quits: nshire (~nshire@user/nshire) (Ping timeout: 240 seconds)
[22:54:48] <Alipha> oh, right, i remembered the array init trick just before clicking on that link ;-)
[22:55:08] <PJBoy> it's just a lot more cryptic
[22:55:21] <ashafq> that's nice... I like it.
[22:56:14] *** Joins: nshire (~nshire@user/nshire)
[22:57:33] <Alipha> https://wandbox.org/permlink/Ok8OZqIYsl1jJ0Ao is the macro worth it? heh
[22:58:16] <ashafq>  int x[]{(args.process(), 0) ...}; <-- what does this line do?
[22:58:26] <PJBoy> indeed
[22:58:54] <PJBoy> we begin today's lecture
[22:59:17] <PJBoy> if anyone missed yesterday's lecture of the comma operator, you're in for a bad time
[22:59:37] <ashafq> lol
[23:00:05] <PJBoy> so (obj.process(), 0) is equivalent to 0, agreed?
[23:00:14] <PJBoy> except that it calls obj.process() for its side effects
[23:00:17] <ashafq> yes
[23:00:30] <Alipha> `int x[]{(args.process(), 0) ...};` expands to `int x[]{(a.process(), 0), (b.process(), 0), (c.process(), 0)};`
[23:00:45] <PJBoy> and `T x[]{expr ...};` performs expansion of the parameter pack
[23:00:51] <ashafq> ... very interesting!
[23:00:57] <PJBoy> where `expr` contains the parameter pack
[23:01:21] <PJBoy> it's in an array definition just because that's a context that allows pack expansion
[23:01:48] <PJBoy> I have no idea why we don't allow `args.process() ...;`
[23:02:04] <rpav> probably parser
[23:02:11] <ashafq> PJBoy: thanks a lot for the explanation
[23:02:17] <Alipha> doing `no_operation((args.process(), 0)...);` where no_operation is defined as simply `template<typename... Args> void no_operation(Args&&...) {}` would probably improve clarity
[23:02:44] <PJBoy> does that work?
[23:03:10] <PJBoy> it does
[23:03:12] <PJBoy> I like that more
[23:03:49] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Quit: Connection reset by peep)
[23:05:49] <Alipha> or if args.process returns a result, `auto results = std::make_tuple(args.process()...);`
[23:07:23] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[23:09:10] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:16:06] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[23:19:06] *** Joins: proller (~p@2a02:6b8:b081:a415::1:10)
[23:21:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[23:21:47] <Guest19> Hello, I need some help about navigating c++ code. Would anyone be willing to spare 5-10 mins or so to help?
[23:22:39] <Alipha> Guest19: you can ask your questions in the channel
[23:23:21] <Guest19> Alipha , I need to trace how's *cert populated here : source.chromium.org/chromium/chromium/src/+/main:net/cert/cert_verify_proc_win.cc;l=1068;bpv=1;bpt=1
[23:23:34] <Guest19> https://source.chromium.org/chromium/chromium/src/+/main:net/cert/cert_verify_proc_win.cc;l=1068;bpv=1;bpt=1
[23:26:03] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[23:29:19] <PJBoy> > rgpszUsageIdentifier
[23:29:21] <PJBoy> wow
[23:29:39] <Guest19> yeah
[23:29:40] <Guest19> https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/ns-wincrypt-ctl_usage
[23:30:55] <PJBoy> looks to be set by x509_util::CreateCertContextWithChain
[23:32:08] <Guest19> PJBoy, but that method is also passed cert
[23:32:28] <Guest19> I want to find the place where this cert is created. I am trying to see how chromium fetches intermediate certs
[23:33:00] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 268 seconds)
[23:33:16] <Guest19> https://source.chromium.org/chromium/chromium/src/+/main:net/cert/cert_verify_proc.cc;l=504
[23:33:24] <Guest19> I've reached till here, still figuring it out :P
[23:33:50] <PJBoy> hrm
[23:34:03] <PJBoy> I assumed it was being initialised by the call to x509_util::CreateCertContextWithChain
[23:34:05] <kalven> you can click on functions to get a list of call sites
[23:34:07] <PJBoy> I still think it might be
[23:35:18] <PJBoy> I guess not
[23:35:52] *** Joins: seninha (~seninha@user/seninha)
[23:36:43] <PJBoy> this file seems to do it https://source.chromium.org/chromium/chromium/src/+/main:net/cert/x509_certificate.cc;l=118
[23:36:57] *** Joins: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de)
[23:37:56] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[23:38:06] <Guest19> ah yes, thanks PJBoy!
[23:38:19] <Guest19> invoked from https://source.chromium.org/chromium/chromium/src/+/main:net/cert/cert_verify_proc_builtin.cc;l=532?q=X509Certificate::createfrombuffer&ss=chromium%2Fchromium%2Fsrc
[23:38:36] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:40:06] *** Joins: Terminus (~null@user/terminus)
[23:42:10] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:42:37] <Guest19> err PJBoy, before that, there's 1 more cert created : source.chromium.org/chromium/chromium/src/+/main:net/cert/cert_verify_proc.cc;l=504;drc=6b275a435d6b3c5e6bf211d26f4057d4948b6e25;bpv=1;bpt=1
[23:55:24] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Quit: rebooting)
[23:57:44] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
