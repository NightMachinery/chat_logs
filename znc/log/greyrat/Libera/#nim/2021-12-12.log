[00:11:51] *** Joins: xet7 (~xet7@user/xet7)
[00:13:56] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:14:41] *** Joins: src (~src@user/src)
[00:38:03] <FromDiscord> <geekrelief> Is there a way to parse a string to NimNode?  If not is there an easy way to convert PNode to NimNode?
[00:48:27] <FromDiscord> <Solitude> In reply to @geekrelief "Is there a way": https://nim-lang.org/docs/macros.html#parseStmt%2Cstring
[00:48:58] <FromDiscord> <geekrelief> In reply to @Solitude "https://nim-lang.org/docs/macros.html#parseStmt%2Cs": thanks!
[00:52:33] <NimEventer> New thread by Niminem: Help with displaying only used fields in Object for JS backend, see https://forum.nim-lang.org/t/8701
[01:16:40] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:37:50] *** Joins: jjido (~Denis@90.213.58.125)
[02:15:28] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:17:36] <FromDiscord> <el__maco> sent a code paste, see https://play.nim-lang.org/#ix=3HL4
[02:18:12] <FromDiscord> <el__maco> I'd like to have something that can be passed to a function and initialized using a constant literal, e.g. ``foo(0xaabbcc.rgba8)``
[02:24:30] <FromDiscord> <el__maco> I may have asked about anonymous unions before here, and I think the answer was that there are no such things in nim
[02:35:24] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:abae:3f35:21c7:3fc)
[02:35:46] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:abae:3f35:21c7:3fc) (Client Quit)
[02:36:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:37:42] <FromDiscord> <el__maco> hmm `cast[rgba8](0xaabbcc)` seems to work. Its not pretty but I guess it will have to make do
[02:40:46] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[02:43:59] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:44:30] <FromDiscord> <Elegantbeef> https://github.com/alaviss/union @elmaco
[02:48:07] <FromDiscord> <evoalg> I'd like my proc to take an openarray (so it can accept both seq's and arrays) but I can't get it to work? : https://play.nim-lang.org/#ix=3HLg
[02:48:51] <FromDiscord> <Yardanico> you can't have openarray of openarrays afaik
[02:48:58] <FromDiscord> <evoalg> ahhh ok thanks
[02:56:31] <FromDiscord> <evoalg> I could use `auto` ... works, but might be bad programming practice
[02:57:20] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3HLl works aswell but introduces you to concepts ðŸ˜›
[02:58:08] <FromDiscord> <evoalg> oh!
[02:59:34] <FromDiscord> <Yardanico> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3HLl works aswell but": you don't really need concepts for this though (except the low == 0) :P
[02:59:45] <FromDiscord> <Elegantbeef> Indeed
[03:00:04] <FromDiscord> <Elegantbeef> The low == 0 is pretty important for preventing issues
[03:00:25] <FromDiscord> <evoalg> `o, O` ... why is both the lower & upper "oh" used?
[03:00:56] <FromDiscord> <Yardanico> o_O
[03:01:06] <FromDiscord> <Yardanico> O_o
[03:01:10] <FromDiscord> <Elegantbeef> I'm an idiot that forgot to do `, type O`
[03:01:29] <FromDiscord> <Elegantbeef> It's the same logic so one could drop the `O`
[03:02:18] <FromDiscord> <Elegantbeef> Before you ask concepts are just check lists of what types need to fulfil to match
[03:03:03] <FromDiscord> <evoalg> thank you!
[03:11:00] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: WeeChat 3.3)
[03:11:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:12:20] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:12:38] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:14:53] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:15:21] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:17:03] *** Joins: pch (~pch@66.49.131.33)
[03:17:54] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:18:12] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:18:51] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[03:20:57] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:30:35] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:33:36] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Changing host)
[03:33:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[03:37:05] *** Quits: noeontheend_ (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[03:37:05] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[03:40:29] <FromDiscord> <pmunch> Those where a good mix of copy paste from other languages and guesswork from my side. If they're incorrect please create a PR to fix them \:)â†µ(@Cloudperry)
[03:50:54] <FromDiscord> <Elegantbeef> Hey pmunch i've got to ask how does one properly serialize using your protobuf library?
[03:57:11] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:20:15] <FromDiscord> <pmunch> What do you mean?
[04:20:27] <FromDiscord> <Elegantbeef> Looking at it further it seems you only have the streamwrite method
[04:20:44] <FromDiscord> <DMI-1407> is there already a discord api for nim ?
[04:20:47] <FromDiscord> <Elegantbeef> My friend tried it yesterday and suffice to say he ran into a fair bit of issues
[04:20:52] <FromDiscord> <Elegantbeef> Dimscord yep
[04:21:43] <FromDiscord> <pmunch> Ah yes, it's built around streams
[04:22:34] <FromDiscord> <pmunch> So you parse your spec, create your object, and then write it to a stream
[04:22:37] <FromDiscord> <Elegantbeef> It does have a  nice bug with nested empty messages aswell, though I've got a fix
[04:23:14] <FromDiscord> <Elegantbeef> Questioning whether i should clean up these macros though since it's very hard to read
[04:26:38] <FromDiscord> <pmunch> Oh yeah, they definitely need a cleanup..
[04:27:05] <FromDiscord> <pmunch> I believe protobuf was my first major macros project
[04:27:13] <FromDiscord> <Elegantbeef> Well  there just made a PR  for you
[04:28:46] <FromDiscord> <Elegantbeef> Yea i can really tell you used `astGenRepr` a lot ðŸ˜›
[04:29:51] <FromDiscord> <Elegantbeef> Now to think of it, i've never used `astGenRepr` for anything but testing if logic is sound
[04:29:52] <FromDiscord> <pmunch> Haha, yup. I think that was actually what I wrote 'astGenRepr' for ðŸ˜‹
[04:30:16] <FromDiscord> <Elegantbeef> Oh you wrote `astGenRepr` for the stdlib?
[04:30:24] <FromDiscord> <pmunch> Yup
[04:31:04] <FromDiscord> <pmunch> I think I wrote it for protobuf, then realized it was probably a bad idea and barely ever touched it again ðŸ˜…
[04:31:37] <FromDiscord> <pmunch> Then someone wrote \`quote\` which is a way nicer solution
[04:31:44] <FromDiscord> <Elegantbeef> It does what it promises but produces heavily unmaintainable macros
[04:32:06] <FromDiscord> <pmunch> Of course \`astGenRepr\` still has its uses, but not nearly as many after quote came along
[04:32:14] <FromDiscord> <Elegantbeef> quote/genast and the less verbose procedures are just nicer
[04:32:29] <FromDiscord> <Elegantbeef> well with genast i thinkg astgenrepr is mostly just a debug tool
[04:32:54] <FromDiscord> <pmunch> I then of course wrote superQuote in macroutils after that failed to get merged into Nim
[04:32:55] <FromDiscord> <Elegantbeef> You can now easily inject symbols/generate them
[04:33:37] <FromDiscord> <Elegantbeef> Given how much time i spend toying with macros it's kinda funny the only thing i've written to make it easier is a toy that is pointless
[04:35:23] <FromDiscord> <pmunch> Hmm, what's genast?
[04:35:47] <FromDiscord> <Elegantbeef> A new module in 1.6 that gives an alternative to quote removing many issues
[04:36:01] <FromDiscord> <pmunch> I wrote macroutils to try and fix a lot of the gripes I've had with writing macros over the years
[04:36:05] <FromDiscord> <Elegantbeef> Instead of making temporary variables before you just do `genAst(name = ident"ThisisAName")`
[04:36:33] <FromDiscord> <Elegantbeef> Now inside the scope `name` is the right hand of the `=`
[04:36:34] <FromDiscord> <pmunch> Then of course I've gotten so used to the old way of writing macros I couldn't really get used to using macroutils
[04:36:47] <FromDiscord> <Elegantbeef> It doesnt require accquoting either
[04:36:50] <FromDiscord> <pmunch> But it does have some nice tools, like superQuote
[04:38:14] <FromDiscord> <pmunch> Wait, so that's just \`let name = "ThisIsAName".ident\`?
[04:41:00] <FromDiscord> <pmunch> But I'm going to bed now
[04:41:31] <FromDiscord> <Elegantbeef> I mean it works like quote do but you can inject variables through parameters instead of capturing all variables in scope
[04:41:43] <FromDiscord> <Elegantbeef> so in the above case it finds `name` an replaces it with the right hand
[04:47:37] *** Quits: krux02_ (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:53:55] <NimEventer> New post on r/nim by shujidev: How to return a var seq from proc input, see https://reddit.com/r/nim/comments/redpcp/how_to_return_a_var_seq_from_proc_input/
[05:23:24] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:40:30] <arkanoid> I have a nimpy function named "int8" that I have to call, but it calls nim's one
[05:43:04] <arkanoid> how can I disambiguate?
[05:44:17] <FromDiscord> <Elegantbeef> `nimpy.int8(args)`
[05:44:26] <arkanoid> solved with obj.`int8()`
[05:44:39] <FromDiscord> <Elegantbeef> If that doesnt help i guess commence operation cryalot
[05:44:42] <arkanoid> just in time! thanks
[05:45:12] <arkanoid> there's the callMethod proc in nimpy in case of emergency
[05:45:54] <arkanoid> I might have just found the perfect zero-copy interop between arraymancer and numpy/pandas and possibly many other scientific stacks
[05:46:10] <FromDiscord> <Elegantbeef> nice you've donest it
[05:47:04] <arkanoid> donest?
[05:47:16] <FromDiscord> <Elegantbeef> done it but said jovial
[05:47:36] <FromDiscord> <valerga> running a nim binary seems to take at least 50ms, even on empty code, is that normal?
[05:47:45] <FromDiscord> <Elegantbeef> Nope
[05:47:55] <FromDiscord> <Elegantbeef> is this a release program?
[05:48:27] <FromDiscord> <valerga>  https://media.discordapp.net/attachments/371759389889003532/919412853419679784/nimtime.jpg
[05:48:30] <FromDiscord> <valerga> that's release on empty code
[05:48:44] <FromDiscord> <valerga> im counting usr time
[05:48:45] <FromDiscord> <Elegantbeef> Are you compiling the binary and running it or counting the compil time?
[05:48:56] <FromDiscord> <valerga> i ran in twice
[05:49:07] <FromDiscord> <Elegantbeef> That doesnt answer my question
[05:49:15] <FromDiscord> <Elegantbeef> Are you actually timing the binary or the compiler?
[05:49:19] <FromDiscord> <valerga> ohh
[05:49:26] <FromDiscord> <valerga> i thought since it was cached it would just run it straight
[05:49:37] <FromDiscord> <valerga> i'll check the binary
[05:49:38] <FromDiscord> <Elegantbeef> Well it has to make sure it has no file changes
[05:49:51] <FromDiscord> <Elegantbeef> Which requires some computation
[05:49:57] <FromDiscord> <valerga> yeah it runs in 2ms
[05:50:23] <FromDiscord> <Elegantbeef> There we go that's a bit more reasonable since it has to set everything up and talk to the OS
[05:50:57] <FromDiscord> <valerga> 1ms on empty code
[05:52:19] <FromDiscord> <huantian> man I was looking at pull #11992 and started down the rabbit hole of random issues and pull requests that have a lot of text
[05:53:36] <FromDiscord> <Elegantbeef> Ah yes that's a fun PR
[05:55:14] <FromDiscord> <huantian> wonder if that'l ever get merged...
[05:55:40] <FromDiscord> <Elegantbeef> probably not
[05:56:17] <FromDiscord> <Elegantbeef> To me it seems like a big "Work around the problems instead of fix them"
[05:57:16] <FromDiscord> <huantian> but writing `.toSeq` before my maps is so much work!
[05:57:17] <FromDiscord> <evoalg> Sometimes I have to check that a condition isn't true for everything in a container. In python I would use a for-each trick, but in nim I'd do it like this I guess: https://play.nim-lang.org/#ix=3HM1 ... not sure if it's the best way?
[05:57:56] <FromDiscord> <leorize> try sequtils.all?
[05:58:03] <FromDiscord> <evoalg> this is a simple example, but in reality it would be complicated so I can't use all or any
[05:58:05] <arkanoid> what's better "static: var ..." or "var {.compiletime.}" ?
[05:58:47] <FromDiscord> <evoalg> unless I put it in a proc, then I could use "all" I guess?
[05:58:52] <FromDiscord> <leorize> would allIt work then?
[05:59:16] <FromDiscord> <leorize> same as all but you don't have to make a proc
[05:59:49] <FromDiscord> <huantian> you could always use an anonomous proc or sugar ->, or just use allit
[06:00:01] <FromDiscord> <huantian> (edit) "->," => "+>,"
[06:00:04] <FromDiscord> <huantian> (edit) "+>," => "=>,"
[06:00:57] <FromDiscord> <Elegantbeef> Also why the hell are you using `discard """` we have multiline comments?!
[06:01:03] <FromDiscord> <evoalg> I mean in a real programing there are many lines and it get's complicated to use all / allIt (or not very readable), but if I put the many lines in a proc then I could  use all or allIt and it would still be readable, true
[06:01:16] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3HM3
[06:01:42] <FromDiscord> <leorize> @evoalg\: you can use a code block with allIt
[06:02:30] <FromDiscord> <leorize> sent a code paste, see https://play.nim-lang.org/#ix=3HM4
[06:02:32] <FromDiscord> <ajusa> Wait seriously I've using discard """ since like 2017, when did we get multiline comments
[06:02:39] <FromDiscord> <evoalg> In reply to @Elegantbeef "Also why the hell": Ahh sorry I liked the colors better? ... I tend to use discard for notes, and multi-line comments for code ... but yea I guess it's not ideal
[06:02:44] <FromDiscord> <Elegantbeef> A while
[06:02:55] <FromDiscord> <Elegantbeef> WE even have multiple line doc comments
[06:03:02] <FromDiscord> <evoalg> In reply to @leorize "<@900872397224280125>\: you can use": Thank you! that's nice ðŸ™‚
[06:03:04] <arkanoid> how can I create a const array 0..1000 int8?
[06:03:25] <FromDiscord> <Elegantbeef> `const arr: array[1000, uint8]`
[06:03:38] *** Joins: noeontheend_ (~noeonthee@207.237.194.194)
[06:03:38] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:04:20] <arkanoid> Elegantbeef, doesnt work, it expects an initialization
[06:04:29] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3HM6
[06:04:40] <FromDiscord> <leorize> beware of the const array trap (if it's still a thing)
[06:05:03] <arkanoid> ooh, thanks
[06:05:09] <arkanoid> what's const array trap?
[06:05:22] <FromDiscord> <leorize> it's very much a thing for strings, though
[06:05:38] <FromDiscord> <leorize> the compiler attempting to inline array/string everywhere
[06:05:59] <FromDiscord> <leorize> exploding compile-time memory usage and binary size
[06:06:12] <arkanoid> well I will have to test this zero-copy experiment for strings too, so I'll check this
[06:06:14] <arkanoid> thanks
[06:07:47] *** Quits: noeontheend_ (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[06:07:47] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[06:19:40] <arkanoid> turning a seq to an arraymancer tensor requires 4x memory and 13 allocations, apparently https://play.nim-lang.org/#ix=3HM8
[06:20:11] <arkanoid> it's quite more convenient staying with seqs
[06:21:02] <arkanoid> ups, wrong channel, was or #nim-science
[06:42:59] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[06:43:28] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[06:55:34] <arkanoid> is GC_getStatistics() unavailable for ARC?
[06:55:55] <arkanoid> it runs, but I'm getting zero in any context
[06:58:14] <arkanoid> oh! it does work, but requires "useMalloc" to NOT be defined (actually makes sense). I was trying to get line-by line memory usage but also cross boundary nim-python usage via valgrind, apparently I can only do one of the two
[07:31:18] <FromDiscord> <Rika> In reply to @evoalg "Sometimes I have to": `not container.anyIt(condition)`?
[07:31:30] <FromDiscord> <Rika> In reply to @evoalg "this is a simple": why not?
[07:31:44] <FromDiscord> <Rika> you can always make the proc not-inline
[07:32:17] <FromDiscord> <Rika> proc ...[T](a, b: T): bool = ...â†µecho not container.any(...)
[07:33:57] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3HMx
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:55:28] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[09:13:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[09:47:51] <FromDiscord> <satoro.tadziri> sent a code paste, see https://play.nim-lang.org/#ix=3HMS
[09:55:51] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[10:46:54] <FromDiscord> <Sabena Sema> In reply to @Elegantbeef "WE even have multiple": tbh I'm in the habit of using discard """ because I learned nim when it didn't have multiline comments ðŸ˜„
[11:47:19] <ozzz> I spent couple of hour yeasterday, just to find out that Nim not works well with gcc 11.1
[11:54:44] <FromDiscord> <Rika> It doesn't? How
[12:28:58] *** Joins: jjido (~Denis@90.213.58.125)
[12:59:23] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:21:37] *** Joins: jjido (~Denis@90.213.58.125)
[13:28:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:41:39] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:04:48] <FromDiscord> <demotomohiro> Did windows defender deleted some executable files in gcc?
[14:26:24] *** Joins: terminalpusher (~terminalp@2a01:586:1f85:1:5063:4755:1e14:fcec)
[14:27:19] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:fd0d:ba95:6631:bcc3)
[14:27:28] *** Parts: terminalpusher (~terminalp@2a01:586:1f85:1:5063:4755:1e14:fcec) ()
[14:32:15] <FromDiscord> <valerga> a file you compiled or a file from gcc?
[14:37:11] <FromDiscord> <el__maco> always fun when the antivirus quarantines the file you just compiled
[14:46:14] <FromDiscord> <valerga> sent a code paste, see https://play.nim-lang.org/#ix=3HOc
[14:46:24] <FromDiscord> <valerga> im thinking this might be a bottleneck
[14:46:45] <FromDiscord> <valerga> basically want to iterate over lowercase strings
[14:46:48] <FromDiscord> <Rika> No idea what any of these variables are in terms of type
[14:47:05] <FromDiscord> <valerga> seq of strings
[14:47:11] <FromDiscord> <Rika> Use a count table
[14:53:08] <NimEventer> New thread by Elcritch: Keyxn: Shamir Secret Sharing in pure Nim, see https://forum.nim-lang.org/t/8703
[14:56:06] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:fd0d:ba95:6631:bcc3) (Ping timeout: 268 seconds)
[14:56:16] <FromDiscord> <valerga> sent a code paste, see https://play.nim-lang.org/#ix=3HOf
[14:56:22] <FromDiscord> <valerga> I'm copying a seq to a new seq
[14:56:33] <FromDiscord> <valerga> add an item to it, then it to the queue seq
[14:56:42] <FromDiscord> <valerga> wondering if there's a better way
[14:57:44] <FromDiscord> <Rika> Better as in?
[14:57:59] <FromDiscord> <Rika> Shorter code or faster or memory efficient or idiomatic or what
[14:59:36] <FromDiscord> <valerga> faster, there's some bottleneck somewhere, thinking maybe there
[14:59:52] <FromDiscord> <valerga> since the count table didn't change speed
[15:01:33] <FromDiscord> <Rika> q.add(p & c)
[15:01:37] <FromDiscord> <Rika> I think that works
[15:01:38] <FromDiscord> <Rika> Not sure
[15:03:04] <FromDiscord> <valerga> that works, but same speed heh
[15:03:30] <FromDiscord> <Rika> You need to change the algorithm then
[15:03:48] <FromDiscord> <Rika> Avoid the double copy from that sequence adding
[15:04:00] <FromDiscord> <Rika> It feels wrong too
[15:04:10] <FromDiscord> <Rika> Surely thereâ€™s a different way?
[15:05:08] <FromDiscord> <valerga> it's this algorithm https://www.geeksforgeeks.org/print-paths-given-source-destination-using-bfs/
[15:05:31] <FromDiscord> <valerga> https://play.nim-lang.org/#ix=3HOh
[15:07:49] <FromDiscord> <valerga> it finds the solution but in 400s !!
[15:12:09] *** Joins: src (~src@user/src)
[15:19:13] <FromDiscord> <valerga> sent a code paste, see https://play.nim-lang.org/#ix=3HOo
[15:19:23] <FromDiscord> <valerga> that's ok?
[15:19:24] <FromDiscord> <Rika> Use a deque for that
[15:19:49] <FromDiscord> <Rika> If youâ€™re not accessing middle items use a deque
[15:27:14] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[15:28:12] <FromDiscord> <valerga> wow @Rika that really made a difference
[15:28:41] <FromDiscord> <valerga> reduced it from 400s to 2s
[15:28:57] <FromDiscord> <valerga> thank you
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:43:27] <FromDiscord> <Rika> It really helps learning about data structures here, maybe take a look at resources about that
[16:07:20] *** Joins: neurocyte0132889 (~neurocyte@45.128.180.15)
[16:07:20] *** Quits: neurocyte0132889 (~neurocyte@45.128.180.15) (Changing host)
[16:07:20] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:10:45] *** Quits: src (~src@user/src) (Quit: Leaving)
[16:17:12] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:c5a3:569e:5967:acda)
[16:27:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[16:44:01] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:c5a3:569e:5967:acda) (Ping timeout: 268 seconds)
[16:44:49] *** Joins: lumo_e (~enrico@93.56.64.2)
[17:03:49] <FromDiscord> <valerga> any text in particular you recommend?
[17:16:20] *** Joins: jjido (~Denis@90.213.58.125)
[17:17:50] <FromDiscord> <Rika> unfortunately i dont
[17:43:58] *** Joins: arkurious (~arkurious@user/arkurious)
[18:03:29] <NimEventer> New thread by Greenfork: Why windows.h file is always included into compilation on Windows?, see https://forum.nim-lang.org/t/8704
[18:26:24] *** Quits: lumo_e (~enrico@93.56.64.2) (Ping timeout: 268 seconds)
[18:43:09] *** Joins: src (~src@user/src)
[19:07:21] <arkanoid> I don't remember it there's a std proc to take just N elements from iterable
[19:07:38] <NimEventer> New thread by Icedquinn: Renovate Bot, see https://forum.nim-lang.org/t/8705
[19:13:07] <Amun-Ra> what's nim's equivalent of python's: except (FooError, BarError) as e:?
[19:16:58] <FromDiscord> <Rika> `except A, B:\n  let e = getCurrentException()`
[19:17:09] <FromDiscord> <0ffh> sent a code paste, see https://play.nim-lang.org/#ix=3HRq
[19:18:17] <Amun-Ra> Rika: thanks
[19:19:13] <FromDiscord> <Rika> In reply to @0ffh "Hi, I'm implementing a": 0x55 is not coerced into a uint64 it seems?
[19:19:22] <FromDiscord> <Rika> honestly i wouldnt use a tuple here
[19:20:31] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3HRs
[19:20:51] <FromDiscord> <planetis> Has anyone worked on a  function chain macro? Any examples?
[19:21:07] <FromDiscord> <0ffh> sent a code paste, see https://play.nim-lang.org/#ix=3HRt
[19:21:44] <FromDiscord> <Rika> okay then
[19:21:44] <FromDiscord> <Rika> wait
[19:21:47] <FromDiscord> <Rika> ill see
[19:22:13] <FromDiscord> <Rika> ah
[19:22:14] <FromDiscord> <Rika> lol
[19:22:29] <FromDiscord> <Rika> seems like generic tuple `[]` is taking precedence over your `[]`
[19:22:43] <FromDiscord> <0ffh> oh, i see
[19:23:01] <FromDiscord> <Rika> i dont know why
[19:23:01] <FromDiscord> <0ffh> maybe i can get around that my making it distinct?
[19:23:10] <FromDiscord> <0ffh> (edit) "my" => "by"
[19:23:45] <FromDiscord> <Rika> honestly go with the object
[19:24:34] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3HRu
[19:24:39] <FromDiscord> <0ffh> okay, i'll try that thanks!â†µmaking the tuple distinct prevents field access
[19:25:41] <FromDiscord> <Rika> notably with the object, the templates are now procs and you have to use object construction syntax `BV(val: ..., ...)`
[19:26:26] <FromDiscord> <0ffh> okay
[19:33:45] <FromDiscord> <deech> Does nim support a package private qualifier? I have a module that I would like to only use from other modules within the package but not expose to the user.
[19:34:09] <FromDiscord> <Rika> no
[19:34:32] <FromDiscord> <Rika> well, from what i know, nimble has a "private" directory
[19:34:49] <FromDiscord> <Rika> but i dont know if it actually does anything from outside of nimble
[19:35:17] <FromDiscord> <deech> I suppose it's academic because Nim now allows the caller to expose private fields.
[19:35:28] <FromDiscord> <0ffh> In reply to @Rika "notably with the object,": works fine now, thanks a bunch!
[19:37:39] <FromDiscord> <planetis> anyone knows how to correctly traverse a function chain using a macro?
[19:40:14] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[19:51:04] <arkanoid> the most confusing error of it's kind to me is "Error: attempting to call routine: <routine name> found <signature> in [line]". It doesn't say anything about where the error is
[19:53:56] *** Joins: lumo_e (~enrico@151.29.48.90)
[19:54:15] <FromDiscord> <Rika> it usually does before "Error:"
[19:54:38] <FromDiscord> <Rika> "/file.nim(line, character) Error:`
[19:54:40] <FromDiscord> <Rika> (edit) "Error:`" => "Error:""
[19:59:14] *** Joins: src_ (~src@user/src)
[20:02:02] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[20:02:39] *** Joins: jjido (~Denis@90.213.58.125)
[20:02:46] <arkanoid> yeah but sometimes is way off the real line, it seems
[20:03:26] <arkanoid> I'm failing to write a trivial thing: `take` iterator. Where you feed an interable in and it spits out N next elements of it
[20:08:45] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[20:08:55] *** Joins: src (~src@user/src)
[20:12:22] <FromDiscord> <Rika> as a seq?
[20:13:41] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 268 seconds)
[20:16:01] <arkanoid> Rika: no, something like https://play.nim-lang.org/#ix=3HRR
[20:16:52] <arkanoid> I think is something eveybody has already faced (and also what zero_functional is all about), chaining iterators
[20:17:03] <arkanoid> chaining *inline* iterators
[20:20:54] <FromDiscord> <Rika> you cant use iterable[] in procs
[20:23:13] <arkanoid> I'm confused
[20:23:15] <arkanoid> why not?
[20:23:19] *** Joins: lumo_e (~enrico@151.29.48.90)
[20:24:01] <arkanoid> docs says "Represents an expression that yields T"
[20:25:23] <FromDiscord> <Rika> probably has to do with compile time construct and whatever but i dont know
[20:25:34] <FromDiscord> <Rika> i dont have experience with newest nim features right now
[20:29:22] <arkanoid> hmm, this works on my machine but doesn't on play.nim-lang: https://play.nim-lang.org/#ix=3HRX
[20:29:58] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 260 seconds)
[20:31:42] <arkanoid> it works if I import sequtils, don't know what I am using of sequtils in that example
[20:32:31] <FromDiscord> <Rika> items
[20:32:35] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3HS1
[20:32:43] <FromDiscord> <Rika> https://nim-lang.org/docs/sequtils.html#items.i
[20:33:08] <FromDiscord> <Rika> cold there is no error here it looks
[20:33:19] <FromDiscord> <Rika> plugin can be wrong
[20:33:31] <FromDiscord> <Rika> error on compile should be your source of truth
[20:34:26] <FromDiscord> <Solitude> or your `l` is not mutable
[20:36:07] <FromDiscord> <planetis> macros hard me dumb
[20:36:26] <arkanoid> does `for x in foo` always means calling foo.items no matter what is the type of foo?
[20:36:57] <FromDiscord> <Solitude> yes
[20:37:29] <arkanoid> ok, thanks, now everything clicks
[20:39:30] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3HS3
[20:40:08] <arkanoid> where can I read how iterator works? I'm playing with inline and closure iterators and I'd like to understand how (and if) they can be used together
[20:40:14] <FromDiscord> <Rika> your l is not mutable
[20:40:17] <FromDiscord> <Solitude> In reply to @coldfussion "Probably, I currently have": https://nim-lang.org/docs/manual.html#procedures-var-parameters
[20:40:40] <FromDiscord> <Rika> arkanoid inline iterators do not exist on runtime (of course, because theyre inlined)
[20:40:51] <FromDiscord> <Rika> closure iterators can be halted and resumed at will
[20:41:06] <FromDiscord> <Rika> at the expense of memory and speed
[20:41:24] <FromDiscord> <pmunch> Well, not quite "at will"
[20:41:43] <FromDiscord> <coldfussion> Oh, thank youâ†µ(@Solitude)
[20:44:24] <FromDiscord> <coldfussion> the type mismatch error message is quite a bit misleading tbh...
[20:44:48] <arkanoid> yeah, I quite nicely fit closure iterators with other programming patterns I tend to use in different languages. But inline iterator are another kind of beast. Also, what is type Iterable and when can/should use it? 
[20:45:50] <FromDiscord> <Solitude> In reply to @coldfussion "the type mismatch error": its intentional, to drive more people to chat
[20:46:54] <FromDiscord> <0ffh> how can i do a reinterpreting cast between signed and unsigned integers?
[20:47:12] <FromDiscord> <Rika> cast
[20:47:19] <FromDiscord> <Rika> cast is reinterpret cast
[20:48:31] <FromDiscord> <0ffh> hum, i must have effed it up somehow, i get value out of range. but if iÃ„m on the right track with cast, i suppose i'll figure it out through the docs. thanks!
[20:48:42] <FromDiscord> <0ffh> (edit) "iÃ„m" => "i'm"
[20:49:34] <FromDiscord> <azazello> sent a code paste, see https://play.nim-lang.org/#ix=3HSa
[20:50:23] <FromDiscord> <Solitude> sent a code paste, see https://play.nim-lang.org/#ix=3HSc
[20:51:04] <FromDiscord> <azazello> In reply to @Solitude "you didnt specify generic": it appears to work if I define the Matrix sizeâ†µwould it be possible for it not to be known during init?
[20:51:22] <FromDiscord> <azazello> (edit) "it" => "the parameters" | "the parametersnot to be known during init? ... " 03added "assume not"
[20:51:35] <FromDiscord> <Solitude> no, arrays have statically known size
[20:51:46] <FromDiscord> <Solitude> if you dont know the size, why are you using arrays?
[20:52:12] <FromDiscord> <azazello> make sense, could use seq (just learning nim, for aoc!)â†µthanks for your help
[20:52:44] <FromDiscord> <Solitude> good read https://nim-lang.org/docs/tut1.html
[21:19:00] <arkanoid> could you please give me an example where I can use iterable[T] type? https://nim-lang.org/docs/system.html#iterable
[21:20:24] <arkanoid> it's defined as type iterable*[T] {.magic: IterableType.} and I'm trying to figure out what's the intended use. It's not a type alias of "iterator(): T" but the doc says that "Represents an expression that yields T"
[21:24:32] *** Joins: al1ranger (~al1ranger@182.57.192.75)
[21:25:04] <NimEventer> New question by bottomresults: Error: identifier expected, but got: paramStr(1), see https://stackoverflow.com/questions/70326183/error-identifier-expected-but-got-paramstr1
[21:27:13] *** Quits: al1ranger (~al1ranger@182.57.192.75) (Client Quit)
[21:31:47] <arkanoid> found my answer here https://github.com/disruptek/gitnim_osx/blob/7625eab936b24c75f6016b8b15bbbc0d8df272ff/tests/types/titerable.nim
[21:44:41] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:53:44] *** Joins: beshr (~beshr@user/beshr)
[22:14:06] <FromDiscord> <Pralkarz> I think my compiler broke after I leaked so much memory that my computer crashed. ðŸ˜…
[22:14:24] <FromDiscord> <Pralkarz> sent a code paste, see https://play.nim-lang.org/#ix=3HT2
[22:14:25] <FromDiscord> <Pralkarz> Is there any way to rebuild it?
[22:15:02] <NimEventer> New post on r/nim by LogoKidd: Error: identifier expected, but got: paramStr(1), see https://reddit.com/r/nim/comments/revbdd/error_identifier_expected_but_got_paramstr1/
[22:15:12] <FromDiscord> <el__maco> I don't know anything about anything but have you tried deleting the cache folder
[22:15:24] <FromDiscord> <Pralkarz> I just did that and it works now, shouldn't have asked so soon.
[22:15:26] <FromDiscord> <Pralkarz> Thanks tho!
[22:15:32] <FromDiscord> <el__maco> np ðŸ™‚
[22:16:11] <NimEventer> New thread by Luqaska: Error: identifier expected, but got: paramStr(1), see https://forum.nim-lang.org/t/8706
[22:32:45] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[23:01:13] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[23:09:16] <ozzz> Rika, demotomohiro, valerga, I dont use windows. I wrapped C library - libfcgi, which not works using gcc 11, when -d:release provided, or optimization flags higher than -O0 passed to compiler.
[23:09:39] <ozzz> with gcc-7 everything works well.
[23:20:38] <FromDiscord> <Fish-Face> is there any convenient way to use `parallel` for recursive problems
[23:25:01] <FromDiscord> <Zoom> Ð”Ð°Ð²Ð°Ð¹ Ð²Ð¾ Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº?
[23:25:46] <FromDiscord> <Fish-Face> (the process deadlocks when the threadpool gets exhausted. I have tried `spawnX` but get an internal error when compiling)
[23:48:42] <FromDiscord> <Fish-Face> weave documentation seems to consist only of examples?
[23:48:52] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[23:50:12] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
