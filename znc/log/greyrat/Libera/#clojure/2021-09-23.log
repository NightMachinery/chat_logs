[00:02:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Remote host closed the connection)
[00:03:59] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[00:04:21] <Ingvix> within function, is there variable that contains the whole argument list?
[00:05:26] <Ingvix> or, well, the arguments in a list
[00:08:03] *** Joins: op2 (~op@user/op2)
[00:08:45] *** Joins: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e)
[00:16:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:2108:e73c:fa5c:78e) (Ping timeout: 264 seconds)
[00:19:12] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[00:23:55] *** Joins: Null_A_ (~null_a@2601:645:8700:2290:a969:7066:ab00:d0f1)
[00:29:59] *** Quits: Null_A_ (~null_a@2601:645:8700:2290:a969:7066:ab00:d0f1) (Ping timeout: 246 seconds)
[00:30:47] <ridcully_> Ingvix: you can use & in destructuring to get the rest of the arguments.  e.g. ((fn [x & xs] [x xs]) 1 2 3)
[00:31:30] <Ingvix> but nothing hold all of them?
[00:31:37] <Ingvix> *holds
[00:32:43] <ridcully_> if you get rid of the x in that example, you get all of them
[00:33:12] <Ingvix> yeah but then again I'd like to keep the amount of arguments limited
[00:33:15] <ridcully_> further e.g. map destructuring allows you keep hold of the whole map to
[00:34:20] <Ingvix> just asking for the sake of having a tad cleaner code but it's no problem really if such doesn't exist
[00:35:47] <ridcully_> so you want a function, that accepts e.g. r g b a as arguments but then continue to use e.g. color as the sequence of all four args?
[00:36:06] <ridcully_> i can not think of a way to do that
[00:36:33] <Ingvix> yes, pretty much like that
[00:40:57] <jeaye> user=> (defn foo [& [r g b :as color]] (println r g b color))
[00:41:00] <jeaye> #'user/foo
[00:41:02] <jeaye> user=> (foo 1 2 3)
[00:41:04] <jeaye> 1 2 3 (1 2 3)
[00:41:06] <jeaye> Ingvix ^
[00:41:54] <Ingvix> oh, nice
[00:41:56] <Ingvix> thanks
[00:42:37] <jeaye> I'd point out that this isi veering away from idiomatic CLJ. We'd typically just use a map there instead.
[00:42:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137)
[00:43:02] <jeaye> Then you can do (defn foo [{:keys [r g b] :as color}] ...) and call it as (foo {:r 1 :g 2 :b 3})
[00:46:26] <ridcully_> also this does have fixed four arguments - it accepts basically any amount of arguments
[00:46:51] <ridcully_> *not
[00:47:18] <jeaye> Yep, both the map approach and the positional approach I showed accept any amount of data (args or keys in the map).
[00:47:37] <ridcully_> i meant the first foo
[00:47:48] <jeaye> "and the positional approach"?
[00:47:58] <ridcully_> yes
[00:48:14] <jeaye> Yep. I agreed with you. :)
[00:48:20] <jeaye> They both accept any amount of data.
[00:48:41] <jeaye> But that's the only way you're going to get this flexibility.
[00:48:49] <Ingvix> hmmh, maybe I'll just stick with listing the arguments my self for the sake of clarity then
[00:49:11] <jeaye> Unless you're ready to move into macros. Then you can definitely get this.
[00:49:13] <ridcully_> well the map one accepts one argument (ignoring any border cases here)
[00:49:34] <jeaye> ridcully_: That's why I chose to say "any amount of data (args or keys in the map)", not arguments.
[00:49:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137) (Remote host closed the connection)
[00:50:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137)
[00:50:13] <jeaye> The positional approach has "open args" and the map approach has an open map.
[00:50:24] <ridcully_> i get that, i just wanted it to drive home, since Ingvix asked for "keep the amount of arguments limited"
[00:50:44] <jeaye> Yep. Means you could do something like (foo 1) and have b and g be nil.
[00:51:00] <ridcully_> i totally agree to move over to maps or something structured to whatever the real data here is.  var-arg-y functions are usually only useful for humans
[00:51:44] <jeaye> And positional data very quickly becomes anything but useful for humans, when you start using first/last/rest to access things.
[00:52:16] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[00:52:26] <jeaye> i.e. (second color) versus (:g color)
[00:56:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:2cad:b1e0:101a:8137) (Ping timeout: 246 seconds)
[00:58:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[00:58:50] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:12:21] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[01:21:48] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[01:22:17] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[01:22:45] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:22:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:34:49] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Read error: No route to host)
[01:35:00] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:36:56] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[01:43:50] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[01:44:31] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:46:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[01:49:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[01:51:10] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[01:58:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[02:06:53] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[02:09:40] *** Quits: euandreh_ (~euandreh@2804:14c:33:9fe5:b7ad:e92:1630:34c7) (Ping timeout: 260 seconds)
[02:10:26] *** Joins: euandreh_ (~euandreh@2804:14c:33:9fe5:220c:6f8c:d2f2:cb9)
[02:14:38] *** Quits: euandreh_ (~euandreh@2804:14c:33:9fe5:220c:6f8c:d2f2:cb9) (Ping timeout: 246 seconds)
[02:35:36] *** Joins: euandreh_ (~euandreh@2804:14c:33:9fe5:53a9:7ace:bc32:5ab9)
[02:37:07] <ToxicFrog> Namespace management question
[02:37:09] <ToxicFrog> I have three namespaces, foo.common and foo.impl. impl depends on common.
[02:37:11] <ToxicFrog> Ideally, I want people to be able to just (:require [foo ...]) and get the stuff they need, rather than needing to require foo.common, but that stuff has to be in common
[02:37:13] <ToxicFrog> Is there a way to "re-export" the symbols from foo?
[02:50:29] *** Quits: euandreh_ (~euandreh@2804:14c:33:9fe5:53a9:7ace:bc32:5ab9) (Ping timeout: 264 seconds)
[02:51:04] *** Joins: euandreh_ (~euandreh@2804:14c:33:9fe5:1ad2:21b6:1fe4:5cba)
[02:54:58] <jeaye> ToxicFrog: Yeah: manually def the things you want to re-export.
[02:55:26] <jeaye> However, I would just have people import what they want from where they need, in general app development.
[02:55:36] <jeaye> For library development, manual re-exporting does happen.
[02:57:57] <ToxicFrog> Yeah, this is a library.
[02:59:50] <ToxicFrog> At the moment, and possibly forever, the internal organization is a bit awkward because I have a multimethod, and its specializations need to be able to see both the root binding for the multimethod and an associating dynvar, but there's also enough of them that it's worth splitting them up into multiple namespaces
[02:59:53] <ToxicFrog> And the public-facing API for this is just a single function that does some bookkeeping and then calls the multimethod
[02:59:57] <ToxicFrog> And of course I have to avoid circular dependencies
[03:00:27] <ToxicFrog> Also, after some rummaging: I think (intern) may be a better choice here than redefing
[03:06:42] *** Quits: euandreh_ (~euandreh@2804:14c:33:9fe5:1ad2:21b6:1fe4:5cba) (Ping timeout: 260 seconds)
[03:34:53] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[04:16:06] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[04:16:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[04:18:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:19:41] *** Quits: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:20:19] *** Joins: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447)
[04:21:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[04:23:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[04:25:12] *** Quits: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447) (Client Quit)
[04:25:21] *** Quits: chujev (~chujev@88.103.226.7) (Remote host closed the connection)
[04:26:24] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[04:26:53] *** Joins: chujev (~chujev@88.103.226.7)
[04:29:35] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:35:08] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[04:35:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[04:56:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c) (Remote host closed the connection)
[05:04:31] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[05:16:37] *** Joins: yoonkn (~user@175.197.208.79)
[05:17:55] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[05:24:03] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[05:25:07] <OMGOMG> (map #(reduce % []) [* +])
[05:25:12] <OMGOMG> how does clojure know what i want here?
[05:25:52] <OMGOMG> (1 0)
[05:35:34] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::6a2) (Ping timeout: 252 seconds)
[05:40:03] <jeaye> Heh, those nullary versions of arithmetic are bonkers.
[05:40:12] <jeaye> They can be handy, though.
[05:40:22] <jeaye> (*) => 1, (+) => 0
[05:40:26] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[05:47:28] <OMGOMG> ...indeed
[05:55:49] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Remote host closed the connection)
[06:13:13] <sobel> fiat definitions like x^0
[06:53:33] *** Joins: kaisyu (uid37155@id-37155.ilkley.irccloud.com)
[08:16:59] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c008ef9bae6bbbe7d19.dip0.t-ipconnect.de)
[09:02:25] *** Quits: kaisyu (uid37155@id-37155.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:31:47] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[10:30:35] *** Joins: wonko (~wjc@62.115.229.50)
[10:32:12] *** Joins: tankf33der (mpech@envs.net)
[11:24:28] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[11:35:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:29:04] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[12:35:29] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[12:57:17] *** Quits: yoonkn (~user@175.197.208.79) (Ping timeout: 265 seconds)
[13:04:22] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[13:16:01] *** Joins: yoonkn (~user@175.197.208.79)
[13:28:26] *** Quits: wonko (~wjc@62.115.229.50) (Changing host)
[13:28:26] *** Joins: wonko (~wjc@user/wonko)
[13:34:04] *** Joins: euandreh_ (~euandreh@2804:14c:33:9fe5:62bf:2631:9503:606c)
[13:36:35] <andreyorst> first time I saw (/ 5) I was scratching my head for quite a time
[13:42:11] <opqdonut> however (/) is an error
[13:42:33] <opqdonut> but unary / is kind of a nice analogy with unary -
[13:44:37] *** Joins: op2 (~op@user/op2)
[13:54:18] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[13:58:57] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 268 seconds)
[14:13:04] <lunik1> I didn't even know about unary / until just now
[15:06:49] *** Joins: Guest35 (~Guest35@88.215.96.234)
[15:07:43] <Guest35> Hello, Clojurists! Is there such a function in Clojure's standard library? `(defn inspect [x] (prn x) x)` Thanks!
[15:10:09] <Para> Ah the good ol' debug helper.
[15:10:30] <Para> There's a million ways to achieve that :) But no, nothing built-in in the sense
[15:11:29] <Para> The most modern way afaik is using `tap>`, like shown in example here https://clojuredocs.org/clojure.core/tap%3E`
[15:17:00] <Guest35> Haha, true! Nothing quite like it, right? 😆 I'll play with `tap>` a bit more. Thank you.
[15:19:02] <andreyorst> Guest35: #(doto % prn) might do
[15:20:51] <andreyorst> I sometimes use this in the context of a threading macro like (-> x do-thing (#(doto % prn)) do-other-thing)
[15:21:10] <andreyorst> not the prettiest, but the quickiest I've found so far :D
[15:23:01] <Guest35> Thanks, andreyorst! That's exactly what I was looking for. Quick-n-okayish.
[15:37:23] <ridcully_> Guest35: there are also things like portal, that allow you to look into the tap>-ed data
[15:37:32] <ridcully_> like clojure.inspector in steroids
[15:39:55] *** Joins: jespada (~jespada@2803:9800:9842:7a62:4d47:2975:7b31:a447)
[15:43:44] <atw> https://practical.li/clojure/clojure-tools/data-browsers/portal.html this one? The inspector is in a web browser?
[15:47:51] <Guest35> Thanks, ridcully_! Great to know about portal.
[15:54:15] <ridcully_> atw: portal has afair three backends (cljs, jvm, and sometthing i forgot, maybe mobile?).  i use the jvm one and it starts something - whether this is an electron app, javafx webbrowser, javfx, swing, ... i did not bother to investigate
[15:56:09] <ridcully_> ah the third one is for babashka.  https://github.com/djblue/portal
[16:25:00] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[16:30:01] <Para> Oh, this'll be interesting. I'll be getting a new dev laptop, and it'll be M1 Macbook Pro.
[16:33:35] <andreyorst> congrats
[16:34:07] <andreyorst> AFAIK JVM works fine on M1 as of today
[16:35:00] <Para> Yeah, latest has native, official support.
[17:10:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:10:55] <wink> from what I've heard just the fun stuff isn't working. games etc :P
[17:10:56] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:11:06] <wink> everything for work and most things you can compile should
[17:23:59] <andreyorst> I think games mostly were a foreign thing on macs even before M1 came
[17:36:05] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 264 seconds)
[17:52:34] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[18:00:07] *** Joins: tcrawley_ (~tcrawley@066-190-197-160.res.spectrum.com)
[18:01:42] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c008ef9bae6bbbe7d19.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:01:44] *** Quits: tcrawley (~tcrawley@2600:6c5e:467f:b0cb:efd0:1121:c5db:380f) (Ping timeout: 246 seconds)
[18:16:05] *** Quits: tcrawley_ (~tcrawley@066-190-197-160.res.spectrum.com) (Remote host closed the connection)
[18:16:16] *** Joins: eddof13 (~textual@200.52.90.50)
[18:21:45] *** Quits: Guest35 (~Guest35@88.215.96.234) (Quit: Client closed)
[18:25:05] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[18:33:03] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[18:33:12] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 265 seconds)
[18:33:44] *** Joins: seschwar (~seschwar@user/seschwar)
[18:45:40] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:50:28] *** Joins: wonko (~wjc@62.115.229.50)
[18:50:33] *** Joins: eddof13 (~textual@200.52.90.50)
[18:57:27] <sobel> https://www.youtube.com/watch?v=1OcAUhe3E1E
[18:57:39] <sobel> (visual clojure thing, vlojure, looks neat)
[19:02:41] *** Quits: eddof13 (~textual@200.52.90.50) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:13] <hendursaga> How do I get the reverse dependencies of something published to Clojars?
[19:06:15] *** Joins: eddof13 (~textual@200.52.90.50)
[19:10:36] <ToxicFrog> As in, the set of projects that depend on it?
[19:10:39] <ToxicFrog> AFAICT clojars doesn't publish dependency information directly
[19:11:11] <ToxicFrog> So your best bet would be to use something like https://repo.clojars.org/all-poms.txt to get a list of all the POMs, then download them and see which ones have dependencies on the project you're interested in
[19:13:29] <andreyorst> sobel: vlojure looks neat
[19:14:10] <andreyorst> really nice way to hide parentheses from unprepaired people, and then tell them it was only parentheses all along
[19:14:29] <hendursaga> It's turtles all the way down!
[19:14:40] <andreyorst> do you mean the whale?
[19:15:59] <ridcully_> some long time ago i think there was a site that tracked the deps?
[19:17:16] <hendursaga> ToxicFrog: that.. looks like a lot of work, sadly :(
[19:17:49] <hendursaga> also I might unintentionally DoS the server that way, ha
[19:19:27] <hendursaga> this article might help some.. https://tirkarthi.github.io/clojure/2018/03/17/data-mining-clojars.html
[19:22:45] <ToxicFrog> It looks like five minutes of bash and then waiting a few hours for it to grind through all the POMs to me, personally~
[19:24:07] <andreyorst> why bash if there's babashka?
[19:24:31] <ToxicFrog> Because I'm most comfortable in zsh but more people have bash installed.
[19:24:53] <andreyorst> well in that case you can go with Perl too
[19:25:28] <andreyorst> still better than bash
[19:25:41] <andreyorst> and probably available everywhere bash is
[19:26:07] <ToxicFrog> Yeah, but I'm 20 years out of practice in perl while I still use zsh on a daily basis
[19:26:15] <andreyorst> fair :)
[19:26:51] <ToxicFrog> If that rsync command on "data mining clojars" still works to fetch the poms, though, that's an even better approach!
[19:27:13] <andreyorst> tbh, idk why perl has such a bad rep, it's a good language for what it was designed for
[19:27:36] <andreyorst> it's kinda similar to how lisps have a bad rep among other languages
[19:29:55] <andreyorst> sorry for the off-topic)
[19:31:03] <ToxicFrog> Based on my experience both writing and maintaining it (and hanging out with people who, unlike me, do use it regularly on a professional basis), it's because it's very, very easy to emit write-only code in it
[19:31:06] <ToxicFrog> It has a lot of features to promote concision at the cost of clarity and the result of this is that if you are not very rigorous you can quite easily create a script that does exactly what it's meant to and is nearly comprehensible even to you a few months from now
[19:31:20] <ToxicFrog> *nearly incomprehensible
[19:32:08] *** Quits: mvnetbiz[m] (~mvtvamatr@2001:470:69fc:105::181) (Read error: Connection reset by peer)
[19:32:08] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Read error: Connection reset by peer)
[19:32:09] *** Quits: Asbjrn[m] (~asbjornol@2001:470:69fc:105::40b) (Read error: Connection reset by peer)
[19:32:09] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Read error: Connection reset by peer)
[19:32:10] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (Read error: Connection reset by peer)
[19:32:10] *** Quits: nivekuil (~nivekuilc@2001:470:69fc:105::d57e) (Write error: Connection reset by peer)
[19:32:10] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Write error: Connection reset by peer)
[19:32:11] *** Quits: westrom[m] (~westromma@2001:470:69fc:105::b56d) (Read error: Connection reset by peer)
[19:32:11] *** Quits: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) (Read error: Connection reset by peer)
[19:32:12] *** Quits: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b) (Write error: Connection reset by peer)
[19:32:13] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Write error: Connection reset by peer)
[19:32:13] *** Quits: mickie[m] (~mickiemat@2001:470:69fc:105::e0dc) (Read error: Connection reset by peer)
[19:32:14] *** Quits: golanv (~golanv@2001:470:69fc:105::54c) (Read error: Connection reset by peer)
[19:32:14] *** Quits: pinage404 (~pinage404@2001:470:69fc:105::25c) (Write error: Connection reset by peer)
[19:32:15] *** Quits: pam_cakes[m] (~pamcakesm@2001:470:69fc:105::925c) (Write error: Connection reset by peer)
[19:32:16] *** Quits: Myon[m] (~replikvlt@2001:470:69fc:105::2cb0) (Write error: Connection reset by peer)
[19:32:16] *** Quits: goodger[m] (~goodgerma@2001:470:69fc:105::30be) (Write error: Connection reset by peer)
[19:32:39] <ToxicFrog> And since it's a widely used and widely installed a lot of people's experience with perl is heavily biased towards "one-off script the last person to lick this cookie hacked together without much thought for maintainability" rather than "carefully crafted and documented program designed with an eye towards long-term maintainability"
[19:33:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:dc8f:40ba:7f6f:b65c)
[19:33:20] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[19:33:58] <andreyorst> yeah, I know, but that can stand true for a lot more languages than just Perl
[19:33:59] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[19:34:11] *** Joins: westrom[m] (~westromma@2001:470:69fc:105::b56d)
[19:34:11] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[19:34:11] *** Joins: Asbjrn[m] (~asbjornol@2001:470:69fc:105::40b)
[19:34:23] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[19:34:23] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[19:34:23] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[19:34:29] <andreyorst> Awk can for example be as write-only as Perl, but I rarely hear anything bad about it, as I do about Perl
[19:34:37] *** Joins: golanv (~golanv@2001:470:69fc:105::54c)
[19:34:49] *** Joins: mvnetbiz[m] (~mvtvamatr@2001:470:69fc:105::181)
[19:35:02] *** Joins: mickie[m] (~mickiemat@2001:470:69fc:105::e0dc)
[19:35:09] <andreyorst> but I agree with you, just sad that it is this way
[19:35:14] *** Joins: Myon[m] (~replikvlt@2001:470:69fc:105::2cb0)
[19:35:26] *** Joins: goodger[m] (~goodgerma@2001:470:69fc:105::30be)
[19:35:38] *** Joins: gonewest818[m] (~gonewest8@2001:470:69fc:105::f38b)
[19:35:50] *** Joins: pam_cakes[m] (~pamcakesm@2001:470:69fc:105::925c)
[19:35:50] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[19:35:50] *** Joins: nivekuil (~nivekuilc@2001:470:69fc:105::d57e)
[19:40:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[19:42:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:50:14] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 246 seconds)
[19:52:41] <ToxicFrog> Oh, that's true of a lot of languages, but I think it's an exposure thing more than an issue inherent to Perl itself; there is probably proportionally more bad awk than perl out there, all told, but I run into perl much more frequently and in larger volumes!
[19:58:40] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[20:08:07] <sobel> i was thinking, wih vlojure, an increased vocabulary of code structures and visual displays could make that really powerful
[20:08:27] <sobel> maybe not as a general-purpose coding tool but it could lend itself to a visual DSL
[20:09:26] <sobel> i'm so impressed
[20:11:25] <andreyorst> maybe it's just me, but I've always seen visual programming as a teaching tool, or an easy way for a non-programmers to get into programming.
[20:12:07] <andreyorst> but honestly, visual programming has it's uses, like shaders have been created with nodes for a long time, which is essentially just a visual way to represent a program's execution tree
[20:12:19] <technomancy> hendursaga: this used to track it back in the day but the site got taken down https://github.com/jkk/clojuresphere
[20:15:24] <sobel> i've always seen visual programming as deceptively difficult, in that it's real programming, but also deceptively easy in that programmers don't take it seriously
[20:15:42] <sobel> or i should call them text-oriented coders
[20:17:18] <sobel> i imagine a good instructor could turn it into a useful teaching tool as well
[20:19:47] <Para> BPMN's useful, but it was never meant to serve the purpose of actual core programming
[20:20:40] <sobel> DSLs it is, then
[20:22:42] *** Parts: tankf33der (mpech@envs.net) (the lounge - https://webirc.envs.net)
[20:34:20] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[20:43:29] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 268 seconds)
[20:43:32] *** Joins: turlando_ (~turlando@93-42-250-112.ip89.fastwebnet.it)
[20:43:58] *** Quits: turlando_ (~turlando@93-42-250-112.ip89.fastwebnet.it) (Client Quit)
[20:44:16] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[20:44:16] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[20:44:16] *** Joins: turlando (~turlando@user/turlando)
[20:47:03] <ridcully_> if it helps someone learn more about the lispy ways, then all the power to them
[20:47:11] <ridcully_> bpmn is quite at the other end
[20:49:20] <sobel> ugh, BPMN is an ISO standard. I smell XML without even looking under the hood.
[20:49:41] <ridcully_> bingo
[20:49:53] *** Quits: lunik1 (~lunik1@37.205.14.203) (Read error: Connection reset by peer)
[20:49:56] <sobel> ah, the BPEL relation. i have seen that stuf but only from a distance.
[20:50:21] *** Joins: lunik1 (~lunik1@37.205.14.203)
[20:50:45] <sobel> if i were even in the target audience for that stuff i am not sure why some UML-ish system wouldn't be more applicable
[20:50:59] <ridcully_> in my book about things, i want to start, is definetly some hiccupish syntax to transform three lines into the 100 lines you need for bpmn
[20:51:16] <ridcully_> last time i looked there was some DSL for javascript
[20:52:34] <sobel> i really do favor modeling languages that help SMEs interact with developers but i'll be impressed the first time SMEs take to a DSL built by developers naturally
[20:53:54] <ridcully_> i used bpmn (via activiti) in anger once.  and that was with a workflow straight from hell (multiple staged, conditional review stages; parallel tasks for multiple teams; 8 roles involved...)
[20:54:39] <ridcully_> i still like the idea of uploading a config into a service and let that orchestrate everything for you... but suffering some web editor to create that config is just too much
[20:56:06] <sobel> just about every GUI has sent me to the text editor to either code or use a more convenient representation i would write a translater (EXPANDER) for later
[20:56:19] <sobel> hiccup is a great example of an expander
[20:57:41] <sobel> mostly i don't want to use an expander until the UI
[20:57:51] <sobel> but internal interfaces are what they are
[21:00:09] <ridcully_> i am totally happy with the graphical aspect... but only as an artifact.  save it, send it to the customer, nourish yourself from the tears
[21:01:00] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[21:01:13] <ridcully_> in the end it's again the pipe dream of biz, that they don't need "us"
[21:01:31] <Para> sobel: Well, a few BPMN systems allow using JVM languages as well - we did a PoC for Clojure interop within I think it was Camunda and while it was quite janky, it did work :)
[21:01:56] <Para> That said, I wouldn't really do that unless I have some bigwigs who do the BPMN flow part for me.
[21:02:21] <ridcully_> i'd totally expect that to work just fine.  and if only you would have to thread things in via some spring service
[21:02:55] <ridcully_> but since groovy is allowed to script, i'd totally see anything work for scripting if it works with the java-scripting thingy
[21:03:58] <Para> Hm, I'll do a quick search in fact...
[21:07:03] <sobel> > ...that they don't need "us"
[21:07:09] <sobel> hahahahahahahaha<cough>ahahahahahaha
[21:07:12] <sobel> so troue
[21:07:23] <sobel> -o
[21:08:30] <Para> They've gotten the relation the wrong way around.
[21:08:32] <sobel> i can understand wanting to gain independence from the intricacies of relational data but eventually you gotta be able to join your data or what the heck are you even doing
[21:08:49] <Para> Most devs seem to be quite content with the idea of absolutely dropping gloves and going to farming or something after a period of years.
[21:09:38] <sobel> you can't make it to senior without understanding simplicity as a core principle, and that has an emotional/personal/political impact on anyone
[21:09:44] <sobel> back to the dirt, indeed
[21:11:53] <sobel> when i am fed up with code i go water my garden
[21:16:48] *** Quits: lunik1 (~lunik1@37.205.14.203) (Quit: :x)
[21:17:25] *** Joins: lunik1 (~lunik1@37.205.14.203)
[21:35:25] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 265 seconds)
[21:40:48] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[21:45:37] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[21:47:19] *** Joins: seschwar (~seschwar@user/seschwar)
[21:52:34] *** Joins: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[21:58:53] *** Quits: sailorCa` (~user@p200300f6a70c4acab01db352a4b3e3ef.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[22:00:52] *** Joins: sailorCa` (~user@p200300f6a70c4acf615c421dc8c3560e.dip0.t-ipconnect.de)
[22:38:53] <Para> well this sure is something https://hyperfiddle.notion.site/Reactive-Clojure-You-don-t-need-a-web-framework-you-need-a-web-language-44b5bfa526be4af282863f34fa1cfffc
[22:48:28] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 252 seconds)
[22:53:45] *** Quits: paul_j (~user@67.26.169.217.in-addr.arpa) (Remote host closed the connection)
[22:54:06] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[22:58:47] <Para> also I'm being lazy but this is also quite nice https://github.com/luminus-framework/ring-undertow-adapter
[22:59:15] <Para> I did try to figure out how to do that some time ago, but at the time Undertow's documentation was pretty much just one big TODO so didn't bother to do the whole thing. Nice that someone else has now done it :)
[23:01:49] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[23:27:08] <hendursaga> How might I go about converting Hickory or Hiccup into, say, CommonMark markdown?
[23:30:13] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[23:30:23] <jeaye> Hiccup -> HTML -> Markdown probably
[23:31:54] <hendursaga> Using some external converter..?
[23:39:13] <jeaye> Yup, lots of tools for HTML -> Markdown and the whole point of Hiccup is to convert to HTML.
[23:41:05] *** Quits: matty_ma1 (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
