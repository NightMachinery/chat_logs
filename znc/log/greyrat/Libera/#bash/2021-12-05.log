[00:00:47] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 256 seconds)
[00:01:00] *** Joins: davidl (~quassel@217-64-148-110.pool.ovpn.com)
[00:01:09] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[00:01:29] *** Quits: davidl (~quassel@217-64-148-110.pool.ovpn.com) (Client Quit)
[00:01:52] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[00:01:58] *** Joins: sublim20 (~sublim20@user/sublim20)
[00:02:04] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:02:11] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[00:02:17] *** Joins: davidl (~quassel@217-64-148-110.pool.ovpn.com)
[00:02:57] *** Quits: davidl (~quassel@217-64-148-110.pool.ovpn.com) (Client Quit)
[00:04:06] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[00:04:36] *** Joins: brw (~bas@haring.bas.sh)
[00:05:55] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[00:05:56] *** Quits: zouhair (~zouhair@lnsm2-montreal02-142-118-235-34.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[00:07:23] *** Joins: zouhair (~zouhair@lnsm2-montreal02-142-118-235-34.internet.virginmobile.ca)
[00:09:02] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[00:11:26] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[00:11:55] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[00:12:08] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:12:37] *** Quits: cdown (~cdown@188.214.11.14) (Remote host closed the connection)
[00:12:44] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:12:46] *** Joins: cryptonector (~nico@24.28.108.183)
[00:12:47] *** Joins: shbot (~shbot@37.139.2.101)
[00:12:51] *** Joins: medard (~mithrin@stip-static-62.213-81-207.telecom.sk)
[00:12:51] *** Joins: cdown (~cdown@188.214.11.14)
[00:12:55] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[00:12:56] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[00:13:03] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Read error: Connection reset by peer)
[00:13:07] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[00:13:11] *** Quits: hata (~hata@hata.moe) (Quit: Ping timeout (120 seconds))
[00:13:30] *** Joins: hata (~hata@hata.moe)
[00:14:10] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:14:12] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:14:13] *** m0viefreak2 is now known as m0viefreak
[00:14:40] *** Quits: birkoff (birkoff@user/birkoff) (Ping timeout: 256 seconds)
[00:14:53] *** Quits: zouhair (~zouhair@lnsm2-montreal02-142-118-235-34.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[00:14:53] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 256 seconds)
[00:14:53] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 256 seconds)
[00:15:21] *** Joins: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[00:15:27] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: l4yer (~l4yer@217-64-151-10.pool.ovpn.com) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: b0b (~bob@user/b0b) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: cryptone1tor (~nico@24.28.108.183) (Ping timeout: 256 seconds)
[00:15:27] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[00:15:35] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[00:15:41] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[00:15:46] *** Joins: b0b (~bob@user/b0b)
[00:16:42] *** Joins: joerg (~saturn@user/joerg)
[00:16:56] *** Joins: zouhair (~zouhair@lnsm2-montreal02-142-118-235-34.internet.virginmobile.ca)
[00:17:52] *** Quits: zaden_ (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Client Quit)
[00:18:14] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[00:18:34] *** Joins: cryptone1tor (~nico@24.28.108.183)
[00:21:41] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 256 seconds)
[00:22:50] *** Joins: l4yer (~l4yer@217-64-151-10.pool.ovpn.com)
[00:24:07] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[00:24:56] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[00:25:20] *** birkoff is now known as Guest5703
[00:25:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:25:38] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[00:26:45] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[00:26:45] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[00:26:45] *** Joins: wuseman (~wuseman@user/wuseman)
[00:29:16] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[00:29:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[00:29:42] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd)
[00:31:30] *** jinsun__ is now known as jinsun
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:37:08] *** Joins: wamph (~wamph@ely0-08-b2-v4wan-162739-cust191.vm43.cable.virginm.net)
[00:39:45] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:40:17] *** Joins: EG16 (~Erica@2806:107e:10:3125:30b3:718e:440d:5ec5)
[00:40:40] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:41:12] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:41:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[00:45:19] *** Joins: [RMS] (~rs@genoce.org)
[00:46:16] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 260 seconds)
[00:46:34] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:50:59] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[00:53:41] *** Joins: }8] (~}8]@107.173.83.81)
[00:54:52] <}8]> hi. shouldnt the check ``((${array[0]:-0}))`` set array[0]=0 if array[0] is unset?
[00:56:55] <izabera> no, that'd be = rather than :-
[00:57:21] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[00:57:35] *** Quits: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com) (Quit: leaving)
[00:59:43] *** Quits: zouhair (~zouhair@lnsm2-montreal02-142-118-235-34.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[01:04:54] *** Joins: zouhair (~zouhair@142.182.70.140)
[01:05:11] *** Quits: zouhair (~zouhair@142.182.70.140) (Client Quit)
[01:05:18] *** Joins: tejr (~tejr@user/tejr)
[01:06:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:06:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:09:14] *** Joins: arinov (~arinov@213.194.126.155)
[01:10:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:10:56] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[01:11:25] *** Joins: zouhair (~zouhair@142.182.70.140)
[01:12:25] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[01:13:14] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:16:26] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[01:16:37] *** Quits: sinaowolabi_ (~SinaOwola@160.152.22.231) (Ping timeout: 252 seconds)
[01:18:05] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 252 seconds)
[01:18:23] *** Joins: magla (~gelignite@55d48eca.access.ecotel.net)
[01:19:53] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:21:23] *** Quits: EG16 (~Erica@2806:107e:10:3125:30b3:718e:440d:5ec5) (Ping timeout: 252 seconds)
[01:21:45] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[01:25:46] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 268 seconds)
[01:27:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:27:40] *** Quits: magla (~gelignite@55d48eca.access.ecotel.net) (Quit: Stay safe!)
[01:28:45] *** Joins: sinaowolabi_ (~SinaOwola@160.152.160.221)
[01:29:03] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[01:32:03] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:32:06] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:33:29] *** Quits: sinaowolabi_ (~SinaOwola@160.152.160.221) (Ping timeout: 252 seconds)
[01:33:43] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 256 seconds)
[01:34:53] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 250 seconds)
[01:35:21] *** Joins: makara (~makara@196.214.171.83)
[01:35:56] *** Joins: makara_ (~makara@196.214.171.83)
[01:35:57] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:36:42] *** [RMS] is now known as [R]
[01:37:03] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[01:37:51] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:38:52] *** Parts: podeni (~podeni@188.27.129.74) ()
[01:39:23] *** Quits: errqre (~joshua@96-2-80-28-static.midco.net) (Quit: leaving)
[01:40:33] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:41:07] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:42:21] *** Joins: ferdna (~ferdna@user/ferdna)
[01:42:53] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[01:42:53] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[01:42:53] *** Joins: wuseman (~wuseman@user/wuseman)
[01:44:42] *** Quits: nrl^ (~nrl@68.101.58.90) (Remote host closed the connection)
[01:44:47] *** Joins: sinaowolabi_ (~SinaOwola@169.159.75.129)
[01:45:10] *** Joins: sublim20 (~sublim20@user/sublim20)
[01:47:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:47:47] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[01:49:49] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:50:05] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:51:27] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 252 seconds)
[01:51:27] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[01:52:01] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:52:59] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:53:22] *** Joins: Betal (~Betal@user/betal)
[01:54:37] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[01:54:54] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[01:54:55] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[01:54:55] *** Joins: wuseman (~wuseman@user/wuseman)
[01:55:55] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:57:41] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 252 seconds)
[02:01:51] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[02:03:28] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:04:53] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:05:08] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:06:07] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[02:10:24] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[02:10:24] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[02:10:24] *** Joins: wuseman (~wuseman@user/wuseman)
[02:12:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[02:12:28] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[02:13:32] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[02:15:06] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:15:41] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[02:16:18] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:16:41] *** Joins: akoana (~ah@user/akoana)
[02:16:53] *** Joins: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com)
[02:16:53] *** Quits: wuseman (~wuseman@81-234-125-157-no68.tbcn.telia.com) (Changing host)
[02:16:53] *** Joins: wuseman (~wuseman@user/wuseman)
[02:18:24] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[02:19:19] *** Quits: sinaowolabi_ (~SinaOwola@169.159.75.129) (Ping timeout: 252 seconds)
[02:19:39] <rustyshackleford> is there a nice/easy way to parse options/flags for a script?
[02:20:31] <rustyshackleford> how are people creating programs/scripts with so many options? parsing them is kind of hard
[02:21:04] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[02:21:48] *** Quits: sazawal (~sazawal@223.190.92.152) (Quit: Leaving)
[02:25:59] *** Joins: nvz (~user@nvz.farted.online)
[02:26:35] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:26:47] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:27:21] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[02:29:16] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:29:42] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Client Quit)
[02:29:50] <Blondie101010> !getopts
[02:29:50] <greybot> while getopts ab: name; do case $name in a) a=1;; b) b=$OPTARG;; ?) echo invalid;; esac; done; shift $((OPTIND - 1)) # Tutorial: http://wiki.bash-hackers.org/howto/getopts_tutorial Examples: http://mywiki.wooledge.org/BashFAQ/035
[02:29:57] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:31:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[02:31:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:32:51] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:32:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:33:29] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[02:33:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:33:51] *** Joins: sinaowolabi_ (~SinaOwola@41.58.231.166)
[02:35:55] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:36:23] <rustyshackleford> some are suggesting getopt is better
[02:37:00] <rustyshackleford> some scripts get really fancy. short and long options
[02:37:10] <rustyshackleford> mix in some positional params
[02:37:44] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[02:38:01] <e36freak> rustyshackleford: i created my own loop years ago that handles all the different option styles i would want to handle and breaks/turns them into a more easily parseable format. kinda a home-rolled getopt thing
[02:38:40] <rustyshackleford> e36freak: what are you using for AOC this year?
[02:38:56] *** Quits: dreamon (~dreamon@pd9503edd.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:39:14] <e36freak> http://ix.io/2S5X
[02:39:16] <e36freak> awk, as usual
[02:39:31] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[02:39:42] <e36freak> i've also been redoing them in C when i have time for practice
[02:40:42] <rustyshackleford> I haven't started AOC yet
[02:40:50] <rustyshackleford> time to re-learn about regex
[02:41:17] <e36freak> regex hasn't really been handy so far
[02:41:40] <rustyshackleford> oh really?
[02:42:06] <rustyshackleford> last year I spent a lot of time dicking around with reading the input file
[02:42:20] <e36freak> awk makes that bit pretty easy
[02:42:50] <e36freak> so far it's just been 2 lists and some bingo tables
[02:43:00] <e36freak> bingo boards, whatever
[02:43:15] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:44:51] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[02:45:56] *** Joins: tessio (~weechat@141.226.73.109)
[02:45:59] *** Quits: tessio (~weechat@141.226.73.109) (Client Quit)
[02:46:05] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[02:46:32] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[02:47:37] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[02:47:47] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[02:51:37] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:52:39] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:52:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[02:53:12] *** Joins: debdut (~debdut@115.187.40.134)
[03:01:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:02:22] *** Joins: EG16 (~Erica@2806:107e:10:3125:30b3:718e:440d:5ec5)
[03:02:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[03:03:06] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:04:22] *** Joins: rgrinberg (~textual@187.223.248.37)
[03:04:55] *** Quits: concrete-houses (~g@209.6.150.53) (Remote host closed the connection)
[03:05:06] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:05:25] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[03:06:19] *** Joins: zebrag (~chris@user/zebrag)
[03:06:48] *** Quits: debdut (~debdut@115.187.40.134) (Quit: debdut)
[03:09:29] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[03:11:56] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[03:12:30] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[03:13:43] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[03:14:18] *** Joins: stitched (~austin@2603-8000-0302-3400-c43a-ebb3-4969-311e.res6.spectrum.com)
[03:14:27] *** Parts: stitched (~austin@2603-8000-0302-3400-c43a-ebb3-4969-311e.res6.spectrum.com) (WeeChat 2.8)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:47] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 252 seconds)
[03:16:18] *** Quits: queue- (~nerd@user/queue/x-7267619) (Remote host closed the connection)
[03:16:41] *** Joins: sublim20 (~sublim20@user/sublim20)
[03:18:05] *** Joins: polve (~polve@twcitalia/polve)
[03:18:52] *** Joins: queue (~nerd@rektnet.com)
[03:19:19] *** Joins: seninha (~seninha@user/seninha)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:34] *** Quits: led_belly (~led_belly@5.180.62.219) (Remote host closed the connection)
[03:20:40] *** Joins: wuseman (wuseman@213-67-240-49-no68.tbcn.telia.com)
[03:20:41] *** Quits: wuseman (wuseman@213-67-240-49-no68.tbcn.telia.com) (Changing host)
[03:20:41] *** Joins: wuseman (wuseman@user/wuseman)
[03:20:43] <superboot> What is AOC?
[03:21:11] <superboot> Ah! Advent of Code...
[03:21:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:24:49] *** Joins: namkeleser (~namkelese@101.175.128.51)
[03:25:41] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com)
[03:26:39] *** queue is now known as queue-
[03:26:57] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com) (Read error: Connection reset by peer)
[03:27:05] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Read error: No route to host)
[03:27:35] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[03:27:47] *** Joins: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:60c4:53d9:14a8:273e)
[03:27:50] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:28:35] *** Quits: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:60c4:53d9:14a8:273e) (Read error: Connection reset by peer)
[03:30:03] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:13] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:23] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:30:26] *** Joins: merazi_1 (~merazi@192.141.4.18)
[03:32:40] *** Joins: Karyon (~Karyon@user/karyon)
[03:33:25] *** Quits: merazi_1 (~merazi@192.141.4.18) (Quit: Leaving)
[03:33:41] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:f115:765d:5ffa:19a8) (Quit: Leaving)
[03:33:48] *** Quits: queue- (~nerd@rektnet.com) (K-Lined)
[03:34:34] *** Joins: merazi_1 (~merazi@192.141.4.21)
[03:35:20] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:36:50] *** Joins: markofcorn (~markofcor@047-041-134-052.res.spectrum.com)
[03:37:10] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:37:38] *** Joins: maroloccio (~marolocci@151.53.155.184)
[03:37:52] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[03:40:40] <Karyon> Hi, can someone explain how I can store a multiline string as a variable well preserving newlines please? Here's what I'm working on https://pastebin.com/raw/km2FTkD6, I want to have my commit message to be formatted how writtened
[03:42:07] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:43:07] <twkm> you probably failed to quote the expansion.
[03:45:09] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[03:45:26] <twkm> # var=$'foo\nbar' ; echo "$var"
[03:45:27] <shbot> twkm: foo
[03:45:28] <shbot> twkm: bar
[03:45:34] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[03:45:49] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com)
[03:46:07] *** Joins: cdown_ (~cdown@163.114.131.1)
[03:47:00] *** joerg is now known as Guest1257
[03:47:00] *** Quits: Guest1257 (~saturn@user/joerg) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[03:47:01] *** Joins: joerg (~saturn@user/joerg)
[03:47:02] <aetnaeus> # whoami
[03:47:03] <shbot> aetnaeus: root
[03:47:05] <Karyon> Oh, I see now why my newlines weren't working as expected
[03:47:06] <aetnaeus> :O
[03:47:06] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com) (Read error: Connection reset by peer)
[03:47:19] <aetnaeus> someone is living on the edge
[03:47:28] <twkm> not really.
[03:49:09] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[03:49:20] *** cdown_ is now known as cdown
[03:51:17] <NRK[m]> aetnaeus it's a vm
[03:51:28] <NRK[m]> # rm rf /*
[03:51:32] <Karyon> twkm: Thanks, my script is running with another example from #linux but if it doesn't work I'll try formatting it like how you shared
[03:51:33] <shbot> NRK[m]: bash: rm: rf: No such file or directory
[03:51:33] <shbot> NRK[m]: bash: rm: /bin: Is a directory
[03:51:33] <shbot> NRK[m]: etc... ( http://ix.io/3H2f )
[03:51:42] <NRK[m]> oops
[03:51:53] <NRK[m]> # rm -rf /*
[03:51:59] <shbot> NRK[m]: no output within the time limit
[03:52:08] <twkm> # var=$'foo\nbar' ; echo $var  # for comparison
[03:52:09] <shbot> twkm: foo bar
[03:53:46] <aetnaeus> NRK[m]: how does it sanitize input?
[03:54:07] <aetnaeus> I'm assuming it didn't actually try to delete the contents of disk
[03:54:29] <Karyon> twkm: Thanks, I see what I was doing wrong before
[03:54:43] <NRK[m]> it probably did, but it doesn't matter since it's a vm
[03:54:57] <aetnaeus> it spins up a new vm for each command?
[03:54:57] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:55:03] <NRK[m]> i don't remember the specifics but it spins up a fresh env everytime (i think)
[03:55:08] <aetnaeus> vm or container?
[03:55:10] <NRK[m]> yeah, i think
[03:55:39] <aetnaeus> is the source published somewhere?
[03:56:52] <NRK[m]> https://github.com/geirha/shbot this one maybe
[03:57:15] <aetnaeus> cool
[03:58:41] *** Quits: EG16 (~Erica@2806:107e:10:3125:30b3:718e:440d:5ec5) (Ping timeout: 245 seconds)
[04:04:19] *** Joins: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:60c4:53d9:14a8:273e)
[04:05:19] *** Quits: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:60c4:53d9:14a8:273e) (Read error: Connection reset by peer)
[04:06:06] <xx> it's a VM
[04:07:47] <aetnaeus> # cat /proc/$(ps -eo '%p,%P' |awk "/^ *$$/{print "'$'"2}")/cmdline;echo
[04:07:48] <shbot> aetnaeus: /bin/bash4/initirc
[04:08:57] <aetnaeus> # cat /bin/bash4/initirc
[04:08:58] <shbot> aetnaeus: cat: cannot open /bin/bash4/initirc: Not a directory
[04:09:41] <aetnaeus> # cat $(cat /proc/$(ps -eo '%p,%P' |awk "/^ *$$/{print "'$'"2}")/cmdline;echo)
[04:09:42] <shbot> aetnaeus: bash: warning: command substitution: ignored null byte in input
[04:09:42] <shbot> aetnaeus: cat: cannot open /bin/bash4/initirc: Not a directory
[04:11:47] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:14:07] *** Quits: wuseman (wuseman@user/wuseman) (Ping timeout: 268 seconds)
[04:14:29] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:15:31] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[04:18:31] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:22:46] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com)
[04:22:54] *** Quits: knstn (~knstn@ppp-94-66-57-28.home.otenet.gr) (Quit: leaving)
[04:23:05] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[04:23:56] <}8]> izabera ok thanks
[04:24:08] <}8]> late thanks better than no thanks :)
[04:24:56] *** Joins: treble (~treble@75.76.29.142)
[04:25:08] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-60c4-53d9-14a8-273e.inf6.spectrum.com) (Read error: Connection reset by peer)
[04:25:08] *** Quits: treble (~treble@75.76.29.142) (Changing host)
[04:25:08] *** Joins: treble (~treble@user/treble)
[04:25:50] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:30:16] *** Joins: mohab (~mohab@41.129.80.0)
[04:30:24] *** Quits: mohab (~mohab@41.129.80.0) (Client Quit)
[04:31:46] *** Joins: mohab (~mohab@41.129.80.0)
[04:31:53] *** Quits: mohab (~mohab@41.129.80.0) (Read error: Connection reset by peer)
[04:32:20] *** Joins: mohab (~mohab@41.129.80.0)
[04:32:49] *** Quits: mohab (~mohab@41.129.80.0) (Client Quit)
[04:37:23] *** Quits: [R] (~rs@genoce.org) (Read error: Connection reset by peer)
[04:37:30] *** Joins: [R] (~rs@genoce.org)
[04:46:54] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[04:47:15] *** Joins: kj (~kj@kj.aerisnetwork.net)
[04:48:36] *** Quits: markofcorn (~markofcor@047-041-134-052.res.spectrum.com) (Quit: Client closed)
[04:49:36] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:49:47] *** Quits: maroloccio (~marolocci@151.53.155.184) (Client Quit)
[04:50:15] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:51:13] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[04:53:12] *** gordonfish- is now known as gordonfish
[04:55:31] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:02:01] *** Joins: rgrinberg (~textual@187.223.250.159)
[05:05:01] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 256 seconds)
[05:07:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80::fb)
[05:08:25] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[05:09:04] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:11:42] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:16:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[05:18:46] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[05:20:23] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com)
[05:20:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:20:41] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:21:04] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com)
[05:21:55] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[05:22:00] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[05:22:00] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:22:30] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com)
[05:23:48] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:23:55] *** Joins: ferdna (~ferdna@user/ferdna)
[05:25:29] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[05:25:54] *** Joins: zaden (~maddx@73.92.207.228)
[05:28:20] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 252 seconds)
[05:28:20] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[05:28:44] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:34:09] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:35:56] *** Joins: Nact (~l@host-85-27-123-35.dynamic.voo.be)
[05:37:33] *** Quits: torresjrjr (~torresjrj@user/torresjrjr) (Remote host closed the connection)
[05:37:41] *** Joins: torresjrjr (~torresjrj@user/torresjrjr)
[05:38:26] <tar_xvf> Hello, is there a way for me to loop over lines in a file, when each line has spaces in it? Using the `for i in $(cat $f)` syntax loops over each word
[05:38:34] <rustyshackleford> I have a command which outputs a block of text containing the line "Transactions span        : 2015-11-13 to 2021-12-04 (2213 days)"
[05:38:47] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[05:38:51] <rustyshackleford> I would like to automagically extra 2015 (year of the first date)
[05:39:16] <rustyshackleford> or 2015-11-13 would be fine too
[05:39:53] <rustyshackleford> can I do it in plain bash with regex? should I reach for something like sed?
[05:40:52] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com)
[05:40:54] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:40:57] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[05:41:33] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:42:57] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[05:44:02] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[05:44:07] *** Quits: merazi_1 (~merazi@192.141.4.21) (Ping timeout: 256 seconds)
[05:44:26] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[05:45:55] <e36freak> !for$( > tar_xvf
[05:45:55] <greybot> tar_xvf: Never do this: for x in $(command) or `command` or $var. for-in is used for iterating arguments, not (output) strings. Instead, use a glob (eg. *.txt), arrays (eg. "${names[@]}") or a while-read loop (eg. while read -r line). See http://mywiki.wooledge.org/BashPitfalls#pf1 and http://mywiki.wooledge.org/DontReadLinesWithFor
[05:47:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[05:47:57] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[05:52:30] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[05:55:05] *** Joins: rgrinberg (~textual@187.223.248.37)
[05:58:24] *** Joins: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com)
[05:59:33] *** Quits: LiftLeft (~LiftLeft@2603-9000-ec02-7dfd-cae7-3055-6afe-9a80.inf6.spectrum.com) (Read error: Connection reset by peer)
[06:05:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:06:18] *** Joins: seninha (~seninha@user/seninha)
[06:08:34] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[06:11:56] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[06:12:54] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[06:13:09] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:14:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:14:39] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:15:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:15:27] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[06:15:27] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:18:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[06:18:49] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[06:19:13] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:20:41] *** Joins: nuke_ (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:22:22] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:23:09] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 252 seconds)
[06:24:54] *** Quits: nuke_ (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Remote host closed the connection)
[06:25:46] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:25:48] <hejux> # echo 'test quotes and expansion' ; var=test ; echo 'var in single quote is $var' ; echo "var in double outer quote, single inner quote is '$var'"
[06:25:49] <shbot> hejux: test quotes and expansion
[06:25:49] <shbot> hejux: var in single quote is $var
[06:25:49] <shbot> hejux: var in double outer quote, single inner quote is 'test'
[06:26:04] *** Quits: namkeleser (~namkelese@101.175.128.51) (Ping timeout: 256 seconds)
[06:26:38] <hejux> interesting
[06:27:07] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[06:28:53] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[06:29:15] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[06:29:51] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:29:57] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Remote host closed the connection)
[06:31:25] *** Joins: rgrinberg (~textual@187.223.250.159)
[06:32:21] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[06:33:07] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:33:28] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:34:10] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[06:34:12] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:34:59] *** Joins: namkeleser (~namkelese@101.175.128.51)
[06:36:37] <phy1729> single quotes aren't special in double quotes
[06:36:40] <phy1729> !quotes
[06:36:40] <greybot> https://mywiki.wooledge.org/Quotes
[06:39:17] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd) (Quit: smeeagle)
[06:39:50] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[06:41:16] <Blondie101010> # echo "Here are the quotes: ' and "'"
[06:41:23] <shbot> Blondie101010: Missing terminating quote, bracket or keyword
[06:41:34] <Blondie101010> oops
[06:41:39] <Blondie101010> # echo "Here are the quotes: ' and "'"'
[06:41:40] <shbot> Blondie101010: Here are the quotes: ' and "
[06:43:46] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:44:22] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[06:44:30] *** Joins: zebrag (~chris@user/zebrag)
[06:44:32] *** Joins: wuseman (wuseman@213-67-240-49-no68.tbcn.telia.com)
[06:44:51] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:44:57] <tar_xvf> greybot: thanks for the note
[06:45:18] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[06:46:27] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[06:47:28] *** Joins: sublim20 (~sublim20@user/sublim20)
[06:48:34] <tar_xvf> while read -r line was exactly what i was looking for, thanks
[06:48:57] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[06:49:30] *** Joins: dstein64- (~dstein64@dannyadam.com)
[06:50:16] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 260 seconds)
[06:50:30] *** Joins: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[06:50:41] *** dstein64- is now known as dstein64
[06:51:01] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[06:54:24] *** Quits: idle_rain (~idle_rain@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[06:55:47] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[07:00:03] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[07:00:49] *** Quits: zaden (~maddx@73.92.207.228) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[07:01:00] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[07:01:14] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[07:03:58] *** Joins: timj (~timj@user/timj)
[07:04:35] *** Quits: jos1 (~jos3@host-091-097-187-166.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:05:09] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[07:05:35] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[07:07:30] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[07:08:12] *** Quits: e36freak (~e36freak@user/e36freak) (Remote host closed the connection)
[07:08:54] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[07:09:12] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[07:10:01] *** Quits: wuseman (wuseman@213-67-240-49-no68.tbcn.telia.com) (Changing host)
[07:10:01] *** Joins: wuseman (wuseman@user/wuseman)
[07:10:13] *** Joins: e36freak (~e36freak@user/e36freak)
[07:12:39] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[07:14:50] *** Joins: rgrinberg (~textual@187.223.144.204)
[07:17:22] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:17:22] *** Joins: jos1 (~jos3@dyndsl-091-096-039-108.ewe-ip-backbone.de)
[07:17:49] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[07:19:23] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[07:23:17] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[07:26:56] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:27:49] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:30:07] *** Joins: sunmountain (~sunmounta@206.217.205.57)
[07:30:39] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:34:17] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:35:29] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[07:36:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:02] <texasmynsted> If I execute a command using `eval` that creates non-shell background processes... the script should not move on until the command completes? Right? Adding `wait` would do nothing right?
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:41] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[07:41:01] <Blondie101010> I suggest making a simple test case to show and test your point
[07:41:47] <texasmynsted> I would if I could think of way to do so.
[07:42:08] <gnoo> # SECONDS=0 ; eval sleep 2 ; wait ; echo "$SECONDS"
[07:42:11] <shbot> gnoo: 2
[07:42:18] <gnoo> # SECONDS=0 ; eval sleep 2 ; echo "$SECONDS"
[07:42:21] <shbot> gnoo: 2
[07:42:57] <gnoo> texasmynsted: yes, the wait is not needed
[07:43:11] <e36freak> where's the background process?
[07:43:15] <Blondie101010> # time eval "sleep 5 &"
[07:43:15] <e36freak> sleep is executed in the foreground there
[07:43:16] <shbot> Blondie101010: [1] 51
[07:43:16] <shbot> Blondie101010: real: 0m0.005s, user: 0m0.000s, sys: 0m0.005s
[07:43:18] <texasmynsted> okay.
[07:43:20] <texasmynsted> Thank you.
[07:43:33] <Blondie101010> my example is why I asked for your case
[07:43:38] <e36freak> if you do fork in an eval, then yes, you need to wait
[07:43:48] <Blondie101010> like any other command
[07:43:59] <texasmynsted> _something_ is busy with file resources that I need to delete, but I do not recognize the pids
[07:44:18] <gnoo> oh, okay, i didn't understand the question
[07:44:18] <e36freak> also why are you using eval in the first place
[07:45:38] <texasmynsted> The evaluated command fires off maybe 25 background processes that could run for ages.
[07:45:56] <texasmynsted> It is not a shell executable. (Jmeter)
[07:46:52] *** Quits: Inline (~Inline@2a02:908:1252:7a80::fb) (Ping timeout: 268 seconds)
[07:47:01] <texasmynsted> It seems like the shell should not get control back until the executable closes but there is no way to know if it cleans up after its self.
[07:47:19] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:47:30] <e36freak> if a process forks something, disowns it, and then exits, there's roughly fuck-all you can do to monitor it
[07:48:09] <Blondie101010> well if you plan for it, you could output the PID to later track it
[07:49:19] <Blondie101010> but using eval to start 25 background jobs sounds like a big mess that explains why you'd have hard to troubleshoot problems
[07:49:29] <e36freak> indeed
[07:50:58] <texasmynsted> I am simply starting jmeter. Jmeter starts all the processes and either correctly or incorrectly terminates them.
[07:51:31] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[07:51:37] <texasmynsted> I think maybe I just hope for the best and move on. hehe Thank you
[07:52:39] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[07:52:54] *** Joins: ravan (~ravan@user/ravan)
[07:52:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[07:54:21] *** Joins: vishal (~vishal@fedora/vishal)
[07:55:37] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:55:46] *** Joins: rgrinberg (~textual@187.223.248.37)
[08:03:47] <hejux> phy1729: it says file_conf=$selfdir/conf is allowed? without the need of ""?
[08:04:12] <phy1729> yes because it's an assingmnet
[08:06:52] *** Joins: palwd (~walid@5.107.177.159)
[08:07:48] <hejux> # var='i am a damn ass space' ; amt=/etc/$var ; typeset -p amt
[08:07:49] <shbot> hejux: declare -- amt="/etc/i am a damn ass space"
[08:08:25] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:09:05] <hejux> shit, then there are quite a lot of useless quotes in my script...
[08:13:21] <e36freak> they don't hurt
[08:13:35] <e36freak> better to quote and not need than the other way around
[08:18:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:19:28] *** Quits: palwd (~walid@5.107.177.159) (Quit: leaving)
[08:19:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[08:25:18] *** Joins: karabaja4 (~karabaja4@dh207-94-92.xnet.hr)
[08:25:21] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[08:26:12] <NRK[m]> i end up quoting assingments as well out of habit ¯\_(ツ)_/¯
[08:28:01] <texasmynsted> Is there a good alternative to recursively rm files in a directory, with subdirectories, than using `find`. I need each deletion to happen independent of the others starting deepest
[08:28:10] <texasmynsted> I am guessing the answer is no
[08:28:12] <texasmynsted> heh
[08:29:02] <e36freak> no
[08:29:32] <texasmynsted> okay
[08:29:34] <texasmynsted> thank you.
[08:30:01] *** Quits: sinaowolabi_ (~SinaOwola@41.58.231.166) (Ping timeout: 252 seconds)
[08:33:15] *** ciphersalad is now known as bedroller
[08:34:15] *** Quits: djp (~djp@107-179-223-174.cpe.teksavvy.com) (Quit: Client closed)
[08:35:05] *** Quits: [R] (~rs@genoce.org) (Remote host closed the connection)
[08:35:12] *** Joins: [R] (~rs@genoce.org)
[08:35:31] *** Joins: rgrinberg (~textual@187.223.250.159)
[08:37:27] *** Joins: RandomGuy21 (~RandomGuy@202.131.135.94)
[08:39:09] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:39:59] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:42:21] *** Joins: palwd (~walid@5.107.177.159)
[08:45:25] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 252 seconds)
[08:47:34] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[08:49:24] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:50:38] *** Quits: namkeleser (~namkelese@101.175.128.51) (Quit: Client closed)
[08:50:54] *** Quits: palwd (~walid@5.107.177.159) (Quit: leaving)
[08:54:16] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[08:55:02] *** Joins: palwd (~walid@5.107.177.159)
[08:57:18] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[08:57:33] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[08:58:48] *** Quits: TomyLobo (~TomyLobo@p200300e80f0f2700b81766b4aa8461b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:59:32] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[09:05:13] *** Quits: joerg (~saturn@user/joerg) (Ping timeout: 252 seconds)
[09:05:57] *** Joins: joerg (~saturn@user/joerg)
[09:08:02] *** Joins: rgrinberg (~textual@187.223.250.159)
[09:11:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:15:14] *** Joins: djp (~djp@107-179-223-174.cpe.teksavvy.com)
[09:17:46] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[09:20:42] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[09:21:08] *** Joins: rgrinberg (~textual@187.223.144.204)
[09:24:54] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:25:46] <Blondie101010> texasmynsted:  you would not benefit from running the deletions in parallel as the bottleneck would be the same
[09:26:04] <texasmynsted> yeah
[09:26:05] <Blondie101010> this is not a CPU intensive task
[09:26:18] <texasmynsted> I found the problem and it is not what I thought.
[09:26:53] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[09:26:53] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[09:27:35] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[09:27:40] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[09:28:15] <texasmynsted> The directory can not be deleted because it is mounted
[09:28:32] <texasmynsted> So not a bash issue
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:26] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[09:31:43] *** Quits: hejux (~hejux@104.224.190.144.16clouds.com) (Remote host closed the connection)
[09:31:58] *** Joins: hejux (~hejux@104.224.190.144.16clouds.com)
[09:35:31] *** Joins: namkeleser (~namkelese@101.175.128.51)
[09:37:12] *** Quits: dale (dale@user/dale) (Remote host closed the connection)
[09:38:15] *** Quits: palwd (~walid@5.107.177.159) (Quit: leaving)
[09:38:37] *** Joins: palwd (~walid@5.107.177.159)
[09:41:53] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:43:13] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[09:43:49] <hejux> printf "%s\n" "$(< "$selfdir/changelog")" // i want $ in that changelog files to expand, what do i do?
[09:44:53] <hejux> tried cat <<- EOF $(< "$selfdir/changelog") // does not expand either
[09:46:54] <hejux> $ in subshell does not expand ...
[09:47:44] <Blondie101010> are you sure you want to execute a log file, because that's what that entices?
[09:48:03] <hejux> what if i can load that changelog file without a subshell?
[09:48:15] <Blondie101010> that's not the point
[09:48:19] <hejux> Blondie101010: there is nothing, but some color var in that log file
[09:48:28] <Blondie101010> there are many ways you could process it, but they are all risky
[09:48:48] <hejux> e.g. ?
[09:49:12] <Blondie101010> don't blame me if it runs things you didn't expect and crashes your computer
[09:49:19] <hejux> i won't
[09:49:40] <hejux> basically, i just want to show some color in the changelog file...
[09:50:34] <hejux> there are stuff like : $ggg Version 1.1 %nnn in that changelog. $ggg and $nnn is defined in my main script.
[09:50:59] <Blondie101010> # var=hi; text='the string is $var.';  eval echo "$var"
[09:50:59] <shbot> Blondie101010: hi
[09:51:58] <Blondie101010> no
[09:52:12] <Blondie101010> bad example :)
[09:52:15] <hejux> # var=hi ; echo $var.
[09:52:16] <shbot> hejux: hi.
[09:52:19] *** Parts: }8] (~}8]@107.173.83.81) ()
[09:52:26] <Blondie101010> yeah I messed up on that one :)
[09:52:45] *** Joins: kdc (~kdc@196.211.197.159)
[09:52:57] <Blondie101010> # var=hi; text='the string is $var.';  eval echo '$var'
[09:52:58] <shbot> Blondie101010: hi
[09:53:02] <Blondie101010> but not this time
[09:53:30] *** Quits: kdc (~kdc@196.211.197.159) (Client Quit)
[09:53:33] <Blondie101010> so it works for any text you feed it
[09:56:50] <Blondie101010> # log='this log contains references to this $var and other things'; var=hi; text='the string is $var.';  echo `eval echo "$log"`
[09:56:51] <shbot> Blondie101010: this log contains references to this hi and other things
[09:57:02] <Blondie101010> there you go
[09:57:31] <Blondie101010> unneeded $text
[09:59:23] <Blondie101010> # log='this log contains references to this $var and other things'; var=variable; echo `eval echo "$log"`
[09:59:24] <shbot> Blondie101010: this log contains references to this variable and other things
[09:59:26] *** sublim20 is now known as True_Satan
[10:01:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:03:38] *** Quits: True_Satan (~sublim20@user/sublim20) (Quit: Leaving)
[10:03:48] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:04:55] <hejux> eval ...
[10:07:54] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:08:22] <Blondie101010> that was almost explicit in your request
[10:09:12] <Blondie101010> the only alternative would be to tokenize the text and lookup environment variables
[10:09:13] *** Quits: RandomGuy21 (~RandomGuy@202.131.135.94) (Quit: Quit)
[10:09:18] <Blondie101010> so making a real parser
[10:11:52] <Blondie101010> even with that approach, in shell scripting, I'd still be tempted to use eval, but it'd be much safer
[10:13:55] *** Joins: earendel (uid498179@user/earendel)
[10:15:52] <WeedMan> Is this a-lot of power time for a used Samsung Pro SSD I'm considering getting?  Power on hours: 18,300 (2.09 years), 650 Power on count
[10:18:10] <Blondie101010> not the most suitable channel for that, which would be more like #hardware, but the power on time is irrelevant to its state or wear
[10:18:24] *** Quits: shailangsa (~shailangs@host86-162-150-209.range86-162.btcentralplus.com) (Ping timeout: 265 seconds)
[10:18:29] <Blondie101010> it can last over 100 years if you don't write much to it
[10:19:49] <WeedMan> does this look healthy? https://i.ebayimg.com/images/g/xhwAAOSwm9lhkTPN/s-l1600.png
[10:20:02] <WeedMan> (sorry for asking it #bash )
[10:21:40] <e36freak> SSDs are a poor choice for long-term storage if that's why you intend to get it
[10:22:32] <e36freak> unless they've gotten a lot better
[10:25:13] <Blondie101010> "Total LBAs Written" is your biggest indicator
[10:25:23] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Changing server)
[10:25:29] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[10:25:49] *** Joins: shailangsa (~shailangs@host86-186-142-82.range86-186.btcentralplus.com)
[10:27:10] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:28:56] *** Joins: dreamon (~dreamon@pd9503edd.dip0.t-ipconnect.de)
[10:30:51] *** norkle is now known as Norkle
[10:30:52] <Blondie101010> Samsung Pro SSDs are supposed to handle 150TBW which would be around 322122547200 LBA writes
[10:31:53] <Blondie101010> and your counter is currently at 20598591474
[10:32:37] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[10:32:52] <Blondie101010> that would mean 6% use
[10:33:04] *** Joins: node1 (~node1@user/node1)
[10:33:22] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 268 seconds)
[10:36:07] *** Joins: polve (~polve@twcitalia/polve)
[10:37:27] *** Quits: palwd (~walid@5.107.177.159) (Quit: Lost terminal)
[10:37:30] *** Quits: node1 (~node1@user/node1) (Client Quit)
[10:37:39] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[10:37:44] *** Joins: node1 (~node1@user/node1)
[10:42:24] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Remote host closed the connection)
[10:42:43] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[10:48:57] *** Joins: tessio (~weechat@141.226.73.109)
[10:51:18] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:52:54] *** Quits: hejux (~hejux@104.224.190.144.16clouds.com) (Remote host closed the connection)
[10:54:04] *** Joins: hejux (~hejux@146.56.136.247)
[10:57:47] *** Joins: RandomGuy21 (~RandomGuy@202.131.135.94)
[11:00:20] *** Quits: djp (~djp@107-179-223-174.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[11:02:57] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[11:04:02] *** Joins: dale (dale@user/dale)
[11:05:08] *** Quits: dale (dale@user/dale) (Remote host closed the connection)
[11:05:24] *** Joins: dale (dale@user/dale)
[11:08:24] *** Joins: joo-_ (~joo-_@87-49-146-37-mobile.dk.customer.tdc.net)
[11:08:24] *** Quits: joo-_ (~joo-_@87-49-146-37-mobile.dk.customer.tdc.net) (Changing host)
[11:08:24] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[11:17:20] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:18:06] *** Quits: hejux (~hejux@146.56.136.247) (Remote host closed the connection)
[11:18:20] *** Joins: hejux (~hejux@80.251.208.245.16clouds.com)
[11:18:35] <hejux> why is {space space} needed?
[11:18:51] <llua> need more context
[11:19:22] <hejux> e.g. in a function define, in a list of commands define.
[11:19:48] <hejux> f () { a ; b ; } , { cmd ; cmd ; }
[11:20:09] <llua> # type { }
[11:20:10] <shbot> llua: { is a shell keyword
[11:20:10] <shbot> llua: } is a shell keyword
[11:20:14] <llua> that is why
[11:21:10] *** Joins: thevishy (~Nishant@2405:201:f005:c007:fd4c:a570:99e4:8844)
[11:21:38] <hejux> if no space, {cmd ; cmd;}, then `{cmd' and `cmd;}' is treated as one word?
[11:21:55] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[11:22:59] <hejux> ok, then why is  `;` needed in the end? like `....; }` ?
[11:23:09] <llua> because } is a keyword
[11:23:29] <emanuele6> # echo }
[11:23:30] <shbot> emanuele6: }
[11:23:47] <hejux> { cmd ; cmd } // wrong?
[11:24:07] <llua> you just answered that
[11:24:09] <emanuele6> not wrong, that passes } to the second cmd
[11:24:31] <emanuele6> it does not close the group opened by the { though
[11:24:44] <emanuele6> # echo [[
[11:24:45] <shbot> emanuele6: [[
[11:25:16] <emanuele6> # echo if
[11:25:16] <shbot> emanuele6: if
[11:25:17] <hejux> so `{space ;space}` is the only correct one?
[11:25:29] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:25:33] <llua> have you actually tried it?
[11:26:05] <hejux> yep, tried, and here i am asking the reason...
[11:26:43] <emanuele6> you do not need a space between ; and }
[11:26:56] <emanuele6> for the same reason you do not need a space between cmd1;cmd2
[11:26:57] <hejux> i just removed countless useless '"' in my script, mostly in `var=value` and left side of `[[`
[11:27:25] <emanuele6> left side of [[? you mean if? hehe
[11:27:47] <hejux> { ;} // right?
[11:28:00] <emanuele6> depends on what you are doing
[11:28:47] <emanuele6> in     f () { ;}      ? no, wrong, you can't have an empty function or {} block in general
[11:28:49] <hejux> if [[ $var = glob ]] , if [[ $var =~ regex ]] , no need to quote "$var" right?
[11:29:22] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[11:29:30] <hejux> that is left side of [[
[11:29:40] <hejux> i was talkin
[11:30:35] <emanuele6> that is the left side of = and =~
[11:30:50] <hejux> and space is not needed in array=("$var")
[11:31:06] <hejux> array=("$var") same as  array=( "$var" ) ?
[11:31:13] <emanuele6> you can view the bash grammar file if you want
[11:31:36] <emanuele6> anyway, yes, have you not already asked that some days ago?
[11:31:46] <hejux> emanuele6: right, left side of  = and =~
[11:32:09] <hejux> emanuele6:double confirm... you have a good memory
[11:32:40] *** Joins: node1 (~node1@user/node1)
[11:32:50] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[11:33:10] <hejux> emanuele6: is there a file called bash gramma?
[11:34:33] <hejux> then why the hell do people write like this?  array=( "$var" ) , even in wooledge.org wiki
[11:35:26] <emanuele6> i write it like that
[11:37:13] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:37:22] <emanuele6> hejux: bash's parser is mostly a yacc (GNU bison) file https://git.savannah.gnu.org/cgit/bash.git/tree/parse.y
[11:37:31] *** Joins: zoe` (~zoe@xdsl-31-164-51-195.adslplus.ch)
[11:37:40] *** Quits: hejux (~hejux@80.251.208.245.16clouds.com) (Remote host closed the connection)
[11:37:54] *** Joins: hejux (~hejux@104.224.190.144.16clouds.com)
[11:38:21] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 256 seconds)
[11:38:53] <xx> # f() { echo -n test1; echo -n test2; }; f
[11:38:54] <shbot> xx: test1test2
[11:38:55] *** Quits: atmx (~atmx@irc.atmx.cc) (Ping timeout: 256 seconds)
[11:38:56] <xx> hejux: ^
[11:39:22] <xx> any less spacing that that will mess something up, any extra spacing is superfluos
[11:40:16] *** Joins: atmx (~atmx@irc.atmx.cc)
[11:40:17] <xx> # f(){ echo -n test1;echo -n test2;};f
[11:40:18] <shbot> xx: test1test2
[11:40:24] <xx> guess you could do that too, but that's horrible to read
[11:40:48] <hejux> # f() { echo -n test1 ; echo -n test2 ; }; f
[11:40:49] <shbot> hejux: test1test2
[11:41:51] <emanuele6> # printf test1test2
[11:41:52] <shbot> emanuele6: test1test2
[11:42:00] <emanuele6> golfing
[11:42:22] <emanuele6> # printf %s test{1,2}
[11:42:23] <shbot> emanuele6: test1test2
[11:42:26] <emanuele6> that is longer
[11:43:04] <hejux> people quote "%s" and "test{1,2}"
[11:43:13] <hejux> # printf "%s" "test{1,2}"
[11:43:14] <shbot> hejux: test{1,2}
[11:43:19] <hejux> lol...
[11:43:35] <hejux> # printf "%s" test{1,2}
[11:43:36] <shbot> hejux: test1test2
[11:43:50] <hejux> # printf %s\n test{1,2}
[11:43:51] <shbot> hejux: test1ntest2n
[11:44:01] <hejux> # printf "%s\n" test{1,2}
[11:44:02] <shbot> hejux: test1
[11:44:03] <shbot> hejux: test2
[11:44:09] <hejux> i see ...
[11:44:18] <emanuele6> what do you see?
[11:44:29] <xx> # echo test1test2
[11:44:29] <shbot> xx: test1test2
[11:44:32] <xx> I win
[11:44:47] <emanuele6> xx: that prints a newline
[11:44:55] <xx> not visible on irc
[11:45:03] <emanuele6> if you allow that, i can make it even simpler
[11:45:38] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[11:45:53] <emanuele6> # PS2=test{1,2};(
[11:45:59] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[11:46:04] <emanuele6> wrong ps
[11:46:06] <hejux> emanuele6: i don't know what do i see... but quote on printf, is something ... have to try and see
[11:46:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:46:35] <emanuele6> quoting rules are really not that hard
[11:46:38] <xx> hejux: there really is no need to quote %s nor test{1,2}
[11:46:57] <emanuele6> instead of cargo culting, learn how quoting works
[11:47:00] <emanuele6> !quote
[11:47:00] <greybot> https://mywiki.wooledge.org/Quotes
[11:47:10] <emanuele6> have you ever even opened that link?
[11:47:22] * xx prefers cargo panting
[11:47:26] <hejux> read 10 times at least
[11:47:37] <xx> 11th time's the charm
[11:48:24] <hejux> printf '%s\n' and  "%s\n" samething?
[11:48:31] <xx> yes
[11:48:38] <emanuele6> in bash, yes
[11:48:52] <emanuele6> in POSIX, '%s\n' and "%s\\n" are the samething
[11:48:55] <xx> # printf %s\\n test{1,2}
[11:48:56] <shbot> xx: test1
[11:48:56] <shbot> xx: test2
[11:49:04] <emanuele6> and "%s\n" is unspecified i think
[11:49:39] <hejux> that link says 'nothing escape here'
[11:49:56] <xx> I must remember it wrong, because I thought posix says that within "" the \ has no special meaning
[11:50:14] *** Quits: moto (~moto@user/moto) (Ping timeout: 265 seconds)
[11:50:22] <emanuele6> yes, "%s\n" is unspecified in posix
[11:50:34] <xx> oh, right, *unspecified*, got it
[11:51:17] <hejux> do they update posix spec over time?
[11:51:30] <emanuele6> yes?
[11:51:38] <emanuele6> of course
[11:52:04] <emanuele6> last issue (issue 7) is 2018
[11:53:13] <xx> posix gets updated periodically by means of "Let's see what sort of crazy shell scripts people are writing these days, and make a standard of whatever is common among them"
[11:53:26] <emanuele6> xx: within '' it has no special meaning, yes
[11:54:14] <emanuele6> with "", it has many special meaning defined in posix: \$ -> $  \` -> `   \\ -> \    \" -> "
[11:54:30] <xx> yeah I should go get myself a coffee, brain is lagging
[11:54:31] <emanuele6> and \ <newline> to just <newline>
[11:54:37] <xx> thanks
[11:54:38] <emanuele6> bash adds even more
[11:54:54] <emanuele6> \! -> ! and \^ -> ^   (for history expansion) are some
[11:55:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:55:34] <emanuele6> \ followed by something that is not $, `, \, " or a newline inside "" is unspecified in POSIX
[11:55:45] <emanuele6> but "\n", in bash, is the same as '\n', yes
[11:56:28] <hejux> # var=test ; printf '%s' $var ; printf "%s" $var
[11:56:29] <shbot> hejux: testtest
[11:56:43] <emanuele6> actually "\!" -> '\!'
[11:57:01] <emanuele6> but "\!hi" prevents bash from expanding the !hi event
[11:57:34] *** Joins: moto (~moto@user/moto)
[11:58:33] <emanuele6> that would otherwise be expanded in double quotes without \: "!hi"
[11:59:32] <xx> that's so weird, I never knew I should escape ! inside ""
[11:59:47] <emanuele6> that is not an escape
[11:59:52] *** Joins: rendar (~rendar@user/rendar)
[12:00:06] <xx> is that not what it's called?
[12:00:07] <emanuele6> \! remains \! it does not turn into just !
[12:00:23] <hejux> what other lang do you use the most? emanuele6
[12:00:28] <emanuele6> it just prevents expansion
[12:00:38] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[12:00:41] <xx> huh, I really need to get a coffee then
[12:00:50] <xx> hejux: english
[12:00:55] <hejux> xx: a lap
[12:01:05] <emanuele6> xx: im also a little confused to be honest, i thought it would expand to just !
[12:01:21] <emanuele6> history expansion is weird
[12:01:37] <xx> right now I don't know how I'd make `echo "!hi"` output '!hi'
[12:01:48] <xx> probably have to '' it
[12:01:57] <emanuele6> single quotes yeah
[12:02:05] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[12:02:10] <xx> still weird that \! goes to \!
[12:02:35] <emanuele6> maybe because history expansion is performed before parameter expansion
[12:02:40] <emanuele6> that is probably it
[12:02:55] <emanuele6> but i would have expected just !
[12:03:55] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:04:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[12:04:21] <emanuele6> but i don't know much about history expansion
[12:05:13] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:05:29] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[12:06:28] <hejux> infinite escape  \\\\\\\\\\\\\\\\\\\\\\\\
[12:07:15] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:07:31] *** Joins: rgrinberg (~textual@187.223.248.37)
[12:08:07] <hejux> emanuele6: i had a question earlier today, expand $ in a file without sourcing the file
[12:08:35] <hejux> then i found a way, `cat file | envsubst `
[12:08:47] *** Joins: chenqisu12 (~chenqisu1@183.217.201.63)
[12:09:17] <hejux> but it is a halfway, i have to export a var in my main script to make that `$` in file to expand to something
[12:09:56] <hejux> envsubst just expand '$var' to empty...  because i did not export that var in my script
[12:10:00] *** Quits: RandomGuy21 (~RandomGuy@202.131.135.94) (Quit: Quit)
[12:11:09] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[12:12:57] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[12:18:04] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[12:19:12] *** Joins: sinaowolabi_ (~SinaOwola@41.58.231.166)
[12:24:42] *** Joins: tobybl (~tobybl@213.31.133.113)
[12:25:22] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[12:26:48] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[12:27:04] <lesshaste> How can I count the number of subdirectories that don't have the execute bit set?
[12:30:44] <hejux> lesshaste:  ls -Al dir | cut -d ' ' -f1 | grep -v x | wc -l
[12:30:44] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 252 seconds)
[12:30:53] <emanuele6> oh, c'mon hejux
[12:31:04] <emanuele6> lesshaste: in pure bash? count=0; for d in */; do [[ -d $d && ! -x $d ]] && (( ++count )); done
[12:31:18] <dodo> lesshaste: recursive?
[12:31:21] <lesshaste> emanuele6, that seems to return nothing
[12:31:35] <emanuele6> yes, that only sets a variable
[12:31:39] <lesshaste> dodo, I mean just subdirectories off the current directory
[12:31:49] <emanuele6> if you want to print it,   printf %s\\n "$count"
[12:32:04] <lesshaste> emanuele6, thanks
[12:33:54] <lesshaste> emanuele6, how can I see the full list of currently set variables?
[12:33:57] <hejux> emanuele6: forgive me...
[12:34:44] <emanuele6> lesshaste: declare, but why would you want that?
[12:35:00] <lesshaste> emanuele6, I want to see count in the list :)
[12:35:09] <emanuele6> (declare also shows currently set functions)
[12:35:21] <lesshaste> emanuele6,  ah yes. Can you see only variables?
[12:35:32] <emanuele6> lesshaste: you can use   declare -p count   to only see count
[12:35:51] <lesshaste> ok but no direct way to only see set variables?
[12:36:10] <emanuele6> # help declare
[12:36:10] <shbot> emanuele6: declare: declare [-aAfFgilnrtux] [-p] [name[=value] ...] -- http://ix.io/aPN
[12:36:16] <emanuele6> yes, declare -p
[12:37:04] <lesshaste> thanks!  There are some weird variables set!
[12:37:19] <lesshaste> declare -A _xspecs=[...] goes on for a long time
[12:37:26] <emanuele6> bash completion stuff
[12:37:32] <lesshaste> ah ok
[12:38:47] <emanuele6> if you want a cleaner bash shell, you can use    env -i bash --norc --noprofile
[12:38:54] <lesshaste> thanks
[12:39:03] <lesshaste> what was wrong with hejux's answer to my question?
[12:39:11] <emanuele6> !ls
[12:39:11] <greybot> DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[12:39:15] <lesshaste> ah yes
[12:40:04] <emanuele6> also   cut -d ' ' -f1 | grep -v x | wc -l can just be    awk '$1 ~ /x/ { ++a } END { print a }'
[12:41:01] <emanuele6> well, !~
[12:41:15] <emanuele6> also from a technical point of view they are a little different
[12:41:18] <lesshaste> find . -mindepth 1 -type d -executable -printf . | wc -c
[12:41:27] <lesshaste> that's my new favorite answer
[12:42:03] <emanuele6> using `grep -v x' you will not count directories that executable only by root
[12:42:29] <lesshaste> the find solution looks better to me. What do you think?
[12:42:41] <emanuele6> i think that that does the opposite of what you asked
[12:42:50] <lesshaste> emanuele6, oh how come?
[12:43:01] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[12:43:06] <lesshaste> oh yes.. oops
[12:43:21] <emanuele6> also you want -maxdepth 1
[12:43:50] <emanuele6> find . -mindepth 1 -maxdepth 1 -type d '!' -executable -printf . | wc -c
[12:43:54] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[12:44:01] <emanuele6> and note that this will only work for GNU find
[12:44:06] *** Joins: dermoth (~dermoth@user/dermoth)
[12:44:18] <lesshaste> emanuele6,  I am fully GNU
[12:44:22] <lesshaste> thanks you for the fix
[12:44:39] <emanuele6> why do you need this?
[12:45:40] <lesshaste> emanuele6, on my work system no one could get their personal web pages working. I eventually found out it was because their home directories didn't have the execute bit set. Now I want to know how many people this has affected
[12:46:29] <emanuele6> i see, note that -executable or [[ -x ]] check the executable bit only for the current user
[12:47:54] <emanuele6> if the owner of the file is lesshaste and the file has permissions rw-r--rwx
[12:48:26] <emanuele6> emanuele6 not see it if he uses   find that_file -executable
[12:48:31] <lesshaste> emanuele6, ah.. I guess I need the execute bit for the world
[12:49:15] <lesshaste> emanuele6,  how can the answer be modified for that?
[12:51:01] <emanuele6> executable by all?
[12:51:22] <lesshaste> emanuele6, yes
[12:51:50] *** Joins: earnest (~earnest@user/earnestly)
[12:51:56] <lesshaste> https://unix.stackexchange.com/questions/128985/why-not-parse-ls-and-what-to-do-instead looks a better link for the ills of parsing ls
[12:52:39] *** Joins: lovetruth (~lovetruth@82.137.22.5)
[12:53:33] *** Quits: lovetruth (~lovetruth@82.137.22.5) (Client Quit)
[12:54:29] *** Joins: lovetruth (~lovetruth@82.137.22.5)
[12:54:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[12:54:48] <emanuele6> lesshaste: if i recall correctly using, -perm -111
[12:55:00] <lesshaste> emanuele6, thanks!
[12:55:06] <emanuele6> but are you sure it is not enough to check if only the user's executable bit is set?
[12:55:26] *** Quits: lovetruth (~lovetruth@82.137.22.5) (Client Quit)
[12:55:37] <emanuele6> i don't see why they need to be world readable
[12:56:30] <lesshaste> emanuele6,  the web server needs to be able to read the directory
[12:56:31] <emanuele6> is it really not enough to check -001?
[12:56:35] *** Joins: lavaball (felix@31.204.155.215)
[12:56:36] <lesshaste> or at least access it
[12:56:36] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[12:56:54] <emanuele6> and the file is owned by the webserver's group?
[12:58:45] <lesshaste> emanuele6, no it's just world readable
[12:59:25] <emanuele6> it needs to be world readable, ok
[13:00:14] <hejux> find is a low performance tool
[13:00:42] <hejux> and it's syntax sucks
[13:01:25] <emanuele6> it can't be as bad as bash's :)
[13:01:32] <hejux> emanuele6: hi dude, do you have a better idea to expand $var in a file?
[13:01:49] <lesshaste> emanuele6, let me be more precise. The home directory should be drwxr-xr-x. A subdirectory called  public_html should be drwxr-xr-x and within that index.html should be -rw-rw-r--
[13:01:57] <hejux> ** no source, no eval
[13:03:47] <earnest> envsubst
[13:04:52] <emanuele6> lesshaste: if only the web server needs to read them, would think you'd only need drwx---r-x, drwx---r-x and -rw----r--, but maybe i am missing something
[13:05:05] <emanuele6> s/wou/i &/
[13:05:55] <lesshaste> emanuele6,  that could be right
[13:05:58] <lesshaste> I will check. Thanks
[13:06:19] <lesshaste> remind me, what does drwx------ do again?
[13:07:12] <lesshaste> is that only for the current user?
[13:07:13] <emanuele6> the first char is the kind of file
[13:07:21] <lesshaste> I have forgotten the order
[13:07:29] <emanuele6> the next three chars are the rwx permissions of the owner user
[13:07:36] <emanuele6> the next three chars are the rwx permissions of the group user
[13:07:42] <emanuele6> the next three chars are the rwx permissions of all the other users
[13:07:51] <lesshaste> drwx---r- looks right to me in that case
[13:08:08] <lesshaste> drwx---r-x I mean
[13:08:13] <emanuele6> s/group user/group owner/
[13:09:02] <emanuele6> i mean the other users in group that owns the file
[13:09:17] <lesshaste> yes, thanks
[13:09:34] <hejux> emanuele6: https://0x0.st/-hER.txt // help thanks
[13:09:47] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[13:09:49] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[13:10:06] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:11:09] <lesshaste> hejux, I love that url!
[13:11:40] <hejux> lesshaste: https://0x0.st/-h2W.txt
[13:11:48] <emanuele6> i'd use m4 instead of making up a syntax like that
[13:12:22] <emanuele6> hejux: don't do that
[13:12:51] <hejux> emanuele6: right now, i have the content of file written directly in the function of 'version'
[13:12:56] <emanuele6> curl -F"file=@-" https://0x0.st < "${1-/dev/stdin}"
[13:13:04] <hejux> ii want to move it out to external file
[13:13:51] <emanuele6> don't inject stuff into a curl form string, it has many character with special meaning
[13:14:06] <kurahaupo> emanuele6: You don't need "r" permission on a directory to access a known file inside it. I would use rwx--x--x for ~user, and probably for ~user/public_html as well
[13:14:08] <emanuele6> if you don't know the name of the file upfront, just read from stdin
[13:14:40] <hejux> emanuele6: thanks for the one line code
[13:15:11] *** Joins: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[13:15:14] <emanuele6> kurahaupo: huh? really?
[13:15:20] <emanuele6> that is odd
[13:15:25] <emanuele6> i did not know that
[13:15:28] <lesshaste> another variant.. How can I found the number of directory subdirectories that contain a directory public_html will all three executable bits set?
[13:15:54] <kurahaupo> You only need r if you want to read the directory itself, ie to obtain the list of names it contains
[13:16:04] <emanuele6> ah, read permissions on a directory lets you see the names of the files inside and their permissions/owners
[13:16:22] <emanuele6> if you already know the name of the file inside, you can access it if you have permissions
[13:16:32] <kurahaupo> almost. To get the permissions of the files inside the dir you need x on the directory
[13:16:55] <lesshaste> yes.. I just want to know which public_html directories are readable by the world
[13:17:13] <lesshaste> maybe a variant of the find line can do it?
[13:17:30] <emanuele6> so read on a directory is just to see the name of the files inside? interesting
[13:17:38] <lesshaste> emanuele6, yes
[13:18:19] <lesshaste> something like find . -name public_html  -type d -perm /111 2> /dev/null
[13:18:20] <lesshaste>   
[13:18:26] <lesshaste> but not broken :)
[13:18:59] <kurahaupo> lesshaste: getent passwd | cut -d : -f6 | while read dir ; [[ -x $dir/public_html ]] && echo "$dir" ; done
[13:19:38] <kurahaupo> lesshaste: Only directories that are directly in a user's home dir are interesting
[13:19:42] <emanuele6> i would use: find /home/*/public_html -type d '!' -perm -711
[13:20:02] *** Quits: overrider (~overrider@user/overrider) (Quit: Goodbye...)
[13:20:18] <lesshaste> emanuele6, this time I need with all three bits so I guess no '!' ?
[13:20:19] <emanuele6> oh, right, homes don't have to be in home
[13:20:32] <kurahaupo> emanuele6: That might well need read access on the users home directories, which my version would not. Also it would miss home directories in other places
[13:21:06] <emanuele6> lesshaste: i thought you wanted to print directories which don't have the right permissions
[13:21:22] <lesshaste> emanuele6, that was the old question :) The new one is to find ones that should work
[13:21:34] <kurahaupo> (The glob expansion code inside Bash is weird and badly inefficient in places)
[13:22:58] *** Joins: pj (~pj@ghettoforge/pj)
[13:23:09] <hejux> lesshaste, emanuele6  : https://0x0.st/-h6z.txt
[13:23:27] <lesshaste> hejux, what is that about?
[13:23:49] <hejux> function of paste services
[13:24:06] <emanuele6> why are you using t=$(< /dev/stdin) ?
[13:24:13] <hejux> you can then use then like : 0x0 file ; echo something | 0x0
[13:24:16] <lesshaste> karabaja4, I get bash: syntax error near unexpected token `done'
[13:24:27] <emanuele6> lesshaste: missing a do
[13:24:43] <emanuele6> but that checks x only for the current user
[13:24:48] <lesshaste> ah ok
[13:24:50] <kurahaupo> hejux: There are corner cases where </dev/stdin can fail. I'd try to avoid that if possible
[13:24:50] <lesshaste> not right then
[13:24:55] <hejux> emanuele6: then what? t=$(cat) ?
[13:25:02] <emanuele6> hejux: no
[13:25:13] <emanuele6> don't put stdin in a variable
[13:25:19] <emanuele6> that won't work for binary data
[13:25:59] <hejux> ok, what is the correct way for that ix ?
[13:26:35] <emanuele6> i don't get why the default behaviour is to read stdin and the behaviour with arguments is to upload the arguments
[13:27:19] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:27:33] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:27:37] <emanuele6> anyway, if (( $# )); then local IFS=' '; curl -F 'f:1=<-' ix.io <<< "$*"; else curl -F 'f:1=<-'; fi would work i guess
[13:28:07] <emanuele6> s/'/& ix.io/6
[13:28:40] <hejux> ...
[13:30:38] <hejux> http://ix.io
[13:30:50] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[13:31:07] <hejux> ok, i just got ix removed from .bashrc
[13:32:03] <emanuele6> <emanuele6 > i don't get why the default behaviour is to read stdin and the behaviour with arguments is to upload the arguments
[13:32:07] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:32:19] <emanuele6> why did the ix.io one behave like that?
[13:32:27] <emanuele6> i don't get why you made it like that
[13:32:49] <hejux> copied from web
[13:32:52] <hejux> :(
[13:33:01] <emanuele6> it is different from the other 2
[13:33:06] <emanuele6> in behaviour
[13:33:47] *** Quits: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:34:08] <hejux> kurahaupo: while this < "${1-/dev/stdin}" does not fail?
[13:34:10] <emanuele6> 0x0 /path/to/file    and    pasters /path/to/file    uploaded the content of /path/file
[13:35:03] <emanuele6> and that ix function uploads the literal string "/path/to/file" followed by a newline
[13:35:09] <kurahaupo> hejux: It's not supposed to, but Linux has a slightly weird implementation of /dev/fd
[13:36:02] <emanuele6> hejux: the issue was not $(< /dev/stdin), the main issue was vaR=$(...)
[13:36:08] <hejux> the more i learn, the more i feel i'm stupid
[13:36:32] <hejux> ok, noted
[13:36:54] <emanuele6> # printf 'a\0b\n' | { a=$(< /dev/stdin); declare -p a ;}
[13:36:55] <shbot> emanuele6: bash: warning: command substitution: ignored null byte in input
[13:36:55] <shbot> emanuele6: declare -- a="ab"
[13:37:06] <kurahaupo> literally today I've had « tee /dev/fd/3 3>&1 » fail inside a cron job, because stdout is a file owned by root rather than the owner of the cron job
[13:37:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:37:36] *** Joins: Afroboy (~afroboy@105.235.135.55)
[13:37:38] <emanuele6> bash cannot put NUL bytes into a bash variable, so it just skips them and prints an error
[13:37:50] <emanuele6> if you were to upload a picture with that, it would not work
[13:38:03] <emanuele6> because all the NUL bytes would be removed
[13:38:09] <kurahaupo> It won't normally fail unless the EUID, EGID or file permissions have changed since stdin was opened
[13:38:10] <hejux> .........
[13:38:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:38:35] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[13:38:55] <hejux> emanuele6: do you have any idea on this? https://0x0.st/-hER.txt
[13:39:16] <emanuele6> <emanuele6 > i'd use m4 instead of making up a syntax like that
[13:39:48] <hejux> what is m4?
[13:39:56] <emanuele6> !m4
[13:40:01] <emanuele6> ...
[13:40:10] <emanuele6> it's a macro preprocessor
[13:40:11] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:24] <emanuele6> # type m4
[13:40:25] <shbot> emanuele6: m4 is /bin/m4
[13:41:18] <kurahaupo> # touch /tmp/a ; chmod 600 /tmp/a ; sudo -u 1 cat /dev/stdin < /tmp/a
[13:41:19] <shbot> kurahaupo: bash: sudo: command not found
[13:41:37] <kurahaupo> hmm, try that on a machine that has sudo
[13:42:40] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[13:42:43] <emanuele6> # printf '%s\n' 'this is a line' 'version is VER' > file; m4 -DVER=20 file
[13:42:44] <shbot> emanuele6: this is a line
[13:42:44] <shbot> emanuele6: version is 20
[13:42:49] <emanuele6> # printf '%s\n' 'this is a line' 'version is VER' > file; m4 -DVER=400 file
[13:42:50] <shbot> emanuele6: this is a line
[13:42:50] <shbot> emanuele6: version is 400
[13:43:33] <emanuele6> or use envsubst as earnest suggested if you need something more sophisticated or that uses $var syntax
[13:44:07] <emanuele6> i'm not familiar with that tool
[13:45:02] <hejux> yeah, because i want to use $var in that file to so that i don't have to type the content of the $var, so that i can make sure it syncs with the main script
[13:45:23] <emanuele6> what does that mean?
[13:45:25] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[13:45:30] <hejux> envsubst needs export var first
[13:45:44] <emanuele6> of course
[13:45:53] <emanuele6> as the name suggests
[13:46:18] <emanuele6> though `var=$var envsubst' would be more appropriate then export in my opinion
[13:46:27] <hejux> emanuele6: eg, if $var is set to another value in main script, i need to go to that version file and do the same change ... if i can not expand the $var in that file
[13:46:41] <emanuele6> i don't see how having $ syntax helps with that though
[13:47:18] <emanuele6> what change?
[13:47:34] <emanuele6> is there more than one file?
[13:48:44] <hejux> only one. e.g. in that link, i change var to var=/etc/newconf , then when i type main ver , that $var in the file expands to /etc/newconf ...
[13:49:18] <emanuele6> what?
[13:49:29] <emanuele6> you want the change to occur in-place?
[13:49:34] <emanuele6> why?
[13:49:37] <hejux> emanuele6: yes.i don't want to export... it makes the dirty var to shell
[13:49:48] <emanuele6> that is not what i said
[13:50:16] <emanuele6> anyway, i did say this: <emanuele6 > though `var=$var envsubst' would be more appropriate then export in my opinion
[13:50:30] *** Joins: magla (~gelignite@55d41880.access.ecotel.net)
[13:51:19] <hejux> emanuele6: so, in that link. when i run the script like : `script ver`, the `file` gets printed, the $var in that file gets expanded ... that is what i want.
[13:52:14] <hejux> emanuele6: yes i see. `var=$var envsubst` this, this means i got to type agaim the var already defined ..
[13:52:40] *** Joins: arinov (~arinov@213.194.126.155)
[13:52:49] *** Joins: tobybl_ (~tobybl@213.31.133.113)
[13:53:33] *** Joins: maledictium (~crux@bl14-67-155.dsl.telepac.pt)
[13:55:25] *** Quits: tobybl (~tobybl@213.31.133.113) (Ping timeout: 256 seconds)
[13:59:57] *** tessio is now known as FancyBear
[14:04:48] *** Joins: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de)
[14:05:32] *** Joins: flower_ (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net)
[14:06:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[14:10:13] *** FancyBear is now known as ClanLord
[14:10:28] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[14:12:08] *** Joins: nadio (ice@starlight.iextreme.org)
[14:13:16] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:13:44] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:13:58] <nadio> how do I make sed join 2 files to getter with adding all the lines from document1 to end of document2 ?
[14:14:11] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd)
[14:14:12] <nadio> line per line not at the end of the document
[14:14:58] <lopid> sed doesn't join files
[14:15:04] <lopid> #sed
[14:15:30] <lopid> why sed?
[14:16:53] *** Quits: Afroboy (~afroboy@105.235.135.55) (Ping timeout: 252 seconds)
[14:18:35] <sixwheeledbeast> sounds like a job for cat
[14:19:10] *** Joins: pj (~pj@ghettoforge/pj)
[14:20:10] <nadio> lopid: tought that was a job for sed
[14:20:50] <nadio> oh nevermind then I like cat cats... back to google.
[14:21:26] <sixwheeledbeast> `man cat` will help
[14:24:57] *** Joins: furrymcgee (~devuan@cgn-89-1-209-182.nc.de)
[14:25:14] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 268 seconds)
[14:26:05] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:26:16] *** Quits: tobybl_ (~tobybl@213.31.133.113) (Remote host closed the connection)
[14:27:08] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:27:09] *** Joins: sublim20 (~sublim20@user/sublim20)
[14:27:56] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[14:28:11] <emanuele6> # printf '%s\n' file1:line1 file1:line2 > file1; printf '%s\n' file2:line1 file2:line2 > file2; paste file1 file2
[14:28:12] <shbot> emanuele6: file1:line1     file2:line1
[14:28:12] <shbot> emanuele6: file1:line2     file2:line2
[14:28:19] <emanuele6> # printf '%s\n' file1:line1 file1:line2 > file1; printf '%s\n' file2:line1 file2:line2 > file2; paste -d'|' file1 file2
[14:28:20] <shbot> emanuele6: file1:line1|file2:line1
[14:28:20] <shbot> emanuele6: file1:line2|file2:line2
[14:28:26] <emanuele6> nadio
[14:28:59] *** Joins: Afroboy (~afroboy@105.235.135.154)
[14:29:10] <emanuele6> well, the other way around:  paste file2 file1
[14:31:29] <sixwheeledbeast> line per line? oh I missed that.
[14:31:42] <sixwheeledbeast> there was a \n in the question ...
[14:32:33] <lopid> the question was wrong to begin with
[14:33:46] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[14:33:53] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[14:34:23] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[14:39:15] *** Quits: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[14:39:25] *** Quits: flower_ (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net) (Ping timeout: 268 seconds)
[14:40:54] <ClanLord> lo pid
[14:42:59] *** Quits: rkta (~rkta_@2a00:f48:1003:1::8bee:ec40) (Quit: start keylogger)
[14:45:23] <hejux> emanuele6: ... finally, found a simple solution : the file content is now : cat <<- EOF contents EOF ; and in script, i just do  source file
[14:45:33] <hejux> what a fucking find...
[14:50:17] *** Joins: taupiqueur (~taupiqueu@118.105.204.77.rev.sfr.net)
[14:50:23] *** Quits: sinaowolabi_ (~SinaOwola@41.58.231.166) (Ping timeout: 256 seconds)
[14:51:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Ping timeout: 268 seconds)
[14:57:11] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:57:31] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[14:57:33] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[14:59:09] *** Joins: rkta_ (~rkta@2a00:f48:1003:1::8bee:ec40)
[15:02:42] *** Joins: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2)
[15:03:56] <hejux> yay! works like a charm ...
[15:04:10] *** Joins: sinaowolabi_ (~SinaOwola@41.58.217.103)
[15:04:58] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:08:58] *** Joins: debian_ (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net)
[15:09:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[15:09:22] *** debian_ is now known as Guest1566
[15:09:41] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[15:10:43] *** Quits: rkta_ (~rkta@2a00:f48:1003:1::8bee:ec40) (Quit: zzz)
[15:12:10] <hejux> nadio: { sed doc1 ; sed doc2 ; }
[15:13:06] <hejux> ohh swap doc1 with doc2 since you append doc1 to doc2 ...
[15:13:13] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (https://gnu.org)
[15:14:03] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Quit: Leaving)
[15:18:43] <nadio> lopid: that might be true,  line1 from file to line2 in file2, needs to become line1+line2
[15:20:21] *** Joins: tobybl (~tobybl@213.31.133.113)
[15:21:51] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:22:16] *** Joins: pj (~pj@ghettoforge/pj)
[15:22:43] <nadio> such a problem that should be so simple, really how rusty bash skills are...
[15:23:53] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:24:02] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Ping timeout: 240 seconds)
[15:24:05] <KE0VVT> hejux: I love here files.
[15:25:40] *** Quits: tobybl (~tobybl@213.31.133.113) (Remote host closed the connection)
[15:27:24] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[15:27:40] <furrymcgee> yes they are essential for good programming
[15:29:32] <hejux> KE0VVT: yes... i love here document too...
[15:29:49] <furrymcgee> perl has here-documents btw
[15:30:00] <hejux> i can then put any documents external begin with cat <<- EOF
[15:30:11] <hejux> and source them in main script...
[15:30:14] <KE0VVT> People always say to not write shell scripts, but I don't know how to write stuff in Python.
[15:30:27] <hejux> all the $var are expanded...
[15:30:43] <hejux> i spend hours and the final solution is that simple ..
[15:31:25] <hejux> KE0VVT: same here. i can only write simple bash scripts.
[15:33:53] *** Quits: Guest1566 (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net) (Ping timeout: 252 seconds)
[15:34:07] *** Joins: kurahaupo (~kurahaupo@pa49-195-154-60.pa.nsw.optusnet.com.au)
[15:35:34] *** Joins: n4dir (~user@mue-88-130-56-250.dsl.tropolys.de)
[15:35:42] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[15:36:09] *** Joins: Guest1566 (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net)
[15:36:45] <emanuele6> nadio: did you see my message?
[15:36:59] <emanuele6> paste -d+ file file2
[15:38:17] *** Joins: palwd (~palwd@2001:8f8:183d:33c7:d5f3:bdde:f651:abf1)
[15:40:42] *** rkta_ is now known as rkta
[15:41:28] <nadio> emanuele6: no missed that one, gonna try.
[15:42:03] <nadio> emanuele6: works flawlessly but it creates a + between the words...
[15:42:12] *** Quits: sublim20 (~sublim20@user/sublim20) (Remote host closed the connection)
[15:42:31] <emanuele6> <nadio > lopid: that might be true,  line1 from file to line2 in file2, needs to become line1+line2
[15:42:53] <emanuele6> if you don't want the +, use another delimiter
[15:43:15] <nadio> -d "" now it works :)
[15:43:18] <lopid> maybe give an actual example, not a description
[15:43:58] <nadio> emanuele6: lopid true, but been up really really long, you guys/girls now how it is, sloopy.
[15:44:18] <olspookishmagus> $ foo=$( pwgen -n 8 1) ; bar=$( pwgen -n 6 1 ) ; echo ${foo^^}-${bar^^}
[15:44:21] <lopid> yes, we see it here every day
[15:44:23] <olspookishmagus> a better way?
[15:46:51] <kurahaupo> olspookishmagus: foo=$( pwgen -n14 1 ) ; echo "${foo:0:8}-${foo:8:6}"
[15:47:29] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[15:49:24] <kurahaupo> s/-n/-n /
[15:49:59] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[15:50:13] *** Quits: narendraj9 (~user@2a02:8109:b63f:ff7c::57b2) (Remote host closed the connection)
[15:52:20] *** Joins: zaz\ (~zaz@poneybl.eu)
[15:52:22] <olspookishmagus> good idea kurahaupo
[15:53:10] <kurahaupo> olspookishmagus: I think I would prefer foo=$( pwgen -s 14 1 ) ; echo "${foo:0:8}-${foo:8:6}"
[15:53:52] <kurahaupo> # pwgen -N1 -s 14
[15:53:53] <shbot> kurahaupo: bash: pwgen: command not found
[15:55:03] *** Joins: tobybl (~tobybl@213.31.133.113)
[15:58:39] *** Joins: sublim20 (~sublim20@user/sublim20)
[15:59:31] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:02:56] *** Quits: namkeleser (~namkelese@101.175.128.51) (Ping timeout: 256 seconds)
[16:03:02] *** Joins: igemnace (~ian@user/igemnace)
[16:03:48] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[16:04:54] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[16:19:43] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[16:25:54] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Quit: Konversation terminated!)
[16:31:57] *** Joins: pj (~pj@ghettoforge/pj)
[16:34:45] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[16:39:15] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:41:44] *** Joins: lovetruth (~lovetruth@82.137.22.5)
[16:43:26] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[16:43:33] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:49:23] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[16:50:39] *** Quits: tobybl (~tobybl@213.31.133.113) (Read error: Connection reset by peer)
[16:51:14] *** Joins: tobybl (~tobybl@213.31.133.113)
[16:53:37] *** Joins: L3 (~L3@user/l3)
[16:53:45] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[16:57:52] *** Quits: L3 (~L3@user/l3) (Client Quit)
[16:58:01] *** Joins: timj (~timj@user/timj)
[17:03:40] *** Quits: lopid (~lopid@user/lopid) (Quit: WeeChat 3.2)
[17:05:07] <hejux> why?
[17:05:12] <hejux> # a=(1 2 3 4) ; IFS=. ; echo ${a[*]} ; echo "${a[*]}" ; unset IFS
[17:05:13] <shbot> hejux: 1 2 3 4
[17:05:13] <shbot> hejux: 1.2.3.4
[17:06:40] *** Joins: son0p (~ff@181.136.122.143)
[17:07:01] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[17:07:33] *** Quits: tobybl (~tobybl@213.31.133.113) (Read error: Connection timed out)
[17:08:20] <hejux> Double-quoting $* or ${array[*]} results in one word which is the concatenation of all the positional parameters (or array elements) with the first character of IFS between them
[17:08:53] *** Joins: tobybl (~tobybl@213.31.133.113)
[17:10:26] <hejux> # a=(1 2 3 4) ; echo ${a[@]// /,}
[17:10:26] <shbot> hejux: 1 2 3 4
[17:10:34] <hejux> # a=(1 2 3 4) ; echo "${a[@]///,}"
[17:10:35] <shbot> hejux: 1 2 3 4
[17:10:39] <hejux> # a=(1 2 3 4) ; echo "${a[@]// /,}"
[17:10:40] <shbot> hejux: 1 2 3 4
[17:11:21] <hejux> # a=(1 2 3 4) ; echo "${a[*]// /,}"
[17:11:22] <shbot> hejux: 1 2 3 4
[17:13:44] *** Quits: tobybl (~tobybl@213.31.133.113) (Read error: Connection reset by peer)
[17:15:16] <hejux>  a=(1 2 3 4) ; var="${a[*]}" ; echo ${var// /,}
[17:15:25] <hejux> #  a=(1 2 3 4) ; var="${a[*]}" ; echo ${var// /,}
[17:15:26] <shbot> hejux: 1,2,3,4
[17:15:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:15:57] *** Joins: keypusher (keypusher@user/keypusher)
[17:16:52] <emanuele6> also when $* is not double quoted
[17:17:35] <emanuele6> but since the $* expansion is unquoted, it is then subjected to field splitting
[17:17:51] *** Joins: callq (~callq@157.41.190.133)
[17:18:17] *** Quits: chenqisu12 (~chenqisu1@183.217.201.63) (Ping timeout: 256 seconds)
[17:18:21] <emanuele6> and since IFS is ., it is separated in multiple arguments at each .
[17:19:18] <emanuele6> if you change IFS after the $* expansion and before field splitting, it will not be split on .
[17:19:25] <emanuele6> # a=(1 2 3 4) ; IFS=. ; echo ${a[*]}"$((IFS=0))"
[17:19:26] <shbot> emanuele6: 1.2.3.40
[17:19:29] <emanuele6> for example
[17:19:36] <emanuele6> # a=(1 2 3 4) ; IFS=. ; echo ${a[*]}"$((IFS=3))"
[17:19:37] <shbot> emanuele6: 1.2. .43
[17:19:40] <hejux> what does ((ip_octets[i] &= netmask_octets[i])) do in the quotes example? replace 192.168.1.30 with 255.255.254.0?
[17:19:55] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd) (Quit: smeeagle)
[17:21:22] <emanuele6> it's the bitwise AND compound assignment operator
[17:21:36] <hejux> this : "$((IFS=3))" is funny ...
[17:22:00] <emanuele6> same as (( ip_octets[i] = ip_octets[i] netmask_octets[i] ))  (except that i will be evaluated an extra time if that matters)
[17:22:05] <emanuele6> oops
[17:22:12] <emanuele6> same as (( ip_octets[i] = ip_octets[i] & netmask_octets[i] ))
[17:22:25] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 252 seconds)
[17:23:44] <hejux> # echo  ((192 &= 255))
[17:23:44] <shbot> hejux: bash: syntax error near unexpected token `('
[17:23:53] <hejux> # echo  $((192 &= 255))
[17:23:53] <shbot> hejux: bash: 192 &= 255: attempted assignment to non-variable (error token is "&= 255")
[17:24:34] <emanuele6> as i said, a &= b  is similar to  a = a & b
[17:24:52] <emanuele6> does 192 = 192 & 255 make sense to you?
[17:25:34] <emanuele6> # printf %s\\n "$((192 & 255))"
[17:25:35] <hejux> # a=192 ; b=255 ; (( a &= b )) ; echo $a
[17:25:35] <shbot> emanuele6: 192
[17:25:36] <shbot> hejux: 192
[17:25:46] <emanuele6> # printf %s\\n "$((192 & 235))"
[17:25:47] <shbot> emanuele6: 192
[17:25:49] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:25:55] <emanuele6> # printf %s\\n "$((192 & 233))"
[17:25:56] <shbot> emanuele6: 192
[17:26:01] <emanuele6> # printf %s\\n "$((132 & 233))"
[17:26:03] <shbot> emanuele6: 128
[17:26:05] *** Quits: sunmountain (~sunmounta@206.217.205.57) (Ping timeout: 252 seconds)
[17:26:05] <emanuele6> there
[17:26:09] <hejux> # a=1 ; b=254 ; (( a &= b )) ; echo $a
[17:26:10] <shbot> hejux: 0
[17:26:18] <emanuele6> it's the bitwise and operator, right?
[17:26:24] <emanuele6> like the one in other languages
[17:26:25] <hejux> # a=168 ; b=255 ; (( a &= b )) ; echo $a
[17:26:26] <shbot> hejux: 168
[17:26:41] <hejux> # a=30 ; b=0 ; (( a &= b )) ; echo $a
[17:26:42] <shbot> hejux: 0
[17:26:49] <emanuele6> what are you doing?
[17:26:50] <hejux> 192.168.0.0
[17:27:47] <hejux> that is the $network
[17:27:50] <hejux> :P
[17:28:19] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd)
[17:28:31] *** Joins: wigums (~wigums@user/wigums)
[17:28:32] <emanuele6> do you not know how the bitwise and operator work?
[17:28:40] <emanuele6> # dc -e '2o?p' <<< '192'
[17:28:41] <shbot> emanuele6: bash: dc: command not found
[17:28:55] <emanuele6> # bc <<< 'obase=2;192'
[17:28:55] <shbot> emanuele6: 11000000
[17:28:56] <hejux> so , ip=192.168.1.30, netmask=255.255.254.0, then network = 192.168.0.0
[17:29:16] <emanuele6> yes, netmasks are applied with a bitwise and
[17:29:18] <emanuele6> # bc <<< 'obase=2;192'
[17:29:19] <shbot> emanuele6: 11000000
[17:29:24] <emanuele6> that is 192 in binary
[17:29:32] <emanuele6> # bc <<< 'obase=2;202'
[17:29:33] <shbot> emanuele6: 11001010
[17:29:39] <emanuele6> that is 202 in binary
[17:29:56] <emanuele6> if you and each of the bits one by one, in the end you get
[17:30:12] <emanuele6>            11000000
[17:30:21] <emanuele6> which is 192 in decimal
[17:30:24] <emanuele6> that is how it works
[17:30:43] <emanuele6> # printf '%s\n' "$(( 192 & 202 ))"
[17:30:44] <shbot> emanuele6: 192
[17:31:05] <emanuele6> many programming languages have that operator (and it's compound assignment version)
[17:31:20] <emanuele6> s/it's/its/
[17:32:13] <hejux> i think i should stop learning further...
[17:32:24] <hejux> i have no idea what bitwise is
[17:32:40] <emanuele6> i just told you
[17:32:52] <emanuele6> 11000000  -- 192
[17:32:59] <emanuele6> 11001010  -- 202
[17:33:21] <emanuele6> 11000000  -- result of 192 & 202
[17:33:39] <emanuele6> you only keep the bits that both number have
[17:33:52] <emanuele6> 11000000  -- 192
[17:33:58] <emanuele6> 00000001  -- 1
[17:34:10] <emanuele6> 00000000  -- result of 192 & 202 = 0
[17:34:26] <hejux> why 0?
[17:34:39] <Huy[m]> you mean 192 & 1
[17:34:45] <hejux> yeah
[17:35:03] <hejux> no common numbers?
[17:35:12] <emanuele6> no common bit, yes.
[17:35:20] <Huy[m]> bitwise means operating on each bit (binary digit)
[17:35:50] <emanuele6> !bitwise > hejux
[17:35:51] <greybot> hejux: http://en.wikipedia.org/wiki/Bitwise_operation
[17:35:59] *** Quits: palwd (~palwd@2001:8f8:183d:33c7:d5f3:bdde:f651:abf1) (Ping timeout: 252 seconds)
[17:36:25] <emanuele6> 0101  -- 5
[17:36:38] <emanuele6> 1001  -- 9
[17:36:51] <emanuele6> ----------
[17:36:58] <emanuele6> 0001  -- 1
[17:37:22] <emanuele6> you only keep the bits that both operands have
[17:37:46] <emanuele6> i.e. you apply the logical and operator on each bit position
[17:37:56] <hejux> 0001 ok, i understand the 01 , but i don't uderstand the 00
[17:38:19] <emanuele6> do you know how the logical and operator works?
[17:38:39] <hejux> no
[17:38:40] <emanuele6> https://en.wikipedia.org/wiki/Logical_conjunction
[17:38:41] *** Joins: lopid (~lopid@user/lopid)
[17:39:09] <emanuele6> # printf %s\\n "$(( 0 && 0 ))"
[17:39:10] <shbot> emanuele6: 0
[17:39:12] <emanuele6> # printf %s\\n "$(( 0 && 1 ))"
[17:39:13] <shbot> emanuele6: 0
[17:39:16] <emanuele6> # printf %s\\n "$(( 1 && 0 ))"
[17:39:17] <shbot> emanuele6: 0
[17:39:19] <emanuele6> # printf %s\\n "$(( 1 && 1 ))"
[17:39:20] <shbot> emanuele6: 1
[17:40:02] <hejux> i see. A ^ B is true if only A is true and B is true
[17:41:02] <hejux> 0101 1001 , from left to right, false,false,false, true
[17:41:15] <hejux> false =0 true =1
[17:41:17] <hejux> so 0001
[17:41:36] <hejux> bingo
[17:41:41] <emanuele6> well, it is unfortunate that you chose to use ^ to represent ∧ because ^ means XOR in bash
[17:41:45] <emanuele6> but yes
[17:41:54] <emanuele6> ^ is the bitwise XOR operator
[17:42:07] <Momentum> oh boy
[17:42:11] <emanuele6> 0101  -- 5
[17:42:14] <emanuele6> 1001  -- 9
[17:42:15] <hejux> i don't know how to  type  ∧
[17:42:16] <emanuele6> ----------
[17:42:30] <emanuele6> 1100  -- 5 ^ 9 = 12
[17:43:03] <emanuele6> in bitwise XOR uses only the bit positions that have different values
[17:43:12] <hejux> Momentum: yeah, just taking a rest
[17:43:43] <Momentum> i hope it's not a test :P
[17:43:52] <emanuele6> 0 XOR 0 = 0    0 XOR 1 = 1    1 XOR 0 = 1    1 XOR 1 = 0
[17:44:34] <emanuele6> but this is more of a maths question than a bash question
[17:44:56] <hejux> thanks dude
[17:45:00] <Huy[m]> On computer one would usually just use & rather than ∧ tho
[17:45:02] <hejux> you're really helpful
[17:45:22] <hejux> how do you like my cat <<- EOF idea in file and source file
[17:45:53] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[17:46:41] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[17:48:13] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:50:31] *** Joins: seninha (~seninha@user/seninha)
[17:54:49] <kurahaupo> hejux: The mathematical operations ⊕ ⋀ ⋁ are denoted by ^ & | respectively in most computer languages (because even though Unicode has been the predominant standard for 22 years, keyboards have yet to agree on how to allow people to type the mathematical symbols).
[17:55:19] <kurahaupo> At least, all the languages that take their math notation from C
[17:55:31] <hejux> new stuff learnt: IFS=, ; coins_string="${coin_formatted[*]}"; unset IFS
[17:56:04] <hejux> before: coins_string=$(printf '%s,' "${coin_formatted[@]}") ; coins_string=${coins_string%,*} // stupid
[17:56:30] <emanuele6> why not just %,  ?
[17:56:34] <kurahaupo> hejux: you do NOT want to unset IFS after setting it temporarily. Its default setting is not empty
[17:56:51] <emanuele6> kurahaupo: i think the wiki does it that way
[17:57:03] <kurahaupo> hejux: which wiki?
[17:57:10] <kurahaupo> emanuele6: ^^^
[17:57:25] <emanuele6> !quotes
[17:57:25] <greybot> https://mywiki.wooledge.org/Quotes
[17:57:32] <hejux> kurahaupo: what? then? how to reset IFS to defaut
[17:57:39] <emanuele6> IFS=.; network="${ip_octets[*]}"; unset IFS
[17:57:59] *** Quits: Guest1566 (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net) (Ping timeout: 252 seconds)
[17:58:21] <kurahaupo> In ONE of the examples, not all of them
[17:58:33] <emanuele6> sure
[17:58:54] *** Joins: pj (~pj@ghettoforge/pj)
[17:59:20] <kurahaupo> hejux: Put the code inside a function and use local IFS=whatever
[17:59:26] <emanuele6> or use eval
[17:59:30] <emanuele6> either one
[17:59:49] <emanuele6> IFS=, eval 'coins_string=${coin_formatted[*]}'
[17:59:51] <hejux> kurahaupo: good good idea
[18:00:13] <hejux> emanuele6: even better better idea
[18:00:23] <kurahaupo> the eval method has the side effect of exporting IFS into the environment of any external command within the eval
[18:00:23] <hejux> IFS only for eval...
[18:00:34] <kurahaupo> !eval
[18:00:35] <greybot> 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
[18:00:44] <emanuele6> yes, that exports IFS inside eval
[18:00:49] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:00:53] <emanuele6> but here it does not really matter
[18:00:59] <hejux> yeah
[18:01:05] <hejux> but caution!
[18:01:12] <emanuele6> extreme caution
[18:01:25] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:01:39] *** Joins: zebrag (~chris@user/zebrag)
[18:01:40] <hejux> printf %s, is stupid but works anyway
[18:01:54] <kurahaupo> IFS=food eval 'x=goofy ; echo $x; declare -p IFS'
[18:02:00] <kurahaupo> # IFS=food eval 'x=goofy ; echo $x; declare -p IFS'
[18:02:01] <shbot> kurahaupo: g   y
[18:02:01] <shbot> kurahaupo: declare -x IFS="food"
[18:03:58] <kurahaupo> Fortunately the shell is supposed to ignore IFS received from the startup environment. Better hope that there aren't any shells with bugs in them.
[18:04:07] *** Quits: lovetruth (~lovetruth@82.137.22.5) (Quit: This computer has gone to sleep)
[18:04:23] <furrymcgee> a subshell maybe convenient to change environment variables
[18:04:38] <emanuele6> what?
[18:04:41] <hejux> stupid code i write few months ago,,, i am gonna rewrite it since i have learnt a lot of shell these days : https://0x0.st/-h6C.sh
[18:05:28] <kurahaupo> furrymcgee: sure, but we're addressing the opposite problem: changing a variable without exporting it
[18:05:48] <emanuele6> hejux: again that [[ -n "$*" ]] :/
[18:05:59] <emanuele6> where did you even get that from?
[18:06:19] <emanuele6> also that is zsh, not bash
[18:06:59] <hejux> yes, i used a few zsh features,,, unique uppercase
[18:07:13] <emanuele6> i don't know if   IFS=, eval 'coins_string=${coin_formatted[*]}'   would work in bash
[18:07:16] <hejux> as i said, i wrote that a few months ago ...
[18:07:17] <emanuele6> s/bash/zsh/
[18:07:24] <hejux> i can't look at it now.
[18:07:36] <emanuele6> hejux: unique uppercase?
[18:07:55] <hejux> recently i wrote a 600 lines of bash script and shellcheck report ZERO issue
[18:08:11] <hejux> so, i think iam gonna rewrite this code.
[18:08:17] <hejux> unique and uppercase
[18:08:30] <hejux> (u) , :u
[18:08:43] <hejux> first (u) makes it unique , second :u makes it uppercase. zsh only
[18:09:09] <emanuele6> i think zsh's :u is just bash's @U or ^^
[18:09:26] <hejux> but bash does not have a (u) unique
[18:09:31] <emanuele6> # a=hello; printf %s\\n "${a@U}"
[18:09:31] <shbot> emanuele6: HELLO
[18:09:35] <emanuele6> # a=hello; printf %s\\n "${a^^}"
[18:09:35] <shbot> emanuele6: HELLO
[18:09:36] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[18:09:43] <hejux> and ... my bash on macOS is too old ..
[18:09:43] <emanuele6> # a=hello; printf %s\\n "${a^^l}"
[18:09:44] <shbot> emanuele6: heLLo
[18:10:03] <emanuele6> i doubt it is too old for ^^, maybe for @U
[18:10:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:10:21] <hejux> bash-3.2$
[18:10:30] <kurahaupo> hejux: Testing that "$*" evaluates to the empty string [[ -z "$*" ]] is not equivalent to testing for no arguments given (($#==0)). It gives a false positive when given a single argument that is an empty string ""
[18:10:45] <emanuele6> i have already told him that days ago
[18:10:53] <emanuele6> and showed that it is affected by IFS too
[18:10:53] <hejux> kurahaupo: yeah, i know now.
[18:11:11] <emanuele6> hejux: for an array of unique keys, you can just use an associative array and iterate by key
[18:11:13] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[18:11:15] <hejux> i use ((${#array})) all the way now.
[18:11:26] <emanuele6> that is wrong...
[18:11:45] <emanuele6> that checks the length of array[0]
[18:11:58] <hejux> i mean array[@]
[18:12:02] <hejux> sorry
[18:12:07] <hejux> typo
[18:12:21] *** Joins: kexec (~kexec@user/kexec)
[18:14:12] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[18:14:19] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[18:14:59] <emanuele6> # declare -A arr; for i in the dog knows how to jump the fence; do arr[$i]=; done; result=( "${!arr[@]^^}" ); declare -p arr result
[18:15:00] <shbot> emanuele6: bash:       : invalid variable name
[18:15:38] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[18:16:04] *** Joins: zaden (~maddx@73.92.207.228)
[18:16:53] <emanuele6> oh, i see what is happening..
[18:18:19] <emanuele6> # declare -A arr; for i in abc def abc aaa; do arr[$i]=; done; result=( "${!arr[@]^^}" ) result=()q; declare -p arr result
[18:18:20] <shbot> emanuele6: bash:   : invalid variable name
[18:18:39] <emanuele6> bad paste
[18:18:43] <emanuele6> # declare -A arr; for i in abc def abc aaa; do arr[$i]=; done; result=( "${!arr[@]}" ) result=( "${result[@]^^}" ); declare -p arr result
[18:18:44] <shbot> emanuele6: declare -A arr=([def]="" [abc]="" [aaa]="" )
[18:18:44] <shbot> emanuele6: declare -a result=([0]="DEF" [1]="ABC" [2]="AAA")
[18:18:49] *** Joins: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net)
[18:18:50] <emanuele6> bsah is just terrible
[18:18:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:19:11] <hejux> that is why apple moved to ZSH
[18:19:16] <emanuele6> i think it think    arr[@]^^   is the name of a reference
[18:19:23] <emanuele6> s/k/ks/2
[18:19:23] *** Quits: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net) (Client Quit)
[18:19:43] *** Joins: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net)
[18:20:09] <hejux> declare -A arr=([def]="" [abc]="" [aaa]="" ) solves unique?
[18:20:36] <hejux> then "{!arr[@]}" can be unique?
[18:20:50] <emanuele6> hejux: apple moved to zsh because of bash is released under the GPLv3 license, not because they care much about shellscripting..
[18:21:54] <emanuele6> hejux: yes, if put values in an associative array as keys, they will be unique, then you can expand the keys to get the values you put in
[18:22:07] <hejux> anything starts with z is awesome : zsh zfs ...
[18:22:45] <hejux>  # declare -A arr; for i in abc abc abc abc def abc aaa; do arr[$i]=; done; result=( "${!arr[@]}" ) result=( "${result[@]^^}" ); declare -p arr result
[18:22:54] <hejux> # declare -A arr; for i in abc abc abc abc def abc aaa; do arr[$i]=; done; result=( "${!arr[@]}" ) result=( "${result[@]^^}" ); declare -p arr result
[18:22:54] <shbot> hejux: declare -A arr=([def]="" [abc]="" [aaa]="" )
[18:22:55] <shbot> hejux: declare -a result=([0]="DEF" [1]="ABC" [2]="AAA")
[18:23:01] <hejux> cool....
[18:23:32] <emanuele6> you need to separate steps because you can't combine ${!arr[@]} and other operators
[18:23:45] <hejux> # declare -A arr; for i in abc abc abc abc def abc aaa; do arr[$i]=; done; result=( "${!arr[@]}" ) result=( "${result[@]^^}" ); declare -p arr result ; echo "${!arr[@]}"
[18:23:46] <emanuele6> otherwise bash thinks it is expanding "${!ref}"
[18:23:47] <shbot> hejux: declare -A arr=([def]="" [abc]="" [aaa]="" )
[18:23:47] <shbot> hejux: declare -a result=([0]="DEF" [1]="ABC" [2]="AAA")
[18:23:47] <shbot> hejux: def abc aaa
[18:24:18] <hejux> well, arr is enough for me, just give them empty value. all i need is the key .
[18:25:16] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[18:25:39] <hejux> so, duplicate_array=(a a a a a a b b b b c d e) ; for i in "${duplicate_array[@]}" .........
[18:26:05] *** Quits: furrymcgee (~devuan@cgn-89-1-209-182.nc.de) (Quit: leaving)
[18:26:08] <hejux> then i get a unique  {!arr[@]}
[18:27:46] <hejux> emanuele6: the output of my stupid but working script: https://0x0.st/-hIP.txt
[18:29:18] *** Joins: treble (~treble@user/treble)
[18:32:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:33:01] *** Joins: arinov (~arinov@31.142.57.149)
[18:35:30] *** Joins: rgrinberg (~textual@187.223.144.204)
[18:35:34] *** Joins: kdc (~kdc@196.211.197.159)
[18:37:07] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 256 seconds)
[18:37:07] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[18:38:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[18:41:23] *** Joins: treble (~treble@user/treble)
[18:42:09] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[18:42:12] *** Joins: askall (~askall@197.210.70.40)
[18:43:11] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:43:57] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Excess Flood)
[18:44:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:45:13] *** Joins: powerman2206 (~powerman2@89-164-77-15.dsl.iskon.hr)
[18:45:55] <powerman2206> Wait I forgot, how do I read a program's output if it outputs to stdout?
[18:46:52] <hejux> powerman2206: program |
[18:47:28] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:49:05] <powerman2206> Yeah but like
[18:49:12] <powerman2206> What if I want to check what that output is
[18:49:33] <hejux> program | tee -a file
[18:49:58] <powerman2206> As in an if statement
[18:50:22] <hejux> if var=(program) ; then echo $var ; fi
[18:50:29] <hejux> if var=$(program) ; then echo $var ; fi
[18:51:09] <powerman2206> Yeah I guess that'll work maybe, thanks
[18:52:03] <hejux> powerman2206: but if that program fail, you see nothing
[18:52:15] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[18:52:57] <hejux> var=$(program) ; echo $var ; if do_whatever_to_$var ; then ... else ; ... fi
[18:52:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[18:54:06] <hejux> powerman2206: some context would be helpful to get the best anwser for you
[18:54:49] *** Quits: sinaowolabi_ (~SinaOwola@41.58.217.103) (Ping timeout: 252 seconds)
[18:55:37] <powerman2206> Using grim with slurp and wanna make it so that when the output is empty (aka when I cancel the screenshot) it doesn't copy it to the clipboard/save it as a file
[18:55:47] <powerman2206> Was thinking of using exit codes for that, but it's 0 either way
[18:55:57] <powerman2206> So checking the output is the second best thing that came to mind
[18:56:09] <powerman2206> Although I could make a GitHub issue asking the dev to add it in
[18:56:19] <powerman2206> Anyways, it's not Bash related so there's no need to talk about it
[18:58:13] <hejux> output is a file?
[18:58:15] <hejux> lol...
[18:58:40] <powerman2206> Well, if you add `-` at the end it outputs to stdout, so I was trying to check that
[18:58:40] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[18:58:58] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[18:59:12] <kurahaupo> hejux: No Apple moved to Zsh because they didn't like the licensing terms for Bash v4 (and everyone hated Bash v3)
[18:59:46] *** Joins: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net)
[19:00:07] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[19:00:20] <kurahaupo> oh emanuele6 mentioned that. nevermind
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:02:07] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Ping timeout: 268 seconds)
[19:02:36] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:f1d0:51b2:5ac5:6bdb)
[19:02:59] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:04:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:04:14] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:06:31] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[19:08:34] *** Joins: rgrinberg (~textual@187.223.144.204)
[19:08:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:10:28] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[19:11:52] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Quit: Leaving)
[19:13:53] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[19:16:42] *** Joins: lovetruth (~lovetruth@82.137.22.5)
[19:17:53] *** Joins: UDP (~UDP@95.128.132.138)
[19:18:27] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:19:24] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[19:20:55] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:21:13] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:23:24] *** A_Dragon is now known as AAAAA_DRAGON
[19:23:56] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:27:06] *** Joins: }8] (~}8]@107.173.83.81)
[19:27:49] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[19:28:04] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd) (Quit: smeeagle)
[19:29:13] <}8]> hi. i need to check if the subversion is .0* where the value is major.minor.sub. not sure why this isnt working: z="1.2.0-blah"; [[ "$z" =~ ^([0-9]+\.){2}\.0.* ]] && echo yes || echo no
[19:29:17] *** Joins: Guest1566 (~debian@2a02-a441-b338-1-1455-ddc4-6ee2-3751.fixed6.kpn.net)
[19:29:55] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:30:14] <}8]> that should evaluate to true but isnt and not sure why. anyone see the prob?
[19:30:18] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[19:30:39] <kurahaupo> }8]: what's the symbol after the 0 in the actual version string?
[19:31:42] <kurahaupo> Also consider using glob instead of regex; it's a lot easier to read, at least for the simple stuff
[19:31:58] *** Joins: CaptBeetusMan (~wigums@user/wigums)
[19:32:26] *** Quits: Afroboy (~afroboy@105.235.135.154) (Remote host closed the connection)
[19:32:35] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 256 seconds)
[19:32:35] *** Quits: askall (~askall@197.210.70.40) (Ping timeout: 252 seconds)
[19:33:11] *** CaptBeetusMan is now known as wigums
[19:33:11] <kurahaupo> }8]: more to the point how many "." do you expect immediately before the "0"?
[19:33:19] <}8]> kurahaupo that chars following the subversion value can be a-z and -
[19:33:41] <}8]> there will always be 2 "." before the 0 i need to check for
[19:33:59] <kurahaupo> no not just "before" but IMMEDIATELY before
[19:34:22] <kurahaupo> And how many does your regex check for?
[19:34:27] <}8]> just 1
[19:34:34] <kurahaupo> And?
[19:35:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:35:28] <kurahaupo> }8]: you've nearly spotted it, keep going
[19:36:24] <kurahaupo> }8]: how many does your regex check for, immediately before the 0? (Or in total, if you prefer?)
[19:36:25] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[19:36:35] <kurahaupo> }8]: how many "." does your regex check for, immediately before the 0? (Or in total, if you prefer?)
[19:36:57] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:37:24] <}8]> i dont see any problem with that regex. ^([0-9]+\.){2} should match the "1.2.", then the \.0.* should match the ".0-blah" im after
[19:37:48] <kurahaupo> and do you have 1.2..0-blah ?
[19:38:23] <}8]> 🤦‍♂️
[19:38:30] <}8]> ugh
[19:38:35] <}8]> cant even emoji right today
[19:38:36] <kurahaupo> Count the total number of dots matched by the regex Very carefully
[19:39:03] <}8]> thanks for the spoon-feed kurahaupo, its clear as day now
[19:39:07] *** Quits: skered (~dereks@user/skered) (Ping timeout: 268 seconds)
[19:39:22] <kurahaupo> 🌈😋
[19:39:26] <}8]> 🤦‍♂️
[19:39:49] <kurahaupo> Allowing people to spot mistakes for themselves is usually far more educational
[19:39:50] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[19:39:56] <}8]> i think the universe is telling me something right now
[19:40:08] <kurahaupo> "sleep required"?
[19:40:24] <kurahaupo> Are you in Australia?
[19:40:45] <}8]> actually i havent been up long so im not 100% `online` yet :)  my coffee hasnt kicked in yet
[19:41:09] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 256 seconds)
[19:44:52] <kurahaupo> I'm waiting for my sleeping tablet to kick in. It's 03:14 here, maybe I need another one tonight
[19:46:25] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[19:47:20] *** Joins: rgrinberg (~textual@187.223.248.37)
[19:48:12] <hesco3> I need to test for the existence of a file on a remote server and return the result to my local server.  I seem to be getting 0 result codes no matter how I frame this test.  Any thoughts?
[19:48:15] <hesco3> ssh -o StrictHostKeyChecking=no root@172.17.0.39 "cd /opt/local/gasbr/drupal && ls vendor/bin/drushee 2>&1 > /dev/null ; echo $?"
[19:48:17] <hesco3> ls: cannot access 'vendor/bin/drushee': No such file or directory
[19:48:19] <hesco3> 0
[19:49:25] <hesco3> I have tried ls and test so far.  Any ideas on how to do this sucessfully would be appreciated.  Thanks.
[19:51:12] <kurahaupo> hesco3: avoid using "ls" and just test directly: ssh ... '[[ -e  /opt/local/gasbr/drupal/vendor/bin/drushee ]]'
[19:52:15] <kurahaupo> Or in case the remote isn't bash, use ssh ... 'test -e  /opt/local/gasbr/drupal/vendor/bin/drushee' ; echo $?
[19:53:03] <kurahaupo> (strictly speaking the quotes are optional as there are no special characters other than spaces)
[19:53:57] <kurahaupo> hesco3: Also you have the 2>&1 in the wrong place
[19:54:23] <kurahaupo> (that's why it still shows the error message)
[19:55:14] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[19:55:15] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[19:55:15] *** Joins: Bercik (~Redomen@user/bercik)
[19:55:16] <kurahaupo> hesco3: Is there any chance that the device you're connecting to is running a non standard shell such as busybox?
[19:55:58] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:56:10] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[19:56:36] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
[19:57:15] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:59:04] *** Quits: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[20:00:41] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Max SendQ exceeded)
[20:01:09] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[20:01:13] *** Joins: wigums (~wigums@user/wigums)
[20:01:39] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[20:02:24] *** Joins: ferdna (~ferdna@user/ferdna)
[20:02:33] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[20:04:34] *** Joins: rgrinberg (~textual@187.223.250.159)
[20:04:42] <KE0VVT> kurahaupo: Doesn't busybox use Dash, a POSIXly correct shell?
[20:05:02] <kurahaupo> Not if it's old busybox, no
[20:05:12] <kurahaupo> old busybox was awful
[20:05:55] <kurahaupo> But the point was the exit status of "ls", which I wouldn't guarantee with busybox
[20:07:33] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:08:09] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[20:08:16] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:55] *** Joins: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291)
[20:12:08] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:12:38] <heiner> hesco3: why don't you use '[ -f vendor/bin/drushee ]'?
[20:13:17] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[20:15:29] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:16:07] <heiner> hesco3: if you used "test" already, what went wrong?
[20:18:37] *** Joins: arinov (~arinov@213.194.126.155)
[20:21:32] <hesco3> heiner: it echo 0 whether the file is there or not
[20:21:37] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[20:26:45] *** Joins: Patcher (~hendrik@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de)
[20:27:08] *** Parts: Patcher (~hendrik@p200300d8ef064b003664a9fffed44247.dip0.t-ipconnect.de) ()
[20:29:20] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:29:32] <hesco3> using [ -f vendor/bin/drushee ] echo's 1 on the remote machine.  But across the ssh connection I get 0.
[20:29:40] <hesco3> same with test and ls
[20:29:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:30:38] <Blondie101010> can you show the command line that returns 0 when it shouldn't?
[20:30:39] <hesco3> using [ -f vendor/bin/drushee ] echo's 1 when run locally on the remote machine.  But across the ssh connection I get 0.
[20:31:04] <hesco3> ssh -o StrictHostKeyChecking=no root@172.17.0.39 "cd /opt/local/gasbr/drupal && [ -f vendor/bin/drush ] ; echo $?"
[20:31:19] <gnoo> single quotes
[20:31:31] <Blondie101010> yep
[20:31:49] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:31:49] <Blondie101010> the '$?' is interpreted first
[20:32:10] <gnoo> stuff inside "" is expanded locally. so $? is expanded locally and then the remote gets echo 0
[20:32:11] *** Joins: ano (~ano@user/ano)
[20:32:53] <hesco3> this also returns a 0:
[20:32:58] <hesco3> ssh -o StrictHostKeyChecking=no root@172.17.0.39 'cd /opt/loca
[20:33:01] <hesco3> l/gasbr/drupal && [ -f vendor/bin/drush ] ; echo $?
[20:33:11] <hesco3> '
[20:36:06] <kurahaupo> hesco3: you didn't use test, you use ls
[20:36:07] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:36:52] <kurahaupo> hesco3: What's the status of the command "echo $?"
[20:37:31] <kurahaupo> hesco3: You don't need cd, just test using the whole path
[20:39:31] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:39:33] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[20:40:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:41:11] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[20:42:43] <Blondie101010> hesco3:  there is no way your command can echo 0 if the file doesn't exists, but considering the bad copy-paste, you might have made mistakes we can't see
[20:44:05] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[20:44:10] *** ClanLord is now known as tessio
[20:44:59] *** Joins: node1 (~node1@user/node1)
[20:45:42] *** Joins: luva (~luva@45.141.152.36)
[20:45:55] *** Joins: djp (~djp@107-179-223-174.cpe.teksavvy.com)
[20:46:49] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[20:47:40] <tessio> is there a way to web scrap m3u videos ?
[20:48:01] *** Joins: treble (~treble@user/treble)
[20:49:35] <yitz> Figure out where it's being read from, then wget/curl that resource
[20:51:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[20:52:08] *** Quits: magla (~gelignite@55d41880.access.ecotel.net) (Quit: Stay safe!)
[20:52:55] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[20:54:55] *** Parts: LtL (~debian@user/ltl) ( )
[20:58:02] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Quit: Client closed)
[20:58:26] <tessio> yitz: sure do you know by chance how to figure that out ?
[20:59:12] *** Joins: han-solo (~hanish@user/han-solo)
[20:59:15] <yitz> I find Chrome's inspector tool useful for that. Though that's not really bash related
[21:02:05] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:04:14] <tessio> yitz can i PM you i really need help with this
[21:04:19] <tessio> i found url
[21:05:00] <yitz> You can PM me ... if you're willing to pay for my time
[21:05:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:09:40] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:47] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[21:10:26] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[21:11:37] *** Joins: yitz (~yitz@exercism/yitz)
[21:14:32] *** Joins: CaCode (~CaCode@user/cacode)
[21:14:54] *** Quits: TMan459 (~TMan459@068-113-237-069.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[21:15:25] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[21:15:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:16:46] <hesco3> thank you kurahaupo!  This seems to work:  [ -f /opt/local/gasbr/drupal/vendor/bin/drush ] ; echo $?
[21:17:23] <hesco3> inside of single quotes, and fed to the ssh connection.
[21:17:35] <hesco3> kurahaupo++
[21:17:42] <emanuele6> ++kurahaupo
[21:17:58] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[21:19:42] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:22:55] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[21:24:49] <hesco3> ++kurahaupo !!! and thank you ++emanuele6 for clusing me into the correct syntax.
[21:25:29] <emanuele6> kurahaupo++ is fine :)
[21:26:18] <gnoo> in a case statement, instead of https://\(www.\){0,1}website/ , what should be used?
[21:26:39] <gnoo> for the \(www.\) part, like optionally match
[21:26:56] <emanuele6> what is that?
[21:27:33] <emanuele6> that doesn't look right as a ERE regex and doesn't look right as a BRE regex
[21:27:40] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 268 seconds)
[21:27:42] <gnoo> i'm matching passed links in a big switch case, so want to match https://www.reddit.com, https://old.reddit.com and https://reddit.com, etc
[21:28:06] <emanuele6> i think you meant:    https://\(www.\)\{0,1\}website/     if it is a BRE (sed/grep regexes)
[21:28:13] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[21:28:31] <emanuele6> or   https://(www.)?website/  if it is a ERE (grep-E/awk/bash regex)
[21:28:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80::133)
[21:28:40] <emanuele6> and probably also \. intead of .
[21:28:46] <gnoo> case "$var" in is ERE right?
[21:28:55] <emanuele6> no, it's a pattern
[21:29:17] <emanuele6> to match that in a case statement you can use:
[21:29:19] <gnoo> ahh, so any way to do that in a pattern?
[21:29:28] <Blondie101010> it supports wildcards
[21:29:52] *** Joins: TMan459 (~TMan459@068-113-237-069.res.spectrum.com)
[21:29:53] <emanuele6> case $var in (https://website/|https://www.website) something ;; *) something else ; esac
[21:30:29] <emanuele6> or, if you enable extglobs, you can use just https://?(www.)website)
[21:30:33] <emanuele6> !extglob
[21:30:33] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[21:30:46] <gnoo> ahh, okay, thanks emanuele6. i have something like this right now:
[21:30:48] <gnoo>     https://m.youtube.com/*|https://youtu.be/*|\
[21:30:50] <gnoo>  https://youtube.com/*|https://www.youtube.com/*)
[21:31:07] <emanuele6> if you enable extglobs, you can simply write
[21:31:43] <emanuele6> https://?(www.|m.)youtube.com/*|https://youtu.be/*
[21:32:01] <emanuele6> or
[21:32:06] <emanuele6> https://?(www|m).youtube.com/*|https://youtu.be/*
[21:32:16] <gnoo> yup, looks like extglob is what i want. thanks
[21:32:18] <emanuele6> oh, nevermind the last one
[21:32:23] <hesco3> except that I need to interpolate a calculated ${path_to_cv} like so:
[21:32:26] <hesco3> rc=$(ssh -o StrictHostKeyChecking=no root@172.17.0.39 "[ -f ${
[21:32:29] <hesco3> path_to_cv} ] ; echo \$?")
[21:32:56] <hesco3> or rather link this:
[21:32:57] <hesco3> rc=$(ssh -o StrictHostKeyChecking=no root@172.17.0.39 "[ -f ${path_to_cv} ] ; echo \$?")
[21:33:03] <emanuele6> gnoo: to do it in one pattern, you can use: https://@(?(www.|m.)youtube.com|youtu.be)/*   by the way
[21:33:15] <emanuele6> but i prefer to avoid nexted extglobs
[21:33:21] <emanuele6> s/next/nest/
[21:33:35] <gnoo> hesco3: don't inject code, maybe something like this? ssh '..[ -f "$1" ] ; echo $? ' _ "$path_to_cv"
[21:33:56] <hesco3> I tried 0,1,2,3 \'s to escape the $-sign, but none of them returned a useful result code from the remote server to the local server across the ssh connection.
[21:34:03] <gnoo> emanuele6: why would you avoid extglobs?
[21:34:14] <emanuele6> not extglobs in general
[21:34:22] <emanuele6> nested extglobs
[21:34:45] <gnoo> ahh, nested. i don't even know extglobs :P i'll check out that wiki now
[21:34:45] <emanuele6> stuff like @(?(df)a|+(x)g)
[21:35:24] *** Quits: TMan459 (~TMan459@068-113-237-069.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[21:36:00] <emanuele6> gnoo: also note that if you use use    if [[ $var == pat1 ]]; then something; elif [[ $var == https://@(?(www.|m.)youtube.com|youtu.be)/* ]]; then something else; elif [[ $var == pat3 ]]; ...
[21:36:09] <emanuele6> you don't have to enable extglob
[21:36:35] <emanuele6> extglobs work even if they are not enabled in [[ $var == pat ]] and [[ $var != pat ]]
[21:37:14] <emanuele6> i mean, something simple like   https://@(?(www.|m.)youtube.com|youtu.be)/*   is fine even if it is nested
[21:37:37] <gnoo> oh, i had that but then that became messy so i used case "$link" in \n https://site1.tld) link=${link/for/bar} ;; https://site2.tld) link=${link/foo2/bar2} ;; ...
[21:38:07] <emanuele6> sure, case looks cleaner
[21:38:14] <hesco3> gnoo: what is the purpose of the underscore (_) before the "$path_to_cv" argument (I assume, to be substituted for $1).
[21:38:24] <emanuele6> just a note in case it was inconvenient to enable that shopt
[21:38:28] *** Parts: }8] (~}8]@107.173.83.81) ()
[21:38:52] <gnoo> it's inside a function so i'll just enable it and then disable when exiting :)
[21:39:12] <gnoo> hesco3: _ will be the 0th argument accessible with $0
[21:39:24] <emanuele6> if the function does not need to set global variable, you can make the function run in a subshell by using
[21:39:34] <emanuele6> f () (...) instead of f () { ... }
[21:39:57] <emanuele6> and then you can enable extglobs inside there and they will only be enabled for the function
[21:40:33] <Blondie101010> oh nice trick... never considered that option
[21:40:49] <gnoo> i'll remember that, but this one has to change global variable (the link variable)
[21:41:16] <Blondie101010> well you could output it, no?
[21:41:26] <gnoo> output it?
[21:41:35] <emanuele6> no, point
[21:41:47] <emanuele6> it is good how you are doing it gnoo
[21:42:01] <gnoo> thanks!
[21:42:31] <emanuele6> if this is a script and not a function for an interactive shell, just enable the shopt for the whole script
[21:42:34] *** Joins: qwerty (~qwerty@user/badwolf)
[21:42:38] <emanuele6> and don't worry about restoring it
[21:43:44] <gnoo> ok, i'll put in the top
[21:44:05] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[21:45:36] <hesco3> thanks gnoo, feeding it a file which does not exist, and one which I expect to return a 1; gives me this output:
[21:45:38] <hesco3> 0 _ /opt/local/gasbr/drupal/vendor/bin/cv_foo
[21:45:40] *** Joins: skered (~dereks@user/skered)
[21:46:05] <hesco3> I ran:
[21:46:07] <hesco3> rc=$(ssh -o StrictHostKeyChecking=no root@172.17.0.39 '[ -f $1 ] ; echo $?' _ ${path_to_cv})
[21:46:11] <hesco3> echo $rc
[21:48:55] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[21:49:49] <geirha> that won't do what you think
[21:50:50] <geirha> it'll run   "$SHELL" -c "[ -f \$1 ] ; echo \$? _ ${path_to_cv}"  on the remote
[21:50:54] <hesco3> geirha: neither does this do what I hope:
[21:50:56] <hesco3> rc=$(ssh -o StrictHostKeyChecking=no root@172.17.0.39 "[ -f ${path_to_cv} ] ; echo \$?")
[21:51:21] <geirha> possibly closer, but doing unsafe shell injection there
[21:51:39] <gnoo> ohh, !ssh says exactly what to do
[21:51:42] <gnoo> !ssh
[21:51:43] <greybot> Secure SHell (#openssh, http://mywiki.wooledge.org/CategorySsh). To run rm "$localVar" remotely, use: printf 'rm %q\n' "$localVar" | ssh user@host bash
[21:52:25] <hesco3> thanks gnoo, testing that nexty
[21:52:34] <emanuele6> or   ssh user@host bash <<< "rm -- ${localVar@Q}"
[21:53:06] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:53:45] *** Quits: luva (~luva@45.141.152.36) (Ping timeout: 252 seconds)
[21:53:54] *** Joins: TMan459 (~TMan459@068-113-237-069.res.spectrum.com)
[21:55:23] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[21:56:47] *** Joins: node1 (~node1@user/node1)
[21:57:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[21:57:05] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[21:57:13] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:57:30] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[21:57:32] <hesco3> ++gnoo and ++geirha !!!
[21:58:08] <hesco3> this seems to do what I need, managing all of the interpolation correctly !!!
[21:58:11] <hesco3> rc=$(printf '[ -f %q ] ; echo $? \n' "${path_to_cv}" | ssh -o StrictHostKeyChecking=no root@172.17.0.39 /bin/bash)
[21:58:40] <hesco3> successfully tested against failes which do and do not exist !!!
[21:59:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[22:00:06] *** Quits: karabaja4 (~karabaja4@dh207-94-92.xnet.hr) (Remote host closed the connection)
[22:00:41] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:01:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:02:22] *** Joins: rgrinberg (~textual@187.223.248.37)
[22:04:23] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[22:06:13] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[22:08:14] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[22:08:15] *** Joins: seninha (~seninha@user/seninha)
[22:08:30] *** Joins: earnest (~earnest@user/earnestly)
[22:08:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:10:06] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[22:12:41] *** Joins: gareppa (~gareppa@user/gareppa)
[22:13:01] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:13:05] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Remote host closed the connection)
[22:13:30] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[22:13:35] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:13:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:18:14] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[22:19:15] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[22:19:20] *** Joins: medard (~mithrin@stip-static-62.213-81-207.telecom.sk)
[22:19:27] <hesco3> have folded those changes into my script; and this seems to be working in its intended context !!!  Thank you again, everyone, particularly gnoo++ and geirha++ for the idea of using printf and piping my command into the ssh invocation, rather than feeding it in as an argument.
[22:29:08] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[22:31:21] *** Joins: akoana (~ah@user/akoana)
[22:34:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:36:24] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5086:3896:e0d0:f358)
[22:36:24] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5086:3896:e0d0:f358) (Changing host)
[22:36:24] *** Joins: skapata (~Skapata@user/skapata)
[22:36:36] *** Joins: rgrinberg (~textual@187.223.250.159)
[22:38:00] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[22:38:45] <akoana> # a='öre'; b='ore'; printf 'len: %d|%4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:38:46] <shbot> akoana: len: 4|öre|
[22:38:46] <shbot> akoana: len: 3| ore|
[22:38:58] <akoana> # a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:38:59] <shbot> akoana: len: 4|öre|
[22:38:59] <shbot> akoana: len: 3|ore |
[22:39:02] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[22:40:31] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[22:40:42] *** Joins: wwilly_ (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr)
[22:40:54] <osse> isn't it fantastic
[22:41:03] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[22:41:06] *** Joins: joilerv_ (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[22:41:12] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[22:41:17] *** Joins: useretail_ (~useretail@185.132.19.151)
[22:41:20] *** Joins: azidhaka_ (~azidhaka@user/azidhaka)
[22:41:32] *** Quits: lorimer (~lorimer@user/lorimer) (Read error: Connection reset by peer)
[22:41:42] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: Ping timeout (120 seconds))
[22:41:53] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Read error: Connection reset by peer)
[22:41:59] *** Joins: akaporu2 (~akaporu@hs17.make2.me)
[22:42:01] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[22:42:06] *** Joins: lorimer (~lorimer@user/lorimer)
[22:42:25] *** Quits: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:42:25] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Ping timeout: 256 seconds)
[22:42:59] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Ping timeout: 256 seconds)
[22:42:59] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 256 seconds)
[22:43:21] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b)
[22:43:33] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[22:43:33] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 256 seconds)
[22:43:42] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[22:43:45] *** Joins: simplicity (~yti@user/simplicity)
[22:43:45] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[22:44:26] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 256 seconds)
[22:44:26] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[22:44:40] *** Quits: wwilly (~wwilly@lfbn-str-1-375-81.w86-243.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:44:40] *** Quits: akaporu (~akaporu@hs17.make2.me) (Ping timeout: 256 seconds)
[22:44:40] *** akaporu2 is now known as akaporu
[22:45:06] *** Joins: Night-Shade (~Tim@ip1f114b3d.dynamic.kabel-deutschland.de)
[22:45:42] *** Quits: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[22:45:54] *** Joins: akoana (~ah@user/akoana)
[22:47:38] *** Joins: arinov (~arinov@31.142.57.149)
[22:48:00] <earnest> # export LC_LANG=en_US.UTF-8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:48:01] <shbot> earnest: len: 4|öre|
[22:48:01] <shbot> earnest: len: 3|ore |
[22:48:11] <earnest> Hm
[22:48:23] *** Joins: magla (~gelignite@55d41880.access.ecotel.net)
[22:48:54] <earnest> # localedef --list-archive | xargs
[22:48:54] <shbot> earnest: de_DE.utf8 en_US.utf8 et_EE.utf8 nb_NO.utf8
[22:49:44] <emanuele6> # LC_CTYPE=nb_NO.utf8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:49:45] <shbot> emanuele6: len: 3|öre|
[22:49:45] <shbot> emanuele6: len: 3|ore |
[22:50:07] <emanuele6> # LC_CTYPE=en_US.UTF-8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:50:08] <shbot> emanuele6: len: 3|öre|
[22:50:08] <shbot> emanuele6: len: 3|ore |
[22:50:22] <emanuele6> earnest: LC_LANG is not a thing :D
[22:50:32] <earnest> Oh yeah
[22:50:38] <earnest> I'm not brain today
[22:50:39] <emanuele6> LANG=
[22:50:42] <ilikeyou> afternoon. pretty sure recently i've used a shortcut for printing columns with awk. something like.. awesomeoutput |awk '{print $3-*}' .. something like that, i don't remember. any ideas?
[22:51:02] *** Quits: wikan (~wikan@2a02:a31d:8541:e100:213:2ff:fed3:8291) (Quit: Client closed)
[22:51:03] <earnest> emanuele6: It's still funny that printf is adding a space
[22:51:10] <akoana> length and %s seem to disagree
[22:51:16] <earnest> Yeah lol
[22:51:30] <earnest> d# LC_CTYPE=en_US.UTF-8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:51:30] <shbot> earnest: len: 4|öre|
[22:51:31] <shbot> earnest: len: 3|ore |
[22:51:39] <emanuele6> it is not adding it, it is printing one less for öre
[22:51:41] <earnest> Does dash export it?
[22:51:43] <emanuele6> which is odd
[22:51:45] <earnest> d# export LC_CTYPE=en_US.UTF-8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:51:46] <shbot> earnest: len: 4|öre|
[22:51:46] <shbot> earnest: len: 3|ore |
[22:51:51] <earnest> I guess it does
[22:52:03] <emanuele6> i think it is already exported
[22:52:14] <emanuele6> once it is exported, you don't need to re-export it
[22:52:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80::133) (Quit: Leaving)
[22:52:24] <earnest> Yeah
[22:52:30] <Blondie101010> is there an option to unexport?
[22:52:33] <earnest> # env | grep LC_ | xargs
[22:52:34] <shbot> earnest: no output
[22:52:38] <emanuele6> declare +x var
[22:52:40] <earnest> # env | grep LANG | xargs
[22:52:41] <shbot> earnest: no output
[22:53:13] <emanuele6> well, printf is a builtin, so you don't need to export anyway
[22:54:23] <emanuele6> Blondie101010: declare +x var   was for you by the way
[22:54:34] <emanuele6> that is how you "unexport" a variable in bash
[22:54:37] <Blondie101010> ah thanks
[22:54:52] <emanuele6> in POSIX you have to unset it and re assign it
[22:55:48] <akoana> # a='äüö'; b='aou'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:55:49] <shbot> akoana: len: 6|äüö|
[22:55:49] <shbot> akoana: len: 3|aou |
[22:56:33] <akoana> lenght is correct, 6 bytes for äüö
[22:56:43] <akoana> length even
[22:57:27] <akoana> # a='äüö'; b='aou'; printf 'len: %d|%-7s|\n' "${#a}" "$a"  "${#b}" "$b" # ok let's be fair
[22:57:28] <shbot> akoana: len: 6|äüö |
[22:57:28] <shbot> akoana: len: 3|aou    |
[22:57:51] <emanuele6> i'm surprised that printf uses bytes for the width even when LC_CTYPE is set to something the width of the characters
[22:57:58] <emanuele6> # LC_CTYPE=nb_NO.utf8; a='öre'; b='ore'; printf 'len: %d|%-4s|\n' "${#a}" "$a"  "${#b}" "$b"
[22:57:59] <shbot> emanuele6: len: 3|öre|
[22:57:59] <shbot> emanuele6: len: 3|ore |
[22:58:04] *** Joins: davidl (~quassel@217-64-148-110.pool.ovpn.com)
[22:59:57] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Read error: Connection reset by peer)
[23:00:20] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[23:00:29] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[23:02:03] *** Quits: thevishy (~Nishant@2405:201:f005:c007:fd4c:a570:99e4:8844) (Quit: Leaving)
[23:04:29] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:09:13] <akoana> # a='äöü'; b='aou'; /bin/printf 'len: %d|%-7s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:09:14] <shbot> akoana: len: 6|äöü |
[23:09:14] <shbot> akoana: len: 3|aou    |
[23:09:23] <akoana> same...
[23:09:53] <emanuele6> # LC_CTYPE=nb_NO.utf8; a='äöü'; echo "${#a}"
[23:09:54] <shbot> emanuele6: 3
[23:10:17] <emanuele6> that is also locale aware :/
[23:10:32] <emanuele6> it's just printf's field width
[23:11:15] <akoana> # LC_CTYPE=de_DE.utf8;  a='äöü'; b='aou'; printf 'len: %d|%-7s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:11:15] <shbot> akoana: len: 3|äöü |
[23:11:16] <shbot> akoana: len: 3|aou    |
[23:20:13] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[23:21:19] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:22:32] <akoana> äöü are 6 bytes so %-7s adds 1 space
[23:22:41] <akoana> LC_CTYPE=de_DE.utf8;  a='äöü'; b='aou'; printf 'len: %d|%-6s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:22:42] *** Quits: powerman2206 (~powerman2@89-164-77-15.dsl.iskon.hr) (Quit: WeeChat 3.3)
[23:22:45] <akoana> # LC_CTYPE=de_DE.utf8;  a='äöü'; b='aou'; printf 'len: %d|%-6s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:22:46] <shbot> akoana: len: 3|äöü|
[23:22:46] <shbot> akoana: len: 3|aou   |
[23:23:03] <akoana> no space here after ü
[23:25:37] *** Parts: qwerty (~qwerty@user/badwolf) ()
[23:26:52] <akoana> so - as emanuele6 pointed out - in printf's "%ns" format, n means bytes ... sigh, no chance for unicode
[23:27:02] *** Quits: infidel (~ecrump@67-0-208-202.albq.qwest.net) (Ping timeout: 240 seconds)
[23:27:49] <akoana> even when it sometimes "works":
[23:27:56] <akoana> # a='™™™'; b='aou'; /bin/printf 'len: %d|%-3s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:27:57] <shbot> akoana: len: 9|™™™|
[23:27:57] <shbot> akoana: len: 3|aou|
[23:28:04] <akoana> but...
[23:28:13] <akoana>  a='™™™'; b='aou'; /bin/printf 'len: %d|%-10s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:28:16] <akoana> # a='™™™'; b='aou'; /bin/printf 'len: %d|%-10s|\n' "${#a}" "$a"  "${#b}" "$b"
[23:28:17] <shbot> akoana: len: 9|™™™ |
[23:28:17] <shbot> akoana: len: 3|aou       |
[23:28:51] <akoana> it doesn't really...
[23:29:56] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 245 seconds)
[23:30:36] *** Joins: rgrinberg (~textual@187.223.248.37)
[23:31:16] *** Quits: zaden (~maddx@73.92.207.228) (Remote host closed the connection)
[23:31:33] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[23:34:26] *** Joins: sazawal (~sazawal@223.190.92.152)
[23:37:10] <akoana> lol, even   perl -e 'printf("|%-7s|\n","äöü")' -> |äöü |
[23:37:33] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:37:57] <akoana> some hope: python3 -c 'print("|%-7s|\n" % "äöü")' |äöü    |
[23:38:04] <emanuele6> yeah, that is probably how it is defined in c
[23:38:24] <akoana> indeed. I agree
[23:38:31] <emanuele6> i have not checked, but i guess C defines it as a byte width
[23:39:09] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 256 seconds)
[23:39:14] *** Joins: CaptBeetusMan (~wigums@user/wigums)
[23:39:47] <akoana> before python3, I was afraid to have to use Common Lisp, (format t "~&|~7a|~%" "aou") -> |aou    |
[23:39:50] <akoana> :)
[23:40:07] *** Quits: dreamon (~dreamon@pd9503edd.dip0.t-ipconnect.de) (Quit: Leaving)
[23:40:25] <akoana> sorry, the umlauts were missing:  (format t "~&|~7a|~%" "äöü") -> |äöü    |
[23:41:55] *** CaptBeetusMan is now known as wigums
[23:44:09] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:44:31] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 245 seconds)
[23:48:13] *** Joins: Betal (~Betal@user/betal)
[23:50:21] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
