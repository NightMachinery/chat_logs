[00:04:10] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:07:05] *** Quits: indigaz (~indigaz@c-73-168-117-231.hsd1.in.comcast.net) (Quit: Ping timeout (120 seconds))
[00:07:30] *** Joins: indigaz (~indigaz@c-73-168-117-231.hsd1.in.comcast.net)
[00:09:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:10:31] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:11:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:11:18] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[00:18:45] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:19:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:26:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:27:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:29:05] *** Quits: fibsifan (~quassel@dynamic-078-054-038-225.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org)
[00:30:57] *** Joins: averell (~averell@user/averell)
[00:33:22] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:34:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[00:35:06] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 240 seconds)
[00:35:17] *** Gustavo6046_ is now known as Gustavo6046
[00:37:10] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[00:45:04] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:47:23] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:51:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[00:52:59] *** Quits: Shaun (~soneil@user/shaun) (Ping timeout: 255 seconds)
[00:53:43] *** Joins: Shaun (~soneil@user/shaun)
[00:55:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[00:57:02] *** Joins: nuala2 (~nuala@user/nuala)
[00:57:12] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 245 seconds)
[01:01:35] *** Quits: nuala2 (~nuala@user/nuala) (Ping timeout: 258 seconds)
[01:06:06] *** Quits: jushur (~human@user/jushur) (Quit:  ¯\_(ツ)_/¯)
[01:15:13] *** Quits: TomTom (uid45892@id-45892.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:16:51] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[01:17:27] *** Quits: lemonzest (~lemonzest@user/lemonzest) (Quit: Quitting)
[01:18:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[01:19:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:34:13] *** Quits: alzgh (~alzgh@216.155.158.214) (Ping timeout: 246 seconds)
[01:38:55] *** Joins: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au)
[01:42:20] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:50:16] *** Joins: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:8d9e:240f:633c:a73e)
[01:53:43] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[01:58:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[02:01:54] *** Joins: litobr0 (~Guest91@S0106a0ab1b86c57b.ed.shawcable.net)
[02:02:07] <litobr0> hello?
[02:02:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[02:02:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:06:43] *** Joins: Trieste (T@user/pilgrim)
[02:07:15] <Activ8> Hi there
[02:08:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[02:09:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:10:38] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:12:16] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[02:12:49] *** Joins: Trieste (T@user/pilgrim)
[02:18:48] <litobr0> This channel isn't very active?
[02:20:17] <akik> Hi there
[02:20:38] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[02:21:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:22:07] <Activ8> Everyone is hiding in their docker containers shhh don’t wake up da wabbits
[02:22:16] <litobr0> Do more people use irc or the slack?
[02:22:32] <Activ8> I’ve never ever used slack 
[02:22:34] <tabakhase> if you actually have a question usually someone will pop :P
[02:22:58] <Activ8> I even left discord in favor of irc
[02:23:01] <akik> maybe he wants high-energy messages
[02:23:36] <Activ8> You have to have a question relating to docker usual
[02:25:10] <litobr0> Does anybody use docker compose or more dockerfiles only?
[02:25:41] <akik> litobr0: both
[02:26:10] <litobr0> For production or dev?
[02:26:35] <akik> litobr0: both
[02:26:59] <akik> i build the images from Dockerfiles and deploy to swarm with compose files
[02:27:27] *** Quits: jstoker (~jstoker@user/jstoker) (Remote host closed the connection)
[02:28:05] <litobr0> What language are you developing in, any issues?
[02:28:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[02:28:25] <akik> litobr0: i don't code much, i manage those systems
[02:28:25] <litobr0> I was reading https://thehftguy.com/2016/11/01/docker-in-production-an-history-of-failure/ and I'm not sure how much of it is actually true
[02:28:30] *** Joins: jstoker (~jstoker@user/jstoker)
[02:28:39] <akik> but python
[02:29:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:29:14] *** Joins: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642)
[02:29:26] <akik> that posting is from 5 years ago
[02:30:42] <litobr0> True, but has docker ever crashed for you?
[02:31:09] <akik> i don't think it has
[02:31:22] <onelegend> docker works fine for me
[02:32:24] <litobr0> Interesting, did you all follow the documentation for building the dockerfiles and docker compose or use an example from somewhere?
[02:32:44] <akik> litobr0: byte by byte
[02:32:58] <akik> litobr0: read a lot of documentation
[02:33:12] *** Joins: nuala2 (~nuala@user/nuala)
[02:33:41] <litobr0> It seems to me like the spec keeps on changing for docker compose? From v2 -> v3 there's been a lot of regressions in functionality
[02:34:04] <akik> yup
[02:34:15] <akik> and also some features don't work with swarm
[02:35:57] <litobr0> Sounds like a lot of work, what's the benefit of using docker then?
[02:36:50] <zoredache> litobr0: don't forget the new compose spec that doesn't have any version. https://github.com/compose-spec/compose-spec
[02:37:36] <akik> litobr0: what system do you plan to use that doesn't need a lot of work?
[02:37:56] <zoredache> litobr0: even if docker is some what of a moving target, it is still very useful, and easier then kubernetes
[02:38:01] *** Joins: clf59 (~clf59@user/clf59)
[02:38:26] <zoredache> though kubernetes certainly has its place.
[02:39:17] <litobr0> When's a good time to use k8s and when's a good time to use docker?
[02:39:39] <litobr0> It seems to me like docker is more suited for dev and k8s more for prod?
[02:39:53] <onelegend> no
[02:39:58] <onelegend> both are production ready
[02:40:03] <onelegend> and both have been used in production
[02:40:47] <zoredache> k8s tends to be better at larger scales since it gives more flexibility for many things.
[02:41:18] <litobr0> can docker repair itself too like k8s?
[02:41:40] <onelegend> litobr0: you do realize you can use kubernetes to orchestrate docker containers right?
[02:42:43] <litobr0> Right, but would you use docker compose to orchestrate containers in prod?
[02:43:00] <onelegend> Yes
[02:43:19] <zoredache> litobr0: I thought that auto repair thing was more cloud feature, then something part of the core k8s.
[02:44:01] <onelegend> litobr0: Kubernetes is a container orchestration platform and docker is a container platform
[02:44:19] <litobr0> Isn't docker compose also container orchestration?
[02:44:35] <akik> litobr0: that's docker swarm
[02:45:02] <litobr0> What's docker compose classified as then?
[02:45:14] <tang^> automation
[02:45:19] <akik> litobr0: you can "docker stack deploy" compose files to swarm
[02:45:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:46:34] <litobr0> Ah okay, and you don't have to change your docker compose file?
[02:46:58] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:47:05] <zoredache> Kinda depends on if you use features that won't be compatible with swarm.
[02:47:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[02:47:35] <onelegend> docker provides a series of tools for running and even orchestrating containers, but the core of it is OS level virtualization
[02:47:58] <onelegend> Kubernetes does not provide OS level virtualization by itself
[02:48:24] <litobr0> Wow, thanks a lot! Looks like I have more reading and testing to do
[02:48:56] <litobr0> Do you guys have any good example projects in mind that I can try out for testing?
[02:49:44] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[02:50:04] *** Quits: clf59 (~clf59@user/clf59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:50:32] *** Quits: dalan6 (~dalan@59-102-56-163.tpgi.com.au) (Quit: dalan6)
[02:50:57] *** Joins: dalan6 (~dalan@59-102-56-163.tpgi.com.au)
[02:53:09] *** Joins: clf59 (~clf59@user/clf59)
[02:53:30] <zoredache> if you just want to get started running some containers I tend suggest picking something from one of the selfhosted lists https://github.com/awesome-selfhosted/awesome-selfhosted
[02:56:02] <litobr0> Thanks a lot (y) 
[02:56:15] *** Quits: litobr0 (~Guest91@S0106a0ab1b86c57b.ed.shawcable.net) (Quit: Client closed)
[02:57:02] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:03:26] *** Quits: foka (~foka@162.208.172.172) (Read error: Connection reset by peer)
[03:04:06] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:05:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[03:06:44] <akik> i guess litobr0 read this https://news.ycombinator.com/item?id=27973512
[03:08:34] *** Joins: foka (~foka@162.208.172.172)
[03:10:51] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[03:11:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[03:12:04] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:14:24] <tabakhase> ;-)
[03:21:12] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[03:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[03:28:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:28:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:36:25] *** Joins: Atum__ (~IRC@user/atum/x-2392232)
[03:37:54] *** Joins: Atum___ (~IRC@user/atum/x-2392232)
[03:39:42] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Ping timeout: 245 seconds)
[03:41:29] *** Quits: Atum__ (~IRC@user/atum/x-2392232) (Ping timeout: 252 seconds)
[03:46:21] <Lutin> LOL someone who thinks that docker fails in production doesn't even know how good infra design works... why would they start using k3s/k8s at all ;)
[03:49:59] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[03:50:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[03:53:21] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[03:54:31] *** Joins: nrg (~NRG@user/nrg)
[03:59:03] *** Quits: nrg (~NRG@user/nrg) (Client Quit)
[04:04:13] *** Joins: nrg (~NRG@user/nrg)
[04:10:53] <wez> :O Docker can fail in production :O :O
[04:11:09] <tang^> anything can fail in production
[04:11:15] <tang^> get used to it
[04:21:45] *** Joins: finsternis (~X@23.226.237.192)
[04:23:43] <Lutin> tang^ stfu, we are perfect!
[04:23:58] <tang^> language please
[04:24:10] <Lutin> that is why I used he shortone :D
[04:24:57] <tang^> regardless
[04:25:32] <Lutin> tang^ sometimes you need to see things in perspective... like I say I'm sexy it should be the opposite
[04:26:21] <Lutin> but I really don't get these K8s fanboys who can run it because of rancher exists
[04:26:22] <tang^> I can see things in perspective. There's zero reason to curse
[04:26:43] <Lutin> mhh, sorry you failed on sarcasm today :)
[04:29:12] <wez> tang^: I know :)
[04:33:35] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[04:39:38] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[04:44:58] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[04:52:02] *** Quits: gschanuel6 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[04:52:22] *** Joins: gschanuel6 (~gschanuel@user/gschanuel)
[04:53:27] *** Joins: cjb (~cjb@user/cjb)
[04:54:16] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 268 seconds)
[04:57:30] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[04:59:13] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[05:05:52] *** Joins: daMaestro (~damaestro@fedora/daMaestro)
[05:18:30] *** Quits: Atum___ (~IRC@user/atum/x-2392232) (Read error: Connection reset by peer)
[05:18:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[05:19:27] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 265 seconds)
[05:20:05] *** Joins: bouncy (~ben@user/benoit)
[05:21:52] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[05:43:11] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[05:43:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[05:54:12] *** syntaxman is now known as syntaxman_
[06:03:17] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:13:13] *** Quits: hposca (~hposca@node-1w7jr9phoke2t9sajlv8zcl7c.ipv6.telus.net) (Remote host closed the connection)
[06:13:31] *** Joins: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net)
[06:26:07] *** Quits: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net) (Remote host closed the connection)
[06:28:00] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[06:29:36] *** Joins: zakame (~zakame@user/zakame)
[06:36:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[06:36:57] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[06:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:54:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:57:07] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:8d9e:240f:633c:a73e) ()
[07:03:42] *** syntaxman_ is now known as syntaxman
[07:05:43] *** syntaxman is now known as syntaxma1
[07:06:10] *** syntaxma1 is now known as syntaxman
[07:13:27] *** onelegend is now known as CPUOne
[07:14:15] *** CPUOne is now known as [[OneLegend]]
[07:14:32] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[07:14:49] *** [[OneLegend]] is now known as frostblade
[07:15:23] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:15:24] *** frostblade is now known as w00tkid
[07:15:39] *** w00tkid is now known as softraid
[07:15:50] *** softraid is now known as CPUOne
[07:16:29] *** CPUOne is now known as onelegend
[07:17:33] *** onelegend is now known as twolegend
[07:18:25] *** twolegend is now known as threelegend
[07:18:40] *** threelegend is now known as onelegend
[07:23:45] <njka> sup tang^ 
[07:25:46] *** Quits: onelegend (onelegend@wireguard/tunneler/onelegend) (Killed (platinum.libera.chat (Nickname regained by services)))
[07:26:10] *** Parts: pyrrhus (~pyrrhus@user/pyrrhus) ()
[07:26:50] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[07:36:37] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[07:39:16] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:46:30] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:54:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) (Remote host closed the connection)
[08:00:11] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[08:00:52] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[08:02:38] <tang^> no
[08:05:44] *** Joins: jushur (~human@user/jushur)
[08:08:11] *** Quits: tang^ (~DoofusCan@2604:3d09:47c:f970:bd9a:83d:2d57:dee4) (Quit: So long, suckers)
[08:12:51] *** Quits: jochum (~jochum@user/jochum) (Ping timeout: 276 seconds)
[08:25:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c)
[08:37:58] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 272 seconds)
[08:48:39] *** Joins: bouncy (~ben@user/benoit)
[09:04:12] *** Quits: incognito (~relativit@user/incognito) (Remote host closed the connection)
[09:25:13] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[09:25:56] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[09:31:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[09:33:42] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[09:43:59] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[09:44:11] *** Quits: Null_A (~null_a@2601:645:8700:2290:5520:ed9a:24da:3d0c) ()
[09:48:22] *** Joins: CombatVet (~c4@user/combatvet)
[09:52:35] *** Joins: simplicity (~yti@user/simplicity)
[10:14:51] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[10:16:08] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 272 seconds)
[10:17:59] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[10:19:40] *** Joins: guy_frm_yogaland (~gourab@117.228.75.49)
[10:37:44] *** Quits: guy_frm_yogaland (~gourab@117.228.75.49) (Ping timeout: 258 seconds)
[10:40:18] *** Quits: yjftsjthsd (~yjftsjths@162.127.123.34.bc.googleusercontent.com) (Ping timeout: 252 seconds)
[10:49:35] *** Quits: daMaestro (~damaestro@fedora/daMaestro) (Quit: Leaving)
[10:53:27] *** Joins: yjftsjthsd (~yjftsjths@162.127.123.34.bc.googleusercontent.com)
[10:53:57] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:56:05] *** Joins: c10l (~c10l@89.34.167.207)
[11:03:33] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[11:11:05] *** Joins: vidbina (~vid@x4dbf3fca.dyn.telefonica.de)
[11:15:22] *** Quits: vidbina (~vid@x4dbf3fca.dyn.telefonica.de) (Ping timeout: 240 seconds)
[11:20:01] *** Joins: lemonzest (~lemonzest@user/lemonzest)
[11:30:16] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:32:33] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 258 seconds)
[11:34:39] *** Joins: bouncy (~ben@user/benoit)
[11:34:57] *** Joins: vidbina (~vid@dynamic-046-114-035-161.46.114.pool.telefonica.de)
[11:35:09] *** Joins: guy_frm_yogaland (~gourab@117.228.54.213)
[11:36:49] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[11:37:26] *** Quits: winstonsmith (~winstonsm@77.247.181.213) (Remote host closed the connection)
[11:38:20] *** Joins: winstonsmith (~winstonsm@109.201.152.175)
[11:39:33] *** Joins: justicefries (~justicefr@2603-7081-7001-866e-d121-fbb5-3a3b-98b1.res6.spectrum.com)
[11:50:01] *** Joins: TomTom (uid45892@id-45892.charlton.irccloud.com)
[11:55:28] *** Joins: s0ullight (~s0ullight@ptr-212-224-233-6.dyn.mobistar.be)
[12:17:13] *** Quits: vidbina (~vid@dynamic-046-114-035-161.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[12:21:05] *** Joins: apteryx (~maxim@dsl-154-103.b2b2c.ca)
[12:22:40] *** Quits: daddy (~ryan@hashbang/bdfl) (Read error: Connection reset by peer)
[12:24:24] *** Quits: apteryx_ (~maxim@dsl-149-213.b2b2c.ca) (Ping timeout: 276 seconds)
[12:24:46] *** Joins: daddy (~ryan@hashbang/bdfl)
[12:29:23] *** Joins: vidbina (~vid@x4dbf3fca.dyn.telefonica.de)
[12:35:54] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 265 seconds)
[12:49:46] *** Joins: keypushe- (keypusher@user/keypusher)
[12:49:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[12:52:46] *** keypushe- is now known as keypusher
[12:53:08] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[12:53:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:02:47] *** Joins: Lutin (~Lutin@user/lutin)
[13:30:32] *** Quits: guy_frm_yogaland (~gourab@117.228.54.213) (Ping timeout: 245 seconds)
[13:33:25] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:34:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:39:58] *** Joins: Atque (~Atque@user/atque)
[13:50:11] *** Quits: sehrope (~sehrope@23-24-81-162-static.hfc.comcastbusiness.net) (Quit: Leaving)
[14:23:31] *** Quits: justicefries (~justicefr@2603-7081-7001-866e-d121-fbb5-3a3b-98b1.res6.spectrum.com) (Quit: Client closed)
[14:25:03] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[14:29:50] *** Joins: keypusher (keypusher@user/keypusher)
[14:32:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[14:32:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:44:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:44:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:46:19] *** Joins: TeraT (~Tera@h-85-24-240-165.A218.priv.bahnhof.se)
[14:46:50] *** Joins: lebster (sid17131@id-17131.stonehaven.irccloud.com)
[14:47:30] *** Quits: jonfen (~jonfen@65-130-170-232.slkc.qwest.net) (Ping timeout: 268 seconds)
[14:49:18] *** Joins: jonfen (~jonfen@65-130-170-232.slkc.qwest.net)
[14:51:17] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[14:51:30] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:52:23] *** Joins: keypusher (keypusher@user/keypusher)
[14:53:00] *** Quits: Activ8 (~8d654ca2@user/aab/x-3846634) (Quit: The Lounge - https://thelounge.chat)
[14:54:15] *** Quits: thc202 (~thc202@user/thc202) (Ping timeout: 252 seconds)
[14:55:49] *** Joins: Activ8 (~a29e9e25@user/aab/x-3846634)
[14:55:49] <wez> Hi!  Any recommendations for configuration management?  I see Docker swarm supports it for non-sensitive information, anything for sensitive info? login credentials, API keys / tokens etc..
[14:56:54] <wez> I am still deciding what type of orchestration platform to use, so if a platform supports it that would be a bonus, a third party configuration management platform is also fine
[15:00:11] *** Joins: thc202 (~thc202@user/thc202)
[15:01:51] <njka> salt-stack
[15:03:18] <dodo> wez: what do you want to configure? your containers?
[15:04:06] <wez> dodo: apps that run on my containers (standard configuration) as well as mounting external shares to be used by my containers
[15:04:24] <wez> THe mounting part requires credentials
[15:05:06] <wez> I currently use AWS ECS Fargate to do this however I need to implement something similar to be self hosted and not use AWS at all.
[15:05:50] <wez> Azure is OK though (yes. it's for one of those "We're an X house, we only use X products and services").
[15:14:10] *** Quits: gschanuel6 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[15:14:26] *** Joins: gschanuel6 (~gschanuel@user/gschanuel)
[15:15:04] <wez> lol, literally the next chapter on Docker swarm was about docker secrets :P
[15:16:29] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 268 seconds)
[15:27:13] *** Quits: s0ullight (~s0ullight@ptr-212-224-233-6.dyn.mobistar.be) (Ping timeout: 246 seconds)
[15:28:19] <Lutin> I have a host with only 2 containers on it... a MySQL client and a MySQL server... now I can setup a mysql user, etc but should it matter instead of using root instead ? I wonder 
[15:28:50] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[15:36:33] *** Quits: vidbina (~vid@x4dbf3fca.dyn.telefonica.de) (Ping timeout: 250 seconds)
[15:37:33] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:39:20] *** Joins: keypusher (keypusher@user/keypusher)
[16:01:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[16:01:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:25:51] <s17> you should create a mysql user with only the permissions that it needs and use that
[16:27:23] *** Joins: simplicity (~yti@user/simplicity)
[16:33:45] <wez> Really?  I just create a user that has all permissions to one database, I don't mess around with row level permissions
[16:35:29] <wez> Has anyone used https://swarmpit.io ?  Is it any good or a waste of time?
[16:44:49] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[16:50:11] *** Quits: thc202 (~thc202@user/thc202) (Ping timeout: 252 seconds)
[16:50:53] *** Joins: thc202 (~thc202@user/thc202)
[16:52:23] *** Quits: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642) (Ping timeout: 255 seconds)
[16:53:21] *** Joins: thiras (~thiras@user/thiras)
[16:56:23] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[17:02:23] *** Joins: leonardo (~leonardo@user/leonardo)
[17:02:24] *** Joins: vidbina (~vid@x4dbf3fca.dyn.telefonica.de)
[17:10:17] <s17> imagine a script that only ever fetches information from the database.  that script should not be having a mysql user which can write to the database.
[17:10:31] <ada_> wez: only thing I might find valuable here over just using the CLI is access control mechanisms if I was working with a team
[17:11:11] <wez> ada_: Ah OK, have you used it?  Or did you just have a quick look at the site?
[17:11:30] <ada_> resource monitoring: i have my own; searching dockerhub images: cruft; service management: what does this even mean? I can already deploy things; private registry: i can run my own registry;  service redeploy: swarm does this already;
[17:11:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[17:11:42] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:12:07] <ada_> the RBAC mechanism is something I wouldn't want to write myself, however
[17:12:32] <ada_> just having a look at their feature list
[17:13:11] *** Joins: fibsifan (~quassel@x4dbf7273.dyn.telefonica.de)
[17:18:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[17:19:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:20:31] *** Quits: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[17:29:31] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[17:34:14] *** Joins: thiras (~thiras@user/thiras)
[17:35:04] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[17:35:17] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:36:44] *** Quits: Repox (~Repox@85.203.136.146) (Quit: Textual IRC Client: www.textualapp.com)
[17:39:00] *** Quits: lemonzest (~lemonzest@user/lemonzest) (Quit: Quitting)
[17:44:31] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[17:44:36] *** Joins: hazmi35 (~Hazmi35@36.74.44.15)
[17:45:02] *** Quits: hazmi35 (~Hazmi35@36.74.44.15) (Client Quit)
[17:50:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[17:52:41] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[17:53:31] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[17:55:47] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[18:02:09] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[18:05:55] <zitter> hi, I'm following this guide: https://docs.docker.com/registry/deploying/ and I'm able to pull and push an image. Now, I would like to figure out how to list all images "hosted" in the registry, but I don't know how. Any hint?
[18:07:11] *** Quits: jonfen (~jonfen@65-130-170-232.slkc.qwest.net) (Ping timeout: 252 seconds)
[18:07:48] <programmerq> zitter: you can list the repositories on a registry using the _catalog api: https://docs.docker.com/registry/spec/api/#listing-repositories
[18:08:18] <programmerq> https://github.com/genuinetools/reg - this CLI interface lets you do that by doing 'reg ls registry.example.com'
[18:08:44] <programmerq> not all registries expose _catalog but the default config when deploying the docker distribution project has it enabled.
[18:09:42] <zitter> wow programmerq thanks a lot
[18:10:55] <programmerq> for each repository, you can list tags with this API: https://docs.docker.com/registry/spec/api/#listing-image-tags or use 'reg tags registry.example.com/repository'
[18:11:32] <programmerq> there's also 'reg server' which queries all the repos/tags and fires up a very very simple webserver with those listed out.
[18:11:57] *** Joins: jonfen (~jonfen@65-130-170-232.slkc.qwest.net)
[18:26:30] *** Quits: iota_pi (uid100059@id-100059.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:27:59] *** Joins: Jimmy_H (~Jimmy_H@119.136.152.187)
[18:28:51] *** Quits: jonfen (~jonfen@65-130-170-232.slkc.qwest.net) (Ping timeout: 258 seconds)
[18:29:52] *** Joins: pycurious (~Adium@user/pycurious)
[18:30:14] *** Quits: Jimmy_H (~Jimmy_H@119.136.152.187) (Remote host closed the connection)
[18:30:16] <pycurious> When I run a tornado python web application inside docker, I get this error " sh: 1: lsof: not found" 
[18:30:22] <pycurious> Any ideas why this could be happening? 
[18:35:47] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:35:51] *** Joins: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691)
[18:35:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:36:14] <programmerq> sounds like there's a shell script running that is trying to run the lsof program but it isn't in the image.
[18:36:16] <s17> is lsof installed
[18:36:40] <s17> lsof - list open files
[18:37:30] *** Joins: jonfen (~jonfen@65-130-170-232.slkc.qwest.net)
[18:38:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:43:20] *** Joins: brickfat (~brickfat@user/brickfat)
[18:44:52] *** Joins: tianon (~tianon@user/tianon)
[18:47:12] *** Quits: jonfen (~jonfen@65-130-170-232.slkc.qwest.net) (Ping timeout: 256 seconds)
[18:55:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:18:56] *** Quits: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691) (Ping timeout: 256 seconds)
[19:23:05] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:23:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:24:07] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:24:13] <tabakhase> reg looks neat, never needed it, but its a recuring question here - to the bookmarks it is =)
[19:28:16] *** Joins: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d)
[20:04:53] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[20:14:23] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[20:23:29] *** Quits: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d) (Remote host closed the connection)
[20:28:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:7921:180d:4519:92d1)
[20:32:17] *** Quits: AgentK (~AgentK@user/agentk) (Ping timeout: 258 seconds)
[20:32:50] *** Quits: pstn (~nunyuhbiz@user/pstn) (Ping timeout: 252 seconds)
[20:33:30] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[20:33:46] *** Quits: bugsy (~nunyuhbiz@user/cosanostra) (Ping timeout: 240 seconds)
[20:33:56] *** Quits: larsks (~larsks@redhat/larsks) (Ping timeout: 252 seconds)
[20:34:12] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Ping timeout: 258 seconds)
[20:34:12] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 258 seconds)
[20:34:12] *** Quits: oisota (~oisota@user/oisota) (Ping timeout: 258 seconds)
[20:34:26] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:36:28] *** Joins: dskullz (~dskull@user/dskull)
[20:38:05] *** dskullz is now known as dskull
[20:39:15] *** Joins: Lutin (~Lutin@user/lutin)
[20:40:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:41:20] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:42:56] *** Joins: larsks (~larsks@redhat/larsks)
[20:43:00] *** Parts: apteryx (~maxim@dsl-154-103.b2b2c.ca) ()
[20:43:12] *** Joins: AgentK (~AgentK@user/agentk)
[20:43:33] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[20:43:37] *** Joins: tkazi (~tkazi@user/tkazi)
[20:44:18] *** Joins: CombatVet (~c4@user/combatvet)
[20:44:22] *** Joins: bugsy (~nunyuhbiz@user/cosanostra)
[20:44:57] *** Joins: pstn (~nunyuhbiz@user/pstn)
[20:46:27] *** Joins: oisota (~oisota@user/oisota)
[20:52:07] *** Quits: winstonsmith (~winstonsm@109.201.152.175) (Remote host closed the connection)
[20:52:22] *** Joins: winstonsmith (~winstonsm@109.201.152.164)
[21:04:17] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[21:05:09] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8433-02bf-c0e0-ee2c.res6.spectrum.com)
[21:09:51] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[21:11:05] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:14:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:19:41] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[21:19:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:21:29] *** Joins: lemonzest (~lemonzest@user/lemonzest)
[21:30:28] <Lutin> s17 normaly yes but this is a "singleton"
[21:30:37] <Lutin> I want to be lazy :P
[21:31:03] <Lutin> wez yeh but if someone has rootaccess they can do anything they want... there will ony be one DB
[21:33:24] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[21:43:44] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[21:44:44] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:50:17] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:50:25] *** Joins: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de)
[22:11:47] *** Joins: alexeightsix (~alexeight@65.ip-158-69-214.net)
[22:13:02] *** Joins: incognito (~relativit@user/incognito)
[22:13:02] <alexeightsix> anyone use blender with docker? is it possible to access a container with blender installed from another container?
[22:13:33] <alexeightsix> would i need to mount the binary to the host, then into the container i want to use blender from? is this good practice?
[22:13:57] *** Joins: rsx (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de)
[22:14:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:15:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:17:54] <programmerq> alexeightsix▸ you can use X11 applications in a container. Need to display it to an X server somewhere. Normally, if you want to use software in a given container, you don't mount the binary from the host but simply use an image that has the binary installed.
[22:18:14] <programmerq> you can't mount a container location to the host, it only goes the other way around. two containers can share a mounted directory from the host.
[22:18:23] <programmerq> but again, software should be installed in the image.
[22:23:55] <alexeightsix> so for example, if i have container 1 (blender) and container 2 (php) setup and running within docker-compose
[22:24:32] <alexeightsix> inside the docker-compose file i mount /bin/blender for example to the HOST then mount that into the PHP container so it can execute it, it's not possible right?
[22:24:43] <programmerq> you wouldn't mount something from a container to the host.
[22:25:00] <programmerq> you would simply install blender into the images used by your php container
[22:25:06] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:912d:2cfe:e641:8268)
[22:25:07] <programmerq> in the Dockerfile, when the image is built.
[22:25:19] <programmerq> just like all the other php dependencies and source code would get put into that image.
[22:25:22] *** Quits: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de) (Quit: Leaving)
[22:25:28] *** rsx is now known as Guest9710
[22:25:29] <alexeightsix> right. thats what we're doing now but we want to see if we can change it
[22:25:34] *** Quits: Guest9710 (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[22:25:57] <programmerq> what problem with that current approach are you experiencing?
[22:26:03] *** Quits: d33cee (~decent@ip68-10-104-81.hr.hr.cox.net) (Ping timeout: 265 seconds)
[22:26:22] <alexeightsix> it works but we want to abstract blender into it's own container
[22:26:32] <programmerq> also, I'm not sure what php code could do by calling the blender binary-- is there some non-graphical operation that it is doing?
[22:26:37] *** Joins: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:26:38] <alexeightsix> but we can't access it through a http endpoint, we can only access it through binary
[22:27:01] <alexeightsix> and we also want to eventually be able to call multiple versions of blender depending on what we want to render
[22:27:09] <programmerq> the docker container should have your thing (the php code) and all its filesystem type dependencies. that would include any binaries that it calls out to.
[22:27:41] <programmerq> you could put some sort of http api in front of blender and put that in its own container, and then access that from your main php code.
[22:28:02] <alexeightsix> yeah, thats the last resort.. we considered that but wanted to try the first option first
[22:28:03] <programmerq> that'd help in the case that you want several version of blender running (especially if they play poorly in the same filesystem having multiple versions together)
[22:28:27] <alexeightsix> i see, right, it looks like we may need to make an API :/
[22:30:21] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:31:00] <programmerq> thinking out loud a bit-- you could potentially use oneshot docker run containers and simply interact with the docker API.
[22:31:59] *** Joins: alzgh (~alzgh@216.155.158.214)
[22:32:12] <alexeightsix> i see, can you give a brief example?
[22:32:40] <programmerq> say you need to render somefile.blend, you could do: docker create --name mytemprender myblenderimage:v1.2.3 rendercommand somefile.blend -o somefile.rendered.png && docker cp somefile.blend mytemprender: && docker start -a mytemprender && docker cp mytemprender:somefile.rendered.png . ; docker rm mytemprender
[22:33:31] <programmerq> create the container with the needed command (not started), 'docker cp' the blend file into the unstarted container, start the container attached (it should exit when complete), docker cp the resulting file on success, and finally clean up the container.
[22:33:55] <programmerq> I do something similar when running tests in jenkins. You don't have to do the 'docker start -a' if it will take long enough that blocking isn't ideal.
[22:34:16] <programmerq> you could have that container output the result directly to wherever it needs to go instead of doing 'docker cp' to get it out. (like S3 or whatever)
[22:34:35] <alexeightsix> can that be done from within the PHP container?
[22:34:49] <programmerq> if you do the non-blocking 'docker start', then you could poll until it's done
[22:34:57] <programmerq> alexeightsix▸ if you mount the docker socket into the container, yes.
[22:35:16] <alexeightsix> i see.. interesting
[22:35:16] <programmerq> keep in mind that this gives your application full access to docker, which is root on the system unless you are running docker in rootless mode.
[22:35:30] <programmerq> you could run a rootless docker in another container and access that one if you wanted a bit more security too
[22:35:40] *** Joins: Lutin (~Lutin@user/lutin)
[22:36:47] <programmerq> the docker API is mostly just a rest API (with a few custom extensions for stuff like attached containers and following log streams). There may be a php library you could use if you didn't want to shell out. Personally, I like doing the shell in cases like this because it's more readable and you have less of a chance to run into some library limitation.
[22:36:49] <alexeightsix> <programmerq> is there any general tutorials online on how to mount the socket and access docker from within docker?
[22:37:01] <alexeightsix> it seems like a good idea, ill check it out
[22:37:07] <programmerq> docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock <image> ...
[22:37:47] <programmerq> this one is fun: docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock docker docker ps
[22:38:05] <alexeightsix> in my case we're using docker-compose to host PHP,NGINX etc (and we wanted to have blender here as well) so i would just mount the docker socket in my docker compose file from the host to the php container? 
[22:38:12] <programmerq> yup
[22:38:19] <alexeightsix> heh.. interesting
[22:39:55] <programmerq> just treat docker like a generic job processor. to be really robust, you'd want to specify cpu/memory limits on all your containerized workloads, and have the php code retry if it fails to start the container due to resource availability. I'm not sure how much workload you'll be doing, but anything more than a couple and you could get in trouble with something like that.
[22:40:02] *** Joins: SirLoudMouth (~textual@d173-181-49-236.bchsia.telus.net)
[22:40:43] <tianon> "good idea" is a bit of a stretch (as someone who does this very very very often), but it does work :)
[22:41:03] <tianon> (it's a very dangerous thing to do, as programmerq points out)
[22:42:07] <programmerq> it's mostly only dangerous because handing your php code access to the docker socket is effectively giving it root on the system, hence the rootless docker suggestion
[22:42:23] <tianon> I believe kubernetes has safer ways to accomplish this sort of thing (access to things that's scoped and limited instead of the "on or off" that the Docker socket provides)
[22:42:25] <programmerq> if the php code is compromised, the attacker can immediately move onto the host system.
[22:42:50] <programmerq> yes indeed. kubernetes has built-in RBAC that keeps you from needing to grant full access to the kube API
[22:43:00] <programmerq> and it has a first class Job type object for one-off tasks
[22:44:01] <programmerq> you can put restrictions on a particular user and say stuff like "no bind mounting on the host and no privileged mode and you can only access this namespace in kube"
[22:44:49] <programmerq> oh and kube is an API too, so your php application could interact with it (or shell out to kubectl)
[22:45:16] <alexeightsix> right, yeah kube seems like a good idea but we dont want to implement it right now... thats another project for another day
[22:46:26] <alexeightsix> random question, what about flatpacks/snaps?
[22:46:44] <alexeightsix> i read about them on the desktop, you can run multiple versions of programs in the same OS in theory and it's isolated
[22:46:53] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[22:47:04] <alexeightsix> are they used on the server or is that what docker is solving?
[22:47:23] <tianon> docker is a similar solution, using similar underlying technologies
[22:48:10] *** Quits: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Quit: rsx)
[22:49:13] *** Quits: SirLoudMouth (~textual@d173-181-49-236.bchsia.telus.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:49:34] <programmerq> I've only used flatpacks/snaps for desktop applications. I have no idea if they play nice for non-gui applications, and I don't know how easily they could be interacted with programatically.
[22:50:59] <programmerq> another idea would be to have a very simple queue/worker system. You could have different workers come up that each have a different version of blender installed. They'd watch whatever queue service you have and grab jobs they can do and submit the result back to the queue system. I haven't done a lot with those types of systems in a while. I do remember having a pretty easy time with python+celery
[22:51:01] <programmerq> several years ago. rabbitmq is a queue manager I see more frequently.
[22:51:29] <programmerq> so in that case, you'd have your php container, the queue manager container, and one or more worker containers
[22:52:50] <alexeightsix> also, how come mounting the docker binary from the host to a container works?
[22:52:58] <alexeightsix> doesn't the host need deps? 
[22:53:09] <alexeightsix> i mean container
[22:53:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:54:07] <programmerq> alexeightsix▸ the docker.sock is just a socket file for communication. you'd need to have something that can interact with it. you could install the docker cli in the container image, you could interact with it with php by opening the socket and submitting the http requests that way. you could use another docker rest client too.
[22:54:20] <programmerq> it's probably easiest to just install the docker cli
[22:54:35] <alexeightsix> also, what about "docker in docker"
[22:54:40] <alexeightsix> would that solution be more secure?
[22:55:31] <programmerq> it depends-- if you're running docker in a --privileged docker container, then not really. if you're running a rootless docker in a non-privileged docker container, then sure.
[22:55:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:56:21] <programmerq> I've not tried that, and there are generally a few more setup steps for rootless docker.
[22:58:43] *** Quits: vidbina (~vid@x4dbf3fca.dyn.telefonica.de) (Ping timeout: 258 seconds)
[23:03:25] <alexeightsix> i see, thanks for your help
[23:03:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:04:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:05:17] <tianon> and it's also not currently possible to run rootless inside a container without that container being privileged :(
[23:07:28] <programmerq> ah, I didn't realize that.
[23:08:28] <tianon> yeah :(
[23:08:45] <programmerq> I wonder if you could run rootless docker in a gvisor container... hmmmm
[23:09:24] <programmerq> implementing a worker/queue system is probably a decent path forward that doesn't include fiddling with privilaged containers nor the kube api.
[23:09:46] <tianon> yeah
[23:09:47] *** Quits: lowcrash (~lowcrash@84-255-205-230.static.t-2.net) (Quit: The Lounge - https://thelounge.chat)
[23:10:13] <tianon> there's a note with links about rootless + privileged on https://hub.docker.com/_/docker under the rootless heading
[23:10:20] <tianon> "Note: just like the regular dind images, --privileged is required for Docker-in-Docker ..."
[23:10:46] <tianon> https://github.com/docker-library/docs/tree/master/docker#rootless being a more direct link 🙈
[23:12:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:13:37] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:15:05] *** Joins: justache (~justache@user/justache)
[23:17:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:18:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:19] <tianon> so I bet gvisor doesn't implement the kernel primitives for docker-in-gvisor :(
[23:19:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:19:25] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[23:19:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:19:58] <tianon> you could do a lightweight VM, but at that point the complexity crosses a line to where writing a queue, API, or using k8s is simpler again O:)
[23:21:15] <tianon> or instead of bind-mounting the socket, having a dedicated VM for running the "arbitrary" workloads that exposes the Docker API via mTLS such that if your code gets compromised, that other system is the only compromised bit (although with access to Docker, so running arbitrary code as root over there is still trivial)
[23:26:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:27:03] *** Quits: fibsifan (~quassel@x4dbf7273.dyn.telefonica.de) (Quit: https://quassel-irc.org)
[23:27:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:31:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:32:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:38:29] *** Joins: lowcrash (~lowcrash@84-255-205-230.static.t-2.net)
[23:40:46] *** Joins: goldfish (~goldfish@user/goldfish)
[23:45:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[23:46:05] *** Joins: plantroon (~plantroon@91.236.69.232)
[23:46:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:47:08] <plantroon> what is the go-to way to autostart containers? Systemd? Is there something else (more specific to containers maybe)?
[23:48:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:48:55] <tianon> you probably want container restart policies (for individual containers) or something like swarm / kubernetes for multi-host management
[23:49:04] <tianon> if you're using docker run, that'd be --restart=
[23:49:24] <tianon> (although using systemd with --rm is not unusual)
[23:52:30] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 272 seconds)
[23:53:51] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[23:55:31] *** Joins: versa_gone (~versageek@32.215.132.28)
[23:55:54] *** Quits: versageek (~versageek@wikimedia/Versageek) (Ping timeout: 240 seconds)
[23:58:18] <plantroon> how do the containers start up on boot? when the docker daemon starts?
[23:58:26] <tianon> yeah
[23:58:43] <programmerq> yup. dockerd starts and applies the restart policy on any containers.
[23:58:48] <tianon> I guess you'll also want/need to make sure docker starts at boot (and isn't using systemd socket activation, or similar)
[23:58:52] <tianon> (systemctl enable docker.service)
