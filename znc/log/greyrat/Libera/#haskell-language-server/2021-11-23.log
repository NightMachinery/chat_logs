[00:02:21] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[00:13:42] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[00:13:57] *** Joins: hololeap (~hololeap@user/hololeap)
[00:24:06] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[00:24:28] *** Quits: arrowd (~arr@2.93.55.66) ()
[00:24:31] *** Joins: hololeap (~hololeap@user/hololeap)
[00:28:03] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 264 seconds)
[00:29:31] *** Joins: hololeap_ (~hololeap@user/hololeap)
[00:30:34] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[00:31:15] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[00:33:46] *** Joins: hololeap (~hololeap@user/hololeap)
[00:35:48] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[01:27:54] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (Ping timeout: 260 seconds)
[01:29:22] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[02:57:30] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (Ping timeout: 260 seconds)
[02:58:17] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[03:02:27] *** Joins: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz)
[04:16:30] *** Joins: nh2[m] (~nh2matrix@2001:470:69fc:105::3ae7)
[04:30:11] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[05:13:39] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 264 seconds)
[05:48:25] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[06:32:42] *** Joins: hololeap (~hololeap@user/hololeap)
[06:46:38] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[06:50:50] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[07:13:15] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:43] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:17:54] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[07:29:55] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[10:30:49] *** Quits: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz) (Quit: leaving)
[10:48:01] *** Joins: sm (~sm@plaintextaccounting/sm)
[10:48:02] <sm> hey all. I have a project where I thought hls was working pretty well. But right now it's ignoring certain errors. It notices syntax errors, but not undefined name errors. Nothing obvious in the output pane. Can you suggest anything ?
[10:48:29] <sm> (this is in vs code, with ghc 9.0.1)
[10:49:02] <sm> https://bpa.st/raw/AP5A is a typical startup log
[10:57:38] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:d444:3bcd:ae33:7f0)
[11:01:32] <sm> now I see... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/fdfe8cb6893a784b029620a78734060835a51c55)
[11:03:03] <sm> but in the problems pane, it shows only this (not seen in the log):
[11:03:03] <sm> tried to look at linkable for GetModIfaceWithoutLinkable for NormalizedFilePath "/Users/simon/src/hledger/hledger-lib/Hledger/Utils/Debug.hs"
[11:03:03] <sm> CallStack (from HasCallStack):
[11:03:03] <sm>   error, called at src/Development/IDE/Core/Rules.hs:888:79 in ghcide-1.5.0-inplace:Development.IDE.Core.Rules
[11:03:44] <sm> why is there an error call in there ?
[11:08:45] <sm> https://haskell-language-server.readthedocs.io/en/latest/troubleshooting.html#problems-with-multi-component-tests-suites-executables-benchmarks-support-using-stack is helpful, I'll fix problems outside of hls and retry
[11:14:08] <fendor[m]> <sm> "why is there an error call in..." <- there are actually a couple of those
[11:15:28] <sm> I fixed the build, but hls behaviour is the same
[11:29:58] *** Joins: libertyprime (~libertypr@203.211.73.21)
[11:30:51] <wz1000> sm: its a bug in the latest release
[11:30:51] *** Joins: hpd_ (~hpdhpdeif@2001:470:69fc:105::230)
[11:30:51] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[11:30:52] *** Joins: jophish (~jophish@2001:470:69fc:105::670)
[11:30:52] *** Joins: PotatoHatsue (~berberman@2001:470:69fc:105::b488)
[11:30:52] *** Joins: maralorn (~maralorn@2001:470:69fc:105::251)
[11:30:52] *** Joins: michaelpj[m] (~michaelpj@2001:470:69fc:105::86e)
[11:30:52] *** Joins: elonsroadster[m] (~elonsroad@2001:470:69fc:105::d121)
[11:44:51] *** Quits: idnar (sid12240@debian/mithrandi) (Ping timeout: 264 seconds)
[11:47:25] *** Joins: idnar (sid12240@debian/mithrandi)
[11:48:58] *** Joins: arrowd (~arr@2.93.55.66)
[11:51:04] <sm> it was working this morning in fact. 
[11:54:56] <fendor[m]> First time I consciously had to remove dist-newstyle to make cabal build work again
[12:50:42] <jneira[m]> > But right now it's ignoring certain errors. It notices syntax errors, but not undefined name errors.
[12:51:15] <jneira[m]> that is really weird, usually it stops to work entirely when there is a problem loading the files
[12:51:41] <jneira[m]> have you changed ghc options related with warnings/errors?
[12:51:55] <sm> jneira: no
[12:52:18] <jneira[m]> just in case...
[12:52:30] <jneira[m]> and type errors are shown f.e.?
[12:53:26] <sm> and hello. f.e. ?
[12:53:40] <jneira[m]> oh i think you have hit a known issue in hls-1.5.0
[12:53:46] <jneira[m]> let me see
[12:54:05] <jneira[m]> has hls autoupgrade this morning?
[12:54:43] <sm> it was a day or three ago I think. Perhaps I haven't seen it working with hls-1.5.0
[12:55:12] <jneira[m]> https://github.com/haskell/haskell-language-server/issues/2379
[12:55:25] <jneira[m]> fixed in master, about to be included in 1.5.1
[12:56:30] <sm> ah yes, that's one of the errors. Thanks for your help jneira
[12:56:56] <sm> I had forgotten the upgrade
[12:58:32] <jneira[m]> dont know the behaviour of only showing some kind of errors...
[12:59:41] <jneira[m]> s/dont/didnt/
[13:05:33] * sm downgraded to 1.4 and things are working again
[13:05:56] <jneira[m]> üëçÔ∏è
[13:06:39] <jneira[m]> using ghcup i suppose, downgrade the hls automatically download by the vscode extension is a little bit harder
[13:07:14] <jneira[m]> advantages of manage "manually" the haskell toolchain
[13:07:24] <sm> I found the binaries and configured it in the Haskell extension's setting, not too bad
[13:07:41] <sm> oh, and had to restart Code, not just hls
[13:08:16] <jneira[m]> yeah, this is one way, not too hard but with ghcup is simply `ghcup set hls 1.4.0`
[13:12:57] <sm> I don't know how to get ghcup working on mac m1
[13:13:03] <sm> but never mind
[13:13:07] <maerwald> sm: why
[13:13:20] <jneira[m]> well it includes binaries for m1 nowadays
[13:13:29] <maerwald> you just run the install script
[13:14:25] <sm> hi. I didn't want the install script, so I followed the link and guess aarch64-apple-darwin-ghcup-0.1.17.4 is the right one ?
[13:14:34] <maerwald> yes
[13:14:44] <sm> my mac won't let me run it
[13:15:13] * sm uploaded an image: (177KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/AphqoNoOLluoXQlHXAUeUQkO/Screen%20Shot%202021-11-22%20at%2011.45.03%20PM.png >
[13:15:47] <sm> the usual trick where you option-open it in the finder doesn't work either
[13:16:04] <maerwald> you run it via terminal?
[13:16:08] <sm> yes
[13:16:45] <jneira[m]> apple takes care of their users almost as microsoft :-P 
[13:17:33] <sm> have you had any m1 user successfully install it ?
[13:17:57] <maerwald> I think so
[13:18:42] <maerwald> https://support.postbox-inc.com/hc/en-us/articles/360041824214-Error-Postbox-can-t-be-opened-because-Apple-cannot-check-it-for-malicious-software-
[13:20:08] <sm> thanks, that got it working
[13:24:26] <sm> the `ghcup set hls 1.4.0` that jneira mentioned.. where would it set that ?
[13:24:42] <sm> how would the vs code haskell extension know ?
[13:24:52] <jneira[m]> the extension honours the hls in PATH
[13:25:03] <jneira[m]> and that command set hls-1.4.0 in PATH
[13:25:12] <sm> I see
[13:25:36] <jneira[m]> the order is: serverPath config option -> hls in PATH -> automatic download hls
[13:26:31] <jneira[m]> you have to upgrade explicitly but you get full control in exchange
[13:27:17] <sm> I'm offtopic here, but maerwald any chance it ghcup could see/work with my stack-installed binaries ?
[13:28:23] <sm> ~/.stack/programs/x86_64-osx/ghc-9.0.1/bin/ghc, ~/.local/bin/cabal etc.
[13:29:24] <maerwald> I don't understand what you mean
[13:30:49] <jneira[m]> i think sm would like use ghcup to switch versions of any program in those dirs?
[13:31:06] <sm> for example, it shows I have nothing installed but ghcup. It would be cool if it noticed I have many things installed, and at least display them even it won't change them
[13:31:22] <maerwald> I don't even know how that would work reliably
[13:32:09] <jneira[m]> ya ghcup has a fixed list of executables which can be managed: ghc, cabal, stack, hls
[13:32:41] <sm> stack and cabal are in PATH; ghc and hls are in standard locations
[13:33:09] <sm> displaying them seems doable
[13:33:16] <maerwald> how?
[13:33:30] <sm> what problem do you see ?
[13:33:57] <sm> $ which stack
[13:33:57] <sm> stack is /Users/simon/.local/bin/stack
[13:34:28] <maerwald> you search all of PATH? How do you know what binary that is? looking at the name? That breaks with binaries like `cabal-docspec`. Then what else you do? Invoke `cabal --version` on untrusted binaries? How do you display them in the tui?
[13:34:41] <sm> it could show an amber tick. Installed, but unmanaged by ghcup
[13:35:10] <maerwald> too many unknowns
[13:35:32] <sm> alrighty
[13:36:38] <maerwald> that rather looks like a separate program that returns all occurences of a binary in any PATH component
[13:38:10] <maerwald> that can be implemented as a shell function
[13:39:12] <maerwald> or... just use `which -a ghc`
[13:39:15] <maerwald> :D
[13:43:11] <sm> I don't want to duplicate my stack-installed tools, but it's good to have another option in the toolbox. Thanks for ghcup
[13:56:26] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[14:05:33] <cptwunderlich> Is this the right place to ask for help with using HLS?
[14:10:21] <maerwald> sm: that's what https://github.com/commercialhaskell/stack/pull/5585 is for
[14:11:10] <maerwald> every tool knowing about each other is a recipe for disaster
[14:14:59] <jneira[m]> cptwunderlich: yeah
[14:16:10] <fendor[m]> maerwald: I have a weird bug on m1 with ghcup, I don't think it is really ghcup's fault: I can't download ghcup via the script (just hangs and shows `LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to downloads.haskell.org:443`), but if I execute the curl command `curl -Lf https://downloads.haskell.org/~ghcup/0.1.17.4/aarch64-apple-darwin-ghcup-0.1.17.4` myself, the download seems to work.
[14:16:13] <fendor[m]> so damn weird
[14:18:25] <cptwunderlich> Great! My HLS in VS Code is not working after upgrading GHC (and HLS). there is no error, it just doesn't do anything. The logs give me messages from hie-bios about missing files in `ghc-prim`: https://pastebin.ubuntu.com/p/d7dJH8k2Tf/
[14:18:55] <cptwunderlich> That is GHC 8.10.7 and HLS 1.5.0.0 
[14:19:12] <cptwunderlich> (~/.ghcup/bin/haskell-language-server-8.10.7~1.5.0)
[14:20:25] <jneira[m]> jumm you are working in ghc itself right? the bios cradle uses hadrian under the hood to load the project in hls
[14:20:35] <jneira[m]> does the hadrian build work standalone?
[14:20:51] <jneira[m]> but well
[14:20:52] <jneira[m]> anyways
[14:21:03] <jneira[m]> this is a known issue with hls-1.5.0
[14:21:26] <jneira[m]> https://github.com/haskell/haskell-language-server/issues/2387
[14:21:29] <jneira[m]> the last one ;-)
[14:21:42] <cptwunderlich> @jneira[m] that is right, working on GHC. Hadrian builds, I've done a Quick build and did a clean/boot & configure/rebuild to verify it's not that
[14:22:13] <jneira[m]> it is fixed and we are waiting our bleoved ci to finish to start the 1.5.1 release with the fix :-) 
[14:22:32] <jneira[m]> s/bleoved/beloved/
[14:22:33] <cptwunderlich> Ah, gotcha. OK, then I'll wait for a fix ^^
[14:22:40] <maerwald> fendor[m]: maybe one runs via rosetta and the other doesn't
[14:23:14] <cptwunderlich> Aaah, it was you on the "Memory use regression in 1.4.0?" ticket. You asked whether 1.5 fixed the memory use issue, so I wanted to test
[14:23:15] <fendor[m]> maerwald: Uhm... well... time to read up on that I guess
[14:23:16] <jneira[m]> yeah we will do the release asap, but if it takes more time than the expected one you could downgrade hls to 1.4.0
[14:23:47] <jneira[m]> cptwunderlich: ah nice, sad to see you hit the other on in your way :-/ 
[14:23:54] <cptwunderlich> For me personally it's not critical, bc. I have to work on something else right now anyway, but idk about others.
[14:24:13] <maerwald> fendor[m]: run the script via `arch -x86_64`
[14:24:14] <cptwunderlich> ^^ oh well, I'm sure a beast like GHC is a good stress test for any IDE/LS
[14:24:53] <maerwald> if your current shell is x86_64, then subprocesses will prefer that arch as well
[14:24:54] <jneira[m]> ya, the thing triggering the error is hs-boot files, ghc has lot of them and there are not so usual in other projects
[14:25:34] <fendor[m]> maerwald: https://paste.tomsmeding.com/cig4GxNE
[14:25:56] <jneira[m]> but well, what can we, haskellers, do without our dear compiler :-P 
[14:26:09] <fendor[m]> I guess you meant the other script üòÄ
[14:26:14] <jneira[m]> s/there/they/
[14:26:17] <maerwald> arch -x86_64 /bin/bash -c ...
[14:27:06] <fendor[m]> same error
[14:27:33] <fendor[m]> not entirely the same
[14:27:38] <fendor[m]> `arch: posix_spawnp: /bin/bash: Bad CPU type in executable`
[14:28:44] <maerwald> no idea, I don't even have a mac
[14:31:26] <fendor[m]> yeah fair. 
[14:31:35] <fendor[m]> neither do I ‚òπÔ∏è
[14:32:54] <fendor[m]> this is so weird, now the first download succeeded, but the second get's stuck again. I don't want this anymore üòï
[14:33:25] <fendor[m]> well, nix still works. Don't know why this wasn't the first thing I tried... cough
[15:00:46] *** Quits: libertyprime (~libertypr@203.211.73.21) (Ping timeout: 245 seconds)
[15:09:01] *** Joins: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz)
[17:11:15] *** Quits: libertyprime (~libertypr@118-92-79-43.dsl.dyn.ihug.co.nz) (Ping timeout: 264 seconds)
[18:25:03] *** Quits: tnks (sid412124@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[18:28:14] *** Joins: tnks (sid412124@id-412124.helmsley.irccloud.com)
[19:28:44] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:d444:3bcd:ae33:7f0) (Quit: WeeChat 2.8)
[19:34:32] *** Quits: idnar (sid12240@debian/mithrandi) (Ping timeout: 245 seconds)
[19:38:40] *** Joins: idnar (sid12240@debian/mithrandi)
[19:53:01] *** Quits: juhp (~juhp@128.106.188.82) (Remote host closed the connection)
[21:47:28] *** Joins: hololeap_ (~hololeap@user/hololeap)
[21:47:51] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[21:48:10] <sm> did any vs code haskell users find a way to hide imports in the Outline pane ?
[21:50:04] <sm> yess! disable Outline: Show Modules
[21:51:01] <sm> it makes outline pane much more useful
[21:57:54] *** Joins: hololeap (~hololeap@user/hololeap)
[21:58:15] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[22:20:26] *** Quits: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net) (Ping timeout: 260 seconds)
[22:21:03] *** Joins: myShoggoth (~myShoggot@97-120-85-195.ptld.qwest.net)
[23:38:56] *** Joins: juhp (~juhp@128.106.188.82)
[23:57:20] *** Quits: arrowd (~arr@2.93.55.66) ()
