[00:02:47] *** Quits: deadmarshal (~deadmarsh@95.38.118.214) (Ping timeout: 265 seconds)
[00:03:32] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 252 seconds)
[00:03:32] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 252 seconds)
[00:04:27] *** Quits: perldoc (~perldoc@24.88.49.194) (Ping timeout: 252 seconds)
[00:04:49] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 252 seconds)
[00:04:49] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 252 seconds)
[00:04:49] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 252 seconds)
[00:06:54] *** Joins: yzhernand (~yzhernand@129.85.10.202)
[00:09:03] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (Ping timeout: 268 seconds)
[00:11:20] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[00:19:15] *** Quits: KnoP (~KnoP@p57b19817.dip0.t-ipconnect.de) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10/20211111010912])
[00:25:41] <vms14> I'm looking at https://metacpan.org/pod/X11::Protocol
[00:25:42] <Paperbot> Link title(s): [ X11::Protocol - Perl module for the X Window System Protocol, version 11 - metacpan.org ]
[00:26:33] <vms14> also made a hello world in xs, so I think I can manage to make a module to load xpm files and make it work with the x11 protocol module
[00:26:44] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[00:27:01] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[00:27:14] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[00:27:21] <vms14> it has the shape extension so I only need a way to load xpm as a pixmap
[00:27:45] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[00:28:26] <vms14> https://metacpan.org/pod/Image::Base::X11::Protocol::Pixmap looking at this but seems it's useless
[00:28:27] <Paperbot> Link title(s): [ Image::Base::X11::Protocol::Pixmap - draw into an X11::Protocol pixmap - metacpan.org ]
[00:29:15] *** Joins: perldoc (~perldoc@24.88.49.194)
[00:30:46] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[00:30:46] *** ChanServ sets mode: +v perlbot
[00:30:49] <vms14> https://paste.debian.net/1222487/ this is a hello world to open a window
[00:31:17] <Paperbot> Link title(s): [ debian Pastezone ]
[00:34:22] <vms14> now you can start writing your wm in perl
[00:34:42] *** Joins: cation21 (cation@user/cation)
[00:34:49] <vms14> I"d like to see a window manager written in Perl
[00:35:09] <Mandevil> But X.... isn't that so out?
[00:35:22] <vms14> yes and no
[00:35:32] <Mandevil> Wayland is the future.
[00:35:43] <vms14> that's the yes part xD
[00:35:59] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[00:36:10] <vms14> but I know some basic xlib stuff
[00:36:48] <vms14> and I just need to write a xs module for xpm to be able to rewrite a simple script I made in C
[00:36:54] <choroba> So out? I wouldn't expect such a question in a Perl channel.
[00:37:09] <vms14> it was a charmander walking in the screen using the xshape extension
[00:37:35] <vms14> for every frame it resizes the window to the size of the frame
[00:37:48] <vms14> reshapes*
[00:38:03] *** cation21 is now known as cation
[00:38:46] <Mandevil> The only time X were cool was when the original compiz was first introudced.
[00:42:13] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 252 seconds)
[00:42:54] *** Quits: perldoc (~perldoc@24.88.49.194) (Ping timeout: 265 seconds)
[00:42:54] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 265 seconds)
[00:43:25] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[00:43:25] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Ping timeout: 240 seconds)
[00:43:41] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 252 seconds)
[00:43:44] <vms14> oooh
[00:43:45] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[00:43:48] <vms14> http://perlwm.sourceforge.net/
[00:43:55] <Paperbot> Link title(s): [ perlwm ]
[00:45:25] <vms14> oh bro this is gold for me
[00:46:37] <Mandevil> Oh my
[00:47:47] *** Quits: magla (~gelignite@55d40eb7.access.ecotel.net) (Quit: Stay safe!)
[00:48:51] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[00:51:56] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[00:52:21] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[00:52:51] <mjgardner> Today's blog: Want some syntactic sugar with those exceptions? https://phoenixtrap.com/2021/12/07/sweeter-perl-exception-classes/
[00:52:53] <Paperbot> Link title(s): [ Sweeter Perl exception classes—The Phoenix Trap ]
[00:53:21] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[00:54:52] *** Joins: perldoc (~perldoc@24.88.49.194)
[00:56:25] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[00:56:25] *** ChanServ sets mode: +v perlbot
[00:57:39] <gordonfish> simcop2387: Welcome back. Hows that 10g card
[00:57:58] <Mandevil> Is the bot saturating it? ;-)
[00:58:24] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[00:58:51] <simcop2387> gordonfish: seems to be working pretty well
[00:59:03] <simcop2387> Mandevil: not yet, the new switch to let me go to 10g doesn't come in for a few more days
[00:59:04] <parv> mjgardner, Could you do something about the page layout, as with large enough font size I see only 5-6 words in a line?
[00:59:20] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[00:59:41] <vms14> I have tried it, it works, but idk how to open a terminal xd
[01:00:07] <simcop2387> Mandevil: though once i have it then i'll have 10g between the two servers over the network, for iscsi and other such, and then 20g between the 24port switch and the new 8 port 10g switch (LAG/LACP).  so i can start filling up all the ports with network booting pis.
[01:00:17] <vms14> anyways what I wanted is to look at the code, but it's nice to see that works even if I don't know how to use it
[01:00:52] <simcop2387> Mandevil: though i still can't find a turing pi v1 or v2 board for doing the real part of that.
[01:01:06] <Mandevil> "turing pi"?
[01:01:08] <Mandevil> What's that?
[01:01:46] <simcop2387> Mandevil: https://turingpi.com/v1/
[01:01:46] <mjgardner> parv: Sure. May I ask how you’re viewing it so I have something to test against? Computer/tablet/phone? Browser?
[01:01:46] <Paperbot> Link title(s): [ Raspberry Pi cluster. Host Kubernetes, Docker and cloud apps locally. ]
[01:02:09] <simcop2387> Mandevil: basically it's a board for running a bunch of pi compute modules
[01:02:16] <Mandevil> OMG
[01:02:30] <simcop2387> the v2 one supports compute module 4 and jetson modules
[01:03:22] <gordonfish> meet pi jetson
[01:04:10] *** Quits: proller (~p@2a02:6b8:b081:7::1:2f) (Ping timeout: 265 seconds)
[01:04:23] <Mandevil> So basically a lightweight server "farm"
[01:04:59] <parv> mjgardner, I am using Firefox on Windows on a laptop with 13.3" screen at 1920x1080 px.
[01:05:22] <simcop2387> yep, i want to get one or more going to run evals for people and use that for long running evals, and also see if i can get something going for running github and gitlab actions with every perl version available for people, ready to run their CI tasks.
[01:06:01] <Mandevil> No shortage of ambition there, simcop2387 m
[01:06:10] <Mandevil> s/m//
[01:06:23] <parv> mjgardner, Thank you for looking into this
[01:06:35] <gordonfish> Wow
[01:07:33] <simcop2387> Mandevil: certainly not.  along with that i sort of want to get it going for running lots of cpan module testing stuff too.  30W for running 14+ cpan installs at once
[01:08:01] <Mandevil> Are you running that at home?
[01:09:16] <simcop2387> yep, i'm wanting to attach it to my rack.  The rack contains a Threadripper 1950x w/ 128GB ram, and too much disks, and an old 4 core 8 thread intel box that i just put that new nic in.  there's 24 spinning rust disks, and 5 more ssds.
[01:09:30] <simcop2387> and a pi 4 that runs windows 10 but isn't on right now
[01:09:44] <Mandevil> Nice
[01:10:04] <Mandevil> I just have an old Pentium II "server" under my desk :)
[01:10:26] <Mandevil> Full 2GB of RAM!
[01:10:30] <simcop2387> but i want to add that small cluster for running nutty things and isolate other people's work too so that they can't see my network but could sit there churning on testing all of cpan on a perl build.
[01:11:08] <Mandevil> Also have a Pi4 with Home Assistant.
[01:14:26] <simcop2387> yea HA has been a wonderful thing for me too.  my christmas lights are powered by HA and ESPHome now, https://youtu.be/cb9Ss05r5Mg https://youtu.be/4UVRcD34oIU
[01:15:25] <gordonfish> "Meet PI Jetson... His Board EEPROM... DC 12-V... Jumper his choice (boot and flasssssh)"
[01:15:44] <mason> simcop2387: Your Christmas tree is somewhat frightening.
[01:16:12] <gordonfish> wow
[01:16:12] <simcop2387> mason: :) yea it's 550 addressable RGB leds
[01:16:29] *** Joins: proller (~p@80.240.216.69)
[01:16:37] <mason> simcop2387: You could program it as a rudimentary clock.
[01:17:32] <simcop2387> mason: i'm working on stealing some of the effects/patterns from the WLED projects, but the fact that I can tell the tree to be controllable via the WLED or E1.31 protocols is just really cool too.  I don't have anything to set it to right now but i've been thinking about it
[01:20:15] <mason> nice
[01:20:20] <mason> Very fun project.
[01:20:32] <simcop2387> Mandevil: oh right, HA + Cloudflare Argo is a great combo, https://github.com/wlatic/hassio.addons
[01:20:33] <gordonfish> Yeah, quite awesome
[01:20:33] <Paperbot> Link title(s): [ GitHub - wlatic/hassio.addons ]
[01:21:03] <simcop2387> they opened up Argo tunnels for free tiers in april, so no port forwarding needed to have HA accessible outside your network
[01:21:15] <Mandevil> Free tiers?
[01:21:21] <Mandevil> At cloudflare?
[01:21:36] * GumbyPAN CPAN Upload: Test2-Harness-1.000086 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000086
[01:21:48] <gordonfish> simcop2387: Does that mean it's technically possible to hack a chistmas tree now?
[01:22:05] <gordonfish> (from across the Internet)
[01:22:27] <simcop2387> gordonfish: i could give you guys a rest api for it, though i'd want to setup a camera so you can watch it too
[01:24:38] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[01:26:24] *** Quits: yzhernand (~yzhernand@129.85.10.202) (Ping timeout: 265 seconds)
[01:26:37] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-SignReleaseNotes-0.0001 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Dist-Zilla-Plugin-SignReleaseNotes-0.0001
[01:27:14] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:27:17] *** Joins: yzhernand (~yzhernand@2607:fb90:5512:d5ae:f4cf:3cff:fe04:6def)
[01:27:22] <parv> mjgardner, A screenshot https://i.imgur.com/MZTVg6p.png
[01:27:52] <Mandevil> Yuuuuge font size.
[01:28:02] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Quit: leaving)
[01:28:33] <Mandevil> Zooming works just fine for me.
[01:28:43] <Mandevil> Your setup is weird.
[01:28:59] <parv> Your eyesight is weird
[01:29:25] <gordonfish> I really hate scaling on windows
[01:29:40] <Mandevil> This is what I see: https://i.imgur.com/YGcgfbe.png
[01:30:09] <gordonfish> That looks fine
[01:30:15] <Mandevil> That is fine.
[01:30:27] <Mandevil> And when I zoom it just gets proportionally biggr.
[01:30:40] <Mandevil> No discernible problem for me.
[01:31:29] <simcop2387> Mandevil: yea you can setup the Argo tunnels to proxy traffic to a service without it being directly exposed to the internet.  without having a paid account with them
[01:31:43] <Mandevil> Sounds cool.
[01:32:56] <Adura> What does it use, carrier pigeons?
[01:33:14] *** Joins: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr)
[01:33:14] <simcop2387> Adura: some kind of digital swallow carrying coconuts
[01:33:44] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[01:37:30] *** Quits: bmeneg (~bmeneg@2001:1284:f013:1dd1:49b9:b9e4:2b6:28e) (Remote host closed the connection)
[01:37:52] <gordonfish> goose/ip has a far higher capacity but also has a habit of going the wrong way
[01:40:47] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[01:45:49] <simcop2387> gordonfish: also a propensity for attacking the recipiant
[01:46:39] * GumbyPAN CPAN Upload: XML-Sig-0.55 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/XML-Sig-0.55
[01:49:35] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200D978285FD3614FD3.catv.pool.telekom.hu)
[01:50:08] * gordonfish is reminded of a canada goose chasing him when he was five, and concurs
[01:54:27] *** Joins: proller (~p@2a02:6b8:b081:8810::1:36)
[02:00:43] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[02:01:25] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[02:02:31] *** Quits: yzhernand (~yzhernand@2607:fb90:5512:d5ae:f4cf:3cff:fe04:6def) (Ping timeout: 252 seconds)
[02:03:59] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[02:09:36] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[02:09:54] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[02:14:07] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:15:55] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:16:13] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[02:17:45] <mjgardner> parv: I don’t want to disparage whatever you need to do for accessibility, but that combination of OS zoom, minimum font size, and browser zoom is like a perfect storm for text problems.
[02:18:09] <parv> mjgardner, Yes, no doubt
[02:24:08] <parv> mjgardner, The layout could allow more text in the middlec column to fit on the same line by reducing empty spacing on the left side, and possibly moving text on the right column either at top or bottom.
[02:29:10] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:29:25] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200D978285FD3614FD3.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[02:30:12] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 265 seconds)
[02:31:47] *** Joins: kensanata (~user@user/kensanata)
[02:31:54] <vms14> wtf perl has auto locking methods?
[02:32:14] <vms14> sub foo : method locked {}
[02:32:30] <vms14> being a method locks also the object :0
[02:32:48] <mjgardner> parv: It does that already for constrained views like tablets and phones. Your setup  is actively preventing that. 😕
[02:33:25] *** Quits: pizdets (~pizdets@183.182.115.115) (Ping timeout: 240 seconds)
[02:33:53] *** Joins: pizdets_ (~pizdets@183.182.111.243)
[02:34:05] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:34:58] <parv> mjgardner, Ok. What do you think is preventing that? Is it the combination in some way?
[02:35:21] <xenu> vms14: hm? the only purpose of :method is to quiet a warning
[02:35:31] <xenu> https://perldoc.perl.org/attributes#method
[02:35:31] <Paperbot> Link title(s): [ attributes - get/set subroutine or variable attributes - Perldoc Browser ]
[02:35:35] <parv> mjgardner, Perhaps we should chat outside of #perl?
[02:37:33] <vms14> xenu https://perldoc.perl.org/5.8.2/attributes#locked
[02:37:33] <Paperbot> Link title(s): [ attributes - get/set subroutine or variable attributes - Perldoc Browser ]
[02:38:22] <vms14> id makes Perl autolock the function, and if it's a method locks the entire object
[02:38:27] <vms14> iit*
[02:39:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[02:39:02] <xenu> that thing was removed years ago
[02:39:10] <vms14> :0
[02:39:31] <parv> mjgardner, "Zoom text only" in Firefox seems to be the thing; turning it off gets the behaviour as I had outlined. Thanks
[02:41:12] <vms14> what does the shared attribute
[02:41:17] <vms14> nothing?
[02:41:18] <xenu> vms14: so-called 5.005 threads (which :locked needs) were removed in 5.10.0
[02:42:10] <xenu> :shared shares a variable between threads, as documented
[02:42:16] <xenu> by default all variables are local to a thread
[02:42:19] <vms14> sorry, I was reading the book of extending and embedding perl
[02:42:37] <vms14> and it showed up the locked attribute
[02:43:01] *** Joins: Guest98 (~Guest98@80.80.36.58)
[02:44:21] <xenu> "5.005 threads" was an old threading model where everything was shared by default, it was removed in 5.10, as i said
[02:44:25] <xenu> it was replaced with ithreads. now every variable is local to a thread unless it has the :shared attribute
[02:45:18] <xenu> when you spawn a new thread variables from the parent thread are copied to the child
[02:45:28] <xenu> your book clearly is outdated
[02:45:54] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200D978285FD3614FD3.catv.pool.telekom.hu)
[02:46:04] <vms14> like most of the rest
[02:46:27] <vms14> but still better than a tutorial
[02:47:25] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[02:47:37] *** Joins: yzhernand (~yzhernand@64-18-144-8.starry-inc.net)
[02:48:44] *** Quits: Guest98 (~Guest98@80.80.36.58) (Ping timeout: 256 seconds)
[02:50:05] <rewt> might be best to just skip the chapter on threads
[02:51:49] *** Joins: whynot (~whynot@37.73.72.69)
[02:51:57] *** Quits: yzhernand (~yzhernand@64-18-144-8.starry-inc.net) (Ping timeout: 265 seconds)
[02:53:54] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[02:57:54] *** Joins: yzhernand (~yzhernand@2607:fb90:55aa:e63c:48ef:28ff:fe84:dfdf)
[03:02:17] *** Quits: yzhernand (~yzhernand@2607:fb90:55aa:e63c:48ef:28ff:fe84:dfdf) (Ping timeout: 252 seconds)
[03:02:55] *** Joins: yzhernand (~yzhernand@64-18-144-8.starry-inc.net)
[03:07:25] *** Quits: yzhernand (~yzhernand@64-18-144-8.starry-inc.net) (Ping timeout: 265 seconds)
[03:08:20] *** Joins: yzhernand (~yzhernand@2607:fb90:5585:a807:ecee:23ff:fe5b:7be)
[03:15:17] *** Quits: yzhernand (~yzhernand@2607:fb90:5585:a807:ecee:23ff:fe5b:7be) (Ping timeout: 268 seconds)
[03:15:29] *** Joins: yzhernand (~yzhernand@2607:fb90:5585:a807:ecee:23ff:fe5b:7be)
[03:17:17] <xenu> https://news.ycombinator.com/item?id=29477375
[03:17:18] <Paperbot> Link title(s): [ Redesigned Notepad for Windows 11 | Hacker News ]
[03:17:22] <xenu> lmao microsoft decided to ruin notepad
[03:17:40] <xenu> the calculator wasn't enough
[03:20:50] <rewt> is it based on electron now?
[03:21:20] <xenu> worse, winui
[03:23:21] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[03:24:00] <xenu> the number of not completely broken electron applications is non-zero, although still very low
[03:24:47] <xenu> otoh, i have *never* seen a non-terrible uwp/winui application
[03:27:25] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[03:28:51] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[03:38:53] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Read error: Connection reset by peer)
[03:42:25] *** Joins: bmeneg (~bmeneg@2001:1284:f013:1dd1:49b9:b9e4:2b6:28e)
[03:44:13] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[03:47:14] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[03:48:29] *** Quits: yzhernand (~yzhernand@2607:fb90:5585:a807:ecee:23ff:fe5b:7be) (Ping timeout: 252 seconds)
[03:49:57] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[03:51:47] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[03:52:31] <simcop2387> xenu: but it needs to work on tablets!
[04:00:18] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[04:01:40] *** Joins: yzhernand (~yzhernand@2607:fb90:5585:a807:1054:5bff:fef0:f3d1)
[04:06:28] *** Quits: yzhernand (~yzhernand@2607:fb90:5585:a807:1054:5bff:fef0:f3d1) (Ping timeout: 268 seconds)
[04:06:44] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[04:09:30] <xenu> mark wahlberg once said this about 9/11: 
[04:09:40] <xenu> "If I was on that plane with my kids, it wouldn’t have went down like it did. There would have been a lot of blood in that first-class cabin and then me saying, ‘OK, we’re going to land somewhere safely, don’t worry."
[04:09:49] <xenu> well, if i were the ceo of microsoft when their devs came up with UWP, it wouldn't have went down like it did too
[04:13:27] <aquanight> I'm inclined to agree that UWP is a terrible API
[04:13:41] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[04:13:47] <aquanight> but what's worse is that there are parts of the Windows system that are *exclusive* to this API
[04:13:57] <aquanight> instead of it being based on underlying APIs
[04:20:23] *** Quits: proller (~p@2a02:6b8:b081:8810::1:36) (Ping timeout: 252 seconds)
[04:23:34] <gordonfish> That a ton of UWP / "modern UI" apps are just plain crap, often missing something you need, and being geared towards fullscreen-ness while also wasting a lot of space (almost sounds like a zen riddle..)
[04:24:05] <aquanight> touchable UI is a bitch
[04:27:56] <gordonfish> Touch stuff really needs to be much more secondary on desktop machines, where people mainly use keyboards and mice. If you have a touch-enabled monitor, great, but that doesn't mean it should behave and look like a tablet, ui and application wise.
[04:28:37] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 265 seconds)
[04:28:56] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[04:29:24] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[04:30:23] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[04:33:53] *** Joins: proller (~p@2a02:6b8:b081:14::1:3a)
[04:34:56] *** Quits: dacav (~dacav@h94-245-9-202.cust.a3fiber.se) (Ping timeout: 245 seconds)
[04:40:01] <aquanight> except then you have shit like the surface
[04:40:06] <aquanight> which is mainly tablet first
[04:40:14] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:22] <aquanight> and I don't even know if there's a good API to know if a given system is desktop-first or tablet-first
[04:40:41] <aquanight> there was a "tablet mode" toggle in the W10 sidebar thing
[04:41:55] <simcop2387> fucking chip shortage.  that's the second 10g switch that's been cancelled on me
[04:42:59] <simcop2387> that's now all of the CRS309-1G-8S+IN that were listed on amazon as new it looks like
[04:43:01] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200D978285FD3614FD3.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[04:44:11] <simcop2387> even newegg looks to be having stock issues of those
[04:46:46] <simcop2387> the one seller that seems to have one i'm not sure i trust
[04:46:57] * GumbyPAN CPAN Upload: Crypt-Perl-0.37_10 by FELIPE https://metacpan.org/release/FELIPE/Crypt-Perl-0.37_10
[04:47:27] <simcop2387> i think i'm waiting to get one until later then.
[04:49:08] <simcop2387> well there's always the possibility that UPS finds that original one that got "lost"
[04:49:57] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[04:50:57] <simcop2387> or fuck.  same price almost that i had been looking at the smaller one for *BUT* 16 fucking 10g ports
[04:52:12] *** Joins: dacav (~dacav@h94-245-9-202.cust.a3fiber.se)
[04:56:58] * GumbyPAN CPAN Upload: Net-SAML2-0.49 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-SAML2-0.49
[05:00:50] *** Joins: cation21 (cation@user/cation)
[05:01:58] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[05:03:25] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[05:04:10] *** cation21 is now known as cation
[05:08:40] <timlegge> simcop2387: https://store.mikrotikcanada.ca/switches/211-crs309-1g-8sin.html 17 in stock there.  Have not ordered from them though
[05:08:41] <Paperbot> Link title(s): [ CRS309-1G-8S+IN ]
[05:09:54] <simcop2387> timlegge: if i get jerked around on the CRS317-1G-16S+RM I just ordered for the same price as I was finding the 8S+ ones (nearly anyway), then I might just try that.
[05:10:08] <xenu> while the store is probably legit, it seems their configuration is botched
[05:10:09] <xenu> >Security policy (edit with Customer reassurance module)
[05:10:25] <simcop2387> don't know if they'll ship to the US either but yea i'd trust them to be legit at least
[05:13:05] <timlegge> Ive been planning to order a mAP lite from them.  I have one but I quite like it...
[05:16:11] *** Joins: cation21 (cation@user/cation)
[05:17:01] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[05:17:32] <simcop2387> timlegge: i'll likely be looking at their APs once they get an 802.11ax/ay one out, i've got ac already but am thinking that ax/ay will be my next upgrade path and at that point i'll be going dedicated router and dedicated ap for that, just so that the two can be upgraded independently
[05:19:18] <xenu> i wish they made updated map lite with something better than 802.11n radio
[05:19:33] <timlegge> I have a couple of Ubiquiti AP-AC-Pros in my house but I do like the mikrotik price point
[05:19:38] *** cation21 is now known as cation
[05:19:56] <xenu> map lite is really handy as a wifi adapter substitute
[05:20:09] <simcop2387> xenu: yea it seems like they've just recently really gotten their ac stuff out, but no map lite version.  
[05:20:18] <timlegge> really like the map lite for travel - less and less hotels have copper in the rooms though
[05:20:49] *** Joins: gast0n (~g4570n@user/gast0n)
[05:21:29] *** Quits: whynot (~whynot@37.73.72.69) (Quit: leaving)
[05:21:33] <simcop2387> thius looks the closest, but not really as portable.  https://mikrotik.com/product/RB952Ui-5ac2nD
[05:21:34] <Paperbot> Link title(s): [ MikroTik Routers and Wireless - Products: hAP ac lite ]
[05:23:36] <simcop2387> timlegge: yea i've got an old router running openwrt for doing the same, mostly because i can also connect the 5g to the hotel wifi usually, and then connect on 2.4 myself, and use a chromecast and such over my vpn
[05:24:48] <simcop2387> that said there's far far less travel happening right now
[05:25:03] <timlegge> That repeater mode was something I tried to sort out on the map lite but with only one copper port I seemed to spend more time locking my sely out of it and needing to reset to defaults
[05:25:31] <simcop2387> LeoNerd: https://mikrotik.com/product/knot
[05:25:32] <Paperbot> Link title(s): [ MikroTik Routers and Wireless - Products: KNOT ]
[05:26:17] <simcop2387> that looks like a fun device to play with, modbus, gpio, bluetooth over tcp/ip and mqtt
[05:27:19] <timlegge> simcop2387: that does look like fun
[05:27:51] <simcop2387> if i had property and it was large enough to be useful to play with remote sensors i really think that might be a fun option
[05:28:56] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[05:29:34] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[05:31:46] <timlegge> seems like they let an engineer go into the supplies room and take what ever interested him - seems like a cool company
[05:38:24] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[05:38:45] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[05:38:53] *** Joins: jdurand (~jdurand@user/jdurand)
[05:47:19] *** Joins: cation21 (cation@user/cation)
[05:47:22] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:48:22] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[05:48:53] *** Joins: manjaroi3 (~manjaro-i@125.131.114.50)
[05:48:53] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:50:43] *** cation21 is now known as cation
[06:01:01] *** Quits: Su-Shee (~Susanne@p4ffc7847.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:03:00] *** Joins: Su-Shee (~Susanne@p50894218.dip0.t-ipconnect.de)
[06:07:18] *** Quits: bmeneg (~bmeneg@2001:1284:f013:1dd1:49b9:b9e4:2b6:28e) (Remote host closed the connection)
[06:17:01] *** Quits: proller (~p@2a02:6b8:b081:14::1:3a) (Ping timeout: 240 seconds)
[06:20:34] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[06:47:43] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:47:43] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:47:43] *** finn_elija is now known as FinnElija
[06:52:10] * GumbyPAN CPAN Upload: PomBase-Chobo-0.034 by KIM https://metacpan.org/release/KIM/PomBase-Chobo-0.034
[06:59:01] *** Quits: Peppard (~quassel@dynamic-095-117-120-151.95.117.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:02:42] *** Joins: Peppard (~quassel@dynamic-077-009-081-154.77.9.pool.telefonica.de)
[07:11:15] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[07:20:57] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:25:05] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[07:25:33] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[07:29:25] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[07:52:19] *** Joins: shlomo (~shlomo@178.208.173.140)
[07:54:21] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[07:57:49] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[08:06:48] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[08:10:57] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 265 seconds)
[08:11:26] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:16:11] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[08:26:20] * GumbyPAN CPAN Upload: PDF-API2-2.043 by SSIMMS https://metacpan.org/release/SSIMMS/PDF-API2-2.043
[08:27:25] *** Joins: Martchus (~martchus@2a01:c23:bd0d:a600:d250:99ff:fe49:3cce)
[08:28:13] *** Quits: Martchus_ (~martchus@dynamic-095-117-084-245.95.117.pool.telefonica.de) (Ping timeout: 240 seconds)
[08:30:59] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[08:44:21] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Quit: Leaving)
[08:44:43] *** Quits: pizdets_ (~pizdets@183.182.111.243) (Ping timeout: 250 seconds)
[08:44:51] *** Joins: pizdets (~pizdets@183.182.111.137)
[08:51:26] *** Joins: shlomo_ (~shlomo@190.115.66.40)
[08:51:48] *** Quits: shlomo_ (~shlomo@190.115.66.40) (Client Quit)
[08:54:43] *** Joins: shlomo_ (~shlomo@178.208.162.49)
[08:55:01] *** Quits: shlomo (~shlomo@178.208.173.140) (Ping timeout: 252 seconds)
[09:05:00] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:25:57] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:27:31] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:27:57] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:29:20] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:29:28] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:37:25] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:37:52] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:40:29] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:42:18] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[09:43:23] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:46:38] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:46:55] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:49:36] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:49:41] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[09:50:23] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:52:42] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:53:09] *** Joins: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[09:57:46] *** Quits: mattil (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[10:02:33] *** Joins: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de)
[10:05:04] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:05:14] *** Joins: mattil (~mattil@87-95-29-147.bb.dnainternet.fi)
[10:05:55] *** Joins: mattil_ (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi)
[10:08:09] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[10:09:25] *** Quits: mattil (~mattil@87-95-29-147.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[10:09:33] *** Joins: jplesnik (~jplesnik@83.240.62.176)
[10:09:49] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 252 seconds)
[10:10:49] *** Quits: mattil_ (~mattil@dz8hln1hqq3mbsbdg4z-4.rev.dnainternet.fi) (Ping timeout: 265 seconds)
[10:16:26] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[10:23:52] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 265 seconds)
[10:24:13] *** Quits: revhippie (~jdavis@097-081-163-065.res.spectrum.com) (Ping timeout: 240 seconds)
[10:26:32] * GumbyPAN CPAN Upload: Task-FreecellSolver-Testing-MultiConfig-0.0.6 by SHLOMIF https://metacpan.org/release/SHLOMIF/Task-FreecellSolver-Testing-MultiConfig-0.0.6
[10:29:37] *** Joins: revhippie (~jdavis@097-081-163-065.res.spectrum.com)
[10:35:35] *** Joins: v^ (~v@user/ctrl)
[10:36:35] *** Quits: v` (~v@user/ctrl) (Ping timeout: 252 seconds)
[10:59:41] *** Joins: frost (~frost@user/frost)
[11:01:17] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[11:01:36] * GumbyPAN CPAN Upload: Module-Generic-v0.18.2 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.18.2
[11:06:24] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:07:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[11:08:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:08:14] *** Joins: Guest98 (~Guest98@80.80.36.58)
[11:13:06] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[11:14:41] *** Joins: diskin (~diskin@31.23.234.198)
[11:19:56] *** Quits: Su-Shee (~Susanne@p50894218.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[11:21:24] *** Joins: Su-Shee (~Susanne@p4ffc710a.dip0.t-ipconnect.de)
[11:31:12] *** Joins: martinus__ (~martin@96.19.201.77.rev.sfr.net)
[11:34:36] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Read error: Connection reset by peer)
[11:35:09] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[11:38:32] *** Joins: tobybl (~tobybl@213.31.132.232)
[11:40:45] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[11:49:33] *** Joins: tobybl (~tobybl@213.31.132.232)
[12:00:16] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[12:08:30] *** Quits: Guest98 (~Guest98@80.80.36.58) (Quit: Client closed)
[12:20:14] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:21:42] *** Quits: dacav (~dacav@h94-245-9-202.cust.a3fiber.se) (Remote host closed the connection)
[12:26:09] *** Quits: randir (~randir@95-25-138-85.broadband.corbina.ru) (Remote host closed the connection)
[12:32:43] *** Quits: jdurand (~jdurand@user/jdurand) (Quit: Leaving)
[12:35:27] <Mandevil> Huh, I just noticed, that Mojo::IOLoop::Tail pegs the CPU at 100%.
[12:36:13] <Mandevil> That's not how it's supposed to work
[12:36:57] <Mandevil> My own code does it too.
[12:38:23] *** Joins: randir (~randir@93.159.239.42)
[12:38:33] <Botje> the code clearly shows it registering on the FD for events
[12:38:46] <Botje> show (your) code?
[12:39:18] <Mandevil> https://l.perl.bot/p/x5ewb8
[12:39:19] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[12:41:29] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[12:44:05] *** Joins: dacav (~dacav@h94-245-9-205.cust.a3fiber.se)
[12:47:38] <Botje> curious.
[12:47:48] <Botje> I suppose the sysread just returns immediately with 0 bytes, then?
[12:48:39] <Botje> and follow-up question: what is happening to `tmp.log`?
[12:48:50] <Mandevil> Nothing, it sits still.
[12:49:19] <Mandevil> But it's Mojo::IOLoop that should be waking up only when there is new data to read.
[12:49:27] <Mandevil> That's the whole purpose of the module.
[12:49:33] <Botje> indeed
[12:49:48] <Mandevil> Instead it's invoking the callback at full throttle.
[12:49:56] <Mandevil> Even when there's nothing to be read.
[12:50:26] <Mandevil> If it were only my code that does it, I would think I'm just not undertanding things. But the CPAN library does it as well.
[12:50:30] <Mandevil> So something is amiss.
[12:53:49] <Botje> does tail -f do the same?
[12:54:12] <Mandevil> Botje: No.
[12:54:29] <Mandevil> Tail -f is completely idle.
[12:54:40] <Mandevil> (as it should be)
[12:55:04] *** Joins: art1 (~romeyke@p200300ccdf085d00d06c3b8f687a712f.dip0.t-ipconnect.de)
[12:55:28] <Mandevil> Still, mojo web apps use IOLoop and behave correctly.
[12:55:41] *** Quits: dacav (~dacav@h94-245-9-205.cust.a3fiber.se) (Remote host closed the connection)
[12:56:03] <Mandevil> (though they are not reading files but sockets...)
[12:57:32] <Botje> does strace tell you anything more?
[12:57:45] <Mandevil> Let me see
[12:57:47] <Botje> (hopefully at least the system call that thinks your file is readable)
[12:58:14] <Mandevil> tail -f idles in select() (as expected)
[12:58:53] <Mandevil> Hm, but the IOLoop... that's bit harder to discern, since there are too many things going on.
[12:59:29] <Mandevil> poll([{fd=3, events=POLLIN|POLLPRI}], 1, 501^C) = 1 ([{fd=3, revents=POLLIN}])
[12:59:33] <Mandevil> I guess this
[13:00:31] <Mandevil> It's simply polling the fd?
[13:00:45] <Mandevil> (i have no idea how poll() works)
[13:01:28] <Mandevil> Hm, manpage says it should wait for something to become readable.
[13:01:49] * GumbyPAN CPAN Upload: Text-Amuse-Compile-1.66 by MELMOTHX https://metacpan.org/release/MELMOTHX/Text-Amuse-Compile-1.66
[13:02:07] <Mandevil> POLLIN is "there is data to read"
[13:02:18] <Mandevil> POLLPRI is "exceptional condition"
[13:03:41] <Mandevil> So as I undertstand it, for some reason poll() is always returning 1 event in POLLIN state.
[13:03:58] <Mandevil> Ie. it always thinks there is data to read.
[13:04:19] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[13:05:01] <Botje> https://stackoverflow.com/questions/18616716/why-does-poll-keep-returning-although-there-is-no-input
[13:05:01] <Paperbot> Link title(s): [ c++ - Why does poll keep returning although there is no input? - Stack Overflow ]
[13:05:11] *** Joins: choroba (~E.Choroba@88.146.255.106)
[13:05:59] <Mandevil> Hmmmm....
[13:06:57] <Mandevil> In other words, this code is fundamentally broken.
[13:07:05] <Botje> https://github.com/brianmed/Mojo-IOLoop-Tail/issues/1
[13:07:06] <Mandevil> As in, completely wrong.
[13:07:06] <Paperbot> Link title(s): [ 100% CPU usage · Issue #1 · brianmed/Mojo-IOLoop-Tail · GitHub ]
[13:07:07] <Botje> oh look.
[13:07:11] <Botje> it is a known issue.
[13:07:31] <Botje> so you're not doing anything wrong. *cough*
[13:07:39] <Mandevil> Haha.
[13:07:54] <Mandevil> But using up 100% of CPU is unacceptable behaviour
[13:07:58] <Botje> it is.
[13:08:21] <Mandevil> So what are my options here?
[13:08:40] <Botje> switch to inotify and friends instead?
[13:08:56] <Mandevil> Do I need to write my own Reactor?
[13:10:32] <Botje> I .. have no idea at this point.
[13:10:59] <Botje> entr uses kevent to watch for FS notifications, and i used inotify in the past for similar purposes.
[13:11:30] <Mandevil> Maybe I ask on #mojo.
[13:12:42] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[13:12:42] *** Quits: diskin (~diskin@31.23.234.198) (Killed (calcium.libera.chat (Nickname regained by services)))
[13:12:42] *** diskin_ is now known as diskin
[13:16:24] *** Quits: zkrd (~xdg@2a02:587:de00:3f00:6517:f4a7:6d61:b378) (Read error: Connection reset by peer)
[13:17:12] *** Joins: disconnect_me (~marcin@gl115-41.master.pl)
[13:18:03] *** Joins: Pali (~pali@user/pali)
[13:18:05] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:18:41] *** Joins: wowas (~wowas@212.87.135.94)
[13:18:43] <wowas> Hello!
[13:18:49] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:19:32] <rindolf> wowas: meow
[13:21:26] <wowas> i use Net::SSH2; and after upgrading example.com i get: https://pastebin.com/N7Pm4iUp => no matching host key type found. Their offer: ssh-rsa,ssh-dss [preauth]
[13:21:27] <Paperbot> Link title(s): [ use strict;use warnings;use Net::SSH2;  my $ssh2 = Net::SSH2->new(); - Pastebin.com ]
[13:21:27] <Repaster> Repasted text from wowas: http://perl.bot/p/bvf788
[13:21:48] <wowas> normal openssh connection work which seem to use ssh-rsa256
[13:22:26] <wowas> Accepted publickey for root from xxx.xxx.xxx.xxx port 38394 ssh2: RSA SHA256:BZYN5wOgfsdfsdqIAsdfasdfjHjIlcK8xRdv/0gsadfdasfCU4aMNexk
[13:23:03] <wowas> must i use/tell net:ssh2 to use ssh-rsa256?
[13:23:30] <Botje> what version of libssh2 is used?
[13:29:04] <Botje> oh, it looks like libssh2 does not support ssh-rsa256 yet: https://github.com/libssh2/libssh2/pull/626
[13:29:05] <Paperbot> Link title(s): [ RSA SHA2 256/512 key upgrade support libssh2 #536 by willco007 · Pull Request #626 · libssh2/libs... ]
[13:29:54] <Botje> or .. maybe not.
[13:30:07] <Botje> but the libssh2 page does not mention ssh-rsa256
[13:30:07] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[13:32:22] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 265 seconds)
[13:32:33] <wowas> hm. Thanks
[13:33:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 265 seconds)
[13:44:39] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:54:02] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[13:57:37] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:58:08] *** Quits: shlomo_ (~shlomo@178.208.162.49) (Quit: Leaving)
[14:06:41] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 265 seconds)
[14:10:17] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[14:14:59] *** Joins: xenial-user5 (~androirc@20014C4C17E1D2004D3C94014F7C9DC1.catv.pool.telekom.hu)
[14:16:28] *** Joins: hethw (~heth@85.14.7.247)
[14:16:55] <hethw> is there a way to ignore warnings for a block of code? like my favourite "Wide character in print at"
[14:16:56] * GumbyPAN CPAN Upload: Net-DNS-1.32_02 by NLNETLABS https://metacpan.org/release/NLNETLABS/Net-DNS-1.32_02
[14:18:10] <Mandevil> hethw: Yes, but you probably want to fix things instead.
[14:18:53] <hethw> yeah, let's add encode decode to the code everywhere no thanks
[14:19:01] <Mandevil> At any rate, 'no warnings' is a thing
[14:19:14] *** Joins: proller (~p@2a02:6b8:b081:1::1:33)
[14:20:56] *** Quits: wowas (~wowas@212.87.135.94) (Read error: Connection reset by peer)
[14:21:33] <hethw> so what's the way?
[14:21:48] <Mandevil> Use the 'no warnings' pragma.
[14:21:54] <Mandevil> To disable warnings.
[14:22:01] <hethw> that wont work for a block of code or it will?
[14:22:09] <Mandevil> It will.
[14:22:23] <Mandevil> https://perldoc.perl.org/warnings
[14:22:23] <Paperbot> Link title(s): [ warnings - Perl pragma to control optional warnings - Perldoc Browser ]
[14:28:40] <choroba> I have a question related to Dist::Zilla. I added some code and tests to PAUSE::Users in https://github.com/neilb/PAUSE-Users/pull/2
[14:28:40] <Paperbot> Link title(s): [ Use real XML parsers if available by choroba · Pull Request #2 · neilb/PAUSE-Users · GitHub ]
[14:28:55] <choroba> I'd now like to extend the dist.ini reflecting this change
[14:29:43] <choroba> I don't want to add XML::LibXML and XML::Twig as dependencies of the dist
[14:30:12] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:20] <choroba> I tried this: https://github.com/choroba/PAUSE-Users/commit/f8f20ea9fe04e85a3b9a978f0d81cc41549d877a
[14:31:20] <Paperbot> Link title(s): [ Update dist.ini · choroba/PAUSE-Users@f8f20ea · GitHub ]
[14:31:46] <choroba> dzil then lists the XML* modules under authordeps, but not under listdeps --author
[14:31:57] * GumbyPAN CPAN Upload: HTML-Inspect-1.00 by MARKOV https://metacpan.org/release/MARKOV/HTML-Inspect-1.00
[14:32:35] <choroba> should I use recommends or suggests instead and if so, how?
[14:34:17] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:35:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:55:25] *** Quits: proller (~p@2a02:6b8:b081:1::1:33) (Ping timeout: 240 seconds)
[15:02:09] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:16:37] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[15:17:01] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:38:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:45:36] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:49:49] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[15:50:14] *** Joins: proller (~p@2a02:6b8:0:40c:7894:e2fe:b9f4:1716)
[15:50:37] *** Joins: yzhernand (~yzhernand@2607:fb90:df89:4d6e:20ce:5aff:feb5:bf40)
[15:57:03] *** Quits: yzhernand (~yzhernand@2607:fb90:df89:4d6e:20ce:5aff:feb5:bf40) (Ping timeout: 252 seconds)
[15:57:16] *** Joins: yzhernand (~yzhernand@2607:fb90:df89:4d6e:20ce:5aff:feb5:bf40)
[16:00:29] <xq> hethw: "wide character in print" means your code is broken
[16:01:20] *** Joins: bmeneg (~bmeneg@2001:1284:f016:a9aa:4d0c:cd66:2de5:26b8)
[16:01:21] <xq> if anything, perl is being lenient with you instead of simply crashing (like it should IMO)
[16:03:30] <LeoNerd> "Yo char's so wide...." jokes
[16:04:41] *** Joins: kensanata (~user@user/kensanata)
[16:06:44] <kensanata> I have a module using ExtUtils::MakeMaker; and I think it likes to create empty lib/**/Copyright and script/Copyright files, but I don't remember seeing any documentation about this. Does CPAN want me to do anything, here? I have a LICENSE file in my repo, that is not enough?
[16:13:33] *** Quits: brunoramoslu (~brunoramo@94.252.122.118) (Ping timeout: 252 seconds)
[16:13:58] <rindolf> kensanata: see https://github.com/shlomif/how-to-share-code-online
[16:13:59] <Paperbot> Link title(s): [ GitHub - shlomif/how-to-share-code-online: How to share source code on online forums in order to ... ]
[16:17:08] * GumbyPAN CPAN Upload: OODoc-2.02 by MARKOV https://metacpan.org/release/MARKOV/OODoc-2.02
[16:17:08] * GumbyPAN CPAN Upload: OODoc-Template-0.17 by MARKOV https://metacpan.org/release/MARKOV/OODoc-Template-0.17
[16:17:52] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[16:17:59] <hethw> xq, printing wide chars to file doesn't seem broken
[16:18:22] <hethw> or in STDERR
[16:18:45] <haj1> hethw: Perl covers up for the error, but the code is still broken
[16:19:03] *** Quits: yzhernand (~yzhernand@2607:fb90:df89:4d6e:20ce:5aff:feb5:bf40) (Ping timeout: 252 seconds)
[16:20:23] *** Joins: yzhernand (~yzhernand@64-18-144-8.starry-inc.net)
[16:20:44] <xq> hethw: perl's public API (function print or say or warn) under given condition (no io layer) expects bytes
[16:20:48] <ilmari> kensanata: nothing in ExtUtils::MakeMaker itself creates such files, please show your code using the pste link in the topic
[16:21:05] <ilmari> *paste
[16:21:30] <xq> hethw: you are feeding it data of another type. but instead of crashing it just tries to do its best
[16:22:06] <hethw> xq, that's great, but when it's not documented it's unnice
[16:22:44] <hethw> also everything should take utf8 chars as input when perl is utf8 (that's my idea of utf8 language of course)
[16:23:02] <hethw> I assume it's some kind of interoperability reason
[16:23:09] <hethw> or legacy stuff
[16:23:09] <kensanata> ilmari: Since I also don't see anything like that in my code, I have nothing to show. I'll try and discover whether the editor might be creating these files.
[16:23:15] <Mandevil> hethw: Unfortunately, backwards compatibility...
[16:23:38] <xq> hethw: filesystems and network streams contain bytes, made of 8 bits each
[16:23:46] <hethw> Mandevil, wouldn't accepting utf8 be compatible?
[16:23:58] <Mandevil> No, it wouldn't.
[16:24:00] <hethw> why
[16:24:10] <haj1> This would need another way to distinguish between text and binary files, for a start
[16:24:15] <Mandevil> Certain things could break.
[16:24:26] <xq> you cannot print something as complex and magical as a decoded unicode character into a container that can only store bytes
[16:24:34] <xq> you have to somehow flatten it
[16:24:37] *** Quits: yzhernand (~yzhernand@64-18-144-8.starry-inc.net) (Ping timeout: 240 seconds)
[16:24:37] <xq> that's encoding
[16:26:01] <Mandevil> IO::File doesn't support '-|' ... :-I
[16:27:31] *** Joins: brunoramoslu (~brunoramo@94.252.122.88)
[16:27:49] <xq> hethw: print/say/warn will take characters, but they need to be instructed (io layer via binmode or open parameters) to encode them into some byte representation
[16:28:02] <xq> UTF-8 is the currently popular one
[16:28:08] <xq> but there have been many, many others
[16:28:43] <hethw> I think I understand, partly
[16:28:59] <hethw> so I can use binmode..utf8?
[16:29:04] <Mandevil> Yes.
[16:29:06] <hethw> before printing to file
[16:29:18] <Mandevil> Just stick it at the beginning of your program and be done with it.
[16:29:28] <hethw> not so simple
[16:29:30] <hethw> haha
[16:29:32] <hethw> but thanks
[16:29:37] <Mandevil> You still need to decode inputs.
[16:29:52] <choroba> you can binmode the input handle
[16:30:03] <Mandevil> Oh yes, but input from say, web requests...
[16:30:03] <hethw> I do everything works except the warning
[16:30:58] <haj1> The warning means: If you happen to print a character in the codepoint range between 128 and 255, you'll end up with garbage
[16:31:18] <haj1> These characters are not "wide" in Perl's sense, so they are printed unencoded
[16:39:37] *** Joins: tobybl (~tobybl@213.31.132.232)
[16:39:43] <haj1> https://l.perl.bot/p/jg35az for a demo
[16:39:44] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[16:44:26] <hethw> aha
[16:48:01] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[16:51:02] <vms14> https://i.ibb.co/BNsZSdy/wtf.png
[16:51:32] <vms14> https://paste.debian.net/1222556/
[16:51:32] <vms14>  
[16:51:34] <Paperbot> Link title(s): [ debian Pastezone ]
[16:51:50] <vms14> I've made a paint for the root window
[16:52:00] <vms14> to erase you use windows XD
[16:53:55] <vms14> C and xlib was a pain in the ass, with Perl and X11::Protocol is kind of fine
[16:56:20] <pragma-> C is usually a pain in the ass.
[16:57:02] <vms14> yes, but I have to write some xs as I need to load images
[16:57:44] <huf> it's not an unreasonably large buttplug, that's java
[16:57:50] <huf> it's more of a rusty nail in the sinuses
[16:57:59] <vms14> I've used xlib in C and clx in common lisp, in lisp I had to read the image by myself so I've used the netpbm format, which is easy to parse, but my function was slow
[16:58:33] <vms14> the thing is I've managed to have a sprite waking on the screen with both, and now I'd like to do it in perl
[16:59:19] <vms14> the sprite is just a window using the xshape extension to change its form to the shape of the sprite for every frame in the walking animation
[16:59:40] <Mandevil> huf: Ugh
[17:00:03] <vms14> but in Perl I have no way to load an image and take a pixmap from that
[17:00:07] *** Joins: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net)
[17:00:07] <pragma-> i'd rather have an unreasonably large buttplug up the arse than a rusty nail up the sinus, mate
[17:00:35] <hxx> What's the recommended way to compare two files and check which file is newer?
[17:00:41] <Mandevil> Or if you take up C++, it's both at the same time! ;-)
[17:00:42] <vms14> so it's likely I'll have to bind the XpmReadBitmapFile C function
[17:00:52] <LeoNerd> I'd use File::stat and compare the the  stat($path)->mtime
[17:01:01] *** Quits: xenial-user5 (~androirc@20014C4C17E1D2004D3C94014F7C9DC1.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[17:01:19] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:01:49] <vms14> hxx also note that stat sets a magic _ variable for using that result several times
[17:01:50] <rindolf> hxx: i wrote https://metacpan.org/pod/File::ShouldUpdate
[17:01:50] <Paperbot> Link title(s): [ File::ShouldUpdate - should files be rebuilt? - metacpan.org ]
[17:02:12] * GumbyPAN CPAN Upload: App-Phoebe-4.04_01 by SCHROEDER https://metacpan.org/release/SCHROEDER/App-Phoebe-4.04_01
[17:02:28] <hxx> Thanks rindolf.
[17:02:56] <rindolf> hxx: you're welcome 
[17:04:15] <vms14> where is the _ variable documented?
[17:04:55] <Mandevil> perlvar?
[17:05:06] <LeoNerd> It's not a variable. It's weird specialsnowflake syntax of the filetest operators
[17:05:15] <ilmari> vms14: there is no _ variable. there's $_ and @_ (and %_, but core doesn't use that for anything)
[17:05:55] <LeoNerd> E.g.   -r _  is compiled as a special form of -r that reüses the result of the most recent stat()-like operatoin
[17:05:59] <LeoNerd> *operation
[17:06:20] *** Joins: yzhernand (~yzhernand@2607:fb90:df89:4d6e:b4c2:13ff:fe3d:18a4)
[17:06:26] <pragma-> so the _ goes on top of the u!
[17:06:44] <ilmari> no, that's a diaeresis, not a macron
[17:06:46] <pragma-> oh wait, my font is too small to see that it's two dots
[17:06:49] <vms14> https://www.perlmonks.org/?node_id=613621
[17:06:50] <pragma-> indeed
[17:06:51] <Paperbot> Link title(s): [ About Special Underscore Filehandle ]
[17:07:34] <hxx> I wanted to make a simple perl script to compile a simple program, File::ShouldUpdate looks like what I need for perl to know if a file has been modified or not for recompile.
[17:08:13] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[17:08:17] <LeoNerd> Are you reinventing make(1) ?
[17:08:46] <vms14> hxx: then just use the module, but note there exists perl make
[17:09:01] <vms14> and a lot of modules to bundle stuff
[17:09:35] <vms14> even h2xs -A -n modulename could be useful xD
[17:10:17] <vms14> if it's for a quick dirty script you could just go with that module
[17:10:41] <vms14> if your goal is to learn or to provide something then is nice to invest some time
[17:10:45] *** Quits: yzhernand (~yzhernand@2607:fb90:df89:4d6e:b4c2:13ff:fe3d:18a4) (Ping timeout: 252 seconds)
[17:11:23] <xq> vms14: _ is documented in perlfunc under -X
[17:11:24] <vms14> at least have a look at https://perldoc.perl.org/ExtUtils::MakeMaker
[17:11:25] <Paperbot> Link title(s): [ ExtUtils::MakeMaker - Create a module Makefile - Perldoc Browser ]
[17:12:33] <hxx> Also with perl, is there an easier way for perl to be used with a C/C++ library other than xs? With python it's built right in to read a shared library such as .so file.
[17:12:39] <vms14> xq thanks, I wasn't able to find it in google because $_ is shadowing it
[17:12:58] <vms14> hxx: Inline module
[17:13:15] <vms14> but it's likely you'll end using xs 
[17:13:26] <vms14> it's easy at least a hello world
[17:13:36] <hxx> I just want to use perl or python to make a graphical user interface for a C library.
[17:13:54] <genio> hxx: FFI and XS are your options, really.
[17:13:57] <xq> hxx: you can use FFI
[17:14:31] <xq> https://metacpan.org/pod/FFI::Platypus
[17:14:31] <Paperbot> Link title(s): [ FFI::Platypus - Write Perl bindings to non-Perl libraries with FFI. No XS required. - metacpan.org ]
[17:14:37] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[17:15:28] <vms14> https://paste.debian.net/1222558/ just ignore the xpm include and the readbitmap line and it's a helloworld 
[17:15:29] <Paperbot> Link title(s): [ debian Pastezone ]
[17:15:49] <vms14> also this readbitmap line won't work as it's not even that name xd
[17:16:21] <vms14> but before MODULE  PACKAGE ... you an put all the C you want
[17:16:45] <vms14> and after is xs language which tries to automate conversion stuff for you
[17:17:13] * GumbyPAN CPAN Upload: App-Phoebe-4.04_02 by SCHROEDER https://metacpan.org/release/SCHROEDER/App-Phoebe-4.04_02
[17:17:14] <vms14> there is a book named Extending and Embedding Perl, it can give you a nice introduction 
[17:17:38] <vms14> it shows also the Inline module and stuff alike
[17:18:41] <hxx> You think for operating systems like windows it would be easier to use C directly for the GUI rather than perl or python? Because both are a PITA to distribute on windows.
[17:18:55] <vms14> and btw hxx using perl for creating a gui application won't satisfy you compared with python
[17:19:03] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 265 seconds)
[17:19:17] <LeoNerd> I'm not sure why.. they're equivalent in power
[17:19:20] <vms14> but you have gtk
[17:19:27] <LeoNerd> I've written fairly big things in GTK with Perl
[17:19:33] <vms14> LeoNerd: not about power, but gui libraries
[17:19:41] <vms14> yo don't have so many options in perl
[17:19:46] <LeoNerd> Usually the things that annoy me there are GTK and not the Perl part
[17:19:53] <xq> in my experience C++ is the most used language for cross-platform GUIs
[17:19:57] <vms14> perl isn't annoying
[17:20:00] <LeoNerd> (e.g. I gave up trying to get GtkRibbon to scroll the labels)
[17:20:09] <xq> and in windows-only world, C#
[17:20:38] <xq> which is somewhat cross platform too, but this varies from application to application
[17:20:45] <vms14> it just makes your life easier, but you, the perl devs, don't seem to be much involved in providing desktop applications with Perl
[17:21:22] <vms14> maybe also part of a reason of why there is 0 gamedev in perl
[17:21:34] <vms14> indie gamedev*
[17:21:44] <LeoNerd> Perhaps. I can't be *everywhere* after all ;)
[17:21:47] <xq> you can develop browser games just fine
[17:22:00] <vms14> yeah, I like the X11::Protocol module a lot
[17:22:17] <vms14> just trying it, but it's the equivalent of xlib and clx
[17:22:19] <LeoNerd> What are your opinions on XCB?
[17:22:27] <vms14> never tried xcb
[17:22:29] <LeoNerd> I've generally like that more than actual Xlib
[17:22:31] <LeoNerd> At least form C
[17:22:45] <hethw> xq, haj1 thanks for the explanations
[17:23:41] <hxx> I'll just stick to C# on windows for the GUI, qt or whatever for other operating systems. 
[17:23:42] <LeoNerd> xcb is a separate implementation. It's basically just a bunch of sender/receiver function pairs to talk the X11 protocol over the usual socket, so it maps nice and cleanly to the real protocol
[17:23:52] <vms14> xq thought people turned to java when wanted to write a gui app
[17:24:02] <LeoNerd> Whereas Xlib has a bunch of weird... opinions. And farrrrrr too much clientside logic hidden in weird places
[17:24:04] *** Joins: yzhernand (~yzhernand@2607:fb90:df28:8855:cc46:c8ff:fe52:1edd)
[17:24:39] <vms14> LeoNerd: xlib is more close to the protocol, and the reason X11::Protocol resembles to xlib
[17:24:54] <hxx> OpenBSD makes extensive use of perl. Perl was just designed for traditional unix, it feels alien on MacOS or windows.
[17:24:54] <vms14> idk how complete is that module btw
[17:25:06] <vms14> hxx just look at git dependencies
[17:25:22] <vms14> and almost any web browser will require perl for some random reason
[17:25:48] <vms14> perl is omnipresent, just people don't notice
[17:26:07] <hxx> I'll compile my projects purely with perl, no make or cmake, just perl. :D
[17:26:19] <vms14> maybe not installed in base, but will end being there
[17:28:00] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:28:21] *** Quits: yzhernand (~yzhernand@2607:fb90:df28:8855:cc46:c8ff:fe52:1edd) (Ping timeout: 252 seconds)
[17:29:03] *** Joins: yzhernand (~yzhernand@2607:fb90:df28:8855:bc92:8cff:fe53:6592)
[17:29:08] <vms14> hxx: perl can do almost whatever you want, if not, you have xs or you can embed perl in C
[17:29:46] <vms14> also if you learn some xs it's likely you'll end being able to automate it
[17:29:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:30:04] <vms14> or to make a better interface for you
[17:30:47] <Mandevil> Why the hell does sysread() block here: https://l.perl.bot/p/qdkmef
[17:30:47] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:30:59] <hethw> I'm curious why wasn't perl split in two versions, legacy and new where utf8 works normal without legacy stuff
[17:31:08] <vms14> I'll just say that the more time you invest with Perl, the more productivity you can take from it, and that does not apply to all languages
[17:31:52] <LeoNerd> hethw: If you want to make a new language, go for it
[17:32:03] <LeoNerd> One of the biggest "selling points" about perl is that it runs everything that is on CPAN
[17:32:08] <vms14> and what is nice is that it tends to not hide implementation stuff, so you can edit the language at several levels
[17:32:12] <LeoNerd> And all of the existing code everyone has everywhere else
[17:33:24] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:33:31] *** Quits: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[17:35:00] *** Quits: manjaroi3 (~manjaro-i@125.131.114.50) (Ping timeout: 265 seconds)
[17:36:27] *** Quits: hethw (~heth@85.14.7.247) (Remote host closed the connection)
[17:37:54] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:39:35] <xq> Mandevil: if you want sane nonblocking read, you should use an event loop
[17:39:58] <xq> it looks like you are in a Mojolicious application which means you already have one
[17:40:22] <Mandevil> xq: There's something weird going on, I'm trying to figure it out.
[17:40:37] <vms14> xq if not mojo, which event loop do you recommend?
[17:40:40] *** Joins: hethw (~heth@82.118.240.146)
[17:40:45] <ilmari> Mandevil: sysread blocks until there's _some_ data available
[17:40:55] <xq> take a look at Mojo::IOLoop first
[17:40:56] <Mandevil> ilmari: The problem is the fdopen
[17:41:05] *** Quits: yzhernand (~yzhernand@2607:fb90:df28:8855:bc92:8cff:fe53:6592) (Ping timeout: 268 seconds)
[17:41:10] <vms14> I assume threads is discouraged, so we need to go for event driven
[17:41:14] <xq> and then at Mojo::IOLoop::Stream or Mojo::IOLoop::Subprocess
[17:41:16] <ilmari> Mandevil: you said sysread blocked
[17:41:17] <Mandevil> How do I get IO::Handle from normal file handle from open()?
[17:41:24] <Mandevil> ilmari: I thought it did, but I was wrong.
[17:41:33] <Mandevil> It's the fdopen.
[17:41:54] <ilmari> Mandevil: anyway, you're using Mojo, use its functionality for this, as pointed out by xt
[17:41:58] <ilmari> xq, even
[17:42:12] <Mandevil> ilmari: Hm, right
[17:42:20] <hethw> re
[17:42:28] <xq> vms14: Mojo ioloop is the one with the friendliest interface. IO::Async is arguably more powerful (more bells and whistles)
[17:42:46] <xq> both have equally horrible documentation from hell, so a tie there
[17:43:11] <vms14> xq: something that is "general purpose", or better said, something that replaces threads.pm
[17:43:27] <ilmari> vms14: threads.pm is not an event loop
[17:43:42] <ilmari> perlbot: tell vms14 about threads
[17:43:43] <perlbot> vms14: The use of interpreter-based threads in perl is officially discouraged (see http://p3rl.org/threads ) - please let us help you find a better way (see also http://goo.gl/yMZeag for more details, and https://goo.gl/o8PwA7 for some alternative options)
[17:43:49] <xq> do not confuse executing several things in parallel with waiting on several things in parallel
[17:43:49] <vms14> ilmari but it's discouraged, so what alternatives we have
[17:44:22] <vms14> ttp://goo.gl/yMZeag
[17:44:58] <xq> future wrappers and MCE
[17:45:10] <vms14>  xq link is broken?
[17:45:13] <vms14> https://www.perlmonks.org/index.pl?node_id=288022
[17:45:16] <Paperbot> Link title(s): [ Things you need to know before programming Perl ithreads ]
[17:45:52] <vms14> says error for me
[17:46:23] <ilmari> perlbot: tell vms14 about async
[17:46:23] <ilmari> perlbot: tell vms14 about async
[17:46:23] <ilmari> huh, am I being rate-limited?
[17:46:23] <ilmari> vms14: ask perlbot about async
[17:46:23] <perlbot> vms14: Asynchronous event-driven IO is awesome in Perl with POE, IO::Async, IO::Lambda, Mojo::IOLoop, Reflex among others; made nicer using Future, Mojo::Promise, or Promises
[17:46:23] <perlbot> vms14: Asynchronous event-driven IO is awesome in Perl with POE, IO::Async, IO::Lambda, Mojo::IOLoop, Reflex among others; made nicer using Future, Mojo::Promise, or Promises
[17:46:32] <vms14> btw you could have made an error.html
[17:47:08] <ilmari> vms14: who what where?
[17:47:14] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (Ping timeout: 252 seconds)
[17:47:21] <xq> vms14: https://metacpan.org/pod/Future::Utils#repeat+foreach
[17:47:21] <Paperbot> Link title(s): [ Future::Utils - utility functions for working with Future objects - metacpan.org ]
[17:47:49] *** Joins: DrHyde (~david@bytemark.barnyard.co.uk)
[17:47:51] <xq> also fmap_void and  friends in the same document
[17:47:55] <vms14> had a quick look at future while looking for events in perl
[17:48:15] <Mandevil> My brain is going to explode...I switched to Mojo::IOLoop::Stream and the 100% CPU usage is back.
[17:48:20] <xq> this will execute multiple things at the same time, without asking too many questions
[17:48:21] <LeoNerd> Ohgod don't recommend that for /new/ code
[17:48:33] <LeoNerd> If you want a future-based foreach loop, just use async/await in a perfectly normal foreach loop
[17:48:46] <vms14> Mandevil: another proof that the mojo suite is really nice
[17:48:54] <vms14> or maybe you were doing bad stuff
[17:49:00] <vms14> or both :D
[17:49:01] <xq> LeoNerd: they are asking about parallel execution, not async
[17:49:06] <Mandevil> vms14: What???
[17:49:15] <LeoNerd> And?
[17:49:25] <LeoNerd> My suggestion vs. yours are equivalent
[17:49:25] <vms14> the cpu usage
[17:49:42] <LeoNerd> repeat+foreach is just a different way to write a foreach loop. But we have async/await now, so use that
[17:50:01] <xq> another option is https://metacpan.org/pod/MCE::Map
[17:50:01] <Paperbot> Link title(s): [ MCE::Map - Parallel map model similar to the native map function - metacpan.org ]
[17:50:02] <Mandevil> https://l.perl.bot/p/7bc2ft
[17:50:03] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:50:09] <xq> and other MCE:: stuff
[17:50:26] <xq> it does not handle errors too gracefully though
[17:50:32] <vms14> well I was asking for a replacement of threads.pm
[17:50:54] <vms14> as threads seems to be a no go in perl seems that we should go for event driven
[17:51:22] <LeoNerd> It's always a bad question to start from
[17:51:36] <vms14> which is better since most thread usage would force to provide some event system
[17:51:43] <LeoNerd> Start from the problem you are attempting to solve, not the (wrong) tool you thought might help you solve it
[17:51:46] *** Joins: gast0n (~g4570n@user/gast0n)
[17:52:09] <vms14> right depending on the use case different modules would be choosen
[17:53:52] <xq> so what problem are you solving?
[17:54:01] <xq> one that required threads
[17:54:33] <vms14> no one, just saw threads is discouraged and wanted to know what alternatives are
[17:54:46] <LeoNerd> Hitting yourself on the head with a hammer, is also discouraged
[17:54:56] <LeoNerd> We can't really discuss what alternatives there are to it
[17:55:09] <vms14> but no "general" alternative exists
[17:55:35] <xq> the two above are somewhat general
[17:56:00] <xq> another one that was given to me for my use case is "don't use perl"
[17:56:10] <Mandevil> The thing consuming 100% cpu is "tail -f" ... what the hell?
[17:56:16] <xq> the use case is the key here
[17:56:45] <vms14> $cpan{$use_case}
[17:57:55] *** Joins: yzhernand (~yzhernand@2607:fb90:df28:8855:bcd8:daff:fef9:d746)
[17:57:56] * LeoNerd idly ponders a pragma module to inject a /i on every regexp match;  use case
[17:58:02] <LeoNerd> Or maybe it should be  no case;
[17:58:13] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[17:58:34] *** Joins: ztx (~ztx@user/ztx)
[18:01:54] <ilmari> Mandevil: https://metacpan.org/pod/Mojo::IOLoop::Tail?
[18:01:55] <Paperbot> Link title(s): [ Mojo::IOLoop::Tail - IOLoop interface to tail a file asynchronously - metacpan.org ]
[18:02:11] <Mandevil> ilmari: Aaaaaaaaaaaa.
[18:02:13] *** Quits: yzhernand (~yzhernand@2607:fb90:df28:8855:bcd8:daff:fef9:d746) (Ping timeout: 240 seconds)
[18:02:24] <Mandevil> ilmari: That module is fundamentaly broken.
[18:02:35] <Mandevil> ilmari: That's where I started anyway.
[18:03:37] *** Joins: yzhernand (~yzhernand@2607:fb90:df28:8855:5874:1fff:fe4e:7ac3)
[18:05:14] *** Joins: dacav (~dacav@h94-245-9-205.cust.a3fiber.se)
[18:05:26] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[18:07:49] *** Quits: yzhernand (~yzhernand@2607:fb90:df28:8855:5874:1fff:fe4e:7ac3) (Ping timeout: 240 seconds)
[18:08:01] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[18:08:24] <Mandevil> I don't understand how am I supposed to use Mojo::IOLoop::Stream.
[18:08:34] <Mandevil> It doesn't seem to work :(
[18:08:47] <xq> runnable code
[18:08:50] <xq> https://paste.debian.net/hidden/83e1afef/
[18:08:51] <Paperbot> Link title(s): [ Debian Pastezone ]
[18:08:58] <xq> create file /tmp/lol
[18:09:03] <xq> start the application
[18:09:11] <xq> then do echo foo >> /tmp/lol
[18:09:17] <Mandevil> That's like exactly what I have!
[18:09:18] <xq> no 100% cpu load observed
[18:09:22] <xq> no, it's not
[18:09:54] <Mandevil> Huh, what's different there?
[18:09:57] <xq> again, this is copy-pasteable runnable code
[18:10:05] <xq> I'm not sure what your complaints are
[18:10:24] <xq> you can use a helpful unix utility diff to find differences between two text files
[18:10:30] <Mandevil> You have '$stream->start'
[18:10:37] <Mandevil> I didn't know that's needed.
[18:10:47] <xq> it's literally in the synopsis of the module
[18:10:53] <Mandevil> I see.
[18:10:58] <xq> all works?
[18:11:06] <Mandevil> Yes
[18:11:10] <xq> good then
[18:11:19] * xq off to eat
[18:11:22] <Mandevil> Thanks a million!
[18:13:35] *** Quits: jplesnik (~jplesnik@83.240.62.176) (Quit: Leaving)
[18:15:33] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[18:16:06] <Mandevil> xq: Fun thing... when you add '-n 0' to the tail, the problem reappears.
[18:16:56] <Mandevil> xq: Hm, I think that's the 15 sec timeout that's there by default.
[18:17:22] <Mandevil> Yeah, adding ->timeout(0) helps it
[18:19:31] <Mandevil> Still, why does a stream that's not started consume 100% cpu?
[18:20:37] <Altreus> maybe it's mining bitcoin in its idle cycles
[18:20:58] <Mandevil> Hah, that's the kraih's master plan!
[18:21:19] * GumbyPAN CPAN Upload: Database-Async-0.017 by TEAM https://metacpan.org/release/TEAM/Database-Async-0.017
[18:26:35] <Mandevil> There's still some issue when I put the code into a Mojolicious server...
[18:28:06] <Mandevil> https://l.perl.bot/p/l95649 ... probably still not correct.
[18:28:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[18:30:58] <kraih> oh no... busted :)
[18:35:04] *** Joins: monkey_ (~user@181.114.17.106)
[18:35:15] *** Quits: ivzhh (~ivzhh@S0106f85e42a00a1f.cg.shawcable.net) (Quit: WeeChat 2.8)
[18:35:32] *** Parts: disconnect_me (~marcin@gl115-41.master.pl) ()
[18:36:19] <Altreus> That's my reaction when I hear Busted are playing too!
[18:36:36] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[18:36:38] <Altreus> Apologies for reminding everyone that Busted happened
[18:37:12] *** Joins: ugjka (~ugjka@ugjka.net)
[18:38:25] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[18:38:36] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[18:39:55] <xq> Mandevil: I did not run your code but I think the stream destructor is executed at the end of startup()
[18:40:43] <xq> try putting `my $stream;` outside the function and changing `my $stream = ...` inside startup to `$stream = ...`
[18:41:24] <Mandevil> Yeah, that seems to fix it.
[18:41:32] <xq> all good?
[18:41:51] <Mandevil> I think it is.
[18:41:55] <xq> \o/
[18:42:01] <Mandevil> Except I don't understand the solution :)
[18:42:08] <Mandevil> Oh!
[18:42:16] <Mandevil> Of course, stream was local to the startup
[18:42:16] <xq> variable scope
[18:42:29] <Mandevil> Well, I should have noticed.
[18:42:46] <xq> thats what code review and #perl is for
[18:43:25] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[18:43:27] <Mandevil> I think I want this: Mojo::IOLoop::LineReader
[18:43:48] <xq> maybe
[18:43:59] <xq> the ::Tail thing looked good too
[18:44:50] <Mandevil> It doesn't work.
[18:45:05] <xq> not enough information
[18:45:06] <Mandevil> (Well, it does, but it consumes 100% cpu)
[18:45:19] <xq> still not quite there yet
[18:45:21] <Mandevil> It uses poll() on file.
[18:45:37] <Mandevil> So it spins the event loop at top speed.
[18:45:52] <LeoNerd> Oh, yeah don't do that
[18:46:12] <Mandevil> The thing is Mojo::IOLoop doesn't work on _files_.
[18:46:22] <Mandevil> At least not the way tail needs.
[18:46:33] <xq> I'm not convinced
[18:46:46] <LeoNerd> inotify, or a stat loop
[18:47:04] <Mandevil> xq: poll() syscall never blocks on a file.
[18:47:18] <LeoNerd> IO::Async::FileStream will do that. Likely Mojo has something similar
[18:47:44] <Mandevil> LeoNerd: The thing is that Mojo doesn't seem to have anything to that effect.
[18:47:50] <Mandevil> At least I didn't find anything.
[18:48:17] <Mandevil> xq: Install Mojo:IOLoop::Tail and run the example code...
[18:48:29] <vms14> simcop2387: will you update https://metacpan.org/pod/App::Nopaste::Service::Perlbot to use libera instead of freenode?
[18:48:29] <Paperbot> Link title(s): [ App::Nopaste::Service::Perlbot - Service provider for perl.bot - https://perl.bot/ - metacpan.org ]
[18:48:33] <Mandevil> xq: It'll put one core at 100%.
[18:49:25] <LeoNerd> That sounds like a good test case for a bug report then
[18:49:44] <Grinnz> Mandevil: like i said in #mojo, you can just use IO::Async::FileStream with mojo
[18:49:49] <Mandevil> LeoNerd: There's an issue on github dating 2017.
[18:50:06] <Mandevil> Grinnz: Yeah, I'll look at that when I get a moment.
[18:50:56] <xq> yeah it does load one core to 100%
[18:51:26] <xq> it also warns about some garbage in its regex
[18:51:37] <Mandevil> Yeah, that regex has extra '-' in there.
[18:51:50] <xq> Unescaped left brace in regex is passed through in regex; marked by <-- HERE in m/\G(.{ <-- HERE 1,-})$/
[18:52:07] <Grinnz> sounds like it wasn't updated for a few perl versions when that warning was added
[18:52:15] <xq> this module needs some fixing
[18:53:06] <Mandevil> That's what I set out to do :)
[18:53:14] <Mandevil> But my perl skillz are lacking
[18:54:32] <xq> also, if you want to work with syslog you need to keep in mind that it can get rotated
[18:54:52] <Mandevil> Yeah, but tail(1) handles that fine.
[18:54:59] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[18:55:06] <Mandevil> And Mojo::IOLoop::Tail has code to handle that as well.
[18:55:26] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[18:57:26] <LeoNerd> You could just pipeopen `tail`
[18:57:38] *** Joins: veesh_ (~veesh@89.237.99.253)
[18:57:47] <Mandevil> LeoNerd: But that's what I am doing currently.
[18:58:33] *** Quits: veesh (~veesh@5.28.165.25) (Ping timeout: 252 seconds)
[18:59:27] *** veesh_ is now known as veesh
[19:00:13] <gordonfish> LeoNerd: My cat managed to stick his tail in an open drain pipe outside this morning (and got it all gunked up) that I had been cleaning leaves out of.
[19:00:22] <simcop2387> vms14: sure, i completely forgot about it
[19:01:18] <gordonfish> ( cat | tail ) # Good thing I didn't need cut
[19:01:28] <vms14> simcop2387:           $arg{chan} ? (channel => "192.168.32.1:perlbot-libera:#perl") : (),   it's wrong what  should put there?
[19:01:51] <vms14> changed chan by channel, but nothing
[19:02:03] <simcop2387> oh right now announces are disable until i get to fixing the spam problem
[19:02:15] <simcop2387> but that looks right, see the source of perl.bot for the names too
[19:02:37] <vms14> so someday will automagically work if I let it this way?
[19:03:29] <simcop2387> yep, and i'll have the update here in about 5 minutes
[19:03:40] <vms14> nice :D
[19:03:46] <vms14> now I can spam shit here
[19:03:57] <vms14> prepare your eyes
[19:04:09] * gordonfish opens umbrella
[19:06:54] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[19:10:00] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[19:10:57] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[19:12:31] <vms14> simcop2387: can the perlbot load snippets from the pastebot?
[19:13:36] <simcop2387> not really but the eval server is the same on both
[19:15:57] <vms14> you could to optionally choose to print also the resulting code in irc along with the url and could work with the nopaste as additional flag
[19:16:14] <vms14> can be additional overhead for unnecessary feature
[19:16:20] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[19:16:41] <vms14> but I was atually thinking on giving a url from here like sweval: url
[19:17:18] <simcop2387> something that could do that isn't necessarily too hard.  the perl.bot links from the repaster will have the output but yea a way to fetch the output of a paste isn't a terrible idea
[19:20:27] <simcop2387> vms14: new channel list is up, should affect all nopaste clients now, and i'm going to release a new version of the command that points at the v2 api too
[19:20:51] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 265 seconds)
[19:22:34] <gordonfish> Something like perlbot fetch $pasteid as shown in url ?
[19:24:35] <simcop2387> i have to fix a routing issue on my own network first (not impossible just been lazy) and then i can get that working, there's an api for it already.  https://perl.bot/api/v2/paste?pasteid=... and you'll get json back
[19:25:41] <Mandevil> grinnz: IO::Async::FileStream ... this is parsing the data into lines, right?
[19:25:58] <Mandevil> (at least it seems to me so far)
[19:26:26] * GumbyPAN CPAN Upload: App-Nopaste-Service-Perlbot-0.005 by SIMCOP https://metacpan.org/release/SIMCOP/App-Nopaste-Service-Perlbot-0.005
[19:28:00] <Grinnz> no, the synopsis shows how to line buffer out though
[19:29:35] <Mandevil> Ah!
[19:29:48] <Mandevil> I just copy and pasted without much throught
[19:33:36] <Altreus> cargo-culted!
[19:36:27] * GumbyPAN CPAN Upload: Mojo-Darkpan-0.04 by RES https://metacpan.org/release/RES/Mojo-Darkpan-0.04
[19:36:27] * GumbyPAN CPAN Upload: CallBackery-0.40.2 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.40.2
[19:37:51] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[19:40:24] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[19:41:06] <vms14> you don't realize how easy is to make a window manager (a bad one)
[19:42:38] <vms14> http://perl.bot/p/7x8f58 this is a very bad paint script that draws lines in the root window
[19:42:39] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:43:06] <vms14> you can echo "perl script.pl" >.xinitrc and it will be a window manager xd
[19:44:04] <vms14> you can put in the code $x->QueryTree and see all the existing windows, then you can loop and manage them
[19:44:25] <Mandevil> Grinnz: I'm not sure what's wrong, but the loop doesn't appear to be running inside Mojo...
[19:44:39] <vms14> and make keybindings by listening to the events 
[19:44:40] <Grinnz> did you use IO::Async::Loop::Mojo?
[19:44:44] <Mandevil> Yes
[19:44:51] <Mandevil> https://l.perl.bot/p/777tri
[19:44:51] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:44:53] <Grinnz> are you running the singleton loop?
[19:45:00] <Mandevil> Oops!
[19:45:02] <Mandevil> I see it
[19:45:12] <Grinnz> heh
[19:45:18] <simcop2387> perlbot: search window manager
[19:45:18] <perlbot> simcop2387: [xmonad is a tiling X window manager written in Haskell] [screen is Screen is a full-screen window manager that multiplexes a physical terminal between several processes, typically interactive shells.  Read more here: http://www.gnu.org/software/screen/screen.html] 
[19:45:36] <vms14> used xmonad cause I wanted to learn haskell
[19:45:36] <simcop2387> hrm i thought there was one someone did entirely in perl that we had in there
[19:45:54] <vms14> why xmonad btw?
[19:46:10] <Mandevil> Grinnz: Yes, it works!
[19:46:15] <Mandevil> Grinnz: Thank you!
[19:46:17] <Grinnz> :)
[19:46:28] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[19:46:50] <vms14> we can create a better wm in perl
[19:46:57] <vms14> you can
[19:47:13] <simcop2387> i'd start by doing a wayland display server these days honestly.  then get xwayland in it
[19:48:08] <vms14> I don't use wayland for now
[19:48:30] <vms14> and hope netbsd does not decide to switch, although there are binaries
[19:49:55] <simcop2387> it'll likely happen eventually.  more because Xorg has been nearly unsupported (aside from randomly spaced bug fix releases) and is difficult or impossible to properly secure
[19:49:57] <vms14> https://jichu4n.com/posts/how-x-window-managers-work-and-how-to-write-one-part-i/
[19:49:58] <Paperbot> Link title(s): [ How X Window Managers Work, And How To Write One (Part I) ]
[19:50:43] <vms14> X11::Protocol should be enough to make a wm
[19:51:12] <vms14> there is in fact a wm called perlwm using this module but didn't manage to open a window there nor understand the code
[19:51:53] <vms14> version 001 is a whole file and 007 is much more "advanced"
[19:52:09] <vms14> but still meh
[19:52:55] <vms14> tried to hack stuff on that, but better to start from scratch
[19:53:40] <vms14> https://sourceforge.net/projects/perlwm/files/perlwm/
[19:53:41] <Paperbot> Link title(s): [ Perl Window Manager -  Browse /perlwm at SourceForge.net ]
[19:54:29] <simcop2387> yea i'd start from scratch and see if i could get it working based on an event loop like IO::Async just to be able to do any protocol work on another process to the other logic.
[19:54:41] <simcop2387> and i'd use X11::XCB instead
[19:55:25] <simcop2387> not sure if it supports enough for that but given the benefits of XCB it'd probably be worth it
[19:56:08] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 268 seconds)
[19:56:26] <vms14> simcop2387: my idea was to start by something that can be modified while running
[19:56:46] <simcop2387> might be doable but it sounds difficult/dangerous
[19:56:51] <vms14> like adding subs to a loop or alike
[19:57:13] <simcop2387> though using IO::Async::Functions that you create and destroy at runtime from the code being added might be good too
[19:57:24] <simcop2387> that'd help you isolate the state that the functions have easier
[19:58:35] <vms14> https://metacpan.org/pod/IO::Async::Function
[19:58:35] <Paperbot> Link title(s): [ IO::Async::Function - call a function asynchronously - metacpan.org ]
[20:00:01] <vms14> I have to look at the async module, actually the events come in a hash so they're very easy to manage, and you can register functions as callback with $x->input_handler
[20:00:45] <vms14> x events I mean
[20:01:44] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:02:07] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:03:40] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Remote host closed the connection)
[20:03:51] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[20:05:38] *** Quits: proller (~p@2a02:6b8:0:40c:7894:e2fe:b9f4:1716) (Remote host closed the connection)
[20:06:45] *** Joins: proller (~p@2a02:6b8:0:40c:8cd7:256a:5d19:5f55)
[20:14:08] <vms14> http://incise.org/tinywm.html explains fine
[20:14:08] <Paperbot> Link title(s): [ tinywm ]
[20:17:25] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[20:19:48] *** Joins: gast0n (~g4570n@user/gast0n)
[20:22:36] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[20:23:31] *** Quits: gast0n (~g4570n@user/gast0n) (Client Quit)
[20:25:01] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[20:36:21] *** Joins: hethw_ (~heth@85.14.7.247)
[20:38:24] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[20:38:37] *** Quits: hethw (~heth@82.118.240.146) (Ping timeout: 240 seconds)
[20:43:02] *** Quits: hethw_ (~heth@85.14.7.247) (Remote host closed the connection)
[20:43:20] *** Joins: hethw_ (~heth@85.14.7.247)
[20:48:49] *** Quits: Linux77 (~7Linux7@186.233.182.193) (Ping timeout: 265 seconds)
[20:49:10] *** Quits: hethw_ (~heth@85.14.7.247) (Ping timeout: 268 seconds)
[20:51:12] *** Joins: Linux77 (~7Linux7@186.233.179.130)
[20:57:17] *** Joins: Linux_77 (~7Linux7@186.233.183.58)
[20:57:48] *** Quits: proller (~p@2a02:6b8:0:40c:8cd7:256a:5d19:5f55) (Ping timeout: 268 seconds)
[20:58:13] *** Quits: Linux77 (~7Linux7@186.233.179.130) (Ping timeout: 240 seconds)
[21:02:09] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[21:02:17] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:04:42] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[21:11:36] * GumbyPAN CPAN Upload: Lab-Measurement-3.800 by AKHUETTEL https://metacpan.org/release/AKHUETTEL/Lab-Measurement-3.800
[21:12:05] *** Joins: Pixi (~Pixi@user/pixi)
[21:12:20] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[21:13:10] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[21:14:06] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[21:16:47] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[21:17:53] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[21:19:47] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:20:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[21:22:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 240 seconds)
[21:26:25] *** Joins: jpmh (uid510532@id-510532.helmsley.irccloud.com)
[21:27:31] <jpmh> I ahve an up-to-dat Net::SSLeay and LWP::Simple installed.  when I: get("http://domain") all works well - when I use https I get no data - what am I missing here?
[21:28:51] <Altreus> is the domain serving https?
[21:29:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:29:17] <LeoNerd> A given port won't be able to serve both http and https
[21:29:35] <LeoNerd> (*grumble* we could have made that possible but apparently STARTTLS was frowned upon that day)
[21:29:40] <LeoNerd> ((I still dislike this situation))
[21:29:44] <Altreus> the port is not mentioned ...
[21:30:00] <LeoNerd> Oh... Fair
[21:30:05] <jpmh> Altreus: and Lep:  The script that  am testing with is ONE line other than the use statements.  It woks on all of my other machines - just not this one
[21:30:13] <LeoNerd> Still, my grumble about STARTTLS stands ;) Even if unrelated to this particular situation
[21:30:33] <Altreus> sounds like something to figure out about that machine
[21:30:35] <jpmh> and yes, the site DOES server https and I rely on the get("http or https to tell it which port to use
[21:30:57] <Altreus> does LWP::Simple not honour us with exceptions or anything?
[21:31:06] <jpmh> Altreus: yes - and where do I start - it is a brand new install of debian on a Pi
[21:31:10] <Altreus> do you get no data or no response?
[21:31:23] <Altreus> start with something else, like curl :)
[21:31:57] <jpmh> Altreus: correct and $! is set to "No SUch File or Directory"
[21:32:08] <Altreus> :D what
[21:32:18] *** zer0bitz_ is now known as zer0bitz
[21:32:21] <jpmh> Altreus: curl and wget wotk perfectly
[21:32:29] <Altreus> oh I wonder if it's trying to use a temp file or something...
[21:32:32] <Grinnz> we only ever used STARTTLS for mail servers
[21:32:50] <Grinnz> for everything else, there's 2 ports
[21:32:59] <LeoNerd> I know :( it's sucky and Ireally really hate it
[21:33:02] <Grinnz> (mail servers get like 5, anyway, just because)
[21:33:07] <Altreus> Hope everyone appreciates error messages that don't say what the thing is that it can't
[21:33:13] <Altreus> cos everyone fucking writes them
[21:33:24] <Grinnz> Altreus: mysql?
[21:33:38] <jpmh> Altreus: EXACTLY - f it told me what file - I'd know where to start
[21:33:42] <Grinnz> and yes, LWP::Simple has no error handling, try HTTP::Simple
[21:34:25] <xenu> it's probably just a random leftover errno, unrelated to the actual error
[21:34:29] <xenu> what Grinnz said
[21:34:50] <jpmh> xenu: no - ther $! is NOT set before the get()
[21:35:12] <Grinnz> that doesn't mean it was set by the error that is preventing you from getting results
[21:35:24] <Grinnz> it could have been set by any random part of the process, since it's not a documented part of the LWP::Simple interface
[21:35:35] <Grinnz> it could have been sent by trying to load an optional module
[21:35:39] <Grinnz> set
[21:35:47] *** Joins: randir (~randir@95-25-138-85.broadband.corbina.ru)
[21:36:10] <Altreus> or it could have been set by something trying to open a socket and not checking whether it worked
[21:36:10] <Grinnz> LWP::Simple doesn't have error handling. it is a pretty useless module tbh
[21:36:38] <Grinnz> if you want oneliners, HTTP::Simple or ojo are better
[21:36:39] <Altreus> LWP::Simple appears to just be LWP->$_ for various methods
[21:37:06] <jpmh> Grinnz: when I switch to HTTP::Simple I get : IO::Socket::SSL 1.42 must be installed for https support
[21:37:14] <Grinnz> right, so install that
[21:37:52] <Grinnz> LWP::Simple probably errored from not being able to load ssl support, but it doesn't have the ability to tell you that, so
[21:38:12] <Grinnz> for LWP::Simple you need LWP::Protocol::https and not just IO::Socket::SSL
[21:39:36] <Altreus> oh that's why I couldn't find https in the protocol directory
[21:39:54] <Altreus> presumably that's to avoid having dependencies you "don't need" even though of course you do it's 2021
[21:40:07] *** Joins: magla (~gelignite@55d4e16d.access.ecotel.net)
[21:40:52] <LeoNerd> It's to avoid perl core shipping SSL because that's nontrivial
[21:40:54] <jpmh> Grinnz: YES - that does wotk - I mean adding rhe IO::Socket::SSL
[21:41:13] <Grinnz> LeoNerd: LWP isn't core
[21:41:19] <LeoNerd> Oh.. right
[21:43:00] <jpmh> MOST importantly though adding LWP::Protocol::https has solved the problem wit LEP::Simple, so I do not need to change my code at all - 
[21:43:00] <jpmh> THANK YOU ALL SO MUCH - this is one of the greatest things aboit per - the community
[21:43:15] <Grinnz> neat, irccloud ate my messages
[21:43:46] <Grinnz> LWP's ssl support is a mess of historic proportion, so ascribing any motivation to its design is difficult
[21:44:32] <xenu> well the main explanation is its age
[21:46:57] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[21:47:04] <Grinnz> jpmh: i'd recommend updating your code if you get the chance so you don't get unexplained failure in the future
[21:47:39] *** Quits: Michelle (~michelle@203.206.128.220) (Read error: Connection reset by peer)
[21:47:45] <Grinnz> jpmh: i'd recommend updating your code if you get the chance so you don't get unexplained failure in the future
[21:47:55] <Grinnz> sorry, irccloud is having issues
[21:48:22] *** Joins: Michelle (~michelle@2407:8800:bc20:200a:c46d:7956:f207:8cde)
[21:48:50] <vms14> could the perl debugger be used to provide an "extensible" program?
[21:49:09] <Altreus> whut
[21:49:43] <jpmh> Grinnz: actually I just udated the install script to ensure that the module is there - and the script in question to report
[21:50:41] <Grinnz> yes, but my point is that is just one of hundreds of possible error conditions you could encounter
[21:50:44] <Altreus> you'd think LWP would grumble if you tried to use a protocol it's not got a handler for
[21:50:55] <Grinnz> Altreus: it does, if you know how to check LWP for errors
[21:50:59] <Grinnz> which is... complex
[21:51:14] <jpmh> Altreus: yes - it's horrible that it doesn't tell us what the issue is
[21:51:18] <Altreus> Anything more complex than catch {} means use something else
[21:51:25] <Altreus> mojo, maybe? :D
[21:51:33] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[21:52:02] <Grinnz> LWP::Simple not reporting errors and LWP itself being complex to check for errors are two separate problems
[21:52:11] *** Joins: xenial-user5 (~androirc@20014C4C17E1D2004D3C94014F7C9DC1.catv.pool.telekom.hu)
[21:52:12] <Grinnz> both solved by not using LWP
[21:52:44] <jpmh> interestingly this is something new to the new Debian - the script that we use for installation has run on lyerally over 4000 machines in the past - so either the new Debian has something less pre-installed or the cpanm is not doing as good a job on dependencies
[21:53:04] <jpmh> Grinnz: YEP - but as I say - over 4000 installed and happy systems out there
[21:53:39] <Grinnz> perhaps the old versions of stuff were papering over the issue enough for it to work
[21:54:22] <jpmh> Grinnz: YEP
[21:54:35] <jpmh> anyway, just spun up a new OS from the distro that we use and with the mods to the install script all is working well - the way it did on the older debian - so thatk you all so much for your patience
[21:55:22] <xq> I think perl should have started shipping TLS support in core long time ago
[21:55:42] <LeoNerd> We all agree
[21:55:43] <LeoNerd> We don't know how
[21:55:44] <LeoNerd> Do explain how
[21:55:45] <jpmh> really though - why is this not a cpanm issue - or at least a configuration there - I installed Net::SSLeay and received no warning of dependency
[21:57:37] *** Joins: proller (~p@2a02:6b8:b081:7212::1:29)
[21:57:51] *** Quits: integral (sid296274@user/integral) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: mstevens (sid285816@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: ggherdov (sid11402@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: skaji (sid178483@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: Mithaldu_ (sid27181@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: odc (sid197788@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:58:46] *** Quits: celphi_ (sid97751@user/celphi) (Read error: Connection reset by peer)
[21:58:47] *** Quits: toddr (sid457681@tinside.irccloud.com) (Read error: Connection reset by peer)
[21:58:48] *** Quits: rjbs (sid498898@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[21:59:08] *** Joins: ggherdov (sid11402@id-11402.helmsley.irccloud.com)
[21:59:11] *** Joins: integral (sid296274@user/integral)
[21:59:13] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[21:59:16] *** Joins: Mithaldu_ (sid27181@id-27181.hampstead.irccloud.com)
[21:59:16] *** Joins: toddr (sid457681@id-457681.tinside.irccloud.com)
[21:59:17] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[21:59:18] *** Joins: skaji (sid178483@id-178483.tinside.irccloud.com)
[21:59:22] *** Joins: rjbs (sid498898@id-498898.uxbridge.irccloud.com)
[21:59:22] *** Joins: mstevens (sid285816@id-285816.tinside.irccloud.com)
[21:59:33] *** Joins: nrr__ (sid20938@id-20938.lymington.irccloud.com)
[21:59:57] <xq> LeoNerd: Make it a build time dependency for source package. On target operating systems that have package management, add the required binary packages (openssl?) as a dependency. On ones that don't, bundle it.
[22:00:02] <xq> How else?
[22:00:31] *** Joins: celphi_ (sid97751@helmsley.irccloud.com)
[22:00:55] <LeoNerd> OK, so now you've broken perl on VMS, and.. about half of the currently-supported OSes 
[22:01:30] <LeoNerd> Also what do you mean "add the packages" ?
[22:01:30] <Grinnz> Net::SSLeay is a dependency of IO::Socket::SSL, it doesn't do anything itself
[22:02:02] <Grinnz> LWP requires LWP::Protocol::https for https requests - HTTP::Tiny requires IO::Socket::SSL for https requests
[22:02:19] <Grinnz> these are the dependencies you need to be ensuring, they will bring in Net::SSLeay as needed
[22:02:46] <Grinnz> (mojo also needs IO::Socket::SSL)
[22:03:07] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:503d:b422:cfcd:fe5a) (Quit: Leaving)
[22:03:38] <xq> the other alternative would be 1. make perl fast enough to make pure fast math viable 2. implement said fast math
[22:03:50] <LeoNerd> The code isn't the main problem
[22:04:00] <LeoNerd> Other problems exist like: distribution of the root certs
[22:04:08] <LeoNerd> That's a whole faff and pain we'd rather not get into
[22:04:21] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:06:42] * GumbyPAN CPAN Upload: App-Phoebe-4.04 by SCHROEDER https://metacpan.org/release/SCHROEDER/App-Phoebe-4.04
[22:06:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[22:07:13] <xq> the main problem like with many other things is that no one seems to care enough to do anything
[22:07:24] <xq> or not paid enough to do anything
[22:07:33] <LeoNerd> I don't think either of those apply to me
[22:07:38] <LeoNerd> I literally don't know what to do
[22:07:47] <LeoNerd> If you want to do some research into the problem and /tell me what to do/ I will do it
[22:07:55] <LeoNerd> I even asked on p5p@ for people to reasearch. nobody has done
[22:08:01] <LeoNerd> If you could do that that would really improve matters
[22:08:21] <xq> that just illustrates the no one cares part
[22:08:28] <LeoNerd> You clearly care
[22:12:41] <LeoNerd> ... or perhaps not. You've gone quiet
[22:14:05] <xq> I am looking at prior art (Net:HTTP in Ruby) to see how they do it
[22:14:41] <LeoNerd> Ah, yes if you could. I asked people to research e.g. Python or Ruby... nobody did so I spent 5 minutes poking at python core source on github. I couldn't see ruby's equivalent
[22:15:40] <LeoNerd> https://www.nntp.perl.org/group/perl.perl5.porters/2021/12/msg262108.html  -- specifically this post
[22:15:40] <Paperbot> Link title(s): [ Re: OpenSSL alternative support WAS Re: Pre-RFC: support httpsout-of-the-box -  nntp.perl.org ]
[22:16:05] <xq> well, ruby depends on openssl
[22:16:27] <xq> according to debian: libruby2.7 has dependency libssl1.1
[22:16:40] <xq> so they went the way I descibed above
[22:16:44] <Grinnz> xq: i suggest reading the mailing list threads where these options were already significantly discussed by people who seem to care
[22:17:04] <LeoNerd> Just because a debian package has a dependency doesn't really answer the quesiton of how the actual source code is arranged
[22:17:12] <LeoNerd> Debian quite often adds extra deps all over the place, to solve things
[22:17:25] <Grinnz> we can't depend on a specific package manager, we can't even depend on having a system supported by openssl
[22:17:31] <LeoNerd> ^-- that
[22:18:08] <Grinnz> the current best option is to core Net::SSLeay and IO::Socket::SSL, and optionally build them if the system has openssl or libressl
[22:18:19] <Grinnz> and the other systems just have to deal with it 
[22:18:28] <xq> time to start be more demanding?
[22:18:31] <Grinnz> (they already have this problem anyway)
[22:18:44] <xq> also that sounds like a reasonable option
[22:18:45] <Grinnz> demanding of?
[22:18:56] <LeoNerd> Also,... Net::SSLeay is terrible, and OpenSSL is /terrible/. ...
[22:19:00] <xq> demanding of the platform perl runs on
[22:19:06] <Grinnz> no
[22:19:16] <LeoNerd> So if we're going to build a new thing we could at least build something that isn't these ;) LibreSSL is a nicer bet
[22:19:31] <Grinnz> anything that isn't able to build openssl or libressl already won't be able to use ssl in HTTP::Tiny
[22:19:49] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[22:20:17] <Grinnz> and anything other than coring those two modules will mean that we have to update HTTP::Tiny/LWP/Mojo/IO::Async::SSL/etc to use some other abstraction, or update IO::Socket::SSL to be able to use more than Net::SSLeay
[22:20:41] <Grinnz> Net::SSLeay already builds with libressl
[22:21:33] <Grinnz> but basically our options are 1. get IO::Socket::SSL working in core as-is, or 2. have core build ssl in whatever way and update some place in the toolchain to use the new things
[22:22:05] <Grinnz> IO::Socket::SSL seems like the easiest place, but i can't speak to implementation-wise
[22:22:13] *** Quits: deadmarshal (~deadmarsh@95.38.228.30) (Ping timeout: 240 seconds)
[22:22:37] <LeoNerd> Basically everything uses IO::Socket::SSL, and that (alone) uses Net::SSLeay. I don't know of anything else of significance that directly uses Net::SSLeay
[22:22:55] <LeoNerd> So a better mechanism could just replace that, and slot into I:S:SSL and generally make everything happy
[22:22:58] <Grinnz> it *would* be possible to get all the modules mentioned updated as they all have active maintainers, but it would still require volunteers to do so
[22:23:08] <Grinnz> yeah
[22:23:44] <xq> > Default gems: These gems are part of Ruby and you can always require them directly. You cannot remove them. They are maintained by Ruby core.
[22:23:53] <xq> https://github.com/janlelis/stdgems/blob/main/default_gems.json
[22:23:54] <Paperbot> Link title(s): [ stdgems/default_gems.json at main · janlelis/stdgems · GitHub ]
[22:24:01] <LeoNerd> I'm happy to add it to my TODO-heap but the current turnaround time in that is somewhere between 4 and 5 years. So if you want it any time sooner you might wanna find someone who isn't me ;)
[22:24:04] <xq> openssl is a default gem
[22:24:13] <xq> literally as core as possible
[22:24:27] <LeoNerd> Right. So does that mean ruby literally does not run on platforms where there is no openssl?
[22:25:06] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:6cfd:ed6c:3651:478)
[22:26:13] *** Joins: kensanata (~user@user/kensanata)
[22:30:36] <xq> instructions for building ruby from source https://github.com/ruby/ruby#how-to-compile-and-install do not contain requirements of openssl
[22:30:37] <Paperbot> Link title(s): [ GitHub - ruby/ruby: The Ruby Programming Language [mirror] ]
[22:30:38] <vms14>  LeoNerd: lol where is that todo list
[22:30:50] <LeoNerd> vms14: mostly in my head
[22:30:57] <xq> getting any more info would I think require actually downloading and trying to build the thing
[22:32:19] <vms14> RUBY_CONFIGURE_OPTS="--with-openssl-dir=/usr/local/opt/openssl""
[22:33:15] <vms14> seems to be a core dependency from x release
[22:33:30] *** Parts: art1 (~romeyke@p200300ccdf085d00d06c3b8f687a712f.dip0.t-ipconnect.de) ()
[22:33:46] <ilmari> is it actually required, or can you build an ssl-less ruby if you want to?
[22:34:06] <xq> I'm downloading it right now to find that answer
[22:34:20] <LeoNerd> excellent.. real progress on research :)
[22:34:25] <LeoNerd> make sure to post your findings to the thread
[22:36:44] <ilmari> given that openssl requires perl to build, it must remain possible to build a perl without openssl
[22:37:07] <LeoNerd> Hah!
[22:37:50] <ilmari> but making it an optional dependency, like the various dbm libraries, can make sense
[22:38:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 265 seconds)
[22:38:06] <vms14> ilmari seems its required
[22:38:08] <vms14> https://pkgsrc.se/lang/ruby26-base
[22:38:09] <Paperbot> Link title(s): [ pkgsrc.se | The NetBSD package collection ]
[22:38:24] <LeoNerd> ilmari: idle thought: could openssl build using miniperl?
[22:38:48] <ilmari> vms14: that just means that netbsd choses to build it with openssl
[22:39:06] <vms14> ilmari netbsd does not choose
[22:39:17] <vms14> it's not an optional package
[22:40:08] <vms14> ruby installs gem and I think that's the real reason of requiring ssl
[22:40:46] <vms14> why do you want to put openssl as dependency for perl?
[22:41:14] <vms14> even knowing that will break a lot of platforms supported
[22:41:16] <LeoNerd> Ask xq
[22:41:20] <ilmari> vms14: I'm saying the fact that the netbsd ruby packages requiring openssl isn't proof that ruby upstream requires openssl
[22:41:49] <ilmari> having to option to build a perl that can install from cpan over https out of the box is a worthwhile goal
[22:42:22] <xenu> keep in mind that CPAN.pm can fallback to curl and wget
[22:42:25] <LeoNerd> Yes. having an /option/ would be good
[22:42:31] <LeoNerd> Having it /required/ is not
[22:42:41] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[22:43:18] <ilmari> LeoNerd: re: miniperl: dunno, start here: https://github.com/openssl/openssl/blob/master/Configure
[22:43:19] <Paperbot> Link title(s): [ openssl/Configure at master · openssl/openssl · GitHub ]
[22:43:46] <ilmari> careful with https://github.com/openssl/openssl/tree/master/crypto/perlasm, I nerdsniped an entire virtual pub with that the other week
[22:43:46] <Paperbot> Link title(s): [ openssl/crypto/perlasm at master · openssl/openssl · GitHub ]
[22:44:05] <ilmari> the same one I'm about to join now, in fact
[22:44:08] <xenu> the funny thing is *i think* freebsd and dfly don't ship with either of them, they have 'fetch' instead so that fallback doesn't help
[22:44:25] <ilmari> *toodles*
[22:44:46] <vms14> same in netbsd
[22:44:59] <vms14> cpan has it's own lwp
[22:45:08] *** Joins: deadmarshal (~deadmarsh@95.38.228.30)
[22:45:19] <simcop2387> vms14: mojo nopaste also updated to the v2 api now.  also tests fine with libera channels
[22:45:20] <vms14> so no need for curl or wget
[22:45:51] <simcop2387> curl has it's uses even in perl.  mostly the fact that it supports more protocol than any other library
[22:46:17] <simcop2387> http, https, gopher, ftp, ftps, sftp, smb/cifs, nfs, tons of others
[22:46:45] * GumbyPAN CPAN Upload: Mojolicious-Command-nopaste-Service-perlbot-0.007 by SIMCOP https://metacpan.org/release/SIMCOP/Mojolicious-Command-nopaste-Service-perlbot-0.007
[22:47:33] <vms14> simcop2387: I have the nopaste perlbot, but don't seem to paste in irc
[22:47:57] <vms14> localhost$ nopaste -sPerlbot -c localhost:perlbot-libera:#perl html.pm shouldn't be like this?
[22:48:23] <simcop2387> vms14: let me turn onannouncements for a bit hold on
[22:48:27] <simcop2387> perlbot: allowpaste --global on
[22:48:27] <perlbot> simcop2387: This  has pastebin set to [on] :: 192.168.32.1:perlbot-libera:#perl
[22:48:32] <simcop2387> perlbot: allowpaste  on
[22:48:32] <perlbot> simcop2387: This channel has pastebin set [on]
[22:48:36] <simcop2387> vms14: try now
[22:48:54] <simcop2387> i'll likely have to turn it back off for blogspam crap after not too long
[22:49:01] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[22:49:16] *** Joins: kensanata (~user@user/kensanata)
[22:49:30] <vms14> i'm trying
[22:49:38] <vms14> localhost$ nopaste -sPerlbot -c 192.168.32.1:perlbot-libera:#perl html.pm
[22:49:38] <vms14>  
[22:49:51] <vms14> and with localhost
[22:50:15] <simcop2387> mine didn't either, might be other spam stuff i have in place doing a bad
[22:50:26] <vms14> nvm 
[22:51:08] <vms14> don't worry, you've spent too much time on that
[22:51:09] <simcop2387> i'll take a look at it all in detail next week.  I have three projects to work on and a week off work.  1) Get new cat 2) io_uring library 3) pastebin spam work
[22:51:11] *** Quits: magla (~gelignite@55d4e16d.access.ecotel.net) (Quit: Stay safe!)
[22:51:57] <vms14> the 1st project looks fun
[22:52:11] <xq> building ruby right now on debian box that does not have openssl headers
[22:52:17] <xq> will post results
[22:52:43] <simcop2387> it'll make my new apartment finally feel like a home for once.  though i expect a decent amount of guilt/grief to surface up regardless
[22:53:05] <vms14> if not, just add more cats
[22:53:11] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[22:54:37] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:54:40] *** Quits: gordonfish- (~gordonfis@user/gordonfish) (Ping timeout: 256 seconds)
[22:55:14] <xq> well, without openssl headers ruby binary built and linked, but I'm not sure it's in healthy state
[22:55:42] <xq> https://paste.debian.net/hidden/f13ab3e2/
[22:55:44] <Paperbot> Link title(s): [ Debian Pastezone ]
[22:56:25] <xq> but I guess it works
[22:56:27] <vms14> xq i suspect openssl is really needed for the gems manager
[22:56:55] <vms14> not for ruby itself
[22:58:11] <vms14> isn't the same reason you want openssl in core? 
[22:58:11] <xq> according to this they seem to just assume that the headers are universally available https://github.com/rbenv/ruby-build/wiki#missing-openssl
[22:58:12] <Paperbot> Link title(s): [ Home · rbenv/ruby-build Wiki · GitHub ]
[22:58:23] <vms14> so cpan has ssl
[22:58:31] <xq> and if they aren't, well, you should just install them, duh
[22:58:33] <vms14> or just because ssl should be core
[22:59:23] <vms14> cause cpan having ssl does not matter much as long as you only install packages
[22:59:32] <xq> the next section on that wiki page also has some pretty strong wording
[22:59:53] <xq> > When building Ruby 2.3 or older, you must ensure that OpenSSL 1.0 is available somewhere on the system
[23:00:13] <xq> so even though it's not listed in build dependencies seems like they really insist on having it
[23:03:30] <xq> additionally, ruby on windows bundles own CAs https://github.com/oneclick/rubyinstaller2/wiki/faq#user-content-ssl-ca-certs
[23:03:30] <Paperbot> Link title(s): [ FAQ · oneclick/rubyinstaller2 Wiki · GitHub ]
[23:04:43] <xenu> that's like Mozilla::CA
[23:04:49] <xq> yes
[23:05:28] <xenu> if we were to bundle SSL modules with perl, p5p should take over Mozilla::CA maintenace
[23:14:29] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:6cfd:ed6c:3651:478) (Ping timeout: 252 seconds)
[23:16:04] *** Quits: wilk (~wilk@user/wilk) (Quit: Reconnecting)
[23:16:12] *** Joins: wilk (~wilk@aceg25.neoplus.adsl.tpnet.pl)
[23:16:12] *** Quits: wilk (~wilk@aceg25.neoplus.adsl.tpnet.pl) (Changing host)
[23:16:12] *** Joins: wilk (~wilk@user/wilk)
[23:16:44] *** Joins: magla (~gelignite@55d4e16d.access.ecotel.net)
[23:17:47] *** Quits: Su-Shee (~Susanne@p4ffc710a.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:18:02] <vms14> did you try the debugger with emacs?
[23:18:22] *** Quits: GeekRuthie (sid322570@id-322570.hampstead.irccloud.com) ()
[23:18:30] <vms14> while you are stepping it goes opening files where the code executing was written
[23:19:06] *** Joins: Su-Shee (~Susanne@p4ff495fe.dip0.t-ipconnect.de)
[23:19:09] *** Joins: GeekRuthie (~geekruthi@li1062-152.members.linode.com)
[23:21:59] *** Quits: haj1 (~haj@ip5f5bf913.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[23:22:11] <xq> Net::HTTP does not load on ruby built without openssl headers
[23:22:19] <xq> no http client for you :P
[23:22:57] <Mandevil> No problem, just use gopher.
[23:22:57] *** Joins: EvanCarroll (~ecarroll@96.76.185.213)
[23:23:42] <Mandevil> (and VERONICA in place of Google ;-)
[23:29:11] <Botje> ... Mars?
[23:31:38] *** Quits: bmeneg (~bmeneg@2001:1284:f016:a9aa:4d0c:cd66:2de5:26b8) (Remote host closed the connection)
[23:32:10] <revhippie> They call her a name that they never get right, and if they don't then nobody else will.
[23:34:46] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:6cfd:ed6c:3651:478)
[23:34:48] <vms14> what would you look for some way to provide a user to create something similar to a plugin?
[23:34:58] <vms14> I'm looking at the debugger xD
[23:35:40] <xq> explain the problem that you are trying to solve
[23:35:45] <vms14> for example the "a" command is kind of what I want, the debugger has an api with use DB; so I could just use that
[23:36:08] <vms14> xq create a window manager that will let me modify while its running
[23:36:40] <vms14> actually that will teach me how a window manager is made
[23:36:51] <vms14> more like an interactive playground
[23:37:22] *** Joins: krychu_ (~krychu@2a01:4f8:210:50c5::2)
[23:37:34] *** Joins: keir_ (~keir@user/keir)
[23:37:36] <vms14> the thing is, a wm is a program that needs to run a loop, and I want to insert stuff inside that loop
[23:38:04] <vms14> while that loop is indeed running
[23:38:10] *** Joins: berndj-blackout (~berndj@ns1.linksynergy.co.za)
[23:38:37] <Grinnz> see Tickit related stuff perhaps?
[23:39:05] <Grinnz> Tickit works with IO::Async, surprisingly :)
[23:39:07] *** Quits: xenial-user5 (~androirc@20014C4C17E1D2004D3C94014F7C9DC1.catv.pool.telekom.hu) (Remote host closed the connection)
[23:39:38] *** Joins: ndorf_ (~nd@ob.noxio.us)
[23:39:41] <vms14> Grinnz: an X wm
[23:39:57] *** Joins: przemoc86 (~przemoc@89-72-24-4.dynamic.chello.pl)
[23:40:08] *** Joins: bleb_ (~cm@user/bleb)
[23:40:14] *** Joins: tyep_ (~hatseflat@hatsuseno.rootaccess.nl)
[23:40:17] *** Joins: polettix_ (~polettixx@linode.polettix.it)
[23:40:26] <vms14> I'll use X11::Protocol
[23:40:27] *** Joins: Walex2 (~Walex@SMTP.sabi.co.UK)
[23:40:30] *** Joins: drevil (~igor@pool-173-54-17-110.nwrknj.fios.verizon.net)
[23:40:46] <vms14> the thing is I want some sort of repl where I add features while its running
[23:40:55] <Grinnz> good luck
[23:41:02] <vms14> and that seems to be what a debugger provides
[23:41:14] <Grinnz> a debugger can provide that because it controls the whole run loop
[23:41:36] <Grinnz> everything is gonna depend on what is running the main loop
[23:41:54] <Grinnz> if you can make that thing IO::Async, it might simplify things
[23:42:10] <Grinnz> but it'd require that everything your using has nonblocking apis
[23:42:14] <Grinnz> you're
[23:43:03] <vms14> I could try to provide some way to add subs in some array or whatever, but I was thinking if even being a weird option, a debugger "front end" could work
[23:43:33] <Grinnz> just for the plugin system sure, make a dispatch table
[23:43:46] <xq> so here's an interesting idea: what if HTTP::Tiny detected and used curl/wget as a fallback when no https module is available?
[23:43:49] <Grinnz> the hard part is the interface, not the code mechanism
[23:44:04] <Grinnz> xq: that's what HTTP::Tinyish is for
[23:44:30] *** Quits: krychu (~krychu@static.152.151.251.148.clients.your-server.de) (Quit: ZNC 1.8.2+deb1+bionic2 - https://znc.in)
[23:44:30] *** Quits: keir (~keir@user/keir) (Quit: I've gone)
[23:44:30] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Remote host closed the connection)
[23:44:30] *** Quits: ndorf (~nd@ob.noxio.us) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: przemoc (~przemoc@user/przemoc) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: polettix (~polettixx@linode.polettix.it) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: JRaspass (~JRaspass@68.183.32.235) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: tyep (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: drevil_ (~igor@pool-173-54-17-110.nwrknj.fios.verizon.net) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: Walex (~Walex@SMTP.sabi.co.UK) (Ping timeout: 260 seconds)
[23:44:35] *** bleb_ is now known as bleb
[23:44:48] *** berndj-blackout is now known as berndj
[23:44:51] <xq> I mean as a solution to 'https client in core'
[23:44:58] <xq> at least a temporary one
[23:45:01] <Grinnz> sure, we could core HTTP::Tinyish
[23:45:15] <Grinnz> adding that logic to HTTP::Tiny isn't really gonna fly
[23:45:16] <vms14> xq why you need so desperately https client in core?
[23:45:17] <xq> until the engineering committee over at the mailing list can decide on the better one
[23:45:53] <Grinnz> vms14: there is no core method to securely download cpan modules, except to have cpanm install itself because it has a similar mechanism to fallback to curl/wget
[23:45:58] <Grinnz> this is kind of a problem
[23:46:32] <vms14> so all the hassle just because the first cpan run?
[23:46:37] <Grinnz> yes
[23:46:53] <Grinnz> and you know... users tend to make https requests in code
[23:47:31] <vms14> a user can install a module
[23:47:46] <Grinnz> why should they have to
[23:47:55] <vms14> the thing is the platforms not supporting ssl
[23:48:08] <Grinnz> yes, we've already been over that
[23:48:18] <vms14> too much work for a problem that really never existed
[23:48:25] <Grinnz> ... 
[23:48:31] <Grinnz> i just listed two problems that definitely exist
[23:49:07] <Grinnz> if they didn't, nobody would be trying to figure out how to make this happen, still, after years
[23:49:07] <vms14> the possibility of someone making "in the middle" attacks and outputing wrong code in cpan modules
[23:49:28] <Grinnz> oh yes, good luck making that case to IT
[23:50:23] <vms14> the user needing a ssl module is a good reason, as long as users cannot install modules
[23:50:50] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[23:50:55] <vms14> but I don't get the paranoya of the cpan taking modules without ssl
[23:51:00] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[23:51:12] <vms14> at the first run cpan could install the ssl module
[23:51:26] *** Joins: JRaspass (~JRaspass@68.183.32.235)
[23:51:53] <vms14> or prompt the user about his level of paranoya
[23:52:11] <Grinnz> yes, and that cannot be done over https, due to not having the ssl support
[23:52:26] <Grinnz> it's not paranoia, HTTP is ridiculously stupid to use for anything
[23:53:00] <Grinnz> any part of the network can alter your request, and things actively do this for malicious and non-malicious reasons in practice
[23:53:49] <vms14> yes, it's not bad idea at all to have at least a minimum security concern
[23:54:11] <Grinnz> the only senisble use of HTTP is to bootstrap verifying letsencrypt certs and to sign into public wifi gateways
[23:55:00] <Grinnz> or if you have a secondary encryption layer over it, like gpg
[23:55:25] *** Quits: proller (~p@2a02:6b8:b081:7212::1:29) (Ping timeout: 240 seconds)
[23:56:43] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:57:49] <vms14> Grinnz: want a paint in perl?
[23:58:12] <vms14> you paint in the root window and use other windows to erase
[23:58:16] <vms14> :D
[23:59:16] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[23:59:36] <vms14> http://perl.bot/p/og66im
[23:59:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[23:59:56] <Grinnz> i gave up on doing anything other than web applications for gui
