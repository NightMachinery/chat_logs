[00:04:07] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[00:06:34] *** Quits: captain_morgan (~morgan@oit.cloud) (Quit: The Lounge - https://thelounge.chat)
[00:07:42] *** Joins: captain_morgan (~morgan@oit.cloud)
[00:09:14] *** Quits: captain_morgan (~morgan@oit.cloud) (Remote host closed the connection)
[00:10:05] *** Joins: captain_morgan (~morgan@oit.cloud)
[00:11:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:11:50] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[00:14:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[00:22:14] *** Quits: captain_morgan (~morgan@oit.cloud) (Remote host closed the connection)
[00:26:24] *** Quits: F40PH (~david@d54C34DA5.access.telenet.be) (Quit: Konversation terminated!)
[00:28:44] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[00:28:56] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[00:29:18] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[00:29:44] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[00:41:36] *** Joins: captain_morgan (~morgan@oit.cloud)
[00:58:11] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[01:00:18] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[01:00:45] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[01:00:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:00:51] *** ChanServ sets mode: +v EvilDMP
[01:02:18] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[01:02:46] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[01:04:36] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[01:05:18] *** Joins: Staunch (~Staunch@137.83.202.220)
[01:09:00] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[01:09:10] *** Joins: schinckel (uid38120@user/schinckel)
[01:17:33] *** Joins: zamba (~marius@185.47.250.222)
[01:17:37] <zamba> i have the following model: https://bpa.st/OYHA . i want to create a cbv view to add two rows, one for each GAME_CARD_TYPE.. how do i do that?
[01:18:31] <zamba> i guess i need to build up the form manually?
[01:18:37] <schinckel> You can have a form view that validates and saves two forms - either use a formset, or two distinct forms with different prefixes.
[01:18:49] <schinckel> In this case, two forms may be simpler.
[01:19:22] <zamba> but they should be submitted together.. the user should fill out both at the same time and just submit once
[01:19:44] <zamba> schinckel: do you mean two <form>?
[01:19:52] <schinckel> No, one <form>, two Django forms.
[01:19:53] <schinckel> https://blog.tinbrain.net/blog/updating-two-models-single-post.html
[01:20:11] <schinckel> You can use two instances of the same form class, just give them a different prefix.
[01:20:34] <schinckel> I think that will be simpler for you than a formset - although formsets are designed for N forms of the same type.
[01:20:51] <schinckel> Because your N is always 2, it may be simpler to spell everything out explicitly.
[01:21:04] <zamba> schinckel: do i do this in forms.py?
[01:21:15] <schinckel> Have a look at the post I linked.
[01:21:15] <zamba> i think you have to spell it out a bit more :)
[01:21:34] <schinckel> It doesn’t matter where you do it - as long as you reference the view in your url patterns.
[01:22:05] <zamba> so one form for each of the GAME_CARD_TYPEs?
[01:22:18] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[01:22:44] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[01:25:24] <zamba> here's what i've got so far: https://bpa.st/7GLQ
[01:25:56] <zamba> schinckel: so i should create one form for each of the GAME_CARD_TYPEs i have?
[01:26:48] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[01:27:14] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[01:35:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[01:36:22] <schinckel> Yeah, but you’ll need to modify a FormView significantly to do that. Try using a function based view first like in the post I linked.
[01:36:38] <zamba> what is a formview?
[01:36:43] <dodobrain> umm.. i need to have a view which has some text and a singular button
[01:36:56] <dodobrain> should i be using a form view? if yes, what the heck is the content of my form class ?
[01:37:48] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Remote host closed the connection)
[01:38:16] *** Joins: blackbird_0 (~blackbird@41.62.146.75)
[01:40:01] <dodobrain> schinckel, you ever done something similar to this? the page itself is an admin page on which the user has to click on the the singular button to perform an action
[01:41:19] <zamba> schinckel: err.. this doesn't fly.. i'm not getting this to work
[01:44:37] <zamba> i have a love/hate relationship to django
[01:44:51] <dodobrain> zamba, heh
[01:45:01] <zamba> most of the time i have no idea why stuff works, but at the same time i'm very in love with the fact that it does
[01:45:07] *** Joins: newdimension (~newdimens@user/newdimension)
[01:45:36] <zamba> and it feels magical when it does
[01:49:11] <zamba> well, now i got the page to load without error, but i'm not getting the result i want :D
[01:50:35] <zamba> oh, got it to display both form fields.. but there's no unique id for each of them
[01:50:39] <zamba> in the html
[01:52:31] <zamba> schinckel: https://bpa.st/EAOQ
[02:00:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:03:19] <hop> zamba: https://docs.djangoproject.com/en/4.0/ref/forms/api/#django.forms.Form.auto_id
[02:03:39] <hop> if i've understood the problem correctly…
[02:04:48] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[02:05:32] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[02:05:53] <zamba> hop: doesn't look like that made any difference
[02:08:24] <hop> what's the generated html and how do you want to change it?
[02:08:47] <hop> and what's your latest code?
[02:08:57] <zamba> see the paste above
[02:09:51] <hop> i don't see html in any of the pasted code i can find
[02:09:57] <hop> indulge me
[02:11:00] <zamba> https://bpa.st/XJOA
[02:11:04] <zamba> that's the whole html
[02:11:21] <hop> that's the template, i asked for the _generated_ html
[02:12:31] <schinckel> zamba: I’m out walking, so can’t see your stuff: you need a different prefix on each form
[02:12:37] <zamba> https://bpa.st/3F2Q
[02:14:08] <hop> Oh, funny… dash cpied the wrong anchor
[02:14:13] <hop> sorry
[02:14:14] <hop> https://docs.djangoproject.com/en/4.0/ref/forms/api/#prefixes-for-forms
[02:15:43] <hop> zamba: and your latest code?
[02:16:12] *** Joins: cyphase (~cyphase@user/cyphase)
[02:16:24] <zamba> ah, that made the difference
[02:17:01] <hop> what did?
[02:17:15] <zamba> prefix=
[02:17:26] <hop> `auto_id` should have as well
[02:19:07] <hop> well, schinckel told you exactly an hour ago
[02:19:59] <schinckel> dodobrain: You can use a form view with an “empty” form.
[02:20:15] <schinckel> (Or a form with a field named the same as what the button name will be)
[02:20:23] <dodobrain> oso something like class MyForm(forms.Form): pass
[02:20:57] <schinckel> Yeah - and then have your action in the form_valid method - or whatever admin calls it.
[02:21:15] <schinckel> You could also use a TemplateView and define post()
[02:25:57] <dodobrain> yeah i had templateview.. they wanted it changed to a formview lol
[02:28:23] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:29:00] *** Quits: blackbird_0 (~blackbird@41.62.146.75) (Ping timeout: 240 seconds)
[02:31:20] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[02:34:56] *** Joins: theprophet (~theprophe@212.58.102.156)
[02:36:44] *** Joins: theprophet18 (~theprophe@212.58.102.156)
[02:37:17] <theprophet18> is cleaned_data() neccessary? from googling and reading info about this subject, what i get is its kind of conditional test , am i wrong?
[02:37:52] <theprophet18> it is_valid in case it returns the cleaned_data right?
[02:38:29] *** Quits: Gud (~Gud@user/gud) (Read error: Connection reset by peer)
[02:38:31] <theprophet18> but why do i need cleaned_data() if for example, i have all the right fields?
[02:38:59] <nbjoerg> cleaned_data is not a function
[02:39:01] <theprophet18> i have a feeling that i am not getting something crucial and dont know what
[02:39:31] <theprophet18> sorry that () was uneccessary
[02:39:34] <nbjoerg> is_valid() tells you if all fields pass the sanity checks
[02:40:06] <theprophet18> so just is_valid() enough?
[02:40:13] <nbjoerg> if you use a modelform, you can save it. if you use a regular form or need further work, cleaned_data gives you all the user input including any post-processing by the form or form fields
[02:40:25] *** Quits: theprophet (~theprophe@212.58.102.156) (Ping timeout: 256 seconds)
[02:40:44] <theprophet18> rn i am using regular form
[02:41:24] <theprophet18> what you men 'gives you all the user input'  ?
[02:41:29] <theprophet18> mean*
[02:41:47] <schinckel> is_valid() will (eventually) populate form.cleaned_data with validated/cleaned user input, if the form is valid (ie, no validation errors)
[02:42:25] <GinFuyou> yeah, if using a simple forms.Form, you have to use cleaned_data or form is pointless
[02:42:49] <theprophet18> so what  cleaned_data is doing = to what?
[02:43:01] <GinFuyou> it doesn't do anything, it's data
[02:43:11] <GinFuyou> what schinckel said
[02:43:33] <theprophet18> so its just a data behind is_valid
[02:43:35] <nbjoerg> it is what the user provided you with + some cleanup
[02:43:51] <nbjoerg> e.g. for a date time field, you actually get a Python datetime object and not some string
[02:44:00] <schinckel> is_valid ensures validation has been performed (and that the data are valid)
[02:44:19] <GinFuyou> well, I guess if you task only to validate data and discard it, I guess it's a case where you don't need cleaned_data. But it's an edge case
[02:44:27] <theprophet18> exactly how ? schinckel because, why does it need validation?
[02:44:50] <schinckel> To check that the data are valid - no typos, no invalid dates, whatever.
[02:44:57] <nbjoerg> have you read the form tutorial?
[02:45:06] <theprophet18> but is not it performed in fields?
[02:45:10] <theprophet18> yes
[02:45:16] <theprophet18> for example
[02:45:30] <theprophet18> what kind of validation integerfield needs?
[02:45:37] <theprophet18> when it wont let you add anything else but numbers
[02:45:41] <nbjoerg> that you give a number and not text
[02:45:53] <GinFuyou> what is "it" ?
[02:45:59] <theprophet18> the field
[02:46:04] <nbjoerg> but you can also specify a range in the IntegerField or an additional validator
[02:46:04] <theprophet18> integerfeld
[02:46:12] <theprophet18> wont let you add string for example
[02:46:24] <GinFuyou> integer field doesn't exist in browser
[02:46:28] <nbjoerg> that check ("it's a number") is the default validator of the IntegerField
[02:46:42] <nbjoerg> GinFuyou: not really true with html5, but that's a separate topic
[02:46:55] <schinckel> Also, there’s no guarantee that the data has come from a browser.
[02:47:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:47:16] <schinckel> curl https://yourdomain.com -X POST -d “foo=bar&baz=qux"
[02:47:29] <schinckel> So you can’t just rely on browser validation.
[02:47:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:47:35] *** ChanServ sets mode: +v EvilDMP
[02:47:51] <theprophet18> so the the form fields arent automaticly validated?
[02:47:53] <schinckel> Also, a nasty actor can modify the HTML - for instance changing <input type=“number”> into <input type=“text”>
[02:48:00] <GinFuyou> nbjoerg, without going details it still generally a valid statement
[02:48:01] <schinckel> That’s what a django Form is for.
[02:48:23] <nbjoerg> theprophet18: is_valid() *is* the logic to validate input
[02:48:31] <schinckel> Browsers _may_ do some validation, but you can’t ever rely on it.
[02:49:47] <theprophet18> nbjoerg thats exactly what is confusing me, because earlier before i even learned about is_valid() i was able to use simple forms to deny user entering any non matched info into form fields in browser
[02:50:13] <theprophet18> is not that also called validating?
[02:50:35] <GinFuyou> that's aforementioned browser-side validation. It's just helper for user, not really something reliable
[02:50:35] <theprophet18> when user is not able to add non correct info?
[02:50:45] <schinckel> IIRC if you access form.errors it will also perform validation, but that’s an implementation detail - the canonical way to check if a form is valid is to use `form.is_valid()`
[02:51:03] <GinFuyou> there is no way to stop user from sending invalid info
[02:52:09] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[02:52:46] <theprophet18> GinFuyou so if some fields wont accept the invalid info? what about that?
[02:53:06] <schinckel> theprophet18: As I said, a user could change the form input type to text.
[02:53:21] <schinckel> Or use curl, or some other way of performing an HTTP request.
[02:53:28] <schinckel> Do not assume it’s always coming from a browser.
[02:53:35] <theprophet18> i see
[02:53:41] <theprophet18> now it makes sense
[02:53:44] <GinFuyou> theprophet18, which fields? fields in browser can be easily bypassed. fields in python is what you use form for
[02:53:54] <nbjoerg> or even from the browser that it used your form (e.g. AJAX can be used as well)
[02:54:00] <theprophet18> i see, i see, it goes deeper than i tought
[02:54:24] <theprophet18> so its mostly for security measures
[02:54:37] <theprophet18> backend operations
[02:54:43] <nbjoerg> client side checks can give better UX, but server side checks are necessary for conditions you actually care about
[02:55:06] <theprophet18> i see
[02:55:06] <nbjoerg> and of course, as I said, form.cleaned_data will give you appropiate Python types and not just plain text, depending on the form field
[02:55:07] <GinFuyou> it's not that deep. Just all data comming from elsewhere should be validated. Forms are tool for validating data. It doesn't have to be sent over http at all
[02:55:21] <schinckel> I often use forms for validating CSV data.
[02:55:32] <schinckel> Or the data that is coming as arguments to a celery task.
[02:56:00] <schinckel> (I think that the Forms API is one of the best parts of Django)
[02:56:20] <theprophet18> GinFuyou i dont mean like django deep, its has deeper meaning than i tought it had.
[02:56:21] <nbjoerg> there is one part that annoys me a lot
[02:56:59] <schinckel> go on, we are listening… ;)
[02:57:24] <nbjoerg> the coupling between form api and associated widgets is too tight
[02:58:07] <schinckel> Yeah, widgets having the ability to say how they pull their data from “form.data” you mean?
[02:58:22] <nbjoerg> I mean the HTML rendering part of widgets
[02:58:51] <GinFuyou> didn't it get better recently?
[02:58:57] <schinckel> I use sniplates for my form rendering - have done for years - although I am starting to move to widget templates.
[03:00:30] <nbjoerg> GinFuyou: I don't think you can easily replace the default widget used by all builtin form fields?
[03:01:08] <nbjoerg> (even ignoring the question of admin interface vs normal form use)
[03:02:11] <theprophet18> thank you guys for your help and aid. appreciate that.
[03:02:43] <GinFuyou> nbjoerg, doesn't it work same as "usual" template overriding? I haven't used it myself actually yet
[03:04:05] *** Quits: kurfen_ (~kurfen@176.119.195.9) (Quit: ZNC 1.8.2 - https://znc.in)
[03:05:23] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:06:07] *** Quits: theprophet18 (~theprophe@212.58.102.156) (Quit: Client closed)
[03:06:19] *** Joins: theprophet (~theprophe@212.58.102.156)
[03:06:44] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:06:58] *** Joins: kurfen (~kurfen@176.119.195.9)
[03:08:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:08:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:12:54] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[03:17:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:19:48] *** Quits: slav0nic_ (slav0nic@python.su) (Ping timeout: 250 seconds)
[03:29:11] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:48:26] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:59:57] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[04:06:47] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:08:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:12:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[04:16:13] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:20:10] *** Joins: prodigius_ (~prodigius@75-163-150-33.clsp.qwest.net)
[04:21:32] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Ping timeout: 240 seconds)
[04:30:29] *** Joins: rje (~textual@50.35.241.164)
[05:08:15] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:08:54] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:11:09] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[05:11:47] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[05:16:49] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[05:17:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:19:21] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[05:26:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:28:46] *** Quits: Matthias1 (~Matthias1@8.6.144.119) (Remote host closed the connection)
[05:38:16] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:49:52] *** Joins: Matthias1 (~Matthias1@8.6.144.119)
[05:56:46] *** Joins: mfisher (mfisher@shell.themfishers.com)
[06:03:56] <theprophet> GinFuyou gin can you look at this screenshot and tell me, if the form is_valid() do i need to change, title and content variables from what you see to form.cleaned_data.get?  https://ibb.co/1nxtMBj
[06:04:50] <theprophet> GinFuyou or they are automaticly become clean since they are under is_valid()?
[06:05:21] <theprophet> they automaticly*
[06:06:58] <theprophet> anybody?
[06:10:26] <schinckel> If those fields are in your form, then you should use form.cleaned_data[‘title’]
[06:11:16] <theprophet> schinckel thank you and  can you please tell me the logic behind it? if it wont bother you
[06:12:30] <theprophet> schinckel and yes those fields are in my form
[06:13:01] <theprophet> schinckel but cant i do it in the forms directly?
[06:13:24] <theprophet> ok this last question dont mind it..
[06:13:51] *** Joins: Matthias_ (~Matthias1@8.6.144.90)
[06:16:19] *** Quits: Matthias1 (~Matthias1@8.6.144.119) (Ping timeout: 256 seconds)
[06:21:48] <schinckel> Because if there is logic that alters the value in the form when cleaning it, you’ll want it to use the cleaned value.
[06:22:00] <jim> hi,
[06:22:07] <schinckel> For instance, if you had a date field, then you’d want the date object, rather than a string of the date.
[06:22:30] <schinckel> In this case that might not happen, but it’s “standard practice” to used the cleaned value rather than re-fetch it from the request.
[06:22:44] <schinckel> Also, if you are using a prefix, you’d need to add the prefix to the request.POST check.
[06:23:03] <theprophet> schinckel so for every field i have to perform this same thing ?
[06:23:15] <theprophet> even if its 20 ?
[06:23:26] <theprophet> for example?
[06:23:44] <schinckel> You can use a ModelForm to make creating models easier.
[06:23:51] <theprophet> i see
[06:24:02] <jim> in the tutorial I'm doing, we make a model called Question, with some fields, the important one for now being:
[06:24:06] <jim> pub_date = models.DateTimeField('date published')
[06:24:20] <theprophet> schinckel thank you my friend.
[06:26:14] <jim> and, having looked at a few different values that ended up there, it was apparant that this date is in UTC... how would I apply a time zone to it? also, where would I find a complete set of timezone objects to use with it?
[06:26:54] <jim> doc refs -absolutely- fine
[06:27:20] <jim> in fact, I would want to show someone those docs
[06:29:01] *** Quits: Matthias_ (~Matthias1@8.6.144.90) (Remote host closed the connection)
[06:29:57] <jim> actually, I found some doc references, so that part's done... any comments appreciated
[06:32:11] *** Joins: Matthias1 (~Matthias1@8.6.144.90)
[06:49:27] <schinckel> Keep things in UTC as long as possible (and turn them into UTC as early as possible).
[07:07:30] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 252 seconds)
[07:08:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:09:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:09:43] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[07:16:18] *** Quits: ahadi (~ahadi@34-41-142-46.pool.kielnet.net) (Ping timeout: 252 seconds)
[07:19:48] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[07:21:06] *** Joins: ahadi (~ahadi@246-42-142-46.pool.kielnet.net)
[07:30:28] *** Quits: Matthias1 (~Matthias1@8.6.144.90) (Remote host closed the connection)
[07:37:55] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:48:02] *** Joins: yanchai (~yanchai@222.127.97.162)
[07:52:49] *** Quits: theprophet (~theprophe@212.58.102.156) (Quit: Client closed)
[07:59:40] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:05:30] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:24:37] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:30:00] *** Quits: sreve (~quassel@p4ff44633.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:30:26] *** Joins: sreve (~quassel@p549d71d6.dip0.t-ipconnect.de)
[08:34:24] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[08:41:00] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:49:07] *** Joins: audiobirb (~audio@user/audio)
[08:49:56] *** Joins: ekathva (~ekathva@n16j078fgylxou88w-1.v6.elisa-mobile.fi)
[09:15:00] *** Quits: rje (~textual@50.35.241.164) (Remote host closed the connection)
[09:15:35] *** Joins: rje (~textual@50.35.241.164)
[09:20:29] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[09:22:14] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[09:29:11] *** Joins: mattil (~mattil@dy59yfhzyl7bg3r4hdk3t-4.rev.dnainternet.fi)
[09:39:10] *** Quits: mattil (~mattil@dy59yfhzyl7bg3r4hdk3t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:48:45] *** Joins: mattil (~mattil@dy59yfhzyl7bg3r4hdk3t-4.rev.dnainternet.fi)
[09:54:12] *** Quits: mattil (~mattil@dy59yfhzyl7bg3r4hdk3t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:58:33] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 252 seconds)
[10:05:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[10:06:44] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[10:07:07] *** Joins: mattil (~mattil@37-33-168-240.bb.dnainternet.fi)
[10:07:40] *** Quits: mattil (~mattil@37-33-168-240.bb.dnainternet.fi) (Remote host closed the connection)
[10:09:14] *** Quits: fizzizist1 (~fizzizist@72.53.248.15) (*.net *.split)
[10:09:14] *** Quits: syberspa1e (~syberspac@xiaoxiao.anvor.at) (*.net *.split)
[10:09:14] *** Quits: dongcarl (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net) (*.net *.split)
[10:09:15] *** Quits: DanDare (~DanDare@user/dandare) (*.net *.split)
[10:14:34] *** Joins: fizzizist1 (~fizzizist@72.53.248.15)
[10:14:34] *** Joins: syberspa1e (~syberspac@xiaoxiao.anvor.at)
[10:14:34] *** Joins: dongcarl (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net)
[10:14:34] *** Joins: DanDare (~DanDare@user/dandare)
[10:18:25] *** Joins: xkuru (~xkuru@user/xkuru)
[10:18:57] *** Joins: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl)
[10:23:01] *** Joins: x_kuru (xkuru@user/xkuru)
[10:26:47] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[10:28:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[10:33:59] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:39:40] <serafeim> hey friends
[10:47:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 260 seconds)
[10:48:06] *** Joins: slav0nic (slav0nic@python.su)
[10:48:18] *** Joins: iomari891 (~iomari891@102.91.5.94)
[10:52:36] *** Quits: kurfen (~kurfen@176.119.195.9) (Ping timeout: 240 seconds)
[10:54:13] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:54:57] *** ChanServ sets mode: +v EvilDMP
[11:01:45] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[11:12:38] *** Quits: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[11:12:48] *** Joins: luigibu (~luigi@93.176.153.88)
[11:16:38] *** Joins: wakibi (~wakibi@hdd1.n1.ips.mtn.co.ug)
[11:19:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:19:51] *** Joins: sandeepk (~sandeepk@223.130.30.47)
[11:21:45] <schinckel> Damn. Django 4 broke my shared-property field.
[11:23:00] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5c57:4ead:bf60:d2aa)
[11:23:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:23:58] *** ChanServ sets mode: +v EvilDMP
[11:26:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[11:26:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:27:25] <serafeim> django breaks a lot of stuff
[11:27:28] <serafeim> its a PITA updating
[11:27:40] <serafeim> especially the removal of the ugettext things
[11:32:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:32:30] *** ChanServ sets mode: +v EvilDMP
[11:33:20] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:42:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[11:49:26] <schinckel> Aha! Field.db_returning is a thing now.
[11:49:41] <schinckel> Nice, this could be a way to handle postgres computed fields.
[12:01:25] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[12:02:53] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[12:05:11] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[12:06:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:06:10] *** ChanServ sets mode: +v EvilDMP
[12:06:31] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[12:07:10] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5c57:4ead:bf60:d2aa) (Ping timeout: 250 seconds)
[12:07:24] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:08:11] *** Joins: pycode (~pycode3@93-40-5-81.ip36.fastwebnet.it)
[12:19:49] *** Joins: mrwick (~mrwick@user/mrwick)
[12:20:22] *** Joins: DeSigna (~whoami@2404:9400:2::44:0:1)
[12:23:47] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:31:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[12:40:32] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 250 seconds)
[12:41:45] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[12:55:51] <jim> schinckel, (about time and time zones), the main thing I'm interested in right now, is how do you get a date/time value to produce a local time?
[13:01:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:01:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:08:00] *** Joins: jragon (~manjaro-u@46.154.79.32)
[13:09:15] <jragon> Hi, I'm trying to add a foriegn key column in a migration, but I've already got the column populated in the db. How can I add the constraint but not create the column? Atm django is complaining that <related_model_name>_id already exists in <model>
[13:09:50] <jragon> I want it to add the constraint but not the column. I've had to do some messing about since I'm trying to migrate the pkeys over to a new field type
[13:09:51] <pycode> hello
[13:10:06] <pycode> i am using DRF, this is my serializer: https://bpa.st/YRVQ
[13:10:15] <pycode> how can i add that "related" field too ?
[13:10:35] <pycode> i need all the fields from Activity model plus "related"
[13:16:15] *** Joins: kuter (~kuter@public-gprs523036.centertel.pl)
[13:23:16] <jragon> Ah got it. Used AlterField on with name=<related_model_name>_id
[13:26:33] *** Quits: ekathva (~ekathva@n16j078fgylxou88w-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[13:26:51] *** Joins: ekathva (~ekathva@n16iyq1129bfzcbqr-1.v6.elisa-mobile.fi)
[13:32:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[13:34:04] *** Joins: mrwick (~mrwick@user/mrwick)
[13:35:04] *** Joins: audiobirb (~audio@user/audio)
[14:14:48] *** Quits: wakibi (~wakibi@hdd1.n1.ips.mtn.co.ug) (Quit: Client closed)
[14:17:52] *** Joins: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl)
[14:24:23] *** Quits: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[14:26:32] *** Joins: blackout69 (~blackout6@37.183.198.248)
[14:38:23] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[14:43:34] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[14:43:43] *** Quits: kuter (~kuter@public-gprs523036.centertel.pl) (Read error: Connection reset by peer)
[14:47:59] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[14:48:24] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[14:49:31] *** Quits: pycode (~pycode3@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 245 seconds)
[14:50:32] *** Joins: mrwick (~mrwick@user/mrwick)
[14:53:40] <jragon> How can I write a migration for a third party app and keep it in my source? ie alter a field in <third_part_app>.Model but do it from <my_app>/migrations
[14:54:00] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[14:54:21] *** Joins: xkuru (~xkuru@user/xkuru)
[14:54:53] <dodo> jragon: don't. why do you think you have to?
[14:55:36] <jragon> I've changed the primary key of a couple models which have constraints from third party apps
[14:56:04] <jragon> More specifically the User model pkey, which is relied on by django_admin_log
[14:56:34] <jragon> The model wouldn't change just want to write the migration to del / recreate the fkey with the right types
[14:56:35] <dodo> um
[14:56:49] <dodo> that sounds like a bad idea.. what you did
[14:57:14] <dodo> what was your goal when you did this?
[14:58:31] <jragon> A few reasons, mainly some big data migration that's going on which needs consistent unique IDs. The app is split across a load of dbs and schemas which all use autofields, but we're trying to aggregate them into one atm
[14:58:49] <jragon> Feel like the easiest way to acheive this was to give all the models uuids
[14:58:56] <dodo> but.. the user model pk is unique?
[14:58:58] <jragon> It's not ideal but :shrug:
[14:59:08] <jragon> Nah, not over multiple dbs, they're all on their own sequences
[14:59:14] <dodo> ok
[14:59:28] <dodo> but your goal now is to merge them anyway?
[14:59:46] <jragon> I've spent a while researching this ... it's possible now to have a user with a uuid pkey, but the migration is a bit tricker
[15:00:22] <jragon> I could do it with raw sql but would rather avoid it if I can
[15:00:23] <dodo> sounds like you could just have a fairly easy data migration, instead of messing with the pk?
[15:01:28] <jragon> Yeah it's not going to be an easy data migration though. Maintaining the relations is the issue. All new objects will have a new id, so on the inserts we'd have to figure out all the correct relationship data
[15:02:07] <jragon> If we go over to uuids then the pk doesn't change when migrating and we just have to make sure that the tables are inserted in the right order
[15:02:34] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 260 seconds)
[15:02:56] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[15:03:02] *** Joins: kurfen (~kurfen@176.119.195.8)
[15:03:09] <jragon> The only sticking point atm is the user model - which has a few deps outside of my app. ie django_admin_log
[15:03:38] <jragon> one solution is to delete the table and remigrate it but I'd like to avoid that since there's some data in there still
[15:04:21] <dodo> i assume you already tested that you can't migrate with dumpdata/loaddata?
[15:04:37] <jragon> Yeah it's more complicated than this
[15:05:25] <jragon> All the clients are separated out into separate dbs or schemas, so they're going to be put into single tables with row level partitioning rather than schem/
[15:05:32] <jragon> schema/db level
[15:10:49] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:11:56] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:12:57] *** Quits: lucas_ (~lucascast@192-140-51-239.static.oncabo.net.br) (Ping timeout: 240 seconds)
[15:22:47] <jragon> okay, found my solution. Use MIGRATION_MODULE setting and then squash the admin migrations into one and keep in my code base. Any later migrations can be delt with as they come up, though doubt there will be any from admin in a while :)
[15:26:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:27:07] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:28:37] *** Quits: jragon (~manjaro-u@46.154.79.32) (Ping timeout: 240 seconds)
[15:34:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[15:37:15] *** Joins: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br)
[15:39:59] *** Joins: xkuru (~xkuru@user/xkuru)
[15:41:46] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (Ping timeout: 268 seconds)
[15:43:05] *** Quits: ekathva (~ekathva@n16iyq1129bfzcbqr-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[15:43:25] *** Joins: ekathva (~ekathva@n16j10whr3kjy4awe-1.v6.elisa-mobile.fi)
[15:43:36] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[16:14:12] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[16:16:04] *** Joins: mrwick (~mrwick@user/mrwick)
[16:16:11] *** Joins: Matthias1 (~Matthias1@8.6.144.90)
[16:20:19] *** Joins: dez (uid92154@user/dez)
[16:27:45] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[16:34:27] *** Joins: mxp (~mxp@185.16.205.131)
[16:44:12] *** Quits: Matthias1 (~Matthias1@8.6.144.90) ()
[16:56:55] *** Joins: ekathva_ (~ekathva@2001:999:51:1ac7:eb43:36ae:d67e:26d9)
[16:58:48] *** Quits: ekathva (~ekathva@n16j10whr3kjy4awe-1.v6.elisa-mobile.fi) (Ping timeout: 250 seconds)
[16:58:57] *** Joins: ekathva__ (~ekathva@2001:999:40c:dc3f:ea31:ce58:5320:d00e)
[17:01:24] *** Quits: ekathva_ (~ekathva@2001:999:51:1ac7:eb43:36ae:d67e:26d9) (Ping timeout: 240 seconds)
[17:04:27] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:06:37] *** Quits: ekathva__ (~ekathva@2001:999:40c:dc3f:ea31:ce58:5320:d00e) (Ping timeout: 240 seconds)
[17:09:25] *** Joins: pycode (~pycode3@2001:b07:5d28:551:7e2d:8bf4:de12:8ca2)
[17:20:31] *** Joins: ekathva__ (~ekathva@2001:999:40c:dc3f:363e:180f:158e:5648)
[17:22:50] *** Joins: theprophet (~theprophe@212.58.102.156)
[17:27:30] *** withered_wolf is now known as life_alert
[17:27:48] *** life_alert is now known as withered_wolf
[17:28:30] *** Joins: evilpyro (~evilpyro@user/evilpyro)
[17:29:13] <theprophet> can somebody please , dumb down the fact about this marked part on this screenshot? https://ibb.co/1nxtMBj
[17:30:04] <evilpyro> Hello! I'm trying to capture GET url parameters with class views and I'm failing miserably. I'm currenty implementing a login view based on either FormView or TemplateView but if i append ?next=/ to the login url then i get a 404 and i dont know what to do..
[17:30:22] <GinFuyou> theprophet, it's an antipatern. done
[17:30:59] <GinFuyou> evilpyro, how do you catch it? It's automatic by default
[17:31:26] <theprophet> GinFuyou why do i need to use from.cleaned_data in views.py too? because, is not it suppose to be already cleaned_data since its under is_valid() condition?
[17:31:51] *** Joins: dor (~erg@188.146.34.167.nat.umts.dynamic.t-mobile.pl)
[17:32:04] <GinFuyou> theprophet, you don't need it *too*, you need *only* cleaned data
[17:32:54] <theprophet> GinFuyou so is_valid() does not apply cleaned_data effect what comes after it in if condition?
[17:33:38] <theprophet> is_valid() will only work if those variables are cleaned_data?
[17:34:19] <GinFuyou> "apply"? "effect"? Seriously cleaned_data is just data. You called is_valid(), form got validated data (on success) that as simple as that
[17:35:53] <theprophet> GinFuyou wait, cleaned_data and is_valid() are not related?
[17:36:53] <GinFuyou> where did I imply it? is_valid() calls data cleaning. If it succeeds data goes to form.cleaned_data
[17:37:09] <evilpyro> GinFuyou, well, if its automatic then either if i catch it or not it should at least load the page right?
[17:37:30] <evilpyro> it doesn't. I just get a 404
[17:37:41] <GinFuyou> evilpyro, if you tried to catch it in url pattern you broke it
[17:37:47] <evilpyro> I didnt
[17:38:11] <evilpyro> the pattern is as simple as it gets, its just "login"
[17:38:25] <evilpyro> and works fine if i dont pass the arg
[17:39:18] <GinFuyou> Ok, well, what you did? Normally you get 404 in 2 case: bad pattern or raising it in the view itself (e.g. like detail view will raise when you try to see details by id of object that doesn't exists)
[17:39:35] <evilpyro> ohh i just found the issue
[17:39:59] <evilpyro> the redirecion ponts to login/?next=/ while the urlpattern is "login"
[17:40:15] <evilpyro> so login?next=/ works
[17:40:50] <GinFuyou> so, case 1. bad (mismatchig) pattern
[17:41:46] <evilpyro> also can you point out a docs page where i can read about the parameters/functions i can define into class views? I dont see them listed anywhere
[17:43:13] <GinFuyou> if you want a comprehensive list http://ccbv.co.uk/ is better.
[17:43:25] <GinFuyou> If you need explanation, I think docs had some too
[17:44:08] <theprophet> GinFuyou  so i am guessing, cleaned_data is not a necessary thing
[17:44:17] <theprophet> in my case
[17:44:51] <GinFuyou> https://docs.djangoproject.com/en/4.0/ref/class-based-views/
[17:45:33] <GinFuyou> theprophet, I have no idea what is your case, but as I said yesterday I can only think of very edges cases
[17:46:11] <evilpyro> thankyou GinFuyou
[17:46:40] <theprophet> GinFuyou i am watching the video tutorial, while reading django docs. all i see that cleaned_data is doing when debuging , it just returns like formated data in dict. thats all.
[17:47:09] <theprophet> GinFuyou i havent see any use of it. and this guy in this video tutorial using cleaned_data on title and content variable
[17:47:31] <GinFuyou> then this tutorial is shit
[17:47:31] <theprophet> and i tought that it was directly related to is_valid() like it was neccessary thing to do
[17:48:22] <GinFuyou> we are telling you for days it __IS__ neccessary
[17:49:16] <theprophet> GinFuyou why its necessary?
[17:49:24] <GinFuyou> in some cases using cleaned_data will be hidden behind some automation, but it's still there
[17:50:22] *** Quits: ekathva__ (~ekathva@2001:999:40c:dc3f:363e:180f:158e:5648) (Quit: Leaving)
[17:50:39] *** Quits: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br) (Ping timeout: 268 seconds)
[17:50:41] <GinFuyou> theprophet, everyone explaned yesterday, re-read it? In short recap: to get validated data that is properly converted, cleaned from mistakes and malicious injections
[17:50:54] <theprophet> no, i understood what has been told yesterday
[17:51:16] <GinFuyou> Then I don't understand your todays problems, sorry
[17:51:53] <theprophet> GinFuyou i just tought that, is_valid() automaticly cleaned_data
[17:52:09] <theprophet> GinFuyou i tought that it implied the cleaned_data
[17:52:39] <GinFuyou> sorry but I can't form that into sensible sentences (without assumption, which I seem to make wrongly)
[17:53:12] <theprophet> if form.is_valid():
[17:53:20] <theprophet> in which case form is valid i know
[17:53:22] <GinFuyou> form.is_valid() populates form.cleaned_data (not only that, but for what we are talking about)
[17:53:49] <GinFuyou> yes if form.is_valid() condition is true, this form is valid
[17:54:15] <theprophet> if condition is true is it also cleaned_data?
[17:54:36] <theprophet> or it has to be cleaned_data to be true?
[17:55:33] *** Quits: parst (sid30815@id-30815.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:55:33] *** Quits: sunarch (sid526836@user/sunarch) (Ping timeout: 250 seconds)
[17:55:38] <GinFuyou> still doesn't make sense. form.cleaned_data is data. A dict, where keys are names of form fields and values are converted and cleaned values
[17:55:59] *** Quits: Knyght (sid365271@2a03:5180:f:1::5:92d7) (Ping timeout: 250 seconds)
[17:55:59] *** Quits: sa (sid1055@2a03:5180:f::41f) (Ping timeout: 250 seconds)
[17:56:03] *** Quits: nathanhi (~nathanhi@user/nathanhi) (Quit: bye)
[17:56:11] *** Quits: lod (~lod@cyber-anlage.de) (Quit: fuck off)
[17:56:22] *** Joins: nathanhi (~nathanhi@user/nathanhi)
[17:56:34] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[17:56:35] *** Joins: parst (sid30815@id-30815.helmsley.irccloud.com)
[17:56:54] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[17:57:00] *** Joins: sunarch (sid526836@user/sunarch)
[17:58:25] *** Joins: lod (~lod@cyber-anlage.de)
[18:00:39] <GinFuyou> theprophet, maybe this mock-up make it clearer? https://dpaste.org/0wqB
[18:01:56] <theprophet> GinFuyou it does but tell me only one thing and this is all done
[18:03:51] *** Joins: savantcoder (~savantcod@pool-96-225-32-112.nwrknj.fios.verizon.net)
[18:04:15] <theprophet> remember the marked part in my screenshot? now ill change it like this https://ibb.co/26Pzc2F, will this title and content still be cleaned_data or not?
[18:04:29] <theprophet> thats the last question i got
[18:05:43] <theprophet> GinFuyou
[18:05:47] <GinFuyou> I don't see any changes?
[18:05:57] <theprophet> look at the marked teritory
[18:06:16] <savantcoder> cleaned_data is in `form`
[18:06:45] <theprophet> in first screenshot it was form.cleaned_data.get('title')
[18:07:00] <savantcoder> yeah now you'll pulling straight from the request vars so its not cleaned yet
[18:07:01] <theprophet> now its request.POST.get('title')
[18:07:12] <savantcoder> (my understanding)
[18:07:13] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[18:07:23] <theprophet> that was my question, thats all.
[18:07:32] <GinFuyou> theprophet, no both has request.POST.get('title')
[18:07:45] <GinFuyou> I only see marker changed from red to orange
[18:07:45] <pycode> hello
[18:07:50] <pycode> i am using DRF, this is my serializer: https://bpa.st/YRVQ
[18:07:58] <pycode> how can i add that "related" field too ?
[18:08:05] <pycode> i need all the fields from Activity model plus "related"
[18:08:12] <GinFuyou> I have a scientific theory it won't affect code execution
[18:08:33] <theprophet>  title = request.POST.get('title')  <--- this  versus this --->  title = form.cleaned_data.get('title')
[18:08:37] <theprophet> GinFuyou
[18:09:05] <GinFuyou> theprophet, first is antipattern and must not be used, second one is good
[18:09:21] <savantcoder> "must not be used" because its pulling unclean data
[18:09:24] <savantcoder> ;-)
[18:09:27] <GinFuyou> Yes
[18:09:53] <theprophet> title = request.POST.get('title') , so this is NOT one
[18:10:04] <theprophet> ok , thats it.
[18:10:08] <pycode> https://bpa.st/DZ5A
[18:10:13] <pycode> i wonder how can i get related model
[18:10:16] <theprophet> Thank you, big thank you.
[18:10:19] <pycode> i mean... i do not see the "related" field
[18:10:38] <pycode> is the queryset wrong ?
[18:10:40] <GinFuyou> not cleaned data? Yes, it's not, we keep telling you cleaned data goes into form.cleaned_data. Nowhere else
[18:12:01] <theprophet> GinFuyou ok i get it .  title = request.POST.get('title') <--- this is no  , this one is yes ----> title = form.cleaned_data.get('title') ... thank you. i wont bother you anymore.
[18:12:13] <savantcoder> you got it
[18:12:33] <theprophet> savantcoder thank you friend.
[18:12:43] <pycode> the models are: https://bpa.st/4GFA
[18:13:02] <GinFuyou> I don't mind being bothered if I can help, but please try better describing your problem and what is not clear
[18:17:20] <pycode> it seems not possible to retrieve the object with GenericForeignKey
[18:17:24] <pycode> is it true?
[18:19:26] <pycode> nobody use DRF ?
[18:20:03] <pycode> whats wrong wiht https://bpa.st/BJNQ ?
[18:20:07] <GinFuyou> Well, you should be able to retrieve anything if you make own serializer
[18:20:11] <pycode> i cant see "related"
[18:20:17] <pycode> GinFuyou, https://bpa.st/BJNQ
[18:20:40] <GinFuyou> This is generic relation?
[18:21:12] <pycode> the models are
[18:21:12] <pycode> https://bpa.st/4GFA
[18:21:20] <pycode> so now i am working on activities endpoints
[18:21:26] <pycode> not from Project
[18:21:31] <pycode> in project model i have
[18:21:45] <pycode>     activities = GenericRelation(Activity)
[18:22:05] <pycode> but for activities endpoints is not possible to retrieve related object?
[18:22:24] <bmbouter[m]> I'm looking for additional input on the question: Is seeding data in migrations better or using post_migrate hooks? The issue is that if a user were to run `django-admin flush` they would end up with a broken db when the application expects some basic data in the db at fresh install time
[18:22:24] <bmbouter[m]> https://github.com/pulp/pulpcore/pull/2118#discussion_r830075009
[18:22:34] <bmbouter[m]> what is the best practice here?
[18:23:02] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:23:23] <pycode> GinFuyou, maybe i can do that starting from projects and not from activities ?
[18:23:31] <GinFuyou> pycode, might be not possible, since there is no "real" relation?
[18:23:57] <GinFuyou> Honestly I know little about gfk, I try to avoid them
[18:24:46] <pycode> my problem is that need to "attach" activities to many models... that way i have unique activities table with
[18:24:52] <pycode> all the related object i need
[18:25:07] <pycode> otherwise i should create ProjectActivities etc etc
[18:25:18] <pycode> JobActivities
[18:25:21] <pycode> and so on
[18:25:36] <GinFuyou> bmbouter[m], why user would flush db?
[18:25:48] <pycode> but that way is very difficult to manage because a person can have activities from a project or from other different sources
[18:25:51] <pycode> understand GinFuyou ?
[18:26:07] <GinFuyou> I mean, you can't prevent user shooting own leg if they want.
[18:27:26] <bmbouter[m]> this is basically my argument as well. why would anyone do that?
[18:27:35] <bmbouter[m]> which got me wondering, what is the flush command even for?
[18:27:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[18:28:06] <GinFuyou> pycode, do you have retrieve activities for different models at same time?
[18:28:24] <GinFuyou> bmbouter[m], for developer perhaps?
[18:29:37] <GinFuyou> There certainly might be cases when you'd have seeding in post-migrate rather than migration, but it requires a reason for it, imo
[18:29:55] <pycode> GinFuyou, no i mean, lets suppose a dashbord where the user can see all his activities, if i have many tables like ProjectActivities JobActivities and so one it isi very difficult to build a calendar, so for that reason i thought to create just one activities table(model) where i store everything with a "link" to the related object that i attach to the activity
[18:30:14] <pycode> it works ok, but i would like to retrieve the related object oo
[18:30:38] <pycode> to understand if the attached object is a project a job or other
[18:30:53] <bmbouter[m]> GinFuyou: yeah I agree and what I can't come up with is: "what is a good reason for that" ?
[18:31:45] <pycode> GinFuyou, https://www.django-rest-framework.org/api-guide/relations/#generic-relationships
[18:32:01] <GinFuyou> pycode, activities can be attached trhough multiple foreign keys or intermediate (basically m2m) talbes
[18:33:29] <pycode> GinFuyou, do you mean is better to create an Activity models and then create Project, Job models that have m2m to Activity ?
[18:34:17] <pycode> but then i have a similar problem no? i mean, if i look at the calendar, i can get all the activities (with my solution too) but then i need to get their related object so how can i traverse it ?
[18:34:50] <GinFuyou> I'd first consider an approach like that, and only if it doesn't (e.g. if you have dozens of such models, it doesn't sound reasonable) I'll look into generic relations
[18:35:04] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:35:36] <GinFuyou> But well, explore basic generic relations, if you can access them like that, then you can get them in serializer as well
[18:35:51] <pycode> GinFuyou, the problem here is that genericrelation like mine and this other solution cant work correcly
[18:35:56] <pycode> yes i am trying but i suppose that
[18:36:10] <pycode> in the example the TaggedObjectRelatedField
[18:36:24] <pycode> is used from Bookmark or Note
[18:36:44] <pycode> i do not know i mean... it does not work here i do not see any "related" field in the json output
[18:37:31] <pycode> https://bpa.st/VTLQ GinFuyou
[18:39:23] <pycode> look similar to the exaMPLE
[18:49:11] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[18:59:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:59:03] *** ChanServ sets mode: +v EvilDMP
[19:00:10] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[19:02:12] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[19:05:55] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[19:07:44] *** Joins: mattil (~mattil@dy59yfhx4vmg266znr70y-4.rev.dnainternet.fi)
[19:12:02] *** Quits: mattil (~mattil@dy59yfhx4vmg266znr70y-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[19:20:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:32:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:32:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:33:17] *** Quits: savantcoder (~savantcod@pool-96-225-32-112.nwrknj.fios.verizon.net) (Quit: Client closed)
[19:33:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:33:17] *** ChanServ sets mode: +v EvilDMP
[19:37:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[19:53:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:12:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:12:37] *** ChanServ sets mode: +v EvilDMP
[20:15:28] *** Joins: Elzington (~Elzington@87.249.134.10)
[20:25:12] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:42] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:39:37] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[20:47:29] <pycode> does anyone know how generic relation works on DRF ?
[20:47:37] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[20:47:44] <pycode> i am having trouble with https://www.django-rest-framework.org/api-guide/relations/#generic-relationships
[20:48:02] <pycode> i can get tags from Bookmark
[20:48:24] <pycode> but i would like to start from TaggedItem and then retrieve the relation
[20:48:34] *** Joins: rje (~textual@65.141.156.170)
[20:50:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[20:54:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:46] *** Quits: pycode (~pycode3@2001:b07:5d28:551:7e2d:8bf4:de12:8ca2) (Ping timeout: 245 seconds)
[21:13:00] *** Joins: Elzington_ (~Elzington@87.249.134.26)
[21:15:36] *** Quits: Elzington (~Elzington@87.249.134.10) (Ping timeout: 252 seconds)
[21:34:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:35:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:40:20] *** Joins: jmd (~user@de.cellform.com)
[21:40:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:40:45] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[21:41:59] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[21:45:14] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:49:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[21:52:10] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[21:52:47] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:52:51] *** Joins: cliluw (~cliluw@47.147.77.43)
[21:56:56] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 250 seconds)
[21:57:16] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:01:01] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[22:02:03] *** Joins: blackbird_0 (~blackbird@102.157.62.138)
[22:02:05] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:169f:bf9f:fa8f:4be8)
[22:02:22] <blackbird_0> Hi
[22:02:39] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:03:44] *** Joins: Xof (~Xof@109.144.25.132)
[22:03:51] <blackbird_0> Is there a way to read the index of a template list from HTML <input> tag?
[22:04:30] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:05:10] *** Quits: theprophet (~theprophe@212.58.102.156) (Quit: Client closed)
[22:05:20] <blackbird_0> i.e: if the value of the input is "0" then access A.0, if "1" access A.1, ...
[22:06:07] <blackbird_0> Please, help me is this
[22:06:25] <blackbird_0> *on this
[22:10:45] *** Quits: sandeepk (~sandeepk@223.130.30.47) (Quit: Leaving)
[22:11:57] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 240 seconds)
[22:14:49] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:14:57] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:169f:bf9f:fa8f:4be8) (Ping timeout: 240 seconds)
[22:19:19] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:a923:3f21:2f27:b1a5)
[22:20:13] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:20:25] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[22:25:53] *** Quits: slavfox_ (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[22:26:02] *** Joins: circ-user-kzkvy (~circuser-@pool-173-67-10-184.bltmmd.fios.verizon.net)
[22:26:18] <circ-user-kzkvy> Hi!
[22:26:33] <circ-user-kzkvy> Can anyone tell me how to view TLS handshake in django logs?
[22:26:50] <circ-user-kzkvy> That is, config django to output TLS handshake for debugging purposes.
[22:27:26] *** Quits: iomari891 (~iomari891@102.91.5.94) (Read error: Connection reset by peer)
[22:31:06] *** Joins: slavfox (~slavfox@93.158.232.111)
[22:32:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:35:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:35:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:35:43] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:36:29] *** Quits: Elzington_ (~Elzington@87.249.134.26) (Quit: Leaving)
[22:45:15] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[22:45:30] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 260 seconds)
[22:45:44] *** Joins: bambanxx (~bambanx@190.162.68.107)
[22:48:53] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[22:56:21] *** Joins: slav0nic (slav0nic@python.su)
[22:59:20] *** Quits: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 250 seconds)
[22:59:46] *** Quits: blackbird_0 (~blackbird@102.157.62.138) (Remote host closed the connection)
[23:00:13] *** Joins: blackbird_0 (~blackbird@102.157.62.138)
[23:02:22] *** Quits: Xof (~Xof@109.144.25.132) (Ping timeout: 250 seconds)
[23:05:06] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[23:15:48] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Ping timeout: 250 seconds)
[23:24:49] *** Quits: bambanxx (~bambanx@190.162.68.107) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:26:16] *** Quits: blackbird_0 (~blackbird@102.157.62.138) (Remote host closed the connection)
[23:26:44] *** Joins: blackbird_0 (~blackbird@102.157.62.138)
[23:35:43] <nbjoerg> circ-user-kzkvy: django doesn't normally terminate the TLS connetion, but the webserver in front of it?
[23:36:53] <circ-user-kzkvy> ty!
[23:36:57] *** Quits: circ-user-kzkvy (~circuser-@pool-173-67-10-184.bltmmd.fios.verizon.net) (Remote host closed the connection)
[23:45:40] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
[23:46:01] *** Quits: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7) (Client Quit)
[23:47:08] *** Joins: bambanxx (~bambanx@2800:150:106:1061:80a4:10eb:7bcc:ccd7)
