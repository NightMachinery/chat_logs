[00:00:04] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.228)
[00:00:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[00:01:46] *** Joins: sinaowolabi (~SinaOwola@169.159.72.170)
[00:02:00] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[00:05:16] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:06:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:07:29] *** Joins: Betal (~Betal@user/betal)
[00:08:44] *** Joins: seninha (~seninha@user/seninha)
[00:20:04] *** Joins: MonoL (~MonoL@user/MonoL)
[00:20:23] <MonoL> is ex installed like in every distro ever?
[00:20:34] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[00:22:12] <Earnestly> You might be hard pressed to find one that doesn't as it usually comes as a pair with vi.  (POSIX doesn't require them to be available)
[00:26:28] <MonoL> Have you ever known vi to be not installed?
[00:26:33] <MonoL> Is vi big?
[00:27:53] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[00:27:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[00:28:44] <unop> . o 0 ( which vi? )
[00:31:42] <MonoL> There's more than one vi?
[00:32:01] <emanuele6> yes
[00:32:37] *** Joins: zro (~zro@user/zro)
[00:34:23] <emanuele6> ex-vi, nvi, vim, busybox vi, and many others.
[00:36:24] <geirha> emacs probably has vi in there somewhere too
[00:37:00] <Friithian> huh, busybox has vi built in
[00:37:24] *** Joins: rufito (~phil@186-79-14-28.baf.movistar.cl)
[00:37:37] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:37:52] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[00:38:16] <Earnestly> vile
[00:38:17] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:38:20] <emanuele6> elvis
[00:38:28] <Earnestly> That's all I know
[00:38:33] <emanuele6> neovim if that counts
[00:38:49] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:78e1:cebc:1afc:516f)
[00:39:11] <Friithian> don't call neovim, vi! it is way too advanced for that!
[00:39:29] <emanuele6> s/advanced/backwards/
[00:40:32] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 256 seconds)
[00:40:59] <MonoL> wow
[00:41:39] *** Quits: MonoL (~MonoL@user/MonoL) (Quit: Leaving)
[00:45:57] <Helmholtz> How to have a binary option in POSIX getopt?
[00:45:57] *** Quits: blingrang4 (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[00:46:15] <Helmholtz> like I want `-l` to have an effect itself without needing an argument
[00:46:47] <geirha> just don't put a colon behind it
[00:47:19] <Helmholtz> geirha, thanks!
[00:47:57] *** Joins: blingrang4 (~blingrang@user/blingrang)
[00:48:06] <Helmholtz> I should control optional/required manually right? There is no magic syntax for it in posix getopt?
[00:48:33] <geirha> you want options with optional arguments? that's a GNUism, no other unix or unix-like systems does that
[00:48:42] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:49:53] <geirha> Also, I'm assuming you mean getopts(1) with plural s
[00:50:02] *** Quits: blingrang4 (~blingrang@user/blingrang) (Client Quit)
[00:50:07] <Helmholtz> geirha, like my_cmd -a must_give -b "meh" .... I should control in my code that -a exists, right?
[00:50:27] <Helmholtz> yes
[00:50:47] <geirha> you have to tell getopts that -a is an option that takes an argument, yes
[00:51:12] <emanuele6> i think they want to require the user to pass -a
[00:51:18] *** Joins: Minvera (~Minvera@user/Minvera)
[00:54:15] <emanuele6> if that is the case, yes, you have to make sure you have received -a and return an error otherwise yourself. one way to do it is setting a in the -a case and then return with an error after the getopts loop if that variable was not set.
[00:54:45] <emanuele6> s/setting a/& variable/
[00:57:25] <howdoi> rsync -azP  _site/ foo@example.com:~/public_html/posts
[00:57:46] <howdoi> ^ shouldn't this move only the newly created files and dirs?
[00:58:56] <emanuele6> is ~ supposed to expand there?
[00:59:04] <emanuele6> it will expand if you don't quote it
[00:59:07] <howdoi> yes, it does
[00:59:28] <howdoi> but it is not copying the files the way I expected it to be
[00:59:50] <howdoi> All I am trying to do it move the _site contents to posts in the remote location
[00:59:51] <emanuele6> are you sure it should expand?
[01:00:13] <howdoi> yes! because that's where my HTML dir is
[01:00:22] <howdoi> public dir on remote that is served
[01:01:05] <emanuele6> exactly that is what i am saying
[01:01:10] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:01:11] <emanuele6> it is a remote directory
[01:01:23] <emanuele6> why would you want ~ to expand in your local machine?
[01:02:02] <emanuele6> maybe i am just wrong since i don't use rsync, but that doesn't look right to me.
[01:02:38] <emanuele6> ~ will expand to $HOME which is you current local user's home directory, not the home directory of the remote foo user.
[01:02:47] <howdoi> rsync is expanding ~ on the remote
[01:02:51] <larryv> # printf '%s' foo@example.com:~/public_html/posts
[01:02:52] <shbot> larryv: foo@example.com:~/public_html/posts
[01:02:56] <larryv> # var=foo@example.com:~/public_html/posts; declare -p var
[01:02:58] <shbot> larryv: declare -- var="foo@example.com:/root/public_html/posts"
[01:03:15] <emanuele6> oh, right that was in the mailing list some month ago
[01:03:25] *** Joins: patiencezero (~vespeneGa@user/patiencezero)
[01:03:34] <emanuele6> it is a bash bug it doesn't actually expand even though it should
[01:03:54] <emanuele6> d# printf '%s' foo@example.com:~/public_html/posts
[01:03:56] <shbot> emanuele6: foo@example.com:~/public_html/posts
[01:03:59] <emanuele6> maybe not, nevermind
[01:04:13] <patiencezero> I'm trying to regex match '(' ')' characters using the built-in regex match of [[ string1 ~= regex ]], how do I properly escape ( and )?
[01:04:29] <emanuele6> patiencezero: \(
[01:04:40] <emanuele6> or "(" or '('
[01:04:44] <emanuele6> either is fine
[01:04:45] *** Joins: user1 (~user@95.0.240.62)
[01:04:54] *** Parts: flughafen (~flughafen@p57969549.dip0.t-ipconnect.de) (WeeChat 2.8)
[01:05:06] <howdoi> so, finally?
[01:05:10] <patiencezero> I have  [[ $LINE =~ ([0-9]{3})\s[0-9]{3}\-[0-9]{4} ]] || [[ $LINE =~ [0-9]{3}\-[0-9]{3}\-[0-9]{4} ]]
[01:05:28] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[01:05:37] <patiencezero> I'm not matching '(xxx) xxx-xxxx' for some reason
[01:05:53] <emanuele6> \s is not ERE.
[01:06:04] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[01:06:05] <emanuele6> that will not work on a system that does not use GNU libc
[01:06:19] <patiencezero> I guess '\ ' then?
[01:06:29] <emanuele6> use [[:space:]] instead. also you probably want to use [[:blank:]] instead of [[:space:]] or \s anyway
[01:06:48] <emanuele6> !varcap
[01:06:48] <patiencezero> that did the trick!
[01:06:48] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[01:07:03] <emanuele6> patiencezero: your regex is not anchored.
[01:07:21] <emanuele6> also, why not just use space?
[01:08:23] <emanuele6> # a='hello, user'; if [[ $a =~ hello,\ user ]]; then echo yes; else echo no; fi
[01:08:24] <shbot> emanuele6: yes
[01:08:32] <emanuele6> # a='hello, user'; if [[ $a =~ us ]]; then echo yes; else echo no; fi
[01:08:33] <shbot> emanuele6: yes
[01:08:45] <emanuele6> # a='aaahello, useraaa'; if [[ $a =~ hello,\ user ]]; then echo yes; else echo no; fi
[01:08:47] <shbot> emanuele6: yes
[01:08:55] <emanuele6> # a='aaahello, useraaa'; if [[ $a =~ ^hello,\ user$ ]]; then echo yes; else echo no; fi
[01:08:57] <shbot> emanuele6: no
[01:09:29] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[01:09:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[01:11:32] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:11:56] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:14:02] <emanuele6> patiencezero: what you want is probably  ^(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{3}-[0123456789]{4}$
[01:14:48] *** Quits: rufito (~phil@186-79-14-28.baf.movistar.cl) (Quit: Leaving)
[01:14:49] <patiencezero> thanks emanuele6. is [0-9] notation not allowed in that form of regex?
[01:14:55] <emanuele6> it is allowed
[01:15:00] <emanuele6> but that is funky
[01:15:21] <emanuele6> [0-9] will match any character that the locale thinks is between 0 and 9 "alphabetically"
[01:15:29] <emanuele6> so it may include weird unicode numbers
[01:15:44] <emanuele6> one thing you can do to simplify this is not use a regex at all
[01:15:51] <emanuele6> and use a bash extglob match
[01:16:46] <emanuele6> [[ $line == @(\([0-9][0-9][0-9]\) |[0-9][0-9][0-9]-)[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] ]]
[01:17:19] <emanuele6> that makes [0-9] just match [0123456789] and not funky characters, but doesn't have {3} syntax
[01:17:29] <emanuele6> also doesn't require anchoring with ^$
[01:17:59] <patiencezero> which is fine, I feel like readability is last priority when it comes to regex and the like
[01:18:16] <patiencezero> hardly ever looks pretty, especially after escaping characters
[01:19:06] <emanuele6> in ksh, you could have used   @(\({3}([0-9])\) |{3}([0-9])-){3}([0-9])-{4}([0-9])
[01:19:32] <emanuele6> but unfortunately bash decided to not copy that ksh feature when it copied extglobs
[01:21:21] <patiencezero> I should probably use something like egrep anyway.
[01:21:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[01:21:32] <patiencezero> I thought I had to use only bash built-ins, but apparently I don't
[01:21:42] <emanuele6> there is no difference with egrep.
[01:21:58] <emanuele6> it would still have to be  ^(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{3}-[0123456789]{4}$
[01:22:32] <emanuele6> ( well, without the \ before the space )
[01:23:30] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[01:23:32] *** Quits: lavaball (thomas@31.204.155.215) (Remote host closed the connection)
[01:24:35] <patiencezero> how did you end up learning about unintended character matching of range notation?
[01:24:58] <emanuele6> someone showed me
[01:25:14] <emanuele6> also i read the POSIX specification
[01:25:16] <emanuele6> !regex
[01:25:16] <greybot> Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[01:25:23] <emanuele6> err
[01:25:25] <emanuele6> !ere
[01:25:25] <greybot> Extended Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04 or https://man7.org/linux/man-pages/man7/regex.7.html
[01:25:37] <patiencezero> ahh gotcha, I'm going to have to start doing that
[01:26:38] <patiencezero> Unexpected string formatting seems to consistently find a way to catch me off guard.
[01:26:56] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:26:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:27:20] <patiencezero> awhile back I was writing a backup utility and completely overlooked the fact that linux filenames are byte strings
[01:27:55] <patiencezero> I just assumed they would be EN_US unicode characters... whoops!
[01:28:13] <emanuele6> some languages allow you to set the regex to be ascii mode e.g. perl and javascript to work around these problems:  characters classes like [[:space:]] being based on the LC_CTYPE of the locale and ranges like [0-9] being based on the lexicographical order defined by the LC_COLLATE of the locale
[01:28:56] <emanuele6> another work around for bash and programs like grep is to set LANG=C or LC_whatever=C
[01:29:21] <emanuele6> which will use the POSIX locale definitions
[01:29:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[01:30:04] *** Joins: aod (~a@200.44.239.12)
[01:30:05] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[01:30:09] *** Quits: adderall (~adderall@user/adderall) (Ping timeout: 256 seconds)
[01:30:40] *** Joins: unop (~unop@195.91.14.193)
[01:30:42] <emanuele6> but that can be dangerous: e.g. あ will be considered three characters in the C locale
[01:31:25] <emanuele6> # [[ あ =~ ^.$ ]] && echo one; [[ あ =~ ^..$ ]] && echo two; [[ あ =~ ^...$ ]] && echo three
[01:31:26] <shbot> emanuele6: three
[01:31:38] <emanuele6> # locale -a | paste -s
[01:31:40] <shbot> emanuele6: C       POSIX   de_DE.utf8      en_US.utf8      et_EE.utf8      nb_NO.utf8
[01:31:46] <emanuele6> # LANG=en_US.utf8; [[ あ =~ ^.$ ]] && echo one; [[ あ =~ ^..$ ]] && echo two; [[ あ =~ ^...$ ]] && echo three
[01:31:47] <shbot> emanuele6: one
[01:32:19] <emanuele6> so you get [0-9] as a shorter alternative to [0123456789] at the cost of screwing up .
[01:32:25] <Earnestly> # printf あ | LANG=en_US.utf8 wc -c # lol GNU
[01:32:27] <shbot> Earnestly: 3
[01:32:40] <emanuele6> Earnestly: -c is bytes
[01:32:42] <Earnestly> # printf あ | LANG=en_US.utf8 wc -m
[01:32:43] <emanuele6> you want -m
[01:32:44] <shbot> Earnestly: 1
[01:32:47] <Earnestly> emanuele6: Hmmm.
[01:32:55] <Earnestly> Ah
[01:33:08] <Earnestly> It's fold -w 1, I keep forgetting
[01:33:08] *** Joins: masoudd (~masoudd@user/masoudd)
[01:33:09] <emanuele6> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/wc.html that is posix
[01:33:26] <Earnestly> # printf あ | LANG=en_US.utf8 fold -w 1
[01:33:28] <shbot> Earnestly: no output
[01:33:54] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[01:34:03] <Earnestly> I wonder if rewrite of coreutils will be complete before this is available
[01:34:10] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Remote host closed the connection)
[01:34:22] *** Joins: masoudd (~masoudd@user/masoudd)
[01:34:32] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[01:35:19] <emanuele6> patiencezero: by the way, you can use [0-9] in bash globs safely just because bash has a nice option that makes ranges only work with ascii characters by default
[01:35:27] <emanuele6> # shopt globasciiranges
[01:35:28] <shbot> emanuele6: globasciiranges on
[01:35:35] <emanuele6> that is not standard for all shells
[01:35:39] <patiencezero> ahh, very nice find
[01:36:17] <emanuele6> but, since bash didn't copy {3}() syntax from ksh, you will have to write [0-9] multiple times
[01:36:22] *** Joins: crashrep (~crashrep@user/crashrep)
[01:37:03] <patiencezero> I'm able to get ` grep -E '(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{4}' file.txt
[01:37:03] <patiencezero>  ` to work as a one-liner
[01:37:06] <Earnestly> Only a matter of time
[01:37:12] <emanuele6> patiencezero: just to be sure you didn't misunderstand: not in bash regexes, just in bash globs
[01:37:15] <patiencezero> but it isn't anchored
[01:37:33] <emanuele6> patiencezero: why are you using grep?
[01:37:48] <emanuele6> [[ $line =~ ^(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{3}-[0123456789]{4}$ ]]
[01:37:50] <patiencezero> so I don't have to use a test statement and can keep it as one line
[01:38:12] <emanuele6> or:  [[ $line == @(\([0-9][0-9][0-9]\) |[0-9][0-9][0-9]-)[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] ]]
[01:38:19] *** Quits: LordOfLive (uid538075@tinside.irccloud.com) (Changing host)
[01:38:19] *** Joins: LordOfLive (uid538075@user/joeroot)
[01:38:26] <emanuele6> patiencezero: what are you talking about?
[01:38:40] *** LordOfLive is now known as JOEROOT
[01:39:24] <emanuele6> oh, you need to extract phone numbers from a file?
[01:40:17] <Earnestly> It would be nice if I could do case $foo in *$IFS*) to mean *$'\n'*, *$'\t'* and *' '*
[01:40:20] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:40:38] <emanuele6> if you have GNU grep, you can use that in combination with prefixing your regex with \< and adding a \> at the end, and, using the -o option
[01:40:58] <patiencezero> emanuele6, yeah, I'm just extracting some phone numbers
[01:41:03] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:41:19] <Earnestly> Hm
[01:41:19] <emanuele6> to also extract numbers from likes like   "call 000-000-0000 and 111-111-1111 at 2 am"
[01:41:33] <Earnestly> # f=${IFS%??}; declare -p f
[01:41:34] <shbot> Earnestly: declare -- f=" "
[01:41:38] *** Joins: yustin (~yustin@user/yustin)
[01:41:44] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:41:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:42:21] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:43:12] *** Quits: Minvera (~Minvera@user/Minvera) (Quit: Leaving)
[01:43:20] <Earnestly> d# nl=${IFS#??}; printf %s "$nl" | od -An -tc
[01:43:22] <shbot> Earnestly:   \n
[01:44:11] <Earnestly> order is specified by POSIX too, hmm
[01:44:34] *** Quits: magla (~gelignite@55d4e921.access.ecotel.net) (Quit: Stay safe!)
[01:44:51] <emanuele6> patiencezero: your regex is missing the 3 numbers in the middle
[01:45:21] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Quit: Leaving)
[01:45:31] <emanuele6> either way, with GNU grep you can use something like this
[01:45:34] <emanuele6> # printf '%s\n' 'call 000-000-0000 and 111-111-1111 at 2 am' '222-222-2222'
[01:45:35] <shbot> emanuele6: call 000-000-0000 and 111-111-1111 at 2 am
[01:45:35] <shbot> emanuele6: 222-222-2222
[01:45:42] <emanuele6> # printf '%s\n' 'call 000-000-0000 and 111-111-1111 at 2 am' '222-222-2222' | grep -oE '\<(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{3}-[0123456789]{4}\>'
[01:45:43] <shbot> emanuele6: 000-000-0000
[01:45:44] <shbot> emanuele6: 111-111-1111
[01:45:44] <shbot> emanuele6: 222-222-2222
[01:46:14] <emanuele6> printf '%s\n' 'call 000-000-0000 and 111-111-111 at 2 am' '222-222-22'
[01:46:17] <emanuele6> # printf '%s\n' 'call 000-000-0000 and 111-111-111 at 2 am' '222-222-22'
[01:46:18] <shbot> emanuele6: call 000-000-0000 and 111-111-111 at 2 am
[01:46:18] <shbot> emanuele6: 222-222-22
[01:46:27] <emanuele6> # printf '%s\n' 'call 000-000-0000 and 111-111-111 at 2 am' 'a222-222-2222'
[01:46:28] <shbot> emanuele6: call 000-000-0000 and 111-111-111 at 2 am
[01:46:28] <shbot> emanuele6: a222-222-2222
[01:46:45] <emanuele6> and it will not count malformed stuff like  a222-222-2222  or  111-111-111 as phone numbers
[01:46:58] <emanuele6> # printf '%s\n' 'call 000-000-0000 and 111-111-111 at 2 am' 'a222-222-2222' | grep -oE '\<(\([0123456789]{3}\)\ |[0123456789]{3}-)[0123456789]{3}-[0123456789]{4}\>'
[01:46:58] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:59] <shbot> emanuele6: 000-000-0000
[01:47:33] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.228) (Quit: leaving)
[01:47:44] <emanuele6> in GNU grep regexes, \< means "start of word" and \> means "end of word", and the -o option makes it print only the matches
[01:47:51] <emanuele6> instead of the lines that matched
[01:48:09] <patiencezero> ahh gotcha, was just looking at the manpage to see what the option was for! :P
[01:49:26] <emanuele6> if you want to learn about \< and \> i think you have to read the `info' page instead of the `man' page
[01:49:32] <emanuele6> section 3.3 to be precise
[01:49:54] <emanuele6> oh, nevermind. it is also mentioned in the man page
[01:50:14] *** Quits: adac (~adac@213-47-252-7.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[01:51:04] <Earnestly> At that point, must as well bring out -P and go to town
[01:51:19] <neshpion> muh ripgrep
[01:51:19] <emanuele6> that would not help so no point
[01:51:35] * emanuele6 would have used jq's scan/1 function hehe
[01:51:37] <Earnestly> PCRE has word boundries as 'standard'
[01:53:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:53:20] *** Joins: epony (epony@user/epony)
[01:53:47] <emanuele6> i think PCRE actually does not have \> and \<, but it has \b
[01:54:02] <emanuele6> \b is the union of \< and \>
[01:54:28] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:54:36] <emanuele6> ( GNU grep also has \b )
[01:54:45] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[01:55:06] *** Joins: rcernin (~rcernin@124.190.132.36)
[01:55:38] <emanuele6> i am surprised perl doesn't have those. \< is nice to get the first character of a word with \<(.)
[01:55:51] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:55:58] <emanuele6> i guess (?:^|\W)(\w) works in perl
[01:56:37] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[01:56:47] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[01:57:44] <emanuele6> or even \b(\w) i guess
[01:57:49] <Earnestly> I suppose \< takes account of first in line, punctuation, etc
[01:57:55] *** Quits: aod (~a@200.44.239.12) (Ping timeout: 256 seconds)
[01:58:35] <Earnestly> I literally read posix manuals because they're actually excellent, so I'm slowly forgetting GNU stuff
[01:59:13] <emanuele6> \< is like \b in perl, but only matches the start of a word, not the end
[01:59:27] <emanuele6> \> only matches the end
[01:59:47] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[01:59:47] <emanuele6> "matches"; it doesn't actually match any character, it is more like an anchor/assertion
[01:59:51] <Earnestly> Yeah I just found it in manual, explains this nicely
[02:01:23] <yustin> # echo "this is a test" | grep -oE "\<(.)"
[02:01:30] <shbot> yustin: t
[02:01:30] <shbot> yustin: i
[02:01:30] <shbot> yustin: etc... ( http://ix.io/3Pla )
[02:01:42] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[02:01:49] <emanuele6> \<. would also work there, but yeah
[02:01:53] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 256 seconds)
[02:02:06] <emanuele6> also -E is unnecessary at that point
[02:02:07] <yustin> yup
[02:03:26] <emanuele6> # echo "this   is   a  " | grep -o '\b\w'
[02:03:28] <shbot> emanuele6: t
[02:03:28] <shbot> emanuele6: i
[02:03:28] <shbot> emanuele6: a
[02:03:39] <emanuele6> yeah, i guess you could use \b\w in perl for that
[02:04:19] <yustin> scary ... i get blanklines inbetween
[02:04:20] <emanuele6> but \< and \> seem still very nice to have, weird that perl has not got them
[02:04:36] <yustin> ah ... got it
[02:04:44] <emanuele6> yustin: you probably used . instead of \w
[02:04:51] <yustin> # echo "this is a test" | grep -o "\b."
[02:04:57] <shbot> yustin: t
[02:04:57] <shbot> yustin:
[02:04:57] <yustin> exactly
[02:04:57] <shbot> yustin: etc... ( http://ix.io/3Plb )
[02:05:14] <emanuele6> \b. will match spaces after the end of words.
[02:05:19] <yustin> hahaha .. nice regexriddlenight :)
[02:05:26] *** Joins: idego (~idego@user/idego)
[02:05:27] <emanuele6> or punctuation or whatever
[02:05:34] <emanuele6> as i said, \b is the union of \< and \>
[02:05:55] <yustin> yup ... and \w keeps it from getting the spaces
[02:06:03] <larryv> https://www.pcre.org/current/doc/html/pcre2pattern.html#SEC11
[02:07:06] <howdoi> rsync -azP  _site/* foo@baz.com:/home/www/public_html/posts/
[02:07:06] <howdoi> ^ rsync is moving only the files and dir that match to the remote dir and not the new ones!
[02:07:17] <howdoi> Am I missing something here?
[02:07:41] <emanuele6> try #rsync
[02:07:45] <Earnestly> * is not needed here, rsync has special logic for handling trailing /
[02:07:49] <Earnestly> But yes
[02:08:13] <Earnestly> * may expand directory without trailing /, and that might mean something
[02:09:50] *** Quits: biccboii (~textual@c-71-203-242-107.hsd1.tn.comcast.net) (Read error: Connection reset by peer)
[02:12:43] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[02:12:44] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:78e1:cebc:1afc:516f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:13:30] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[02:18:58] *** Joins: rya (~ry@user/rya)
[02:19:55] <emanuele6> !forget nabq
[02:19:55] <greybot> OK, emanuele6
[02:21:02] <lotharn> how do i spawn a list of commands all at once in a for statement?
[02:21:16] <emanuele6> !learn nabq Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #docker #git #rsync #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[02:21:16] <greybot> OK, emanuele6
[02:21:22] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:21:48] <emanuele6> lotharn: at once?
[02:21:57] *** Joins: mat001 (~mat001@72.28.108.216)
[02:22:03] <emanuele6> like, in parallel?
[02:22:10] <howdoi> rsync --exclude=posts -h -v -r -P -t _site/* example@foo:/home/posts/ && rsync -h -v -r -P -t _site/posts/* example@foo:/home/posts/
[02:22:10] <howdoi> Is there a way to simplify ^?
[02:22:34] <emanuele6> howdoi: you are probably better off asking in the #rsync channel honestly
[02:23:16] <emanuele6> lotharn: if you want to run the commands in the background, use & e.g.   cmd1 "$arg" & cmd2 "$arg" & cmd3 "$arg" &
[02:24:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:26:13] <howdoi> emanuele6: thanks, on it
[02:26:18] *** Joins: seninha (~seninha@user/seninha)
[02:26:20] <emanuele6> howdoi: either way, i think you missed what Earnestly said. `_site/' would be interpreted specially by rsync (probably copying all files in subdirectories etc) and you are just screwing yourself over by adding *
[02:26:56] <emanuele6> because rsync will actually get  _site/file1.html _site/file2.html _site/posts
[02:27:02] <emanuele6> instead of _site/
[02:28:32] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[02:28:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[02:30:14] <AliasSpider> (sry)> Artificial Intelligence programming by SGD >> https://join.slack.com/t/artificialint-ysc5091/shared_invite/zt-13b6herrb-w8Bw2WbyLXtShjVKmmqzVg
[02:30:44] <lotharn> for i in $(ls *.ovpn); do sudo openvpn --config $i --auth-user-pass pass & ; done
[02:30:52] <emanuele6> !ls
[02:30:53] <greybot> DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[02:30:53] <lotharn> fails
[02:31:11] <emanuele6> lotharn: yes, that is not syntactically valid
[02:31:18] <emanuele6> but don't use ls there
[02:31:34] <emanuele6> for i in *.ovpn; do sudo openvpn --config "$i" --auth-user-pass pass & done
[02:31:40] <Earnestly> emanuele6: Some very old notes on rsync filter syntax, although not directly related to command line 'syntax', does highlight some of the ...design: https://0x0.st/z0AM.txt
[02:31:49] <emanuele6> you can't have either & or ; or \n
[02:31:57] <emanuele6> err
[02:31:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[02:32:09] <emanuele6> you can't have both & and ; at the same time
[02:32:17] <lotharn> oh
[02:33:05] <emanuele6> Earnestly: thanks
[02:33:28] <Earnestly> borg has similar feature but better
[02:36:15] *** Joins: mat001 (~mat001@72.28.108.216)
[02:38:31] *** Joins: vysn (~vysn@user/vysn)
[02:39:12] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:39:58] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[02:40:02] *** Joins: dre (~dre@2001:8003:c932:c301:880:1cdd:3f72:271d)
[02:43:07] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[02:43:28] *** Joins: kill (~killown@user/killown)
[02:45:15] *** Quits: kill (~killown@user/killown) (Client Quit)
[02:49:57] <Earnestly> I wish xsltproc did xslt2.0 or 3.0
[02:50:42] *** Parts: idego (~idego@user/idego) ()
[02:51:04] <Earnestly> I think we'd have far fewer standards if those who specified them were forced to provide implementations in C
[02:51:07] *** Joins: masoudd (~masoudd@user/masoudd)
[02:51:35] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[02:52:04] *** Joins: crashrep (~crashrep@user/crashrep)
[02:52:16] *** Quits: user1 (~user@95.0.240.62) ()
[02:53:06] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:53] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[02:56:51] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[02:57:52] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[02:57:53] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[02:58:09] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[03:03:35] *** Quits: masoudd (~masoudd@user/masoudd) (Remote host closed the connection)
[03:03:36] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[03:07:43] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:ade8::1a29) (Quit: MadcapJake)
[03:10:05] <texasmynsted> Is the following the best way to determine if a string variable is unset or empty?
[03:10:09] <texasmynsted> var="x";if ! test -n "${var-}" ; then echo "var is unset"; else echo "var is set to '$var'"; fi
[03:10:11] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[03:10:35] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[03:12:34] <geirha> if [[ ! $var ]] ; then printf 'var is unset or empty\n' ; fi
[03:13:55] <tirnanog> ${var-} was pointless, by the way. the expansion of an unset variable is also the empty string.
[03:14:17] <texasmynsted> your way short, and appears to work.
[03:14:23] <texasmynsted> :-)
[03:14:29] <texasmynsted> Thank you
[03:15:00] *** gl0woo_ is now known as gl0woo
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:14] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[03:15:19] <larryv> did you find that on the internet somewhere
[03:15:33] <wiscii> lol
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:47] <Friithian> nah, I found it on a random piece of paper in a parking lot
[03:15:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:16:05] <wiscii> lottery ticket winner
[03:16:37] *** Quits: skered (~dereks@user/skered) (Ping timeout: 240 seconds)
[03:16:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:17:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[03:17:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:18:42] <larryv> presumably the author wanted to avoid set -u errors
[03:18:43] <texasmynsted> The internet is _full_ of many answers.
[03:18:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[03:19:07] <Friithian> yeah, I can answer any and every question
[03:19:35] <texasmynsted> me too if nobody cares if the answer is correct
[03:19:42] <Friithian> exactly!
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:09] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:20:12] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[03:20:22] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:00] *** Joins: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com)
[03:23:05] *** Parts: yolo (~xxiao@li1120-73.members.linode.com) ()
[03:27:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:29:10] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[03:29:45] *** Joins: MadcapJake_ (~MadcapJak@2600:6c44:257f:ade8::1a29)
[03:32:48] *** Quits: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com) (Ping timeout: 256 seconds)
[03:32:48] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[03:32:48] *** MadcapJake_ is now known as MadcapJake
[03:32:58] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:36:22] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:38:17] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Ping timeout: 240 seconds)
[03:39:26] *** Joins: AliasSpider (~spider-ku@nitra.ostv.sk)
[03:40:49] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[03:42:21] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[03:44:02] *** Joins: Dan39 (~dan@user/dan39)
[03:44:07] *** Joins: volga629 (~volga629@72.139.93.26)
[03:44:32] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:44:37] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[03:45:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[03:45:29] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[03:46:29] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:50:56] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[03:50:57] *** Joins: Masterphi (~Masterphi@user/masterphi)
[03:50:57] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[03:53:12] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[03:56:08] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[03:58:03] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[03:58:11] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:59:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[03:59:38] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:00:35] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:00:45] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:02:26] *** Joins: cdown (~cdown@188.214.11.14)
[04:03:18] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:06:38] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[04:08:55] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:10:51] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[04:11:34] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[04:11:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:12:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:12:20] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:13:17] *** Joins: zebrag (~chris@user/zebrag)
[04:15:18] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[04:15:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:15:29] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:19:48] *** Joins: rcernin (~rcernin@124.190.132.36)
[04:19:50] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:23:07] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Read error: Connection reset by peer)
[04:24:53] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Quit: WeeChat 3.3)
[04:25:15] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[04:25:24] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[04:27:27] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[04:28:54] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[04:30:27] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:30:37] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:33:31] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[04:34:15] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:37:24] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[04:39:04] *** Quits: jamiejackson (~jamiejack@199.223.31.57) (Quit: Connection closed)
[04:39:36] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Quit: Client closed)
[04:40:40] *** Joins: akoana (~ah@user/akoana)
[04:40:55] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:46:16] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:46:38] *** Joins: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[04:47:34] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:47:36] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[04:47:46] *** Joins: jensen (~jensen@65.78.100.184)
[04:48:16] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:48:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:48:58] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:49:42] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:50:10] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:50:28] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:52:14] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:52:36] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:52:54] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[04:54:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:55:56] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[04:59:12] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[04:59:46] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[05:01:33] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[05:01:55] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[05:03:34] *** Quits: knstn (~knstn@ppp-94-66-57-125.home.otenet.gr) (Quit: leaving)
[05:12:47] *** Joins: igemnace (~ian@user/igemnace)
[05:15:37] *** Joins: dsrt^ (~dsrt@50.235.176.163)
[05:15:59] *** Joins: karabaja4 (~karabaja4@dh207-94-139.xnet.hr)
[05:16:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[05:16:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:17:45] *** Joins: seninha (~seninha@user/seninha)
[05:17:57] *** Quits: patiencezero (~vespeneGa@user/patiencezero) (Ping timeout: 240 seconds)
[05:18:16] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[05:18:27] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:21:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:23:01] <kurahaupo> !box
[05:23:01] <greybot> box(){ local p m w a=l OPTIND;while getopts lcr w;do a=$w;done;set - "${@:OPTIND}";for w;do((${#w}>${#m}))&&m=$w;done;printf "\e(0lq${m//?/q}qk\n";for w;do printf "x\e(B ";((p=${#m}-${#w}));case $a in c)printf "%$((p++/2))s%s%$((p/2))s" "" "$w";;r)printf "%$p"s%s "" "$w";;*)printf "%s%$p"s "$w";esac;printf " \e(0x\n";done;printf "mq${m//?/q}qj\e(B\n";}
[05:23:33] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Quit: Konversation terminated!)
[05:23:48] *** Joins: skered (~dereks@user/skered)
[05:23:54] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[05:26:43] <wiscii> it will not go into the box
[05:28:46] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[05:29:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:30:17] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:35] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:31:26] <wiscii> https://m.xkcd.com/325/
[05:33:17] *** Joins: vlm (~vlm@user/vlm)
[05:33:38] <wiscii> i am curious, i've read back but i think this box function is old runes
[05:35:03] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:36:37] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:ade8::1a29) (Quit: MadcapJake)
[05:42:25] *** Joins: led_belly (~led_belly@37.120.197.46)
[05:43:00] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Quit: Konversation terminated!)
[05:43:24] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[05:44:35] *** Quits: arinov (~arinov@31.143.66.159) (Ping timeout: 256 seconds)
[05:45:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:45:53] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:40cc:1ea:3f3e:c959)
[05:47:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[05:56:50] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[05:57:14] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[05:57:44] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[06:04:29] <sathylias> Well hello, I've got a script that updates my status bar (DWM), the script runs in a background and sleeps for 1s between each updates. The issue I'm having is that this 'sleep 1s' is getting a new PID every time it runs.. The PID was sitting at 1 million after a bit more than a day of this script running. Is there a way to prevent the sleep command to get a new PID ?
[06:05:59] <larryv> why does its PID matter?
[06:06:00] <tirnanog> no.
[06:06:05] *** Quits: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[06:06:14] <tirnanog> unless you use exec but it's not an applicable solution.
[06:06:42] <sathylias> larryv: Well that's because there's a value for the MAX PID.
[06:06:48] <tirnanog> so what?
[06:06:59] <sathylias> Not sure what happens when your system reaches that value though.
[06:07:57] <larryv> it'll cycle around
[06:08:11] *** Quits: dre (~dre@2001:8003:c932:c301:880:1cdd:3f72:271d) (Ping timeout: 250 seconds)
[06:09:19] <sathylias> Well, hopefully that's the case, thanks. I guess it was just my ADHD trying to nitpick on a non-issue hehe.
[06:10:00] <tirnanog> it would be a strange world in which we had to reboot our systems every time the next pid to be allocated was at the upper bound.
[06:10:03] *** Joins: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca)
[06:10:05] <sathylias> tirnanog: Thanks for the exec suggestion, just found out about its function https://www.baeldung.com/linux/exec-command-in-shell-script
[06:10:07] <tirnanog> or hard reboot even.
[06:10:20] <sathylias> tirnanog: Indeed it would :P
[06:10:22] <tirnanog> it wasn't a suggestion.
[06:10:40] <tirnanog> using exec would replace the shell which almost certainly isn't what you want.
[06:10:56] <sathylias> Not for that use case, no, but I learned something new, so thanks for that.
[06:11:00] <tirnanog> oh, I see. sure.
[06:13:11] <voldial> Are there names for the different pipe | 'protocols'? By default IFS='\n', so "newline delineation", the next choice "null delineation", I just messagepack() everything if stdout is not a tty, and then the process reading stdin gets type information to validate against. I have seen json being used for pipe commmunication... but messagepack seems much nicer (and it can send dicts anyway).. looking for other
[06:13:13] <voldial> instances of this, or if there are names for the different pipe 'standards'
[06:14:11] <tirnanog> IFS is not $'\n' by default.
[06:14:35] <voldial> tirnanog: ah, thanks. it's ' '
[06:14:40] <tirnanog> no.
[06:14:44] <voldial> really?
[06:14:44] <larryv> !ifs
[06:14:44] <greybot> Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and https://wiki.bash-hackers.org/syntax/words
[06:14:47] <tirnanog> # printf %s "$IFS" | od -a -t x1
[06:14:49] <shbot> tirnanog: 0000000  sp  ht  nl
[06:14:49] <shbot> tirnanog:          20  09  0a
[06:14:49] <shbot> tirnanog: 0000003
[06:14:57] <tirnanog> # printf %s "$IFS" | od -c -t x1
[06:14:58] <shbot> tirnanog: 0000000      \t  \n
[06:14:58] <shbot> tirnanog:          20  09  0a
[06:14:58] <shbot> tirnanog: 0000003
[06:15:02] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[06:15:05] <tirnanog> oops, should have used -An. but anyway.
[06:15:39] <voldial> tirnanog: so any of space, tab and newline?
[06:15:44] <tirnanog> yes.
[06:16:12] <voldial> TIL. 20+ years of bash haha
[06:16:40] <sathylias> Don't know if it could be interesting to anyone, but I recently wrote a script to set a gif wallpaper on your Linux desktop.. I was thinking of using a RAMDISK to make it faster, but just haven't implemented it yet. https://github.com/Sathylias/solaire
[06:17:14] *** Joins: cppimmo (~cppimmo@65.163.115.156)
[06:17:15] <tirnanog> that aside, what you choose to send convey throught a pipe is up to you. null-delimited records are often useful, but there are no standards per se.
[06:17:42] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:18:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[06:19:11] <voldial> tirnanog: thanks, yea that's what I wanted to know. I standardized on \0 everywhere ifthe fd was not a tty, but then I realized I want to send binary data too, hence messagepack, it has nice properites, like degrades to ints if stdin is expecting messagepacked data but the writer is just writing bytes, I give every reader it's expected type class... things just work
[06:19:13] <tirnanog> there is, perhaps, a cultural inclination in unix towards textual data being conventional but it's obviously not a requirement.
[06:20:10] <tirnanog> well, as long as you don't try to implement a messagepack decoder in bash ;)
[06:20:19] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[06:20:25] <tirnanog> that would be quite an achievement.
[06:20:36] <voldial> hahah ;) I just come here cuz it's where the og's hang out
[06:20:47] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:21:05] <mannequin> no one here is a gangster, stop saying such things
[06:22:38] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:23:25] *** Joins: volga629 (~volga629@72.139.93.26)
[06:24:36] <voldial> :%s/og's/o's/
[06:24:37] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[06:24:53] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[06:25:15] <voldial> :%s/og's/om's/
[06:25:40] <larryv> huh. i've never seen anyone use ex commands for that.
[06:25:43] <tirnanog> sathylias: [[ "$(mkdir --parent "$1" > /dev/null)" -ne 0 ]] <-- that's not how exit status values work. you'll want if ! mkdir ... instead. also, it won't ever print anything to STDOUT so the redirection isn't very useful either.
[06:26:05] <tirnanog> homebrew errors should be directed with >&2 and the exit command should not be contigent on whether printf succeeded or not.
[06:26:36] <tirnanog> as it will generate its own error anyway, you could just do: mkdir ... || exit
[06:28:03] <tirnanog> otherwise, if you would prefer to generate your own error: if ! mkdir ... 2>/dev/null; then printf 'your error\n' >&2; exit 1; fi
[06:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:28:51] *** Joins: k8yun (~k8yun@user/k8yun)
[06:29:40] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[06:32:32] *** Quits: mat001 (~mat001@72.28.108.216) (Read error: Connection reset by peer)
[06:35:34] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:35:58] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:35:58] <tirnanog> the following is related.
[06:36:00] <tirnanog> !ifgrep
[06:36:00] <greybot> if grep -q word "$file"; then blah blah; fi # DO NOT use [[ or [ or ` or $() or any other crap. "if" expects a command. "grep" is a command. "[" is too. You don't need both. Likewise, if foo | grep -q bar; then ...
[06:37:35] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:39:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4a0c:eee9:fb4b:ee7b)
[06:41:25] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[06:41:37] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:41:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:45:13] *** Quits: jos1 (~jos3@dyndsl-091-248-048-206.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[06:45:49] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[06:47:53] *** Parts: cppimmo (~cppimmo@65.163.115.156) (Leaving)
[06:50:04] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[06:50:07] *** Joins: rcernin (~rcernin@124.190.132.36)
[06:51:05] *** Joins: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com)
[06:51:14] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:51:42] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[06:53:53] *** Joins: millido (~millido@84.210.150.128)
[06:54:32] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[06:56:07] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[06:57:51] *** Joins: jos1 (~jos3@dyndsl-178-142-069-187.ewe-ip-backbone.de)
[07:00:31] <lotharn> when something is inbetween ' ' how can i get a variable in there?
[07:01:23] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:01:28] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[07:01:44] <lotharn> --data-raw '{"action":"MapPageController","method":"remoteSearch","data":["BLANKSEPERATE$links","CityState",null,null],"type":"rpc","tid":4,"ctx":{"csrf":"VmpFPSxNakF5TWkwd01pMHhORlF4T0Rvek5qb3pOQzQwT1ROYSx2RTd4MVRZaTNlMk8xRklSLWJ4eVZrLFpUTmhZelkw","vid":"066d00000027Meh","ns":"","ver":29}}'
[07:01:45] *** neshpion_ is now known as neshpion
[07:02:06] <lotharn> BLANKSEPERATE$links
[07:02:45] <larryv> 'abc'"$var"'xyz'
[07:03:01] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 240 seconds)
[07:03:55] <larryv> or construct your data using a tool that doesn't require code injection
[07:04:31] *** Joins: cryptonector (~nico@24.28.108.183)
[07:10:48] <wiscii> !ci
[07:12:39] <tirnanog> !jqcreate
[07:12:39] <greybot> To create JSON strings with variable assignments: jq -nc --arg bar "$bar" '{foo:$bar}' ;# compare with awk -v awkvar="$bashvar"
[07:12:41] <tirnanog> !jsonquote
[07:12:41] <greybot> Prepare literal data for injection into JSON code: jsonquote() { jshon -Qs "$1"; }; curl -d "$(printf '{"name":%s}' "$(jsonquote "$USER")")" http://server/service
[07:13:31] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:49] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:15:32] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:19:47] <wiscii> # inject(){ printf "${1%% *}${1}${1##* }\n";}; inject "face palm"
[07:19:48] <shbot> wiscii: faceface palmpalm
[07:22:44] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Ping timeout: 250 seconds)
[07:23:09] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:24:36] <tirnanog> !forget jqcreate
[07:24:36] <greybot> OK, tirnanog
[07:25:02] <tirnanog> !learn jqcreate To create JSON strings with variable assignments: jq -nc --arg bar "$bar" '{foo:$bar}'. This approach is comparable to awk -v awkvar="$bashvar". Alternatively: printf '{foo:%s}' "$(jshon -Qs "$bar")". See !inject for other topics concerning the avoidance of code injection.
[07:25:02] <greybot> OK, tirnanog
[07:25:22] <tirnanog> !forget jsonquote
[07:25:22] <greybot> OK, tirnanog
[07:25:32] <tirnanog> !lear jsonquote #redirect jqcreate
[07:25:35] <tirnanog> !learn jsonquote #redirect jqcreate
[07:25:35] <greybot> OK, tirnanog
[07:25:40] <tirnanog> !jsonquote
[07:25:40] <greybot> To create JSON strings with variable assignments: jq -nc --arg bar "$bar" '{foo:$bar}'. This approach is comparable to awk -v awkvar="$bashvar". Alternatively: printf '{foo:%s}' "$(jshon -Qs "$bar")". See !inject for other topics concerning the avoidance of code injection.
[07:25:43] *** Joins: tijuco (~tijuco@user/tijuco)
[07:26:16] <tirnanog> !forget inject
[07:26:16] <greybot> OK, tirnanog
[07:26:25] <tirnanog> !learn inject Injecting data into a type of code is always wrong. Convert your data into code that represents that data before injecting it. This is called quoting or escaping. See ![language]quote (eg. !bashquote !jsonquote !htmlquote !mysqlquote !requote !urlquote)
[07:26:25] <greybot> OK, tirnanog
[07:26:28] <tirnanog> (added !jsonquote)
[07:26:30] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[07:29:32] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[07:31:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:31:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4a0c:eee9:fb4b:ee7b) (Quit: Leaving)
[07:33:55] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[07:33:57] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:35:20] *** Quits: libsys (~libsys@186.105.148.110) (Ping timeout: 256 seconds)
[07:35:31] *** Joins: libsys (~libsys@186.105.132.6)
[07:37:13] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:37:21] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[07:38:26] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[07:38:44] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[07:39:31] *** Quits: AliasSpider (~spider-ku@nitra.ostv.sk) (Quit: Leaving)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[07:40:51] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[07:41:28] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:46:30] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:49:59] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[07:51:03] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[07:54:57] *** Joins: malina (~malina@user/malina)
[08:03:58] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:04:09] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[08:09:46] *** ekaj is now known as a1
[08:11:19] <wiscii> # inject(){ printf "${1%% *}\n${c}\n${1##* }\n";};c='!ixy';inject "face palm"
[08:11:20] <shbot> wiscii: face
[08:11:20] <shbot> wiscii: !ixy
[08:11:20] <shbot> wiscii: palm
[08:11:35] <wiscii> dog gone
[08:12:30] *** Quits: N4buc0 (~N4buc0@177.16.170.138) (Ping timeout: 260 seconds)
[08:13:33] <neshpion> how bring dog back?
[08:14:32] <wiscii> got string
[08:15:06] <neshpion> grep dog
[08:15:15] <wiscii> hahaha :)
[08:16:22] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:16:31] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[08:16:53] <wiscii> i waas trying to "inject " code to trigger greybot but then i discovered shbot has protection
[08:22:02] *** Quits: Guest1160 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[08:22:22] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[08:22:43] *** Quits: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com) (Quit: MadcapJake)
[08:23:31] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (Quit: ZNC 1.8.2 - https://znc.in)
[08:25:53] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[08:28:00] <wiscii> i never login to freenode anymore but, just curious, i expect there is still a freenode bash channel. Which would be busier libera or freenode ?
[08:29:03] <wiscii> to #bash
[08:31:28] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:31:38] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[08:32:40] *** Quits: uuidNuniq (~weechat@222.67.14.47) (Quit: WeeChat 3.4)
[08:34:16] <wiscii> too ot ..
[08:43:38] *** Quits: uuidNuni1 (~weechat@193.123.227.17) (Quit: WeeChat 3.4)
[08:44:46] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Remote host closed the connection)
[08:47:20] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:47:58] *** Joins: uuidNuniq (~weechat@222.67.14.47)
[08:48:07] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[08:52:03] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:52:58] *** Quits: sinaowolabi (~SinaOwola@169.159.72.170) (Ping timeout: 256 seconds)
[08:54:37] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[09:01:17] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[09:02:31] *** Joins: dob1 (~dob1@user/dob1)
[09:06:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[09:08:16] *** Joins: dre (~dre@2001:8003:c932:c301:1c5e:3f1c:f7a4:be5b)
[09:08:59] *** Joins: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d)
[09:09:26] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:244f:15c6:2e27:47a5) (Quit: Leaving)
[09:09:28] *** Quits: nitro__ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[09:10:11] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:17:49] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[09:18:28] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:18:36] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[09:19:36] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[09:20:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:20:36] *** Quits: dre (~dre@2001:8003:c932:c301:1c5e:3f1c:f7a4:be5b) (Ping timeout: 250 seconds)
[09:22:13] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:40cc:1ea:3f3e:c959) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:12] *** Joins: perohig (~user@85.255.236.198)
[09:28:07] *** Parts: perohig (~user@85.255.236.198) ()
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:32] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 240 seconds)
[09:32:42] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:32:52] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[09:33:22] *** Quits: foul_owl (~kerry@174-21-76-71.tukw.qwest.net) (Quit: WeeChat 2.3)
[09:34:59] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:37:51] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:40:21] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[09:40:35] *** lockywolf_ is now known as ayecee_
[09:41:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[09:41:43] *** ayecee_ is now known as lockywolf_
[09:42:28] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:43:39] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[09:46:43] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[09:47:36] *** Joins: Nact (~l@host-149-154-225-118.dynamic.voo.be)
[09:48:00] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:48:04] *** lockywolf_ is now known as lockywolf
[09:48:10] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[09:54:00] *** Joins: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net)
[09:54:19] *** Quits: Nact (~l@host-149-154-225-118.dynamic.voo.be) (Quit: Konversation terminated!)
[09:55:29] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:02:25] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:02:35] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:06:04] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:07:00] *** Joins: bluedust (~bluedust@103.160.233.28)
[10:09:00] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:11:07] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[10:11:32] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[10:14:58] *** Joins: crashrep (~crashrep@user/crashrep)
[10:15:17] *** Joins: bluedust_ (~bluedust@59.99.180.71)
[10:17:34] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:17:44] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:18:05] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:17] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[10:19:09] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:20:03] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:25:22] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[10:32:25] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:32:35] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:35:14] *** Quits: bluedust_ (~bluedust@59.99.180.71) (Remote host closed the connection)
[10:35:51] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Ping timeout: 256 seconds)
[10:39:55] *** Joins: fef (~thedawn@user/thedawn)
[10:47:27] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:47:37] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:47:59] *** Joins: crashrep (~crashrep@user/crashrep)
[10:48:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:52:48] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[10:53:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[10:54:34] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:55:15] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[10:57:25] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 240 seconds)
[10:57:47] *** Quits: xx (~xx@user/xx) (Quit: xx)
[10:58:09] *** Joins: lavaball (thomas@31.204.155.215)
[10:59:05] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[10:59:54] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:59:59] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:00:01] *** Joins: rcernin (~rcernin@124.190.132.36)
[11:00:15] *** Joins: unop (~unop@195.91.14.193)
[11:01:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:02:25] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:02:35] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:02:36] *** Joins: bluedust (~bluedust@103.160.233.28)
[11:02:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:02:57] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:03:07] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:08:46] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[11:09:22] *** Joins: rcernin (~rcernin@124.190.132.36)
[11:11:30] *** Joins: Ionic (~ionic@home.ionic.de)
[11:12:01] *** Joins: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr)
[11:14:35] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:14:43] *** Quits: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net) (Quit: Leaving...)
[11:15:03] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:15:38] *** Joins: unop (~unop@195.91.14.193)
[11:15:50] *** Joins: rendar (~rendar@user/rendar)
[11:16:23] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[11:17:41] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:17:51] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:20:12] *** Joins: rcernin (~rcernin@124.190.132.36)
[11:24:12] <Ionic> I can never remember the exec syntax... or the name of the bot that provides it.
[11:27:40] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[11:28:50] *** Joins: magla (~gelignite@55d43a63.access.ecotel.net)
[11:33:23] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:37:37] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:c0f2:4d8:5d4e:f992)
[11:37:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:38:30] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:39:58] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:40:20] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:40:31] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:41:07] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[11:41:33] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[11:42:35] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:43:01] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:c0f2:4d8:5d4e:f992) (Ping timeout: 240 seconds)
[11:43:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[11:48:19] *** Joins: han-solo (~han-solo@user/han-solo)
[11:49:30] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:52:08] *** Quits: magla (~gelignite@55d43a63.access.ecotel.net) (Quit: Stay safe!)
[11:52:37] *** Quits: rcernin_ (~rcernin@124.190.132.36) (Ping timeout: 240 seconds)
[11:54:17] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:54:58] <Ionic> I'd like to play the good old "is this a bug or intended behavior" game again. First: man bash(-5.1.16(1)-release) says "Bash-5.0 is the final version for which there will be an individual shopt option for the previous version." and lists "compat50" as one option. However, shopt -p | grep compat50 || echo nope.
[11:56:13] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:56:35] *** Joins: sinaowolabi (~SinaOwola@169.159.72.170)
[11:56:39] <Ionic> Secondly, probably due to this, and I remember having had the problem before, but I don't remember the actual version, the compatibility value can be lost in case you do something like this: BASH_COMPAT=5.0; echo "${BASH_COMPAT}"; eval "$(shopt -p)"; echo "${BASH_COMPAT}"
[11:56:57] <Ionic> (I'd expect to see 5.0 twice, but get 5.0 and 51).
[11:57:53] *** Joins: sinaowolabi_ (~SinaOwola@169.159.72.170)
[11:58:21] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:58:33] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[11:58:35] <tirnanog> there is no contradiction because there is an entire paragaph dedicated to explaining what "compatNN" means and how it should be utilised in a given bash version.
[11:59:24] <tirnanog> in particular, "The compatNN tag is used as shorthand for setting the compatibility level to NN using one of the following mechanisms", before going on to explain said mechanisms.
[12:02:31] <Ionic> Which is all fine, but how exactly does not contradict that compat50 is not exposed, even though documented and that dumping and resetting all shopts resets the compatibility level to something that wasn't set beforehand?
[12:02:48] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[12:02:49] <Ionic> s/does not contra/does it not contra/
[12:02:55] <tirnanog> because nowhere is it claimed that compat50 is a shopt.
[12:03:23] <tirnanog> that's the short version.
[12:03:53] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[12:04:01] <tirnanog> I mean, between what you and I have just said, it's pretty obvious as to why.
[12:04:48] <tirnanog> 1) 5.0 is the final version for which there will be shopt for a previous option. 2) compatNN is short-hand in the documentation and should be applied in the exact way that the enclosing paragraph clearly states.
[12:05:49] <tirnanog> as for the second comment, that looks like a bug to me.
[12:05:56] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:06:09] <Ionic> Okay, my mistake was not taking into account that compatibility options only make sense for earlier versions, so it all makes sense.
[12:06:29] <tirnanog> it's not merely that. compatNN is shorthand. there is no claim that a list of shopts follows.
[12:07:34] <tirnanog> the paragraph explains it very clearly.
[12:07:41] <Ionic> Yep, I agree, it's correct, even though it got me confused at first. But your comments cleared it up.
[12:08:42] <Ionic> The bug is a bit unfortunate, though. :/
[12:09:08] <tirnanog> yes, it is.
[12:09:24] <tirnanog> # BASH_COMPAT=5.0; declare -p BASH_COMPAT; shopt -u compat44; declare -p BASH_COMPAT
[12:09:25] <shbot> tirnanog: declare -- BASH_COMPAT="5.0"
[12:09:25] <shbot> tirnanog: declare -- BASH_COMPAT="51"
[12:09:28] *** Joins: vysn (~vysn@user/vysn)
[12:09:58] <tirnanog> although
[12:10:18] <Ionic> Well, strictly speaking, yes, it did what it was asked to do.
[12:10:29] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[12:10:50] <tirnanog> I can't see how this would be in any way in line with user expectations. I'd suggest reporting it.
[12:11:36] <tirnanog> on my part, I'd expect shopt -u for any option that is already unset to amount to a no-op.
[12:11:49] <Ionic> I'll do that and think of a way to work around it.
[12:13:02] <Ionic> Yep, that's what I would have expected, too.
[12:14:09] <chronon> Exactly which characters does . match in sed? I though it meant all characters/bytes except newline chr(10). But that does not seem to be the case.
[12:14:21] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[12:14:37] <chronon> (Using GNU sed if that's relevant.)
[12:15:39] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:a593:9d92:9b28:35b0)
[12:16:45] <tirnanog> any. man 7 regex.
[12:19:08] <chronon> What would you expect this to output: perl -e 'print "test\000more\200end"' | sed -n 'l;s/.*/_/;l'
[12:21:38] <chronon> There's no mention of unicode in the sed manpage so I'm assuming it operates on bytes. Is that incorrect?
[12:22:09] <Ionic> Phew, no, it's locale-aware, as far as I remember.
[12:22:19] <tirnanog> yes, it's incorrect.
[12:22:45] <Ionic> The issue is that \0 is special. It terminates a string in C, which is probably why you are seeing something unexpected.
[12:22:58] <chronon> Ok, so how to I match byte values with the top bit set in my sed input?
[12:23:00] <tirnanog> that's not the issue.
[12:23:07] <Ionic> Although, nope.
[12:24:18] <tirnanog> # printf 'test\000more\200end' | LANG=en_US.utf8 sed 's/.*/_/' | od -An -a -t x1
[12:24:19] <shbot> tirnanog:    _ nul   e   n   d
[12:24:19] <shbot> tirnanog:   5f  80  65  6e  64
[12:24:25] <tirnanog> # printf 'test\000more\200end' | LANG=C sed 's/.*/_/' | od -An -a -t x1
[12:24:26] <shbot> tirnanog:    _
[12:24:26] <shbot> tirnanog:   5f
[12:24:43] <tirnanog> if you want to be sure, LC_ALL=C sed ... basically.
[12:25:05] <chronon> Ok, fair enough. Ug, not as neat as I had hoped, but thanks.
[12:25:50] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:26:22] <tirnanog> csed() { LC_ALL=C sed "$@"; }
[12:27:15] <chronon> :) ok
[12:28:21] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:28:22] <tirnanog> presumably, it was giving up at the point that utf-8 decoding fails prior.
[12:28:35] <chronon> I guess so.
[12:28:58] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:29:09] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:29:36] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:29:46] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:29:53] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[12:30:08] *** Joins: unop (~unop@195.91.14.193)
[12:33:18] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:33:40] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:34:03] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:34:10] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:34:13] *** Joins: cdown (~cdown@188.214.11.14)
[12:36:40] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:37:14] <tirnanog> alternatively, you could set LC_CTYPE up front, at the risk of introducing unwanted behaviour in bash and other utilities. if in any doubt, affecting only sed would be sensible.
[12:37:37] <tirnanog> by now, I suspect that you will be able to determine what best suits.
[12:38:00] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[12:48:08] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[12:48:49] *** Joins: crashrep (~crashrep@user/crashrep)
[12:49:07] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:54:06] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[12:56:48] *** Joins: yustin (~yustin@user/yustin)
[12:57:43] *** Joins: reset (~reset@user/reset)
[12:59:24] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[12:59:34] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:01:34] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[13:02:11] *** Joins: unop (~unop@195.91.14.193)
[13:02:21] <chronon> Thanks. Yeah, I like the csed function approach you suggested best.
[13:03:03] *** Joins: rcernin (~rcernin@124.190.132.36)
[13:04:35] <Helmholtz> This is the weirdest thing! Did you know curl --fail "$link" would FAIL is output is STDOUT?
[13:04:45] <Helmholtz> (and the result of curl is binary)
[13:04:57] *** Quits: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[13:05:29] *** Quits: rcernin (~rcernin@124.190.132.36) (Client Quit)
[13:05:43] *** Joins: rcernin (~rcernin@124.190.132.36)
[13:05:47] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:05:55] *** Quits: rcernin (~rcernin@124.190.132.36) (Client Quit)
[13:05:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:06:13] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:a593:9d92:9b28:35b0) (Ping timeout: 240 seconds)
[13:06:19] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[13:06:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:06:20] *** Joins: rcernin (~rcernin@124.190.132.36)
[13:06:27] *** Quits: rcernin (~rcernin@124.190.132.36) (Client Quit)
[13:06:29] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:06:52] *** Joins: rcernin (~rcernin@124.190.132.36)
[13:07:32] <geirha> kurahaupo: you're spamming a bit of joins and quits
[13:07:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[13:07:49] <Patsie> why didn't _I_ think of this gem?! RANDOM=$RANDOM
[13:07:51] <Patsie> :D
[13:08:23] <Patsie> so you assign a random value to the variable RANDOM And you can just use $RANDOM instead of $RANDOM
[13:08:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:09:01] <Patsie> you read so many fun things in RANDOM=$RANDOM people's bash scripts
[13:09:48] <Ionic> ... huh?
[13:09:56] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[13:09:57] *** Quits: lotharn (~kvirc@2600:8800:280:d400:a51d:9ed:d31c:ae31) (Ping timeout: 240 seconds)
[13:10:35] <geirha> You seed it with a random value, so it's more secure... duuh
[13:10:37] <Ionic> I mean, it won't really help, but assigning things to RANDOM isn't exactly wrong. It's re-seeding the sequence.
[13:11:13] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[13:12:06] *** Joins: randm (~randm@mx.rayprimus.com)
[13:12:18] <Ionic> Now, if you find something like unset RANDOM; RANDOM='6', then you're working with a professional.
[13:12:41] <geirha> I don't know ... I thought 4 was more random than 6
[13:13:36] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[13:14:03] <Ionic> Oh. My bad. 4 of course.
[13:14:46] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[13:17:02] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[13:18:34] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[13:21:02] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:21:11] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:21:20] <geirha> Patsie: perhpas they started off with  random=$RANDOM, then they read some garbage advice that said constant variables should be uppercase (does google style guide still recommend that?)
[13:23:10] *** Joins: yosijo_ (~yosijo@109-35-142-46.pool.kielnet.net)
[13:23:30] *** Quits: yosijo_ (~yosijo@109-35-142-46.pool.kielnet.net) (Read error: Connection reset by peer)
[13:23:45] *** Joins: yosijo_ (~yosijo@109-35-142-46.pool.kielnet.net)
[13:23:54] *** Joins: martinus__ (~martin@151.58.202.77.rev.sfr.net)
[13:25:45] *** gjvc_ is now known as gjvc
[13:26:01] *** Quits: yosijo_ (~yosijo@109-35-142-46.pool.kielnet.net) (Read error: Connection reset by peer)
[13:26:32] *** Joins: yosijo (~yosijo@109-35-142-46.pool.kielnet.net)
[13:26:32] *** Quits: yosijo (~yosijo@109-35-142-46.pool.kielnet.net) (Remote host closed the connection)
[13:30:27] <Ionic> geirha: sadly, yes.
[13:32:17] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[13:34:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:37:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:38:19] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Ping timeout: 256 seconds)
[13:39:16] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:39:40] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[13:39:42] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:42:00] <Earnestly> # printf 'foo\v\b\b\bbar\n' | wc -l # nice
[13:42:02] <shbot> Earnestly: 1
[13:44:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[13:51:40] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[13:53:02] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:53:12] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[13:56:50] *** ChanServ sets mode: +o geirha
[13:56:55] *** geirha sets mode: +b-o kurahaupo_!~kurahaupo@115.69.27.211$##fix_your_connection geirha
[13:57:02] <Helmholtz> `trap 'if [[ -n "$KEEP_TEMP" ]];then rm -rf "$script_tmp_dir";fi' EXIT` I only want to clean up my temp dir if the variable is set
[13:57:06] <Helmholtz> but this doesn't work (doesn't trigger
[13:57:49] <geirha> uhm so if "KEEP_TEMP" is set, you want to NOT keep temp?
[13:58:24] <geirha> surely you want the opposite?
[13:58:43] <geirha> [[ $keep_temp ]] || rm -rf "$tmpdir"
[14:01:05] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:06:27] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[14:07:33] *** Joins: masoudd (~masoudd@user/masoudd)
[14:11:51] <Helmholtz> geirha, thank you !
[14:12:15] *** Joins: igemnace (~ian@user/igemnace)
[14:15:30] *** Joins: computerworm110 (~quassel@XXX575.htc.net)
[14:17:57] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[14:19:48] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[14:21:05] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:25:35] <welder> how do i put a single quote inside single quotes? like echo 'foo'bar'
[14:25:45] <welder> it does not work with backslash either
[14:26:43] <welder> '\'' is the only way?
[14:26:51] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[14:28:08] <welder> i mean, 'foo'\''bar'
[14:28:25] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:30:51] <Earnestly> welder: You have to close the quote, insert a quoted quote, and continue.  'foo'bar' => 'foo' + \' + 'bar'
[14:31:11] <Earnestly> As you can't escape a ' inside literal quotes
[14:31:27] <Earnestly> welder: Remember that \ in shell is a quote, a literal quote for the next character
[14:32:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:34:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:34:36] <emanuele6> '"'"' would also work
[14:34:58] <Earnestly> Yeah
[14:35:26] <emanuele6> or '$'\'''
[14:35:27] <Earnestly> Thinking of '\'' like some magic sequence is confusing.  'foo' + "'" + 'bar'
[14:35:44] <olspookishmagus> I just lost one terminal session with: vim | xsel -b -o
[14:35:47] <olspookishmagus> xD
[14:35:54] *** Quits: bluedust (~bluedust@103.160.233.28) (Remote host closed the connection)
[14:36:00] <Earnestly> Because the inclusion of the terminating and opening quotes makes it unclear what's going on
[14:38:22] *** Joins: somlis (~somlis@user/somlis)
[14:39:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 240 seconds)
[14:40:45] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) ()
[14:41:23] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[14:42:01] *** Joins: Jong (~Jong@2620:10d:c090:400::5:905d)
[14:43:39] *** Joins: vishal (~vishal@fedora/vishal)
[14:49:22] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:49:23] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:2121:e44c:70ba:5fec:64fe)
[14:49:24] *** Quits: computerworm110 (~quassel@XXX575.htc.net) (Ping timeout: 256 seconds)
[14:49:42] *** Joins: crashrep (~crashrep@user/crashrep)
[14:50:47] *** Quits: suffer (znc@mutant.penguin.fyi) (Quit: ZNC - https://znc.in seek the truth or pay the price)
[14:51:14] *** Joins: suffer (znc@mutant.penguin.fyi)
[14:51:38] *** Joins: reset (~reset@user/reset)
[14:51:40] *** Joins: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com)
[14:53:03] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[14:53:22] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:55:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[14:59:56] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[15:02:36] *** Joins: luva1 (~luva@37.120.197.38)
[15:03:00] *** Quits: luva (~luva@146.70.62.238) (Ping timeout: 256 seconds)
[15:03:01] *** luva1 is now known as luva
[15:03:28] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:03:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[15:07:50] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[15:09:31] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[15:10:49] *** Joins: bluedust (~bluedust@103.160.233.28)
[15:16:30] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[15:18:06] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 250 seconds)
[15:20:00] *** Joins: han-solo (~han-solo@103.82.184.192)
[15:22:22] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[15:24:17] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[15:24:27] <Helmholtz> How can I do this with `find`? `ls -1 tile-* | sort -V`
[15:24:47] <Helmholtz> It seems sort -V is necessary, so I just need to simulate ls part with find
[15:24:57] *** Quits: bluedust (~bluedust@103.160.233.28) (Ping timeout: 240 seconds)
[15:25:15] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:25:39] *** Joins: fef (~thedawn@user/thedawn)
[15:25:40] *** Quits: han-solo (~han-solo@103.82.184.192) (Ping timeout: 256 seconds)
[15:26:03] <djph> Helmholtz: find all files with the name beginning "tile" ?
[15:26:23] <Helmholtz> djp, yes and sort by version number
[15:26:30] <emanuele6> Helmholtz: that `ls tile-*' is very bad. you basically just want printf there.
[15:26:32] <Helmholtz> find in a desired dir
[15:26:56] <emanuele6> if you use ls tile-* and tile-* happens to match a directory, you will print the contents of that directory.
[15:27:12] <djph> find /path/here [-type f] -name "tile*"
[15:27:18] <emanuele6> Helmholtz: why do you want to print them? do you need to run a command on them?
[15:27:36] <djph> find /path/here [-type f] -name "tile*" [ |sort [...] ]
[15:27:53] <Helmholtz> I need to feed the file list into imagemagick's montage...it's like this montage @list.txt blahhh
[15:27:55] <Helmholtz> That @ is another question of mine
[15:27:59] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[15:28:51] <emanuele6> you don't need find or ls at all
[15:29:01] <emanuele6> printf '%s\n' tile-*
[15:29:38] *** Joins: malina (~malina@user/malina)
[15:29:41] *** Quits: kurahaupo (~martin@115.69.27.211) (K-Lined)
[15:30:27] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:30:34] <Helmholtz> WOW
[15:30:35] <Helmholtz> wtf
[15:30:46] <Helmholtz> Is this POSIX?
[15:30:51] <Helmholtz> I just wasted 15 min
[15:31:05] <emanuele6> of course it is.
[15:31:12] <emanuele6> ls *glob* is just dumb
[15:31:36] <emanuele6> # ls () { :;}; set -x; ls /*
[15:31:38] <shbot> emanuele6: + ls /bin /dev /etc /init /lib /lib64 /proc /root /tmp /usr /var
[15:31:38] <shbot> emanuele6: + :
[15:31:45] <emanuele6> globs expand
[15:32:11] <emanuele6> and then you are passing the expanded values (supposedly file names) to   ls
[15:32:42] <emanuele6> and ls will either print the file names (in a non-parsable way) or, if they are directories, print out their content.
[15:33:06] <Helmholtz> Can I feed it the /path/to/dir?
[15:33:21] <emanuele6> Helmholtz: do you really need the file with the list of file?
[15:33:58] <emanuele6> or do you just think you need it?
[15:33:58] *** Joins: jaysicks (~jaysicks@185-29-82-222.pool.digikabel.hu)
[15:34:23] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:34:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:34:34] <Helmholtz> montage needs it..I can't find @ in its man pagew
[15:34:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:34:39] <emanuele6> it does not.
[15:34:42] <Helmholtz> montage @list.txt
[15:34:48] <emanuele6> that is not necessary.
[15:34:53] <emanuele6> you can pass files directly.
[15:35:53] <emanuele6> you may also use @- to read files from stdin.
[15:35:59] <emanuele6> !xy
[15:35:59] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[15:36:42] <emanuele6> montage file1.png file2.png out.png   totally works.
[15:37:33] <emanuele6> same for    get_files | montage @- out.png
[15:37:47] <Helmholtz>  like this?`montage @"$(printf '%s\n' tile-*)" -mode concatenate -background -none tile "3x3" out.png`
[15:37:51] <Helmholtz> It doesn't work
[15:37:55] <emanuele6> no.
[15:38:01] <emanuele6> what? no
[15:38:04] <emanuele6> of course not
[15:38:09] <emanuele6> why do you think that?
[15:38:21] <Helmholtz> wait...i try something else
[15:38:22] <gnoo> Helmholtz: try echo tile-*
[15:38:33] <emanuele6> gnoo: NO!
[15:38:45] <emanuele6> there is an @
[15:38:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:38:49] <gnoo> emanuele6: to explain that tile-* is expanded by the shell
[15:38:49] <emanuele6> also it is quoted
[15:38:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:39:02] <gnoo> just 'echo tile-*' in the shell
[15:39:06] <emanuele6> why??
[15:39:21] *** Joins: n4dir (~user@88.130.152.4)
[15:39:33] *** Quits: brw (~bas@haring.bas.sh) (Remote host closed the connection)
[15:39:37] <gnoo> then you could do montage tile-* out.png, no?
[15:39:58] *** Quits: w0ng (~w0ng@185.218.127.62) (*.net *.split)
[15:40:00] *** Joins: brw (~bas@haring.bas.sh)
[15:40:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9)
[15:40:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9) (Changing host)
[15:40:49] *** Joins: skapata (~Skapata@user/skapata)
[15:41:47] <emanuele6> Helmholtz:  find . -type f ! -path './out.png' -name '*.png' | montage @- -mode concatenate -background -none tile "3x3" out.png
[15:41:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[15:41:59] <Helmholtz> `printf "%s\n" tile-* |  montage @- -mode concatenate -background none tile "3x3" out.png` ok why this doesn't work?
[15:42:07] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4bb300000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:42:26] <emanuele6> !doesntwork
[15:42:26] <greybot> Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[15:42:29] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[15:42:31] <emanuele6> do you have an error message?
[15:43:56] *** Joins: bluedust (~bluedust@59.89.219.44)
[15:44:15] <Helmholtz> emanuele6, https://dpaste.com/HGVKJUXYY
[15:44:29] <djph> this sounds a bit like ... oh which one is it?  !ffmpeg ?
[15:44:43] <emanuele6> yes, that means your command is bogus
[15:44:52] <emanuele6> and it is indeed since there is an extra 3x3
[15:45:16] <emanuele6> you probably meant  -background none -tile 3x3
[15:45:25] <emanuele6> instead of  -background -none tile "3x3"
[15:45:36] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:48:40] <Helmholtz> how the hell did I input it wrong! My src was correct...sorry guys, I try again
[15:50:21] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[15:50:57] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[15:51:33] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[15:52:20] <Helmholtz> emanuele6, thanks it works!
[15:52:25] <Helmholtz>     montage @- -mode concatenate -background -none \
[15:52:26] <Helmholtz>     printf "%s\n" "$detailed_tmp_dir/tile-"* | \
[15:52:37] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:52:41] <Helmholtz> I had to put the * (glob) in from of the string
[15:52:51] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[15:52:56] <emanuele6> ...
[15:53:02] <emanuele6> didn't you need sort -V?
[15:53:03] <Helmholtz> btw, this printf behaviour (numerical sort) is posix right?
[15:53:09] <Helmholtz> no
[15:53:12] <emanuele6> it is not numerical sort.
[15:53:21] <emanuele6> it is lexicographical sort based on locale.
[15:53:27] <emanuele6> same as in posix.
[15:53:42] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:53:53] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[15:53:53] <Helmholtz> oh u are right...sort -V is needed
[15:54:42] <emanuele6> sort -V is very much not posix.
[15:54:46] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:54:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[15:55:20] *** Joins: kurahaupo (~martin@115.69.27.211)
[15:59:10] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:05:04] *** Joins: ekathva (~ekathva@2001:999:50:cab1:50ea:c175:d5c5:72f3)
[16:05:59] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:2121:e44c:70ba:5fec:64fe) (Remote host closed the connection)
[16:06:22] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:2121:e44c:70ba:5fec:64fe)
[16:07:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:08:33] <emanuele6> gnoo: i didn't suggest that because he said he wanted to sort the files initially
[16:08:53] <gnoo> emanuele6: i realised later, sorry!
[16:11:48] *** [RMS] is now known as [R]
[16:21:00] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:26:34] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[16:28:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:29:22] *** Joins: fef (~thedawn@user/thedawn)
[16:30:00] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[16:30:12] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[16:34:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 245 seconds)
[16:34:42] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:37:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 250 seconds)
[16:37:59] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[16:38:35] *** Quits: MadcapJake (~MadcapJak@047-012-204-193.res.spectrum.com) (Quit: MadcapJake)
[16:38:45] *** Joins: thevishy (~Nishant@2405:201:f005:c007:68d4:2777:c323:aa1b)
[16:43:26] *** Quits: thevishy (~Nishant@2405:201:f005:c007:68d4:2777:c323:aa1b) (Client Quit)
[16:44:28] *** zer0bitz_ is now known as zer0bitz
[16:47:57] *** Joins: thiras (~thiras@user/thiras)
[16:50:31] *** Joins: crashrep (~crashrep@user/crashrep)
[16:51:40] <Helmholtz> ok my bash script is ~500 lines and it's simply a client to 3 services which mostly feed images, and there are some imageprocessing done in the script
[16:51:43] <Helmholtz> comments?
[16:52:07] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[16:52:32] <phogg> Helmholtz: It's a beautiful day today.
[16:52:43] <Helmholtz> :D
[16:53:05] <Helmholtz> some google guy said they have a mantra than bash scripts should be ~20 lines
[16:53:49] <Helmholtz> can python even do image processing internally? If no, what's the point of using it over bash+imagemagick?
[16:53:52] *** Quits: sinaowolabi_ (~SinaOwola@169.159.72.170) (Ping timeout: 250 seconds)
[16:54:09] *** Quits: sinaowolabi (~SinaOwola@169.159.72.170) (Ping timeout: 256 seconds)
[16:54:58] <phogg> Helmholtz: there are no fixed rules
[16:55:39] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:55:54] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[16:56:01] <phogg> People who fear or do not understand shell may say that shell scripts should be very short. It's probably not a bad policy to keep them down to a size which you feel that you can understand and manage yourself, but there's no fixed number of lines for that.
[16:56:30] *** Joins: ChmEarl (~chmearl@user/chmearl)
[16:56:37] <Earnestly> If it was POSIX sh, it'd be half as long
[16:57:04] <phogg> One of the reasons to keep shell scripts short is because shell makes modules and namespacing harder than a lot of languages, so a large program is more likely to be spaghetti code. That doesn't mean it will be.
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:57:55] <phogg> In general *every* language can do what *every other* language can do, it's just sometimes easier in one or another. Or, more likely, you know one better than another. Python can't *natively* process images, but neither can bash.
[16:58:12] <phogg> Python can load image processing libraries, or it can call out to imagemagick (same as you can from a shell)
[16:58:41] <Helmholtz> phao, I mean if we use python to call imagamagick, wouldn't it be inconvineent?
[16:58:53] <phogg> I find that when solving my problem involves running a bunch of existing programs and combining their output the most efficient language to use is bash.
[16:59:08] <phogg> If I need complex data structures it stops being bash.
[16:59:39] *** Joins: shailangsa (~shailangs@host109-159-108-227.range109-159.btcentralplus.com)
[16:59:42] <Helmholtz> yes
[16:59:54] <phogg> Helmholtz: I find it inconvenient to use python for *anything*. I especially find its functions for interacting with external programs to be annoyingly verbose. You may not have an issue with them.
[17:00:00] <phogg> Convenience is in the eye of the beholder.
[17:00:32] <Helmholtz> I'm even converging to having an internal script_db.json in the script itself (with HEREDOC) the using jq as the intermediary between string and json
[17:01:17] *** Joins: w0ng (~w0ng@185.218.127.62)
[17:01:18] <Earnestly> This is what Leibniz must have felt like
[17:01:56] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[17:02:16] <phogg> My rule of thumb for this decision making process is as follows: When I am spending more time wrestling with the language than making progress, maybe I have the wrong language.
[17:03:11] <phogg> as long as it stays out of my way and 51% of my effort is going in to progress on the problem at hand there's probably no need to change to anther language
[17:04:06] <Helmholtz> Earnestly, :D
[17:05:19] *** Joins: bluedust (~bluedust@59.89.219.44)
[17:06:13] *** Joins: sinaowolabi_ (~SinaOwola@41.58.54.191)
[17:16:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[17:17:51] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:20:25] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:20:32] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:20:59] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[17:21:41] <xheimlich> man. years of going through the indignity of going ps ax | grep something; # reads numbers like a chump; kill number
[17:22:10] <xheimlich> (and yes, I know about killall, but it's not just a matter of killing every python process.
[17:22:16] *** Joins: Kyuzo68 (~Kyuzo@host-79-44-236-254.retail.telecomitalia.it)
[17:22:20] <xheimlich> anyway, wikipedia just told me about pgrep. maan.
[17:22:27] <uuidNuniq> xheimlich:->  pkill -axi python
[17:23:18] <xheimlich> I typically have a "back-end" process and a "front-end" in Streamlit, a browser-based thing, and don't want to kill the "front-end"
[17:23:41] <xheimlich> I even had an alias for ps ax | grep. Eh.
[17:24:13] <uuidNuniq> xheimlich:->  https://0x0.st/oXnp.txt
[17:25:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 260 seconds)
[17:27:15] *** Quits: sinaowolabi_ (~SinaOwola@41.58.54.191) (Ping timeout: 256 seconds)
[17:28:09] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[17:28:45] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[17:28:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:29:19] <llua> welcome to the 2000s, y2k flopped, the dotcom bubble popped and pkill started to spread among OSes.
[17:29:52] <xheimlich> uuidNuniq: I started to play with that 0x0.st and immediately caused curl to segfault.
[17:30:19] <xheimlich> if curl has bugs, what can I hope for my code?
[17:30:24] <uuidNuniq> xheimlich:-> https://0x0.st/oXnV.txt
[17:30:57] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[17:31:30] <xheimlich> https://dpaste.org/gXjS
[17:31:43] <xheimlich> that's a curl bug I think.
[17:32:39] <xheimlich> curl --version is curl 7.58.0 (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1 zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0 librtmp/2.3 Release-Date: 2018-01-24
[17:32:44] <xheimlich> oldish, I guess.
[17:33:34] <uuidNuniq> -F=?
[17:33:51] <xheimlich> it should return some kind of invalid syntax error. not segfault.
[17:34:13] *** Joins: haliucinas (~haliucina@5.20.153.21)
[17:34:26] <xheimlich> I' m stealing your 0x0() function.
[17:34:51] <uuidNuniq> yeah, go get it
[17:35:19] <uuidNuniq> you can 0x0 some_file or some_output | 0x0
[17:35:27] *** Joins: fef (~thedawn@user/thedawn)
[17:35:34] <xheimlich> reminds me of when I found out about pushd and popd
[17:35:58] <xheimlich> that's the only way to live.
[17:36:59] <xheimlich> (I mean pgrep, not 0x0. 0x0 is kind of cool, though, and makes me wish I had spare change to host stuff)
[17:38:34] <xheimlich> I just think I'm modifying the 0x0 function to copy the url to the clipboard. Now, to find what the hell I aliased to xc all those years ago.
[17:40:35] <uuidNuniq> copy url to clipboard? just pbcopy ...
[17:40:54] <uuidNuniq> echo URL | pbcopy
[17:42:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[17:58:37] *** Joins: bluedust_ (~bluedust@89.238.130.74)
[17:58:43] *** Joins: seninha (~seninha@user/seninha)
[17:59:33] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[18:01:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[18:01:49] *** Quits: bluedust (~bluedust@59.89.219.44) (Ping timeout: 256 seconds)
[18:08:11] *** Joins: crashrep (~crashrep@user/crashrep)
[18:09:19] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:cce5:129b:c2cd:8f44)
[18:12:50] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[18:12:51] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[18:13:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[18:23:59] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 250 seconds)
[18:24:44] *** Joins: Kruppt (~Kruppt@50-111-42-156.drhm.nc.frontiernet.net)
[18:25:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:26:28] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[18:26:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:27:52] *** Joins: sinaowolabi (~SinaOwola@41.58.59.39)
[18:28:20] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[18:28:51] *** Joins: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net)
[18:33:29] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:34:20] *** Joins: jmew (~jmew___@host-78-147-81-209.as13285.net)
[18:34:29] *** Joins: bluedust (~bluedust@59.89.219.44)
[18:34:37] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[18:35:10] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[18:36:35] *** Quits: jmew (~jmew___@host-78-147-81-209.as13285.net) (Changing host)
[18:36:35] *** Joins: jmew (~jmew___@user/jmew)
[18:37:01] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:37:22] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Read error: Connection reset by peer)
[18:37:51] *** Quits: bluedust_ (~bluedust@89.238.130.74) (Ping timeout: 245 seconds)
[18:41:28] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[18:44:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:44:57] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:46:53] *** Joins: crashrep (~crashrep@user/crashrep)
[18:49:58] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:51:01] <taupiqueur> hello
[18:51:49] *** Joins: jaggz (~jaggz@user/jaggz)
[18:52:07] <jaggz> Okay, so how do I implement this same thing I did in perl, in bash...
[18:52:08] <jaggz> https://paste.debian.net/hidden/bc1764b4/
[18:52:28] <jaggz> I'm opening gnuplot to write to it, so I get a filehandle and can print to it.
[18:52:53] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[18:53:10] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[18:53:29] <jaggz> (line 35).  Then my perl script just waits until the user actually hits enter to my STDIN, and I just kill gnuplot (don't need to send enter to it, but I presume I could)
[18:53:52] <jaggz> the purpose of this is to allow the popped up gnuplot chart to accept mouse input during that time (for zooming/panning/etc)
[18:54:23] <jaggz> So, in bash, I need to cat some stuff into gnuplot, but then have it sitting there still thinking it's going to be getting some input from my script
[18:54:42] <taupiqueur> how to get the minimal column from the following string format: [<anchor-line>.<anchor-column>,<cursor-line>.<cursor-column>]... space-separated
[18:54:48] <jaggz> (or otherwise get some lines into gnuplot, and then gnuplot should just think it's waiting for more)
[18:55:10] <jaggz> taupiqueur, the min value of ancorline, col, line, col?
[18:55:19] <jaggz> or from all lines but one column?
[18:55:32] <jaggz> what's "the minimal column"?
[18:56:01] <taupiqueur> echo "$kak_selections_desc" | tr ' ' '\n' | cut -d ',' -f 1 | cut -d '.' -f 2 | sort -n | head -n 1
[18:56:16] <jaggz> taupiqueur, it might not apply to your current case, but get gnu's datamash utility
[18:56:35] <jaggz> with it you can do something like foo | datamash min 3  # displays minimum value in column 3
[18:56:46] <taupiqueur> jaggz: the minimal column value from the cursor or anchor
[18:57:17] <jaggz> oh those are periods
[18:57:35] <jaggz> taupiqueur, so, like, split those into two lines, if it doesn't matter which is which
[18:57:56] <taupiqueur> example of string: 1.1,1.10 2.3,2.39
[18:58:14] <jaggz> so   123.123,234.234 becomes   "123.123\n234.234\n"
[18:58:30] <taupiqueur> yep
[18:59:02] <jaggz> yup?  well that's not what you're doing right now :)
[18:59:25] <jaggz> (you're splitting your data pairs, but you're not splitting each pair itself at the ,)
[18:59:29] <taupiqueur> I was hoping for a solution with awk, without all the piping to tr, cut, sort, head
[18:59:33] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[18:59:44] <jaggz> i never got into awk much
[18:59:51] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Read error: Connection reset by peer)
[19:00:07] *** Joins: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[19:00:18] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Remote host closed the connection)
[19:02:02] <jaggz> oh, here's a persistent link to my gnuplot perl script, which lets you pipe until user chooses to exit, while allowing mouse interaction with the plot: https://paste.debian.net/hidden/0581b0e6/
[19:02:18] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[19:02:20] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[19:06:37] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 240 seconds)
[19:06:44] <phogg> jaggz: gnuplot -persist?
[19:06:51] <jaggz> okay, so how do I group some commands in a subshell, piping those into gnuplot, when one of those commands takes a << heredoc?
[19:06:56] <jaggz> (cat f.txt; cat) | cat
[19:07:30] <jaggz> like, that will put f.txt and cat into the |cat (waiting for the "; cat)" to complete (like, user typing ^D)
[19:07:36] <jaggz> phogg, checking it out thanks
[19:07:36] <phogg> jaggz: cat <<HERE | other command\ndoc lines here\nHERE
[19:08:02] <jaggz> phogg, well.. -persist is much easier!
[19:08:26] <jaggz> phogg, that works, but I needed (cat <<HERE; cat) | gnuplot
[19:08:28] <phogg> jaggz: sure beats trying chicanery to make it work
[19:08:34] <jaggz> srsly
[19:08:50] <jaggz> (cat <<HERE; cat) | gnuplot
[19:08:56] <jaggz>    gnuplot commands...
[19:08:58] <jaggz> HERE
[19:09:04] *** Joins: timj (~timj@user/timj)
[19:09:07] <jaggz> that's what I was trying for
[19:09:23] <phogg> jaggz: https://termbin.com/kab6
[19:09:51] <jaggz> screw -persist and its perfect functionality!  I'm doing it this way!
[19:12:31] <jaggz> hm.  (cat <<HERE ... HERE\n read -p "Hit enter" >&2) | gnuplot
[19:12:45] <jaggz> can't get the "Hit enter" to show
[19:12:47] *** Quits: Kyuzo68 (~Kyuzo@host-79-44-236-254.retail.telecomitalia.it) (Quit: Konversation terminated!)
[19:14:27] <phogg> what is the point of doing that?
[19:15:03] <jaggz> phogg, for my script to wait for the user to approve to continue
[19:16:02] <phogg> before gnuplot opens?
[19:16:11] <jaggz> -persist actually works in my present plot needs, without this but .. hmm.. lemme think about what I'm doing
[19:16:19] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Read error: Connection reset by peer)
[19:16:33] <jaggz> family bugging me and making life easier.. afk a few :}
[19:16:35] *** Joins: off^ (~off@50.235.176.163)
[19:17:04] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: Leaving)
[19:17:21] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[19:18:04] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[19:18:38] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[19:18:48] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[19:23:40] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:24:33] *** Quits: libsys (~libsys@186.105.132.6) (Ping timeout: 256 seconds)
[19:26:15] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[19:26:19] *** cdown_ is now known as cdown
[19:26:24] <jaggz> phogg, no, gnuplot should open, show the plot, user is prompted...
[19:26:25] <emanuele6> i think you meant:   { { cat ...; read -p "hit enter" <&3 ;} | gnuplot ;} 3<&0
[19:26:31] <jaggz> this is actually not necessarilly a good approach anyway
[19:26:37] <jaggz> hm
[19:26:57] *** Joins: xx (~xx@user/xx)
[19:27:02] <emanuele6> well, maybe it doesn't matter, why are you using >&2 at all though?
[19:27:14] <jaggz> not yours, but mine.  see, my perl script keeps gnuplot's stdin filehandle open so I could, if I read something from the user, send another command to gnuplot
[19:27:27] <jaggz> emanuele6, that was just to get the "hit enter" shown to the user
[19:27:34] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[19:27:37] <emanuele6> # help read
[19:27:38] <jaggz> since I wasn't seeing it and wasn't sure how to fix it
[19:27:38] <shbot> emanuele6: read: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...] -- http://ix.io/aQc
[19:27:42] <phogg> it's harder to do that in bash
[19:27:51] <emanuele6> but -p outputs to stderr
[19:28:12] <emanuele6> stdout is not used, so >&2 basically does nothing
[19:28:17] <jaggz> yeah.. does bash have a way to open a program and keep its input stdin as some filehandle, hanging around to accept input?
[19:28:42] <emanuele6> yes
[19:29:10] <jaggz> that might work then..
[19:29:23] <emanuele6> if you need only stdout or stdin, exec {cmd1_stdin}> >(cmd1)  or  exec {cmd2_stdout}< <(cmd2)
[19:29:39] *** Quits: sinaowolabi (~SinaOwola@41.58.59.39) (Ping timeout: 256 seconds)
[19:29:56] <emanuele6> and then you can write/read to them with  >&"$cmd1_stdin"  or <&"$cmd2_stdout"
[19:30:03] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[19:30:05] <phogg> I am unclear on what the problem is with the perl script. If it works why look further?
[19:30:09] <emanuele6> if you need both stdin an stdout, you might want coproc
[19:30:41] <emanuele6> phogg: yeah, also bash does not have fractional numbers, so why port something that needs math to bash
[19:31:29] <jaggz> phogg, was a different project and was whipping it up in bash
[19:31:30] <emanuele6> like, you could write the exact same script line by line in bash
[19:31:39] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net)
[19:31:47] <emanuele6> but bash cannot only do integer math
[19:31:50] <emanuele6> so it is poinless
[19:32:15] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:22] <jaggz> emanuele6, is there a way to do   gnuplot <{id};   stuff | {id};  do other stuff;  stuff | {id} ?
[19:32:37] <emanuele6> what is <{id} supposed to mean?
[19:32:56] <jaggz> assign some id (filehandle) to gnuplot stdin
[19:33:13] <emanuele6> <&"$id"
[19:33:29] <emanuele6> please don't make up syntax only you can understand because it is made up.
[19:33:35] <Helmholtz> curl "https://tile.openstreetmap.org/{$z}/{$x}/${y}.png?apikey=blah"...If I put this curl address in a string literal fetched from a json, it doesn't fill in the x,y,z variables right? I need to eval it?
[19:34:12] <Helmholtz> I need to programatically change the address of a `curl` operation where the address should be formed from data
[19:34:32] <emanuele6> {$z}/{$x}/${y} is that a typo?
[19:34:55] <phogg> emanuele6: no
[19:35:01] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Remote host closed the connection)
[19:35:16] <phogg> emanuele6: this is how geospatial tile URL templates work (in one of the popular dialects)
[19:35:30] <emanuele6> i see
[19:35:31] <phogg> you're supposed to replace those with the actual x, y, and z values you want
[19:35:42] <Helmholtz> emanuele6, no it's the standard
[19:35:46] <emanuele6> but why only x and y between {}
[19:35:49] <emanuele6> ?
[19:35:56] <phogg> emanuele6: that's an error
[19:36:03] <emanuele6> that is what i was referring to.
[19:36:22] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[19:36:42] *** Quits: karabaja4 (~karabaja4@dh207-94-139.xnet.hr) (Ping timeout: 256 seconds)
[19:36:43] <phogg> emanuele6: it's actually supposed to be {x} {y} and {z}
[19:36:50] <Helmholtz> like I want to put this whole "https://tile.openstreetmap.org/$z/$x/$y.png?apikey=blah" into an string
[19:36:56] <emanuele6> phogg: yeah, that makes more sense.
[19:37:13] *** Joins: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[19:37:27] <jaggz> emanuele6, and later you can do:   echo "foo" >&"$id" ?
[19:37:27] <phogg> Helmholtz: you can do that and if you have $x $y and $z variables defined with appropriate values it will be evaluated to those values before the string is sent to curl, or whatever
[19:37:31] *** Joins: MercilessDeth (~brad@136.49.59.177)
[19:37:34] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[19:37:54] <jaggz> (I don't need an ID variable, it was just to indicate the assignment of some unique ID to gnuplot's stdin, to later send data to)
[19:38:20] <Helmholtz> emanuele6, wait, this {$x} is wrong?
[19:38:22] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:cce5:129b:c2cd:8f44) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:30] <Helmholtz> You mean I should have used $x or {x} ?
[19:39:03] <emanuele6> you have  {$z}/{$x}/${y}
[19:39:28] <Earnestly> foo/{450}/{234}/bar.png
[19:39:34] <emanuele6> you have $z $x inside {} and $y is just on its own
[19:39:53] <Helmholtz> oh sorry typo
[19:39:53] <phogg> Helmholtz: you should not include literal curly braces
[19:40:00] <Earnestly> Oh right, not helping if people use {} for no reason
[19:40:03] <emanuele6> # x=my_x y=my_y z=my_z; printf '%s\n' "{$z}/{$x}/${y}"
[19:40:05] <shbot> emanuele6: {my_z}/{my_x}/my_y
[19:40:15] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[19:40:35] <emanuele6> Earnestly: it's supposed to have {}, it's just a typo from {$y} to ${y} i think
[19:40:36] <Earnestly> Nice to see its stupid use biting someone for it
[19:41:19] <Earnestly> emanuele6: phogg said templates, and normally {} is used in templating to indicate replacement.  If they're actually needed, then fair enough
[19:41:22] <emanuele6> at least that is what phogg said
[19:41:25] <emanuele6> oh
[19:41:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9a4a:c7f0:d60b:9647)
[19:41:38] <emanuele6> yeah, it seemed weird
[19:41:40] <Earnestly> Let's see
[19:41:44] <emanuele6> so it does not actually need {} yeah
[19:41:48] <emanuele6> i just checked
[19:42:25] <emanuele6> also $z/$x/$y is misleading, it is actually  $zoom/$x/$y
[19:42:35] *** Joins: sinaowolabi (~SinaOwola@160.152.110.131)
[19:42:42] <emanuele6> z is the zoom, it's not 3d coordinates
[19:43:05] <Helmholtz> yeah
[19:43:15] <Earnestly> https://leafletjs.com/reference-1.4.0.html#tilelayer
[19:43:18] <emanuele6> why did you add {} in the first place?
[19:43:19] <Helmholtz> it's a weird coordinate
[19:43:24] <Helmholtz> name is Tile coordinate I guess
[19:43:26] <Earnestly> Yes, these are placeholders.  You don't include {}
[19:43:29] <phogg> you do not actually need it in the URL you fetch
[19:43:40] <Earnestly> And it is zoom/x/y
[19:43:41] *** Joins: volga629 (~volga629@72.139.93.26)
[19:43:50] <phogg> Earnestly: opinions differ on the order
[19:44:04] <Earnestly> emanuele6: It's not even a template per-se, it's python's string formatting stuff
[19:44:08] <phogg> which is one reason why templating is done
[19:44:18] <Earnestly> Or rusts?  idk
[19:44:24] <emanuele6> rename $z to $zoom since $z is a terrible name, and pass  "https://tile.openstreetmap.org/$zoom/$x/$y.png?apikey=blah"
[19:44:34] <Earnestly> phogg: Yeah it appears some have additional bits too
[19:44:35] <emanuele6> i would also pas apikey with -F, not inject it in the url.
[19:44:38] <phogg> Earnestly: it may be native some places, but I've only used this sort of thing from leaflet (which is JS)
[19:44:49] <Earnestly> Ah
[19:44:56] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[19:45:02] <phogg> Earnestly: even more fun is that opinions *also* differ on which direction Y goes in
[19:45:05] <Earnestly> Yea of course its js
[19:45:27] <phogg> so everyone has to support flipping the order in case a specific server things Y goes the other direction
[19:45:39] <emanuele6> javascript templates are   print(`a is ${a}`) iirc
[19:45:47] <Earnestly> phogg: Do they agree on origin?
[19:45:49] <Earnestly> lol
[19:46:02] <phogg> Earnestly: in effect yes, because they agree on the projection
[19:46:17] <phogg> but if you stray outside of web mercator then the story changes
[19:46:24] <phogg> tl;dr *don't do that*
[19:46:32] *** Quits: jensen (~jensen@65.78.100.184) (Ping timeout: 240 seconds)
[19:46:40] <Earnestly> lol indeed
[19:47:11] <Earnestly> phogg: incidently apt: https://xkcd.com/2577/
[19:47:26] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 245 seconds)
[19:47:32] <phogg> I had to use leaflet with an arcgis server where everything is WGS1984. You have to do a bit more work to get it to come out not looking crazy.
[19:48:53] <Helmholtz> so here is my code `curl  "$endpoint?key=$key"` . I fetch endpoint from a json which is like this: "https://tile.openstreetmap.org/$z/$x/$y.png" It didn't fill in those variables
[19:49:11] *** Joins: karabaja4 (~karabaja4@dh207-92-143.xnet.hr)
[19:49:25] <emanuele6> !indirection
[19:49:26] <greybot> Bash is one of the few languages that causes a brain glitch in most people's heads making them want to put data in variable names. Don't do that. You probably want associative arrays or functions instead.
[19:50:05] <jaggz> how do I open a program and background it, with a labeled file descriptor so I can continue to send input to its stdin?
[19:50:07] <emanuele6> if you really want something like that, for some reason, use printf-v
[19:50:47] <emanuele6> jaggz: ...
[19:51:04] <emanuele6> <emanuele6 > if you need only stdout or stdin, exec {cmd1_stdin}> >(cmd1)  or  exec {cmd2_stdout}< <(cmd2)
[19:51:09] * Earnestly .oO(curl -G -d key=value url)
[19:51:25] <emanuele6> same
[19:51:45] <emanuele6> also -g since the url is variable
[19:53:35] <emanuele6> !porn
[19:53:35] <greybot> for ((i=1; i<100; i++)); do printf -v tmp %03d "$i"; wget "http://pornsite/image-$tmp.jpg"; sleep 10; done
[19:53:57] <emanuele6> because  curl -O 'http://pornsite/image-[001-100].jpg'  is a thing
[19:54:05] <emanuele6> and it is on by default
[19:54:48] <phogg> I hate curl so much. Too bad wget is so useless.
[19:55:09] *** Quits: n4dir (~user@88.130.152.4) (Remote host closed the connection)
[19:55:20] <kurahaupo_> jaggz: You could also look at the coproc shell built in. It's slightly broken but you can work around that.
[19:55:38] <emanuele6> but he doesn't need coproc
[19:55:57] *** Joins: tradar (~tradar@user/tradar)
[19:55:57] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[19:56:16] <jaggz> emanuele6, (sorry, don't want to potentially overwhelm when you're helping people out)..    so is <&"$id" a form of "3.6.8 Duplicating File Descriptors" where "$id" is expanded to a file and sent to stdin (of the unmentioned command at the left) ?
[19:56:17] <emanuele6> also i mentioned coproc before and he seemed to have ignored it just like  exec {cmd1_stdin}> >(cmd1)
[19:56:29] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Quit: Konversation terminated!)
[19:56:38] <kurahaupo_> emanuele6: it's handy if you might need to send something to its stdin AND read its stdout
[19:56:53] *** Joins: luckiswithme (~luckiswit@149.167.138.135)
[19:57:03] <jaggz> i'm just not understanding everything
[19:57:06] <kurahaupo_> emanuele6: Ah, ok.
[19:57:14] <emanuele6> yes, that is what i said <emanuele6 > if you need both stdin an stdout, you might want coproc
[19:57:39] <jaggz> yeah just gnuplot's stdin .. need to send it stuff.  it can do what it wants to its own stdout (visible to the user)
[19:58:11] <emanuele6> jaggz: exec {g_stdin}> >(gnuplot)   sets $g_stdin to a filedescriptor to gnuplot's stdin
[19:58:32] <jaggz> basically, my script should interact with the user, and then [my script] should send commands to gnuplot at will
[19:58:44] <emanuele6> and then you can use   printf >&"$g_stdin" 'something\n'  to write to it
[19:58:55] <jaggz> ooh
[19:59:02] <emanuele6> and finally you can close it with  exec {g_stdin}>&-
[19:59:09] <emanuele6> not that different from perl.
[19:59:36] <emanuele6> you could rewrite the whole perl script line by line in bash as i said, it is close enough
[19:59:58] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9a4a:c7f0:d60b:9647) (Quit: Leaving)
[20:00:03] <emanuele6> some of the things would be redundant though (just like they are in perl, but in bash it is more obvious)
[20:00:13] <emanuele6> but i don't see the point of doing that
[20:00:36] <emanuele6> bash's arithmetics only supports integers
[20:00:54] <emanuele6> ( and it is an arbitrary code evaluation nightmare )
[20:02:50] <jaggz> trying to find which areas cover the  "{label}> >(cmd)" functionality here https://www.gnu.org/software/bash/manual/html_node/Redirections.html
[20:02:55] <emanuele6> # read -r us val <<< 'category_one q[0$(echo hacked >&2)]'; (( val + 1 ))
[20:02:57] <shbot> emanuele6: hacked
[20:03:14] <emanuele6> # read -r us val <<< 'category_one q[0$(echo hacked >&2)]'; printf 'val+1 is %s\n' "$(( val + 1 ))"
[20:03:15] <shbot> emanuele6: hacked
[20:03:15] <shbot> emanuele6: val+1 is 1
[20:03:24] <emanuele6> # read -r us val <<< 'category_one 12'; printf 'val+1 is %s\n' "$(( val + 1 ))"
[20:03:26] <shbot> emanuele6: val+1 is 13
[20:03:30] <emanuele6> # read -r us val <<< 'category_one 12.2'; printf 'val+1 is %s\n' "$(( val + 1 ))"
[20:03:31] <shbot> emanuele6: bash: 12.2: syntax error: invalid arithmetic operator (error token is ".2")
[20:03:33] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[20:04:06] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net) (Ping timeout: 250 seconds)
[20:04:09] <emanuele6> jaggz: >(cmd) is a process substitution.
[20:04:33] <jaggz> thanks :)
[20:04:45] <emanuele6> and    exec {x}> something    is the same as   open my $x, ">", "something";
[20:04:57] <emanuele6> s/$/  in perl/
[20:04:59] <emanuele6> !>(
[20:05:00] <greybot> Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[20:05:20] <emanuele6> # printf '%s\n' <(ls)
[20:05:22] <shbot> emanuele6: /dev/fd/63
[20:05:49] <jaggz> ohhh.. I see.  I periodically saw the > > syntax, and thought it peculiar but never looked into what it was
[20:06:03] <jaggz> (even though I used it from examples, without understanding it)
[20:06:29] <jaggz> or the > >(cmd) syntax I should say
[20:07:11] <emanuele6> it is a combination of `[n]> word' (n defaults to stdout: 1) and `>(cmd)' (write process substitution)
[20:07:30] *** Quits: wodencafe (wodencafe@woden.cafe) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[20:07:36] <jaggz> yeah, the peculiar space makes sense now :)
[20:08:13] <emanuele6> that runs cmd in the background, and > does  openat(1, "/dev/fd/whatever" /* cmd's stdin */, O_WRITE | O_TRUNC)
[20:08:49] <emanuele6> temporarily on for the command of which `[n]> word' is target, then stdout is restored
[20:08:59] <emanuele6> s/on/only/
[20:09:18] <emanuele6> if you use `exec > >(cmd)' then it is permanent.
[20:09:45] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:10:21] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:49] <jaggz> hmm... openat()
[20:11:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[20:12:46] *** Joins: otty (~otty@2402:8100:3905:18a:60b9:11df:c4f9:24f5)
[20:13:36] <jaggz> "If pathname is absolute, then dirfd is ignored."
[20:14:23] <emanuele6> what is that?
[20:14:32] <jaggz> from man openat
[20:14:46] <emanuele6> linux man?
[20:14:54] <emanuele6> and why does that matter?
[20:15:21] <jaggz> yeah, linux..
[20:15:31] <jaggz> tryingto see what your openat() was doing
[20:15:50] <kurahaupo_> emanuele6: openat, statat, linkat etc are syscalls
[20:15:52] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[20:16:04] <emanuele6> i know, i mentioned them first :)
[20:16:38] <emanuele6> jaggz: openat(10, "file", O_WRITE|O_TRUNC|O_CREAT) is the same as  open 10, ">", "file" in perl
[20:16:47] <emanuele6> or  exec 10>file  in bash as we said.
[20:17:03] *** Quits: jmew (~jmew___@user/jmew) (Remote host closed the connection)
[20:17:24] <kurahaupo_> oh right, so you did
[20:17:26] <emanuele6> ( bash or POSIX shell in general )
[20:18:16] *** Joins: jmew (~jmew___@host-78-147-81-209.as13285.net)
[20:18:41] <jaggz> (I didn't know we could give a value as the filehandle to perl's open)..
[20:18:48] <jaggz> TIL :}
[20:18:48] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:18:48] <kurahaupo_> emanuele6: That doesn't seem a particularly accurate description of openat. You still need to dup2  its return value
[20:18:59] <kurahaupo_> jaggz: You can't
[20:19:13] <llua> sh# exec 10>derp
[20:19:14] <shbot> llua: sh: 1: exec: 10: not found
[20:19:14] <shbot> llua: (shell exited with 127)
[20:19:29] <kurahaupo_> llua: Single digits only
[20:19:30] <llua> bashism
[20:19:35] <llua> i know
[20:19:41] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:20:11] <emanuele6> right, yeah. i knew fd >9 was not guaranteed to work in POSIX
[20:20:20] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[20:20:45] <emanuele6> but i didn't knew there was a shell who actually errored
[20:21:06] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[20:21:16] <emanuele6> s/kne/kno/
[20:21:27] <emanuele6> kurahaupo_: are you sure you cannot do that in perl?
[20:22:12] <emanuele6> yeah, you can't
[20:22:41] <jaggz> (doesn't look like it from the perldoc -f open)
[20:22:55] <emanuele6> yeah
[20:23:54] <emanuele6> also yeah, that is not fully accurate, you need to dup2 the return value of openat
[20:24:24] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[20:24:59] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[20:25:22] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-103-160.pa.qld.optusnet.com.au)
[20:26:20] <kurahaupo_> emanuele6: I certainly can't in Perl 5.22; I haven't checked newer versions
[20:26:24] *** Joins: ferdna (~ferdna@user/ferdna)
[20:26:57] <jaggz> not in 5.32 perldoc -f open
[20:27:07] <jaggz> no biggie
[20:27:57] <kurahaupo_> I've built my own Linux::Syscalls library to enable me to use fd numbers directly instead of using PerlIO
[20:28:28] <kurahaupo_> Mainly so that I can use statat()
[20:28:59] <kurahaupo_> It also does sensible things with nanosecond resolution timestamps
[20:30:53] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[20:31:32] <emanuele6> kurahaupo_: it seems to work for filehandlers
[20:31:38] <emanuele6> e.g. perl -e 'open STDOUT, ">", "file"; print "hi\n"' works
[20:31:58] <emanuele6> but with file descriptors it doesn't work: e.g. perl -e 'open 1, ">", "filer"; print "hi\n"' doesn't work
[20:32:11] *** Joins: A|an (~Alan@173.218.175.171)
[20:32:42] <kurahaupo_> s/handler/handle/
[20:32:45] *** Joins: seninha (~seninha@user/seninha)
[20:33:31] <kurahaupo_> emanuele6: Perl provides sysopen if you want to use fd's instead of filehandles
[20:34:46] <jaggz> I'm still not sure why my read at the very end is not showing anything
[20:34:48] <jaggz> https://paste.debian.net/hidden/caad7522/
[20:35:10] <jaggz> it does accept an enter
[20:35:59] <jaggz> (actually it does accept and set the reply too -- I just tested).
[20:36:16] <jaggz> ohh.. nevermind. its output is getting mixed with gnuplots.. I do see its prompt
[20:36:54] <emanuele6> if you want to mute gnuplot's stderr, redirect its stderr to /dev/null when you open it
[20:37:10] <emanuele6> exec {gp}> >(gnuplot 2> /dev/null)
[20:37:23] <emanuele6> ( also, you should close the file descriptors you open. )
[20:37:55] <emanuele6> but i guess there is code after that that you have omitted, maybe
[20:38:03] <jaggz> no this is it :)
[20:38:26] <emanuele6> all of that sed grep stuff is useless
[20:38:28] *** Joins: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net)
[20:38:28] *** Quits: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net) (Changing host)
[20:38:28] *** Joins: ghostboarder (~quassel@user/ghostboarder)
[20:38:28] <jaggz> they get auto closed at program termination I think, by spec?
[20:39:00] <emanuele6>   fmt1=$(printf "%s" "$line1" | sed -e $'s/\t.*$//')  ->  fmt1=${line1%$'\t'*}
[20:39:01] <jaggz> emanuele6, is it?
[20:39:10] <jaggz> oh, yeah
[20:39:22] <jaggz> well, grep to remove the comment lines
[20:39:26] <emanuele6> !uuoc
[20:39:26] <greybot> Useless Use Of Cat (cat foo | grep bar). See https://mywiki.wooledge.org/BashFAQ/119 and http://www.iki.fi/era/unix/award.html#cat
[20:39:35] *** Quits: Kruppt (~Kruppt@50-111-42-156.drhm.nc.frontiernet.net) (Quit: Leaving)
[20:39:48] <jaggz> but yeah, I could be more accustomed to bash param expansion capabilities or whatever it's called
[20:40:12] <emanuele6> you are being unfair to bash, in perl you didn't use any external grep, sed, etc commands
[20:40:12] <jaggz> believe me, it bothers me each time I cat | sed/grep :)
[20:40:28] <jaggz> lol, nod.. familiarity :)  trying to get stuff done that's needed
[20:40:36] <jaggz> this is to evaluate heart monitoring (well, pulseox) data
[20:40:37] *** Quits: otty (~otty@2402:8100:3905:18a:60b9:11df:c4f9:24f5) (Ping timeout: 240 seconds)
[20:40:48] <jaggz> https://github.com/jaggzh/ecg-wifi-ad8232-esp8266
[20:40:58] <emanuele6> umask=0077 does nothing
[20:41:15] <jaggz> oh, crikey
[20:41:23] <emanuele6> is that supposed to be `umask 0077' without the =? why do you even need it?
[20:41:50] <jaggz> yeah, messed up and set a var
[20:42:02] <jaggz> because I'm writing to /tmp/ and don't want it "public"
[20:42:11] <jaggz> or does /tmp/ do that already
[20:42:30] <emanuele6> it depends on your OS i guess
[20:42:51] <jaggz> yeah, it's a+r by default here
[20:42:57] <jaggz> so, that's why
[20:42:58] <jaggz> :)
[20:42:59] <jaggz> afk
[20:43:09] * jaggz fixes = before he forgets
[20:43:27] <jaggz> good catch :)
[20:44:31] <emanuele6> # umask
[20:44:33] <shbot> emanuele6: 0022
[20:45:56] *** Quits: luckiswithme (~luckiswit@149.167.138.135) (Remote host closed the connection)
[20:47:53] <jaggz> # umask
[20:47:54] <shbot> jaggz: 0022
[20:47:58] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[20:48:00] <jaggz> yeah, does it the same for me.
[20:48:03] <jaggz> (I kid.)
[20:50:17] <jaggz> oops, pardon me, that was the wrong project
[20:50:18] <jaggz> https://github.com/jaggzh/pulseox-bluetooth
[20:56:33] *** Joins: _sa0sin_ (~sa0sin@88.120.82.205)
[20:58:23] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:00:05] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:65c8:82f0:5e50:a00a) (Ping timeout: 256 seconds)
[21:00:20] *** Joins: tangy (~tangy@user/tangy)
[21:02:26] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 245 seconds)
[21:03:49] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:06:52] *** Quits: bluedust (~bluedust@59.89.219.44) (Remote host closed the connection)
[21:10:39] *** Joins: bluedust (~bluedust@103.161.144.138)
[21:15:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[21:17:45] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:20:42] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:24:20] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:24:24] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[21:30:46] *** Quits: ekathva (~ekathva@2001:999:50:cab1:50ea:c175:d5c5:72f3) (Ping timeout: 250 seconds)
[21:32:28] *** Joins: bluedust_ (~bluedust@59.89.219.44)
[21:32:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[21:33:50] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[21:34:47] *** Joins: remirol (~lorimer@user/lorimer)
[21:34:47] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[21:34:48] *** remirol is now known as lorimer
[21:35:23] *** Joins: wodencafe (wodencafe@woden.cafe)
[21:36:22] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[21:36:22] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 272 seconds)
[21:37:31] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[21:38:08] *** Joins: adac (~adac@213-47-252-7.cable.dynamic.surfer.at)
[21:39:36] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[21:42:05] *** Parts: winter (~winter@user/winter) (The Lounge - https://thelounge.chat)
[21:42:28] *** Joins: Filystyn (~piotr@user/filystyn)
[21:42:33] <Filystyn> guys
[21:43:17] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[21:43:50] <phogg> that's a bold assertion
[21:43:53] *** Joins: N4buc0- (~N4buc0@177.16.170.138)
[21:43:56] *** Joins: han-solo (~han-solo@user/han-solo)
[21:44:00] <Filystyn> how to tell tar to output stuff to sdtout
[21:44:14] <Filystyn> either I am blind or it is not possible
[21:44:50] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:2121:e44c:70ba:5fec:64fe) (Remote host closed the connection)
[21:45:18] <han-solo> gnu ?
[21:45:23] <geirha> -f-
[21:45:43] *** Joins: rgrinberg (~textual@2806:101e:7:8d5d:1da0:53e3:2ba5:4fbf)
[21:45:57] <han-solo> gnu tar seems to have `-O`
[21:46:04] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:46:44] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[21:47:21] <Filystyn> -f- seems to take stuff from stdoin when compressing but maybe when decompressing..
[21:47:52] <jaggz> decompressing to stdout?
[21:48:02] <phogg> han-solo: has the answer
[21:48:07] <jaggz> oh
[21:48:16] <phogg> er, whoops. Tab completion went wrong there.
[21:48:34] <Filystyn> yeah gnutar ok
[21:48:34] <jaggz> tar -cf - | tar -xf -   # but not decompressing to stdout
[21:48:48] <Filystyn> this is unfortunate
[21:49:57] <Filystyn> can't I point programs stdout filedescriptor  ;-))) ?
[21:50:16] <jaggz> Filystyn, if your portability matters and/or your platform doesn't offer the -O equivalent, maybe you can hack some filename replacement thing and send it to /dev/stdout or, ugh, create a fifo
[21:50:32] <jaggz> I think tar might have some filename rewriting provision
[21:50:33] <jaggz> not sure
[21:50:51] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[21:51:26] <Filystyn> hacking involved
[21:51:44] <jaggz> yeah.. sucks
[21:51:50] <jaggz> can also use a custom decompression program
[21:52:46] <jaggz> Filystyn,  --transform=EXPRESSION, --xform=EXPRESSION
[21:52:46] <jaggz>               Use sed replace EXPRESSION to transform file names.
[21:52:56] <jaggz> ugh.. my dewrapper was supposed to one-line that
[21:53:04] <Filystyn> can't I use fucking zcat
[21:53:06] <twkm> not that those are portale.
[21:53:18] <twkm> err, portable.
[21:53:28] <jaggz> latin is spoken here
[21:53:28] <geirha> I still have no clue what the actual goal is
[21:53:50] <jaggz> Filystyn, oh yeah, if you say your goal someone might offer a whole 'nother solution
[21:54:04] <Filystyn> I wanted to see on terminal stuff I compressed
[21:54:07] <twkm> a tar is usually structured, and sending that to stdout can be weird.
[21:54:28] <jaggz> Filystyn, less foo.tar ? :)
[21:54:28] <Filystyn> or decompressed
[21:54:37] <jaggz> yeah, zcat
[21:54:37] <geirha> so -v ?
[21:54:44] <jaggz> no he wants the contents
[21:54:47] <jaggz> or she
[21:54:51] <jaggz> talks like a he
[21:55:11] <jaggz> (there are gender biases in speech patterns)
[21:55:25] <jaggz> not enough data!
[21:55:29] <Filystyn> in times where even obvious things like gender is doubte. I could be even IT
[21:55:52] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[21:56:05] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[21:56:25] <Filystyn> do we have ccat ?
[21:56:32] <jaggz> ?
[21:56:37] <Filystyn> compress cat
[21:56:41] *** Joins: volga629 (~volga629@72.139.93.26)
[21:56:50] <Filystyn> or was compress forgotten
[21:56:52] <jaggz> why
[21:57:00] <jaggz> use the - options of the other stuff?
[21:57:10] <Filystyn> nononononononono
[21:57:17] <jaggz> gunzip -c - ?
[21:57:18] <Filystyn> I mean we have zcat gzcat
[21:57:24] <Filystyn> no ccat
[21:57:29] <jaggz> *shrug*
[21:57:53] <Filystyn> aa zcat does it
[21:57:57] <CrtxReavr> Division in $(()) is always "floor division?"
[21:58:03] <Filystyn> shoudl have look at compress man in first step
[21:58:33] <geirha> it's always integer division
[21:58:52] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[21:59:03] <han-solo> !float
[21:59:03] <greybot> http://mywiki.wooledge.org/BashFAQ/022 -- How can I calculate with floating point numbers instead of just integers?
[21:59:21] <CrtxReavr> Based on the limited testing I've done, the behavior is called floor division in python land.
[21:59:26] <Filystyn> ok sorry zcat bzcat and gzcat
[21:59:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:59:32] <Filystyn> eveyrthing makes sens now
[21:59:34] <CrtxReavr> Remainders are droped, and always rounds down.
[21:59:45] * CrtxReavr makes bzImage
[21:59:53] <Filystyn> thank you everyone for your huge help
[22:00:02] <geirha> # printf '%s\n' "$(( -5 / 2 ))"
[22:00:04] <shbot> geirha: -2
[22:00:36] <geirha> but there it went to the ceiling
[22:00:43] *** Joins: vysn (~vysn@user/vysn)
[22:00:54] <CrtxReavr> Um, no.
[22:01:02] <CrtxReavr> 3 would have been ceiling.
[22:01:08] <CrtxReavr> or -3 in that case.
[22:02:22] <emanuele6> -3 is smaller than -2, so  -5/2 -> -2 is ceiling not floor
[22:02:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:02:50] <CrtxReavr> Absolute value. . . don't be a smartass.
[22:03:10] <CrtxReavr> # printf '%s\n' "$(( 7 % 2 ))"
[22:03:11] <shbot> CrtxReavr: 1
[22:03:11] <emanuele6> i am not being a smart ass :/ you are redefining what floor is
[22:03:18] <CrtxReavr> That's a mod function.
[22:03:21] <emanuele6> floor gets rounds down
[22:03:44] <emanuele6> oh, you are the guy who randomly calls people assholes for no reason, right. *plonk*
[22:04:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:04:55] <jaggz> how do you expect progress if you don't redefine terminology, like "literally"
[22:05:23] <phogg> jaggz: expecting progress seems like asking a lot
[22:05:39] <jaggz> "You're literally waging a war on mathematicians"
[22:06:11] <emanuele6> s/gets //
[22:06:14] <CrtxReavr> Okay, fine, I concede: https://bpa.st/DNIQ
[22:06:39] <jaggz> no, argue and insult and later concede.. and keep up that attitude your whole life
[22:07:03] <jaggz> I know people like that.. works really well.
[22:07:11] <jaggz> they're a pleasure to interact with
[22:07:15] <CrtxReavr> I don't think you're helping.
[22:07:30] <jaggz> I certainly intended to :)
[22:07:34] <phogg> it's integer truncation rather than rounding (up or down)
[22:08:27] *** Quits: curvv (~quetzlcoa@user/curvv) (Ping timeout: 250 seconds)
[22:09:18] <CrtxReavr> It's a strange difference in behavior.
[22:09:36] <phogg> different from what? Strange how?
[22:10:04] <CrtxReavr> Floor division in python vs. the divsion done in $(()).
[22:10:16] <emanuele6> it is not floor division.
[22:10:31] <emanuele6> python does "floor division", bash does not
[22:10:50] <CrtxReavr> Oh well. . . today I only need positive numbers.
[22:11:07] <emanuele6> that still does not mean that bash does floor division
[22:11:25] <CrtxReavr> Yes, I get it. . . it's different, when negative values are involved.
[22:11:39] <phogg> CrtxReavr: the behavior is exactly what anyone would expect if they came from C
[22:12:08] <phogg> if python is different when dealing with things that are strictly integers then python is the weird one
[22:12:17] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[22:12:29] <phogg> s/strange/weird
[22:12:38] <Filystyn> C master race
[22:13:19] <emanuele6> that is exactly what happens in C http://0x0.st/oXR9.txt
[22:13:26] <emanuele6> or in bc when the scale is 0
[22:13:30] <emanuele6> # bc <<< 'scale=0; -5/2'
[22:13:31] <shbot> emanuele6: -2
[22:14:30] <phogg> whether or not what C does is sensible is debatable, and whether higher level languages should just follow along with that behavior is a reasonable question, but it is amazingly *consistent* most everywhere
[22:14:43] <emanuele6>   perl -e 'printf "%d\n", -5 / 2'
[22:14:50] <CrtxReavr> Python's written in C too.
[22:15:02] <emanuele6> or in any language when you try to print a number as integer
[22:15:04] <CrtxReavr> Well. . . most python interpreters.
[22:15:17] <emanuele6> CrtxReavr: yes, you can do floor() also in C
[22:15:19] <emanuele6> just call floor
[22:15:27] *** Joins: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f)
[22:15:47] <emanuele6> but when you do call floor, you call it with a float or double number
[22:15:49] <CrtxReavr> Python uses / for float & // for "floor."
[22:15:53] <emanuele6> not with an integer number
[22:16:02] *** Joins: n4dir (~user@88.130.152.4)
[22:16:10] <emanuele6> -5/2 is integer math there in C and in bash
[22:16:21] <phogg> You know who "fixes" this? Raku: raku -e '(5 / 2).say' # prints 2.5
[22:16:28] <phogg> you have to use the 'div' operator to get C behavior
[22:16:28] <emanuele6> that is how integer division works in any language that uses integers
[22:16:45] <CrtxReavr> actually, that changed between python 2 & 3.
[22:17:01] <CrtxReavr> https://bpa.st/VQNQ
[22:17:17] <emanuele6> phogg: it's the same in perl in fact i used "%d" to show the float to signed integer conversion
[22:17:26] <emanuele6> CrtxReavr: yes, but so what?
[22:17:52] * CrtxReavr shrugs.
[22:17:53] <CrtxReavr> I use both.
[22:17:57] <emanuele6> the point is that bash uses "integer division" because it uses integer numbers
[22:18:03] <emanuele6> not double numbers
[22:18:14] <emanuele6> so the concept of "floor" does not make any sense
[22:19:24] <phogg> emanuele6: in Perl you would use int() to force integer truncation: perl -E 'say int(5 / 2)'
[22:19:38] <emanuele6> that works
[22:19:39] <phogg> otherwise it magically upgrades numbers as needed
[22:22:10] *** Quits: adac (~adac@213-47-252-7.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[22:22:18] *** Quits: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f) (Ping timeout: 260 seconds)
[22:24:30] <emanuele6> # bc -l <<< 'floor(-5/2)'
[22:24:31] <shbot> emanuele6: Runtime error (func=(main), adr=10): Function floor not defined.
[22:24:52] <emanuele6> oh, bc does not have floor()
[22:25:39] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:25:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:26:08] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[22:27:01] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:28:45] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[22:30:50] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:33:30] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Ping timeout: 260 seconds)
[22:33:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:34:42] *** Joins: yustin (~yustin@user/yustin)
[22:39:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[22:39:37] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 240 seconds)
[22:41:26] *** Quits: sinaowolabi (~SinaOwola@160.152.110.131) (Ping timeout: 256 seconds)
[22:41:36] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 272 seconds)
[22:41:52] *** Joins: wallsY (~weechat@user/wallsY)
[22:43:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:43:56] *** Joins: Betal (~Betal@user/betal)
[22:44:15] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:44:45] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:02] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[22:50:40] <rendar> bc barely has +,-
[22:53:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:54:21] *** Quits: jmew (~jmew___@host-78-147-81-209.as13285.net) (Changing host)
[22:54:21] *** Joins: jmew (~jmew___@user/jmew)
[23:00:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:01:13] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:01:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:01:44] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:05:22] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[23:05:27] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.0)
[23:06:00] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:06:32] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:09:53] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:11:00] *** Joins: koolazer (~koo@user/koolazer)
[23:15:13] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:16:34] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[23:16:42] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:16:42] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Client Quit)
[23:16:43] *** Joins: cliluw (~cliluw@47.147.73.223)
[23:16:50] *** Joins: volga629 (~volga629@72.139.93.26)
[23:16:58] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:19:58] *** Quits: bluedust_ (~bluedust@59.89.219.44) (Remote host closed the connection)
[23:21:06] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:23:41] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[23:24:20] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:3c04:554d:ec9d:f84a)
[23:24:48] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:27:49] *** Quits: _sa0sin_ (~sa0sin@88.120.82.205) (Ping timeout: 240 seconds)
[23:31:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903) (Quit: WeeChat 3.0)
[23:31:47] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:32:15] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:33:43] <Filystyn> i know there are many nc's but -p 100-110  seems not to check ranges
[23:34:15] <Filystyn> I looped but wanted to see if a oneline version exists
[23:34:29] <Filystyn> nc -z -p 2000-2100 host
[23:35:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:36:09] <Filystyn> ok works now ... ;)
[23:36:22] <Filystyn> should have just do -zv
[23:36:35] <Filystyn> host 2000-2100
[23:41:52] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:45:02] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:47:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:48:04] *** Quits: rgrinberg (~textual@2806:101e:7:8d5d:1da0:53e3:2ba5:4fbf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:48:10] *** Joins: libsys (~libsys@186.105.132.6)
[23:48:46] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[23:49:08] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[23:49:30] <Filystyn> one more question
[23:49:39] <Filystyn> i do this if some | some2
[23:49:42] <Filystyn> and all works fine
[23:49:53] <Filystyn> but when I do if some | some2 2>&-
[23:50:02] <Filystyn> seems if return status is somehow lost
[23:50:11] <Filystyn> well the return that goes to if
[23:50:20] <Filystyn> if doe snot catch error on command
[23:50:30] <Filystyn> I just don't want to see crap from stderr
[23:50:44] *** Quits: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[23:51:08] *** Quits: przemoc (~przemoc@user/przemoc) (Quit: overdue Alpine Linux upgrade)
[23:51:14] <larryv> !pf 55 > Filystyn
[23:51:14] <greybot> Filystyn: https://mywiki.wooledge.org/BashPitfalls#pf55 -- Don't do this! -- myprogram 2>&-
[23:51:20] <geirha> try redirecting to /dev/null instead. if some | some2 2>/deV/null ; then
[23:51:27] <Filystyn> okie
[23:51:28] <geirha> s/V/v/
[23:52:56] <Filystyn> perror can't even fail
[23:53:18] *** Joins: zouhair (~zouhair@lnsm4-montreal02-142-122-58-148.internet.virginmobile.ca)
[23:53:20] <Filystyn> well it probably fails under the hood
[23:53:23] <Filystyn> but
[23:53:39] <Filystyn> ok ill check /dev/null
[23:54:14] <Filystyn> yeah now it works
[23:54:15] <Filystyn> ;-)
[23:55:29] <Filystyn> thx geirha
[23:56:57] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[23:57:37] *** Joins: l4s8g_ (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
