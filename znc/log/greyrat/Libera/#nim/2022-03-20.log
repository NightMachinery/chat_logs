[00:06:33] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 252 seconds)
[00:12:10] <FromDiscord> <hmmm> hoy what's our nim way of python int(string,base)
[00:13:21] <FromDiscord> <Elegantbeef> What does that do?
[00:13:36] <FromDiscord> <hmmm> takes a string and makes it int but in the preferred base
[00:14:11] <FromDiscord> <Elegantbeef> preferred base meaning?
[00:14:33] <FromDiscord> <Phil> as in base 2, base 4
[00:14:40] <FromDiscord> <hmmm> like hmm binary base ten
[00:15:23] <FromDiscord> <Elegantbeef> Nim has just normal parse methods
[00:15:41] <FromDiscord> <Phil> if nim has a log proc and the inverse of a log proc you can do that calculation
[00:16:02] <FromDiscord> <hmmm> hmm
[00:16:03] <FromDiscord> <Phil> I'd need to check up on the formula again for converting into a base of your choosing
[00:16:09] <FromDiscord> <Elegantbeef> `parseHexInt`, `parseBinInt`, `parseInt`
[00:16:26] <FromDiscord> <hmmm> the base should be 36 lol
[00:16:36] <FromDiscord> <Elegantbeef> If you need base 36 you're in hell
[00:16:40] <FromDiscord> <Phil> but if you can get the logarithm of a number in any way you can calculate stuff to base 36
[00:16:55] <FromDiscord> <hmmm> 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
[00:17:01] <FromDiscord> <hmmm> lol
[00:17:37] <FromDiscord> <Elegantbeef> You also could always write your own silly base parser
[00:17:49] <FromDiscord> <hmmm> I'll probably need to
[00:17:56] <FromDiscord> <Elegantbeef> Why do you have base 36?
[00:18:00] <FromDiscord> <hmmm> need to brush my pity maths
[00:18:17] <FromDiscord> <hmmm> It's for a stupid attempt I'm doing it won't probably amount to much
[00:19:26] <FromDiscord> <hmmm> part1 of the plan is encoding and decoding base 36
[00:20:04] <FromDiscord> <Elegantbeef> Well 0 to Z is a terrible  format for base
[00:20:26] <FromDiscord> <hmmm> encode part was just translating the python thing on nim, but the decoding part python has the battery included thingy
[00:27:10] <FromDiscord> <Elegantbeef> The downsized of `0-9`, 'A-Z' is that there is no easy to reason bit op 😀
[00:27:24] <FromDiscord> <tandy> hmm, my library isnt importing↵it has \_ in the name could that be why?
[00:27:34] <FromDiscord> <Elegantbeef> what's the module name?
[00:27:36] <FromDiscord> <tandy> https://github.com/tandy-1000/simple-matrix-client
[00:27:40] <FromDiscord> <Elegantbeef> how are you importing
[00:27:41] <FromDiscord> <tandy> simple\_matrix\_client
[00:27:52] <FromDiscord> <tandy> import pkg/simple\_matrix\_client
[00:27:53] <FromDiscord> <Elegantbeef> That's not a file in the module
[00:28:21] <FromDiscord> <Elegantbeef> `simple_matrix_client/client`?
[00:28:23] <FromDiscord> <tandy> tru, but i tried `import pkg/simple_matrix_client/client`
[00:28:35] <FromDiscord> <Elegantbeef> How are you compiling?
[00:28:43] <FromDiscord> <tandy> no luck
[00:28:44] <FromDiscord> <Elegantbeef> How have you installed the package
[00:28:50] <FromDiscord> <Elegantbeef> How are you compiling, not are you
[00:28:58] <FromDiscord> <tandy> `nim js`
[00:29:03] <FromDiscord> <tandy> nimble install in directory
[00:29:52] <FromDiscord> <Elegantbeef> Ok so you have `.nimble/pkgs/simple-matrix-client@0.1.0/simple_matrix_client` or w/e?
[00:30:51] <FromDiscord> <tandy> hmm no i have  bin/client.js
[00:31:35] <FromDiscord> <Elegantbeef> This isnt a hybrid directory
[00:31:42] <FromDiscord> <Elegantbeef> hybrid package\
[00:31:46] <FromDiscord> <tandy> ok i removed bin from nimble
[00:31:57] <FromDiscord> <tandy> i have this yes
[00:32:07] <FromDiscord> <Elegantbeef> So you've fixed it?
[00:32:16] <FromDiscord> <tandy> still cant open file
[00:32:37] <FromDiscord> <Elegantbeef> fine i'll get it working here
[00:32:46] <FromDiscord> <tandy> thanks beef
[00:34:23] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/nimble#hybrids
[00:37:26] <FromDiscord> <tandy> i read this
[00:38:35] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3STU
[00:40:23] <FromDiscord> <tandy> i pushed some changes to make it hybrid package
[00:41:21] <FromDiscord> <Elegantbeef> the `src` might be the issue
[00:42:45] <FromDiscord> <tandy> i mean im confused \:o
[00:42:49] <FromDiscord> <Elegantbeef> Well use more words
[00:43:02] <FromDiscord> <Elegantbeef> Yea
[00:43:21] <FromDiscord> <Elegantbeef> If you look at the install it's installing the src at root
[00:44:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3STW
[00:44:38] <FromDiscord> <Elegantbeef> As such all files at the root of `src` are added first class
[00:44:47] <FromDiscord> <tandy> ahh yeah
[00:45:15] <FromDiscord> <Elegantbeef> so either add a new folder or make Nimble like your structure
[00:45:28] <FromDiscord> <Elegantbeef> It's up to you if you want to bitch about being forced into a file structure, that one's a freebie
[00:45:31] <FromDiscord> <tandy> i just need to rename client.nim to simple\_matrix\_client.nim
[00:46:01] <FromDiscord> <Elegantbeef> Well you also should move the sub modules into a sub folder if you want to import using `import simple_matrix_client/server`
[00:47:54] <FromDiscord> <tandy> nah i just want to import client.nim
[00:48:10] <FromDiscord> <Elegantbeef> You can currently 😛
[00:48:25] <FromDiscord> <Elegantbeef> Though that pollutes all other packages
[00:48:42] <FromDiscord> <tandy> yea i want to do `import simple_matrix_client/client`
[00:49:28] <FromDiscord> <Elegantbeef> Well look at balls' nimble https://github.com/disruptek/balls/blob/master/balls.nimble
[00:52:03] <FromDiscord> <hmmm> can we haz disruptek back?
[00:52:10] <FromDiscord> <hmmm> I miss the old geezer
[00:53:15] <FromDiscord> <Elegantbeef> Prestige it's bug search part deux 😛
[00:55:00] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[00:57:42] <FromDiscord> <tandy> tysm beef
[00:57:45] <FromDiscord> <tandy> that took a whie
[00:57:53] <FromDiscord> <Elegantbeef> No problem
[01:00:26] <FromDiscord> <Elegantbeef> Oh boy is kate + nimlsp is lovely for compiler developing, fast symbol look up and searching
[01:01:17] <FromDiscord> <Elegantbeef> Compared to vscode atleast
[01:03:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:12:30] <FromDiscord> <Mysterysib> Do ya'll prefer coding on a white background or a black one?
[01:12:32] <FromDiscord> <Mysterysib> I can't decide
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:13:06] <FromDiscord> <Elegantbeef> ayu mirage
[01:16:19] <FromDiscord> <iencec> is there  way to run just a specific proc as sudo?
[01:16:21] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[01:17:06] <FromDiscord> <Elegantbeef> I dont imagine you can raise a small part of a program to elevated privilege, though i could be wrong, what're you trying to do?
[01:17:36] <FromDiscord> <Generic> Elegantbeef, I think this could be related: https://github.com/saem/vscode-nim/issues/82
[01:18:17] <FromDiscord> <Elegantbeef> Yea it probably is it
[01:18:23] <FromDiscord> <Elegantbeef> Though the searching is just vscode
[01:18:55] <FromDiscord> <iencec> [Elegantbeef](https://matrix.to/#/%40elegantbeef%3Amatrix.org) it is live linux startup script most config is done as user, but a few things need sudo
[01:19:22] <FromDiscord> <iencec> so far I had two separate cli binaries
[01:19:26] <FromDiscord> <Elegantbeef> Run everything that doesnt need sudo then prompt for sudo password when you need it is what i'd do
[01:19:36] <FromDiscord> <iencec> called the second with sudo.
[01:19:44] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:20:16] <FromDiscord> <Elegantbeef> I dont know the proper way to do this so i should shush
[01:20:45] <FromDiscord> <iencec> [Elegantbeef](https://matrix.to/#/%40elegantbeef%3Amatrix.org) but in two separate binaries? or within one?
[01:21:16] <FromDiscord> <Elegantbeef> I'd do it in one binaries, but like i said I know nothing
[01:21:17] <FromDiscord> <iencec> with two it works already, but feels clunky.
[01:21:44] <FromDiscord> <iencec> yeah, one single binary would be great.
[01:23:00] <FromDiscord> <Elegantbeef> There is `osproc.startProcess` and https://nim-lang.org/docs/terminal.html#readPasswordFromStdin%2Cstring%2Cstring
[01:23:31] <FromDiscord> <Elegantbeef> So you can exec the process then if the program requires `password` you can enter it, though no clue how this is properly done
[01:23:44] <FromDiscord> <Elegantbeef> Probably smarter to elevate the process if possiblee
[01:23:54] <FromDiscord> <iencec> thx! will have a look.
[01:29:20] <FromDiscord> <Elegantbeef> Well I seemed to have found the bug with nimsuggest, `==` is not the same as `sameType` 😛
[01:38:20] <FromDiscord> <Shinyzenith> @beef @Rika I think I'm getting the wrong pointer or something↵not entirely sure
[01:38:58] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954864082194931752/unknown.png
[01:39:11] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954864136276295710/unknown.png
[01:39:30] <FromDiscord> <Shinyzenith> Since I'm not getting the same struct data, wlr_output_init_render call isn't working
[01:41:18] <FromDiscord> <Shinyzenith> (edit) "working" => "working↵↵and the socket data is different too"
[01:43:41] <FromDiscord> <Elegantbeef> Uhhh i'm uncertain here
[01:44:32] <FromDiscord> <Elegantbeef> What's the typedef of the HerbServer?
[01:44:38] <FromDiscord> <Shinyzenith> That's the struct
[01:45:14] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954865658292736000/unknown.png
[01:47:41] <FromDiscord> <Elegantbeef> That's not what i asked
[01:49:45] <FromDiscord> <Shinyzenith> Oh sorry Didn't read it completely
[01:49:51] <FromDiscord> <Shinyzenith> 4am brain does that to me
[01:49:52] <FromDiscord> <Shinyzenith> 🥴
[01:50:03] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "What's the typedef of":  https://media.discordapp.net/attachments/371759389889003532/954866870400479312/unknown.png
[01:50:31] <FromDiscord> <Elegantbeef> No problem, just wanted to make sure nothing was unsafe
[01:50:36] <FromDiscord> <Elegantbeef> Well "unsafe"
[01:50:43] <FromDiscord> <Shinyzenith> :PepeKek: got it
[01:53:38] <FromDiscord> <Elegantbeef> Hmm is there any chance you're not getting the object's address passed?
[01:54:27] <FromDiscord> <Elegantbeef> on the side that calls this proc do `echo cast[int](myHerbServer.newOutput.addr)` and inside the callback do `echo cast[int](data)`
[01:56:41] <FromDiscord> <Shinyzenith> Ok will do
[01:56:51] <FromDiscord> <Shinyzenith> shouldn't it be new_output?
[01:57:05] <FromDiscord> <Elegantbeef> Nim is style insensitive
[01:57:11] <FromDiscord> <Elegantbeef> I dont write snakecase
[01:57:18] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Nim is style insensitive": Did not know that
[01:57:27] <FromDiscord> <Shinyzenith> interesting
[01:57:33] <FromDiscord> <Shinyzenith> 93914817010384
[01:57:34] <FromDiscord> <Shinyzenith> i got that
[01:57:37] <FromDiscord> <Shinyzenith> on the side that calls the proc
[01:57:38] <FromDiscord> <Elegantbeef> Much like the first book of the bible, the snake leads you to sin 😛
[01:57:45] <FromDiscord> <Shinyzenith> :PepeKek:
[01:57:48] <FromDiscord> <Elegantbeef> And other silly jokes you can tell yourself
[01:58:19] <FromDiscord> <Elegantbeef> And inside thee callback?
[01:58:34] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954869012251172864/unknown.png
[01:58:42] <FromDiscord> <Shinyzenith> looks like the values of the pointers are different
[01:58:54] <FromDiscord> <Shinyzenith> (edit) "values" => "addrs"
[01:59:02] <FromDiscord> <Elegantbeef> Which means you're not getting a pointer to `newOutput`
[01:59:06] <FromDiscord> <Elegantbeef> So either the API doesnt work as you expect or you're doing somethiing wrong
[01:59:31] <FromDiscord> <Shinyzenith> 😓
[01:59:55] <FromDiscord> <Elegantbeef> Do you have the place where you pass the `newOutput` to the callback?
[02:00:08] <FromDiscord> <Shinyzenith> Yes
[02:00:20] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954869459175239690/unknown.png
[02:00:58] <FromDiscord> <Shinyzenith> oh
[02:01:05] <FromDiscord> <Shinyzenith> they are supposed to be different
[02:01:08] <FromDiscord> <Shinyzenith> we're checking 2 different entities
[02:01:15] <FromDiscord> <Shinyzenith> new_output is a callback↵data is a just a void pointer
[02:01:23] <FromDiscord> <Shinyzenith> ofc they have different pointers
[02:01:38] <FromDiscord> <Shinyzenith> on logging the pointer to the server struct from both outside and inside the callback I get the same address
[02:01:44] <FromDiscord> <Elegantbeef> Well give me the code that passes `newOutput`
[02:01:49] <FromDiscord> <Shinyzenith> oh nvm I still don't
[02:02:01] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Well give me the": I'll push to a branch and send the link
[02:02:06] <FromDiscord> <Elegantbeef> Thanks
[02:02:33] <FromDiscord> <Elegantbeef> Less pulling of teeth is always better
[02:02:51] <FromDiscord> <Shinyzenith> yep
[02:02:55] <FromDiscord> <Shinyzenith> https://github.com/waycrate/nim-wl/tree/devel
[02:03:09] <FromDiscord> <Shinyzenith> you're gonna need clang and futhark installed
[02:03:16] <FromDiscord> <Shinyzenith> edit the path of clang according to your version number
[02:03:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:03:22] <FromDiscord> <Shinyzenith> if on arch, the one I have set right now should work fine
[02:03:44] <FromDiscord> <Elegantbeef> Eh i'm not running it
[02:03:51] <FromDiscord> <Shinyzenith> Oh all cool
[02:03:57] <FromDiscord> <Shinyzenith> thank you for helping tho 🙏
[02:04:02] <FromDiscord> <Shinyzenith> I appreciate you taking the time ;w;
[02:04:10] <FromDiscord> <Elegantbeef> `wl_signal_add` takes a pointer to the signal and a pointer to the listener
[02:04:39] <FromDiscord> <Shinyzenith> you mean in libwayland or in the wrapper I wrote?
[02:04:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:04:43] <FromDiscord> <Elegantbeef> `herb_server.new_output.addr` on line 13
[02:05:03] <FromDiscord> <Elegantbeef> Yea your wrapper assumes something
[02:05:20] <FromDiscord> <Elegantbeef> It assumes `wl_listener` is passed by ref
[02:05:37] <FromDiscord> <Elegantbeef> `proc wl_signal_add(wl_signal: wl_signal, wl_listener: wl_listener)` turn this into `proc wl_signal_add(wl_signal: wl_signal, wl_listener: var wl_listener)`
[02:06:03] <FromDiscord> <Elegantbeef> If it's passed by copy you've got something unsafe
[02:06:12] <FromDiscord> <Shinyzenith> Ok will do
[02:06:15] <FromDiscord> <Elegantbeef> Which is probably the issue
[02:06:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[02:06:39] <FromDiscord> <Shinyzenith> well it reports the correct pointers now
[02:06:46] <FromDiscord> <Elegantbeef> Good
[02:06:49] <FromDiscord> <Elegantbeef> Solved the issue
[02:07:19] <FromDiscord> <Shinyzenith> but it still doesn't work....hmm which means output.allocator or allocator is still remaining null which shouldn't happen↵↵I will try and debug this on my own
[02:07:19] <FromDiscord> <Shinyzenith> thanks
[02:07:52] <FromDiscord> <Elegantbeef> `  cast[ptr T](cast[int](data) - offsetOf(T, field))[]` is also wrong then i think
[02:08:20] <FromDiscord> <Elegantbeef> Actually nvm i'm dumb
[02:08:24] <FromDiscord> <Shinyzenith> I don't think so because this time on calling herbServer.socket ↵it returns the same value both inside and inside of the callback
[02:08:25] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954871493282631730/unknown.png
[02:08:33] <FromDiscord> <Elegantbeef> Yea i was being dumb
[02:08:40] <FromDiscord> <Shinyzenith>  https://media.discordapp.net/attachments/371759389889003532/954871557824581652/unknown.png
[02:08:49] <FromDiscord> <Shinyzenith> hmmm interesting error
[02:08:57] <FromDiscord> <Shinyzenith> never encountered this in zig/c ↵i'm probably doing someting wrong
[02:09:56] <FromDiscord> <Elegantbeef> Is it line 64 in server causing the issue?
[02:11:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SUi
[02:11:27] <FromDiscord> <Elegantbeef> Dont need the return at the end and the code is cleaner imo
[02:12:14] <FromDiscord> <Elegantbeef> The issue is on line 64
[02:12:27] <FromDiscord> <Elegantbeef> `var herb_server = fieldParentPtr(HerbServer,new_output, listener);` makes a copy
[02:12:53] <FromDiscord> <Elegantbeef> Or atleast possibly the issue
[02:12:57] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "also do yourself a": Oh didn't know about this notation
[02:12:57] <FromDiscord> <Shinyzenith> will do
[02:13:05] <FromDiscord> <Elegantbeef> I say about 100 dumb things before a smart thing comes out so we're going to be here a while 😛
[02:13:13] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Is it line 64": if (not wlr_output_init_render(wlr_output.addr, herb_server.allocator, herb_server.renderer)): ↵↵this line
[02:13:14] <FromDiscord> <Elegantbeef> Nim has a implicit result variable
[02:13:40] <FromDiscord> <Shinyzenith> In reply to @Shinyzenith "if (not wlr_output_init_render(wlr_output.addr, her": and this line throws the error because of:
[02:13:59] <FromDiscord> <Shinyzenith> 1 sec, searching for the line
[02:14:15] <FromDiscord> <Shinyzenith> this line https://media.discordapp.net/attachments/371759389889003532/954872960353726504/unknown.png
[02:15:12] <FromDiscord> <Elegantbeef> So we know the right hand isnt null, but the left hand is
[02:15:34] <FromDiscord> <Elegantbeef> So for some reason `wlrOutput`'s allocator/renderer is not nil
[02:15:59] <FromDiscord> <Elegantbeef> `var wlr_output = cast[wlr_output](data);` this is wrong
[02:16:05] <FromDiscord> <Elegantbeef> data is a `ptr`
[02:16:26] <FromDiscord> <Elegantbeef> that should be `var wlrOutput = cast[ptr wlrOutput](data)`
[02:16:34] <FromDiscord> <Shinyzenith> hm I'll try
[02:17:31] <FromDiscord> <Shinyzenith> better now? https://media.discordapp.net/attachments/371759389889003532/954873781678145616/unknown.png
[02:17:39] <FromDiscord> <Elegantbeef> I mean i know for a certainty there is a very low chance that you get lucky enough to get multiple 0'd bytes from a pointer 😛
[02:17:39] <FromDiscord> <Elegantbeef> So this will work
[02:17:58] <FromDiscord> <Elegantbeef> Less redundant yes
[02:18:09] <FromDiscord> <Shinyzenith> aaaa https://media.discordapp.net/attachments/371759389889003532/954873943817355304/unknown.png
[02:18:12] <FromDiscord> <Shinyzenith> :dead:
[02:18:18] <FromDiscord> <Shinyzenith> 1 sec i'll clean itup
[02:18:23] <FromDiscord> <Elegantbeef> got a useless comma
[02:18:30] <FromDiscord> <Shinyzenith> oh yes.
[02:20:08] <FromDiscord> <Shinyzenith> Final iteration
[02:20:10] <FromDiscord> <Shinyzenith> sent a code paste, see https://play.nim-lang.org/#ix=3SUl
[02:20:10] <FromDiscord> <Shinyzenith> time to compile
[02:20:26] <FromDiscord> <Shinyzenith> oof got an extra pointer somewhere https://media.discordapp.net/attachments/371759389889003532/954874519082897458/unknown.png
[02:20:34] <FromDiscord> <Shinyzenith> found it
[02:20:48] <FromDiscord> <Elegantbeef> Yea the compiler told you where
[02:21:07] <FromDiscord> <Shinyzenith> WOO IT WORKS
[02:21:13] <FromDiscord> <Elegantbeef> If you couldnt find it i'd make a PR to disallow anyone with the user name `aakash` from using NIm
[02:21:17] <FromDiscord> <Shinyzenith> WTF I'VE BEEN TRYING TO FIX THIS FOR HOURS 😭
[02:21:23] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "If you couldnt find": :PepeKek:
[02:21:38] <FromDiscord> <Shinyzenith> In reply to @Shinyzenith "WTF I'VE BEEN TRYING": How did you know the pointer was the issue?
[02:21:43] <FromDiscord> <Shinyzenith> I mean I'm calling addr again
[02:21:49] <FromDiscord> <Shinyzenith> so technically I should get the same pointer
[02:21:50] <FromDiscord> <Shinyzenith> right?
[02:21:52] <FromDiscord> <Elegantbeef> \`Error\: Someone noticed you cant read compiler issues"
[02:21:54] <FromDiscord> <Elegantbeef> No
[02:22:00] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "\`Error\: Someone noticed you": 🤣
[02:22:01] <FromDiscord> <Elegantbeef> Addr of a pointer is double indirection
[02:22:12] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Addr of a pointer": Oh
[02:22:18] <FromDiscord> <Shinyzenith> Right
[02:22:21] <FromDiscord> <Shinyzenith> I'll remember this
[02:22:52] <FromDiscord> <Elegantbeef> Pointers are  fun
[02:22:57] <FromDiscord> <Shinyzenith> and painful
[02:23:18] <FromDiscord> <Shinyzenith> rust pointers feel the most comfy
[02:23:47] <FromDiscord> <Elegantbeef> Nim pointers are nice if you ask me
[02:24:26] <FromDiscord> <Shinyzenith> I guess I'm still too inexperienced, we'll see in a few months after I finish herb...hopefully by then I'll know a bit more.
[02:24:32] <FromDiscord> <Elegantbeef> Throwing cast haphazardly around to get the type system happy isnt how you use pointers
[02:24:52] <FromDiscord> <Shinyzenith> well yes but if I don't libwayland gets angry 🥲
[02:24:58] <FromDiscord> <Elegantbeef> Is herb a herbsluftwm inspired WM for wayland
[02:25:11] <FromDiscord> <Elegantbeef> Sure but you dont want to make it happy you want to make sure it makes sense
[02:26:02] <FromDiscord> <Shinyzenith> sent a long message, see http://ix.io/3SUn
[02:26:12] <FromDiscord> <Shinyzenith> bspwm because I already cloned sxhkd for wayland 😜
[02:26:25] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Sure but you dont": Yep, understood :salute:
[02:26:43] <FromDiscord> <Elegantbeef> It's 4am for you so i'll excuse the illogical casting
[02:26:55] <FromDiscord> <Shinyzenith> 🤣 🤣  thank you
[02:27:04] <FromDiscord> <Shinyzenith> 4:30 now 🤣
[02:27:11] <FromDiscord> <Shinyzenith> I appreciate the help 🥰
[02:27:18] <FromDiscord> <Elegantbeef> Imagine living in a half timezone
[02:27:19] <FromDiscord> <Shinyzenith> Do you have a github I can follow?
[02:27:31] <FromDiscord> <Alea> does nim have a pass statement like in python?
[02:27:42] <FromDiscord> <Elegantbeef> `discard`
[02:27:56] <FromDiscord> <Alea> ah didn't know that can work for this
[02:27:57] <FromDiscord> <Elegantbeef> https://github.com/beef331 is my github
[02:28:07] <FromDiscord> <Elegantbeef> I mean you dont need a pass statement in nim
[02:28:10] <FromDiscord> <Elegantbeef> You just need some ast
[02:28:27] <FromDiscord> <Elegantbeef> so `discard` `##` both work
[02:28:33] <FromDiscord> <Shinyzenith> Followed 😉
[02:28:55] <FromDiscord> <Elegantbeef> Oh boy i'm famous
[02:29:40] <FromDiscord> <Shinyzenith> 🤣
[02:31:09] <FromDiscord> <Elegantbeef> I dont get github following for the most part
[02:31:34] <FromDiscord> <Elegantbeef> It's such a weird thing, some people do the whole follow to get a follow stuff and it's just fucking weird
[02:31:37] <FromDiscord> <Shinyzenith> basically tells me what other people are writing / what's the hot new tech people are starring↵basically keeps me upto date
[02:31:40] <FromDiscord> <Elegantbeef> Why do you want to follow 300000 developers
[02:32:08] <FromDiscord> <Elegantbeef> I only follow people i know in real life or people writing stuff I like
[02:32:22] <FromDiscord> <Elegantbeef> I dont play it like a social media platform, then again I dont use social media platforms
[02:32:38] <FromDiscord> <Shinyzenith> Same
[02:32:46] <FromDiscord> <Shinyzenith> I just use element for work stuff
[02:32:51] <FromDiscord> <Elegantbeef> Continues to rant about people that have like 2000 follows that randomly follow me
[02:33:00] <FromDiscord> <Shinyzenith> 🤣 🤣
[02:33:07] <FromDiscord> <Elegantbeef> Yet you're not using matrix to talk here?
[02:33:11] <FromDiscord> <Elegantbeef> 0/10 matrix user
[02:33:19] <FromDiscord> <Shinyzenith> I don't know the matrix chat room link QwQ
[02:33:39] <FromDiscord> <Elegantbeef> https://matrix.to/#/#nim:envs.net
[02:33:41] <FromDiscord> <Shinyzenith> and most of my wayland developer friends are here so it's just easier for me to copy paste this
[02:33:44] <FromDiscord> <Shinyzenith> (edit) "this" => "stuff"
[02:33:45] <FromDiscord> <Shinyzenith> and discuss
[02:33:51] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "https://matrix.to/#/#nim:envs.net": omw
[02:34:12] <FromDiscord> <Bubblie> I like rust a lot but I have a problem using it because of its syntax, my brain is very weird and its hard for me to comprehend languages who have syntax that relies on symbol usage that heavily, its not haskell of course but its still hard for me ig
[02:34:15] <FromDiscord> <Elegantbeef> Ah i've been trying to use matrix more, sadly doesnt have channelled voip yet so not great
[02:34:21] <FromDiscord> <Bubblie> its more of a me problem
[02:34:24] <FromDiscord> <Elegantbeef> Ever since teamspeak i love my chalnelled voip!
[02:34:26] <FromDiscord> <Bubblie> rather than rust being the problem
[02:34:38] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "Ever since teamspeak i": O
[02:34:38] <FromDiscord> <Bubblie> becuase rust isn't the problem its just me not being able to read it properly
[02:34:48] <FromDiscord> <Elegantbeef> I think rust is a good language for everything but ergonomics and readabillity
[02:34:48] <FromDiscord> <Shinyzenith> In reply to @Bubblie "becuase rust isn't the": I struggled with that too
[02:34:56] <FromDiscord> <Bubblie> In reply to @Elegantbeef "I think rust is": same
[02:35:17] <FromDiscord> <Elegantbeef> Prestige got a PR to fix your bug, hopefully it's acceepted
[02:35:21] <FromDiscord> <Shinyzenith> In reply to @Shinyzenith "I struggled with that": I just tried writing more and more programs till it stuck with me↵but I still get intimidated by huge repos such as smithay
[02:35:28] <FromDiscord> <Bubblie> its an amazing language but so hard to read and utilize at times, its why I was looking for ways I could do low level programming without heavy usage of the three titans C/C++/Rust
[02:35:30] <FromDiscord> <Bubblie> and then I found nim
[02:35:42] <FromDiscord> <Bubblie> which allowed me to use C and C++ libraries a lot more easier
[02:35:43] <FromDiscord> <Elegantbeef> I mean i've never written Rust properly, i just cant get into it
[02:35:50] <FromDiscord> <Elegantbeef> It's just such a mess to read for me
[02:35:52] <FromDiscord> <Bubblie> Same
[02:36:25] <FromDiscord> <Bubblie> In reply to @Shinyzenith "I just tried writing": huge repos in rust are the bane of my existence
[02:36:25] <FromDiscord> <Shinyzenith> In reply to @Elegantbeef "I mean i've never": I got into it with my first rust program actually lol https://github.com/waycrate/swhkd↵it hit all the points for the language I needed so I stuck with it for a few days and it felt amazing for a small project like this
[02:36:32] <FromDiscord> <Shinyzenith> In reply to @Bubblie "huge repos in rust": absolutely
[02:36:41] <FromDiscord> <Bubblie> like, in other languages its somewhat comprehensive right
[02:36:47] <FromDiscord> <Bubblie> but when I look at complicated rust repos
[02:36:48] <FromDiscord> <Bubblie> I just
[02:36:48] <FromDiscord> <Bubblie> die
[02:36:50] <FromDiscord> <Bubblie> and disspiate
[02:36:54] <FromDiscord> <Bubblie> (edit) "disspiate" => "dissipate"
[02:36:59] <FromDiscord> <Elegantbeef> Plus I'm already capable of bug fixes with Nim, cant wast that effort  😛
[02:37:04] <FromDiscord> <Shinyzenith> I think repos such as smithay are comprehensive, just too comprehensive sometimes
[02:37:10] <FromDiscord> <Shinyzenith> traits, implementations, turbofish
[02:37:12] <FromDiscord> <Shinyzenith> what not
[02:37:20] <FromDiscord> <Shinyzenith> too much shit to remember!! :PepeKek:
[02:37:26] <FromDiscord> <Bubblie> so like, its too comprehensive that it becomes too hard to read
[02:37:28] <FromDiscord> <Bubblie> is what you mean
[02:37:32] <FromDiscord> <Shinyzenith> yes
[02:37:37] <FromDiscord> <Bubblie> very very relateable
[02:37:45] <FromDiscord> <Bubblie> Im glad I found nim truly
[02:37:49] <FromDiscord> <Elegantbeef> I still should finish my X WM eventually
[02:37:51] <FromDiscord> <Bubblie> I am experimenting with nim pointers
[02:37:54] <FromDiscord> <Bubblie> they are pretty good ngl
[02:37:57] <FromDiscord> <Elegantbeef> I got it relatively far but gave up
[02:38:14] <FromDiscord> <Elegantbeef> The biggest thing is they're distinct from collections
[02:38:17] <FromDiscord> <Shinyzenith> try wlroots!
[02:38:20] <FromDiscord> <Elegantbeef> Fuck no
[02:38:22] <FromDiscord> <Shinyzenith> Xorg is legacy!!
[02:38:24] <FromDiscord> <Bubblie> LMAO
[02:38:34] <FromDiscord> <Shinyzenith> I say fuck yes 😎
[02:38:43] <FromDiscord> <Elegantbeef> I've heard too many issues with wayland and gaming
[02:38:47] <FromDiscord> <Elegantbeef> So i'll hold off for now
[02:38:49] <FromDiscord> <Shinyzenith> casually hopping platforms
[02:39:07] <FromDiscord> <Elegantbeef> Plus i dont really feel like doing it
[02:39:15] <FromDiscord> <Shinyzenith> If i'm not mistaken the steam deck uses wayland for the gaming mode and xorg for desktop mode
[02:39:16] <FromDiscord> <Shinyzenith> so
[02:39:42] <FromDiscord> <Elegantbeef> Doesnt change what i've seen/heard
[02:39:44] <FromDiscord> <Elegantbeef> I thought it only used pipewire and still uses X
[02:39:44] <FromDiscord> <Shinyzenith> Understandable
[02:39:50] <FromDiscord> <Shinyzenith> what's the name of your wm?
[02:40:03] <FromDiscord> <Elegantbeef> "GoodWm" since it's not awesome 😛
[02:40:06] <FromDiscord> <Shinyzenith> I know a dude who wrote a Xwm in nim , maybe you'd like to take a look?
[02:40:14] <FromDiscord> <Shinyzenith> O
[02:40:16] <FromDiscord> <Elegantbeef> Are you talking about nimdow
[02:40:20] <FromDiscord> <Shinyzenith> Nope
[02:40:23] <FromDiscord> <Elegantbeef> Ah
[02:40:26] <FromDiscord> <Shinyzenith> it's a dynamic tag based window manager
[02:40:40] <FromDiscord> <Elegantbeef> https://github.com/beef331/goodwm is my shitty WM
[02:40:48] <FromDiscord> <Shinyzenith> https://github.com/codic12/worm
[02:40:52] <FromDiscord> <Elegantbeef> Undoccumented and  terribly layed out
[02:40:53] <FromDiscord> <Elegantbeef> Ah i've helped codic
[02:40:55] <FromDiscord> <Bubblie> I am going to make a boid simulation in nim and vulkan
[02:41:01] <FromDiscord> <Bubblie> boids are flock simulations
[02:41:03] <FromDiscord> <Shinyzenith> well we all start somewhere lmao
[02:41:13] <FromDiscord> <Bubblie> this will give me a decent idea on how to use nim well
[02:41:14] <FromDiscord> <Bubblie> I think
[02:41:19] <FromDiscord> <Bubblie> it seems like a nice project to do
[02:41:43] <FromDiscord> <Bubblie> vulkan requires me to write like
[02:41:48] <FromDiscord> <Bubblie> 500 lines initially though
[02:41:50] <FromDiscord> <Bubblie> then it gets easier
[02:41:51] <FromDiscord> <Bubblie> LMAO
[02:42:03] <FromDiscord> <Elegantbeef> I still say just use opengl
[02:42:04] <FromDiscord> <Shinyzenith> Anyways, my bed is too eager for me to lay down 🥴 5 am
[02:42:05] <FromDiscord> <Bubblie> (edit) "500" => "1000+"
[02:42:11] <FromDiscord> <Bubblie> In reply to @Elegantbeef "I still say just": Im never dealing with state again
[02:42:12] <FromDiscord> <Shinyzenith> gn!
[02:42:13] <FromDiscord> <Elegantbeef> State machine sucks, but man is it easier 😛
[02:42:13] <FromDiscord> <Elegantbeef> Buh bye
[02:42:14] <FromDiscord> <Bubblie> horrible experience
[02:42:19] <FromDiscord> <Bubblie> In reply to @Elegantbeef "State machine sucks, but": true
[02:42:20] <FromDiscord> <Shinyzenith> 👋
[02:42:25] <FromDiscord> <Bubblie> gn
[02:43:34] <FromDiscord> <Bubblie> I do need to get better at vulkan
[02:43:53] <FromDiscord> <Bubblie> Its verbose as shit right
[02:43:54] <FromDiscord> <Bubblie> But
[02:44:00] <FromDiscord> <Bubblie> It has a lot of stuff to compensate for it
[02:44:14] <FromDiscord> <Elegantbeef> My understanding is you can use macros/templates to really make it easier to use
[02:44:20] <FromDiscord> <Bubblie> Yeah
[02:44:23] <FromDiscord> <Elegantbeef> But i've not used vulkan so no clue how true that is
[02:44:55] <FromDiscord> <Bubblie> Im gonna have to read the vulkan c++ tutorial again and convert it to code I can use in nim
[02:45:31] <FromDiscord> <Bubblie> Might not be too hard
[02:45:36] <FromDiscord> <Bubblie> I say that now
[02:45:47] <FromDiscord> <Bubblie> To help others ill make it a github repo
[02:45:58] <FromDiscord> <Elegantbeef> Eh the Nim code will be nicer i'm certain!
[02:46:09] <FromDiscord> <Elegantbeef> Port a tutorial to Nim and document it 😛
[02:46:44] <FromDiscord> <Elegantbeef> Anything you dont know you can then replace with "I asked some fucker on the real time chat and he said '...'"
[02:47:03] <FromDiscord> <Bubblie> LOL
[02:47:41] <FromDiscord> <Bubblie> I think the problem is in how I write the nim code since im reading a tutorial thats C++
[02:48:08] <FromDiscord> <Elegantbeef> You write it the same way then ask someone that knows Nim to suggest how to make it idiomatic is one way
[02:48:36] <FromDiscord> <Bubblie> Yeah
[02:48:59] <FromDiscord> <Elegantbeef> Or just write it idiomatically to start with
[02:49:19] <FromDiscord> <Bubblie> I mean yall can review it once i finish it 😄
[02:49:25] <FromDiscord> <Bubblie> If you want
[02:49:27] <FromDiscord> <Bubblie> Of course
[02:49:38] <FromDiscord> <Bubblie> Ill post the github when its done
[02:49:45] <FromDiscord> <Bubblie> So people can make prs
[02:50:16] <FromDiscord> <Shinyzenith> Screenshot\_20220320-044920\_DuckDuckGo.jpg https://media.discordapp.net/attachments/371759389889003532/954882028103426058/Screenshot_20220320-044920_DuckDuckGo.jpg
[02:50:18] <FromDiscord> <Shinyzenith> Before i leave
[02:50:31] <FromDiscord> <Shinyzenith> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: can you explain the reasoning for this?
[02:50:33] <FromDiscord> <Elegantbeef> `var` is a mutable reference
[02:50:47] <FromDiscord> <Shinyzenith> Why do we need a mutable reference here
[02:50:56] <FromDiscord> <Shinyzenith> I didn't see it in the header
[02:51:01] <FromDiscord> <Elegantbeef> Cause `wl_listener` is small enough it's passed by copy
[02:51:20] <FromDiscord> <Shinyzenith> Huh I see
[02:51:31] <FromDiscord> <Shinyzenith> Is there anyway to check for this condition?
[02:51:39] <FromDiscord> <Elegantbeef> Nim has an optimization that anything smaller than 3floats is passed by copy,
[02:51:58] <FromDiscord> <Shinyzenith> I see↵And what if instead of var I used ptr?
[02:52:06] <FromDiscord> <Shinyzenith> Would that be a possible fix too?
[02:52:09] <FromDiscord> <Elegantbeef> you've done nothing to abstract it
[02:52:17] <FromDiscord> <Elegantbeef> It'd fix it but you've done nothing to abstract the function
[02:52:30] <FromDiscord> <Shinyzenith> I see
[02:52:39] <FromDiscord> <Elegantbeef> You could make it a template
[02:52:44] <FromDiscord> <Elegantbeef> then drop the `var`
[02:53:06] <FromDiscord> <Shinyzenith> I honestly don't understand templates completely just yet
[02:53:10] <FromDiscord> <Elegantbeef> Templates are code subsitution
[02:53:11] <FromDiscord> <Elegantbeef> That's it
[02:53:14] <FromDiscord> <Shinyzenith> So a macro?
[02:53:18] <FromDiscord> <Elegantbeef> No
[02:53:21] <FromDiscord> <Elegantbeef> Macros are introspective
[02:53:42] <FromDiscord> <Elegantbeef> templates just take the arguments and paste them every place they appear inside the body
[02:54:09] <FromDiscord> <Elegantbeef> every is bolded cause it's every place, they do not take any semantics into account on the pasting
[02:54:22] <FromDiscord> <Shinyzenith> I don't get how that's different from a proc
[02:54:36] <FromDiscord> <Shinyzenith> If I take a as a param
[02:54:41] <FromDiscord> <Shinyzenith> a will be used everywhere I call 8t
[02:54:42] <FromDiscord> <Elegantbeef> templates are expanded at compile time
[02:54:47] <FromDiscord> <Shinyzenith> Oh I see
[02:55:28] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SUr
[02:55:40] <FromDiscord> <Elegantbeef> So they're like C macros, but they're strongly typed
[02:55:56] <FromDiscord> <Elegantbeef> you cannot do `doThing"hello"`
[02:55:56] <FromDiscord> <Shinyzenith> Makes sense now, got it.
[02:56:19] <FromDiscord> <Shinyzenith> Ik I'm asking a lot of questions ahah but would you mind explaining one last thing?
[02:56:36] <FromDiscord> <Elegantbeef> That's kinda what i do here
[02:56:37] <FromDiscord> <Elegantbeef> Fix Nim bugs, write shitty code and answer questions
[02:56:51] <FromDiscord> <Shinyzenith> 🤣
[02:57:07] <FromDiscord> <Bubblie> I love this community
[02:57:09] <FromDiscord> <Shinyzenith> Well then\: can you explain the fieldparentptr template you made today ?
[02:57:21] <FromDiscord> <Elegantbeef> What's to be explained
[02:57:44] <FromDiscord> <Shinyzenith> I don't completely understand how it works.↵I'll take a ss 1 sex
[02:57:47] <FromDiscord> <Shinyzenith> Sex
[02:57:48] <FromDiscord> <Shinyzenith> Sec
[02:57:49] <FromDiscord> <Shinyzenith> My Gos
[02:57:50] <FromDiscord> <Bubblie> LMAO
[02:58:28] <FromDiscord> <Elegantbeef> `fieldParentPtr(HerbServer,new_output, listener)` is turned into `cast[ptr HerbServer](cast[int](listener) - offsetOf(HerbServer, new_output))`
[02:58:54] <FromDiscord> <Shinyzenith> Screenshot\_20220320-045831\_DuckDuckGo.jpg https://media.discordapp.net/attachments/371759389889003532/954884198869663744/Screenshot_20220320-045831_DuckDuckGo.jpg
[02:58:59] <FromDiscord> <Shinyzenith> This snippet
[02:59:14] <FromDiscord> <Bubblie> Question, if a variable is assigned based on a pointer, must I use a pointer in nim to access it?
[02:59:16] <FromDiscord> <Elegantbeef> What dont you understand?
[02:59:17] <FromDiscord> <Shinyzenith> Why turn it to int and then back to pointer of t
[02:59:26] <FromDiscord> <Bubblie> (edit) "pointer," => "pointer in the c/c++ code,"
[02:59:28] <FromDiscord> <Elegantbeef> Cause Nim doesnt have built in pointer atithmetic
[02:59:48] <FromDiscord> <Bubblie> Shouldnt that be a thing they could add?
[03:00:03] <FromDiscord> <Elegantbeef> A lot of Nim is done in userspace so yes
[03:00:03] <FromDiscord> <Shinyzenith> So what does that line achieve
[03:00:07] <FromDiscord> <Elegantbeef> I dont like pointer arithmetic
[03:00:16] <FromDiscord> <Shinyzenith> Same
[03:00:18] <FromDiscord> <Elegantbeef> Say you have pointer 10
[03:00:20] <FromDiscord> <Bubblie> Me neither
[03:00:29] <FromDiscord> <Bubblie> But it may be beneficial in nim maybe
[03:00:34] <FromDiscord> <Elegantbeef> that will offset  that 10 by the field offset of `field`
[03:00:39] <FromDiscord> <Elegantbeef> so say that offset is 5
[03:00:49] <FromDiscord> <Elegantbeef> we go back 5 bytes then convert that to a pointer of the base type
[03:00:50] <FromDiscord> <Bubblie> In reply to @Shinyzenith "Screenshot\_20220320-045831\_DuckDuckGo.jpg": Because this kind of looks messy
[03:00:58] <FromDiscord> <Elegantbeef> Sure but that's not how you'd do it
[03:00:59] <FromDiscord> <Shinyzenith> Ahh
[03:01:04] <FromDiscord> <Shinyzenith> Got it
[03:01:10] <FromDiscord> <Bubblie> In reply to @Elegantbeef "Sure but that's not": Oh
[03:01:14] <FromDiscord> <Bubblie> So there is a different way
[03:01:20] <FromDiscord> <Elegantbeef> Normal Nim doesnt really use pointers only low level does
[03:01:33] <FromDiscord> <Elegantbeef> If you want to use ptr math you can do https://github.com/kaushalmodi/ptr_math
[03:01:41] <FromDiscord> <Bubblie> 👀
[03:01:46] <FromDiscord> <Elegantbeef> I personally hate it
[03:01:48] <FromDiscord> <abdu> sent a code paste, see https://play.nim-lang.org/#ix=3SUt
[03:01:59] <FromDiscord> <Bubblie> I get that
[03:02:04] <FromDiscord> <Elegantbeef> But like i said Nim is a heavily extensible language which can mostly be done in userspace
[03:02:20] <FromDiscord> <Elegantbeef> There is no reason for the stdlib to have ptr math imo
[03:02:58] <FromDiscord> <Shinyzenith> So basically ↵Turn t to int -\> get offset between field and t -\> walk back those bytes and then convert back to base type pointer
[03:03:01] <FromDiscord> <Elegantbeef> Hell reverse indexing is 100% user space so if you wanted to do `3` for backwards index you coulld
[03:03:04] <FromDiscord> <Elegantbeef> Yep
[03:03:06] <FromDiscord> <Elegantbeef> You've got it
[03:03:15] <FromDiscord> <Shinyzenith> Thanks!!
[03:03:15] <FromDiscord> <abdu> How do we have a function static variable, just like in C function static variable ?
[03:03:21] <FromDiscord> <Elegantbeef> You have the pointer to the field and want the pointer to the object
[03:03:33] <FromDiscord> <Elegantbeef> `var myVar {.global.} = defaultValue`
[03:03:45] <FromDiscord> <Elegantbeef> It's not a `static` but it's a global state just like `static`
[03:04:53] <FromDiscord> <Elegantbeef> Generally buublie you can do `cast[ptr UncheckedArray[T]](myPointer)` then just treat it liike an array
[03:05:38] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SUv
[03:06:01] <FromDiscord> <Elegantbeef> Maybe with a proper cast
[03:06:18] <FromDiscord> <Elegantbeef> But eitherway that's how you generally get around pointer arithmetic in a cleaner way
[03:06:56] <FromDiscord> <Elegantbeef> But for Nim native types we also have `openArray` which is a slice
[03:08:39] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SUw
[03:50:51] *** Quits: lungaro (~sig@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Read error: Connection reset by peer)
[04:51:39] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[04:55:56] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[05:02:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:11:18] <FromDiscord> <Alea> when doing ``for index, item in X`` are the index item keywords, or can they be anything?
[05:11:33] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3SUU
[05:11:46] <FromDiscord> <ajusa> In reply to @Alea "when doing ``for index,": they can be anything
[05:12:10] <FromDiscord> <ynfle> Is there a way to access the folder that was originally compiled from when using `nim r`?
[05:12:58] <FromDiscord> <Elegantbeef> `getCurrentDir`?
[05:13:09] <FromDiscord> <Elegantbeef> The source dir isnt apart of the binary
[05:13:42] <FromDiscord> <Elegantbeef> You could make `items: ref Scheme` but yea need atleast a reference↵(@ajusa)
[05:14:14] <FromDiscord> <ajusa> Gotcha, thanks for confirming! trying to make (yet another) open API generator
[05:14:40] <FromDiscord> <ajusa> in my defense disruptek's is for openapi 2 (and requires conversion to JSON), and the other one generates less than idiomatic Nim imo
[05:14:45] <FromDiscord> <Alea> In reply to @ajusa "they can be anything": will it always be index first then item?
[05:15:14] <FromDiscord> <ajusa> In reply to @Alea "will it always be": yes, as far as I am aware. eg, `for i, x in seq`
[05:16:34] <FromDiscord> <ynfle> In reply to @Elegantbeef "`getCurrentDir`?": That worked thanks
[05:17:03] <FromDiscord> <Elegantbeef> Yes the left hand of `in` with a for loop are for vars and can be any valid identifier
[05:17:50] <FromDiscord> <ajusa> any pretty printing libraries that work with table? treeform's seems to print out the internal structure for a table
[05:19:56] <FromDiscord> <ajusa> huh, I swear it was printing out a bunch of stuff for a table, but it isn't anymore... well treeform's print library is excellent
[05:24:50] <FromDiscord> <Bubblie> Does nim have tools for strings regarding counting the number of chars and spaces?
[05:25:23] <FromDiscord> <Elegantbeef> Unicode aware or only ascii?
[05:25:45] <FromDiscord> <Bubblie> Either
[05:26:26] <FromDiscord> <Elegantbeef> `import std/strutils; myString.count({'A'..'Z', 'a'..'z'})`
[05:26:39] <FromDiscord> <Bubblie> Oooooo
[05:26:43] <FromDiscord> <Elegantbeef> count takes a `set[char]` so you can count whatever characters you want easily
[05:26:53] <FromDiscord> <Bubblie> Awesome
[05:27:01] <FromDiscord> <Elegantbeef> Strutils also defines a few sets you can use
[05:27:08] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/strutils.html#10
[05:36:59] <FromDiscord> <Bubblie> What does assert do in nim again exactly?
[05:37:11] <FromDiscord> <Bubblie> Checks for true and false right?
[05:37:14] <FromDiscord> <Elegantbeef> it's a runtime check that only happens in debug code
[05:37:29] <FromDiscord> <Bubblie> But why not use an if statement
[05:37:33] <FromDiscord> <Elegantbeef> Yes if the right hand is false it errors
[05:37:45] <FromDiscord> <Elegantbeef> Cause it's meant for ensuring bad things dont happen
[05:38:07] <FromDiscord> <Elegantbeef> You have your safety in debug but then in release you dont need it so it removes the expensive checks
[05:46:04] <FromDiscord> <gibson> Is there a recommended way to import stuff in Nim's system/? For example, system/dyncalls. I'm trying to get access to all the excellent x-platform dynamic lib handling code already there. Currently, I'm copying/pasting pieces into my own code.
[05:46:31] <FromDiscord> <ynfle> It's automatically imported
[05:46:32] <FromDiscord> <Elegantbeef> `import system/dyncalls`
[05:48:18] <FromDiscord> <ynfle> Beef, nothing is exported from there
[05:48:26] <FromDiscord> <ynfle> As far as I can tell
[05:48:29] <FromDiscord> <Elegantbeef> Then include it
[05:49:01] <FromDiscord> <ynfle> That's what system.nim does
[05:50:00] <FromDiscord> <Elegantbeef> That doesnt change anything
[05:51:49] <FromDiscord> <gibson> I want to get access to those "private" declarations in dyncalls via `import system/dyncalls {.all.}` but even a standard `import system/dyncalls`  complains about other missing definitions that are in `pure/dynlib` but I'm already importing `dynlib` so I don't know what it's complaining about. So thus why I'm trying to figure out how to import stuff because it seems non-obvious.
[05:52:46] <FromDiscord> <gibson> Specifically, importing dyncalls wants `LibHandle` to be defined, which is in `pure/dynlib`.
[05:53:51] <FromDiscord> <Elegantbeef> Yea i dont know what to say it's written in such a way it expects to be inside system
[05:56:19] <FromDiscord> <gibson> Rats. I think the answer is I need to either copy/write that code myself as I'm doing, or make a PR for dynlib and add the ability to use the other flags it's curiously excluding.
[05:56:38] <FromDiscord> <gibson> Thanks.
[05:57:06] <FromDiscord> <Bubblie> How do I use nim in html, would I have to compile nim to js first
[05:57:09] <FromDiscord> <Bubblie> How would it work
[05:58:06] <FromDiscord> <Bubblie> I am thinking whether I should use nim for something web based
[05:58:11] <FromDiscord> <Bubblie> Compared to js or ts
[05:58:19] <FromDiscord> <Bubblie> For front end
[05:58:34] <FromDiscord> <Elegantbeef> `nim js` then just use the js file
[05:59:02] <FromDiscord> <Bubblie> Oh
[05:59:08] <FromDiscord> <Bubblie> Thats actually very neat
[05:59:24] <FromDiscord> <Bubblie> Also I heard of karax
[05:59:28] <FromDiscord> <Bubblie> Seems cool as well
[06:01:20] <FromDiscord> <Bubblie> I kinda hate js so nim may come in handy
[06:01:54] <FromDiscord> <Bubblie> Or I might use wasm
[06:10:23] <FromDiscord> <gibson> Found it! It turns out you can `import system {.all.}` This does what I need, but I should still make a PR for dynlib...
[06:12:37] <FromDiscord> <Elegantbeef> Perhaps you should
[06:45:20] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[06:49:19] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[07:01:53] <FromDiscord> <Bubblie> When im using c++ library with pointers, do I need to use nim pointers to use those variables?
[07:02:33] <FromDiscord> <Bubblie> (edit) "library" => "header"
[07:04:29] <FromDiscord> <Bubblie> Also to use a header would I also do .compile: “hello.h”
[07:05:03] <FromDiscord> <Elegantbeef> That'd just compile the header it doesnt expose any code to you
[07:05:34] <FromDiscord> <Elegantbeef> You'd need to import it somehow be it manually, c2nim, futhark what have you
[07:06:39] <FromDiscord> <Bubblie> Is there anything on manually importing
[07:07:04] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#foreign-function-interface-importc-pragma
[07:08:03] <FromDiscord> <Elegantbeef> If it's something big c2nim and futhark are good choices, futhark is capable of easily importing entire C libraries verbatim into Nim(much like Zig)
[07:08:23] <FromDiscord> <Bubblie> 👀
[07:11:39] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[07:12:02] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:12:02] <FromDiscord> <Bubblie> For nim vulkan, it seems to just be statically linking against the dll for vulkan
[07:12:14] <FromDiscord> <Bubblie> Or dylib
[07:12:22] <FromDiscord> <Bubblie> Or of course so for linux
[07:15:25] <ehmry> Bubblie: with C/C++ pointers I use `type Foo {.importc: "Foo".} = ptr object …`, and if the pointers are to an opaque type, then I use a `type Foo = distinct pointer`
[07:16:06] <ehmry> `distinct pointer` is pretty useful
[07:16:20] <FromDiscord> <Bubblie> Nice
[07:25:28] <FromDiscord> <Bubblie> For those who use nim opengl, do you use glfw nim bindings for it?
[07:26:05] <FromDiscord> <Elegantbeef> I use sdl2
[07:27:08] <FromDiscord> <Elegantbeef> Ehmry i still need to get `type Foo {.importc: "Foo".} = distinct pointer` to work, though that's a more elaborate `type Foo {.importc: "Foo", byref.} = object`
[07:27:46] <FromDiscord> <Elegantbeef> Cant remember what was the issue with it, cant remember why `distinct pointer` was invalid for `importc`
[07:28:10] <FromDiscord> <Elegantbeef> It's an issue with distinct, which means i'm interested in fixing it, damn my affinity for distinct
[07:28:24] <FromDiscord> <Bubblie> In reply to @Elegantbeef "I use sdl2": Oh alright, I was wondering if there were any glfw bindings for nim as this would make dealing with vulkan a lot easier
[07:28:35] <FromDiscord> <Elegantbeef> The are glfw bindings of course
[07:28:39] <ehmry> I get confused by `byref`, because I'd rather not think about it
[07:28:42] <FromDiscord> <Elegantbeef> Nimgl has them
[07:28:52] <nrds> <06Prestige99> beef how's that project going btw?
[07:28:59] <FromDiscord> <Elegantbeef> It's identical to what you wrote
[07:29:04] <FromDiscord> <Elegantbeef> What project?
[07:29:10] <FromDiscord> <Elegantbeef> Hoppy bird?
[07:29:13] <nrds> <06Prestige99> Your game
[07:29:31] <FromDiscord> <Elegantbeef> Havent touched it much this is where i'm at
[07:29:37] <FromDiscord> <Elegantbeef> drop-2022-03-15\_16.45.01.mp4 [drop-2022-03-15_16.45.01.mp4](https://t2bot.io/_matrix/media/r0/download/matrix.org/GzSaSWMsexExosUsxlNlMAUf)
[07:29:59] <FromDiscord> <Bubblie> In reply to @Elegantbeef "Nimgl has them": oh so nimgl has them done already for me to use?
[07:29:59] <FromDiscord> <Elegantbeef> I was going to work on it, but some asshole mentioned a nimsuggest bug
[07:30:25] <nrds> <06Prestige99> damn, what a dick :P
[07:30:37] <FromDiscord> <Elegantbeef> https://github.com/nimgl/nimgl/tree/309d6ed8164ad184ed5bbb171c9f3d9d1c11ff81/src/nimgl
[07:30:40] <nrds> <06Prestige99> just blame it on whoever introduced the bug ;)
[07:30:52] <FromDiscord> <Bubblie> does nimgl use nim glfw bindings already made by someone else already they made their own
[07:30:53] <FromDiscord> <Elegantbeef> The fix was simple if you didnt see
[07:31:05] <nrds> <06Prestige99> oh did you find a fix?
[07:31:18] <nrds> <06Prestige99> https://github.com/nim-lang/Nim/pull/19624 nice thanks
[07:31:18] <FromDiscord> <Elegantbeef> The source is available bubblie you can use your eyeholes and look
[07:31:33] <FromDiscord> <Elegantbeef> Well it's a 'fix' it works around the issue that has appeared
[07:31:55] <FromDiscord> <Elegantbeef> The issue being `roota.base` points to a different type than `rootf.base` so they're not `==` but they're `sameType`
[07:31:57] <FromDiscord> <Bubblie> In reply to @Elegantbeef "The source is available": LOL
[07:32:10] <nrds> <06Prestige99> Interesting
[07:32:20] <FromDiscord> <Elegantbeef> It's probably related to the fact nimsuggest does multiple compilations
[07:32:29] <FromDiscord> <Bubblie> yeah okay they use their own
[07:33:06] <FromDiscord> <Elegantbeef> If you think about it, nimsuggest compiles it once, it errors it reports the error then it compiles it again, as such the types are different. As to why exporting causes this i dont have a scoobie
[07:33:28] <FromDiscord> <Elegantbeef> The fix works and i think is more "correct"
[07:33:54] <FromDiscord> <Elegantbeef> we should not care if the types have the same pointer, we should only care if they're the same types
[07:34:33] <FromDiscord> <Elegantbeef> end of whatever the above is
[07:35:14] <nrds> <06Prestige99> git blame and yell at someone
[07:35:34] <FromDiscord> <Elegantbeef> I dont know who caused it so i might aswell blame myself
[07:36:42] <nrds> <06Prestige99> That's what `git blame` is for :P
[07:36:57] <FromDiscord> <Bubblie> time to spend hours making a fucking triangle lets go
[07:37:11] <FromDiscord> <Elegantbeef> Something between 1.4.8 and 1.6.0 caused this to appear and i have code there so why not me
[07:37:25] <FromDiscord> <Bubblie> what happened exactly if I may ask?
[07:37:28] <FromDiscord> <Elegantbeef> How does gitblame help, i dont even know what caused the issue
[07:37:37] <FromDiscord> <Bubblie> In reply to @Elegantbeef "drop-2022-03-15\_16.45.01.mp4 [drop-2022-03-15_16.4": also this game looks great
[07:37:58] <FromDiscord> <Elegantbeef> something causes a bug with nimsuggest on exported generic procedures
[07:37:59] <nrds> <06Prestige99> Seems like that comparison is the issue
[07:38:17] <FromDiscord> <Elegantbeef> That comparison isnt new though
[07:38:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/wW5
[07:38:45] <nrds> <06Prestige99> Well, damn
[07:38:52] <nrds> <11sorcerer99> yall should blame prestige, thats what i would
[07:38:59] <nrds> <06Prestige99> Heh
[07:39:03] <FromDiscord> <Elegantbeef> i'd complain it couldnt find `doThing`, remove the export marker or explicitly call the proc with `[string]` it goes away
[07:39:07] <FromDiscord> <Elegantbeef> it'd
[07:39:10] <nrds> <11sorcerer99> ;P
[07:39:10] <nrds> <06Prestige99> I wonder if the other nimsuggest bug with base methods is unrelated...
[07:39:22] <FromDiscord> <Elegantbeef> It's possibly related
[07:39:35] <FromDiscord> <Elegantbeef> Got a link?
[07:39:48] <FromDiscord> <Elegantbeef> It better be an actual min repro this time
[07:39:51] <nrds> <06Prestige99> I'm too tired tonight though, have brats cookin. Unless you want to open my existing project
[07:39:51] <FromDiscord> <Elegantbeef> If not i'll blame you
[07:39:55] <FromDiscord> <Bubblie> so this is a bug in nim right?
[07:39:58] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[07:40:09] <FromDiscord> <Elegantbeef> It's a bug in nimsuggest which by extension means nim
[07:40:20] <FromDiscord> <Bubblie> nimsuggest is an ide for nim right
[07:40:21] <FromDiscord> <Elegantbeef> Since nimsuggest is built on Nim
[07:40:38] <FromDiscord> <Bubblie> (edit) "is an" => "are" | "areide ... for" 03added "tools"
[07:40:48] <FromDiscord> <Elegantbeef> Nimsuggest is API for interacting with the compiler for ide tools
[07:40:48] <FromDiscord> <Elegantbeef> Yes
[07:41:11] <FromDiscord> <Elegantbeef> It basically uses the compiler as a library, though the compiler has some built in support
[07:41:28] <FromDiscord> <Elegantbeef> Like there are `when defined(nimsuggest)`
[07:41:40] <FromDiscord> <Bubblie> ah okay that's cool
[07:41:53] <FromDiscord> <Bubblie> is this a bug I should be concerned about?
[07:42:31] <FromDiscord> <Bubblie> if I were to use generics
[07:43:47] <FromDiscord> <Elegantbeef> if you were to use generics...?
[07:44:31] <FromDiscord> <Bubblie> I phrased that wrong
[07:45:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:46:23] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3SVg
[07:46:30] <FromDiscord> <Elegantbeef> nimsuggest has a false error the compiler doesnt
[07:47:07] <FromDiscord> <Bubblie> oh, so its just giving an error but the compiler isn't so it would still go through just giving you that false error in the process if you are using nimsuggest
[07:47:59] <FromDiscord> <Elegantbeef> Yes or any tooling built using nimsuggest(almost all)
[07:48:25] <FromDiscord> <Bubblie> got it
[07:49:08] <FromDiscord> <Elegantbeef> It'd be a pretty shitty state to have the above not compile on a language tagged 1.x.x
[07:50:25] <FromDiscord> <Elegantbeef> Even Go's generics can handle the above 😜
[07:51:39] <FromDiscord> <Bubblie> Oh god
[07:51:40] <FromDiscord> <Bubblie> not go
[07:51:41] <FromDiscord> <Elegantbeef> If you do hit a compiler bug send it my way, if it's small enough and in sem i'll look into fixing it, they're fun to fix!
[07:51:53] <FromDiscord> <Bubblie> Alright, definitely will
[07:52:10] <FromDiscord> <Bubblie> but sometimes I am not sure if it is my idiotic code or the compiler, usually its my bad code
[07:52:15] <FromDiscord> <Elegantbeef> I really should start recording/streaming it for posterity
[07:52:40] <FromDiscord> <Bubblie> I think the mere mention of the go language is enough to send me spiraling,
[07:52:44] <FromDiscord> <Bubblie> (edit) "spiraling," => "spiraling"
[07:52:56] <FromDiscord> <Bubblie> out of all the languages that exist, I truly hate go the most
[07:53:34] <FromDiscord> <Bubblie> (edit) "usually its" => "almost always it's"
[07:54:51] <FromDiscord> <Bubblie> that gopher is evil
[07:55:50] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/954958922605789214/image.png
[07:55:54] <FromDiscord> <Elegantbeef> Something is more evil
[07:56:35] <FromDiscord> <Bubblie> I didn't know nim had an animal mascot
[07:56:40] <FromDiscord> <Bubblie> I thought it was just the crown
[07:56:51] <FromDiscord> <Elegantbeef> It doesnt
[07:56:57] <FromDiscord> <Elegantbeef> That was an unofficial mascot
[07:57:07] <FromDiscord> <Bubblie> ah okay
[07:57:37] <FromDiscord> <Bubblie> oh shit nimgl has imgui bindings??
[07:57:39] <FromDiscord> <Bubblie> lets go
[07:58:59] <FromDiscord> <Bubblie> also does nimGL have support for the latest vulkan
[07:59:02] <FromDiscord> <Bubblie> that being 1.3 I think
[07:59:07] <FromDiscord> <Bubblie> cant find out if it does
[07:59:24] <FromDiscord> <Elegantbeef> Fuck if i know
[07:59:26] <FromDiscord> <Elegantbeef> I dont use nimgl
[07:59:40] <FromDiscord> <Bubblie> what do you use?
[07:59:53] <FromDiscord> <Bubblie> I thought you used nimgl this entire time LMAO
[08:00:04] <FromDiscord> <Elegantbeef> Dont recall atm
[08:00:11] <FromDiscord> <Bubblie> oh alright
[08:00:29] <FromDiscord> <Elegantbeef> I just use the `opengl` package it turns out
[08:00:36] <FromDiscord> <Elegantbeef> So https://github.com/nim-lang/opengl
[08:01:20] <FromDiscord> <Bubblie> oh thats the official wrapper?
[08:02:56] <FromDiscord> <Bubblie> cool
[08:11:14] <FromDiscord> <sheldon> nimble install error↵tables.nim(233)          raiseKeyError↵Error: unhandled exception: key not found: url [KeyError]
[08:11:53] <FromDiscord> <Elegantbeef> What are you installing?
[08:26:21] <FromDiscord> <kiell> In reply to @Bubblie "that gopher is evil": why u hate the gopher man
[08:27:09] <FromDiscord> <Bubblie> I do not do well with Go
[08:27:26] <FromDiscord> <Bubblie> Go feels backwards in so many ways, I truly envy people who can get some joy out of it
[08:27:53] <FromDiscord> <Bubblie> if you can use Go and like it you are truly a different breed
[08:28:13] <FromDiscord> <kiell> i thought the error handling and stdlib were pretty neat
[08:28:39] <FromDiscord> <Bubblie> I don't want to be discouraging, if you like it please continue to use it
[08:28:40] <FromDiscord> <kiell> i stoppd using it as much though cause it felt like i was writing too much boilerplate code every time lol
[08:28:53] <FromDiscord> <kiell> oh na ur fine i was just curious
[08:31:13] <FromDiscord> <Bubblie> yeah I was typing out how in Go you have to write quite a lot of boilerplate at times, that too package management is absolute hell, function overloading as well is not a feature last time I remember, it just lacks a lot of fundamental and key parts a language should have
[08:33:03] <FromDiscord> <Bubblie> In reply to @kiell "oh na ur fine": ah okay, see I try not to be too negative about languages I dislike because I don't want to discourage others from using a language they enjoy I feel like thats the worst thing one can do, so I usually try to re assure that I don't want to discourage anyone from using a language they have grown to like.
[08:33:52] <FromDiscord> <Bubblie> I have many friends who enjoy JS, while I absolutely suffer using it, I also know someone who genuinely likes php which is like how but you know if they like it they like it
[08:33:52] <FromDiscord> <Elegantbeef> To late i've got my pitchfork and i'm picketing outsidie golang incorporated
[08:33:56] <FromDiscord> <Bubblie> LMAO
[08:34:04] <FromDiscord> <kiell> 💀
[08:38:21] <FromDiscord> <kiell> but yea im not a die-hard go fan i just started learning it for fun after coming from python. it was nice to try something new with static typing that looked clean as python
[08:39:02] <FromDiscord> <kiell> now that i found nim i wish i learned it first lol it feels a lot better
[08:39:43] <FromDiscord> <Bubblie> LOL
[08:39:56] <FromDiscord> <Bubblie> I also wish I found nim sooner
[08:40:33] <FromDiscord> <Bubblie> Because, I was only aware of C++ and Rust, I never was aware nim existed as an alternative in a way to these two
[08:40:52] <FromDiscord> <Bubblie> C++ is annoying, Rust is just hard for me to read
[08:40:57] <FromDiscord> <Bubblie> So it was a struggle to use either
[08:41:53] <FromDiscord> <Bubblie> Then I just did some diving into more alternatives, I stumbled across crystal which is pretty much low level or native ruby
[08:42:00] <FromDiscord> <Bubblie> And was like “hmmm okay”
[08:42:16] <FromDiscord> <Bubblie> I do think crystal is nice
[08:42:32] <FromDiscord> <Bubblie> But then I found nim and was like 👀
[08:43:23] <FromDiscord> <Bubblie> I also looked at zig, what immediately made me not use zig is because I couldnt have empty variables
[08:43:50] <FromDiscord> <Bubblie> Like, I cant have an un used var id need to set it equal to undefined
[08:43:54] <FromDiscord> <Bubblie> Which is incredibly stupid
[08:44:15] <FromDiscord> <Elegantbeef> zero init or default values is how to be
[08:44:35] <FromDiscord> <Elegantbeef> User defined defaults will be nice, especially for subrange types
[08:44:42] <FromDiscord> <Bubblie> Yes
[08:45:08] <FromDiscord> <kiell> i never heard of crystal or zig they look interesting 🤔
[08:45:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SVm
[08:45:36] <FromDiscord> <Elegantbeef> If you like Nim you'll probably like Odin more than Zig due to odin being pascal inspired so overlaps with Nim a bit
[08:46:12] <FromDiscord> <Bubblie> I never heard of odin
[08:46:14] <FromDiscord> <Elegantbeef> Nice bitsets, distinct types
[08:46:41] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3SVn
[08:46:42] <FromDiscord> <Bubblie> With the ..
[08:47:12] <FromDiscord> <kiell> i think so thats a slice right
[08:47:14] <FromDiscord> <Elegantbeef> It's a sub range type it limits the acceptable values to the range
[08:47:28] <FromDiscord> <kiell> oh i still have go brain lol
[08:47:38] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SVo
[08:47:54] <FromDiscord> <Elegantbeef> Nim's slices are called openArrays and they cannot presently be held in a variable
[08:50:49] <FromDiscord> <Elegantbeef> Subrange types work for all numbers so you can use them with chars, enums, integers, floats. Quite lovely actually
[08:51:05] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3SVr
[08:51:32] <FromDiscord> <Elegantbeef> So if i see anyone of you write `# X can only be in range 0 and 1` instead of doing `myFloat: 0f..1f` i'm coming after you
[08:51:47] <FromDiscord> <Elegantbeef> Yea sub range types are checked for a given range
[08:52:08] <FromDiscord> <Bubblie> sent a code paste, see https://play.nim-lang.org/#ix=3SVs
[08:52:10] <FromDiscord> <Elegantbeef> Yes
[08:52:26] <FromDiscord> <Elegantbeef> Cause it should be defaulted to a valid value or error statically that it's un assigned
[08:52:52] <FromDiscord> <Elegantbeef> `a` should not be `== 0` but is presently due to zero initing in Nim
[08:54:20] <FromDiscord> <Bubblie> So, nim automatically sets it to 0  even though you defined the subrange?
[08:54:39] <FromDiscord> <Elegantbeef> Nim 0's all memory with very little exception
[08:55:31] <FromDiscord> <Bubblie> I see
[08:55:36] <FromDiscord> <Elegantbeef> Which is why i mentioned a user defined default feature
[08:55:46] <FromDiscord> <Elegantbeef> It'll make things like this much better for everyone
[08:55:50] <FromDiscord> <Bubblie> How would it look like in nim?
[08:55:54] <FromDiscord> <Bubblie> In reply to @Elegantbeef "It'll make things like": Also definitely
[08:57:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/fMc
[08:58:30] <FromDiscord> <Elegantbeef> Though that doesnt work with non objects
[08:58:41] <FromDiscord> <Bubblie> Yeah
[08:58:44] <FromDiscord> <Bubblie> Was just about to say
[08:58:59] <FromDiscord> <Elegantbeef> There's an rfc for it somewhere
[08:59:20] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/RFCs/issues/252
[09:01:20] <FromDiscord> <Bubblie> So im assuming this will be added at some point, hopefully soon
[09:01:22] <FromDiscord> <Bubblie> Right?
[09:01:34] <FromDiscord> <Elegantbeef> It's an accepted RFC
[09:02:12] <FromDiscord> <Bubblie> Ah cool
[09:17:13] <FromDiscord> <Bubblie> Is there a work around for possibly having a default?
[09:17:43] <FromDiscord> <Elegantbeef> What do you mean?
[09:19:42] <FromDiscord> <Bubblie> I phrased that badly again, so to work around the fact that user defined defaults havent been added yet, we would just need to check for 0 right
[09:19:59] <FromDiscord> <Elegantbeef> You initialize manually
[09:20:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SVx
[09:20:20] <FromDiscord> <Elegantbeef> Or `var a = MyType.init()`
[09:20:23] <FromDiscord> <Bubblie> Oh, okay that makes more sense
[09:20:35] <FromDiscord> <xflywind> In reply to @Bubblie "So im assuming this": It is planned for Nim 2.0.
[09:20:52] <FromDiscord> <Bubblie> Isnt nim on 1.6.4 though
[09:21:17] <FromDiscord> <Elegantbeef> Yes?
[09:21:29] <FromDiscord> <Bubblie> 2.0 would be a long time I would assume right
[09:21:46] <FromDiscord> <xflywind> In reply to @flywind "It is planned for": And https://github.com/nim-lang/Nim/pull/12378 is related.
[09:25:04] <FromDiscord> <Bubblie> Holy shit its 2 am and I still havent gotten the triangle working
[09:25:10] <FromDiscord> <Bubblie> Vulkan be like
[09:25:19] <FromDiscord> <Bubblie> Might as well sleep
[09:26:14] <FromDiscord> <Equinox> Damn I mean the Vulcan triangle is like a thousand lines of C++
[09:26:25] <FromDiscord> <Bubblie> yeah LMAOO
[09:27:11] <FromDiscord> <Bubblie> Nim makes shit way less verbose so its a gift, but reading this c++ code and also transfering it to nim code is a process, im also docing it
[09:27:19] <FromDiscord> <Bubblie> So its gonna take a bit
[09:27:40] <FromDiscord> <Bubblie> The reason the triangle render is so long is mostly due to how much it teaches you about vulkan
[09:28:02] <FromDiscord> <Bubblie> Its pretty much the fundamentals of how you will use it in your other renders, and it probably wont be to the same extent
[09:28:38] <FromDiscord> <Bubblie> Because, if you were to render something with that many lines per render it would be bat shit insane
[09:28:56] <FromDiscord> <Equinox> I’m sure most of it is just setting up the render pipeline so you only really have to write a lot of that stuff once
[09:29:30] <FromDiscord> <Bubblie> Pretty much
[09:30:01] <FromDiscord> <Bubblie> It is important to write it all out though because of course copying and pasting even the c++ code wont work
[09:30:28] <FromDiscord> <Bubblie> Also, for learning purposes its just better
[09:30:39] <FromDiscord> <Bubblie> Because you get a fundamental understanding of how it works
[09:30:39] <FromDiscord> <Equinox> In reply to @Bubblie "Also, for learning purposes": Yeah ofc
[09:31:00] <FromDiscord> <Equinox> I’ve been learning graphics programming with rust
[09:31:04] <FromDiscord> <Equinox> And wgpu
[09:39:04] <FromDiscord> <Bubblie> I have friends who use rust a lot
[09:39:11] <FromDiscord> <Bubblie> One of them is also using wgpu
[09:39:23] <FromDiscord> <Bubblie> Its pretty cool
[10:07:22] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[10:10:43] <nrds> <06Prestige99> oh I didn't realize the pure pragma was basically disabled for enums, the docs still say "An enum type can be marked as pure. Then access of its fields always requires full qualification."
[10:10:48] <nrds> <06Prestige99> That's too bad
[10:11:10] <FromDiscord> <Elegantbeef> Overloadable enums are here now
[10:11:15] <FromDiscord> <Elegantbeef> And they're nicer
[10:11:25] <nrds> <06Prestige99> What's that?
[10:12:05] <FromDiscord> <Elegantbeef> Type inference enabled on enums
[10:12:24] <FromDiscord> <Elegantbeef> So ambiguity is the only time you need `EnumName`
[10:12:48] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/blob/06ff0e96249884f4ac6c49dadc96147be1c31097/tests/enum/toverloadable_enums.nim
[10:13:15] <nrds> <06Prestige99> ah
[10:13:27] <nrds> <06Prestige99> I just wanted to enforce the enum name prefix
[10:13:40] <FromDiscord> <Elegantbeef> Ah i hate you
[10:13:43] <nrds> <06Prestige99> wonder if I can just write my own pragma that does what .pure. used to do
[10:14:16] <FromDiscord> <Elegantbeef> Nope
[10:14:34] <nrds> <06Prestige99> no?
[10:15:23] <FromDiscord> <Elegantbeef> Something like the above is what you'd neeed
[10:15:25] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3SVE
[10:15:39] <FromDiscord> <Elegantbeef> Well how do you emit something that allows dot exprs from inside a typedef, you cant
[10:15:56] <FromDiscord> <Elegantbeef> I dont get the wanting to enforce prefix, always seems odd to me
[10:16:47] <nrds> <06Prestige99> Too bad it was removed as even an option
[10:17:08] <FromDiscord> <Elegantbeef> Use pure and write it as such
[10:17:14] <nrds> <06Prestige99> So before the pure pragma was just some compiler hoopla that I can't recreate without changing the compiler?
[10:17:32] <nrds> <06Prestige99> I mean I don't even need to add .pure. to do that, but I want to enforce it
[10:17:41] <FromDiscord> <Elegantbeef> You might be able to do it with a term rewriting macro
[10:18:02] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[10:19:04] <nrds> <06Prestige99> I know not of these things you speak
[10:20:03] <FromDiscord> <Elegantbeef> They're magic that uses pattern matching to replace Nim code, that are subject to be removed
[10:20:21] <nrds> <06Prestige99> well damn
[10:23:23] <nrds> <06Prestige99> maybe I'll have to build my own enum system with something like you mentioned :P
[10:25:10] <FromDiscord> <Elegantbeef> What are you doing anywho?
[10:26:45] <nrds> <06Prestige99> Just trying to use enums how I want to
[10:26:57] <FromDiscord> <Elegantbeef> Wrongly 😜
[10:28:01] <nrds> <06Prestige99> Subjective
[10:28:07] <nrds> <06Prestige99> But it's what I prefer
[10:29:25] <FromDiscord> <Elegantbeef> Well time to make an RFC
[10:29:31] <FromDiscord> <Elegantbeef> Just so i can downvote it 😛
[10:30:20] <FromDiscord> <Elegantbeef> The biggest issue I see is that it pollutes the entire API
[10:30:34] <nrds> <06Prestige99> How does it?
[10:30:40] <FromDiscord> <Elegantbeef> You enforce the enum everywhere to be accessed through a namespace, which many people dislike
[10:30:46] <NimEventer> New thread by RainbowAsteroids: Why doesn't echo have tag WriteIOEffect?, see https://forum.nim-lang.org/t/9024
[10:31:00] <FromDiscord> <Elegantbeef> So if you make a library and you used it you're making people that view that as tedious nonsense write tedious nonsense
[10:31:43] <FromDiscord> <Elegantbeef> It doesnt just touch your code, it touches all the code that depends on yours which is why I dont like the premise of adding it
[10:32:08] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[10:32:14] <nrds> <06Prestige99> I dislike the inverse just the same
[10:32:24] <FromDiscord> <Elegantbeef> But the inverse isnt the same
[10:32:35] <FromDiscord> <Elegantbeef> You still can write `Direction.left`
[10:32:41] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[10:32:46] <FromDiscord> <Elegantbeef> And if you forget to it's kinda proof that you dont strongly hold to your conviction
[10:33:30] <nrds> <06Prestige99> You want one thing and I want the opposite, is how the inverse is true
[10:33:56] <FromDiscord> <Elegantbeef> For it to make me happy it'd have to be a project setting that can be overridden on import
[10:33:59] <nrds> <06Prestige99> And it doesn't matter if I understand my code, I need it to be readable to others
[10:34:18] <FromDiscord> <Elegantbeef> I mean the inverse is demonstrably not true though
[10:34:20] <nrds> <06Prestige99> Like if I have a variable named `a` that doesn't help the reader much
[10:34:43] <FromDiscord> <Elegantbeef> Not enforcing namespace does not prevent you from using it
[10:34:51] <FromDiscord> <Elegantbeef> Enforcing namespaces prevents others from not using it
[10:35:00] <nrds> <06Prestige99> Having it being a toggleable option would be fine with me
[10:35:06] <nrds> <06Prestige99> But I want it enforceable in my projects
[10:35:28] <FromDiscord> <Elegantbeef> Well RFC it, though i doubt it'd be accepted
[10:35:42] <FromDiscord> <Elegantbeef> Nim programmers want less tedious enums not more tedious based off the overloadable enum response
[10:35:59] <nrds> <06Prestige99> Probably not, although I did see dom and pmunch wanting the feature back when it was discussed
[10:36:20] <FromDiscord> <Elegantbeef> I still dont know the best way to toggle it on import
[10:36:41] <FromDiscord> <Elegantbeef> Dont even know if there would be a nice way
[10:37:46] <nrds> <06Prestige99> If there were a `qualified` pragma and you could disable it with a flag that'd be nice, but idk anything about the compiler
[10:38:00] <FromDiscord> <Elegantbeef> Well the issue is that you cant do that both ways
[10:38:37] <nrds> <06Prestige99> Wdym?
[10:38:41] <FromDiscord> <Elegantbeef> You can always make qualified a disabled flag, but you cant enable it unless it's only for the code within a project. No clue if nim tracks that
[10:39:32] <nrds> <06Prestige99> Like it would be a problem if a dependency used it? Idk what your point is
[10:39:39] <FromDiscord> <Elegantbeef> Yes
[10:39:58] <FromDiscord> <Elegantbeef> If you import a module that uses unqualified but you're forcing qualified that's a compiler bug
[10:40:04] <FromDiscord> <Elegantbeef> Well error\: 😀
[10:40:15] <nrds> <06Prestige99> Ah I see what you mean
[10:40:22] <FromDiscord> <Elegantbeef> Dont know if Nim tracks project specific settings or even capable of it
[10:41:19] <FromDiscord> <Elegantbeef> Actually yea that gets hellish quickly
[10:41:57] <FromDiscord> <Elegantbeef> The same module is imported by two seperate files one that doesnt enforce it, but then one that enforces it
[10:42:39] <nrds> <06Prestige99> Wouldn't that just make it enforced?
[10:42:55] <FromDiscord> <Elegantbeef> Except the module was already sem'd by the first file
[10:43:23] <FromDiscord> <Elegantbeef> So now you have a sem'd module that you need to enforce that it's qualified, and Nim doesnt track enums as `a.b` it converts them into `b` in the compiler
[10:44:17] <FromDiscord> <Elegantbeef> Atleast i think that'd be a fun hell
[10:44:29] <FromDiscord> <Elegantbeef> You could always recompile that module with the enforced flag if they differed
[10:44:35] <FromDiscord> <Elegantbeef> Who doesnt love more complex compilation!
[10:45:55] <nrds> <06Prestige99> Or I can just write my own implementation of `enum` maybe
[10:46:08] <FromDiscord> <Elegantbeef> You dont even need your own implementation really
[10:46:34] <FromDiscord> <Elegantbeef> Make a enum then use exported `templates`  like i showed above and you're done
[10:47:04] <FromDiscord> <Elegantbeef> You need a macro of course, but that's not too bad
[10:47:06] <nrds> <06Prestige99> Hmm
[10:47:07] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[10:47:19] <FromDiscord> <Elegantbeef> was meaning to add enum support to micros, so this is a fine time to do it
[11:18:38] <FromDiscord> <Elegantbeef> prestige TIME! 😛
[11:18:48] <nrds> <06Prestige99> Eh?
[11:18:58] <FromDiscord> <Elegantbeef> This has shown me issues with my API https://github.com/beef331/micros/blob/master/tests/test1.nim#L238-L259
[11:19:08] <FromDiscord> <Elegantbeef> But i wrapped the basic part of enums
[11:19:38] <nrds> <06Prestige99> Nice!
[11:19:45] <FromDiscord> <Elegantbeef> Still have a lot to do for this library
[11:20:29] <FromDiscord> <Elegantbeef> Thought i was being smart with the identdef stuff i did but all it made me do was make it more complicated
[11:52:55] <FromDiscord> <Phil> motherducker, question into the round, does the compiler flag `--threads:on` generally not play nice with logging properly?
[11:53:21] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/logging.html#basic-usage-notes-when-using-multiple-threads
[11:53:50] <FromDiscord> <Phil> Shoooooot meeeeeeee
[11:58:23] <FromDiscord> <Elegantbeef> Dont read the docs they're only there to piss you off
[12:00:08] <FromDiscord> <Phil> In reply to @Elegantbeef "Dont read the docs": Look, I read through the docs, I just don't... keep all of their contents in my head or skim through parts of it...
[12:00:18] <FromDiscord> <Phil> (edit) "or" => "and"
[12:00:35] <FromDiscord> <Elegantbeef> Eh i was just joking no need to get defensive
[12:00:47] <FromDiscord> <Phil> Oh, sorry, that didn't translate well into text
[12:01:12] <FromDiscord> <Phil> Imagine the tone of someone being mildly embarassed and pulling up very weak defensive statements to at least give the appearance that they're defending their damaged honor.
[12:02:15] <FromDiscord> <Phil> I don't think there's an emoji that really expresses when you know you've been an idiot and put up a token defence
[12:02:36] <FromDiscord> <Elegantbeef> \:fuckwit\:
[12:02:37] <FromDiscord> <Elegantbeef> Hmmm nope there is none
[12:03:18] <FromDiscord> <Phil> Well, off to ask xflywind in prologue how to set the log level for all the threads
[12:03:25] <FromDiscord> <Phil> Since I think prologue is the one instantiating them
[12:03:36] <FromDiscord> <Elegantbeef> Have fun
[12:08:41] <FromDiscord> <tandy> can nimscript access non files in a nimble package?
[12:09:01] <FromDiscord> <Elegantbeef> What do you mean?
[12:09:17] <FromDiscord> <tandy> in my web project's nimble package i have the file sass/index.sass which i want to access from a nimble file
[12:09:33] <FromDiscord> <Elegantbeef> you should be able to
[12:09:49] <FromDiscord> <tandy> mb meant to say non nim files here
[12:09:54] <FromDiscord> <tandy> il try
[12:10:03] <FromDiscord> <Elegantbeef> `staticRead` should work
[12:10:11] <FromDiscord> <Elegantbeef> I could be wrong
[12:10:39] <FromDiscord> <Elegantbeef> The NimVM's list of support functions is an oddcase of "it depends"
[12:11:14] <FromDiscord> <tandy> thing is i dont need the actual file
[12:11:16] <FromDiscord> <tandy> just its path
[12:11:21] <FromDiscord> <tandy> so i can exec something on it
[12:11:41] <FromDiscord> <Elegantbeef> `listFiles` + `listDirs`
[12:31:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[12:32:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[13:05:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:07:20] <NimEventer> New thread by Mardiyah: Have C function static variable equivalent , see https://forum.nim-lang.org/t/9025
[13:18:51] <NimEventer> New question by Philipp Doerner: Prologue -Webframework - How to set thread-local variables for logging when compiling with `--threads:on` flag?, see https://stackoverflow.com/questions/71545667/prologue-webframework-how-to-set-thread-local-variables-for-logging-when-comp
[13:27:02] <FromDiscord> <Phil> The above is just one of my self-answered questions
[13:27:24] <FromDiscord> <Phil> (edit) "The above is just one of my self-answered questions ... " 03added "(shoutout to xflywind for throwing the answer in my face pretty much)"
[13:49:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[14:04:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:35:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad)
[14:38:19] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[14:41:26] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d4f3:e167:a65d:25ad) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:42:48] *** Joins: xet7 (~xet7@user/xet7)
[15:23:46] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[16:32:45] <FromDiscord> <hmmm> yay I got the base36 decoder working, or basewhatever dececoder
[16:33:22] <FromDiscord> <hmmm> we can now have our own int(string,base) like python
[17:10:03] *** Joins: nimdata (~nimdata@2a00:23c8:5a01:7101:348b:4933:4830:7fb7)
[17:14:35] *** Quits: nimdata (~nimdata@2a00:23c8:5a01:7101:348b:4933:4830:7fb7) (Ping timeout: 256 seconds)
[17:14:39] <FromDiscord> <Daan B> can anybody help me with debugging a mem leak?
[17:20:05] <FromDiscord> <planetis> btw 8bytes i think there are always leaked with stacktraces or smth
[17:25:26] *** Quits: krux02 (~krux02@p200300e817167300a7fae666126e61b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[17:25:31] *** Joins: krux02_ (~krux02@p200300e817167300a7fae666126e61b1.dip0.t-ipconnect.de)
[17:27:21] <FromDiscord> <Rika> what leak
[17:55:08] *** Joins: filip912 (~filip@185.179.132.203)
[17:55:12] *** Parts: filip912 (~filip@185.179.132.203) ()
[18:00:51] <FromDiscord> <Aaron Lee> In reply to @hmmm "yay I got the": any github repo?
[18:04:39] <FromDiscord> <hmmm> not yet I might setup a gist later but it's just a nim version of stuff found on stackow for other langs
[18:09:54] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:10:25] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:11:31] <FromDiscord> <auxym> ARC question: what happens if I have a cyclic reference, but the objects involved in the cycle have a lifetime of the whole program so never need to get GC'd?
[18:11:38] <FromDiscord> <Shinyzenith> Does the include keyword execute the file i'm including too?
[18:12:31] <FromDiscord> <auxym> include works exactly like in C, it pastes the contents of the included file exactly where you tell it to
[18:14:33] <FromDiscord> <Shinyzenith> hmm Alright
[18:19:22] <FromDiscord> <Shinyzenith> I actually didn't want to use include, i was just using plain import but that threw errors all over about undeclared identifier and I read on a stackoverflfow post to try include
[18:19:24] <FromDiscord> <Shinyzenith> and it worked so
[18:19:26] <FromDiscord> <Shinyzenith> :Shrug:
[18:19:50] <FromDiscord> <auxym> better figure out why you have those errors...
[18:19:53] <FromDiscord> <Shinyzenith> and now when I try to include the same file in multiple nim files, the compiler complains that I already have them declared in another file which makes sense now that I know how include works
[18:20:32] <FromDiscord> <auxym> for import, you know you have to mark things with a `` so that they are accessible from the module importing them?
[18:20:37] *** Joins: arkurious (~arkurious@user/arkurious)
[18:21:33] <FromDiscord> <Shinyzenith> Oh ok so i just need to append  at the end of all the type declarations? https://media.discordapp.net/attachments/371759389889003532/955116390807908402/unknown.png
[18:21:38] <FromDiscord> <demotomohiro> In default, procs, types, variables and etc are not exported.
[18:21:53] <FromDiscord> <Shinyzenith> In reply to @demotomohiro "In default, procs, types,": now it makes sense why my import statements were throwing errors
[18:22:14] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3SXp
[18:23:21] <FromDiscord> <auxym> In reply to @Shinyzenith "Oh ok so i": yes, put the `` after the declared type name
[18:23:35] <FromDiscord> <Phil> I'm trying to comprehend renameHook and such but I'm not 100% if those are what I'm looking for
[18:25:38] <FromDiscord> <Shinyzenith> In reply to @auxym "yes, put the `*`": Alright! and for procs and templates, where should I put the  ?
[18:25:58] <FromDiscord> <auxym> always after the (proc/template/type) name
[18:26:14] <FromDiscord> <Shinyzenith> Ok!
[18:26:28] <FromDiscord> <auxym> eg `proc foo(a, b: int): string = ...`
[18:26:41] <FromDiscord> <Shinyzenith> yep that works
[18:26:43] <FromDiscord> <Shinyzenith> thank you!
[18:27:37] <FromDiscord> <auxym> you also need to mark object fields with  if you need to access them outside the module. that allows you to decide which fields of an object are part of the public API, or a private implementation detail
[18:29:06] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:29:49] <FromDiscord> <Phil> Turns out treeform is great and renameHook's actually do solve the problem
[18:29:57] <FromDiscord> <Phil> (edit) "renameHook's" => "renameHooks"
[18:31:35] <FromDiscord> <Shinyzenith> In reply to @auxym "you also need to": That was going to be my next question ahaha my server kept complaining that .backend didn't exist
[18:32:53] <FromDiscord> <Jakraes> Quick question, is there any difference between import and include?
[18:33:27] <FromDiscord> <Phil> import respects private/public variable stuff as import means "only grab the stuff from module A that's public"
[18:33:29] <FromDiscord> <Rika> include is literal copy paste
[18:33:32] <FromDiscord> <Phil> include is stabling two files together
[18:33:38] <FromDiscord> <Phil> (edit) "stabling" => "stapling"
[18:33:54] <FromDiscord> <Phil> (edit) "together" => "together, which means you have access to all the private variables within the included file"
[18:34:11] <FromDiscord> <Jakraes> Oh gotcha, so import only imports what's marked with a ?
[18:34:24] <FromDiscord> <Phil> pretty much, it's also not code duplication the same way include is
[18:35:10] <FromDiscord> <Phil> I think the usecase for include is mostly if you have something that should be a single module, but it's too much code for a single module, so you split it out into separate files that you include together into a single module and that's the module you import elsewhere for actual use
[18:35:22] <FromDiscord> <Phil> (edit) "module," => "file,"
[18:37:07] <FromDiscord> <Jakraes> Oh nice, that's exactly that I was going for, too much code for one file so I decided to organize it a little bit
[18:37:12] <FromDiscord> <Jakraes> I might use include for that
[18:37:26] *** Joins: Doraemon (~NeoCron@p200300e47f277d00ff410b6acd6256a7.dip0.t-ipconnect.de)
[18:39:53] *** Joins: acidsys_ (~LSD@2a03:4000:55:d20::3)
[18:41:44] *** Joins: Onionhammer4 (~onionhamm@23-88-146-29.fttp.usinternet.com)
[18:42:03] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[18:42:05] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: NeoCron (~NeoCron@p200300e47f277d00ff410b6acd6256a7.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Read error: Connection reset by peer)
[18:43:02] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 240 seconds)
[18:43:02] *** Onionhammer4 is now known as Onionhammer
[18:48:02] <FromDiscord> <Phil> @treeform I could hug you for your foresight of having renameHooks.
[18:48:46] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[18:57:22] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[18:57:38] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Read error: Connection reset by peer)
[18:59:36] *** Joins: Lord_Nightmare2 (znc@user/lord-nightmare/x-3657113)
[19:00:19] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Ping timeout: 250 seconds)
[19:00:25] *** Joins: enyc_ (~enyc@user/enyc)
[19:00:30] *** Quits: NimEventer (~NimBot@78.47.140.224) (Ping timeout: 250 seconds)
[19:00:39] *** Joins: NimEventer (~NimBot@78.47.140.224)
[19:02:20] *** Lord_Nightmare2 is now known as Lord_Nightmare
[19:05:23] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[19:06:44] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Remote host closed the connection)
[19:12:28] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[19:13:08] *** redj_ is now known as redj
[19:32:31] <FromDiscord> <d4rckh> is there any easy way of selecting elements from a start index to an end index from a sequence?
[19:35:13] <FromDiscord> <Equinox> In reply to @d4rckh "is there any easy": I’m not very good at nim but I think: seqname[start..end]
[19:38:54] <FromDiscord> <Phil> It's as you wrote Equinox, it gives you the entries from index start to end, including the indexes itself.↵I'm not sure if it does a copy on those or not though.
[19:39:46] <FromDiscord> <Phil> It does a copy for primitive types at least
[19:50:28] <FromDiscord> <demotomohiro> Both `dstSeq = srcSeq` and `dstSeq = srcSeq[0..^1]` copy `srcSeq`.
[19:52:17] <FromDiscord> <Phil> In reply to @demotomohiro "Both `dstSeq = srcSeq`": Out of curiosity, what would I do if I had a pretty large sequence and didn't want a copy?
[19:52:46] <FromDiscord> <Phil> Or is this where memory safety issues come into play and for the sake of my sanity I really should be doing copy?
[19:56:06] <FromDiscord> <demotomohiro> If you have a large seq and don't want to copy it, just don't copy it.↵If you are going to modify `srcSeq` but need to keep current state of `srcSeq`, you would need to copy it.
[19:56:52] <FromDiscord> <auxym> one trick I read from beef on here (yesterday I think)? https://nim-lang.org/docs/system.html#toOpenArray%2Cseq%5BT%5D%2Cint%2Cint
[19:58:26] <FromDiscord> <demotomohiro> There is also https://nim-lang.org/docs/system.html#shallowCopy,T,T and https://nim-lang.org/docs/system.html#shallow,seq%5BT%5D.
[20:02:56] <FromDiscord> <demotomohiro> Nim pass seq to procs without copying it.
[20:04:46] <FromDiscord> <d4rckh> In reply to @Equinox "I’m not very good": Thanks, it worked
[20:05:29] <FromDiscord> <d4rckh> I am currently developing my nim program on windows with a friend who uses linux
[20:05:39] <FromDiscord> <Equinox> In reply to @d4rckh "Thanks, it worked": Nice
[20:05:57] <FromDiscord> <d4rckh> We finally finished implementing threads but when he runs the program it throws a lot of errors about memory leaking
[20:06:12] <FromDiscord> <d4rckh> While for me (on windows) it runs completely fine
[20:07:31] <FromDiscord> <Daan B> Yes, also when I run it on a windows vm it also works fine.
[20:09:03] <FromDiscord> <Daan B> image.png https://media.discordapp.net/attachments/371759389889003532/955143443666063431/image.png
[20:13:19] <FromDiscord> <Daan B> image.png https://media.discordapp.net/attachments/371759389889003532/955144520373268560/image.png
[20:14:04] <FromDiscord> <d4rckh> https://github.com/d4rckh/vaf/blob/vaf-threads/src/vaf.nim#L156
[20:14:06] <FromDiscord> <d4rckh> here is the code
[20:57:28] <FromDiscord> <Alea> I'm importing this object from another module but it shows error type for some reason https://media.discordapp.net/attachments/371759389889003532/955155630056964166/unknown.png
[20:57:38] <FromDiscord> <Alea> it doesn't show this for types imported from other modules
[20:57:41] <FromDiscord> <Alea> any clues why?
[20:58:56] <FromDiscord> <Alea> that same variable imported into other modules doesn't have this issue
[21:04:15] <FromDiscord> <demotomohiro> Is that type has export mark ''?
[21:05:46] <FromDiscord> <demotomohiro> Are there same identifier? It is almost impossible to help you without reading your code.
[21:13:59] <FromDiscord> <Alea> a reload ended up fixing
[21:14:10] <FromDiscord> <Alea> guess its just usual nim extension instability
[21:15:01] <FromDiscord> <Generic> make sure to setup a project file
[21:28:44] <FromDiscord> <Require Support> how to link static libraries in nim
[21:30:42] <FromDiscord> <Daan Breur> :\(
[21:31:24] <FromDiscord> <demotomohiro> -
[21:31:51] <FromDiscord> <demotomohiro> `--passL:-lmystaticlibrary`
[21:32:25] <FromDiscord> <demotomohiro> Use that compiler option
[21:35:29] <FromDiscord> <demotomohiro> `--passL`send a specified option to gcc. If you want to know more about link options: https://gcc.gnu.org/onlinedocs/gcc-11.2.0/gcc/Link-Options.html#Link-Options
[21:49:46] <FromDiscord> <Require Support> thanks
[22:10:20] *** Quits: Doraemon (~NeoCron@p200300e47f277d00ff410b6acd6256a7.dip0.t-ipconnect.de) (Quit: Leaving)
[22:12:09] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[22:14:03] *** Joins: fowl (~fowlmouth@user/fowl)
[22:15:23] *** Quits: fowl (~fowlmouth@user/fowl) (Client Quit)
[22:15:40] <FromDiscord> <Daan Breur> In reply to @d4rckh "https://github.com/d4rckh/vaf/blob/vaf-threads/src/": ??????
[22:15:51] <FromDiscord> <Daan Breur> (edit) "??????" => "? Whats wrong about this"
[22:15:59] <FromDiscord> <Daan Breur> windows works, linux not
[22:17:02] *** Joins: fowl (~fowlmouth@user/fowl)
