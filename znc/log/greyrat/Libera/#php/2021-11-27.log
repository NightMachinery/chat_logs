[00:14:58] *** Joins: guido (~guido@host-87-10-19-126.retail.telecomitalia.it)
[00:21:59] *** Joins: Northwoods (~Northwood@202.14.122.53)
[00:40:01] *** Joins: geli (~gelignite@55d411d7.access.ecotel.net)
[00:40:07] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Read error: Connection reset by peer)
[00:42:47] *** Quits: guido (~guido@host-87-10-19-126.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[01:13:08] *** Joins: luigibu (~luigi@80.30.201.209)
[01:16:05] *** Quits: deksar (~deksar@user/deksar) (Quit: "Mundus scena, vita transitus; venisti, vidisti, abiisti.")
[01:31:12] *** Quits: MrTrick (uid181961@id-181961.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:55:47] *** Joins: SpeakSpanishBoy (~SpeakSpan@user/speakspanishboy)
[01:58:46] *** SpeakSpanishBoy is now known as spMau
[02:12:37] *** Joins: jaykelly450 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net)
[02:31:54] *** Joins: mr_gant (~mr_gant@103.192.80.183)
[02:37:50] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:38:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[02:39:44] *** Quits: spMau (~SpeakSpan@user/speakspanishboy) (Quit: Me las piro vampiro ^o^)
[02:46:09] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[02:46:33] *** Joins: remolej (~kenoba@user/kenoba)
[02:47:36] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[02:48:14] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:39b5:1fff:b620:146d)
[02:49:05] *** Quits: mr_gant (~mr_gant@103.192.80.183) (Ping timeout: 268 seconds)
[02:55:04] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[02:55:44] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:33] *** Joins: WishBoy (~WishBoy@user/wishboy)
[02:57:28] *** Quits: WishBoy (~WishBoy@user/wishboy) (Client Quit)
[02:59:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[03:03:03] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[03:04:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:06:07] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[03:08:16] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[03:20:05] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[03:24:59] *** Quits: Bencraft (~Bencraft@111.227.187.81.in-addr.arpa) (Ping timeout: 264 seconds)
[03:42:33] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[03:48:54] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 268 seconds)
[03:54:32] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 240 seconds)
[03:56:02] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[03:57:07] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:57:10] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[03:57:17] *** Quits: celphi_ (sid97751@user/celphi) (Ping timeout: 250 seconds)
[03:57:56] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 265 seconds)
[03:58:30] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[04:01:12] *** Quits: paladox (sid373195@wikimedia/paladox) (Read error: Connection reset by peer)
[04:01:24] *** Joins: paladox (sid373195@wikimedia/paladox)
[04:05:39] *** Joins: remolej (~kenoba@user/kenoba)
[04:24:20] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:30:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[04:52:42] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:58:09] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[05:15:26] *** Joins: stenno (~stenno@user/stenno)
[05:22:50] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:27:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[05:30:27] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:37] *** Joins: WishBoy (~WishBoy@user/wishboy)
[05:45:40] *** Quits: rdbeni0 (~rdbeni0@public-gprs375585.centertel.pl) (Quit: Leaving.)
[05:58:14] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[06:02:14] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:03:26] *** Joins: linext__ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[06:03:42] <linext__> i wrote a script to fix my DVR / cable TV box: https://paste.debian.net/1220995/
[06:05:33] <linext__> based on this thing: https://github.com/hackwin/esp8266InfraredRemoteRepeater
[06:12:41] *** Joins: jellyknight (~gelignite@55d49b41.access.ecotel.net)
[06:15:41] *** Quits: geli (~gelignite@55d411d7.access.ecotel.net) (Ping timeout: 265 seconds)
[06:21:38] *** Joins: Rockwood (~Rocky@user/rocky)
[06:23:23] *** Quits: busf4ct0r (~busf4ct0r@187.155.30.195) (Quit: WeeChat 3.3)
[06:24:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:28:41] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[06:31:36] <Blondie101010> linext__:  ok, so?
[06:32:00] <linext__> fin.
[06:32:43] <Blondie101010> this channel is not for indexing or announcing of scripts...  you can do that on google, github, packagist, etc
[06:32:57] <linext__> ok
[06:45:43] *** Joins: ferdna (~ferdna@user/ferdna)
[06:47:50] *** Quits: jellyknight (~gelignite@55d49b41.access.ecotel.net) (Quit: Stay safe!)
[06:52:47] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:07:19] *** Joins: bobdobbs (~user@116.251.164.13)
[07:24:35] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[07:29:06] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[08:05:21] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[08:14:21] *** Quits: jaykelly450 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net) (Quit: WeeChat 3.2)
[08:25:38] <skyroveRR> Hey folks, any thoughts on my earlier question? :)
[08:25:50] <skyroveRR> (which I posted a few hours back.)
[08:29:43] <__adrian> skyroveRR: https://php.net/variables.scope
[08:30:05] <__adrian> $pdovisit is not in scope (does not exist) inside that function.
[08:30:20] <skyroveRR> Oh.
[08:30:22] <__adrian> when your code _needs_ something, you should pass it in via an argument
[08:30:41] <__adrian> e.g., function displaydnsservererror(Pdo $pdovisit) { ...
[08:30:59] <__adrian> related: !+bad config
[08:30:59] <php-bot> related, magic configs are bad. https://gist.github.com/adrian-enspired/2e03b01fcfff54151864
[08:31:16] <__adrian> use arguments, use return values.
[08:32:28] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[08:32:31] <Rockwood> __adrian, hi how are you sir?
[08:32:58] <skyroveRR> __adrian: Well what's wrong with invisible variables when 'require' is used? They aren't going to be used until they are needed, right?
[08:36:36] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[08:36:49] <__adrian> the problem is they're invisible.  require "something.php"  // what's now in scope? did any of those invisible vars collide with other ones? how much trouble did i just create for myself when i have to go troubleshoot something?
[08:36:53] <__adrian> be explicit.
[08:36:56] <__adrian> hi rockwood
[08:41:40] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[08:42:05] <skyroveRR> __adrian: understood.
[08:49:32] <CoJaBo> I can confirm that random loose vars everywhere are hell to debug
[08:51:07] <__adrian>  you can get a lot of insight by googling "global variables"
[08:51:27] <__adrian> closely related problem (or result of this problem)
[08:53:25] <CoJaBo> My favorite antipattern is just stuffing them all into static vars of one single global class used everywhere. Fun times..
[08:59:18] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:12:06] *** Joins: led_belly (~led_belly@5.180.62.139)
[09:19:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:21:58] *** Joins: guido (~guido@host-79-36-249-184.retail.telecomitalia.it)
[09:24:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[09:28:33] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 250 seconds)
[09:41:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[09:48:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:52:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:34] <rj1> i sincerely love php w/ all my heart
[09:55:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[09:56:59] *** Joins: vlm (~vlm@user/vlm)
[10:06:55] *** Quits: Miles8of9 (~obrien@93-34-146-223.ip50.fastwebnet.it) (Ping timeout: 250 seconds)
[10:12:34] *** Quits: guido (~guido@host-79-36-249-184.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[10:28:30] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:33:11] *** Joins: Bencraft5 (~Bencraft@111.227.187.81.in-addr.arpa)
[10:41:13] *** Joins: genom (~g@37.214.82.242)
[10:49:16] *** Joins: deksar (~deksar@user/deksar)
[10:55:16] *** Joins: while (~while@65.186.57.105)
[10:56:43] <while> does anyone see any serious vulnerabilities in this script? https://pastebin.com/1PTk7c92
[10:57:37] <while> the output is then used as a shell command, the intended purpose is to prevent user input from executing arbitrary shell commands (and instead only allow from a list)
[10:57:46] *** Joins: guido (~guido@host-79-36-249-184.retail.telecomitalia.it)
[11:12:51] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[11:23:59] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:27:39] *** Quits: guido (~guido@host-79-36-249-184.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[11:28:53] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[11:55:42] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:56:10] *** Joins: guido (~guido@host-79-36-249-184.retail.telecomitalia.it)
[11:59:56] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[12:05:24] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[12:10:51] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[12:16:12] <jargon> https://pastebin.com/nngqhdx7
[12:16:27] <jargon> Why does it not use alpha for index 255?
[12:17:00] <jargon> And why do my color indices start at 1?
[12:18:26] <jargon> https://pastebin.com/ciWxN5zB
[12:19:05] <jargon> First link is my encoder, second link is my VGA color table.
[12:20:52] <jargon> Yes, I already got my QBasic BSV/TIL loader working in PHP.
[12:21:35] <jargon> This part is mixing together a color tile with a mask tile to produce a PNG with a transparent index.
[12:22:17] <jargon> It was working before for true color, but now I am dealing with palettes.
[12:31:25] *** Quits: guido (~guido@host-79-36-249-184.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[12:40:21] <Blondie101010> you're still stuck in your bad habits...  make a real test case (removing 90% of that junk for the test)
[12:40:30] <jargon> Yes, this uses GDlib in PHP8.
[12:42:00] <jargon> Blondie101010, generally my issues seem to usually be due to typographic errors.
[12:42:46] <jargon> Do arrays start a 1 or zero by default?
[12:44:25] <jargon> Same for image palettes?
[12:46:00] <jargon> "By default, the index starts at zero. These arrays can be created in two different ways as shown in the following example: PHP."
[12:47:41] <Blondie101010> that sentence indicates it could be different from 0
[12:48:33] <jargon> "The first call to imagecolorallocate() fills the background color in palette-based images - images created using imagecreate()."
[12:48:52] <jargon> I see what I did wrong now.
[12:49:26] <jargon> I used zero as a background color instead of 255.
[12:50:32] <jargon> Still doesn't work right.
[13:01:29] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[13:02:10] <Blondie101010> change a pixel color with it
[13:02:22] <Blondie101010> I think that's what I did when I played with it
[13:05:39] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[13:06:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:15:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:23:01] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 268 seconds)
[13:23:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:00:46] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[14:05:22] *** Quits: Teraii (~teraii@185.219.206.44) (Read error: Connection reset by peer)
[14:05:36] *** Joins: Teraii (~teraii@185.219.206.44)
[14:06:35] *** Joins: ms49434 (~ms49434@user/ms49434)
[14:09:53] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:10:07] *** Joins: Northwoods (~Northwood@202.14.122.53)
[14:17:19] *** Quits: while (~while@65.186.57.105) (Remote host closed the connection)
[14:18:34] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:21:23] *** Joins: keypusher (keypusher@user/keypusher)
[14:21:26] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[14:26:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:a020:a5a8:e19e:2b7c) (Remote host closed the connection)
[14:27:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4)
[14:31:36] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[14:32:05] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4) (Ping timeout: 268 seconds)
[14:34:32] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 240 seconds)
[14:48:31] *** Joins: WishBoy (~WishBoy@user/wishboy)
[14:59:14] *** Quits: deksar (~deksar@user/deksar) (Quit: Mundus scena, vita transitus; venisti, vidisti, abiisti.)
[15:03:31] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:04:44] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4)
[15:05:29] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[15:09:31] *** Joins: deksar (~deksar@user/deksar)
[15:13:09] *** Joins: Northwoods (~Northwood@202.14.122.53)
[15:18:40] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4) (Remote host closed the connection)
[15:19:09] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4)
[15:23:42] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:c034:24b9:9771:e5d4) (Ping timeout: 260 seconds)
[15:34:49] *** Joins: guido (~guido@host-79-36-249-184.retail.telecomitalia.it)
[15:35:35] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:43:46] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 260 seconds)
[15:54:42] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[15:56:57] *** Joins: Northwoods (~Northwood@202.14.122.53)
[15:59:39] *** Quits: zkv (~zkv@93.171.161.179) (Quit:  HydraIRC -> http://www.hydrairc.com <- Organize your IRC)
[16:00:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:28:42] <Beam> does php have any logic with session locking that lets the longest waiting locker to have the lock? doesn't seem so?
[16:33:14] <AllenJB> I doubt it. PHP processes generally aren't aware of each other / don't cooperate. It may not even be PHP that "decides" - it may be the OS, depending on exactly how the file locks are implemented.
[16:35:02] <AllenJB> Note that you can cause PHP to release session locks early with session_write_close() - this can be used if you know the request won't need to write to the session again.
[16:46:25] <biberu> Beam: if you have long running tasks over http you should probably consider other designs, the session locking might just be one symptom
[16:47:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:52:21] *** Quits: deksar (~deksar@user/deksar) (Quit: Mundus scena, vita transitus; venisti, vidisti, abiisti.)
[16:54:02] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[16:56:31] <Beam> Nah the issue is with bad bots that take up my entire php-fpm pool with session locks
[16:56:54] <Beam> not sure how to combat it
[16:58:15] <Beam> if i could find a way to throttle them from apache would be great, only allow x connections to php-fpm per ip
[16:58:44] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[16:58:52] <Beam> i have plenty of ram so can keep alot of connections in apache
[16:59:52] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[17:00:21] <Blondie101010> I told you, your case shouts for firewall rules
[17:00:30] <Blondie101010> what are you waiting for?
[17:00:33] <Blondie101010> block the bad IPs
[17:01:17] <Blondie101010> they're obviously doing that intentionally
[17:01:29] <Blondie101010> and you let them!
[17:07:08] *** Joins: tex (~super@user/dix)
[17:16:03] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[17:17:15] <biberu> Beam: the bots are using sessions?
[17:20:38] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[17:22:20] *** Joins: magla (~gelignite@55d49b41.access.ecotel.net)
[17:28:27] *** Joins: keypusher (keypusher@user/keypusher)
[17:29:24] <biberu> Beam: don't know your context or site, but apart from blocking them you might be able to avoid opening sessions until they are needed, and use a reverse proxy as a cache to prevent requests from even hitting php
[17:43:16] *** Joins: cstls (~ruiner@2603-7081-0800-4824-c067-422e-5956-4dd7.res6.spectrum.com)
[17:44:25] *** Joins: noord (~noord@user/noord)
[17:46:52] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[17:55:46] <Blondie101010> biberu:  it's all coming from the same IPs
[17:56:17] <Blondie101010> it's ridiculously easy to solve properly and yet he's back after many days without doing it
[17:57:28] <Blondie101010> iptables -I INPUT -p tcp -s $badIP -j DROP
[18:00:38] <biberu> Blondie101010: yeah, he should probably do that, but if his site is getting overloaded there might still easy improvements to make for normal traffic
[18:10:22] *** ekl- is now known as ekl
[18:12:37] <Beam> point is, i want to fix the issue at the root and not just block
[18:12:45] <Beam> it is an issue
[18:13:54] <Beam> best way would be for apache to hold connections and just let nn connections per ip through to php, as apache threads are much less costly than php ones
[18:20:20] *** Joins: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88)
[18:23:19] <Beam> if i can fix it i don't need to set up other measures like fail2ban which might have unintended consequences
[18:24:59] <biberu> Beam: does the traffic even need to hit PHP?
[18:29:30] <__adrian> Beam: you talk about firewalling and fail2ban like they're bad ideas  :p
[18:30:07] <__adrian> "fix your session usage" and "set up firewalling properly" and "block bad actors" are not mutually exclusive.
[18:30:19] <biberu> ^
[18:30:52] <__adrian> sessions are as simple as *don't start a session if/until you need it *close the session as soon as you're done.
[18:31:25] <__adrian> long-running things were mentioned above - the solution there is to NOT do long-running things over http.
[18:31:26] <biberu> indeed, don't just automatically start one for guests unless they'll need it
[18:31:43] <__adrian> do them out-of-band so you don't keep the http connection open.
[18:32:40] <biberu> as for rate limiting I'd probably just redirect abusive traffic to a 503 page rather than maintaining queues
[18:35:23] *** Quits: cstls (~ruiner@2603-7081-0800-4824-c067-422e-5956-4dd7.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:39:12] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Quit: guenhael)
[18:39:30] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:42:25] <Beam> these are all php requests, and i need to read session variables in all of them. optimizing to start/close when needed isn't going to help much at all
[18:43:05] <biberu> do you need to *set* session variables in all of them?
[18:43:12] <Beam> and about blocking, these badbots are crawlers, I don't want to block crawlers, as they likely give me more traffic in the long run
[18:43:17] <__adrian> yeah, that's baseless
[18:43:57] <biberu> and if the data you're serving is mostly static or the same for any user with guest access you might need to hit php
[18:44:49] <biberu> might *not* need
[18:45:45] <Beam> all your suggestions are good suggestions, but don't really help fixing this issue the way i want
[18:46:14] <Beam> speaking of read-only sessions - how can I do that?
[18:46:36] <Beam> i thought it's session_start() that actually populates $_SESSION
[18:46:38] <__adrian> "...the way i want"  // so, this is key. if you already know how you want to solve it, then just go do that. if you ask a question, people will give you their best answers, not strictly the answers you want to hear.
[18:47:03] <__adrian> if you've already decided, you don't need our assent to go do it.
[18:47:10] <biberu> i don't know anything about your site, so suggestions are going to be very general
[18:47:38] <Beam> well i know the basis of how i want to solve it, i'm here to see if anyone has been doing something similar
[18:47:45] <__adrian> Beam: "read only session" means you open the session and them immediately close it.
[18:47:47] <biberu> we probably all have
[18:47:50] <__adrian> ^
[18:48:02] <__adrian> which is also probably why there are so many recommendations against it  ;)
[18:48:22] <biberu> or just check if there is a session id, and if not, use a guest session instead of creating one
[18:48:27] <Beam> *shrug* could just be noone made a good catch-all solution because it's tricky
[18:49:11] <__adrian> well, as i said, you go do what you want to do. enjoy.
[18:49:18] <biberu> i guess you'll need your own session handler for that approach, but working directly with the session functions and globals ($_SESSION) isn't fun anyway
[18:50:29] <Beam> so i can reopen session again later in the script after i close it? so i can basically have a Session{} class that manages opening it when i need to write, and just has it closed when not? deadlocks would be possible though if i lock multiple times during a script where multiple scripts are stuck waiting for each other no?
[18:51:02] <Beam> i guess not
[18:51:12] <Beam> they should eventually release the locks
[18:51:16] *** Joins: guenhael1 (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr)
[18:51:41] <__adrian> you'd need to look at how/what/when you need to write
[18:51:43] <biberu> why are you opening sessions for the bots?
[18:51:51] <__adrian> ^
[18:51:58] <__adrian> this doesn't really make sense
[18:52:18] <Beam> i'll fix that too.
[18:52:19] <biberu> is the problem that bot 1 gets a session id, and then that's reused for all following requests, thus causing them to block each other?
[18:52:22] <__adrian> bots don't generally log in or do anything stateful
[18:52:36] <Beam> but is there a lot of overhead in session_start(); $_SESSION[...] = ?; session_write_close(); if i have like 20-30 session variables?
[18:52:45] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[18:52:46] *** guenhael1 is now known as guenhael
[18:52:57] <biberu> again, what in your design makes it necessary to open sessions for the bots?
[18:53:08] <Beam> i'm talking about generally
[18:53:24] <biberu> i'm just trying to understand your issue
[18:54:07] <biberu> if you *need* to open a session that's just what you'll have to do, but depending on your requirements you might use different handlers
[18:54:19] <Beam> ok so if you don't have a session id, i shouldn't create one until i know you're logging in?
[18:54:45] <__adrian> generally speaking
[18:54:48] <Beam> session_id() works without opening first?
[18:54:52] <biberu> for example, it depends on your context, but if you *know* that the user is a guest and you don't want to *set* any data, why open a session?
[18:54:56] <Beam> so i can use that to check if i should open?
[18:55:06] <biberu> why not just return a new GuestSession() that can be upgraded if you should need to?
[18:55:40] <Beam> well what is a GuestSession compared to a regular session?
[18:55:51] <biberu> that's for you to decide, it's not a php thing
[18:56:06] <Beam> i know, but well I don't need sessions if there's nothing in them :p
[18:56:33] <Beam> most guest sessions would just be to remember sorting and filtering
[18:57:03] <Beam> is it possible to read sessions without locking?
[18:57:15] <biberu> Beam: the idea is that by knowing that you're working with a guest you can avoid creating an id, sending that id to the user, causing the user to send that back, causing your server to need to open mostly empty sessions etc.
[18:57:16] <Beam> if i just want best-effort last value
[18:57:34] <biberu> just opening a session for a guest can have large effects
[18:58:10] <biberu> yes, you can replace the file based session handler with something else, but issuing ids to guest users would still be useless overhead
[18:59:00] <Beam> well if I want to let them have global filters or sorting active while browsing a website, is there any better way?
[19:00:31] <biberu> sounds like client state, do you need to store that on the server side at all? doesn't e.g. sessionStorage/localStorage work? from those you could just add it your queries from the front end. could you put it in a regular cookie if that's not workable? that would still avoid all of the session handling
[19:01:32] <Beam> i could use a different cookie yes, but that's the same as rewriting session handling, it would still be processed server side (which i want)
[19:01:33] <biberu> but even if you do need that in your session for whatever reason you shouldn't initialize the sessions before you need them
[19:02:34] <biberu> also, 20-30 variables in a session sounds like a lot, i usually just keep an id, maybe some metadata, and use that as a key to find the data in other systems (e.g. caches or databases)
[19:03:29] <Beam> well expanding data into session is usually faster than having to look it up for every request from another backend
[19:03:47] <biberu> did you measure that to be a problem?
[19:04:01] <Beam> several times over the years yes
[19:04:56] <biberu> interesting, but then you have a reason for it
[19:05:08] <Beam> anyway thanks for feedback, i know several improvements that could be done to improve my systems session usage
[19:05:29] <Beam> it wouldn't completely eliminate the problems though so i'll keep looking for a short term fix for that
[19:05:37] <Beam> other than blocking them bad bots :p
[19:06:06] <Beam> rewriting my systems entire session handling is going to take months
[19:06:48] <biberu> the reasons for that could be worth thinking about
[19:07:42] <biberu> sounds like an architectural issue that could be avoided in future projects, and i don't mean just the sessions for guests issue, but rather how changing it became so hard
[19:08:32] <Beam> it's an old system from 2002 that's never been proper rewritten :p
[19:08:45] <biberu> it was possible to write good code in 2002 ;)
[19:09:03] *** Quits: sfields (~sfields@2605:a601:adea:7a00:6531:9ed4:3d26:d88) (Remote host closed the connection)
[19:09:04] <Beam> i suppose it was :p i didn't have the knowledge back then though
[19:09:36] <biberu> hehe, yeah, (hopefully) we learn something every day
[19:11:01] <Beam> planning to rewrite the system with MVC in mind, but always find reasons to postphone :p
[19:11:56] <Beam> god damn it.. 2.5 million lines of code :(
[19:13:17] <biberu> the amount doesn't matter as much as how they're organized
[19:13:48] <Beam> well would be a lot of copy paste for sure to reorganize it all into mvc
[19:14:17] <Beam> 20k+ php files though
[19:14:30] <Beam> most of which would need some kind of changes
[19:15:23] <Beam> i need to become proficient at regex :p
[19:16:15] <Beam> s/$_SESSION[.*] = .*;/Session::set(\1, \2);/
[19:16:49] <biberu> you're gaining some indirection, but that static is still effectively a global
[19:17:40] <Beam> *shrug*
[19:18:27] <Beam> global static classes aren't bad when you just need to get a reach of data stores
[19:19:49] <Beam> sessions, localization, database connections, etc
[19:20:19] <biberu> they make your code much harder to configure, test, effectful etc
[19:20:44] *** Joins: sobrito (~sobrito@168-232-56-133.enzointernet.net.br)
[19:21:01] <Beam> but passing around a localization instance to every single object you ever instanciate is so ...
[19:21:08] <Beam> noone does that
[19:21:42] <biberu> if the object or function needs it i pass it as an argument, no exceptions
[19:21:59] <biberu> i don't even use time functions directly if i can avoid it
[19:24:00] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[19:25:28] <Beam> well often you don't have control of all aspects of the system, if you use a framework like zend framework for example. it's not easy to inject data into a controller
[19:25:47] <Beam> but now i'm just arguing :p
[19:25:57] <Beam> thanks again for input
[19:26:16] <biberu> i don't know zf ¯\_(ツ)_/¯
[19:29:19] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[19:57:05] *** Joins: shailangsa (~shailangs@host86-186-136-24.range86-186.btcentralplus.com)
[19:57:44] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[19:57:58] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[19:57:58] *** Quits: guido (~guido@host-79-36-249-184.retail.telecomitalia.it) (Read error: Connection reset by peer)
[20:02:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[20:06:19] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800c5d69e9fa4076440.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:11:49] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:15:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[20:19:06] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 245 seconds)
[20:29:04] *** Quits: j1mu5 (~j1mu5@user/j1mu5) ()
[20:31:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:33:52] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[20:38:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:38:56] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:48:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:50:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:51:24] <dag> http_build_query() produces foo[0]=bar&foo[1]=baz for array parameters but i want to produce foo=bar&foo=baz
[20:53:14] *** fjmorazan_ is now known as fjmorazan
[20:53:53] <__adrian> dag: that's not how php parses query params
[21:13:44] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[21:19:53] *** Joins: jaykelly450 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net)
[21:23:09] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:23:59] *** Joins: Rockwood (~Rocky@user/rocky)
[21:25:32] <TernaryOperator> __adrian: worse, iirc that foo=bar&foo=baz isn't actually defined behaviour so hello strange errors somewhere else in the stack because "undefined" was handled in completely different ways
[21:26:19] <__adrian> pretty sure php will always end up with the last one, but yeah, not standardized
[21:26:46] <__adrian> other languages do use the foo=a&foo=b format to creates lists/arrays though
[21:26:49] <TernaryOperator> have seen both foo=1,2,3 and foo=1&foo=2&foo=3 used
[21:26:56] <__adrian> yep
[21:27:38] <TernaryOperator> just encode the data into json and do ?json=json_encode($foo); // don't do that! ;)
[21:27:58] <Rockwood> __adrian, hi how are you sir??
[21:28:58] <__adrian> so (dag) if you're in a situation like that, then you could encode each item separately and then combine them - like  join('&',[http_build_query(['foo'=>1]),http_build_query('foo'=>2)])
[21:29:02] <__adrian> or something like that
[21:29:10] <__adrian> but be aware that php won't understand it
[21:29:11] <TernaryOperator> In fact, fully complete the horror some/path?json=base64_encode(json_encode($foo))
[21:30:56] *** Joins: stenno (~stenno@user/stenno)
[21:31:25] <TernaryOperator> and I've seen ^ that in the wild as well, which was fun because base64url is a variant for a *reason*
[21:33:02] <TernaryOperator> https://datatracker.ietf.org/doc/html/rfc4648#page-7 if anyone hasn't seen that one before btw :)
[21:33:12] <TernaryOperator> fun stuff when you inherit a system that does silly things
[21:34:03] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:34:31] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 245 seconds)
[21:39:30] *** Joins: Miles8of9 (~obrien@93-34-146-223.ip50.fastwebnet.it)
[21:44:21] *** Joins: guido (~guido@host-79-36-249-184.retail.telecomitalia.it)
[21:47:56] *** Joins: Northwoods (~Northwood@202.14.122.53)
[21:50:34] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[22:28:11] <dag> var_dump(http_build_query(['id' => [1]]));
[22:28:11] <dag> string(11) "id%5B0%5D=1"
[22:28:26] <dag> is that right? seems like it incorrectly urlencodes the [ and ] ?
[22:28:49] <__adrian> it's not incorrect
[22:28:57] <dag> i would expect a url id[0]=1
[22:30:09] <dag> okok so paramater names are urlencoded too. got it
[22:30:45] <__adrian> yeah, query string's supposed to be. when you type it in a browser, for example, the browser typically does it for you
[22:30:53] <__adrian> and then php (or whatever) decodes
[22:34:56] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:38:54] *** Joins: tester12 (~tester12@5.120.238.160)
[22:39:02] <tester12> Hi freinds
[22:39:33] <tester12> is there a simple way to run php codes in commanline ?
[22:39:38] <tester12> commandline
[22:39:51] <tester12> or run in terminal of phpstorm
[22:41:38] <tester12> without saving codes in a file and execute the php file
[22:43:43] <__adrian> install php-cli and run  php -a
[22:44:07] <__adrian> https://php.net/features.commandline
[22:51:15] *** Quits: sobrito (~sobrito@168-232-56-133.enzointernet.net.br) (Quit: Leaving)
[23:05:03] <tester12> __adrian thanks
[23:05:19] <tester12> I can do it in phpstorm
[23:05:26] <tester12> but how to use it?
[23:05:31] <tester12> in terminal
[23:05:51] <tester12> in php.net I couldnt understand where should I start
[23:07:46] <__adrian> do you have php-cli installed?
[23:07:56] <__adrian> and are you on windows?
[23:08:28] <__adrian> open your terminal, run   php -a
[23:08:41] <__adrian> i assume it's similar on windows but have never tried.
[23:09:02] <da_wunder> or just `php somephpfile.php`
[23:10:06] <__adrian> well, the ask was for without running a file
[23:10:13] <biberu> __adrian: it's the same on windows
[23:10:21] <__adrian> but if you can do the one then you can do the other
[23:11:41] <da_wunder> __adrian: oh just noticed that message: "21:09 < tester12> is there a simple way to run php codes in commanline ?"
[23:12:04] <da_wunder> that was "too" back and didn't notice that at all
[23:12:29] <biberu> you can also just docker run one of the cli images, or make your own, if you don't want to install specific versions
[23:12:48] <da_wunder> or just use eg. 3v4l.org to see the results
[23:14:10] <tester12> __adrian , da_wunder I can start php with php -a
[23:14:29] <tester12> but how can run echo "hello";
[23:14:58] <tester12> php -r 'echo "hello";' doesnt work
[23:17:09] <da_wunder> I really would just use actual PHP file, a lot of easier to change and you don't need to change that CLI command
[23:18:57] <da_wunder> and for "21:44 < tester12> php -r 'echo "hello";' doesnt work" that it does work just fine
[23:19:16] <tester12> da_wunder I wat manipulate some variable values in session sometime quickly
[23:19:26] <tester12> to test my php pages
[23:19:48] <da_wunder> you know that you really should use sessions within CLI scripts...
[23:19:59] <da_wunder> you know that you really should not use sessions within CLI scripts...
[23:20:55] <tester12> Parse error: syntax error, unexpected ''echo "hello";'' (T_CONSTANT_ENCAPSED_STRING) in php shell code on line 1
[23:21:05] <tester12> has this error
[23:21:18] <tester12> php -r 'echo "hello";' ;
[23:22:04] <tester12> when I write without semicolon at the end of line didnt display anything on next line
[23:22:31] <tester12> but when I write php -r 'echo "hello";' ;
[23:22:41] <tester12> displayed that error
[23:23:00] <da_wunder> tester12: works here as expected - https://imgur.com/a/pYwZ7rb
[23:24:37] <tester12> I use wamp64
[23:25:02] <tester12> and set php 7.3.21 for cli
[23:25:14] <tester12> when write php -a
[23:25:37] <tester12> next line show php >
[23:25:46] <tester12> and is ready to use
[23:25:58] <da_wunder> with that -a option you're in interactive mode...
[23:27:06] <da_wunder> and with that you could do it like - https://imgur.com/a/zefIVQg
[23:28:43] <tester12> ok
[23:28:53] <tester12> that worked
[23:29:22] <tester12> but when I write echo hello without double qoutation
[23:29:44] <tester12> but I coudnt run session_start()
[23:29:49] <tester12> or phpinfo()
[23:30:02] <tester12> -_- -_- -_-
[23:30:19] *** Joins: sfields (~sfields@2605:a601:adea:7a00:1a87:4473:c6e2:6ac8)
[23:30:26] <tester12> sorry Im beginner
[23:30:28] <tester12> in cli
[23:33:50] <tester12> as I read now HTTP headers, there's no equivalent switch to enable them
[23:34:05] <tester12> how use cgi
[23:34:20] <__adrian> you're not using http, so no, there's no http headers
[23:34:31] <biberu> do you mean cgi or cli?
[23:34:59] <tester12> __adrian so I cant use session_start(); am I right?
[23:35:05] <__adrian> what's your goal, here? are you trying to make a dev env (e.g., to run your website)?
[23:35:22] <__adrian> no, sessions don't make sense on the cli
[23:36:00] <tester12> biberu I want use all php functions like headrs in cli but it doesnt work in cli
[23:36:15] <tester12> and should use vgi is it right?
[23:36:44] <__adrian> "i want to use all php functions" doesn't make sense.
[23:36:58] <__adrian> some functions are for cli usage and others are not
[23:37:03] <__adrian> what is your goal here?
[23:37:13] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:37:49] <tester12> __adrian I want manipulate some variable values in session sometime quickly
[23:38:00] <__adrian> ...?
[23:38:15] <__adrian> so are you wanting to run your website?
[23:38:18] <biberu> i think he wants to edit data in live sessions from an interactive terminal?
[23:38:23] <__adrian> ^ nthis?
[23:38:28] <tester12> I see now your messag that wrote : you know that you really should not use sessions within CLI scripts..
[23:38:29] <__adrian> this is nonsense
[23:38:31] <tester12> why?
[23:39:03] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 268 seconds)
[23:39:08] <biberu> tester12: is my guess correct?
[23:40:21] <tester12> __adrian so are you wanting to run your website?:  no, I want change some values in session to to test my php app or website in browser session value checks
[23:41:17] <tester12> biberu maybe
[23:41:29] <biberu> maybe what?
[23:41:42] <__adrian> default php sessions use cookies (i.e., over http). it doesn't make sense to access them from the cli.
[23:42:18] <tester12> __adrian what about CGI?
[23:42:28] <__adrian> it doesn't really follow that you'd need to change anything in a user's session, outside of that session. sessions are not permanent storage, for example.
[23:42:34] <tester12> is it run in commanline?
[23:42:45] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[23:43:18] <tester12> __adrian I use wamp64  for local virtual host
[23:43:25] <__adrian> advice: don't
[23:43:29] <__adrian> !+xampp
[23:43:29] <php-bot> Don’t use XAMPP or WAMP. Use a real dev server on a VM, docker, or WSL2. Install docker and check out https://tecadmin.net/tutorial/docker-php-example
[23:44:01] <tester12> and cant set session variable directly cause all session file get corrupted
[23:44:08] <__adrian> wamp/xampp/etc. was never "good." 20-25 years ago, it was the only really accessible thing for local development, but that's not the same thing.
[23:44:17] <biberu> there's so much XY here
[23:44:30] <__adrian> right - it doesn't make sense that you'd want to change session info outside of the session
[23:44:42] <tester12> __adrian OK sure
[23:44:47] <tester12> اشرث ش لخخی یشغ
[23:44:48] <__adrian> it seems very likely you have a problem and are trying to "solve" it in a very nonsensical way.
[23:44:55] <tester12> HAVE A GOOD DAY
[23:45:34] <__adrian> we're not pushing you away, we're trying to find out what your real problem is so we can give good answers/advice about it.
[23:45:53] <tester12> __adrian thes virtual host is good for test php apps before release
[23:46:07] <__adrian> e.g., in this case, i'd guess (wild guess) that you would do better to use a database instead of a session.
[23:46:57] *** Joins: Northwoods (~Northwood@202.14.122.53)
[23:47:14] <__adrian> sessions shouldn't matter to anything, when they're not running during a request. if you have something that you need to deal with outside the session, then it probably shouldn't be stored in the session.
[23:47:34] <tester12> __adrian ] just wanted to get rid of writing test and temporary code in files and running them, which apparently can't
[23:48:02] <__adrian> sounds like a job for a /logout endpoint
[23:48:09] <tester12> sorry waste your time
[23:48:13] <__adrian> it's not a waste
[23:48:28] <__adrian> we're _still_ trying to help you
[23:48:39] <tester12> thanls
[23:48:39] <__adrian> explaining the problem is very helpful
[23:48:41] <tester12> thanks
[23:49:08] <__adrian> sounds to me like you need a "logout.php" that does  <?php session_destroy();
[23:49:13] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:49:21] <tester12> I use session in registration multipage forms to register after validation and final register
[23:49:25] <__adrian> well,  <?php session_start(); session_destroy();
[23:49:59] <tester12> well yes I use this function at the end of registration
[23:50:12] <tester12>   session_destroy(); session_start();
[23:50:20] <__adrian> it seems like it would work any time you wanted to clear out sessions/session info
[23:50:57] <tester12> yes but I want to test some manipulating data in session and get ride of it
[23:51:26] <tester12> thanks again
[23:51:32] <tester12> goodbye now
[23:51:46] <tester12> sorry if wasted your time
[23:51:52] *** Quits: tester12 (~tester12@5.120.238.160) (Quit: Client closed)
[23:52:33] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[23:55:11] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
