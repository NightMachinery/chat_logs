[00:09:26] *** Quits: drincruz (drincruz@2607:5300:203:3f52::19) (Quit: fBNC - https://bnc4free.com)
[00:11:02] <Ankhers> Is using Enum.flat_map more efficient than Enum.map + List.flatten?
[00:13:54] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:253c:2d10:7346:cddc) (Ping timeout: 265 seconds)
[00:19:59] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[00:37:47] *** Joins: antranigv (~antranigv@37.252.95.207)
[00:42:10] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[00:43:45] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[00:43:52] *** Quits: mahmutov (~mahmutov@37.155.35.80) (Ping timeout: 265 seconds)
[00:56:18] *** Joins: srfsh (~srfsh@user/srfsh)
[01:14:04] *** Joins: withershins (~craig@pa49-184-231-51.pa.vic.optusnet.com.au)
[01:29:42] *** Quits: andrhua (~andrhua@31.134.187.8) (Remote host closed the connection)
[01:33:32] *** Quits: antranigv (~antranigv@37.252.95.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:22] *** Joins: antranigv (~antranigv@37.252.95.207)
[01:51:17] *** Joins: notzmv (~zmv@user/notzmv)
[01:51:49] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 240 seconds)
[02:07:44] *** Joins: danirukun (~user@185.68.250.217)
[02:34:10] *** Joins: Sgeo (~Sgeo@user/sgeo)
[02:41:23] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 252 seconds)
[02:42:29] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[02:59:13] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[03:00:46] *** Quits: nickjj (~nickjj@user/nickjj) (Quit: Leaving)
[03:01:00] *** Joins: nickjj (~nickjj@user/nickjj)
[03:01:15] *** Parts: nickjj (~nickjj@user/nickjj) ()
[03:03:30] *** Quits: _w1ntermute (~w1ntermut@dslb-002-201-217-078.002.201.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[03:04:02] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[03:09:55] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[03:12:08] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[03:12:35] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 256 seconds)
[03:23:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[03:37:31] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[03:46:35] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[03:48:30] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 265 seconds)
[03:49:13] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[03:53:37] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::5)
[03:56:11] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 252 seconds)
[04:03:02] *** Joins: livoreno (~livoreno@user/notzmv)
[04:03:22] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7)
[04:14:34] *** Joins: humbertowoody (~humbertow@189.236.8.114)
[04:15:35] *** Joins: danirukun (~user@185.68.250.217)
[04:15:59] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[04:23:25] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 240 seconds)
[04:27:25] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[04:33:44] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[04:36:40] *** Joins: danirukun (~user@185.68.250.217)
[04:46:03] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[04:52:21] *** Joins: danirukun (~user@185.68.250.217)
[04:58:13] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 240 seconds)
[05:00:53] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[05:05:21] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[05:10:17] *** Joins: [deleted] (~livoreno@user/notzmv)
[05:10:22] *** Joins: danirukun (~user@185.68.250.217)
[05:13:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[05:14:40] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[05:33:37] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[05:44:43] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[06:09:38] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[06:13:39] *** Joins: livoreno (~livoreno@user/notzmv)
[06:19:39] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:24:37] *** Joins: livoreno (~livoreno@user/notzmv)
[06:29:29] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[06:30:11] *** Quits: rjk_ (sid809@id-809.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[06:30:15] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[06:34:06] *** Quits: val (~val@limnoria/val) (Ping timeout: 245 seconds)
[06:36:37] *** Joins: val (~val@limnoria/val)
[06:41:02] *** Joins: danirukun (~user@185.68.250.217)
[07:02:31] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[07:07:09] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[07:12:26] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:27] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:51] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 265 seconds)
[07:26:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[07:28:43] *** Joins: livoreno (~livoreno@user/notzmv)
[07:32:53] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[07:51:35] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:f812:b76c:617f:99d7) (Ping timeout: 252 seconds)
[08:11:16] *** Joins: danirukun (~user@185.68.250.217)
[08:29:24] *** Quits: livoreno (~livoreno@user/notzmv) (Quit: Quit)
[08:29:41] *** Joins: livoreno (~livoreno@user/notzmv)
[08:29:59] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[08:30:45] *** Joins: livoreno (~livoreno@user/notzmv)
[08:34:13] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[08:45:29] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[08:56:07] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[09:08:28] *** Quits: drewlander_ (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[09:26:03] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:26:39] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[09:30:09] *** Joins: danirukun (~user@185.68.250.217)
[09:31:19] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[09:31:22] *** Joins: drewlander (~drewlande@74.196.20.3)
[09:32:53] *** res0nat0r8 is now known as res0nat0r
[09:43:42] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[10:00:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:05:30] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 265 seconds)
[10:09:49] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 252 seconds)
[10:12:57] *** Joins: jmcgnh_ (~jmcgnh@wikipedia/jmcgnh)
[10:13:46] *** jmcgnh_ is now known as jmcgnh
[10:22:45] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[10:35:29] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 252 seconds)
[10:36:02] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[10:55:28] *** Joins: humberto1 (~humbertow@189.236.8.114)
[10:58:23] *** Quits: humbertowoody (~humbertow@189.236.8.114) (Ping timeout: 256 seconds)
[11:00:40] *** Joins: sickill7 (~sickill@user/sickill)
[11:02:15] *** Joins: danirukun (~user@185.68.250.217)
[11:02:54] *** Quits: sickill (~sickill@user/sickill) (Ping timeout: 265 seconds)
[11:02:54] *** sickill7 is now known as sickill
[11:05:35] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:06:12] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[11:11:03] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[11:19:49] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[11:32:34] <stiang> I’m a little confused as to why this doesn’t work: `where: s.created_at > fragment("NOW() - INTERVAL '? HOURS'", ^hours)`
[11:32:51] <stiang> This is a Postgres database and the error is : ** (ArgumentError) parameters must be of length 0 for query %Postgrex.Query [...]
[11:34:01] <Nicd> I think it's not possible to parameterise that part inside the string
[11:34:42] <stiang> inside the single-quoted string?
[11:34:53] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[11:35:24] <Nicd> yep, like you can't do `foo LIKE '% ? %'` either
[11:35:49] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[11:36:29] <stiang> hmm, OK, thanks. so I need a workaround of some sort...
[11:37:02] <Nicd> I think I used something similar
[11:37:04] <Nicd> lemme find it
[11:39:58] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:40:01] <Nicd> you could use %Postgrex.Interval{}
[11:40:07] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Remote host closed the connection)
[11:40:33] <Nicd> `range = %Postgrex.Interval{secs: hours * 3600}` and then `fragment("NOW() - ?", ^range)`, it might work
[11:42:33] <stiang> Nicd: thanks for that, it looks promising, but I get `** (Postgrex.Error) ERROR 42883 (undefined_function) operator does not exist: timestamp without time zone > interval`
[11:43:10] <Nicd> can you show what you did?
[11:43:26] <Nicd> also, have you checked that the query works if you write it in raw SQL?
[11:44:15] <stiang> https://gist.github.com/stiang/9da86a1dbe59cc83d68084643a192dac
[11:47:04] <stiang> I’m not sure how to translate this to raw SQL, but the original version of this function was hardcoded to `INTERVAL '24  HOURS'`, and that worked well.
[11:48:58] *** Quits: humberto1 (~humbertow@189.236.8.114) (Ping timeout: 268 seconds)
[11:49:47] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978)
[11:49:47] <stiang> I suppose one workaround would be to just create the comparison timestamp in Elixir, and then pass it to `>` as a value, but it felt cleaner to have Postgres do the interval logic (what with timezone issues and all that stuff)
[11:53:00] *** Joins: humberto1 (~humbertow@189.236.8.114)
[11:53:31] *** Joins: andrhua (~andrhua@31.134.187.8)
[11:54:05] <Nicd> maybe you need `NOW() - INTERVAL ?`
[11:56:29] <stiang> no, it didn’t like that either: https://gist.github.com/stiang/0daf3bf0a95a8c25b5a47007921d13d4
[11:57:33] <Nicd> sad
[11:57:56] <Nicd> I tested on my own db that `select count(p.id) from pulses p where p.sent_at > (now() - interval '24 hours');` works just fine
[11:59:10] <Nicd> can you show what query is generated by the version that complains about the types?
[11:59:12] <stiang> yeah, same here, it’s just frustrating that I can’t figure out how to get Ecto to generate that exact SQL with the `24` part being dynamic. 
[12:00:23] <stiang> sure: https://gist.github.com/stiang/02157beb9adb0001db2a704682adf848
[12:02:21] <stiang> it looks to me like `%Postgrex.Interval{}` doesn’t create the same type of interval as `INTERVAL '24  HOURS'`.
[12:04:37] <Nicd> maybe an explicit typecast is needed like `?::interval`, or for the whole fragment...
[12:05:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:11:01] <stiang> I can’t get that working either. to me it seems like the solution would be to cast `NOW() - <interval>` to `timestamp` (which it really should be by default - I mean, if you subtract an interval from a timestamp, you’d expect the result to be an earlier timestamp), but I can’t figure out how to get that working either.
[12:11:06] *** Joins: notzmv (~zmv@user/notzmv)
[12:11:17] *** Joins: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw)
[12:13:15] <Nicd> probably `type(fragment(...), :timestamp)`
[12:14:52] *** Quits: humberto1 (~humbertow@189.236.8.114) (Ping timeout: 268 seconds)
[12:16:01] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 256 seconds)
[12:17:04] <serafeim> hello friends
[12:17:56] <stiang> Nicd: that gives me `** (UndefinedFunctionError) function :timestamp.type/0 is undefined (module :timestamp is not available)`
[12:18:25] <stiang> oh well, the reason I changed it from `_last24h` to `_last_n_hours` was to be able to use 48 hours instead of 24, so I guess the pragmatic solution would be to just hardcode 48 for now and move on :)
[12:18:43] <Nicd> or just form the timestamp in Elixir
[12:18:49] <stiang> yeah, or that.
[12:18:57] <Nicd> I'm assuming your data is in UTC and as "timestamp without time zone"
[12:19:19] <stiang> yes, I think it should just work in terms of timezones, but I’m never quite sure...
[12:19:38] <Nicd> then there'll be no issue
[12:20:23] <stiang> OK, I’ll go that route for now. thanks for your help, Nicd!
[12:21:23] <Nicd> also assuming it's typed as DateTime in the schema, not NaiveDateTime
[12:26:20] *** Joins: humberto1 (~humbertow@189.236.8.114)
[12:27:21] <serafeim> now that you mention it, any idea why the timestamps() thingie in elixir create  naivedatetimes ?
[12:27:39] <Nicd> backward compatibility
[12:30:09] *** Joins: danirukun (~user@185.68.250.217)
[12:31:31] *** Quits: humberto1 (~humbertow@189.236.8.114) (Ping timeout: 268 seconds)
[12:35:50] <serafeim> is there a way to make it create utc timestamps ?
[12:36:03] <serafeim> i.e `timestamps(naive: false)` ? 
[12:36:48] <Nicd> `timestamps(type: :utc_datetime)`
[12:36:54] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Quit: WeeChat 3.3)
[12:37:09] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[12:37:11] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Client Quit)
[12:37:28] <serafeim> ah great thank you
[12:37:29] <Nicd> the data is actually exactly the same, it just changes the Elixir side type from NaiveDateTime to DateTime (with explicit UTC timezone)
[12:37:31] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[12:37:37] *** Joins: chgr (~ek@nat-91-137-30-14.net.encoline.de)
[12:37:46] <serafeim> Nicd: doesn't it also change the migration  ?
[12:38:03] <Nicd> no because the database type is "timestamp without time zone" for both
[12:38:10] <serafeim> lol ?
[12:38:15] *** Joins: Perry (~perry@coffee-break.at)
[12:38:25] <serafeim> why is it timestamp without timezone for both ? shouldn't it be timestamp *with* timezone ? 
[12:38:35] <serafeim> for the utc_datetiem at least ?
[12:38:55] <Nicd> this is a decision made by the Ecto team to use "timestamp without time zone" by default for all both UTC and naive datetime fields
[12:39:04] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[12:39:05] <Nicd> -all
[12:39:30] <serafeim> yes but why ? 
[12:39:39] <serafeim> what's the purpose ? to have bad data ? 
[12:39:46] <Nicd> the reason is that "timestamp with time zone" in PostgreSQL is misnamed and doesn't store the timezone
[12:40:01] <serafeim> ha ha ha ha ha ha ha ha
[12:40:02] <Nicd> so there are differing opinions on if it should be used
[12:40:33] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:40:42] *** Joins: natrys (~natrys@user/natrys)
[12:41:27] <serafeim> django usees timestamptz for datetimes with timezone
[12:41:42] <Nicd> if you want it, in the migration you can use `:timestamptz` as the type for any field
[12:42:29] <serafeim> the ecto uses by default timestamp(0)
[12:42:56] <serafeim> Nicd: the problem is that i was using :utc_datetime till now and was sure that my data was saved properly
[12:43:15] <Nicd> your data is saved properly
[12:43:16] <serafeim> now i find out that  ecto is destroying my data (!)
[12:43:18] <serafeim> no it ain't
[12:43:47] <serafeim> i want to save a datetime with a +0 timezone. not a naive datetime
[12:43:57] <Nicd> the saved data is the same in PostgreSQL
[12:44:09] <serafeim> Nicd: yes but information is lost
[12:44:42] <Nicd> the information is in your application. if you want to use the database from other applications also, then it should be in your DB, sure
[12:44:58] <serafeim> Nicd: no. the information is in my database. that's the source of truth
[12:45:25] <serafeim> let's suppose that i give my database dump to somebody. how is he supposed to find out the timezone of my datetimes ?
[12:45:50] <Nicd> I agree on one point though, Ecto's helpful types used in migrations such as `:utc_datetime` and `:string` are a mistake. developers should be forced to write out the types so that they are forced to think about them
[12:45:52] <serafeim> i mean i dont' even see a purpose of having utc_datetime since it's naive
[12:46:38] <serafeim> and finally i don'tt like saying it  but since django does it this way then this is the *correct* way to do it and ecto should be fixed
[12:47:13] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de)
[12:47:15] <Nicd> if you give a dump to someone, you would also tell them that they are UTC. Ecto has taken the viewpoint that having the information contained in your source code is acceptable by default and it's not any more "incorrect" than Django's view
[12:47:27] <serafeim> because the consensus in django is 1 000 000 users and developers. in ecto it's just 1 or maybe two.
[12:47:53] <serafeim> Nicd: let's suppose a bus hits me tomorrow. and somebody that does not know any elixir has to use the data. then what ?
[12:47:56] <Nicd> it also avoids the surprising behaviour of "timestamp with time zone" which does not store the timezone and returns different results based on whoever queries the database
[12:48:16] <serafeim> Nicd: why not just use timestamptz ?
[12:48:49] <Nicd> I presume because of the misleading nature of timestamptz and that the data returned from the DB can be different from what you put in
[12:49:34] <Nicd> you can open an issue about it (I think there already are) but I think it's unlikely that it would be changed
[12:49:36] <serafeim> ?
[12:49:56] <serafeim> why would the data returned from the DB different from what you put in when you use timestamptz ? 
[12:50:09] <Nicd> it's returned in the timezone of your SQL connection
[12:50:27] <serafeim> ah. that ain't a problem, the data is correct
[12:50:40] <Nicd> it can be very surprising
[12:50:48] <serafeim> yes if you don't know what you are doing
[12:51:08] <serafeim> but it's *more* suriprising if your application breaks your data
[12:51:18] <Nicd> seems to me you were just arguing with examples where people don't know what they're doing
[12:51:25] <serafeim> lol
[12:51:49] <Nicd> there's really nothing more to say
[12:51:59] <Nicd> if you want timestamptz, you need to use it manually in the migrations
[12:52:16] <serafeim> also, you are not correct that the returned data is different
[12:52:31] <serafeim> i.e : `select created_on from apps_app limit 1` will return `2021-05-26 06:06:20.832 +0300`
[12:52:36] <serafeim> exactly what i put in
[12:53:02] <serafeim> let me ask this as a final comment. what does ror do in this case ? 
[12:53:11] <Nicd> I don't know RoR
[12:53:12] <serafeim> because something tells me that it's also doing the wrong thing. 
[12:53:24] <serafeim> and ecto just copied over the wrong thing from ror
[12:53:59] <serafeim> me neither nor i want to learn it because of the DHH 
[12:54:12] <Nicd> I wonder why you're still using Elixir since Django is so much better
[12:54:27] <serafeim> Nicd: ha ha ha ha ha ha ha i am working at a project that's using elixir
[12:54:35] <serafeim> Nicd: and i think that before some days i praised elixir
[12:54:38] <serafeim> and phoenix
[12:55:03] <serafeim> i can find it if you want
[12:55:07] <serafeim> i am not only ranting
[12:55:36] <serafeim> also i rant about django all the time: the django 4.0 for example could have been 3.2.1, it really has no new features
[12:57:19] <Nicd> maybe you can add a comment here: https://github.com/elixir-ecto/ecto/issues/535 -- but remember that Ecto was also made before Elixir had any datetime types, that might have factored in to the decision
[12:57:41] <Nicd> or you can start work on your own database library
[12:58:31] <serafeim> Nicd: would it be possible at least to use `timestamps(type: :timezonetz)`  ?
[12:58:42] <Nicd> in your migration yes
[12:58:46] <Nicd> as I said
[12:59:05] <serafeim> ok i'll have to keep it in mind to use it in new project
[13:05:01] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 240 seconds)
[13:16:52] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[13:17:57] *** Joins: wolfshappen (~waff@irc.furworks.de)
[13:18:25] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:22:25] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[13:26:37] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[13:56:28] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[14:01:22] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[14:03:13] <whk> aoc this morning broke me a bit and my kids got to school late, because me struggling the finish part two. super eager to see how josevalim solves it. 
[14:16:12] <serafeim> lol
[14:16:32] <serafeim> solving aoc is very problematic after a couple of days
[14:17:33] *** Joins: danirukun (~user@185.68.250.217)
[14:17:37] <serafeim> i have observed that the last days every year need like 2-3 hours or even more
[14:17:54] <serafeim> so it's not possible doing it unless you have nothing else to do
[14:19:29] <serafeim> f.e look at the leaderboard for this day https://adventofcode.com/2019/leaderboard/day/18
[14:20:09] <serafeim> or this https://adventofcode.com/2015/leaderboard/day/22
[14:20:23] <serafeim> so even the top 100 needed like 3 hours to solve this shit
[14:20:58] <serafeim> i intentionally call it shit because i remember that day also: https://adventofcode.com/2015/day/22
[14:21:02] <serafeim> i needed *days* to solve it
[14:29:20] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[14:29:31] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[14:52:31] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[14:55:27] <josevalim> serafeim: django usees timestamptz for datetimes with timezone, you know those are naive + offset?
[14:55:49] <josevalim> which is not the same as a datetime!
[14:57:40] <serafeim> django uses timestamptz when you use a DateTimeField (https://docs.djangoproject.com/en/3.2/ref/models/fields/#django.db.models.DateTimeField) 
[14:58:17] <josevalim> i can't speak about Python's DateTime
[14:58:21] <Nicd> I think the point is that you can't get back the timezone information when reading from the DB
[14:58:35] <Nicd> so it's not the same data even then
[14:58:43] <josevalim> but a DateTime in Elixir is not naive+offset. it is naive+timezone and the timezone bit is very important
[14:59:03] <josevalim> because if you give me a DateTime in the future, i don't actually know if it exists, unless I also have the timezone
[14:59:28] <josevalim> how many countries are in the offset +01:00? do they all observe the same daylight saving time?
[14:59:49] <serafeim> josevalim: hm interesting
[14:59:55] <josevalim> they don't, so there are actually times that exist for one, but not for others!
[15:00:07] <serafeim> yes that's possible
[15:00:46] *** Joins: notapenguin (~ryu@179.222.254.137)
[15:01:20] <josevalim> so the thing is that i don't see the use case behind timestamptz. if it is naive + offset, you can do the offset in elixir land based on the user configuration or settings.
[15:01:56] <Nicd> they should have named it "timestamp with offset conversion" or something
[15:02:14] <josevalim> yeah, or timestamp with offset
[15:03:13] <serafeim> josevalim: that's one point. the fact that the ecto :utc_datetime field saves a naive datetime is a different point. why not save the +00 timezone ?
[15:04:04] *** Joins: danirukun (~user@185.68.250.217)
[15:05:01] *** Quits: notapenguin (~ryu@179.222.254.137) (Ping timeout: 240 seconds)
[15:05:41] <josevalim> go back to the previous answer, why do you want a timestamptz in the first place? :)
[15:05:51] <josevalim> i am almost sure it is configurable though
[15:06:06] <serafeim> josevalim: yes it is
[15:06:10] <josevalim> the default for :utc_datetime is no tz, but you can use :timestamptz and then it will save it
[15:06:19] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[15:06:34] <josevalim> but the biggest issue with timestamptz is that it has a footgun attached to it that i am not sure everyone is aware of
[15:06:42] <josevalim> postgres docs are fantastic though, so they very likely talk about it
[15:06:56] <serafeim> i know. the thing is that i was expecting utc_datetime to actually had a timezone !
[15:07:24] <serafeim> josevalim: what's the footgun attached to the timestamptz ? 
[15:07:52] <serafeim> the thing with daylight saving you mentioned ?
[15:07:56] <josevalim> yes
[15:08:17] <josevalim> they don't store the timezone so they model future dates incorrectly
[15:09:56] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:10:34] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978)
[15:11:13] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 252 seconds)
[15:11:25] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[15:11:58] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:13:00] <serafeim> hm
[15:18:04] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[15:19:09] <josevalim> serafeim: here is another puzzle for you
[15:19:19] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[15:19:28] <serafeim> this is supposed to be working: `update apps_app set created_on = '2020-07-23 14:26:35 Europe/London' where id = 6`
[15:19:51] <josevalim> your user lives in Brazil, you saved all timestamps with offset -03:00, now they moved to Poland (01:00). what do you do?
[15:20:13] <serafeim> won't it also save the Europe/London thingie  to compute daylight savings properly (this answer says yes: https://stackoverflow.com/a/10385972/119071)
[15:21:03] <josevalim> if it does then i  have been terribly wrong :D
[15:21:16] <serafeim> josevalim: nothing i never change my database. the database will still have timestamptz brazil dates and will be converted to his new timezone when he sees them
[15:21:36] <serafeim> if he adds more dates they will have a poland timezone
[15:21:39] <josevalim> serafeim: the response below says it doesn't include the timezone, and that's my understanding
[15:21:55] <josevalim> serafeim: so if you need to convert to the user actual timezone anyway, what is the benefit of storing them in the database?
[15:23:06] <serafeim> josevalim: as opposed to storing only UTC ? i can't think of any real benefit right now but it's some extra data; why lose it ?
[15:23:17] <Nicd> serafeim: it doesn't save any timezone information
[15:23:37] <Nicd> it converts to UTC once using the timezone information and then it's UTC in the DB
[15:23:39] <josevalim> serafeim: the extra data is the offset, which we have established is not particularly useful 
[15:23:44] <Nicd> you can't get back the original timezone
[15:23:52] <josevalim> the offset doesn't really tell you anything
[15:26:04] <serafeim> hm
[15:26:34] <serafeim> ok if you know that it doesn't save the original timezone
[15:27:05] <Nicd> I told you that 3 hours ago :D
[15:29:05] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:32:37] *** Quits: andrhua (~andrhua@31.134.187.8) (Ping timeout: 240 seconds)
[15:37:36] <whk> yeah this morning it took the top 100 20 minutes to solve and I only have 30 minutes in the morning. pity, would be nice if they were all sub 1h problems. 
[15:37:49] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 240 seconds)
[15:38:14] <whk> if only things stayed simple :p 
[15:38:43] <serafeim> some aoc problems are nice but some are worse than working
[15:39:23] <serafeim> i.e does anybody remember this day? https://adventofcode.com/2020/day/4 
[15:39:47] <serafeim> if i wanted to validate user input i'd do it at work
[15:44:00] <whk> yeah, so there are some grindy problems, which is pretty much work. the fun part is seeing other people solve the same problem... but then exercism is better suited. 
[15:46:17] <serafeim> yes i hate these
[16:07:18] *** Quits: antranigv (~antranigv@37.252.95.207) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:34:13] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:35:05] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978)
[16:36:20] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:b108:8b5c:8ab3:a978) (Client Quit)
[16:41:21] *** Quits: duane_ (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[16:44:03] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:44:39] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[16:49:25] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:54:46] *** Joins: danirukun (~user@185.68.250.217)
[16:57:55] *** Quits: esspapier (~esspapier@user/esspapier) (Quit: ZNC 1.8.2 - https://znc.in)
[16:58:16] *** Quits: chgr (~ek@nat-91-137-30-14.net.encoline.de) (Ping timeout: 265 seconds)
[17:00:05] *** Joins: esspapier (~esspapier@user/esspapier)
[17:02:41] *** Joins: antranigv (~antranigv@37.186.118.14)
[17:05:33] *** Quits: antranigv (~antranigv@37.186.118.14) (Client Quit)
[17:17:52] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[17:20:38] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[17:22:13] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[17:23:02] *** Joins: antranigv (~antranigv@37.252.80.91)
[17:29:05] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[17:34:03] *** Quits: hwrd (aa272caead@2604:bf00:561:2000::137) (Remote host closed the connection)
[17:34:04] *** Quits: johnhamelink (3ae947b049@2604:bf00:561:2000::1b) (Remote host closed the connection)
[17:36:14] *** Quits: kuzyn (beea2fef6b@2604:bf00:561:2000::8f) (Remote host closed the connection)
[17:36:14] *** Quits: sjm (5b6c6c128c@2604:bf00:561:2000::9c) (Remote host closed the connection)
[17:36:14] *** Quits: gjnoonan (cb73e0a324@2604:bf00:561:2000::e) (Remote host closed the connection)
[17:36:35] *** Joins: hwrd (aa272caead@2604:bf00:561:2000::137)
[17:36:35] *** Joins: johnhamelink (3ae947b049@2604:bf00:561:2000::1b)
[17:36:35] *** Joins: kuzyn (beea2fef6b@2604:bf00:561:2000::8f)
[17:36:43] *** Joins: sjm (5b6c6c128c@2604:bf00:561:2000::9c)
[17:36:49] *** Joins: gjnoonan (cb73e0a324@2604:bf00:561:2000::e)
[17:42:33] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de)
[17:51:00] *** Quits: antranigv (~antranigv@37.252.80.91) (Quit: Textual IRC Client: www.textualapp.com)
[18:00:51] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[18:03:45] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[18:10:24] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[18:11:26] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:11:59] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[18:41:40] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::5)
[18:45:31] *** Joins: danirukun (~user@185.68.250.217)
[18:50:26] <whk> anyone know if the elixir-companies website is being maintained. I added our company about a month ago and got no feedback and it is not showing. 
[18:51:11] <whk> The website is linked from the elixir website, so thought maybe it would be good to be added as we have 80% elixir in our systems now. 
[19:05:23] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::5) (Ping timeout: 265 seconds)
[19:17:43] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:18:21] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[19:20:59] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 268 seconds)
[19:23:18] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[19:30:45] *** Joins: danirukun (~user@185.68.250.217)
[19:35:01] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 240 seconds)
[19:35:57] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:39:04] <jeregrine> does xref graph not accept a --source? every time I run --source on a module it just seems to silently ignore and do all files
[19:39:21] <jeregrine> (1.12.2) maybe I just need to update
[19:41:30] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[19:43:08] *** Joins: andrhua (~andrhua@31.134.187.8)
[19:44:23] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 252 seconds)
[19:44:53] *** Quits: andrhua (~andrhua@31.134.187.8) (Remote host closed the connection)
[19:45:42] *** Joins: andrhua (~andrhua@31.134.187.8)
[19:56:23] *** Joins: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net)
[19:58:50] *** Joins: phaleth (~phaleth@user/phaleth)
[20:18:40] *** Joins: danirukun (~user@185.68.250.217)
[20:19:51] *** Joins: Snyp (~Snyp@49.207.209.233)
[20:24:46] *** Joins: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw)
[20:34:08] <jeregrine> or I misunderstand whats its doing
[20:34:56] *** Quits: Snyp (~Snyp@49.207.209.233) (Quit: Textual IRC Client: www.textualapp.com)
[20:40:59] *** Joins: withersh1 (~craig@pa49-184-233-226.pa.vic.optusnet.com.au)
[20:41:25] *** Quits: withershins (~craig@pa49-184-231-51.pa.vic.optusnet.com.au) (Ping timeout: 240 seconds)
[20:48:50] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de)
[20:56:30] <josevalim> for those who are interested, twitch.com/josevalim starting in 3 :)
[20:56:47] <josevalim> advent of code day 7 with elixir and livebook
[21:10:19] <azazel> josevalim: nice, thanks!
[21:25:32] *** Joins: mgibowski (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net)
[21:26:17] *** Joins: mgibowsk_ (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net)
[21:29:59] *** Quits: mgibowski (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[21:29:59] *** Quits: drewlander (~drewlande@74.196.20.3) (Ping timeout: 252 seconds)
[21:32:45] *** Joins: humberto1 (~humbertow@189.236.8.114)
[21:38:03] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 252 seconds)
[21:40:59] <serafeim> hello friends
[21:41:20] <serafeim> let's suppose i want to use the :httpc erlang lib from a phoenix project
[21:41:54] <serafeim> am i supposed to run `:inets.start() and :ssl.start()` before issuing the http requests ? if yes where should i put these cmds ? 
[21:42:05] <serafeim> if not could you clarify why i don't need to run them ? 
[21:55:41] <jeregrine> @serafeim you can add them to your applications list so they start when the application starts
[21:57:51] *** Quits: termos (sid18647@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: joedevivo (sid16225@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: gmc_ (sid58314@ilkley.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: stiang (sid245441@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:58:16] *** Quits: ryanwinchester (sid147626@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[21:58:43] *** Quits: adamkittelson (sid82542@tinside.irccloud.com) (Read error: Connection reset by peer)
[21:58:44] *** Quits: hmans (sid565@user/hmans) (Read error: Connection reset by peer)
[21:58:44] *** Quits: nox (sid3872@uxbridge.irccloud.com) (Read error: Connection reset by peer)
[21:59:03] *** Joins: stiang (sid245441@id-245441.helmsley.irccloud.com)
[21:59:08] *** Joins: ryanwinchester (sid147626@id-147626.uxbridge.irccloud.com)
[21:59:08] *** Joins: gmc_ (sid58314@id-58314.ilkley.irccloud.com)
[21:59:13] *** Joins: termos (sid18647@id-18647.helmsley.irccloud.com)
[21:59:17] *** Joins: joedevivo (sid16225@id-16225.tinside.irccloud.com)
[21:59:18] *** Joins: nox (sid3872@id-3872.uxbridge.irccloud.com)
[21:59:18] *** Joins: adamkittelson (sid82542@id-82542.tinside.irccloud.com)
[21:59:22] *** Joins: hmans (sid565@user/hmans)
[22:00:19] *** gmc_ is now known as gmc
[22:00:20] *** Quits: mgibowsk_ (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net) (Remote host closed the connection)
[22:00:54] *** Joins: mgibowski (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net)
[22:02:17] <serafeim> jeregrine: no unfortunately it doesn't work like this
[22:02:22] <serafeim>  ** (ArgumentError) The module :inets was given as a child to a supervisor
[22:02:24] <serafeim> but it does not implement child_spec/1.
[22:02:31] <serafeim> ah
[22:02:32] <serafeim> wait
[22:02:57] <serafeim> yes you are right
[22:03:04] <serafeim> i added it to the children by mistake 
[22:03:07] <serafeim> it seems fine now
[22:03:11] <jeregrine> hehe been there!
[22:03:33] <serafeim> thanks
[22:03:57] <serafeim> however now i get another problem when i call `:httpc.request(:get, {String.to_charlist(url), []}, [], [stream: 'foo.jpg'])`
[22:04:15] <serafeim> `[warn] Description: 'Authenticity is not established by certificate path validation'      Reason: 'Option {verify, verify_peer} and cacertfile/cacerts is missing'`
[22:04:17] <serafeim> any idea ?
[22:04:54] <serafeim> seems like a common problem but i didn't find any good solution (people are just recommending to use httppoison
[22:05:01] *** Quits: mgibowski (~mgibowski@52.red-83-43-244.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[22:06:20] <serafeim> i don't want to use httpoison 
[22:08:30] <jeregrine> @serafeim the main issue is that httpc doesn't do full ssl validation for https, which is why most recomend any other lib :P https://www.erlang.org/doc/man/httpc.html
[22:09:07] <serafeim> oh so that's a more or less non-solvable problem
[22:10:22] *** Quits: yauhsien (~yauhsien@61-231-32-247.dynamic-ip.hinet.net) (Remote host closed the connection)
[22:12:29] <phaleth> serafeim: use mint?
[22:12:44] <serafeim> what's that? i'll just use httpoison i guess
[22:12:56] <phaleth> https://github.com/elixir-mint/mint
[22:13:07] <serafeim> i wanted to avoid the dependency but i understand that it ain't really possible
[22:13:29] <serafeim> thanks i didn't know about mint
[22:14:31] *** Quits: sorentwo (sid39488@id-39488.tinside.irccloud.com) (Ping timeout: 245 seconds)
[22:16:59] *** Joins: sorentwo (sid39488@id-39488.tinside.irccloud.com)
[22:21:44] <jeregrine> lots of new elixir based libraries these days
[22:32:19] <benwilson512> I think Finch is supposed to be the easy to use version of mint
[22:40:23] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[22:41:50] *** Joins: mahmutov (~mahmutov@5.176.31.136)
[22:53:58] *** Joins: danirukun (~user@185.68.250.217)
[23:00:57] *** Joins: Guest-distorteds (~Guest-dis@2600:1700:38d4:220:29ea:5738:1d04:cda)
[23:08:58] *** Joins: drewlander (~drewlande@74.196.20.3)
[23:08:58] <Guest-distorteds> Maybe off-topic, and if so, I apologize, but the Phoenix framework community page (https://hexdocs.pm/phoenix/community.html) says that a lot of Phoenix people hang out here. I'm trying to get started with Phoenix, but I'm running into an issue that I'm sure is my fault. I'm trying to get the hello world project started, and I'm running into an
[23:08:58] <Guest-distorteds> error. I've been able to install elixir and phoenix as far as I can tell (elixir -v responds with 1.12.2 and mix phx.new hello writes _a lot_ of text to the screen), but when I try to do mix ecto.create, I get an error where it looks like postgres (hereafter PSQL) can't be contacted. When I do `ss -tulpn`, I can see that PSQL isn't listening on the
[23:08:59] <Guest-distorteds> port that Phoenix is expecting to find a listening port. I'm curious if I missed a step where I need to start a PSQL daemon, or if ecto.create should be doing that.
[23:09:34] <Guest-distorteds> For reference, I'm trying to follow this page: https://hexdocs.pm/phoenix/up_and_running.html
[23:12:55] <damjan> the previous page is https://hexdocs.pm/phoenix/installation.html and it mentions postgresql several times
[23:12:56] <sepow> You can change the postgres connection settings in config/dev.ex 
[23:13:24] <sepow> Ah, if you've got it running that is. Need postgresql running somewhere yeah
[23:14:21] <Guest-distorteds> Yeah, I think the issue that I'm running (ha!) into is that the package is downloaded, but dormant.
[23:14:26] <Guest-distorteds> There needs to be a server.
[23:14:39] <Guest-distorteds> Mark as PICNIC issue, closed.
[23:24:00] <Guest-distorteds> Thanks to you helpful people: "mix ecto.create
[23:24:01] <Guest-distorteds> The database for Hello.Repo has been created"
[23:24:11] <Guest-distorteds> So thanks again!
[23:24:14] <sepow> yay!
[23:24:15] <whk> nice! not the fun start :) 
[23:24:19] <whk> *now
[23:24:21] <sepow> Enjoy phoenix :)
[23:24:44] <Guest-distorteds> If the framework is half as good as the community, it's going to be great.
[23:26:06] <whk> we tried out phoenix just over a year ago and now have 6 services in production and could not be happier
[23:27:16] *** Joins: Guest97 (~Guest97@47.148.13.53)
[23:27:43] *** Quits: Guest97 (~Guest97@47.148.13.53) (Client Quit)
[23:28:40] *** Quits: danirukun (~user@185.68.250.217) (Ping timeout: 256 seconds)
[23:29:09] *** Quits: sinni800 (~quassel@2a00:1ca8:ae::b0) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:31:15] *** Joins: sinni800 (~quassel@2a00:1ca8:ae::b0)
[23:36:33] *** Joins: Poeticode4 (~Poeticode@user/poeticode)
[23:38:04] *** Joins: acro_ (~acro@user/acro)
[23:39:34] *** Quits: Poeticode (~Poeticode@user/poeticode) (Killed (NickServ (GHOST command used by Poeticode4)))
[23:39:35] *** Poeticode4 is now known as Poeticode
[23:40:42] *** Joins: Ankhers_ (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[23:44:30] *** Quits: acro (~acro@user/acro) (Quit: Bye.)
[23:44:30] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[23:44:30] *** Quits: andersju1 (~andersju@fnord.unix.se) (Ping timeout: 260 seconds)
[23:44:30] *** Quits: picasso (mike@potbox.pixor.net) (Ping timeout: 260 seconds)
[23:44:31] *** acro_ is now known as acro
[23:44:31] *** Ankhers_ is now known as Ankhers
[23:50:32] *** Joins: picasso (mike@potbox.pixor.net)
[23:51:19] *** Joins: andersju1 (~andersju@fnord.unix.se)
[23:59:12] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
