[00:12:21] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:15:18] *** Quits: nlhowell1 (~nlhowell@172.58.87.57) (Read error: Connection reset by peer)
[00:15:48] *** Joins: nlhowell1 (~nlhowell@172.58.84.0)
[00:28:02] *** Quits: nlhowell1 (~nlhowell@172.58.84.0) (Ping timeout: 256 seconds)
[00:43:24] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785)
[02:09:03] <atrus> is there a way to get notmuch's emacs mode to tell me the current query it's using? Say if i started with a search, and then progressively added filters, and then want to know "What am I searching for exactly now?"
[02:10:31] <atrus> i see the query in the buffer/name/status-bar/modeline thing, but it's cut off, and isn't really copyable
[02:27:38] <jao> atrus, there's a variable called notmuch-query-string that has it
[02:28:50] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:30:39] <jao> sorry, notmuch-search-query-string...
[02:30:40] <jao> (defun atrus-copy-query () (interactive) (kill-new notmuch-search-query-string))
[02:40:24] *** Joins: nlhowell1 (~nlhowell@172.58.87.109)
[03:29:49] *** Joins: gour_ (~gour@77.237.114.18)
[03:32:41] *** Quits: gour (~gour@77.237.114.18) (Ping timeout: 268 seconds)
[03:59:15] *** Quits: gour_ (~gour@77.237.114.18) (Remote host closed the connection)
[04:11:40] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:30:46] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785)
[05:00:56] *** Quits: cworth (~cworth@arlo.cworth.org) (Ping timeout: 250 seconds)
[05:05:42] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[05:14:05] *** Joins: cworth (~cworth@arlo.cworth.org)
[05:30:57] *** Quits: nlhowell1 (~nlhowell@172.58.87.109) (Ping timeout: 240 seconds)
[05:32:40] *** Joins: nlhowell1 (~nlhowell@172.58.87.109)
[05:47:58] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:21:22] *** Joins: rgrinberg (~textual@2806:101e:7:2b:5145:ccdc:bee1:d769)
[07:38:53] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[09:30:24] <cworth> atrus and jao: I can do you one better. There's a function notmuch-stash-query that does that, and by default it is made available under the binding of "c q" (for "copy query"). See also "c i" to copy the ID of the thread under the current point. (And when viewing a message, there are many more things you can copy. Use "c ?" to see the full list.)
[09:32:45] <jao> cworth, right! i forgot about stashes, thanks for the refresher
[09:32:57] <cworth> My pleasure!
[09:56:58] *** Quits: nlhowell1 (~nlhowell@172.58.87.109) (Ping timeout: 256 seconds)
[09:58:57] *** Joins: nlhowell1 (~nlhowell@172.58.87.109)
[10:20:48] *** Quits: rgrinberg (~textual@2806:101e:7:2b:5145:ccdc:bee1:d769) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:21:09] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:07:41] *** Joins: fnstudio (~test@user/fnstudio)
[12:41:41] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[14:17:37] <inwit> cworth: Would that stashing scheme work for storing the last applied tag change? I'm not at all fluent in lisp, but this is something I've been thinking about: it'd be nice to be able to re-apply the last tag change with `.`.
[14:22:08] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[14:28:22] <bremner> inwit: the usual answer to that kind of request is to use the history, so + <up-arrow>; does that work for you?
[14:30:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[14:35:58] <inwit> It does. And I can also use M-r to access history of multiple tag changes. However, I find myself sometimes having to archive (aka tag and move to corresponding folder) several (but not all) messages in a thread. It'd be swell to just use one key for that.
[14:37:54] <bremner> makes sense. stashing is more about making information available outside notmuch-emacs
[14:38:38] <inwit> I see. I guess I'd have to store the last tag change in a sort of Â¿global? variable. I'm fairly illiterate in emacs development, as I said.
[14:40:02] <bremner> yeah. there is a notion of "buffer-local" variables in elisp that works for program-global but buffer-local values
[14:40:15] <bremner> you might be able to re-use the existing history, I'm not sure
[14:51:18] <inwit> What do you mean by "existing history"? A sort of notmuch's device to store other interactions, besides tags?
[14:52:32] <bremner> inwit: the emacs variable that <up-arrow> is using
[14:54:56] <inwit> bremner: I see. Maybe Selectrum could play a role in that, then. I know there's a selectrum-repeat thing.
[15:05:53] <bremner> notmuch-read-tag-changes-history is the variable, I think
[15:09:44] <inwit> I was coming close, I was inspecting notmuch-show-stash-tags.
[15:10:58] <inwit> That's great, notmuch-read-tag-changes-history is the one. So I could just grab the first element from that variable in order to repeat the tagging.
[15:11:59] <inwit> I'd then need a function which calls notmuch-tag with that first element.
[15:12:23] <inwit> Am I on track here?
[15:14:27] <bremner> yeah. You can probably re-use notmuch-show-tag
[15:15:55] <inwit> I would probably go for notmuch-tree-tag, instead, since normally I travel a thread and tag several messages in it.
[15:16:52] <inwit> Is it worthed to look into a general notmuch-repeat-tag function, or should I go for a personal hack?
[15:17:16] <inwit> Well, probably I should start with the later.
[15:17:34] <inwit> :)
[15:17:43] <bremner> right, and then pass to the mailing list to see if people in general think it's worth cleaning up
[15:18:35] <inwit> Cool. Thank you so much for the guidance.
[15:20:07] <bremner> welcome to the development team :)
[15:21:37] <inwit> Heheh... hold it, I'm in no way a developer. :D I'd probably need to start somewhere where I can wrap my head around prefix notation, first, and elisp, second.
[15:22:20] <bremner> yeah, I'm mostly kidding. But one of the cool features of emacs is that everyone can extend the system as they like.
[15:23:26] <inwit> That's great indeed. And, on top of that, having a community like notmuch's is a treasure. Keep it up!!
[16:19:27] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:25:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[16:47:53] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:55:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[17:09:31] *** dob1_ is now known as dob1
[17:35:24] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:45:25] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[18:27:46] *** Joins: gast0n (~g4570n@user/gast0n)
[18:35:41] *** Joins: seschwar (~seschwar@user/seschwar)
[18:43:01] <cworth> inwit It's great you found a way to explore adding the functionality you want. And you will have to watch out for "I'm in no way a developer". Fortunately, we don't hold it against people if they make claims like that that don't hold true for long.
[19:03:43] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:12:07] *** Joins: rgrinberg (~textual@2806:101e:7:2b:5145:ccdc:bee1:d769)
[19:25:53] *** Quits: spoofer (~spoofer@64.185.111.205) (Quit: Lost terminal)
[19:27:43] <inwit> I've created this function:
[19:28:03] <inwit>   (defun inwit/notmuch-tree-repeat-tag ()     "Repeat the last tagging operation"     (notmuch-tree-tag (car notmuch-read-tag-changes-history)))
[19:28:39] <bremner> I guess it will crash if there is no previous tag operation?
[19:28:57] <inwit> I've bound it to `.` and I just get "command-execute: Wrong type argument: commandp, inwit/notmuch-repeat-tag"
[19:29:28] <inwit> bremner: That might very well be, but for the moment I tried it after a recent tag operation.
[19:30:07] <bremner> '.' is already bound in notmuch-show-mode. But that's not the cause of your message; you need an (interactive) form
[19:30:29] <bremner> for now, just add (interactive) to the start of your function
[19:30:40] *** Joins: spoofer (~spoofer@64.185.111.205)
[19:32:53] <inwit> I was doubting if I needed it or not. I now have it. The result is a new error, but it feels I'm close: "notmuch-tree-tag: Wrong type argument: listp, "+tag1 +tag2""
[19:33:16] <inwit> Can it be that the quoting is wrongly interpreted?
[19:35:08] <inwit> I mean, in the list of notmuch-read-tag-changes-history, tag changes are quoted. I believe notmuch-tree-tag wants the tags without quotes.
[19:36:17] <bremner> ah, no it has something to do with whether the string is split into a list of strings. Probably there is a function that does that already
[19:36:24] <bremner> or at least a piece of code you can steal
[19:37:13] <inwit> You mean notmuch-tree-tag needs a list of strings?
[19:38:03] <bremner> see the docstring of notmuch-show-tag (and notmuch-tag)
[19:40:13] <inwit> Cool. I see.
[19:40:26] <inwit> TAG-CHANGES is a list of strings of the form "+tag" or "-tag" to add or remove tags, respectively.
[19:40:34] <inwit> Off I go.
[19:45:38] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (Read error: Connection reset by peer)
[19:47:05] <inwit> I got it!!! Oh, I'm quite happy!! Thank you, David!! :D
[19:47:29] <inwit> I'll send a message to the list in case anyone else is interested.
[19:48:20] <bremner> sounds good. BTW check devel/emacs-keybindings.org for keybindings already present
[19:48:43] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[19:51:51] <inwit> Will do. I didn't know that file. Very interesting. However, in Evil things change a bit. In any case my preferred `.` binding is available in tree-mode.
[19:52:50] <bremner> Yeah, I don't know who manages the evil keybindings, it's not in our repo
[19:54:57] *** Quits: nlhowell1 (~nlhowell@172.58.87.109) (Ping timeout: 240 seconds)
[19:59:33] <inwit> No-one does, I'm afraid. I believe I'm fairly alone in the intersection of the notmuch and evil users sets.
[20:00:28] <bremner> If I understand correctly those things are usually managed by spacemacs / doom ?
[20:02:46] <inwit> Yeah, not necessarily but frequently yes. You could install Evil in vanilla emacs, I believe.
[20:04:01] <inwit> I use spacemacs and I haven't found anyone else around. There's a notmuch layer but is not active (the last commit is mine). I tried to reach who started it, with no luck.
[20:09:54] <bremner> a separate inquiry on the mailing list might find more evil-mode users.
[20:12:08] <inwit> True. I'll do that.
[20:13:59] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:18:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:19:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:5145:ccdc:bee1:d769) (Ping timeout: 240 seconds)
[20:27:22] *** Joins: nlhowell1 (~nlhowell@172.58.87.109)
[20:28:55] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[20:32:40] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: ...)
[20:32:58] *** Joins: nyah (~nyah@94.6.71.219)
[20:33:39] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[21:04:53] *** Quits: nlhowell1 (~nlhowell@172.58.87.109) (Read error: Connection reset by peer)
[21:05:13] *** Joins: nlhowell1 (~nlhowell@172.58.87.77)
[21:07:07] *** Quits: nlhowell1 (~nlhowell@172.58.87.77) (Client Quit)
[21:07:25] *** Joins: nlhowell (~nlhowell@172.58.87.77)
[21:13:56] *** Joins: rgrinberg (~textual@2806:101e:7:2b:35cd:febc:a65a:3a4f)
[21:18:40] <anarcat> how can i tell what is firing when an attachment gets rendered?
[21:18:58] <anarcat> for example here the .ics files get rendered somehow, which is nice, but i'd like to fixup the displayed time so they tell me wtf the timezone is
[21:19:11] <anarcat> e.g. here it says "1/25/2022 13:00-14:00 Meeting with foo"
[21:19:29] <anarcat> which is, i think, local time, but i never remember and always have to double-check
[21:19:33] <anarcat> and what's up with that date
[21:20:18] <anarcat> https://xkcd.com/1179/
[21:22:02] <bremner> we delegate most of that stuff to gnus. You can look at the variables starting mm-inline-*
[21:24:45] <bremner> anarcat: what's the mime type of a .ics file?
[21:25:26] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[21:25:51] <bremner> we do have some stuff for x-vcalendar and text/calendar in notmuch-show.el
[21:27:21] <anarcat> [ event.ics: text/calendar ]
[21:27:49] <anarcat> okay, so mm-inlined-types includes text/*
[21:28:28] <bremner> OK, you want notmuch-show-insert-part-text/calendar
[21:29:58] <anarcat> icalendar-import-buffer ?
[21:30:14] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[21:30:53] <bremner> yeah, I guess that does the actual work
[21:40:10] <cworth> inwit: Congratulations! I'm glad you got something working the way you want.
[21:42:40] <cworth> I don't know if elisp is my very favorite development environment, but I do love how available it is inside the world of my text editor, and how self-documenting it is, (that it's _so_ easy to dive in and say "Let me see how this piece works"). There's a level of introspection and hackability there that I really wish were available in more places. (Contrast with modern web applications, where the client-side _would_ have a similar benefit except for comp
[21:42:40] <cworth> ression/obfuscation and the server side is  entirely hidden.)
[21:48:45] <inwit> cworth: Agreed. If only elisp had infix notation... :-D
[21:57:49] <cworth> Yeah, there's definitely a bit of a hurdle to get over with the notation!
[22:07:09] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[22:07:32] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[22:21:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[22:27:47] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:33:25] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[22:33:37] <anarcat> thanks bremner
[22:35:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:37:43] *** Joins: seschwar (~seschwar@user/seschwar)
[22:38:54] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:40:42] <anarcat> bremner: it looks like that function adds the event to the calendar, i can't find where it actually does the display
[22:42:05] <anarcat> nevermind, it *is* where the stuff happens
[22:48:03] <anarcat> oh god finally found it
[22:48:09] <anarcat> (setq calendar-date-style 'iso)
[22:48:20] <anarcat> why on earth is that default "american"
[22:48:28] <anarcat> i guess the answer is "america fuck yeah"
[22:50:29] <bremner> GNU is 'murrican
[22:50:31] * bremner hides
[22:51:43] <anarcat> incredibly, this fixes only part of my problem
[22:51:56] <anarcat> diary-lib.el is ... intersting
[22:56:25] <anarcat> well shit
[22:59:24] <anarcat> i think to include the timezone in the output, i'd need to monkeypatch icalendar--convert-ical-to-diary in icalendar.el, which is a 166 line function
[22:59:38] <anarcat> i think i am wasting my time, and i just need to trust emacs that it does the right thing
[22:59:43] <anarcat> which is, presumably, show me local time
[23:05:52] <jao> hmmm, maybe there's a simple way of doing this that i'm missing: for multipart/alternative messages, notmuch-show is preferring by default the html part over the text part when both are present (i.e., it shows the former and hides the latter).  is there a simple way to reverse this behaviour?
[23:06:15] <jao> (i mean text/html vs text/plain)
[23:07:22] <bremner> what is the value of notmuch-multipart/alternative-discouraged?
[23:07:42] <inwit> I have this: `  (setq notmuch-multipart/alternative-discouraged '("text/plain" "text/html"))`
[23:08:33] <anarcat> well, it's not that bad
[23:08:55] <jao> aha! ("text/html" "multipart/related") for me
[23:09:10] <jao> that's the variable i was looking for, thanks!
[23:10:41] <jao> although the name puzzles me a little
[23:10:46] <bremner> hmm. I would think the default would do what you want?
[23:10:53] <jao> it doesn't
[23:11:45] <anarcat> bremner: the magic was https://paste.anarc.at/publish/2022-01-20-zdi4ccAEgrVobCQKVUuZA_DIEmKaaKiVqCZbSu7dnkk/icalendar.el.diff and (setq calendar-date-style 'iso)
[23:11:53] <anarcat> now where on earth do i send that patch
[23:11:54] <jao> bremner, actually, changing it to inwit's value makes no difference
[23:12:29] <bremner> anarcat: emacs-devel?
[23:12:31] <inwit> Now I'm puzzled.
[23:12:47] <anarcat> bremner: what is that?
[23:12:48] <jao> maybe i'm doing something too clever somewhere in my config
[23:12:54] <bremner> anarcat: a mailing list
[23:13:00] <anarcat> bremner: open?
[23:13:20] <bremner> I guess? dunno. I usually file bugs with report-emacs-bug
[23:13:32] <anarcat> bremner: thanks
[23:15:02] <anarcat> bremner: should i keep the 1300 lines of debugging below?
[23:16:43] <bremner> you mean the gunk that report-emacs-bug adds? Sure, I'd just leave it
[23:16:59] <bremner> I mean, it's not your fault, is it?
[23:22:59] <anarcat> i start from the premise that everything is my fault and work backwards
[23:26:36] <jao> bremner, you're right, the default does what i want (i was messing things up on my side)
[23:28:20] <bremner> jao: ah OK. Feel free send doc patches if you think something could be clearer
[23:29:29] <anarcat> done
[23:29:36] <anarcat> now what was i even doing
[23:29:43] <bremner> taxes?
[23:30:36] <anarcat> that would almost be fun compared to that elisp journey
