[00:08:07] <federico3> https://scattered-thoughts.net/writing/how-safe-is-zig/ should we have a table like this on the wiki?
[00:17:13] <FromDiscord> <theangryepicbanana> ok so I think I finally nailed down the cause of my generics issues https://play.nim-lang.org/#ix=3vi0
[00:21:27] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 276 seconds)
[00:23:52] <FromDiscord> <Ayy Lmao> What is the proper way to get the compiler to search for c headers somewhere specific? I've been trying to get `--cincludes` to work but haven't had any luck.
[00:28:18] <FromDiscord> <haxscramper> does `-passc:-I`  work?
[00:33:38] <FromDiscord> <⃟⃟> can someone clarify object and ref object
[00:33:41] <FromDiscord> <⃟⃟> like
[00:33:47] <FromDiscord> <⃟⃟> why use ref object
[00:36:27] <FromDiscord> <Ayy Lmao> In reply to @haxscramper "does `-passc:-I`  work?": It seems to still not know where the header is. To give context, I'm messing around with glfw and I'm wondering how to be able to do something like `proc glfwInit: cint {.importc, header: "glfw3.h".}`, where I can just put the header name instead of some huge relative directory.
[00:36:42] <FromDiscord> <haxscramper> In reply to @⃟⃟ "can someone clarify object": `object` - can be on heap or on stack. `ref object` - always allocated on heap
[00:36:54] <FromDiscord> <haxscramper> `seq[object]` will be continious in memory
[00:37:23] <FromDiscord> <haxscramper> potentially expensive to copy, cache-friendly to iterate over
[00:37:23] <FromDiscord> <⃟⃟> whats a use case for `ref object`
[00:37:31] <FromDiscord> <haxscramper> `seq[ref object]` would be allocated on heap in chunks
[00:37:42] <FromDiscord> <haxscramper> cheap to copy, not really cache-firendly to iterate
[00:37:55] <FromDiscord> <⃟⃟> so basically in this language if something is on heap or stack is decided in the type?
[00:38:01] <FromDiscord> <haxscramper> no
[00:38:07] <FromDiscord> <haxscramper> not alywas
[00:38:10] <FromDiscord> <⃟⃟> like in c++ you would have object and object if you dont want copy
[00:38:23] <FromDiscord> <haxscramper> `ref object` is a just a shorthand for putting `ref` everywher
[00:38:36] <FromDiscord> <haxscramper> In C++ you have `object` only
[00:38:51] <FromDiscord> <haxscramper> so if you want to say ref you do `object` each time you use it
[00:39:00] <FromDiscord> <haxscramper> even if you onlyuse it as a ref
[00:39:09] <FromDiscord> <⃟⃟> oh ok i understand now
[00:39:23] <FromDiscord> <⃟⃟> so its just a syntax thing basically
[00:39:27] <FromDiscord> <haxscramper> in nim you can say `ref object` in type definition it would work as if you said `ref object` in each use place
[00:39:43] <FromDiscord> <haxscramper> In reply to @⃟⃟ "so its just a": syntax sugar, yes
[01:14:09] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[01:15:33] *** Joins: jkl (~jkl@user/jkl)
[01:21:19] *** Joins: jkl1337 (~jkl@user/jkl)
[01:23:26] *** Quits: jkl (~jkl@user/jkl) (Ping timeout: 256 seconds)
[01:46:00] <FromDiscord> <⃟⃟> what does `stdin.lines` do
[01:46:09] <FromDiscord> <⃟⃟> is it a function call?
[01:46:31] <FromDiscord> <Elegantbeef> Context matters in a for loop it's an iterator outside of it it's a procedure call afaik
[01:47:26] <FromDiscord> <Elegantbeef> Actually never mind there is no procedure version
[01:48:46] <FromDiscord> <Elegantbeef> So it's an inline iterator, which means it can only be used in a for loop
[02:16:42] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
[02:32:35] *** Quits: max22- (~maxime@2a01cb08833598001772b37904af0be9.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:08:23] <FromDiscord> <ynfle (ynfle)> There is `splitlines` though
[04:17:13] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:23:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:24:29] *** Joins: flynn (~mcbloch@user/flynn)
[05:33:31] <FromDiscord> <undersquire> there's gotta be a cleaner way of working with object variants in nim
[05:33:52] <FromDiscord> <undersquire> no way the code I just wrote is the best way
[05:34:05] <nrds> <06Prestige99> Can you link an example?
[05:34:18] <FromDiscord> <undersquire> yes one sec
[05:34:20] <nrds> <06Prestige99> I agree though, it isn't very ergonmic
[05:34:24] <FromDiscord> <undersquire> https://github.com/jet-lang/rocket/blob/main/src/rocket/value.nim
[05:34:29] <FromDiscord> <undersquire> this is a pain
[05:34:34] <FromDiscord> <undersquire> no way this is how ur suppose to do this
[05:35:32] <FromDiscord> <undersquire> is there a way of doing this with generics or something?
[05:36:24] <nrds> <06Prestige99> Maybe with a macro? I'm not sure. Maybe Elegantbeef would know
[05:36:56] <FromDiscord> <undersquire> cause there is no way my code there is the proper way of implementing that lol
[05:37:11] <FromDiscord> <undersquire> it feels way to overkill
[05:37:14] <FromDiscord> <undersquire> idk
[05:38:15] <FromDiscord> <TechnoRazor> I'm starting to use nimgl (https://github.com/nimgl/nimgl) and noticed it takes longer to compile than I would like (over 10 seconds). Is there a way to load nimgl dynamically? If so, would it significantly improve the compile-time of my program?
[05:38:23] <FromDiscord> <undersquire> In reply to @nrds "<Prestige> Maybe with a": maybe a macro, but i feel like that would make it more complex
[05:41:03] <FromDiscord> <Elegantbeef> I mean you can use a macro for that and i've got one that could help but i dont really like the API so much so tend to not whore it out https://github.com/jet-lang/rocket/blob/main/src/rocket/value.nim
[05:41:18] <FromDiscord> <Elegantbeef> Sometimes it helps if you copy links properly
[05:41:48] <FromDiscord> <undersquire> idk why it didnt copy the link right lol
[05:42:01] <FromDiscord> <Elegantbeef> I mean i didnt \:D
[05:42:02] <FromDiscord> <undersquire> so the way im doing it is fine then? (disregarding macros)
[05:42:37] <FromDiscord> <Elegantbeef> Well we might be able to clean it up without macros
[05:42:49] <FromDiscord> <Elegantbeef> Gotta get off this unusable WM to actually see if i can help
[05:42:55] <FromDiscord> <undersquire> lmfao
[05:43:22] <FromDiscord> <undersquire> i wish u could use generics in objects
[05:43:33] <FromDiscord> <undersquire> i mean being able to use them in the way im using them
[06:03:52] <FromDiscord> <Elegantbeef> Well if you want to take a look at a manually made unpack method https://play.nim-lang.org/#ix=3vj6
[06:04:56] <FromDiscord> <undersquire> Oh nice that is a lot cleaner
[06:05:36] <FromDiscord> <undersquire> ty lol ill play around with that
[06:27:06] <nrds> <06Prestige99> neat
[06:29:34] <FromDiscord> <undersquire> In reply to @Elegantbeef "Well if you want": ty lol this really worked well
[06:30:18] <FromDiscord> <Elegantbeef> Good
[06:32:14] <FromDiscord> <Elegantbeef> prestige i've got multi monitor support working! \:D
[06:32:23] <FromDiscord> <Elegantbeef> But oh boy are there bugs
[06:32:35] <FromDiscord> <Elegantbeef> But ehhh https://streamable.com/o5axrw
[06:33:25] <nrds> <06Prestige99> nice!
[06:35:11] <FromDiscord> <Elegantbeef> Think there are some issues with gnome/electron apps so that's fun
[06:35:42] <FromDiscord> <Elegantbeef> Have 0 atoms enabled presently which i assume is one reason it's odd
[06:36:13] <nrds> <06Prestige99> yeah that could be an issue
[06:39:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> maybe I've just been up to late, but shouldn't this work?↵↵type Cursor\ = tuple[line\_no, col\_no, byte\_index\: uint]↵echo Cursor(line\_no\: 2, col\_no\: 3, byte\_index\: 29)
[06:39:43] <FromDiscord> <Elegantbeef> Tuples dont use object constructors
[06:42:36] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3vjf
[06:42:46] <FromDiscord> <Elegantbeef> Those are how you'd make a cursor tuple, though i'd argue it's silly to use a named tuple
[06:44:29] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[06:49:05] <FromDiscord> <theangryepicbanana> I like using named tuples for return types
[06:49:38] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:50:10] <FromDiscord> <Elegantbeef> Well that's more fine since it's not a concrete type that can be abused 😀
[06:51:10] <FromDiscord> <Elegantbeef> Having a type def for named tuples just is weird to me, sure you get unpacking but anyone joe schmoe can easily and accidentally create a replica that fits the bill
[06:53:10] <FromDiscord> <Elegantbeef> Purely depends on how you use it, so just ignore me as normal
[07:11:48] <FromDiscord> <theangryepicbanana> I think named tuples as return types would be nicer if we could use the "named" part in tuple destructuring
[07:12:16] <FromDiscord> <theangryepicbanana> like `let (a: int, b: string) = ...` or something that maps the label names to the variables
[07:16:37] <FromDiscord> <Elegantbeef> you mean `a: lineNo` for instance?
[07:18:58] <FromDiscord> <theangryepicbanana> yeah kinda
[07:19:06] <FromDiscord> <theangryepicbanana> similar to how you can destructure objects in js for example
[07:23:09] <FromDiscord> <Elegantbeef> \insert macro comment here
[07:31:19] <FromDiscord> <theangryepicbanana> ew
[07:31:32] <FromDiscord> <theangryepicbanana> would be nice to allow it in let/var decls
[07:31:47] <FromDiscord> <Elegantbeef> It would be, but that requires having to restructure those
[07:35:05] <FromDiscord> <theangryepicbanana> would it be a breaking change though?
[07:35:06] <FromDiscord> <Rika> In reply to @haxscramper "In C++ you have": `using RefObj = Obj`?
[07:40:53] <FromDiscord> <TechnoRazor> How would I know which C compiler Nim is using?
[07:41:31] <FromDiscord> <Elegantbeef> I could be wrong but i think it default to gcc everywhere but mac where it uses clang?
[07:43:20] <nrds> <06Prestige99> https://nim-lang.org/docs/nimc.html#compiler-selection
[07:46:42] <FromDiscord> <Elegantbeef> Cmon angry banana it works fine 😛 https://play.nim-lang.org/#ix=3vjs
[08:08:05] <FromDiscord> <undersquire> are there any other hobby os/kernels in nim besides dom96's ?
[08:08:08] <FromDiscord> <undersquire> (edit) "dom96's ?" => "dom96's?"
[08:18:21] <FromDiscord> <Elegantbeef> I dont know of any others
[08:34:59] *** jkl1337 is now known as jkl
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:23:46] <FromDiscord> <PsychoClay> is there a way to get the nimble package version as a variable?
[09:56:30] <FromDiscord> <impbox [ftsf]> playing with nim+ctags in vim, would be nice to get procs/methods listed by the type of their first argument, has anyone done this before?
[09:57:00] <FromDiscord> <impbox [ftsf]> since it's common for lots of procs to have the same name in nim just with different arguments
[09:58:14] <FromDiscord> <Rika> Does Nim work with Ctags??
[09:58:18] <FromDiscord> <impbox [ftsf]> yep
[09:59:11] <nrds> <06Prestige99> I didn't know people still used ctags
[09:59:27] <FromDiscord> <impbox [ftsf]> the output is not so useful though
[09:59:40] <FromDiscord> <impbox [ftsf]> maybe i should use something else
[10:00:11] <nrds> <06Prestige99> I just use nimlsp with neovim
[10:00:32] <FromDiscord> <impbox [ftsf]> any tips of getting a useful outline of a nim file in vim?
[10:00:48] <FromDiscord> <Rika> I’m thinking of switching to Nim LSP but I want my semantic highlighting so
[10:00:59] <FromDiscord> <Rika> In reply to @impbox "any tips of getting": Via Ctags?
[10:01:31] <FromDiscord> <impbox [ftsf]> @Rika i don't really care how it's implemented as long as the output is useful
[10:02:03] <nrds> <06Prestige99> lsp has an outline command or whatever
[10:02:22] <FromDiscord> <impbox [ftsf]> nrds, ok i'll check it out, thanks
[10:02:22] <nrds> <06Prestige99> I just press a keybinding and I can fuzzy search stuff like proc names
[10:02:23] <FromDiscord> <Rika> Is it implemented on the Nim LSP server though
[10:02:31] <nrds> <06Prestige99> yes
[10:02:47] <FromDiscord> <Elegantbeef> calling prestige nrds is pretty nice
[10:02:53] <nrds> <06Prestige99> haha
[10:03:36] <nrds> <06Prestige99> I'm using nimlsp and alaviss/nim.nvim impbox - if that helps
[10:03:49] <FromDiscord> <impbox [ftsf]> i like having the sidebar outline, but i'd want it listed by type of first argument https://media.discordapp.net/attachments/371759389889003532/873801145510928384/unknown.png
[10:05:48] <nrds> <06Prestige99> I wonder if you can just search with regex and create a quickfix list
[10:05:56] <nrds> <06Prestige99> and on save you could update it
[10:12:47] <FromDiscord> <impbox [ftsf]> getting better https://media.discordapp.net/attachments/371759389889003532/873803405762629642/unknown.png
[10:12:53] <FromDiscord> <impbox [ftsf]> i think i can probably do it through ctags
[10:13:25] <FromDiscord> <Rika> Wouldn’t quick fix be better
[10:14:20] <FromDiscord> <impbox [ftsf]> hmm i'm not familiar with quickfix
[10:32:55] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:46:49] <FromDiscord> <Rika> Might be time to try to become familiar with it, it’s pretty nice to use
[10:56:20] <FromDiscord> <impbox [ftsf]> seems useful but i can't seem to find any docs on how to generate a quickfix list
[10:56:38] <FromDiscord> <Rika> :h quickfix
[10:56:41] <FromDiscord> <Rika> Perhaps?
[10:57:04] <FromDiscord> <impbox [ftsf]> yeah, that tells me how to use the quickfix window
[10:57:06] <FromDiscord> <Rika> I think you can make one with grep
[10:57:16] <FromDiscord> <impbox [ftsf]> but not how to make a script to output a quickfix list
[10:57:47] <FromDiscord> <Rika> setqflist()
[10:58:01] <FromDiscord> <Rika> Did this one help
[10:58:08] <FromDiscord> <impbox [ftsf]> will read that and have a look
[11:02:48] <FromDiscord> <impbox [ftsf]> ehh, seems really awkward to use quickfix to generate your own list
[11:02:54] <FromDiscord> <impbox [ftsf]> i think i'll stick with ctags
[11:49:52] <FromDiscord> <impbox [ftsf]> woot, kinda what i was going for https://media.discordapp.net/attachments/371759389889003532/873827835272372254/unknown.png
[11:51:15] <FromDiscord> <impbox [ftsf]> it's great except for procs where the first argument shouldn't be treated as their object/class, but rather something passed to them like setState(GameState)
[12:07:00] *** Joins: max22- (~maxime@2a01cb088335980074ee4790d268e079.ipv6.abo.wanadoo.fr)
[12:08:13] <FromDiscord> <PsychoClay> whats the difference between the re and nre library?
[12:09:27] <FromDiscord> <Elegantbeef> I believe Nre is a newer written API due to issues with re, and re remains for legacy support
[12:10:12] <FromDiscord> <Rika> Yet re is the more commonly used library
[12:15:16] <FromDiscord> <Elegantbeef> Yea i'm sorta suprised both are reachable through searching
[12:19:23] <FromDiscord> <Rika> I believe it’s probably because the api of nre is less “usable” to some extent
[12:21:20] <FromDiscord> <PsychoClay> is compile time file reading a thing?
[12:21:32] <FromDiscord> <Elegantbeef> `staticRead`
[12:23:50] <FromDiscord> <konsumlamm> In reply to @Rika "I believe it’s probably": i think the main reason is that re is linked in the stdlib overview and nre isn't
[12:24:05] <FromDiscord> <konsumlamm> i dien't even know that nre exists for a long time
[12:24:16] <FromDiscord> <konsumlamm> (edit) "dien't" => "didn't"
[12:25:33] <FromDiscord> <impbox [ftsf]> and the re module doesn't mention nre exists
[12:59:59] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[13:08:27] *** Joins: beshr (~beshr@user/beshr)
[13:23:43] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:15:05] *** Joins: byanka_ (~byanka@91.244.10.3)
[14:17:12] *** Quits: byanka (~byanka@91.244.10.3) (Ping timeout: 245 seconds)
[14:18:27] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 245 seconds)
[14:19:38] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 272 seconds)
[14:20:21] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) (Ping timeout: 250 seconds)
[14:21:04] *** Joins: ormiret (sid314108@id-314108.tooting.irccloud.com)
[14:33:03] *** Quits: fputs (~fputs@137.220.33.212) (Ping timeout: 245 seconds)
[14:36:02] <FromDiscord> <haxscramper> Is there any way to do unsafe conversion of one ref object type to another in VM? I can't do `cast[B](a)` in a macros
[14:36:35] <FromDiscord> <haxscramper> I tried doing it in several steps, like `a -> int -> b`, but this does not work either
[14:37:31] <FromDiscord> <haxscramper> Any hack would be acceptable, I need it to test one idea, so it does not matter how bad the conversion implementation is
[14:38:11] <FromDiscord> <haxscramper> Anything that would let me do `let itemB: TypeB = <???>(itemA)` for arbitrary types
[14:40:36] *** Joins: mahlon (~mahlon@martini.nu)
[14:42:37] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 245 seconds)
[14:42:53] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:44:21] *** Joins: robertmeta (sid514@user/robertmeta)
[14:54:42] <FromDiscord> <top level await> best ws libaries?
[14:55:16] <FromDiscord> <top level await> for server
[15:04:01] <FromDiscord> <top level await> decided to with ws
[15:04:05] <FromDiscord> <top level await> `nimbel install ws`
[15:04:11] <FromDiscord> <top level await> idk if it's gud but i'm gonna use it lol
[15:07:12] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:14:42] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 245 seconds)
[15:25:32] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:26:16] *** Quits: lain (~lain@172.16.254.xxx) (Quit: kthxbai)
[15:26:59] *** Joins: lain (~lain@172.16.254.xxx)
[15:28:53] <FromDiscord> <top level await> How do I turn this into
[15:28:56] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vmb
[15:29:05] <FromDiscord> <top level await> `[{"m": "ch","_id":"lobby"}]
[15:29:08] <FromDiscord> <top level await> (edit) ""ch","_id":"lobby"}]" => ""ch","_id":"lobby"}]`"
[15:30:57] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=
[15:31:00] <FromDiscord> <Rika> (edit) 
[15:31:04] <FromDiscord> <Rika> (edit) 
[15:33:38] <FromDiscord> <top level await> produces
[15:33:41] <FromDiscord> <top level await> `[("m", "ch"), ("_id", "lobby")]` instead
[15:34:34] <FromDiscord> <top level await> oh
[15:34:37] <FromDiscord> <top level await> i'm using `$`
[15:34:43] <FromDiscord> <top level await> not json `$`
[15:34:43] <FromDiscord> <PsychoClay> maybe `json.%`
[15:34:56] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vmg
[15:35:01] <FromDiscord> <top level await> `await ws.send(json.`$`chans[0])`
[15:35:10] <FromDiscord> <top level await> is this how I'm supposed to use it?
[15:35:26] <FromDiscord> <top level await> (edit) "`await ws.send(json.`$`chans[0])`" => "sent a code paste, see https://play.nim-lang.org/#ix="
[15:35:30] <FromDiscord> <PsychoClay> possibly
[15:35:57] <FromDiscord> <top level await> @Rika
[15:36:08] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3vmi
[15:36:12] <FromDiscord> <top level await> :thonkspin:
[15:37:37] <FromDiscord> <top level await> oh
[15:37:40] <FromDiscord> <top level await> iIM STUPID LOL
[15:41:38] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[15:42:01] <FromDiscord> <top level await> fixed
[15:50:06] <FromDiscord> <dom96> In reply to @PsychoClay "is there a way": Yes. Nimble defines NimblePkgVersion for you iirc
[15:52:27] <FromDiscord> <PsychoClay> it appears to be undeclared, do i need to import something?
[15:54:19] <FromDiscord> <haxscramper> https://github.com/nim-lang/nimble/blob/4a2aaa07d/tests/nimbleVersionDefine/src/nimbleVersionDefine.nim
[15:54:49] <FromDiscord> <haxscramper> And you always need to built code with nimble
[15:55:13] <FromDiscord> <PsychoClay> hmm
[15:55:59] <FromDiscord> <PsychoClay> wait so its always "Unknown"?
[15:58:41] <FromDiscord> <PsychoClay> ah nvm i see how it works
[16:18:06] <FromDiscord> <haxscramper> I suppose this would break when your package is imported by another one
[16:18:09] <FromDiscord> <haxscramper> @PsychoClay\:
[16:18:25] <FromDiscord> <haxscramper> Because there can be only one `-d:NimblePkgVersion` at a time
[16:20:02] <FromDiscord> <PsychoClay> i think il stick to manually parsing the nimble file then
[16:33:04] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Quit: Konversation terminated!)
[16:33:15] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[16:33:23] *** Quits: max22- (~maxime@2a01cb088335980074ee4790d268e079.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:59:25] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: No route to host)
[16:59:39] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[17:22:51] *** Joins: arkurious (~arkurious@user/arkurious)
[17:30:38] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Read error: Connection reset by peer)
[17:31:01] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[17:36:51] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone knows how to handle this `got 'blst_p1' for 'localPk + farmerPK' [object declared in /home/lingx/.nimble/pkgs/blscurve-0.0.1/blscurve/blst/blst_abi.nim(104, 3)]↵ but expected 'blst_p1 = object' [object declared in /home/lingx/.nimble/pkgs/blscurve-0.0.1/blscurve/blst/blst_abi.nim(104, 3)]`
[17:38:28] <FromDiscord> <rishavs (Rishav Sharan)> does nim have discrimiated unions?
[17:42:31] <FromDiscord> <gogolxdong (liuxiaodong)> sent a code paste, see https://play.nim-lang.org/#ix=3vmQ
[17:48:30] <FromDiscord> <haxscramper> https://nim-lang.org/docs/manual.html#foreign-function-interface-union-pragma↵https://nim-lang.org/docs/manual.html#types-object-variants
[17:49:30] *** Joins: max22- (~maxime@2a01cb088335980083bba8655def53a4.ipv6.abo.wanadoo.fr)
[17:56:51] *** Quits: max22- (~maxime@2a01cb088335980083bba8655def53a4.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[18:01:55] <FromDiscord> <rishavs (Rishav Sharan)> Thanks!
[18:17:44] <FromDiscord> <Kermithos> how can I get the strings raw in nim? like \n ?
[18:25:25] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:26:33] *** Joins: xet7 (~xet7@user/xet7)
[18:26:46] <FromDiscord> <juan_carlos> `r"this is raw"` ?.
[18:29:44] <FromDiscord> <Kermithos> In reply to @juan_carlos "`r"this is raw"` ?.": how would I use that with a string? r(string_name) doesnt seem to work
[18:34:23] <FromDiscord> <juan_carlos> I do not understand. You can not access the nul terminator, if thats what you are thinking. You can enforce it being a raw string in arguments of functions, see examples here https://nim-lang.github.io/Nim/manual_experimental.html#term-rewriting-macros-parameter-constraints
[18:35:24] <FromDiscord> <Kermithos> okay, thanks
[18:46:25] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[18:47:43] *** Joins: xet7 (~xet7@user/xet7)
[18:58:16] <FromDiscord> <TechnoRazor> Is there anything similar to `debugbreak` in Nim?
[18:58:40] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[19:00:26] <FromDiscord> <Rika> what does it do
[19:00:37] <FromDiscord> <juan_carlos> For JS theres `debugger()`.
[19:01:17] <FromDiscord> <TechnoRazor> In reply to @Rika "what does it do": It would basically act as a breakpoint, pausing the debugger.
[19:02:01] <FromDiscord> <TechnoRazor> VSCode breakpoints work, but I was wondering if there was a way to include it in the code itself.
[19:04:23] <FromDiscord> <Rika> usually it is the job of the debugger and not the code
[19:16:50] <FromDiscord> <TechnoRazor> Right, I was just curious as I was following a C++ tutorial that used it. I found that `{.emit:"builtin_trap();".}` works well enough with GCC anyway.
[19:16:56] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:17:01] <FromDiscord> <juan_carlos> Maybe `SIGTRAP` for posix like OS ?.
[19:23:57] *** Joins: rockcavera (~rc@192.12.115.200)
[19:23:57] *** Quits: rockcavera (~rc@192.12.115.200) (Changing host)
[19:23:57] *** Joins: rockcavera (~rc@user/rockcavera)
[19:25:39] <FromDiscord> <TechnoRazor> I could be doing something wrong, but I can't figure out how to use it.
[19:26:30] <FromDiscord> <juan_carlos> https://stackoverflow.com/a/5561015
[19:26:53] <FromDiscord> <TechnoRazor> I saw that, but I can't find a way to use it within Nim.
[19:27:14] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: No route to host)
[19:27:29] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:34:02] <FromDiscord> <Ayy Lmao> I'm a bit confused where I'm supposed to be putting c headers in my directories. Like supposed I get `glad.c`, which does `#include <glad/glad.h>`, where do I put the two files?
[19:34:16] <FromDiscord> <Ayy Lmao> (edit) "supposed" => "suppose"
[19:42:00] <FromDiscord> <juan_carlos> current dir?.
[19:42:18] <FromDiscord> <juan_carlos> Depends what you are doing.
[19:47:03] <FromDiscord> <Ayy Lmao> Say I'm just doing a simple project that has a top level directory and a `src` directory, I have a nim file in src that I am compiling from the command line at the top level directory which calls `{.compile: "private/glad/glad.c".}`
[19:47:54] <FromDiscord> <Ayy Lmao> Basically my issue is I am unsure where to put c source and headers within my project so that all of the includes are happy
[19:48:11] <FromDiscord> <juan_carlos> You can get the directory at compile time.
[19:48:30] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[19:49:31] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:49:36] <FromDiscord> <Ayy Lmao> What do you mean? `{.compile: "private/glad/glad.c".}` attempts to compile the file, but `glad.c` does `#include <glad/glad.h>`, and the compiler apparently doesn't know where that is.
[19:56:33] <FromDiscord> <Ayy Lmao> How do I get the compiler to know where the header is?
[19:58:02] <FromDiscord> <juan_carlos> `const headerPath = currentSourcePath().splitPath.head / "file.h"` kinda something like that?.
[19:58:19] <FromDiscord> <juan_carlos> Adapt to your folder structure etc
[20:04:02] <FromDiscord> <Ayy Lmao> I see, so it was the `private` folder I had that was messing with it.
[20:04:42] <FromDiscord> <Ayy Lmao> I've seen some libs use a `private` folder though to hold c libs
[20:05:47] <FromDiscord> <brainproxy> trying to use nimterop to ingest a lib. The wrapper gets generated but Nim's compiler trips on `uintmax_t` being undeclared identifier.↵↵In `cOverride:` how should I override it?
[20:12:17] <FromDiscord> <brainproxy> I went with `BiggestUInt` for now
[20:20:38] <FromDiscord> <StefanSalewski (StefanSalewski)> New forum tread by salewski\: https://forum.nim-lang.org/t/8309
[20:20:58] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[20:31:03] <FromDiscord> <top level await> invalid type: 'empty' in this context: 'array[0..0, set[empty]]' for let
[20:31:10] <FromDiscord> <top level await> let users = []
[20:31:17] <FromDiscord> <top level await> this is supposed to be populated later via users joining
[20:34:46] <FromDiscord> <juan_carlos> `@[]`
[20:35:14] <FromDiscord> <juan_carlos> `array` is fixed size.
[20:42:46] <FromDiscord> <Rika> even then, you need to specify what types go in the seq
[20:46:19] <FromDiscord> <tsoj> sent a code paste, see https://play.nim-lang.org/#ix=3vnW
[20:46:27] <FromDiscord> <tsoj> not "why" but "how"
[20:48:49] <FromDiscord> <⃟⃟> i dont think thats what distinct is supposed to do
[20:49:20] <FromDiscord> <⃟⃟> i think its just to prevent for example here Position to be automatically converted to Velocity
[20:53:43] <FromDiscord> <konsumlamm> if you just want a different name for the same type, leave out the `distinct`
[21:03:27] <FromDiscord> <planetis> {.borrow\: ..} look at the manual
[21:11:21] *** Joins: max22- (~maxime@2a01cb088335980057b47d4a6ae0872c.ipv6.abo.wanadoo.fr)
[21:12:58] <FromDiscord> <Alea> Is there anywhere that I could find some comprehensive examples for httpclient? The docs don't go very in depth
[21:45:52] <FromDiscord> <planetis> it makes sense to use distincts in order to forbid ops like adding points others have already done it
[22:10:19] <FromDiscord> <dom96> In reply to @Alea "Is there anywhere that": What sort of thing are you looking for?
[22:12:18] <FromDiscord> <Alea> In reply to @dom96 "What sort of thing": Mostly extracting and processing the data in a get request
[22:12:30] <FromDiscord> <Alea> The docs cover packing it into a post request pretty well
[22:20:43] <FromDiscord> <Alea> Also of note, the Post example in the httpclient docs seems to be out of date, since the url no longer exists?
[22:24:50] <FromDiscord> <top level await> how do I turn my main thread into async?
[22:29:26] <FromDiscord> <dom96> `proc main() {.async.}` and then use `waitFor main()`
[22:30:07] <FromDiscord> <dom96> In reply to @Alea "Mostly extracting and processing": what data do you want? The headers?
[22:31:06] <FromDiscord> <dom96> just use `get` which will return this https://nim-lang.org/docs/httpclient.html#AsyncResponse
[22:33:39] <FromDiscord> <Alea> aye I dug around some more and saw that I got get mixed up with getContent
[22:34:11] <FromDiscord> <top level await> In reply to @dom96 "`proc main() {.async.}` and": thank you :D
[22:34:25] <FromDiscord> <dom96> In reply to @Alea "aye I dug around": happy to accept more examples in the docs if you want to add them 🙂
[22:35:47] <FromDiscord> <Alea> In reply to @dom96 "happy to accept more": I'll have to get more familiar with it first (which I will be since I'm about to use it in an interview exercise 😅)
[22:41:58] <FromDiscord> <dom96> You're interviewing for a Nim job? 😮
[22:44:53] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[22:46:06] <FromDiscord> <Alea> No, just using it for the question since they give free choice
[23:09:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:09:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:13:47] *** Joins: vicfred (~vicfred@user/vicfred)
[23:19:06] *** Quits: notchris (sid181145@stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:20:44] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3voG
[23:21:40] *** Joins: notchris (sid181145@id-181145.stonehaven.irccloud.com)
[23:22:21] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Read error: No route to host)
[23:22:35] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[23:25:36] <FromDiscord> <top level await> cute logo
[23:26:30] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3voH
[23:27:38] <FromDiscord> <top level await> await ws.send((%[{↵          "m":"ch",↵          "_id":"esm",↵        }]).getStr())
[23:27:40] <FromDiscord> <top level await> oh this works
[23:30:04] <FromDiscord> <top level await> that does not work
[23:30:09] <FromDiscord> <top level await> gives me nothing
[23:39:34] <FromDiscord> <top level await> i used
[23:39:37] <FromDiscord> <top level await> ($( instead
[23:39:40] <FromDiscord> <top level await> and that worked
[23:50:20] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 272 seconds)
[23:50:45] <FromDiscord> <top level await> and I'd like to be able to use while true: without blocking
[23:50:48] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3voQ
[23:53:38] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[23:55:51] <FromDiscord> <top level await> sent a code paste, see https://play.nim-lang.org/#ix=3voR
