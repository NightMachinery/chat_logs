[00:02:03] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 256 seconds)
[00:03:16] *** Joins: dr0n (~nabromov@94.11.23.235)
[00:08:38] *** Joins: alienwarlock (~warl@c-73-222-73-243.hsd1.ca.comcast.net)
[00:08:38] *** Quits: alienwarlock (~warl@c-73-222-73-243.hsd1.ca.comcast.net) (Changing host)
[00:08:38] *** Joins: alienwarlock (~warl@user/warl)
[00:09:25] *** Quits: alienwarlock (~warl@user/warl) (Read error: Connection reset by peer)
[00:12:03] <lilgopher> after a lot of searching I found that I had to use export GOPRIVATE=gitlab.com/private/repo to get the private repo as dependency. In case someone ever needs this here
[00:12:06] *** Joins: Torr (~Torr@user/torr)
[00:18:07] *** Joins: jolof (~jolof@user/jolof)
[00:19:04] *** Joins: Nulo (~Nulo@user/nulo)
[00:20:33] <Nulo> Hey, I'm trying to serve static files (through HTTP) from a flat directory. In many places, it is said that I shouldn't pass unsanitised paths to ServeFile. I know that, but what do I do to sanitise it? Thanks
[00:24:06] <Tv_> Nulo: maybe you want https://golang.org/pkg/net/http/#FileServer instead
[00:24:21] *** Joins: phoenixh (~phoenixh@p200300dd6f1914001cb8170bc6ba2233.dip0.t-ipconnect.de)
[00:25:08] <Nulo> Tv_, The problem with FileServer is that it serves an index but the paths of the files I'm serving are secret (randomly generated)
[00:26:51] <Tv_> Nulo: wrap the FS and don't provide a file listing?
[00:27:17] <Sam> Does it? The docs don't mention that
[00:27:24] *** Quits: phoenixh (~phoenixh@p200300dd6f1914001cb8170bc6ba2233.dip0.t-ipconnect.de) (Client Quit)
[00:27:41] <Nulo> That sounds error prone, what if I block "/" requests but the user sends "/."?
[00:27:41] <Tv_> Sam: the biggest hint might be ServeFile docs saying "file or directory"
[00:27:56] <Nulo> Sam, when I tried it it did that, that's why I didn't use it
[00:28:06] <Tv_> Nulo: i'm saying block the concept of a directory listing
[00:28:10] <Sam> ahhh, yah, it does say that. That's extremely confusing.
[00:28:29] <Tv_> Nulo: it only goes into listing mode if .Open return value .Stat gives IsDir
[00:28:31] <Sam> but yah, just override the index page with your own.
[00:28:33] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[00:28:47] <Tv_> Nulo: that's actually probably where i'd put an access control
[00:28:58] <Tv_> just wrap Open and make all directory opens an error
[00:28:59] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:17] <Tv_> (or open some other content)
[00:30:05] <Nulo> How would I wrap Open?
[00:30:21] *** Parts: dyslexicat (~dyslexica@176.234.11.153) ()
[00:30:50] <Tv_> type NoDirs struct { http.FS }
[00:31:03] <Tv_> func (n *NoDirs) Open
[00:32:50] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[00:33:57] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[00:34:25] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Quit: Leaving)
[00:41:13] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[00:47:18] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[00:48:18] *** Joins: nabromov (~nabromov@217.138.202.116)
[00:51:48] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[00:52:59] *** Joins: dmathieu (~textual@78.203.212.55)
[00:53:24] *** Joins: Eddward (~Eddward@207.138.204.132)
[00:56:45] *** Joins: whoami (~whoami@d118-75-122-76.col.wideopenwest.com)
[00:57:29] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:44a1:5b0c:408d:dc6a) (Quit: Leaving)
[01:03:53] *** Quits: dmgk (~dmgk@user/dmgk) (Quit: ZNC - https://znc.in)
[01:06:41] *** Quits: GoLiath_ (~GoLiath@2a02:c7f:8703:d000:146e:e195:1f5d:7027) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:07:08] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[01:10:56] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:48] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:15:41] *** Joins: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[01:18:50] *** Joins: ultralisk (~ultralisk@2a00:23c6:4b0e:e900:75db:cb84:2f7c:da2)
[01:19:41] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[01:22:28] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:24:01] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[01:26:37] <LambdaComplex> golang is so lovely (when its type system isn't making me cry)
[01:28:25] <seebs> what about the type system are you having trouble with?
[01:36:56] <Sam> > golang is so lovely (when its type system isn't making me cry)
[01:36:56] <Sam> heh, right? quote of the day.
[01:37:49] <Tv_> Go is a very lovely modernization of C. Pretending it's something more is probably quite frustrating.
[01:39:39] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 265 seconds)
[01:39:55] *** Joins: chasmo77 (~chas77@71.63.241.168)
[01:40:14] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[01:40:32] <Torr> Tv_: That's the appeal of it imo.
[01:40:51] <Tv_> yes, i'm a fan
[01:40:51] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[01:41:07] <Tv_> (for the things where M:N threading etc are fine)
[01:41:10] *** Joins: kulak (~kulak@user/kulak)
[01:42:05] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[01:48:44] *** Joins: zikani03 (~Zikani@197.211.99.14)
[01:49:05] <Torr> Have you seen people using it for embedded programs?
[01:52:26] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[01:56:15] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:56:31] *** Joins: mickey (~user@user/mickey)
[01:56:38] <Tv_> Torr: i have this whole spiel about how the meaning of "embedded" changes based on who's talking
[01:57:02] <Tv_> Torr: e.g. lots of "embedded" systems run Linux/Android, and those would run Go just fine
[01:57:48] <Tv_> Torr: but i'd draw a line on hardware capabilities pretty much exactly where one can run a linux kernel, personally
[01:58:04] <Tv_> (even if you were crazy and chose to cut out the kernel; the next big step down is too far down imho)
[01:58:33] <Tv_> some people push it a little further, with TinyGo or such, but i'm gonna argue then you're programming in a Go-inspired environment...
[01:58:46] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[02:01:03] <Torr> I've heard of Tinygo but have not used it yet, am looking forward to it though.
[02:01:31] <Tv_> Heh. TinyGo is the kind of experience where they explicitly mention "Slices are well supported".
[02:03:18] *** Quits: Eddward (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[02:03:19] <Tv_> but for me, it really boils down to this: do you have enough RAM to assume you never run out?
[02:03:29] <Tv_> that's how Linux, Go and Rust all normally behave
[02:03:42] <Tv_> *but* you can program Rust in a mode where allocations are much much more manually controlled
[02:04:04] <Tv_> Linux (with a userspace) or Go? can't really do that.
[02:04:53] <Tv_> (far gone are the days when malloc returning a NULL was actually handled)
[02:05:15] *** Joins: schmillin (~schmillin@user/schmillin)
[02:08:39] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[02:13:07] <Torr> I wouldn't say such days are gone, they're just much less frequent now.
[02:13:17] *** Joins: fishgod (~evan@user/fishgod)
[02:14:06] <Tv_> yeah nothing ever goes away, just becomes not-mainstream
[02:14:17] <Tv_> plenty of people practicing fighting with medieval swords out there
[02:14:20] <Tv_> buuutt...
[02:14:42] *** Quits: fishgod (~evan@user/fishgod) (Client Quit)
[02:15:18] <Torr> Lol, I'd like to have a fight with one of these swords.
[02:15:48] <Tv_> one of my high school buddies built his own crossbows etc
[02:17:46] <Torr> It's useful for hunting.
[02:18:16] <Tv_> his motivation was more a mix of learning and curiosity, though
[02:18:20] <Tv_> went into studying metallurgy
[02:18:57] <seebs> TinyGo is sorta neat, I have not messed with it much, but one of my coworkers did some work on their garbage collector, etc.
[02:20:31] *** Joins: GoLiath_ (~GoLiath@178.239.167.187)
[02:20:40] <Tv_> seebs: iirc the biscuit kernel did something like guarantee worst case memory consumption of a kernel codepath, and not run it until it had that much free.. without something like that, it's fundamentally a sunny-days-only device :-(
[02:20:40] *** Quits: kulak (~kulak@user/kulak) (Quit: kulak)
[02:21:05] <Tv_> (tangential but very interesting: the seL4 team did hard math to prove worst case cpu cycles for all syscall code paths, as means of guaranteeing hard realtime without a preemptive kernel)
[02:21:18] <seebs> that seems ... deeply impossible
[02:21:27] <seebs> because i'm pretty sure that memory access doesn't have a provable time bound
[02:21:34] <seebs> at least not with ECC hardware
[02:21:59] <Tv_> seebs: only on specific hardware, only up to what the specs on the hardware say
[02:22:12] <Tv_> seebs: but obviously realtime systems access memory too
[02:22:31] <seebs> yeah, fair. you can probably mostly ignore "but what if you just keep getting single-bit errors and they get scrubbed and then you get another single-bit error before the read completes"
[02:22:52] <Tv_> seebs: what if the cpu is on fire, what if the power goes out
[02:22:55] <seebs> yeah
[02:25:03] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[02:27:08] *** Joins: milosz (~milosz@user/milosz)
[02:27:36] *** Parts: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) ()
[02:29:00] <Tv_> if you were to formally define RT, i think it would look more like "deadlines are not missed until after the system has reported failure"
[02:33:29] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:35:11] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[02:39:19] *** Joins: Eddward (~Eddward@207.138.204.132)
[02:40:33] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[02:40:43] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 256 seconds)
[02:44:31] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[02:44:46] *** Joins: hv990 (~hv99@wireguard/tunneler/hv99)
[02:47:15] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 272 seconds)
[02:47:15] *** hv990 is now known as hv99
[02:49:08] *** Quits: Eddward (~Eddward@207.138.204.132) (*.net *.split)
[02:49:08] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (*.net *.split)
[02:49:08] *** Quits: popey (~popey@ubuntu/member/popey) (*.net *.split)
[02:49:08] *** Quits: jjonah (~jjonah@p200300d5d71ebc00dea632fffeb3342f.dip0.t-ipconnect.de) (*.net *.split)
[02:49:08] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (*.net *.split)
[02:49:08] *** Quits: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net) (*.net *.split)
[02:49:08] *** Quits: andlabs (~andlabs@71.190.119.164) (*.net *.split)
[02:49:08] *** Quits: power_adapter (~power_ada@2402:e280:3e0c:1c3:95c5:fb5e:9bbd:1e81) (*.net *.split)
[02:49:08] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[02:49:08] *** Quits: kwilczynski (sid379192@user/kwilczynski) (*.net *.split)
[02:49:08] *** Quits: Xjs (~jannis@user/xjs) (*.net *.split)
[02:49:08] *** Quits: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001) (*.net *.split)
[02:49:08] *** Quits: dan- (~d@ircdocs/dan-) (*.net *.split)
[02:49:08] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (*.net *.split)
[02:49:08] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[02:49:08] *** Quits: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748) (*.net *.split)
[02:49:08] *** Quits: st3fan (sid43079@id-43079.tooting.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050) (*.net *.split)
[02:49:08] *** Quits: DaftMonk (sid201914@user/daftmonk) (*.net *.split)
[02:49:08] *** Quits: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107) (*.net *.split)
[02:49:08] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (*.net *.split)
[02:49:08] *** Quits: kaleido_ (~adam@2604:4300:a:22a:202:c9ff:fec1:9e70) (*.net *.split)
[02:49:08] *** Quits: karl (~Karlssel@2001:41d0:8:9a4b::1) (*.net *.split)
[02:49:08] *** Quits: arcatech (~arcatech@user/arcatech) (*.net *.split)
[02:49:08] *** Quits: jhenson (~jhenson@user/jhenson) (*.net *.split)
[02:49:08] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (*.net *.split)
[02:49:08] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (*.net *.split)
[02:49:08] *** Quits: frost (~frost@59.71.242.236) (*.net *.split)
[02:49:08] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[02:49:08] *** Quits: jsrnop (~mark@user/jsrnop) (*.net *.split)
[02:49:08] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (*.net *.split)
[02:49:08] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[02:49:08] *** Quits: philmacfly (~philmacfl@galaxie.weltraumhochofen.space) (*.net *.split)
[02:49:08] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[02:49:08] *** Quits: bloony (~bloony@2a02:2121:309:b13c:1c13:86d4:5401:3) (*.net *.split)
[02:49:08] *** Quits: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net) (*.net *.split)
[02:49:08] *** Quits: egy (egy@tilde.team) (*.net *.split)
[02:49:09] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[02:49:09] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (*.net *.split)
[02:49:09] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[02:49:09] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:a2f3:c589:2a5f:8ac9) (*.net *.split)
[02:49:09] *** Quits: Valentine (~valentine@hackerspacesg/valentine) (*.net *.split)
[02:49:09] *** Quits: endigma (~endigma@134.41.133.214) (*.net *.split)
[02:49:09] *** Quits: GinjaNinja32 (~nyx@thanatos.gn32.uk) (*.net *.split)
[02:49:09] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[02:49:09] *** Quits: cation (cation@user/cation) (*.net *.split)
[02:49:09] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[02:49:09] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[02:49:09] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[02:49:09] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[02:49:09] *** Quits: thing (~thing@user/thing) (*.net *.split)
[02:49:09] *** Quits: gst (~gst@gateway/tor-sasl/gst) (*.net *.split)
[02:49:09] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[02:49:09] *** Quits: milosz (~milosz@user/milosz) (*.net *.split)
[02:49:09] *** Quits: nabromov (~nabromov@217.138.202.116) (*.net *.split)
[02:49:09] *** Quits: pepee (~user@user/pepee) (*.net *.split)
[02:49:09] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (*.net *.split)
[02:49:09] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[02:49:09] *** Quits: gwd (~gwd@xenbits.xenproject.org) (*.net *.split)
[02:49:09] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[02:49:09] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[02:49:09] *** Quits: dirbaio2 (~dirbaio@nsmbhd.net) (*.net *.split)
[02:49:09] *** Quits: LawnGnome (~LawnGnome@user/lawngnome) (*.net *.split)
[02:49:09] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[02:49:09] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[02:49:09] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (*.net *.split)
[02:49:09] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (*.net *.split)
[02:49:09] *** Quits: pztrn (~pztrn@user/pztrn) (*.net *.split)
[02:49:09] *** Quits: jespada (~jespada@90.254.247.46) (*.net *.split)
[02:49:10] *** Quits: kiril (~kiril@85.91.153.163) (*.net *.split)
[02:49:10] *** Quits: solar_sea (~solar_sea@user/solar-sea/x-3088627) (*.net *.split)
[02:49:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[02:49:10] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (*.net *.split)
[02:49:10] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[02:49:10] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[02:49:10] *** Quits: justK (~justache@user/justache) (*.net *.split)
[02:49:10] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (*.net *.split)
[02:49:10] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (*.net *.split)
[02:49:10] *** Quits: Kaivo (~Kaivo@user/kaivo) (*.net *.split)
[02:49:10] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[02:49:10] *** Quits: sedi (~lol@user/sedi) (*.net *.split)
[02:49:10] *** Quits: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de) (*.net *.split)
[02:49:10] *** Quits: aigoo (~aigoo@user/aigoo) (*.net *.split)
[02:49:10] *** Quits: RayS (~raysl@sdf1.xen.prgmr.com) (*.net *.split)
[02:49:10] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[02:49:10] *** Quits: marlinc_ (~marlinc@user/marlinc) (*.net *.split)
[02:49:10] *** Quits: couture (~couture@user/couture) (*.net *.split)
[02:49:10] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[02:49:10] *** Quits: GoLiath_ (~GoLiath@178.239.167.187) (*.net *.split)
[02:49:10] *** Quits: Torr (~Torr@user/torr) (*.net *.split)
[02:49:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (*.net *.split)
[02:49:10] *** Quits: fputs (~fputs@67.59.83.166) (*.net *.split)
[02:49:10] *** Quits: daved (~daved@162.67.197.35.bc.googleusercontent.com) (*.net *.split)
[02:49:10] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[02:49:10] *** Quits: lux0r (~lux0r@163.172.148.99) (*.net *.split)
[02:49:10] *** Quits: MD87 (~MD87@onl3.fr.929w.net) (*.net *.split)
[02:49:10] *** Quits: samf (~root@159.65.228.88) (*.net *.split)
[02:49:10] *** Quits: jadra_ (~jadra@chai.0xbad.coffee) (*.net *.split)
[02:49:10] *** Quits: imm_ (~imm_@user/imm/x-3405860) (*.net *.split)
[02:49:10] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (*.net *.split)
[02:49:10] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[02:49:10] *** Quits: siika_ (~siika@139.226.40.153) (*.net *.split)
[02:49:10] *** Quits: c10l (~c10l@89.34.167.207) (*.net *.split)
[02:49:10] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (*.net *.split)
[02:49:10] *** Quits: kochchef (~quassel@80.146.255.46) (*.net *.split)
[02:49:10] *** Quits: Sam (b8f15a4bbd@golang/sam) (*.net *.split)
[02:49:10] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (*.net *.split)
[02:49:10] *** Quits: KekSi (~KekSi@x4db6b464.dyn.telefonica.de) (*.net *.split)
[02:49:10] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[02:49:10] *** Quits: pgloor (~petergloo@mix.cubus.space) (*.net *.split)
[02:49:10] *** Quits: DM43078 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (*.net *.split)
[02:49:10] *** Quits: lack (~lack@user/lack) (*.net *.split)
[02:49:11] *** Quits: trufas (~trufas@177.240.218.218) (*.net *.split)
[02:49:11] *** Quits: g2anj (~v@221.142.186.101) (*.net *.split)
[02:49:11] *** Quits: Kahn (~Kahn@user/kahn) (*.net *.split)
[02:49:11] *** Quits: gregf (~gregf@user/gregf) (*.net *.split)
[02:49:11] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (*.net *.split)
[02:49:11] *** Quits: francis (francis@user/francis) (*.net *.split)
[02:49:11] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (*.net *.split)
[02:49:11] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (*.net *.split)
[02:49:11] *** Quits: d4ve (~d4ve@user/d4ve) (*.net *.split)
[02:49:11] *** Quits: ninjin (~ninjin@user/ninjin) (*.net *.split)
[02:49:11] *** Quits: ac5tin (~ac5tin@user/ac5tin) (*.net *.split)
[02:49:11] *** Quits: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[02:49:11] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (*.net *.split)
[02:49:11] *** Quits: Disconsented (~quassel@107.170.227.20) (*.net *.split)
[02:49:11] *** Quits: crowbar (~crowbar@user/crowbar) (*.net *.split)
[02:49:11] *** Quits: Rudde (~rudde@netboot.io) (*.net *.split)
[02:49:11] *** Quits: rewt (~default@user/rewt) (*.net *.split)
[02:49:11] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca) (*.net *.split)
[02:49:11] *** Quits: schmillin (~schmillin@user/schmillin) (*.net *.split)
[02:49:11] *** Quits: ultralisk (~ultralisk@2a00:23c6:4b0e:e900:75db:cb84:2f7c:da2) (*.net *.split)
[02:49:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (*.net *.split)
[02:49:11] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (*.net *.split)
[02:49:11] *** Quits: jaguar (jag@maddshark.com) (*.net *.split)
[02:49:11] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[02:49:11] *** Quits: toshywoshy (~toshywosh@ptr-377wf33o3bnthuddmycb.18120a2.ip6.access.telenet.be) (*.net *.split)
[02:49:11] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (*.net *.split)
[02:49:11] *** Quits: diff (~diff@tilde.town) (*.net *.split)
[02:49:11] *** Quits: aarchi (sid486183@id-486183.highgate.irccloud.com) (*.net *.split)
[02:49:11] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[02:49:11] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:1deb:3346:f463:745e:77a4) (*.net *.split)
[02:49:11] *** Quits: meain (~meain@2001:470:69fc:105::2db) (*.net *.split)
[02:49:11] *** Quits: jai (~darkapex@user/darkapex) (*.net *.split)
[02:49:11] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (*.net *.split)
[02:49:11] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (*.net *.split)
[02:49:11] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:597:b5cf:3629:f483) (*.net *.split)
[02:49:11] *** Quits: src (~src@user/src) (*.net *.split)
[02:49:11] *** Quits: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[02:49:11] *** Quits: novns (~novns@user/novns) (*.net *.split)
[02:49:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[02:49:11] *** Quits: keiser009107 (~keiser@83.25.191.2.ipv4.supernova.orange.pl) (*.net *.split)
[02:49:11] *** Quits: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de) (*.net *.split)
[02:49:12] *** Quits: kindablue (znc@irc.tpurist.com) (*.net *.split)
[02:49:12] *** Quits: dalan (~dalan@118.102.85.89) (*.net *.split)
[02:49:12] *** Quits: Chepra (~chepra@summer.c137.eu) (*.net *.split)
[02:49:12] *** Quits: rudi_s (~simon@user/rudi-s/x-7673890) (*.net *.split)
[02:49:12] *** Quits: predmijat (~predmijat@mail.strogopro.com) (*.net *.split)
[02:49:12] *** Quits: jdrab (~jdrab@user/jdrab) (*.net *.split)
[02:49:12] *** Quits: Ruxnor (kevin@user/kddlb) (*.net *.split)
[02:49:12] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (*.net *.split)
[02:49:12] *** Quits: McQuestionable (uid505670@id-505670.highgate.irccloud.com) (*.net *.split)
[02:49:12] *** Quits: chasmo77 (~chas77@71.63.241.168) (*.net *.split)
[02:49:12] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[02:49:12] *** Quits: loosh (~jason@vultr.bastion.pnj1.us.zj.is) (*.net *.split)
[02:49:12] *** Quits: gcd_ (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[02:49:12] *** Quits: Shimmy (~Shimmy@user/shimmy) (*.net *.split)
[02:49:12] *** Quits: aram (~aram@9front.army) (*.net *.split)
[02:49:12] *** Quits: buz (~buz@damn.serious.im) (*.net *.split)
[02:49:12] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[02:49:12] *** Quits: LtHummus (~lthummus@174-21-28-50.tukw.qwest.net) (*.net *.split)
[02:49:12] *** Quits: sayoun (~sayoun@kwiky.fr) (*.net *.split)
[02:49:12] *** Quits: daegalus (~yulian@user/daegalus) (*.net *.split)
[02:49:12] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (*.net *.split)
[02:49:12] *** Quits: MrFantastik (~Thunderbi@98.1.50.67) (*.net *.split)
[02:49:12] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[02:49:12] *** Quits: icy (~icy@user/icy) (*.net *.split)
[02:49:12] *** Quits: faceonkeyboard (~faceonkey@anquietas.harting.hosting) (*.net *.split)
[02:49:12] *** Quits: skrzyp (~skrzyp@skrzyp.net) (*.net *.split)
[02:49:12] *** Quits: jimeh (~jimeh@51.15.210.236) (*.net *.split)
[02:49:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:49:12] *** Quits: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt) (*.net *.split)
[02:49:12] *** Quits: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com) (*.net *.split)
[02:49:12] *** Quits: dza (~dza@user/dza) (*.net *.split)
[02:49:12] *** Quits: smitop (~smitop@user/smitop) (*.net *.split)
[02:49:12] *** Quits: fmac (~fmac@luna.fmac.xyz) (*.net *.split)
[02:49:12] *** Quits: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (*.net *.split)
[02:49:12] *** Quits: huf (~huf@user/huf) (*.net *.split)
[02:49:12] *** Quits: caubert (~caubert@136.244.111.235) (*.net *.split)
[02:49:12] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[02:49:12] *** Quits: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com) (*.net *.split)
[02:49:12] *** Quits: rshinzon3 (~rshinzon@130.61.156.43) (*.net *.split)
[02:49:12] *** Quits: flommi (~flommi@puck942.startdedicated.de) (*.net *.split)
[02:49:12] *** Quits: seebs (~seebs@24.196.59.174) (*.net *.split)
[02:49:12] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (*.net *.split)
[02:49:12] *** Quits: g4wjs (~quassel@mail.classdesign.com) (*.net *.split)
[02:49:12] *** Quits: pots (~pots@20.51.220.66) (*.net *.split)
[02:49:12] *** Quits: vhost- (~vhost@65.102.48.134) (*.net *.split)
[02:49:12] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[02:49:12] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[02:49:12] *** Quits: strubbl8919 (~strubbl@ipbcc18e84.dynamic.kabel-deutschland.de) (*.net *.split)
[02:49:12] *** Quits: eagleflo (~aku@eagleflow.fi) (*.net *.split)
[02:49:13] *** Quits: iluxa (~iliaf@user/iluxa) (*.net *.split)
[02:49:13] *** Quits: leah2 (~leah@vuxu.org) (*.net *.split)
[02:49:13] *** Quits: arthur (~arthur@2a02:390:9151:0:1c94:e381:bf81:7129) (*.net *.split)
[02:49:13] *** Quits: aza__ (~orrery@2600:6c50:407f:5100:164:8045:da20:3af5) (*.net *.split)
[02:49:13] *** Quits: ochredoke (ochredoke@user/ochredoke) (*.net *.split)
[02:49:13] *** Quits: meinside (uid24933@id-24933.brockwell.irccloud.com) (*.net *.split)
[02:49:13] *** Quits: brooks (~bswinnert@containers.neptunenetworks.org) (*.net *.split)
[02:49:13] *** Quits: arcanez (~arcanez@warpedreality.org) (*.net *.split)
[02:49:13] *** Quits: siXy (~jfindley@centos/ops/sixy) (*.net *.split)
[02:49:13] *** Quits: teasea (~teasea@user/teasea) (*.net *.split)
[02:49:13] *** Quits: acohn (acohn@user/alexcohn) (*.net *.split)
[02:49:13] *** Quits: chimeracoder (sid230642@id-230642.brockwell.irccloud.com) (*.net *.split)
[02:49:13] *** Quits: bea (~bea@user/bea) (*.net *.split)
[02:49:13] *** Quits: Logiar (~logiar@nerdsluts.net) (*.net *.split)
[02:49:13] *** Quits: welt (~welt@willow.spiderden.net) (*.net *.split)
[02:49:13] *** Quits: kissen (~kissen@user/kissen) (*.net *.split)
[02:49:13] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (*.net *.split)
[02:49:13] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (*.net *.split)
[02:49:13] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (*.net *.split)
[02:49:13] *** Quits: zikani03 (~Zikani@197.211.99.14) (*.net *.split)
[02:49:13] *** Quits: whoami (~whoami@d118-75-122-76.col.wideopenwest.com) (*.net *.split)
[02:49:13] *** Quits: Vigdis (~danj@ns4.chown.me) (*.net *.split)
[02:49:13] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (*.net *.split)
[02:49:13] *** Quits: Nulo (~Nulo@user/nulo) (*.net *.split)
[02:49:13] *** Quits: tristero (~nobody@user/tristero) (*.net *.split)
[02:49:13] *** Quits: nperez (~nperez@nickandperla.net) (*.net *.split)
[02:49:13] *** Quits: kodah (~kodah@user/kodah) (*.net *.split)
[02:49:13] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (*.net *.split)
[02:49:13] *** Quits: deafpiano (~tomlazar@cpe-65-26-56-76.wi.res.rr.com) (*.net *.split)
[02:49:13] *** Quits: j416 (~j416@user/j416) (*.net *.split)
[02:49:13] *** Quits: zerok (~zerok@user/zerok) (*.net *.split)
[02:49:13] *** Quits: halden (~halden@lden.im) (*.net *.split)
[02:49:13] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:13] *** Quits: LiftLeft2 (~LiftLeft@154.21.28.156) (*.net *.split)
[02:49:13] *** Quits: moto (~moto@user/moto) (*.net *.split)
[02:49:13] *** Quits: nekron (~nekron@noordsee.de) (*.net *.split)
[02:49:13] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (*.net *.split)
[02:49:14] *** Quits: Ohlov3 (~Ohlov3@dyndsl-091-248-236-188.ewe-ip-backbone.de) (*.net *.split)
[02:49:14] *** Quits: sztanpet (sztanpet@user/sztanpet) (*.net *.split)
[02:49:14] *** Quits: treethought (treethou@138.68.49.251) (*.net *.split)
[02:49:14] *** Quits: lungaro2 (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[02:49:14] *** Quits: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com) (*.net *.split)
[02:49:14] *** Quits: PedroG1 (~android@45.77.216.181) (*.net *.split)
[02:49:14] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (*.net *.split)
[02:49:14] *** Quits: jinie (~jimmy@188.114.173.37) (*.net *.split)
[02:49:14] *** Quits: howeyc (~howeyc@user/howeyc) (*.net *.split)
[02:49:14] *** Quits: nimmen (~strangerf@78-61-239-159.static.zebra.lt) (*.net *.split)
[02:49:14] *** Quits: kipukun (~kipukun@207.244.104.227) (*.net *.split)
[02:49:14] *** Quits: yelnah (~felix@27-32-64-92.static.tpgi.com.au) (*.net *.split)
[02:49:14] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[02:49:14] *** Quits: Tharro (~Tharro@51.15.91.154) (*.net *.split)
[02:49:14] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (*.net *.split)
[02:49:14] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (*.net *.split)
[02:49:14] *** Quits: nevivurn (~nevivurn@user/nevivurn) (*.net *.split)
[02:49:14] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[02:49:14] *** Quits: foobaz (~oofabz@199.58.97.156) (*.net *.split)
[02:49:14] *** Quits: paruh (~paruh@92.60.39.18) (*.net *.split)
[02:49:14] *** Quits: ansimita (~ansimita@user/ansimita) (*.net *.split)
[02:49:14] *** Quits: habys (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c) (*.net *.split)
[02:49:14] *** Quits: recursion (sid504862@user/recursion) (*.net *.split)
[02:49:14] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[02:49:14] *** Quits: cmagina (uid286142@user/cmagina) (*.net *.split)
[02:49:14] *** Quits: shrub (sid500598@user/psb) (*.net *.split)
[02:49:14] *** Quits: noteness (noteness@user/noteness) (*.net *.split)
[02:49:14] *** Quits: Anderson-D (sid146635@id-146635.tinside.irccloud.com) (*.net *.split)
[02:49:14] *** Quits: jackneilll (~jackneill@20014C4E181A4F00C4B4F3FE6613B3A9.unconfigured.pool.telekom.hu) (*.net *.split)
[02:49:14] *** Quits: cultpony (~cultpony@user/cultpony) (*.net *.split)
[02:49:14] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (*.net *.split)
[02:49:14] *** Quits: ding (~ding@2001:19f0:5:14c2:5400:2ff:fee0:a42c) (*.net *.split)
[02:49:14] *** Quits: znpy (~znpy@user/znpy) (*.net *.split)
[02:49:14] *** Quits: trollixx (sid289131@id-289131.highgate.irccloud.com) (*.net *.split)
[02:49:14] *** Quits: gsthnz (~gsthnz@user/gsthnz) (*.net *.split)
[02:49:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[02:49:15] *** Quits: Dieterbe (~Dieterbe@user/dieterbe) (*.net *.split)
[02:49:15] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[02:49:15] *** Quits: dg (dgl@dg.wtf) (*.net *.split)
[02:49:15] *** Quits: longsleep (~quassel@2a02:c207:3001:216:1000::1) (*.net *.split)
[02:49:15] *** Quits: zkanda (~zkanda@box.makean.art) (*.net *.split)
[02:49:15] *** Quits: mdel (~mdel@user/mdel) (*.net *.split)
[02:49:15] *** Quits: zanshin (~zanshin@user/zanshin) (*.net *.split)
[02:49:15] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (*.net *.split)
[02:49:15] *** Quits: kinduff (~kinduff@user/kinduff) (*.net *.split)
[02:49:15] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[02:49:15] *** Quits: binkers (~binkers@user/binkers) (*.net *.split)
[02:49:15] *** Quits: Gnuman (~gnuman@user/gnuman) (*.net *.split)
[02:49:15] *** Quits: acidsys (~LSD@2.lsd.systems) (*.net *.split)
[02:49:15] *** Quits: OnkelUlla (~uol@ptx.hi.pengutronix.de) (*.net *.split)
[02:49:15] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[02:49:15] *** Quits: bsandro (~bsandro@139.138.197.56) (*.net *.split)
[02:49:15] *** Quits: jay_wild (~very@138.68.15.221) (*.net *.split)
[02:49:15] *** Quits: CorbaTheGeek (~peter@99-167-204-9.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[02:49:15] *** Quits: vds (sid12483@id-12483.brockwell.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: Balooga (sid407689@id-407689.tooting.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: argonel (argonel@KDE/argonel) (*.net *.split)
[02:49:15] *** Quits: darkmuggle (darkmuggle@redhat/darkmuggle) (*.net *.split)
[02:49:15] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: morgan (~morgan@c-71-202-228-41.hsd1.ca.comcast.net) (*.net *.split)
[02:49:15] *** Quits: feuerrot (~feuerrot@shells.chaosdorf.de) (*.net *.split)
[02:49:15] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[02:49:15] *** Quits: sserra1 (~sserra@185.11.236.57.user.conectabalear.com) (*.net *.split)
[02:49:15] *** Quits: muesli (~muesli@fribbledom.com) (*.net *.split)
[02:49:15] *** Quits: jer0me (~jerome@62-210-220-242.rev.poneytelecom.eu) (*.net *.split)
[02:49:15] *** Quits: henriquev_ (~henvic@user/henriquev) (*.net *.split)
[02:49:15] *** Quits: marcel (~marcel@user/marcel) (*.net *.split)
[02:49:15] *** Quits: FreeBDSM (~uzer@user/freebdsm) (*.net *.split)
[02:49:15] *** Quits: eau (~chat@user/eau) (*.net *.split)
[02:49:15] *** Quits: dove (~jordan@li1158-85.members.linode.com) (*.net *.split)
[02:49:15] *** Quits: nahamu (~nahamu@tailscale/contributor/nahamu) (*.net *.split)
[02:49:15] *** Quits: alb (~nil@37.228.214.226) (*.net *.split)
[02:49:15] *** Quits: jolan (~jolan@ec2.jolan.org) (*.net *.split)
[02:49:15] *** Quits: brb (~brb@user/brb) (*.net *.split)
[02:49:15] *** Quits: tdmackey (~tdmackey@booleanhaiku.com) (*.net *.split)
[02:49:15] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (*.net *.split)
[02:49:15] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[02:49:15] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[02:49:15] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (*.net *.split)
[02:49:15] *** Quits: jlindgren (~jlindgren@user/jlindgren) (*.net *.split)
[02:49:15] *** Quits: Archwyrm (~archwyrm@archwyrm.net) (*.net *.split)
[02:49:15] *** Quits: rk4 (~r@user/rk4) (*.net *.split)
[02:49:15] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[02:49:15] *** Quits: Patater (~patater@patater.com) (*.net *.split)
[02:49:16] *** Quits: nachoes (~nachoes@user/nachoes) (*.net *.split)
[02:49:16] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[02:49:16] *** Quits: dupondje (~dupondje@artemis.dupie.be) (*.net *.split)
[02:49:16] *** Quits: batdog (~batdog@lnsq.elkins.co) (*.net *.split)
[02:49:16] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (*.net *.split)
[02:49:16] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (*.net *.split)
[02:49:16] *** Quits: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e) (*.net *.split)
[02:49:16] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[02:49:16] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (*.net *.split)
[02:49:16] *** Quits: worr (~worr@2001:470:69fc:105::78c) (*.net *.split)
[02:49:16] *** Quits: psydroid (~psydroidm@user/psydroid) (*.net *.split)
[02:49:16] *** Quits: kadoban (~kadoban@user/kadoban) (*.net *.split)
[02:49:16] *** Quits: jiqiren (~jiqiren@oh-hi.org) (*.net *.split)
[02:49:16] *** Quits: dongkyun (~dongkyun@2604:a880:2:d1::10c:d001) (*.net *.split)
[02:49:16] *** Quits: ventic (ircbouncer@3v.fi) (*.net *.split)
[02:49:16] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[02:49:16] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (*.net *.split)
[02:49:16] *** Quits: martin_ (martin@185.71.208.255) (*.net *.split)
[02:49:16] *** Quits: corby (~corby@c0rby.de) (*.net *.split)
[02:49:16] *** Quits: greypw (~greypw@grey.pw) (*.net *.split)
[02:49:16] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (*.net *.split)
[02:49:16] *** Quits: mika (~mika@odysseus.grml.info) (*.net *.split)
[02:49:16] *** Quits: jybs (~james@110-175-225-162.static.tpgi.com.au) (*.net *.split)
[02:49:16] *** Quits: jomag (~jonatan@31-209-59-170.cust.bredband2.com) (*.net *.split)
[02:49:16] *** Quits: losinggeneration (~quassel@64.225.54.254) (*.net *.split)
[02:49:16] *** Quits: doghackit2 (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net) (*.net *.split)
[02:49:16] *** Quits: b0nn (~shane@user/b0nn) (*.net *.split)
[02:49:16] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[02:49:16] *** Quits: alrs (alrs@tilde.team) (*.net *.split)
[02:49:16] *** Quits: kinlo (~peter@user/kinlo) (*.net *.split)
[02:49:16] *** Quits: ari (~ari@vmi500470.contaboserver.net) (*.net *.split)
[02:49:16] *** Quits: wmo (~quassel@2604:a880:2:d0::1df0:b001) (*.net *.split)
[02:49:16] *** Quits: irq0 (~seri@amy.irq0.org) (*.net *.split)
[02:49:16] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[02:49:16] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (*.net *.split)
[02:49:17] *** Quits: Lost (~spinning@user/lost) (*.net *.split)
[02:49:17] *** Quits: nickster (~nickster@67.207.91.6) (*.net *.split)
[02:49:17] *** Quits: markkuit (~markkuit@user/markkuit) (*.net *.split)
[02:49:17] *** Quits: avemestr (~avemestr@2a01:4f8:212:2719::2) (*.net *.split)
[02:49:17] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (*.net *.split)
[02:49:17] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[02:49:17] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (*.net *.split)
[02:49:17] *** Quits: acid (~acid@user/acid) (*.net *.split)
[02:49:17] *** Quits: freswa (~freswa@2a01:4f8:1c0c:804b::2) (*.net *.split)
[02:49:17] *** Quits: thunfisch (~thunfisch@user/thunfisch) (*.net *.split)
[02:49:17] *** Quits: Nex8192 (~Nex8192@user/nex8192) (*.net *.split)
[02:49:17] *** Quits: Arahael (~arahael@120.88.166.123) (*.net *.split)
[02:49:17] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[02:49:17] *** Quits: m-kad (~quassel@2a02:c207:2043:4525::1) (*.net *.split)
[02:49:17] *** Quits: zutt (~zutt@user/zutt) (*.net *.split)
[02:49:17] *** Quits: l2dy (~l2dy@user/l2dy) (*.net *.split)
[02:49:17] *** Quits: jhchabran (~jhchabran@user/jhchabran) (*.net *.split)
[02:49:17] *** Quits: devx (~devx@151.233.209.35.bc.googleusercontent.com) (*.net *.split)
[02:49:17] *** Quits: noonien (~noonien@user/noonien) (*.net *.split)
[02:49:17] *** Quits: Kyros (~kyros@user/kyros) (*.net *.split)
[02:49:17] *** Quits: erri (~meow@52.8.199.178) (*.net *.split)
[02:49:17] *** Quits: mic4ael (~mic4ael@kolodzie-pc.cern.ch) (*.net *.split)
[02:49:17] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[02:49:17] *** Quits: purpleidea (~james@user/purpleidea) (*.net *.split)
[02:49:17] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (*.net *.split)
[02:49:17] *** Quits: davzie (sid504337@id-504337.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (*.net *.split)
[02:49:17] *** Quits: yama_ (~yama@097-090-153-102.biz.spectrum.com) (*.net *.split)
[02:49:17] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[02:49:17] *** Quits: kzrl (~kzrl@149.28.171.210) (*.net *.split)
[02:49:17] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[02:49:17] *** Quits: chilversc (~chilversc@user/chilversc) (*.net *.split)
[02:49:17] *** Quits: sshow (~sshow@seven.hackeriet.no) (*.net *.split)
[02:49:17] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: bougyman (~bougyman@user/bougyman) (*.net *.split)
[02:49:17] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (*.net *.split)
[02:49:17] *** Quits: Rhvs (Rhys@help.lux.melted.me) (*.net *.split)
[02:49:17] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[02:49:17] *** Quits: redlegion (sid429547@id-429547.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: obviyus (sid415299@user/obviyus) (*.net *.split)
[02:49:17] *** Quits: telemachus (sid2004@id-2004.brockwell.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[02:49:17] *** Quits: frobnitz (~ian@photon.remmler.org) (*.net *.split)
[02:49:18] *** Quits: lvlinux (~ruel@falcon.ruhnet.net) (*.net *.split)
[02:49:18] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (*.net *.split)
[02:49:18] *** Quits: sus (thelounge@user/zeromomentum) (*.net *.split)
[02:49:18] *** Quits: A_Dragon (A_D@doom-tower.awesome-dragon.science) (*.net *.split)
[02:49:18] *** Quits: DePingus (~depingus@2001:bc8:1828:213f::1) (*.net *.split)
[02:49:18] *** Quits: sgarciapdx (~serge@irc.shork.io) (*.net *.split)
[02:49:18] *** Quits: danderson (~dave@tailscale/danderson) (*.net *.split)
[02:49:18] *** Quits: speatzle_ (~speatzles@2001:470:69fc:105::1003) (*.net *.split)
[02:49:18] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (*.net *.split)
[02:49:18] *** Quits: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b) (*.net *.split)
[02:49:18] *** Quits: mambang[m] (~mambang@user/mambang) (*.net *.split)
[02:49:18] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[02:49:18] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[02:49:18] *** Quits: thinkofher (uid503725@user/thinkofher) (*.net *.split)
[02:49:18] *** Quits: sebito91 (~sborza@45.55.74.66) (*.net *.split)
[02:49:18] *** Quits: nebiros (~nebiros@user/nebiros) (*.net *.split)
[02:49:18] *** Quits: Schoentoon (~Schoentoo@schoentoon.com) (*.net *.split)
[02:49:18] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[02:49:18] *** Quits: Xu_R (~dev-dsk-x@user/xu-r/x-9187770) (*.net *.split)
[02:49:18] *** Quits: eivindr_ (~eivindr@99.109-247-211.customer.lyse.net) (*.net *.split)
[02:49:18] *** Quits: michele (~eraser@user/michele) (*.net *.split)
[02:49:18] *** Quits: Shrike (sid305680@id-305680.brockwell.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: kori (kori@user/kori) (*.net *.split)
[02:49:18] *** Quits: dkeohane (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[02:49:18] *** Quits: laymanX (~laymanX@166.70.232.152) (*.net *.split)
[02:49:18] *** Quits: hedy (hedy@tilde.team/user/hedy) (*.net *.split)
[02:49:18] *** Quits: dale (dale@user/dale) (*.net *.split)
[02:49:19] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[02:49:19] *** Quits: nj (nicholas@stop.disconnecting.me) (*.net *.split)
[02:49:19] *** Quits: tnez (~el@user/tnez) (*.net *.split)
[02:49:19] *** Quits: KBme (~KBme@ra.ndom.dev) (*.net *.split)
[02:49:19] *** Quits: snappy (~snappy@user/snappy) (*.net *.split)
[02:49:19] *** Quits: Fossil (~Fossil@95.85.23.165) (*.net *.split)
[02:49:19] *** Quits: decartes (uid240036@id-240036.brockwell.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (*.net *.split)
[02:49:19] *** Quits: wnd (wnd@extirc.katei.fi) (*.net *.split)
[02:49:19] *** Quits: qzio (~qzio@198.167.223.200) (*.net *.split)
[02:49:19] *** Quits: SmokedCheese (nyoroon@2a01:7e01::f03c:91ff:fed1:d9ef) (*.net *.split)
[02:49:19] *** Quits: ks_ (~kevin@nyc-0.mil.lat) (*.net *.split)
[02:49:19] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (*.net *.split)
[02:49:19] *** Quits: pjs (~pjs@user/pjs) (*.net *.split)
[02:49:19] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (*.net *.split)
[02:49:19] *** Quits: qaisjp (sid26374@user/qaisjp) (*.net *.split)
[02:49:19] *** Quits: cooper (~mitchell@user/cooper) (*.net *.split)
[02:49:19] *** Quits: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d) (*.net *.split)
[02:49:19] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[02:49:19] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[02:49:19] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (*.net *.split)
[02:49:19] *** Quits: sneak (~sneak@datavi.be) (*.net *.split)
[02:49:19] *** Quits: edr (~edr@user/edr) (*.net *.split)
[02:49:19] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[02:49:19] *** Quits: eggsampler (~ur@s.id-rsa.pub) (*.net *.split)
[02:49:19] *** Quits: CommunistWolf (~gulag@user/communistwolf) (*.net *.split)
[02:49:19] *** Quits: rabbitear (~juice@142.93.115.104) (*.net *.split)
[02:49:19] *** Quits: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980) (*.net *.split)
[02:49:19] *** Quits: jjhoo (jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi) (*.net *.split)
[02:49:20] *** Quits: stefanc_diff (~stefanc_d@cpc97950-croy24-2-0-cust78.19-2.cable.virginm.net) (*.net *.split)
[02:49:20] *** Quits: shadowchaser (~Shadowcha@liox.eu) (*.net *.split)
[02:49:20] *** Quits: dreistadt (uid501648@id-501648.tooting.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: eyJhb (~eyJhb@user/eyjhb) (*.net *.split)
[02:49:20] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: stmuk (~steve@15.43.187.81.in-addr.arpa) (*.net *.split)
[02:49:20] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[02:49:20] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[02:49:20] *** Quits: gjnoonan (sid95422@id-95422.tooting.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: sjas (~sjas@irc.sjas.de) (*.net *.split)
[02:49:20] *** Quits: soren (sid124229@id-124229.highgate.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: arusso (~arusso@user/arusso) (*.net *.split)
[02:49:20] *** Quits: holgersson (~quassel@user/holgersson) (*.net *.split)
[02:49:20] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: JPT_ (~jpt@classified.name) (*.net *.split)
[02:49:20] *** Quits: darkapex (uid360049@user/darkapex) (*.net *.split)
[02:49:20] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[02:49:20] *** Quits: bookworm (~bookworm@neomutt/bookworm) (*.net *.split)
[02:49:20] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[02:49:20] *** Quits: jsanford (~jsanford@user/jsanford) (*.net *.split)
[02:49:20] *** Quits: ws2k3 (znc@vps.freegamehosting.eu) (*.net *.split)
[02:49:20] *** Quits: lightstalker (~BT@user/lightstalker) (*.net *.split)
[02:49:20] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[02:49:20] *** Quits: psil (~krwlisp@karatefylla.nu) (*.net *.split)
[02:49:20] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:20] *** Quits: hdm (sid500490@aha/hacker/hdm) (*.net *.split)
[02:49:20] *** Quits: ddevault (znc@sourcehut/staff/ddevault) (*.net *.split)
[02:49:20] *** Quits: avoozl (~avoozl@escaflowne.hro.nl) (*.net *.split)
[02:49:20] *** Quits: asm (~alexander@user/asm) (*.net *.split)
[02:49:20] *** Quits: gsora_ (~gsora@140.238.174.213) (*.net *.split)
[02:49:20] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[02:49:20] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (*.net *.split)
[02:49:20] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[02:49:20] *** Quits: raktajino (~raktajino@callisto.raktajino.club) (*.net *.split)
[02:49:20] *** Quits: eldritch__ (~eldritch@134.209.221.71) (*.net *.split)
[02:49:20] *** Quits: cfebs (~cfebs@user/cfebs) (*.net *.split)
[02:49:20] *** Quits: naos (~naos@user/naos) (*.net *.split)
[02:49:20] *** Quits: ikke (~kevin@alpine/developer/ikke) (*.net *.split)
[02:49:20] *** Quits: wkalt (~wkalt@user/wkalt) (*.net *.split)
[02:49:20] *** Quits: preisi (~preisi@prei.si) (*.net *.split)
[02:49:20] *** Quits: rbn_ (~rbn@orgizm.net) (*.net *.split)
[02:49:20] *** Quits: mrus (~mrus@149.28.61.155) (*.net *.split)
[02:49:20] *** Quits: aml_ (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (*.net *.split)
[02:49:20] *** Quits: finnb (~finnb@51.15.63.237) (*.net *.split)
[02:49:21] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (*.net *.split)
[02:49:21] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[02:49:21] *** Quits: BenLubar (~ben@cpe-65-28-175-139.wi.res.rr.com) (*.net *.split)
[02:49:21] *** Quits: dozn (uid249292@user/dozn) (*.net *.split)
[02:49:21] *** Quits: ganehag (~mikael@h-85-24-252-203.A192.priv.bahnhof.se) (*.net *.split)
[02:49:21] *** Quits: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net) (*.net *.split)
[02:49:21] *** Quits: soxhlet (~soxhlet@81.171.29.137) (*.net *.split)
[02:49:21] *** Quits: crazymax (~crazymax@user/crazymax) (*.net *.split)
[02:49:21] *** Quits: mva (znc@gentoo/developer/mva) (*.net *.split)
[02:49:21] *** Quits: mgubyt (u@mgub.yt) (*.net *.split)
[02:49:21] *** Quits: jemaclus (~jemaclus@64.227.108.73) (*.net *.split)
[02:49:21] *** Quits: gbmor (ben@gbmor.dev) (*.net *.split)
[02:49:21] *** Quits: chameleon (~chameleon@sourcehut/user/japanoise) (*.net *.split)
[02:49:21] *** Quits: drwasabi (drwasabi@tilde.team) (*.net *.split)
[02:49:21] *** Quits: pl (sid98063@brockwell.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: jsvcycling (sid369784@highgate.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: liam (sid7517@brockwell.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: mischief (~mischief@wopr.sciops.net) (*.net *.split)
[02:49:21] *** Quits: fgau (~fgau@mail.berliner-termindienst.de) (*.net *.split)
[02:49:21] *** Quits: KnKay (~kay@vmanager6813.v.reverse-ip.de) (*.net *.split)
[02:49:21] *** Quits: twaapo (~twaapo@91-152-242-177.elisa-laajakaista.fi) (*.net *.split)
[02:49:21] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[02:49:21] *** Quits: clee (~clee@mg8.org) (*.net *.split)
[02:49:21] *** Quits: Jazzah (~jazz@user/jazzah) (*.net *.split)
[02:49:21] *** Quits: cs_0x6373 (~verdammt_@user/cs-0x6373/x-8873866) (*.net *.split)
[02:49:21] *** Quits: debugloop (~danieln@2a03:4000:3b:565:98ae:d8ff:febd:d69a) (*.net *.split)
[02:49:21] *** Quits: alm (~alm@user/alm) (*.net *.split)
[02:49:21] *** Quits: jimcroft_____ (sid148498@highgate.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: pupskuchen (~pupskuche@user/pupskuchen) (*.net *.split)
[02:49:21] *** Quits: penguwin (~penguwin@fribbledom.com) (*.net *.split)
[02:49:21] *** Quits: a- (~lew@2a07:abc4::1:26e) (*.net *.split)
[02:49:21] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (*.net *.split)
[02:49:49] *** Joins: ChanServ (ChanServ@services.libera.chat)
[02:49:49] *** iridium.libera.chat sets mode: +o ChanServ
[02:50:09] *** Joins: habys (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c)
[02:50:09] *** Joins: recursion (sid504862@user/recursion)
[02:50:09] *** Joins: Xe (~cadey@tailscale/xe)
[02:50:09] *** Joins: Anderson-D (sid146635@id-146635.tinside.irccloud.com)
[02:50:09] *** Joins: cmagina (uid286142@user/cmagina)
[02:50:09] *** Joins: shrub (sid500598@user/psb)
[02:50:09] *** Joins: noteness (noteness@user/noteness)
[02:50:09] *** Joins: jackneilll (~jackneill@20014C4E181A4F00C4B4F3FE6613B3A9.unconfigured.pool.telekom.hu)
[02:50:09] *** Joins: cultpony (~cultpony@user/cultpony)
[02:50:09] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[02:50:09] *** Joins: ding (~ding@2001:19f0:5:14c2:5400:2ff:fee0:a42c)
[02:50:09] *** Joins: znpy (~znpy@user/znpy)
[02:50:09] *** Joins: trollixx (sid289131@id-289131.highgate.irccloud.com)
[02:50:09] *** Joins: gsthnz (~gsthnz@user/gsthnz)
[02:50:09] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[02:50:09] *** Joins: Dieterbe (~Dieterbe@user/dieterbe)
[02:50:09] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[02:50:09] *** Joins: dg (dgl@dg.wtf)
[02:50:09] *** Joins: longsleep (~quassel@2a02:c207:3001:216:1000::1)
[02:50:09] *** Joins: zkanda (~zkanda@box.makean.art)
[02:50:09] *** Joins: mdel (~mdel@user/mdel)
[02:50:09] *** Joins: zanshin (~zanshin@user/zanshin)
[02:50:09] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[02:50:09] *** Joins: kinduff (~kinduff@user/kinduff)
[02:50:09] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:50:09] *** Joins: binkers (~binkers@user/binkers)
[02:50:09] *** Joins: Gnuman (~gnuman@user/gnuman)
[02:50:09] *** Joins: acidsys (~LSD@2.lsd.systems)
[02:50:09] *** Joins: OnkelUlla (~uol@ptx.hi.pengutronix.de)
[02:50:09] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[02:50:09] *** Joins: bsandro (~bsandro@139.138.197.56)
[02:50:09] *** Joins: jay_wild (~very@138.68.15.221)
[02:50:09] *** Joins: CorbaTheGeek (~peter@99-167-204-9.lightspeed.sntcca.sbcglobal.net)
[02:50:09] *** Joins: vds (sid12483@id-12483.brockwell.irccloud.com)
[02:50:09] *** Joins: Balooga (sid407689@id-407689.tooting.irccloud.com)
[02:50:09] *** Joins: argonel (argonel@KDE/argonel)
[02:50:09] *** Joins: darkmuggle (darkmuggle@redhat/darkmuggle)
[02:50:09] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[02:50:09] *** Joins: feuerrot (~feuerrot@shells.chaosdorf.de)
[02:50:09] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[02:50:09] *** Joins: muesli (~muesli@fribbledom.com)
[02:50:09] *** Joins: sserra1 (~sserra@185.11.236.57.user.conectabalear.com)
[02:50:09] *** Joins: jer0me (~jerome@62-210-220-242.rev.poneytelecom.eu)
[02:50:09] *** Joins: henriquev_ (~henvic@user/henriquev)
[02:50:09] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:50:09] *** Joins: nahamu (~nahamu@tailscale/contributor/nahamu)
[02:50:09] *** Joins: marcel (~marcel@user/marcel)
[02:50:09] *** Joins: eau (~chat@user/eau)
[02:50:09] *** Joins: dove (~jordan@li1158-85.members.linode.com)
[02:50:09] *** Joins: alb (~nil@37.228.214.226)
[02:50:49] *** Joins: bea (~bea@user/bea)
[02:50:49] *** Joins: leah2 (~leah@vuxu.org)
[02:50:49] *** Joins: ochredoke (ochredoke@user/ochredoke)
[02:50:49] *** Joins: arthur (~arthur@2a02:390:9151:0:1c94:e381:bf81:7129)
[02:50:49] *** Joins: aza__ (~orrery@2600:6c50:407f:5100:164:8045:da20:3af5)
[02:50:49] *** Joins: Logiar (~logiar@nerdsluts.net)
[02:50:49] *** Joins: meinside (uid24933@id-24933.brockwell.irccloud.com)
[02:50:49] *** Joins: brooks (~bswinnert@containers.neptunenetworks.org)
[02:50:49] *** Joins: arcanez (~arcanez@warpedreality.org)
[02:50:49] *** Joins: siXy (~jfindley@centos/ops/sixy)
[02:50:49] *** Joins: teasea (~teasea@user/teasea)
[02:50:49] *** Joins: acohn (acohn@user/alexcohn)
[02:50:49] *** Joins: chimeracoder (sid230642@id-230642.brockwell.irccloud.com)
[02:50:49] *** Joins: welt (~welt@willow.spiderden.net)
[02:50:49] *** Joins: kissen (~kissen@user/kissen)
[02:51:21] *** Joins: iluxa (~iliaf@user/iluxa)
[02:51:28] *** Joins: holgersson (~quassel@user/holgersson)
[02:51:28] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[02:51:28] *** Joins: JPT_ (~jpt@classified.name)
[02:51:28] *** Joins: darkapex (uid360049@user/darkapex)
[02:51:28] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[02:51:28] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[02:51:28] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[02:51:28] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[02:51:28] *** Joins: jsanford (~jsanford@user/jsanford)
[02:51:28] *** Joins: lightstalker (~BT@user/lightstalker)
[02:51:28] *** Joins: raktajino (~raktajino@callisto.raktajino.club)
[02:51:28] *** Joins: asm (~alexander@user/asm)
[02:51:28] *** Joins: Rayke (rayke@user/rayke)
[02:51:28] *** Joins: psil (~krwlisp@karatefylla.nu)
[02:51:28] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[02:51:28] *** Joins: hdm (sid500490@aha/hacker/hdm)
[02:51:28] *** Joins: ddevault (znc@sourcehut/staff/ddevault)
[02:51:28] *** Joins: avoozl (~avoozl@escaflowne.hro.nl)
[02:51:28] *** Joins: gsora_ (~gsora@140.238.174.213)
[02:51:28] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[02:51:28] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[02:51:28] *** Joins: BenLubar (~ben@cpe-65-28-175-139.wi.res.rr.com)
[02:51:28] *** Joins: hendry (~hendry@210.23.22.2)
[02:51:28] *** Joins: eldritch__ (~eldritch@134.209.221.71)
[02:51:28] *** Joins: cfebs (~cfebs@user/cfebs)
[02:51:28] *** Joins: naos (~naos@user/naos)
[02:51:28] *** Joins: ikke (~kevin@alpine/developer/ikke)
[02:51:28] *** Joins: wkalt (~wkalt@user/wkalt)
[02:51:28] *** Joins: preisi (~preisi@prei.si)
[02:51:28] *** Joins: rbn_ (~rbn@orgizm.net)
[02:51:28] *** Joins: mrus (~mrus@149.28.61.155)
[02:51:28] *** Joins: aml_ (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se)
[02:51:28] *** Joins: finnb (~finnb@51.15.63.237)
[02:51:28] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[02:51:28] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[02:51:28] *** Joins: dozn (uid249292@user/dozn)
[02:51:28] *** Joins: ganehag (~mikael@h-85-24-252-203.A192.priv.bahnhof.se)
[02:51:28] *** Joins: fhs (~fhs@pool-74-101-98-114.nycmny.fios.verizon.net)
[02:51:28] *** Joins: soxhlet (~soxhlet@81.171.29.137)
[02:51:28] *** Joins: crazymax (~crazymax@user/crazymax)
[02:51:28] *** Joins: mva (znc@gentoo/developer/mva)
[02:51:28] *** Joins: mgubyt (u@mgub.yt)
[02:51:28] *** Joins: jemaclus (~jemaclus@64.227.108.73)
[02:51:28] *** Joins: twaapo (~twaapo@91-152-242-177.elisa-laajakaista.fi)
[02:51:28] *** Joins: gbmor (ben@gbmor.dev)
[02:51:28] *** Joins: mischief (~mischief@wopr.sciops.net)
[02:51:28] *** Joins: chameleon (~chameleon@sourcehut/user/japanoise)
[02:51:28] *** Joins: drwasabi (drwasabi@tilde.team)
[02:51:28] *** Joins: pl (sid98063@brockwell.irccloud.com)
[02:51:28] *** Joins: jsvcycling (sid369784@highgate.irccloud.com)
[02:51:28] *** Joins: liam (sid7517@brockwell.irccloud.com)
[02:51:28] *** Joins: penguwin (~penguwin@fribbledom.com)
[02:51:28] *** Joins: cs_0x6373 (~verdammt_@user/cs-0x6373/x-8873866)
[02:51:28] *** Joins: fgau (~fgau@mail.berliner-termindienst.de)
[02:51:28] *** Joins: KnKay (~kay@vmanager6813.v.reverse-ip.de)
[02:51:28] *** Joins: Byteflux (~byte@byteflux.net)
[02:51:28] *** Joins: clee (~clee@mg8.org)
[02:51:28] *** Joins: Jazzah (~jazz@user/jazzah)
[02:51:28] *** Joins: debugloop (~danieln@2a03:4000:3b:565:98ae:d8ff:febd:d69a)
[02:51:28] *** Joins: alm (~alm@user/alm)
[02:51:28] *** Joins: jimcroft_____ (sid148498@highgate.irccloud.com)
[02:51:28] *** Joins: pupskuchen (~pupskuche@user/pupskuchen)
[02:51:28] *** Joins: a- (~lew@2a07:abc4::1:26e)
[02:51:28] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[02:51:33] *** Joins: milosz (~milosz@user/milosz)
[02:51:33] *** Joins: GoLiath_ (~GoLiath@178.239.167.187)
[02:51:33] *** Joins: nabromov (~nabromov@217.138.202.116)
[02:51:33] *** Joins: Torr (~Torr@user/torr)
[02:51:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[02:51:33] *** Joins: fputs (~fputs@67.59.83.166)
[02:51:33] *** Joins: sedi (~lol@user/sedi)
[02:51:33] *** Joins: pepee (~user@user/pepee)
[02:51:33] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[02:51:33] *** Joins: daved (~daved@162.67.197.35.bc.googleusercontent.com)
[02:51:33] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[02:51:33] *** Joins: a1paca (~a1paca@user/a1paca)
[02:51:33] *** Joins: gwd (~gwd@xenbits.xenproject.org)
[02:51:33] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[02:51:33] *** Joins: lux0r (~lux0r@163.172.148.99)
[02:51:33] *** Joins: dirbaio2 (~dirbaio@nsmbhd.net)
[02:51:33] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[02:51:33] *** Joins: MD87 (~MD87@onl3.fr.929w.net)
[02:51:33] *** Joins: samf (~root@159.65.228.88)
[02:51:33] *** Joins: LawnGnome (~LawnGnome@user/lawngnome)
[02:51:33] *** Joins: flynn (~mcbloch@user/flynn)
[02:51:33] *** Joins: mweckbecker (~matthias@weckbecker.name)
[02:51:33] *** Joins: jadra_ (~jadra@chai.0xbad.coffee)
[02:51:33] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[02:51:33] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[02:51:33] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[02:51:33] *** Joins: tg (~tg@rockylinux/infra/tg)
[02:51:33] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[02:51:33] *** Joins: siika_ (~siika@139.226.40.153)
[02:51:33] *** Joins: c10l (~c10l@89.34.167.207)
[02:51:33] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[02:51:33] *** Joins: kochchef (~quassel@80.146.255.46)
[02:51:33] *** Joins: pztrn (~pztrn@user/pztrn)
[02:51:33] *** Joins: Sam (b8f15a4bbd@golang/sam)
[02:51:33] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:51:33] *** Joins: jespada (~jespada@90.254.247.46)
[02:51:33] *** Joins: KekSi (~KekSi@x4db6b464.dyn.telefonica.de)
[02:51:33] *** Joins: kiril (~kiril@85.91.153.163)
[02:51:33] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[02:51:33] *** Joins: mikeputnam (~mikeputna@wilug/mikeputnam)
[02:51:33] *** Joins: pgloor (~petergloo@mix.cubus.space)
[02:51:33] *** Joins: DM43078 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[02:51:33] *** Joins: lack (~lack@user/lack)
[02:51:33] *** Joins: solar_sea (~solar_sea@user/solar-sea/x-3088627)
[02:51:33] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:51:33] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[02:51:33] *** iridium.libera.chat sets mode: +o Sam
[02:51:33] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[02:51:33] *** Joins: trufas (~trufas@177.240.218.218)
[02:51:33] *** Joins: SoF (~skius@user/skius)
[02:51:33] *** Joins: g2anj (~v@221.142.186.101)
[02:51:33] *** Joins: Kahn (~Kahn@user/kahn)
[02:51:33] *** Joins: gregf (~gregf@user/gregf)
[02:51:33] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[02:51:33] *** Joins: francis (francis@user/francis)
[02:51:33] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[02:51:33] *** Joins: Kaivo (~Kaivo@user/kaivo)
[02:51:33] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[02:51:33] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[02:51:33] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[02:51:33] *** Joins: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de)
[02:51:33] *** Joins: aigoo (~aigoo@user/aigoo)
[02:51:33] *** Joins: RayS (~raysl@sdf1.xen.prgmr.com)
[02:51:33] *** Joins: d4ve (~d4ve@user/d4ve)
[02:51:33] *** Joins: ninjin (~ninjin@user/ninjin)
[02:51:33] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[02:51:33] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[02:51:33] *** Joins: particleflux (~particlef@ircb.hackthe.codes)
[02:51:33] *** Joins: Disconsented (~quassel@107.170.227.20)
[02:51:33] *** Joins: crowbar (~crowbar@user/crowbar)
[02:51:33] *** Joins: Rudde (~rudde@netboot.io)
[02:51:33] *** Joins: rewt (~default@user/rewt)
[02:51:33] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[02:51:33] *** Joins: marlinc_ (~marlinc@user/marlinc)
[02:51:33] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca)
[02:51:33] *** Joins: couture (~couture@user/couture)
[02:51:33] *** Joins: achilleas (~ach@user/achilleas)
[02:51:55] *** Joins: mickey (~user@user/mickey)
[02:51:55] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[02:51:55] *** Joins: thing (~thing@user/thing)
[02:51:55] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[02:51:55] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[02:52:00] *** Joins: morgan (~morgan@c-71-202-228-41.hsd1.ca.comcast.net)
[02:52:00] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[02:52:00] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[02:52:00] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[02:52:00] *** Joins: zikani03 (~Zikani@197.211.99.14)
[02:52:00] *** Joins: whoami (~whoami@d118-75-122-76.col.wideopenwest.com)
[02:52:00] *** Joins: Nulo (~Nulo@user/nulo)
[02:52:00] *** Joins: Vigdis (~danj@ns4.chown.me)
[02:52:00] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[02:52:00] *** Joins: tristero (~nobody@user/tristero)
[02:52:00] *** Joins: nperez (~nperez@nickandperla.net)
[02:52:00] *** Joins: kodah (~kodah@user/kodah)
[02:52:00] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[02:52:00] *** Joins: deafpiano (~tomlazar@cpe-65-26-56-76.wi.res.rr.com)
[02:52:00] *** Joins: j416 (~j416@user/j416)
[02:52:00] *** Joins: zerok (~zerok@user/zerok)
[02:52:00] *** Joins: halden (~halden@lden.im)
[02:52:00] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[02:52:00] *** Joins: LiftLeft2 (~LiftLeft@154.21.28.156)
[02:52:00] *** Joins: moto (~moto@user/moto)
[02:52:00] *** Joins: nekron (~nekron@noordsee.de)
[02:52:00] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[02:52:00] *** Joins: Ohlov3 (~Ohlov3@dyndsl-091-248-236-188.ewe-ip-backbone.de)
[02:52:00] *** Joins: sztanpet (sztanpet@user/sztanpet)
[02:52:00] *** Joins: treethought (treethou@138.68.49.251)
[02:52:00] *** Joins: lungaro2 (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[02:52:00] *** Joins: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com)
[02:52:00] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[02:52:00] *** Joins: jinie (~jimmy@188.114.173.37)
[02:52:00] *** Joins: howeyc (~howeyc@user/howeyc)
[02:52:00] *** Joins: nimmen (~strangerf@78-61-239-159.static.zebra.lt)
[02:52:00] *** Joins: kipukun (~kipukun@207.244.104.227)
[02:52:00] *** Joins: yelnah (~felix@27-32-64-92.static.tpgi.com.au)
[02:52:00] *** Joins: Cork (~Cork@user/cork)
[02:52:00] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[02:52:00] *** Joins: Tharro (~Tharro@51.15.91.154)
[02:52:00] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[02:52:00] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[02:52:00] *** Joins: wolfshappen (~waff@irc.furworks.de)
[02:52:00] *** Joins: foobaz (~oofabz@199.58.97.156)
[02:52:00] *** Joins: paruh (~paruh@92.60.39.18)
[02:52:00] *** Joins: ansimita (~ansimita@user/ansimita)
[02:52:13] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[02:52:13] *** Joins: Xjs (~jannis@user/xjs)
[02:52:13] *** Joins: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001)
[02:52:13] *** Joins: dan- (~d@ircdocs/dan-)
[02:52:13] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[02:52:13] *** Joins: gildarts (16abab341f@user/gildarts)
[02:52:13] *** Joins: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com)
[02:52:13] *** Joins: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748)
[02:52:13] *** Joins: st3fan (sid43079@id-43079.tooting.irccloud.com)
[02:52:13] *** Joins: gt (~gt@2001:19f0:9002:6dc:42e5:a008:491c:b050)
[02:52:13] *** Joins: DaftMonk (sid201914@user/daftmonk)
[02:52:13] *** Joins: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107)
[02:52:13] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[02:52:13] *** Joins: kaleido_ (~adam@2604:4300:a:22a:202:c9ff:fec1:9e70)
[02:52:13] *** Joins: karl (~Karlssel@2001:41d0:8:9a4b::1)
[02:52:13] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[02:52:13] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[02:52:13] *** Joins: jhenson (~jhenson@user/jhenson)
[02:52:13] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[02:52:13] *** Joins: frost (~frost@59.71.242.236)
[02:52:13] *** Joins: sagax (~sagax@213.138.71.146)
[02:52:13] *** Joins: jsrnop (~mark@user/jsrnop)
[02:52:13] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[02:52:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[02:52:13] *** Joins: philmacfly (~philmacfl@galaxie.weltraumhochofen.space)
[02:52:13] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[02:52:13] *** Joins: bloony (~bloony@2a02:2121:309:b13c:1c13:86d4:5401:3)
[02:52:13] *** Joins: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net)
[02:52:13] *** Joins: egy (egy@tilde.team)
[02:52:13] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[02:52:13] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[02:52:13] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[02:52:13] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:a2f3:c589:2a5f:8ac9)
[02:52:13] *** Joins: Valentine (~valentine@hackerspacesg/valentine)
[02:52:13] *** Joins: endigma (~endigma@134.41.133.214)
[02:52:13] *** Joins: GinjaNinja32 (~nyx@thanatos.gn32.uk)
[02:52:13] *** Joins: Teckla (~Teckla@user/teckla)
[02:52:13] *** Joins: cation (cation@user/cation)
[02:52:13] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[02:52:14] *** Quits: dozn (uid249292@user/dozn) (Ping timeout: 252 seconds)
[02:52:35] *** Joins: avemestr (~avemestr@2a01:4f8:212:2719::2)
[02:52:35] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:52:35] *** Joins: V (~v@anomalous.eu)
[02:52:35] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[02:52:35] *** Joins: acid (~acid@user/acid)
[02:52:35] *** Joins: freswa (~freswa@2a01:4f8:1c0c:804b::2)
[02:52:35] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[02:52:35] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[02:52:35] *** Joins: erri (~meow@52.8.199.178)
[02:52:35] *** Joins: Arahael (~arahael@120.88.166.123)
[02:52:35] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[02:52:35] *** Joins: m-kad (~quassel@2a02:c207:2043:4525::1)
[02:52:35] *** Joins: zutt (~zutt@user/zutt)
[02:52:35] *** Joins: l2dy (~l2dy@user/l2dy)
[02:52:35] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[02:52:35] *** Joins: jhchabran (~jhchabran@user/jhchabran)
[02:52:35] *** Joins: devx (~devx@151.233.209.35.bc.googleusercontent.com)
[02:52:35] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[02:52:35] *** Joins: noonien (~noonien@user/noonien)
[02:52:35] *** Joins: Kyros (~kyros@user/kyros)
[02:52:35] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[02:52:35] *** Joins: purpleidea (~james@user/purpleidea)
[02:52:35] *** Joins: davzie (sid504337@id-504337.charlton.irccloud.com)
[02:52:35] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[02:52:35] *** Joins: yama_ (~yama@097-090-153-102.biz.spectrum.com)
[02:52:35] *** Joins: strudl (~strudl@user/strudl)
[02:52:35] *** Joins: kzrl (~kzrl@149.28.171.210)
[02:52:35] *** Joins: Ekho (~Ekho@user/ekho)
[02:52:35] *** Joins: chilversc (~chilversc@user/chilversc)
[02:52:35] *** Joins: sshow (~sshow@seven.hackeriet.no)
[02:52:35] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[02:52:35] *** Joins: bougyman (~bougyman@user/bougyman)
[02:52:35] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[02:52:35] *** Joins: Rhys (Rhys@help.lux.melted.me)
[02:52:35] *** Joins: obviyus (sid415299@user/obviyus)
[02:52:35] *** Joins: n1000 (~n1000@user/n1000)
[02:52:35] *** Joins: redlegion (sid429547@id-429547.charlton.irccloud.com)
[02:52:35] *** Joins: telemachus (sid2004@id-2004.brockwell.irccloud.com)
[02:52:35] *** Joins: fizzie (irc@selene.zem.fi)
[02:52:35] *** Joins: frobnitz (~ian@photon.remmler.org)
[02:52:35] *** Joins: lvlinux (~ruel@falcon.ruhnet.net)
[02:52:35] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[02:52:35] *** Joins: sus (thelounge@user/zeromomentum)
[02:52:35] *** Joins: A_Dragon (A_D@doom-tower.awesome-dragon.science)
[02:52:35] *** Joins: DePingus (~depingus@2001:bc8:1828:213f::1)
[02:52:35] *** Joins: sgarciapdx (~serge@irc.shork.io)
[02:52:35] *** Joins: danderson (~dave@tailscale/danderson)
[02:52:35] *** iridium.libera.chat sets mode: +v danderson
[02:52:44] *** Joins: schmillin (~schmillin@user/schmillin)
[02:52:44] *** Joins: ultralisk (~ultralisk@2a00:23c6:4b0e:e900:75db:cb84:2f7c:da2)
[02:52:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:52:44] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[02:52:44] *** Joins: jaguar (jag@maddshark.com)
[02:52:44] *** Joins: toshywoshy (~toshywosh@ptr-377wf33o3bnthuddmycb.18120a2.ip6.access.telenet.be)
[02:52:44] *** Joins: explodes (~explodes@user/explodes)
[02:52:44] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[02:52:44] *** Joins: diff (~diff@tilde.town)
[02:52:44] *** Joins: aarchi (sid486183@id-486183.highgate.irccloud.com)
[02:52:44] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:1deb:3346:f463:745e:77a4)
[02:52:44] *** Joins: jai (~darkapex@user/darkapex)
[02:52:44] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[02:52:44] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[02:52:44] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[02:52:44] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:597:b5cf:3629:f483)
[02:52:44] *** Joins: src (~src@user/src)
[02:52:44] *** Joins: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl)
[02:52:44] *** Joins: novns (~novns@user/novns)
[02:52:44] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[02:52:44] *** Joins: keiser009107 (~keiser@83.25.191.2.ipv4.supernova.orange.pl)
[02:52:45] *** Joins: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de)
[02:52:45] *** Joins: kindablue (znc@irc.tpurist.com)
[02:52:45] *** Joins: dalan (~dalan@118.102.85.89)
[02:52:45] *** Joins: Chepra (~chepra@summer.c137.eu)
[02:52:45] *** Joins: rudi_s (~simon@user/rudi-s/x-7673890)
[02:52:45] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[02:52:45] *** Joins: jdrab (~jdrab@user/jdrab)
[02:52:45] *** Joins: Ruxnor (kevin@user/kddlb)
[02:52:45] *** Joins: thiccdaddy (~OwO@thiccdaddy.sexy)
[02:52:45] *** Joins: McQuestionable (uid505670@id-505670.highgate.irccloud.com)
[02:53:26] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 246 seconds)
[02:53:28] *** Joins: PedroG1 (~android@45.77.216.181)
[02:53:28] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:53:28] *** Joins: Jigsy (~Jigsy@user/jigsy)
[02:53:28] *** Joins: loosh (~jason@vultr.bastion.pnj1.us.zj.is)
[02:53:28] *** Joins: gcd_ (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[02:53:28] *** Joins: aram (~aram@9front.army)
[02:53:28] *** Joins: Shimmy (~Shimmy@user/shimmy)
[02:53:28] *** Joins: buz (~buz@damn.serious.im)
[02:53:28] *** Joins: deniska (~denis@user/deniska)
[02:53:28] *** Joins: LtHummus (~lthummus@174-21-28-50.tukw.qwest.net)
[02:53:28] *** Joins: sayoun (~sayoun@kwiky.fr)
[02:53:28] *** Joins: daegalus (~yulian@user/daegalus)
[02:53:28] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[02:53:28] *** Joins: MrFantastik (~Thunderbi@98.1.50.67)
[02:53:28] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[02:53:28] *** Joins: icy (~icy@user/icy)
[02:53:28] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[02:53:28] *** Joins: skrzyp (~skrzyp@skrzyp.net)
[02:53:28] *** Joins: jimeh (~jimeh@51.15.210.236)
[02:53:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:53:28] *** Joins: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt)
[02:53:28] *** Joins: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com)
[02:53:28] *** Joins: dza (~dza@user/dza)
[02:53:28] *** Joins: smitop (~smitop@user/smitop)
[02:53:28] *** Joins: fmac (~fmac@luna.fmac.xyz)
[02:53:28] *** Joins: sudden (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[02:53:28] *** Joins: huf (~huf@user/huf)
[02:53:28] *** Joins: caubert (~caubert@136.244.111.235)
[02:53:28] *** Joins: noarb (~noarb@user/noarb)
[02:53:28] *** Joins: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com)
[02:53:28] *** Joins: rshinzon3 (~rshinzon@130.61.156.43)
[02:53:28] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[02:53:28] *** Joins: seebs (~seebs@24.196.59.174)
[02:53:28] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[02:53:28] *** Joins: g4wjs (~quassel@mail.classdesign.com)
[02:53:28] *** Joins: pots (~pots@20.51.220.66)
[02:53:28] *** Joins: vhost- (~vhost@65.102.48.134)
[02:53:28] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[02:53:28] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:53:28] *** Joins: strubbl8919 (~strubbl@ipbcc18e84.dynamic.kabel-deutschland.de)
[02:53:28] *** Joins: eagleflo (~aku@eagleflow.fi)
[02:53:28] *** iridium.libera.chat sets mode: +v aram
[02:53:29] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:53:29] *** Joins: jomag (~jonatan@31-209-59-170.cust.bredband2.com)
[02:53:29] *** Joins: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e)
[02:53:29] *** Joins: kadoban (~kadoban@user/kadoban)
[02:53:29] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[02:53:29] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[02:53:29] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[02:53:29] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[02:53:29] *** Joins: losinggeneration (~quassel@64.225.54.254)
[02:53:29] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[02:53:29] *** Joins: dongkyun (~dongkyun@2604:a880:2:d1::10c:d001)
[02:53:29] *** Joins: ventic (ircbouncer@3v.fi)
[02:53:29] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[02:53:29] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[02:53:29] *** Joins: ari (~ari@vmi500470.contaboserver.net)
[02:53:29] *** Joins: martin_ (martin@185.71.208.255)
[02:53:29] *** Joins: corby (~corby@c0rby.de)
[02:53:29] *** Joins: greypw (~greypw@grey.pw)
[02:53:29] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[02:53:29] *** Joins: b0nn (~shane@user/b0nn)
[02:53:29] *** Joins: mika (~mika@odysseus.grml.info)
[02:53:29] *** Joins: jybs (~james@110-175-225-162.static.tpgi.com.au)
[02:53:29] *** Joins: doghackit2 (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net)
[02:53:29] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:53:29] *** Joins: alrs (alrs@tilde.team)
[02:53:29] *** Joins: kinlo (~peter@user/kinlo)
[02:53:29] *** Joins: wmo (~quassel@2604:a880:2:d0::1df0:b001)
[02:53:29] *** Joins: irq0 (~seri@amy.irq0.org)
[02:53:29] *** Joins: bertiger (~bertiger@user/bertiger)
[02:53:29] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[02:53:29] *** Joins: markkuit (~markkuit@user/markkuit)
[02:53:29] *** Joins: Lost (~spinning@user/lost)
[02:53:29] *** Joins: nickster (~nickster@67.207.91.6)
[02:53:30] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 272 seconds)
[02:53:30] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Ping timeout: 250 seconds)
[02:53:30] *** Quits: liam (sid7517@brockwell.irccloud.com) (Ping timeout: 252 seconds)
[02:53:36] *** Joins: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d)
[02:53:36] *** Joins: cfjk (~cfjk@user/cfjk)
[02:53:36] *** Joins: edr (~edr@user/edr)
[02:53:36] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[02:53:36] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[02:53:36] *** Joins: L1Cafe (~L1Cafe@user/l1cafe)
[02:53:36] *** Joins: sneak (~sneak@datavi.be)
[02:53:36] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[02:53:36] *** Joins: eggsampler (~ur@s.id-rsa.pub)
[02:53:36] *** Joins: rabbitear (~juice@142.93.115.104)
[02:53:36] *** Joins: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980)
[02:53:36] *** Joins: gjnoonan (sid95422@id-95422.tooting.irccloud.com)
[02:53:36] *** Joins: jjhoo (jahakala@dsl-trebng21-58c18f-56.dhcp.inet.fi)
[02:53:36] *** Joins: stefanc_diff (~stefanc_d@cpc97950-croy24-2-0-cust78.19-2.cable.virginm.net)
[02:53:36] *** Joins: shadowchaser (~Shadowcha@liox.eu)
[02:53:36] *** Joins: dreistadt (uid501648@id-501648.tooting.irccloud.com)
[02:53:36] *** Joins: eyJhb (~eyJhb@user/eyjhb)
[02:53:36] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[02:53:36] *** Joins: stmuk (~steve@15.43.187.81.in-addr.arpa)
[02:53:36] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[02:53:36] *** Joins: tpr (~tpr@user/tpr)
[02:53:36] *** Joins: sjas (~sjas@irc.sjas.de)
[02:53:36] *** Joins: soren (sid124229@id-124229.highgate.irccloud.com)
[02:53:36] *** Joins: arusso (~arusso@user/arusso)
[02:53:37] *** Rhys is now known as 074AABZX6
[02:53:38] *** Joins: michele (~eraser@user/michele)
[02:53:38] *** Joins: snappy (~snappy@user/snappy)
[02:53:38] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[02:53:38] *** Joins: speatzle_ (~speatzles@2001:470:69fc:105::1003)
[02:53:38] *** Joins: mambang[m] (~mambang@user/mambang)
[02:53:38] *** Joins: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b)
[02:53:38] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[02:53:38] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[02:53:38] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[02:53:38] *** Joins: thinkofher (uid503725@user/thinkofher)
[02:53:38] *** Joins: sebito91 (~sborza@45.55.74.66)
[02:53:38] *** Joins: nebiros (~nebiros@user/nebiros)
[02:53:38] *** Joins: Schoentoon (~Schoentoo@schoentoon.com)
[02:53:38] *** Joins: Xu_R (~dev-dsk-x@user/xu-r/x-9187770)
[02:53:38] *** Joins: eivindr_ (~eivindr@99.109-247-211.customer.lyse.net)
[02:53:38] *** Joins: Shrike (sid305680@id-305680.brockwell.irccloud.com)
[02:53:38] *** Joins: kori (kori@user/kori)
[02:53:38] *** Joins: dkeohane (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[02:53:38] *** Joins: laymanX (~laymanX@166.70.232.152)
[02:53:38] *** Joins: hedy (hedy@tilde.team/user/hedy)
[02:53:38] *** Joins: qzio (~qzio@198.167.223.200)
[02:53:38] *** Joins: dale (dale@user/dale)
[02:53:38] *** Joins: r0bby (r0bby@user/r0bby)
[02:53:38] *** Joins: nj (nicholas@stop.disconnecting.me)
[02:53:38] *** Joins: tnez (~el@user/tnez)
[02:53:38] *** Joins: KBme (~KBme@ra.ndom.dev)
[02:53:38] *** Joins: Fossil (~Fossil@95.85.23.165)
[02:53:38] *** Joins: decartes (uid240036@id-240036.brockwell.irccloud.com)
[02:53:38] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[02:53:38] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[02:53:38] *** Joins: wnd (wnd@extirc.katei.fi)
[02:53:38] *** Joins: SmokedCheese (nyoroon@2a01:7e01::f03c:91ff:fed1:d9ef)
[02:53:38] *** Joins: ks_ (~kevin@nyc-0.mil.lat)
[02:53:38] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[02:53:38] *** Joins: pjs (~pjs@user/pjs)
[02:53:38] *** Joins: qaisjp (sid26374@user/qaisjp)
[02:53:38] *** Joins: cooper (~mitchell@user/cooper)
[02:53:48] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Max SendQ exceeded)
[02:53:48] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[02:53:55] *** Joins: dostoyev1ky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:54:03] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Max SendQ exceeded)
[02:54:03] *** Quits: smitop (~smitop@user/smitop) (Max SendQ exceeded)
[02:54:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[02:54:15] *** Quits: dostoyev1ky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[02:54:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Max SendQ exceeded)
[02:54:19] *** Quits: schmillin (~schmillin@user/schmillin) (Max SendQ exceeded)
[02:54:21] *** Joins: rk4 (~r@user/rk4)
[02:54:21] *** Joins: jolan (~jolan@ec2.jolan.org)
[02:54:21] *** Joins: brb (~brb@user/brb)
[02:54:21] *** Joins: tdmackey (~tdmackey@booleanhaiku.com)
[02:54:21] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[02:54:21] *** Joins: haliucinas (~haliucina@5.20.153.21)
[02:54:21] *** Joins: koolazer (~koo@user/koolazer)
[02:54:21] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[02:54:21] *** Joins: jlindgren (~jlindgren@user/jlindgren)
[02:54:21] *** Joins: Archwyrm (~archwyrm@archwyrm.net)
[02:54:24] *** Joins: Patater (~patater@patater.com)
[02:54:24] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[02:54:24] *** Joins: nachoes (~nachoes@user/nachoes)
[02:54:24] *** Joins: ds (~dshoreman@user/ds)
[02:54:24] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[02:54:24] *** Joins: batdog (~batdog@lnsq.elkins.co)
[02:54:52] *** Quits: koolazer (~koo@user/koolazer) (Max SendQ exceeded)
[02:55:03] *** Joins: yamchah2 (~yamchah2@202.61.192.225)
[02:55:03] *** Joins: seds (sid492514@id-492514.brockwell.irccloud.com)
[02:55:03] *** Joins: Eddward (~Eddward@207.138.204.132)
[02:55:03] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[02:55:03] *** Joins: popey (~popey@ubuntu/member/popey)
[02:55:03] *** Joins: jjonah (~jjonah@p200300d5d71ebc00dea632fffeb3342f.dip0.t-ipconnect.de)
[02:55:03] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[02:55:03] *** Joins: andlabs (~andlabs@71.190.119.164)
[02:55:03] *** Joins: alip (~alip@exherbo/developer/alip)
[02:55:19] *** Joins: koolazer (~koo@212.47.237.37)
[02:55:38] *** Joins: dozn (uid249292@id-249292.brockwell.irccloud.com)
[02:56:39] *** Joins: liam (sid7517@id-7517.brockwell.irccloud.com)
[02:56:42] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[02:56:57] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:57:06] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 268 seconds)
[02:57:34] *** Quits: jai (~darkapex@user/darkapex) (Ping timeout: 246 seconds)
[02:57:37] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[02:57:44] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 252 seconds)
[02:57:47] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[02:58:03] *** Quits: speatzle_ (~speatzles@2001:470:69fc:105::1003) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: mambang[m] (~mambang@user/mambang) (Ping timeout: 272 seconds)
[02:58:20] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[02:58:22] *** Joins: SincereFox (uid337158@id-337158.stonehaven.irccloud.com)
[02:58:25] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Ping timeout: 272 seconds)
[02:58:27] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 272 seconds)
[02:58:41] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[03:00:55] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[03:01:18] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[03:01:31] *** Quits: ultralisk (~ultralisk@2a00:23c6:4b0e:e900:75db:cb84:2f7c:da2) ()
[03:01:40] <src> is there a way in Go to somehow visualize internally what is stack and what is heap memory and how it's managed somehow?
[03:01:57] *** Joins: ChanServ (ChanServ@services.libera.chat)
[03:01:57] *** iridium.libera.chat sets mode: +o ChanServ
[03:02:07] *** Quits: SincereFox (uid337158@id-337158.stonehaven.irccloud.com) (Changing host)
[03:02:07] *** Joins: SincereFox (uid337158@user/sincerefox)
[03:02:08] <src> I can print the memory address using &, I can print the type using Printf and %T, can I somehow do something with regards to get info on memory management?
[03:02:08] *** Quits: seds (sid492514@id-492514.brockwell.irccloud.com) (Changing host)
[03:02:08] *** Joins: seds (sid492514@user/seds)
[03:02:08] *** Quits: dozn (uid249292@id-249292.brockwell.irccloud.com) (Changing host)
[03:02:08] *** Joins: dozn (uid249292@user/dozn)
[03:02:35] *** Joins: arcatech (~arcatech@user/arcatech)
[03:02:40] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[03:02:41] *** Joins: LSD (~LSD@2.lsd.systems)
[03:02:43] *** Joins: schmillin (~schmillin@user/schmillin)
[03:02:52] <KirkMcDonald> src: You could dump the disassembly, I suppose.
[03:02:52] *** Joins: CommunistWolf (~gulag@user/communistwolf)
[03:02:53] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[03:02:53] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[03:02:57] <KirkMcDonald> s/dis//
[03:03:02] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Client Quit)
[03:03:19] <KirkMcDonald> src: Note that using & to take the address can change where it is allocated.
[03:03:23] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Remote host closed the connection)
[03:03:24] *** Joins: LSD (~LSD@2.lsd.systems)
[03:03:27] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[03:03:30] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[03:03:59] *** Joins: LSD (~LSD@2.lsd.systems)
[03:04:06] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[03:04:28] <src> KirkMcDonald: k damn I was hoping for maybe a more straightforward (even intended) way to achieve this
[03:04:49] *** Joins: LSD (~LSD@2.lsd.systems)
[03:05:00] <KirkMcDonald> src: As far as the language itself is concerned, it does not make any such distinction.
[03:05:52] *** Joins: holgersson (~quassel@user/holgersson)
[03:06:04] <src> "variables of value typea re contained in stack memory", "variables that are referenced are stored in the heap, which is garbage collected and which is a much larger memory space than the stack"
[03:06:08] <src> is this wrong?
[03:06:23] <src> *value type are
[03:07:29] *** Joins: mickey7 (~user@user/mickey)
[03:08:14] <rk4> sounds very implementation dependant, taking the address of a variable on the stack can be fine, depending on the circumstances, whether gc does it nfi!
[03:08:29] <KirkMcDonald> Yeah, it depends on escape analysis.
[03:08:38] <KirkMcDonald> And really it's up to the compiler's whim.
[03:08:56] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 244 seconds)
[03:08:56] *** Quits: OnkelUlla (~uol@ptx.hi.pengutronix.de) (Ping timeout: 244 seconds)
[03:09:10] *** Quits: b0nn (~shane@user/b0nn) (Ping timeout: 272 seconds)
[03:09:13] *** Joins: xy (~icy@user/icy)
[03:09:17] *** Quits: avoozl (~avoozl@escaflowne.hro.nl) (Ping timeout: 252 seconds)
[03:09:17] *** Quits: twaapo (~twaapo@91-152-242-177.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[03:09:25] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[03:09:26] *** mickey7 is now known as mickey
[03:09:58] *** Quits: icy (~icy@user/icy) (Ping timeout: 268 seconds)
[03:10:03] *** Joins: avoozl (~avoozl@escaflowne.hro.nl)
[03:10:08] *** Joins: OnkelUlla (~uol@ptx.hi.pengutronix.de)
[03:10:09] <KirkMcDonald> I'd suspect that of you declare a local of an array type, there's probably some size where it switches from the stack to the heap.
[03:10:13] <KirkMcDonald> s/of/if/
[03:10:22] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[03:10:24] *** Joins: twaapo (~twaapo@91-152-242-177.elisa-laajakaista.fi)
[03:10:43] <src> k, so it isn't as straightforward in GO
[03:10:52] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[03:10:56] <src> I guess the point of Go is to not care as much about it as in C for example
[03:11:00] <src> and just let Go handle it
[03:11:00] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[03:11:07] *** Joins: mickey (~user@user/mickey)
[03:11:11] <rk4> no, go at runtime is pretty complicated, though the language is simple
[03:11:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[03:11:25] <KirkMcDonald> As far as the language is concerned, there are variables, and they live so long as they can be reached.
[03:13:31] <rk4> KirkMcDonald: what would be the advantage of storing large objects on the heap? iirc the stack is dynamically sized[?] so could they just live there? or is resizing the stack a big copy operation or something
[03:13:52] <KirkMcDonald> rk4: It may be that my instincts are being colored by languages which don't do that.
[03:13:55] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 258 seconds)
[03:14:26] <src> this is interesting I guess https://stackoverflow.com/a/10866871
[03:14:45] <src> which reconfirms things that have already been said in here by KirkMcDonald
[03:16:48] <KirkMcDonald> One thing that may be worth pointing out is the way the spec uses the word "variable," which may not be immediately intuitive: "A variable is a storage location for holding a value."
[03:17:14] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[03:17:19] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[03:17:20] <KirkMcDonald> So, for example, calling new() creates a variable.
[03:17:26] <KirkMcDonald> Albeit an anonymous one.
[03:17:33] *** Joins: b0nn (~shane@user/b0nn)
[03:18:59] <rk4> src: what's your interest in this, anyhow?
[03:19:04] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[03:19:16] <src> rk4: I've read it in a book and was wondering
[03:19:49] <src> I often try writing .go programs that visualize certain things about the language, so to somehow visualize memory management with easy go code would have been nice
[03:20:04] <src> like %T to find out types, & to see memory addresses etc
[03:21:18] <foobaz212> say I spun a goroutine that runs an infinite loop, but the main thread ends. Is the goroutine still running somewhere?
[03:21:33] <foobaz212> (sorry if it's a silly question; just trying to clear up some concepts)
[03:21:55] <lazyreader> Nope, goroutines do not survive program exit
[03:21:56] *** Joins: justache (~justache@user/justache)
[03:21:59] <src> if I understand correctly the goroutine stops running, if you spin up a goroutine in main() {} and main{} ends the goroutine simply stops
[03:22:25] *** Joins: gilesc (~textual@2603-8001-3600-dad7-cd9e-3696-4f85-c459.res6.spectrum.com)
[03:22:31] <Tv_> re stack vs heap, passing something to fmt.Println will most likely make it escape -> all your pointers are forced to heap
[03:22:55] <foobaz212> yeah I thought as much, since if a process ends, the threads in it cannot possibly survive...was just a bit curious though
[03:22:55] <KirkMcDonald> Yup.
[03:23:24] <lazyreader> (goroutines are not separate processes, to be clear. All goroutines exist within a single process, and their lifespans are tied to that process.)
[03:23:34] <rk4> src: go build -gcflags i think has a flag to print out heap allocations that might be useful, also the builtin profiling in go will measure allocations to some degree
[03:23:49] <foobaz212> yup it's a lightweight thread
[03:23:57] <Tv_> foobaz212: runtime.Goexit() in main can make main goroutine exit while keeping the app running
[03:24:02] <KirkMcDonald> Consider this example, which I believe is tweaking the escape analyzer just so: https://play.golang.org/p/QZHg4jRmm6t
[03:24:42] <lazyreader> Sort of. They’re not the _same_ as threads. They’re scheduled _onto_ threads. Also, that’s implementation-dependent, I believe.
[03:25:05] <lazyreader> Tv_ huh, what’s the point of that?
[03:25:20] <Tv_> lazyreader: why not?
[03:25:46] <Tv_> lazyreader: more like, the fact that go process exits when main() ends is added code as an extra convenience to the typical programmer
[03:26:06] <Tv_> pretend main has a defer syscall.Exit(blah)
[03:26:11] <lazyreader> I suppose there’s nothing special about the main goroutine, yeah. Just wondering what the practical usecase would be.
[03:26:27] <Tv_> (except Goexit would run that defer too; it's special cased)
[03:26:32] <src> sounds like a good thing that if the program exits not a thousand goroutines run somewhere until infinity
[03:26:46] <Tv_> src: that's a confused understanding of what a unix process is
[03:26:57] <Tv_> there's no such thing as the process exiting with goroutines left behind
[03:27:19] <Tv_> the whole thing goes poof at the exit syscall
[03:27:45] *** Quits: jjonah (~jjonah@p200300d5d71ebc00dea632fffeb3342f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:28:05] <Tv_> lazyreader: sometimes it's neater to not bless one of N things as the special one that gets to be in main
[03:30:15] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[03:30:17] <lazyreader> I guess. Still kinda hard to see the point over just blocking on a channel until all the other goroutines are done…
[03:30:37] <lazyreader> But whatever, neat that the runtime lets you do it to being with.
[03:30:54] <b0nn> it's a parent/child thing
[03:32:41] <Tv_> lazyreader: sometimes you write things that are never intended to cleanly shut down; there's even a pretty good argument that that's better for the overall system
[03:33:10] <Tv_> ("Crash-Only Software", HOTOS2003)
[03:33:37] <lazyreader> The Erlang approach
[03:33:51] <lazyreader> (among others)
[03:34:06] <Tv_> not quite the same, this is more about persistent state than how to structure the runtime
[03:40:05] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[03:41:27] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:43:47] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[03:44:01] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[03:47:35] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:47:44] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[03:47:59] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[03:54:22] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:58:24] *** Joins: andlabs (~andlabs@71.190.119.164)
[04:00:51] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[04:01:39] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:03:11] *** Quits: gilesc (~textual@2603-8001-3600-dad7-cd9e-3696-4f85-c459.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:04:58] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[04:06:27] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:06:44] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:07:27] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:08:00] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:08:22] *** Quits: ari (~ari@vmi500470.contaboserver.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:09:10] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:10:35] *** Joins: ari (~ari@vmi500470.contaboserver.net)
[04:11:37] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:12:55] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:13:45] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:14:02] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:14:23] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:14:51] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:15:58] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Ping timeout: 246 seconds)
[04:16:11] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1000)
[04:16:26] *** Joins: dmgk (~dmgk@user/dmgk)
[04:17:16] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:18:18] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1000) (Client Quit)
[04:18:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:19:41] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:21:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:22:06] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[04:23:03] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:25:47] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:26:51] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:26:52] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:27:16] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:28:41] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:29:53] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:30:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:31:00] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:31:05] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:31:40] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:31:40] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:33:56] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:34:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:34:46] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:35:56] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:36:03] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[04:36:51] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:38:49] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:40:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:42:38] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:42:59] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:43:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:43:58] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:44:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:45:42] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:29] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:47:19] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:47:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:47:33] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:48] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:48:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:49:07] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[04:49:22] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (Quit: Gateway shutdown)
[04:49:23] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:49:39] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[04:51:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:53:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[04:55:43] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[04:56:08] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[04:56:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[04:56:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[04:56:25] *** Joins: ac1 (~Guest1907@193.32.126.239)
[04:57:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:00:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:02:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:02:36] *** Quits: nabromov (~nabromov@217.138.202.116) (Ping timeout: 252 seconds)
[05:04:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:06:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:09:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:10:51] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:11:26] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:13:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:15:08] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:18:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:18:09] *** Quits: Nulo (~Nulo@user/nulo) (Remote host closed the connection)
[05:18:23] *** Joins: Nulo (~Nulo@user/nulo)
[05:19:01] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[05:19:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:20:25] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:20:26] *** Quits: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[05:20:58] *** Quits: siika_ (~siika@139.226.40.153) (Remote host closed the connection)
[05:21:04] *** Joins: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com)
[05:21:14] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:21:26] *** Joins: siika_ (~siika@139.226.50.205)
[05:22:21] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:23:45] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:23:51] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:24:35] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:26:03] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:26:43] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:28:02] *** Joins: hdcase (~hdcase@sprawl.city)
[05:28:14] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:30:04] *** Quits: hdcase (~hdcase@sprawl.city) (Client Quit)
[05:30:27] <raktajino> I'm currently working on a client for a RESTful API and struggling a bit with the "correct" way to supply parameters for the GET endpoints. My first iteration of this used map[string]string to provide the parameters, which worked well enough, but it seems like go really wants me to use structs for this instead. The problem is turning an arbitrary struct into URL parameters seems...nontrivial.
[05:30:57] <raktajino> Is there anything in the way of outside reading or examples of code that does this in an idiomatic go fashion?
[05:31:16] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:31:58] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[05:31:59] <raktajino> I must surely be overthinking this, but I have the time, capacity, and willingness to spend the time to understand the "right" way to do this. And I am fairly new to golang in general, any pointers are appreciated.
[05:32:14] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:32:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:33:11] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[05:33:50] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:34:06] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:34:28] *** Quits: siika_ (~siika@139.226.50.205) (Remote host closed the connection)
[05:34:37] *** Joins: hdcase (~hdcase@sprawl.city)
[05:34:50] *** Joins: siika_ (~siika@223.166.246.51)
[05:34:58] *** Quits: morgan (~morgan@c-71-202-228-41.hsd1.ca.comcast.net) (Changing host)
[05:34:58] *** Joins: morgan (~morgan@user/morgan)
[05:35:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:37:12] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:39:56] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:40:03] *** gcd_ is now known as gcd
[05:41:19] *** Quits: nperez (~nperez@nickandperla.net) (Ping timeout: 265 seconds)
[05:41:26] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:41:45] <novns> raktajino, you don't have to invent wheels, you can use fasthttp with router
[05:42:01] <novns> https://github.com/fasthttp/router
[05:42:12] <novns> https://github.com/valyala/fasthttp
[05:42:21] <novns> these things are pretty fast
[05:42:49] <raktajino> 👀
[05:42:59] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[05:42:59] <raktajino> I will check these out thank you so much
[05:43:39] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:43:40] <novns> raktajino, oh, I misread you are working on an API server
[05:44:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:44:22] <raktajino> oh no, not a server. A client to consume an existing API. If it matters to you, it's the api for the bloomerang crm, documentation available here: https://bloomerang.co/features/integrations/api/rest-api
[05:44:37] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:45:06] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:45:13] *** Quits: src (~src@user/src) (Ping timeout: 246 seconds)
[05:45:43] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:45:51] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:46:05] <novns> there are some articles
[05:46:07] <novns> https://medium.com/@cep21/go-client-library-best-practices-83d877d604ca
[05:46:28] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:48:28] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:49:14] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:49:19] *** Quits: hdcase (~hdcase@sprawl.city) (Quit: departing)
[05:49:30] <raktajino> I did read that article and found it helpful but not with the specific question of the "right" way to pass parameters to a GET request. Should I really just be using map[string]string for this?
[05:49:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:52:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:52:53] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:53:00] *** Quits: KekSi (~KekSi@x4db6b464.dyn.telefonica.de) (Ping timeout: 258 seconds)
[05:53:40] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:54:18] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[05:54:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:54:54] <novns> raktajino, you can start doing this to get job done if it's easier, and investigate other methods then
[05:55:14] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:55:33] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[05:55:49] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:56:50] *** Joins: KekSi (~KekSi@x4db684d7.dyn.telefonica.de)
[05:56:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:57:00] <raktajino> that's basically what i've done, and it works. It's just that if there's a Better™  way I'd rather do it now instead of after I write the entire rest of the client (so far I've implemented most of the Constituent methods but haven't really touched anything else)
[05:58:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:58:40] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[05:59:23] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:59:49] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[06:01:08] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:02:39] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:03:34] *** Quits: ac1 (~Guest1907@193.32.126.239) (Quit: Leaving)
[06:03:43] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[06:04:00] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:05:37] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:06:55] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[06:07:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:08:13] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:09:48] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[06:09:54] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:10:34] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:11:23] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:12:49] *** Joins: id (jeda@hellomouse/dev/cryb.jeda)
[06:12:49] *** id is now known as Nay
[06:13:56] *** Quits: Nay (jeda@hellomouse/dev/cryb.jeda) (Client Quit)
[06:14:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:14:40] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[06:15:36] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:15:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:16:47] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[06:16:47] *** Aye is now known as id
[06:17:30] *** Joins: Nay (jeda@hellomouse/dev/cryb.jeda)
[06:17:51] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Quit: WeeChat 3.2)
[06:18:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:19:26] *** Quits: Nay (jeda@hellomouse/dev/cryb.jeda) (Client Quit)
[06:19:26] *** Quits: id (jeda@hellomouse/dev/cryb.jeda) (Client Quit)
[06:20:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:22:40] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[06:22:40] *** Aye is now known as id
[06:22:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:24:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:24:57] *** id is now known as Aye
[06:27:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:28:30] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:28:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:28:50] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[06:29:15] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:29:20] *** Joins: jsrnop (~mark@user/jsrnop)
[06:31:28] *** Quits: ari (~ari@vmi500470.contaboserver.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:31:44] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:32:28] *** Quits: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[06:32:32] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[06:33:02] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:33:08] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[06:33:14] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:34:36] *** Joins: ari (~ari@vmi500470.contaboserver.net)
[06:34:45] *** Joins: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868)
[06:35:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:37:00] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Client Quit)
[06:37:13] *** Quits: xy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[06:37:25] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:37:41] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[06:38:42] *** Joins: icy (~icy@user/icy)
[06:40:19] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:41:48] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:44:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:45:13] *** Quits: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868) (Ping timeout: 244 seconds)
[06:45:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:46:17] *** Quits: GoLiath_ (~GoLiath@178.239.167.187) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:46:57] *** Joins: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de)
[06:48:42] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:50:13] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:53:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:54:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[06:56:17] *** Quits: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:57:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:58:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:00:01] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:01:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:03:05] *** Joins: andlabs (~andlabs@71.190.119.164)
[07:03:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:03:57] *** Joins: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de)
[07:06:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:07:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:10:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:11:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:14:06] *** Quits: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:14:54] <Tv_> fasthttp is utterly unrelated to what he asked about...
[07:14:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:15:14] <Tv_> raktajino: you should be able to find a library that converts between a struct and query args, if that's what you want
[07:15:21] *** Joins: beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net)
[07:16:28] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:17:01] *** Quits: beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) (Quit: Leaving)
[07:17:24] <raktajino> I'll check into that, but part of the problem is that I want to adhere to whatever is the conventional approach, and I just don't know what that is
[07:17:38] <Tv_> raktajino: net/http and KISS
[07:18:03] <Tv_> raktajino: https://pkg.go.dev/github.com/google/go-querystring/query
[07:18:42] <raktajino> right on. thank you, this is exactly what I needed.
[07:19:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:20:08] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:20:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:21:34] *** Quits: MrFantastik (~Thunderbi@98.1.50.67) (Ping timeout: 268 seconds)
[07:22:03] *** Joins: habys_ (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c)
[07:22:06] *** Quits: habys (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c) (Ping timeout: 244 seconds)
[07:23:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:25:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:28:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:29:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:32:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:33:58] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:36:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:38:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:41:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:42:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:44:47] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[07:45:23] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:46:52] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:48:06] *** Joins: w0x12ef_ (~w0x12ef@117.61.30.54)
[07:49:00] *** Joins: mastardet (~mastardet@user/mastardet)
[07:49:40] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:50:13] *** Parts: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Leaving)
[07:51:10] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:51:49] *** Joins: w0x12ef__ (~w0x12ef@117.61.30.54)
[07:52:34] *** Quits: mastardet (~mastardet@user/mastardet) (Quit: Client closed)
[07:54:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[07:54:18] *** Quits: w0x12ef_ (~w0x12ef@117.61.30.54) (Ping timeout: 240 seconds)
[07:54:30] *** Joins: zunino (~zunino@186.214.11.48)
[07:55:31] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[07:56:32] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[07:58:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[08:00:06] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:03:07] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:04:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:06:18] *** Joins: w0x12ef_ (~w0x12ef@117.61.30.54)
[08:06:39] *** Quits: zunino (~zunino@186.214.11.48) (Quit: WeeChat 2.8)
[08:07:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:09:06] *** Quits: w0x12ef__ (~w0x12ef@117.61.30.54) (Ping timeout: 240 seconds)
[08:09:06] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:12:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:13:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:15:56] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[08:16:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:18:02] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:20:50] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:22:20] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:22:22] *** Joins: w0x12ef__ (~w0x12ef@117.61.30.54)
[08:24:42] *** Quits: w0x12ef_ (~w0x12ef@117.61.30.54) (Ping timeout: 240 seconds)
[08:25:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:26:39] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:29:32] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:30:05] <LambdaComplex> why is the coffee talking
[08:30:22] <LambdaComplex> (at least TVs are supposed to make noise)
[08:31:02] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:31:13] *** Quits: Nulo (~Nulo@user/nulo) (Remote host closed the connection)
[08:33:06] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:33:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:34:59] *** Joins: oxum (~oxum@136.185.148.86)
[08:35:08] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:35:50] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[08:36:48] *** Joins: w0x12ef_ (~w0x12ef@117.61.30.54)
[08:37:26] *** Joins: justache (~justache@user/justache)
[08:38:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:39:22] *** Quits: w0x12ef__ (~w0x12ef@117.61.30.54) (Ping timeout: 258 seconds)
[08:39:39] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:41:54] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[08:42:24] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[08:42:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:43:42] *** Quits: pztrn (~pztrn@user/pztrn) (Ping timeout: 252 seconds)
[08:44:04] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:46:50] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:48:19] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:48:59] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[08:50:11] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 256 seconds)
[08:51:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:51:25] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[08:51:49] *** Joins: w0x12ef__ (~w0x12ef@117.61.30.54)
[08:52:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:52:58] *** Quits: w0x12ef_ (~w0x12ef@117.61.30.54) (Remote host closed the connection)
[08:55:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[08:57:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[08:59:15] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 256 seconds)
[09:00:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:01:33] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:04:33] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:05:14] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 244 seconds)
[09:06:02] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:06:18] *** Joins: w0x12ef_ (~w0x12ef@117.61.30.54)
[09:08:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:09:22] *** Quits: w0x12ef__ (~w0x12ef@117.61.30.54) (Ping timeout: 244 seconds)
[09:10:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:13:13] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:14:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:17:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:19:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:21:19] *** Joins: w0x12ef__ (~w0x12ef@117.61.30.54)
[09:22:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:23:30] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:24:19] *** Quits: w0x12ef_ (~w0x12ef@117.61.30.54) (Ping timeout: 246 seconds)
[09:26:23] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:27:52] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:30:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:32:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:35:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:36:07] *** Joins: pztrn (~pztrn@user/pztrn)
[09:36:18] *** Joins: w0x12ef_ (~w0x12ef@117.61.30.54)
[09:36:39] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:36:56] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[09:39:06] *** Quits: w0x12ef__ (~w0x12ef@117.61.30.54) (Ping timeout: 240 seconds)
[09:39:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:41:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:43:43] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:45:13] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:48:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:49:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:51:50] *** Joins: xav (~quassel@103-96-86-209.novaconnect.nz)
[09:52:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:53:56] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[09:56:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:58:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:01:19] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:02:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:03:17] *** Quits: w0x12ef_ (~w0x12ef@117.61.30.54) (Ping timeout: 256 seconds)
[10:05:46] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:07:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:10:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:11:43] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:12:21] *** Quits: Eddward (~Eddward@207.138.204.132) (Ping timeout: 256 seconds)
[10:14:34] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:16:03] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:17:40] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[10:18:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:20:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:22:35] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Remote host closed the connection)
[10:23:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:24:33] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:27:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:28:51] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:28:58] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:46] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:33:07] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:33:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:33:22] *** Joins: icy (~icy@user/icy)
[10:36:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:37:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:39:19] *** Joins: textbox (~textbox@78-56-77-125.static.zebra.lt)
[10:40:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:42:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:43:13] <textbox> Hello. What's the best way to define a method which returns one item but also might return an error as it's an adapter for a database? With multiple items it's very natural - return a slice and error, `nil` indicates no items were found but with one item it feels wrong to return a pointer and returning a value requires returning additional boolean
[10:43:13] <textbox> or encode `not found` in an error which also feels wrong and not that nice to use?
[10:44:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:46:25] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:47:41] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[10:49:03] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:49:35] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:50:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:53:27] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:54:35] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:54:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[10:55:16] *** Joins: hikhvar7 (~thelounge@dslb-188-105-090-023.188.105.pools.vodafone-ip.de)
[10:55:39] <ikke> The convention is to return a tuple
[10:55:55] <ikke> return nil, err
[10:56:07] <ikke> Or whatever is appropriate
[10:57:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:59:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:00:06] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 244 seconds)
[11:01:51] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:02:14] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:03:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:05:10] *** Joins: shka (~herr@109.231.62.239)
[11:05:20] *** Joins: dmathieu (~textual@78.203.212.55)
[11:06:35] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:08:04] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:09:05] *** Joins: oxum (~oxum@136.185.148.86)
[11:11:08] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:11:18] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[11:11:29] *** Quits: hikhvar7 (~thelounge@dslb-188-105-090-023.188.105.pools.vodafone-ip.de) (Quit: The Lounge - https://thelounge.chat)
[11:11:59] *** Joins: oxum (~oxum@136.185.148.86)
[11:12:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:14:11] *** Joins: absc (~absc@37.160.157.48)
[11:15:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:16:20] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[11:17:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:17:20] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 252 seconds)
[11:18:49] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:20:00] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:21:30] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:24:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:26:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:28:09] <textbox> @ikke tuple is very nice convention but it's inconsistent in my example as if you do `return nil, err` it means you're returning a pointer so query for multiple results should be `func ... ([]*result, error)` to match it. Now returning an object instead of a pointer is nicer as you communicate that this is a copy and you can do whatever with it.My
[11:28:10] <textbox> solution currently in such cases is to `func ...(Result, error)` and return `errors.New("not found")` but I find it ugly as well :)
[11:29:05] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:29:40] <KirkMcDonald> It does not need to be a pointer. You can just return the zero value for whatever the type happens to be.
[11:29:47] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[11:30:18] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:36] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:31:20] *** Joins: icy (~icy@user/icy)
[11:31:37] <textbox> KirkMcDonald then how to check if it's actually a zero value? It would look very strange to do `res, err := mygetter(); if res == Result{} { not found case }` I mean I haven't even found such code anywhere I read
[11:32:14] <textbox> i just wanna follow best practices but somehow this slipped through me while reading all the guides
[11:32:23] <KirkMcDonald> Ordinarily you just check whether the error is nil.
[11:33:21] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:34:13] <textbox> thinking of it maybe returning `errors.New("not found")` is not as bad as I thought, I was under impression that error is for more serious issues but that's just overthinking
[11:34:29] <textbox> thanks KirkMcDonald
[11:34:52] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:35:09] <KirkMcDonald> I would suggest returning a package-level error value dedicated to this specific meaning.
[11:35:22] <KirkMcDonald> That way users can compare the error against that specific value.
[11:35:41] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:35:50] <KirkMcDonald> This is, for example, how io.EOF works: https://golang.org/pkg/io/#pkg-variables
[11:37:21] <textbox> thats a good idea
[11:37:44] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:38:18] <textbox> though I rarely see it except from standard packages it seems like the best solution in this case as it leaves a nice API and also lets me communicate failure against no result
[11:39:13] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:39:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:42:12] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:46:43] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[11:49:23] *** Joins: Giedrius (~giedrius@5.133.65.65)
[11:52:53] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 252 seconds)
[11:52:55] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:57:08] <LambdaComplex> +1 for just checking if the err is nil or not
[11:57:49] <LambdaComplex> if your function returns a (foo, err) where err != nil and the caller then tries to use the returned foo then they screwed up and it's on them and you can still sleep soundly at night
[11:59:37] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:02:19] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[12:05:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 256 seconds)
[12:11:18] *** Quits: w0x12ef_ (~w0x12ef@60.10.194.47) (Remote host closed the connection)
[12:11:29] *** Joins: w0x12ef_ (~w0x12ef@124.126.15.211)
[12:14:18] *** Joins: lehmrob (~rd7@p5dca8425.dip0.t-ipconnect.de)
[12:14:33] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[12:16:15] *** Joins: arinov (~arinov@213.194.126.155)
[12:17:28] *** Quits: w0x12ef_ (~w0x12ef@124.126.15.211) (Ping timeout: 252 seconds)
[12:22:32] *** Joins: w0x12ef_ (~w0x12ef@36.112.128.143)
[12:22:38] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 250 seconds)
[12:24:50] *** Joins: Xjs (~jannis@user/xjs)
[12:24:55] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[12:25:32] *** Quits: w0x12ef__ (~w0x12ef@60.10.194.47) (Ping timeout: 258 seconds)
[12:32:06] *** Joins: mrig (~mrig@user/mrig)
[12:33:57] *** Joins: nabromov (~nabromov@217.138.202.116)
[12:34:22] *** Joins: dr0n (~nabromov@92.40.255.115.threembb.co.uk)
[12:34:34] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 265 seconds)
[12:39:24] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[12:41:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[12:43:11] *** Joins: trusch (~trusch@87.123.3.75)
[12:43:16] *** Quits: moto (~moto@user/moto) (Ping timeout: 265 seconds)
[12:43:57] *** Joins: menace (~someone@2001:a61:3456:4d01:3894:5a7f:f2e5:cc9f)
[12:44:18] *** Quits: menace (~someone@2001:a61:3456:4d01:3894:5a7f:f2e5:cc9f) (Changing host)
[12:44:18] *** Joins: menace (~someone@user/menace)
[12:46:04] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[12:48:07] *** Joins: src (~src@user/src)
[12:51:42] <be3uykpy> nice nick
[12:53:23] *** Quits: zikani03 (~Zikani@197.211.99.14) (Read error: Connection reset by peer)
[12:53:30] *** Joins: w0x12ef__ (~w0x12ef@106.37.74.209)
[12:54:18] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[12:54:44] *** Joins: moto (~moto@user/moto)
[12:55:54] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[12:56:20] *** Quits: w0x12ef_ (~w0x12ef@36.112.128.143) (Ping timeout: 252 seconds)
[12:57:47] *** Joins: dmathieu (~textual@78.203.212.55)
[13:00:13] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:01:27] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[13:02:28] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[13:04:38] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[13:05:07] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[13:05:29] *** Joins: w0x12ef_ (~w0x12ef@106.37.74.209)
[13:08:26] *** Quits: w0x12ef__ (~w0x12ef@106.37.74.209) (Ping timeout: 252 seconds)
[13:20:01] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[13:23:06] *** Quits: w0x12ef_ (~w0x12ef@106.37.74.209) (Ping timeout: 252 seconds)
[13:23:40] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[13:24:34] *** Quits: pepee (~user@user/pepee) (Ping timeout: 252 seconds)
[13:25:38] *** Joins: zutt (~zutt@user/zutt)
[13:26:46] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[13:29:40] *** Quits: w0x12ef__ (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[13:34:51] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[13:36:59] *** Joins: zikani03 (~Zikani@197.211.99.14)
[13:38:24] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[13:39:08] *** Quits: dmathieu (~textual@78.203.212.55) (Ping timeout: 258 seconds)
[13:39:18] <Rudde> With reflect, and I have a Kind of Ptr, how can I see the kind of what it's pointing to?
[13:39:53] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[13:41:00] *** Parts: zikani03 (~Zikani@197.211.99.14) ()
[13:41:24] *** Joins: dmathieu (~textual@78.203.212.55)
[13:43:23] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Client Quit)
[13:47:55] <nevivurn> Rudde: with (*reflect.Value).Type().Elem()
[13:48:08] <nevivurn> .Kind()
[13:49:00] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[13:49:30] *** Joins: w0x12ef__ (~w0x12ef@124.126.15.211)
[13:49:31] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[13:52:40] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:52:45] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[13:52:52] *** Quits: w0x12ef_ (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[13:53:19] *** menace is now known as Deknos
[13:54:18] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[13:54:23] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:55:00] *** Quits: w0x12ef__ (~w0x12ef@124.126.15.211) (Ping timeout: 252 seconds)
[13:55:32] *** Quits: src (~src@user/src) (Quit: leaving)
[13:55:46] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 265 seconds)
[13:56:01] <Rudde> I have a interface that has kind ptr
[13:56:15] <Rudde> I'm just wondering what the kind of what it's pointing to is
[13:58:40] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 252 seconds)
[14:02:31] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[14:02:47] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[14:02:59] <sztanpet> interfaces contain two pointers, one to the type, one to the value
[14:03:05] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:03:48] <sztanpet> and the type can be a pointer type, but thats just part of the type, dont think of it like double-indirection or anything
[14:04:21] *** Joins: Ohlov313 (~Ohlov3@dyndsl-095-033-057-157.ewe-ip-backbone.de)
[14:05:55] *** Quits: Ohlov3 (~Ohlov3@dyndsl-091-248-236-188.ewe-ip-backbone.de) (Ping timeout: 265 seconds)
[14:06:01] <Rudde> Sorry
[14:06:11] <Rudde> I can use the Elem() if it's a pointer and check the kind of that
[14:06:16] <Rudde> It did what I hoped for :)
[14:07:07] *** Quits: JPT_ (~jpt@classified.name) (Quit: Hoppla!)
[14:07:57] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:12:33] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[14:13:01] *** Joins: JPT (~jpt@classified.name)
[14:15:49] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[14:18:20] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[14:23:57] *** Quits: absc (~absc@37.160.157.48) (Ping timeout: 256 seconds)
[14:31:34] *** Joins: w0x12ef_ (~w0x12ef@60.10.194.47)
[14:31:50] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:31:57] *** Joins: kayprish (~kayprish@46.240.143.86)
[14:32:30] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[14:34:55] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[14:36:15] *** Quits: w0x12ef_ (~w0x12ef@60.10.194.47) (Ping timeout: 258 seconds)
[14:37:24] *** Quits: nabromov (~nabromov@217.138.202.116) (Ping timeout: 258 seconds)
[14:40:14] *** Quits: whoami (~whoami@d118-75-122-76.col.wideopenwest.com) (Ping timeout: 265 seconds)
[14:40:32] *** Joins: whoami (~whoami@d118-75-122-76.col.wideopenwest.com)
[14:44:34] <Rudde> Are nils just omitted in map[string]interface{} maps?
[14:46:18] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[14:46:28] *** Joins: src (~src@user/src)
[14:46:28] *** Quits: src (~src@user/src) (Client Quit)
[14:47:58] *** Quits: w0x12ef__ (~w0x12ef@60.10.194.47) (Ping timeout: 265 seconds)
[14:52:59] *** Joins: w0x12ef_ (~w0x12ef@124.126.15.211)
[14:54:52] <nevivurn> Rudde: what do you mean by "omit"? nil are valid values for interface{}, and you can put them in a map[string]interface{}
[14:56:11] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 258 seconds)
[14:57:02] <Rudde> Yeah I have a map[string]interface{} where one element is nil, but it's just not there when I do json.Marshal
[14:57:20] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[14:57:34] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[14:59:03] <nevivurn> Rudde: can you show code? It should work like so https://play.golang.org/p/qYvWJhMrtWy
[14:59:57] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[15:01:10] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[15:01:46] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[15:01:46] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[15:01:46] *** Joins: jai (~darkapex@user/darkapex)
[15:01:46] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[15:01:47] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[15:01:47] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[15:01:47] *** Joins: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b)
[15:01:47] *** Joins: kadoban (~kadoban@user/kadoban)
[15:01:47] *** Joins: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e)
[15:01:47] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[15:01:47] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[15:01:47] *** Joins: mambang[m] (~mambang@user/mambang)
[15:01:47] *** Joins: psydroid (~psydroid@user/psydroid)
[15:01:48] <Rudde> I'm sorry
[15:01:59] <Rudde> it was just a different place than I expected
[15:02:00] *** Joins: speatzle_ (~speatzles@2001:470:69fc:105::1003)
[15:02:01] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[15:02:17] <Rudde> and I'm dyslextic which didn't make matter any eaiser :P
[15:03:14] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:17:24] *** Quits: textbox (~textbox@78-56-77-125.static.zebra.lt) (Quit: Client closed)
[15:19:30] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[15:21:12] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[15:22:29] *** Joins: koo6 (~koo6@ip-37-188-159-159.eurotel.cz)
[15:22:34] *** Quits: w0x12ef_ (~w0x12ef@124.126.15.211) (Ping timeout: 268 seconds)
[15:23:19] *** Quits: kayprish (~kayprish@46.240.143.86) (Remote host closed the connection)
[15:23:51] *** Quits: koo6 (~koo6@ip-37-188-159-159.eurotel.cz) (Read error: Connection reset by peer)
[15:24:10] *** Quits: w0x12ef__ (~w0x12ef@60.10.194.47) (Ping timeout: 258 seconds)
[15:26:03] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:31:26] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[15:32:56] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:37:45] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[15:38:20] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Remote host closed the connection)
[15:38:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:43:35] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 244 seconds)
[15:47:22] *** Joins: GoLiath_ (~GoLiath@178.239.173.164)
[15:53:10] *** Joins: dmathieu (~textual@78.203.212.55)
[15:53:18] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 258 seconds)
[15:58:01] *** Quits: GoLiath_ (~GoLiath@178.239.173.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:34] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Ping timeout: 252 seconds)
[16:07:05] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[16:13:57] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[16:18:44] *** Parts: BenLubar (~ben@cpe-65-28-175-139.wi.res.rr.com) ()
[16:27:21] *** Joins: w0x12ef_ (~w0x12ef@60.10.23.171)
[16:27:50] *** Joins: abc_ (~abc@user/abc)
[16:28:25] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[16:30:20] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 272 seconds)
[16:31:12] *** Joins: absc (~absc@37.160.134.125)
[16:31:43] <absc> n
[16:32:46] *** Joins: andlabs (~andlabs@71.190.119.164)
[16:34:25] *** Joins: arinov (~arinov@212.156.215.30)
[16:34:37] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:41:47] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:42:52] *** Joins: w0x12ef__ (~w0x12ef@60.10.194.47)
[16:45:19] *** Quits: w0x12ef_ (~w0x12ef@60.10.23.171) (Ping timeout: 246 seconds)
[16:50:06] *** Joins: dr0n (~nabromov@92.40.255.115.threembb.co.uk)
[16:50:41] *** Joins: w0x12ef (~w0x12ef@60.10.23.171)
[16:51:52] *** Quits: w0x12ef__ (~w0x12ef@60.10.194.47) (Ping timeout: 272 seconds)
[16:52:20] *** Joins: dmathieu (~textual@78.203.212.55)
[16:53:18] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Client Quit)
[16:54:44] *** Joins: nabromov (~nabromov@217.138.202.116)
[16:57:25] *** Quits: yamchah2 (~yamchah2@202.61.192.225) (Changing host)
[16:57:25] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[17:08:21] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:08:23] *** Quits: l2dy (~l2dy@user/l2dy) ()
[17:08:43] *** Joins: l2dy (~l2dy@user/l2dy)
[17:09:03] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[17:09:51] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:13:54] *** Quits: l2dy (~l2dy@user/l2dy) ()
[17:14:09] *** Joins: l2dy (~l2dy@user/l2dy)
[17:19:37] *** Quits: siika_ (~siika@223.166.246.51) (Remote host closed the connection)
[17:20:01] *** Joins: siika_ (~siika@139.226.50.205)
[17:21:38] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 272 seconds)
[17:22:49] *** Joins: GoLiath_ (~GoLiath@178.239.173.164)
[17:23:16] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:30:41] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[17:31:25] *** Joins: Crassus (~Crassus@user/crassus)
[17:33:23] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[17:34:48] <mikoto-chan> do I have to call return after log.Fatal?
[17:36:09] *** Joins: dmathieu (~textual@78.203.212.55)
[17:37:43] *** Quits: nabromov (~nabromov@217.138.202.116) (Ping timeout: 272 seconds)
[17:41:33] <Sam> no, it will exit the test
[17:50:24] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:50:50] *** Joins: opa (~adamitsch@cpe-212-85-170-66.cable.telemach.net)
[17:53:12] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:53:15] *** Quits: opa (~adamitsch@cpe-212-85-170-66.cable.telemach.net) (Quit: Leaving)
[17:53:51] *** Joins: arinov (~arinov@213.194.126.155)
[17:54:13] *** Joins: opa (~adamitsch@cpe-212-85-170-66.cable.telemach.net)
[17:55:41] *** Quits: opa (~adamitsch@cpe-212-85-170-66.cable.telemach.net) (Client Quit)
[17:56:14] *** Joins: opa (~opa@cpe-212-85-170-66.cable.telemach.net)
[17:59:28] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 244 seconds)
[18:02:23] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[18:02:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[18:03:33] *** Joins: yoonkn (~user@175.197.208.79)
[18:04:07] *** Joins: smitop (~smitop@user/smitop)
[18:06:14] *** Quits: aza__ (~orrery@2600:6c50:407f:5100:164:8045:da20:3af5) (Remote host closed the connection)
[18:06:35] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[18:08:04] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[18:09:47] *** Joins: kayprish (~kayprish@46.240.143.86)
[18:12:32] *** Quits: GoLiath_ (~GoLiath@178.239.173.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:13:40] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:14:50] *** Joins: thulium (~thulium@c-73-155-255-96.hsd1.tx.comcast.net)
[18:15:23] *** Quits: thulium (~thulium@c-73-155-255-96.hsd1.tx.comcast.net) (Remote host closed the connection)
[18:18:14] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[18:18:15] *** Quits: w0x12ef (~w0x12ef@60.10.23.171) (Ping timeout: 272 seconds)
[18:22:55] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:54] *** Joins: dmathieu (~textual@78.203.212.55)
[18:27:05] *** Joins: MrFantastik (~Thunderbi@98.1.50.67)
[18:29:06] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[18:30:55] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[18:34:28] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[18:34:50] *** Joins: arinov (~arinov@213.194.126.155)
[18:37:12] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:39:22] *** Quits: acid (~acid@user/acid) (Ping timeout: 268 seconds)
[18:39:46] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[18:40:17] *** Joins: acid (~acid@user/acid)
[18:51:20] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[19:05:15] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[19:05:54] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Remote host closed the connection)
[19:08:06] *** Quits: kayprish (~kayprish@46.240.143.86) (Remote host closed the connection)
[19:13:09] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[19:15:16] *** Joins: dmathieu (~textual@78.203.212.55)
[19:17:17] *** Joins: geoah[m] (~geoah@2001:470:69fc:105::1d59)
[19:18:48] *** Quits: opa (~opa@cpe-212-85-170-66.cable.telemach.net) (Ping timeout: 272 seconds)
[19:21:32] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 265 seconds)
[19:22:44] *** geoah[m] is now known as geoah
[19:23:33] *** Joins: winircuser-318 (~winircuse@170.250.221.149)
[19:25:57] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[19:28:36] *** Joins: arcatech (~arcatech@user/arcatech)
[19:30:34] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:31:38] *** Quits: MrFantastik (~Thunderbi@98.1.50.67) (Quit: MrFantastik)
[19:32:18] *** Joins: jespada (~jespada@90.254.247.46)
[19:34:01] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Ping timeout: 244 seconds)
[19:35:22] *** Quits: frost (~frost@59.71.242.236) (Quit: Connection closed)
[19:36:39] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[19:39:53] *** Joins: nabromov (~nabromov@217.138.202.116)
[19:40:12] *** Joins: nabromov1 (~nabromov@94.11.23.235)
[19:41:40] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:41:52] *** Joins: oxum (~oxum@136.185.148.86)
[19:44:12] *** Quits: nabromov (~nabromov@217.138.202.116) (Ping timeout: 250 seconds)
[19:44:43] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:46:38] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 252 seconds)
[19:48:14] *** Quits: lehmrob (~rd7@p5dca8425.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:48:22] *** Joins: w0x12ef (~w0x12ef@60.10.194.47)
[19:54:12] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com)
[19:55:36] *** Joins: w0x12ef_ (~w0x12ef@60.10.23.171)
[19:56:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:58:04] *** Quits: w0x12ef (~w0x12ef@60.10.194.47) (Ping timeout: 250 seconds)
[19:58:22] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[19:59:15] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:00:44] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:03:18] *** Quits: w0x12ef_ (~w0x12ef@60.10.23.171) (Read error: Connection reset by peer)
[20:03:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:04:38] *** Joins: Giedrius_ (~giedrius@78-58-156-248.static.zebra.lt)
[20:04:39] *** Quits: Giedrius (~giedrius@5.133.65.65) (Read error: Connection reset by peer)
[20:05:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:05:40] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[20:06:03] *** Joins: Giedrius__ (~giedrius@5.133.65.65)
[20:07:18] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:08:34] *** Joins: kulak (~kulak@user/kulak)
[20:09:28] *** Quits: Giedrius_ (~giedrius@78-58-156-248.static.zebra.lt) (Ping timeout: 272 seconds)
[20:09:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:12:19] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[20:12:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:12:46] *** Joins: kulak (~kulak@user/kulak)
[20:13:52] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:14:12] *** Joins: Eddward (~Eddward@207.138.204.132)
[20:14:29] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[20:16:06] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:16:35] *** Joins: yoonkn (~user@175.197.208.79)
[20:16:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:17:27] *** Quits: jhenson (~jhenson@user/jhenson) (Remote host closed the connection)
[20:18:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:21:26] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:22:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:24:26] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:26:10] *** Joins: andlabs (~andlabs@71.190.119.164)
[20:27:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:28:52] *** Joins: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[20:29:29] *** Joins: pepee (~user@user/pepee)
[20:30:25] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:31:54] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:34:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:39:37] *** Quits: Giedrius__ (~giedrius@5.133.65.65) (Remote host closed the connection)
[20:40:30] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4)
[20:41:40] *** Parts: nabromov1 (~nabromov@94.11.23.235) ()
[20:42:00] *** Joins: dr0n (~nabromov@94.11.23.235)
[20:42:54] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:44:36] *** Quits: absc (~absc@37.160.134.125) (Quit: Leaving.)
[20:54:28] *** Joins: TFKyle (~kyle@64.201.205.70)
[21:01:34] *** Joins: oxum (~oxum@136.185.148.86)
[21:06:41] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 268 seconds)
[21:09:40] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:13:08] *** Joins: Guest53__ (~textual@170.250.221.149)
[21:13:27] *** Quits: Guest53__ (~textual@170.250.221.149) (Remote host closed the connection)
[21:14:41] *** Joins: Guest53 (~textual@170.250.221.149)
[21:19:49] *** Quits: winircuser-318 (~winircuse@170.250.221.149) (Read error: Connection reset by peer)
[21:20:41] *** Joins: dmathieu (~textual@78.203.212.55)
[21:21:46] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[21:23:14] *** Joins: rhoshy (~rhoshy@p200300d84f2ee83760e0663d2269f6b7.dip0.t-ipconnect.de)
[21:24:40] *** Joins: flommi_ (~flommi@puck942.startdedicated.de)
[21:24:54] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[21:26:45] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Read error: Connection reset by peer)
[21:31:10] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Quit: Quit)
[21:32:08] *** Quits: rhoshy (~rhoshy@p200300d84f2ee83760e0663d2269f6b7.dip0.t-ipconnect.de) (Quit: Quit)
[21:36:59] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[21:41:03] *** Joins: rhoshy (~rhoshy@p200300d84f2ee83760e0663d2269f6b7.dip0.t-ipconnect.de)
[21:42:21] *** Joins: andlabs_ (~andlabs@71.190.119.164)
[21:43:13] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Quit: Quit)
[21:44:49] *** Quits: andlabs (~andlabs@71.190.119.164) (Ping timeout: 258 seconds)
[21:44:56] <mrig> Is there a way to put a constant such as that of math.Pi into an interface and retrieve it again without its being truncated?
[21:46:05] <mrig> Or perhaps I should ask, is it truncated?
[21:46:36] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[21:47:18] *** Joins: kayprish (~kayprish@46.240.143.86)
[21:48:10] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:48:11] <mrig> I am using a struct that contains an indicator of the type and an interface to transport different data types, and the question of how to deal with constants has come up; Which is why I ask.
[21:53:07] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[21:54:00] *** Joins: kulak (~kulak@user/kulak)
[21:54:52] *** Joins: Steeve (~steve@user/steeve)
[21:58:41] <mrig> I am thinking that type asserting float64 if likely the best thing to do.
[21:59:23] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 258 seconds)
[22:00:08] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[22:00:59] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[22:06:23] *** Joins: vsantana (~Thunderbi@2804:214:816e:9813:5887:44f7:92cf:a49f)
[22:12:09] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Ping timeout: 265 seconds)
[22:12:29] *** Joins: flommi_ (~flommi@puck942.startdedicated.de)
[22:15:05] *** Joins: textbox (~textbox@78-56-77-125.static.zebra.lt)
[22:15:14] *** Quits: kayprish (~kayprish@46.240.143.86) (Remote host closed the connection)
[22:15:57] *** Joins: Guest53 (~textual@170.250.221.149)
[22:16:24] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:16:51] *** Joins: kulak (~kulak@user/kulak)
[22:18:32] *** Joins: vsantana1 (~Thunderbi@fttx-17713614930.usr.predialnet.com.br)
[22:19:35] <textbox> could someone shed some light on proper REST guidelines for JSON [POST] endpoint? I have an endpoint which accepts optional JSON body(means that no parameters in json is a valid action), I feed the body straight into `json.NewDecoder(r.Body)` however when testing I quickly found that it crashes due to empty body. What feels wrong is parsing the
[22:19:35] <textbox> body length and deciding if I have some data. What feels better - to send an empty json `{}`, any opinions?
[22:20:54] *** Quits: vsantana (~Thunderbi@2804:214:816e:9813:5887:44f7:92cf:a49f) (Ping timeout: 244 seconds)
[22:20:54] *** vsantana1 is now known as vsantana
[22:21:03] <rewt> regardless of the actual design, it shouldn't crash if someone sends it an empty body
[22:22:38] <textbox> it doesn't crash, just returns an error instead of successfully creating a resource(with default parameters)
[22:24:13] <textbox> which then led me thinking that's the best approach to fix it. Simplest fix is to just send an empty json body, googling doesn't help me in the slightest as all the questions are about an empty response body
[22:24:17] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:24:22] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:24:40] *** Joins: mickey (~user@user/mickey)
[22:25:00] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[22:25:06] *** Joins: kulak (~kulak@user/kulak)
[22:25:14] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[22:25:39] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:26:44] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:26:52] *** Joins: printf (~printf@user/printf)
[22:27:30] *** Joins: kulak (~kulak@user/kulak)
[22:29:41] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 244 seconds)
[22:30:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:34:24] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:35:46] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[22:37:39] <mrig> ah I can just send a place holder and then call the const directly no need to send it through the plumbing. :)
[22:40:15] *** Joins: kulak (~kulak@user/kulak)
[22:42:10] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:48:29] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Read error: Connection reset by peer)
[22:51:50] <jzelinskie> why does go imports sometimes add an explicit name of the exact same as the package name? `import "mypackage/v0"` => `import v0 "mypackage/v0"`
[22:52:11] <jzelinskie> i thought it might be because that's how it's done in other files in the project, but I just made sure that wasn't the case
[22:54:07] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[22:54:12] *** Quits: rhoshy (~rhoshy@p200300d84f2ee83760e0663d2269f6b7.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:55:37] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[22:56:05] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[23:00:28] *** Joins: kulak (~kulak@user/kulak)
[23:01:37] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[23:02:40] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 250 seconds)
[23:04:28] *** Quits: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com) (Ping timeout: 268 seconds)
[23:08:40] *** Quits: textbox (~textbox@78-56-77-125.static.zebra.lt) (Ping timeout: 246 seconds)
[23:10:21] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[23:12:31] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[23:16:11] *** Joins: bitshift (~jesse@107-179-164-219.cpe.teksavvy.com)
[23:17:45] <mikoto-chan> how can I access characters in a string individually?
[23:18:13] <mikoto-chan> oh wait, does range work on strings?
[23:18:43] <KirkMcDonald> mikoto-chan: It does.
[23:19:34] *** Quits: kmerfeld (~kmerfeld@2600:1700:8c31:a00:dea6:32ff:fe93:748) (Ping timeout: 250 seconds)
[23:19:36] <KirkMcDonald> It will decode the string from UTF-8 and give you each character as a `rune` typed value.
[23:20:16] <mikoto-chan> KirkMcDonald: cool, thanks mate :)
[23:21:52] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 244 seconds)
[23:27:30] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Quit: Leaving)
[23:28:42] *** Quits: vsantana (~Thunderbi@fttx-17713614930.usr.predialnet.com.br) (Ping timeout: 258 seconds)
[23:30:48] *** Joins: Guest53 (~textual@170.250.221.149)
[23:35:36] *** Joins: Snyp (~rksht@49.207.198.3)
[23:37:05] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[23:41:21] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Ping timeout: 258 seconds)
[23:56:12] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
