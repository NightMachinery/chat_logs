[00:00:22] <gde33> blueagain: what does that sound like?
[00:00:47] <blueagain> party catering for people in their twenties?
[00:00:50] <blueagain> wild guess though
[00:01:08] <gde33> it was just snacks and drinks
[00:01:19] <gde33> the hard part was the planning
[00:01:40] <gde33> food expires, after preparation it expires faster. Do you have room for this order or not?
[00:02:02] <blueagain> iow first world problems
[00:02:27] <theskillwithin> if your good at organizing events, start a tech meetup in your area
[00:02:36] <gde33> crap industry, there is no money in it
[00:02:40] <onosendi> mikrosis: you can do something like https://gist.github.com/onosendi/6337c4bd46e78e2f7822553151d20771. The total gets updated every time the cart gets modified.
[00:03:04] <blueagain> I'm awfully bad at doing most stuff that's not related to cs
[00:05:07] <theskillwithin> no one will know this show, but party down was funny show about catering in LA
[00:06:49] <mikrosis> onosendi: that's nice! Now I got the issue that react-async Async.Fulfilled wants a functional component (function) - but the data parameter is "unknown" and not of the type the async function would return
[00:06:53] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[00:07:29] *** Joins: silverdust (~silverdus@user/silverdust)
[00:07:48] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[00:08:17] *** Joins: suss` (~user@user/suss)
[00:08:32] <onosendi> mikrosis: for TypeScript?
[00:08:51] *** Quits: suss` (~user@user/suss) (K-Lined)
[00:09:01] <mikrosis> onosendi: yes
[00:09:37] *** Quits: suss (~user@user/suss) (Ping timeout: 240 seconds)
[00:09:38] <onosendi> mikrosis: show me how you're using what to get that error.
[00:09:47] <mikrosis> onosendi: https://github.com/async-library/react-async/blob/af52ec3491b9648ead9ec1dce66a75a2bf44cbc2/examples/movie-app/src/App.js#L59
[00:09:48] <theskillwithin> https://gist.github.com/theskillwithin/75bcda222cd772c84f400e9d343b0b15
[00:09:59] <mikrosis> onosendi: movies is of `unknown` type in VSCode :(
[00:11:56] *** Quits: minto (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[00:11:58] *** Joins: summersault (~summersau@179.221.251.36)
[00:12:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[00:12:24] *** Quits: summersault (~summersau@179.221.251.36) (K-Lined)
[00:13:16] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[00:13:22] *** Joins: summersault (~summersau@179.221.251.36)
[00:14:18] <onosendi> mikrosis: That's a JavaScript file.
[00:14:36] <theskillwithin> mikrosis ummm i don't see where movies is defined
[00:15:12] <onosendi> theskillwithin: I thought the same thing. Looks like <Async.Fulfilled> is passing the result from `fetchMovies` to it's children.
[00:15:14] <mikrosis> onosendi, theskillwithin: right. I try to do the same in TypeScript
[00:15:26] <mikrosis> ah damn typescript wants more strictness here and it isn't happy
[00:15:43] <mikrosis> https://github.com/async-library/react-async/issues/256
[00:15:47] <theskillwithin> onosendi is it? i don't like it thats confusing as hell
[00:15:48] <mikrosis> apparently this is an ongoing issue
[00:16:00] <onosendi> theskillwithin: yeah, I thought the same thing, lol.
[00:16:03] <mikrosis> onosendi: hmm, what would you use for async fetching stuff in the app? I show a skeleton UI while it loads
[00:16:12] <blueagain> mikrosis: you know you don't have to use TS with react, right?
[00:16:31] <mikrosis> blueagain: I am already using it for the whole project
[00:16:43] <mikrosis> and it works so far - except this react-async thing doesn't wanna run
[00:17:31] <blueagain> just saying that use JS will reduce your complexity
[00:17:34] <blueagain> using*
[00:18:02] <mikrosis> blueagain: hmm
[00:19:07] <blueagain> that issue you quoted is two years old, looks dead to me
[00:19:18] <mikrosis> yep
[00:19:19] <mikrosis> :(
[00:19:21] <mikrosis> next lib
[00:19:51] <mikrosis> blueagain: ideally I would want to fetch JSON data for the app on app start. If the user is fast enough the user may end up on a page that uses the data which is still loading. For that I use a skeleton placeholder.
[00:21:31] <blueagain> mikrosis: that's what we at my workplace too with react
[00:21:35] <blueagain> we do*
[00:22:03] <mikrosis> yes
[00:22:04] <mikrosis> https://betterprogramming.pub/fetching-data-with-react-72df95683c70
[00:22:15] <mikrosis> this seems to be most recent approach for react fetching
[00:22:44] *** Parts: nemo (nemo@hedgewars/dev/nemo) ()
[00:23:26] <onosendi> mikrosis: the answer you're looking for goes way beyond "movies is of `unknown` type". You need to type the result of `fetchMovies`.
[00:23:34] <mikrosis> yes
[00:23:49] <mikrosis> I did thatÂ  fetchMovies(props:any):Promise<MovieType>
[00:26:05] <onosendi> mikrosis: It would need to be Promise<MovieType[]> since it's an array of type `MovieType`, but I don't think that will solve the error it's giving you.
[00:26:40] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[00:26:57] <alMalsamo> Hi all, newb question, is there ANY difference between Vue.js and javascript?
[00:27:20] <onosendi> alMalsamo: Vue.js is a framework written in JavaScript.
[00:27:45] <mikrosis> onosendi: indeed, there is more stuff needed in react-async. The issue hadn't been resolved for two years now ... well
[00:28:04] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:28:04] <mikrosis> onosendi: alright, the best practice in 2022 for react fetch stuff is using React Suspense + SWR/React Query instead
[00:28:06] <mikrosis> which looks quite cool
[00:28:50] <systemfault> alMalsamo: Vue.js is something called a framework (It's a big pile of JavaScript on which people can build an application in JavaScript) written using JavaScript. JavaScript is a programming language. By using Vue.js, you're using JavaSCript
[00:29:18] <onosendi> mikrosis: I'm currently loving RTK Query, but I also use Redux.
[00:29:22] <blueagain> onosendi: remember I talked about picking a name for my testing framework, and settled for 'debris'?
[00:29:31] <onosendi> blueagain: yep
[00:29:36] <theskillwithin> mikrosis SWR? are you using nextjs?
[00:29:47] <blueagain> onosendi: so I released a second version a few days ago, with support for snapshots
[00:30:26] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[00:31:03] *** Joins: pavonia (~user@user/siracusa)
[00:33:47] <onosendi> blueagain: Sweet. Is the src on GitHub?
[00:34:36] <blueagain> onosendi: nope, I have it hosted on a similar service that's in europe
[00:34:49] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:35:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:35:18] <blueagain> Oh, I should check if I can a read-only github clone, that'd be helpful
[00:35:23] <blueagain> create*
[00:37:26] *** Joins: kakashiA1 (~kakashi@41.141.129.78)
[00:39:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:39:14] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 272 seconds)
[00:40:57] <alMalsamo> systemfault: Thank you, Wikipedia calls Vue.js a "client-side" framework as oposed to server-side which I guess means it runs mostly in local javascript engine in web browser?
[00:42:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:42:58] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:45:53] <systemfault> alMalsamo: Yup, instead of building the content of your page using HTML, you use JavaScript to create it from data
[00:45:55] <mikrosis> onosendi: no redux, I use react hooks (providers) works nice
[00:46:01] *** Joins: silverdust (~silverdus@user/silverdust)
[00:46:05] <mikrosis> theskillwithin: I could, I am still undecided about the backend
[00:46:57] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:50:22] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:7576:c34a:1e19:f504:8c1a)
[00:50:42] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[00:50:56] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[00:51:02] *** Joins: voltage_ (voltage@user/voltage)
[00:51:38] <onosendi> mikrosis: Maybe react-query then?
[00:52:21] <mikrosis> onosendi: swr or react-query? both look great
[00:53:09] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[00:55:00] *** Quits: D4mned (~D1mned@212.101.234.211) (Quit: Leaving)
[00:56:15] <onosendi> mikrosis: I haven't used either, so it'd just be a guess.
[00:56:48] <alMalsamo> systemfault: if i understand it correctly, the wikipedia article indicates that HTML and even a bit of CSS is used on Vue.js in addition to Javascript.  Sounds like standard web technologies.
[00:57:35] *** Joins: src__ (~src@user/src)
[00:57:44] <systemfault> alMalsamo: HTML can be used as "templates" since it's often easier to write than the equivalent JS code... CSS is always used
[00:58:14] *** Quits: src (~src@user/src) (Ping timeout: 272 seconds)
[00:59:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:02:47] *** Quits: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby) (Ping timeout: 256 seconds)
[01:04:30] <alMalsamo> systemfault: I don't understand how a simple markup language can replace a full-blown programming language
[01:05:35] *** Joins: src_ (~src@user/src)
[01:05:53] *** Joins: silverdust (~silverdus@user/silverdust)
[01:06:46] <ljharb> alMalsamo: huh?
[01:07:02] <ljharb> alMalsamo: i mean, html isn't turing-complete, but most websites don't need a programming language for most of their content
[01:08:48] <sheetjs> html + css is turing complete
[01:08:59] <theskillwithin> lord have mercy
[01:09:17] *** Quits: src__ (~src@user/src) (Ping timeout: 256 seconds)
[01:10:51] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[01:10:59] *** Quits: src_ (~src@user/src) (Ping timeout: 256 seconds)
[01:10:59] *** Joins: wroathe (~wroathe@user/wroathe)
[01:11:37] <matsaman> https://experiments.hertzen.com/css3calculator/ hurrr
[01:12:11] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[01:12:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[01:14:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:16:00] *** Joins: admin123 (~harrymore@2607:fb90:55a3:5860:a5d7:b82b:a4ef:d9aa)
[01:16:45] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[01:19:12] <mikrosis> matsaman: the linked explanation doc points to Google+ that was shut down some years ago:/ Â well well
[01:19:21] <mikrosis> but I know the answer: CSS is actually turing complete.
[01:19:51] <mikrosis> but - well, it looks like this calculator can only handle one operation
[01:20:00] <mikrosis> hmm, maybe this can be expanded somehow
[01:20:37] <blueagain> that kind of calls to mind the idea that just because you can do something, doesn't mean you have to do it
[01:20:48] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:20:48] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[01:20:48] *** Joins: wroathe (~wroathe@user/wroathe)
[01:21:17] *** Joins: random988 (~random988@adsl-152.109.242.137.tellas.gr)
[01:23:38] *** Joins: silverdust (~silverdus@user/silverdust)
[01:29:16] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[01:29:29] *** Quits: random988 (~random988@adsl-152.109.242.137.tellas.gr) (Quit: Client closed)
[01:29:55] *** Joins: silverdust (~silverdus@user/silverdust)
[01:33:45] *** Quits: Andrm (~Andrm@190.244.62.157) (Quit: Client closed)
[01:36:58] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:8ced:edd8:f03f:1ab2)
[01:38:09] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[01:38:19] <ThePendulum> very timely
[01:38:29] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[01:39:05] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b911:2c82:7dec:2cb9) (Ping timeout: 256 seconds)
[01:39:27] *** Joins: wroathe (~wroathe@user/wroathe)
[01:39:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:40:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:42:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[01:49:12] <matsaman> mikrosis: 's'pretty old
[01:49:19] <thumbs> says a pendulum
[01:49:28] <matsaman> and not everything that can be done is worth doing
[02:00:57] <theskillwithin> say that now wait until you have a crush on a girl
[02:01:40] <matsaman> what is a crush, father?
[02:02:10] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:1045:58db:e661:bfe2)
[02:02:17] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[02:02:50] *** Quits: rx_ (~rx@dynamic-046-114-165-003.46.114.pool.telefonica.de) (Ping timeout: 272 seconds)
[02:03:00] <theskillwithin> its like where you really like someone
[02:03:18] <theskillwithin> but probably 10 years later you get divorced anyways so whats the point
[02:03:28] <matsaman> heh
[02:04:25] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[02:06:12] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[02:06:12] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[02:06:12] *** Joins: wroathe (~wroathe@user/wroathe)
[02:06:32] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:8ced:edd8:f03f:1ab2) (Ping timeout: 240 seconds)
[02:07:23] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[02:08:34] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:95c8:781:a3b:e4d4)
[02:09:41] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:09:57] <theskillwithin> https://youtu.be/yPbJSLWSWk8
[02:09:58] <skillbot> YouTube Title: The Beatles - Get Back (Rooftop concert, 1969) HD
[02:11:18] <ThePendulum> the restoration is better than that upload of it
[02:12:27] <matsaman> from that documentary?
[02:12:51] <theskillwithin> if you watch the doc, you will have that song stuck in your head, they play it like 10000 times
[02:12:52] <ThePendulum> yeah idk it's in 4K
[02:13:31] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Read error: Connection reset by peer)
[02:14:53] *** Joins: N4buc0- (~N4buc0@201.22.12.94.dynamic.adsl.gvt.net.br)
[02:15:03] *** Joins: Guest56366 (~rx@dynamic-046-114-165-003.46.114.pool.telefonica.de)
[02:15:29] <theskillwithin> https://youtu.be/wEPog_WdPE4?t=57
[02:15:29] <skillbot> YouTube Title: Led Zeppelin - How Many More Times (Danmarks Radio 1969)
[02:15:44] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[02:15:51] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:7576:c34a:1e19:f504:8c1a) (Remote host closed the connection)
[02:16:14] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Remote host closed the connection)
[02:16:27] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[02:19:39] <matsaman> it's a pretty good song
[02:19:44] <matsaman> Get Back
[02:22:40] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[02:24:59] <blueagain> https://www.youtube.com/watch?v=tbdpv7G_PPg
[02:25:00] <skillbot> YouTube Title: Have A Cigar
[02:25:06] *** Joins: junebug (~junebug@2600:1700:3db0:2540:286b:82e2:6b4:35cd)
[02:25:11] <theskillwithin> home on here deer boy
[02:25:24] <blueagain> one of the awesomest
[02:25:53] <theskillwithin> have a cigar
[02:25:56] <theskillwithin> your going to go far
[02:26:33] *** Joins: lotharn|2 (~kvirc@2600:8800:280:d400:91f:d3ed:5cc5:bb2f)
[02:26:37] *** Quits: lotharn (~kvirc@2600:8800:280:d400:60fd:bd0d:9a25:c3f3) (Ping timeout: 240 seconds)
[02:26:37] <blueagain> oh by the way, which one's Pink?
[02:26:43] <theskillwithin> haha
[02:26:52] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:1045:58db:e661:bfe2) (Quit: I have gone to sleep. ZZZzzzâ¦)
[02:28:03] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[02:29:11] <b0nn> I have this, `book.IDs ? book.IDs.push(e.target.value) : book.IDs = [e.target.value]` thinking that that would make book.IDs an array if one did not exist, instead I get one long string
[02:29:13] <blueagain> oh man, solo at the end, goosebumps every time
[02:29:39] <b0nn> Can someone explain how to get it to be an array of strings?
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:58] <theskillwithin> https://youtu.be/TcDSihFa0iE?t=460
[02:32:58] <skillbot> YouTube Title: Jimi Hendrix Live at Stockholm 1969
[02:34:03] *** Joins: pizdets_ (~pizdets@183.182.114.254)
[02:35:12] *** Quits: pizdets (~pizdets@183.182.114.101) (Ping timeout: 265 seconds)
[02:36:20] <theskillwithin> b0nn wel that last part after the : is a string
[02:36:40] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:36:53] *** Joins: nomic2 (~nomic@185.192.69.129)
[02:37:06] <b0nn> I had thought that the [] around the target meant it was an array of string
[02:37:44] <mange> b0nn: You could do something like (book.IDs = book.IDs || []).push(e.target.value), depending on your exact needs.
[02:38:05] <b0nn> oh, ok will try that
[02:39:04] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:39:20] *** Quits: junebug (~junebug@2600:1700:3db0:2540:286b:82e2:6b4:35cd) (Quit: Leaving)
[02:39:20] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[02:39:25] *** Joins: de-facto_ (~de-facto@user/de-facto)
[02:39:38] *** Joins: eugercek (~user@user/eugercek)
[02:39:41] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:39:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[02:39:55] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 240 seconds)
[02:40:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:40:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:40:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:40:29] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[02:41:35] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[02:42:01] *** Joins: silverdust (~silverdus@user/silverdust)
[02:43:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:43:31] *** de-facto_ is now known as de-facto
[02:44:13] *** Quits: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:45:01] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211)
[02:47:17] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[02:48:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:48:31] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:ddd7:6df9:8dc6:cf6c) (Ping timeout: 250 seconds)
[02:49:01] *** Quits: kakashiA1 (~kakashi@41.141.129.78) (Ping timeout: 256 seconds)
[02:49:53] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[02:50:29] *** Quits: nomic2 (~nomic@185.192.69.129) (Quit: Leaving)
[02:54:10] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:95c8:781:a3b:e4d4) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[02:57:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:57:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:57:08] *** Joins: wroathe (~wroathe@user/wroathe)
[02:57:51] <theskillwithin> https://youtu.be/EnRBbZ6_kG8?t=15
[02:57:51] <skillbot> YouTube Title: Danny Carey - Lateralus
[03:02:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[03:02:29] *** Joins: suss (~user@user/suss)
[03:03:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:07:55] *** Joins: junebug (~junebug@2600:1700:3db0:2540:286b:82e2:6b4:35cd)
[03:08:33] *** Joins: audio (~audio@user/audio)
[03:09:25] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929)
[03:11:35] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[03:11:59] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[03:12:34] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[03:15:44] *** Joins: src (~src@user/src)
[03:18:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:22:07] *** Joins: hashfunc1818 (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be)
[03:22:36] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:29:06] *** Quits: kmh (~kmh@2a00:6020:5004:6800:cc51:dafa:a805:1ab8) (Read error: Connection reset by peer)
[03:29:18] *** Joins: kmh (~kmh@2a00:6020:5004:6800:cc51:dafa:a805:1ab8)
[03:29:41] *** Quits: src (~src@user/src) (Quit: Leaving)
[03:30:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[03:31:46] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[03:38:24] *** Joins: silverdust (~silverdus@user/silverdust)
[03:39:13] *** Joins: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Remote host closed the connection)
[03:40:31] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[03:40:35] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[03:40:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:41:19] *** Quits: N4buc0- (~N4buc0@201.22.12.94.dynamic.adsl.gvt.net.br) (Quit: Leaving)
[03:44:10] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[03:44:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[03:50:24] *** Quits: admin123 (~harrymore@2607:fb90:55a3:5860:a5d7:b82b:a4ef:d9aa) (Ping timeout: 268 seconds)
[03:50:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:50:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:50:40] *** Joins: wroathe (~wroathe@user/wroathe)
[03:51:36] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Ping timeout: 245 seconds)
[03:54:11] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:59:40] *** Joins: pmercado (~pmercado@186.107.44.64)
[04:02:16] *** Joins: stenno (~stenno@user/stenno)
[04:02:18] *** Joins: Akiva (~Akiva@user/Akiva)
[04:07:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[04:12:18] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:16:12] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 240 seconds)
[04:17:08] *** Quits: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[04:22:12] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:25:53] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[04:34:41] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[04:41:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:44:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:47:23] *** Joins: kakashiA1 (~kakashi@41.141.129.78)
[04:50:57] *** Quits: suss (~user@user/suss) (Remote host closed the connection)
[04:51:46] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929) (Quit: I have gone to sleep. ZZZzzzâ¦)
[04:54:19] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[04:54:36] *** Quits: kakashiA1 (~kakashi@41.141.129.78) (Ping timeout: 240 seconds)
[04:56:23] *** Joins: stenno (~stenno@user/stenno)
[04:56:42] *** Joins: niop (niop@gateway/vpn/airvpn/niop)
[05:01:08] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 252 seconds)
[05:01:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[05:02:13] *** Joins: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[05:03:58] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:04:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[05:05:38] <theskillwithin> https://youtu.be/ETjfAIHpJjY?t=32
[05:05:38] <skillbot> YouTube Title: Beethoven Sonata #29 Op. 106 "Hammerklavier" Valentina Lisitsa
[05:06:41] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[05:06:41] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[05:06:41] *** Joins: wroathe (~wroathe@user/wroathe)
[05:10:21] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[05:10:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[05:15:42] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:23:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:29:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:34:08] <theskillwithin> to be fair she has these long glorious fingers to work with.  and I have fat stubby sausage fingers to work with
[05:37:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:38:58] <theskillwithin> https://youtu.be/zucBfXpCA6s
[05:38:59] <skillbot> YouTube Title: Beethoven "Moonlight" Sonata,  III "Presto Agitato" Valentina Lisitsa
[05:41:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:43:25] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Ping timeout: 240 seconds)
[05:44:09] <deltab> b0nn: you're right, it makes an array with a single value, a string
[05:44:26] <deltab> b0nn: my guess is that something else is happening when you output it
[05:45:10] <theskillwithin> hard to diagnose from 1 line of code.  need more context
[05:45:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:47:15] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[05:49:04] <deltab> as an expression, [...] makes an array, not a string
[05:50:00] <deltab> so if a string is the result it's being produced somewhere else
[05:50:29] *** Joins: stenno (~stenno@user/stenno)
[05:50:47] <deltab> that's all I can tell from that code, yes
[05:50:58] <KevinX> n> ['foo', 'bar'].toString()
[05:50:59] <jellobot> (okay) 'foo,bar'
[05:51:52] <deltab> yeah, and there are several ways that conversion to string can happen
[05:53:45] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:55:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[05:57:16] *** Joins: coolrip (~coolrip@206.255.78.214)
[05:57:48] <b0nn> what should I look for?
[05:58:12] <b0nn> I grep all the code for that variable name and - nowhere is it explicitly made into a string
[05:58:55] <KevinX> where are you outputting it and how?
[05:58:56] *** Quits: coolrip (~coolrip@206.255.78.214) (Quit: Leaving)
[05:59:42] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[06:00:31] *** Joins: coolrip (~coolrip@206.255.78.214)
[06:00:53] *** Joins: onosendi (~onosendi@user/onosendi)
[06:01:03] <b0nn> huh
[06:01:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:05:48] *** Quits: junebug (~junebug@2600:1700:3db0:2540:286b:82e2:6b4:35cd) (Ping timeout: 240 seconds)
[06:06:37] <KevinX> how do you know its a long string?
[06:06:38] *** Joins: coolrip00 (~coolrip@206.255.78.214)
[06:08:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:09:57] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:10:11] *** Quits: coolrip (~coolrip@206.255.78.214) (Quit: Leaving)
[06:10:15] *** Parts: coolrip00 (~coolrip@206.255.78.214) ()
[06:10:38] *** Joins: justAstache (~justache@user/justache)
[06:11:09] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[06:11:09] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[06:11:09] *** Joins: wroathe (~wroathe@user/wroathe)
[06:12:16] <theskillwithin> https://youtu.be/RciM7P9K3FA?t=3
[06:12:17] <skillbot> YouTube Title: Don McLean performs American Pie live at BBC in 1972 - Newsnight archives
[06:13:27] <wyclif> The Day the Music Died :(
[06:15:46] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[06:15:59] *** Joins: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com)
[06:15:59] *** Quits: wroathe (~wroathe@68-168-191-143.fttp.usinternet.com) (Changing host)
[06:15:59] *** Joins: wroathe (~wroathe@user/wroathe)
[06:17:32] <theskillwithin> btw full disclosure I was born in 89
[06:20:40] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[06:21:58] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[06:22:25] <theskillwithin> technically that makes me a 90's kid right? idk
[06:22:53] *** Joins: matsaman (~matsaman@user/matsaman)
[06:23:02] <KevinX> i think it makes you 2000s?
[06:23:22] <KevinX> You don't really absorb much culture until you start becoming self aware
[06:23:47] <theskillwithin> dangit
[06:24:08] <KevinX> you would know best though. What was your favorite show or album?
[06:24:30] <KevinX> or your first one anyway
[06:25:07] <theskillwithin> in orange county CA, KROQ. pretty much everything was good
[06:25:14] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Quit: Leaving)
[06:25:28] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:25:37] <banana_> if you dont remember pokemon
[06:25:40] <banana_> youre 2000s ki
[06:25:42] <banana_> *kid
[06:25:58] <theskillwithin> i remmeber pokemon cards banned at school cuz it caused a lot of drama
[06:26:02] <KevinX> what game system did you have first?
[06:26:09] <theskillwithin> nintendo
[06:26:13] <banana_> theskillwithin: you don't remember pokemon
[06:26:16] <banana_> jon snow
[06:26:23] <matsaman> nintendo, you aren't even that old, ha!
[06:26:36] <theskillwithin> super nintendo
[06:26:46] <matsaman> sweet summer child =)
[06:26:51] <KevinX> or whcih did you buy with your own money haha
[06:26:55] <matsaman> that was a pretty damn good system
[06:26:56] <banana_> same super nintendo but barely played it
[06:27:04] <KevinX> money from mowing neighborhood lawns
[06:27:07] <banana_> n64 was lit though
[06:27:14] *** Joins: sa0 (~sa0sin@88.120.82.205)
[06:27:22] <matsaman> well, Ocarina of Time
[06:27:39] <KevinX> link to the past defined who i am today
[06:27:58] <matsaman> very good game
[06:28:15] <banana_> dam now I want to binge play and be all tired for work tomorrow
[06:28:21] <KevinX> i was born in 82 and definitely consider myself a product of the 90s
[06:28:28] <banana_> but good thing dont know how to get that game
[06:28:38] <theskillwithin> oh wait nvm i meant NES
[06:28:41] <wyclif> theskillwithin: just listened to that Lisitsa performance. That is what presto agitato is supposed to sound like!
[06:28:42] <matsaman> squeeze recently played through Twilight Princess HD real fast
[06:28:45] <KevinX> a link to the past has a randomizer game that's wonderful
[06:28:50] <banana_> yeah that sounds right
[06:28:57] <theskillwithin> matsaman ocotina of time is the best. period.
[06:29:02] <banana_> Born around skills age but yeah consider myself a late 90s kid
[06:29:04] <matsaman> theskillwithin: was very good
[06:29:25] <banana_> but not like nirvana or that stuff that was way before my time, but listened to nirvana in the early 2000s
[06:29:29] <matsaman> was a remastered version for ... 3DS?
[06:29:50] <matsaman> but the widescreen & third party texture upgrades are a little nicer, IMO
[06:29:56] <wyclif> I met Kurt Cobain before Nirvana broke and got famous
[06:30:07] <theskillwithin> back then we listened to music on the radio
[06:30:12] <matsaman> wyclif: happy guy?
[06:30:29] <banana_> dude I only remember mtv afterhours in the early 2000s
[06:30:36] <wyclif> I was working at a record store and they did Record Store Day and played a show in the store. Afterward we went out back so Kurt could smoke a cigarette and all we talked about was music and what his fave bands were
[06:30:43] <banana_> maybe a few music vids in the late late 90s
[06:30:50] <wyclif> At the time he just seemed like a normal dude. No drama
[06:31:00] <wyclif> This was before Courtney and a lot of his problems
[06:31:03] <theskillwithin> he was probably murdered
[06:31:05] <matsaman> mmm
[06:31:15] <banana_> wyclif: wow really?!
[06:31:24] <banana_> that's cool
[06:31:40] <matsaman> what'd they play in the store?
[06:31:58] <wyclif> Yeah. My first impression of him was that he was a slacker and how small he was.
[06:32:07] <wyclif> They played a lot of songs from "Bleach"
[06:32:31] <matsaman> slackers are what humans should be, after all
[06:32:50] <wyclif> They were really scrappy. Touring in a van. Living the life on the road
[06:33:02] <theskillwithin> also there was the smashing pumpkins
[06:33:10] <matsaman> shoot, I'd tour in a van if it meant no day job
[06:33:24] <banana_> dude smashing pumpkins is still tourin
[06:33:51] <wyclif> When they broke big and knocked Michael Jackson off the top of the chart, nobody was more surprised than me
[06:34:06] <wyclif> I was like "wait it's those dudes from Seattle and Record Store Day"
[06:34:11] <banana_> haha
[06:34:45] <KevinX> that's awesome
[06:34:46] <banana_> that whole grunge scene was big, but yeah  before my time
[06:35:02] <banana_> I like those bands though
[06:35:03] <theskillwithin> that sublime date rape song would play a lot
[06:35:46] <wyclif> Some of their songs would never play today
[06:35:55] <theskillwithin> limp bizket, korn was popular back then
[06:36:00] <wyclif> In the current #MeToo environment
[06:36:04] <theskillwithin> blur song 2
[06:36:12] <banana_> alice in chains
[06:36:21] <theskillwithin> rage against the machine
[06:36:27] <wyclif> Korn. Ugh. Terrible crap compared to Nirvana
[06:36:32] <theskillwithin> ugh greenday
[06:36:50] <KevinX> korn and lb were kinda a different scene
[06:36:52] <banana_> I think Korn was pretty breakthrough for those industrial bands right
[06:37:02] <wyclif> You should have seen the type of kids who would come into the store and ask for Korn. They looked and acted exactly as you might imagine
[06:37:19] <theskillwithin> lets not forget radiohead
[06:37:22] <wyclif> The worst of the worst
[06:37:23] <theskillwithin> creep
[06:37:34] <KevinX> they are all reddit mods now
[06:37:39] <wyclif> Well, I love Radiohead, but mostly their later stuff like "OK Computer" and "Kid A"
[06:37:48] <wyclif> KevinX: LOL
[06:38:04] <banana_> what about soundgarden?
[06:38:32] <theskillwithin> later radiohead somehow became cool with people who weren't even into music
[06:38:59] <wyclif> Soundgarden was also pretty good. But the real originators of the "grunge" sound was not Nirvana or Soundgarden, it was Mudhoney
[06:39:05] <wyclif> Mudhoney were the originals
[06:39:07] <banana_> yeah wasnt really present for 90s music until like 98-99 and even then
[06:39:35] <theskillwithin> oh there was that one song from stone temple pilots
[06:39:58] *** Quits: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Quit: WeeChat 2.8)
[06:40:17] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[06:40:20] <wyclif> If you want to hear where all that stuff comes from, listen to Mudhoney's "Superfuzz Bigmuff."
[06:40:36] <matsaman> what a title
[06:40:53] <wyclif> It sounds exactly like the name
[06:41:06] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:41:09] <theskillwithin> beck where its at
[06:41:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[06:41:23] <wyclif> "Loser"
[06:41:26] <theskillwithin> metalica
[06:41:34] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[06:41:46] <matsaman> Beck is pretty consistently good
[06:41:48] <theskillwithin> red hot chili peppers
[06:42:00] <wyclif> "Odelay" is a great record
[06:42:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:42:07] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[06:42:14] <theskillwithin> smashing pumpkins was good tho
[06:42:20] <matsaman> peppers have a lot of good tunes I like a lot
[06:42:28] <matsaman> but a lot I don't care for at all, plus they suck live
[06:42:41] <theskillwithin> wanna go deep?
[06:42:45] <matsaman> but only the lot of good tunes I like a lot matter =)
[06:42:48] <theskillwithin> kid rock
[06:42:50] <matsaman> hahahah
[06:42:51] <theskillwithin> smash mouth
[06:42:53] <wyclif> I like the Chilis as long as they have Frusciante. When he left, they were terrible. They're only good when Frusciante is on guitar. Dave Navarro just doesn't gel with them
[06:42:58] <matsaman> wyclif: yeah
[06:43:04] <banana_> is smashing pumpkins good live?
[06:43:22] <theskillwithin> banana_ smashing pumpkins is good live, I have seen them live
[06:43:27] <wyclif> Plenty of clips of them live on YT
[06:43:32] *** Joins: Rockwood (~Rocky@user/rocky)
[06:43:35] <banana_> thanks
[06:43:36] <wyclif> Great drummer
[06:43:55] <banana_> yeah if you care, Roger Waters is pretty good live and they pretty much just play pink floyd songs
[06:44:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:44:28] <banana_> ok yeah probably going to see them, smashing pumpkins
[06:44:49] *** Joins: Rockwood_ (~Rocky@user/rocky)
[06:45:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:46:24] <banana_> about roger waters, they're actually really good live
[06:47:14] <theskillwithin> i have not seen pink floyd live.  thats gotta be awesome
[06:47:19] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9464:49ae:f859:e241)
[06:47:49] <theskillwithin> of course their good live, they like invented techiques for live shows
[06:48:08] <Rockwood_> where?
[06:48:12] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[06:48:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:49:18] <banana_> https://rogerwaters.com/tour/
[06:49:32] <theskillwithin> weezer island in the sun
[06:49:37] <theskillwithin> ugh
[06:49:41] <theskillwithin> linkin park
[06:50:23] <theskillwithin> tool, drummer in tool is my fav drummer
[06:51:48] <theskillwithin> white stripes seven nation army
[06:51:48] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[06:53:06] <SpiceMan> Plush @ <theskillwithin> oh there was that one song from stone temple pilots
[06:53:14] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[06:53:33] <matsaman> was this a drummers conversation in particular?
[06:53:43] <SpiceMan> no. 90s music
[06:53:56] <SpiceMan> because some impostor claimed to be a 90s kid
[06:53:58] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[06:54:18] <matsaman> weird
[06:54:25] <theskillwithin> well thats debatable
[06:55:54] <SpiceMan> oh, you were the impostor
[06:56:08] <theskillwithin> i was born in 89, i mean cmon technically
[06:56:52] <matsaman> I mean 89 wasn't the 80s
[06:57:00] <SpiceMan> you're a 90s baby. not a 90s kid :P
[06:57:15] <banana_> awwww
[06:57:19] <banana_> what about pokemon man
[06:57:31] <banana_> that was like 97
[06:57:38] *** Joins: audio (~audio@user/audio)
[06:57:39] <KevinX> i think i have like 2 memories from 11 years old
[06:57:51] <matsaman> littering and
[06:57:53] <matsaman> littering and
[06:58:08] <theskillwithin> well i might have been a baby, but i had a radio
[06:58:32] <SpiceMan> so did 40s kid. what's your point?
[06:58:34] * SpiceMan runs
[06:58:44] <Rockwood_> 40 kids??
[06:59:03] <SpiceMan> Rockwood_: yes, there were only 40 households with radios. in the whole world.
[06:59:24] <theskillwithin> stay up to 1am and then you can hear loveline with dr drew and adam carolla
[07:01:15] <SpiceMan> no idea who those are. I'm not from the US
[07:01:52] <Rockwood_> KevinX, hi
[07:03:30] <KevinX> hi
[07:03:45] <theskillwithin> hi
[07:05:58] <banana_> look
[07:06:06] <banana_> we all saw blockbuster die
[07:06:16] <theskillwithin> haha
[07:07:01] *** Joins: silverdust (~silverdus@user/silverdust)
[07:08:00] <theskillwithin> and you also had a blockbuster card I think?  was that required, i forget
[07:08:54] <Rockwood_> KevinX, that problem is solved i think
[07:09:06] <Rockwood_> sanctum with laravel
[07:11:00] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[07:11:24] <banana_> and if you didnt rewind them... after you returned I think they would just be disappointed? not sure if they actually charged you a fee or not
[07:11:43] <banana_> the vhs cassettes
[07:13:00] <banana_> I think you needed that card
[07:13:35] <banana_> just some cheap lamented thing with your name on it
[07:14:28] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:15:44] <KevinX> Rockwood_ nice job
[07:15:55] <KevinX> banana_ I think they charged but I can't remember
[07:15:59] <Rockwood_> really very hard to me that one
[07:18:01] <theskillwithin> there must have been some penalty for not rewinding cuz idk why but you have to rewind
[07:19:12] <KevinX> i feel like they cared less toward the end
[07:19:21] <KevinX> maybe its like returning the shopping cart
[07:19:44] <theskillwithin> another 20 years, we probably watch movies in a brain implant like shit
[07:20:04] <KevinX> and have to rewind those
[07:20:20] <theskillwithin> haha
[07:20:55] <banana_> they have that late fee
[07:21:08] <banana_> I think rewinding they gave clemency though
[07:21:19] <banana_> *they had
[07:21:55] <KevinX> i feel liek they charged for that, but then they finally got those machines to auto rewind
[07:21:56] <banana_> yeah wasn't sure how popular blockbuster was in the 80s though
[07:22:12] <banana_> for all the real 90s kids
[07:22:46] <banana_> yeah i remember them having those but still imploring people to rewind them
[07:23:08] *** Joins: stardiviner (~stardivin@39.171.214.86)
[07:24:12] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:24:15] *** Rockwood_ is now known as Rockwood
[07:25:16] <SpiceMan> blockbuster went bankrupt because they couldn't charge DVD rewind fees. everybody(?) knows that.
[07:25:20] <theskillwithin> ya all the real 90s kids,  of which of course I am technically
[07:26:10] <matsaman> man was at my neighbor's the other day
[07:26:13] <matsaman> and they had a dvd player
[07:26:27] <theskillwithin> walking around with no cell phone and parents not knowing where you are
[07:26:35] <matsaman> god that was the best
[07:26:45] <matsaman> feel so sorry for modern children
[07:27:10] <SpiceMan> I had the skill to get lost at every city I went when I was a kid
[07:27:16] <systemfault> You know you're from the 90s if you've heard of something called "a pager" :)
[07:27:30] <KevinX> especially learning about alcohol without everyone videotaping you
[07:27:58] <theskillwithin> you could just stand outside stores and random adults would buy you alcohol
[07:28:06] * SpiceMan called his then girlfriend to her pager
[07:28:17] <SpiceMan> "called"
[07:31:07] <systemfault> I used to wait for the daily top 10 songs on my radio station so I could record it on my tape cassette, unfortunately... the announcer would often screw the recording up by talking during the first 5 seconds of the song :(
[07:31:14] *** Quits: stardiviner (~stardivin@39.171.214.86) (Quit: Using Circe, the loveliest of all IRC clients)
[07:32:14] <theskillwithin> oh ya i used to do that as well, radio had a tape receiver in it.  so you could record songs from the radio onto a tape.  the catch is you don't know what songs there going to play
[07:32:21] <matsaman> like, whenever there's some crap going down these days, someone gets it on their camera phone and it's online instantly
[07:32:29] <matsaman> you can see the kids all instinctively covering their faces
[07:33:05] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[07:34:13] <theskillwithin> iv not noticed that, but thats trippy
[07:36:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:39:47] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:42:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:46:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:46:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:46:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:46:20] *** Joins: wroathe (~wroathe@user/wroathe)
[07:53:24] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[07:56:38] *** alMalsamo is now known as lumberjackimok
[07:56:47] *** lumberjackimok is now known as lumberjackok
[08:00:13] *** Joins: velix (~velix@user/velix)
[08:00:57] <velix> Funny, when using `delete arr[i]`, why does chrome tell me [empty] and some minutes later: [empty Ã 3] ;)
[08:01:13] <banana_> yea good thing the cia got kennedy in the 60s
[08:01:17] <banana_> and not today
[08:01:59] <banana_> the grassy knoll would've had like 10 1080P or even 4k videos
[08:02:21] <banana_> :P
[08:02:23] <systemfault> velix: Don't do that shit...
[08:02:34] <velix> systemfault: fixme!
[08:02:41] <systemfault> velix: the "delete" operator is for deleting keys from objects
[08:02:46] <velix> :p
[08:02:51] <velix> it didn't throw
[08:03:05] <systemfault> If you want to remove elements from an array in a mutable way, you want .splice
[08:03:14] <velix> oh okay
[08:03:31] <velix> A.splice(0, A.length); ?
[08:03:31] <banana_> yeah so if you delete an element you had to --arr.length;
[08:03:38] <banana_> have to*
[08:04:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:04:52] <banana_> yeah he's right
[08:04:54] <velix> Wow: anArray.splice(index, 1); <-- works
[08:04:55] <velix> Thanks a lot.
[08:05:00] <banana_> I was just mostly jk
[08:05:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:05:13] * velix erases DELETE from his notebook
[08:05:23] * velix rips out the DEL key
[08:05:36] <banana_> you can decrement .length but it's hacky reasons
[08:05:41] <banana_> afairc
[08:05:52] <banana_> it's for hacky*
[08:05:55] <velix> naahhh. splice is fine.
[08:05:56] <velix> thanks
[08:06:07] <velix> I've got mini arrays only.
[08:06:13] <velix> so no performance trouble.
[08:10:20] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:12:26] *** Quits: hashfunc1818 (~user@2601:5c0:c280:7090:8c1e:afa3:b36b:39be) (Remote host closed the connection)
[08:13:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:13:23] <banana_> check out this if youre always removing the first element https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift
[08:13:23] <sheetjs> Excel supports up to 65530 links in a worksheet and thinks the worksheet is invalid if you try pushing harder.  what is the recommended behavior if trying to add an additional link: "throw an error", "console.error", or just write the file anyway?
[08:14:58] <banana_> like a file is corrupted?
[08:15:34] <banana_> yeah no idea but if it's corrupted, idk save it.
[08:16:30] <sheetjs> "We found a problem with some content in ..."
[08:16:34] <banana_> there's no way you can find out the recommended behavior?
[08:16:45] <sheetjs> and it can "recover" but that just removes all of the hyperlinks
[08:16:50] <banana_> just asking unless youre in the middle of that
[08:16:54] <sheetjs> there's a known excel limit
[08:17:10] <sheetjs> Excel will complain if you write more than 65530 links in a worksheet
[08:17:15] <Rockwood> sheetjs, o/
[08:17:37] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:17:45] <sheetjs> so from the SheetJS side, if someone is trying to export a worksheet with 65531 links, the library already knows the file will be corrupt
[08:17:55] *** Joins: han-solo (~hanish@user/han-solo)
[08:18:01] <banana_> this is where you and MS can split off
[08:18:10] <banana_> you have it work a different way
[08:18:24] <sheetjs> the underlying JS API can handle more than 65530 links, sure
[08:18:53] <sheetjs> but the point of the XLSX export is that it will be opened in Excel, otherwise you would just keep the data in JSON or something more suitable
[08:18:58] <banana_> so your library doesn't think it's corrupt?
[08:19:37] <banana_> you never know
[08:19:37] <sheetjs> what makes a worksheet with 65531 links corrupt in a way that a worksheet with 65530 isn't?
[08:19:50] <banana_> maybe .xls will be used for some popular app
[08:20:10] <sheetjs> nah a new program will have their own file format, like apple .numbers files
[08:20:26] <systemfault> sheetjs: I don't know... but 65531 is really close to 2**16
[08:20:30] <banana_> wait isnt excel compatible with open sheetS?
[08:20:44] <banana_> like the open source sheets desktop app
[08:21:30] <sheetjs> systemfault: you're pointing to an implementation limit.  nothing fundamental to the hyperlink mandates index storage in a uint16_t
[08:21:47] <sheetjs> Excel could have used a uint32_t under the hood and solved the problem
[08:22:20] <systemfault> And waste 2 bytes for nothing in the 90s?
[08:22:53] <sheetjs> XLSX is an xml-based format, so the question really affects how Excel 2019 behaves
[08:23:13] <systemfault> Hmm, right
[08:23:49] <sheetjs> i'd agree if we were talking about XLSB or XLS which would have an immutable field size
[08:25:24] <systemfault> Then it's just arbitrary... another of those "X bytes should be enough until the end of time" decision
[08:26:00] <systemfault> The devs were like... "Who would be stupid enough to add more then 2**16 links... lolololol!111one"
[08:26:49] <banana_> lol
[08:27:08] <banana_> yeah up there in seattle
[08:27:39] <banana_> where it rains all the time, that's exactly what they were thinking
[08:27:48] *** Quits: pmercado (~pmercado@186.107.44.64) (Ping timeout: 240 seconds)
[08:27:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[08:28:33] <systemfault> In the same style of ideas... "640K ought to be enough for anybody"/Y2K bug/2038 bug..
[08:32:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:32:45] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:34:29] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[08:34:58] <sheetjs> anyway, what should the library do when trying to export an excel file with more than 65530 links on a sheet?
[08:35:13] <sheetjs> its easy enough to detect that threshold
[08:36:04] <systemfault> Hmm, I'd lean toward throwing
[08:36:34] <systemfault> Simply for the reason that if your exported sheet is not compatible with MS Excel...
[08:36:39] <systemfault> It's bad.
[08:37:59] <systemfault> Maybe it should throw by default unless some flag is set
[08:38:02] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:38:06] <SpiceMan> sheetjs: throw and have a setting for the threshold
[08:38:20] <SpiceMan> which defaults to 65530
[08:38:22] *** Quits: lumberjackok (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[08:38:24] <systemfault> At last, the flag could have a warning "use at your own risk"
[08:38:27] <systemfault> Yeah
[08:38:37] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[08:38:41] *** Joins: lumberjackok (~alMalsamo@gateway/tor-sasl/almalsamo)
[08:38:48] <sheetjs> why a threshold? the only meaningful threshold is Excel's limit, so it's either "enforce excel's limit" or not
[08:39:05] <banana_> "no one called customer service asking for more than 65530 links"
[08:39:11] <SpiceMan> sheetjs: because it might change to 128k in a future excel version
[08:39:22] <SpiceMan> and then you'd have a bug report
[08:39:44] <sheetjs> heh especially with the monthly release cadence
[08:39:50] <SpiceMan> sure
[08:40:23] <SpiceMan> but saying "excel will always be 65k limited"  is the same thing you are complaining about "640k ram ought to be enough" et al
[08:41:17] <SpiceMan> oh, it was systemfault who said that. nvm
[08:41:23] <SpiceMan> but the point still stands :P
[08:41:45] <sheetjs> the other option is to write the first 65530 links and console.error a warning after that
[08:42:14] <sheetjs> that's how cells outside of the file format range are handled now
[08:42:39] <banana_> do you have events in your library?
[08:43:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:43:20] <sheetjs> no
[08:43:24] <banana_> if you did you could throw and event idk.
[08:44:03] <SpiceMan> sheetjs: what about -ugh- open office or something. does it bork too with more than 65530 links?
[08:44:22] <banana_> spiceman is right
[08:44:46] <banana_> youre saying like make it clear that's all the links you're supporting
[08:45:09] <sheetjs> it supports at least 65531
[08:45:44] <sheetjs> LO is beachballing on 200K links
[08:45:51] <banana_> what about 65535
[08:46:22] <banana_> and 65536
[08:46:38] <sheetjs> 65537 works
[08:46:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[08:47:09] <banana_> but when you upload that to Excel it says its corrupted
[08:47:21] <sheetjs> the limit is actually documented
[08:47:33] <sheetjs> https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3
[08:47:49] <banana_> i think you write a doc page about this and explain how you're mitigating it
[08:47:54] <sheetjs> "Hyperlinks in a worksheet" : "65,530"
[08:48:20] <banana_> like a PR campaign but it's really a pull request
[08:49:00] <sheetjs> speaking of PR
[08:49:23] <banana_> yeah link that MS page
[08:49:32] <banana_> unless you can't?
[08:49:54] <sheetjs> of course
[08:50:33] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[08:50:49] <deltab> sheetjs: throw an exception; otherwise people may miss that it's failed: https://www.digitalhealth.net/2020/10/excel-gate-highlights-need-for-quality-technical-capability-in-nhs/
[08:51:04] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:51:23] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9464:49ae:f859:e241) (Quit: Leaving)
[08:51:27] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:52:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:52:57] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[08:54:32] *** Joins: blahboybaz (~blahboyba@c-67-161-97-69.hsd1.wa.comcast.net)
[08:54:35] <blahboybaz> join programming
[08:54:42] <SpiceMan> no
[08:55:00] <blahboybaz> woops!  :)
[08:55:33] <blahboybaz> I'm trying to think if there is another way to go about comparing the elements of two arrays and finding any elements that are not in both.. The only thing I can think of is to use one array as for your starging elements, pick the first element of that array then compare it to all the elements of the second array, if a match is found remove the element from both arrays, if no match is found add the
[08:55:39] <blahboybaz> unique elements to a new arraytake the second element of the first array and compare it to all the remaining elements of the second array, if a match is found remove the element from both arrays, if no match is found add the unique elements to a new array.. continus this process until every elemnt of the first array has been compared wiith every element of the second array.
[08:55:44] <blahboybaz> The problem is that this seems like a very costly process. But I am not thinking of any other approach to this that might be more efficient. Any suggestions to help kick start my brain into thinking of other ideas?
[08:56:28] <deltab> convert both to sets
[08:56:48] <blahboybaz> deltab: Is that a data structure in js?
[08:57:43] <blahboybaz> it is
[08:57:45] <blahboybaz> interesting
[08:58:09] <han-solo> set symmetric difference
[08:58:12] <han-solo> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations # ?
[08:58:32] <deltab> https://exploringjs.com/es6/ch_maps-sets.html
[08:58:54] <blahboybaz> " https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set "  <--  A value in the Set may only occur once.. hmm
[08:58:57] <blahboybaz> yes
[08:59:06] <blahboybaz> :)  cool
[08:59:27] <blahboybaz> I put the quotes in the wrong place but ok
[09:02:21] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[09:03:20] <blahboybaz> " Specifically, for Sets, +0 (which is strictly equal to -0) and -0 were different values. However, this was changed in the ECMAScript 2015 specification. "  <--  It will consider positive and negative as equal? Not different?
[09:06:23] <SpiceMan> no, positive 0 and negative 0. not any positive with any negative with the same absolute value
[09:10:03] <ljharb> blahboybaz: Set didn't exist before ES2015
[09:10:18] <ljharb> blahboybaz: and Set and Map both use SameValueZero, and thus treat -0 and +0 as the same
[09:10:33] <ljharb> n> 0 === -0 @ blahboybaz
[09:10:34] <jellobot> blahboybaz, true
[09:10:35] <ljharb> just like ===
[09:11:12] <Maxdamantus> Presumably it would be more accurate to say that `Set` and `Map` canonicalise -0 to +0.
[09:11:14] <ljharb> blahboybaz: at any rate, "costly" is a waste of time to worry about. you're dealing with tiny arrays here (like, less than a million items), so the performance is basically instant
[09:11:21] <Maxdamantus> Since you never end up with `-0` in a `Set`
[09:11:46] <Maxdamantus> n> new Set([-0])
[09:11:47] <jellobot> (okay) Set(1) { 0 }
[09:12:00] <ljharb> n> Object.is([...new Set([-0])][0], -0) // is how you'd test that
[09:12:01] <jellobot> (okay) false
[09:12:23] <ljharb> n> Object.is([...new Map([[-0]])][0][0], -0)
[09:12:24] <jellobot> (okay) false
[09:12:46] <Maxdamantus> Sure, though the stringification used by n> is probably good enough.
[09:12:53] <Maxdamantus> n> new Set([[-0]])
[09:12:54] <jellobot> (okay) Set(1) { [ -0 ] }
[09:12:58] <ljharb> fair enough
[09:14:22] <ljharb> this was all a very bad decision, ofc
[09:14:29] <ljharb> Map and Set should have differentiated +0 and -0
[09:14:36] <blahboybaz> ok
[09:14:41] <blahboybaz> thanks for pointing that out
[09:14:50] <Maxdamantus> imo it's better that they don't differentiate it.
[09:15:32] *** Joins: silverdust (~silverdus@user/silverdust)
[09:15:34] <Maxdamantus> I think if there are good enough reasons to differentiate it, they should allow construction of non-canonicalised tuples.
[09:16:02] <Maxdamantus> then people who actually want to differentiate can opt in by wrapping their keys in `#![x]` or something
[09:16:49] <ljharb> those don't exist yet
[09:17:02] <ljharb> the problem is that it'd be easy to make a subclass that canonicalizes
[09:17:17] <ljharb> but it's actually impossible to make a subclass that *doesn't*, because borrowed base class methods ignore overrides
[09:17:27] <Maxdamantus> But then you have to make subclasses of all the things.
[09:17:34] <Maxdamantus> rather than just one thing, which could be tuples.
[09:17:35] <ljharb> only if you want to care about -0 vs +0
[09:17:47] <ljharb> and tuples don't exist, so they're not relevant to a discussion about Map and Set in 2015
[09:17:57] <Maxdamantus> (and in the tuples case, it's not even a subclass/subtype, it's just a difference in behaviour on construction)
[09:18:32] <han-solo> i'm curious, when would anyone want to care about -0 and +0 ? :/
[09:18:56] <Maxdamantus> If you want to do an arbitrary value mapping, you can consciously handle -0 differently quite easily.
[09:19:12] <ljharb> han-solo: i often do
[09:19:24] <han-solo> i can't seem to figure a use case
[09:19:26] <ljharb> Maxdamantus: no, you can't, because `Set.prototype.add.call` ignores that different handling
[09:19:34] <Maxdamantus> const NEGATIVE_ZERO = {}; function key(v){ return Object.is(v, )
[09:19:39] <ljharb> Maxdamantus: and robust code doesn't call OO methods directly off of builtin instances
[09:19:42] <Maxdamantus> const NEGATIVE_ZERO = {}; function key(v){ return Object.is(v, -0)? NEGATIVE_ZERO : v; }
[09:20:06] <Maxdamantus> map.set(key(k), v)
[09:20:19] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[09:20:34] <ljharb> that only works if you never expose the map instance
[09:20:45] <ljharb> and at that point you don't need a Map anyways
[09:20:49] <Maxdamantus> Don't expose the map instance.
[09:21:03] <Maxdamantus> Map is useful without exposure.
[09:21:08] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[09:21:32] <Maxdamantus> It's the only way of mapping arbitrary values (other than zero) to things, other than using a big object list.
[09:21:52] <Maxdamantus> other than negative zero*
[09:23:15] <ljharb> sure but if it's not an exposed instance, then it doesn't matter what algorithm it uses
[09:23:22] <ljharb> your `key` example would work identically for either scenario
[09:23:48] <ljharb> i'm taking about the actual primary use case for map instances - which have the instances exposed - and also using that with robust code that doesn't trust methods hanging off of builtins.
[09:24:39] <Maxdamantus> It does for performance. As I was saying, the only other way of mapping arbitrary values (including object values) involves a big list, where you potentially have to compare an object value individually to every other value in the list.
[09:26:00] <Maxdamantus> function contains(a, k){ for(const v of a) if(Object.is(v, k)) return true; return false; } // this is dumb
[09:27:14] <Maxdamantus> and you never need to expose a map instance. you can always encapsulate a map inside your own interface.
[09:27:47] <Maxdamantus> it could be one that looks the same as a map, just treats `-0` and `0` as distinct. ie, you can implement your "subtype" in user code.
[09:27:53] <ljharb> right. but with either SameValue or SameValueZero on the base class, you'd do the same thing if you wanted the alternative.
[09:28:05] <ljharb> iow, you have presented precisely zero arguments that make either choice better than the other
[09:30:30] <Maxdamantus> The existing `Map` doesn't use either of those in particular.
[09:30:50] <Maxdamantus> it can be described as using either, and you'd have the same behaviour, because it canonicalises before having a chance to do that check.
[09:30:52] <ljharb> yes, it does. it uses SameValueZero.
[09:31:11] <Maxdamantus> No. It canonicalises, as demonstrated by my initial example.
[09:31:26] <ljharb> the literal specification - the sole authority on the subject - describes it as using SameValueZero. https://tc39.es/ecma262/#sec-map.prototype.delete
[09:31:38] <ljharb> that it canonicalizes means that perhaps with observable JS you can't tell one way or the other
[09:31:45] <ljharb> but the spec says SameValueZero, and it can't be debated
[09:32:04] <Maxdamantus> If it used `SameValueZero` *instead* of canonicalising, there would be some arguably odd results when you do `map.set(-0, "foo"); map.set(0, "bar");` does it have `-0` as the key now, or `0`?
[09:32:20] <ljharb> it does specifically canonicalize in https://tc39.es/ecma262/#sec-map.prototype.set
[09:32:24] <ljharb> but it doesn't do that anywhere else
[09:32:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[09:32:38] <Maxdamantus> My point is the spec could replace `SameValueZero` with `SameValue` there, and there would be no change to implementations, since there is no behavioural difference.
[09:32:59] <ljharb> perhaps it could, i'd have to dig into it. but that's an academic argument. it says SameValueZero; that's the answer.
[09:33:57] <Maxdamantus> They're not going to invent a third type of equality just for `Map`, so they just refer to one of the ones that already exist, and it happens that it didn't matter which one they used.
[09:34:06] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[09:34:07] <ljharb> Maxdamantus: actually if it used SameValue, it'd have to canonicalize in every single method, instead of just "set".
[09:34:15] <ljharb> so it absolutely matters.
[09:34:28] <Maxdamantus> Okay, sure. I guess it matters in that sense.
[09:34:32] <ljharb> you could *write* the spec so it was observably the same and used SameValue. but that's not the way the spec was written.
[09:34:38] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[09:34:50] <blahboybaz> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#using_the_set_object  <--  They (successfully) add() to the set 4 times (the second attempt to add(5) is not done because 5 already exists) -- then they call size() and get 5. If add() only added 4 items to the set than how can it's size be 5? Are the each of the property values in the object that was added being
[09:34:57] <blahboybaz> counted? (ie: an object with 2 properties was added to the set last).
[09:35:23] <Maxdamantus> Not relevant to the initial point though, about whether it would be better to canonicalise or not.
[09:35:38] <ljharb> sure
[09:35:48] <ljharb> Maxdamantus: none of the arguments you've presented have been relevant to that point tho, either.
[09:36:11] <blahboybaz> Oh, I see it. I made a mistake
[09:36:23] <Maxdamantus> My point about still being able to opt in should be relevant.
[09:36:37] <ljharb> Maxdamantus: with either choice, someone gets the behavior they want for free, and someone has to do something extra
[09:36:47] <Maxdamantus> It does the generally desirable thing, but if you really want that `SameValueZero` behaviour, you can still get that from the primitive `Map` implementation.
[09:36:50] <ljharb> Maxdamantus: my argument is that the base class should be the most permissive, and subclasses should restrict, instead of the reverse.
[09:37:18] <ljharb> iow, `-0` and `0` should be two keys in the base class, and a subclass should be able to treat them as the same
[09:37:32] <ljharb> using SameValue would also have made Map and Set into Functors, which they are currently not.
[09:37:38] <Maxdamantus> Nowhere else in the language lets you accidentally treat `-0` and `0` as non-equal.
[09:37:44] <ljharb> so there's a ton of category theory properties Map and Set fail to provide
[09:37:47] <ljharb> Maxdamantus: Object.is
[09:37:51] <ljharb> Maxdamantus: also, division
[09:37:53] <Maxdamantus> You have to either use `Object.is` or cause a division by infinity.
[09:37:58] <ljharb> ok so that's two places
[09:38:06] <ljharb> but also, nowhere else in the language lets you use an object as a key
[09:38:06] <Maxdamantus> or rather, cause a division by zero.
[09:38:18] <ljharb> Map and Set are brand new kinds of things. precedence arguments don't hold water.
[09:38:35] <Maxdamantus> `Object.is` is the "opt-in" mechanism for treating `-0` and `0` as non-equal.
[09:38:55] <Maxdamantus> and division by zero is an edge case. If you've caused a division by zero, you've probably got other problems.
[09:39:49] <ljharb> it's a normal part of IEEE 754
[09:39:59] <ljharb> you can't just reduce it to an "edge case", it's critical JS Number behavio0r.
[09:40:02] <ljharb> *behavior
[09:40:15] <ljharb> but also, canonicalizing isn't something that's done elsewhere in the language
[09:40:24] <ljharb> well, that's not quite accurate
[09:40:34] <Maxdamantus> IEEE-754 doesn't even provide something like `Object.is`
[09:40:39] <Maxdamantus> you have to divide by zero to distinguish.
[09:40:57] <ljharb> sure. and that's a normal non-edge case.
[09:42:15] <Maxdamantus> I would very much say it's an edge case. If you're relying on DBZ behaviour, you should be using it consciously.
[09:43:30] <Maxdamantus> it basically lets you write something like `a/b > 0` while allowing `b` to be zero and not checking the signum of `b` beforehand.
[09:43:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:44:01] <Maxdamantus> I'd probably expect that that reliance be explicitly written in a comment.
[09:44:01] <ljharb> and i do use it consciously. and Map and Set block me from doing that
[09:44:29] <Maxdamantus> No, you probably don't do it for arithmetical reasons. You probably do it because you're mapping arbitrary JS values.
[09:44:52] <Maxdamantus> but your use case is just begging the question of why the two distinct values exist.
[09:45:04] <Maxdamantus> the distinct values exist for the use case I described.
[09:45:07] <ljharb> that's a fair question
[09:45:17] <ljharb> but since they do exist, that question is irrelevant
[09:47:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:48:11] <Maxdamantus> er, my use case was actually wrong. should have said: something like `a/(b*c) > 0` while allowing `b` or `c` to be zero and not checking the signum of `b` or `c` beforehand
[09:49:41] <Maxdamantus> IEEE-754 probably thought that that might be a nice shortcut, but since they didn't provide an `Object.is`-like operation, I don't think they were expecting the distinction to be carried up to higher levels.
[09:50:02] <Maxdamantus> IEEE-754 treats 0 and -0 as mostly the same.
[09:50:33] <ljharb> but they're not the same
[09:50:40] <ljharb> which is precisely why Records and Tuples won't treat them the same
[10:01:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:01:33] *** Joins: wyclif (~wyclif@user/wyclif)
[10:01:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:01:59] *** Joins: GavinHsueh (~GavinHsue@119.166.164.122)
[10:03:52] *** Quits: GavinHsueh (~GavinHsue@119.166.164.122) (Quit: Leaving)
[10:04:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:05:13] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:07:17] *** Joins: pulse (~pulse@user/pulse)
[10:11:07] *** Joins: suss (~user@user/suss)
[10:20:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:20:29] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:21:04] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:24:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:24:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:25:25] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[10:28:01] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:30:47] *** ChanServ sets mode: +o litharge
[10:30:47] *** litharge sets mode: -bo *!*@user/scream litharge
[10:31:24] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 240 seconds)
[10:31:26] *** Joins: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net)
[10:34:14] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:34:23] *** Joins: aswsd (~helpme8@user/hlpme)
[10:34:57] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 240 seconds)
[10:37:28] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[10:38:41] <aswsd> Is it possible to bundle a vue.js project combining all the html, css, js files into a single js file so that it can be easily added into another html page with a simple <script> tag?  I am thinking of convenient ways to add dynamic tables and charts created by vue.js into static html pages.
[10:40:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[10:43:50] *** Joins: stenno (~stenno@user/stenno)
[10:44:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:46:01] <ljharb> aswsd: yes, that's how all bundlers work
[10:47:02] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:47:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[10:49:34] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:52:01] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[10:55:32] <aswsd> ljharb: So far, I only the js and css files being bundled. Can html files be bundled in as well?
[10:57:19] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[10:59:04] *** Joins: kadobanana (~mud@user/kadoban)
[10:59:22] <ljharb> ohhh right
[10:59:29] <ljharb> aswsd: no, you can't do that
[10:59:42] <ljharb> aswsd: maybe vue can, i dunno, but html can't be brought in in a modular fashion
[11:08:59] <aswsd> ljharb: thanks. I was wondering why nobody has done that yet but that can be done. I guess things aren't that easy
[11:13:22] <Maxdamantus> I would imagine you should be able to bundle Vue templates, though I haven't used Vue.
[11:13:52] <Maxdamantus> I suspect noone would use it if you had to include all of your templates in the actual HTML.
[11:16:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:17:30] <sheetjs> Maxdamantus: you can distinguish -0 from 0 by reciprocating
[11:17:40] <sheetjs> n> var x = 0, y = -0; [1/x, 1/y]
[11:17:41] <jellobot> (okay) [ Infinity, -Infinity ]
[11:17:48] <Maxdamantus> sheetjs: right, dividing by zero.
[11:21:04] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c899:9204:fa5a:d2de)
[11:21:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[11:23:21] *** Joins: pycode (~pycode3@2001:b07:5d28:551:12ef:ed76:5dba:9e9c)
[11:24:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:24:43] <dave0> n> -0 < +0
[11:24:44] <jellobot> (okay) false
[11:24:48] <dave0> n> -0 > +0
[11:24:49] <jellobot> (okay) false
[11:25:41] <Maxdamantus> n> const a = -0, b = +0; [a === b, a.toString() === b.toString()];
[11:25:42] <jellobot> (okay) [ true, true ]
[11:26:05] <Maxdamantus> You can only distinguish them by using `Object.is` or doing a division by zero.
[11:26:46] <Maxdamantus> and `Object.is` only exists to detect the division by zero distinction.
[11:27:01] <Maxdamantus> well, I guess `Object.is` exists for `NaN` too.
[11:28:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[11:29:49] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[11:30:41] *** Joins: jazzy (~jaziz@user/jaziz)
[11:32:26] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[11:34:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:39:24] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211) (Ping timeout: 240 seconds)
[11:40:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:44:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:45:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[11:46:23] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:48:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:49:57] *** Joins: l__q (~modinfo@user/modinfo)
[11:52:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:53:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:57:10] *** Joins: karabaja4 (~karabaja4@dh207-95-76.xnet.hr)
[12:01:07] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:01:44] *** Joins: rendar (~rendar@user/rendar)
[12:05:23] <blahboybaz> I don't get what is going on with the arguments obeject and/or slice() in this exmaple: https://onecompiler.com/javascript/3xuq6by7d
[12:05:34] <blahboybaz> What happened to arguments[2] ?
[12:07:09] <Maxdamantus> An array is being created with the same sequence of values as `arguments`
[12:07:47] <Maxdamantus> and `slice` is just being applied to that.
[12:08:02] <Maxdamantus> so `target = [[1, 2, 3, ...], 2, 3].slice(2);` or `target = [3];`
[12:09:21] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[12:12:41] <blahboybaz> Maxdamantus: It looks like the arguments object is not an array but has property names '0', '1', and '2'. So I'm not sure how slice() would do anything since it is an Array.prototype method. How is the value of the first artuments object property being accessed?
[12:13:34] <blahboybaz> [...arguments] on line 8 should be converting all of the arguments object into an array - shouldn't it?
[12:14:15] <Maxdamantus> blahboybaz: yes, `[...arguments]` converts it from an array-like object to an actual array.
[12:14:38] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[12:15:29] <blahboybaz> Maxdamantus: So I would have expected that array to be: [[1, 2, 3, 1, 2, 3], 2, 3] an array containing an array and then two numbers
[12:15:43] <Maxdamantus> blahboybaz: yes, that's correct.
[12:15:49] *** Joins: stenno (~stenno@user/stenno)
[12:17:11] <blahboybaz> So then the first element of that array should be [1, 2, 3, 1, 2, 3]  the array in the first element and slice(arguments[1]); should have ... wait a minute
[12:20:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[12:20:40] <blahboybaz> Because the [] aren't always referencing an array but in another case are destructuring the arguments operator and just addressing that one property?
[12:21:23] *** Joins: stenno (~stenno@user/stenno)
[12:21:57] <stenno> n> [1][[[[[0]]]]]
[12:21:58] <jellobot> (okay) 1
[12:22:02] <Maxdamantus> The postfix `[]` always denotes property access. `arguments[2]` is equivalent to `arguments["2"]`, so semantically it's accessing the "2" property on the object.
[12:22:23] <stenno> n> [[[[[0]]]]].toString()
[12:22:23] <jellobot> (okay) '0'
[12:22:39] <Maxdamantus> that also happens to work on array objects, where each value in the sequence is just a property on the object.
[12:23:33] <stenno> n> Array.from({ '0': 23, length: 1 })
[12:23:34] <jellobot> (okay) [ 23 ]
[12:24:22] <Maxdamantus> n> Object.prototype.hasOwnProperty.call({ foo: 42 }, "foo"); @ blahboybaz
[12:24:23] <jellobot> blahboybaz, true
[12:24:32] <Maxdamantus> n> Object.prototype.hasOwnProperty.call([42], "0"); @ blahboybaz
[12:24:33] <jellobot> blahboybaz, true
[12:25:25] <Maxdamantus> n> const o = { foo: 42 }; const a = [42]; console.log(o["foo"]); console.log(a["0"]); @ blahboybaz
[12:25:25] <jellobot> blahboybaz, 42 42
[12:26:56] <blahboybaz> I don't think [...arguments] is actually converting the arguments object to an arry. The spread operator must be doing somthing different. The reason I say this is that when I console.log(target) it prints the contents of but not surrounded in [] brackets the same way it does when I console.log(arr) - the latter prints the contents surrounded in [] brackets
[12:27:35] <Maxdamantus> blahboybaz: that's just the behaviour of `toString` on arrays.
[12:27:51] <Maxdamantus> n> const a = ["foo", "bar", "baz"]; a.toString(); @ blahboybaz
[12:27:52] <jellobot> blahboybaz, 'foo,bar,baz'
[12:28:44] <blahboybaz> I think I see what I was doing wrong
[12:28:46] <Maxdamantus> It's a pretty silly behaviour. You pretty much never want to use `Array.prototype.toString`
[12:29:19] <blahboybaz> I had the worng arg in slice()  I was accessing a property in the arguments object rather than an element in the newly converted array
[12:29:22] <blahboybaz> I think
[12:31:41] <Maxdamantus> Sure, but it shouldn't matter.
[12:31:50] <Maxdamantus> `[...arguments][2]` is the same as `arguments[2]`
[12:32:59] <Maxdamantus> I'm not sure what you're expecting though. I described the behaviour of the code without running it. After I ran it, I got the result I described.
[12:33:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:33:45] <blahboybaz> err.. my goal was to strip off the remaining arguments after arguments[0] regardless of how many there may be - different total number or arguments fed into the function where it is called
[12:34:09] <Maxdamantus> Then maybe you're wanting `.slice(1)`
[12:34:10] <blahboybaz> https://onecompiler.com/javascript/3xuq6by7d  <--  fits the bill (works as intended)
[12:34:25] <blahboybaz> Yes - that is what solved it
[12:34:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:34:48] <blahboybaz> Now I can implement the line from that test case into the real code
[12:34:57] *** Quits: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[12:35:12] <Maxdamantus> The argument to `.slice` is the desired start index, and array indices start from 0, so if you want to skip 1, you use `.slice(1)`, not `.slice(2)`
[12:35:35] <Maxdamantus> You can think of it as "how many to skip"
[12:36:06] <blahboybaz> Yeah
[12:36:08] <blahboybaz> :)
[12:36:09] <blahboybaz> thanks
[12:38:05] *** Quits: niop (niop@gateway/vpn/airvpn/niop) (Ping timeout: 256 seconds)
[12:40:09] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:42:25] <stenno> dunno if that is relevant but you can also do: const [first] = ary;
[12:43:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:43:04] <stenno> because slice will return an array, and you usually want the value, not an array with the value
[12:43:09] <stenno> oh its the other way around right
[12:43:47] <stenno> const [first, ...rest] = ary; but this pollutes the scope with the `first` identifier, so slice(1) is preferrable
[12:44:02] *** Joins: p-i- (~Ohmu@183.89.33.105)
[12:45:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:45:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:45:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:48:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:48:45] *** Quits: p-i- (~Ohmu@183.89.33.105) (Ping timeout: 268 seconds)
[12:49:30] <rendar> is 'class' keyword es5 or es6?
[12:50:05] <Maxdamantus> rendar: it exists as a keyword in ES5, but it's only reserved.
[12:50:16] <rendar> i see
[12:50:24] <rendar> so es5 minifier should understand that
[12:51:08] <Maxdamantus> an ES5 minifier will know not to use `class` as a variable name, but it won't know what to do if it sees the `class` keyword, because `class` is specifically invalid in ES5.
[12:51:26] <rendar> :(
[12:54:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[12:56:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:56:57] *** Joins: dirigible (~dirigible@2a00:1678:1337:7a25:5123:8f18:de5a:4ff3)
[13:01:19] *** Joins: heatwave (~heatwave@122.161.77.41)
[13:02:13] *** Quits: heatwave (~heatwave@122.161.77.41) (Client Quit)
[13:02:29] *** Joins: heatwave (~heatwave@122.161.77.41)
[13:07:59] *** Joins: heatwave_ (~heatwave@185.203.122.251)
[13:08:25] *** Quits: heatwave_ (~heatwave@185.203.122.251) (Client Quit)
[13:08:47] *** Joins: heatwave_ (~heatwave@185.203.122.251)
[13:10:04] *** Quits: heatwave_ (~heatwave@185.203.122.251) (Client Quit)
[13:10:05] *** Quits: heatwave (~heatwave@122.161.77.41) (Ping timeout: 256 seconds)
[13:11:47] *** Joins: D4mned (~D1mned@212.101.253.44)
[13:16:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:18:10] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[13:18:15] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[13:20:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[13:21:31] *** Joins: silverdust (~silverdus@user/silverdust)
[13:21:33] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[13:22:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:cc51:dafa:a805:1ab8) (Quit: Leaving)
[13:24:31] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:25:37] *** Joins: kmh (~kmh@2a00:6020:5004:6800:abd3:4ad9:b6f1:3cf)
[13:26:02] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[13:27:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:28:06] *** Kartagis- is now known as Kartagis
[13:29:47] *** Joins: heatwave (~heatwave@185.203.122.39)
[13:30:26] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:30:38] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:30:43] *** Joins: durpo03 (~82y42jrvw@125.21.249.98)
[13:32:34] <fweht> why do i get the reference error `window is not defined`in nextjs at page load?  i understand that window is not defined in node.js, but i do `<button onClick={()=>window.scroll(...)}>...</button>`, shouldnt the error only come after i click the button?
[13:34:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:36:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:36:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:37:20] *** Joins: p-i- (~Ohmu@2403:6200:8978:e242:a51b:a242:723e:6936)
[13:39:01] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e242:1823:78f5:fee:fdd6)
[13:40:49] *** Joins: ASUS (~ASUS@user/ASUS)
[13:40:56] *** Joins: p-i-__ (~Ohmu@2403:6200:8978:e242:9823:317e:c75a:be2a)
[13:41:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e242:a51b:a242:723e:6936) (Ping timeout: 240 seconds)
[13:42:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:42:43] *** Joins: p-i- (~Ohmu@2403:6200:8978:e242:88f4:1752:92fb:49a7)
[13:43:35] <fweht> aaah sorry nvm i misread the error!
[13:44:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e242:1823:78f5:fee:fdd6) (Ping timeout: 240 seconds)
[13:44:26] *** Parts: ASUS (~ASUS@user/ASUS) ()
[13:45:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:45:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:45:57] *** Quits: p-i-__ (~Ohmu@2403:6200:8978:e242:9823:317e:c75a:be2a) (Ping timeout: 240 seconds)
[13:49:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:49:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:49:24] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[13:50:21] *** Joins: stenno (~stenno@user/stenno)
[13:52:01] *** Quits: Guest56366 (~rx@dynamic-046-114-165-003.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:55:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:56:18] *** Joins: hackers (~self@user/hackers)
[13:56:21] *** hackers is now known as remote
[13:57:00] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:57:40] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:58:28] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[13:59:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:59:54] *** Joins: JACKD (~d4mn@212.101.253.44)
[13:59:54] *** Quits: JACKD (~d4mn@212.101.253.44) (Read error: Connection reset by peer)
[14:00:13] *** Joins: JACKD (~d4mn@212.101.253.44)
[14:00:13] *** Quits: JACKD (~d4mn@212.101.253.44) (Read error: Connection reset by peer)
[14:01:11] *** Quits: dirigible (~dirigible@2a00:1678:1337:7a25:5123:8f18:de5a:4ff3) (Remote host closed the connection)
[14:01:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:02:30] *** Joins: JACKD (~d4mn@212.101.253.44)
[14:02:30] *** Quits: JACKD (~d4mn@212.101.253.44) (Read error: Connection reset by peer)
[14:02:56] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:03:04] *** Joins: dirigible (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net)
[14:04:11] *** Quits: heatwave (~heatwave@185.203.122.39) (Quit: WeeChat 3.4)
[14:04:12] *** Joins: JACKD (~d4mn@212.101.253.44)
[14:04:12] *** Quits: JACKD (~d4mn@212.101.253.44) (Read error: Connection reset by peer)
[14:04:28] *** Joins: heatwave (~heatwave@185.203.122.39)
[14:06:49] *** Joins: voltage_ (voltage@user/voltage)
[14:10:53] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[14:11:29] *** Joins: Giovanni (~Giovanni@87.251.20.36)
[14:11:57] <maret> If I need to call async function in a loop for X number of times should I use promise.all so I can measure and know precsesilly when did the proce end?
[14:13:58] <Svitkona> umm, well
[14:14:13] <Svitkona> do you need to call some code when all of the functions are done executing?
[14:15:12] <maret> yes, I need to log that everything run successfully
[14:15:37] <Svitkona> then sure, it sounds like you need Promise.all
[14:17:20] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2ee:44e2:1d49:1e2c:593f)
[14:18:33] <DPA> There is also Promise.allSettled(), in case you don't want it to reject as soon as any it waits for reject.
[14:18:38] <maret> actually I had to make some silly mistake because simply calling  for (let i = 0.... ) { await callFN()... works
[14:19:39] <DPA> That won't be in parallel, though.
[14:19:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e242:88f4:1752:92fb:49a7) (Ping timeout: 240 seconds)
[14:22:48] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[14:25:38] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 260 seconds)
[14:28:58] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:35:23] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[14:37:42] *** Quits: blahboybaz (~blahboyba@c-67-161-97-69.hsd1.wa.comcast.net) (Quit: leaving)
[14:38:27] *** Quits: durpo03 (~82y42jrvw@125.21.249.98) (Quit: Leaving)
[14:39:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:43:29] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[14:45:32] *** Joins: voltage_ (voltage@user/voltage)
[14:46:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:47:59] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Remote host closed the connection)
[14:49:35] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:49:53] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[14:54:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:56:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:58:47] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[15:00:35] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:04:25] *** Joins: heatwave_ (~heatwave@122.161.77.41)
[15:04:27] *** Quits: heatwave_ (~heatwave@122.161.77.41) (Client Quit)
[15:04:51] *** Quits: heatwave (~heatwave@185.203.122.39) (Ping timeout: 256 seconds)
[15:04:51] *** Joins: heatwave_ (~heatwave@122.161.77.41)
[15:05:52] *** heatwave_ is now known as heatwave
[15:12:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[15:12:44] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:13:11] *** Joins: _sa0sin_ (~sa0sin@2a01:e0a:414:b360:f495:96d3:641b:e28d)
[15:13:12] *** Joins: amcsi (~amcsi@3EC9428E.catv.pool.telekom.hu)
[15:14:24] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:15:53] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 256 seconds)
[15:17:32] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[15:19:03] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Ping timeout: 250 seconds)
[15:22:41] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:23:49] *** Joins: kakashiA1 (~kakashi@105.154.182.62)
[15:24:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:25:47] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[15:30:36] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[15:30:42] *** Joins: dingdreher (~dingdrehe@mob-194-230-147-223.cgn.sunrise.net)
[15:31:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:32:02] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[15:32:31] *** Joins: CalamityToo (~CalamityB@user/CalamityBlue)
[15:33:29] *** Joins: pmercado (~pmercado@186.107.44.64)
[15:33:56] *** Quits: dingdreher (~dingdrehe@mob-194-230-147-223.cgn.sunrise.net) (Client Quit)
[15:34:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:34:36] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[15:38:34] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[15:43:44] *** Joins: nomic (~nomic@185.192.69.129)
[15:45:57] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:46:28] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[15:46:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:50:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:51:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:51:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[15:51:14] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[15:51:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[15:52:21] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[15:52:46] *** Joins: wyclif (~wyclif@user/wyclif)
[15:53:35] *** Quits: Giovanni (~Giovanni@87.251.20.36) (Ping timeout: 256 seconds)
[15:53:51] *** Quits: remote (~self@user/hackers) (Remote host closed the connection)
[15:53:57] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[15:54:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:56:51] *** Joins: fef (~thedawn@user/thedawn)
[15:58:12] *** Quits: heatwave (~heatwave@122.161.77.41) (Quit: WeeChat 3.4)
[15:58:32] *** Joins: heatwave (~heatwave@185.203.122.247)
[15:59:38] *** Joins: heatwave_ (~heatwave@122.161.77.41)
[15:59:40] *** heatwave is now known as Guest7629
[15:59:40] *** heatwave_ is now known as heatwave
[16:00:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[16:01:36] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[16:02:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:03:21] *** Quits: Guest7629 (~heatwave@185.203.122.247) (Ping timeout: 252 seconds)
[16:04:14] *** Joins: silverdust (~silverdus@user/silverdust)
[16:04:38] *** Quits: heatwave (~heatwave@122.161.77.41) (Quit: WeeChat 3.4)
[16:04:58] *** Joins: heatwave (~heatwave@23.82.193.143)
[16:08:27] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:09:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:10:09] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:11:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:15:02] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[16:15:20] *** Joins: Snyp (~Snyp@49.207.217.84)
[16:16:42] *** Quits: Snyp (~Snyp@49.207.217.84) (Client Quit)
[16:17:16] *** Joins: Snyp (~Snyp@49.207.217.84)
[16:17:22] *** Quits: pycode (~pycode3@2001:b07:5d28:551:12ef:ed76:5dba:9e9c) (Ping timeout: 250 seconds)
[16:17:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:19:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:21:28] *** Joins: eugercek (~user@user/eugercek)
[16:25:21] *** Joins: dingdreher (~dingdrehe@mob-194-230-147-223.cgn.sunrise.net)
[16:27:35] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:29:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:30:19] *** Joins: JACKD (~d4mn@212.101.253.44)
[16:31:26] *** Quits: JACKD (~d4mn@212.101.253.44) (Remote host closed the connection)
[16:34:17] *** Quits: dingdreher (~dingdrehe@mob-194-230-147-223.cgn.sunrise.net) (Quit: dingdreher)
[16:35:43] *** Joins: masber (~masber@213.55.224.49)
[16:38:00] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 252 seconds)
[16:38:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:41:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:43:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:43:15] <ox1eef> Promise.all looks best, indeed
[16:44:02] <CuriousErnestBro> ox1eef you probably want Promise.allSettled()
[16:45:05] <CuriousErnestBro> .all() has:  It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.
[16:45:27] <CuriousErnestBro> oh wait, that was already said
[16:45:28] <CuriousErnestBro> nvm
[16:47:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:48:05] <ox1eef> yes, indeed, one or the other - just not a for loop with await in each iteration, that would seem to be blocking.
[16:49:45] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:50:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:51:02] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[17:01:35] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[17:03:34] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:09:20] *** Quits: kakashiA1 (~kakashi@105.154.182.62) (Ping timeout: 252 seconds)
[17:10:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:11:00] *** Quits: lotharn|2 (~kvirc@2600:8800:280:d400:91f:d3ed:5cc5:bb2f) (Ping timeout: 240 seconds)
[17:12:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:12:34] *** Quits: Snyp (~Snyp@49.207.217.84) (Read error: Connection reset by peer)
[17:15:11] <stenno> ox1eef: consider for-await-of
[17:15:20] <stenno> for sequential promises
[17:16:57] <DPA> They do well together with async generators
[17:17:30] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:20:41] *** Joins: pycode (~pycode3@2001:b07:5d28:551:58d4:7d53:299:4ec3)
[17:21:41] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[17:24:13] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:29:52] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:48] *** ChanServ sets mode: +o litharge
[17:30:49] *** litharge sets mode: -bo *!*@78.84.18.138 litharge
[17:34:13] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[17:39:48] <blueagain> stenno: lith is your dog?
[17:41:10] <stenno> blueagain: nope, its a network bantracker
[17:41:21] <blueagain> oh, got it
[17:41:28] <stenno> https://libera.chat/guides/bots#litharge
[17:42:09] <blueagain> That's pretty cool
[17:42:14] <stenno> yep
[17:42:42] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[17:47:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:47:50] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:47:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:48:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:48:42] *** Joins: wyclif (~wyclif@user/wyclif)
[17:50:52] *** Joins: blacked (~blacked@user/blacked)
[17:51:01] <blacked> Guys if i make a function lets say
[17:51:25] <blacked> `function abc(a, b,c ){ ... do some things with a b c)`
[17:51:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:51:34] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[17:51:35] <blacked> and `a b c` variables are already defined
[17:51:51] <blacked> would that affect that funcation behaviour or it just use its own argument?
[17:51:57] <blacked> Is it good doing that?
[17:53:07] <Decker> having variables a b c no? not really good... passing arguments that hide globals sure - no problem... the function will use its local-er copy before eternals
[17:53:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:53:12] <Decker> (externals)
[17:53:41] <blueagain> blacked: shadowing can cause confusion, but is otherwise harmless.
[17:53:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:53:51] <blueagain> blacked: https://eslint.org/docs/rules/no-shadow
[17:54:10] *** Joins: wyclif (~wyclif@user/wyclif)
[17:55:13] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:56:05] <blacked> oh thank you, i think i should change argument name to something else
[17:56:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Client Quit)
[17:56:43] <Kirjava> feels good https://i.imgur.com/1kPLeV4.png
[17:58:17] <blueagain> Kirjava: no babel anymore?
[17:58:26] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[17:59:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:59:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[17:59:24] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[17:59:38] *** Joins: wyclif (~wyclif@user/wyclif)
[17:59:50] <Kirjava> nah, esbuild has its own parser
[18:00:07] <Kirjava> I absolutely love it, it's fast and the API is at just the right level of abstraction for my use cases
[18:00:18] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[18:01:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:01:48] <blueagain> Yeah, I have switched to esbuild in my framework too (from rollup+terser, which was slow. And bad).
[18:01:49] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:01:54] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[18:02:56] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:642a:7bc9:d2b2:1218)
[18:04:01] <Kirjava> the only annoying thing I've had to do was support code splitting in a non-esm environment
[18:04:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:04:24] <Kirjava> (or at least, something analaous to it)
[18:05:01] <blueagain> Oh, I only do esm. But I did have to deal with dynamic imports, which eslint doesn't support.
[18:05:15] <blueagain> (I just generate static imports on my own.(
[18:05:18] <blueagain> )*
[18:05:29] <Kirjava> yeah I just did lazy bundle loading the old school way
[18:05:42] *** Joins: wyclif (~wyclif@user/wyclif)
[18:05:43] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[18:05:47] *** Joins: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net)
[18:05:54] *** Quits: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net) (Remote host closed the connection)
[18:06:05] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:06:25] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi)
[18:06:41] <Kirjava> would be nice to be able to use esm
[18:06:47] <Kirjava> maybe in a year or two
[18:07:23] <blueagain> What's stopping you from using esm right now?
[18:09:36] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:642a:7bc9:d2b2:1218) (Ping timeout: 250 seconds)
[18:10:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[18:10:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:11:15] *** Joins: wyclif (~wyclif@user/wyclif)
[18:12:29] <Kirjava> browser support, I suppose
[18:13:06] <Kirjava> I want a solid 5 years of support from every major browser for something
[18:13:16] *** Joins: JACKD (~d4mn@212.101.253.44)
[18:13:45] <blueagain> esbuild converts it to non-esm though?
[18:15:28] *** Quits: JACKD (~d4mn@212.101.253.44) (Remote host closed the connection)
[18:15:37] <Kirjava> 'esm' is for the 'format' property
[18:15:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:15:49] <Kirjava> which I think it output format, because the other options are iife and cjs
[18:16:46] *** Joins: wyclif (~wyclif@user/wyclif)
[18:18:08] *** Joins: JACKD (~d4mn@212.101.253.44)
[18:18:09] <Kirjava> (code splitting only works with the esm output format... unless you work around it)
[18:18:14] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[18:18:45] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:10] <blueagain> I think you can use esm and just specify the targets that interest you
[18:19:23] <blueagain> per --target=
[18:20:31] *** Quits: JACKD (~d4mn@212.101.253.44) (Remote host closed the connection)
[18:20:44] *** Joins: silverdust (~silverdus@user/silverdust)
[18:21:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:22:24] *** Joins: JACKD (~d4mn@212.101.253.44)
[18:22:30] *** Joins: wyclif (~wyclif@user/wyclif)
[18:25:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[18:26:01] *** Quits: eugercek (~user@user/eugercek) (Ping timeout: 256 seconds)
[18:26:15] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[18:27:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:27:32] *** Quits: JACKD (~d4mn@212.101.253.44) (Remote host closed the connection)
[18:27:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:28:01] *** Joins: wyclif (~wyclif@user/wyclif)
[18:30:56] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:31:20] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2ee:cdf6:8538:d464:b49a)
[18:32:08] *** Joins: crashrep (~crashrep@user/crashrep)
[18:32:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:32:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:33:32] *** Joins: wyclif (~wyclif@user/wyclif)
[18:34:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:34:36] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2ee:44e2:1d49:1e2c:593f) (Ping timeout: 240 seconds)
[18:36:56] *** Quits: D4mned (~D1mned@212.101.253.44) (Read error: Connection reset by peer)
[18:37:25] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2ee:e06c:a143:626:8571)
[18:37:33] <Kirjava> esm works for any input, I'm talking specifically about esm for output
[18:38:11] <Kirjava> are you saying that if you change the target property, even if the output format is set to esm it might not output esm?
[18:38:35] *** Joins: D4mned (~D1mned@212.101.251.135)
[18:38:58] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:39:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2ee:cdf6:8538:d464:b49a) (Ping timeout: 240 seconds)
[18:40:29] *** Joins: JACKD (~d4mn@212.101.251.135)
[18:41:28] <blueagain> format: "This sets the output format for the generated JavaScript files. There are currently three possible values that can be configured: iife, cjs, and esm."
[18:41:37] *** Joins: bambanxx (~bambanx@2800:150:106:1061:a43d:15fb:1f7:a49c)
[18:41:48] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com)
[18:42:08] <blueagain> So you can write esm and generate iife or cjs.
[18:42:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[18:42:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:44:00] <Kirjava> yes
[18:44:17] <Kirjava> the problem I was describing is that code splitting is not supported with any output format other than esm
[18:44:28] <Kirjava> and esm is not an output format available to me, so i had to find a workaround
[18:44:32] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:45:44] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[18:45:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:46:02] *** Joins: JACKD (~d4mn@212.101.251.135)
[18:46:03] <blueagain> oh, you want to output several files?
[18:46:10] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:46:45] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-4506-e0c3-60b4-04e0.res6.spectrum.com) (Quit: Leaving)
[18:47:23] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:47:32] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[18:48:27] *** Joins: cos (~cos@user/cos)
[18:48:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[18:50:09] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[18:51:20] *** Joins: hackers (~self@user/hackers)
[18:51:22] *** hackers is now known as remote
[18:54:18] <Kirjava> yes
[18:54:30] <Kirjava> I'm currently outputting a main bundle and some other that get lazy loaded
[18:54:59] <Kirjava> I just add a script tag with the new source in, and use properties on the tag itself for interop
[18:56:58] <remote> hi, how would you wrap this line to <80 chars? http://ix.io/3R0D
[18:57:32] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:02:18] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[19:02:34] *** Joins: JACKD (~d4mn@212.101.251.135)
[19:04:16] *** Joins: blacked (~blacked@user/blacked)
[19:05:10] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[19:05:11] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[19:05:39] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:06:07] *** Quits: heatwave (~heatwave@23.82.193.143) (Quit: WeeChat 3.4)
[19:06:32] *** Joins: heatwave (~heatwave@94.140.8.29)
[19:07:00] <banana_> remote: you're just simply asking how you would wrap the actual line of code
[19:07:41] <banana_> I would check out prettier that would do that for you https://prettier.io/
[19:10:11] <silly> remote, what do you do when your variable names get over 80 chars?
[19:10:23] <banana_> looks like prettier keeps it the same unless you mess with the 80 character limit https://prettier.io/playground/#N4Igxg9gdgLgprEAuEcAeAHCAnGACSKAZ3wAs4AbCiAYWoFcATAUQDcEYik86Im2OAMXpQwMAJbQAPACU4AR3pwSAPjwBeAg0Zx2sDWuB4AvgG4QAGhAQME6EWSgAhtmwQA7gAUXCByicU7k4Ang5WAEbYTmAA1nAwAMpOALZwADLiUHDIAGYBRHARUbHxCRjRmQDmyDDYSlZwyeFwjDqMaU5QlfROlXCCOMlOMBJdyCBO9DAQliCkMMkUAOqk4vBE5WBwCb5r4qxrweNgRGEgmQW4nlGVQ7n5hSAAVkRoCVUUcACK9BDw9xQClZythLuNwk5mhRZhhsJ
[19:10:23] <banana_> kYEtxIwYKRkAAOAAMwLcBSWUQw41hyjg2HYs0Ufzg1xsfgmRAAtFkWi1ZtgFPRxGzrr07kg8oDHgVkuIanVBR9vr9-nyHlYYJDEcjUUgAExyqLiChVGgQZK81BEACss3oBQAKpC-PygSBWEoAJJQHSwBJgOG2ACCToSMGCnwBBWMxiAA
[19:10:30] <banana_> err
[19:11:18] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Quit: junktext)
[19:11:24] <blacked> guys how can i like do like for eg data is an object {a,b,c}
[19:11:25] <banana_> https://tinyurl.com/2p8764ef
[19:12:10] <blacked> and i want to put that in an argument as somename({data.a, data.b,data.c})
[19:12:14] <blacked> butÂ  i cant do that
[19:12:22] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:12:33] <blacked> i dont want to split data into several a,b,c rather directly put into it, how?
[19:13:11] <silly> sinebane({...data})?
[19:13:21] <silly> somename({...data})?
[19:13:59] *** Quits: heatwave (~heatwave@94.140.8.29) (Quit: WeeChat 3.4)
[19:14:22] *** Joins: heatwave (~heatwave@23.82.194.67)
[19:14:43] <blacked> aummmÂ  oh :)
[19:14:44] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:17:08] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929)
[19:17:53] *** Joins: Rockwood (~Rocky@user/rocky)
[19:20:41] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929) (Client Quit)
[19:20:55] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:21:44] *** Quits: heatwave (~heatwave@23.82.194.67) (Quit: WeeChat 3.4)
[19:22:01] *** Joins: heatwave (~heatwave@23.82.194.67)
[19:24:21] *** Joins: masoudd (~masoudd@user/masoudd)
[19:25:34] <ljharb> rendar: use Babel to handle that.
[19:30:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:31:07] <rendar> huh?
[19:32:37] *** Quits: aswsd (~helpme8@user/hlpme) (Ping timeout: 240 seconds)
[19:33:11] <blacked> is it possible to do hacking , penetration testing with javascript?
[19:34:05] *** Joins: crashrep (~crashrep@user/crashrep)
[19:34:19] <ljharb> rendar: Babel is a transpiler. You use that so you can author modern syntax and run it in older engines. A mini fire is just the thing you run as part of your module bundler.
[19:34:37] <ljharb> blacked: yes, itâs a programming language
[19:34:45] <rendar> oh, you mean to convert es6->es5?
[19:35:03] <blacked> ljharb how?
[19:35:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:36:58] <ljharb> rendar: yes
[19:37:04] <ljharb> rendar: or ES2022
[19:37:11] <rendar> i see, thanks
[19:37:13] <ljharb> blacked: same way youâd do it with any other language
[19:37:16] <rendar> i didn't know it was possible
[19:37:32] <blueagain> ljharb: what do you make of esbuild's transpiling?
[19:37:33] <blacked> i'm searching book:) Â to do so
[19:37:42] <ljharb> rendar: ok, but es6 came out 7 years ago and itâs been commonplace in the industry to use Babel for that since before then :-)
[19:37:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:38:15] <blueagain> I didn't know until today you specify targets in esbuild, I find it pretty cool
[19:38:24] <blueagain> can specify*
[19:38:25] <ljharb> blueagain: highly skeptical. for transpiling it may be correct, but if itâs not running Babelâs tests to verify itself then i wouldnât trust it
[19:38:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:38:36] <ljharb> blueagain: you can do that with Babel too, thatâs standard
[19:38:44] <ljharb> babel-preset-env
[19:38:46] *** Joins: wyclif (~wyclif@user/wyclif)
[19:39:00] <blueagain> ljharb: so if esbuild were on par with babel on correctness, you'd recommend it?
[19:39:04] <rendar> ljharb, yeah but i see many minifiers that supports only es5, dunno why
[19:39:08] <ljharb> i maintain the compat-table, which supplies it with much of its data
[19:39:21] <ljharb> rendar: because minfiying is the last step, done after transpiling and bundling.
[19:39:34] <rendar> ok
[19:39:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:39:36] <ljharb> blueagain: no, thatâd just be the minimum for me not to discourage it
[19:39:55] <ljharb> blueagain: esbuild is also trying to be a bundler, for one, and thatâs already âmore than one thingâ, so thatâs not a good start
[19:40:14] <ljharb> blueagain: but also, itâs not authored in JS. non-js tools for js are a bad idea; theyâll inevitably fail due to a lack of contribution.
[19:40:31] <Kirjava> what are the correctness issues?
[19:40:33] <blueagain> ljharb: I could say that about just about anything. node is both a js runtime AND a webserver.
[19:41:15] <ljharb> blueagain: yep, and the parts of node that arenât written in js see minimal contribution and languish
[19:41:27] <ljharb> oh, about the one tHong part
[19:41:28] <blueagain> chromium is a browser and a pdf viewer...
[19:41:31] <ljharb> *Thing
[19:41:32] <blueagain> yup
[19:41:39] <ljharb> blueagain: yeah youâre stretching the definition tho
[19:41:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:41:55] <ljharb> blueagain: and the Unix philosophy still holds for things that arenât platforms. browsers and node are special cases.
[19:42:13] <blueagain> so just "tools"?
[19:42:20] <blueagain> isn't that a bit arbitrary
[19:43:00] <ljharb> no?
[19:43:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:43:14] <ljharb> Unix does many things, Unix builtin programs generally do one thing
[19:43:27] <blueagain> I mean, deno doesn't include a web server, obviously it is possible to create a js runtime without a built-in web server
[19:43:43] <ljharb> anyways itâs a general principle - the more things something is responsible for, the more screwed how are when it breaks, and the harder it is to maintain
[19:43:54] <blueagain> that I generally agree with
[19:44:00] <ljharb> blueagain: um, what? You canât make a webserver with deno?
[19:44:02] <blueagain> that's why I don't think node should include a web server
[19:44:08] <ljharb> if so, then itâs even more of a joke than i thought
[19:44:13] *** Quits: shailangsa (~shailangs@host86-185-102-18.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[19:44:14] <ljharb> blueagain: it doesnât
[19:44:18] <blueagain> ljharb: it's part of stdlib afaik
[19:44:25] <blueagain> you have to import it from the internets
[19:44:34] <ljharb> it includes http and https and net. those arenât web servers by themselves, theyâre just the bare minimum you need for it
[19:45:12] <blueagain> that's just semantics, you can write a program that's capable of serving web content with a few lines
[19:45:13] <ljharb> sure, might as well import your webserver, the only part of the web thatâs secure, from the massively insecure web. Makes sense
[19:45:18] <blueagain> that's a web server in my defintion
[19:45:20] <blueagain> definition*
[19:45:29] <ljharb> ok well then node has one and itâs a good thing
[19:45:46] <ljharb> but node is a platform, esbuild isnât, so letâs un-tangent this conversation
[19:46:15] <Kirjava> does esbuild actually have correctness issues? is there stuff about it on github I could find perhaps?
[19:46:29] <blueagain> hm, I still think we're talking semantics here, but ok
[19:46:35] *** Quits: masber (~masber@213.55.224.49) (Quit: Client closed)
[19:46:39] <ljharb> i donât know anything specific, no; esbuild is too young to have been exercised enough to know for sure
[19:46:48] <ljharb> blueagain: yes, we are, the most important thing.
[19:47:05] <Kirjava> ah okay I got the impression there was something known, nw
[19:47:35] <silly> while true; do { echo -e "HTTP/1.1 200 OK\r\n"; cat $1; } | nc -vl 8008; done
[19:47:43] <silly> bam, now bash is a webserver
[19:48:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[19:48:46] <ljharb> Kirjava: nah if there was Iâd open with that :-)
[19:48:48] <silly> but so are python and every other scripting language too?
[19:48:53] <ljharb> rollup, tho, has known things.
[19:49:20] <blueagain> yeah, I wouldn't recommend rollup to anyone
[19:49:47] *** Joins: wyclif (~wyclif@user/wyclif)
[19:50:07] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:50:51] <blueagain> ljharb: so you would say web frameworks are exempt from the unix philosophy?
[19:51:37] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[19:51:45] <Kirjava> lol ljharb, I should've guess
[19:51:48] <Kirjava> ed
[19:51:50] <ljharb> blueagain: Iâm sure you can come up with a number of useful non-platform tools that do more than one thing. That may challenge the absoluteness of my comment, but it does not change that a tool should be a bundler or a transpiler, but not both.
[19:52:10] <ljharb> if the goal is to be a better transpiler, replace *babel*
[19:52:23] <ljharb> if the goal is to be s better bundler, *leverage* babel
[19:52:34] <ljharb> trying to solve both at the same time is madness
[19:52:45] <Kirjava> I think that the goal is to be a fast build tool that does a few things, but not too many
[19:52:49] *** Parts: Rockwood (~Rocky@user/rocky) (I am coming back in few)
[19:52:59] <blueagain> I'm actually pretty much on your side here. I would prefer esbuild called itself a *build* system and offered functionalities via plugins
[19:53:06] <Kirjava> it does
[19:53:14] <Kirjava> it's more like a linker
[19:53:25] <blueagain> the transpiling is built-in though
[19:53:26] <Kirjava> and you have hooks to adjust how resolving / loading assets works yourself
[19:53:49] <Kirjava> I get the impression that leveraging babel would lead it slowness
[19:54:05] <blueagain> if the goal is speed, that might be the case
[19:54:09] *** Joins: hsdsd (~Guest94@47.195.15.236)
[19:54:10] <blacked> C
[19:54:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:54:41] <blueagain> ljharb: also I'd like to follow up on the "rot" angle. why do you gather writing it in js makes it less likely to rot?
[19:54:57] <blueagain> I agree *go* per se has high changes of producing rot, but *python* probably doesn't
[19:55:09] <ljharb> Kirjava: it would, but slowness doesnât matter until correctness is assured
[19:55:23] <ljharb> hsdsd: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[19:55:40] <ljharb> blueagain: because js developers - the people using the tool - by and large only know js and only want to write js
[19:55:56] <ljharb> blueagain: if i have to learn another language to maintain my tooling, itâs not going to get maintained
[19:56:08] <blueagain> so your philosophy is that tools *for* a language are best written *in* the language?
[19:56:17] <ljharb> blueagain: that is objectively demonstrated by node itself; the c++ parts get very few contributions
[19:56:22] <ljharb> blueagain: yes, absolutely.
[19:56:35] <ljharb> hsdsd: please read the article in the topic; nobody can see what youâre saying.
[19:56:52] <blueagain> ljharb: so what's speaking against thinning out the c++ core and moving as much as possible to js modules? history?
[19:58:13] <ljharb> blueagain: very little, maybe âperformanceâ. But thatâs actually what is happening to much of node; people are moving parts to js, and new stuff is often written with it
[19:58:33] <blacked> goÂ \O/
[19:58:34] <ljharb> blueagain: but the other barrier is that to port something, you need to understand both the source and destination languages
[19:58:41] <ljharb> blacked: rofl no
[19:58:44] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[19:59:05] <ljharb> blueagain: so by writing it in c++, itâs trapped there unless a c++ person who also knows js can migrate it
[19:59:06] <blacked> why not go?
[19:59:08] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Remote host closed the connection)
[19:59:09] <ljharb> hsdsd: no
[19:59:21] <ljharb> blacked: that would be worse for contributions than c++
[19:59:24] <blueagain> ljharb: yeah, I get the increased level of complexity
[19:59:29] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[20:00:15] <blacked> ljharbÂ  Â isnt go much people using it, as backed by google, much support , i was learning go , as to do backed as fast as c, as cool, as concurrency :)
[20:00:58] <ljharb> blacked: backed by google doesnât mean anything; google backs tons of crap and pulls the plug on tons of good things
[20:01:36] <blacked> but i heard it is good langauge from even google haters, is there any cons of it, like cons of what mongodb is :/
[20:01:48] *** Quits: Elzington_ (~Elzington@87.249.134.17) (Quit: Leaving)
[20:02:15] *** Quits: hsdsd (~Guest94@47.195.15.236) (Quit: Client closed)
[20:02:36] <blueagain> I think I can follow the argumentation
[20:02:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:03:19] <blueagain> while the current maintainer might be proficient in *go*, this could turn into a long-term issue, because the person who replaces him needs to be proficient in *go* too, and can't a mere user of js
[20:03:29] <blueagain> ljharb: is that kind of the bigger idea?
[20:03:51] *** Joins: hsdsd (~hsdsd@47.195.15.236)
[20:04:11] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 250 seconds)
[20:06:14] <blacked> oh ok so less developer problem nothing else , :)
[20:06:42] <banana_> long buy on oil
[20:07:00] *** Quits: Junxter (~Junxter@121.237.60.195) (Ping timeout: 240 seconds)
[20:07:06] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[20:07:18] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:607d:e62e:c583:eddd)
[20:09:11] *** Joins: stenno (~stenno@user/stenno)
[20:09:24] *** Joins: nomic (~nomic@185.192.69.129)
[20:09:54] *** Joins: matsaman (~matsaman@user/matsaman)
[20:09:58] *** Joins: aswsd (~helpme8@user/hlpme)
[20:10:04] *** Joins: gehn (~gehn@user/gehn)
[20:10:20] *** Quits: gehn (~gehn@user/gehn) (Client Quit)
[20:11:16] *** Joins: justAstache (~justache@user/justache)
[20:13:37] *** Quits: hsdsd (~hsdsd@47.195.15.236) (Quit: Client closed)
[20:13:40] <ljharb> blueagain: yes, exactly. But also, the community who cares about the tool is large and primarily only knows js
[20:14:59] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:14:59] <blueagain> ljharb: does that also apply to tools for js written in ts?
[20:15:37] <Kirjava> it sounds like a tradeoff
[20:15:49] <Kirjava> project might get abandoned vs project takes forever to build
[20:16:10] <ljharb> blueagain: absolutely. Altho ts is at least pretty close to js (but not a superset)
[20:16:38] <ljharb> Kirjava: sure but projects that take forever to build are due to the project itself being too large and complex.
[20:16:44] *** Joins: PPT-is-TuringCom (~Guest85@47.195.15.236)
[20:17:01] <ljharb> Kirjava: itâs pretty easy to keep project builds down to < 20 minutes, and incremental builds to < 2
[20:17:12] <blueagain> v8 takes hours to build on my machine...
[20:17:24] <ljharb> sure but thatâs what node binaries are for :-p
[20:17:27] <blueagain> and they still rely on python2 which drives me absolutely nuts on Arch
[20:17:40] <ljharb> a js build process shouldnât be that slow even with the slowest available tools
[20:18:18] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:19:22] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[20:19:52] <blueagain> it's basically impossible to build v8 on Arch without some major tweaking
[20:20:11] *** Joins: shailangsa_ (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[20:20:15] <Kirjava> 20 minutes is insane
[20:20:31] <Kirjava> switching from webpack to esbuild took me from 12 seconds incremental to .05 seconds
[20:21:07] <Kirjava> *0.5 seconds
[20:21:17] <blueagain> I get < 1 second, down from 4-6 seconds with rollup/terser.
[20:21:28] <Kirjava> waiting 12 seconds for a change to be shown in the web browser after saving is not acceptable to me
[20:22:24] *** Joins: eugercek (~user@user/eugercek)
[20:23:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[20:24:51] <blacked> :( Â Its hard to solve new problem, what do you do guys if thats case, its depressing ,
[20:26:15] <blueagain> blacked: "Dust off. Reload. Re-calibrate. Re-engage"
[20:26:53] *** Quits: PPT-is-TuringCom (~Guest85@47.195.15.236) (Quit: Client closed)
[20:31:17] <han-solo> go for a walk
[20:31:25] <ljharb> blueagain: and what does that tell you about arch
[20:31:54] <ljharb> Kirjava: that's notable, sure. but that can apply to the dev experience, doesn't mean it should apply to CI/test/prod
[20:32:47] <Kirjava> it actually builds faster in prod than dev because it's not making source maps
[20:32:53] <blacked> han-solo i've no friend, walking alone feels like everybody watching me, while here i've exam holiday for 30 days, literally nobody in room
[20:33:16] <blueagain> ljharb: it tells me google doesn't give a damn about interoperability
[20:33:31] <Kirjava> are you suggesting to use a different toolchain for prod/CI by that?
[20:34:14] <blueagain> the whole idea of using ninja/meson is to build the project cross-platform
[20:34:50] <blueagain> but they have some tweaks you have to do beforehand that kill that
[20:35:00] <ljharb> blueagain: lol ok, can't argue with a "google doesn't care about stuff" take
[20:35:33] <ljharb> Kirjava: i'm suggesting that if the primary motivation is DX, then you shouldn't risk production breakage with a very young, insufficiently tested tool
[20:35:58] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[20:36:17] *** Joins: nomic (~nomic@185.192.69.129)
[20:38:05] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[20:38:55] <Kirjava> someone's gotta be the first, right? :P
[20:39:49] <blueagain> Yeah, I thought that as well. If everyone only ever uses established tools, no one else would have a chance
[20:40:00] <han-solo> blacked: do anything other than trying to solve the problem for some time and come back later to the problem
[20:40:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:41:07] <blacked> aumm yes okÂ :) Â i'll configure emacs instead :)
[20:42:21] <blueagain> blacked: don't use emacs, use vim.
[20:42:30] *** Joins: Akiva (~Akiva@user/Akiva)
[20:43:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:45:05] <ljharb> Kirjava: esbuild isn't the first and won't be the last
[20:45:25] <ljharb> Kirjava: oh, you mean the first to try it. no, nobody does :-) babel and webpack and browserify have plenty of existing test suites/cases
[20:45:57] <ljharb> Kirjava: if the goal is to change architecture, then the goal should also be to not change any functionality (at least until the arch change is validated sufficiently)
[20:46:04] <blacked> blueagain i wanted to but i cant leave
[20:46:04] <blacked> games, psychology doctor, restclient, irc, browser, emacs key bindings, configuration, themes(alot alot alot , especially modus , doom-themes, spacemacs themes) , music player emms, mail client, quikry fast swiper, ag, magit,
[20:46:05] <blacked> :(
[20:46:39] <blueagain> blacked: why did you pull yourself into such a dependency hell?
[20:46:44] <blueagain> I just use vim to develop
[20:47:00] *** Joins: crashrep (~crashrep@user/crashrep)
[20:50:13] *** Joins: onosendi (~onosendi@user/onosendi)
[20:51:07] *** Joins: netameta_ (~netameta@2a00:a040:193:50fe:3c90:62f7:61d3:94f9)
[20:51:11] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:51:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:51:26] <blacked> blueagain i forgot one, dired (built in file manager )Â :(
[20:51:26] <blacked> I got into emacs because of this guy https://www.youtube.com/watch?v=V3QF1uAvbkU
[20:51:26] <skillbot> YouTube Title: Emacs or VI: The Definitive Answer.
[20:51:27] <blacked> I pulled in such dependency hell because ofÂ  mike (hunter college professor) + one and only our greek philosopher prot https://www.youtube.com/watch?v=gwT5PoXrLVs
[20:51:27] <skillbot> YouTube Title: Vlog: Moral lessons from switching to Emacs
[20:51:27] <blacked> There is no way of getting out , i'm hooked into it.
[20:52:50] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[20:53:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[20:54:11] <blueagain> The first video is just trolling.
[20:54:42] *** Quits: netameta (~netameta@2a00:a040:193:50fe:a08d:c7d1:dc51:2bf8) (Ping timeout: 250 seconds)
[20:54:56] <blueagain> blacked: there are several vim/nvim distributions out there that come preconfigured. They won't replace you music player, but they will get you up and running pretty smoothly on coding.
[20:55:02] *** Joins: wyclif (~wyclif@user/wyclif)
[20:55:07] <blueagain> your*
[20:55:08] *** Quits: lf94 (~lf94@user/lf94) (Killed (NickServ (GHOST command used by root2!~root@bras-base-mtrlpq4613w-grc-71-65-92-209-123.dsl.bell.ca)))
[20:55:54] *** Joins: lf94- (~lf94@user/lf94)
[20:56:09] <blacked> I want to use nvim/vim but i would miss emacs key bindings, its like a mind, when i'm not with emacs binding, i feel i cant speak anymore and its even difficult to use other apps.
[20:56:57] <blueagain> That sounds troubling. I can use vim and a graphical ide, it sometimes takes a few moments of getting used and me writing "jk", but it's not that hard.
[20:58:21] *** Quits: pycode (~pycode3@2001:b07:5d28:551:58d4:7d53:299:4ec3) (Ping timeout: 250 seconds)
[20:58:58] <stenno> you can be super fast if you control your editor with shortcuts
[20:59:06] <stenno> i.e. with keyboard input
[20:59:08] <blacked> and another big reason, much more configurable.
[20:59:08] <blacked> I'm heavy porn user watch more porn than movies/youtube , happens about 3 5 times a day, but once i got into emacs and starts configuringÂ  it happens only once a day. It saved my children.
[20:59:14] <stenno> you just have to know where well what you are doing
[20:59:18] <stenno> tmi
[20:59:19] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[20:59:33] <stenno> s/where/very/
[21:00:26] <blueagain> stenno: I find it much more comfortable with my hands resting on the keyboard the whole time instead of grabbing for the mouse, that's for me the best selling point of vim
[21:00:34] <stenno> yes
[21:00:47] <blacked> also i heard those people telling oh `programmable programming language` , `hackers language` , i was sick listening that lisp fanatics , and lisp is cool as elisp.
[21:00:50] <stenno> you can be so much faster
[21:00:52] <blueagain> not disparaging mice here, they're great for visual precision stuff like shooter games
[21:00:58] <blueagain> just not for programming imho
[21:01:22] <stenno> just have to memorize all those movements
[21:01:26] <stenno> (muscle memory mostly)
[21:01:34] <blueagain> yeah
[21:01:54] <blacked> another one big reason is , we can run apps inside into emacsÂ :( Â , like brave browser inside emacs, .... any apps.
[21:01:55] <blacked> It replace gnome or whatever graphical env :(
[21:02:10] <blueagain> I also like the fact abstraction is pretty built-in, that I can repeat each command n number of times (while still only using the keyboard)
[21:02:10] <blacked> :)
[21:02:52] <blueagain> or that I can start a search-and-replace pattern directly from the keyboard
[21:03:02] <blueagain> these things would take me so much longer using an interface
[21:03:53] <stenno> well in vscode i can just cmd+f
[21:04:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[21:05:13] *** Quits: aswsd (~helpme8@user/hlpme) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:05:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:05:29] <blacked> oh in emacs i can use alt (former meta) + shift + 5 (%)Â  Â , M-S-%
[21:06:02] *** Joins: wyclif (~wyclif@user/wyclif)
[21:07:04] <blacked> EmacsÂ  have one tech that i really that is server-client, like i put emacs server in systemd, while i open as many as many instances of gui and work on different projects with only one backed
[21:08:07] <blacked> and ram only 150mb after my config, vanilla (20 or something) , doom emacs (250 or something , if you want ide features it goes to 3 4 gb depending on language)
[21:08:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:08:37] *** Quits: cos (~cos@user/cos) (Quit: Client closed)
[21:08:39] <blacked> and it is often said that, those who dont use emacs are emacs virgins :(
[21:10:06] <blueagain> stenno: does that create a window that overlays the code?
[21:10:16] *** Quits: bambanxx (~bambanx@2800:150:106:1061:a43d:15fb:1f7:a49c) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[21:10:42] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[21:10:45] <stenno> not sure what you mean
[21:11:11] <blueagain> because that's a grievance I've had with eclipse (never used vscode). the search function opens a code that hides of them, so you have to start moving it around to find the patterns
[21:11:28] <blueagain> opens a window that hides some of the code*
[21:12:03] <stenno> oh wow i haven't heard that name 'eclipse' in a very long time
[21:12:14] <stenno> at least 15 years lol
[21:12:16] <blueagain> I'm forced to use it at my day job unfortunately
[21:12:17] <blacked> eclispe solar
[21:12:20] <stenno> oof
[21:12:29] <stenno> are you an uni prof? :D
[21:12:45] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[21:12:48] <blueagain> no, but I write java, and they had to pick the worst ide for it
[21:12:57] <stenno> right, fair
[21:13:14] <stenno> a bit strange that you couldn't just use your ide of choice
[21:13:40] <blueagain> I could, but then I'd need to make it work with tomcat
[21:13:45] <banana_> https://www.youtube.com/watch?v=T9j7kLG7VK8
[21:13:46] <skillbot> YouTube Title: Obi-Wan has PTSD
[21:13:52] <stenno> another name i haven't heard in a long time
[21:13:53] <blueagain> and apache, and several other things
[21:14:09] <stenno> wasn't that the default rails dev webserver?
[21:14:36] <stenno> oh apparently not
[21:14:38] <stenno> another java thing
[21:14:54] <stenno> dunno where i know it from then
[21:15:14] <blueagain> you can imagine tomcat to be something like the http module in node
[21:15:24] <stenno> oh
[21:15:39] <blueagain> and apache to be like nginx, just tremendously less competent
[21:15:47] <stenno> well yeah i am familiar with apache
[21:17:00] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[21:17:47] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:18:13] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[21:19:12] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[21:19:24] <blueagain> in java lingo they call tomcat an application server
[21:19:39] <blueagain> a term I didn't know until I worked with tomcat
[21:20:07] <stenno> i considered it a lightweight webserver for development
[21:20:09] <blueagain> apparently it's also widespread in the php community
[21:20:56] <blueagain> I don't think they normally serve http
[21:21:25] <blueagain> like, tomcat uses some weird protocol called ajp
[21:21:27] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:21:39] <stenno> wut lol
[21:21:47] <blueagain> "apache jserv protocol"
[21:22:12] <stenno> Jump to navigationJump to search
[21:22:14] <stenno> The Apache JServ Protocol (AJP) is a binary protocol that can proxy inbound requests from a web server through to an application server that sits behind the web server
[21:22:24] <stenno> i see
[21:22:34] <stenno> that sounds super strange and also super java-y
[21:22:43] <blueagain> it is
[21:22:44] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:23:03] <blueagain> I often get the feeling with java-related stuff
[21:23:14] <blueagain> that if there's a stupid way to solve a problem, it's going to be the java way
[21:24:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:25:53] <stenno> i am sure doing it like that makes certain things super effective or portable or w/e
[21:27:25] *** Joins: crashrep (~crashrep@user/crashrep)
[21:29:09] *** Joins: bambanxx (~bambanx@2800:150:106:1061:44c1:d44d:b54e:946a)
[21:29:36] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[21:30:55] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[21:32:00] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:32:05] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[21:33:59] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[21:36:06] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[21:36:42] *** Joins: eugercek (~user@user/eugercek)
[21:38:25] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:39:36] *** Joins: nomic (~nomic@185.192.69.129)
[21:40:11] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:40:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:43:50] *** Joins: Slade (uid128877@user/slade)
[21:44:03] <blacked> Guys
[21:44:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:44:28] <blacked> What are other events of mapbox other than `load`, map.on("load") if you know please tell me
[21:44:40] <stenno> no clue what mapbox is, don't they have docs?
[21:45:43] <onosendi> blacked: https://docs.mapbox.com/
[21:46:18] <blacked> There is only one found where map.on('load" is given but not described , and their other apis :(
[21:46:19] <blacked> https://docs.mapbox.com/help/tutorials/optimization-api/#generate-and-add-a-route
[21:46:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[21:49:17] *** Joins: JACKD (~d4mn@212.101.251.135)
[21:50:24] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:51:26] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2ee:e06c:a143:626:8571) (Remote host closed the connection)
[21:54:40] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:55:57] <silly> die qualitÃ¤t is A+, jetzt hab ich padding eingestellt 5min vorher und 25min hinterher, mal sehn obs hilft
[21:56:52] <silly> aye blame the cat
[21:57:49] *** Quits: haniaF_ (~haniaF@83.24.224.152.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[21:57:53] <stenno> schon echt a+ quali digga
[21:58:55] <silly> #tvheadend (â¯Â°â¡Â°)â¯ï¸µ â»ââ»
[21:58:59] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[22:00:25] <blueagain> what is this language ._.
[22:01:20] <blueagain> stenno: digga I something I'd expect from someone who's like mentally 9
[22:01:39] <blueagain> is*
[22:02:00] <stenno> its northern german hip hop slang for 'bro'
[22:02:09] <silly> oalda...
[22:02:21] <blueagain> not sure it's northern though, I've heard it as south as bawue
[22:02:26] <stenno> alda junge
[22:02:27] <blacked> asfasdf asfwuehdsv ajsaifizla
[22:02:52] <stenno> i am sure mongo klikke made it popular in the 90s
[22:03:32] <stenno> !no mongo
[22:03:32] <jellobot> stenno, Don't use MongoDB - it has many issues, and is essentially never the right solution to your problem. Here's a list of issues: http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/ and a more technical article at http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/
[22:03:58] <blueagain> as long as you don't use 'alda falda' we're good
[22:04:06] <stenno> alter verwalter
[22:04:11] <stenno> ok boomer
[22:04:35] <silly> https://www.youtube.com/watch?v=6DtNW2e6Y28
[22:04:35] <skillbot> YouTube Title: NEW KIDS TURBO: Filmausschnitt "Junge!"
[22:05:07] <stenno> verrueckte mungo junge
[22:05:15] <stenno> oslt?
[22:05:17] <stenno> anyway
[22:05:31] <stenno> oh yeah
[22:05:34] <blacked> Guys can i use jwt read data inside socket.io event?
[22:05:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:06:40] <blacked> silly hhaaha
[22:06:49] <stenno> the 90s were great, mabye
[22:06:53] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[22:07:28] <blueagain> gov't got caught with its pants down going anti-nuclear, france is laughing at us
[22:07:30] <blacked> silly whats that movie name, it is good,
[22:07:31] <blacked> I've never found so laughing and dieing movie like borat,dictator,grimsby brother
[22:08:04] <blacked> i'm fine if your own language movie , if its funny tell me
[22:08:12] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:09:38] <blueagain> blacked: fargo is a good a film
[22:10:20] <blueagain> really brings back the 90s
[22:10:25] <stenno> all coen brother movies are great
[22:10:27] <blacked> 1996 :)
[22:10:53] <blueagain> in fact, that got me nostaglic
[22:11:01] <blacked> is it laughing type?
[22:11:02] <silly> blacked, NEW KIDS TURBO
[22:11:03] <blueagain> i'll go watch burn after reading
[22:11:13] <stenno> fargo, big lebowski, o brother were are thou, no country for old man
[22:11:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[22:11:20] <stenno> men*
[22:11:30] <blueagain> ^ watched of all these except o brother
[22:11:33] <blueagain> all great
[22:11:42] <stenno> yes
[22:12:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:12:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[22:13:30] *** Joins: wyclif (~wyclif@user/wyclif)
[22:13:54] <blacked> i was thinking 90's movie were great because they have story , and people were moore focused,
[22:13:55] <blacked> today movie you see , kids see fucking mr beast, that nonsense pewdiepie, that what kids doing
[22:14:06] *** Joins: JACKD (~d4mn@212.101.251.135)
[22:14:16] <stenno> there are still very good movies made
[22:14:17] <blacked> mindless content
[22:14:23] <stenno> robert eggers
[22:15:43] <stenno> there was a lot of utter trash in the 90s
[22:15:52] <stenno> its just the haze of nostalgia
[22:16:01] <stenno> anyway, back to js
[22:20:37] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 240 seconds)
[22:25:16] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[22:25:18] *** Joins: KevinX (~KevinX@user/KevinX)
[22:27:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:27:53] *** Joins: Junxter (~Junxter@121.237.60.195)
[22:27:56] *** Joins: cos (~cos@user/cos)
[22:29:16] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1)
[22:30:21] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[22:30:38] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1) (Read error: Connection reset by peer)
[22:33:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[22:33:21] *** Quits: amcsi (~amcsi@3EC9428E.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[22:33:33] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[22:40:09] *** Quits: behelit (~behelit@217.61.224.107) (Ping timeout: 256 seconds)
[22:40:35] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[22:41:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:42:51] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[22:43:22] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[22:44:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:45:01] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[22:45:05] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:04] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:46:15] *** Joins: JACKD (~d4mn@212.101.251.135)
[22:46:40] <ljharb> JACKD: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[22:47:06] <D4mned> yeah sorry its me
[22:47:12] <D4mned> im making an irc client
[22:47:31] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:47:33] <ljharb> D4mned: you know you can make your own channels to test things out in, right :-p
[22:47:43] <D4mned> and i need a channel with lots of users to see if the section of the nicknames is working correctly
[22:47:57] *** Joins: epicout (~epicout@2a01:e0a:77:db70:978a:6e9:9495:cd9d)
[22:48:00] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[22:48:01] <D4mned> i was hoping it wont bother you guys
[22:48:04] <Kirjava> /j #bots
[22:48:19] <D4mned> alright i ll do that
[22:48:25] *** Quits: JACKD (~d4mn@212.101.251.135) (Remote host closed the connection)
[22:49:56] <D4mned> no ops or voiced people in there lol
[22:51:46] <Kirjava> you could run your own server and fabiricate everything you need
[22:52:07] <Kirjava> but just making a new channel is good because then you have control over all the things you need to test
[22:52:21] <Kirjava> *good too
[22:52:51] <D4mned> how do i fabricate users
[22:52:51] *** Joins: zebrag (~chris@user/zebrag)
[22:53:20] <Kirjava> write a small tool in JS to connect to your server
[22:53:35] <Kirjava> there are good libraries and it wouldnt take you long
[22:54:38] <D4mned> nah i ll just join some other room
[22:54:48] <D4mned> its not like im flooding or anything iam just idling
[22:54:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:55:08] <D4mned> thanks though
[22:55:08] <Kirjava> yeah, you can put as much effort into it as you need
[22:55:13] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[22:55:17] <Kirjava> I've never bothered with running my own server
[22:55:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[22:56:08] <stenno> challenge: code a serverless irc client which can be hosted on github pages
[22:56:29] <D4mned> lol
[22:56:48] <D4mned> sure just make us a net module that works in browser :P
[22:56:48] <Kirjava> what do you use for transport :P
[22:57:09] <Kirjava> ask github to change their CORS settings
[22:57:16] <D4mned> some servers are set to use websockets
[22:57:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:58:15] <stenno> what does web.libera.chat use?
[22:58:16] <D4mned> its weird how you use tcp to have an http and then upgrade to websocket to go back tcp
[22:58:24] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[22:58:27] <stenno> kiwi
[22:58:41] <stenno> 101 UPGRADE ftw
[22:58:50] <stenno> switching protocols*
[22:58:52] <stenno> damn fail
[22:59:07] <D4mned> lol
[23:00:46] <epicout> what is the purpose of upgrade field ?
[23:01:26] *** Quits: w0ng (~w0ng@185.218.127.57) (Ping timeout: 250 seconds)
[23:01:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:02:09] *** Joins: llorllale (~llorllale@198.98.119.85)
[23:02:12] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:03:09] <stenno> MUST generate an Upgrade header field in the response that indicates
[23:03:11] *** Joins: alguien (~alguien@user/alguien)
[23:03:11] <stenno>    which protocol(s) will be switched to immediately after the empty
[23:03:13] <stenno>    line that terminates the 101 response.
[23:03:18] <stenno> The Server*
[23:03:55] <alguien> Remind me: Why is assigning `url.searchParams.get` to a variable equivalent to  assigning it `name => url.searchParams.get(name)`?
[23:04:04] <alguien> *NOT equivalent
[23:04:21] <stenno> because you lose context
[23:04:32] <alguien> i figured as much, but why?
[23:04:39] <stenno> your `this` wont be url.searchParams anymore
[23:04:59] <alguien> hmm
[23:05:05] <stenno> that is actually a great aspect of JS and `this`
[23:05:06] <alguien> but why? :)
[23:05:09] <stenno> you _can_ still use bind
[23:05:27] <alguien> eh, that's uglier
[23:05:45] <alguien> that would be `url.searchParams.get.bind(url.searchParams)` right?
[23:05:56] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[23:05:57] <stenno> that should do it, yes
[23:06:03] <alguien> ugleh
[23:06:22] <alguien> alright, i guess it's a design choice, thanks
[23:06:47] <stenno> https://github.com/tc39/proposal-partial-application does implicit binding
[23:07:52] <stenno> b> const foo = 23..toString~(?); foo(2)
[23:07:53] <jellobot> An async internal error occured: Missing semicolon. (1:25)
[23:07:59] <stenno> b> const foo = 23..toString(?); foo(2)
[23:08:01] <jellobot> (okay) '10111'
[23:08:37] <stenno> n> const foo = 23..toString(); foo(2) // error, something about `this`
[23:08:38] <jellobot> (fail) TypeError: foo is not a function
[23:08:48] <stenno> n> const foo = 23..toString; foo(2) // error, something about `this`
[23:08:48] <jellobot> (fail) TypeError: Number.prototype.toString requires that 'this' be a Number
[23:09:40] <stenno> n> const foo = 23..toString.bind(42); foo(2)
[23:09:41] <jellobot> (okay) '101010'
[23:10:42] <stenno> alguien: its a reasonably unique, very cool feature of js, yes. i don't know the rationale behind its conception
[23:10:57] <blueagain> unicorns
[23:11:00] <stenno> might be
[23:11:19] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:11:21] <ljharb> !this @ alguien
[23:11:21] <jellobot> alguien, A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[23:11:37] <ljharb> stenno: imo PFA is unlikely to advance
[23:11:58] <stenno> ljharb: thats sad, i really like a lot playing around with it
[23:12:04] <stenno> i guess its sugar in the end
[23:12:14] <ljharb> i want pipeline and bind-this
[23:12:21] <ljharb> and i don't think PFA offers much value when those exist
[23:12:38] <stenno> is bind-this the '::' thing?
[23:13:05] <stenno> yep
[23:13:26] <stenno> b> const foo = 23.::toString; foo(2)
[23:13:27] <jellobot> (okay) '[object Number]'
[23:13:31] <stenno> :v
[23:13:44] <stenno> b> const foo = ::23..toString; foo(2)
[23:13:45] <jellobot> (okay) '10111'
[23:13:47] <stenno> here we are
[23:14:53] <alguien> stenno, kinda ugly but useful!
[23:15:04] <alguien> i mean the proposal
[23:15:05] <rendar> my onkeydown event handler returns true, but it still blocks F12 button: it doesn't show debug console anymore, why?
[23:15:15] <blueagain> we talkin' about it? https://github.com/tc39/proposal-bind-operator
[23:15:25] <stenno> blueagain: i think https://github.com/tc39/proposal-bind-this
[23:15:51] <blueagain> oh, this seems more recent
[23:15:54] <stenno> yep
[23:16:08] <blueagain> oh, it links to the one, gotcha
[23:16:36] <ljharb> stenno: yes
[23:16:45] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:8c0d:f444:cd25:7d09)
[23:17:00] <ljharb> basically a syntactic `.call`
[23:17:05] <ljharb> the bind part isn't as important
[23:17:15] <rendar> any help?
[23:17:51] <ljharb> rendar: make a codesandbox
[23:17:55] <stenno> pipeline would be super nifty
[23:18:23] <stenno> b> 2 |> 23.toString
[23:18:24] <jellobot> An async internal error occured: Identifier directly after number. (1:9)
[23:18:30] <stenno> b> 2 |> 23..toString
[23:18:30] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:6)
[23:18:36] <stenno> b> 2 |> 23..toString(%)
[23:18:37] <jellobot> (okay) '10111'
[23:18:41] <stenno> right
[23:18:49] <stenno> implicitely bound too here
[23:19:06] *** Joins: taupiqueur (~taupiqueu@56.197.204.77.rev.sfr.net)
[23:19:33] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[23:20:01] <stenno> thats basically ((x) => 23..toString(x))(2)
[23:20:23] *** Joins: behelit (~behelit@217.61.224.107)
[23:20:31] <blueagain> expr can't resolve to an arrow function, right?
[23:20:40] <stenno> it can, sure
[23:20:42] <ljharb> blueagain: what do you mean by expr
[23:20:48] <blueagain> in the spec
[23:20:50] <stenno> oh
[23:20:56] <ljharb> of course it can, arrow functions are only expressions
[23:20:57] <stenno> well it can,
[23:20:59] <stenno> yeah
[23:21:05] <ljharb> blueagain: how else could you pass an arrow function callback
[23:21:05] <blueagain> yeah, but its this would be bound?
[23:21:09] <ljharb> no
[23:21:13] <ljharb> arrow functions *don't* bind `this`
[23:21:19] <ljharb> that's why they're different from normal functions, which do
[23:21:31] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 256 seconds)
[23:21:46] *** Joins: taupiqueur_ (~taupiqueu@20.196.204.77.rev.sfr.net)
[23:22:14] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:23:55] *** Quits: taupiqueur (~taupiqueu@56.197.204.77.rev.sfr.net) (Ping timeout: 268 seconds)
[23:25:01] <stenno> n> const obj = { x: 23, gimme: function() { return () => this.x; }}; const bla = obj.gimme(); bla()
[23:25:01] <jellobot> (okay) 23
[23:25:54] <stenno> lexically bound to obj
[23:25:56] <rendar> it seems i've found the bug: `if (!e.metaKey) { e.preventDefault(); }` this was blocking F12
[23:28:28] <ljharb> rendar: yep, pretty explicitly. not really a bug, more like "the entire purpose of that line"
[23:29:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[23:29:14] *** Joins: haniaF (~haniaF@83.24.224.152.ipv4.supernova.orange.pl)
[23:30:12] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[23:30:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[23:30:33] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:607d:e62e:c583:eddd) (Quit: Textual IRC Client: www.textualapp.com)
[23:31:00] <rendar> yes
[23:31:01] *** Joins: crashrep (~crashrep@user/crashrep)
[23:31:16] <rendar> ljharb, so i think that line is used to block default hot keys
[23:31:53] *** Joins: eugercek` (~user@31.223.43.20)
[23:33:15] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:33:34] <stenno> b> (23::42..toString)(2)
[23:33:35] <jellobot> (okay) '10111'
[23:34:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:35:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:37:24] <stenno> b> ({a: 23})::(() => this.a)() // this wont work?
[23:37:25] <jellobot> (okay) undefined
[23:37:28] <stenno> yep
[23:37:38] <stenno> nice nice
[23:37:41] *** Quits: taupiqueur_ (~taupiqueu@20.196.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[23:39:56] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-026.46.114.pool.telefonica.de)
[23:40:02] <mikrosis> hi :)
[23:40:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:40:44] *** Parts: velix (~velix@user/velix) (Leaving)
[23:40:53] <stenno> hi
[23:41:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:41:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:42:23] <mikrosis> do you know a bit about react-query + react suspense?
[23:42:33] <mikrosis> I want to use react suspense for multiple fragments
[23:42:34] <mikrosis> :/
[23:44:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:45:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:45:37] *** Joins: wyclif (~wyclif@user/wyclif)
[23:46:03] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[23:46:34] <ljharb> rendar: which is dumb, because it doesn't actually block the capability, just the convenient key shortcut
[23:46:47] <rendar> i see
[23:48:39] <rustyshackleford> can you imagine loving agile so much that you write books on it
[23:49:55] <rustyshackleford> or becoming an agile consultant
[23:51:29] <mikrosis> lol
[23:51:30] <mikrosis> hehe
[23:51:44] <hax> my last job had a "certified scrum master"'s business card on the wall to remind everyone of who to not hire
[23:51:46] <mikrosis> it's easy to look from the throne and tell the peasants to agile faster
[23:51:52] <mikrosis> sc(r)um :P
[23:52:33] <rustyshackleford> what is the big deal about agile anyway?
[23:53:16] <hax> you'll have to become a certified scrum master to find out
[23:53:40] <rustyshackleford> once every year or so, my company will have a new initiative
[23:54:12] <rustyshackleford> and it involves some sort of agile training or coaching
[23:55:22] <ljharb> agile, like the FSF, is a necessary overreaction to a now-dead norm
[23:55:26] <EdFletcher> at a previous company where i was a founding member, we had a PM come onboard about a year into the company who wanted to implement Agile everywhere. my small (two-man) team fought against it for us and even as we grew, we remained the most agile (lowercase "a") team in the whole company. ironic, that.
[23:55:36] <ljharb> iow, agile is great for companies that are afraid to do rapid releases
[23:55:50] <ljharb> but for modern companies that don't have that obsolete mentality, agile isn't helpful
[23:56:38] <EdFletcher> so agile as a forcing function against internal fears? that actually kinda makes sense, never heard it positioned that way.
[23:57:01] <ljharb> probably because when it was invented, those weren't seen as "internal fears" but rather as the normal way things are done
[23:57:06] <ljharb> but that was decades ago
[23:57:33] *** Quits: recyclehero (~alistar@ec2-3-127-140-208.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[23:57:43] <EdFletcher> yup indeed
[23:57:59] <systemfault> There "agile"(4 lines of the original manifesto) and "monetized agile"(scrum and others)...
[23:58:30] <EdFletcher> yeah and it's definitely the latter that is Considered Harmful
[23:59:19] <EdFletcher> but four lines of any manifesto is a big 'ol nothing burger, it's idea without execution, so in reality the modern manifestation of Agile really _is_ agile, regardless of how different the original manifesto may be.
