[00:00:00] <qswz> stenno: papaparse
[00:00:31] <qswz> !npm parse-csv
[00:00:33] <jellobot> qswz, npm.im/parse-csv 0.2.0|2016-05-09|CSV parser for node.js.
[00:00:40] <systemfault> I wonder if anyone on the DOM committee knows what event delegation is... and if so, why isn't there a nice and native way to do it already... (I'll probably complain every year about until they fix it)
[00:00:54] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[00:01:10] <systemfault> Using a library is not acceptable for a fundamental pattern of the web like that...
[00:01:10] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[00:01:21] <stenno> sorry its 'csv-parse' lol
[00:01:25] <stenno> and not 'parse-csv'
[00:01:31] <stenno> !npm csv-parse
[00:01:32] <jellobot> stenno, npm.im/csv-parse 5.0.4|2021-12-29|CSV parsing implementing the Node.js `stream.Transform` API
[00:01:41] <ljharb> systemfault: i mean, you can already, you just have to check the target
[00:01:56] <samsch> systemfault, How often do you need event delegation that you aren't using a framework-y lib like React tho?
[00:02:08] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:02:09] <systemfault> If I don't use React? I use it ALL THE TIME
[00:02:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[00:02:37] <systemfault> Now, we can have a discussion about "Why am I not using React for some very simple websites"...
[00:02:46] <qswz> stenno: dos it workin browser?
[00:03:24] <stenno> doesn't seem like it
[00:03:31] <stenno> but we have isometric streams in node now so
[00:03:38] <stenno> isomoprh
[00:03:45] <systemfault> stenno: We do? (Didn't know)
[00:03:54] <stenno> systemfault: yes!!!
[00:04:12] <stenno> n> const { ReadableStream:r } = require('node:stream/web'); (new r({async start(c) { for
[00:04:13] <jellobot> (fail) SyntaxError: Unexpected end of input
[00:04:15] <stenno> oops lol
[00:04:20] <stenno> n> const { ReadableStream:r } = require('node:stream/web'); r
[00:04:20] <systemfault> Ah, experimental but yes! WOW https://nodejs.org/api/webstreams.html
[00:04:21] <jellobot> (okay) [class ReadableStream]
[00:04:31] <qswz> do we have quic in node tho?
[00:04:41] <stenno> isn't quic some http/2 stuff?
[00:04:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[00:04:50] <systemfault> quic is what will be http3
[00:04:57] <stenno> i see
[00:05:10] <hassoon_> http3? d'oh
[00:05:11] <Alexendoo> http/3 is on top of quic
[00:05:12] <hassoon_> now what
[00:05:35] <Alexendoo> slightly different to the spdy/http2 situation
[00:05:38] <systemfault> Alexendoo: I see it like... SPDY is to HTTP2 what QUIC is to HTT3
[00:05:45] <systemfault> Alexendoo: Ah, I see :)
[00:05:47] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:06:03] <systemfault> Alexendoo: Still UDP-based though, right?
[00:06:09] <qswz> http2 was just a marginal improvement
[00:06:16] <qswz> 3 isanother level
[00:07:27] <samsch> somebody let me know when http<number> actually matter for most web dev /s
[00:07:53] *** Joins: dthr_ (~dthr_@user/dthr/x-5547241)
[00:07:53] <Alexendoo> systemfault: Yeah, QUIC is the transport that uses UDP, other protocols can also use it
[00:07:53] <systemfault> samsch: It matters for some features
[00:08:06] <systemfault> samsch: HTTP push, IIRC, is something that involves the dev directly
[00:08:20] <Alexendoo> It does, but HTTP push was removed from browsers
[00:08:32] <systemfault> Alexendoo: Haha, didn't know that
[00:08:51] <systemfault> I always found it to be a very bad idea... but I guess that proves it
[00:08:57] <Alexendoo> Turns out devs weren't great at choosing which resources to push, and it mostly made things slower
[00:09:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:11:05] <systemfault> stenno: Any idea of the perf difference between stream and stream/web?
[00:11:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[00:13:18] <stenno> didn't check out perf yet but the api is much more comfortable imo
[00:13:40] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[00:13:44] <stenno> with pipeThrough of TransformStream
[00:13:59] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[00:14:11] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[00:14:17] <stenno> thats basically .then'ing your streams
[00:14:20] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[00:14:24] <qswz> n> require('node:assert')
[00:14:25] <jellobot> (okay) <ref *1> { [Function: ok] fail: [Function: fail], AssertionError: [class AssertionError extends Error], ok: [Circular *1], equal: [Function: equal], notEqual: [Function: notEqual], deepEqual: [Function: deepEqual], notDeepEqual: [Function: notDeepEqual], deepStrictEqual: [Function: deepStrictEqual], notDeepStrictEqual: [Function: notDeepStrictEqual], strictEqual: [Function: strictEqual], notStrictEqual: [Function: notStrictEqu …
[00:14:53] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:14:54] <stenno> systemfault: i wonder how they implemented it under the hood, i hope they didn't just put it on top of 'node' streams
[00:15:36] *** Joins: onosendi (~onosendi@user/onosendi)
[00:15:52] <stenno> i don't want to mention certain helpers again because i already did this a few times today
[00:16:02] <stenno> but these will put all those things on another level
[00:17:03] *** Quits: heatwave (~heatwave@43.247.41.109) (Quit: WeeChat 3.4)
[00:17:12] <systemfault> https://github.com/nodejs/node/blob/master/lib/internal/webstreams/readablestream.js
[00:17:43] <systemfault> Doesn't seem to be the case, there's way too much code for that to be a layer on top of stream
[00:19:31] <stenno> lets see
[00:19:45] *** Joins: pavonia (~user@user/siracusa)
[00:19:45] <stenno> man arraybuffers are also so amazing
[00:19:57] <stenno> zero-copying into webworkers..
[00:19:57] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[00:20:24] <stenno> check out run()
[00:20:45] <stenno> and of course its abortcontroller-able
[00:20:49] <stenno> which is also super convenient
[00:21:02] <qswz> those new streams look complex
[00:21:16] <stenno> they are really not that complex
[00:21:24] <stenno> you just have to figure out what do with controllers
[00:21:46] <KevinX> Any idea why npm would suddenly 404 on packages using external tarball dependency? i.e. "package-name": "https://raw.githubusercontent.com/package-url.tgz"
[00:21:58] <stenno> i expected a generator somewhere
[00:22:45] <qswz> KevinX curl the tarball
[00:23:01] *** Joins: onosendi (~onosendi@user/onosendi)
[00:23:10] <stenno> qswz: have you worked with node streams in the past?
[00:23:24] <qswz> stenno: never
[00:23:38] <stenno> then you have to trust me that web streams are a superior api
[00:23:42] <systemfault> stenno: It's done manually https://github.com/nodejs/node/blob/master/lib/internal/webstreams/readablestream.js#L493
[00:23:46] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[00:23:51] <qswz> old node streams? yes
[00:24:05] <KevinX> curl -I gives 200
[00:24:20] <stenno> aah great find systemfault
[00:24:22] <qswz> I  got used to it
[00:24:55] *** Quits: dthr_ (~dthr_@user/dthr/x-5547241) (Quit: dthr_)
[00:26:54] <qswz> n< require('v8')
[00:27:31] <qswz> n> require('v8')
[00:27:32] <jellobot> (okay) { cachedDataVersionTag: [Function: cachedDataVersionTag], getHeapSnapshot: [Function: getHeapSnapshot], getHeapStatistics: [Function: getHeapStatistics], getHeapSpaceStatistics: [Function: getHeapSpaceStatistics], getHeapCodeStatistics: [Function: getHeapCodeStatistics], setFlagsFromString: [Function: setFlagsFromString], Serializer: [Function: Serializer], Deserializer: [Function: Deserializer], DefaultSerializer: [class Defa …
[00:27:41] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[00:28:11] <qswz> n> require('v8').serialize({test: 'foo'})
[00:28:12] <jellobot> (okay) <Buffer ff 0d 6f 22 04 74 65 73 74 22 03 66 6f 6f 7b 01>
[00:28:23] *** Joins: justGhost (~justache@user/justache)
[00:28:51] <stenno> n> TextEncoder
[00:28:51] <jellobot> (okay) [class TextEncoder]
[00:28:56] <qswz> n> primordials
[00:28:56] <jellobot> (fail) ReferenceError: primordials is not defined
[00:29:32] *** Joins: dthr_ (~dthr_@85.94.66.156)
[00:30:12] <stenno> n> (new TextEncoder()).encode('hello')
[00:30:13] <jellobot> (okay) Uint8Array(5) [ 104, 101, 108, 108, 111 ]
[00:30:38] <qswz> n> require('v8').serialize('hello')
[00:30:39] <jellobot> (okay) <Buffer ff 0d 22 05 68 65 6c 6c 6f>
[00:31:18] <stenno> strange
[00:31:19] <qswz> n> Buffer.from('hello').toString('hex')
[00:31:20] <jellobot> (okay) '68656c6c6f'
[00:31:39] <stenno> associated metadata i guess
[00:31:42] <stenno> like 'this is a string'
[00:32:06] <samsch> > it's better to use an assertion framework that doesn't terminate the test when there's a failure.
[00:32:35] <samsch> ljharb, this seems like a bad idea. If a check failed, then the state is unknown, so further checks are going to be invalid.
[00:33:10] <qswz> test frameork have a bail option
[00:33:25] <qswz> toterminate on furst error or not (default)
[00:33:36] <qswz> I always used assert
[00:34:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:36:30] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[00:36:58] *** Parts: JarbonFeh (~JarbonFeh@41.227.33.185) ()
[00:37:49] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[00:39:21] *** Quits: dthr_ (~dthr_@85.94.66.156) (Quit: dthr_)
[00:40:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[00:42:19] *** Quits: carro7 (~cucumber@82.76.150.118) (Quit: carro7)
[00:44:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:46:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:46:57] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[00:47:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:47:47] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:51:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0) (Ping timeout: 260 seconds)
[00:52:00] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[00:56:52] *** Joins: dthr_ (~dthr_@85.94.66.156)
[00:57:48] *** Quits: dthr_ (~dthr_@85.94.66.156) (Client Quit)
[01:01:38] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[01:02:16] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[01:05:10] <ljharb> samsch: they might be, they might not be. But in a test run, it’s insanely useful to have that info so you can decide yourself.
[01:05:31] <ljharb> samsch: tests aren’t production; it’s *fine* if an already failing test suite continues in an unknown state
[01:05:46] <ljharb> mekeor[m]: you need to auth with nickserv for non ops to see what you say; see the last link in the topic
[01:07:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:09:06] *** Joins: mknod (~mknod@user/mknod)
[01:09:59] *** Joins: bobdobbs (~user@118.148.85.213)
[01:11:00] *** Joins: dthr_ (~dthr_@85.94.66.156)
[01:11:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[01:15:04] <mekeor[m]> ljharb: thank you :)
[01:16:02] <mekeor[m]> hello everyone :) is there a library which allows me to put arbitrary html-elements on some sort of pane/stage so that the browser-user can navigate and zoom on this pane/stage (nearly) out-of-the-box? :)
[01:16:59] <matsaman> wha?
[01:18:58] *** Quits: dthr_ (~dthr_@85.94.66.156) (Quit: dthr_)
[01:19:31] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:20:57] <mekeor[m]> matsaman: are you talking to me? which part of my question is not understandable? i want to have some sort of "map" experience for a set of html-elements. imagine google-maps, i.e. you can move and zoom around using the mouse, but imagine that it does not show a world-map, but rather some html-elements
[01:21:53] <mekeor[m]> there are already libraries like this, but all libraries i found are based upon <canvas>, so i can't put arbitrary html-elements on the pane/stage
[01:23:18] <matsaman> mmm
[01:23:31] <matsaman> sounds like you want to zoom/transform/scale an area
[01:23:33] <matsaman> and pan
[01:24:49] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[01:25:56] <mekeor[m]> right
[01:28:03] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[01:29:02] <matsaman> should be pretty straightforward with 'transform'
[01:32:17] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[01:36:30] *** Quits: bobdobbs (~user@118.148.85.213) (Ping timeout: 250 seconds)
[01:36:58] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[01:38:37] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:39:57] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-43fc-8805-e18a-4a61.res6.spectrum.com)
[01:40:39] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29) (Quit: MadcapJake)
[01:42:44] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:43:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:44:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:45:49] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:17] *** Joins: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[01:47:46] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 250 seconds)
[01:48:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:49:28] *** Quits: N4buc0- (~N4buc0@191.250.117.129) (Quit: Leaving)
[01:51:28] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[01:52:37] *** Quits: JarbonFeh (~JarbonFeh@41.227.33.185) (Ping timeout: 240 seconds)
[01:53:08] *** Joins: entropy_ (~ent@user/entropy/x-9891564)
[01:53:31] <entropy_> i have this in firefox's debugger TSS: content-tss.js loaded: <site>
[01:53:38] <entropy_> wondering what it is?
[01:55:31] *** Joins: JarbonFeh (~JarbonFeh@41.227.33.185)
[01:55:35] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[01:55:42] *** Quits: JarbonFeh (~JarbonFeh@41.227.33.185) (Client Quit)
[01:55:43] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[01:57:09] *** Joins: zxvf (~zxvf@2001:8a0:7ef1:0:e45b:59a2:132f:ea3)
[01:57:21] <zxvf> hello
[01:58:13] <zxvf> about https://stackoverflow.com/questions/70908925/userscript-for-getting-rid-of-annoying-notifications-counter-on-title-of-pages-l/70910188#comment125355351_70908925
[01:59:32] <zxvf> can someone explain to me why i have to observe not only characterData, given the <title>SOME TITLE</title> has only string data inside it?
[02:03:15] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:03:47] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:04:48] *** Parts: velix (~velix@user/velix) (Leaving)
[02:05:40] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[02:08:10] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[02:09:35] *** Joins: dthr_ (~dthr_@85.94.66.156)
[02:10:05] <ljharb> Donitz you’re not authed
[02:12:17] <Alexendoo> zxvf: Replacing the text node with a new one wouldn't be a CharacterData mutation
[02:12:19] <gde33> what was this called?
[02:12:21] <gde33> n> function a(b){return b}; a`hello`
[02:12:21] <jellobot> (okay) [ 'hello' ]
[02:12:33] <gde33> a function call without the ()
[02:12:34] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[02:12:41] <Alexendoo> tagged template literals
[02:12:45] <gde33> ah!
[02:12:53] <gde33> tnx
[02:13:15] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:17:12] <zxvf> from the documentation on https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe it was not clear to me
[02:17:22] <zxvf> what am I missing?
[02:19:43] <zxvf> ^ Alexendoo
[02:20:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:21:30] <zxvf> so to be a characterdata mutation, it would need to be document.title.text or sthg similar the observed thing, right?
[02:22:13] <Alexendoo> zxvf: It's a specific kind of mutation, ones using e.g. the methods here https://developer.mozilla.org/en-US/docs/Web/API/CharacterData
[02:22:33] <Alexendoo> When you do document.title = "something", it doesn't do that, it creates a new Text Node
[02:22:52] *** Quits: dthr_ (~dthr_@85.94.66.156) (Quit: dthr_)
[02:22:57] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:24:08] <zxvf> i typed this on my js console
[02:24:11] <zxvf> typeof(document.title)
[02:24:11] <zxvf> 'string'
[02:25:09] <Alexendoo> It's a getter/setter
[02:27:31] <zxvf> the refence to Text element on that page confused me
[02:27:38] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[02:28:36] <zxvf> because I want to Text's page https://developer.mozilla.org/en-US/docs/Web/API/Text and I've seen they give an example containing a <TITLE>
[02:29:05] <Alexendoo> It's a node, not an element
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:48] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[02:32:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:32:53] *** Quits: pizdets (~pizdets@183.182.114.249) (Ping timeout: 250 seconds)
[02:32:54] <zxvf> let me see if I understood this clear
[02:33:33] <zxvf> Node
[02:33:34] <zxvf>     î
[02:33:34] <zxvf> Element
[02:33:35] <zxvf>     Î
[02:33:35] <zxvf> Text
[02:33:53] *** Joins: pizdets (~pizdets@183.182.115.245)
[02:35:11] <Alexendoo> Elements are Nodes but a Text is not an Element
[02:35:51] *** Quits: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:21] <Alexendoo> e.g. compare the chart at the top of the Text page you linked to https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement
[02:37:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d180:c928:f791:f80d) (Ping timeout: 250 seconds)
[02:38:24] *** Joins: CoolerX (~CoolerX@user/coolerx)
[02:38:54] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:39:10] <eXtr3m0> A Node can either be from type Element or from type Text
[02:39:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[02:39:49] <eXtr3m0> the "Node" is just where this element or text is located in the big picture (DOM)
[02:40:23] <zxvf> ok, I've seen wrong info somewhere
[02:43:06] <zxvf> tks v much
[02:43:40] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[02:43:46] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[02:45:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:46:32] *** Joins: bobdobbs (~user@118.148.85.213)
[02:48:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:49:16] *** Quits: zxvf (~zxvf@2001:8a0:7ef1:0:e45b:59a2:132f:ea3) (Quit: Client closed)
[02:53:52] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:01:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[03:05:36] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:05:44] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:07:52] *** Quits: jopamo_ (~me@gateway/tor-sasl/jopamo) (Remote host closed the connection)
[03:08:14] *** Joins: jopamo_ (~me@gateway/tor-sasl/jopamo)
[03:09:14] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 250 seconds)
[03:10:02] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[03:14:52] *** Joins: maret (~maret@ip-46.34.247.134.o2inet.sk)
[03:19:34] *** Quits: maret (~maret@ip-46.34.247.134.o2inet.sk) (Read error: Connection reset by peer)
[03:20:55] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[03:23:03] *** Joins: maret (~maret@ip-46.34.247.134.o2inet.sk)
[03:23:54] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:26:26] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[03:26:29] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:7199:c961:fd94:7e34)
[03:28:18] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:30:27] *** Quits: monokrome| (~monokrome@50.215.11.140) (Ping timeout: 250 seconds)
[03:31:07] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[03:31:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:32:23] *** Joins: monokrome| (~monokrome@50.215.11.140)
[03:33:54] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[03:35:37] *** Quits: maret (~maret@ip-46.34.247.134.o2inet.sk) (Quit: maret)
[03:36:20] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[03:36:27] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[03:36:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:38:17] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[03:38:22] *** Joins: Enissay (~Enissay@user/enissay)
[03:40:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[03:44:41] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:45:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[03:45:17] *** Quits: bobdobbs (~user@118.148.85.213) (Read error: Connection reset by peer)
[03:45:43] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:46:11] *** Joins: c4017w (~c4017@209.52.68.8)
[03:47:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[03:47:46] *** Joins: bobdobbs (~user@122.56.181.122)
[03:48:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:49:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:49:33] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:49:56] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[03:49:56] *** Joins: bobdobbs` (~user@118.148.85.213)
[03:50:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:50:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:50:46] *** Joins: wroathe (~wroathe@user/wroathe)
[03:53:54] *** Quits: bobdobbs (~user@122.56.181.122) (Ping timeout: 256 seconds)
[03:54:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:57:10] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[03:58:17] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[03:59:07] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:59:18] *** Joins: onosendi (~onosendi@user/onosendi)
[04:04:51] <KevinX> NPM is suddenly 404 on packages using external tarball dependency. i.e. "package-name": "https://raw.githubusercontent.com/package-url.tgz" - it seems to be because it's sending my registry bearer token with the request and GitHub is returning a 404 with that header present
[04:08:31] *** Joins: jazzy (~jaziz@user/jaziz)
[04:08:38] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[04:14:58] <joepie91> KevinX: .... npm is sending your registry token to a random URL?
[04:15:10] <joepie91> if so, that is a serious security issue that you should report to npm immediately
[04:16:32] <KevinX> Yeah continuing to confirm it now `npm i --always-auth=false` works. Going to try and capture the request headers
[04:17:07] <joepie91> probably a good idea to test it against something running on localhost
[04:18:54] <KevinX> my config has always-auth=true and also //registry.npmjs.org/:_authToken=THIS_TOKEN_IS_SENT_TO_GITHUB on the line after
[04:19:11] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:19:23] <joepie91> that should only be sent to the registry though
[04:19:33] <joepie91> the concerning thing here is that it is apparently sending the token to something that isn't the registry
[04:19:54] <joepie91> which means that someone could steal your token by convincing you to install something from a URL they control, even if you disable all postinstall scripts and whatnot
[04:20:19] <KevinX> yep. not good
[04:20:49] <joepie91> right, so if it really does send the token to arbitrary sites, this is a "drop everything" level of security issue :p
[04:20:54] <KevinX> This seems to be something new though as of the past two months sometime (unless it's new that Google was denying the request)
[04:21:31] <KevinX> Yeah i just want to confirm it before I send an email
[04:21:44] <KevinX> like really confirm i'm not just a moron today
[04:23:12] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[04:24:16] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[04:24:31] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:24:43] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[04:27:26] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[04:27:48] <eXtr3m0> what do you think is most difficult about react?
[04:28:48] <stenno> using useeffect hook properly
[04:29:18] <matsaman> eXtr3m0: finding a reason to ever use it
[04:30:03] <eXtr3m0> I think the benefit is state management isn't it?
[04:30:26] <stenno> no, the benefit of react is an abstraction of DOM manipulation
[04:30:56] <eXtr3m0> stenno: Yes sure but that is very easily done.
[04:31:03] <stenno> ...what?
[04:31:06] <KevinX> joepie91 - if always-auth is true, it sends the bearer token everywhere, regardless of the host
[04:31:22] <stenno> the vdom is easily done?
[04:31:25] <joepie91> KevinX: wtf :|
[04:31:27] <stenno> tell that to the react devs lol
[04:31:36] <matsaman> the benefit is getting jobs working for NIH managers who came before you
[04:33:28] <stenno> what the fuck does react have to do with nih lol
[04:33:34] <KevinX> joepie91 npm 6.14.15 which is the latest on node 14. It seems to possibly be updated in later npm versions though but i'll upgrade and confirm (the project i'm working on is locked to node 14)
[04:33:44] <eXtr3m0> Well I've never used react, what I meant is just in general not updating a live DOM but having a shadow DOM. Not talking about it's manipulation..
[04:34:22] <stenno> shadow dom and vdom are different things
[04:35:00] <eXtr3m0> Yep, sorry I didn't read it properly.
[04:35:01] <stenno> react is first and foremost about the vdom
[04:36:03] <stenno> https://reactjs.org/docs/faq-internals.html eXtr3m0
[04:37:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:38:25] <eXtr3m0> I think it says the benefit is state management
[04:38:33] <stenno> that statement doesn't make sense
[04:38:38] <stenno> what is 'it'
[04:38:48] <matsaman> stenno: oh look at this architecture we've got, it's working fine, yup, time to bring in something entirely from left field like react for no reason
[04:39:00] <eXtr3m0> the content behind the link you posted.
[04:39:02] <matsaman> why? 'cause I have ADHD and can't sit still
[04:39:21] <matsaman> maybe if I switch us to react, my job security will go sky high 'cause nobody else will want to deal with it
[04:39:24] <stenno> matsaman: ah i thought that already, you are quite nonsensicle
[04:39:34] <matsaman> stenno: lies, I'm sensicle
[04:40:02] <stenno> so you write all your dom manipulation yourself? even though it will be much much slower and much less convenient than with react?
[04:40:03] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:7017:3923:8f17:8be8)
[04:40:05] <joepie91> KevinX: I need to sleep now, but let me know what you come up with, I *really really* hope it is not an issue present in recent npm versions
[04:40:19] <stenno> man i am glad i don't have to maintain your homebrew shit
[04:40:20] <joepie91> (though even latest-npm-within-a-supported-Node would be Really Bad)
[04:40:34] <KevinX> Well it's an issue with node 14 so I'll report it now then investigate
[04:40:37] *** Joins: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net)
[04:40:39] <KevinX> yeah
[04:40:50] <stenno> just out of spite because you don't trust people who know stuff better than you
[04:41:13] <stenno> fascinating
[04:41:21] <joepie91> yeah, good idea
[04:41:26] <stenno> sounds more like _you_ are suffering from NIH lol
[04:41:36] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[04:41:39] <matsaman> stenno: I don't manipulate the DOM much, but yeah I'd rather use vanilla JS than react at any moment
[04:41:53] <stenno> '3rd party libraries are evil, i just program everything myself'
[04:41:58] <stenno> that is the definition of NIH
[04:42:10] <matsaman> =) react is quite a large library
[04:42:20] <matsaman> that takes a significant change in approach
[04:42:28] <stenno> which you are not willing to do
[04:42:33] <stenno> because you are scared to learn new stuff?
[04:42:36] <stenno> or why is it
[04:43:01] <matsaman> I don't like learning more about things that are obviously terrible
[04:43:11] <stenno> not every project needs react
[04:43:14] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[04:43:16] <matsaman> hear hear
[04:43:20] <matsaman> literally zero of them =)
[04:44:10] <stenno> if you have a page that does a lot of dom manipulation, not using react is a silly idea
[04:44:40] <stenno> talking about NIH lmao
[04:45:05] <stenno> and throwing around stupid insulting ad hominem
[04:45:30] *** Joins: crashrep (~crashrep@user/crashrep)
[04:45:42] <stenno>  did you lose your job because your company switched to react
[04:45:54] <stenno> or what is with that idiotic attitude
[04:46:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:47:06] <stenno> <matsaman> why? 'cause I have ADHD and can't sit still
[04:47:10] <stenno> what the fuck was that about
[04:49:36] <stenno> is that how you are creating your arguments because that is how people will not take you seriously
[04:49:49] <stenno> you should work on that
[04:50:12] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:52:05] <matsaman> oh, sorry my client highlights for 'matsaman:', just a sec
[04:52:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:52:23] <matsaman> well like I said, I don't do a lot of dom manipulation
[04:52:36] <matsaman> what ad hominem?
[04:52:50] <matsaman> I've lived during this react fad time, and it's exhausting is all
[04:53:16] <matsaman> the people who've brought up react in my experience had no reason to
[04:53:20] <matsaman> it was shiny & new, that's it
[04:53:27] <stenno> are you not able to google if you don't know stuff
[04:53:49] <matsaman> I know what ad hominem is, and I haven't made one that I recall
[04:53:54] <matsaman> maybe you don't know what it is...
[04:54:23] <stenno> <matsaman> why? 'cause I have ADHD and can't sit still
[04:54:28] <stenno> [this is an ad hominem
[04:54:35] <matsaman> it's a hypothetical
[04:54:45] *** ChanServ sets mode: +o stenno
[04:54:50] <matsaman> it wasan't directed at you
[04:54:53] <matsaman> wasn't*
[04:55:03] <eXtr3m0> export function act<T>(callback: () => T | Thenable<T>): Thenable<T> { <--- what is this <T> in this code? what does it do?
[04:56:14] <stenno> i will ban you if you say again that having adhd is a reason to use or not use a framework, because its bullshit, and its insulting for those who have to live with the illness
[04:56:26] <stenno> ok?
[04:56:28] <matsaman> okay, good to know
[04:56:35] *** stenno sets mode: -o stenno
[04:56:42] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[04:59:14] <gambl0re> any postgres users in here?
[04:59:45] <stenno> do you have a js question?
[05:00:04] <stenno> if you have a postgres question, i am sure there is a postgres channel here on libera
[05:02:53] <stenno> 'i dont do much dom manipulation, therefore nobody needs react'
[05:03:16] <onosendi> eXtr3m0: it's a TS variable. `function foo<T>(arg: T): T { return arg; }; foo<string>('foo');
[05:03:24] <stenno> anyway i got too angry about this already
[05:03:35] <matsaman> "what do _you_ think" was the question
[05:04:11] <eXtr3m0> onosendi okay thanks, I thought I missed some sugar. :P
[05:04:13] <matsaman> and not using dom manipulation wasn't my answer
[05:05:22] <onosendi> gambl0re: A lot of us do. Have you tried #postgresql, though?
[05:05:52] <stenno> !ask @ gambl0re
[05:05:52] <gambl0re> onosendi: ya channel is dead though
[05:05:52] <jellobot> gambl0re, Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html
[05:06:03] <stenno> gambl0re: how that a problem of the #javascript channel?
[05:06:04] <gambl0re> .q onosendi
[05:06:32] <stenno> this is not a general support channel
[05:08:47] <gambl0re> this channel is quickly dying, you should just be grateful that someone is even asking a question in here
[05:09:04] <onosendi> gambl0re: ask, maybe you'll get lucky :P
[05:09:28] <matsaman> gambl0re: nah =P
[05:09:57] <stenno> jesus christ
[05:10:10] *** ChanServ sets mode: +o stenno
[05:10:15] *** stenno sets mode: +b *!*@2607:fea8:a59f:c360::82dc
[05:10:17] *** gambl0re was kicked by stenno (gambl0re)
[05:10:19] *** stenno sets mode: -o stenno
[05:12:22] <stenno> how to not get your questions answered, exhibit 1
[05:12:53] <onosendi> stenno: you moved him to my PM, lol.
[05:13:13] <stenno> you can /ignore him
[05:14:57] <stenno> what an entitled help vampire
[05:15:11] <Alex8532> He gambled and lost :(
[05:15:39] <stenno> he didn't even actually ask his question
[05:15:41] <stenno> so
[05:15:57] <stenno> less like gambling and more like investing into a scam NFT
[05:16:33] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:7199:c961:fd94:7e34) (Quit: I have gone to sleep. ZZZzzz…)
[05:16:47] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:18:06] <stenno> onosendi: this is why you don't answer the question 'does anybody use x'. if you answer, they think that you will help them
[05:19:18] <stenno> and now you have some moron crying in your PMs about nazi ops
[05:19:20] <stenno> oslt
[05:21:44] <eXtr3m0> Is this a save space to ask questions? per favore dì qualcosa di carino stenno <3
[05:23:14] <stenno> there is a difference between casually talking offtopic every now and then and joining a channel with the explicit intent for offtopic support
[05:24:12] <stenno> 'i didnt get my question answered in the ontopic channel' is not a good reason to join random other channels begging for help
[05:25:03] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:26:50] <systemfault> lol, gamblore...
[05:27:02] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[05:27:04] <systemfault> Dude has been a help leech for the last 10 years.
[05:27:57] <stenno> should have banned them indefinetely instead of 7 days
[05:32:15] *** Quits: bobdobbs` (~user@118.148.85.213) (Remote host closed the connection)
[05:33:13] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:33:17] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:34:52] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:35:31] *** Joins: audiobirb (~audio@user/audio)
[05:35:34] <Alex8532> Well, I will see you my friends.
[05:35:39] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[05:36:37] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[05:36:44] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:37:03] <stenno> life is hard sometimes
[05:38:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[05:39:01] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:44:17] <eXtr3m0> What's the state of the XSLTProcessor in javascript? The mdn documentation site looks like they're not suggesting to make use of it. https://developer.mozilla.org/en-US/docs/Web/API/XSLTProcessor
[05:44:48] <stenno> never heard of that api
[05:44:55] <stenno> 'nonstandard' is always nasty
[05:45:28] <stenno> i would probably not use it even if it was supported by all browsers
[05:45:46] <stenno> (unless its for a private/hobby project)
[05:46:00] <eXtr3m0> What about an internal backend
[05:46:12] <eXtr3m0> $ backend
[05:46:35] <stenno> i guess you could polyfill it?
[05:46:51] <eXtr3m0> Yes
[05:47:09] <stenno> i cannot find the specification for this
[05:47:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:47:44] <stenno> wait its on the server?
[05:47:50] <stenno> node?
[05:47:56] <eXtr3m0> stenno: https://github.com/w3c/qtspecs
[05:48:08] <eXtr3m0> https://www.w3.org/TR/1999/REC-xslt-19991116
[05:48:59] <stenno> Not part of any specification. This is a proprietary interface that originated in Gecko.
[05:50:36] <stenno> eXtr3m0: but are you talking about node or about the browser?
[05:50:51] <stenno> because you mentioned 'backend'
[05:51:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:51:39] <eXtr3m0> I write server side XSLT react like components
[05:52:11] <stenno> sounds exotic
[05:52:19] <stenno> i would just look for a good npm package
[05:52:41] <stenno> maybe even an polyfill of that api or maybe there is something better
[05:52:44] <eXtr3m0> But I imagine I could use the server side xslt templates also in the browser and load the source xml file dom into an html document and define web components that get replaced via this XSLTProcessor which then outputs html5
[05:52:55] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[05:53:45] <eXtr3m0> all components are documented in xml files so I could easily add user interface for a cms, based on the web components markup (which is defined in the xml docs)
[05:54:02] <eXtr3m0> so cms ui via xml doc basically
[05:54:46] *** Joins: zebrag (~chris@user/zebrag)
[05:54:56] <stenno> i left xml and xslt behind a very long time ago
[05:55:32] <stenno> but yeah i guess my advice is still valid
[05:55:59] <eXtr3m0> I learned a bit about react and its very fun, because the custom markup in react is exactly what I got as well, so I could even imagine a dynamic react component generator based on the xml doc.
[05:56:01] <eXtr3m0> lol
[05:56:43] <stenno> the way the 'custom markup' (i assume you mean JSX) works in react is deceptive
[05:56:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[05:58:12] <eXtr3m0> In which way?
[05:58:19] <stenno> its not actually markup
[05:58:43] <stenno> its just a fancy way to write React.createElement. it gets transpiled by babel
[05:58:51] <eXtr3m0> But can I use it to cast an instance of a component?
[05:59:12] <stenno> it implies the instanciation of a component, yes
[05:59:44] <eXtr3m0> So what happens if I would provide the tree of the whole site at once?
[06:00:08] <stenno> have you looked into react server-side rendering? is that what you want?
[06:00:57] <stenno> i am not really sure what you are trying to achieve here, instinctively i would say that it doesn't sound like a good idea
[06:01:06] <stenno> also its way too late for me now and i have to sleep
[06:01:28] <eXtr3m0> Have a good sleep;)
[06:01:44] <stenno> https://reactjs.org/docs/react-dom-server.html
[06:02:09] <eXtr3m0> Well that could be interesting as well, but server-side is covered.
[06:02:16] <eXtr3m0> I want to create a drag and drop cms
[06:02:20] <eXtr3m0> but without much work.
[06:02:57] *** Joins: em (~em@user/emnode)
[06:03:08] <em> I kind of need to learn how to make web applications fast
[06:03:27] <eXtr3m0> I could define 50 react components just by parsing the xml doc. then I could provide the source xml file to the react render function
[06:04:36] <eXtr3m0> I'm also not sure to be honest. I'm not sure if I need react
[06:04:38] <eXtr3m0> Let's see. :D
[06:05:20] <eXtr3m0> em: your web application is slow?
[06:06:16] <em> haha
[06:06:19] <em> I got that one.
[06:06:29] <eXtr3m0> finally some fun.
[06:06:30] <eXtr3m0> :D
[06:06:40] <em> :D
[06:07:55] <eXtr3m0> Learning it in a fast way is using react.There is so much information out there in all kinds of media formats.
[06:08:48] <eXtr3m0> And if you want to learn it really fast, you can double the playback speed of the youtube player.
[06:09:37] *** Joins: eXtr3m091 (~eXtr3m0@user/eXtr3m0)
[06:09:54] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:10:04] <eXtr3m091> re
[06:11:19] <matsaman> em: thought you knew HTML & stuff?
[06:13:05] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:13:11] <matsaman> what kind of web apps? How fast?
[06:13:19] <em> I mean.. I would say not really. I know the most basic things about it. And I've made some programs with node.s
[06:13:43] <em> Nothing specific, this isn't for employment or professional reasons.
[06:13:55] <em> I'd just really like to be able to make things
[06:15:17] <matsaman> hmmm, maybe just think of something fun to do and go for it, then
[06:15:54] <matsaman> people here can help you with most anything once you've got a goal
[06:16:21] <matsaman> I suppose even if the goal is what your goal should be
[06:16:25] *** Quits: stagas (~stagas@2a02:587:c41d:f5c1:e6c2:4c9f:1d6c:265b) (Ping timeout: 250 seconds)
[06:16:29] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:23:42] *** Joins: mnx (marian@user/mnx)
[06:23:45] <eXtr3m091> good night
[06:24:13] *** Quits: eXtr3m091 (~eXtr3m0@user/eXtr3m0) (Quit: eXtr3m091)
[06:28:49] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[06:29:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[06:33:46] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[06:38:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:39:07] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[06:41:38] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[06:42:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:43:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[06:44:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:45:08] *** Joins: mtm49 (~mtm49@177.137.119.134)
[06:47:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:51:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:57:57] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[06:58:52] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[06:58:53] *** Quits: Alexendoo (~Alex@144.21.50.247) (Ping timeout: 250 seconds)
[07:01:37] *** Joins: viva (~viva@2601:2c7:8900:169:247b:61d0:9c07:da87)
[07:01:46] *** Parts: mtm49 (~mtm49@177.137.119.134) ()
[07:05:17] *** Joins: SOMBRIO (~mtm49@177.137.119.134)
[07:07:49] <viva> hi all i was wondering if someone had 30 seconds to help discuss some syntax/semantical questions im having with javascript... i've got two seemingly identical code snips here that im having a hard time understanding the validity of...
[07:08:32] <viva>  This first link was copied directly from a fetch() tutorial ...  https://jsbin.com/nebuqinufu/edit?html,js,output --- this second link is my interpretation... using double quotes instead of single quotes (which im preferential to due to previous lang https://jsbin.com/bomoyaxoho/edit?html,js,output
[07:08:40] <viva> and also using semi colons after each statement
[07:08:50] <viva> which is also a habit i've gotten into from previous languages
[07:09:02] <viva> is the second link just as "valid" as the first?
[07:09:14] <viva> and i dont understand the authors seemingly sporadic use of semicolons in the first example
[07:09:33] <viva> for instance on the last two lines, the .then statements, one uses a semi the other doesnt...
[07:10:04] <viva> because theres no compiler, i cant tell if its valid or not
[07:10:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:10:11] <viva> i guess i can use a js validator?
[07:10:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[07:11:13] <tempest> viva using a ; between fetch and the .then breaks the promise chain
[07:11:26] <viva> ah ok
[07:11:26] <tempest> fetch.then() is calling .then on the promise returned by fetch
[07:11:34] <viva> oh...
[07:11:40] <em> !books
[07:11:40] <jellobot> em, !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
[07:11:40] <tempest> fetch.then().then() is attaching another handler after that one
[07:11:54] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[07:12:12] <tempest> putting a semicolon after fetch() means that it's interpreting just .then() as a statement which isn't valid
[07:12:17] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:22] <em> Is eloquent a modern text that includes the new java notation and would cover the topic of promises?
[07:12:24] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[07:12:37] <em> s/java/javascript/
[07:12:44] <viva> tempest: so that line should actually look a little bit more like this revised version... https://jsbin.com/nebuqinufu/edit?html,js,output
[07:13:32] <viva> hmm this multi line stuff is a little confusing
[07:13:35] <tempest> you could write it that way yeah - there are varying styles on how to do promise chains like that
[07:13:52] <matsaman> viva: ordinarily it'd be whatever.foo(), but whatever\n.foo() can be more readable
[07:14:02] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:29] <matsaman> viva: otherwise using semicolons explicitly where they're optional but not strictly required, and using single quote over double or vice versa is usually not an issue
[07:14:42] <tempest> often you'll see fetch() and then the .then()s indented on the next few lines
[07:15:56] <viva> ok this has to do with me not being exposed to enough JS to recognize these different features rather than a syntax error, or devs just using semi's willy nilly
[07:16:54] <matsaman> viva: you'd also get an error and realize it immediately, so you'd learn fast
[07:17:15] <matsaman> and had you personally authored it, you would've known the .then() was acting on what was preceding it
[07:17:28] <matsaman> and that a semicolon didn't go there, so again probably wouldn't have come up
[07:17:33] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[07:17:35] <viva> gotcha, and where would i get an error from? the console in the browser?
[07:17:42] <matsaman> viva: yup
[07:17:48] <tempest> it would be a syntax error when it tries to parse the .then() on its own
[07:18:26] <tempest> chrome says unexpected syntax "." about the preceding . for example
[07:19:40] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:20:40] <viva> ok and one last question regarding scripts that run by may not be 100% syntactically correct... when im learning about security and see a lot of poorly crafted scripts/tags i imagine a lot of it is due to lazyness but i try to do things as close to textbook as possible... which of these is the
[07:20:43] <viva> "least cringe" ... https://jsfiddle.net/#&togetherjs=AeSpK7rvsM
[07:21:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[07:21:08] <viva> or most syntactically correct (dare i use that word)
[07:21:33] <tempest> off the top of my head i think the first three lines are all valid
[07:22:02] <tempest> the second <img> isn't because the value for onerror needs to be quoted
[07:22:18] <matsaman> you should quote attribute values even when you don't have to, that's least cringe
[07:22:44] <viva> ok, thx
[07:22:46] <matsaman> and I like semicolons myself, but as tempest says, not an issue of validity
[07:22:52] <matsaman> not there anyway
[07:23:14] <tempest> yeah semicolons are strictly necessary in a *few* scenarios but really not a lot
[07:23:45] <viva> that .then keyword... is that strictly used for promise chains?
[07:24:03] <matsaman> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then
[07:24:05] <tempest> it's not a keyword
[07:24:14] <tempest> it's a function on the Promise prototype
[07:24:25] <matsaman> but the reason you wouldn't put a semicolon before it is just that it was acting directly on what was before it, and not something new & separate
[07:24:42] *** Joins: ferdna (~ferdna@user/ferdna)
[07:24:49] <matsaman> it was on another line just for an aesthetic readability choice
[07:24:50] <tempest> yeah doing a semicolon after the promise and then .then() on the next line is like trying to do fetch();.then()
[07:24:53] <viva> oh, right
[07:25:04] <tempest> when it needs to be fetch().then() because you're calling .then() on the promise returned by fetch()
[07:25:05] <viva> that wasnt immediatley apparent to me at first
[07:25:07] <matsaman> I will say two newlines is a bit much
[07:25:27] <matsaman> })\n.then( would've sufficed for readability
[07:25:33] <matsaman> but to each their own
[07:25:46] <KevinX> joepie91 it appears to be limited to node 14 (npm 6.14.15) - I submitted a bounty report though. Will follow up after I hear back
[07:26:00] <matsaman> viva: but again, it definitely would've been had it been code you wrote
[07:26:10] <matsaman> obviously =)
[07:26:26] <matsaman> you would likely have never thought to add a semicolon there
[07:26:35] <viva> oh most certainly
[07:27:37] <viva> but your info does bring up something that i'm not entirely familiar with... i'm somewhat familiar with putting in escape chars in strings... print("hello world\nmy name is viva"); but what does the \n do in the middle of a code snip like that?
[07:27:56] <viva> return a new line in the editor?
[07:28:05] <tempest> it adds a newline to the string
[07:28:13] <viva> oh
[07:28:30] <viva> in the console?
[07:28:32] <tempest> a \ inside a string is what's called an "escape character", generally used to encode something you can't include directly in the string literal itself
[07:28:38] <tempest> no just in the string variable
[07:29:02] <tempest> if you log it to the console then the newline will be logged yeah, but just doing "\n" on its own is only storing the newline
[07:30:16] <viva> can you check that fiddle again? like that?
[07:31:04] <theskillwithin> lol wtf
[07:31:09] <tempest> no so you wouldn't literally type in \n - people are just putting those in their messages to show where they'd put a newline in the code
[07:31:15] <matsaman> ^
[07:31:16] <tempest> since irc doesn't let you do multiline messages
[07:31:22] <matsaman> not without being obnoxious
[07:31:24] <viva> oh
[07:31:29] <matsaman> sorry for the confusion
[07:31:40] <viva> ah
[07:31:40] <viva> ok
[07:31:41] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (K-Lined)
[07:31:41] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (K-Lined)
[07:31:42] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (K-Lined)
[07:31:42] *** Quits: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4) (K-Lined)
[07:31:42] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (K-Lined)
[07:31:42] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (K-Lined)
[07:31:42] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (K-Lined)
[07:31:42] *** Quits: kadoban (~kadoban@user/kadoban) (K-Lined)
[07:31:42] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (K-Lined)
[07:31:42] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (K-Lined)
[07:31:42] *** Quits: Deide (~deide@user/deide) (K-Lined)
[07:31:42] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (K-Lined)
[07:31:43] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (K-Lined)
[07:31:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (K-Lined)
[07:31:43] *** Quits: drvsh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (K-Lined)
[07:31:43] *** Quits: aolko[m]1 (~aolko93ma@2001:470:69fc:105::68ec) (K-Lined)
[07:31:43] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (K-Lined)
[07:31:43] *** Quits: nicoty (~nicoty@user/nicoty) (K-Lined)
[07:31:43] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (K-Lined)
[07:31:43] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (K-Lined)
[07:31:43] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (K-Lined)
[07:31:43] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (K-Lined)
[07:31:43] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (K-Lined)
[07:31:49] <viva> whoever revised that code is exactly how i would expect to see it
[07:31:53] <viva> like in a text book
[07:32:04] <matsaman> I was saying that the way it has }) and then a newline, and then an empty line with a newline, and then '.then' seemed overkill to me
[07:32:07] <viva> thats how i try to code as well, myself.
[07:32:11] <matsaman> the empty line with newline in particular
[07:32:31] <viva> oic
[07:32:36] <matsaman> but not important, style choice
[07:35:04] <theskillwithin> i can't see the console logs
[07:35:43] <viva> same
[07:36:36] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[07:37:03] <theskillwithin> lim silent seal I think
[07:37:43] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[07:38:09] <theskillwithin> https://jsfiddle.net/theskillwithin/cs6kr7df/  now i can see the console log
[07:39:15] <theskillwithin> https://jsfiddle.net/theskillwithin/64m8k9y5/
[07:40:06] <viva> odd, works on your second share there
[07:41:05] <viva> well thx for the 30 foot over view on this, i suppose as i start taking JS more seriously and make sure to go over the basics this will all start to become more clear
[07:41:10] <viva> and be a total non issue
[07:41:30] <matsaman> yeah I think you'll be fine
[07:42:14] *** Quits: viva (~viva@2601:2c7:8900:169:247b:61d0:9c07:da87) (Remote host closed the connection)
[07:45:20] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[07:47:57] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:48:21] <theskillwithin> >p2k 230
[07:48:21] <skillbot> 230 pounds is about 104 and a half kilos
[07:48:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:48:32] <theskillwithin> >k2p 104
[07:48:32] <skillbot> 104 kilos is about 229 and a half pounds
[07:48:45] <theskillwithin> >k2p! 104
[07:48:45] <skillbot> 104 kilos is about 229.28 pounds
[07:48:56] <theskillwithin> >p2k! 230
[07:48:56] <skillbot> 230 pounds is about 104.33 kilos
[07:50:06] *** Joins: Rockwood (~Rocky@user/rocky)
[07:51:10] *** Joins: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180)
[07:51:21] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:51:51] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[07:51:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:52:08] *** Joins: skillbot (~skillbot@user/skillbot)
[07:52:08] *** ChanServ sets mode: +v skillbot
[07:52:21] <theskillwithin> >p2k 230
[07:54:27] <theskillwithin> (fixed, didn't want those commands)
[07:59:16] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:01:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:02:35] <Rockwood> o/
[08:02:48] <Rockwood> \o/
[08:02:58] <Rockwood>  /o\ /o\
[08:04:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[08:09:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:09:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:09:47] *** Joins: wroathe (~wroathe@user/wroathe)
[08:11:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[08:14:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:16:50] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[08:19:17] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:28:10] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[08:28:10] *** Joins: nicoty (~nicoty@user/nicoty)
[08:28:10] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[08:28:10] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[08:28:10] *** Joins: kadoban (~kadoban@user/kadoban)
[08:28:10] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[08:28:10] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[08:28:10] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[08:28:10] *** Joins: Deide (~deide@user/deide)
[08:28:10] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[08:28:10] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[08:28:10] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[08:28:10] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[08:28:10] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[08:28:10] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:28:10] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[08:28:10] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[08:28:11] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[08:28:11] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[08:28:11] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[08:28:22] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[08:28:22] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[08:28:22] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[08:28:33] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[08:29:15] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[08:29:30] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:29:49] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[08:30:32] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[08:31:59] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:34:10] <theskillwithin> interesting,  I just noticed amazon.com has a back to top button as a bar on top of their footer
[08:34:11] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[08:34:11] *** Joins: kadoban (~kadoban@user/kadoban)
[08:34:11] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[08:34:11] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[08:34:11] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[08:34:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:35:02] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:35:26] <theskillwithin> im not sure how I feel about that,  but it might be kinda genius
[08:38:02] *** Joins: MootPoot (uid444585@id-444585.ilkley.irccloud.com)
[08:39:07] <MootPoot> How would I go about dynamically creating onclick/listeners for buttons which are generated server side? I  see plenty of examples but they rely on the JS creating the HTML button as well.
[08:40:08] <MootPoot> they are all inside one div  - so something that maybe checks for every node inside the div and then creates event handlers accordingly?
[08:40:17] <theskillwithin> first of all you must be talking about buttons with type of button,  so buttons not triggering an onSubmit on a form
[08:40:40] <MootPoot>  simply <button>
[08:40:44] <MootPoot> with a unique ID
[08:40:46] <theskillwithin> if the button is created server side, why not just add an onClick to the button server side
[08:40:57] <MootPoot> I....
[08:41:00] <MootPoot> good point
[08:41:05] <theskillwithin> onclick*
[08:41:10] <MootPoot> I should have thought of that
[08:41:55] <theskillwithin> btw if you have an onclick on a button,  please add type of button  <button type="button" onclick....
[08:42:34] <NoiseEee> Meh. In-line JS meh. Write your JS to look for buttons with a specific class or something
[08:42:49] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:43:11] <theskillwithin> i do mostly react, so thats kinda how i operate
[08:43:55] <systemfault> MootPoot: You usually use event delegation for that
[08:44:55] <systemfault> Allows you to add a single event listener for a group of elements having the same behavior... useful for things like "lists" or when the content is dynamically loaded inside a element using ajax
[08:45:07] <theskillwithin> myButtonElement.addEventListener('click'
[08:46:06] <theskillwithin> altho sometimes for mobile also haz to do myButtonElement.addEventListener('touchstart'
[08:46:32] <theskillwithin> i think, not sure haven't done that in awhile
[08:47:34] *** Quits: LtHummus_ (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:48:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:48:58] *** Quits: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180) (Quit: Client closed)
[08:49:56] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[08:50:51] <systemfault> MootPoot: An simple example https://jsfiddle.net/nrbmsh28/1/
[08:51:27] <Rockwood> NoiseEee, o/ a
[08:52:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[08:53:30] <Rockwood> https://jsfiddle.net/90dbp5g4/ condition not requires i think
[08:54:23] <systemfault> Rockwood: Not in this "specific" case
[08:54:51] <Rockwood> yes i am saying the same
[08:55:34] <MootPoot> systemfault: works a charm
[08:55:37] <MootPoot> Thank you all
[08:55:38] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:55:42] <systemfault> You're welcome
[08:56:10] <MootPoot> amusingly I'm listed as a C# dev but they want a JS code test...idk
[08:56:14] <MootPoot> work is work
[08:56:21] <systemfault> Definitely...
[08:56:43] <systemfault> I'm a C++ programmer who became a JS dev.. who became a Java dev... then PHP... then JS
[08:56:59] <systemfault> Work is work... there are benefits to learning multiple programming languages
[08:58:57] <KevinX> what's the next one?
[08:59:25] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:00:17] <leduyquang753> In fact it's quite hard to live your whole programming career knowing only one language.
[09:00:37] <MootPoot> This should be my first 'real' job
[09:00:40] <MootPoot> just graduated uni
[09:01:03] <MootPoot> code test was supposed to be like 2 hours long , but I'm going all gung ho on it
[09:01:31] <systemfault> KevinX: I don't know... could be Kotlin, Scala, more JS
[09:01:47] <systemfault> I just don't want to be stuck inside a Microsoft bubble
[09:02:00] <systemfault> So, I will probably avoid C# as much as possible
[09:02:01] <KevinX> i'm thinking rust or go, but also want to learn something different like GD script
[09:02:38] <KevinX> And Godot game engine (where you write GD script)
[09:03:02] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:03:08] <systemfault> I'm not interested in Go... and I don't feel the need to learn Rust yet because C++ is still more popular and I'm already familiar with it
[09:03:48] <systemfault> For now, I'm fine in my JS/TS world... really
[09:04:13] <KevinX> Learning rust for me would be making a bet on the future
[09:04:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[09:04:52] <KevinX> a risky bet though
[09:09:18] *** Joins: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180)
[09:10:55] *** Joins: nomic (~nomic@185.192.69.3)
[09:10:58] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[09:15:38] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:15:56] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 252 seconds)
[09:17:52] *** Joins: viva (~viva@2601:2c7:8900:169:247b:61d0:9c07:da87)
[09:19:09] <viva> hello again, i was just in here asking for general JS tips, and I'm still doing some labs and practice... im on portswigger doing some CSRF learning labs, and was wondering... we used fetch() (api?) to complete some previous labs, now we're using the (dated?) XMLHttpRequest ...
[09:19:15] <viva> can the following snip be done in fetch() as well? https://jsfiddle.net/#&togetherjs=trI961Uxiq
[09:19:25] <viva> curious why we didnt use fetch() here as well
[09:19:37] <viva> unless there's some missing functionality that fetch doesnt offer?
[09:20:00] <systemfault> Yes... but nothing that I can see in that snippet of code
[09:20:06] <viva> or perhaps just a limitation of the use case of fetch?
[09:20:28] <viva> yes, i have not attempted to recreate in fetch as of just yet i thought i'd ask first before i sank any time trying to replicate in fetch()
[09:20:44] <viva> in stead of chasing my tail when i inevitably run into an issue
[09:20:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:21:05] *** Joins: tv3n (~tv3n@2601:647:8101:e370::5b75)
[09:21:20] <Rockwood> JS having complete solution Definitely :)
[09:21:24] <Rockwood> systemfault, do you left PHP now?
[09:21:34] <Rockwood> oops 429 error
[09:21:34] <systemfault> viva: You should be able to convert that to fetch no problem
[09:21:36] <Rockwood> loop failure
[09:21:43] <viva> ok thx
[09:22:19] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[09:22:29] <systemfault> The only remaining thing I believe that XHR does that fetch can't is "progress events" and I believe it's doing to be "fixed" once whatwg streams are available everywhere
[09:22:58] <systemfault> (Not 100% sure)
[09:23:13] <systemfault> Rockwood: The last PHP I've written was 4 years ago
[09:23:23] <Rockwood> ah okay
[09:23:29] <viva> also what website should i be using to look up methods and properties and what not? https://developer.mozilla.org/en-US/docs/Web/API/fetch ?
[09:23:30] <Rockwood> now its good
[09:23:49] <systemfault> Rockwood: Then we created a "microservices team" at work and we started doing Node
[09:24:03] <systemfault> viva: Yeah, MDN is as good as it gets
[09:24:24] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[09:24:24] <Rockwood> https://www.npmjs.com/package/react-marquee-master?activeTab=readme  i wanna add --> "delay"
[09:24:38] <Rockwood> in scrolling
[09:24:49] <systemfault> Then add it.
[09:24:52] <viva> thx
[09:25:08] *** Quits: viva (~viva@2601:2c7:8900:169:247b:61d0:9c07:da87) (Remote host closed the connection)
[09:26:04] <Rockwood> export default function Marquee(props: IMarqueeProps): JSX.Element; i am exporting like this
[09:26:09] <systemfault> GO ROCKWOOD GO!!! YOU CAN DO IT BRUH
[09:26:23] <Rockwood> yes i am trying to add it
[09:26:54] <systemfault> <Marquee marqueeItems={marqueeItems} delay={1000000000000000000000} />
[09:27:22] <Rockwood>           <Marquee dalay={100} marqueeItems={responseData} />
[09:27:26] <Rockwood> done
[09:27:27] <Rockwood> yes
[09:27:29] <systemfault> There ya go
[09:27:47] <systemfault> See! You don't need our help!
[09:29:06] <Rockwood> i need
[09:29:15] <Rockwood> still not delay works
[09:30:28] <Rockwood> still scrolling faster
[09:30:43] <Rockwood> i wanna make it slower
[09:31:01] <theskillwithin> make it lower than 40
[09:31:06] <theskillwithin> the default is 40
[09:31:47] <Rockwood> i have done 10 and 0 too
[09:31:58] <Rockwood> but not effecting
[09:32:55] <systemfault> The doc says that the lower the number, the faster it is
[09:33:14] <systemfault> "Delay of the animation. Lower number speeds up the scroll."
[09:33:15] <Rockwood> https://dpaste.com/GG8WUJU6R
[09:33:43] <systemfault> Set it to 500 for fun
[09:33:54] <Rockwood> high even not controlling the scrolling
[09:37:25] <Rockwood> any one know other for this kind of API for auto scrolling  up and down
[09:38:33] <theskillwithin> oops,  ya i got that in the wrong direction
[09:38:34] <systemfault> No, I'm against these things.
[09:39:00] <theskillwithin> scroll hijacker
[09:39:07] *** Joins: fef (~thedawn@user/thedawn)
[09:40:49] <Rockwood> actually i wanna stop on specify time and start back to scroll
[09:41:19] <Rockwood> actually i wanna stop on specify time and start back to scroll after on specify time
[09:41:45] <theskillwithin> Rockwood https://codesandbox.io/s/cool-resonance-05mmx  delay works for me here
[09:41:48] <Rockwood> that marquee list
[09:43:01] <theskillwithin> well wheres your codesandbox?
[09:43:55] <Rockwood> i am using on directly on project
[09:44:10] <Rockwood> and still not codesanbox
[09:44:31] <theskillwithin> but putting into codesandbox is best way to get help
[09:45:38] *** Joins: salad (~cucumber@82.76.150.118)
[09:45:46] <Rockwood> ok
[09:47:01] <Rockwood> works
[09:47:03] <Rockwood> \o/
[09:47:19] <Rockwood> typo was there
[09:47:27] <Rockwood> dalay instead of delay
[09:47:33] <Rockwood> thanks eveyone
[09:47:38] <theskillwithin> haha
[09:47:41] <Rockwood> everyone
[09:47:44] <Rockwood> lol
[09:48:09] <Rockwood> happens when dev in hangover :D
[09:48:18] <theskillwithin> frustrating when its small thing like that,  but happens to the best of us
[09:49:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:50:25] <Rockwood> slow down is not good solution i think
[09:50:38] <theskillwithin> systemfault is the color spelled gray or grey?
[09:51:03] <theskillwithin> systemfault oops colou?r
[09:51:11] <theskillwithin> hrmm
[09:51:12] <systemfault> Both are used...
[09:51:33] <systemfault> Gray is more 'murrica while Grey is more used in the UK (IIRC)
[09:51:47] <theskillwithin> I have a solution
[09:52:01] <Rockwood> i wanna pause scrolling list animation for after a specify time
[09:52:09] <theskillwithin> systemfault --grey: #3A3A3A; --gray: var(--grey);
[09:52:47] <Rockwood> is useEffect correct place for place a timer for this?
[09:52:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[09:53:01] <systemfault> Looks like CSS supports both grey and gray
[09:53:05] <theskillwithin> systemfault i submitted my idea for the nobel peace prize, but I haven't heard back yet
[09:53:21] <Rockwood> :D
[09:53:23] <Rockwood> lol
[09:53:37] <systemfault> theskillwithin: Just wait a little more...
[09:53:53] <Rockwood> more... in numbers :D
[09:56:28] <systemfault> They give the Nobel Peace Prize randomly... so...
[09:57:04] <theskillwithin> https://youtu.be/nhGwJLXzHs8
[09:57:04] <skillbot> YouTube Title: Brian Keating: Cosmology, Astrophysics, Aliens & Losing the Nobel Prize | Lex Fridman Podcast #257
[09:57:54] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[09:59:27] <Rockwood> https://dpaste.com/6D6F29BMG
[10:01:10] <theskillwithin> umm?  wtf?
[10:01:38] <systemfault> "Oh, you destroyed countries because you were angry that some SA crazies crash planes in your twin tower? Here's a Nobel Prize Nomination!"
[10:01:42] <systemfault> "Oh, you just became the new president of the US, did nothing yet, but you happen to have black skin? Here's your Nobel Peace Prize!"
[10:02:01] <systemfault> Hard to take the Nobel Peace Prize seriously...
[10:02:08] <theskillwithin> also should clearTimeout in cleanup
[10:02:32] <theskillwithin> Rockwood why would you delay getting data?
[10:02:51] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/01/28 UTC) 64 Bit)
[10:03:09] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:03:50] <theskillwithin> oh your just polling, ic
[10:04:55] <theskillwithin> !repaste
[10:04:56] <jellobot> theskillwithin, Failed to create gist. Possibly a rate limit
[10:07:07] <theskillwithin> Rockwood consider this https://gist.github.com/theskillwithin/d02da0a0052a00efc84006daf583013e
[10:07:12] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:07:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[10:07:41] *** Joins: jazzy3 (~jaziz@user/jaziz)
[10:07:48] <Rockwood> delay isn't useful
[10:07:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:09:24] <Rockwood> theskillwithin, for pause i have to make timer i think instead direct time
[10:10:25] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:10:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[10:14:23] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[10:14:38] <MootPoot> Quick question
[10:15:01] <MootPoot> can I have spaces within a argument for JS?
[10:15:19] <MootPoot> As in = BananaMethod("Is This A Banana")
[10:15:38] <leduyquang753> Sure, you are free to include as many spaces as you want in a string literal.
[10:15:41] <Maxdamantus> Yes, strings can have spaces in them, and strings can be used as arguments.
[10:16:12] <MootPoot> then wth is going on
[10:16:25] <Rockwood> https://www.htmlcenter.com/blog/pausing-javascript-timers/#:~:text=In%20order%20to%20do%20so,left%20to%20the%20new%20timer. something like this theskillwithin
[10:18:30] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:19:22] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[10:19:25] <Rockwood> i think even setTimeout, setInterval useful
[10:20:02] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[10:21:30] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[10:22:01] <MootPoot> https://usercontent.irccloud-cdn.com/file/XpK8bTlL/image.png
[10:22:12] <MootPoot> https://usercontent.irccloud-cdn.com/file/OflF75X3/image.png
[10:22:26] <MootPoot> Could somebody take a look at thes two pictures and see what's up - what I'm missing
[10:22:44] <MootPoot>  btw a \ in C# is a instruction to escape the next character
[10:22:58] <leduyquang753> The `"` is already being used as HTML attribute delimiter.
[10:23:32] <Rockwood> MootPoot, don't use inline js
[10:23:50] <MootPoot> yes, but why? I haven't put that " there where it changes color
[10:23:54] <MootPoot> Rockwood: have to this  time
[10:23:57] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[10:24:06] <Rockwood> ok
[10:24:19] <leduyquang753> MootPoot You clearly did.
[10:25:10] <MootPoot> I...where?
[10:25:21] <leduyquang753> OK you mean the one after `onclick`.
[10:25:33] <MootPoot> yeah
[10:25:38] <leduyquang753> Your attribute value has spaces and thus needs to be delimited.
[10:26:12] <MootPoot> so the spaces ARE the problem
[10:26:21] <leduyquang753> Yes, you are not showing the right context.
[10:26:40] <leduyquang753> This is HTML context rather than JS.
[10:27:15] <leduyquang753> The HTML parser probably tried to correct your erroneous double quotes by putting some.
[10:28:25] <MootPoot> so my second argument for that method needs to be something like (""This is an arg"") to the html?
[10:28:57] <leduyquang753> You can either use single quotes to delimit or use double quotes and escape using `&quot;`.
[10:31:37] <MootPoot> I changed it to  single quotes but it seems like the parser is still adding them
[10:32:20] <leduyquang753> Show what you tried.
[10:32:51] <MootPoot> https://usercontent.irccloud-cdn.com/file/KcESwlxz/image.png
[10:34:28] <MootPoot> Here is what the devtools show https://usercontent.irccloud-cdn.com/file/sgAPnvzh/image.png
[10:34:57] <MootPoot> middle quote is coming from somewhere and it is not me
[10:36:31] <MootPoot> I could just work around it and change my values to have underscores and swap them out in the final operation
[10:36:36] <MootPoot> just did that - works like a charm
[10:37:12] <leduyquang753> No that's not where you put the single quotes.
[10:37:24] <leduyquang753> Delimit is for the attribute value i.e. your whole JS code.
[10:37:38] <leduyquang753> `onclick='alert("Clicked.");'`.
[10:39:06] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 245 seconds)
[10:39:07] <MootPoot> ah
[10:39:22] *** Joins: stagas (~stagas@2a02:587:c41d:f5c1:1fde:c237:1ef8:c821)
[10:41:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[10:43:00] <MootPoot> Works now
[10:43:03] <MootPoot> Thank you
[10:43:11] <MootPoot> I wouldn't have caught that one myself
[10:45:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:49:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[10:49:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:53:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:55:33] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[10:59:42] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[11:00:49] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[11:03:37] *** Quits: Haxxa (~Haxxa@125-253-30-155.ip4.superloop.com) (Ping timeout: 240 seconds)
[11:20:14] *** Quits: tv3n (~tv3n@2601:647:8101:e370::5b75) (Quit: WeeChat 2.8)
[11:24:21] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[11:26:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:29:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[11:33:13] *** Joins: D4mned (~D1mned@89.108.142.119)
[11:45:22] *** Quits: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:47:59] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[11:48:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[11:50:42] *** Joins: c4017w (~c4017@209.52.68.8)
[11:50:53] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[11:51:45] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[11:53:03] *** Joins: taupiqueur (~taupiqueu@176.247.204.77.rev.sfr.net)
[11:53:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:55:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:55:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:59:12] *** Joins: stenno (~stenno@user/stenno)
[11:59:55] *** Quits: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180) (Quit: Client closed)
[11:59:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[12:03:38] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[12:06:42] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:07:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:08:36] *** Quits: taupiqueur (~taupiqueu@176.247.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[12:08:57] *** Joins: han-solo (~han-solo@user/han-solo)
[12:12:30] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[12:20:04] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[12:24:20] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[12:28:01] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:29:48] *** Joins: jazzy (~jaziz@user/jaziz)
[12:32:26] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 245 seconds)
[12:35:01] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[12:46:58] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:48:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:49:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[12:50:21] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[12:51:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:52:41] *** Joins: stenno (~stenno@user/stenno)
[12:54:40] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[12:57:46] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:00:46] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:01:58] <MootPoot> Is there something wrong with this regex here?
[13:01:59] *** Joins: nicoty (~nicoty@user/nicoty)
[13:02:08] <MootPoot>   "(?<=\/)(.*?)(?=\/)"
[13:02:19] <MootPoot> works in a online checker for JS but not in my browser
[13:02:33] <leduyquang753> What is it meant to do?
[13:02:40] <MootPoot>  what I'm trying to do is get the day from this date format MM/DD/YYYY
[13:03:39] <MootPoot> everytime I do it, it returns a 3 for some reason
[13:04:05] <MootPoot> what I'm doing to get it is  document.getElementById("datepicker").value.search("(?<=\/)(.*?)(?=\/)")
[13:04:24] <MootPoot>  just document.getElementById("datepicker").value reports correctly
[13:04:32] <leduyquang753> Make sure you know what `search` does.
[13:05:09] <MootPoot> so presumably some issu..
[13:05:11] <MootPoot> OH
[13:05:15] <D4mned> put it in a fiddlejs
[13:05:17] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[13:05:20] <MootPoot> search dosen't search...it just grabs the index
[13:05:50] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[13:10:01] *** Joins: pingpongball (~pingpongb@43.228.192.108)
[13:10:22] <MootPoot> strange
[13:10:31] <MootPoot> do I need to include anything to use the match()?
[13:10:57] <MootPoot> it works in a fiddle online but not in my code , says day.match is not a function
[13:11:23] <MootPoot> oh - need to convert to string
[13:13:09] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:17:56] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 252 seconds)
[13:18:53] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:19:18] *** jazzy is now known as Guest9520
[13:19:24] *** jazzy2 is now known as jazzy
[13:19:57] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:20:12] *** jazzy is now known as Guest8192
[13:20:18] *** jazzy2 is now known as jazzy
[13:21:57] *** Quits: Guest9520 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:23:37] *** Quits: Guest8192 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:24:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:27:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:29:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[13:30:38] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:31:31] *** Quits: doji (~doji@user/doji) (Read error: Connection reset by peer)
[13:32:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:35:01] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:35:32] *** Joins: kcrk (~kcrk@user/kcrk)
[13:35:39] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[13:37:51] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 245 seconds)
[13:39:39] *** Joins: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180)
[13:39:52] *** Quits: D4mned (~D1mned@89.108.142.119) (Quit: Leaving)
[13:40:14] *** Joins: doji (~doji@user/doji)
[13:40:19] *** Quits: NicNak (~NicNak@2607:fb90:5f16:7435:b5c9:53fe:1f19:b180) (Client Quit)
[13:40:47] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2)
[13:42:34] *** Quits: pingpongball (~pingpongb@43.228.192.108) (Quit: pingpongball)
[13:44:39] *** Quits: stagas (~stagas@2a02:587:c41d:f5c1:1fde:c237:1ef8:c821) (Remote host closed the connection)
[13:45:06] *** Joins: stagas (~stagas@2a02:587:c41d:f5c1:1fde:c237:1ef8:c821)
[13:46:45] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[13:46:50] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[13:46:52] *** Joins: stenno (~stenno@user/stenno)
[13:47:36] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[13:48:21] <MootPoot> moment.js is a blessing
[13:49:14] <theskillwithin> temporal is also a blessing,  but feels like we will never get soon
[13:51:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:51:54] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:52:27] <MootPoot> well, I completed this code test
[13:52:38] <MootPoot> here's to hoping I actually get the job
[13:52:43] <MootPoot> did the optional objective tooo
[13:55:08] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Quit: Leaving)
[13:55:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:56:41] <theskillwithin> https://youtu.be/5whdsQpMT8A?t=1707
[13:56:41] <skillbot> YouTube Title: Jimi Hendrix Experience 2 24 1969 Live Footage
[13:57:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:58:19] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[14:02:27] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:02:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[14:07:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[14:09:17] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[14:09:21] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[14:10:34] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[14:11:23] <theskillwithin> https://youtu.be/TcDSihFa0iE?t=462
[14:11:23] <skillbot> YouTube Title: Jimi Hendrix Live at Stockholm 1969
[14:15:14] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:18:00] *** jazzy is now known as Guest3367
[14:18:06] *** jazzy2 is now known as jazzy
[14:18:57] *** Quits: Guest3367 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:30:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:bb5d:f69a:4dd1)
[14:36:12] *** Joins: sam_1 (~sam_1@87.51.251.118)
[14:37:06] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[14:39:22] *** Joins: Alexendoo (~Alex@144.21.50.247)
[14:40:46] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[14:40:55] *** Joins: stenno (~stenno@user/stenno)
[14:42:10] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:48e1:be0c:b23c:dea9) (Quit: Leaving)
[14:43:30] *** Joins: dskull (~dskull@user/dskull)
[14:43:43] *** Quits: Alexendoo (~Alex@144.21.50.247) (Client Quit)
[14:44:35] *** Joins: Alexendoo (~Alex@144.21.50.247)
[14:45:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[14:47:27] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:49:04] *** Joins: thojanssens (~thojansse@49.230.238.187)
[14:49:17] <thojanssens> hi
[14:49:37] <thojanssens> anyone familiar with jest config for working with es6 modules can help?
[14:52:06] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[14:52:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:55:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:57:30] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:01:11] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:01:18] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:02:00] *** Joins: remolej (~kenoba@user/kenoba)
[15:02:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[15:07:00] *** Joins: eXtr3m011 (~eXtr3m0@user/eXtr3m0)
[15:08:07] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[15:09:22] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[15:14:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:17:17] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:19:10] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[15:19:24] *** Joins: kilitary (~kilitary@188.242.187.4)
[15:20:25] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:23:44] <relipse> anyone here good at javascript?
[15:24:00] <relipse> specifically drag and drop?
[15:24:03] *** Quits: eXtr3m011 (~eXtr3m0@user/eXtr3m0) (Quit: Client closed)
[15:24:27] <theskillwithin> !ask @ relipse
[15:24:27] <jellobot> relipse, Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html
[15:25:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[15:25:29] *** Joins: stenno (~stenno@user/stenno)
[15:28:53] <relipse> I am making a level editor, if I drag a bad guy it works the first time, but after that it doesn't work https://cworklog.com/eingame2/level_editor_dom.php see this image: https://imgur.com/a/btcf6QB
[15:30:41] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[15:30:48] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[15:31:02] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:31:22] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[15:32:17] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[15:36:23] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:bc3f:ae22:7b02:63e)
[15:37:41] <ph88> hey guys i have a problem with parcel, the generated file errors out. what can i do now ?  https://bpa.st/ZVTA
[15:39:17] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:41:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:42:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:43:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:43:56] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[15:45:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:45:48] <ph88> so when i go into that huge file in dist/index.js and manually put my application code at the end (which was at the start) then all works fine
[15:46:14] <ph88> i think parcel does not put the dependencies in the right order due to the way i load them https://bpa.st/BWCQ
[15:46:42] <ph88> i made it that way so my code stays compatible with both node and browser
[15:47:35] *** Joins: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420)
[15:48:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:48:36] <rcoote> Hello People, is there any MongoDB channel ?
[15:49:40] <theskillwithin>  /msg alis list mongo
[15:50:12] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[15:50:25] <rcoote> thanks very much
[15:51:01] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[15:52:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:55:07] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:56:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:57:28] *** Joins: chenqisu12 (~chenqisu1@183.217.200.249)
[16:01:10] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:02:46] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:02:52] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:02:52] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:05:14] *** robyndrake is now known as robyn
[16:10:34] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:11:47] *** Joins: revolve (~u0_a227@82-132-237-16.dab.02.net)
[16:12:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:15:35] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[16:19:04] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:19:42] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:20:04] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[16:20:46] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[16:23:34] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[16:28:25] *** Joins: sam_1 (~sam_1@87.51.251.118)
[16:31:08] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[16:31:12] *** Joins: pulse (~pulse@user/pulse)
[16:31:38] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:31:53] *** Quits: robyn (~robyndrak@user/robyndrake) (Read error: Connection reset by peer)
[16:32:51] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[16:33:53] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:34:01] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:34:01] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:34:05] *** robyndrake is now known as robyn
[16:38:01] *** Joins: kilitary (~kilitary@188.242.187.4)
[16:42:23] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:43:23] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[16:43:27] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:45:28] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:50:14] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:52:07] *** Joins: Enissay (~Enissay@user/enissay)
[16:53:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:53:26] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[16:53:43] *** Quits: chenqisu12 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:56:53] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:59:10] *** Joins: MassDebates (~MassDebat@193.27.13.56)
[17:01:19] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[17:03:10] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[17:03:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[17:04:18] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:12:20] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 256 seconds)
[17:12:41] *** Joins: pluri (~pluri@user/pluri)
[17:15:28] *** Joins: pluri_ (~pluri@user/pluri)
[17:15:45] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[17:18:04] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:24:20] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:26:21] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:26:39] *** Joins: nomic (~nomic@185.192.69.3)
[17:27:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[17:33:57] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:35:09] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[17:36:03] *** Joins: kakashiA1 (~kakashi@p4fde1f43.dip0.t-ipconnect.de)
[17:36:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:37:12] *** Quits: thojanssens (~thojansse@49.230.238.187) (Ping timeout: 250 seconds)
[17:39:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[17:41:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:44:08] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[17:48:38] *** Joins: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net)
[17:53:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:54:03] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:8c0e:5374:183d:34e2) (Read error: Connection reset by peer)
[17:54:16] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:54:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:55:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:56:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:57:40] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:59:22] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:01:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[18:07:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[18:08:58] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[18:09:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[18:12:27] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:14:27] *** Joins: voltage_ (~voltage@user/voltage)
[18:18:43] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[18:23:08] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[18:24:23] *** Joins: syg_ (~syg@flamebot.net)
[18:25:17] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[18:26:25] *** Joins: thojanssens (~thojansse@49.230.238.187)
[18:26:38] *** Joins: jinzo (~jinzo@user/jinzo)
[18:27:51] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:28:22] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:31:50] <jinzo> Hi, I have an "interesting" problem and cannot figure it out. Namely: I'm importing several exports from this file: https://github.com/mozilla/pdfjs-dist/blob/master/web/pdf_viewer.js#L4885 with the import deconstructor (import { EventBus, TextHighlighter } from 'pdfjs-dist/web/pdf_viewer') and the problem is that all of other imported exports/classes work (like EventBus) the TextHighlighter gives me "TypeError: _pdf_viewer2.TextHighlighter is not a
[18:31:50] <jinzo> constructor" when trying to instantiate it with "new"
[18:32:39] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[18:32:51] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[18:32:55] <jinzo> if I import it from the source file (from which the pdf_viewer.js) gets built, it work. And taking a look at other classes/exports, this should work just fine if importing it from this file
[18:33:01] <jinzo> and I'm not sure what I'm missing
[18:38:41] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:39:58] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[18:41:15] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:43:14] <jinzo> Hmm I guess it's not defined here: https://github.com/mozilla/pdfjs-dist/blob/master/web/pdf_viewer.js#L8326 <-- and this is some webpack stuff that I don't understand and will need to read up on
[18:43:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3)
[18:52:07] *** Joins: JoelJoel (~jjshoe@user/joel)
[18:52:21] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 250 seconds)
[18:52:52] *** Joins: onosendi (~onosendi@user/onosendi)
[18:54:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:54:32] <jinzo> Maybe a look from the other side, why I'm even looking at this - I get some weird behaviour and I'm looking if the possibility of where I import the class could somehow affect the passing by reference. As I'm passing this object/class then to the ones imported from pdf_viewer. I would guess not, but I'm really deep into getting this working and exploring all options
[18:55:12] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:59:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:01:26] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:04:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[19:05:50] <magga> how can i pass query parameters into an "await fetch?" ? its a basic get request. like this: http://localhost:8080/day?date=2022-01-21&dep=it
[19:06:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:06:44] *** Joins: src (~src@user/src)
[19:08:48] <Svitkona> magga, just... pass that URL to the fetch function?
[19:09:17] <magga> Svitkona: okay i'll try
[19:09:48] <magga> do i need to pass in the absolute url? or can i just use relative so like fetch('/day..... ?
[19:11:47] <magga> looks like the relative way worked out
[19:12:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:12:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:12:13] *** Joins: wroathe (~wroathe@user/wroathe)
[19:12:17] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:19:51] *** Quits: revolve (~u0_a227@82-132-237-16.dab.02.net) (Read error: Connection reset by peer)
[19:21:45] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:28:37] *** Quits: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:30:04] <stenno> magga: just adding them to the url string like Svitkona suggested is just fine, if you need to further abstract it, you can also check out URLSearchParams
[19:32:28] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:32:43] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:33:38] <stenno> n> (new URLSearchParams({date: '2022-01-21', dep: 'it', other: 'white space'}).toString()
[19:33:41] <jellobot> (fail) SyntaxError: Unexpected end of input
[19:33:50] <stenno> n> (new URLSearchParams({date: '2022-01-21', dep: 'it', other: 'white space'})).toString()
[19:33:51] <jellobot> (okay) 'date=2022-01-21&dep=it&other=white+space'
[19:35:09] <magga> cool! alright... hmm now i need to do something with the response. its .json() response. how can i put it into an array f.ex?
[19:35:35] <stenno> .json() just returns a promise, so you can just continue your .then chain
[19:36:18] <stenno> i like using await here
[19:36:23] <magga> alright. im not that familiar with js, but im guessing it got a way to handle a bad response aswell
[19:36:34] <stenno> yes, .catch
[19:36:37] <stenno> well
[19:36:40] <stenno> define 'bad response'
[19:36:59] <stenno> a status code of 4xx or 5xx is still considered 'good'
[19:37:19] <stenno> you can check the status code of the response directly, or check the .ok attribute of the response
[19:37:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[19:37:48] <stenno> have you seen https://developer.mozilla.org/en-US/docs/Web/API/Response/json ?
[19:38:05] *** Joins: Naan (~naan@user/naan)
[19:38:15] <magga> https://bpa.st/RGIA
[19:38:18] <magga> this is what i have so far :)
[19:38:26] <magga> no but im gonna check it out now
[19:38:31] <stenno> also https://developer.mozilla.org/en-US/docs/Web/API/Response/ok
[19:39:11] <magga> oooh so i do like this: response.json().then(data => {
[19:39:32] <stenno> yes, that is the .then chaining i mentioned earlier
[19:39:48] <stenno> fetch(...).then(response => response.json()).then(data ...)
[19:41:27] <magga> ok =)
[19:43:17] *** Quits: kakashiA1 (~kakashi@p4fde1f43.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:47:08] *** Joins: kakashiA1 (~kakashi@p5dd8dfdb.dip0.t-ipconnect.de)
[19:47:41] *** Quits: Ducki_ (~ducki@p200300f39f0da4009efaf8dee1fa3982.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[19:48:53] *** Joins: Rockwood (~Rocky@user/rocky)
[19:53:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:54:38] *** Joins: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net)
[19:54:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:57:04] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:5152:d22:91d7:e9f9)
[19:57:57] *** Joins: snedd (~snedd@86.14.114.137)
[19:58:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:59:43] *** Joins: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl)
[20:00:43] <minnow> should i extract /regex/ to outer scope so it gets reused over function invocations?
[20:02:06] <Rockwood> means?????
[20:05:43] <stenno> minnow: DRY
[20:06:26] <minnow> Rockwood: functions fun(s) { return /^$/.test(s); }
[20:07:06] <minnow> does it make sense to move regex literal to outer scope as variable?
[20:07:21] <stenno> minnow: DRY
[20:07:25] <stenno> https://en.wikipedia.org/wiki/Don%27t_repeat_yourself
[20:07:33] <minnow> nothing to do with that
[20:07:49] <stenno> of course
[20:07:52] <minnow> i'm not repeating myself here
[20:07:55] <Rockwood> minnow, as per my view don't expect like this
[20:07:56] <stenno> specify the regexp once
[20:08:03] <stenno> or specify it every time
[20:08:14] <stenno> so if you specify it once in the outer scope, you do not repeat yourself
[20:08:21] <Rockwood> stenno, o/
[20:08:25] <stenno> if you specify it once for every function, you repeat yourself
[20:08:33] <stenno> how is that unrelated to DRY?
[20:08:36] <stenno> hi Rockwood
[20:09:59] <minnow> fun(i) { return i + 1; }
[20:10:01] <minnow> i wouldn't move number literal but i should move regex?
[20:10:12] <minnow> stenno: is the above DRY violation too?
[20:10:23] <minnow> i'm repeating 1 on every invocation
[20:10:46] <stenno> you are talking about function _calls_ ?
[20:10:53] <stenno> then it really doesn't matter
[20:11:10] <minnow> stenno: yes
[20:11:11] *** Quits: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net) (Ping timeout: 245 seconds)
[20:11:19] <stenno> it doesn't matter
[20:11:26] <stenno> its fine as a literal
[20:11:58] *** Quits: kakashiA1 (~kakashi@p5dd8dfdb.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:12:01] <minnow> ok good
[20:14:54] <stenno> its a question of your own preference really, in cases like those i sometimes like to be more explicit
[20:15:04] <silly> isn't this a question regarding performance with regex creation?
[20:15:09] <stenno> hopefully not
[20:15:21] <minnow> silly: yes it is
[20:15:26] <stenno> oh..
[20:15:36] <minnow> P E R F O R M A N C E
[20:15:40] <stenno> for performance reasons, it really makes 0 difference
[20:15:47] <minnow> good
[20:15:48] <silly> >0
[20:15:55] <stenno> even if it made 0.000001% difference, it will be microoptimization
[20:15:57] <silly> yet not much
[20:17:05] <stenno> just consider maintainability, not performance
[20:17:37] <silly> and absolutely neglectible unless you call the function a million times in a row
[20:19:18] <minnow> i mean literals might as well be created only once during function compilation
[20:19:19] <pulse> i always consider performance first
[20:19:34] <pulse> perf > all in my book
[20:19:41] <minnow> then there is literally zero difference
[20:19:45] <stenno> pulse: do you write your code in assembler then?
[20:20:04] <pulse> stenno, no. i said i consider it, i don't go into extremes trying to implement the most optimal solution
[20:20:09] *** Quits: syg_ (~syg@flamebot.net) (Quit: ZNC - https://znc.in)
[20:20:19] <silly> minnow, i don't think v8 optimizes it out
[20:20:23] <stenno> pulse: i am amazed that you know how the JS interpreter works in detail under the hood
[20:20:37] <pulse> stenno, i just have to know how benchmark two functions, lol
[20:20:38] *** Joins: syg_ (~syg@flamebot.net)
[20:20:43] <pulse> how to*
[20:20:53] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:21:08] <stenno> so you write two functions and then test which is faster, and you pick the faster one, regardless of how difficult it is to maintain?
[20:21:18] <stenno> what do your team member say to this?
[20:21:28] <stenno> they must hate you for writing the worst code
[20:21:33] <pulse> they say thank you pulse for blessing us with your superior products
[20:21:40] <stenno> lmao
[20:21:44] <pulse> :)
[20:21:58] <minnow> lol
[20:22:13] <minnow> does js have function compositon built in? const fun3 = fun2.compose(fun1)
[20:22:17] <stenno> well i guess you just pray that you don't have to touch your code every again?
[20:22:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:22:30] <stenno> minnow: function are first class members of the language, so yes
[20:22:51] <pulse> maintainability is important but perf is more important
[20:22:53] <stenno> and you also pray that the engine itself doesn't change? and do you consider all sorts of engines or just one?
[20:22:57] <stenno> no, not at all
[20:23:10] <pulse> and the reason why is because maintainability is programmer facing while perf is user facing. and users are arguably more important
[20:23:20] <minnow> but is there an operator to compose them?
[20:23:46] <stenno> there is no composition operator
[20:23:51] <silly> not yet?
[20:23:53] <stenno> not like >>=
[20:24:04] <stenno> well .pipeline or w/e its called is still stage 1 i am sure
[20:24:07] <stenno> or even stage 0
[20:24:08] <minnow> I mean either operator or method
[20:24:11] <stenno> i don't think it will come at all
[20:24:27] <minnow> anything i don't need to write myself
[20:24:31] <stenno> there is .bind
[20:24:36] <silly> https://github.com/tc39/proposal-pipeline-operator
[20:24:39] <stenno> which is related to it, but not
[20:24:50] <stenno> oho stage 2
[20:25:37] <silly> since 5 months
[20:25:37] <stenno> pulse: i would really like to see your dev process, do you have a github?
[20:25:41] <stenno> silly: interesting
[20:25:44] <stenno> well that would be epic
[20:26:02] <ljharb> Perf is the least important thing
[20:26:16] <ljharb> It’s easy to speed up clean code, but it’s hard to clean up fast code. Always err on the side of clean over fast.
[20:26:52] <ljharb> if perf was the most important thing then we’d be using c in the browser.
[20:27:59] <pulse> stenno, https://github.com/pulzed
[20:28:14] <pulse> haven't really been active on it lately
[20:28:46] *** Quits: syg (sid521913@id-521913.lymington.irccloud.com) ()
[20:28:54] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:30:08] <silly> games, of course. it's just not all games for everybody
[20:32:03] <minnow> stenno: i think it's not possible to compose two functions with .bind()
[20:32:24] <stenno> minnow: no, not with .bind
[20:32:29] <stenno> .bind is for partial application
[20:32:33] <minnow> yeah
[20:32:44] <silly> !compose @minnow
[20:32:44] <jellobot> minnow, (...fns) => (x) => fns.reduceRight((v, f) => f(v), x)
[20:32:47] <stenno> but writing a compose function is trivial
[20:32:49] <stenno> yes, like that
[20:33:09] <stenno> wow now i am lowkey hyped for |> again
[20:33:17] <minnow> jellobot: damn i need to think this through
[20:33:30] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:33:39] <stenno> b> parseInt(?,10) |> ['1','2','3'].map
[20:33:39] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:19)
[20:33:48] <stenno> ? :(
[20:33:53] <stenno> something liek that
[20:34:42] <minnow> wait these pipes are already shipped somewhere?
[20:34:58] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:02] <stenno> minnow: there are babel plugins for it
[20:35:13] <minnow> ah ok
[20:35:22] <stenno> minnow: but as the specification has not been finalized, there is not really a reason to do it
[20:35:38] <stenno> or rather, its dangerous doing it as the behaviour might still change in the future and then your program will break
[20:35:54] *** Joins: CoolerY (~CoolerX@user/coolerx)
[20:36:54] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[20:37:53] *** Joins: kilitary (~kilitary@188.242.187.4)
[20:37:57] <stenno> b> parseInt(?,10) |> ::['1','2','3'].map
[20:37:58] <jellobot> An async internal error occured: Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once. (1:19)
[20:38:02] <stenno> ok, this used to work
[20:38:10] <silly> b> parseInt(?,10) |> ['1','2','3'].map(%)
[20:38:10] <jellobot> (okay) [ 1, 2, 3 ]
[20:38:12] <stenno> well! seems like stuff has changed since i tried it last time :P
[20:38:15] <stenno> ooh
[20:38:20] <stenno> right, the '%' is new
[20:38:22] *** Joins: kakashiA1 (~kakashi@p5dd8dc15.dip0.t-ipconnect.de)
[20:38:25] <stenno> new-ish
[20:38:29] <silly> it's configurable
[20:38:54] *** Joins: Memory (~user_name@user/memory)
[20:39:23] *** Joins: dmanto (~dmanto@181.110.128.9)
[20:39:47] <silly> https://babeljs.io/blog/2021/07/26/7.15.0#hack-style-pipeline-operator-support-13191httpsgithubcombabelbabelpull13191-13416httpsgithubcombabelbabelpull13416
[20:39:51] <silly> oh the nice link
[20:40:12] <silly> see topicToken: '#'
[20:40:12] <stenno> :D
[20:40:18] <stenno> righ
[20:40:20] <stenno> t
[20:40:21] <silly> somebody must have made that % in jellobot
[20:40:21] *** Joins: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net)
[20:40:57] <stenno> qswz is mostly concerned with b i think
[20:41:17] <silly> https://github.com/ljharb/jellobot/blob/main/src/plugins/js-eval/babelPlugins.js#L47
[20:41:41] <stenno> caub is qswz
[20:41:43] <silly> lol yes, it was him
[20:41:45] <stenno> oh wait
[20:41:56] <stenno> is qswz caub but rot13
[20:42:03] <stenno> did i figure out the secret of his name
[20:42:08] <silly> it's caub
[20:42:12] <silly> dunno rot13
[20:42:20] <stenno> you don't know rot13?
[20:42:22] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[20:42:26] <minnow> ok this (...fns) => (x) => fns.reduceRight((v, f) => f(v), x) is very neat
[20:42:27] <stenno> the most secure cipher in the world?
[20:42:32] <silly> that's some ohho oic!
[20:42:35] <minnow> they should add it to function prototype
[20:42:38] <stenno> silly: https://en.wikipedia.org/wiki/ROT13
[20:42:43] <silly> ya lol
[20:42:44] <minnow> no need for operators
[20:43:04] <stenno> but caub is pnho in rot13
[20:43:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:43:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:43:08] *** Joins: wroathe (~wroathe@user/wroathe)
[20:43:09] <stenno> probably another rotn
[20:43:18] <silly> i always thought it was letter soup
[20:43:29] <stenno> i thought so too
[20:43:54] <stenno> q s behaves like a c
[20:44:08] <stenno> no, doesn't add up
[20:44:14] <stenno> must be a xkcd thing
[20:44:22] <Rockwood> ??
[20:44:22] <silly> did somebody say soup?
[20:44:27] <stenno> like a google-unique letter soup
[20:44:42] <silly> yumm, off to kitchen
[20:46:39] *** Joins: crashrep (~crashrep@user/crashrep)
[20:48:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[20:48:17] <minnow> is it better to put compose into variable or define it as function? const compose = (...fns) => ...    vs   function compose(...fns) { ... }
[20:48:28] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[20:48:56] <minnow> i often wonder about such things
[20:50:24] <pulse> both are ok
[20:51:37] <minnow> i know haha got to pick one
[20:51:59] <stenno> i always use the variable variant
[20:52:39] <stenno> keep in mind that an arrow function => behaves different to a `function` function
[20:52:39] <minnow> but functions give better stack traces cause they have named attached to them
[20:52:52] <stenno> with regards to `this` scoping
[20:53:02] <minnow> yep
[20:54:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:55:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:55:41] <stenno> with that in mind, i don't see a reason to use the `function` function as i like lexical scoping
[20:55:45] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[20:57:02] *** Joins: crashrep (~crashrep@user/crashrep)
[20:57:19] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:57:43] <minnow> the only downside i see in this case is that lambda has no name by itself
[20:57:44] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:58:15] *** Quits: thojanssens (~thojansse@49.230.238.187) (Read error: Connection reset by peer)
[20:58:20] <stenno> n> const foo = () => 23; foo.name
[20:58:21] <jellobot> (okay) 'foo'
[20:58:43] <stenno> it does though :)
[20:58:58] <minnow> it's name of variable not of lambda
[20:59:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:59:28] <minnow> lambda is still anonymous
[20:59:50] <minnow> i may be wrong
[21:00:02] <stenno> b> const bla = 23; bla.name
[21:00:03] <jellobot> (okay) undefined
[21:00:06] <stenno> n> const bla = 23; bla.name
[21:00:07] <jellobot> (okay) undefined
[21:00:09] <stenno> nope
[21:00:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:00:19] <stenno> its a function still after
[21:00:21] <stenno> all
[21:01:06] <minnow>  n> const foo = () => 23; const bar = foo; bar.name
[21:01:12] <em> Does the eloquent javascript text use modern javascript notation and introduce the ideas of promises?
[21:01:17] <pulse> n> const foo = () => 23; typeof foo
[21:01:18] <jellobot> (okay) 'function'
[21:01:40] <em> Has it become best practice/common practice to use promises in javascript instead of manually writing the callbacks now?
[21:01:51] <minnow> how do I run jellobot?
[21:02:05] <pulse> em, some people say so, but i think of them as an optional extra
[21:02:09] <stenno> minnow: like that but without the whitespace
[21:02:11] <em> See my thing is that I keep trying to learn javascript, but there's usually like 5 years between each new try.
[21:02:13] <stenno> em: yes, definetely
[21:02:30] <em> Every time I come back to try again it's changed quite a bit. Not complaining.
[21:02:37] <stenno> em: callback hell is one of the reasons .then chaining was introduced
[21:02:53] <em> Yeah I think I might like .then if I can figure it out.
[21:02:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:02:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:02:54] *** Joins: wroathe (~wroathe@user/wroathe)
[21:02:58] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[21:03:03] <minnow> n>2+2
[21:03:04] <jellobot> (okay) 4
[21:03:08] <em> Was wondering if that eloquent text teache that.
[21:03:09] <minnow> ahh
[21:03:12] <stenno> you will find that its much much more comfortable to program with, and to organie your flow
[21:03:13] <em> !books
[21:03:13] <jellobot> em, !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
[21:03:19] <minnow>  n>const foo = () => 23; const bar = foo; bar.name
[21:03:24] *** Joins: fef (~thedawn@user/thedawn)
[21:03:33] <stenno> minnow: i mean without the starting whitespace
[21:03:36] <minnow> n> const foo = () => 23; const bar = foo; bar.name
[21:03:37] <jellobot> (okay) 'foo'
[21:03:46] <stenno> yep
[21:03:48] <minnow> got it
[21:04:06] <silly> ?>
[21:04:06] <jellobot> n> node stable, b> babel, s> node vm.Script, m> node vm.SourceTextModule, e> engine262
[21:04:19] <minnow> stenno: some compiler magic
[21:06:11] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[21:08:19] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:7017:3923:8f17:8be8) (Quit: Textual IRC Client: www.textualapp.com)
[21:12:05] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[21:16:07] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:18:41] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:19:05] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[21:23:22] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:23:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:29:09] <magga> does javascript dates have some formatting to string method?
[21:29:33] <magga> in vanilla ^
[21:30:06] <stenno> check out Intl.DateTimeFormat
[21:30:16] <magga> aight thnx
[21:30:21] <stenno> there will be Temporal in the future
[21:30:39] <qswz> !mdn Intl.DateTimeFormat
[21:30:40] <stenno> if you want to do funky stuff, you might have to rely on a 3rd-party library like date-fns
[21:30:40] <jellobot> qswz, Intl.DateTimeFormat object enables language-sensitive date and time formatting. https://mdn.io/Intl.DateTimeFormat
[21:32:42] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[21:33:50] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[21:34:09] *** Joins: salad (~cucumber@82.76.150.118)
[21:34:13] <silly> so, moment has had its time?
[21:34:24] <stenno> haHAA
[21:34:34] <silly> hamen
[21:34:41] <qswz> it's outdated
[21:35:01] <qswz> archived, but still working so
[21:35:10] <silly> oh! oic
[21:35:14] <silly> didn't know that
[21:35:26] <qswz> we use it in our company, and no gonna change anytime soon
[21:36:23] <silly> "It is not dead, but it is indeed done."
[21:36:42] *** Joins: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net)
[21:36:55] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Client Quit)
[21:36:57] <stenno> its 'complete'
[21:37:00] <stenno> i guess?
[21:37:11] <qswz> level: complete
[21:37:12] <silly> https://momentjs.com/docs/#/-project-status/
[21:37:17] <qswz> they beat the game
[21:37:30] <stenno> beat the ecmasports
[21:37:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:37:40] <silly> Recently, Chrome Dev Tools started showing recommendations for replacing Moment for the size alone. We generally support this move.
[21:37:41] <silly> uh
[21:38:05] <stenno> We now generally consider Moment to be a legacy project in maintenance mode. It is not dead, but it is indeed done.
[21:38:26] <em> Is there anything that will or has replaced it?
[21:38:32] <stenno> em: i like date-fns
[21:38:54] <silly> em, https://momentjs.com/docs/#/-project-status/recommendations/
[21:39:26] <em> ty
[21:39:34] <stenno> temporal doesn't even address formatting, does it?
[21:39:53] <em> Is there a name for the part of software development that is not about using the languagae or writing the code?
[21:40:33] <silly> it would make sense to leave formatting to Intl.
[21:40:49] <stenno> right
[21:40:56] <silly> but little do i know
[21:41:11] *** Joins: MassDebates_ (~MassDebat@2600:1700:1184:4510:bd90:cb25:ef9:96da)
[21:42:14] <em> is there a word that distinguishes "coding" as the part that is literally writing lines of code, from the part that is like package management and installing dependencies and figuring out how some framework works
[21:42:44] <em> The non-coding part of software development feels like the biggest barrier to entry. I'm not aiming to be a professional either, I just want to make things, but it's quite tricky to get started with the non-coding part. It's the least intuitive and most tangled up ad-hoc part.
[21:43:06] <silly> project setup?
[21:43:22] <em> I actually think this non-coding part has easily become the hardest part of getting started. Some language should try optimizing for the ease of this non-coding part.
[21:43:55] <Alexendoo> The ecosystem you could call it
[21:43:56] <silly> this is why a bazillion boilerplates popped up everywhere
[21:44:08] <em> ecosystem seems like a good one
[21:44:54] *** Quits: MassDebates (~MassDebat@193.27.13.56) (Ping timeout: 256 seconds)
[21:45:03] <silly> oh i've learned a fun number, it's the "millinillion"
[21:45:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:45:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:45:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:45:13] *** Joins: wroathe (~wroathe@user/wroathe)
[21:45:19] <pulse> `devops` if you want a buzzword
[21:45:41] <em> 8/10 it's the ecosystem, how to bootstrap the ecosystem, and how to interact with the ecosystem that is confusing.
[21:46:12] <silly> 10^3003 aka Thousand quingentillion or Quingentilliard
[21:46:15] <Alexendoo> There certainly are languages that make that simpler
[21:46:22] <pulse> like C++
[21:46:23] <silly> that's how many js boilerplates are out there
[21:46:27] <Alexendoo> JS is decidedly not one of them
[21:47:19] <silly> once you got everything setup, you mostly focus on js
[21:48:05] <stenno> milli vanilli million
[21:48:37] <pulse> the main problem with JS is its ambiguity. any style works
[21:48:48] <stenno> pulse: please stop FUDing
[21:49:02] <pulse> stenno, i'm sharing my opinion, i'd hardly call that a FUD
[21:49:23] <pulse> i forgot, you can't have opinions on this channel ;)
[21:49:32] <stenno> you claimed before that there is no difference between 'function foo (...)' and 'const foo = () => ...'
[21:49:34] <stenno> which is wrong
[21:49:42] <pulse> no, i claimed it doesn't matter which you pick
[21:49:45] *** Joins: hseg (~hseg@195.192.229.23)
[21:49:47] <stenno> yes, same thing
[21:50:03] <pulse> in the same way a banana and an orange is the same thing
[21:50:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:50:40] <stenno> then can you elaborate on the 'ambiguity' of javascript
[21:50:53] <qswz> yea agreed, there are always 2,3 or 4 ways to do a thing in JS
[21:51:15] <qswz> that's why eslint is there
[21:51:23] <hseg> Hi. I'm debugging a bit of JS code, and for some reason passing the output of Array.map() to a function sets its elements to undefined?
[21:51:35] <hseg> specifically, have a call plotPie(plot.data.map(p => { name = p.label, y = p.value, color = p.color }));
[21:51:41] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[21:51:45] *** Quits: taupiqueur (~taupiqueu@212.106.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[21:51:55] <stenno> i don't know a language where that isn't the case
[21:52:05] *** Joins: pulse (~pulse@user/pulse)
[21:52:09] <stenno> in C, i can write x = x+1 or x += 1 or x++
[21:52:15] <stenno> C is so ambigous
[21:52:18] <silly> hseg ()=> ({}) vs () => {}
[21:52:20] <qswz> hseg: missing return value
[21:52:30] <pulse> stenno, yes. first off, it's not meant as an attack on the language. but it's my observation that JS allows an infinite amount of styles, a lot of which can be considered `valid`. this creates problems when multiple developers interact in some way, because then you get a clash of styles. repeat a few cycles and you get messy code. it's hard (not impossible) to maintain a clean JS codebase over a long period of time. it's much easier with more `traditional`
[21:52:31] <hseg> what?
[21:52:35] <pulse> languages. again, this is my _opinion_. i do not state it as fact
[21:52:46] <silly> you're not returning an object
[21:52:52] <stenno> pulse: can you tell me a language where that isn't the case
[21:52:54] <qswz> n> [1, 2].map(n => ({n])
[21:52:55] <jellobot> (fail) SyntaxError: Unexpected token ']'
[21:52:55] <silly> if you thought you did...
[21:53:00] <qswz> n> [1, 2].map(n => ({n}))
[21:53:01] <jellobot> (okay) [ { n: 1 }, { n: 2 } ]
[21:53:05] <qswz> n> [1, 2].map(n => {n})
[21:53:06] <jellobot> (okay) [ undefined, undefined ]
[21:53:08] <stenno> pulse: you will have that issue with _any_ collaborative programming project
[21:53:09] <pulse> stenno, C and C++, again, in my opinion
[21:53:20] <stenno> pulse: in C, i can write x = x+1 or x += 1 or x++
[21:53:21] <pulse> yes, but it's less of a problem
[21:53:27] <qswz> n> [1, 2].map(n => {return {n}})
[21:53:28] <jellobot> (okay) [ { n: 1 }, { n: 2 } ]
[21:53:36] <pulse> stenno, that's not what i mean. that's too narrow. i mean in the vaster, architectural state
[21:53:37] <stenno> why would it be less of a problem?
[21:53:43] <pulse> i mean the conversation above was about a billion boilerplates
[21:53:53] <pulse> stenno, well for one, C and C++ are much more rigid
[21:54:05] <qswz> boil her plates
[21:54:10] <pulse> well, i don't claim you can't make weird C code either
[21:54:14] <pulse> you certainly can
[21:54:22] <stenno> pulse: no, you can do terrible, terrible things in C
[21:54:25] <stenno> its not rigid at all
[21:54:26] <hseg> oh wait. is this because js is parsing .map(x => {e}) as a block whose only statement is e?
[21:54:37] <pulse> stenno, you can do extremely terrible things in JS
[21:54:42] <pulse> especially wrt. architecture
[21:54:44] <silly> hseg, yes
[21:54:45] <hseg> and not as an anonymous object whose field is e?
[21:54:48] <stenno> you can do much worse things in C, trust me
[21:55:00] <silly> if you want to return an object, wrap it in ()
[21:55:07] <stenno> with the right C program, i can put your computer in flames
[21:55:10] <hseg> wat. ok, thanks
[21:55:22] <pulse> with the right JS codebase, i can make you throw your monitor out of the window ;)
[21:55:30] <APic> What seems worse or better is very highly subjective and individually different
[21:55:40] <pulse> i just find it easier to reason about _most_ C code
[21:55:43] <stenno> C is the mother of all footguns
[21:55:46] <pulse> maybe my brain is wired that way
[21:55:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:56:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:56:23] <pulse> architecturally, C feels more stable to me. for whatever reason
[21:56:56] <qswz> https://www.reddit.com/r/trippinthroughtime/comments/sfpdcb/history_be_interesting/
[21:57:33] <stenno> i am so annoyed by reddit recently
[21:58:13] <qswz> reddit, the network of rednecks
[21:59:08] <silly> rofl "As predicted by Nostrildamus"
[21:59:18] <stenno> if it was rednecks, i could just hate them unconditionally
[21:59:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[21:59:28] <qswz> It tickles a bit good sir.
[22:00:00] <pulse> i find reddit is good if you stick to a few specific and niche subreddits
[22:00:00] <stenno> thank god that i am currently done with all the vaccinations and boosters for the next few months
[22:00:20] <qswz> is /r/javascript any good?
[22:00:22] <stenno> pulse: i basically just use reddit for a regional subreddit, and for a subreddit related to a game i play
[22:00:34] <stenno> so yeah, agreed
[22:00:36] <pulse> i mostly just browse r/vintagecomputing/
[22:00:46] <pulse> and /r/pixelart
[22:00:51] <qswz> https://www.reddit.com/r/javascript/comments/sfoai3/nodejs_will_include_support_for_fetch_in_their/
[22:00:55] <qswz> ow!
[22:01:04] <qswz> great
[22:01:23] <stenno> Thank god! Maybe now the skies will part and we'll finally get comments in package.json
[22:01:26] <stenno> err
[22:01:31] <stenno> thats not how json works
[22:01:32] <qswz> I remember people saying it will never happen
[22:01:44] <qswz> Jason doesn't work
[22:01:48] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[22:01:50] <qswz> he's long unemployed
[22:01:58] <stenno> i like how node  _seems_ to me more open to adapt web stuff
[22:02:11] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:02:14] <stenno> first isomorph streams built-in, now fetch
[22:02:16] <stenno> good stuff
[22:02:43] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[22:02:48] <qswz> what doesisomorhic means for streams?
[22:02:57] *** Joins: kilitary (~kilitary@188.242.187.4)
[22:03:01] <qswz> you can compose them and stuf?
[22:03:07] <qswz> like an algebra?
[22:03:07] <stenno> talking about https://nodejs.org/api/webstreams.html
[22:03:16] <qswz> yea I know
[22:03:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[22:03:29] <qswz> they don't mention "isomorphic"
[22:03:34] <stenno> i mean that they work the same in node as they work in the browser, with the same syntax
[22:03:36] <Alexendoo> isomorphic as in the definition used by that fetch library, as in works on web and node
[22:03:46] <Alexendoo> It's an odd one
[22:03:48] <qswz> I prefer saying "universal"
[22:03:50] <qswz> for this
[22:04:01] <stenno> yes, i took the term from 'isomorphic-fetch'
[22:04:09] <stenno> might not be the best word for it
[22:04:27] <qswz> https://www.npmjs.com/package/universal-fetch :p
[22:05:26] <qswz> let's add --experimental-fetch in jellobot
[22:05:35] <qswz> you can still fetch data-uris for example
[22:05:39] <stenno> the fetch stuff was really neccessary imo, glad they did it after all
[22:05:44] <qswz> without making net reqs
[22:05:54] <Alexendoo> Yeah that's a nice addition
[22:06:10] <qswz> crowd always win
[22:07:35] <qswz> https://www.reddit.com/r/javascript/comments/seuvzr/chrome_99_will_ship_with_the_htmlinputelement/
[22:08:41] <BSaboia> What is the opposite of assert.ok()? assert.fail() does not seems to do what I want, and it is deprecated. I want to assert that an item is not included on an array, so that foo.includes('bar); fails
[22:08:52] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Read error: Connection reset by peer)
[22:08:54] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[22:09:01] *** Joins: zebrag (~chris@user/zebrag)
[22:10:28] <Alexendoo> The native date/time pickers do kinda suck
[22:10:49] <qswz> BSaboia: assert.ok(!value) ?
[22:11:12] <stenno> i hate the native input types
[22:11:15] <qswz> sually I include a message: assert.ok(!value, 'should not ...')
[22:11:21] <stenno> still just only using text
[22:11:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:12:01] <BSaboia> qswz, alright, that is what I also did :) thanks. I thought it was weird
[22:12:14] <stenno> you cannot override their style and they will look and behave(!) different depending on browser engine
[22:13:27] <qswz> Alexendoo: yea agreed
[22:14:53] <qswz> using react-dates or react-datepicker usually
[22:15:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:15:17] <silly> no react-olives and react-olivepickers?
[22:15:22] <Alexendoo> I'd be fine with differing styles/behaviour if the style or behaviour were good
[22:15:25] <qswz> for colors, I'd like to make it show both the colorpicer and the hex value as input text
[22:15:34] <qswz> let me try to fiddle it
[22:16:07] <qswz> well, I'll make it in ract in our app
[22:16:12] <silly> old firefox used a system default color chooser app
[22:16:13] <qswz> react
[22:16:23] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[22:16:24] <silly> now all the builtin tools are real shit
[22:16:25] <stenno> get ract
[22:16:35] <Alexendoo> silly: Current firefox seems to still do that on windows
[22:16:36] <qswz> rekt.js
[22:16:44] <stenno> get bounding client rekt
[22:16:46] <qswz> !npm reakt
[22:16:47] <jellobot> qswz, npm.im/reakt 0.0.5|2013-04-01|A tool for observing file trees and acting on changes
[22:17:34] <qswz> let's play npm golf, given a word find a package name whose description contain this word
[22:17:46] <silly> Alexendoo, wow
[22:18:06] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[22:18:07] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Quit: Bridge terminating on SIGTERM)
[22:18:08] *** Quits: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4) (Quit: Bridge terminating on SIGTERM)
[22:18:09] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Quit: Bridge terminating on SIGTERM)
[22:18:09] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Quit: Bridge terminating on SIGTERM)
[22:18:10] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Bridge terminating on SIGTERM)
[22:18:11] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Bridge terminating on SIGTERM)
[22:18:12] *** Quits: Deide (~deide@user/deide) (Quit: Bridge terminating on SIGTERM)
[22:18:21] <stenno> gotta love matrix
[22:18:38] <stenno> whole of matrix got k-lined yesterday
[22:18:54] <silly> lol what happened?
[22:18:54] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[22:18:58] <stenno> no clue
[22:19:07] <pulse> now all we need is a trillion discord users with [d] in their nicks
[22:19:16] <silly> yea!
[22:19:22] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[22:19:24] <stenno> there is just trouble with matrix
[22:19:31] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:19:32] <silly> and slack bridges with [s]
[22:19:33] <stenno> stuff like that happens quite often
[22:19:34] <Alexendoo> The windows colour picker is fairly well featured though at least
[22:20:20] <silly> Alexendoo, have you tried the one in chrome?
[22:20:36] <Alexendoo> Yeah
[22:20:59] <silly> i don't understand why they do this
[22:21:02] <qswz> guys, if you have a Macintosh, can you tell me which shortcut work? https://jsfiddle.net/o5edak09/
[22:21:55] <qswz> I think meta is uncommon
[22:22:04] <stenno> meta and ctrl
[22:22:04] <qswz> but does Mac have an altkey?
[22:22:10] <qswz> ok thanks!
[22:22:17] <stenno> they have an 'option' key which is technically 'alt'
[22:22:24] <qswz> I'll need to use ctrlso
[22:22:25] <stenno> but pressing it wont trigger 'alt'
[22:22:30] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[22:22:38] <qswz> ok interesting, thanks
[22:22:39] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[22:22:51] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[22:22:52] *** Joins: nicoty (~nicoty@user/nicoty)
[22:22:52] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[22:22:52] *** Joins: kadoban (~kadoban@user/kadoban)
[22:22:52] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[22:23:04] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[22:23:04] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[22:23:06] <qswz> the native ctrl + s on webpage is pretty usemess anyway
[22:23:12] <qswz> who ever save html pages
[22:23:13] <stenno> indeed
[22:23:16] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[22:23:16] *** Joins: Deide (~deide@user/deide)
[22:23:16] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[22:23:17] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[22:23:17] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[22:23:17] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[22:23:17] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:23:26] <stenno> is that why jsfiddle hijacks is
[22:23:28] <stenno> it
[22:23:29] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[22:23:29] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[22:23:42] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[22:23:44] <stenno> er wait
[22:23:53] <qswz> yea they do
[22:23:56] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[22:23:59] <stenno> yes
[22:24:02] <qswz> most editors do
[22:24:09] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[22:24:22] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[22:24:22] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[22:25:43] <qswz> https://hacks.mozilla.org/2022/01/contributing-to-mdn-meet-the-contributors/ here are the heroes
[22:26:41] <qswz> would it be better if mdn as on github, for edits?
[22:26:52] <qswz> like most docs sites do
[22:26:59] <qswz> was*
[22:27:03] <Alexendoo> It migrated to github
[22:27:31] <qswz> Oh! TIL
[22:27:39] <qswz> haha, got the idea in parallel
[22:27:50] <Dorward> https://github.com/mdn/content
[22:28:10] <Alexendoo> In some ways a shame, it's a bit more effort required if you see something that could do with changing
[22:28:49] <qswz> well, depends
[22:29:17] <Dorward> Alexendoo: There's an exit link at the bottom of each page which goes direct to the github editor so you can make the change and create a pull request.
[22:29:22] <Dorward> s/exit/edit/
[22:30:39] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7d8e:cf48:737f:ec3) (Read error: Connection reset by peer)
[22:30:46] <Alexendoo> Yeah, I'm aware of it
[22:31:17] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:32:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23)
[22:32:58] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:33:41] <qswz> what'sannoying are typo edits
[22:33:52] <qswz> changing a signle fucking char, but well
[22:34:50] <qswz> also I still thinkthey shouldn't worry about translating, only English matters
[22:35:29] <qswz> there's google translate for others who can't make the effort to learn english, which is quite mandatory anyway
[22:35:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:36:43] <qswz> https://developer.mozilla.org/en-US/docs/MDN/Contribute/Localize#active_locales
[22:37:11] <qswz> brave but loss of timeimo
[22:37:27] <qswz> anyway
[22:37:52] <qswz> let me do my ColorInput
[22:38:48] *** Parts: mnx (marian@user/mnx) (Bye!)
[22:39:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[22:42:55] <em> !books
[22:42:55] <jellobot> em, !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
[22:45:05] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:22] *** Joins: nomic (~nomic@185.192.69.3)
[22:46:24] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[22:46:36] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:290f:ab25:5e6c:bbab)
[22:46:38] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[22:46:40] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[22:46:57] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:5564:f68e:22ca:9091) (Ping timeout: 240 seconds)
[22:47:03] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[22:47:10] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Client limit exceeded: 20000)
[22:47:14] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[22:47:17] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Client limit exceeded: 20000)
[22:47:20] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Client limit exceeded: 20000)
[22:47:35] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[22:47:47] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[22:47:48] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:48:23] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Quit: Client limit exceeded: 20000)
[22:48:29] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:48:58] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[22:50:02] *** Quits: Deide (~deide@user/deide) (Quit: Client limit exceeded: 20000)
[22:50:17] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Client limit exceeded: 20000)
[22:53:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Client limit exceeded: 20000)
[22:53:16] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Client limit exceeded: 20000)
[22:53:32] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (Quit: Client limit exceeded: 20000)
[22:55:08] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Client limit exceeded: 20000)
[22:55:29] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Quit: Client limit exceeded: 20000)
[22:55:31] <qswz> reactjs site have amazing docs
[22:55:47] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[22:55:47] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[22:55:54] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Quit: Client limit exceeded: 20000)
[22:55:59] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[22:55:59] *** Joins: nicoty (~nicoty@user/nicoty)
[22:55:59] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[22:55:59] *** Joins: kadoban (~kadoban@user/kadoban)
[22:55:59] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[22:56:05] *** Joins: N4buc0 (~N4buc0@191.250.117.129)
[22:56:13] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[22:56:13] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[22:56:13] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Quit: Client limit exceeded: 20000)
[22:56:15] *** Joins: adsc (~adsc@2a02:1206:4524:8a30:ae00:812c:7de7:2ce0)
[22:56:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:56:25] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[22:56:45] *** Joins: Deide (~deide@user/deide)
[22:56:46] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[22:56:46] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[22:56:46] *** Quits: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (Quit: Client limit exceeded: 20000)
[22:56:46] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[22:56:46] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[22:56:46] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:56:59] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[22:57:00] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[22:57:13] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[22:57:13] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[22:57:16] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (Quit: Client limit exceeded: 20000)
[22:58:06] <qswz> I love emotion because you can fist suickly use inline react styles first
[22:58:11] <magga> anyone know why this string: "2022-02-01 00:00:00" is not able to call Date() on in Safari??
[22:58:22] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[22:58:22] <qswz> then you move them in a styled.div({ .. })
[22:58:32] <magga> it says "invalid date"
[22:58:34] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:58:44] <magga> when i call .toDateString() on it after trying to parse it
[22:58:56] *** Quits: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4) (Quit: Client limit exceeded: 20000)
[22:58:57] <qswz> magga: try 2022-02-01T00:00:00
[22:59:00] <magga> but works perfectly fine in my desktop chrome browser
[22:59:06] <qswz> n> new Date('2022-02-01 00:00:00')
[22:59:07] <jellobot> (okay) 2022-02-01T00:00:00.000Z
[22:59:15] <qswz> n> new Date('2022-02-01T00:00:00Z')
[22:59:16] <jellobot> (okay) 2022-02-01T00:00:00.000Z
[22:59:19] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[22:59:27] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Quit: Client limit exceeded: 20000)
[22:59:28] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[22:59:32] <qswz> a T and/or Z
[22:59:39] <magga> n> new Date('2022-02-01 00:00:00')
[22:59:40] <jellobot> (okay) 2022-02-01T00:00:00.000Z
[22:59:50] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:59:53] *** Joins: edk (edk@libera/staff/edk)
[22:59:54] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[22:59:57] <magga> hmm ok is it something special for safari?
[23:00:01] <Dorward> A string representing a simplification of the ISO 8601 calendar date extended format. (Other formats may be used, but results are implementation-dependent.) — https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse (the format you are using falls into "Other formats" and the Safari implementation doesn't support it.
[23:00:09] <qswz> yea it sucks
[23:00:21] <magga> alright:)
[23:00:41] <magga> I guess I can just insert a T to my string
[23:01:36] <paulcarroty> weeeel, I'd like to ecape this blessing for small projects
[23:01:53] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[23:01:56] <Maxdamantus> Where did the string come from in the first place? Why is it not already in 8601 format?
[23:02:54] <magga> its coming from the backend
[23:03:09] <magga> im gonna try change it to the 8601 format
[23:03:31] <Maxdamantus> Make sure it's got a timezone too (preferably Z)
[23:03:53] <magga> Maxdamantus: ok
[23:04:25] <magga> how would a prefect format in a Date look like?
[23:04:28] <magga> without the time
[23:04:45] <magga> or must Date() in JS have both date and time?
[23:05:05] <Maxdamantus> Date() in JS is for representing precise moments in time.
[23:05:22] <Maxdamantus> those moments are not on a particular date, since the date depends on the timezone.
[23:06:14] <magga> i see
[23:06:20] <Maxdamantus> eg, right now for me is 2022-01-31, but I suspect for you it's 2022-01-30. Same `Date()` value.
[23:08:07] <magga> alright thanks :) i got it to work with making my backend send it in isoformat
[23:08:31] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:08:54] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:08:54] <magga> now if i want it to be formatted into a nice string with the dayname and stuff im guessing i have to use a third party package like moment.js? or is it possible with vanilla js
[23:10:39] <Maxdamantus> You can use `Date` for that, but you'll need to map names of the days/months yourself.
[23:11:24] <Maxdamantus> n> ["sun", "mon", "tue", "wed", "thu", "fri", "sat"][new Date().getDay()];
[23:11:24] <jellobot> (okay) 'sun'
[23:11:51] <stenno> n> new Date('--01-30')
[23:11:51] <jellobot> (okay) 2001-01-30T00:00:00.000Z
[23:11:56] <stenno> :|
[23:12:45] <stenno> its a valid iso8601  date though
[23:13:46] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[23:15:09] <magga> thnx i got it like i wanted now :D
[23:15:13] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:18:03] <paulcarroty> @ljharb perf matters
[23:21:34] <magga> Maxdamantus: so im guessing i can do something similar with getMonth() ?
[23:21:58] <magga> what is that ["sun", "mon.... line called anyways?
[23:22:03] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:22:36] <stenno> paulcarroty: perf matters when it becomes a problem. perf before maintainance is the wrong approach
[23:22:50] <stenno> that would be premature optimization
[23:23:27] <stenno> also this sounds as if you cannot write performant code while also writing maintainable code, which is not true
[23:26:11] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:290f:ab25:5e6c:bbab) (Ping timeout: 245 seconds)
[23:26:50] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[23:27:29] <ljharb> paulcarroty: of course it does. It just matters least.
[23:29:24] *** Joins: paule32 (~paul@nat-91-137-26-21.net.encoline.de)
[23:29:24] *** Quits: paule32 (~paul@nat-91-137-26-21.net.encoline.de) (Changing host)
[23:29:24] *** Joins: paule32 (~paul@user/paule32)
[23:31:35] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:34:35] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:36:23] *** Joins: trevors (~trevors@user/trevors)
[23:36:58] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[23:37:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dc05:bb5d:f69a:4dd1) (Ping timeout: 250 seconds)
[23:37:34] *** Quits: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420) (Ping timeout: 260 seconds)
[23:38:23] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[23:38:51] <paulcarroty> @stenno performance is a business/promo advantage, even without being a problem. you can write perf+maintainable code, for sure.
[23:40:29] <qswz> n> new Date('2022-01-30T00:00:00+96:00
[23:40:30] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[23:40:34] <qswz> n> new Date('2022-01-30T00:00:00+96:00')
[23:40:34] <jellobot> (okay) Invalid Date
[23:40:52] <qswz> n> new Date('2022-01-30T00:00:00+23:00')
[23:40:53] <jellobot> (okay) 2022-01-29T01:00:00.000Z
[23:40:57] *** Quits: trevors (~trevors@user/trevors) (Ping timeout: 250 seconds)
[23:41:15] <qswz> what's stypid is it doesn't accept timezone names
[23:41:24] <qswz> forDSTs
[23:41:44] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:43:12] *** Joins: hseg (~hseg@195.192.229.23)
[23:45:03] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:64b2:4d59:ced9:7c72)
[23:45:10] *** Joins: Betal (~Betal@user/betal)
[23:45:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:45:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:46:35] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 252 seconds)
[23:47:25] <magga> whats the method to clear all child from a div? atm i just use modalBody.textContent = '' to clear all text
[23:47:43] <magga> they are Textnodes btw
[23:53:48] *** Joins: trevors (~trevors@user/trevors)
[23:56:47] *** Quits: trevors (~trevors@user/trevors) (Client Quit)
[23:56:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:58:49] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[23:59:07] *** Joins: onosendi (~onosendi@user/onosendi)
[23:59:16] *** Joins: vysn (~vysn@user/vysn)
