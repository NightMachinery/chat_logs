[00:06:51] *** Joins: xq (~xq@user/xq)
[00:09:17] *** Joins: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it)
[00:14:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:38:55] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:51:15] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[00:51:32] *** Quits: teut (~teut@182.68.254.204) (Quit: Client closed)
[01:11:19] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[01:30:39] *** Quits: Inline (~Inline@aftr-37-201-240-100.unity-media.net) (Quit: Leaving)
[01:33:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[01:50:40] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 264 seconds)
[02:19:46] *** Joins: markong (~kvirc@213.146.188.203)
[03:18:10] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:22:03] *** Quits: Trollmann (~Trollmann@user/trollmann) (Ping timeout: 265 seconds)
[03:23:56] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Quit: WeeChat 3.0)
[03:24:10] *** Joins: davidlowryduda (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[03:24:24] *** davidlowryduda is now known as dld
[03:25:56] <dld> is it possible to examine std::cin's status bits in gdb?
[03:26:30] <dld> doing something like `call std::cin.good()` doesn't work, due to what I think is some sort of name mangling thing that happens with cin
[03:29:05] *** Quits: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it) (Quit: The_Jag)
[03:30:03] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (*.net *.split)
[03:30:03] *** Quits: AmR (~AmREiSa@156.199.223.24) (*.net *.split)
[03:30:03] *** Quits: gehn (~gehn@user/gehn) (*.net *.split)
[03:30:03] *** Quits: undeclared (nullx@user/undeclared) (*.net *.split)
[03:30:03] *** Quits: meicceli (meicceli@kapsi.fi) (*.net *.split)
[03:30:03] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[03:30:40] *** Joins: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51)
[03:30:53] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:31:36] *** Joins: meicceli (meicceli@kapsi.fi)
[03:32:14] *** Joins: Colt (~Colt@user/colt)
[03:33:29] *** Joins: AmR (~AmREiSa@156.199.223.24)
[03:33:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:42:13] *** Joins: Trollmann (~Trollmann@user/trollmann)
[03:53:02] *** Quits: Trollmann (~Trollmann@user/trollmann) (Ping timeout: 252 seconds)
[04:01:22] *** Joins: Trollmann (~Trollmann@user/trollmann)
[04:33:50] *** Joins: ferdna (~ferdna@user/ferdna)
[04:35:21] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[04:39:24] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[05:18:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:58:51] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[08:42:52] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[09:46:32] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[09:47:50] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:48:14] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[10:01:47] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:17:21] <osse> This is perhaps more a stylistic question. If you include a generated file (e.g. messages.pb.h) would you use <> or "" ? It's not right next to the hand-written sources (at least not in my case), but it's not exactly 3rd party either like qt or boost or std
[10:29:33] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Ping timeout: 256 seconds)
[10:30:17] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[10:30:24] *** Quits: hsv1 (~weechat@gateway/tor-sasl/hsv-2) (Remote host closed the connection)
[10:30:46] *** Joins: hsv1 (~weechat@gateway/tor-sasl/hsv-2)
[11:37:54] *** Joins: DSpider (~DSpider@82.79.237.48)
[11:53:43] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[12:42:49] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:43:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:52:16] <LangerJan> osse: It doesnt matter if it's a generated file. Use "" if you want to locate the file you want to include relatively to the current file. Use <> if you provide an include path externally to your compiler.
[12:55:26] <LangerJan> osse: Is it a header used by different projects and not tightly coupled to your project? Use <>
[13:05:25] *** Joins: The_Jag (~The_Jag@host-79-36-38-58.retail.telecomitalia.it)
[13:10:54] <osse> LangerJan: ok, then I will use <>
[13:20:57] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[13:23:46] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:38:45] <vdamewood> osse: For what it's worth, the convention I use is that I use <> for 'public' headers, and "" for 'private' ones.
[13:39:30] <vdamewood> So, for example, if I'm writing a library, I use <> for the headers that would be used by consumers of my library, and "" for the ones that aren't.
[13:42:54] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:56:32] <osse> vdamewood: that makes sense to me
[13:56:43] <osse> In my particular case it is a generated but not public header
[13:57:04] <vdamewood> osse: Right, and to me 'not public' is all that would matter to make the choice.
[14:08:22] *** Joins: louiz (~louiz@2001:bc8:38e7::)
[14:23:39] *** Joins: RazielZ (~Raziel@user/raziel)
[14:24:26] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 252 seconds)
[14:46:59] *** Quits: DSpider (~DSpider@82.79.237.48) (Quit: Leaving)
[15:08:11] <zoraj> hi there, compile error occurs at line 6 *error: unexpected namespace name 'Activity': expected expression* here is the code https://pastebin.com/tEeEEP3Y
[15:08:38] <zoraj> Activity is a struct defined in another file
[15:08:47] <zoraj> what should I do to avoid this ?
[15:10:19] <zoraj> I could rename Cache::Activity but if I could find another solution than this, would be cool
[15:12:20] *** Joins: markong (~kvirc@213.146.188.203)
[15:15:05] *** Quits: RazielZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[15:22:31] *** Joins: Raziel (~Raziel@user/raziel)
[15:56:33] *** Parts: louipc (~louipc@archlinux/fellow/louipc) (bye)
[16:58:07] *** Joins: gehn (~gehn@user/gehn)
[17:56:44] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[18:04:51] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:05:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[18:30:31] <Alipha> zoraj: is the struct at the global scope? ::Activity
[18:32:28] <Alipha> If the struct is also `Cache::Activity` then no, you can't have `Cache::Activity` be both a struct and namespace
[18:37:07] *** Joins: meator (~meator@user/meator)
[18:57:13] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[19:00:21] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[19:45:59] *** Joins: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi)
[19:46:31] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[19:52:12] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:37:10] *** Joins: seninha (~seninha@user/seninha)
[20:56:35] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[21:28:06] *** Joins: Inline (~Inline@aftr-37-201-240-100.unity-media.net)
[21:53:07] *** Joins: Guest1723 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:25:16] *** Quits: Guest1723 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[22:36:30] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:44:56] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 252 seconds)
[23:02:10] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:07:50] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[23:13:35] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:23:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[23:29:01] *** Quits: noarb- (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:33:58] *** Joins: RoKenn (~RoKenn@2001:a61:34f1:ae01:2807:3426:69c5:be03)
[23:33:58] *** Quits: RoKenn (~RoKenn@2001:a61:34f1:ae01:2807:3426:69c5:be03) (Changing host)
[23:33:58] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:34:53] <uzer1> is there cppquiz.org equivalent for c++ current draft or c++20?
[23:35:40] <uzer1> or does the quiz still hold for c++20+?
[23:36:04] <uzer1> I'm asking since it explicitly begins each question with "according to the c++17 standard"
[23:37:35] *** Joins: CaCode (~CaCode@user/cacode)
[23:38:59] <CaCode> Calling std::cout << std::endl; will cause os.put(os.widen('\n')) followed by os.flush(). Why does it need the flush? what would happen if the flush would always omitted?
[23:42:04] *** Quits: hsv1 (~weechat@gateway/tor-sasl/hsv-2) (Remote host closed the connection)
[23:42:24] *** Joins: hsv1 (~weechat@gateway/tor-sasl/hsv-2)
[23:42:42] <Alipha> PJBoy: ^
[23:43:45] <PJBoy> well if you're outputting to a terminal, then buffering is decided by that
[23:44:01] <PJBoy> by default on most terminals that's line buffering, so you get flushes on newline output
[23:44:23] <CaCode> PJBoy, I see, so It is redundant anyways in most cases?
[23:44:24] <PJBoy> if you're outputting to a file then usually there's no flush other than when your in-memory buffer gets full
[23:44:52] <PJBoy> it's redundant in most cases yeah
[23:45:03] <CaCode> thanks for enlightening me!
[23:45:03] <PJBoy> but it only tends to hurt file write performance
[23:45:15] <PJBoy> which is also the only time you'd really ever want to flush
[23:45:19] <PJBoy> so
[23:45:38] <PJBoy> my advice is to not flush until you find a good reason to
[23:46:06] <PJBoy> and if you do find a good reason to, I think using std::flush is better than std::endl for its explicitness
[23:46:53] <CaCode> so i just use std::ios::sync_with_stdio(false) and then use "\n"
[23:47:03] <PJBoy> fyi you can control the buffering of your terminal IO on linux with the `stdbuf` command
[23:47:18] <PJBoy> yeah
[23:47:34] <CaCode> oh i thanks very informative!
[23:47:42] <Alipha> PJBoy: so, thought just now: if the terminal determines line buffering, how is the terminal able to affect what's held in the std::streambuf buffer? once std::cin actually writes the data to stdout, then yes, i could see that the stdin file handler could handle determining when to write to the terminal... but what about the buffer inside std::cin's streambuf?
[23:47:49] <CaCode> ^ oh i had no idea
[23:50:38] <PJBoy> streambuf is stupidly complex
[23:50:55] <PJBoy> the details are probably in one of the several weirdly named output functions
[23:51:05] <PJBoy> just taking a peek at them now
[23:51:47] <PJBoy> but yeah that's a good question
[23:52:15] <PJBoy> stdbuf docs say they hook into glibc
[23:52:26] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[23:52:34] <PJBoy> so there's some direct interaction between the terminal and the C library itself
[23:54:41] *** Joins: RoKenn (~RoKenn@2001:a61:34f1:ae01:b00e:aab0:7c65:ffa0)
[23:54:41] *** Quits: RoKenn (~RoKenn@2001:a61:34f1:ae01:b00e:aab0:7c65:ffa0) (Changing host)
[23:54:41] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:55:54] <PJBoy> this glibc source code would indicate that there's special handling for line buffering https://chromium.googlesource.com/chromiumos/third_party/glibc/+/cvs/libc-970720/stdio/fwrite.c
[23:57:10] <PJBoy> `!default_func` means some non-line buffered non-default buffered setup is used
[23:57:31] <PJBoy> and that's as far as I care to investigate
[23:58:06] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:f1ed:6887:90f:533)
