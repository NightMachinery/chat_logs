[00:07:26] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:07:26] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[00:09:07] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[00:12:53] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:12:59] *** Joins: tejr_ (~tejr@user/tejr)
[00:31:49] *** Joins: monkey_ (~user@181.114.17.106)
[00:59:08] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:59:23] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[01:09:45] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[01:24:26] *** tejr_ is now known as tejr
[01:35:50] *** Quits: sena_kun (~koto@94.142.239.45) (Ping timeout: 252 seconds)
[02:29:12] *** Quits: monkey_ (~user@181.114.17.106) (Read error: Connection reset by peer)
[03:29:12] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:29:12] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:30:37] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:30:49] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:32:58] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:19:35] *** Quits: lichtkind (~lichtkind@p200300d0a704f069919f89f8f9a33f0a.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[04:22:59] *** Quits: oodani (~oodani@00dani.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:23:37] *** Joins: oodani (~oodani@00dani.me)
[04:25:48] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[05:13:40] *** Joins: frost (~frost@59.71.243.104)
[05:14:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:14:21] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:14:21] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:19:01] *** Quits: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com) (Ping timeout: 265 seconds)
[06:21:49] *** Joins: [Coke] (~coke@cpe-104-228-9-26.nycap.res.rr.com)
[06:52:41] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[07:04:05] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[07:15:50] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[07:17:18] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[07:30:00] *** Quits: holyghost (~holyghost@109.136.39.83) (Quit:  bbl)
[08:30:00] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:30:00] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:00] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:30:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:30:26] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:30:41] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:30:58] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[08:31:26] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:31:33] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:31:44] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:31:48] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:32:15] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:32:47] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[08:49:07] *** Quits: stoned75 (~seb@78.203.129.116) (Ping timeout: 252 seconds)
[08:49:16] <tonyo> codesections: that seems fine to me .. it's not re-binding 'nope' and 'yep'.  it's rebinding something currently pointing at 'yep' to 'nope'.
[09:05:48] *** Quits: codesections (~codesecti@codesections.com) (Quit: Ping timeout (120 seconds))
[09:06:10] *** Joins: codesections (~codesecti@codesections.com)
[09:28:25] *** Joins: ufobat_ (~martin@dynamic-095-114-044-173.95.114.pool.telefonica.de)
[09:31:08] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:31:11] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:35:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:36:05] <moritz_> but aren't function params supposed to be ready-only by default?
[09:36:59] <moritz_> putting an "Any" in front should not change that
[09:39:49] <moon-child> m: sub f(Any $x) { $x := 5 }; f my $x = 6; say $x
[09:39:49] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´6‚ê§¬ª
[09:40:15] <moon-child> I do not understand why Any changes things, though
[09:44:57] <moritz_> it shouldn't, and that's a bug
[10:30:19] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[10:30:42] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[10:32:39] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[10:43:34] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:54:03] *** Joins: sena_kun (~koto@94.142.239.45)
[11:16:49] *** Joins: lichtkind (~lichtkind@p200300d0a704f065919f89f8f9a33f0a.dip0.t-ipconnect.de)
[11:27:15] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 268 seconds)
[11:30:43] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[11:31:07] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[11:37:18] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[11:46:25] <MasterDuke> committable6: releases sub f(Any $x) { $x := 5 }; f my $x = 6; say $x
[11:46:46] <committable6> MasterDuke, ¬¶releases (58 commits): ¬´6‚ê§¬ª
[11:47:10] <MasterDuke> committable6: releases sub f($x) { $x := 5 }; f my $x = 6; say $x
[11:47:31] <committable6> MasterDuke, ¬¶releases (58 commits): ¬´04===SORRY!04=== Error while compiling /tmp/Bdk9j60ANy‚ê§Cannot use bind operator with this left-hand side‚ê§at /tmp/Bdk9j60ANy:1‚ê§------> 03sub f($x) { $x := 5 08‚èè04}; f my $x = 6; say $x‚ê§ ¬´exit code = 1¬ª¬ª
[11:55:35] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[12:01:52] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:02:07] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[12:30:31] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[12:34:04] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Ping timeout: 252 seconds)
[12:36:16] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[13:31:16] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[14:31:16] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:31:16] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:32:50] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:09:02] *** Joins: TheAthlete (~TheAthlet@176.96.230.74)
[15:25:41] *** Joins: Guest28 (~Guest28@c-71-58-227-202.hsd1.pa.comcast.net)
[15:28:05] *** Parts: Guest28 (~Guest28@c-71-58-227-202.hsd1.pa.comcast.net) ()
[15:32:56] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:33:22] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:41:38] *** Joins: whatnext (~whatnext@212.250.5.220)
[15:42:30] <whatnext> hello all - quick question about classes and required attributes
[15:45:26] <whatnext> in the docs for the "required" trait here: https://docs.raku.org/language/typesystem#trait_is_required it seems to include `submethod BUILD` and pass `$attr` to `$!attr` - I am guessing this is in order to prevent the error message "attr is required but not provided"
[15:47:08] <whatnext> however, this seems a bit ugly (e.g. when compared to Moose). If there are 10 required params then this needs to be done with all 10 (?) Is there a way to avoid having to include that `BUILD` method?
[15:47:49] <whatnext> (ie and still pick up the required param from the input)
[15:48:15] <whatnext> ?
[15:48:57] *** Quits: TheAthlete (~TheAthlet@176.96.230.74) (Quit: Connection closed)
[15:49:13] <lizmat> why do you need BUILD?
[15:53:09] <tbrowder> yep, that looks like a bad example
[15:53:20] <whatnext> to be honest I don't know that I do
[15:54:26] <whatnext> I assumed I could just pass the param in `.new( attr => $attr )` without needing BUILD, but that seems to produce the error "attr required but not provided"
[15:54:37] <whatnext> possibly I have something else wrong
[15:56:19] <MasterDuke> m: class A { has $.b is required }; say A.new(b=>3)
[15:56:19] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´A.new(b => 3)‚ê§¬ª
[15:56:31] <MasterDuke> m: class A { has $.b is required }; say A.new(b=>3).b
[15:56:31] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´3‚ê§¬ª
[15:57:05] <Geth> ¬¶ doc: 0a01431977 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/typesystem.pod6
[15:57:05] <Geth> ¬¶ doc: Update typesystem.pod6
[15:57:05] <Geth> ¬¶ doc: 
[15:57:05] <Geth> ¬¶ doc: BUILD not required in that example.
[15:57:05] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/0a01431977
[15:57:08] <linkable6> Link: https://docs.raku.org/language/typesystem
[15:59:11] <whatnext> wait I think I got it - I need to define it as `$.attr` not `$!attr`
[16:01:05] <lizmat> m: class A { has $.a is required }; A.new
[16:01:05] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´The attribute '$!a' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:01:19] <lizmat> m: class A { has $.a is required }; dd A.new(a => 42)
[16:01:20] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´A.new(a => 42)‚ê§¬ª
[16:01:42] <lizmat> whatnext ^^  must be something else?
[16:02:01] <lizmat> oops, should backlog before writing :-)
[16:02:43] <whatnext> yes I think you would need `BUILD` if you want to keep the attribute private
[16:02:48] <tbrowder> m: class A { has $!a is required}; A.new
[16:02:49] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´The attribute '$!a' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:03:01] <whatnext> ok its a relief that this isn't needed! Thanks
[16:03:49] <MasterDuke> m: class A { has $!b is required }; say A.new(b=>3)
[16:03:49] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´The attribute '$!b' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:05:18] <lizmat> also, if you want an attribute to not be specifiable with .new, but you want it to have an accessor
[16:05:33] <lizmat> you can use "is built(False)"
[16:05:34] <MasterDuke> tbrowder: your commit was correct, since the example given used `$.attr`, but it might be good to add an example with `$!attr` and show that it errors unless you have the BUILD
[16:05:55] <lizmat> m: class A { has $.a is built(False) = 42 }; dd A.new.a
[16:05:56] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´42‚ê§¬ª
[16:06:05] <lizmat> m: class A { has $.a is built(False) = 42 }; dd A.new(a => 666).a
[16:06:05] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´42‚ê§¬ª
[16:06:15] <tbrowder> good point (but TWEAK instead...)
[16:06:36] <codesections> and `is built` is doc'ed at https://docs.raku.org/type/Attribute#index-entry-trait_is_built_(Attribute)-trait_is_built
[16:06:49] <lizmat> vice-versa, if you want something to be specifiable but *not* have an accessor:
[16:07:20] <lizmat> m: class A { has $!a is built = 42; method b() { $!a } }; dd A.new(a => 666).b
[16:07:21] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´666‚ê§¬ª
[16:07:38] <MasterDuke> tbrowder: no, it has to be BUILD, TWEAK is too late
[16:08:53] <tbrowder> are you sure?
[16:10:12] <MasterDuke> m: class A { has $!b is required; submethod TWEAK(:$b) { $!b = $b } }; say A.new(b=>3)
[16:10:12] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´The attribute '$!b' is required, but you did not provide a value for it.‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[16:10:25] <MasterDuke> m: class A { has $!b is required; submethod BUILD(:$b) { $!b = $b } }; say A.new(b=>3)
[16:10:25] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´A.new‚ê§¬ª
[16:10:34] *** Joins: marmayr (~marmayr@193-154-203-202.adsl.highway.telekom.at)
[16:12:40] *** Parts: marmayr (~marmayr@193-154-203-202.adsl.highway.telekom.at) (Leaving)
[16:24:38] *** Quits: whatnext (~whatnext@212.250.5.220) (Ping timeout: 265 seconds)
[16:32:11] <tbrowder> ok  :-)
[16:34:00] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:35:24] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[16:41:04] *** Quits: eseyman (~manu@lfbn-idf1-1-2271-214.w92-151.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[16:49:34] <Geth> ¬¶ doc: fe13e801de | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/typesystem.pod6
[16:49:34] <Geth> ¬¶ doc: Update typesystem.pod6
[16:49:34] <Geth> ¬¶ doc: 
[16:49:34] <Geth> ¬¶ doc: Add an example with a private attribute.
[16:49:34] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/fe13e801de
[16:49:37] <linkable6> Link: https://docs.raku.org/language/typesystem
[16:54:55] <tbrowder> not finished yet...
[16:58:14] <[Coke]> I wonder if we should disallow doc edits through the web. :|
[16:58:31] <Geth> ¬¶ doc: 7c6e458d51 | Coke++ | doc/Language/typesystem.pod6
[16:58:31] <Geth> ¬¶ doc: class keyword is case sensitive; missing }
[16:58:31] <Geth> ¬¶ doc: 
[16:58:31] <Geth> ¬¶ doc: whitespace cleanup
[16:58:31] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/7c6e458d51
[16:58:34] <linkable6> Link: https://docs.raku.org/language/typesystem
[17:00:01] <tbrowder> [Coke]: i agree with that! it's too inviting or shooting from the hip
[17:00:08] <tbrowder> *for
[17:02:24] <MasterDuke> can you make web edits be allowed, but only mergeable via PR?
[17:03:24] <[Coke]> We could encourage it, not sure if we could enforce it.
[17:04:27] <[Coke]> Eh. probably more interesting to consider switching to a regular release schedule on docs (so that edits aren't immediately pushed out)
[17:04:46] <[Coke]> (maybe on the same schedule as the release of the software)
[17:25:34] <codesections> I make doc edits through the web UI.  I'm happy to stop, but that'd probably mean I'm less inclined to make minor fixes
[17:25:56] <codesections> (I do usually open a PR, though)
[17:30:29] <codesections> re: a docs release schedule, I thought nothing is currently pushed out automatically ‚Äì that it all waited on JJ to cut a release.  Did that change?
[17:34:35] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[17:35:27] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[17:54:36] <tbrowder> no complaint here, i *usually* do the same (see PR to fix my mess shortly)
[17:55:27] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:55:52] <Geth> ¬¶ doc: tbrowder++ created pull request #3967: Clarify effect of 'is required' on a private attribute
[17:55:52] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/pull/3967
[17:59:26] <tbrowder> i think it would help to add a following note about using a BUILD in either case would quell the error even though the user does not enter an explicit value with new.
[18:01:45] <tbrowder> m: class A { has $.a is required; submethod BUILD(:$a) { $!a = $a } }; A.new
[18:01:46] <camelia> rakudo-moar ba15173fd: ( no output )
[18:09:35] *** Joins: whatnext (~whatnext@212.250.5.220)
[18:10:32] <whatnext> next question :)  : why would I get "Cannot look up attributes in a My::Class type object" ?
[18:11:36] <MasterDuke> you need an instance of the class
[18:12:35] <MasterDuke> m: class A { has $.a = 4 }; say A.new.a; say A.a
[18:12:36] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´4‚ê§Cannot look up attributes in a A type object‚ê§  in method a at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:12:58] <Altreus> whatnext: this confused me for ages. It's a "type object" of My::Class, not a My::Class-type object
[18:13:21] <codesections> m: my Rat $r = 1/3; say $r.denominator 
[18:13:22] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´3‚ê§¬ª
[18:13:31] <MasterDuke> i wonder why that error doesn't suggest 'are you missing a .new?'? which error does that...?
[18:13:37] <codesections> m: say Rat.denominator 
[18:13:38] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´Cannot look up attributes in a Rat type object‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:16:19] <whatnext> hm... that would make sense, though I can't seem to make it fit with my situation
[18:18:10] <MasterDuke> m: class A { has $.a = 4; method foo(A:D:) { say "hi" } }; A.new.foo; A.foo
[18:18:10] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´hi‚ê§Invocant of method 'foo' must be an object instance of type 'A', not a‚ê§type object of type 'A'.  Did you forget a '.new'?‚ê§  in method foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:18:21] <MasterDuke> ^^^ that's what i was thinking of
[18:22:43] <whatnext> I think I do have an instance of the class. I am trying to access e.g. `self.filename` from within a `load` method in an instance of the class
[18:24:16] <whatnext> hm.. it's a good clue though, thanks :)
[18:24:43] <codesections> you need to use $!filename to access an attribute from inside the class
[18:29:46] <whatnext> I was wondering about that - so `self.filename` is not a good idea?
[18:32:31] <Altreus> m: class A { has $.a = 4; method foo { say self.a } }; A.new.foo
[18:32:31] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´4‚ê§¬ª
[18:32:38] <Altreus> shrug
[18:32:42] <Altreus> m: class A { has $!a = 4; method foo { say self.a } }; A.new.\foo
[18:32:42] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Malformed postfix call‚ê§at <tmp>:1‚ê§------> 3= 4; method foo { say self.a } }; A.new.7‚èè5\foo‚ê§¬ª
[18:33:07] <Altreus> pardon me I'm sure
[18:34:01] <codesections> self.a (or $.a) call the `a` public method on A.  Which works when there _is_ an `a` public method (including an auto-generated one)
[18:34:15] <codesections> and when A has been fully built
[18:36:11] <Altreus> m: class A { has $!a = 4; };
[18:36:12] <camelia> rakudo-moar ba15173fd: ( no output )
[18:36:19] <Altreus> ok it was probably that \ I put in by accident
[18:36:23] <Altreus> m: class A { has $!a = 4; method}; A.new.foo
[18:36:23] <camelia> rakudo-moar ba15173fd: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing block‚ê§at <tmp>:1‚ê§------> 3class A { has $!a = 4; method7‚èè5}; A.new.foo‚ê§¬ª
[18:36:33] <Altreus> ?? where did my method body go
[18:36:38] <Altreus> stupid IRC client
[18:36:42] <Altreus> anyway
[18:49:45] *** Joins: holyghost (~holyghost@109.136.39.83)
[18:55:46] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[19:00:52] <whatnext> ok thanks for the clarification :)
[19:24:26] *** Quits: whatnext (~whatnext@212.250.5.220) (Quit: Connection closed)
[19:32:08] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Write error: Connection reset by peer)
[19:32:09] *** Quits: juanfra (~juanfra@user/juanfra) (Read error: Connection reset by peer)
[19:32:13] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Write error: Connection reset by peer)
[19:32:13] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Read error: Connection reset by peer)
[19:32:13] *** Quits: cnx (~cnx@2001:470:69fc:105::61f) (Remote host closed the connection)
[19:32:15] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[19:34:29] *** Joins: juanfra (~juanfra@user/juanfra)
[19:55:24] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[19:55:24] *** Joins: cnx (~cnx@2001:470:69fc:105::61f)
[19:55:24] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[19:55:24] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[19:55:37] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[20:06:20] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 246 seconds)
[20:06:32] *** Joins: Altai-man (~koto@94.142.239.45)
[20:07:03] *** Quits: Altai-man (~koto@94.142.239.45) (Client Quit)
[20:41:43] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[21:01:03] <holyghost> hi Xliff
[21:14:28] <Xliff> \o
[21:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:35:14] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:35:57] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:12:18] * [Coke] chuckles at https://github.com/rottytooth/rot8000
[22:29:36] <holyghost> lol, elvish rot13
[22:35:57] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:35:57] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:36:14] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:34:23] *** Joins: stoned75 (~seb@78.203.129.116)
[23:44:56] <[Coke]> codesections: in https://www.codesections.com/blog/raku-lisp-impression/ (nice article!) you say IFFE when I think you mean IIFE.
