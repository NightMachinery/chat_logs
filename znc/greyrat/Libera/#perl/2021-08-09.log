[00:00:32] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 245 seconds)
[00:02:59] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[00:04:35] *** Joins: diskin (~diskin@109.165.42.115)
[00:04:39] *** Quits: riceandbeans (~zach@user/riceandbeans) (Quit: leaving)
[00:06:39] *** Joins: riceandbeans (~zach@dev07.raasta.org)
[00:06:40] *** Quits: riceandbeans (~zach@dev07.raasta.org) (Changing host)
[00:06:40] *** Joins: riceandbeans (~zach@user/riceandbeans)
[00:09:17] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[00:16:53] * GumbyPAN CPAN Upload: Mojo-DOM-Role-Restrict-0.03 by LNATION https://metacpan.org/release/LNATION/Mojo-DOM-Role-Restrict-0.03
[00:21:01] *** Joins: krismatrix (~krismatri@38.80.149.51)
[00:24:19] <krismatrix> I have some trouble with modules and the use of require vs use. What do I do, if I just want to create main.pl and vars.pl, but I import vars.pl in main.pl and get the variables in vars.pl. 
[00:24:34] <krismatrix> I guess I am thinking of somethign equivalent to pythons from module import var1
[00:26:54] * GumbyPAN CPAN Upload: Text-Tabs+Wrap-2021.0808-TRIAL by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Text-Tabs+Wrap-2021.0808-TRIAL
[00:27:18] <LeoNerd> importing variables is (nearly) always a terrible idea. Provide accessor functions for them intead
[00:27:59] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[00:28:04] <krismatrix> I am not creating any complex program. They are independent and throw away programs.
[00:28:17] <krismatrix> But I agree with you advice in general.
[00:31:41] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[00:31:51] *** Quits: mattil (~mattilinn@87-92-149-13.rev.dnainternet.fi) (Quit: Leaving)
[00:32:11] <krismatrix> i guess there isn't an easy or proper way then.
[00:32:22] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[00:41:11] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 265 seconds)
[00:43:59] <djerius> perlbot: Exporter
[00:43:59] <perlbot> djerius: Exporter - make subroutines (or other symbols) available in "use"ing modules: package Foo; use strict; use warnings; use Exporter 'import'; our @EXPORT_OK = qw(bar baz quux);
[00:44:40] <djerius> perlbot: perldoc Exporter
[00:44:40] <perlbot> djerius: Your documentation is available at: https://perldoc.perl.org/Exporter
[00:44:53] <djerius> krismatrix: ^^
[00:45:59] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Remote host closed the connection)
[00:46:12] <LeoNerd> they already left
[00:47:42] <djerius> ah well.
[00:49:03] *** Quits: magla (~gelignite@55d4cb3d.access.ecotel.net) (Quit: Stay safe!)
[00:50:35] *** Quits: EGD (~egd@user/egd) ()
[00:58:09] <Grinnz> ye olde "it's just a throwaway program, so i thought doing terrible things would be fine"
[01:11:54] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[01:12:43] *** Quits: vosj (~jeff@38.135.10.53) (Quit: leaving)
[01:13:18] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[01:17:02] *** Walex_away is now known as Walex
[01:32:01] * GumbyPAN CPAN Upload: URI-Fast-0.50_01 by JEFFOBER https://metacpan.org/release/JEFFOBER/URI-Fast-0.50_01
[01:46:22] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 245 seconds)
[01:52:03] * GumbyPAN CPAN Upload: PDL-2.056 by ETJ https://metacpan.org/release/ETJ/PDL-2.056
[01:53:11] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[01:54:48] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[01:57:17] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[02:02:22] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[02:14:13] *** Joins: celphi (uid97751@user/celphi)
[02:21:30] *** Joins: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com)
[02:43:15] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:46:16] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[02:46:47] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:49:56] *** Quits: Ovid_ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Quit: Leaving...)
[03:04:11] *** Joins: whynot (~whynot@37.73.84.76)
[03:13:30] *** Quits: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:14:15] *** Joins: treefrob (~robx@p57a9648f.dip0.t-ipconnect.de)
[03:27:30] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[03:32:14] * GumbyPAN CPAN Upload: Object-Pad-0.50 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.50
[03:47:16] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Final-0.03 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Final-0.03
[03:47:16] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-LazyInit-0.02 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-LazyInit-0.02
[03:47:21] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Trigger-0.04 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Trigger-0.04
[03:52:16] * GumbyPAN CPAN Upload: Object-Pad-ClassAttr-Struct-0.01 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-ClassAttr-Struct-0.01
[03:52:53] <LeoNerd> I think that'll do for one day :)
[03:55:13] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 244 seconds)
[03:56:17] *** Joins: tejr (~tejr@user/tejr)
[03:57:12] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 245 seconds)
[03:59:20] <ether> my goodness
[04:01:16] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[04:01:19] <xenu> https://news.ycombinator.com/item?id=28110610
[04:01:20] <Paperbot> Link title(s): [ Official Elasticsearch Python library no longer works with open-source forks | Hacker News ]
[04:01:23] <xenu> not surprising but still sad
[04:01:31] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 250 seconds)
[04:03:24] *** Joins: jeffv90 (~igloo@38.135.10.53)
[04:03:31] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[04:03:49] <Grinnz> elasticsearch on the "make people choose amazon for opensource" speedrun
[04:05:42] *** Quits: jeffv90 (~igloo@38.135.10.53) (Client Quit)
[04:05:58] *** Joins: jeffv90 (~igloo@38.135.10.53)
[04:06:38] *** Quits: jeffv90 (~igloo@38.135.10.53) (Client Quit)
[04:13:23] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[04:22:33] *** starz is now known as starz-
[04:22:45] *** starz- is now known as starz
[04:26:29] *** Quits: rozie (~rozie@2001:15e8:110:2913:1:1:1:2) (Ping timeout: 252 seconds)
[04:26:45] <clscott> LeoNerd: Object::Pad::ClassAttr::Struct looks like what python and Kotlin call "data classes"
[04:30:18] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:32:09] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[04:33:02] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[04:34:47] *** Quits: locrian9 (~mike@cpe-104-173-20-162.socal.res.rr.com) (Quit: leaving)
[04:38:43] <LeoNerd> clscott: and C calls struct and Pascal calls Record and ... There's many names for it
[04:39:24] <ilmari> and LeoNerd calls dumb ;)
[05:26:06] *** Quits: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[05:34:30] *** Joins: jess (~jess@libera/staff/jess)
[05:37:35] *** Joins: rozie (~rozie@2001:15e8:110:2913:1:1:1:2)
[06:02:33] *** Joins: Su-Shee (~Susanne@p4ff492ce.dip0.t-ipconnect.de)
[06:05:32] *** Quits: Su-Shee_ (~Susanne@p4ffc77c1.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:13:43] *** Joins: gast0n (~g4570n@user/gast0n)
[06:16:33] <simcop2387> LeoNerd: oo, i like the :Trigger stuff, i can see that being really handy
[06:17:45] <simcop2387> and :LazyInit is obviously useful for the usual reasons
[06:19:41] <simcop2387> LeoNerd: going with clscott's comment though, it might be useful to add the term dataclass and records into some of the documentation for ::Struct to aid in searching for them
[06:29:15] *** Parts: samir (~samir@user/samir) (WeeChat 2.8)
[06:30:09] *** Quits: whynot (~whynot@37.73.84.76) (Quit: leaving)
[06:38:38] <simcop2387> mst: you may be interested in this, https://lwn.net/SubscriberLink/865256/addb79b379c7fcd9/  i seem to remember you playing with memfd stuff
[06:38:39] <Paperbot> Link title(s): [ memfd_secret() in 5.14 [LWN.net] ]
[06:41:36] <simcop2387> i'm not also wondering if one could use Variable::Magic or similar to create a nice memfd_secret() area that stores variables being given too it so that things like database credentials can't be dumped easily.
[06:43:12] <simcop2387> s/not/now/
[06:52:48] <aquanight> "create a range of memory that is inaccessible to anybody else â€” kernel included" ... how the hell does that even work?
[06:59:04] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:04] *** FinnElija is now known as Guest536
[06:59:04] *** finn_elija is now known as FinnElija
[07:01:54] *** Quits: Guest536 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[07:08:31] *** Joins: locrian9 (~mike@cpe-23-240-34-32.socal.res.rr.com)
[07:14:09] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[07:17:43] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[07:18:03] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[07:25:54] *** Joins: Manderson (~manderson@047-028-019-189.res.spectrum.com)
[07:26:40] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9908 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9908
[07:31:35] <simcop2387> aquanight: basically the kernel forbids itself from putting the mapping into the TLB during calls, which means that it can't do the get_user_page() call to it and read the memory through normal accesses.  given a kernel bug, someone could theoretically reconstruct the mapping or read it, and then be able to access it but it won't be possible to put it through the normal access methods
[07:38:30] *** Joins: locrian9_ (~mike@cpe-23-240-34-32.socal.res.rr.com)
[07:41:01] *** Quits: locrian9_ (~mike@cpe-23-240-34-32.socal.res.rr.com) (Client Quit)
[07:41:21] *** Joins: locrian9_ (~mike@cpe-23-240-34-32.socal.res.rr.com)
[07:42:35] *** Joins: Martchus (~martchus@dynamic-077-002-008-086.77.2.pool.telefonica.de)
[07:44:26] *** Quits: Martchus_ (~martchus@dynamic-095-118-130-208.95.118.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:55:10] *** Quits: locrian9_ (~mike@cpe-23-240-34-32.socal.res.rr.com) (Quit: leaving)
[07:58:54] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 252 seconds)
[07:59:01] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:00:06] <aquanight> simcop2387: yeah. Weird to think of something that normally has unrestricted access to anything somehow stopping itself from being able to access a thing.
[08:00:29] <aquanight> simcop2387: but I like how that thread then exploded about it needing to disable hibernation.
[08:00:49] <aquanight> (definitely something that seems like it would be a problem)
[08:00:59] <simcop2387> well you don't strictly speaking need to disable it, but yea it does interact in a way that's not necessarily obvious at first
[08:01:24] <aquanight> it sounded like they were thinking the kernel would just refuse hibernate calls if there's any secret mem
[08:06:03] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[08:06:44] * GumbyPAN CPAN Upload: Duadua-0.20 by BAYASHI https://metacpan.org/release/BAYASHI/Duadua-0.20
[08:17:15] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[08:29:27] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[08:42:20] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 272 seconds)
[08:45:46] *** Joins: csrf (~csrf@user/csrf)
[08:47:26] *** Joins: seekr (~seekr@130.44.163.10)
[08:57:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 245 seconds)
[08:58:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:03:04] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[09:23:38] *** Quits: locrian9 (~mike@cpe-23-240-34-32.socal.res.rr.com) (Quit: leaving)
[09:26:17] *** Quits: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb) (Quit: No Ping reply in 180 seconds.)
[09:26:30] *** Joins: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb)
[09:28:49] *** Quits: Martchus (~martchus@dynamic-077-002-008-086.77.2.pool.telefonica.de) (*.net *.split)
[09:28:50] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[09:28:50] *** Quits: Exodist (sid433366@stonehaven.irccloud.com) (*.net *.split)
[09:28:50] *** Quits: anthk_ (~anthk_@92.176.105.30) (*.net *.split)
[09:28:50] *** Quits: pizdets (~pizdets@183.182.111.62) (*.net *.split)
[09:28:50] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[09:28:50] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[09:28:50] *** Quits: acidsys (~LSD@2.lsd.systems) (*.net *.split)
[09:28:50] *** Quits: sa (sid1055@tinside.irccloud.com) (*.net *.split)
[09:28:50] *** Quits: toddr (sid457681@tinside.irccloud.com) (*.net *.split)
[09:28:50] *** Quits: v` (~v@user/ctrl) (*.net *.split)
[09:28:50] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[09:28:50] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (*.net *.split)
[09:28:51] *** Quits: Affliction (affliction@user/affliction) (*.net *.split)
[09:28:51] *** Quits: kaitlyn (~kaitlyn@user/kaitlyn) (*.net *.split)
[09:28:51] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (*.net *.split)
[09:28:51] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:28:51] *** Quits: jsaito (~jsaito@user/jsaito) (*.net *.split)
[09:28:51] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[09:29:09] *** Joins: Martchus (~martchus@dynamic-077-002-008-086.77.2.pool.telefonica.de)
[09:29:09] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[09:29:09] *** Joins: Exodist (sid433366@stonehaven.irccloud.com)
[09:29:09] *** Joins: anthk_ (~anthk_@92.176.105.30)
[09:29:09] *** Joins: pizdets (~pizdets@183.182.111.62)
[09:29:09] *** Joins: skyl4rk (~tlvb@user/tlvb)
[09:29:09] *** Joins: vrurg (~vrurg@45.74.95.181)
[09:29:09] *** Joins: acidsys (~LSD@2.lsd.systems)
[09:29:09] *** Joins: sa (sid1055@tinside.irccloud.com)
[09:29:09] *** Joins: toddr (sid457681@tinside.irccloud.com)
[09:29:09] *** Joins: v` (~v@user/ctrl)
[09:29:09] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[09:29:09] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[09:29:09] *** Joins: Affliction (affliction@user/affliction)
[09:29:09] *** Joins: kaitlyn (~kaitlyn@user/kaitlyn)
[09:29:09] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[09:29:09] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:29:09] *** Joins: tabakhase (tabakhase@user/tabakhase)
[09:29:09] *** Joins: jsaito (~jsaito@user/jsaito)
[09:29:09] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Excess Flood)
[09:29:15] *** Quits: sa (sid1055@tinside.irccloud.com) (Max SendQ exceeded)
[09:29:51] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[09:31:02] *** Joins: Botje_ (~Botje@mang.sgaap.be)
[09:31:02] *** Joins: sneep_ (~stron@qiqitori.com)
[09:31:02] *** Joins: mst_ (~matthewt@vps-6c71e929.vps.ovh.net)
[09:31:03] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[09:31:03] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:31:03] *** Quits: rando25892 (~sthk@user/rando25892) (*.net *.split)
[09:31:03] *** Quits: revhippie (~jdavis@047-013-092-010.res.spectrum.com) (*.net *.split)
[09:31:03] *** Quits: surfist (surfist@gateway02.insomnia247.nl) (*.net *.split)
[09:31:03] *** Quits: huf (~huf@user/huf) (*.net *.split)
[09:31:03] *** Quits: dg (~dgl@dg.wtf) (*.net *.split)
[09:31:03] *** Quits: Botje (~Botje@mang.sgaap.be) (*.net *.split)
[09:31:03] *** Quits: ether (~karene@user/ether) (*.net *.split)
[09:31:03] *** Quits: sivoais (~zaki@199.19.225.239) (*.net *.split)
[09:31:03] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:31:04] *** Quits: sneep (~stron@qiqitori.com) (*.net *.split)
[09:31:04] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[09:31:04] *** Quits: noctux (~noctux@user/noctux) (*.net *.split)
[09:31:04] *** Quits: stephen87 (sid33834@user/stephen87) (*.net *.split)
[09:31:04] *** Quits: blo (~blo@user/blo) (*.net *.split)
[09:31:04] *** Quits: Nei (~ailin@user/nemui) (*.net *.split)
[09:31:04] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[09:31:04] *** Quits: vykook (~vykook@mail.zabij.se) (*.net *.split)
[09:31:04] *** Quits: mst (~matthewt@vps-6c71e929.vps.ovh.net) (*.net *.split)
[09:31:04] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[09:31:04] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:31:04] *** Quits: rba (~rba@static.115.140.203.116.clients.your-server.de) (*.net *.split)
[09:31:04] *** Quits: Richlv (~rich@nakts.net) (*.net *.split)
[09:31:04] *** Quits: jercos (jercos@xyl.be) (*.net *.split)
[09:31:04] *** Quits: tyldis (~vidar@tyldum.com) (*.net *.split)
[09:31:04] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[09:31:04] *** Quits: krychu (~krychu@static.152.151.251.148.clients.your-server.de) (*.net *.split)
[09:31:04] *** Quits: sgrs (~sgrs@185.112.146.78) (*.net *.split)
[09:31:04] *** Quits: edf0 (edef@user/edef) (*.net *.split)
[09:31:04] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (*.net *.split)
[09:31:04] *** Quits: cornett (~ben@149.28.239.26) (*.net *.split)
[09:31:04] *** Quits: przemoc (~przemoc@user/przemoc) (*.net *.split)
[09:31:04] *** Quits: rjsalts (~rjsalts@green.spectralmud.org) (*.net *.split)
[09:31:04] *** Quits: phr3ak (~noreply@gnet.hu) (*.net *.split)
[09:31:04] *** Joins: jercos_ (jercos@xyl.be)
[09:31:04] *** Joins: ether_ (~karene@vps-6c71e929.vps.ovh.net)
[09:31:04] *** Joins: edf0_ (edef@panther.nathan7.eu)
[09:31:04] *** Joins: krychu_ (~krychu@static.152.151.251.148.clients.your-server.de)
[09:31:05] *** Joins: aindilis_ (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[09:31:05] *** Joins: rjsalts_ (~rjsalts@green.spectralmud.org)
[09:31:06] *** Joins: dgl (~dgl@dg.wtf)
[09:31:06] *** Joins: blo_ (~blo@ipv6.blo.ski)
[09:31:07] *** Joins: stephen87_ (sid33834@user/stephen87)
[09:31:07] *** Joins: Rich_ (~rich@nakts.net)
[09:31:08] *** Joins: sivoais_ (~zaki@199.19.225.239)
[09:31:08] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[09:31:08] *** Joins: rando25902 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net)
[09:31:09] *** Joins: revhippi` (~jdavis@047-013-092-010.res.spectrum.com)
[09:31:10] *** Joins: Nei (~ailin@yoshi.flupps.net)
[09:31:10] *** Quits: ether_ (~karene@vps-6c71e929.vps.ovh.net) (Changing host)
[09:31:10] *** Joins: ether_ (~karene@user/ether)
[09:31:10] *** Joins: sgrs (~sgrs@185.112.146.78)
[09:31:11] *** Joins: przemoc86 (~przemoc@89-72-24-4.dynamic.chello.pl)
[09:31:11] *** Joins: cornett (~ben@149.28.239.26)
[09:31:11] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:31:12] *** Joins: _phr3ak_ (~noreply@gnet.hu)
[09:31:12] *** Joins: vykook_ (~vykook@mail.zabij.se)
[09:31:12] *** Quits: Nei (~ailin@yoshi.flupps.net) (Changing host)
[09:31:12] *** Joins: Nei (~ailin@user/nemui)
[09:31:25] *** Joins: depesz_ (~quassel@lana.depesz.com)
[09:31:31] *** _phr3ak_ is now known as phr3ak
[09:31:34] *** Joins: tyldis_ (~vidar@2a03:b0c0:2:d0::80c:c001)
[09:31:47] *** Joins: rba_ (~rba@2a01:4f8:c2c:7a41::1)
[09:31:57] *** tyldis_ is now known as tyldis
[09:32:11] *** rba_ is now known as rba
[09:32:14] *** Joins: noctux (~noctux@user/noctux)
[09:32:21] *** Joins: phryk (~totallyno@user/phryk)
[09:32:23] *** Joins: phenom (~primus@user/phenom)
[09:32:23] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[09:32:34] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 240 seconds)
[09:32:35] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 250 seconds)
[09:32:38] *** Quits: ilmari_ (~ilmari@user/ilmari) (Ping timeout: 245 seconds)
[09:33:01] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Ping timeout: 272 seconds)
[09:33:03] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:34:06] *** Joins: surfist (surfist@gateway02.insomnia247.nl)
[09:34:27] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[09:34:50] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[09:36:39] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[09:36:44] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Ping timeout: 272 seconds)
[09:37:26] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 272 seconds)
[09:37:32] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[09:38:26] *** Server sets mode: +nt 
[09:40:09] *** Joins: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com)
[09:40:13] *** Joins: webstrand (~webstrand@user/webstrand)
[09:40:18] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[09:41:15] *** Joins: klys (~mdasoh@show.op8.us)
[09:41:19] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[09:44:52] *** Joins: Ekho (~Ekho@user/ekho)
[09:48:06] *** Joins: mattil (~mattil@dy6rz01yg2tm1npv3zryy-4.rev.dnainternet.fi)
[09:51:08] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[09:52:38] *** Quits: mattil (~mattil@dy6rz01yg2tm1npv3zryy-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[09:58:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[10:00:38] *** revhippi` is now known as revhippie
[10:04:44] *** Joins: entonian[m] (~entonianm@2001:470:69fc:105::7ac0)
[10:06:13] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[10:07:16] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[10:09:58] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[10:11:52] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Client Quit)
[10:18:28] *** Joins: mattil (~mattil@dy6rz01ctqmknf2srhxvy-4.rev.dnainternet.fi)
[10:18:29] *** Quits: mattil (~mattil@dy6rz01ctqmknf2srhxvy-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:19:01] *** Joins: mattil (~mattil@airio.portalify.com)
[10:21:42] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[10:23:01] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[10:24:34] *** Joins: mattil (~mattil@airio.portalify.com)
[10:25:05] *** Joins: habamax (~habamax@user/habamax)
[10:26:06] *** Joins: mattil_ (~mattil@dy6rz01g400387bwzwhkt-4.rev.dnainternet.fi)
[10:29:02] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 256 seconds)
[10:30:53] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[10:31:16] *** Quits: mattil_ (~mattil@dy6rz01g400387bwzwhkt-4.rev.dnainternet.fi) (Ping timeout: 272 seconds)
[10:31:58] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[10:32:08] *** Joins: latk (~latk@2001:470:69fc:105::255)
[10:34:27] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[10:37:12] *** Joins: mattil (~mattil@airio.portalify.com)
[10:40:00] *** Joins: horsepatat (~horsepata@80.89.76.102)
[10:40:07] *** Quits: FastJack_ (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Quit: leaving)
[10:40:35] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[10:46:07] *** Quits: randir (~randir@95-25-151-74.broadband.corbina.ru) (Remote host closed the connection)
[10:49:24] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[10:50:07] *** Joins: ufobat (~martin@dynamic-095-117-077-166.95.117.pool.telefonica.de)
[10:51:07] *** Quits: dimbag (~dimbag@ppp-62-76-16-3.ppp.kmv.ru) (Ping timeout: 258 seconds)
[10:57:01] * GumbyPAN CPAN Upload: Graphics-Fig-v1.0.7 by SCOOTER https://metacpan.org/release/SCOOTER/Graphics-Fig-v1.0.7
[10:59:37] *** Joins: EGD (~egd@user/egd)
[11:00:23] *** Joins: scp1 (~scp1@host-78-78-253-94.mobileonline.telia.com)
[11:00:23] *** Quits: scp1 (~scp1@host-78-78-253-94.mobileonline.telia.com) (Changing host)
[11:00:23] *** Joins: scp1 (~scp1@user/japh)
[11:00:50] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[11:03:30] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[11:07:29] *** Joins: ilmari_1 (~ilmari@user/ilmari)
[11:09:44] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[11:10:54] *** Joins: randir (~randir@93.159.239.42)
[11:25:05] *** Joins: art1 (~romeyke@p200300ccdf06f80032374dedad7156c5.dip0.t-ipconnect.de)
[11:32:51] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 268 seconds)
[11:33:08] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[11:33:36] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Write error: Broken pipe)
[11:34:02] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[11:44:16] *** Joins: habamax_ (~habamax@vpn.avast.com)
[11:47:14] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 256 seconds)
[11:48:11] *** Joins: tanami (~q@irc.expert)
[11:49:06] <tanami> if I am unpacking something which has a variable-length asciz string and various other elements, is there a way to get the offset of the last "parsed" item?
[11:49:22] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[11:49:22] *** Joins: habamax_ (~habamax@user/habamax)
[11:49:22] *** habamax_ is now known as habamax
[11:49:35] *** Joins: Adoi (~Adoi@user/adoi)
[11:50:00] <tanami> i just need to find out the size of the whole unpacked data
[11:50:07] <shlomif> tanami: hi
[11:51:05] <tanami> shlomif: hi
[11:53:40] <shlomif> tanami: can you unpack in two steps?
[11:55:41] <shlomif> tanami: there is https://metacpan.org/pod/Data::ParseBinary too
[11:55:41] <Paperbot> Link title(s): [ Data::ParseBinary - Yet Another parser for binary structures - metacpan.org ]
[11:59:31] <tanami> shlomif: yeah i would prefer not do but it's looking like that huh
[11:59:45] <tanami> this module looks good, I'll give this a try, thanks!
[12:00:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 258 seconds)
[12:02:08] * GumbyPAN CPAN Upload: App-tpnotify-1.04 by SGRAY https://metacpan.org/release/SGRAY/App-tpnotify-1.04
[12:02:21] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[12:03:15] <shlomif> tanami: you're welcome 
[12:12:46] *** bingos_ is now known as BinGOs
[12:13:25] *** Quits: BinGOs (~bitbucket@cabbage.bingosnet.co.uk) (Changing host)
[12:13:25] *** Joins: BinGOs (~bitbucket@user/bingos)
[12:30:24] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:42:13] * GumbyPAN welcomes HARRYREN - Harry Ren to CPAN!
[12:42:13] * GumbyPAN welcomes HANNIBAL - Annibale Montenero to CPAN!
[12:42:14] * GumbyPAN welcomes CYBERANON - Cyber Anonymous to CPAN!
[12:42:17] *** sneep_ is now known as sneep
[12:42:21] *** Quits: sneep (~stron@qiqitori.com) (Changing host)
[12:42:21] *** Joins: sneep (~stron@user/sneep)
[12:45:40] <genio> Yay. Selling current dirt bikes and four wheeler to get a brand new dirt bike
[12:46:05] <genio> 2022 yz250f coming my way
[12:55:52] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[12:58:04] *** Joins: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net)
[12:59:28] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 272 seconds)
[13:05:08] *** Joins: randir (~randir@93.159.239.42)
[13:10:19] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[13:10:57] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:11:35] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[13:11:35] *** Quits: diskin (~diskin@109.165.42.115) (Killed (erbium.libera.chat (Nickname regained by services)))
[13:11:35] *** diskin_ is now known as diskin
[13:13:48] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:19:45] *** Joins: choroba (~E.Choroba@46-13-200-141.customers.tmcz.cz)
[13:22:17] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:25:20] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[13:25:42] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 268 seconds)
[13:30:57] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 276 seconds)
[13:32:08] *** Quits: EPic_ (apic@apic.name) (Quit: Reconnecting)
[13:32:14] *** Joins: APic (apic@apic.name)
[13:37:56] *** Joins: mattil (~mattil@airio.portalify.com)
[13:42:46] *** Quits: slu (uid501941@id-501941.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[13:48:08] *** Quits: choroba (~E.Choroba@46-13-200-141.customers.tmcz.cz) (Remote host closed the connection)
[13:51:47] *** Joins: choroba (~E.Choroba@46-13-200-141.customers.tmcz.cz)
[14:03:25] *** Joins: furrymcgee (~devuan@31.179.186.66)
[14:04:47] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[14:08:22] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[14:11:30] *** Joins: Su-Shee_ (~Susanne@p4ffc724f.dip0.t-ipconnect.de)
[14:12:56] *** Quits: Su-Shee (~Susanne@p4ff492ce.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:00] *** Joins: csrf (~csrf@user/csrf)
[14:31:01] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:32:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[14:32:42] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 276 seconds)
[14:36:46] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[14:55:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 268 seconds)
[15:00:12] *** Joins: Guest35 (~Guest35@144.160.96.229)
[15:00:14] <Guest35> Hi
[15:00:35] <Guest35> I am new to perl programming
[15:00:48] <Guest35> what is iDevPerl ?
[15:02:20] <lopid> nothing? https://duckduckgo.com/?t=ffab&q=idevperl&ia=web
[15:02:20] <Paperbot> Link title(s): [ idevperl at DuckDuckGo ]
[15:03:22] <LeoNerd> I can honestly say I've never heard of it
[15:03:50] * LeoNerd ~15 year CPAN contributor, 5 year core perl developer, current member of Perl Steering Council
[15:04:02] <Adura> Sounds Apple-related? heh
[15:04:25] <xq> Guest35: never heard of it
[15:05:24] <Guest35> some of the AT&T application uses iDevPerl
[15:05:43] <lopid> maybe an in house thing
[15:06:08] <Guest35> if i have to start working on Perl programming, how shall i proceed?
[15:06:35] <Guest35> ?if i have to start working on Perl programming, how shall i proceed?
[15:06:50] <lopid> perlbot: tutorial
[15:06:51] <perlbot> lopid: For Perl books and tutorials, see http://perl-tutorial.org/ , http://learn.perl.org/ , https://www.perl.org/books/library.html , http://perl-begin.org/tutorials/ , http://perlmonks.org/index.pl?node=Tutorials , or see quickstart
[15:06:51] <Guest35> from where to install perl on linux ?
[15:07:02] <choroba> Guest35: Are you familiar with programming in any other language?
[15:07:05] <lopid> it's probably already installed
[15:07:37] <Guest35> ok
[15:07:43] <Guest35> what are perl modules ?
[15:08:17] <lopid> libraries of code that you can include in your perl program
[15:09:15] <Guest35> it can be both user-defined and default ones ?
[15:09:32] <choroba> yes
[15:09:34] <lopid> perl comes with a set of default modules, yes
[15:10:04] *** Quits: Guest35 (~Guest35@144.160.96.229) (Quit: Client closed)
[15:10:34] <LeoNerd> You can indeed make them. That's what CPAN is - an enormous collection of user-contributed modules
[15:13:52] <Adura> They're set, it seems.
[15:16:39] <Altreus> they got caught asking for help
[15:16:55] <Altreus> That's one of those companies we were warned about all through school
[15:17:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[15:24:28] <huf> *sigh* it's so hard to find good help nowadays
[15:25:20] <xenu> that was probably an at&t intern
[15:28:46] <Altreus> at&tn't
[15:30:01] <huf> i dont think you should've tried eating it...
[15:30:48] <huf> wait. "aten't" is pretty close :D
[15:33:22] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[15:34:45] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[15:36:12] <Altreus> that is indeed when I didn't eat it
[15:36:21] <Altreus> I aten't sandwich
[15:36:24] <Altreus> nah
[15:36:32] * GumbyPAN CPAN Upload: Time-Zone-Olson-0.38 by DDICK https://metacpan.org/release/DDICK/Time-Zone-Olson-0.38
[15:36:46] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:36:49] *** Quits: anthk_ (~anthk_@92.176.105.30) (Client Quit)
[15:36:52] <Altreus> that reminds me, you can get "I ATEN'T DEAD" signs for your car to tell people your dog is fine and does not need rescue
[15:36:59] <Altreus> get/make
[15:37:05] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:38:17] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 248 seconds)
[15:39:41] <Mandevil> Bit of code critique wanted... am I too clever with the _debug method here: https://f.perl.bot/p/ru2nkz
[15:39:41] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[15:40:11] <Botje_> I'm sure there's a law that states questions of the form "am I too clever" are always answered by "yes" :P
[15:41:23] <Mandevil> OK, better question would be "is this a good idea?"
[15:42:27] <Botje_> Mandevil: any specific reason that's not just a package global? Seems weird to have so many filehandles to the same file
[15:42:55] <Mandevil> There's only one filehandle?
[15:43:03] <Botje_> per object.
[15:43:22] <Botje_> per *SPAM::DbTransaction object
[15:43:28] <Mandevil> Understand.
[15:43:33] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 276 seconds)
[15:43:58] <Mandevil> But if I had global handle I'd need some code outside of the class.
[15:44:08] <Mandevil> Which wouldn't be "self-managing".
[15:44:19] <Mandevil> I might also add "transaction id" to make them different files.
[15:44:42] <Altreus> Why not sub _debug { state $fh ... ]
[15:44:49] <Botje_> if it's a global filehandle you can drop the "close on DESTROY" functionality.
[15:44:57] <Botje_> Let the OS close filehandles for you, it's what it's good at.
[15:45:01] <Altreus> then it's $self->_debug() not $self->_debug->(), the latter being astonishing
[15:45:34] <Mandevil> Hm, state... how does that even work.
[15:45:42] <Altreus> it happens once
[15:45:48] *** Quits: Trigon (~reuben@73.127.1.41) (Ping timeout: 256 seconds)
[15:45:51] <Altreus> it's a my but it's only run the first time
[15:46:04] <Mandevil> Hm.
[15:46:05] <Altreus> It's basically equivalent to my $fh; sub _debug { ... use $fh ... }
[15:46:09] <Altreus> But the scoping is better
[15:46:12] <Mandevil> Got it.
[15:46:21] <Mandevil> I am thinking if it's what I want.
[15:46:23] <Altreus> So it's really { my $fh ... sub ... {} }
[15:46:52] <Altreus> (I think it's exactly equivalent to that, so you can fake it if you don't have state yet)
[15:47:41] <Mandevil> But yeah, I think this is a good suggestion.
[15:47:46] <Mandevil> Getting rid of that closure
[15:48:12] *** Joins: mattil (~mattil@airio.portalify.com)
[15:48:14] * Altreus is a helper
[15:48:58] <Altreus> And again the global destruction phase will close the filehandle for you (but won't output that string you have)
[15:49:21] <Altreus> but you can always $self->_debug("--> END etc") in DESTROY
[15:49:43] <Mandevil> Sure.
[15:49:51] <Mandevil> I'll do it that way.
[15:50:09] <Mandevil> So the answer was yes, I was too clever.
[15:50:09] <Altreus> I was pretty rude about some code on stream yesterday :D
[15:50:22] <Altreus> Can someone tell me why one would do this? $array[@array] = something
[15:50:31] <Altreus> instead of push @array, scalar something
[15:50:46] <LeoNerd> It lets you create/push/return in one statement
[15:50:57] <Altreus> there was no return
[15:51:00] <LeoNerd> sub more_thing { return $things[@things] = Thing->new }
[15:51:03] <Altreus> also why is that valuable?
[15:51:05] <LeoNerd> Which is harder to do with push
[15:51:32] <Altreus> push @things, Thing->new; return $things[-1]
[15:51:42] <Altreus> Talk about astonishing
[15:51:48] <Altreus> Especially if it doesn't even return it!
[15:51:52] <LeoNerd> Yeah but then that's two statements
[15:52:00] <Altreus> why's that bad
[15:52:09] <LeoNerd> Eh, some folks like the compactness
[15:52:16] <Botje_> Altreus: that almost sounds like a PHP-ism.
[15:52:17] <Altreus> everyone else likes legibility
[15:52:32] <Altreus> Botje_: That's what I thought
[15:52:37] <LeoNerd> I'm not saying it's a *good* reason, I'mjust saying it's a possible reason why someone would do  $arr[@arr] = thing
[15:52:46] <Altreus> Ah, that's fair
[15:52:53] <Altreus> I didn't ask for a good reason :D
[15:53:12] <Altreus> It would certainly not have passed code review
[15:53:37] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[15:53:59] <Botje_> shrug. pretty cromulent to me.
[15:54:31] <Altreus> I don't really like code that gives people a reason to continue to hate perl
[15:54:59] <Altreus> The number of things you need to understand about Perl to understand that line, compared to the English words "push @array", is ridiculous
[15:55:08] *** Quits: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com) (Quit: leaving)
[15:55:19] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[15:56:13] <Altreus> I ended up banning someone in chat as a result of that line because it triggered a bit of a tirade
[15:56:34] <Botje_> Altreus: it's actually a great example of scalar context.
[15:57:03] <Altreus> yes it is
[15:57:11] <Altreus> Which you shouldn't have to understand, to understand push
[15:57:55] <Altreus> I get that it makes perfect sense if you understand all the things that go into it, which is why I recognised it as a push operation
[15:58:19] <Altreus> But the fact that you have to understand all those things when we already have a push operator makes it, in my opinion, needlessly obfuscated
[15:59:11] <xenu> the problem is that push() return value is useless
[15:59:23] <Botje_> better a useless value than one that is wrong 50% of the time
[15:59:38] <Altreus> Anyway I was salty that it was in the way of my debugging
[15:59:39] <xenu> pretty much all built-ins have useless return values
[15:59:47] <Altreus> the return value was not in use
[16:00:10] <Altreus> There is no value in obfuscating your operation just to save a semicolon
[16:00:23] <Altreus> push array, thing; return thing;
[16:01:18] <Adura> Few characters do trick.
[16:01:27] <Botje_> tricks are for whores!
[16:01:32] *** Botje_ is now known as Botje
[16:01:39] <Botje> (RIP)
[16:01:52] <xenu> no, trix are for kids
[16:02:56] <huf> ahh, the pleasant sounds of summer
[16:03:04] <Botje> lawnmowers?
[16:03:05] <huf> GRRRRKHHHHHRHRHRHRHRHRHRHHBBBZZZZZZZZ
[16:03:09] <huf> construction
[16:03:22] <huf> about 10m from my door, so it's really loud
[16:05:48] <Mandevil> Earplugs... 
[16:08:50] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 272 seconds)
[16:12:15] <Altreus> tetrix?
[16:13:17] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[16:14:10] <Mandevil> 'state' needs to be explicitly enabled?
[16:14:31] <LeoNerd> It's a new keyword, so yes
[16:14:43] <LeoNerd> Get into the habit of using  use VERSION  and things like that should smooth out over time
[16:15:04] <Mandevil> Ah, v5.10 is enough
[16:15:05] <LeoNerd> If VERSION is v5.10 or later, that'll appear for free
[16:15:31] <LeoNerd> v5.12 gives you 'strict', so literally instead of writing  use strict;  you can write  use v5.12;  which is 1 letter shorter *and* gives you more stuff
[16:16:39] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[16:16:45] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[16:18:37] <Mandevil> TIL
[16:18:43] <shlomif> huf: ah, that sucks
[16:19:56] <huf> they kept grinding metal until 8pm yesterday
[16:20:29] <huf> it was god's buggy day of rest ffs!
[16:21:10] <Altreus> I forgot my use version and my code compiled and I was bothered by that
[16:21:44] <Altreus> huf: in some places he rests on Saturdays though
[16:22:03] <huf> Altreus: hence "buggy", yes.
[16:22:05] <huf> it's off by one
[16:22:17] <LeoNerd> Youknow, I perhaps shouldn't feel so bad about some of the memory leaks in some of my perl modules; when firefox can manage to fill my entire 4GiB of RAM and 8GiB of swap in a matter of days
[16:22:26] <shlomif> Altreus: god is nobody's sucker
[16:22:36] <huf> *doubt*
[16:24:05] <huf> Can you imagine that you don't have an own desk at the office and we introduce hot desks?
[16:24:11] <huf> this is not a good question
[16:25:08] <LeoNerd> TIL that a "hot desk" does not mean you pretend that The Desk Is Lava
[16:25:29] <huf> that'd be cool
[16:26:37] * GumbyPAN CPAN Upload: DNS-Unbound-0.25_08 by FELIPE https://metacpan.org/release/FELIPE/DNS-Unbound-0.25_08
[16:28:18] *** Quits: horsepatat (~horsepata@80.89.76.102) (Ping timeout: 256 seconds)
[16:31:56] *** ilmari_ is now known as ilmari
[16:32:41] *** ilmari_1 is now known as ilmari_
[16:36:38] * GumbyPAN CPAN Upload: OPCUA-Open62541-0.028 by BLUHM https://metacpan.org/release/BLUHM/OPCUA-Open62541-0.028
[16:38:23] *** Quits: APic (apic@apic.name) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[16:40:35] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[16:40:41] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 248 seconds)
[16:42:30] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[16:43:30] *** Joins: APic (apic@apic.name)
[16:47:54] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[16:49:32] *** dilfridge is now known as undercaffeinated
[16:50:23] *** Parts: tanami (~q@irc.expert) ()
[16:55:52] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[16:56:08] *** Joins: gareppa (~gareppa@user/gareppa)
[16:56:43] *** Joins: xcombel11 (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[16:56:58] *** Quits: v` (~v@user/ctrl) (Ping timeout: 272 seconds)
[16:57:15] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:58:19] *** mst_ is now known as mst
[17:00:22] <Altreus> huf: well then you can't reason about when they should be resting themselves eh
[17:00:25] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[17:00:29] <Altreus> stands to reason, therefore, that they shouldn't
[17:02:10] *** xcombel11 is now known as xcombelle
[17:04:42] *** Quits: EGD (~egd@user/egd) ()
[17:07:02] *** Quits: TorgoX (~torgox_li@S010610561194533f.ed.shawcable.net) (Quit: Going offline, see ya! (www.adiirc.com))
[17:08:22] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 272 seconds)
[17:08:52] *** Joins: horsepatat (~horsepata@80.89.76.223)
[17:11:47] *** depesz_ is now known as depesz
[17:12:51] *** Quits: horsepatat (~horsepata@80.89.76.223) (Read error: Connection reset by peer)
[17:18:04] <shlomif> xcombelle: hi
[17:18:06] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:588:9d9a:dab7:dccc:fa80)
[17:20:58] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:1112:26cc:c84b:ec1e:fb2) (Ping timeout: 258 seconds)
[17:21:42] * GumbyPAN CPAN Upload: Astro-UTDF-0.012 by WYANT https://metacpan.org/release/WYANT/Astro-UTDF-0.012
[17:27:17] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[17:27:27] *** Joins: WinterStar (~IceLight@user/icelight)
[17:28:24] *** Joins: bmeneg (~bmeneg@2001:1284:f016:9a56:9992:d93c:23e3:2b56)
[17:31:17] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[17:31:42] *** Joins: gryphn (~gryphon@84.17.45.19)
[17:31:43] * GumbyPAN CPAN Upload: Date-ManipX-Almanac-0.002 by WYANT https://metacpan.org/release/WYANT/Date-ManipX-Almanac-0.002
[17:31:57] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:32:54] <xenu> https://marc.info/?l=perl5-porters&m=162851211513224&w=2
[17:32:55] <Paperbot> Link title(s): [ 'CVE-2021-36770: Encode.pm loads code from outside expected @INC' - MARC ]
[17:33:06] <xenu> lol nice bug
[17:35:16] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[17:37:55] <xenu> that change was completely pointless btw
[17:38:17] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[17:38:26] <ash_worksi> I am trying to parse a yaml file but I am getting "Reference found where even-sized list expected"
[17:38:29] <ash_worksi> not sure what that means
[17:38:41] <LeoNerd> Trying to initialise a hash
[17:38:42] <ash_worksi> I am just using YAML::XS 'LoadFile'
[17:38:49] <LeoNerd> my %hash = $hashref;   will create that warning
[17:39:21] <ash_worksi> okay... I have my %hash = LoadFile('path/to/file.yml');
[17:39:37] <LeoNerd> Right, indeed.  LoadFile  will return a reference to a hash, not an evensized list
[17:39:45] <LeoNerd> So you'll want to   my $hashref = LoadFile( ... );
[17:40:23] <ash_worksi> hm
[17:41:13] <xenu> from the changelog of Encode: "We do some compiled perl, and @INC is not always defined, so it throws a warning."
[17:41:40] <ash_worksi> how I get Global symbol "%hashref" requires explicit package name  ... 
[17:41:47] <ash_worksi> nwo*
[17:41:48] <ash_worksi> now*
[17:42:07] <xenu> that's a lie, that code definitely didn't warn, localizing empty @INC is perfectly fine, which makes me wonder if that vulnerability was planted on purpose
[17:42:18] <LeoNerd> Yes; that'll be because somewhere else in your code you're treating the hashref as a hash itself
[17:42:27] <LeoNerd> PRobably easiest is to just unpack it;   my %hash = %$hashref;
[17:42:49] <LeoNerd> Otherwise you'll have to change all your code from  $hash{key}  to  $hashref->{key}
[17:43:32] <ash_worksi> I see
[17:44:04] <ash_worksi> I didn't realize references has different syntax for accessors
[17:46:28] <ash_worksi> thanks LeoNerd 
[17:53:00] <zgu> $hashref{key} would refer to %hashref, not $hashref, which are different variables
[17:53:33] *** Quits: arthurpbs (~arthurpbs@168.121.98.198) (Ping timeout: 276 seconds)
[17:53:51] *** Quits: ueberall (ueberall_l@user/ueberall) (Remote host closed the connection)
[17:54:09] <xenu> oh sorry, it did warn, just in the next line
[17:54:19] <xenu> so it was indeed just a stupid fix
[17:54:34] *** Quits: LSD (~LSD@2.lsd.systems) (Ping timeout: 240 seconds)
[17:54:51] <ehuelsmann[m]> LeoNerd: talking of "use vVERSION", is there a version which enables warnings by default?
[17:55:59] <LeoNerd> Not yet but we're hoping to get that in for 5.36
[17:56:00] <tirnanog> ehuelsmann[m]: no.
[17:56:09] <LeoNerd> We mearly did it for 5.34 but it was a bit late and close to the freeze date
[17:57:16] <ehuelsmann[m]> Ah. Good to know it's coming.
[17:58:08] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[18:04:39] <ash_worksi> mst: you said you keep globals *and* privs separate? How do you do that? If a new table needs to be migrated, you can't GRANT on it until it's in the database; so that GRANT becomes contigent on the existence of the table; so if you later drop it, you'll get errors if you rerun your globals script
[18:04:41] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:04:42] *** Joins: LSD (~LSD@2.lsd.systems)
[18:05:14] <ash_worksi> mst: that is, you keep (both, globals *and* privs) separate from normal migrations
[18:06:43] * ehuelsmann[m] uses something akin to sqitch.org to version his schema
[18:07:10] <ash_worksi> ehuelsmann[m]: I am trying to use sqitch actually
[18:07:25] <ash_worksi> ehuelsmann[m]: but I like that mst separates out globals
[18:07:31] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 268 seconds)
[18:07:37] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 248 seconds)
[18:07:49] *** Joins: ueberall (ueberall_l@user/ueberall)
[18:08:13] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[18:08:20] <ash_worksi> actually, if you happen to know if you can just change filenames after you deploy with sqitch, I'd like to know. #sqitch is totally dead
[18:08:25] <ehuelsmann[m]> ash_worksi: in my solution, I manage the schema versioning separate from the database routines (plsql) and the roles.
[18:08:57] <ash_worksi> ehuelsmann[m]: when you say roles, does that include perms? and also, do you generate those?
[18:09:22] <ehuelsmann[m]> roles includes perms, yes.
[18:09:34] <ehuelsmann[m]> well, I said "akin", because I use a solution which is highly inspired on sqitch, but I implemented my own. 
[18:10:01] <ehuelsmann[m]> sqitch requires an explicit ordering of changes, but I can't have that for my purpose.
[18:10:02] <ash_worksi> ehuelsmann[m]: I see, so do you use something to generate roles and perms based on the environment?
[18:10:26] <ehuelsmann[m]> what I have is this:
[18:10:46] <ash_worksi> why is everyone in #perl so helpful?
[18:11:25] <El_Che> ash_worksi: guilt
[18:11:53] <ehuelsmann[m]> (1) a base schema (the one we kicked off with), (2) a list of changes to be deployed on top of that, only the schema, (3) a set of plsql functions and procedures to be added after that and (4) a file which puts the perms on top of all of it.
[18:11:54] <ehuelsmann[m]> https://github.com/ledgersmb/LedgerSMB/tree/master/sql
[18:11:54] <ash_worksi> El_Che: I guess I am fortunate then?
[18:11:55] <Paperbot> Link title(s): [ LedgerSMB/sql at master Â· ledgersmb/LedgerSMB Â· GitHub ]
[18:12:31] <El_Che> ash_worksi: no, we all have stuff to make up for :)
[18:12:33] <ehuelsmann[m]> the incremental changes are applied in the order they appear in https://github.com/ledgersmb/LedgerSMB/blob/master/sql/changes/LOADORDER
[18:12:33] <Paperbot> Link title(s): [ LedgerSMB/LOADORDER at master Â· ledgersmb/LedgerSMB Â· GitHub ]
[18:13:36] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 272 seconds)
[18:13:50] <ehuelsmann[m]> the nice part about thisin comparison to sqitch is: when someone upgrades from 1.6 to 1.8, some fixes which were backported from 1.9 to 1.6, will have been applied to the schema already.
[18:14:06] <ash_worksi> ehuelsmann[m]: so, if you have a new table, and it needs to get a perm for USAGE by appuser, or whatever, does that get manually managed in (4) ?
[18:14:12] <ehuelsmann[m]> for sqitch, that's a consistency error. in the world of open source releases, that's reality.
[18:14:28] <ehuelsmann[m]> yes, that's manually managed.
[18:15:04] <ehuelsmann[m]> I'm actually not creating new tables that often, much to my surprise.
[18:15:33] <ash_worksi> ehuelsmann[m]: are there multiple roles that perm could be based on the environment (my example would be like foo_dev_web_user vs foo_live_web_user)
[18:16:58] *** Joins: lucasb (uid333435@id-333435.stonehaven.irccloud.com)
[18:17:03] <ehuelsmann[m]> ash_worksi: we have a function that generates the name of the actual role while creating the role. the function returns a name based on several factors, one which could be the deployment environment. In our case, it's the name of the database, or a value in some table.
[18:17:09] *** Joins: mattil (~mattil@airio.portalify.com)
[18:18:15] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 276 seconds)
[18:18:28] <ash_worksi> ehuelsmann[m]: so is that templated in, or does the perm look like `GRANT ... TO (SELECT get_user_for(...));` -- (can you even do that?)
[18:18:30] <ehuelsmann[m]> to give an example we have an abstract role which is named "accounts_receivable_entry"; we pass that name to the function, which maps it to the actual name of "foo_dev_accounts_receivable_entry" which then gets created.
[18:19:18] <ehuelsmann[m]> https://github.com/ledgersmb/LedgerSMB/blob/master/sql/modules/Roles.sql#L10-L35
[18:19:19] <Paperbot> Link title(s): [ LedgerSMB/Roles.sql at master Â· ledgersmb/LedgerSMB Â· GitHub ]
[18:19:27] <ehuelsmann[m]> that's the function which does what I describe.
[18:20:10] <ash_worksi> ehuelsmann[m]: I see the CREATE ROLE part, but I am more wondering about GRANTS
[18:20:16] <ash_worksi> oh thats under
[18:20:29] <ehuelsmann[m]> yup. same approach.
[18:21:43] <ash_worksi> so, what feeds in "accounts_receivable_entry" ?
[18:21:55] <ash_worksi> a config file?
[18:22:01] <ash_worksi> or a migration?
[18:22:52] <ehuelsmann[m]> here the actual use of the "create_role" and "grant_perms" functions can be seen: https://github.com/ledgersmb/LedgerSMB/blob/master/sql/modules/Roles.sql#L193-L196
[18:22:53] *** Joins: magla (~gelignite@55d4b6ce.access.ecotel.net)
[18:22:54] <Paperbot> Link title(s): [ LedgerSMB/Roles.sql at master Â· ledgersmb/LedgerSMB Â· GitHub ]
[18:23:07] <ash_worksi> (ie after a CREATE TABLE foo; SELECT lsmb__grant_role('foo','my_user');)
[18:23:18] <ehuelsmann[m]> the same function is called from the web application (Perl) when it wants to know about role membership.
[18:23:55] <ehuelsmann[m]> so the database does the "abstract role to role implementation" mapping.
[18:26:12] <ash_worksi> I see, so the flow might go something like, when you require a new object with privs, you manually add that to your privs list that resolves roles and roll that out.... so how do you order this? just deploy the table without privs and add them after?
[18:27:28] *** Quits: vague (~vague@irssi/staff/vague) (Ping timeout: 272 seconds)
[18:27:50] *** Joins: vague (~vague@irssi/staff/vague)
[18:29:07] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:29:18] <ehuelsmann[m]> yes: we always run the sequence (a) apply change scripts, (b) deploy (new) plqsl functions (c) apply permissions model
[18:30:08] <ehuelsmann[m]> the perl code which manages the database schema does it that way.
[18:30:23] <ehuelsmann[m]> it's a single "deploy database" command from the command line.
[18:31:28] <ehuelsmann[m]> and upgrading uses the exact same procedure as creating a new one, except that upgrading skips the step where the base schema is created.
[18:34:13] <ash_worksi> ehuelsmann[m]: I'm not sure I completely follow the upgrade process, but I think I've got enought to try and cobble something together in my mind
[18:34:18] <ash_worksi> then perhaps I can polish it later
[18:34:49] <ehuelsmann[m]> yup. that's how we did it.
[18:35:30] <Altreus> This is why I find it extremely helpful to have the application in control of the database schema. Which is why I never understand the use of DBIx::Class:SchemaLoader
[18:36:04] <Altreus> You can use DeploymentHandler from within your app's startup to make sure that the database is what the app expects
[18:36:23] <talexb> \quit
[18:36:24] <Altreus> DeploymentHandler is handy because it means you can actually make custom tweaks that can't be represented by a simple data model
[18:36:34] <Altreus> i.e. metadata
[18:36:34] *** Quits: talexb (~tab@bras-base-toroon0335w-grc-24-174-95-206-118.dsl.bell.ca) (Quit: Leaving)
[18:36:40] <Altreus> ok bye :D
[18:40:38] *** Joins: EGD (~egd@user/egd)
[18:42:15] <LeoNerd> Why thankyou YouTube, yes I did want to listen to a three-and-a-half hour long video collection of *all* of Bach's harpsichord concertos...
[18:42:34] <Altreus> Harpsichord is a sometimes instrument
[18:42:48] <Altreus> Also known as the forteforte
[18:43:14] <LeoNerd> The LoudLoud
[18:45:06] <ash_worksi> ehuelsmann[m]: actually, I am trying to keep something together using docker and sqitch; for the first migration I was going to keep perms in there but then I started down this path of trying to generate them
[18:45:49] <ash_worksi> ehuelsmann[m]: in the end, I wanted a git submodule you can just pull into a db service to get that up and running with the latest schema
[18:46:18] <Altreus> submodules are to be avoided at all costs
[18:46:36] <ehuelsmann[m]> ash_worksi: what Altreus says.
[18:46:40] <Altreus> The only problems I've ever had with git that could not be solved were because of submodules
[18:46:52] <Altreus> or because someone ran checkout on their changes
[18:47:02] <Altreus> but that's a them problem :D
[18:47:15] <Altreus> oops, heading home &
[18:47:26] <ash_worksi> Altreus: well, the idea was for it to be read-only for devs (and such projects)
[18:47:31] <ash_worksi> bye Altreus 
[18:47:40] <ash_worksi> ehuelsmann[m]: well, shoot
[18:48:14] <Altreus> they always break and they afford you nothing you can't do with sensible tooling :)
[18:48:24] <Altreus> especially when docker is one of them
[18:48:28] <Altreus> anyway &
[18:49:02] <ash_worksi> does something come to might particularly for the purposes of getting a current schema running in dev?
[18:49:12] <ash_worksi> rather than having to checkout the migrations
[18:49:52] <ash_worksi> come to mind*
[18:50:54] <ehuelsmann[m]> in our software, the schema is part of the software. so are the schema changes.
[18:51:08] <ehuelsmann[m]> why would you not make them part of the same code base?
[18:51:52] <ehuelsmann[m]> Aren't they part of the same product? Is there a Perl component that's ready to deal with all possible versions of the schema?
[18:51:59] <ehuelsmann[m]> or do they go hand-in-hand?
[18:53:14] <ash_worksi> ehuelsmann[m]: we don't have to maintain mutliple versions of a schema
[18:53:41] <ehuelsmann[m]> not even for rolling back?!
[18:54:32] <ash_worksi> I mean, for the sake of an application interfacing with the db; atm; my strategy for rolling back needs be is to implement sqitch
[18:54:57] <ehuelsmann[m]> right.
[18:55:15] <ehuelsmann[m]> in my application, there's a strict relationship between the Perl code and the schema.
[18:55:25] <ehuelsmann[m]> which is why they are in the same repository.
[18:55:41] <ehuelsmann[m]> you clone the repository and you can't get the wrong schema.
[18:55:51] <ash_worksi> that's pretty much the case here too, but they are not in the same repo
[18:56:07] <ehuelsmann[m]> the Perl and SQL parts are simply two parts of the same thing.
[18:56:10] <ash_worksi> in fact, most of the actual business logic here is sql
[18:56:22] <ehuelsmann[m]> so they are version-controlled as the same thing.
[18:56:25] <ash_worksi> the application is just basically an interface
[18:56:40] <ehuelsmann[m]> sure.
[18:56:52] <ehuelsmann[m]> in my application, we use JavaScript for the UI.
[18:56:57] <ehuelsmann[m]> it's in the same repository too.
[18:57:22] <ehuelsmann[m]> the JS is tied to the Perl and the SQL same way the Perl is tied to the SQL.
[18:57:26] <ehuelsmann[m]> all in one repo.
[18:58:05] <Botje> given all the talk about tying, did mean rope? ;)
[18:58:49] <ehuelsmann[m]> :-) yes. no ties.
[18:59:27] <Botje> Aw, knots. 
[19:00:03] *** Parts: art1 (~romeyke@p200300ccdf06f80032374dedad7156c5.dip0.t-ipconnect.de) ()
[19:01:52] * GumbyPAN CPAN Upload: Encode-3.12 by DANKOGAI https://metacpan.org/release/DANKOGAI/Encode-3.12
[19:02:39] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[19:02:50] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[19:04:49] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[19:04:56] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[19:04:59] <ash_worksi> thank elcaro 
[19:05:01] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[19:05:01] <ash_worksi> erm
[19:05:03] <ash_worksi> ehuelsmann[m]: *
[19:05:10] <ash_worksi> gtg
[19:05:22] <ash_worksi> thank you though :)
[19:05:25] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[19:07:32] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 256 seconds)
[19:16:28] *** Joins: gast0n (~g4570n@user/gast0n)
[19:21:17] *** Quits: habamax (~habamax@user/habamax) (Quit: leaving)
[19:33:54] *** Joins: mattil (~mattil@87-92-142-109.rev.dnainternet.fi)
[19:38:02] *** Joins: thrig (~thrig@65.113.153.50)
[19:38:17] *** Quits: mattil (~mattil@87-92-142-109.rev.dnainternet.fi) (Ping timeout: 248 seconds)
[19:42:12] <LeoNerd> Hrm. I have an xt/ directory, and ./Build test doesn't automatically run things in it.. What have I missed?
[19:43:06] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 268 seconds)
[19:43:25] *** Joins: WinterStar (~IceLight@user/icelight)
[19:43:33] <Grinnz> that's intentional, so they aren't run at installation
[19:43:54] <LeoNerd> OK. How do I run them?
[19:44:09] <mst> AUTHOR_TESTING=1 ?
[19:44:11] <LeoNerd> And surely the point is that I'd put them in MANIFEST.SKIP ?
[19:44:20] <Grinnz> no?
[19:44:35] <mst> LeoNerd: no, because users or potential contributors *may* want to deliberately run them
[19:44:36] <Grinnz> xt/ is meant to be run when testing using author tools
[19:44:46] <LeoNerd> Hmmm
[19:44:48] <Grinnz> i don't know if M::B has such a testing command or not
[19:45:12] <thrig> I just unlink the xt directory
[19:45:20] <mst> thrig: boo
[19:45:27] <Grinnz> ./Build disttest? if anything
[19:45:33] <Grinnz> no, wait
[19:45:36] <Grinnz> that would do the opposite
[19:45:58] <Grinnz> yeah, i don't see an author testing command
[19:46:12] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:588:9d9a:dab7:dccc:fa80) (Remote host closed the connection)
[19:46:23] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:588:3639:135d:ad58:d3e8)
[19:47:52] <Grinnz> my only two suggestions would be: 1) add a command that includes xt/**.t with AUTHOR_TESTING=1 set, 2) put your tests in t/ with an $ENV{AUTHOR_TESTING} gate and add a command that sets AUTHOR_TESTING=1
[19:47:57] <mst> IIRC Distar's author include just adds xt/ to the normal testing stuff
[19:48:21] <mst> since the author include doesn't get installed let alone activated on the user side
[19:48:41] <mst> LeoNerd: 'prove -l t/ xt/' or 'prove -b t/ xt/' as appropriate also works fine
[19:48:51] <mst> bonus points, you can add '-j8' to it or whatever
[19:48:53] <LeoNerd> Oh hrm I could just get into the habit of `prove`
[19:48:53] <Mandevil> Hm, I have a DBI based program that runs for long time and then suddenly it's database connection fails ... https://f.perl.bot/p/l1bqql
[19:48:54] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:48:58] <Mandevil> WTF is going on there.
[19:49:07] <LeoNerd> Plus, prove prints output in colour and regular ./Build test does not. I've never really worked out why
[19:49:10] <Grinnz> `prove` as an author tool is perfectly reasonable yes
[19:49:24] <mst> Mandevil: which autoreconnect wrapper are you using?
[19:49:32] <mst> Mandevil: DBIx::Connector ? DBIx::Handler ? something else ?
[19:49:58] <Mandevil> mst: None :)
[19:50:05] <Grinnz> well, there's your problem
[19:50:06] <mst> Mandevil: well there's your problem then
[19:50:11] <Mandevil> Ah, ok
[19:50:29] <mst> Mandevil: a $dbh represents a single TCP/whatever connection to the database, so if there's a network blip then, yeah, it's gonna go away
[19:50:31] <Grinnz> in modern database code, you should always be using one of DBIx::Connector, DBIx::Handler, DBIx::Class, or Mojo::Pg
[19:50:54] <Mandevil> Oh,ok, thanks for suggestion, I'll implement it.
[19:50:56] <Grinnz> pass that object around instead of the DBI objects, and have things retrieve a connection from it as needed
[19:51:16] <Mandevil> I learn new things every day.
[19:51:18] <mst> Mandevil: also it can't "just" reconnect - otherwise what would happen if it was in the middle of a transaction?
[19:51:20] <Grinnz> this will require changing code that uses your DBI object, but it's worth fixing
[19:51:43] <mst> Mandevil: which is why all of those tools have transaction wrappers as well
[19:51:46] <Mandevil> Sounds like a much tougher nut.
[19:51:59] <mst> that's why we have CPAN modules to handle it for us
[19:52:05] <Mandevil> Hm, like retrying failed transactions?
[19:52:23] <mst> Mandevil: depends on how you set them up - see the documentation of the different tools for details
[19:52:33] <Mandevil> Sure, I'll do.
[19:52:38] <Grinnz> mysql in particular likes to disconnect you if you send an overly large packet - so if this happens mid transaction, it can't just reconnect
[19:52:50] * mst shakes fist at that "feature"
[19:52:58] <Mandevil> I'm not using mysql fortunately.
[19:53:02] <Grinnz> lucky you
[19:53:15] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[19:53:24] *** Joins: thrig (~thrig@65.113.153.50)
[19:53:59] <Grinnz> the other benefit of the connection pooling modules is they're fork safe, you can use them between different processes and they will create a new connection as necessary when something asks for one
[19:54:15] <Grinnz> because individual DBI connections cannot be shared between processes
[19:54:32] <Mandevil> Yeah, I know, I use forking, but I reopen db connections.
[19:54:46] <Grinnz> well, once you set up a connection manager, you won't have to :)
[19:54:54] <Mandevil> Good
[19:56:57] * GumbyPAN CPAN Upload: Crypt-SPAKE2Plus-0.02 by ABBYPAN https://metacpan.org/release/ABBYPAN/Crypt-SPAKE2Plus-0.02
[19:56:58] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:59:40] *** LSD is now known as acidsys
[20:00:21] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[20:00:31] *** Joins: thrig (~thrig@65.113.153.50)
[20:01:37] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20020C0F134D66005E0.catv.pool.telekom.hu)
[20:04:08] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[20:06:48] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:06:54] *** Joins: celphi (uid97751@user/celphi)
[20:07:02] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 256 seconds)
[20:08:19] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Remote host closed the connection)
[20:08:46] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:08:52] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 272 seconds)
[20:09:12] *** Joins: Su-Shee (~Susanne@p4ffc7b5a.dip0.t-ipconnect.de)
[20:11:21] *** Quits: Su-Shee_ (~Susanne@p4ffc724f.dip0.t-ipconnect.de) (Ping timeout: 276 seconds)
[20:13:56] *** Joins: WinterStar (~IceLight@user/icelight)
[20:14:49] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Read error: Connection reset by peer)
[20:15:08] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[20:15:45] *** Joins: mattilinnanvuori (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:19:02] *** Quits: mattilinnanvuori (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Remote host closed the connection)
[20:19:21] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 248 seconds)
[20:19:35] *** Quits: gryphn (~gryphon@84.17.45.19) (Quit: kthxbye)
[20:21:09] *** Joins: WinterStar (~IceLight@user/icelight)
[20:23:57] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:29:08] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20020C0F134D66005E0.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[20:35:21] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[20:37:02] * GumbyPAN CPAN Upload: Search-Elasticsearch-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-7.714
[20:37:02] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-6_0-Async-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-6_0-Async-7.714
[20:37:06] * GumbyPAN CPAN Upload: Search-Elasticsearch-Async-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Async-7.714
[20:37:12] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-7_0-Async-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-7_0-Async-7.714
[20:37:19] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-6_0-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-6_0-7.714
[20:37:26] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-7_0-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-7_0-7.714
[20:42:02] * GumbyPAN CPAN Upload: Search-Elasticsearch-Cxn-NetCurl-7.714 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Cxn-NetCurl-7.714
[20:46:37] <Mandevil> Hm, using DBIx::Connector means I have to use RaiseError = 1
[20:46:42] <Mandevil> Which I don't currently.
[20:48:01] <shlomif> Mandevil: can you subclass to override it?
[20:48:36] <Mandevil> No, it's required for it to work.
[20:48:54] <Mandevil> It's not bad, just more work than it would otherwise be
[20:48:58] <shlomif> Mandevil: ah
[20:49:01] *** ether_ is now known as ether
[20:50:49] <Grinnz> Mandevil: right, it's required for its connection handling to work properly, and we recommend it anyway for maintainable code
[20:51:50] <Grinnz> there is no case where a database query throws an error where you wouldn't want to handle it in some way, generally - so RaiseError or a HandleError that throws an exception are much more maintainable than making sure you remember to check $dbh->err after every single query and action
[20:53:11] <Mandevil> Grinnz: Yeah, I was considering switching to having RaiseError = 1, but it was low priority.
[20:53:25] <Mandevil> But it's got higher now :)
[20:54:58] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Read error: Connection reset by peer)
[20:55:15] <mst> Mandevil: "not using RaiseError" is, honestly, pointing a selection of guns at both of your feet, your scrotum, and your forehead IME
[20:56:17] <Mandevil> mst: Yes, I am making the switch NOW
[20:56:22] <Altreus> RaiseError => 0 is ErrorsAreAcceptableToMe => 1
[20:56:34] <LeoNerd> ON ERROR RESUME NEXT
[20:56:36] <Altreus> PHP => 1
[20:56:47] <Mandevil> The copyright notice for the code I am working on reads 2000-2021....
[20:56:53] <Mandevil> so there's lot of cruft.
[20:56:54] <Altreus> 19-2000
[20:57:06] <Altreus> ah, they're under the impression they need to update that every year are they
[20:57:11] <Altreus> shlomif: don't you have an article about that?
[20:57:31] <thrig> copyright 1999 - 19121
[20:57:37] <mst> thrig++
[20:57:54] <Mandevil> I mean, mine's 21 year old project.
[20:58:17] <Mandevil> So some things are done badly in it.
[20:58:30] <shlomif> Altreus: about copyright years?
[20:58:33] <Altreus> The part where it's still the same project is part of it
[20:58:35] <Altreus> shlomif: yeah
[20:59:11] <shlomif> Altreus: i'm too lazy to  update them
[20:59:28] <Altreus> :)
[20:59:45] <Altreus> I thought you had an article explaining that there's no need to update the copyright year every year
[20:59:57] <Altreus> I do recall you have one about the meaningless of "the same terms as Perl5 itself"
[20:59:59] <Grinnz> i've been corrected on that matter, there's still not any legal reason to update them but there's also not a legal reason not to if there's new releases
[21:00:01] <Altreus> meaninglessness
[21:00:09] *** Joins: e1f (~user@141.117.1.183)
[21:00:31] <Altreus> well sure, but if there's no reason to do a thing then there's also no reason to have any process that does the thing
[21:00:35] <Grinnz> basically "copyright law is too stupid for software"
[21:00:47] <Altreus> that rings true
[21:01:01] *** Joins: randir (~randir@95-25-151-74.broadband.corbina.ru)
[21:01:03] <shlomif> Altreus: it's not meaningless, just (IMO) sub-optimal
[21:01:16] <thrig> lawyers need to eat, too
[21:01:41] <Grinnz> eh, human flesh is plentiful
[21:01:51] <Mandevil> BTW, DBI only throws string as error, no error object?
[21:02:07] <Grinnz> generally
[21:02:11] <Mandevil> Alright
[21:02:23] <Grinnz> in projects where i care enough, i always use HandleError to throw a nicer message/object
[21:02:28] <Altreus> getting people to throw objects is an uphill battle, especially when back-compat is on the line
[21:02:38] <Altreus> so yeah, better to wrap it yourself
[21:02:43] <Altreus> I bet there's a module that monkey-patches it
[21:02:43] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[21:02:55] <mst> there've been multiple efforts to try and make it possible to get error exceptions out of DBI but it's a non-trivial problem
[21:02:58] <Grinnz> no need to monkey patch, HandleError is a builtin feature
[21:03:05] <mst> Altreus: I believe the DBI RootClass system means there's no need to that
[21:07:39] <Altreus> Grinnz: sure, but you have to provide a subref, so if you wanted a particularly intelligent one you'd be repeating yourself a lot
[21:07:53] <Altreus> I guess the fact mst hasn't just Done It already speaks to the complexity of it
[21:08:05] <Grinnz> once per project, and i've only wanted to do it in one project, so
[21:08:07] <Altreus> not like the DB servers are throwing objects
[21:09:00] <Grinnz> i don't think it's complexity so much as simplicity
[21:09:07] <Grinnz> HandleError is literally just a subref that you tell what to do
[21:09:12] *** Joins: Pali (~pali@user/pali)
[21:09:22] <Grinnz> different projects would probably want different kinds of exception objects
[21:09:37] <Grinnz> at which point there's no gain from a common patch
[21:09:45] <Altreus> mm, generally I've found myself doing something like   if ($error =~ /string that looks like row already exists/)
[21:09:56] <Grinnz> oh, that's more specific to what you're doing
[21:09:59] <Altreus> So I expect there's a set of useful types that everyone wants
[21:10:02] <Grinnz> not suitable for HandleError imo
[21:10:05] <Altreus> connection errors, data errors, etc
[21:10:18] <Grinnz> yeah i would not want to do that
[21:10:25] <Altreus> Don't really have a list but instinctively I feel like these things fall into categories
[21:10:43] <Altreus> "Already exists" is probably super common, for example, but spelled differently across systems
[21:10:51] <Grinnz> but i havent drank the type koolaid in general
[21:10:56] <Altreus> literally the only one I can think of
[21:10:58] <Altreus> :D
[21:11:31] <mst> being able to handle "FK violation", "UK violation", and "connection filled its diaper" separately at the very least could be useful
[21:11:31] <Grinnz> i've made do with constructing queries such that errors indicate actual problems
[21:11:45] <Altreus> The type koolaid tastes a lot better when you can implicitly test the type of the object in the catch
[21:11:45] <Grinnz> and they get logged, and that's that
[21:12:11] <Grinnz> yeah my main thing is that i don't want to throw a bunch of object construction overhead in every query in the system
[21:12:13] <Altreus> "already exists" lets you easily hack in an upsert for servers that don't have one natively
[21:12:28] <Grinnz> luckily i don't use any of those
[21:12:37] <mst> ON DUPLICATE KEY DO INSTEAD CRY AT THE VERBOSITY OF STANDARD SQL
[21:12:55] <Altreus> Then I suspect your use case is narrower than the subject at hand :)
[21:12:58] <thrig> you seem UPSERT about something
[21:13:06] <Grinnz> perhaps it is you who is narrower
[21:13:18] * mst is narrow, but also dense
[21:13:43] <Altreus> It's you who's out, Gobby
[21:14:15] <Altreus> mst: critically?
[21:15:08] <mst> Altreus: only when somebody smashes two idiots together too close to me?
[21:15:54] <Altreus> not sure which of those roles I'm likely to fulfil so I'mma stand over here
[21:16:04] <thrig> LUSER Hadron Collider
[21:24:24] <Mandevil> Sigh, I'm using Try::Tiny... I can't return from catch block.
[21:24:32] <zgu> mst: i think you mean 'CRY FROM LEFT AND RIGHT EYES AT LANGUAGE ATTRIBUTE VERBOSITY OF SQL AS SPECIFIED BY STANDARD'
[21:25:13] <thrig> pretty sure you need a CROSS JOIN to involve both eyes
[21:25:50] <zgu> or maybe CRY WITH TEARS
[21:27:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[21:28:33] *** Quits: ufobat (~martin@dynamic-095-117-077-166.95.117.pool.telefonica.de) (Ping timeout: 268 seconds)
[21:29:13] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Ping timeout: 248 seconds)
[21:32:14] *** undercaffeinated is now known as dilfridge
[21:35:36] <Grinnz> Mandevil: would you like to talk about our lord and savior Feature::Compat::Try
[21:37:08] * GumbyPAN CPAN Upload: TeX-Encode-2.010 by ATHREEF https://metacpan.org/release/ATHREEF/TeX-Encode-2.010
[21:39:55] <Altreus> Mandevil: just die again!
[21:39:57] <Altreus> :D
[21:49:43] *** Quits: woei (~quassel@cust-245-64-110-94.dyn.as47377.net) (Quit: quit)
[21:50:01] <Mandevil> I already converted to Syntax::Keyword::Try, the only true god :)
[21:50:20] <LeoNerd> FCT is just a wrapper for that, or the native core feature
[21:50:29] <mst> Mandevil: Feature::Compat::Try wraps that so when core support arrives your code will naturally switch
[21:51:03] <Mandevil> So, is that the recommended way in lieu SKT?
[21:51:26] <LeoNerd> I'd suggest it if you can, yes. It has fewer features exposed, but it gives you a smooth upgrade to core perl's  use feature 'try';
[21:51:28] <mst> Mandevil: it is now LeoNerd's invented it, yes
[21:51:45] <Mandevil> I didn't commit yet, so I can change it.
[21:52:00] <LeoNerd> It doesn't let you do typed catch, or finally; because core perl doesn't yet have those. Once we work out a future path for those I expect we'll add them
[21:53:04] <Grinnz> basically as long as you're not using finally, it's a drop in replacement for SKT
[21:53:11] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[21:53:23] <Mandevil> I don't.
[21:58:23] <revhippie> i hate our software so much
[21:58:33] <buZz> delete it
[21:58:40] <buZz> revhippie: start with removing the french files
[21:58:41] <buZz> rm -fr /
[21:58:46] <buZz> ^_^
[21:58:53] <mst> revhippie: I hate pretty much all software, especially ths tuff I wrote last year
[21:58:55] <thrig> "nuke it from orbit" looks better on the security compliance review
[21:59:12] <revhippie> thrig: "Changelog: removed all bugs"
[21:59:12] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 250 seconds)
[21:59:24] <buZz> :D
[21:59:46] <LeoNerd> Surely "removed all /known/ bugs", thus leaving the opportunity for adding new currently-unknown ones
[22:00:56] * thrig pokes tepidly at Algorithm::QuadTree... like why is there a 0 in a list of arrayrefs after deleting something
[22:02:08] <mst> thrig: maybe it did delete $ary[$idx] which turned it into an undef which got numifed by something else?
[22:02:10] * GumbyPAN CPAN Upload: Mojolicious-9.20 by SRI https://metacpan.org/release/SRI/Mojolicious-9.20
[22:03:00] <Altreus> tepidly or trepidly?
[22:07:27] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[22:10:28] <huf> LeoNerd: you assume you havent introduced new bugs by removing the old ones? :D
[22:10:49] <huf> and of course, some of the expected behavior relied on some of the bugs
[22:11:11] <huf> one man's feature is another man's terrorist
[22:11:41] <thrig> freedom fighter
[22:11:59] <huf> ever had a bug you liked so much you didnt really want to remove it?
[22:12:05] <huf> a clever one
[22:12:11] <thrig> and something about gorilla warefare, but I'm not sure how they got involved
[22:12:28] <huf> sell lager
[22:12:34] <mst> thrig: we started it by killing Harambe
[22:12:36] <huf> or something like that, according to the french
[22:13:02] <Altreus> ever had a bug, you wanted, you want, that you, that you a bug, that you wanted, to want, a bug...
[22:13:10] <Altreus> that you could do anything?
[22:14:03] <huf> no, unfortunately i never had enough dedotated wam
[22:14:19] <huf> i've only ever been able to do something due to this limitation
[22:14:46] <thrig> you could remix Kafka's "The Metamorphosis" and "Las ruinas circulares" by Borges
[22:15:21] <huf> even though the world is grey and the mountains old?
[22:16:21] <Altreus> Actually they were created last Thursday with the appearance of great age
[22:17:42] <huf> this is broadly true
[22:17:56] <huf> except for the details
[22:18:06] <Altreus> none of them can be proven
[22:19:31] <gordonfish> huf: In california, the world is very very grey
[22:19:49] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:588:3639:135d:ad58:d3e8) (Remote host closed the connection)
[22:19:50] <thrig> dorian grey? or some other kind
[22:19:52] <Adura> Also carcinogenic.
[22:20:11] <Altreus> it's probably gray in california
[22:20:17] <huf> gordonfish: well yes, obviously
[22:20:24] <gordonfish> thrig: Like the kind from wind blowing smoke from all the wild fires to the point that it's like an overcast/foggy day but you can't breath
[22:20:31] <thrig> no I'd use grey even if in CA
[22:20:33] <huf> this is what happens when the forge's fire is ashen cold and darkness dwells in some people's halls
[22:21:23] <Altreus> I don't see why I should waste electricity lighting a place I rarely go
[22:23:09] <huf> you dont visit your darkness? but family!
[22:24:32] *** Joins: woei (~woei@cust-245-64-110-94.dyn.as47377.net)
[22:26:30] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 250 seconds)
[22:28:50] <gordonfish> I'd take a picture but it'd be easier to just open paint and do a floodfill of #CCCCCC
[22:29:38] <huf> is it the burning?
[22:29:42] <huf> or just normal smog?
[22:30:02] <Altreus> end of work
[22:30:05] <gordonfish> <gordonfish> thrig: Like the kind from wind blowing smoke from all the wild fires to the point that it's like an overcast/foggy day but you can't breath
[22:30:08] <Altreus> byebye
[22:30:11] * Altreus &
[22:30:29] <huf> gordonfish: sounds excellent
[22:30:40] <huf> looks like you either got fire this summer, or flooding...
[22:30:47] <gordonfish> huf: Yes, it's great, so long as you don't require air
[22:31:06] <huf> you know, the plot of spaceballs seems more and more plausible...
[22:31:08] <gordonfish> I don't get flooding here thankfully
[22:31:21] <Adura> Not requiring air is great for reducing virus transmission.
[22:31:33] <huf> oh yeah, the dead never get sick
[22:31:38] <gordonfish> huf: Why didn't any ever tell me my ass was so big?
[22:31:41] <huf> the _very_ dead
[22:31:47] <huf> the recently dead still require oxygen of course
[22:32:57] <gordonfish> Living or non-living?
[22:34:05] <gordonfish> I'd really like to romero the answer
[22:50:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:50:10] *** jess is now known as j
[22:50:28] *** j is now known as jess
[22:52:50] *** Joins: dimbag (~dimbag@pppoe38h127.ppp.kmv.ru)
[22:53:30] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 240 seconds)
[22:57:02] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:58:28] *** Joins: jpmh (uid510532@id-510532.brockwell.irccloud.com)
[23:07:01] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 268 seconds)
[23:11:39] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[23:14:16] <MikeGeorge[m]> What if you're only mostly dead?
[23:14:50] <mason> Pining for the fjords!
[23:14:53] <MikeGeorge[m]> <huf> "the recently dead still require..." <- What if you're only mostly dead?
[23:15:29] <mst> the fjords need oxyen too!
[23:15:33] <mst> *oxygen
[23:20:36] <huf> MikeGeorge[m]: that's just life
[23:20:52] *** Joins: k-man (~jason@user/k-man)
[23:21:02] <huf> you probably need to ingest some poison
[23:21:42] <huf> mst: Sauerstoff
[23:21:49] <huf> one of the most batshit insane german words :D
[23:22:04] <huf> (it's as fucked up as you people's natrium and kalium)
[23:22:06] *** Quits: choroba (~E.Choroba@46-13-200-141.customers.tmcz.cz) (Quit: Leaving)
[23:23:04] *** Joins: GoneDomattps (~domattps@2600:4040:1115:800:6e62:6dff:feec:930f)
[23:26:41] *** jfoutais1 is now known as jfoutaise
[23:29:25] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:38:39] <gordonfish> mst: oxyen, the ultimate currency cleaner from Japan?
[23:38:55] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:39:07] <mst> gordonfish: oxyen, the native currency of Moo?
[23:40:39] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Quit: Leaving)
[23:51:05] *** Joins: deadmarshal (~deadmarsh@95.38.113.189)
[23:55:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.189) (Ping timeout: 268 seconds)
[23:58:21] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
