[00:00:57] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:13:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:21:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[05:26:35] *** Joins: notzmv (~zmv@user/notzmv)
[06:36:53] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[07:04:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[07:18:13] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[13:21:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[14:05:21] <ninjin> Is it not `read(f, DataType)` dTal?
[14:50:52] <dTal> is there a UInt10 data type?
[14:56:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:318d:a6b2:88ea:7ac0) (Quit: Leaving)
[19:58:53] <^[> "Currently, only sizes that are multiples of 8 bits are supported"
[23:36:27] <dTal> So I thought.
[23:37:09] <dTal> So again - idiomatic ways to read data in groups of 10 bits?
[23:40:03] <dTal> so far I have julia> vec(sum((2 .^ (0:9)).*reshape(collect(Iterators.flatten(Iterators.map(a->digits(a,base=2,pad=8),MyArray))),(10,:)),dims=1))
[23:40:09] <dTal> which is pretty atrociously slow
[23:40:52] <dTal> There's also Iterators.partition which seems to be type-unstable
[23:59:43] <^[> dTal: You could read 5 bytes at a time and twiddle the bits until the 4 values fall out.
