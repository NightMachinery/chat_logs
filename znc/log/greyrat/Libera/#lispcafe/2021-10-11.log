[00:10:06] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[00:16:11] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[00:21:14] <edgar-rft> being a slave of the language isn't godd enough for you?
[00:21:51] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[00:31:33] <gilberth> edgar-rft: Nope. I don't like being commanded.
[00:35:46] <edgar-rft> not even by Commander Kirk?
[00:36:41] <edgar-rft> -> https://en.wikipedia.org/wiki/James_T._Kirk :-)
[00:51:55] <manicennui> https://www.orlandosentinel.com/news/nationworld/os-ne-gruesome-halloween-decor-dallas-artist-20201027-ez5f7qlw5bcw7nz4grs52otfs4-story.html
[00:52:22] <manicennui> Man’s Halloween decor so gruesome, someone called cops
[00:52:26] <manicennui> That's how you know you did it right.
[00:56:59] <dimadima> saw a pole-dancing skeleton while driving the other day and was wondering whether it was a source of controversy
[00:57:23] <hayley> Good morning everyone!
[00:58:01] <dimadima> good morning hayley 
[00:58:31] <selwyn> hi hayley
[00:58:37] <hayley> https://www.youtube.com/watch?v=1G-YVPtA3GQ
[01:12:57] * hayley reads the next installment of the phone encoding benchmark shenanigans and grumbles
[01:15:09] *** Quits: pjb (~pjb@user/pjb) (Quit: restart for macOS upgrade)
[01:15:40] <hayley> First, I told bpecsek he wrote incorrect code for WORD->NUMBER with fixnum arithmetic. And the guy that does this shit nearly figured out my type splitting trick anyway.
[01:16:46] <hayley> And I am not going to settle for "eh, it's afast, but not systems language fast" moreso when I have hash tables which hypothetically should be faster.
[01:20:25] <hayley> https://i.redd.it/9s2ig42xeis71.jpg
[01:22:27] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Ping timeout: 265 seconds)
[01:26:13] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:27:46] *** Quits: random-nick (~random-ni@87.116.183.117) (Ping timeout: 265 seconds)
[01:42:56] <hayley> Hm, they are teaching us security stuff that we can't practise outside of university. We're going to pwn things?
[01:54:16] *** Quits: clothespin_ (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[02:05:15] *** Joins: pjb (~pjb@user/pjb)
[02:45:35] <gilberth> Hmm, somehow the telnetd I found and the CADR don't understand each other. They exchange some TELNET options, I get "login:", type my user name with echo off (sic!), and telnetd says "Login incorrect". Hmm. A pity.
[02:51:13] <gilberth> Ah, Linux likes the CADR. I am in!!111eleven(TM)
[02:52:08] <selwyn> great
[02:54:13] <gilberth> Though with a dumb terminal, this would leave me to ed(1). :(
[02:54:50] <gilberth> But there is SUPDUP, too. Need to find a daemon for that.
[02:56:43] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:56:47] <gilberth> But I can type an "ä" by a c-h " :-) Or underline with a^H_
[02:56:57] <dave0> maw
[02:58:05] <gilberth> Hello, dave0!
[02:58:32] <gilberth> I am having fun telnetting from the CADR into my Linux box.
[02:59:46] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[03:00:12] <dave0> maw gilberth 
[03:00:22] <dave0> cool
[03:00:47] <hayley> https://www.youtube.com/watch?v=LPfFEGbjE4M
[03:04:16] * hayley uploaded an image: (25KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ignJkPdCFrnoRaYWoFwtXCdq/Screenshot_2021-10-11_10-40-59.png >
[03:09:19] <selwyn> sigh
[03:09:24] <selwyn> doing shitty nighttime writing
[03:12:42] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[03:13:02] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[03:26:46] <selwyn> https://ukdefencejournal.org.uk/classified-tank-specs-leaked-on-war-thunder-game-forums-again/
[03:31:24] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:31:54] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:36:21] <hayley>  https://www.youtube.com/watch?v=falBpZLT1bs the Single Static Assignment scam
[04:01:17] <hayley> That link is meant to be https://www.youtube.com/watch?v=b9n2TX-86Vk actually.
[04:11:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[04:13:05] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[04:27:38] <dave0> bbl
[04:27:41] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[04:41:46] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[04:48:49] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:05:20] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:b4ef:77e6:c03c:c923) (Remote host closed the connection)
[05:06:41] *** Quits: manicennui (uid349235@tinside.irccloud.com) (Read error: Connection reset by peer)
[05:10:06] <mfiano> morning
[05:15:02] <hayley> Morning mfiano
[05:16:31] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[05:18:37] <mfiano> I gave up on the BSD. Some of my software has strange bugs.
[05:19:23] <mfiano> One seemed like a data race and made my head spin. What's odd is it is the same release version and same config as my Linux install.
[05:23:08] <gilberth> mfiano: We could found a club then. I am not fed up by BSD per se, but by macOS.
[05:24:02] <mfiano> I hear you. I haven't liked the Mac since the powermac of the late 80's :)
[05:24:49] <gilberth> Nah, NEXTStep^WMacOS X is fine.
[05:26:38] <mfiano> It was about then I learned to code and became careful about what I installed on my computer (after reading lots of code)
[05:26:40] <gilberth> Macs before that were toys, but Apple tries very hard to make them toys again.
[05:26:55] <mfiano> I guess that is why I also prefer simple CLI applications to this day.
[05:28:18] <gilberth> I don't mind different fonts and colours, and windows. But besides a PDF viewer and a web browser, and my CAD application I have little use for a _G_UI.
[05:29:13] <mfiano> Same. I only use Emacs and a Web browser, both not by choice.
[05:29:21] <gilberth> But then I like virtual memory, memory protection for those damn C programs, and a preemptive scheduler.
[05:29:30] <mfiano> and yes I know about -nw
[05:30:13] <gilberth> Emacs is very much my choice, and I really enjoyed the first X11 port, called Epoch. GNU Emacs was very late to adopt a window system and things like syntax highlighting.
[05:32:07] <mfiano> I have used vi for like 30 years now, and have been working on better Lisp integration for a very long time so I don't have to use Emacs, but very sparingly. Editor configuration is the worst kind of meta-programming for me :)
[05:33:39] <hayley> Web: ❌ mostly dead documents ❌ too much text ❌ CUA bindings ✔️ Lars Bak
[05:33:56] <gilberth> Well, I am a die-hard Emacs user. I can't remember anything else beside those Wordstar-ish stuff with CP/M-80.
[05:34:17] <hayley> Networked Self: ✔️ ideal gas simulation ✔️ direct manipulation ✔️ Emacs bindings ✔️ Lars Bak
[05:35:42] <gilberth> But Emacs, too, suffers from a certain push to be "modern".
[05:36:16] <hayley> "Just put TypeScript and Rust in gnumacs lol"
[05:36:31] <mfiano> I respect that opinion. For me, vim uses far less resources for the functionality I need. It also compiles in 5s on my old hardware, as opposed to 5min with Emacs.
[05:37:25] <hayley> (I didn't make this up, sadly)
[05:37:28] <gilberth> Well, compiling Emacs is not one of my hobbies. And besides, 8MB is not much.
[05:38:15] <mfiano> Plus I like that I get truecolour support in vim on the CLI. Emacs has no such thing
[05:38:29] * hayley notes that the statistics people still put in code to disable SSL (basically) before fetching files in Python.
[05:39:14] <gilberth> That do you mean by "truecolour"?
[05:39:31] <hayley> 24-bit colour?
[05:39:40] <mfiano> Yes. > 256
[05:40:06] <gilberth> Emacs can display as many colours as you want. So I don't get it.
[05:40:21] <mfiano> Not in the terminal on Linux.
[05:41:20] <gilberth> Then don't run it in a terminal. Run it as an X11 application. Why in a terminal to begin with? GNU Emacs has support for X11 already.
[05:42:52] <gilberth> How'd you make a second frame, while in a terminal? emacsclient?
[05:43:23] <mfiano> Simple answer: I am a terminal guy. More technical answer: I hop around to many different computers throughout the day due to my lifestyle, so I am typically coding over MOSH.
[05:43:56] <gilberth> What is MOSH?
[05:44:17] <mfiano> SSH over UDP, useful for roaming connections.
[05:44:59] <mfiano> As mentioned, Emacs is one of two of my GUI applications, because of this discussion; I haven't quite finished my vim Lisp integration.
[05:45:01] <gilberth> Ah, and because the kids broke X11, a graphical application would be too slow?
[06:03:23] <hayley> "In order to most fully appreciate the experience of interacting with a lively, responsive world of objects, effortlessly diving into change them and create more, freely mixing data and programs, and only getting coffee when you are tired instead of when you change your program, you will have to obtain the Self 4.0 public release and try it out for yourself. May your journey be fruitful."
[06:03:26] <hayley> Is this an ad or a paper?
[06:04:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[06:06:13] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[06:51:25] <hayley> https://twitter.com/cs188/status/1447394162534490114
[06:54:09] *** Quits: semz (~none@user/semz) (Ping timeout: 265 seconds)
[06:56:51] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:06:51] *** Joins: semz (~none@user/semz)
[07:37:28] *** Joins: donovanquixote (~Donovan@c-98-246-129-179.hsd1.or.comcast.net)
[10:05:44] <mfiano> moon-child, hayley: What is a great book/resource for learning regular expressions? I know the basics, but rarely need them in the domains i normally work in so I could even use a refresher on the basics, but would like to learn them in-depth too.
[10:06:14] <hayley> I haven't really read much on using regular expressions, sorry.
[10:08:12] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:09:40] <moon-child> nor I.  I don't know very much about them, and what I do know I've picked up piecemeal as I've needed it
[10:10:12] <moon-child> as you are learning raku I will mention that raku regexes are very different to the regexes used by every other language (and superior in a few important respects)
[10:10:37] <mfiano> Interesting
[10:11:07] <mfiano> Oh I think I read that the rules are extracted into methods or some such
[10:11:49] <mfiano> I am not quite learning Raku yet. Haven't been able to build it yet
[10:12:02] <mfiano> Maybe I should just use an older binary release
[10:17:51] <susam> mfiano: Learning regular expressions from what perspective: As a user of regex? As an implemeter of regex? As a scientist to learn the theory of regex?
[10:18:32] <susam> By implementer, I meant an implementer of a regex engine.
[10:18:33] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.2)
[10:18:35] <hayley> Unrelated, from a statistics quiz: "Former US President Bill Clinton is estimated to have an IQ of 149" Who gets paid to estimate this shite?
[10:18:53] <moon-child> lmao
[10:18:58] <susam> haha
[10:19:01] <hayley> I think the former. I implemented regexen but I haven't found any creative uses of them.
[10:19:35] <hayley> At least, the stuff I do usually requires a "real" parser, and that doesn't require a lexer even.
[10:20:11] <moon-child> death to parsers!
[10:20:16] <moon-child> death to text!
[10:20:22] <mfiano> susam: From the perspective of a user of Raku (Perl 6) :)
[10:20:44] <hayley> Those real parsers tend to consist of (alexandria:string-case (read-word stream) ("get" ...) ("block" ...) ...)
[10:20:48] <dave0> that depends on what your definition of "149" is
[10:21:04] <hayley> 149 in decimal? Nah. Octal?
[10:21:10] *** Quits: donovanquixote (~Donovan@c-98-246-129-179.hsd1.or.comcast.net) (Quit: Leaving)
[10:21:19] <hayley> Er, 9 isn't octal.
[10:21:23] <hayley> There goes that joke.
[10:21:31] <dave0> lol
[10:22:10] <moon-child> hmm.  Base 9 it's still 126
[10:22:12] <moon-child> :/
[10:22:28] <hayley> 149 ± 100 (probably mostly -100)
[10:28:07] <susam> mfiano: Oh then, I would recommend reading the Raku's official documentation on regex. It is pretty good. Since there is no one true regex but various flavours of it, it is best to read the documentation for the exact flavour one is working on.
[10:30:24] <susam> One of my pet peeves is that not even POSIX settles on a single flavour. grep uses basic regular expression (BRE) whereas grep -E (or equivalently, egrep) uses extended regular expression (ERE), and sed uses BRE again. Most programming languages like Python, JavaScript, Perl, Raku, etc. use something like ERE-on-steroids with more bells and whistles on top of ERE.
[10:31:38] <moon-child> perl, js, python, and posix regex are largely commensurate.  There are little quirks you have to watch out for.  But again, raku's regex are very different
[10:33:17] <susam> Agree
[10:34:27] <susam> One of my favourite comics on numeral systems and bases: http://web.archive.org/web/20090125051251/http://cowbirdsinlove.com/43
[10:34:46] <moon-child> hehe
[10:35:17] <moon-child> I thought I was original for coming up with that ('every base is base 10').  Guess it's pretty obvious :P
[10:35:39] <hayley> 2 + 2 = 10...in base 4!
[10:41:21] <mfiano> I love this trick https://gist.github.com/mfiano/f8584bd21ee5a7dea25188b5a4577ea9
[10:41:43] <mfiano> Since a period after an integer is defined to always read as an integer in base 10
[10:43:06] <mfiano> CL-USER> (+ 11 10.)
[10:43:08] <mfiano> 13 (4 bits, #xD, #o15, #b1101)
[10:43:10] <mfiano> :)
[10:43:13] <moon-child> yes, a horrid mistake :/
[10:43:24] <moon-child> try also: (format nil "~b" 10.0)
[10:44:26] <susam> !!
[10:44:38] <moon-child> susam: first time? :)
[10:44:51] <mfiano> I wouldn't expect that to alter the result since it is a float and their representation is not standardized in CL
[10:45:07] <moon-child> mfiano: I mean, with default *read-base*
[10:45:14] <moon-child> so 10.0 is a decimal ten
[10:45:26] <moon-child> ~b, you would expect it to print out a binary representation.  But because it's a float it prints it out as decimal isntead
[10:45:56] <mfiano> Again. That is what I expect.
[10:46:18] <susam> Yes, never thought about this before. But it makes sense.
[10:46:35] <moon-child> why?  If you can produce a string of decimal digits from an unspecified representation, you should as easily be able to produce a string of binary digits
[10:46:39] <mfiano> CL only defines conversion between integers to other bases.
[10:46:43] <susam> mfiano: You have a nice profile pic on GitHub. How did you make that?
[10:46:49] <mfiano> inkscape
[10:46:51] <moon-child> and obviously due to precision limits you're not going to be able to guarantee read=print format anyway
[10:47:20] <mfiano> But there is an SBCL extension to broadcast across a vector: (format nil "~b" #(10 11 12))
[10:49:07] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (*.net *.split)
[10:49:07] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[10:49:08] *** Quits: gilberth (~gilberth@p5492d7b6.dip0.t-ipconnect.de) (*.net *.split)
[10:49:08] *** Quits: Alfr (~Alfr@user/alfr) (*.net *.split)
[10:49:08] *** Quits: dimadima (~user@80.58.238.35.bc.googleusercontent.com) (*.net *.split)
[10:49:08] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[10:49:08] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[10:49:21] <moon-child> byee
[10:54:20] *** Joins: makomo_ (~makomo@user/makomo)
[10:54:48] <susam> Curious if anyone of you use Common Lisp for professional work? The only Lisp dialect I have seen used in the IT industry so far is Clojure.
[10:55:28] <hayley> Does it count if I used to work, it wasn't really professional, and it was on a CL compiler?
[10:56:54] <susam> Yes, it counts of course. Trying to get some insights. Please share the details and links if you can.
[10:57:56] <hayley> https://github.com/robert-strandh/SICL/commits?author=no-defun-allowed April to October
[10:58:05] <mfiano> I used to. Not anymore.
[10:58:07] *** Joins: random-nick (~random-ni@87.116.183.117)
[10:58:07] <hayley> Usually I wouldn't charge, but the government wanted me to get a job, so I did.
[10:58:46] <hayley> https://twitter.com/matchatia/status/1446973589559734275 Rule: fucking can be inserted only before a stressed syllable
[10:59:30] <moon-child> i mean that makes sense
[10:59:38] <moon-child> cuz the emphasis is on the first syllable of fucking
[10:59:44] <moon-child> you wouldn't want to have two stressed syllables in a row
[11:00:35] <hayley> Now I believe you are obliged to bug beach, stylewarning, froggey, drmeister, and anyone else I can think of that does professional work with Common Lisp.
[11:00:51] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[11:00:51] *** Joins: sm2n (~sm2n@user/sm2n)
[11:00:51] *** Joins: dimadima (~user@80.58.238.35.bc.googleusercontent.com)
[11:00:51] *** Joins: gilberth (~gilberth@p5492d7b6.dip0.t-ipconnect.de)
[11:00:51] *** Joins: Alfr (~Alfr@user/alfr)
[11:00:51] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[11:00:51] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[11:00:51] *** calcium.libera.chat sets mode: +o gilberth
[11:00:52] <susam> hayley: Wow! That is a large volume of work. Very nice. How did you get paid for that work? Isn't that beach's project? He managed to get you paid for it? How?
[11:01:56] <hayley> I asked for AU$30/hour, which ended up about $3,000 or so. Yes, it's beach's project and he paid me. Helps when he gets paid for research too.
[11:01:58] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 265 seconds)
[11:03:03] <susam> hayley: That is great to know. So it worked out nicely.
[11:04:15] <hayley> Yes. I say it's not professional as I ended up doing jack all for work (recall this is over 5 months), probably like 10 hours/week at most, and barely any when university got tough.
[11:11:05] <hayley> Honestly, thinking too hard about x86-64 gave me headaches, so I couldn't do more than 2.5 hours a day anyway.
[11:15:01] *** Joins: makomo_ (~makomo@user/makomo)
[11:32:27] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[11:32:59] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[11:35:23] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:09] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:20] *** Joins: robin (~robin@user/terpri)
[11:41:40] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[12:02:44] *** Joins: makomo_ (~makomo@user/makomo)
[12:05:34] * shka replaced gatreon greens with kailh box jades
[12:05:56] <shka> much better
[12:12:20] <mfiano> I had them, but ended up switching to kailh box heavy pale blue's
[12:17:35] <ck_> those names are becoming longer and longer
[12:21:09] <shka> mfiano: yeah, those clicks are intense 
[12:22:23] <shka> i would not like those on a keyboard
[12:22:34] <shka> but on the macropad they are fine
[12:23:10] <mfiano> I don't mind clicky keys, but if I recall correctly it was just straining due to the actuation strength required after a long day of work
[12:25:02] <shka> yeah, stiff 
[12:25:09] <shka> i would not want to type on that
[12:25:41] <shka> also, quicklisp still down
[12:25:43] <shka> curious 
[12:26:19] <mfiano> I currently am typing on Zealios v2 purple's...they are not clicky but tactile and feel very nice after a long day
[12:26:25] <shka> the thing with the gatreon greens is that they rattle 
[12:26:31] <shka> and have a grainy feel to them
[12:27:24] <shka> i am using kailh box white for typing
[12:27:35] <shka> i like light clicky switches for typing
[12:28:10] <mfiano> I think these zealios purples are the best I've used for typing...well longest i ever had switches on my primary keyboard anyway...about 1.5y
[12:28:24] <shka> though i don't like blues 
[12:28:33] <shka> because of the sound
[12:28:41] <mfiano> I used to be exclusively clicky, but these zealios switches made me love tactiles
[12:28:50] <shka> cool
[12:30:56] <shka> my problem with cherry tactile switches is that they are not tactile  
[12:31:11] <shka> and if they are tactile, the tactility is not sharp
[12:31:16] <mfiano> i dislike cherry
[12:31:32] <shka> it is... a silly company
[12:32:11] <mfiano> i tend to avoid companies named after fruits, especially ones with a bite taken out of it
[12:32:18] <shka> lol
[12:32:20] <shka> good one
[12:32:46] <shka> ok, got to go
[12:32:57] <shka> any info on when quicklisp goes back online?
[12:33:13] <mfiano> it's been back for ~12 hours for me
[12:34:03] <shka> mmm
[12:34:04] <shka> ok
[12:34:21] <mfiano> This might be a wake up call for more people besides me and a couple others to use CLPM :)
[12:34:43] <mfiano> Relying on a central repository is a pretty big point of failure.
[12:39:21] <shka> yes, i should use CLPM as well
[12:39:32] <shka> i will take a look into it after vacations
[12:39:38] <shka> ok, see ya all later!
[12:40:04] <mfiano> A bigger problem that maintainer removes projects of people he doesn't like.
[12:41:22] <mfiano> and looking at the web site, a third problem is that it is a burden for him...more than 2 months since the last "monthly" release. I guess that's why the domain expired too.
[12:41:37] *** Joins: selwyn (~selwyn@user/selwyn)
[12:44:18] <mfiano> I guess even he agrees https://twitter.com/xach/status/1434089920314871810
[12:46:27] <shka> clpm can use quicklisp dists anyway
[12:48:01] <mfiano> Yes, and if you publish your lock file then users installing your software fetch the exact quicklisp dist for each dependency
[12:48:05] <mfiano> (not just the latest)
[12:49:14] <mfiano> There really is no reason people should use Quicklisp directly, unless they're lazy. Developers should _want_ to be in charge of their dependencies.
[12:50:06] <mfiano> This is why a lot of Quicklisp software gets removed by Xach...because it is no longer compatibile with the latest dist.
[12:50:44] <mfiano> I don't see why you would want such temporary software for a language designed to stand the test of time.
[12:51:03] <mfiano> tl;dr stop being lazy and take control of your software :)
[12:53:36] <pjb> The quick&dirty way would be to use google repo right now.  But you'd have to search for the git repositories yourself.  The purpose of ergo would be to have heuristics to find easily the git repo of your dependencies in git collections.
[12:54:07] <mfiano> I love CLPM and the CLF is now backing it
[12:54:10] <selwyn> perhaps we should host quicklisp in a code vault in the arctic like what github did
[12:54:17] <pjb> But for production software, you should clone your dependencies in your own git collection anyways!
[12:54:21] <selwyn> get it to last 100000 years like the nuclear waste repository :)
[12:54:34] <mfiano> So it may gain some more traction now that it has CLF's support and we talk about it each meeting :)
[12:56:35] <ck_> selwyn: then we'll also need to get to work on signage and "environmental design" that signifies that yes, this is totally a place of honor not lke the other thing with the spikes come on in
[12:57:10] <selwyn> ´we were a very advanced culture look at what we did´
[12:57:11] <ck_> iglus in the shape of parentheses
[13:02:02] <shka> selwyn: i am of the opinion that those waste disposal spikes are mostly a thing because of artistic interest :P
[13:03:45] <selwyn> yeah it seems implausible
[13:05:12] <selwyn> there is an idea that you can genetically engineer cats to change colour in the presence of radiation, and then establish mythology that you shouldn´t live in a place where the cats change colour
[13:05:44] <shka> some Dune shit
[13:06:23] <selwyn> well, imo if you do want to make an idea persist for that long you have to try and turn it into a religion
[13:06:40] <selwyn> difficult to get around that
[13:08:07] <shka> Islam, but instead of pork, oddly colored cats
[13:08:08] <selwyn> this nuclear repository doesn´t seem to be bothering with this stuff yet, so maybe they just assume that finland will still be around 100000 years from now
[13:08:08] <shka> got it
[13:09:03] <shka> aliens land on the desolate, barren Earth, only Finland remains
[13:09:12] <shka> PERKELE
[13:09:39] <shka> "Stalin tried to destroy us, he failed, as everybody else"
[13:10:08] <selwyn> earth has been turned into a nokia maximiser 
[13:10:23] <ck_> perkele plus
[13:10:31] <ck_> https://www.youtube.com/watch?v=jKma04-Q3tw
[13:11:24] <shka> https://www.youtube.com/watch?v=1FkPjqavmV0
[13:11:33] <shka> the Finland
[13:11:58] <shka> of the future
[13:12:09] <ck_> does it have "3d tunnel --^" though
[13:12:22] <shka> it has combat bears
[13:12:36] <selwyn> tf
[13:12:40] <selwyn> nokia demoscene
[13:36:07] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[13:44:24] *** Joins: notzmv (~zmv@user/notzmv)
[13:58:07] *** Joins: makomo_ (~makomo@user/makomo)
[13:58:28] *** Joins: Jacobis9000 (~jonaholuf@host86-144-136-140.range86-144.btcentralplus.com)
[14:06:15] *** Quits: makomo_ (~makomo@user/makomo) (Quit: WeeChat 3.2)
[14:06:23] *** Joins: makomo (~makomo@user/makomo)
[14:13:54] *** Joins: sp (~susammatr@user/susam)
[14:14:02] <sp> Hello!
[14:16:19] <selwyn> hi
[14:17:39] <sp> Just trying out the Matrix bridge. Pretty neat.
[14:31:44] *** Quits: random-nick (~random-ni@87.116.183.117) (Ping timeout: 265 seconds)
[14:41:54] <Gnuxie> hi
[14:43:42] <susam> Hello Gnuxie!
[14:44:01] <Gnuxie> uhh oh i'm not sure the bridge is meant to do that 
[14:45:24] *** Quits: sp (~susammatr@user/susam) (Quit: Reconnecting)
[14:45:45] *** Joins: sp (~sp@user/susam)
[14:47:36] *** Quits: sp (~sp@user/susam) (Client Quit)
[14:47:58] *** Joins: sp (~sp@user/susam)
[14:49:37] <susam> Gnuxie: What did the bridge do for you that it should not have done?
[14:54:30] <Gnuxie> idk unless you're using the IRC side at the same time as the bridge
[14:59:41] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[15:20:48] <mfiano> Only really scraped the surface so far, but Raku has corrected all of the pain points I remember about Perl in college some 20 years or so ago.
[15:23:28] <mfiano> I traced the lineage of its various compilers and I was surprised to find one of the earlier ones targetting SBCL.
[15:23:54] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:8491:1b94:13bc:dee6)
[15:26:59] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:54:24] <mfiano> hayley: https://drewdevault.com/2021/02/09/Rust-move-fast-and-break-things.html
[15:54:43] <mfiano> It's refreshing to see this out in the wild :)
[15:55:14] <hayley> "However, C code can be secure!"
[15:55:29] <selwyn> lol
[15:55:45] <selwyn> > There are legitimate reasons to prefer C, both technical and moral
[15:55:53] <selwyn> what is the moral case for c?
[15:56:19] <hayley> How 2 write secure C: 1. Get funded by CSIRO (Australian science department) 2. Make model for C machine 3. Theorem prover time 4. Write like 500 LOC tops
[15:56:38] <hayley> Else, fill the meme in "I see drew devault, I pretend I do not see it"
[15:57:34] <mfiano> I disagree with all that, but the points against Rust are very valid
[15:57:39] <mfiano> Last paragraph sums it up
[15:57:48] <mfiano> Rust is moving too fast, and doesn't even have a spec
[15:58:57] <hayley> True, I guess. You can't write anything real without a spec.
[15:59:16] *** Joins: lad (~lad@user/lad)
[15:59:33] <mfiano> Right, especially since it's not optimized for getting things done quickly
[16:00:42] * hayley uploaded an image: (134KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ivFofFFblmzogCoGKMPyMsGC/haha-object-system.png >
[16:01:01] <hayley> Otherwise, please refer to this image for what I generally think of that blog.
[16:01:17] <mfiano> The biggest thing I dislike about Rust affects me directly as a non-developer
[16:02:24] <mfiano> A couple small cli programs I use are written in Rust, and compiling them takes _ages_ and uses several gigs of ram. A comparable alternative in any other language would take/use at least a couple orders of magnitude less
[16:03:02] <mfiano> I couldn't imagine being a developer and waiting for those feedback loops
[16:03:13] <mfiano> granted incremental compilation and all, but still
[16:03:39] <hayley> With the emphasis on static linking (which perhaps is necessary with no stable ABI), I somehow think they really want you to only use binary images.
[16:04:22] <hayley> The concurrent hash table benchmark program I wanted took one minute to build, pinning all cores on my machine. If I had a parallel ASDF and didn't just :serial t all the time...
[16:05:30] <hayley> @mfiano Nah. You're supposed to have a language server running and if the types check out you're all good.
[16:05:51] <ck_> dear diary,  today I used the ssh ~C command shell to open an additional tunnel. It was a good day. Maybe tomorrow we can look at achieving world peace
[16:05:51] <mfiano> Pshh
[16:06:12] <mfiano> I am irked at the non-CL developer trying to optimize that phone encoding problem (poorly) and comparing CL to Rust
[16:06:27] <hayley> Been there, done that.
[16:06:44] * hayley joined stassats in the compiler writer egging comments
[16:06:51] <mfiano> Equally irked at comparing it to HotSpot or whatever JIT
[16:07:23] <hayley> Yes, HotSpot doesn't generate 10 redundant XORs usually.
[16:07:46] <mfiano> THey can't write CL effectively, and their optimization strategy due to not understanding CL (and by extension the implementation used) enough had me cringing.
[16:08:35] <mfiano> Seemed to have a wrong sense of how computers work too
[16:09:10] <mfiano> Sorry. That was my pain point for the day :)
[16:09:46] <hayley> Off the record, I'm also marginally annoyed that someone suggested incorrect code with fixnums where we couldn't prove that the values would fit in fixnum range.
[16:10:17] <mfiano> Yeah I noticed that too
[16:10:52] <hayley> It's also funny to see them ask if the standard guarantees some optimization will happen.
[16:11:27] <mfiano> Heh wow
[16:11:31] <hayley> "Until there is no faster CL compiler than SBCL, thanks among others to you and your invaluable contribution, I would not worry about portability. If speed is the main driver then SBCL is the one to beat." Dude what the fuck
[16:11:52] <mfiano> Uhh
[16:12:06] <hayley> With no offense to stassats, I now have to dedicate my life to writing enough Cleavir passes until SBCL is no longer the fastest compiler.
[16:12:08] <mfiano> I can't even parse that sentence correctly
[16:13:18] <mfiano> Ok it makes more sense after re-reading it a couple times (I'm tired). Yeah wtf
[16:14:17] <mfiano> I also tried not to die inside with his statements such as "this might mean language foo is faster than language bar"
[16:15:43] <hayley> "Everything I don't like is a programming system", the Robert Strandh's guide to language standards
[16:15:49] <hayley> (Though he is dead on ofc)
[16:16:54] <mfiano> I dont follow
[16:18:58] <hayley> beach usually says that a language with no standard and only one implementation is just a programming system.
[16:19:28] <mfiano> Oh, yes.
[16:20:17] <mfiano> Unfortunately, Raku is one of them in a way, as it only has one implementation of the spec in any form of completion.
[16:20:49] <mfiano> Not that it has a formal specification. It's "spec" is Roast
[16:20:55] <mfiano> (a huge test suite)
[16:21:01] <hayley> Well, if everything is set up right, we have parallel GC, SIMD hash tables (basically the same as Rust, surprise!), a spiffier compiler...
[16:21:38] <mfiano> SICL?
[16:21:48] <hayley> Of course, the Rust people just ported the Swiss table from C++, which is a good move.
[16:21:50] <hayley> Yeah.
[16:22:17] <mfiano> I see. Is the hash function extensible too?
[16:23:36] <hayley> Yes.
[16:23:58] <hayley> Just whack in another :hash-function, which is almost the same as SBCL.
[16:24:23] <mfiano> I've been watching the SICL project for...years...and I often wonder what the progress bar looks like at this point.
[16:24:50] <mfiano> (as a conforming, usable implementation, rather than some module being used by some library/other implementation)
[16:25:27] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Ping timeout: 268 seconds)
[16:25:46] <hayley> No idea.
[16:26:25] <mfiano> Yeah, it's really hard to answer, even for beach, but hopefully in my lifetime :)
[16:26:57] <hayley> It's not done when we get a working REPL, it's still not done when we pass the ANSI tests, probably not when something like McCLIM runs...
[16:27:18] <hayley> An open ended question when you want the programming system to end all programming systems, no?
[16:28:22] <selwyn> what do you mean its not done when you pass the ansi tests? isn´t it complete at that point
[16:28:34] <ck_> "when something like McCLIM runs" implies that McCLIM needs to be done first as well, no
[16:28:35] <mfiano> No software is ever complete.
[16:28:42] <selwyn> well, ok
[16:28:52] <mfiano> I was more careful in the wording of my question :)
[16:29:02] <selwyn> right
[16:29:08] <selwyn> fair enough
[16:29:29] <selwyn> well, i also look forward to it
[16:29:41] <ck_> so do I
[16:30:34] <hayley> selwyn: A modern CL implementation also has threads, sockets and other things which ANSI didn't specify.
[16:30:35] <mfiano> Yes. It is worrying that we only have less than a handful of FOSS implementations in active development.
[16:31:24] <hayley> Still more than one.
[16:31:26] <mfiano> Like unicode, sigh.
[16:32:53] <selwyn> reminds me that i should build clasp some time
[16:33:25] <mfiano> The last few times I tried to, it took an hour and failed
[16:33:28] <mfiano> Good luck :)
[16:33:39] <selwyn> build time was down to 15 minutes last time i tried
[16:34:08] <selwyn> however, they seem to be in the middle of moving to a new llvm version, which makes things more temperamental than usual
[16:37:55] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[17:11:32] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[17:24:39] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Quit: Konversation terminated!)
[17:33:56] <Jacobis9000> hey folks
[17:34:25] <Jacobis9000> I've just noticed that .pages files are executable files on a Mac, and I can't find anywhere that tells me why
[17:40:14] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Quit: WeeChat 3.1)
[17:40:48] <ck_> you mean the file permissions are so that it is executable, not that it is actually executable, right?
[17:40:53] *** Joins: christophergray (~christoph@190.148.52.166)
[17:41:03] <dave0> nite all
[17:41:43] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:00:11] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[18:17:37] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Ping timeout: 250 seconds)
[18:17:43] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[18:25:10] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[18:25:24] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[18:32:27] <Arcsech> Re: CL implementations, having all of ABCL/SBCL/CCL/ECL is more active FOSS implementations than I can think of for any other language except maybe scheme*. Plus Clasp (getting close-ish to a 1.0 release) and SICL (??? but active development)
[18:32:45] <Arcsech> Scheme gets a * because scheme's standards are a clusterfuck and only kinda count
[18:34:34] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Quit: WeeChat 3.1)
[18:37:58] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[18:55:56] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:bea9:a565:1d5e:1b2d) (Ping timeout: 245 seconds)
[19:03:22] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[19:05:06] *** Joins: aeth (~aeth@user/aeth)
[19:07:44] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:8491:1b94:13bc:dee6) (Remote host closed the connection)
[19:08:06] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[19:09:55] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[19:09:58] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[19:11:22] *** Joins: aeth (~aeth@user/aeth)
[19:18:12] *** Joins: makomo (~makomo@user/makomo)
[19:25:13] <pjb> ck_: nice ssh ~C, thanks!
[19:26:00] <gilberth> Good morning #lispcafe!
[19:26:46] <selwyn> hi gilberth
[19:27:52] <susam> Hello gilberth! Good morning!
[19:27:54] <pjb> The only problem with programming systems (implementations), is that then end up bit-rotting, because of the surrounding system and libraries evolve.  So you cannot use them indefinitely.  That's why we need standards, aka specifications, so that new implementations can be written.
[19:28:06] <gilberth> pjb: You appear to be a true Emacs expert. So I'd ask, if you, by chance, know whether it's possible to define a new coding system in elisp?
[19:28:21] <pjb> In elisp, I don't know. Let's see.
[19:28:58] <pjb> gilberth: yes, it's possible, with mule make-coding-system
[19:29:19] <pjb> gilberth: the mule emacs lisp package seems to be rather complete for this.
[19:30:22] <gilberth> Ok. Let me see. I'd like to define a coding system for the Lisp Machine character encoding. And isn't mule a thing of the past. I was reading the Emacs manual and just didn't find any mention of how to actually define a new conversion table or sth.
[19:31:55] <pjb> well, actually with define-coding-system (make-coding-system is obsoleted by the former).
[19:32:02] <pjb> there are examples in mule-conf.el
[19:32:24] <gilberth> The other option is to keep the files in UTF-8, but I fear that even the Lisp machine is not always strict about distinguishing text files from binary files.
[19:33:00] <gilberth> pjb: OK, thanks so far. No I have pointers I could look at. I just feared that as Emacs really is a C application, I would need to recompile it.
[19:33:11] <gilberth> * Now
[19:33:37] <pjb> Well, both, it depends. Some features are implement in C, some in lisp, some in both; sometimes the lisp code can shadow the C code, sometimes it cannot. 
[19:33:52] <pjb> In this case, it seems to be done mostly in mule, in emacs lisp.
[19:34:07] *** Quits: Jacobis9000 (~jonaholuf@host86-144-136-140.range86-144.btcentralplus.com) (Ping timeout: 252 seconds)
[19:34:30] <gilberth> Ok. Does every Emacs come with that mule?
[19:35:19] <gilberth> Perhaps I could hook into loading and saving buffers? idk. The lispm character set is just 8-bit and thus a mere table would do.
[19:36:14] <gilberth> The later font codes would be another issue, but I don't face those, yet.
[19:55:16] *** Joins: euandreh (~euandreh@191.181.59.160)
[19:55:40] <ck_> pjb: ~? for the whole list
[20:06:31] *** Joins: clothespin_ (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[20:09:00] <pjb> I only knew ~.
[20:12:07] *** Joins: makomo_ (~makomo@user/makomo)
[20:13:38] <ck_> same for me, until maybe a year ago. makes you wonder, doesn't it
[20:56:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[20:58:12] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:06:10] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:19:32] *** Joins: rogersm (~rogersm@90.166.177.48)
[21:56:36] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Quit: WeeChat 3.2)
[21:57:04] *** Joins: iAmDecim (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[21:59:37] <dimadima> https://news.ycombinator.com/item?id=28830677
[21:59:52] <dimadima> ("Companies that use Lisp extensively")
[22:29:23] *** Quits: makomo_ (~makomo@user/makomo) (Quit: WeeChat 3.2)
[22:48:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[22:50:59] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[23:03:05] <Duuqnd> So, this morning before I left home I happened to run apt update and it asked me if I wanted to update after the release codename had change. I said yes.
[23:03:06] <Duuqnd> Now I can't use the proprietary nvidia drivers, I have to start the display manager through the terminal, and I can't get any sound to work.
[23:03:45] <copec> If using a minijack for sound output, make sure something is plugged into it when the module/drivers are loaded
[23:04:14] <Duuqnd> I normally use bluetooth and HDMI audio
[23:04:17] <Duuqnd> Neither are working
[23:04:39] <copec> restart pulseaudio
[23:05:15] <Duuqnd> Pulseaudio was apparently never started
[23:06:08] <Duuqnd> I thought I had gotten used to Debian and was kind of enjoying it. That illusion has now been shattered.
[23:07:27] <pjb> Duuqnd: classic.  Use nouveau, the free nvidia driver, in the meantime.  Unfortunately, nvidia implements its stuff first for ubuntu…
[23:08:02] <Duuqnd> That's what I'm doing right now since it was the only way to get any graphics (I'm not going back to the terminal)
[23:08:24] <Duuqnd> At least my system is sorta working now (even if bluetooth audio still won't work)
[23:08:25] <pjb> as much I like nVidia stuff, I must agree with Linus here: https://www.youtube.com/watch?v=_36yNWw_07g
[23:10:52] <Duuqnd> The main reason why I have an nvidia card at all is because seemingly every AMD card in the country vanished just as I was about to upgrade. I haven't been able to find a single retailer in my country that sells AMD cards except for the brand new stuff. My old card was a piece of junk so I have this (relatively) old nvidia card my dad wasn't using.
[23:11:15] <copec> make sure bluetooth.service is running, then possibly (re)start pulseaudio
[23:11:33] <Duuqnd> It connects just fine, the audio device just isn't showing up
[23:11:52] <copec> Also, if you are using the proprietary driver, make sure nouveau is uninstalled
[23:12:35] <Duuqnd> The proprietary drivers broke when updating. I tried removing them and reinstalling but it did nothing to help.
[23:12:38] <Duuqnd> Some kind of dependency issue, I don't know
[23:12:46] <pjb> Duuqnd: nvidia is find, you can do AI stuff with it!
[23:13:02] <Duuqnd> Yeah, I'm sure it's great, I just really don't need that cool stuff
[23:13:44] <Duuqnd> All I want from a GPU is reasonable performance and non-assholish drivers
[23:13:51] <Duuqnd> AMD is pretty okay at that
[23:14:05] <pjb> And they have stuff like the Jetson Nano, and stuff like the DGX-2…
[23:19:51] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[23:28:26] <copec> Are you using Debian Stable Duuqnd?
[23:28:52] <Duuqnd> I'm using Debian Testing
[23:29:08] <Duuqnd> Not for much longer though
[23:30:21] <copec> I use unstable for my workstation, but I recommend SUSE Tumbleweed or Manjaro for more stable rolling releases
[23:31:57] <copec> I use the Manjaro that came on my pinebook pro, and I really like it
[23:35:02] <manicennui> I find Manjaro to be the most pleasant way to use Arch while still having all of its capabilities available.
[23:59:21] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
