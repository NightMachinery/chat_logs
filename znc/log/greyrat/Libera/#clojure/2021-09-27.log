[00:24:10] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[01:11:43] *** Joins: stevea (~stevea@user/stevea)
[01:15:40] *** Quits: fanthomas (~fanthomas@gw105-92.imafex.sk) (Quit: Client closed)
[01:31:15] *** Joins: jespada (~jespada@host196.190-3-30.dynamic.telmex.net.ar)
[01:42:52] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[01:43:43] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz…)
[01:55:29] *** Joins: X-Scale` (~ARM@31.22.162.96)
[01:57:25] *** Quits: X-Scale (~ARM@92.250.96.13) (Ping timeout: 265 seconds)
[01:57:35] *** X-Scale` is now known as X-Scale
[01:58:39] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:31:33] *** Joins: atw (~user@154.27.197.248)
[04:31:54] *** Joins: wilornel (~wilornel@c-73-222-135-219.hsd1.ca.comcast.net)
[05:18:18] *** Quits: jespada (~jespada@host196.190-3-30.dynamic.telmex.net.ar) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:14] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[06:15:29] *** Quits: wilornel (~wilornel@c-73-222-135-219.hsd1.ca.comcast.net) (Quit: Client closed)
[06:16:43] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[06:19:56] *** Joins: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[06:20:53] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[06:33:24] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[06:38:55] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[07:50:14] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[07:54:56] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 252 seconds)
[07:55:49] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[08:01:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[08:04:38] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:32:12] *** Joins: struchu (~struchu@staticline-31-183-183-63.toya.net.pl)
[08:36:39] *** Quits: struchu (~struchu@staticline-31-183-183-63.toya.net.pl) (Client Quit)
[08:36:59] *** Joins: struchu (~struchu@staticline-31-183-183-63.toya.net.pl)
[08:57:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[09:14:30] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 260 seconds)
[09:18:34] *** Quits: victor (sid208353@user/victor) (*.net *.split)
[09:18:34] *** Quits: broquaint (~dbrook@static.140.30.69.159.clients.your-server.de) (*.net *.split)
[09:18:34] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (*.net *.split)
[09:18:34] *** Quits: irq0 (~quassel@amy.irq0.org) (*.net *.split)
[09:18:34] *** Quits: bcmiller (~bm3719@66.42.95.185) (*.net *.split)
[09:18:42] *** Joins: bcmiller (~bm3719@66.42.95.185)
[09:18:42] *** Joins: broquaint (~dbrook@static.140.30.69.159.clients.your-server.de)
[09:19:03] *** Joins: victor (sid208353@user/victor)
[09:19:08] *** Joins: irq0 (~quassel@amy.irq0.org)
[09:19:57] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[09:20:07] *** Quits: Ingvix (~Ingvix@user/ingvix) (Ping timeout: 252 seconds)
[09:20:47] *** Joins: Ingvix (~Ingvix@user/ingvix)
[09:24:42] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[09:24:42] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:24:42] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[09:24:42] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[09:24:42] *** Quits: ihabunek (~ihabunek@bezdomni.net) (*.net *.split)
[09:24:43] *** Quits: mgxm (~mgxm@user/mgxm) (*.net *.split)
[09:24:43] *** Quits: spec (~mrSpec@user/spec) (*.net *.split)
[09:24:43] *** Quits: totoro (~totoro@user/totoro) (*.net *.split)
[09:24:57] *** Joins: Ragnor (~Ragnor@dslb-084-062-036-020.084.062.pools.vodafone-ip.de)
[09:25:08] *** Joins: totoro (~totoro@173.82.187.126)
[09:25:11] *** Quits: Ragnor (~Ragnor@dslb-084-062-036-020.084.062.pools.vodafone-ip.de) (Changing host)
[09:25:11] *** Joins: Ragnor (~Ragnor@user/ragnor)
[09:25:29] *** Quits: totoro (~totoro@173.82.187.126) (Changing host)
[09:25:29] *** Joins: totoro (~totoro@user/totoro)
[09:26:20] *** Joins: mgxm (~mgxm@user/mgxm)
[09:26:23] *** Joins: mrSpec (~mrSpec@user/spec)
[09:26:29] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:26:36] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[09:26:43] *** Joins: ihabunek (~ihabunek@bezdomni.net)
[09:29:38] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[09:40:19] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[09:56:39] *** Joins: struchu1 (~struchu@staticline-31-183-183-63.toya.net.pl)
[09:59:47] *** Quits: struchu (~struchu@staticline-31-183-183-63.toya.net.pl) (Ping timeout: 265 seconds)
[11:13:30] *** Quits: oelewapperke (~cde@ns509915.ip-198-245-49.net) (Ping timeout: 260 seconds)
[11:15:56] *** Quits: struchu1 (~struchu@staticline-31-183-183-63.toya.net.pl) (Ping timeout: 245 seconds)
[11:17:58] *** Joins: struchu1 (~struchu@staticline-31-183-183-63.toya.net.pl)
[11:29:55] *** Joins: kipz (~kipz@home.kipz.org)
[11:30:00] *** Joins: oelewapperke (~cde@ns509915.ip-198-245-49.net)
[11:43:48] *** Joins: stevea (~stevea@user/stevea)
[11:55:13] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz…)
[11:59:58] *** Joins: stevea (~stevea@user/stevea)
[12:01:37] *** Quits: struchu1 (~struchu@staticline-31-183-183-63.toya.net.pl) (Quit: WeeChat 3.3)
[12:01:43] *** Joins: to-hu (~Thunderbi@p200300e9af0e9c00391c5ddb5f5e99c5.dip0.t-ipconnect.de)
[12:01:51] *** Joins: struchu (~struchu@staticline-31-183-183-63.toya.net.pl)
[12:08:29] *** Quits: to-hu (~Thunderbi@p200300e9af0e9c00391c5ddb5f5e99c5.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[12:08:58] *** Quits: kipz (~kipz@home.kipz.org) (Ping timeout: 265 seconds)
[12:13:12] <yeik-the-spik[m]> jeaye:  Thanks for your comments on malli and spec. I guess I will take the plunge and just migrate to malli before my specs continue growing. Performance is also an issue for me and I have made sure that you can property-based test with malli. So I guess this will be a net positive.
[12:23:35] *** Joins: fanthomas (~fanthomas@gw105-92.imafex.sk)
[12:27:35] <lunik1> keep hearing good things about malli, must remember to use it next time I would have used spec
[12:50:46] *** Joins: dim (~dimlibera@212.85.154.83)
[12:51:22] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[13:06:04] *** Joins: kipz (~kipz@static-84-9-19-122.vodafonexdsl.co.uk)
[13:41:17] *** Quits: struchu (~struchu@staticline-31-183-183-63.toya.net.pl) (Ping timeout: 265 seconds)
[13:52:20] *** Joins: Iacob (~Iacob@2408:8210:3c30:d60:7c20:6bb6:1ab0:2449)
[14:11:53] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
[14:16:55] *** Quits: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[14:22:09] *** Quits: Iacob (~Iacob@2408:8210:3c30:d60:7c20:6bb6:1ab0:2449) (Quit: ??)
[14:30:31] *** Quits: kipz (~kipz@static-84-9-19-122.vodafonexdsl.co.uk) (Ping timeout: 245 seconds)
[14:40:41] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[14:46:40] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[14:48:31] *** Joins: kipz (~kipz@92.40.186.54.threembb.co.uk)
[15:05:15] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 265 seconds)
[15:19:16] *** Quits: kipz (~kipz@92.40.186.54.threembb.co.uk) (Ping timeout: 245 seconds)
[15:23:56] *** Joins: kipz (~kipz@92.40.186.53.threembb.co.uk)
[15:29:09] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
[15:30:43] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[15:32:56] *** Joins: yoonkn (~user@175.197.208.79)
[15:49:23] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[15:55:08] *** Joins: jespada (~jespada@2803:9800:9842:7a62:8558:368:788c:6dc6)
[16:09:16] *** Quits: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[16:31:53] *** Joins: struchu (~struchu@staticline-31-183-183-63.toya.net.pl)
[16:44:41] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 245 seconds)
[16:48:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:50:59] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:06:04] <sobel> so, i used to assert a lot of design correctness with types and type-based dispatch but i'm not sure i understand how spec or malli replace/augment any of that. i think i may have seen the exact description of these tools but it was still lost on me
[17:06:29] <sobel> still figuring out the interesting questions to ask i guess :)
[17:08:06] <lunik1> I guess one interpretation of types is a restriction, so you can restrict the arguments of a function using a spec rather than type
[17:08:24] <lunik1> and it will be more expressive than (most) type systems
[17:09:24] <Para> It's the ambiguity of types, classes, forms and models... :)
[17:09:43] <Para> Everything's sort of the same thing, just depends on through which lenses you view them they look and feel different.
[17:09:51] *** mrSpec is now known as spec
[17:12:24] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[17:13:45] <sobel> all data, you say? :)
[17:13:58] <sobel> thanks, i think that helps put it in the right spot for me
[17:16:56] *** Joins: xulfer (uid452788@id-452788.ilkley.irccloud.com)
[17:17:11] <lunik1> it also acts as documentation: here's explicitly what the arguments to this function should look like
[17:18:14] <yeik-the-spik[m]> <sobel> "so, i used to assert a lot of..." <- I like property based testing, for me that is the main use case. But since I am already using them, they also serve to validate requests to my api as ring middleware. Unwanted json fields are removed, and misspecified requests are not processed.
[17:18:35] <yeik-the-spik[m]> Oh, and reitit also generates swagger examples from them. that is also useful
[17:19:54] <lunik1> "a DSL for asserts" I don't think is an entirely wrong perspective
[17:30:08] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:30:30] *** Joins: xsperry (~xs@cpe-188-129-101-182.dynamic.amis.hr)
[17:45:31] *** Quits: kipz (~kipz@92.40.186.53.threembb.co.uk) (Ping timeout: 245 seconds)
[17:49:02] *** Quits: struchu (~struchu@staticline-31-183-183-63.toya.net.pl) (Quit: WeeChat 3.3)
[17:50:22] *** Joins: struchu (~struchu@staticline-31-183-183-63.toya.net.pl)
[18:05:54] *** Joins: eddof13 (~textual@2806:102e:12:18a2:6888:32ac:b8b1:4238)
[18:12:52] *** Quits: eddof13 (~textual@2806:102e:12:18a2:6888:32ac:b8b1:4238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:17:56] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Quit: WeeChat 3.1)
[18:18:09] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[18:25:28] *** Joins: kipz (~kipz@home.kipz.org)
[18:26:06] *** Joins: Iacob (~Iacob@2408:8210:3c4a:5dc0:5869:cea2:291f:8a62)
[18:26:59] *** Joins: seschwar (~seschwar@user/seschwar)
[18:28:09] *** Joins: eddof13 (~textual@177.241.59.113)
[18:28:18] <atw> is it possible to call a function from the REPL, and inside that function, "break" so that a REPL is started inside that function? I think I saw a way to do this once, but I forgot it
[18:29:55] <technomancy> atw: sure is! https://github.com/gfredericks/debug-repl
[18:32:07] *** Quits: struchu (~struchu@staticline-31-183-183-63.toya.net.pl) (Ping timeout: 265 seconds)
[18:34:25] <atw> dang, I gotta add that to my profiles.clj. Not possible without an nREPL middleware?
[18:40:49] <technomancy> it's possible to write an alternate implementation that doesn't use middleware
[18:40:56] <technomancy> but that one does
[18:42:01] <atw> cool, thanks for the link!
[18:43:18] <andreyorst> I'm trying to use defrecord to create an object that implements custom interface. This interface has a method that specifies another interface as the return type. How do I define a method for such interface from Clojure?
[18:43:52] <andreyorst> (defrecord Foo [x] SomeInterface (bar [this] ???))
[18:44:09] <andreyorst> sorry, might be a pretty stubid question, but I'm kinda lost rn
[18:48:28] <ridcully_> you would return an instance of that interface
[18:48:54] <ridcully_> most likely there is some impl around in java-land to help with that?
[18:49:14] <andreyorst> there's just an interface, that defines a bunch of methods and their return types
[18:49:27] <andreyorst> I need to return the object that implements this interface
[18:49:51] <ridcully_> do you know of an class in the library your are using, that implements that interface?
[18:50:06] <andreyorst> there's no class
[18:50:14] <ridcully_> then you have to write your own
[18:50:16] <andreyorst> I mean, there's literally only interface there
[18:51:02] <andreyorst> that's what I thought I do when I use defrecord and implement an interface's methods in it
[18:52:02] <ridcully_> you have to do both, if i understand your problem correctly
[18:52:42] <ridcully_> you need to reify/defrecord the "outer" interface and to return another interface from one of those methods, you have to do the same thing beforehand
[18:53:34] <andreyorst> I have a dependency that defines two public interfaces A and B. One method in the interface B returns something that implements interface A
[18:54:34] <andreyorst> I thought that in clojure i would need to do (defrecord a [...] A (A-methods)) and then (defrecord b [...] B (b-method [_] (a. ...)))
[18:54:46] <andreyorst> but prehaps I'm misunderstanding something
[18:55:34] <ridcully_> minus any possible minute problems i don't see, that is the way to do it
[18:56:16] <andreyorst> hmm, but when I try to compile `defrecord b` I get an error that it returns Object and expected to return A
[18:59:06] <ridcully_> maybe type hint on b-method?
[19:03:00] <andreyorst> huh
[19:03:21] <andreyorst> I've removed arglist typehints and now it compiles
[19:04:31] <ridcully_> i meant the return type.  but if that works even better
[19:04:41] <andreyorst> yeah, I've tried it too
[19:04:43] <andreyorst> no luck
[19:04:52] <andreyorst> but then I've decided to remove hints completely and bam
[19:04:57] <ridcully_> i'd only type hint, if there are warnings etc... (or your graalvm native build just segfaults ;P))
[19:05:04] <andreyorst> Can't find matching method: fooBar, leave off hints for auto match.
[19:05:16] <andreyorst> this was an error when not all args were typehinted
[19:05:29] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:05:47] <ridcully_> and you did not trust that error message? ;)
[19:06:02] <andreyorst> with all of them typehinted the error was: Mismatched return type: fooBar, expected: my.package.A, had: java.lang.Object
[19:06:11] <andreyorst> so I was confused by it
[19:06:30] <ridcully_> was the return typehinted with that error?
[19:06:34] <andreyorst> yes
[19:07:34] <andreyorst> like this (defrecord b [^a result] B (fooBar ^a [^File x] result))
[19:08:02] <andreyorst> didn't work with ^A hint as well
[19:08:30] <ridcully_> i have seen the "after the methodname" on SO answers.  but i'd expect that the type goes before fooBar?  and it would have to be ^my.package.A (the interface class)
[19:08:46] <andreyorst> hmmm
[19:09:01] <ridcully_> while the jvm would not care for the return type, the compiler would have to find the proper method in the interface
[19:09:03] <andreyorst> you're right
[19:09:07] <andreyorst> it goes before the name
[19:09:12] <ridcully_> (or at least, that is what i am imagining here...)
[19:09:46] <andreyorst> (defrecord b [^a result] B (^A fooBar [^File x] result)) works
[19:10:02] <andreyorst> (defrecord b [^a result] B (^a fooBar [^File x] result)) doesn't tho
[19:10:16] <ridcully_> i'd not expect the second to work
[19:10:30] <andreyorst> yeah, I guess
[19:10:40] <ridcully_> the compiler looks for a method, that returns a... and there is none
[19:10:46] <andreyorst> thought I've thought that since a implements A it would
[19:10:54] <ridcully_> s/for a method/& in the interface/
[19:11:17] <ridcully_> i'd not expect the clojure compiler to dig that deep
[19:11:31] <andreyorst> it works now, thanks for your help!
[19:11:33] <ridcully_> yw
[19:11:55] <andreyorst> honestly, would never thought about putting the hint before method name
[19:12:09] <andreyorst> what is it, Java? :D
[19:12:35] <ridcully_> meta goes always first
[19:13:06] <ridcully_> i'd guess your version just types the following vector and that gets thrown away?
[19:13:21] <andreyorst> yeah, but in defn case it is before arglist, so I thought it would be the same here
[19:13:23] <ridcully_> *second version
[19:13:58] *** Quits: Iacob (~Iacob@2408:8210:3c4a:5dc0:5869:cea2:291f:8a62) (Quit: 离开)
[19:15:02] <andreyorst> < just types the following vector and that gets thrown away? > yeah, probably
[19:19:16] <ridcully_> oh well, defn supports both?  and i guess the "after" version makes sense for multi-arity defns (whoever needed that in their life...)
[19:20:13] <ridcully_> in that case i am surprised, that defrecord and friends don't behave the same
[19:20:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[19:21:05] <ridcully_> speculation time: for defrecord maybe the before-name is used to look the method from the interface up and the before-args is used as the return type for the generated method?
[19:34:47] *** Joins: schmudde (~schmudde@88.157.97.9)
[19:37:09] *** Quits: eddof13 (~textual@177.241.59.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:47:57] *** Joins: eddof13 (~textual@177.241.59.113)
[19:50:39] *** Quits: fanthomas (~fanthomas@gw105-92.imafex.sk) (Quit: Client closed)
[19:53:10] <andreyorst> is there a way of creating nested class apart from using `:name foo$bar` in gen-class? Like with directory strucutre or via filename
[19:55:10] <andreyorst> by nested I mean from the bytecode perspective
[19:55:49] <andreyorst> it works fine with :name parameter, just doesn't reflect the overall strucutre of the project and feels hacky
[20:21:46] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 245 seconds)
[20:24:49] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Remote host closed the connection)
[20:27:29] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[20:32:07] *** Quits: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com) (Ping timeout: 265 seconds)
[20:42:11] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 245 seconds)
[20:43:09] *** Quits: schmudde (~schmudde@88.157.97.9) (Quit: WeeChat 3.2)
[20:47:50] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz…)
[20:48:07] *** Joins: stevea (~stevea@user/stevea)
[20:48:16] *** Joins: matty_matt (~matt@cpe-98-14-254-37.nyc.res.rr.com)
[20:48:36] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:48:53] *** Joins: stevea (~stevea@user/stevea)
[20:49:22] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:50:25] *** Joins: stevea (~stevea@user/stevea)
[20:50:54] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:51:58] *** Joins: stevea (~stevea@user/stevea)
[20:52:27] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:52:45] *** Joins: stevea (~stevea@user/stevea)
[20:53:14] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:53:32] *** Joins: stevea (~stevea@user/stevea)
[20:54:00] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:54:18] *** Joins: stevea (~stevea@user/stevea)
[20:54:48] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:55:05] *** Joins: stevea (~stevea@user/stevea)
[20:55:34] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:56:37] *** Joins: stevea (~stevea@user/stevea)
[20:57:06] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:57:23] *** Joins: stevea (~stevea@user/stevea)
[20:57:52] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:58:55] *** Joins: stevea (~stevea@user/stevea)
[20:59:24] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[20:59:42] *** Joins: stevea (~stevea@user/stevea)
[21:00:11] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[21:04:52] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[21:19:00] *** Quits: eddof13 (~textual@177.241.59.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:34:20] *** Joins: op2 (~op@user/op2)
[21:53:04] *** Quits: sailorCa` (~user@p200300f6a70c4a4025ec43df42d4da4a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:54:13] *** Joins: sailorCa` (~user@p200300f6a70c4a644011e1377f97afd5.dip0.t-ipconnect.de)
[22:02:39] *** Joins: eddof13 (~textual@2806:102e:12:18a2:ed8f:fb44:845:a3fb)
[22:04:34] *** Quits: eddof13 (~textual@2806:102e:12:18a2:ed8f:fb44:845:a3fb) (Client Quit)
[22:10:11] *** Joins: eddof13 (~textual@189.178.0.178)
[22:13:37] *** Quits: op2 (~op@user/op2) (Ping timeout: 265 seconds)
[22:20:13] *** Joins: op2 (~op@user/op2)
[22:32:38] *** Quits: op2 (~op@user/op2) (Quit: rcirc on GNU Emacs 28.0.50)
[22:34:19] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Read error: Connection reset by peer)
[22:42:09] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[23:06:23] <jeaye> yeik-the-spik[m]: Happy to help.
[23:18:23] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 265 seconds)
[23:19:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Remote host closed the connection)
[23:26:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[23:54:38] *** Joins: to-hu (~Thunderbi@p57b5a4b4.dip0.t-ipconnect.de)
