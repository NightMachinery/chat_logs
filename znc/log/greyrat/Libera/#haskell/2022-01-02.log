[00:00:17] *** Joins: simendsjo (~user@host.62.119.30.141.bitcom.se)
[00:00:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:00:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:00:37] *** Joins: wroathe (~wroathe@user/wroathe)
[00:02:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:02:06] <lechner_> never mind, it worked!
[00:03:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:03:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[00:05:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:05:44] *** Joins: nschoe (~quassel@2a01:e0a:8e:a190:9f8d:fdc0:8a25:3c46)
[00:05:44] *** Quits: nschoe (~quassel@2a01:e0a:8e:a190:9f8d:fdc0:8a25:3c46) (Client Quit)
[00:05:52] *** Joins: cosimone (~user@93-34-132-88.ip49.fastwebnet.it)
[00:05:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:07:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:07:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:09:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:09:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:11:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:11:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:12:04] *** Joins: euouae (~euouae@user/euouae)
[00:12:09] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[00:12:19] <euouae> Hello, what part of the monad definition makes monads appropriate for effectful computations?
[00:13:09] <int-e> :t (>>=)
[00:13:09] <lambdabot> Monad m => m a -> (a -> m b) -> m b
[00:13:32] <euouae> is it the associativity of the join operator?
[00:13:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:13:45] <euouae> is join "running" the effects?
[00:14:00] <int-e> this gives a nice way of sequencing effects one after another (where "sequencing" is really more syntactical than about the actual effects)
[00:14:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:14:07] <int-e> @src (>>=)
[00:14:07] <lambdabot> Source not found. I am sorry.
[00:14:14] <int-e> (just checking)
[00:14:16] <Rembane> The runtime system takes care of executing the effects in IO. 
[00:14:22] <Rembane> IIRC
[00:14:24] <euouae> How do you read that type and understand sequencing?
[00:14:38] <euouae> what is an effect?
[00:14:51] <int-e> :t join -- yes, join also sequences two effects; f >>= g = join (g <$> f)  after all
[00:14:52] <lambdabot> Monad m => m (m a) -> m a
[00:15:01] <euouae> I guess `a -> m b` is a computation with an effect, right?
[00:15:18] <int-e> what kind of "effect" you have depends on the monad
[00:15:21] <Rembane> It doesn't have to. Take a look at Data.Maybe. 
[00:15:22] <euouae> and we already have an effect `m a`, so we can continue the chain of computation. 
[00:15:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:15:47] <euouae> Rembane Oh yes, I do understand that. I'm just trying to understand that 1) a functor 2) the coherence laws -- why is /that/ the right tool for effects
[00:16:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:16:11] <int-e> IO is basically the only one with a *real* effect (launching missiles etc)
[00:17:15] <dsal> You can think of ST as closer to State than IO and have a similar mental model.   Might be a good bridge.
[00:17:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:17:50] <dsal> IO has no constrained effects, where State allows you to make arbitrary changes to a specific value.  The ordering of those effects is important.
[00:17:52] <monochrom> Mathematicians study monads in terms of join. But join is not very relatable to programmers. >>= is most relatable, Kleisli arrow is not bad either.
[00:18:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:18:03] *** Quits: simendsjo (~user@host.62.119.30.141.bitcom.se) (Remote host closed the connection)
[00:18:27] <int-e> euouae: monads weren't made for effects... I think people studying effects noticed that they have a monadic structure.
[00:19:13] <int-e> euouae: Which makes that kind of question fruitless (at least to my mind) because it's putting the cart before the horse.
[00:19:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:19:48] <euouae> perhaps my confusion is as to what is a formal definition for an effect
[00:19:59] <monochrom> Heh we have none.
[00:20:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:20:32] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 240 seconds)
[00:20:49] <euouae> see, if I were any less wiser, I'd still be confused. But nay, I am now not confused anymore!
[00:21:11] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:21:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:21:50] <monochrom> BTW I know of a philosopher who opposes having a rigorous definition of "life" for its potential in stagnating biology. Part of the fun of biology is to leave it open so you can always challenge or expand the scope.
[00:22:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:22:17] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[00:22:19] <Rembane> euouae: here, have loads of examples: https://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf
[00:22:21] <monochrom> And so I think it is a good thing we don't draw a hard line around "effect" either.
[00:23:16] <euouae> Rembane nice, thank you!
[00:23:21] <Rembane> euouae: No worries. :)
[00:23:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:23:55] <int-e> > [1,2,3] >>= \x -> [x..x*2] -- exercise, or possibly a topic for debate: what's the effect here?
[00:23:57] <lambdabot>  [1,2,2,3,4,3,4,5,6]
[00:24:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:24:10] <Rembane> monochrom: OTOH, we can draw a fuzzy line around the effect idea and put the data type IO on it. 
[00:24:25] <int-e> (the stock answer is "nondeterminism")
[00:24:35] <EvanR> euouae, you go through many examples of effects and then maybe or maybe not you know what an effect is
[00:25:07] <monochrom> Well yeah same for "data structure". We do have a consensus on a larger class of examples and a large class of counterexamples for both.
[00:25:25] <monochrom> Same for "car", really.
[00:25:36] <EvanR> examples often given first, modifying a state in a stateful computation, using an RNG (same thing really), throwing an exception to stop a computation early, outputting to a log during the computation
[00:25:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:25:43] <int-e> monochrom: contents of address register?
[00:25:52] <monochrom> haha
[00:25:59] <monochrom> That's a data structure!
[00:26:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:26:30] <dsal> Is "Reader monad" considered related to effects?  That makes things blurry for me.
[00:26:41] <EvanR> later on people start messing with you calling "non-termination" an effect, also CPS
[00:27:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:27:58] <int-e> dsal: it's the effect of living in an unchanging environment (or maybe a museum: you can look, but not touch)
[00:28:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:28:14] <int-e> (I'm not very serious about this)
[00:28:18] <EvanR> that doesn't seem like a proper effect xD
[00:28:25] <EvanR> it's a lack of effect
[00:28:39] <Rembane> You can change it, but only one monter at the time, and when you leave scope it is restored. 
[00:28:57] <monochrom> If the answer depends on a hidden datum, that is a little bit effectful.
[00:28:57] <EvanR> that's a weird feature of Reader specifically
[00:29:33] <int-e> reader is fairly useless... except that it allows you to use generic monadic functions; it's a bit more useful as a transformer
[00:29:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:30:05] <monochrom> :(
[00:30:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:30:23] <monochrom> The hom functor is used all over the place!
[00:30:24] <int-e> (but again for interacting well with monadic library interfaces, not for having an actual effect)
[00:30:33] <monochrom> OK, but only as a functor, seldom as a monad.
[00:31:05] <int-e> monochrom: that sounds suspiciously like category theory :P
[00:31:40] <Rembane> When is Reader useful and why? I haven't run into a use for it yet so the question is honest.
[00:31:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:32:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:32:25] <euouae> code security?
[00:32:29] *** Joins: simendsjo (~user@host.62.119.30.141.bitcom.se)
[00:32:45] *** Joins: nhatanh02 (~satori@123.24.172.30)
[00:32:53] <euouae> if the type is Reader as opposed to Writer you know what the priviledges are just by looking at the type, useful for code review 
[00:33:08] <euouae> in some scenario, I could imagine that being helpful I suppose
[00:33:46] <monochrom> The Yoneda lemma states that (âˆ€x. Reader E -> F x) is in bijection with F E, and the bijection is natural in both E and F.
[00:33:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:34:06] <monochrom> err,  (âˆ€x. Reader E x -> F x)
[00:34:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:34:39] <monochrom> Aka the collection of natural transformations from Reader E to F.
[00:34:48] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[00:35:30] <EvanR> euouae, that would be true if local wasn't in the Reader API
[00:35:47] <EvanR> so it's basically the same as using a function argument
[00:35:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:36:11] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:36:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:36:33] <EvanR> so is ReaderT
[00:37:02] <int-e> The practical utility I've gotten out of ReaderT (the transformer) is that when I write code in mtl style... so newtype App a = App { runApp: WriterT w IO a } deriving (Monad)  and then realize that I need to carry a configuration as well (from command line options), then I can add a ReaderT Config  into the stack and most of the existing code that doesn't care about the configuration will...
[00:37:08] <int-e> ...continue to work.
[00:37:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:37:54] *** Quits: simendsjo (~user@host.62.119.30.141.bitcom.se) (Remote host closed the connection)
[00:38:15] <EvanR> if the code is already monadic style yeah
[00:38:17] *** Joins: kjak_ (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[00:38:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:38:26] <EvanR> er, do notation
[00:38:40] <Rembane> int-e: That's very useful. I'm usually using StateT for that, but I'm not coding Haskell in a hm... production setting so I can change things very carelessly.
[00:38:43] <int-e> EvanR: yeah. also having that newtype is quite important
[00:38:55] <int-e> because that's how you abstract from the inner stack
[00:39:33] <int-e> Which is why I wrote "mtl style"; it's really a particular coding style and you only benefit from ReaderT in this way when you're using it.
[00:39:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:40:00] *** Parts: op_4 (~op_4@user/op-4/x-9116473) (leaving)
[00:40:12] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:40:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:40:28] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[00:41:44] <int-e> @pl \f g x -> f x (g x)
[00:41:44] <lambdabot> ap
[00:41:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:42:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[00:42:10] <int-e> there's also this pointless use of the (->) r reader monad
[00:42:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:42:35] <int-e> Which I guess monochrom meant earlier. It's occasionally useful.
[00:42:50] <int-e> > sequence [succ, pred] 1
[00:42:52] <lambdabot>  [2,0]
[00:42:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[00:43:04] <int-e> > map ($ 1) [succ, pred]
[00:43:05] <lambdabot>  [2,0]
[00:43:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:44:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:45:05] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[00:45:48] <Rembane> int-e: That's neat! 
[00:45:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:46:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:48:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:48:04] <monochrom> Functor-Man: Hom Functing.  Functor-Man: Far from Hom.  Functor-Man: No Way Hom.
[00:48:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:48:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:50:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:50:11] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[00:50:17] *** Quits: ymherklotz (~ymherklot@139.59.166.119) (Ping timeout: 240 seconds)
[00:50:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:52:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:52:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:53:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:54:12] *** Joins: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com)
[00:54:26] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:54:42] *** Joins: falafel_ (~falafel@2603-8000-d800-688c-587d-3efc-bc6e-2970.res6.spectrum.com)
[00:55:36] <EvanR> is venom somehow contravariant functor man
[00:56:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:56:26] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:56:43] <monochrom> :)
[00:57:21] *** Joins: acidjnk (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de)
[00:57:21] *** Joins: acidjnk_new (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de)
[00:58:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[00:58:17] *** Quits: falafel (~falafel@2603-8000-d800-688c-6db4-c125-f693-41cb.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:58:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[00:59:01] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[01:00:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:00:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:01:17] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[01:02:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:02:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:04:06] <lechner_> c_wraith: i built ghc for 8.10.7 for Debian bullseye and could make it available, if anyone needs it
[01:04:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:04:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:06:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:06:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:07:17] *** Quits: falafel_ (~falafel@2603-8000-d800-688c-587d-3efc-bc6e-2970.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:08:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:08:13] <lechner_> Hi, why does cabal force me to bump a prerequisite declaration on base to the installed version 4.14, please? What does the 'greater than' mean?     http://paste.debian.net/1225513/
[01:08:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:09:41] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[01:10:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:10:17] <sclv> lechner_: the package you're trying to build has declared that it requires base ^>= 4.13.0.0
[01:10:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:10:42] <sclv> the carrot greater eaql means it requires base be somewhere between 4.13 and 4.14 but no higher
[01:10:53] <lechner_> i see!
[01:11:06] <lechner_> it always helps to know the docs
[01:11:20] <lechner_> sorry i am a newbie, and hyperctive too
[01:12:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:12:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:14:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:14:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:14:30] <lechner_> sclv: sometimes i also forget to say, thank you!
[01:14:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:14:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[01:15:05] <sclv> no prob
[01:16:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:16:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:17:18] *** Joins: falafel_ (~falafel@2603-8000-d800-688c-587d-3efc-bc6e-2970.res6.spectrum.com)
[01:18:05] *** Joins: falafel__ (~falafel@2603-8000-d800-688c-c064-54e6-9a05-e359.res6.spectrum.com)
[01:18:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:18:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:20:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:20:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:21:48] *** Quits: falafel_ (~falafel@2603-8000-d800-688c-587d-3efc-bc6e-2970.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:22:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:22:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[01:22:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:22:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:22:43] *** Joins: wroathe (~wroathe@user/wroathe)
[01:22:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:24:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:24:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:25:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[01:26:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:26:43] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[01:26:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:27:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:28:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:28:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:30:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:30:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:32:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:32:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:34:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:34:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:35:18] *** Joins: deadmarshal (~deadmarsh@95.38.115.228)
[01:35:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:36:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:36:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:38:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:39:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:39:37] *** Quits: deadmarshal (~deadmarsh@95.38.115.228) (Ping timeout: 240 seconds)
[01:40:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:41:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:41:57] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[01:42:30] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[01:42:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:42:53] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[01:43:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:44:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:45:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:46:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:47:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:48:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:49:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:50:17] *** Quits: falafel__ (~falafel@2603-8000-d800-688c-c064-54e6-9a05-e359.res6.spectrum.com) (Remote host closed the connection)
[01:50:32] *** Joins: falafel__ (~falafel@2603-8000-d800-688c-c064-54e6-9a05-e359.res6.spectrum.com)
[01:50:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:51:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:52:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:53:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:54:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:55:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:55:30] *** Quits: werneta_ (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[01:56:48] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:56:53] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[01:57:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:57:17] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[01:58:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[01:59:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:00:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:01:01] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 256 seconds)
[02:01:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:02:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:03:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:03:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[02:04:10] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[02:04:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:05:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:05:32] *** Quits: falafel__ (~falafel@2603-8000-d800-688c-c064-54e6-9a05-e359.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:07:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:07:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:08:01] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[02:08:11] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:09:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:09:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:11:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:11:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:12:01] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[02:13:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:13:42] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[02:13:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:15:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:15:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:17:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:17:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:18:20] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 268 seconds)
[02:19:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:19:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:21:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:21:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:22:18] *** Joins: benin (~benin@183.82.178.161)
[02:23:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:23:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:25:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:25:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:27:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:27:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:29:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:29:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:31:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:31:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:33:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:33:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[02:34:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:34:16] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[02:35:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:35:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:35:59] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[02:35:59] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[02:35:59] *** finn_elija is now known as FinnElija
[02:36:02] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[02:36:43] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:37:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:37:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:38:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[02:39:11] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:39:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:40:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:40:40] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:41:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:41:47] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:42:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:42:08] *** Quits: ankhers (e99e97ef8e@2604:bf00:561:2000::2a2) (Remote host closed the connection)
[02:42:18] *** Joins: ankhers (e99e97ef8e@2604:bf00:561:2000::2a2)
[02:43:29] *** ankhers is now known as Ankhers
[02:43:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:43:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:43:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:43:43] *** Joins: wroathe (~wroathe@user/wroathe)
[02:43:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:44:53] *** Joins: Erutuon (~Erutuon@user/erutuon)
[02:45:22] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[02:45:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:46:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:47:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:48:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:48:17] *** Joins: kitzman (~kitzman@user/dekenevs)
[02:49:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:50:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:50:13] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[02:50:29] <kitzman> new haskeller here, mainly for giggles; what i'm currently trying to achieve: create a sum type, and a "class C a", and then create instances for each member of the sum type. however - I don't think A "S = A | B" is considered a type.. or is it?
[02:51:35] <geekosaur> if you mean `data S = A | B`, S is a type and A and B are (data) constructors
[02:51:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:51:49] <geekosaur> not so different form `data Bool = False | True`
[02:51:53] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:52:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:52:34] <kitzman> I see, so I have to create separate types.
[02:52:34] <geekosaur> I would alos question why you want a typeclass, but we'll address that when we get to it
[02:52:50] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[02:53:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:53:53] <kitzman> hmm, I'm thinking of creating, for example a "HealthService", which would have instances for each libvirt provider (qemu, xen, etc).
[02:54:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:54:09] <kitzman> i think it might be the wrong way to approach the problem, though
[02:55:07] <kitzman> (i.e: "instance HealthService QemuProvider etc")
[02:55:14] <geekosaur> that's not generally how we do things in Haskell
[02:55:24] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[02:55:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:55:49] <geekosaur> more likely it'd be data HealthService = Qemu whatever | Xen whatever | ...
[02:56:15] <geekosaur> typeclasses are used when you have conceptually similar operations that do different things on different types
[02:56:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:56:55] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Quit: ERC (IRC client for Emacs 27.2))
[02:57:09] <geekosaur> so for example we have `Functor`, which provides an operation `fmap`. What this actually does depends on the instance, but it is always conceptually mapping some operation over that type
[02:57:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:58:10] <geekosaur> for lists, fmap is map. for Maybe, if the value is Just something then fmap applies the operation to something and wraps it in another Just; it does nothing for Nothing
[02:58:13] <geekosaur> and so on
[02:58:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:59:01] *** Quits: retro_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[02:59:37] <geekosaur> there are times when this is appropriate for what you're describing, but usually they're not similar enough and when they are a simple record of functions is often preferable
[02:59:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[02:59:55] <geekosaur> (typeclasses are not OOP classes, in short)
[02:59:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:00:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:00:55] *** Joins: AlexNoo_ (~AlexNoo@94.233.241.107)
[03:01:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:01:58] <kitzman> alright, i understand. i'll play a bit more with it. currently thinking of cases in which typeclasses would be more appropriate (so then I know when and when not to use them)
[03:02:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:02:26] <geekosaur> take a look at https://wiki.haskell.org/Typeclassopedia
[03:02:43] *** Quits: Alex_test (~al_test@94.233.241.181) (Ping timeout: 268 seconds)
[03:03:09] <geekosaur> it shows what the basic Haskell libraries do with typeclasses, which is a pretty good indication of what they're good for
[03:03:10] <kitzman> i could have for example "class Persistable a" and then depending on a, choose how I can persist things
[03:03:16] *** Joins: cheater (~Username@user/cheater)
[03:03:16] <kitzman> nice, thank you
[03:03:25] <kitzman> (couldn't come up with a better example yet)
[03:03:42] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:03:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:04:17] *** Quits: AlexNoo (~AlexNoo@94.233.241.181) (Ping timeout: 240 seconds)
[03:04:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:04:29] *** Quits: AlexZenon (~alzenon@94.233.241.181) (Ping timeout: 256 seconds)
[03:06:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:06:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:07:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:07:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:07:40] *** Joins: wroathe (~wroathe@user/wroathe)
[03:08:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:08:24] *** Joins: Alex_test (~al_test@94.233.241.107)
[03:08:26] *** Joins: AlexZenon (~alzenon@94.233.241.107)
[03:08:29] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:09:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:10:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:10:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:11:46] *** Quits: max22- (~maxime@2a01cb0883359800767a96b77d5018f7.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:12:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:12:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:13:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[03:14:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:14:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:16:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:16:42] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:18:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:18:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:18:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:19:49] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:20:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:20:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:22:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:22:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:24:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:24:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:26:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:26:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:28:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:28:42] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[03:28:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:29:05] <EvanR> kitzman, what's the API for Persistable, curious
[03:30:26] <kitzman> when i came up with this example, i was thinking that certain records would be persisted in unique different ways (which is almost never the case)
[03:30:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:30:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:31:18] <kitzman> maybe a better example would be using typeclasses to encode an interpreted language
[03:31:32] <kitzman> (actions on it , at least)
[03:31:55] <EvanR> if you are just thinking of records, and "persisting" is basically the same for anything, that's where you could use Generics
[03:32:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:32:53] <geekosaur> actually a DSL is better for an interpreted language. conceivably a typeclass could be used to represent common operations over multiple interpreted languages, though
[03:32:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:33:57] *** Quits: cosimone (~user@93-34-132-88.ip49.fastwebnet.it) (Ping timeout: 256 seconds)
[03:34:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:34:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:34:58] <EvanR> by using what fits best for a given task, I somehow ended up NOT using personal custom type classes very much
[03:35:09] <EvanR> or at all
[03:36:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:36:38] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[03:36:59] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:37:31] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[03:38:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:39:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:39:06] *** Quits: Putonlalla (~sapekiis@it-cyan.it.jyu.fi) (Quit: Leaving.)
[03:39:16] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:40:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:41:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:42:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:43:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:44:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[03:44:54] *** Joins: Putonlalla (~sapekiis@it-cyan.it.jyu.fi)
[03:45:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:50:10] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:53:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:54:55] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[04:01:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:11:59] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[04:18:52] *** Joins: nosewings (~ngpc@2603-8081-3e05-e2d0-bcef-bc02-9532-fb4a.res6.spectrum.com)
[04:24:02] *** Quits: nosewings (~ngpc@2603-8081-3e05-e2d0-bcef-bc02-9532-fb4a.res6.spectrum.com) (Remote host closed the connection)
[04:28:49] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:30:02] *** Quits: acidjnk (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:30:02] *** Quits: acidjnk_new (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:39:04] *** Joins: Everything (~Everythin@37.115.210.35)
[04:40:11] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[04:40:47] *** Joins: vysn (~vysn@user/vysn)
[04:41:54] *** Joins: biog (~user1@159.224.42.85)
[04:43:29] *** Quits: phma (phma@2001:5b0:215a:ce38:5375:14ef:75:984) (Read error: Connection reset by peer)
[04:45:30] *** Joins: phma (phma@2001:5b0:215a:cfa8:5497:ca5d:85ad:7b15)
[04:50:08] *** Quits: flukiluke (~m-7humut@2603:c023:c000:6c7e:8945:ad24:9113:a962) (Remote host closed the connection)
[04:50:58] *** Joins: ensyde (~ensyde@2600:1702:2e30:1a40:4497:36a6:1605:364c)
[04:51:05] *** Joins: flukiluke (~m-7humut@2603:c023:c000:6c7e:8945:ad24:9113:a962)
[04:52:54] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 260 seconds)
[04:59:09] *** Joins: gamara (~gamara3@66-203-186-197.ded.execulink.com)
[05:00:13] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[05:10:38] *** Quits: gamara (~gamara3@66-203-186-197.ded.execulink.com) (Remote host closed the connection)
[05:12:40] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[05:14:49] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[05:14:53] <qrpnxz> no data.ix instance for clong :((((
[05:14:56] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[05:18:11] <EvanR> no PrintfArg instance for CInt xD
[05:18:50] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[05:20:55] <qrpnxz> rip
[05:22:05] <qrpnxz> Ix maps to Int so no point in using CLong i guess. I'll just convert to Int
[05:26:04] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[05:33:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:49:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:49:59] <qrpnxz> is there a way to get a (`Ptr a`) from an `a`? I'm trying to use FFI on a function that takes a `const *` and I'd like to use it without having to introduce `IO` with `alloca` and i doubt unsafePerformIO is appropriate in this case.
[05:50:12] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzzâ€¦)
[05:50:37] <EvanR> the issue would be if `a' lives in the haskell heap
[05:50:59] <EvanR> passing a pointer to it, when the gc may move it from under you, doesn't make sense
[05:51:00] <qrpnxz> it does indeed
[05:51:08] <qrpnxz> ah right
[05:51:18] <EvanR> you might want to make a Storable copy of it
[05:51:31] *** Joins: califax- (~califax@user/califx)
[05:51:34] <qrpnxz> `a` is indeed storable in this case
[05:51:42] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[05:51:42] <EvanR> this is where alloca comes in
[05:51:48] <qrpnxz> so right no i do alloca and poke it yes
[05:51:51] <qrpnxz> *now
[05:52:20] <qrpnxz> bit sad it puts me in IO land for what should be pure tho
[05:52:37] *** Joins: mbuf (~Shakthi@122.178.240.169)
[05:52:53] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[05:53:42] <qrpnxz> maybe unsafePerformIO will be good, just gotta make sure ik it's okay
[05:53:56] <EvanR> https://hackage.haskell.org/package/base-4.15.0.0/docs/Foreign-Marshal-Unsafe.html
[05:54:32] <qrpnxz> OHHH
[05:54:35] <qrpnxz> awesome
[05:54:41] <EvanR> if you're sure what you're doing is pure
[05:55:09] <EvanR> storing something in an alloca is one thing, but then what
[05:55:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:55:22] *** califax- is now known as califax
[05:55:42] <qrpnxz> it's pure for sure thanks a lot
[06:03:28] <EvanR> also, you can pass a pointer to ByteStrings data because it lives in pinned memory
[06:05:41] <EvanR> data ByteString = BS !(ForeignPtr Word8) !Int
[06:10:04] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[06:10:36] *** Joins: burnsidesLlama (~burnsides@client-8-64.eduroam.oxuni.org.uk)
[06:10:55] *** Quits: xff0x_ (~xff0x@port-92-193-207-83.dynamic.as20676.net) (Ping timeout: 256 seconds)
[06:11:57] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[06:12:50] *** Joins: xff0x_ (~xff0x@2001:1a81:5335:ab00:da9:8e78:1998:fd14)
[06:14:05] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi) (Quit: Leaving.)
[06:14:56] *** Quits: burnsidesLlama (~burnsides@client-8-64.eduroam.oxuni.org.uk) (Ping timeout: 245 seconds)
[06:18:32] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[06:21:59] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:22:22] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[06:22:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[06:23:37] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Client Quit)
[06:25:34] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[06:26:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[06:29:25] *** Quits: finalti[m] (~finaltima@2001:470:69fc:105::d909) (Ping timeout: 240 seconds)
[06:29:25] *** Quits: Nate[m]12 (~m52957mat@2001:470:69fc:105::1:591a) (Ping timeout: 240 seconds)
[06:29:25] *** Quits: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11) (Ping timeout: 240 seconds)
[06:29:25] *** Quits: Ollie[m] (~ollieocha@2001:470:69fc:105::41a5) (Ping timeout: 240 seconds)
[06:29:25] *** Quits: Artem[m] (~artemtype@2001:470:69fc:105::75b) (Ping timeout: 240 seconds)
[06:29:25] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 240 seconds)
[06:29:49] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 240 seconds)
[06:30:07] *** Joins: gaff (~gaff@49.207.220.89)
[06:30:13] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Ping timeout: 240 seconds)
[06:31:09] *** Joins: otherwise (~otherwise@2601:602:880:90f0:40ea:46b1:43b:9b4a)
[06:31:41] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[06:31:49] *** Quits: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789) (Ping timeout: 240 seconds)
[06:31:49] *** Quits: alex[m]1 (~alexchete@2001:470:69fc:105::1:1001) (Ping timeout: 240 seconds)
[06:31:49] *** Quits: Topik[m] (~topikmatr@2001:470:69fc:105::a082) (Ping timeout: 240 seconds)
[06:31:49] *** Quits: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1) (Ping timeout: 240 seconds)
[06:31:49] *** Quits: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57) (Ping timeout: 240 seconds)
[06:31:49] *** Quits: fsckskye[m] (~kmatrixth@2001:470:69fc:105::1:3b2f) (Ping timeout: 240 seconds)
[06:33:33] *** Joins: Nate[m]12 (~m52957mat@2001:470:69fc:105::1:591a)
[06:33:35] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:33:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[06:33:37] *** Joins: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11)
[06:33:47] *** Joins: Ollie[m] (~ollieocha@2001:470:69fc:105::41a5)
[06:36:25] *** Joins: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789)
[06:39:01] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[06:40:47] *** Quits: berberman_ (~berberman@user/berberman) (Quit: ZNC 1.8.2 - https://znc.in)
[06:41:07] *** Joins: berberman (~berberman@user/berberman)
[06:42:05] *** Quits: td_ (~td@muedsl-82-207-238-133.citykom.de) (Ping timeout: 256 seconds)
[06:42:18] *** Joins: td_ (~td@muedsl-82-207-238-133.citykom.de)
[06:43:05] *** Joins: Artem[m] (~artemtype@2001:470:69fc:105::75b)
[06:43:08] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[06:43:54] *** Joins: finalti[m] (~finaltima@2001:470:69fc:105::d909)
[06:44:04] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[06:44:07] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[06:44:56] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[06:44:57] *** Joins: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1)
[06:45:11] *** Joins: Topik[m] (~topikmatr@2001:470:69fc:105::a082)
[06:46:01] *** Joins: alex[m]1 (~alexchete@2001:470:69fc:105::1:1001)
[06:46:04] *** Joins: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57)
[06:46:06] *** Joins: fsckskye[m] (~kmatrixth@2001:470:69fc:105::1:3b2f)
[06:46:50] *** Quits: Keriel (~Keriel@bras-base-toroon474qw-grc-71-184-145-2-133.dsl.bell.ca) (Remote host closed the connection)
[06:47:17] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[06:47:17] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[06:50:14] *** Joins: Feuermagier_ (~Feuermagi@213.178.26.41)
[06:52:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 256 seconds)
[07:00:21] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[07:00:27] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:9ce9:17f7:15aa:852c) (Ping timeout: 250 seconds)
[07:02:30] *** Joins: vysn (~vysn@user/vysn)
[07:05:11] *** Quits: Feuermagier_ (~Feuermagi@213.178.26.41) (Quit: Leaving)
[07:05:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:12:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:13:00] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[07:18:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 268 seconds)
[07:18:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:18:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:18:02] *** finn_elija is now known as FinnElija
[07:19:22] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[07:19:45] *** Joins: gentauro (~gentauro@user/gentauro)
[07:22:14] *** Quits: td_ (~td@muedsl-82-207-238-133.citykom.de) (Ping timeout: 260 seconds)
[07:24:05] *** Joins: td_ (~td@muedsl-82-207-238-078.citykom.de)
[07:37:19] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:46:15] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[07:50:15] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[07:51:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[07:56:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[07:57:33] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[08:03:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[08:07:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[08:15:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:15:27] *** Joins: deadmarshal (~deadmarsh@95.38.115.228)
[08:15:30] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:20:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:21:12] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[08:30:53] *** Joins: uam (uid360535@id-360535.hampstead.irccloud.com)
[08:36:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[08:36:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[08:41:25] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[08:41:46] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Read error: Connection reset by peer)
[08:42:01] *** Quits: xff0x_ (~xff0x@2001:1a81:5335:ab00:da9:8e78:1998:fd14) (Ping timeout: 245 seconds)
[08:43:02] *** Joins: xff0x_ (~xff0x@2001:1a81:5335:ab00:1f30:28de:21bc:381)
[08:44:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:44:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:44:44] *** Joins: wroathe (~wroathe@user/wroathe)
[08:46:30] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[08:46:46] *** Joins: juhp (~juhp@128.106.188.82)
[08:49:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:51:16] *** Joins: searemind (~u0_a1148@122.161.51.168)
[08:53:07] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[08:53:11] *** Quits: searemind (~u0_a1148@122.161.51.168) (Client Quit)
[08:53:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:57:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[09:00:37] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[09:11:04] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[09:11:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:11:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:11:06] *** Joins: wroathe (~wroathe@user/wroathe)
[09:15:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:16:24] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[09:18:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:23:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[09:28:58] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[09:34:27] *** Quits: otherwise (~otherwise@2601:602:880:90f0:40ea:46b1:43b:9b4a) (Remote host closed the connection)
[09:35:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 268 seconds)
[09:43:24] *** Joins: otherwise (~otherwise@2601:602:880:90f0:41f1:8bd4:6719:bbb3)
[09:47:37] *** Quits: otherwise (~otherwise@2601:602:880:90f0:41f1:8bd4:6719:bbb3) (Ping timeout: 240 seconds)
[09:53:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[09:53:55] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:00:16] *** Quits: bliminse_ (~bliminse@host86-186-17-7.range86-186.btcentralplus.com) (Quit: leaving)
[10:04:58] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[10:07:22] *** Joins: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[10:09:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[10:13:49] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[10:15:43] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[10:18:03] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[10:18:14] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:18:32] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[10:18:46] *** Joins: Guest1 (~Guest1@89-64-60-196.dynamic.chello.pl)
[10:19:29] *** Joins: otherwise (~otherwise@2601:602:880:90f0:6cd6:9b3a:8e6a:baf6)
[10:20:02] *** Quits: Guest1 (~Guest1@89-64-60-196.dynamic.chello.pl) (Client Quit)
[10:20:04] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:23:37] *** Quits: otherwise (~otherwise@2601:602:880:90f0:6cd6:9b3a:8e6a:baf6) (Ping timeout: 240 seconds)
[10:27:10] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Remote host closed the connection)
[10:27:41] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[10:38:29] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[10:38:56] *** Quits: sirlensalot (~sirlensal@ool-44c5f8c9.dyn.optonline.net) (Quit: sirlensalot)
[10:43:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[10:46:17] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:47:04] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[10:50:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:51:37] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[10:57:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[10:57:37] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[10:58:12] *** Joins: Jing (~hedgehog@2604:a840:3::1013)
[11:01:52] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 268 seconds)
[11:04:55] *** Quits: vglfr (~vglfr@88.155.60.141) (Remote host closed the connection)
[11:05:05] *** Joins: hexology (~hexology@user/hexology)
[11:06:04] *** Joins: analognoise (~analognoi@185.216.74.148)
[11:08:34] *** Joins: xkuru (~xkuru@user/xkuru)
[11:11:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:11:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:11:53] *** Joins: wroathe (~wroathe@user/wroathe)
[11:13:56] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[11:14:39] *** Joins: nhatanh02 (~satori@123.24.172.30)
[11:16:10] *** Joins: vglfr (~vglfr@88.155.60.141)
[11:16:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[11:18:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[11:19:46] <qrpnxz> if i ccall export a function and I replace CInt in the type with Word8, it compiles, but I don't know if this is going to lead to undefined behaviour or how exactly it is doing the conversion
[11:25:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:27:02] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[11:27:21] *** xdej_ is now known as xdej
[11:29:15] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:29:16] *** Quits: Jing (~hedgehog@2604:a840:3::1013) (Remote host closed the connection)
[11:33:10] *** Joins: Jing (~hedgehog@2604:a840:3::1013)
[11:34:04] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[11:37:08] *** Joins: coolnickname (uid531864@user/coolnickname)
[11:38:12] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[11:41:59] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:45:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:53:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:53:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:53:12] *** Joins: wroathe (~wroathe@user/wroathe)
[11:53:50] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Remote host closed the connection)
[11:54:21] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[11:54:53] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[11:55:04] *** Quits: Jing (~hedgehog@2604:a840:3::1013) (Remote host closed the connection)
[11:55:45] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:95fe:89a9:e964:2e47)
[11:57:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[11:59:37] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 240 seconds)
[11:59:37] *** Quits: ensyde (~ensyde@2600:1702:2e30:1a40:4497:36a6:1605:364c) (Ping timeout: 240 seconds)
[12:04:42] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:09:13] *** Quits: tafa (~tafa@user/tafa) (Quit: ZNC - https://znc.in)
[12:10:46] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:11:04] *** Joins: tafa (~tafa@user/tafa)
[12:11:53] *** Quits: analognoise (~analognoi@185.216.74.148) (Read error: Connection reset by peer)
[12:19:28] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:28:32] *** Joins: spaceseller (~spacesell@31.147.205.13)
[12:28:36] *** Joins: spaceseller_ (~spacesell@31.147.205.13)
[12:30:09] *** Quits: std_mutex[m] (~stdmutexm@2001:470:69fc:105::1:4534) (Quit: You have been kicked for being idle)
[12:30:58] *** Quits: phma (phma@2001:5b0:215a:cfa8:5497:ca5d:85ad:7b15) (Read error: Connection reset by peer)
[12:34:16] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[12:36:36] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Remote host closed the connection)
[12:36:44] *** Joins: phma (phma@2001:5b0:210d:1438:cfd1:5ed2:55ba:b890)
[12:37:44] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:39:08] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[12:43:37] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[12:46:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[12:46:54] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[12:47:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:47:51] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:49:10] *** Quits: psudosphere (~quassel@31.220.5.250) (Ping timeout: 268 seconds)
[12:52:28] *** AlexNoo_ is now known as AlexNoo
[13:00:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:03:22] *** Joins: syrkis (~syrkis@189.122.124.214)
[13:04:26] *** Joins: acidjnk (~acidjnk@p200300d0c7271e06a45b9223f0a48f45.dip0.t-ipconnect.de)
[13:04:26] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e06a45b9223f0a48f45.dip0.t-ipconnect.de)
[13:04:29] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[13:07:09] *** Joins: hyiltiz (~quassel@31.220.5.250)
[13:07:52] *** Quits: spaceseller_ (~spacesell@31.147.205.13) (Quit: Leaving)
[13:08:18] *** Quits: spaceseller (~spacesell@31.147.205.13) (Quit: Leaving)
[13:08:35] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[13:09:23] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[13:10:25] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[13:15:37] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[13:16:03] *** Joins: vysn (~vysn@user/vysn)
[13:20:23] *** Quits: uam (uid360535@id-360535.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:23:35] *** Quits: gaff (~gaff@49.207.220.89) (Remote host closed the connection)
[13:27:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[13:27:59] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:33:57] *** jeffz` is now known as jeffz
[13:37:15] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[13:41:56] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:42:04] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[13:42:53] *** Joins: nhatanh02 (~satori@123.24.172.30)
[13:46:31] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:47:41] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[13:52:17] *** Quits: kotshie_ (~kotshie@68.72.208.140) (Ping timeout: 240 seconds)
[13:57:00] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 268 seconds)
[13:59:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:59:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:19:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:24:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:26:52] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:27:02] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-90.elisa-laajakaista.fi)
[14:27:35] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:30:49] *** Joins: alx741 (~alx741@157.100.93.160)
[14:31:29] *** Joins: Bartol (~Bartol@user/Bartol)
[14:34:46] *** Joins: ksqsf (~user@134.209.106.31)
[14:36:56] *** Joins: biog (~user1@159.224.42.85)
[14:39:25] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[14:41:57] *** Quits: xff0x_ (~xff0x@2001:1a81:5335:ab00:1f30:28de:21bc:381) (Ping timeout: 240 seconds)
[14:42:27] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:43:13] *** Joins: xff0x_ (~xff0x@2001:1a81:5335:ab00:175a:eec8:110f:8c7e)
[14:44:47] *** Quits: srk (~sorki@user/srk) (Ping timeout: 250 seconds)
[14:46:49] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:48:16] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:49:30] *** Joins: srk (~sorki@user/srk)
[14:50:43] *** Joins: megaTherion (~therion@mail.euro-spare-parts.de)
[14:51:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 268 seconds)
[14:52:49] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:53:01] *** Quits: megaTherion (~therion@mail.euro-spare-parts.de) (Client Quit)
[14:55:05] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[14:57:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:17] *** Quits: vglfr (~vglfr@88.155.60.141) (Ping timeout: 240 seconds)
[14:57:39] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[15:02:23] *** Joins: megaTherion (~therion@unix.io)
[15:03:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[15:03:35] *** Joins: ksqsf (~user@134.209.106.31)
[15:04:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[15:05:51] *** Quits: Bartol (~Bartol@user/Bartol) (Ping timeout: 256 seconds)
[15:06:01] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[15:08:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 240 seconds)
[15:17:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[15:18:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:22:02] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[15:23:21] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[15:25:16] *** Quits: benin (~benin@183.82.178.161) (Quit: The Lounge - https://thelounge.chat)
[15:28:10] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[15:28:10] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[15:28:13] *** allbery_b is now known as geekosaur
[15:31:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:31:47] *** Joins: vglfr (~vglfr@88.155.60.141)
[15:33:12] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzzâ€¦)
[15:36:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[15:46:22] *** Joins: biog (~user1@159.224.42.85)
[15:49:58] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d)
[15:57:02] *** Joins: __monty__ (~toonn@user/toonn)
[15:58:17] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Ping timeout: 240 seconds)
[15:58:50] *** Joins: _ht (~quassel@37.120.218.166)
[16:00:24] <tenniscp25> I made a simple program that monitors changes in a local directory and replicates new files to a Windows shared folder. The problem is that if I leave the program runs for a while (sometimes minutes, sometimes hours) the `copyFile` function (package: directory) throws the error below. Retrying only the copy operation with delays doesn't help. But restarting the program solves the error. Could you please sugges
[16:00:25] <tenniscp25> t what should I look into? Code snippet here: https://pastebin.com/f2tkiDu4
[16:00:25] <tenniscp25> \\10.1.2.84\...<non-latin-dir>...: copyFile:atomicCopyFileContents:withReplacementFile:openBinaryTempFile: invalid argument (Invalid argument)
[16:03:05] *** Quits: _ht (~quassel@37.120.218.166) (Ping timeout: 256 seconds)
[16:03:14] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:03:31] *** Joins: _ht (~quassel@37.120.218.149)
[16:03:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[16:04:10] *** Joins: gaff (~gaff@49.207.225.80)
[16:05:25] *** Joins: Bartol (~Bartol@user/Bartol)
[16:06:17] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 240 seconds)
[16:08:37] *** Quits: _ht (~quassel@37.120.218.149) (Ping timeout: 240 seconds)
[16:09:15] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[16:09:16] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[16:09:25] *** Quits: vglfr (~vglfr@88.155.60.141) (Ping timeout: 240 seconds)
[16:10:59] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:12:37] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[16:13:16] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[16:13:19] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[16:13:34] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[16:13:58] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:8d43:554e:d62c:915d) (Remote host closed the connection)
[16:16:59] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e06a45b9223f0a48f45.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:16:59] *** Quits: acidjnk (~acidjnk@p200300d0c7271e06a45b9223f0a48f45.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:17:20] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[16:18:43] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[16:21:49] <hpc> tenniscp25: when that error happens, what happens if you try copying the file from explorer?
[16:23:24] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:23:28] *** Joins: duuude (~user@user/duuude)
[16:24:01] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[16:24:42] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[16:29:10] *** Joins: Guest366 (~Guest3@ec2-52-53-148-191.us-west-1.compute.amazonaws.com)
[16:31:54] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:37:02] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:39:22] <tenniscp25> hpc: gonna have to try that. currently it restarts itself immediately.
[16:39:28] *** Quits: Guest366 (~Guest3@ec2-52-53-148-191.us-west-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[16:39:55] *** Joins: Guest3 (~Guest3@ec2-52-53-148-191.us-west-1.compute.amazonaws.com)
[16:41:26] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[16:42:19] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:42:35] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[16:46:37] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[16:48:55] *** Quits: jlamothe (~jlamothe@198.251.61.229) (Ping timeout: 250 seconds)
[16:50:24] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[16:50:47] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:51:07] *** Quits: Guest3 (~Guest3@ec2-52-53-148-191.us-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[16:51:57] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 240 seconds)
[16:52:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 268 seconds)
[16:53:05] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[16:55:13] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[16:55:27] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[16:58:06] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[17:06:56] *** Quits: coolnickname (uid531864@user/coolnickname) (Quit: Connection closed for inactivity)
[17:10:48] *** Joins: les` (~user@184.20.21.117)
[17:20:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[17:21:41] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:6115:63fc:fd59:a048)
[17:21:41] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:6115:63fc:fd59:a048) (Client Quit)
[17:23:27] *** Joins: burnside_ (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[17:23:29] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[17:23:35] *** Joins: Rum (~bourbon@user/rum)
[17:27:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:29:17] <juri_> dear god, i hate this change in hspec. always displaying Doubles in rational form really messes with my head.
[17:31:46] <Hecate> :(
[17:31:46] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzzâ€¦)
[17:35:02] <juri_> my 2D coordinate system requires me to be able to read three values, and convert that to "this line generally goes in the right direction". when all three values are in rational forms with different bases.. Ugh.
[17:35:50] <juri_> I didn't think you could make the serialization of my data more incomprehensible, but.. Good Job.
[17:40:40] <[exa]> juri_: you're testing Doubles for equality?
[17:40:47] <juri_> Yep.
[17:40:51] <juri_> unit tests.
[17:41:16] <[exa]> make some kind of approximate equality wrapper with a reasonable epsilon?
[17:41:52] <juri_> the problem is when i discover a bug in my program, and need to update the unit tests.
[17:42:05] <[exa]> testing with machine floats is never a good idea, you're usually testing the round-off errors..
[17:42:36] <geekosaur> which will be much worse if it's making oversized Rationals out of them
[17:42:40] <juri_> I used to be able to go "yeah, that changed", copy and paste the values from the test output, and call it a day.
[17:42:42] <[exa]> I guess some easy wrapper could be done that also makes the display reasonable
[17:43:11] <geekosaur> 3/2 becomes some 30-digit monstrosity
[17:43:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:43:37] <juri_> instead i have to either change all of my unit tests to use rationals so i can cut and paste (UGH!), or copy and paste the rational to ghci, then get the double from there, and copy and paste that back into my unit tests.
[17:44:33] <juri_> and worse, the "that changed for the better / worse" is now incomprehensible, because i USED to be able to convert the doubles to a rough ratio between them in my head, and know approximately what the structure it was defining meant.
[17:44:43] <juri_> now, the three rationals are three different bases.
[17:44:52] <juri_> this is literally giving me a headache.
[17:46:47] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:46:47] <[exa]> juri_: that's a common effect of testing floats for equality, you're not alone, don't worry :]
[17:48:57] *** Joins: nhatanh02 (~satori@123.24.172.30)
[17:49:19] <juri_> so, if you use unit tests, and doubles, you're supposed to just give up?
[17:49:22] *** Quits: myme (~myme@40.51-175-185.customer.lyse.net) (Quit: WeeChat 3.1)
[17:50:19] <juri_> it was one thing when they were displayed in your test results. converting them to rationals is a real step backwards.
[17:53:25] <ksqsf> depending on your tolerance, you can check if two floats are "close enough"
[17:53:28] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[17:53:48] *** Joins: myme (~myme@40.51-175-185.customer.lyse.net)
[17:53:52] <juri_> that's not my problem, tho.
[17:53:53] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[17:54:08] <juri_> I'm trying to effectively update golden tests.
[17:54:16] *** Joins: neurocyte0132889 (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[17:54:16] *** Quits: neurocyte0132889 (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[17:54:16] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[17:54:22] <juri_> (if i understand the lingo properly. :)
[17:54:37] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[17:55:15] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[17:55:33] <juri_> only from my understanding, golden tests are only covering serialized output files.. and i don't have output file forms for these structures. they're intermediaries.
[17:56:04] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[17:57:00] <juri_> I handle 'doubles wiggle' in my property tests.
[17:59:01] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[18:00:23] <[exa]> juri_: not give up, but have a test method that has a fixed tolerance that isn't affected by machine precision, and can display the values "right"
[18:01:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:01:52] <[exa]> like, just make your `assertFloatsReasonablyEqual` by copying&modifying this: https://hackage.haskell.org/package/HUnit-1.6.2.0/docs/src/Test.HUnit.Lang.html#assertEqual
[18:01:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:01:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:01:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:15] *** Quits: Vajb (~Vajb@2001:999:50:e6be:1e98:9376:d93e:4506) (Quit: Quit)
[18:03:30] <[exa]> (btw. how come you're magically getting rationals in the messages when there's just `show` in the implementation?)
[18:03:37] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[18:04:14] <geekosaur> that's exactly what they're complaining about, it's apparently a recent change in hspec
[18:04:29] *** Joins: Vajb (~Vajb@2001:999:50:e6be:1e98:9376:d93e:4506)
[18:04:48] <[exa]> uuh yeah I'm looking at the wrong package, sorry. :D
[18:05:54] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[18:07:19] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[18:07:26] <juri_> Exa: perhaps some code could clear up what i'm talking about. https://github.com/Haskell-Things/HSlice/blob/master/tests/Math/PGA.hs
[18:08:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[18:09:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:09:30] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[18:09:43] *** Joins: max22- (~maxime@2a01cb0883359800e29324577334a636.ipv6.abo.wanadoo.fr)
[18:09:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:10:01] <[exa]> juri_: I guess that e.g. line 487 is a possible culprit right?
[18:10:24] <juri_> this is my application's test suite. as you can see, some of the structures are quite big. on line 1379, i've found out i've been calculating the INodeSet in there wrong, and need to update the values.
[18:10:52] <juri_> but, now that i've fixed the function, i need to update the doubles.. which are being given to me by hspec in rational form!
[18:11:53] <juri_> believe it or not, all of the property tests are fine.
[18:12:04] *** Joins: fef (~thedawn@user/thedawn)
[18:12:11] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[18:12:26] <juri_> because the doubles are all predictably off. :)
[18:12:37] *** Quits: burnside_ (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[18:18:59] *** Joins: wroathe (~wroathe@user/wroathe)
[18:19:26] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[18:20:11] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[18:20:24] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Quit: Leaving)
[18:20:39] <[exa]> juri_: well the 1.0000000000000002 there are scary. :D
[18:21:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:22:13] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[18:22:30] <juri_> [exa]: yeah, my code is in a pretty scary part of geometry. it's made even scarier by use of double precision. 
[18:22:55] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[18:23:15] <juri_> I have at least one math paper to write based on this code. "when covid is over", my presentations will be epic. :)
[18:23:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:24:45] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:25:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[18:27:22] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[18:27:27] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:30:06] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Remote host closed the connection)
[18:30:27] *** Joins: biog (~user1@159.224.42.85)
[18:30:41] *** Joins: tenniscp25 (~tenniscp2@2001:fb1:fe:1e0c:30fc:64ce:5a45:f32d)
[18:31:10] *** Joins: coolnickname (uid531864@user/coolnickname)
[18:31:33] *** Quits: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:33:20] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[18:33:37] *** Quits: tenniscp25 (~tenniscp2@2001:fb1:fe:1e0c:30fc:64ce:5a45:f32d) (Remote host closed the connection)
[18:34:15] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[18:37:47] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[18:38:56] *** neurocyte0132889 is now known as neurocyte
[18:39:25] *** Quits: bgamari (~bgamari@64.223.235.131) (Ping timeout: 240 seconds)
[18:40:35] *** Joins: bgamari (~bgamari@2001:470:e438::1)
[18:42:09] *** Quits: dsrt^ (~dsrt@207.5.21.20) (Remote host closed the connection)
[18:44:26] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:46:59] *** Joins: xsperry (~xs@user/xsperry)
[18:47:57] *** Joins: ksqsf (~user@134.209.106.31)
[18:48:03] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[18:48:27] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:50:48] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[18:51:05] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[18:51:54] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[18:52:10] *** Quits: gentauro (~gentauro@user/gentauro) (Quit: leaving)
[18:53:01] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[18:55:21] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[18:55:57] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[18:59:01] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:59:02] *** Joins: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[18:59:02] *** Quits: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[18:59:02] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[18:59:20] *** Quits: les` (~user@184.20.21.117) (Read error: Connection reset by peer)
[19:05:18] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[19:06:12] *** Quits: alx741 (~alx741@157.100.93.160) (Quit: alx741)
[19:06:26] *** Joins: ksqsf (~user@134.209.106.31)
[19:06:41] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[19:08:05] *** Joins: alx741 (~alx741@157.100.93.160)
[19:11:13] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[19:13:17] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 240 seconds)
[19:15:01] *** Joins: gentauro (~gentauro@user/gentauro)
[19:17:04] *** Joins: notzmv (~zmv@user/notzmv)
[19:18:08] *** Joins: bgamari_ (~bgamari@70.16.106.234)
[19:18:13] *** Quits: bgamari (~bgamari@2001:470:e438::1) (Ping timeout: 240 seconds)
[19:23:01] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[19:23:03] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[19:24:45] *** Joins: sirlensalot (~sirlensal@ool-44c5f8c9.dyn.optonline.net)
[19:24:51] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[19:32:37] *** Quits: syrkis (~syrkis@189.122.124.214) (Ping timeout: 256 seconds)
[19:34:31] *** Joins: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3)
[19:36:13] *** Quits: bgamari_ (~bgamari@70.16.106.234) (Ping timeout: 240 seconds)
[19:40:40] *** Joins: bgamari (~bgamari@2001:470:e438::1)
[19:42:56] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:43:50] *** Joins: ksqsf (~user@134.209.106.31)
[19:47:29] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[19:48:32] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[19:51:29] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[19:52:08] *** Quits: gaff (~gaff@49.207.225.80) (Remote host closed the connection)
[19:54:41] *** Joins: gaff (~gaff@49.207.225.80)
[19:55:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[19:58:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:01:48] *** Quits: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com) (Remote host closed the connection)
[20:03:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:03:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:03:50] *** Joins: wroathe (~wroathe@user/wroathe)
[20:04:14] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:06:01] *** Quits: mbuf (~Shakthi@122.178.240.169) (Quit: Leaving)
[20:06:42] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzzâ€¦)
[20:07:02] *** lechner_ is now known as lechner
[20:09:25] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Remote host closed the connection)
[20:11:46] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[20:17:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:19:12] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[20:19:19] *** Joins: stevenxl (~stevenxl@174.128.182.103)
[20:20:55] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[20:25:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:25:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:25:40] *** Joins: wroathe (~wroathe@user/wroathe)
[20:30:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[20:32:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:35:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:36:34] <juri_> hmm. guess it's time to ditch unit tests. this is just too burdensome. I think i'll take the opportunity to move these to golden tests instead.
[20:37:57] *** Joins: ksqsf (~user@134.209.106.31)
[20:38:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:38:45] <[exa]> juri_: I like that direction. :]
[20:38:56] *** Joins: duuude (~user@user/duuude)
[20:39:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:39:23] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:39:23] *** Joins: wroathe (~wroathe@user/wroathe)
[20:39:49] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[20:39:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:41:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[20:42:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[20:43:34] <juri_> [exa]: I don't. it means i need file serialization operations for all of my data structures.
[20:44:59] <juri_> luckily i have that for most of them, due to providing a Ganja.hs 'escape hatch'. i have a series of functions that serialize these into objects written in javascript, that are viewable on a geometric algebra viewing website.
[20:47:09] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[20:48:39] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:49:34] *** Quits: theproffesor (~theproffe@user/theproffesor) (Ping timeout: 260 seconds)
[20:49:46] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Remote host closed the connection)
[20:49:56] *** Joins: econo (uid147250@user/econo)
[20:50:00] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[20:50:24] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[20:50:37] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[20:54:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:57:34] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[20:58:42] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:59:45] *** Quits: gaff (~gaff@49.207.225.80) (Remote host closed the connection)
[21:05:27] *** Quits: kjak_ (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[21:06:11] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Remote host closed the connection)
[21:08:13] *** Joins: Rum (~bourbon@user/rum)
[21:12:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:13:40] *** Joins: simendsjo (~user@84.211.91.241)
[21:17:16] *** Quits: simendsjo (~user@84.211.91.241) (Client Quit)
[21:17:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[21:17:56] *** Joins: simendsjo (~user@84.211.91.241)
[21:20:23] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[21:22:12] *** Joins: kotshie_ (~kotshie@68.72.208.140)
[21:22:47] *** Quits: kotshie_ (~kotshie@68.72.208.140) (Client Quit)
[21:22:59] *** Quits: simendsjo (~user@84.211.91.241) (Quit: ERC 5.4 (IRC client for GNU Emacs 28.0.90))
[21:24:10] *** Joins: simendsjo (~user@84.211.91.241)
[21:24:11] *** Joins: biog (~user1@159.224.42.85)
[21:27:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:30:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:30:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:30:43] *** Joins: wroathe (~wroathe@user/wroathe)
[21:32:08] *** Joins: ksqsf (~user@134.209.106.31)
[21:34:57] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[21:36:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[21:39:57] *** Joins: theproffesor (~theproffe@2601:282:847f:8010::85ac)
[21:39:58] *** Quits: theproffesor (~theproffe@2601:282:847f:8010::85ac) (Changing host)
[21:39:58] *** Joins: theproffesor (~theproffe@user/theproffesor)
[21:41:38] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:95fe:89a9:e964:2e47) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:42:50] <EvanR> [exa], bad blanket advice, "never use float =="
[21:43:12] <EvanR> checking if two are exactly the same is exactly what it does (for not NaN)
[21:43:27] *** xff0x_ is now known as xff0x
[21:44:00] <EvanR> numeric problems require more context, and in some context randomly using an approximate equal to is incorrect
[21:44:56] <EvanR> in other cases, it turns 1 test case bug into 2 (when you're at the very boundary of the approximate equal to)
[21:48:45] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[21:55:17] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[21:55:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:57:33] *** Joins: otherwise (~otherwise@2601:602:880:90f0:7dc5:ac73:dd31:135e)
[21:59:14] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[22:00:55] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:03:25] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[22:03:33] *** Joins: fef (~thedawn@user/thedawn)
[22:04:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:04:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:04:37] *** Joins: wroathe (~wroathe@user/wroathe)
[22:05:37] *** Joins: vysn (~vysn@user/vysn)
[22:07:24] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[22:08:45] *** Joins: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[22:09:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:09:53] *** Joins: duuude (~user@user/duuude)
[22:12:09] *** Joins: alx741 (~alx741@157.100.93.160)
[22:12:16] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:12:30] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:12:41] *** Quits: eflister (~eflister@2601:1c0:5501:c150:e86d:7316:8592:8dd3) (Quit: Client closed)
[22:14:36] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[22:14:47] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[22:15:07] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[22:16:19] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:16:22] <Gurkenglas> It seems possible to recover x from ($x)::(A->())->() for every particular A but not forall A. Does this phenomenon have a name?
[22:16:40] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[22:17:44] *** Joins: duuude (~user@user/duuude)
[22:17:45] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:17:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:17:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:17:55] *** Joins: wroathe (~wroathe@user/wroathe)
[22:19:25] <phma> I found a document comparing the speed of some programming languages on the same problems. One was to find the smallest n such that sum(1/n)>20.
[22:20:37] <phma> The program added the numbers starting at 1/1, which I know is imprecise. So I started ghci and entered "sum (map (1/) (map fromInteger [-272400600 .. -1]))".
[22:20:57] <phma> The result was "Killed" and it threw me out to the shell prompt. Why?
[22:21:55] <Rembane> It sounds like the process was stopped by the out of memory killer 
[22:22:24] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[22:22:56] <phma> But does it need to keep the whole list in memory?
[22:23:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:23:28] <EvanR> no that's not it
[22:23:41] *** Quits: kaction (~kaction@pool-71-191-91-40.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[22:23:50] <EvanR> you probably got stuck with a non-strict sum
[22:24:20] <EvanR> try foldl' (+) 0 that instead
[22:25:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[22:25:49] <phma> Variable not in scope
[22:26:15] *** Joins: ksqsf (~user@134.209.106.31)
[22:26:22] <phma> :: (Integer -> Integer -> Integer) -> Integer -> [Double] -> t
[22:26:36] <enikar> foldl' is in Data.Foldable
[22:27:06] <phma> now it's running
[22:27:16] <EvanR> I got slightly under -20
[22:27:52] <phma> the page says the answer is 272400600, but I have my doubts
[22:28:15] <EvanR> I mean this kind of demonstrates that?
[22:28:23] <phma> -20.00000000161496
[22:28:30] <EvanR> that's what I got!
[22:28:50] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[22:29:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:29:32] <EvanR> sum might have worked (and worked much faster) if you compiled this line of code...
[22:29:52] <phma> adding the other way gives 20.000000001618233
[22:29:58] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:30:20] <phma> foldl' (+) 0 (map (1/) (map fromInteger [1 .. 272400600]))
[22:31:10] <enikar> you can remove all map
[22:32:12] <phma> how?
[22:32:32] <xsperry> yeah ghc should work fine with sum, certainly with -O2, and probably with lower optimization settings
[22:33:04] <enikar> foldl' (\acc x -> acc +  1/(fromInteger x)) 0 [1 .. 272400600]
[22:33:17] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:33:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:33:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:33:43] *** Joins: wroathe (~wroathe@user/wroathe)
[22:33:51] <EvanR> > foldl' (\acc x -> acc + 1/x) 0 [1 .. 272400600]
[22:33:57] <lambdabot>  mueval-core: Time limit exceeded
[22:34:13] *** Quits: max22- (~maxime@2a01cb0883359800e29324577334a636.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:34:40] *** Joins: alx741 (~alx741@157.100.93.160)
[22:35:44] <phma> I know it would be faster compiled, I just wanted to know if, added from smallest to largest, it still exceeds 20.
[22:36:23] <EvanR> somehow that version is taking me even longer to ghci
[22:36:39] <EvanR> ok 20.000000001618233
[22:37:34] <EvanR> the negative version ought to be the same as [272400600, 272400599 .. 1]
[22:38:35] <phma> ah
[22:38:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:40:04] *** Joins: machinedgod (~machinedg@24.105.81.50)
[22:40:17] <EvanR> 20.00000000161496
[22:42:38] *** Joins: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net)
[22:43:53] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[22:44:52] <EvanR> Gurkenglas, I wrote makeF :: forall a r . a -> (a -> r) -> r, makeF x = ($ x), and it seems to work for all a. Not sure how you recover anything setting r = ()
[22:46:43] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 268 seconds)
[22:47:38] *** Quits: yauhsien (~yauhsien@61-231-19-17.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[22:49:31] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[22:49:37] *** Quits: deadmarshal (~deadmarsh@95.38.115.228) (Ping timeout: 240 seconds)
[22:50:40] <Gurkenglas> EvanR, you can do recover :: ((Bool -> ()) -> ()) -> Bool; recover f = lub (seq (f (\case True -> (); False -> undefined)) True) (seq (f (\case False -> (); True -> undefined)) False)
[22:51:18] <EvanR> whoa
[22:51:20] <hpc> lub feels like cheating to me
[22:51:32] <monochrom> cunning or cheating, I don't know which
[22:51:39] *** Quits: nhatanh02 (~satori@123.24.172.30) (Ping timeout: 256 seconds)
[22:51:46] <Gurkenglas> That is: you recover the x from ($x) by running ($x2) on all x2 in parallel, and using that ($x) is monotonic
[22:52:09] <monochrom> But I did almost think of "\x -> trace x ()".
[22:52:21] <hpc> i thought of unsafeCoerce
[22:52:26] <monochrom> err traceShow, you get my point :)
[22:52:35] <EvanR> I thought of nothing :(
[22:52:48] <hpc> unsafeCoerce (makeF x unsafeCoerce) = x
[22:53:01] <Gurkenglas> hpc, lub doesn't feel like cheating to me because it doesn't actually let you write nonmonotonic functions
[22:54:32] <EvanR> I see why with can't work forall a
[22:54:42] <EvanR> I see why this can't work forall a
[22:55:53] *** Joins: max22- (~maxime@2a01cb08833598000dfdedebd194573b.ipv6.abo.wanadoo.fr)
[22:56:04] *** Quits: simendsjo (~user@84.211.91.241) (Read error: Connection reset by peer)
[22:57:48] <monochrom> Some kind of compactness may be involved.
[22:59:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:00:41] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[23:01:07] *** Joins: ksqsf (~user@134.209.106.31)
[23:03:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:03:23] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[23:03:55] <Gurkenglas> corollary: for any particular A you can go Functor f => (f () -> ()) -> f A -> A
[23:04:46] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[23:06:17] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[23:07:13] *** Joins: alx741 (~alx741@157.100.93.160)
[23:08:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:08:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:08:27] *** Joins: wroathe (~wroathe@user/wroathe)
[23:09:56] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:12:05] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:13:14] <Gurkenglas> :t \fuu fa -> recover (\au -> fuu (fmap au fa))
[23:13:15] <lambdabot> Functor f => (f () -> ()) -> f a -> a
[23:13:55] <EvanR> :t recover
[23:13:57] <lambdabot> ((a -> ()) -> ()) -> a
[23:16:27] <monochrom> > recover (const ())
[23:16:29] <lambdabot>  *Exception: sorry, no lub
[23:16:45] <EvanR> lol
[23:17:04] <monochrom> How should I understand that?
[23:17:27] <EvanR> how would recover use lub to work for all a
[23:17:46] <EvanR> the Bool trick only works for certain types
[23:17:51] <monochrom> OK, just Bool:
[23:17:53] <Gurkenglas> one cant actually implement recover forall a afaic, and i cant do it for Bool because we dont have lub
[23:18:03] <monochrom> > recover (const () :: Bool -> ())
[23:18:04] <lambdabot>  error:
[23:18:04] <lambdabot>      â€¢ Couldn't match type â€˜a -> ()â€™ with â€˜Boolâ€™
[23:18:04] <lambdabot>        Expected type: (a -> ()) -> ()
[23:18:10] <monochrom> err
[23:18:17] <monochrom> > recover (const () :: (Bool -> ()) -> ())
[23:18:18] <lambdabot>  *Exception: sorry, no lub
[23:22:16] <Gurkenglas> EvanR, is there a particular type it doesn't work for?
[23:22:57] <EvanR> well it seems you need to use case analysis on the ctors right
[23:23:01] <Gurkenglas> yep
[23:23:06] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[23:23:18] <EvanR> so any type that doesn't export them, like Data.Map
[23:24:16] *** Quits: stevenxl (~stevenxl@174.128.182.103) (Quit: leaving)
[23:24:55] <EvanR> case analysis doesn't work on lambdas (in haskell?)
[23:25:10] <Gurkenglas> you can still extract themap from ($themap) using lub, right? you just have to craft custom enumerators of the type
[23:25:25] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[23:25:50] <EvanR> ok so Map can be inspected to learn everything about it
[23:25:53] <Gurkenglas> does it not work on lambdas? you should be able to extract any f:Bool->Bool from ($f) i think
[23:26:05] <EvanR> since it's finite
[23:26:36] <Gurkenglas> you can also extract any us:[()] from ($us)
[23:27:05] <EvanR> some types hold identifying information that it's important for "no one to know", like IORef
[23:27:24] <EvanR> so how would you reconstruct that
[23:27:31] <Gurkenglas> if no one can know it you cant prove i didnt reconstruct the right one :3
[23:28:02] <EvanR> io programs could tell the diff
[23:28:55] <EvanR> what about Void 
[23:29:13] <Gurkenglas> I sure can extract the x:Void from any ($x) :)
[23:29:24] <monochrom> What if I turn your lub idea around and recover (\f -> lub (f True) (f False))?
[23:29:44] *** Joins: alx741 (~alx741@157.100.93.160)
[23:29:52] <monochrom> lub () () = ()
[23:30:22] <monochrom> So, did I have True? did I have False? or did I have lub True False?
[23:31:13] <monochrom> "Yo dawg I heard you like lub so I put a lub in your lub..."
[23:32:18] <Gurkenglas> you get out lub True False, which you're not supposed to do to lub, it assumes that your values have a least upper bound
[23:32:41] <Gurkenglas> luckily (\f -> lub (f True) (f False)) does not have form ($x) ^^
[23:35:01] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 240 seconds)
[23:38:02] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:38:22] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[23:38:23] *** Joins: jiribenes_ (~jiribenes@rosa.jiribenes.com)
[23:38:38] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[23:38:41] *** Joins: dextaa9 (~DV@user/dextaa)
[23:38:50] *** Joins: juhp_ (~juhp@128.106.188.82)
[23:38:53] *** Joins: nhs (~nhs@136.49.226.20)
[23:39:00] *** Joins: SrPx_ (sid108780@id-108780.uxbridge.irccloud.com)
[23:39:01] *** Joins: wroathe_ (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:39:08] <monochrom> ((), ()) is either less interesting or less usable than Bool, depending on what you mean by ((), ()).
[23:39:23] *** Joins: xff0x_ (~xff0x@2001:1a81:5335:ab00:175a:eec8:110f:8c7e)
[23:39:27] *** Joins: Brandon_1X (~brandon@178-79-138-117.ip.linodeusercontent.com)
[23:39:39] *** Quits: nhs (~nhs@136.49.226.20) (Client Quit)
[23:39:40] *** Joins: pieguy128_ (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[23:39:44] *** Joins: oo_migue1 (~pi@77.252.47.226)
[23:39:47] *** Joins: cln_ (sid336875@id-336875.ilkley.irccloud.com)
[23:39:49] *** Joins: caubert_ (~caubert@136.244.111.235)
[23:39:52] <Gurkenglas_> lambdabot wont respond to queries?
[23:39:53] <Gurkenglas_> > 2+2
[23:40:03] *** Joins: xlei_ (~akans@pool-68-129-84-118.nycmny.fios.verizon.net)
[23:40:14] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[23:40:15] *** Quits: otherwise (~otherwise@2601:602:880:90f0:7dc5:ac73:dd31:135e) (Remote host closed the connection)
[23:40:29] <Gurkenglas_> @let recoverdiamond :: (( ((),()) -> () ) -> ()) -> ((),()); recoverdiamond f = (f fst, f snd)
[23:40:30] *** Joins: eL_Bart0- (eL_Bart0@dietunichtguten.org)
[23:40:37] <EvanR> âŠ¥ (âŠ¥,âŠ¥) ((),âŠ¥) (âŠ¥,()) ((),())
[23:40:44] *** Joins: cheater1__ (~Username@user/cheater)
[23:40:45] *** Joins: ralu9 (~ralu@static.211.245.203.116.clients.your-server.de)
[23:40:45] *** Joins: kronicma1 (user76545@neotame.csclub.uwaterloo.ca)
[23:40:58] *** Joins: drewolson4 (~drewolson@user/drewolson)
[23:40:58] *** Joins: obfusk_ (~quassel@a82-161-150-56.adsl.xs4all.nl)
[23:41:00] *** Server sets mode: +Cnt 
[23:41:03] *** Joins: lambdap3 (~lambdap@static.167.190.119.168.clients.your-server.de)
[23:41:13] *** Joins: scav_ (sid309693@id-309693.helmsley.irccloud.com)
[23:41:22] *** Joins: joeyh_ (~joeyh@kitenet.net)
[23:41:24] *** Joins: biberu\ (~biberu@user/biberu)
[23:41:24] *** Joins: bw_ (sid2730@user/betawaffle)
[23:41:25] *** Joins: burnside_ (~burnsides@dhcp168-013.wadham.ox.ac.uk)
[23:41:42] *** Joins: bbhoss_ (sid18216@id-18216.tinside.irccloud.com)
[23:42:04] *** Joins: truckasaurus_ (sid457088@id-457088.helmsley.irccloud.com)
[23:42:06] *** Joins: int-e_ (~noone@int-e.eu)
[23:42:09] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:42:12] *** Joins: _ht_ (~quassel@82-169-194-8.biz.kpn.net)
[23:42:14] *** Joins: PigDude_ (~PigDude@159.203.16.199)
[23:42:17] *** Joins: td__ (~td@muedsl-82-207-238-078.citykom.de)
[23:42:23] *** Joins: agander_m_ (sid407952@id-407952.tinside.irccloud.com)
[23:42:31] *** Joins: AlexNoo_ (~AlexNoo@94.233.241.107)
[23:42:39] *** Quits: int-e (~noone@int-e.eu) (Killed (NickServ (GHOST command used by int-e_)))
[23:42:49] *** int-e_ is now known as int-e
[23:42:55] *** Joins: zer0bitz_ (~zer0bitz@196.244.192.57)
[23:42:59] *** Joins: Gurkenglas__ (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[23:43:00] *** Joins: neurocyte (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[23:43:00] *** Quits: neurocyte (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[23:43:00] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[23:43:07] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:43:08] *** Joins: Sgeo__ (~Sgeo@user/sgeo)
[23:43:13] *** Joins: Unode_ (~Unode@194.94.44.220)
[23:43:30] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:43:35] *** Joins: maerwald_ (~maerwald@mail.hasufell.de)
[23:43:37] *** Joins: flukiluke_ (~m-7humut@2603:c023:c000:6c7e:8945:ad24:9113:a962)
[23:43:43] *** Joins: hexology- (~hexology@user/hexology)
[23:43:45] *** Joins: biberu- (~biberu@user/biberu)
[23:43:53] *** Quits: wroathe (~wroathe@user/wroathe) (*.net *.split)
[23:43:53] *** Quits: econo (uid147250@user/econo) (*.net *.split)
[23:43:53] *** Quits: bgamari (~bgamari@2001:470:e438::1) (*.net *.split)
[23:43:53] *** Quits: neurocyte4 (~neurocyte@user/neurocyte) (*.net *.split)
[23:43:53] *** Quits: xsperry (~xs@user/xsperry) (*.net *.split)
[23:43:53] *** Quits: coolnickname (uid531864@user/coolnickname) (*.net *.split)
[23:43:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[23:43:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (*.net *.split)
[23:43:53] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (*.net *.split)
[23:43:53] *** Quits: __monty__ (~toonn@user/toonn) (*.net *.split)
[23:43:53] *** Quits: megaTherion (~therion@unix.io) (*.net *.split)
[23:43:53] *** Quits: mc47 (~mc47@xmonad/TheMC47) (*.net *.split)
[23:43:53] *** Quits: xff0x (~xff0x@2001:1a81:5335:ab00:175a:eec8:110f:8c7e) (*.net *.split)
[23:43:53] *** Quits: phma (phma@2001:5b0:210d:1438:cfd1:5ed2:55ba:b890) (*.net *.split)
[23:43:54] *** Quits: zaquest (~notzaques@5.130.79.72) (*.net *.split)
[23:43:54] *** Quits: juhp (~juhp@128.106.188.82) (*.net *.split)
[23:43:54] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (*.net *.split)
[23:43:54] *** Quits: fsckskye[m] (~kmatrixth@2001:470:69fc:105::1:3b2f) (*.net *.split)
[23:43:54] *** Quits: Topik[m] (~topikmatr@2001:470:69fc:105::a082) (*.net *.split)
[23:43:54] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (*.net *.split)
[23:43:54] *** Quits: zero (~z@user/zero) (*.net *.split)
[23:43:54] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (*.net *.split)
[23:43:54] *** Quits: yushyin (ank7aaOFiT@2a01:4f8:c17:b4dd::2) (*.net *.split)
[23:43:54] *** Quits: amk (~amk@109.255.169.126) (*.net *.split)
[23:43:54] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[23:43:54] *** Quits: dagit (~dagit@2001:558:6025:38:6476:a063:d05a:44da) (*.net *.split)
[23:43:54] *** Quits: Brandon_IX (~brandon@178-79-138-117.ip.linodeusercontent.com) (*.net *.split)
[23:43:54] *** Quits: superbil (~superbil@1-34-176-171.hinet-ip.hinet.net) (*.net *.split)
[23:43:54] *** Quits: yahb (xsbot@user/mniip/bot/yahb) (*.net *.split)
[23:43:54] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[23:43:54] *** Quits: hltk_ (~hltk@hltk.fi) (*.net *.split)
[23:43:54] *** Quits: haveo_ (~haveo@sl35.iuwt.fr) (*.net *.split)
[23:43:54] *** Quits: jzsinatr2 (~jzsinatra@88-114-238-31.elisa-laajakaista.fi) (*.net *.split)
[23:43:54] *** Quits: Logio (em@kapsi.fi) (*.net *.split)
[23:43:54] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[23:43:54] *** Quits: eL_Bart0 (eL_Bart0@dietunichtguten.org) (*.net *.split)
[23:43:54] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (*.net *.split)
[23:43:54] *** Quits: SquidDev (~SquidDev@autoclave.squiddev.cc) (*.net *.split)
[23:43:54] *** Quits: remexre (~remexre@user/remexre) (*.net *.split)
[23:43:54] *** Quits: jiribenes (~jiribenes@rosa.jiribenes.com) (*.net *.split)
[23:43:54] *** Quits: cods (~fred@82-65-232-44.subs.proxad.net) (*.net *.split)
[23:43:54] *** Quits: Unode (~Unode@194.94.44.220) (*.net *.split)
[23:43:54] *** Quits: df (~ben@justworks.xyz) (*.net *.split)
[23:43:54] *** Quits: tristanC (~tristanC@163.172.94.116) (*.net *.split)
[23:43:54] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[23:43:54] *** Quits: ProofTechnique (sid79547@id-79547.ilkley.irccloud.com) (*.net *.split)
[23:43:54] *** Quits: cln (sid336875@id-336875.ilkley.irccloud.com) (*.net *.split)
[23:43:54] *** Quits: agander_m (sid407952@id-407952.tinside.irccloud.com) (*.net *.split)
[23:43:54] *** Quits: truckasaurus (sid457088@id-457088.helmsley.irccloud.com) (*.net *.split)
[23:43:55] *** Quits: caubert (~caubert@136.244.111.235) (*.net *.split)
[23:43:55] *** Quits: kronicmage (user55138@neotame.csclub.uwaterloo.ca) (*.net *.split)
[23:43:55] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (*.net *.split)
[23:43:55] *** Quits: oo_miguel (~pi@77.252.47.226) (*.net *.split)
[23:43:55] *** Quits: mjrosenb (~mjrosenb@pool-108-54-97-96.nycmny.fios.verizon.net) (*.net *.split)
[23:43:55] *** Quits: bbhoss (sid18216@id-18216.tinside.irccloud.com) (*.net *.split)
[23:43:55] *** Quits: ircbrowse_tom (~ircbrowse@2a01:4f8:1c1c:9319::1) (*.net *.split)
[23:43:55] *** Quits: lally (sid388228@id-388228.uxbridge.irccloud.com) (*.net *.split)
[23:43:55] *** Quits: scav (sid309693@id-309693.helmsley.irccloud.com) (*.net *.split)
[23:43:55] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[23:43:55] *** Joins: yushyin2 (opqz58iJgg@mail.karif.server-speed.net)
[23:43:55] *** zzz is now known as zero
[23:43:55] *** bbhoss_ is now known as bbhoss
[23:43:55] *** Joins: nek02 (~nek0@nek0.eu)
[23:43:55] *** juhp_ is now known as juhp
[23:43:56] *** cln_ is now known as cln
[23:43:56] *** scav_ is now known as scav
[23:43:57] *** agander_m_ is now known as agander_m
[23:43:57] *** SrPx_ is now known as SrPx
[23:43:57] *** truckasaurus_ is now known as truckasaurus
[23:44:01] *** bw_ is now known as bw
[23:44:12] *** Joins: myme1 (~myme@40.51-175-185.customer.lyse.net)
[23:44:14] *** Joins: nhs (~nhs@136.49.226.20)
[23:44:16] *** yushyin2 is now known as yushyin
[23:44:17] *** Joins: haasn` (~nand@haasn.dev)
[23:44:19] *** Joins: hltk (~hltk@hltk.fi)
[23:44:25] *** Joins: srk- (~sorki@user/srk)
[23:44:31] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[23:44:32] *** Joins: zer0bitz__ (~zer0bitz@196.244.192.57)
[23:44:36] *** megaTherion_ is now known as megaTherion
[23:44:43] *** Joins: remexre (~remexre@user/remexre)
[23:44:44] *** Joins: SoF8 (~skius@user/skius)
[23:44:46] *** Joins: remedan_ (~remedan@octo.cafe)
[23:44:46] *** Joins: the_proffesor (~theproffe@2601:282:847f:8010::85ac)
[23:44:50] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[23:44:50] *** Joins: jeffz` (~user@lambda.xen.prgmr.com)
[23:44:50] *** Quits: the_proffesor (~theproffe@2601:282:847f:8010::85ac) (Changing host)
[23:44:50] *** Joins: the_proffesor (~theproffe@user/theproffesor)
[23:44:53] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[23:44:56] *** Joins: amk (~amk@109.255.169.126)
[23:44:57] *** Quits: SoF (~skius@user/skius) (Killed (NickServ (GHOST command used by SoF8)))
[23:44:57] *** SoF8 is now known as SoF
[23:44:57] *** Joins: erisco_ (~erisco@d24-57-249-233.home.cgocable.net)
[23:45:00] *** Quits: nek0 (~nek0@nek0.eu) (Killed (NickServ (GHOST command used by nek02)))
[23:45:03] *** nek02 is now known as nek0
[23:45:03] *** Joins: SanchayanMaity_ (sid478177@id-478177.hampstead.irccloud.com)
[23:45:04] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[23:45:10] *** Joins: lagash_ (lagash@lagash.shelltalk.net)
[23:45:14] *** Joins: ajb_ (~ajb@cupid.whatbox.ca)
[23:45:18] *** Joins: shriekingnoise_ (~shrieking@186.137.144.80)
[23:45:20] *** Joins: kmein_ (~weechat@user/kmein)
[23:45:23] *** Joins: ircbrowse_tom (~ircbrowse@2a01:4f8:1c1c:9319::1)
[23:45:24] *** Joins: gawen_ (~gawen@user/gawen)
[23:45:25] *** Joins: Noinia (~Frank@77-162-168-71.fixed.kpn.net)
[23:45:30] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[23:45:31] *** Joins: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[23:45:32] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[23:45:34] *** Quits: burnsidesLlama (~burnsides@dhcp168-013.wadham.ox.ac.uk) (Read error: Connection reset by peer)
[23:45:34] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Read error: Connection reset by peer)
[23:45:34] *** Quits: AlexNoo (~AlexNoo@94.233.241.107) (Read error: Connection reset by peer)
[23:45:35] *** Quits: haasn (~nand@haasn.dev) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: remedan (~remedan@octo.cafe) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: flukiluke (~m-7humut@2603:c023:c000:6c7e:8945:ad24:9113:a962) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: bsima1 (9d7e39c8ad@2604:bf00:561:2000::dd) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: biog (~user1@159.224.42.85) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: exarkun_ (~exarkun@user/exarkun) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: opqdonut_ (opqdonut@pseudo.fixme.fi) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: hgolden_ (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: tv (~tv@user/tv) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: wallymathieu (uid533252@id-533252.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: cocreature (~moritz@2a03:b0c0:3:d0::c8:f001) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: raghavgururajan (ea769b8000@user/raghavgururajan) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: Bartol (~Bartol@user/Bartol) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: srk (~sorki@user/srk) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: drdo (~drdo@144.172.69.89) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: forell (~forell@user/forell) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: smyds (~smyds@176.10.118.193) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: erisco (~erisco@d24-57-249-233.home.cgocable.net) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: Gurkenglas_ (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: gentauro (~gentauro@user/gentauro) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: tafa (~tafa@user/tafa) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: AlexZenon (~alzenon@94.233.241.107) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: WzC (~Frank@77-162-168-71.fixed.kpn.net) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: Digitteknohippie (~user@user/digit) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: res0nat0r0 (~Fletch@dia.whatbox.ca) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:75de:a4d8:aac6:c5de) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: thebnq (~bnq@herrokitty.com) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: thaumavorio (~thaumavor@thaumavor.io) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: samhh (7569f027cf@2604:bf00:561:2000::e4) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: justIrresolute (~justache@user/justache) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: monochrom (trebla@216.138.220.146) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: martin02 (~silas@141.84.69.76) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: jeffz (~user@lambda.xen.prgmr.com) (Remote host closed the connection)
[23:45:37] *** Quits: mrmonday (~robert@what.i.hope.is.not.a.tabernaevagant.es) (Read error: Connection reset by peer)
[23:45:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: Maxdaman1us (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: ajb (~ajb@cupid.whatbox.ca) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: acidsys (~LSD@2.lsd.systems) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: pepeiborra (sid443799@id-443799.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: hays (rootvegeta@fsf/member/hays) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: landonf (landonf@mac68k.info) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: hugo (znc@verdigris.lysator.liu.se) (Read error: Connection reset by peer)
[23:45:37] *** Quits: gawen (~gawen@user/gawen) (Remote host closed the connection)
[23:45:37] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: econo_ (uid147250@id-147250.tinside.irccloud.com) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: theproffesor (~theproffe@user/theproffesor) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: sus (zero@user/zeromomentum) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[23:45:37] *** haasn` is now known as haasn
[23:45:37] *** erisco_ is now known as erisco
[23:45:38] *** Quits: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[23:45:38] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[23:45:38] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[23:45:38] *** SanchayanMaity_ is now known as SanchayanMaity
[23:45:38] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[23:45:39] *** biberu- is now known as biberu
[23:45:56] *** [_] is now known as [itchyjunk]
[23:45:57] *** Quits: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3) (Ping timeout: 240 seconds)
[23:45:57] *** Joins: thebnq (~bnq@herrokitty.com)
[23:45:58] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[23:45:59] *** Joins: acowley_ (~acowley@c-68-83-22-43.hsd1.nj.comcast.net)
[23:46:00] *** Joins: samhh (7569f027cf@2604:bf00:561:2000::e4)
[23:46:01] *** Joins: __monty__ (~toonn@user/toonn)
[23:46:01] *** Quits: nhs (~nhs@136.49.226.20) (Client Quit)
[23:46:02] *** Joins: sus (zero@user/zeromomentum)
[23:46:07] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[23:46:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[23:46:08] *** Joins: Erutuon_ (~Erutuon@user/erutuon)
[23:46:13] *** Joins: econo_ (uid147250@id-147250.tinside.irccloud.com)
[23:46:15] *** Joins: hays (rootvegeta@fsf/member/hays)
[23:46:17] *** Quits: dextaa9 (~DV@user/dextaa) (Ping timeout: 240 seconds)
[23:46:21] *** Joins: gentauro (~gentauro@185.107.12.141)
[23:46:23] *** Joins: leah2 (~leah@vuxu.org)
[23:46:29] *** Quits: gentauro (~gentauro@185.107.12.141) (Changing host)
[23:46:29] *** Joins: gentauro (~gentauro@user/gentauro)
[23:46:29] *** Joins: tenniscp25 (~tenniscp2@cm-171-101-110-205.revip11.asianet.co.th)
[23:46:37] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f484:3278:789d:d6a5)
[23:46:42] *** Joins: werneta_ (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[23:46:45] *** Joins: wallymathieu (uid533252@id-533252.uxbridge.irccloud.com)
[23:46:46] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[23:46:47] *** Joins: jzsinatra (~jzsinatra@88-114-238-31.elisa-laajakaista.fi)
[23:46:47] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[23:46:49] *** Joins: otherwise (~otherwise@2601:602:880:90f0:bd12:9809:2b1e:ca22)
[23:46:49] *** Joins: eL_Bart0 (eL_Bart0@dietunichtguten.org)
[23:46:54] *** Joins: yahb (xsbot@178.219.36.155)
[23:46:55] *** Joins: pepeiborra (sid443799@id-443799.ilkley.irccloud.com)
[23:46:57] *** Joins: Maxdamantus (~Maxdamant@124.197.32.108)
[23:47:00] *** Quits: yahb (xsbot@178.219.36.155) (Changing host)
[23:47:00] *** Joins: yahb (xsbot@user/mniip/bot/yahb)
[23:47:01] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[23:47:03] *** Quits: Maxdamantus (~Maxdamant@124.197.32.108) (Changing host)
[23:47:03] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[23:47:05] *** Joins: Unode (~Unode@194.94.44.220)
[23:47:12] *** Joins: tafa (~tafa@user/tafa)
[23:47:12] *** srk- is now known as srk
[23:47:13] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[23:47:14] *** Quits: Erutuon (~Erutuon@user/erutuon) (*.net *.split)
[23:47:14] *** Quits: alx741 (~alx741@157.100.93.160) (*.net *.split)
[23:47:14] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (*.net *.split)
[23:47:14] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (*.net *.split)
[23:47:14] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[23:47:14] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (*.net *.split)
[23:47:14] *** Quits: Sgeo (~Sgeo@user/sgeo) (*.net *.split)
[23:47:14] *** Quits: myme (~myme@40.51-175-185.customer.lyse.net) (*.net *.split)
[23:47:14] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (*.net *.split)
[23:47:14] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[23:47:14] *** Quits: td_ (~td@muedsl-82-207-238-078.citykom.de) (*.net *.split)
[23:47:15] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (*.net *.split)
[23:47:15] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[23:47:15] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[23:47:15] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (*.net *.split)
[23:47:15] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[23:47:15] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (*.net *.split)
[23:47:15] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[23:47:15] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (*.net *.split)
[23:47:15] *** Quits: L29Ah (~L29Ah@wikipedia/L29Ah) (*.net *.split)
[23:47:15] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[23:47:15] *** Quits: kmein (~weechat@user/kmein) (*.net *.split)
[23:47:16] *** Quits: obfusk (~quassel@a82-161-150-56.adsl.xs4all.nl) (*.net *.split)
[23:47:16] *** Quits: xlei (~akans@pool-68-129-84-118.nycmny.fios.verizon.net) (*.net *.split)
[23:47:16] *** Quits: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca) (*.net *.split)
[23:47:16] *** Quits: lambdabot (~lambdabot@haskell/bot/lambdabot) (*.net *.split)
[23:47:16] *** Quits: dextaa (~DV@user/dextaa) (*.net *.split)
[23:47:16] *** Quits: lambdap (~lambdap@static.167.190.119.168.clients.your-server.de) (*.net *.split)
[23:47:16] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[23:47:16] *** Quits: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net) (*.net *.split)
[23:50:17] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:52:42] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:53:02] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: rednaZ[m] (~r3dnazmat@2001:470:69fc:105::ba70) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: tripa[m] (~tripamatr@2001:470:69fc:105::1:4f7e) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: afotgkmnzj7asv3r (~afotgkmnz@2001:470:69fc:105::c24b) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: Las[m] (~lasmatrix@2001:470:69fc:105::74e) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: DemiMarieObenour (~alwayscur@2001:470:69fc:105::4886) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: fgaz (~fgaz@2001:470:69fc:105::842) (Ping timeout: 240 seconds)
[23:53:02] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 240 seconds)
[23:53:14] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 252 seconds)
[23:53:21] *** Quits: grabb0id[m] (~alangmatr@2001:470:69fc:105::b489) (Ping timeout: 268 seconds)
[23:53:21] *** Quits: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9) (Ping timeout: 268 seconds)
[23:53:21] *** Quits: prrxddq[m] (~prrxddqma@2001:470:69fc:105::1:4f72) (Ping timeout: 268 seconds)
[23:53:21] *** Quits: Magnus[m] (~magthetch@2001:470:69fc:105::d1a7) (Ping timeout: 268 seconds)
[23:53:23] *** Quits: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: jesser[m] (~jessermat@2001:470:69fc:105::d5ae) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: kalxd[m]1 (~kalxdmatr@2001:470:69fc:105::1:576e) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: amesgen[m] (~amesgenm]@2001:470:69fc:105::82b) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: fcortesi (~fcortesi@2001:470:69fc:105::f3a9) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: Tisoxin (~ikosit@user/ikosit) (Ping timeout: 250 seconds)
[23:53:23] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 250 seconds)
[23:53:23] <Gurkenglas> @let recoverus :: ((Stream () -> ()) -> ()) -> Stream (); recoverus usuu = Cons (usuu (\(Cons x _) -> x)) (recoverus (usuu . (. (\(Cons _ xs) -> xs))))
[23:53:24] <lambdabot>  Defined.
[23:53:24] *** Taneb0 is now known as Taneb
[23:53:39] *** Joins: niko (~niko@libera/staff/niko)
[23:53:40] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[23:53:41] *** Quits: IgnatInsarov[m] (~kindaroma@2001:470:69fc:105::f5d9) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: marinelli[m] (~marinelli@2001:470:69fc:105::2d8) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: unclechu (~unclechu@2001:470:69fc:105::354) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: boxscape (~boxscape@user/boxscape) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: Deide (~deide@user/deide) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: puffnfresh[m] (~puffnfres@2001:470:69fc:105::1:22da) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: james[m]12 (~jamesnina@2001:470:69fc:105::1:4203) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: TomasJakl[m] (~jaklttchn@2001:470:69fc:105::a42) (Ping timeout: 245 seconds)
[23:53:41] *** Quits: aidy (~aidy@2001:470:69fc:105::c7b4) (Ping timeout: 245 seconds)
[23:53:47] *** Quits: Ollie[m] (~ollieocha@2001:470:69fc:105::41a5) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: pfurla-matrix (~pedrofurl@2001:470:69fc:105::1:51d7) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: xbreu (~xbreu@2001:470:69fc:105::1:5061) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: the_last_immorta (~thelastim@2001:470:69fc:105::1:4d57) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: PotatoHatsue (~berberman@2001:470:69fc:105::b488) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: fendor[m] (~fendormat@2001:470:69fc:105::fcbd) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: moats (~oats@user/oats) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: maralorn (~maralorn@2001:470:69fc:105::251) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: zwro[m] (~zwromatri@2001:470:69fc:105::1d4) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: carmysilna (~brightly-@2001:470:69fc:105::2190) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: peddie (~peddie@2001:470:69fc:105::25d) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: AlainJourez[m] (~sherekahn@2001:470:69fc:105::1:4a71) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: oak- (~oakuniver@2001:470:69fc:105::fcd) (Ping timeout: 252 seconds)
[23:53:47] *** Quits: sm (~sm@plaintextaccounting/sm) (Ping timeout: 252 seconds)
[23:53:53] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[23:53:54] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 260 seconds)
[23:53:57] *** Quits: jneira[m] (~jneiramat@2001:470:69fc:105::d729) (Ping timeout: 268 seconds)
[23:53:57] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Ping timeout: 268 seconds)
[23:53:57] *** Quits: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32) (Ping timeout: 268 seconds)
[23:53:57] *** Quits: InternetManaging (~imjmatrix@2001:470:69fc:105::1:2ea5) (Ping timeout: 268 seconds)
[23:53:57] *** Quits: denbrahe[m] (~denbrahem@2001:470:69fc:105::19c0) (Ping timeout: 268 seconds)
[23:53:57] *** Quits: aveltras[m] (~aveltrasm@2001:470:69fc:105::3ef9) (Ping timeout: 268 seconds)
[23:53:59] *** Joins: sus (zero@user/zeromomentum)
[23:54:00] *** Joins: nisstyre (~wes@user/nisstyre)
[23:54:01] *** Quits: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: Artem[m] (~artemtype@2001:470:69fc:105::75b) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: SridharRatnakum4 (~sridmatri@2001:470:69fc:105::1c2) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: craige[m] (~craigemcw@2001:470:69fc:105::35f1) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: yehoshuapw (~yehoshuap@2001:470:69fc:105::a5f) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: alexfmpe[m] (~alexfmpem@2001:470:69fc:105::38ba) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: Christoph[m] (~hpotsirhc@2001:470:69fc:105::2ff8) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: ongy[m] (~ongymatri@2001:470:69fc:105::5018) (Ping timeout: 250 seconds)
[23:54:01] *** Quits: reza[m] (~rezaphone@2001:470:69fc:105::3eda) (Ping timeout: 250 seconds)
[23:54:02] *** Quits: SawyerBergeron[m (~sawyerber@2001:470:69fc:105::3036) (Ping timeout: 240 seconds)
[23:54:04] *** Joins: sim590 (~simon@modemcable090.207-203-24.mc.videotron.ca)
[23:54:07] *** Joins: opqdonut (opqdonut@pseudo.fixme.fi)
[23:54:20] *** Joins: alx741 (~alx741@157.100.93.160)
[23:54:20] *** Joins: Typedfern (~Typedfern@75.red-88-22-25.staticip.rima-tde.net)
[23:54:22] *** Quits: maerwald[m] (~maerwaldm@2001:470:69fc:105::1ee) (Ping timeout: 260 seconds)
[23:54:22] *** Quits: siraben (~siraben@user/siraben) (Ping timeout: 260 seconds)
[23:54:22] *** Quits: benjamin[m]1234 (~benjaminm@2001:470:69fc:105::1:3f2f) (Ping timeout: 260 seconds)
[23:54:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:54:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:54:36] *** Joins: wroathe (~wroathe@user/wroathe)
[23:54:45] *** Quits: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3) (Quit: WeeChat info:version)
[23:55:05] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:55:16] *** Server sets mode: +Cnt 
[23:55:20] <Gurkenglas> > take 50 $ show $ recoverus ($fix (Cons ()))
[23:55:21] <lambdabot>  "Cons () (Cons () (Cons () (Cons () (Cons () (Cons "
[23:55:24] *** Joins: ksqsf (~user@134.209.106.31)
[23:55:38] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[23:55:53] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[23:56:08] *** Joins: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:56:17] *** Joins: PigDude (~PigDude@159.203.16.199)
[23:56:27] *** Quits: fcc977 (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Remote host closed the connection)
[23:56:43] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[23:56:45] *** Joins: justosophy[m] (~justosoph@2001:470:69fc:105::572f)
[23:56:46] *** Joins: unrooted (~unrooted@2001:470:69fc:105::a4a)
[23:56:46] *** Joins: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9)
[23:56:47] *** Joins: jophish (~jophish@2001:470:69fc:105::670)
[23:56:47] *** Joins: jkachmar (~jkachmar@2001:470:69fc:105::c72d)
[23:56:59] *** Joins: Nate[m]12 (~m52957mat@2001:470:69fc:105::1:591a)
[23:57:00] *** Joins: shiraeeshi[m] (~shiraeesh@2001:470:69fc:105::1:77)
[23:57:02] *** Joins: bb010g (~bb010g@2001:470:69fc:105::9a5)
[23:57:12] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[23:57:13] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[23:57:37] *** Joins: bsima1 (9d7e39c8ad@2604:bf00:561:2000::dd)
[23:57:44] *** Joins: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57)
[23:57:45] *** Joins: Michal[m]1 (~oomiguelm@2001:470:69fc:105::1:5ab0)
[23:57:47] *** Joins: Orbstheorem (~orbstheor@2001:470:69fc:105::a56)
[23:57:51] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[23:57:52] *** Joins: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11)
[23:58:23] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (Ping timeout: 256 seconds)
[23:58:59] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:59:13] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:59:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:59:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
