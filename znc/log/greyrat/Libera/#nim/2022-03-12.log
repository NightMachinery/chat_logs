[00:25:24] <FromDiscord> <System64 ~ Flandre Scarlet> is there a convert proc for chars only instead of strings?
[00:32:35] <FromDiscord> <System64 ~ Flandre Scarlet> like ``myText..convert("IBM437", "UTF-8")`` but for char
[00:36:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:37:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:37:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:43:53] <Amun-Ra> that would be outside of char range
[00:43:59] *** Joins: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de)
[00:45:51] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Amun-Ra "that would be outside": I convert to IBM437 format
[00:46:12] <FromDiscord> <System64 ~ Flandre Scarlet> which have 255 characters
[00:46:32] <Amun-Ra> yes, still you can't have 'ó' as char
[00:47:21] <Amun-Ra> utf-8 for "Φ" is 0x03a6, char high is 0xff
[00:48:42] <Amun-Ra> you really want strings and perhaps Runes (encodings module)
[00:50:59] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Amun-Ra "yes, still you can't":  https://media.discordapp.net/attachments/371759389889003532/951952905936732160/unknown.png
[00:52:27] <Amun-Ra> that's ibm437 "byte" table
[00:52:41] <FromDiscord> <System64 ~ Flandre Scarlet> yeah, I want to use this table
[00:52:48] <Amun-Ra> you can't have the exact equivalent of utf-8 as 'char'
[00:53:01] <FromDiscord> <System64 ~ Flandre Scarlet> Ah I see
[00:53:23] <FromDiscord> <System64 ~ Flandre Scarlet> This is my char table https://media.discordapp.net/attachments/371759389889003532/951953507613818940/unknown.png
[00:53:32] <Amun-Ra> check "encodings" module
[00:54:50] <FromDiscord> <System64 ~ Flandre Scarlet> https://nim-lang.org/docs/encodings.html↵I'm here
[00:56:21] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @System64 "This is my char": And which table is it?
[00:56:34] <Amun-Ra> https://nim-lang.org/docs/encodings.html#convert%2Cstring%2Cstring%2Cstring
[00:57:25] <Amun-Ra> import encodings; echo "\xc0\xc1".convert("UTF-8", "IBM437")
[01:00:16] <FromDiscord> <System64 ~ Flandre Scarlet> So I guess I have to convert the entire string?
[01:04:17] <Amun-Ra> you can convert one char length strings too
[01:06:00] <FromDiscord> <System64 ~ Flandre Scarlet> ah I see↵and is a text conversion fast?
[01:08:11] <Amun-Ra> depends on what you mean by fast; but you shouldn't be worried about the speed
[01:08:41] <FromDiscord> <System64 ~ Flandre Scarlet> ah alright
[01:12:55] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:15:50] <FromDiscord> <System64 ~ Flandre Scarlet> Yeah! Text mode! https://media.discordapp.net/attachments/371759389889003532/951959157135794287/unknown.png
[01:17:15] <FromDiscord> <Recruit_main707> nice
[01:18:53] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:20:36] <Amun-Ra> doesn't look like one
[01:27:11] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Amun-Ra "doesn't look like one": Changing mode mid-frame
[01:27:15] <FromDiscord> <System64 ~ Flandre Scarlet>  https://media.discordapp.net/attachments/371759389889003532/951962033518174279/unknown.png
[01:27:40] <Amun-Ra> mid-frame as in mid-char?
[01:27:59] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Amun-Ra "mid-frame as in mid-char?": Nah, I change layers mid-frame
[01:30:45] <FromDiscord> <Forest> https://forum.nim-lang.org/t/5903 hm i just saw this, does it still apply nowadays?
[01:30:52] <FromDiscord> <Forest> (edit) "nowadays?" => "now?"
[01:31:13] <FromDiscord> <Elegantbeef> Which part?
[01:32:38] <Amun-Ra> System64 - this is my icedraw format reader, written in nim: https://postimg.cc/06CrxfW5
[01:33:05] <FromDiscord> <Forest> The part about being able to define a compiler via passes.nim
[01:33:24] <FromDiscord> <Elegantbeef> I believe so
[01:33:48] <FromDiscord> <Forest> Nice, I'll do some research into that
[01:34:00] <FromDiscord> <Forest> Because i hate myself a lot i'ma try Python then Lua :D
[01:36:37] <FromDiscord> <Forest> Y'know what, i might as well just use the Nim debug build thingy
[01:36:51] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Amun-Ra "System64 - this is": I love that kind of art!
[01:38:19] <FromDiscord> <auxym> check out https://ansiwave.net/, it's in nim
[01:38:51] <FromDiscord> <System64 ~ Flandre Scarlet> Oh I'll sure love this!
[01:40:33] <FromDiscord> <System64 ~ Flandre Scarlet> It reminds me the cracking groups art
[01:41:55] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @auxym "check out https://ansiwave.net/, it's": was it hard to make?
[01:46:28] <FromDiscord> <System64 ~ Flandre Scarlet> wtf it looks like MML https://media.discordapp.net/attachments/371759389889003532/951966866358804550/unknown.png
[01:53:01] <FromDiscord> <auxym> I didn't make it, check out this talk by the author: https://www.youtube.com/watch?v=cBqBfPRWla8
[01:54:38] <FromDiscord> <System64 ~ Flandre Scarlet> Oh I didn't know Nim had a YouTube channel
[01:56:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:01:32] *** Joins: Goodbye_Vincent4 (cyvahl@freakshells.net)
[02:02:26] *** Joins: lucerne8 (~lucerne@ip202.ip-51-178-215.eu)
[02:03:38] *** Joins: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se)
[02:05:50] *** Joins: mahlon_ (~mahlon@martini.nu)
[02:09:44] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[02:09:44] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[02:09:45] *** Quits: rb (~augh@alogs.space) (*.net *.split)
[02:09:45] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[02:09:45] *** Quits: Goodbye_Vincent (~Goodbye_V@freakshells.net) (*.net *.split)
[02:09:45] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[02:09:45] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[02:09:45] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[02:09:45] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:09:45] *** Quits: adium (adium@user/adium) (*.net *.split)
[02:09:46] *** Goodbye_Vincent4 is now known as Goodbye_Vincent
[02:09:47] *** lucerne8 is now known as lucerne
[02:15:26] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[02:15:26] *** Joins: rb (~augh@alogs.space)
[02:15:26] *** Joins: flynn (~mcbloch@user/flynn)
[02:15:26] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[02:15:26] *** Joins: tinystoat (~squeek@user/tinystoat)
[02:16:07] *** Quits: flynn (~mcbloch@user/flynn) (Max SendQ exceeded)
[02:17:15] *** Joins: flynn (~mcbloch@user/flynn)
[02:17:25] *** Joins: adium (znc@user/adium)
[02:27:16] <FromDiscord> <dilawar (Dilawar Singh)> not for all packages. E.g. `cpack` from `cmake` conflicts with `cpack` from choco. So `cmake` is not added to path by default (I think there is a special installargs to do this). Also package `visualstudio2019community`  is not added to PATH.
[02:44:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:01:32] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Quit: I love you.)
[03:01:47] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:01:54] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[03:02:30] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[03:03:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[03:03:55] <FromDiscord> <dilawar (Dilawar Singh)> How to capture output written to stdout or using `logging` module during `testament all`?
[03:18:06] <FromDiscord> <Elegantbeef> You can test the stdout of a test inside the file https://nim-lang.org/docs/testament.html#unitests-examples
[03:24:52] <FromDiscord> <dilawar (Dilawar Singh)> > You can test the stdout of a test inside the file https://nim-lang.org/docs/testament.html#unitests-examples↵Thanks. I assumed wrongly that echo to stdout will be hidden by default. Like `cargo test` in rust.
[03:25:29] <FromDiscord> <Elegantbeef> Isnt the stdout hidden by default?
[03:27:45] <FromDiscord> <dilawar (Dilawar Singh)> `echo 'x'` is showing up in `testament pattern "tests/test.nim"` output but `logger.info('x')` is not (maybe I am not initializing logger properly). Anyway `echo` is good enough for now.
[03:28:05] <FromDiscord> <Elegantbeef> You did make a console logger right?
[03:29:00] <FromDiscord> <dilawar (Dilawar Singh)> I don't think so. reading about it now.. `newConsoleLogger` seems to be neccessary in every test file.
[03:29:20] <FromDiscord> <Elegantbeef> Well if you're testing stdout it's kinda a requirement to log to the stdout
[03:30:15] <FromDiscord> <dilawar (Dilawar Singh)> indeed. I just assumed `import logging` would init a default logger that would write to stdout for me.
[03:30:47] <FromDiscord> <Elegantbeef> Ah
[03:31:07] <FromDiscord> <Elegantbeef> It does not since you dont always want a console logger
[03:31:35] <FromDiscord> <Nick.> With C# you've a command called BinaryReader. Which read binary data and can create a key, value out of the binary config. With python you can do it with struct.  Is there something within nim to do that? I was looking at strutils. Hopefully I said it correctly.
[03:32:06] <FromDiscord> <Elegantbeef> `std/streams`
[03:32:36] <FromDiscord> <dilawar (Dilawar Singh)> If tests pass then no stdout is shown. stdout is only shown in case of test failure? If yes, Is there a way to force stdout display even if test passes?
[03:32:50] <FromDiscord> <Elegantbeef> https://ajusa.github.io/binarylang-fun/intro.html is also an option
[03:33:27] <FromDiscord> <Nick.> I was looking at streams as well but is there a parser like BinaryReader or do I have to parse it all?
[03:33:53] <FromDiscord> <Elegantbeef> I dont get why you'd want to force the stdout, but perhaps it's here https://nim-lang.org/docs/testament.html
[03:34:15] <FromDiscord> <Elegantbeef> What?
[03:34:23] <FromDiscord> <Elegantbeef> Streams is identical to the binaryreader api
[03:34:34] <FromDiscord> <Elegantbeef> You make a binary reader than read a specific type out of it
[03:34:58] <FromDiscord> <Elegantbeef> You can also use binarylang  or look at frosty
[03:35:55] <FromDiscord> <Elegantbeef> Like this example https://docs.microsoft.com/en-us/dotnet/api/system.io.binaryreader?view=net-6.0
[03:37:20] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/aH4
[03:37:46] <FromDiscord> <Nick.> ok, interesting. and it can also be in a for loop
[03:37:58] <FromDiscord> <Elegantbeef> of course
[03:38:03] <FromDiscord> <Elegantbeef> `while not myFIle.atEnd`
[03:38:13] <FromDiscord> <Nick.> Interesting
[03:38:23] <FromDiscord> <Nick.> I'll give it a try! Thank you!
[03:38:28] <FromDiscord> <Elegantbeef> Like i said you can also use binarylang
[03:38:56] <FromDiscord> <Elegantbeef> You will run into issues if you attempt to serialize ref objects so things like `string` and `seq` might need their own `read` procedures specialized
[03:38:56] <FromDiscord> <Nick.> that's a module?
[03:39:04] <FromDiscord> <Elegantbeef> It's a package
[03:39:10] <FromDiscord> <Elegantbeef> https://github.com/sealmove/binarylang
[03:39:15] <FromDiscord> <Nick.> Right, I need to get use to the terms
[03:40:47] <FromDiscord> <Elegantbeef> There is also frosty if you want to easily go Nim \<-\> to binary. https://github.com/disruptek/frosty
[03:51:49] *** Joins: Figworm (FiggyWitIt@user/figworm)
[03:55:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:58:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:23:26] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:23:37] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[04:27:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[05:15:53] *** Quits: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:21:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[05:22:47] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:42:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[06:46:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:51:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:54:48] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[07:55:21] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[08:06:23] <FromDiscord> <ripluke> Is there a way I can get Nim intellisese in nvim
[08:06:39] <FromDiscord> <ripluke> (edit) "Is there a way I can get Nim intellisese in nvim ... " 03added "(neovim)"
[08:06:49] <FromDiscord> <Rika> nim.nvim?
[08:07:08] <FromDiscord> <ripluke> That doesn't have autcomple iirc but I'll check, thx
[08:08:03] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:08:56] <FromDiscord> <ripluke> In reply to @Rika "nim.nvim?": Thx I just noticed it has autcomplete as well
[08:09:29] <FromDiscord> <Rika> 👌
[08:44:07] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[08:45:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[08:48:34] <FromDiscord> <Bung> @ElegantBeef any plan fix https://github.com/beef331/nimscripter/issues/11
[08:49:11] <FromDiscord> <Elegantbeef> I've looked into it, I need to make a PR for it to the compiler iirc
[08:49:20] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 250 seconds)
[08:49:49] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Read error: Connection reset by peer)
[08:49:58] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[08:50:07] *** Quits: oz (~oz@crystal/user/oz) (Quit: EOF)
[08:50:07] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Read error: Connection reset by peer)
[08:50:13] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[08:50:17] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[08:50:30] *** Joins: ox (~oz@crystal/user/oz)
[08:55:26] <FromDiscord> <Bung> ah I thought just need pass new config when initialize nimscripter
[08:55:49] <FromDiscord> <Elegantbeef> Eh i fully forgot about the issue so i can try the passing a new config value
[08:55:56] <FromDiscord> <Elegantbeef> I think it's more complicated though
[08:56:32] <FromDiscord> <Bung> maybe， not sure
[09:01:20] <FromDiscord> <Elegantbeef> Oh seems it's simple
[09:06:51] <termer_> Does anyone know of any library to run procs on a different thread?
[09:07:01] <termer_> I wrote my own implementation but it looks like it's double calling procs
[09:07:09] <termer_> pretty lost and would rather use something battle-tested
[09:07:33] <termer_> basically I need to complete a future that was passed to a worker thread back on the origin thread of the future
[09:07:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:08:06] <FromDiscord> <Elegantbeef> Is this async related?
[09:08:15] <termer_> Possibly
[09:08:23] <termer_> Futures are being completed more than once
[09:08:46] <termer_> this isn't a problem until I spawn thousands of futures in a matter of seconds and ask them to be completed
[09:09:03] <FromDiscord> <Elegantbeef> @Bung\: seems it was a simple config, so i guess I'm a lazy shithead
[09:09:05] <termer_> at a certain point this is also causing a nil reference error in the GC that's crashing the application
[09:10:10] <FromDiscord> <Elegantbeef> Is your code thrown some where?
[09:10:42] <FromDiscord> <Elegantbeef> thrown up\
[09:10:49] <termer_> yes
[09:10:52] <termer_> lemme get the link
[09:11:12] <termer_> https://github.com/llstreamer/llstreamer-server/blob/main/src/llstreamer_server/private/threadutils.nim
[09:11:19] <termer_> here's my local thread executor
[09:11:37] <termer_> it's used here https://github.com/llstreamer/llstreamer-server/blob/main/src/llstreamer_server/private/crypto.nim
[09:11:44] <termer_> as well as here https://github.com/llstreamer/llstreamer-server/blob/main/src/llstreamer_server/private/db/sqlite.nim
[09:12:12] <FromDiscord> <Elegantbeef> What GC are you using?
[09:12:13] <termer_> Its purpose is to complete futures passed to a worker thread back on the thread where the future was created
[09:12:15] <termer_> orc
[09:12:20] <termer_> but this occurs on refc as well
[09:12:44] <FromDiscord> <Elegantbeef> Completing futures on other threads just seems like purposefully causing trouble
[09:13:10] <termer_> well threadutils.nim facilitates completing futures on their original therad
[09:13:12] <termer_> *thread
[09:13:24] <termer_> my issue is that at some point, futures are being called more than once
[09:13:36] <FromDiscord> <Bung> nimscript not support get env?
[09:14:04] <FromDiscord> <Elegantbeef> No clue it's in the nimscript module
[09:14:08] <FromDiscord> <Elegantbeef> Consider a PR to VMops
[09:14:49] <FromDiscord> <Elegantbeef> I can only imagine something is causing the Future's `finished` to reset, so where do you pass the futures around?
[09:15:37] <termer_> threadutils.nim:67 is the proc where futures are added to the queue
[09:16:01] <termer_> they are then executed in startLocalThreadExecutor thread
[09:16:18] <termer_> err
[09:16:21] <termer_> that loop
[09:16:24] <termer_> it's not a thread
[09:17:48] <termer_> crypto.nim:143 is on location where a future completing job is being passed into the queue
[09:18:30] <FromDiscord> <Elegantbeef> So you're still passing futures across the thread barrier?
[09:18:47] <termer_> A future is created on thread A
[09:19:00] <termer_> it's put in a queue that's accessible to both thread A and B
[09:19:10] <termer_> thread B picks up the job and future from the queue
[09:19:15] <FromDiscord> <Elegantbeef> Ok see that seems wrong to me, but i could be wrong
[09:19:38] <termer_> it performs the task and passes a proc that completes the future into a queue for thread A to execute
[09:19:56] <FromDiscord> <Elegantbeef> Thread A should just queue jobs for thread B, thread B then should do those jobs, then add the result to a queue
[09:20:11] <termer_> so the future was created on A, a job was passed to B, and then it schedules completion of the future in a job to be run on A
[09:20:17] <termer_> so the future is always executed on A
[09:20:29] <FromDiscord> <Elegantbeef> I dont get why you're using futures
[09:20:49] <termer_> because I'm awaiting a CPU intensive task
[09:20:54] <FromDiscord> <Elegantbeef> Just have a thread per operation then dispatch to those operations using async in there
[09:21:12] <termer_> thread per operation would end up spawning a ton of threads
[09:21:25] <termer_> in crypto.nim, I'm hashing passwords
[09:21:27] <FromDiscord> <Elegantbeef> Yea i probably should just shush i'm no expert in threading or async
[09:21:57] <termer_> I'm not sure whether you're being sarcastic but if you are I'm not trying to shut you down, just stating my reasoning
[09:22:06] <termer_> If I'm doing things wrong I'd be more than happy to be corrected
[09:22:48] <termer_> that's why I'm here after all
[09:22:52] <termer_> I screwed something up lol
[09:23:16] <FromDiscord> <Elegantbeef> I mean per unique operation type
[09:23:41] <termer_> there's a thread for password hashing and a thread for I/O currently
[09:23:54] <termer_> I/O thread is fully async
[09:24:07] <termer_> hashing thread does CPU-intensive work
[09:25:23] <FromDiscord> <Elegantbeef> I'm not being sarcastic, i really am not an expert here, and as such dont hold any weight in my view
[09:26:13] <FromDiscord> <Elegantbeef> I'd have the thread for password hashing send the result in a channel, and have the IO thread also send the results in a channel, since i'm a simpleton
[09:26:18] <FromDiscord> <Elegantbeef> I dont know why a future is involved here
[09:26:42] <termer_> how do channels work
[09:26:56] *** termer_ is now known as termer
[09:26:59] <FromDiscord> <Elegantbeef> A queue of lock and data
[09:27:08] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/channels_builtin.html#example
[09:27:30] <FromDiscord> <Elegantbeef> You add elements to a channel and then can safely access from another thread, it's like a threadsafe sequence kinda
[09:28:43] <termer> that might be just what I'm looking for
[09:28:58] <termer> however does a thread need to be suspended to get a new channel message
[09:29:13] <FromDiscord> <Elegantbeef> There is `tryRecv` which is non blocking
[09:29:30] <termer> this might be EXACTLY what I'm looking for
[09:29:38] <FromDiscord> <Elegantbeef> Well there we go
[09:29:41] <termer> thank you so much
[09:29:44] <FromDiscord> <Elegantbeef> I assumed you knew it existed
[09:29:48] <termer> nope
[09:29:56] <termer> I'm still a relatively new nim user
[09:31:04] <FromDiscord> <Elegantbeef> There is also https://github.com/status-im/nim-taskpools
[09:32:02] <termer> this unfortunately isn't geared towards async
[09:32:12] <termer> but channels should do in any case
[09:32:30] <termer> This project needs to block as little as possible, and when it does block it needs to be off the I/O thread
[09:35:01] <FromDiscord> <Elegantbeef> Finally to give one more thing to consider https://nim-lang.org/docs/manual_experimental.html#parallel-amp-spawn-spawn-statement does exist
[09:35:10] <FromDiscord> <Elegantbeef> But i'm probably just spamming pointless things
[09:35:26] <FromDiscord> <Elegantbeef> Though a flowvar is kind alike a thread future
[09:43:53] <FromDiscord> <Bung> @ElegantBeef I found the problem is I put nimble pkgs to search pathes , then it try to compile all modules ?
[09:45:28] <FromDiscord> <Elegantbeef> Reproduction?
[09:47:41] <FromDiscord> <Bung> let me double check this
[09:47:45] <FromDiscord> <Elegantbeef> Cause i do test that it doesnt explode with the nimble path added https://github.com/beef331/nimscripter/blob/master/tests/tgeneral.nim#L145-L147
[09:51:22] <FromDiscord> <Bung> sent a code paste, see https://paste.rs/Jf1
[09:52:24] <FromDiscord> <Elegantbeef> Well i cant do anything but say "ensure your libraries work with nimscript"
[09:52:54] <FromDiscord> <Bung> I local modify vmops add getEnv returns empty string then I encounter this error, I dont know where it comes as I dont call docutils directly
[09:53:27] <FromDiscord> <Elegantbeef> No clue either, doesnt make any sense
[09:55:12] <FromDiscord> <Bung> can the script error trace to my src file , now it just from std to std ..
[09:56:49] <FromDiscord> <Elegantbeef> What?
[09:57:56] <FromDiscord> <Bung> I mean the script error stack trace does not locate to my local file
[09:58:26] <FromDiscord> <Elegantbeef> Invalid symbol errors dont show import order
[10:03:49] <FromDiscord> <Bung> okay
[10:04:40] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[11:35:18] <FromDiscord> <retkid> In reply to @Elegantbeef "There is also https://github.com/status-im/nim-task": this looks about as good as stock threading i dont like it
[11:36:06] <FromDiscord> <Elegantbeef> Cool
[11:41:57] <FromDiscord> <Phil> sent a long message, see http://ix.io/3S0z
[11:42:12] *** Joins: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de)
[11:43:12] <FromDiscord> <Elegantbeef> That type looks tedious 😀
[11:45:31] <FromDiscord> <Phil> And I couldn't just throw the data of all different types into a single table because holy shit that table would've contained a lot of columns
[11:46:02] <FromDiscord> <Phil> In terms of db model I went with one table per different article type even if they share some fields, because I didn't want to have the data of a single entry split across 2 tables
[11:46:07] <FromDiscord> <Phil> ... discord eating my messages now, I've been trying to send one that just is not getting sent whatsoever
[11:47:00] <FromDiscord> <Phil> Anyway, 12 different article model types, each responsible for a different db table, not really much of a choice if I want a "summary" type
[11:47:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S0B
[11:47:40] <FromDiscord> <Elegantbeef> I personally dont like the manual upkeep so i'd probably use a pragma instead of a typeclass but you do you i guess
[11:47:42] <FromDiscord> <Phil> Inheritance! hiss
[11:48:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S0D
[11:48:51] <FromDiscord> <Elegantbeef> Arent you already using inheritance?
[11:48:58] <FromDiscord> <Phil> Begrudgingly
[11:49:32] <FromDiscord> <Phil> I tend to avoid it wherever possible but it was either accept the inheritance that norm provides me or not using norm
[11:50:13] <FromDiscord> <Phil> ... though I'll admit a decent chunk of that is because I detest inheritance complexity that work-code throws at me
[11:50:39] <FromDiscord> <Phil> Which is java, so to be expected
[11:51:28] <FromDiscord> <Elegantbeef> That was easy
[11:51:32] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S0F
[11:52:11] <FromDiscord> <Elegantbeef> Eh i rarely use inheritance, prefer using concepts where i can
[11:53:23] <FromDiscord> <Phil> I'll contemplate that for a future refactor, for now I pretty much already have the types, I'm just trying to refactor them out of a specific module that one thing uses (my search part of the application which searches across all these articles) and put it into its own thing since the "recently updated article" part of the application will also access them
[11:53:57] <FromDiscord> <Phil> Thus the quest for a module name, as e.g. there's also an enum with the table names of all these types included that I also want to move out etc.
[11:54:08] <FromDiscord> <Elegantbeef> Well then `articles` sounds fine
[11:55:34] <FromDiscord> <Phil> Hmmm all this "|" stuff was called type aliasing IIRC
[11:56:17] <FromDiscord> <Phil> I'll need to squint heavily at article/s / articleAlias or so as names
[11:57:36] <FromDiscord> <Elegantbeef> "articleAlias" isnt a module it's a stupid type name
[11:58:00] <FromDiscord> <Elegantbeef> articles implements the types and procedures around said types 😛
[11:58:05] <FromDiscord> <Elegantbeef> Smoke bomb with that dumb logic
[12:08:26] <FromDiscord> <Bung> @ElegantBeef any reason cause `Error: unhandled exception: 'renderArchive' was not found in the script. [VmProcNotFound]` am pretty sure I have `renderArchive` and my script file has import and export that
[12:08:39] <FromDiscord> <Elegantbeef> Do you have overloads
[12:09:10] <FromDiscord> <Bung> no , I have only one version renderArchive
[12:09:49] *** Quits: krux02 (~krux02@p200300e8171a750060abd903a9ed7316.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:10:33] <FromDiscord> <Elegantbeef> It's in your top level module?
[12:11:32] <FromDiscord> <Elegantbeef> I've not tested exporting a procedure from an inner module, so that is probably the issue
[12:11:39] <FromDiscord> <Bung> the proc is in archive.nim https://media.discordapp.net/attachments/371759389889003532/952124201597288498/Screenshot_2022-03-12_at_4.41.18_PM.png
[12:12:41] <FromDiscord> <Elegantbeef> The issue is somewhere inside here https://github.com/nim-lang/Nim/blob/f0af4a36b932af3932b611c1f728ebfbfe3a2749/compiler/nimeval.nim#L30-L51
[12:13:08] <FromDiscord> <Elegantbeef> What's the procedure definition?
[12:14:16] <FromDiscord> <Bung> https://github.com/bung87/crown_ui/tree/nimscripter see
[12:15:35] <FromDiscord> <Bung> it called serveral procs from theme.nim successfully until call renderArchive
[12:17:34] <FromDiscord> <Elegantbeef> I dont see why this is having issues with this logic
[12:20:19] <FromDiscord> <Elegantbeef> What's the nimscript look like?
[12:22:49] <FromDiscord> <Bung> https://github.com/bung87/crown_ui/blob/nimscripter/src/crown_ui/themes/default/theme.nim
[12:23:55] <FromDiscord> <Bung> https://github.com/bung87/crown_ui/blob/nimscripter/src/crown_ui/themes/default/archive.nim
[12:24:45] <FromDiscord> <Elegantbeef> Nothing stands out to me why the compiler says it doesnt exist so i guess it's'a compiler bug
[12:27:02] <FromDiscord> <Bung> weird , I commented generateArchive , other generation steps run well
[12:29:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[13:04:48] <NimEventer> New thread by Jasonfi: Launched a web app using Nim on the back-end, see https://forum.nim-lang.org/t/9002
[13:08:53] <FromDiscord> <xigoi> sent a code paste, see https://paste.rs/gXX
[13:16:25] <FromDiscord> <xigoi> It looks like I'm missing some dynamic library, but I have openssl installed, so no idea what it could be.
[13:17:46] *** Joins: brocc (6e4dfe96fc@user/brocc)
[13:26:56] <FromDiscord> <soda> sent a code paste, see https://play.nim-lang.org/#ix=3S15
[13:27:22] <FromDiscord> <soda> this for loop 'for x in os.walk_dir(src):' is not entered when the recursion occurs
[13:37:06] <FromDiscord> <xigoi> I don't see any recursive call in the proc…
[13:39:28] <FromDiscord> <xigoi> Maybe you want walkDirRec, so that it would recurse automatically?
[13:39:50] <FromDiscord> <Elegantbeef> You also can use a case statement instead of elif statements
[13:41:24] <FromDiscord> <rakgew> is there way to use something like `var userInput = stdin.readLine()` inside inim? currently gives me `raise EOF`
[13:42:32] <FromDiscord> <Elegantbeef> I dont imagine so
[13:42:55] <FromDiscord> <rakgew> bummer..
[13:44:12] <FromDiscord> <rakgew> that way I would not have to implement the repl features for my cli apps myself.
[13:44:45] <FromDiscord> <rakgew> I tried doing that with nim-prompt
[13:44:57] <FromDiscord> <rakgew> but there was no example code
[13:45:01] <FromDiscord> <Elegantbeef> You could make your stdin be a file, and then write to the file but that'd be odd
[13:45:11] <FromDiscord> <Schelz> Is nim able to import Julia functions ?
[13:45:19] <FromDiscord> <Elegantbeef> The best thing would probably use Nimscript to get a repl-ish environment
[13:45:20] <FromDiscord> <soda> sent a code paste, see https://play.nim-lang.org/#ix=3S1c
[13:45:52] <FromDiscord> <Elegantbeef> Though i dont know what you're doing
[13:46:00] <FromDiscord> <rakgew> ah, I see - had not thought about that - thx!!
[13:46:08] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:46:16] <FromDiscord> <Elegantbeef> Are you trying to make it so your CLI app is modifyable?
[13:46:56] <FromDiscord> <rakgew> basically interactive input from user\: one example is asking for input where to put scanned files with which name..
[13:46:56] <FromDiscord> <soda> In reply to @xigoi "Maybe you want walkDirRec,": Yes i will give it a try, but i would like to know why this fails.
[13:46:56] <FromDiscord> <Rika> In reply to @Schelz "Is nim able to": Not to my knowledge
[13:46:58] <FromDiscord> <Elegantbeef> Soda i'd certainly say just use walkdirrec
[13:47:17] <FromDiscord> <Elegantbeef> what does `x.path` return?
[13:47:25] <FromDiscord> <Bung> @ElegantBeef I rename module to a longer name now it works
[13:47:33] <FromDiscord> <soda> It corrects the correct path to the target dir that needs to be recursed into
[13:47:38] <FromDiscord> <soda> (edit) "corrects" => "returns"
[13:47:42] <FromDiscord> <Bung> archive.nim -> crown_ui_archive.nim
[13:47:59] <FromDiscord> <Elegantbeef> That maakes no sense Bung, perhaps a bad cached file
[13:48:15] <FromDiscord> <soda> The issue is that this line :↵  for x in os.walk_dir(src):↵is not executed on subsequent recursions. The check fails even though the path is correct and non-empty
[13:49:07] <FromDiscord> <Elegantbeef> Does https://nim-lang.org/docs/rdstdin.html#readLineFromStdin%2Cstring not work for you?
[13:49:13] <FromDiscord> <Elegantbeef> I'm confused why inim is involved
[13:49:22] <FromDiscord> <soda> (edit) "The issue is that this line :↵  for x in os.walk_dir(src):↵is not executed on subsequent recursions. The check fails even though the path is correct and non-empty ... " 03added "(like it would if the dir was empty, but it's not)"
[13:49:33] <FromDiscord> <Bung> In reply to @Elegantbeef "That maakes no sense": maybe I install too much packages it resolve to a nimble package like nimarchive ?
[13:49:34] <FromDiscord> <Elegantbeef> Is the "interactive" part a scriptable program?
[13:49:45] <FromDiscord> <Elegantbeef> No clue
[13:49:55] <FromDiscord> <Elegantbeef> It should default to relative before anywherelese
[13:50:07] <FromDiscord> <rakgew> ideally I would like autocomplete and thought I could get that from inim
[13:50:19] <FromDiscord> <rakgew> inim does not have to be in the mix though
[13:50:42] <FromDiscord> <Rika> Autocomplete for what?
[13:50:48] <FromDiscord> <rakgew> any other repl framework would do as well
[13:51:01] <FromDiscord> <Elegantbeef> I dont know i'd just implement this using illwill, this isnt a repl needed thing
[13:51:11] <FromDiscord> <rakgew> for the user input\: certain predefined topics, today's date, etc..
[13:51:19] <FromDiscord> <Elegantbeef> Can you explain the entire program?
[13:51:46] <FromDiscord> <soda> sent a code paste, see https://play.nim-lang.org/#ix=3S1e
[13:52:04] <FromDiscord> <Elegantbeef> There's the issue you ported python 😛
[13:52:15] <FromDiscord> <soda> I also have a working C++ version 😛
[13:52:27] <FromDiscord> <Elegantbeef> That's equally as bad
[13:53:24] <FromDiscord> <Rika> Let’s not argue
[13:53:27] <FromDiscord> <Rika> What’s the issue again
[13:53:38] <FromDiscord> <Rika> It’s a bit mixed up above
[13:53:59] <FromDiscord> <soda> > The issue is that this line :↵>   for x in os.walk_dir(src):↵> is not executed on subsequent recursions. The check fails even though the path is correct and non-empty (like it would if the dir was empty, but it's not)
[13:54:18] <FromDiscord> <soda> When going into recursion, the for loop is not entered as it should
[13:54:43] <FromDiscord> <rakgew> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  the example is a simple one\: check if the scanner is available, then ask the user for file name infos\: which path to put it to, the topic of scanned documents, the date of the documents (default/autocomplete today), then scan multiple pages, compress them (lzw) and move them to the defined directory.
[13:55:05] <FromDiscord> <rakgew> this could be done with simple stdin.readline
[13:55:20] <FromDiscord> <Elegantbeef> Ah and you want shell like completion
[13:55:22] <FromDiscord> <rakgew> but I would like to make it more generic, so I can reuse it
[13:55:31] <FromDiscord> <rakgew> exactly.
[13:55:37] <FromDiscord> <Elegantbeef> I feel like the thing to do is make procedures for this then
[13:56:09] <FromDiscord> <rakgew> yes - ideally I would have a proc for each command
[13:56:46] <FromDiscord> <rakgew> and these then ask for user input accordingly to types/tables to get user data input.
[13:56:57] <FromDiscord> <Bung> it will be problem if I wrongly pass it to searchPath https://media.discordapp.net/attachments/371759389889003532/952150702019457085/Screenshot_2022-03-12_at_6.22.41_PM.png
[13:57:53] <FromDiscord> <rakgew> I have written a few of these repl like apps in python, and thought they would be a great starting point for me in nim.
[13:58:20] <FromDiscord> <rakgew> there I user prompt\_toolkit, so I thought nim-prompt might be a good fit.
[13:58:22] <FromDiscord> <Rika> In reply to @soda "> The issue is": Is the path you get relative or not? I don’t remember what the path emitted is
[13:58:31] <FromDiscord> <soda> It is relative
[13:58:36] <FromDiscord> <rakgew> but I could not even instantiate the prompt
[13:58:39] <FromDiscord> <soda> I wonder if this might have something to do with garbage collection
[13:58:41] <FromDiscord> <Rika> Then isn’t that the issue
[13:58:51] <FromDiscord> <Rika> You enter the folder, then the path includes the folder name
[13:59:10] <FromDiscord> <Rika> So it looks for the folder, which it is inside
[13:59:20] <FromDiscord> <Rika> In reply to @soda "I wonder if this": No
[13:59:34] <FromDiscord> <soda> hmm
[13:59:51] <FromDiscord> <soda> you might be onto something
[13:59:59] <FromDiscord> <Rika> Try it, at the start of the proc print both the current folder it is in and the path it is passed
[13:59:59] <FromDiscord> <Elegantbeef> Something like this rakgew
[14:00:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3S1h
[14:00:21] <FromDiscord> <Elegantbeef> Then in your program you just do "Hey user hit tab twice" or w/e and prompt with that
[14:00:30] <FromDiscord> <Bung> I change to `import crown_ui/themes/default/archive↵export archive` then it works
[14:00:42] <FromDiscord> <Elegantbeef> Ok so it's an issue with nimble paths and nimscript
[14:01:04] <FromDiscord> <rakgew> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:   I see - sweet!. thx!!
[14:01:06] <FromDiscord> <Elegantbeef> I guess since i add all directories to the search path ambiguity isnt resolved nicely
[14:01:45] <FromDiscord> <Bung> your example does not work for me
[14:02:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/9rQ
[14:02:20] <FromDiscord> <Bung> sent a code paste, see https://play.nim-lang.org/#ix=3S1j
[14:02:26] <FromDiscord> <Elegantbeef> You'd just go "Hey with this ui we load X, Y, Z" in that order
[14:02:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[14:03:34] <FromDiscord> <Elegantbeef> Well yea that's going to cause ambiguity
[14:04:41] <FromDiscord> <Elegantbeef> You've added every file in your nimble directory as a first class file
[14:05:27] <FromDiscord> <soda> In reply to @Rika "Try it, at the": Yes that was the problem. Thank you.
[14:05:32] <FromDiscord> <Elegantbeef> You need to prefix it with the version or manually ad sub versions
[14:06:31] <FromDiscord> <Elegantbeef> so if you want to use x package you need to add that package so `nimblePath / "somePackage"`
[14:06:54] <FromDiscord> <Elegantbeef> Otherwise you're making all modules importable without a package name
[14:07:30] <FromDiscord> <Elegantbeef> And again this is why it's not ideal to use nimble, cause you can have 30 different versions of the same package installed, make your own stdlib
[14:08:52] <FromDiscord> <Elegantbeef> Now to nimify it removing the `elif` statements and using `for kind, name  in walkDir(path)` 😛↵(@soda)
[14:10:48] <FromDiscord> <Bung> I think I'll find way collect all my depencies to a dir then add it to searchPath
[14:11:07] <FromDiscord> <Elegantbeef> The nim compiler probably knows symlinks
[14:11:12] <FromDiscord> <Elegantbeef> So that'll be the easiest way probably
[14:12:06] <FromDiscord> <soda> In reply to @Elegantbeef "Now to nimify it": Sure, also does disabling the gc in the code i wrote above result in memory leaks?
[14:12:14] <FromDiscord> <Elegantbeef> Yes you use strings
[14:12:24] <FromDiscord> <soda> ah okay
[14:12:28] <FromDiscord> <soda> makes sense
[14:12:29] <FromDiscord> <Elegantbeef> It's better to just do `--gc:arc` than `--gc:none`
[14:12:35] <FromDiscord> <Rika> Why do you want to disable it anyway
[14:12:42] <FromDiscord> <soda> it results in a smaller binary
[14:12:58] <FromDiscord> <Rika> Use as beef says then
[14:13:04] <FromDiscord> <soda> hmm ok
[14:13:11] <FromDiscord> <Elegantbeef> Then do `-d:lto -d:danger --gc:arc --opt:size`
[14:13:12] <FromDiscord> <Rika> Also opt:size
[14:13:17] <FromDiscord> <demotomohiro> `--gc:none` can result in a memory leak
[14:13:22] <FromDiscord> <Rika> I do not recommend danger
[14:13:28] <FromDiscord> <soda> i am used to it
[14:13:29] <FromDiscord> <Rika> Use release either way
[14:13:33] <FromDiscord> <soda> thanks to c / c++
[14:13:42] <FromDiscord> <Elegantbeef> No shit sherlock 😛↵(@demotomohiro)
[14:13:54] <FromDiscord> <Rika> In reply to @Elegantbeef "No shit sherlock 😛": Not very obvious to most
[14:14:17] <FromDiscord> <Elegantbeef> Danger is smaller, if we're after size it's a good way to do it, shaves a few KB off↵(@Rika)
[14:14:27] <FromDiscord> <soda> now i just gotta learn how to manually deallocate strings :3
[14:14:30] <FromDiscord> <Elegantbeef> Can also statically build using musl for even smalelr
[14:14:34] <FromDiscord> <Elegantbeef> smaller\
[14:14:43] <FromDiscord> <Rika> In reply to @soda "now i just gotta": Just use ARC if you’re gonna do this anyway
[14:14:51] <FromDiscord> <Rika> In reply to @Elegantbeef "Danger is smaller, if": I still don’t recommend it
[14:14:53] <FromDiscord> <Elegantbeef> Nim doesnt really expose the internals of strings so you cant really manually dealloc, just use arc
[14:14:56] <FromDiscord> <soda> In reply to @Elegantbeef "Can also statically build": oh true, i do have musl somewhere lying around
[14:15:03] <FromDiscord> <soda> In reply to @Elegantbeef "Nim doesnt really expose": sad
[14:15:09] <FromDiscord> <soda> In reply to @Rika "I still don’t recommend": Well the idea is to learn.
[14:15:09] <FromDiscord> <Elegantbeef> Arc is going to be as performant as manual
[14:15:24] <FromDiscord> <Rika> In reply to @soda "Well the idea is": Learn from using danger instead of release?
[14:15:29] <FromDiscord> <soda> why not
[14:15:34] <FromDiscord> <Elegantbeef> ARC is deterministic GC, so it's not very big, but is very fast
[14:15:45] <FromDiscord> <soda> yea the binary is 30kb smaller
[14:15:47] <FromDiscord> <Elegantbeef> Danger doesnt give you any information, it's only really useful for speed/size
[14:15:58] <FromDiscord> <Rika> It’s not fast, it’s low latency
[14:16:12] <FromDiscord> <Rika> Use strip as well if you want
[14:16:26] <FromDiscord> <Elegantbeef> All the usual C size optimization tricks apply 😛
[14:16:29] <FromDiscord> <soda> haha yes ofc i have done all of these things
[14:16:33] <FromDiscord> <soda> save for linking with musl
[14:16:45] <FromDiscord> <enthus1ast> can i test if a var is a const? In a macro?
[14:16:53] <FromDiscord> <soda> this is the make file i used
[14:16:58] <FromDiscord> <soda> sent a long message, see http://ix.io/3S1l
[14:17:42] <FromDiscord> <Rika> Why are you pursuing small binary sizes? Just wondering
[14:18:07] <FromDiscord> <soda> No real reason. I'm just playing around with nim and compare it to other languages i know
[14:18:14] <FromDiscord> <soda> to mentally profile it
[14:19:40] <FromDiscord> <soda> In reply to @Elegantbeef "Now to nimify it": This is very similar to go
[14:20:26] <FromDiscord> <Elegantbeef> `symKind`
[14:20:55] <FromDiscord> <enthus1ast> thanks [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org) !
[14:57:28] *** syl_ is now known as syl
[15:09:15] <FromDiscord> <retkid> https://github.com/soasme/nim-schedules
[15:09:17] <FromDiscord> <retkid> i like this syntac
[15:09:18] <FromDiscord> <retkid> (edit) "syntac" => "syntax"
[15:09:20] <FromDiscord> <retkid> it make my brain happy
[15:16:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:18:26] <FromDiscord> <Rika> eh
[15:19:49] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952171552617660416/unknown.png
[15:20:26] <FromDiscord> <retkid> it kinda upsets me that it isn't perfect but im going to assume thats the computation time of the difference proc
[15:20:38] <FromDiscord> <Rika> perfection is difficult
[15:20:52] <FromDiscord> <Rika> if you want perfection then you have a lot of work ahead of you
[15:21:03] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/952171862186672128/unknown.png
[15:21:13] <FromDiscord> <retkid> its better with -d:danger
[15:21:19] <FromDiscord> <retkid> so yea i think its near perfect
[15:38:12] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[15:55:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[16:00:46] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:16:38] <FromDiscord> <Sense> In reply to @Amun-Ra "System64 - this is": damn
[16:25:52] *** Joins: pro (~pro@user/pro)
[16:34:20] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[16:34:48] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[16:56:50] *** Quits: pro (~pro@user/pro) (Quit: pro)
[17:39:07] <FromDiscord> <Schelz> nim support esp32 ibeacon via ble ?
[18:10:16] *** Joins: arkurious (~arkurious@user/arkurious)
[18:23:09] <FromDiscord> <auxym> I mean, nim won't support that, but a library might. Have you checked nesper? Also, try asking in the embedded channel
[18:28:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[18:31:38] *** Joins: toulene (~toulene@user/toulene)
[18:40:16] <FromDiscord> <Schelz> its the same thing just that on main peoples might answer faster its not a technical question its just a simple question
[18:40:23] <FromDiscord> <Schelz> In reply to @auxym "I mean, nim won't": its the same thing just that on main peoples might answer faster its not a technical question its just a simple question
[18:42:03] <FromDiscord> <auxym> i mean, sounds pretty technical tbh, you're asking about a very specific feature of a very specific embedded system. but main is pretty quiet this morning anyways 😄
[18:42:26] <FromDiscord> <Schelz> huh lame
[18:43:16] <FromDiscord> <Schelz> bth thx for guessing an answer for my question
[18:44:21] <FromDiscord> <Schelz> (edit) 04removed "bth"
[18:44:51] <FromDiscord> <Schelz> (edit) "thx for guessing an answer for my question ... " 03added "😄"
[18:55:37] <FromDiscord> <soda> Is there an equivalent of C++'s fmt::format in nim? I know fmt exists, but is there a way i can have something like fmt("{}", 21) ?
[18:56:44] <FromDiscord> <Schelz> https://nim-lang.org/docs/strformat.html
[18:56:47] <FromDiscord> <Rika> strutils.%
[18:57:11] <FromDiscord> <soda> In reply to @Schelz "https://nim-lang.org/docs/strformat.html": i couldn't find what i was looking for there
[18:57:18] <FromDiscord> <soda> In reply to @Rika "strutils.%": oh okay i'll check it out
[18:57:53] <FromDiscord> <Schelz> oh
[18:57:55] <FromDiscord> <Rika> usage is like `"$# aaaa $#" % ["bbbb", "cccc"]`
[18:58:04] <FromDiscord> <Rika> i think
[18:58:05] <FromDiscord> <Rika> i forget
[18:58:09] <FromDiscord> <Rika> its on the docs nonetheless
[19:02:43] <FromDiscord> <soda> Cool it works well, but i have one more question. Is there a ternary operator i can use to branch the replacing?
[19:03:31] <FromDiscord> <soda> C++ equivalent would be: std::cout << "I am a " << (bool ? "if true" : "if false");
[19:03:38] <FromDiscord> <auxym> In reply to @Rika "usage is like `"$#": https://nim-lang.org/docs/strutils.html#%25%2Cstring%2CopenArray%5Bstring%5D
[19:03:52] <FromDiscord> <Rika> yeah that
[19:04:12] <FromDiscord> <soda> Yeah it's that syntax, but doesn't seem to support ternary operator inside the []
[19:04:16] <FromDiscord> <Rika> In reply to @soda "Cool it works well,": `(if aBool: "true" else: "false")`
[19:04:24] <FromDiscord> <soda> it wont work
[19:04:26] <FromDiscord> <Rika> thats a ternary
[19:04:28] <FromDiscord> <Rika> why not
[19:04:42] <FromDiscord> <soda> nvm im dum
[19:04:52] <FromDiscord> <Rika> !eval echo "$1" % [(if true: "true" else: "false")]
[19:04:55] <NimBot> Compile failed: /usercode/in.nim(1, 11) Error: undeclared identifier: '%'
[19:05:12] <FromDiscord> <soda> it actually works
[19:05:20] <FromDiscord> <soda> i had just missed something else
[19:05:21] <FromDiscord> <Rika> ok good
[19:30:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:30:43] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[20:31:16] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[21:07:28] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[21:07:28] *** Quits: rb (~augh@alogs.space) (*.net *.split)
[21:07:28] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[21:07:28] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[21:12:56] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[21:12:56] *** Joins: rb (~augh@alogs.space)
[21:12:56] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[21:12:56] *** Joins: tinystoat (~squeek@user/tinystoat)
[21:14:37] <FromDiscord> <Require Support> `myObj->myMember` in C is just `myObj.myMember` in nim ? if myObj is already a `ptr` type
[21:35:43] <FromDiscord> <huantian> Correct, it’s the same as `myObj[].myMember`
[21:41:50] <FromDiscord> <S3cur3Th1sSh1t> sent a long message, see http://ix.io/3S3o
[22:05:07] <FromDiscord> <d4rckh> sent a code paste, see https://play.nim-lang.org/#ix=3S3x
[22:08:43] <FromDiscord> <qb> I guess echoing isn't threadsafe. Multiple threads could echo to the same line at the same time. Locks would make sure you get every echo on a new line
[22:09:48] <FromDiscord> <huantian> Yep you don’t want one echo to happen in the middle of another and “interrupt” it
[22:10:46] <FromDiscord> <d4rckh> thanks! I know when I was doing threads in python they wouldn't actually be parallel but concurrent, this happened only on windows tho, is it the same case with nim too?
[22:13:23] <FromDiscord> <qb> If you're talking about the interpreter lock python has. No nim doesn't have that
[22:14:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:14:23] <FromDiscord> <qb> But pythons gil should be on every os
[22:16:43] <FromDiscord> <S3cur3Th1sSh1t> In reply to @S3cur3Th1sSh1t "Hey,  can someone": Already found a solution, problem solved.
[22:19:34] <FromDiscord> <d4rckh> In reply to @qb "If you're talking about": cool
[22:42:05] <FromDiscord> <Ayy Lmao> Is there a way to get nimlsp in sublime text to be aware of changes to other files? For some reason when I do something like change a function definition in another file, I have to restart sublime text for other files to be aware of that change.
[22:52:52] <FromDiscord> <d4rckh> I am getting this error when compiling that code: `Error: cannot evaluate at compile time: nThreads`. why is that getting evaluated at compile time? https://media.discordapp.net/attachments/371759389889003532/952285564579749918/unknown.png
[22:56:09] <FromDiscord> <Phil> Type assignments are done at compile time
[22:56:22] <FromDiscord> <Phil> And so it tries to resolve nThreads and replace it with a 5
[22:56:47] <FromDiscord> <Phil> But then notices that nThreads isn't known at compile time, only at runtime (because you use var. To have this be at compile time use const)
[22:57:26] <FromDiscord> <Phil> Keep in mind though that const values can basically be only magic numbers and magic strings, so essentially strings and numbers you hard code as you did nThreads
[22:57:33] <FromDiscord> <d4rckh> I see, but nThreads needs to be a var because it will be replaced with an command line argument later
[22:57:36] <FromDiscord> <Phil> (edit) "nThreads" => "nThreads. That or they have to be types/ stem from types"
[22:57:44] <FromDiscord> <d4rckh> (edit) "an" => "a"
[22:58:12] <FromDiscord> <Phil> in that case you migth want to make a const "threadCount" and then do "nThreads = threadCount" initially
[22:58:31] <FromDiscord> <Phil> or "initialThreadCount" if nThreads evolves over time
[22:58:43] <FromDiscord> <Phil> or "maxThreadCount" if the array is only ever supposed to contain 5 entries
[22:59:24] <FromDiscord> <d4rckh> wait, one second
[22:59:29] <FromDiscord> <d4rckh>  https://media.discordapp.net/attachments/371759389889003532/952287232646082620/unknown.png
[22:59:32] <FromDiscord> <d4rckh> here
[23:00:06] <FromDiscord> <d4rckh> this is how it should be
[23:00:24] <FromDiscord> <Phil> First question, I assume parsedArgs.threadCount is still 5
[23:00:30] <FromDiscord> <Phil> Will you never have more than 5 threads?
[23:00:51] <FromDiscord> <Phil> Or do you want your array to be able to handle more than 5 threads?
[23:00:53] <FromDiscord> <d4rckh> it a user provided value so it could be anything
[23:00:57] <FromDiscord> <d4rckh> (edit) "it" => "its"
[23:01:13] <FromDiscord> <d4rckh> 1, 2, 20, 100
[23:01:24] <FromDiscord> <Phil> Then you can't use a straight up array here, for an array you must know at compile time how large it is allowed to be. You want to use a seq
[23:03:56] <FromDiscord> <d4rckh> oh, it works, thanks
[23:04:04] <FromDiscord> <Phil> with seq?
[23:04:12] <FromDiscord> <Kiwids> hi guys! I want to use deploy Jester with https. is there a way to achieve that?
[23:04:14] <FromDiscord> <Kiwids> thanks! alot
[23:04:23] <FromDiscord> <Kiwids> (edit) "use" => ""
[23:05:20] <FromDiscord> <Kiwids> like flask in python
[23:05:27] <FromDiscord> <Phil> No idea, never used jester, I use prologue. You might have also a chance by asking in the webdev channel
[23:05:34] <FromDiscord> <Kiwids> In reply to @Isofruit "No idea, never used": thanks!
[23:05:53] <FromDiscord> <d4rckh> In reply to @Isofruit "with seq?": yup
[23:06:13] <FromDiscord> <Phil> In reply to @Kiwids "thanks!": Though, either way, shouldn't you have your server behind an ngninx or an apache and they handle the HTTPS side of things?
[23:06:23] <FromDiscord> <Phil> (edit) "In reply to @Kiwids "thanks!": Though, either way, shouldn't you have your ... server" 03added " application"
[23:07:18] <FromDiscord> <Kiwids> haha yeah that would be the case. but I am just wondering if this is possible for a small env
[23:08:30] <FromDiscord> <Phil> In reply to @d4rckh "yup": Yeh, if you want what amounts to a resizeable array (the data type is typically called a list), then the tool to go is pretty much seq's.↵Arrays are useful when you know your data size ahead of time, e.g. that it must be 5 entries or sth.
[23:13:27] <FromDiscord> <d4rckh> sent a code paste, see https://play.nim-lang.org/#ix=3S3M
[23:13:40] <FromDiscord> <d4rckh> it throws this error `Error: unhandled exception: index out of bounds, the container is empty [IndexDefect]`
[23:14:04] <FromDiscord> <Alea> is there still not better alternative to nimsaem's extension for vscode? it's really not working for me today
[23:14:09] <FromDiscord> <Alea> (edit) "not" => "no"
[23:14:11] <FromDiscord> <Phil> Well, it starts with 0 threads in it, you're just declaring the variable. Got to do a lot of thr.add calls first that add some threads
[23:14:36] <FromDiscord> <exelotl> is there a nim equivalent of `LINE` ?
[23:14:49] <FromDiscord> <d4rckh> so just empty elements to the sequence?
[23:14:55] <FromDiscord> <exelotl> I'm trying with `instantiationInfo` but it seems to only work in templates
[23:15:59] <FromDiscord> <Phil> In reply to @d4rckh "Wait, I don't think": strictly speaking it's just a declared variable with no content. ↵Under the hood nim does some initialization for you, so by just declaring it nim already builds an empty seq with those types for you, but I would never ever rely on that.
[23:16:29] <FromDiscord> <d4rckh> In reply to @Isofruit "*strictly speaking* it's just": oh, how can i initialize it myself then?
[23:20:21] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3S3N
[23:20:35] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3S3N" => "https://play.nim-lang.org/#ix=3S3O"
[23:20:50] <FromDiscord> <Schelz> Does nim has bind for DEFINE_GUID ?
[23:21:02] <FromDiscord> <Schelz> (edit) "Does nim has bind for DEFINE_GUID ?" => "sent a code paste, see https://play.nim-lang.org/#ix=3S3Q"
[23:21:10] <FromDiscord> <Schelz> (edit) "sent a code paste, see https://play.nim-lang.org/#ix=3S3Q" => "Does nim has bind for DEFINE_GUID?"
[23:21:13] <FromDiscord> <Schelz> (edit) "DEFINE_GUID?" => "DEFINE_GUID ?"
[23:21:24] <FromDiscord> <Phil> In reply to @Alea "is there still no": There's really not a lot. Half the time I debug just on compiler errors alone which do an alright job
[23:22:29] <FromDiscord> <d4rckh> In reply to @Isofruit "There's like half a": oh yeah i was doing this too but i wasnt sure about the code to create a thread object haha
[23:22:51] <FromDiscord> <Phil> What package did you import to have the Thread type?
[23:23:10] <FromDiscord> <Phil> Typically that kind of package contains procs for building the type it provides
[23:23:15] <FromDiscord> <d4rckh> It's part of the system module, https://nim-lang.org/docs/threads.html
[23:23:38] <FromDiscord> <Phil> I'm spotting 2 "createThread" procs at first glance
[23:24:26] <FromDiscord> <Alea> In reply to @Isofruit "There's really not a": my problem is that it wont show func signatures while any errors exist :pain:
[23:24:59] <FromDiscord> <Phil> In reply to @Alea "my problem is that": Huh, that puts you further ahead than me, for me the intellisense takes so long I can type out the proc three times over before I get a suggestion
[23:25:49] <FromDiscord> <Phil> nimsaem's plugin is still pretty useful for underlining the areas where the compiler is complaining though, so I'll take what I can get
[23:26:20] <FromDiscord> <d4rckh> In reply to @Isofruit "I'm spotting 2 "createThread"": both return a proc 😢 https://media.discordapp.net/attachments/371759389889003532/952293989103583302/unknown.png
[23:27:17] <FromDiscord> <Phil> You'll find both return nothing 😛↵But they take procs as arguments, as in that proc will be executed by that thread and once the proc is finished that thread will kill itself
[23:27:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[23:27:47] <FromDiscord> <Phil> `;` is identical to `,`  within proc signatures
[23:27:54] <FromDiscord> <Phil> Don't ask me why, some people find that more visible
[23:28:37] <FromDiscord> <Phil> Actually there's some fine-grained differences, like you can't do "a; b: int" iirc, but I'm not a fan of that anyway so.... eh
[23:29:05] <FromDiscord> <d4rckh> Oh, so how can I get about creating a Thread object to add to that sequence then?
[23:29:37] <FromDiscord> <Phil> What task is the thread supposed to do?
[23:29:58] <FromDiscord> <d4rckh> It's supposed to do some web requests
[23:30:17] <FromDiscord> <d4rckh> actually it just calls another function
[23:30:26] <FromDiscord> <d4rckh> (edit) "function" => "function, that is doing some web requests"
[23:30:58] <FromDiscord> <Phil> define a proc that does exactly that (does the web request, receives a response and performs some action from that response)
[23:31:17] <FromDiscord> <Phil> And then use that proc as argument for creating the thread
[23:31:31] <FromDiscord> <Phil> (edit) "And then use that proc as ... argument" 03added "the "tp""
[23:31:41] <FromDiscord> <d4rckh> yeah, i have a `threadFunc` as the example from threads docs
[23:38:54] <NimEventer> New thread by Seves: Handling of persistent connections in asynchttpserver, see https://forum.nim-lang.org/t/9003
[23:40:43] <FromDiscord> <Phil> createThread(thr[i], yourProc, <however you instantiate a tuple I forgot>) should do it
[23:40:51] <FromDiscord> <Phil> (edit) "yourProc," => "threadFunc,"
[23:41:24] <FromDiscord> <Phil> But you start at index 0
[23:42:25] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/LtF
[23:42:30] <FromDiscord> <d4rckh> In reply to @d4rckh "Wait, I don't think": That's what im doing already
[23:52:29] <FromDiscord> <d4rckh> sent a code paste, see https://paste.rs/tPD
