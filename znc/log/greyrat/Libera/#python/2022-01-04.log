[00:00:53] *** Joins: withered__dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:01:19] *** Quits: bluedust (~bluedust@61.3.70.192) (Remote host closed the connection)
[00:03:16] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:04:44] *** Quits: withered__dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Client Quit)
[00:12:14] *** Joins: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de)
[00:13:36] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[00:14:08] <dba> https://www.irccloud.com/pastebin/6d4ez4t1/
[00:14:09] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[00:14:20] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:14:35] <CrtxReavr> The things wierd customer issues teach you: https://www.python.org/dev/peps/pep-3113/
[00:15:07] <dba> doing that on a Mac machine where would they be saved and how to get them with os.getenv()?
[00:15:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:16:05] <FunkyBob> saved?
[00:16:17] <FunkyBob> those are environment variables
[00:16:25] <FunkyBob> how you set them is... variable.
[00:16:36] <lericson> CrtxReavr: i used to love those
[00:17:25] <lericson> particularly for lambdas
[00:17:41] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:17:43] <FunkyBob> dba: are you asking how to set them and have it persist?
[00:19:06] <dba> FunkyBob, yes, I guess. I did set them but I am not able to retrieve them with os.getenv('PASSWORD')
[00:19:58] <grym> dba: exports persist for the duration of the shell environment they're set in.  if you want that to be "all of them", you will want to stuff those values in a file and source them when you need them
[00:20:27] <grym> dba: that's usually either 1. put it in your shell rc 2. put it in a special file and source that file before you launch the thing you want to see those variables with in the same shell
[00:20:38] <FunkyBob> dba: set them how, exactly?
[00:20:42] <grym> for 2., i like direnv.net to help, but you can do that by hand if you like
[00:20:52] <FunkyBob> if os.getenv can't see them, they're not set
[00:21:11] <grym> they're not set where os can look
[00:22:08] <FunkyBob> the simplest way to set them for a task is on the command line when you launch t he task
[00:22:15] <FunkyBob> but to have them set every time you launch takes more work
[00:22:34] <FunkyBob> so, I guess we really need to know what actual problem you're trying to solve, so we can recommend the best solution
[00:23:33] <dba> FunkyBob, grym was right after rebooting the machine I wasnt able to access them when I did export PASSWORD='pass1' USERNAME='user1' the python script has no issue accessing them.
[00:23:36] *** Quits: Guest28 (~Guest28@2a02:21b0:644d:adcb:fcc7:63bb:ced:113f) (Quit: Client closed)
[00:24:26] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[00:24:37] <dba> that is interesting to know. but would it be possible to set them for good and never had to do that export command everytime I start working on this project?
[00:24:38] *** Quits: rsx (~dummy@ppp-188-174-153-38.dynamic.mnet-online.de) (Quit: rsx)
[00:25:08] <grym> dba: i suggested two general approaches to do that
[00:25:16] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:25:38] <CrtxReavr> lericson, why not just build a tuple_var, then pass it like funx(*tuple_var) ?
[00:25:55] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[00:26:03] <dba> grym, for the 1st one do you mean put them in .bash_profile file?
[00:26:15] <grym> dba: if that's your shell :)
[00:26:24] <grym> (i use zsh, so i'd put them somewhere else)
[00:27:17] <FunkyBob> right... each shell program has one or more config scripts in which you can set them
[00:27:33] <FunkyBob> but typically for a single process, you'd find a way to set them more localised
[00:27:43] <lericson> CrtxReavr: tuples_of_things = list(zip(a, b, c)); tuples_of_things.sort(key=lambda (ai, bi, ci): ci + bi - ai)
[00:27:50] <lericson> CrtxReavr: this type of thing used to be very easy to do
[00:27:57] *** Joins: goldfish (~goldfish@user/goldfish)
[00:28:00] <lericson> now your lambda is going to be inscrutable instead
[00:28:05] <FunkyBob> there are also some tools to help set env vars for specific dirs or projects, etc
[00:28:23] <FunkyBob> or you could just write it in a file, and remember to ". myfile" when you go to work on that project
[00:28:23] <dba> FunkyBob, tools such as?
[00:28:30] <parv> I do not remember (or care to) the details, I collect|source files from .{ba,z,}shrc instead of .*profile
[00:29:03] <grym> dba: direnv.net
[00:29:08] <grym> (which i also suggested)
[00:29:10] <FunkyBob> https://pypi.org/project/envdir/
[00:29:12] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:29:13] <FunkyBob> direnv
[00:29:20] <FunkyBob> is direnv the "automatic" one?
[00:29:22] <grym> direnv is basically "auto source .envrc if there is one and you say it's ok"
[00:29:24] <lericson> CrtxReavr: the arguments in the pep don't make a ton of sense either ("treats sequences specially") -- assignment already does that, that's the exact syntax of tuple assignment.... there is no mapping assignment
[00:29:24] <grym> FunkyBob: yes
[00:29:46] <FunkyBob> yeah... I know many who love it
[00:29:46] <grym> FunkyBob: SnoopJ told me about it years ago and it's been great ever since
[00:29:59] <FunkyBob> it's not to my taste, but that's a personal thing
[00:30:10] <dba> Thank you all, for your help
[00:31:03] <SnoopJ> FunkyBob, it's easy to overdo it
[00:31:23] <SnoopJ> but when you are working with something janky that has a lot of sensitivity to environment it can be a blessing to just get the right environment when you're there
[00:31:51] *** Joins: chuck (~chuck@181.191.143.87)
[00:32:41] <parv> .oO( Reminds me of my Java for class projects )
[00:33:04] <grym> reminds me of every codebase that's ever encountered users :)
[00:33:09] <parv> s/my Java/my Java use/
[00:33:19] <parv> Ha
[00:33:27] <CrtxReavr> lericson, I was wondering if they were getting some named-tuple mixed in there.
[00:34:49] <FunkyBob> SnoopJ: oh, absolutely, I see the appeal.
[00:35:09] <lericson> zip_named(a=a, b=b, c=c) would be pretty cool
[00:35:16] <lericson> or just zip with kwargs
[00:35:32] <lericson> actually just zip with dicts?
[00:35:42] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5) (Ping timeout: 256 seconds)
[00:35:42] <lericson> i had no idea i wanted this until now
[00:35:47] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:35:49] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:36:07] *** Joins: EGH (~EGH@185.25.195.104)
[00:36:09] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[00:36:29] <SnoopJ> FunkyBob, "tooling corrupts, env tooling corrupts environmentally" :)
[00:36:34] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:36:45] <lericson> iow list(zip(l='abc', n=[1,2,3])) == [{'l': 'a', 'n': 1}, …]
[00:37:01] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[00:37:25] *** Joins: Betal (~Betal@user/betal)
[00:37:26] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[00:37:41] *** Quits: greedom (~greedom@p200300de6706c800f85da5a876ae3ebc.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:38:39] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[00:40:54] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[00:42:05] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[00:43:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:44:24] <jinsun> list(dict(zip("ln", x)) for x in zip("abc", [1, 2, 3]))
[00:45:00] *** Quits: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Quit: jcsteele)
[00:46:09] *** Quits: chuck (~chuck@181.191.143.87) (Quit: leaving)
[00:46:19] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-091d-1081-f4eb-7cf8.res6.spectrum.com) (Read error: Connection reset by peer)
[00:46:24] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:48:02] <lericson> at that point you're way better off with [{'l': l, 'n': n} for l, n in zip('abc', [1,2,3])]
[00:48:16] <lericson> which is the whole problem, tuples are treated specially
[00:48:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:48:26] <lericson> but not coherently specially
[00:48:32] <lericson> putting us in this awkward position in the first place
[00:48:45] <lericson> it used to be, but aforementioned pep "fixed" that
[00:50:18] <CrtxReavr> Well. . . seems sloppy. . . seems like something people were just getting away with by accident.
[00:50:27] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:50:48] <CrtxReavr> Dealing with code in a customers hands (for years) with ``def change_prefix((tokname, s)):``
[00:51:07] <CrtxReavr> All the sudden, the build system is seeing a syntax error.
[00:51:25] <jinsun> seems useful in lambdas, but lambdas themselves aren't too useful themselves, so not much loss
[00:52:07] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[00:52:19] <CrtxReavr> Yeah, I usually prefer to just make a clear function, rather than save a little typing with a lambda.
[00:52:29] *** Joins: vassenn (~vassen@178.35.67.135)
[00:53:09] <jim> what would make a function "clear"?
[00:53:24] <jim> is it clear vs opaque?
[00:53:57] <CrtxReavr> Clear as in easy to read & understand, which lambdas kinda are not.
[00:54:11] <jim> oh ok, thanks
[00:54:16] <CrtxReavr> They're like the list comprehensions of functions.
[00:54:38] <CrtxReavr> Though. . . I'm far less against list comprehensions than I used to be.
[00:54:43] <jim> lambada comprehensions?
[00:54:45] <lericson> you mean incredibly useful?
[00:55:08] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:55:23] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[00:55:27] <CrtxReavr> Actually, I use dict comprehensions and generator comprehensions quite a lot.
[00:55:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[00:56:07] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[00:56:11] <jim> a generator comprehension is something that yields?
[00:56:56] <jinsun> it is a list comprehension with parenthesis instead of square brackets
[00:57:04] *** Parts: artag (~adrian@2a00:1098:8:128::1) ()
[00:57:08] <lericson> (parentheses optional in some cases)
[00:57:26] <CrtxReavr> Well. .. if you're passing a list comp to a function: funx([x for x in whatevs])
[00:57:42] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[00:57:54] <jinsun> yeah optional in those cases (and only if it is a single poisitional argument)
[00:58:14] *** Joins: vaio (~gary@user/ghost)
[00:58:28] <exarkun> list comprehensions are eager, generator expressions are lazy
[00:58:44] <exarkun> it's not merely a question of what flavor bracket they have around them
[00:59:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[00:59:20] <lericson> why not both
[00:59:25] <lericson> list(f(v) for v in seq)
[00:59:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:00:09] <parv> Is the for-loop in a generator comprehension also lazy?
[01:00:10] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[01:00:21] *** Joins: martingale (~beta@170-83-120-154.customer.nbtos.com.br)
[01:00:29] <yitz> generators are lazy
[01:00:42] <yitz> They only generate on a next()
[01:01:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:01:10] <jinsun> yes generator kinda implies that, if it wasn't lazy it would be some other name
[01:01:15] *** Joins: slbtty (~slbtty@2607:fea8:1d40:800::3efa)
[01:01:41] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[01:01:54] *** slbtty is now known as shenlebantongyin
[01:01:58] *** shenlebantongyin is now known as slbtty
[01:02:20] <exarkun> sure, it implies it to you if you already know what a generator is
[01:02:24] <exarkun> if you don't, it doesn't really.
[01:02:53] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[01:03:06] <yitz> https://en.wikipedia.org/wiki/Generator_(computer_programming)
[01:03:10] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Client Quit)
[01:03:19] <yitz> > However, instead of building an array containing all the values and returning them all at once, a generator yields the values one at a time, which requires less memory and allows the caller to get started processing the first few values..
[01:03:23] <yitz> ... immediately.
[01:03:27] <parv> Well, a list could be built into existence, to be fed to the caller per element
[01:03:31] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[01:03:41] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[01:03:45] <SnoopJ> parv, and that would appear lazy, but wouldn't be
[01:03:53] <SnoopJ> (because it has to build the list first)
[01:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:04:07] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[01:04:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:04:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[01:05:01] <parv> ... hence was my query
[01:05:48] *** Quits: The_Jag (~The_Jag@host-79-52-45-220.retail.telecomitalia.it) (Quit: The_Jag)
[01:06:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[01:07:43] <jinsun> and it wouldn't make too much sense, it could just return the list and be called list comprehension
[01:07:56] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[01:08:42] *** Quits: vassenn (~vassen@178.35.67.135) (Quit: Leaving)
[01:08:58] <yitz> That's preposterous, jinsun
[01:09:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:09:19] *** Joins: Pddy (~patrick@user/SmplyPddy)
[01:09:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:10:00] *** Quits: magla (~gelignite@55d4d852.access.ecotel.net) (Quit: Stay safe!)
[01:10:20] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[01:15:04] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-85.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:15:36] *** ouestbillie is now known as vanDamme
[01:16:01] *** Quits: Helenah (s98259@2001:41d0:800:759::1:129) (Changing host)
[01:16:01] *** Joins: Helenah (s98259@user/helenah)
[01:16:47] *** vanDamme is now known as ouestbillie
[01:17:54] *** Joins: slackcals (~slackcals@user/slackcals)
[01:18:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:20:55] *** Quits: zer0bitz (~zer0bitz@196.244.192.60) (Read error: Connection reset by peer)
[01:21:55] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:21:55] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Remote host closed the connection)
[01:22:08] <bjs> parv: a generator is just a function that gets paused at each "yield" until you ask for the next element. It's not really that they're "lazy" but that they're on-demand.  You ask for the thing and it computes it and gives it to you.
[01:22:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:22:24] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[01:22:35] <bjs> parv: if you use a for loop with a generator,  it's up to you how much you ask for and therefore how "lazy" it is.
[01:24:46] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[01:25:20] <SnoopJ> n.b. the subtle difference between "generator" and "generator iterator", the former is a function that generates the latter
[01:25:52] <SnoopJ> generator expressions also give you a generator iterator
[01:25:54] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[01:26:05] <InPhase> parv: As a test, run this on any computer you have handy with less than a few hundred terabytes of memory:  list(zip(range(5), (x*x for x in range(100000000000000))))
[01:26:06] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:26:06] <bjs> SnoopJ: I think this is unhelpful because Python calls the "generator iterator" a ... generator.
[01:26:26] <SnoopJ> bjs, yea it's not very good terminology, I wish nothing was called "generator" honestly
[01:26:28] <bjs> like if you actually print it out, or ask Python what the type is, it'll say <generator at ...>
[01:27:16] *** Quits: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl489ygdw3xrn7i78.ipv6.telus.net) (Remote host closed the connection)
[01:27:20] *** Joins: cr0n0s (~quassel@181.66.138.170)
[01:27:25] <SnoopJ> correction: generator iterators are exclusively from generator functions, but the point I was making is that the functional form and the expression form both give you an iterator
[01:27:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:28:04] <SnoopJ> I guess the distinction is send() ?
[01:28:13] *** Quits: ubert (~Thunderbi@p200300ecdf0994ce1454eef4b6fa1895.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:28:13] *** ub is now known as ubert
[01:28:59] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[01:29:42] <InPhase> parv: If you want to eat all your available memory and crash Python, you can also try this, which is only advised on OS's that can gracefully handle a program eating all the available memory:  list(zip(range(5), [x*x for x in range(100000000000000)]))  The only difference is swapping out the generator comprehension for the list comprehension.
[01:31:35] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:31:56] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[01:32:34] <parv> InPhase, Too many zeros ;-> in there to count & type it in VM where I cannot copy-paste
[01:32:58] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[01:33:06] <yitz> parv: int(1e10)
[01:33:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5)
[01:33:33] <parv> yitz, Thanks 👍
[01:34:49] <parv> .oO( I expect the interpreter to be killed ... let's see ... )
[01:35:40] *** Joins: thetic (~thetic@174-21-54-220.tukw.qwest.net)
[01:35:46] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[01:37:22] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[01:38:13] *** Joins: oda (~oda@gateway/vpn/pia/oda)
[01:38:50] *** Joins: frmlof (~frmlof@12.50.11.83)
[01:39:41] *** Joins: mossman93 (~quassel@user/mossman93)
[01:42:36] *** Joins: puer-robustus (~alexander@81.6.34.22)
[01:45:34] *** Joins: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com)
[01:45:49] *** Quits: Pddy_ (~SmplyPddy@user/SmplyPddy) (Ping timeout: 240 seconds)
[01:46:03] <natewrench123456> heh cmd is an interpreter because of writing batch files
[01:46:37] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[01:46:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:48:04] *** Joins: earendel (uid498179@user/earendel)
[01:48:17] *** Quits: Nact (~l@host-85-27-122-83.dynamic.voo.be) (Quit: Konversation terminated!)
[01:48:24] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[01:51:43] <parv> That consumed the allocated memory unsurprisingly; could have been killed by OS after consuming swap too eventually -- but taking too long, so I killed the process
[01:52:23] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[01:53:26] *** Quits: raxor2k (~raxor2k@78.158.254.45) (Remote host closed the connection)
[01:53:42] *** Joins: goldfish (~goldfish@user/goldfish)
[01:53:59] <yitz> Disable swap?
[01:54:09] * lericson 128GB RAM
[01:54:34] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:e5a0:a671:8449:d16c)
[01:55:59] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:387d:2db3:fff8:a6ab)
[01:55:59] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[01:56:06] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:f59a:5511:89e5:f851)
[01:56:21] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:58:05] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[01:58:42] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:58:45] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:59:31] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:e5a0:a671:8449:d16c) (Ping timeout: 245 seconds)
[01:59:50] <parv> yitz, some other time
[02:00:07] <parv> lericson, <8GB VM
[02:00:41] *** Quits: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[02:00:42] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[02:01:26] <InPhase> parv: And did you try the generator version I showed first for comparison?
[02:01:27] <SnoopJ> parv, suffice to say, what the OS does when Python tries to allocate some memory is a detail of how your OS is configured
[02:01:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:02:22] <parv> InPhase, Yes, generator finished rather quick compared to not-generator which did not even finish
[02:03:05] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:04:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:04:02] <InPhase> parv: So a nested sequence of generators will evaluate each one on demand all the way through all the for loops, while as soon as something attempts to evaluate the full thing, it runs the full list.  zip provided the termination for the first one, stopping at the end of the shortest iterator input.
[02:04:11] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[02:04:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:05:17] <parv> InPhase, Appreciate the example
[02:05:27] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:06:22] <CrtxReavr> InPhase, 100_000_000_000_000 <== easier to read and valid python int synax.
[02:06:49] *** Quits: cr0n0s (~quassel@181.66.138.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:06:55] <parv> .oO( only if 1e10 could have worked as is ... )
[02:07:20] <SnoopJ> it "works", range() just doesn't accept floats
[02:07:28] <SnoopJ> because it's for integers :)
[02:07:53] <CrtxReavr> That's not as readable to everyone.
[02:07:59] <CrtxReavr> It also creates a float.
[02:08:12] <CrtxReavr> Which may, or may not be an issue.
[02:08:39] <parv> SnoopJ, Ha! I thought that was string->int nt float->int. (Another thing I learned)
[02:08:50] *** Joins: digitalice_ (~digitalic@2800:a4:286c:3f00:29c3:1f67:b8bb:fb6)
[02:09:13] <SnoopJ> parv, the "string" part of that is your source code, so sure
[02:09:49] <SnoopJ> `1e10` will be a float object after compilation
[02:10:13] *** Quits: Helle (~helle@45.83.235.185) (Ping timeout: 240 seconds)
[02:10:19] <CrtxReavr> There's also: 100000000000000 != 1e10
[02:11:31] *** Quits: Brocker (~NoBody@user/brocker) (Read error: Connection reset by peer)
[02:11:37] *** Quits: digitalice (~digitalic@user/digitalice) (Ping timeout: 240 seconds)
[02:11:41] *** Joins: Brocker (~NoBody@user/brocker)
[02:11:52] <TML> you can do int(1e10)
[02:12:27] <parv> yitz had mentioned that earlier
[02:12:40] <TML> ah
[02:12:49] <CrtxReavr> And now we see the appeal of 100_000_000_000_000
[02:12:53] <CrtxReavr> >=]
[02:13:12] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:13:29] <SnoopJ> CrtxReavr, 10**14 is even more succinct
[02:14:30] <deniska> channelling some chaotic energy: 1_000_000_000_000_00
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:17] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[02:15:41] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:04] *** Joins: thorbw (~tw@46.230.130.50)
[02:16:06] <CrtxReavr> Why not 1_0000000_0000000?
[02:16:10] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:16:26] *** Joins: KvL (~KvL@user/KvL)
[02:16:45] *** Parts: rb100 (~jeff@d27-96-151-97.nap.wideopenwest.com) ()
[02:16:55] <ba> deniska: close to the indian system! https://en.wikipedia.org/wiki/Indian_numbering_system
[02:16:56] *** Joins: zebrag (~chris@user/zebrag)
[02:17:08] <parv> Na, 1_00_00_00_00_00_00_00
[02:17:09] <deniska> there might be a legitimate usecase to end a number with a group of two digits, if it's a monetary value in cents
[02:17:30] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[02:17:45] <CrtxReavr> YOu mean Kopeks?
[02:18:21] <CrtxReavr> 4
[02:18:28] <CrtxReavr> whoops
[02:18:31] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:19:48] <CrtxReavr> BTW, parv, 100_000_000_000_000 is 1e14.
[02:19:55] <CrtxReavr> Messing me up. ..
[02:20:13] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[02:20:45] * SnoopJ would argue that listing the exponent in 10**N is a lot better than counting zeroes here
[02:21:11] <SnoopJ> but underscores in literals are very useful, too
[02:21:47] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[02:22:38] *** Quits: thorbw (~tw@46.230.130.50) (Quit: WeeChat 3.3)
[02:22:43] <parv> CrtxReavr, Number of zeros being off by 4 (in "int( ie10 )") did not matter for the example in any case
[02:23:00] <parv> ... and on my system
[02:23:07] <gjvc> i prefer the shortest possible notatino
[02:23:13] <gjvc> notation, too
[02:24:58] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[02:25:01] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:25:02] *** Quits: rakoon_ (~rakoon@2001:985:f4c6:1:4d79:b0:a92a:f6cb) (Ping timeout: 240 seconds)
[02:25:42] *** Joins: thorbw (~tw@46.230.130.50)
[02:26:06] *** Joins: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com)
[02:26:13] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.4)
[02:26:34] *** Joins: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793)
[02:27:19] *** Quits: tricklynch (~tricklync@216-180-94-57.starry-inc.net) (Ping timeout: 256 seconds)
[02:27:25] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 240 seconds)
[02:29:07] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:387d:2db3:fff8:a6ab) (Read error: Network is unreachable)
[02:29:19] *** Joins: tricklynch (~tricklync@c-73-69-209-219.hsd1.ma.comcast.net)
[02:29:21] *** Quits: frmlof (~frmlof@12.50.11.83) (Quit: frmlof)
[02:30:45] <CrtxReavr> notatino: Is that Italian for "no frozen pizza?"
[02:31:17] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:31:20] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:33:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:33:23] *** Quits: puer-robustus (~alexander@81.6.34.22) (Quit: Leaving.)
[02:33:30] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:34:23] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:34:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[02:35:56] *** Joins: funkytwig (~funkyttwi@82.40.234.47)
[02:37:20] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:37:23] *** Parts: sw (~sw@176-58-113-251.ip.linodeusercontent.com) ()
[02:37:56] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[02:38:30] <stewie925> happy new year all
[02:38:44] <stewie925> hey guys, I need help with beautiful soup scraping :  https://bpa.st/TEPQ
[02:40:01] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[02:40:03] <stewie925> specifically, line #20 list comprehension passes while line 23 fails - wondering why
[02:40:11] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:40:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:40:29] *** Quits: tricklynch (~tricklync@c-73-69-209-219.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[02:40:35] <jinsun> what is dis_movies there?
[02:41:28] <stewie925> oh sorry, that should be soup
[02:41:33] <stewie925> soup, not dis_movies
[02:41:39] <stewie925> let me correct it and post it again
[02:41:50] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[02:42:43] <stewie925> https://bpa.st/ZN5A - corrected
[02:43:14] <jinsun> okay, didn't matter too much, the problem is that all moves don't have a link
[02:43:27] <jinsun> so movie.a might be None
[02:43:38] <stewie925> if you look at line 20, it works though
[02:43:39] <jinsun> then you can't do movie.a["href"]
[02:43:53] *** Joins: tricklynch (~tricklync@c-73-69-209-219.hsd1.nh.comcast.net)
[02:44:05] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[02:44:24] <stewie925> I just run the first 10 movies for line 20
[02:44:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[02:44:55] <The-Compiler> stewie925: yeah, and the first 10 movies happen to have a link
[02:45:13] <The-Compiler> stewie925: see e.g. "Song for a Whale" and "World's Best" at https://en.wikipedia.org/wiki/List_of_Walt_Disney_Pictures_films#Undated_films
[02:45:31] <parv> stewie925, You need to verify that every movie has link or you would get the error
[02:45:33] *** Quits: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793) (Quit: Client closed)
[02:45:40] <stewie925> The-Compiler. thanks!  oh geez
[02:46:02] <The-Compiler> stewie925: so e.g. disney_movies[-1] will be <i>World's Best</i> and thus doing .a on it will give you None and .a['href'] fails
[02:46:03] <stewie925> o let me check the length of the links with a tag
[02:46:36] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[02:47:06] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[02:47:57] *** Quits: tricklynch (~tricklync@c-73-69-209-219.hsd1.nh.comcast.net) (Ping timeout: 240 seconds)
[02:48:06] *** Joins: tricklynch (~tricklync@216-180-94-57.starry-inc.net)
[02:49:36] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:50:09] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[02:50:49] *** Joins: a0z1 (~a0z1@89.238.130.72)
[02:51:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:51:51] <TML> stewie925: you could do something like `movie_links = [movie.a['href'] for movie in disney_movies if hasattr(movie, 'a') and movie.a is not None and 'href' in movie.a]`, but it kind of starts feeling like a bad listcomp at some point
[02:52:50] *** Quits: thetic (~thetic@174-21-54-220.tukw.qwest.net) (Ping timeout: 256 seconds)
[02:53:23] <stewie925> hey TML - THANK YOU!
[02:53:24] <funkytwig> Hi, i'me trying to install a flask app on heroku and its asking my to loosten my dependencies.  Not a problem as its just a project ime plying with to learn python but not sure what is the best stratergy...
[02:53:57] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[02:54:00] <stewie925> I actually did this instead to skip those without movie links - ` movie_links = [movie.a['href'] for movie in disney_movies if movie.select_one("a")] `
[02:54:10] <funkytwig> Do I just change == to > and make last didgit of version numbers 0?
[02:54:37] *** Quits: tricklynch (~tricklync@216-180-94-57.starry-inc.net) (Ping timeout: 240 seconds)
[02:55:08] *** Joins: ensyde (~ensyde@2600:1702:2e30:1a40:46f:eb54:3eb6:1199)
[02:55:14] <stewie925> I never realized some movies don't have links.... was struggling for a while (silly me :D)
[02:55:39] <jinsun> funkytwig: try just changing == to >=
[02:55:49] *** Joins: Vonter (~Vonter@user/vonter)
[02:55:51] <funkytwig> stewie925:Yuo bychange doing 100 Days of Code Python
[02:56:09] <funkytwig> stewie925:You bychance doing 100 Days of Code Python
[02:56:30] <stewie925> no, funkytwig
[02:57:14] <stewie925> :)
[02:57:17] <funkytwig> o well, thought  i recognises the snipiit :)
[02:57:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:57:36] <stewie925> list comprehension is fun, funkytwig
[02:57:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[02:58:38] <funkytwig> Sure is, how to I easily include your username at begining of meg, is there a easy way (Hexchat)
[02:58:39] <parv> .oO( An old fashioned for-loop would have been inviting to dump objects to diagnose the issue )
[02:59:20] * stewie925 stares at parv
[02:59:25] <stewie925> LOL
[02:59:28] <funkytwig> <jinsun> To
[02:59:31] <funkytwig> <jinsun> Ta
[02:59:47] <jinsun> funkytwig: ?
[03:00:23] <funkytwig> Thanks for the requierments.tct help
[03:00:29] <funkytwig> txt
[03:00:40] <jinsun> ah, you're welcome :D
[03:03:33] <dob1> with redis py, it is normal that the lua script is compiled at first execution?
[03:05:35] *** Joins: monkeycoder (~monkeycod@202.185.207.63)
[03:06:35] *** Quits: Narrat (~omnius@p200300df5f0aab1406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:06:57] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:06:57] *** Quits: ADHD (~xxx@user/ADHD) (Ping timeout: 240 seconds)
[03:07:11] *** Joins: ADHD (~xxx@bison.sh3ll.ru)
[03:08:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[03:09:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:09:27] *** Parts: ham5urg (~ham5urg@149.233.196.80.dynamic-pppoe.dt.ipv4.wtnet.de) (Leaving)
[03:11:07] <parv> funkytwig, About including an user name in your message: does typing a first few characters of an user name & pressing "tab" key work? (I do not use hexchat)
[03:11:49] <parv> funkytwig, ... may need to press "tab" key multiple times to go through the list
[03:12:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:12:57] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[03:13:09] <deniska> dob1: https://github.com/redis/redis-py/blob/master/redis/lock.py apparently locks work by pushing lua code to redis
[03:13:45] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:15:03] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[03:15:38] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Quit: The Lounge - https://thelounge.chat)
[03:17:34] <dob1> deniska, ah ok, so it's redis that throw the error I have, not the lib
[03:17:53] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[03:19:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:19:40] *** Quits: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[03:19:46] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:22:03] *** Joins: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com)
[03:22:38] *** Joins: Terexen (~terexen@user/terexen)
[03:26:23] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8)
[03:26:56] *** Joins: ustedes (~whaley@2603-6080-a301-33d1-9d40-7422-8e53-b204.res6.spectrum.com)
[03:27:19] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:27:26] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:27:44] *** Quits: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28) (Quit: Konversation terminated!)
[03:27:50] *** Joins: Capricious (~capriciou@121.44.235.202)
[03:28:17] *** Quits: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:29:30] *** Joins: nvz (~user@nvz.farted.online)
[03:30:13] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[03:30:24] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[03:31:13] *** Quits: RoodRallec (~RoodRalle@p200300e0af096a00dd76ef5baea69362.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:31:40] *** Quits: oda (~oda@gateway/vpn/pia/oda) (Remote host closed the connection)
[03:31:51] *** Joins: georgios (~georgios@user/georgios)
[03:33:24] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[03:33:57] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:35:03] *** Parts: Capricious (~capriciou@121.44.235.202) ()
[03:36:32] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[03:36:55] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[03:36:57] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 240 seconds)
[03:37:45] *** Joins: Trieste (T@user/pilgrim)
[03:38:18] *** Joins: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net)
[03:38:26] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[03:38:26] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[03:38:26] *** Joins: hams (~hams@user/hams)
[03:38:42] *** Quits: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net) (Client Quit)
[03:39:06] *** Joins: Guest13822 (~Guest138@88.103.7.38)
[03:40:03] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:40:03] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:40:59] *** Quits: Guest138 (~Guest138@88.103.7.38) (Ping timeout: 256 seconds)
[03:41:10] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[03:42:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:42:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:42:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[03:43:22] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:44:41] *** Quits: guru__ (~guru@S0106ec086bc3574f.mh.shawcable.net) (Quit: Leaving)
[03:45:35] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[03:45:46] *** Quits: ubert (~Thunderbi@p200300ecdf0994ceb42bd33431e7317f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:45:47] *** ub is now known as ubert
[03:46:41] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:51:25] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[03:51:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:51:47] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:51:50] *** Parts: Guest13822 (~Guest138@88.103.7.38) ()
[03:52:21] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[03:53:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:53:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b27c:f7f8:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[03:55:41] *** Joins: Guest138 (~Guest138@88.103.7.38)
[03:58:01] *** Quits: ustedes (~whaley@2603-6080-a301-33d1-9d40-7422-8e53-b204.res6.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[03:58:41] *** Quits: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com) (Ping timeout: 256 seconds)
[03:59:01] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[03:59:42] *** Quits: parv (~quass@user/parv) (Quit: parv)
[03:59:46] *** Joins: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com)
[04:00:00] *** Joins: led_belly (~led_belly@196.240.57.118)
[04:00:21] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:01:02] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:58] *** Quits: Guest138 (~Guest138@88.103.7.38) (Ping timeout: 256 seconds)
[04:02:39] *** Quits: ADHD (~xxx@bison.sh3ll.ru) (Ping timeout: 256 seconds)
[04:02:44] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:f59a:5511:89e5:f851) (Quit: I have gone to sleep. ZZZzzz…)
[04:02:47] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5)
[04:02:53] *** Joins: ADHD (~xxx@bison.sh3ll.ru)
[04:03:09] *** Quits: remline (~remline@user/remline) (Quit: leaving)
[04:04:59] <SnoopJ> HexChat has tab completion, although I think it does alphabetical order and not last-spoke order by default, IIRC
[04:05:37] *** Quits: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:05:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:06:29] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[04:06:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:07:00] *** Joins: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net)
[04:07:25] *** Joins: Vonter (~Vonter@user/vonter)
[04:07:30] *** Joins: esv (~esv@74.124.178.154)
[04:08:01] *** Joins: Wulf (~Wulf@user/wulf)
[04:08:18] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:08:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:10:17] *** Quits: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Client Quit)
[04:11:19] *** Joins: whaley (~whaley@2603-6080-a301-33d1-9d40-7422-8e53-b204.res6.spectrum.com)
[04:11:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:12:14] <funkytwig> SnoopJ, ta, great
[04:13:05] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[04:13:51] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[04:15:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[04:17:06] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[04:17:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:17:22] *** Joins: CombatVet (~c4@user/combatvet)
[04:17:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:18:02] *** Quits: grimvar (~grimvar@i5C75F6AD.versanet.de) (Ping timeout: 240 seconds)
[04:18:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[04:18:21] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[04:19:33] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:19:52] *** Joins: grimvar (~grimvar@i5C75F5F4.versanet.de)
[04:19:57] *** Quits: tristan_ (~tristan@223.33.165.219) (Ping timeout: 240 seconds)
[04:20:04] *** comruminoAlt is now known as comrumino
[04:21:02] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[04:21:19] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[04:21:32] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Remote host closed the connection)
[04:21:47] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[04:21:57] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Remote host closed the connection)
[04:23:00] *** Joins: et_ (~et@user/et)
[04:23:00] *** erica is now known as birb
[04:23:40] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[04:23:46] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[04:23:46] *** et_ is now known as et
[04:24:20] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[04:25:47] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[04:26:06] *** Joins: vaio (~gary@user/ghost)
[04:28:16] *** Joins: alex11 (~alex11@user/alex11)
[04:29:27] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[04:32:33] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 256 seconds)
[04:36:21] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:36:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.3)
[04:36:50] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:36:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:37:38] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:37:57] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Read error: Connection reset by peer)
[04:38:19] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:38:42] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:39:00] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:39:29] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[04:40:02] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:40:52] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:41:40] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[04:41:47] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[04:41:56] *** Joins: lyr (~lyr@user/lyr)
[04:42:32] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:43:03] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:29] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[04:43:50] *** Quits: NoImNotN1neVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[04:44:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:44:29] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[04:44:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[04:44:46] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:45:36] *** Quits: lyr (~lyr@user/lyr) (Client Quit)
[04:46:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[04:46:10] *** Joins: jazzy (~jaziz@user/jaziz)
[04:46:24] *** Joins: lyr (~lyr@user/lyr)
[04:48:03] *** Joins: clarkk (~clarkk@host109-147-146-145.range109-147.btcentralplus.com)
[04:48:31] <yitz> Oh, sweet. Python has a -OO for faster runtimes!
[04:49:43] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:49:53] <SnoopJ> yitz, well, maybe faster :)
[04:50:13] <yitz> Speed is all that matters. asserts are not required.
[04:50:40] <SnoopJ> asserts are not uniformly distributed in source that I usually read
[04:50:52] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:7845:3197:f41c:fdaa)
[04:51:19] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[04:51:24] <yitz> My Advent of Code day 24 has 28 asserts. They're useful for working out the solution but sorta useless once the code works.
[04:51:34] <SnoopJ> mm, yea, they're very useful in that case
[04:52:14] <yitz> They help a *bit* when I start cursing at the computer and asking aloud where I went wrong. I can be slightly more specific about my cursing.
[04:52:43] <SnoopJ> yitz, I didn't do AoC but when working on problems that challenging, I would probably have dedicated tests:)
[04:53:10] <SnoopJ> but that is a bit more effort I suppose
[04:53:55] *** Quits: clarkk (~clarkk@host109-147-146-145.range109-147.btcentralplus.com) (Quit: Leaving)
[04:53:58] <yitz> All my AoC solutions have tests. Almost all of those tests are the simplified examples/solutions given in the prose.
[04:53:58] <SnoopJ> not necessarily appropriate when reaching around to explore a problem space
[04:54:02] *** Quits: towel (~towel@user/towel) (Ping timeout: 240 seconds)
[04:54:09] * SnoopJ nods
[04:54:20] <yitz> But I still sometimes go awry even trying to work out the tests
[04:54:25] *** Joins: towel (~towel@user/towel)
[04:54:39] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:54:58] <yitz> In production code, Matt complains in code reviews when I use `asserts` and makes me write proper `if x: raise Exception` tests
[04:55:20] <yitz> Something about providing more friendly exception messages
[04:55:36] <SnoopJ> hopefully `raise SpecificException("helpful message")` :)
[04:55:48] <cluelessperson> I wrote a helper to do like load_example(__file__, 1)  for AoC
[04:55:48] <yitz> Yeah. Something detailed and use friendly.
[04:56:06] <grym> yitz: and distinct from other kinds of exception
[04:56:11] <cluelessperson> then I do,   assert a == thing(example)
[04:56:18] <SnoopJ> well, the trick is deciphering what "other" means
[04:56:26] <yitz> Most my asserts are "this shouldn't be possible; email the dev" style so I don't know why friendly messages are needed :D
[04:56:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[04:56:48] <grym> messages are nice, ValueErrors when i get a value error is a lot more actionable than assertionerror "what the heck is wrong this time"
[04:56:49] <SnoopJ> the standard exception hierarchy is very handy in general-purpose contexts, but sometimes a subclass makes more sense
[04:57:44] <yitz> cluelessperson: I have a whole AoC library/framework/runner etc. Auto downloading inputs, creating the day.py from template, auto running tests on file write (inotify) and submitting solutions when the test first passes
[04:57:47] <SnoopJ> especially if somebody above you on the call stack wants to catch failure in your layer specifically
[04:58:37] *** Joins: Everything (~Everythin@37.115.210.35)
[04:58:55] <yitz> 'tis all on Github if you want to reuse it all
[04:58:56] <SnoopJ> yitz, I meant for things that aren't AssertionError, sorry. With semantic assertions, they can be whatever they need to be.
[04:59:20] <SnoopJ> ...although I find that the poor schmuck left holding the check when that kind of breakage happens is often *me*, so I try to pay it forward
[04:59:31] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[04:59:37] <yitz> SnoopJ: Yeah. For the user validation/API side, I do plenty of raise ValueError(...) stuff
[05:01:11] *** Joins: urth (~urth@geertswei.nl)
[05:01:18] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[05:01:47] *** Quits: nomic (~nomic@185.217.117.87) (Quit: Leaving)
[05:02:15] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:7845:3197:f41c:fdaa) (Quit: I have gone to sleep. ZZZzzz…)
[05:03:17] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:04:11] *** Joins: thx (~thx@89.45.90.52)
[05:04:50] *** Quits: thx (~thx@89.45.90.52) ()
[05:08:15] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[05:09:17] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:10:06] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:a629:f731:f450:d2ba)
[05:11:17] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:a629:f731:f450:d2ba) (Client Quit)
[05:11:39] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:a629:f731:f450:d2ba)
[05:11:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[05:12:12] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:13:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:14:29] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:15:46] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (Changing host)
[05:15:46] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[05:16:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[05:21:24] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:21:51] *** Quits: gnoirzox (~gnoirzox@178.170.103.136) (Ping timeout: 256 seconds)
[05:22:48] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:25:05] *** Quits: Lvl4Sword (sid483043@hampstead.irccloud.com) ()
[05:25:21] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[05:25:58] <Numerlor> I usually see the -OO and asserts not being used because nobody uses them, which is a bit of a feedback loop. I do like it even if just for the __debug__ var as I often find projects defining an env var or something for that
[05:27:06] <Numerlor> They're definitely less useful to the uer than a specific error, but if someone breaks the interface and an assert does a sanity check somewhere along the line and raises that's their problem
[05:27:15] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[05:27:21] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Excess Flood)
[05:27:40] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[05:28:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:28:47] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[05:29:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:30:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[05:30:12] *** Joins: grooverman (~grooverma@177.102.117.95)
[05:33:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[05:36:11] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[05:37:53] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[05:38:51] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 256 seconds)
[05:41:28] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:42:57] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[05:42:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:43:26] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Excess Flood)
[05:43:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:44:15] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[05:45:05] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5) (Ping timeout: 256 seconds)
[05:45:17] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[05:46:12] *** Joins: esv (~esv@74.124.178.154)
[05:47:21] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[05:47:42] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Client Quit)
[05:48:23] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[05:49:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:49:32] *** Joins: califax- (~califax@user/califx)
[05:50:34] *** Joins: audiobirb (~audio@user/audio)
[05:50:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:50:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:51:30] *** Joins: tristan_ (~tristan@223.62.162.1)
[05:51:57] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[05:52:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:52:19] *** Joins: brabrax (~brabrax@user/brabrax)
[05:53:35] *** Joins: Guest70 (~Guest70@175.101.108.125)
[05:54:12] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:54:13] *** califax- is now known as califax
[05:55:40] *** Joins: matsaman (~matsaman@user/matsaman)
[05:55:41] *** Quits: monkeycoder (~monkeycod@202.185.207.63) (Quit: WeeChat 2.8)
[05:56:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:56:38] *** Parts: Guest70 (~Guest70@175.101.108.125) ()
[05:59:19] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[06:00:22] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:00:47] *** Quits: e-snail (~pete@user/e-snail) (Quit: Gateway shutdown)
[06:01:22] *** Joins: e-snail (~pete@user/e-snail)
[06:03:20] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[06:06:11] *** Joins: qpdb (~qpdb@user/qpdb)
[06:06:11] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[06:06:23] *** Quits: a0z1 (~a0z1@89.238.130.72) (Quit: Leaving)
[06:06:48] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:06:55] *** Joins: aod (~a@190-205-131-163.dyn.dsl.cantv.net)
[06:07:19] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[06:07:25] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[06:08:39] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[06:09:55] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[06:11:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:11:45] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:13:19] *** Joins: lethu (~lethu@user/lethu)
[06:14:34] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:17:24] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[06:18:03] *** Joins: evocatus (~evocatus@62.182.77.224)
[06:18:45] *** Joins: Guest138 (~Guest138@88.103.7.38)
[06:18:49] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:15e3:9bde:3b8e:caa1)
[06:18:56] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[06:19:30] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Ping timeout: 260 seconds)
[06:20:47] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[06:21:55] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[06:22:55] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[06:23:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:25:49] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[06:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:55] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Client limit exceeded: 20000)
[06:35:24] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Read error: Connection reset by peer)
[06:35:25] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:35:37] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Quit: ZNC - http://znc.in)
[06:35:46] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[06:36:05] *** Quits: tristan_ (~tristan@223.62.162.1) (Ping timeout: 256 seconds)
[06:37:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:38:57] *** Quits: ianliu (~ianliu@200-150-188-220.static-user.ajato.com.br) (Ping timeout: 240 seconds)
[06:41:12] *** Quits: funkytwig (~funkyttwi@82.40.234.47) (Read error: Connection reset by peer)
[06:41:28] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[06:41:37] *** Joins: Jookia (~jookia@LuminaSensum/founder/Jookia)
[06:47:21] *** Joins: pagalingling (~aronne@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[06:47:40] *** Quits: e-snail (~pete@user/e-snail) (Quit: Gateway shutdown)
[06:48:10] *** Quits: gressmuli (~iibewegun@114.70.12.205) (Quit: WeeChat 3.3)
[06:48:17] *** Joins: e-snail (~pete@user/e-snail)
[06:48:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[06:49:13] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[06:49:44] *** Parts: pagalingling (~aronne@2a09:5e40:1030:e30:76:6f0c:1e52:f065) ()
[06:50:30] *** lukedashjr is now known as luke-jr
[06:55:17] *** ezzieygu1wuf is now known as ezzieyguywuf
[06:56:37] *** Quits: martingale (~beta@170-83-120-154.customer.nbtos.com.br) (Ping timeout: 240 seconds)
[06:57:47] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[06:58:57] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[06:59:31] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[07:00:46] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:03:35] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:284d:37ed:d557:ead3)
[07:05:44] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:06:42] <aod> hi guys, happy new year.
[07:06:43] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[07:06:59] <aod> how do i take an screenshot to an id window?
[07:07:13] *** Joins: saroy (~Sandipan@43.252.250.96)
[07:07:20] *** Quits: Avaris (~Avaris@avar.is) (Ping timeout: 265 seconds)
[07:07:54] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[07:08:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:08:31] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[07:08:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[07:09:00] *** Quits: sudomann (~sudomann@98.219.211.182) (Quit: Lost terminal)
[07:09:14] *** Joins: tristan_ (~tristan@223.62.212.73)
[07:09:49] *** Joins: vd81 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[07:11:52] *** Joins: Avaris (~Avaris@avar.is)
[07:12:22] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[07:12:23] <rjwiii> aod: in python?
[07:12:53] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[07:13:12] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:13:52] <aod> lol
[07:14:13] *** saroy is now known as bytehackr
[07:14:32] <aod> well
[07:14:34] <aod> yes
[07:15:08] <aod> i did take all window with pillow
[07:15:27] <aod> but what if i have the id
[07:15:30] <aod> ?
[07:16:23] <rjwiii> aod: not sure that's possible ... and it would be specific to the OS ...
[07:16:58] <aod> ok thanks
[07:17:18] *** Quits: aod (~a@190-205-131-163.dyn.dsl.cantv.net) (Quit: leaving)
[07:22:20] *** Joins: martums (~martums@user/martums)
[07:26:34] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[07:27:11] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:27:20] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) ()
[07:27:39] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[07:28:46] *** Joins: adeliktas1 (~adeliktas@i59F5F686.versanet.de)
[07:30:37] *** Quits: adeliktas (~adeliktas@i59F52F7D.versanet.de) (Ping timeout: 256 seconds)
[07:30:37] *** adeliktas1 is now known as adeliktas
[07:31:26] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:31:44] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:35:36] *** Joins: bluedust (~bluedust@61.3.70.192)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:04] *** Joins: bluedust_ (~bluedust@185.248.85.42)
[07:39:05] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:39:21] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[07:39:37] *** Joins: CombatVet (~c4@user/combatvet)
[07:39:41] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[07:41:15] *** Quits: bluedust (~bluedust@61.3.70.192) (Ping timeout: 256 seconds)
[07:42:09] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Client Quit)
[07:42:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:42:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:43:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:46:43] *** Quits: evocatus (~evocatus@62.182.77.224) (Quit: Leaving)
[07:50:36] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[07:51:46] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:284d:37ed:d557:ead3) (Quit: I have gone to sleep. ZZZzzz…)
[07:52:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:54:51] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[07:55:33] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[07:55:56] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:55:59] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 256 seconds)
[07:56:09] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[07:56:10] *** Quits: moog (~moog@107.126.53.180) (Read error: Connection reset by peer)
[08:03:59] *** Quits: apteryx (~maxim@dsl-152-60.b2b2c.ca) (Quit: apteryx)
[08:08:02] *** Joins: parv (~quass@user/parv)
[08:08:13] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[08:09:43] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[08:10:09] *** Quits: sreve (~quassel@p549d7115.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:10:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[08:10:37] *** Joins: sreve (~quassel@p4ff44efb.dip0.t-ipconnect.de)
[08:10:56] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[08:15:21] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:16:28] *** Joins: millido (~millido@84.210.150.128)
[08:18:45] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[08:19:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[08:19:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:20:07] *** lukedashjr is now known as luke-jr
[08:28:07] *** Joins: devish (~devish@205.251.233.176)
[08:28:09] *** Joins: RiFo (~RiFo@user/rifo)
[08:35:15] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b547-ef3f-a0b7-179d.res6.spectrum.com) (Quit: jarthur)
[08:35:17] *** Quits: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi) (Ping timeout: 240 seconds)
[08:38:45] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[08:39:34] *** Joins: audiobirb (~audio@user/audio)
[08:39:50] *** Joins: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c)
[08:41:22] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[08:41:35] <cluelessperson> Does python's SimpleHttpServer support wsgi?
[08:42:06] <cluelessperson> I'm guessing not
[08:44:27] <KirkMcDonald> cluelessperson: wsgiref has a thing.
[08:44:34] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:44:57] <cluelessperson> meh, seems like extra work
[08:47:33] *** Quits: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com) (Ping timeout: 256 seconds)
[08:49:15] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[08:50:26] *** Joins: thorbw (~tw@46.230.130.50)
[08:53:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[08:57:20] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[08:57:27] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[08:58:03] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:00:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[09:00:37] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[09:01:05] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[09:02:25] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[09:03:03] *** Joins: vanessa (~farawayas@103.160.128.7)
[09:04:33] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[09:05:12] *** Joins: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca)
[09:06:06] *** Joins: Vonter (~Vonter@user/vonter)
[09:08:34] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[09:08:38] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[09:09:06] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:12:39] *** Parts: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (WeeChat 3.4)
[09:13:17] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[09:14:15] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:14:18] *** Quits: vd81 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[09:14:28] *** Joins: dvx (~dvx@5.181.92.64)
[09:14:38] *** Joins: zebrag (~chris@user/zebrag)
[09:18:04] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::f)
[09:18:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:20:39] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[09:21:26] *** Joins: summersault (~summersau@179.221.251.36)
[09:23:00] *** Quits: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca) (Quit: WeeChat 3.3)
[09:23:06] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:23:17] *** Joins: bluedust (~bluedust@61.3.70.192)
[09:23:25] *** Joins: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca)
[09:23:46] *** Quits: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca) (Client Quit)
[09:24:57] *** Quits: devish (~devish@205.251.233.176) (Ping timeout: 256 seconds)
[09:26:07] *** Joins: jinsun__ (~quassel@user/jinsun)
[09:26:39] *** Quits: bluedust_ (~bluedust@185.248.85.42) (Ping timeout: 256 seconds)
[09:27:13] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[09:29:57] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:31:03] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[09:34:09] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[09:34:42] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:38:03] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[09:41:12] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[09:44:51] *** Joins: tristan__ (~tristan@223.62.212.73)
[09:44:51] *** Quits: tristan_ (~tristan@223.62.212.73) (Read error: Connection reset by peer)
[09:45:18] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[09:46:13] *** Quits: iob (~iob@2a00:1028:8390:9e8a:5cf8:25c0:aa4e:e57d) (Ping timeout: 240 seconds)
[09:47:44] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[09:50:57] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[09:51:58] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:52:09] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[09:52:41] *** Joins: thetic (~thetic@174-21-54-220.tukw.qwest.net)
[09:56:12] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[09:57:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[10:00:06] *** Joins: rakoon_ (~rakoon@2001:985:f4c6:1:8b4a:e76c:980:2fd3)
[10:00:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5)
[10:02:29] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[10:07:26] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Remote host closed the connection)
[10:07:34] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[10:08:40] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[10:09:05] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[10:09:13] *** Joins: chenxuez_ (~chenxuezh@106.39.157.10)
[10:09:51] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[10:09:51] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Ping timeout: 256 seconds)
[10:11:13] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[10:11:25] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:12:28] *** Joins: SteveR (~SteveR@103.215.168.1)
[10:12:46] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[10:13:17] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[10:13:57] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[10:16:44] *** Joins: djapo (~archangel@user/djapo)
[10:17:17] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::f) (Ping timeout: 240 seconds)
[10:18:35] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[10:20:34] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz)
[10:24:26] *** Joins: jinsun (~quassel@user/jinsun)
[10:24:35] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.230)
[10:24:47] *** Joins: Lazenca (~lazenca@user/lazenca)
[10:25:21] *** Quits: nicode (~nic@2607:f2c0:9452:5000:ef50:8b71:648e:eb43) (Ping timeout: 250 seconds)
[10:25:32] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz) (Quit: Leaving)
[10:25:36] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[10:25:54] *** Quits: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:25:55] *** Quits: tristan__ (~tristan@223.62.212.73) (Remote host closed the connection)
[10:26:20] *** Joins: tristan__ (~tristan@223.62.212.73)
[10:26:42] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz)
[10:27:25] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[10:27:57] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[10:28:59] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.230) (Ping timeout: 256 seconds)
[10:29:01] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:29:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:31:57] *** Quits: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[10:34:05] *** Quits: thetic (~thetic@174-21-54-220.tukw.qwest.net) (Ping timeout: 256 seconds)
[10:34:07] *** Joins: summersault (~summersau@179.221.251.36)
[10:36:02] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[10:39:45] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[10:45:57] *** Joins: mrwick (~mrwick@user/mrwick)
[10:47:08] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[10:48:15] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[10:50:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:50:39] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[10:52:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[10:55:59] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:56:14] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:56:37] *** Joins: gusto (~Augustus@109.255.100.54)
[10:56:50] *** Joins: seednode (~seednode@user/seednode)
[10:58:10] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f)
[10:58:38] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[11:00:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:00:58] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:01:15] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:03:00] *** Quits: Guest138 (~Guest138@88.103.7.38) (Ping timeout: 256 seconds)
[11:03:49] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[11:04:18] <boris[m]> Hello ! I know this is offtopic but is there a way to git push to remote from a certain commit and on ? e.g I would like to push only the latest commit on a fresh repo, without pushing the whole git history
[11:04:23] *** Joins: KvL (~KvL@user/KvL)
[11:04:34] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[11:05:33] *** Joins: ice9 (~ice9@user/ice9)
[11:06:00] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:06:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:07:20] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[11:10:51] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[11:11:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:12:12] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[11:13:56] <whatsupboy> boris[m]: something like rebase? I am not sure but I guess there should be #git
[11:14:28] <boris[m]> thank you whatsupboy will check there too
[11:17:08] *** Quits: carbolymer (~carbolyme@dropacid.net) (Remote host closed the connection)
[11:18:54] *** Joins: someuser (~user@197.54.14.247)
[11:19:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[11:19:58] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[11:20:33] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[11:22:40] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[11:22:46] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:22:55] *** Joins: summersault (~summersau@179.221.251.36)
[11:23:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[11:23:55] *** Quits: bboles (~bboles@64.94.212.195) (Ping timeout: 268 seconds)
[11:24:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:24:40] *** Quits: inomoz (~inomoz@176.59.121.54) (Quit: WeeChat 3.4)
[11:25:01] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:25:57] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[11:26:06] *** Quits: bluedust (~bluedust@61.3.70.192) (Remote host closed the connection)
[11:26:38] *** Joins: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[11:26:41] *** Joins: bluedust (~bluedust@103.148.20.45)
[11:27:54] *** Quits: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Client Quit)
[11:27:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[11:28:07] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Quit: Client limit exceeded: 20000)
[11:28:20] *** Joins: manti7 (~manti7@176.10.104.94)
[11:29:13] *** Joins: palasso (~palasso@user/palasso)
[11:31:50] *** Joins: grooverman (~grooverma@177.102.117.95)
[11:35:23] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[11:35:25] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:38] *** Joins: n0ts (~n0ts@c83-249-164-70.bredband.tele2.se)
[11:35:41] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[11:35:49] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:36:08] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:36:25] *** Quits: tristan__ (~tristan@223.62.212.73) (Ping timeout: 256 seconds)
[11:37:24] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[11:37:43] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[11:38:24] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:39:52] *** Joins: earendel (uid498179@user/earendel)
[11:42:06] *** Joins: rendar (~rendar@user/rendar)
[11:43:28] <taeaad> What is the default behaviour for Pandas.read_csv() when you have column names that are not only duplicated, but have identical values?
[11:43:29] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[11:44:11] <taeaad> It seems like it completely drops those columns, which is the result that I want. But I was expecting it to do columnName,columnName.1 and retain the columns, based on what I read.
[11:45:56] <taeaad> Ah, no, it *does* do columnName,columnName.1.
[11:47:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:49:32] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:51:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[11:53:12] *** Joins: tristan_ (~tristan@223.62.169.89)
[11:53:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:55:09] *** Joins: Duality (~robert@217.119.239.2)
[11:55:12] <Duality> hey all
[11:55:34] <Everything> Excuse me, what should I use for MySQL in Py3? MySQLdb or pymysql?
[11:55:37] <Everything> Hi all! HNY
[11:56:44] <Duality> anyone got experience with pyserial? I am reading from the serial port but the read function doesn't always return data and i can't figure out why
[11:58:09] <Duality> it seems that reading from the port the first time always works but any other time it doesn't always
[11:58:17] *** Joins: chele (~chele@user/chele)
[11:58:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[12:00:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:02] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f) (Quit: pvergain)
[12:01:14] *** Joins: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr)
[12:03:23] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f)
[12:04:38] *** jazzy2 is now known as jazzy
[12:05:05] *** Joins: kosh (~kosh@user/kosh)
[12:05:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:08:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Read error: Connection reset by peer)
[12:08:32] *** Joins: shad (~shad@user/shad)
[12:10:15] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[12:10:54] <Duality> feels like it's not always receiving the data for some reason
[12:11:38] *** Joins: carbolymer (~carbolyme@dropacid.net)
[12:12:29] *** Joins: Guest138 (~Guest138@88.103.7.38)
[12:13:17] *** Quits: n0ts (~n0ts@c83-249-164-70.bredband.tele2.se) (Ping timeout: 240 seconds)
[12:14:26] <parv> *wild guess* Doing the flush() after reading? Something blocking?
[12:14:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:16:22] *** Joins: goldfish (~goldfish@user/goldfish)
[12:18:01] <Duality> not doing a flush
[12:18:05] <Duality> would that help?
[12:18:45] <Duality> thing is another program that is written in C# can communicate with the device at full speed without fail so it's something on the python side of things
[12:18:48] <Duality> :)
[12:19:16] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:19:29] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[12:19:37] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 240 seconds)
[12:21:16] <parv> I do not know. Someone was having issue with sending input on standard input (via subrpocess); things worked for the person after calling .flush()
[12:21:19] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[12:24:30] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-241.dhcp.inet.fi)
[12:24:31] *** dcaro_ooo is now known as dcaro
[12:24:51] *** Quits: p-i- (~Ohmu@180.183.72.66) (Quit: Leaving...)
[12:25:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[12:26:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:26:26] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[12:27:38] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[12:30:00] <Duality> parv: oh yea but what I have isn't stdin or stdout it's serial communication
[12:30:14] <Duality> tried adding a flush but doesn't seem to help
[12:30:32] *** Joins: redgloboli (~redglobol@user/redgloboli)
[12:30:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:30:51] <Duality> reading a single byte at a time it always reads the first byte but never anything after anymore
[12:31:18] *** Joins: ubert1 (~Thunderbi@p200300ecdf0994fb99997fbb5ee8cccd.dip0.t-ipconnect.de)
[12:32:08] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:32:26] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:33:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[12:33:26] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:35:35] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994fb99997fbb5ee8cccd.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:35:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:36:20] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[12:36:30] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[12:37:09] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[12:38:05] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:38:30] *** Joins: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com)
[12:38:54] <Repiphany> You'll probably get more useful help if you post some actual code
[12:39:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:42:42] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:43:11] <gjvc> parv: export PYTHONUNBUFFERED=1 ?
[12:43:41] *** Joins: Klinda (~superleag@user/klinda)
[12:44:23] <parv> gjvc, Sorry, I do not know if that would help
[12:44:29] <gjvc> and are you using binary mode  on the file ?
[12:44:58] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Client Quit)
[12:45:06] <gjvc> oops, sorry that should have been directed at Duality
[12:45:15] <gjvc> Duality: ^^^
[12:45:37] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:45:57] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[12:46:54] *** Joins: stonkey (~stonkey@user/stonkey)
[12:51:21] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:51:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:51:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:53:39] *** Joins: nomic (~nomic@185.217.117.87)
[12:55:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:56:14] <Duality> gjvc: there are no files being used here and PYTHONUNBUFFERED is for when printing to the terminal but I am running a custom protocol over serial so I don't really care about that.
[12:56:29] <Duality> i'll post some code in a minute
[12:57:25] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[12:59:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:02:42] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:02:42] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:02:59] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[13:04:35] <gjvc> ok
[13:05:27] <lxwulf> how to activate pylance autocomplete? i already have this settings in my workspace folder but there is no autocomplete however pylint on the other hand is working --> https://paste.ofcode.org/aVCLg72B3Q9DpyjUmuDfNq
[13:05:36] <gjvc> have you tried PYTHONUNBUFFERED though?  see also https://stackoverflow.com/questions/26984449/delay-from-serial-port-using-python
[13:09:06] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5)
[13:10:20] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[13:11:00] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[13:11:27] *** Joins: swistak (~swistak@185.21.216.141)
[13:14:37] *** Quits: tristan_ (~tristan@223.62.169.89) (Ping timeout: 240 seconds)
[13:14:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:17:25] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[13:18:54] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:19:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:19:38] *** Joins: nicko (~iClass@222.211.30.113)
[13:20:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:16] *** Joins: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il)
[13:24:05] *** Quits: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il) (Ping timeout: 256 seconds)
[13:24:34] *** Quits: smqra (~rooba@208.110.85.44) (Quit: WeeChat 3.5-dev)
[13:24:58] *** Joins: Helle (~helle@45.83.235.185)
[13:25:14] *** Parts: lxwulf (~lxwulf@user/lxwulf) (Leaving)
[13:27:17] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:27:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:28:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:30:33] *** Joins: grundrausch3n (~grundraus@pd9582044.dip0.t-ipconnect.de)
[13:31:13] *** Joins: legola (~legola@46.235.102.73)
[13:31:53] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:32:53] *** Joins: maharshipatel (~maharship@43.250.157.181)
[13:33:11] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:3a3d:dd63:4712:76f8)
[13:34:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:34:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:34:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5) (Ping timeout: 256 seconds)
[13:34:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:35:14] *** Quits: bluedust (~bluedust@103.148.20.45) (Remote host closed the connection)
[13:36:59] *** Joins: jazzy (~jaziz@user/jaziz)
[13:37:20] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:37:33] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[13:40:42] *** PeteH is now known as obvs
[13:41:34] *** Quits: chenxuez_ (~chenxuezh@106.39.157.10) ()
[13:41:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[13:42:13] *** Quits: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com) (Ping timeout: 256 seconds)
[13:42:58] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:43:18] *** Joins: horner (~horner@host86-131-44-95.range86-131.btcentralplus.com)
[13:47:58] *** Quits: maharshipatel (~maharship@43.250.157.181) (Quit: Client closed)
[13:48:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:49:12] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:50:21] *** Joins: xkuru (~xkuru@user/xkuru)
[13:51:03] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[13:51:22] *** Joins: portalrat (~portalrat@user/portalrat)
[13:51:37] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[13:52:52] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[13:52:56] *** Joins: maharshipatel (~maharship@43.250.157.181)
[13:54:01] *** Parts: maharshipatel (~maharship@43.250.157.181) ()
[13:54:59] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 268 seconds)
[13:55:15] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Ping timeout: 256 seconds)
[13:55:19] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[13:57:17] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[13:57:25] <lericson> why are wheels called wheels?
[13:57:46] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:57:59] <supakeen> It's a play on cheese. Cheese wheels.
[13:58:07] <supakeen> Just like PyPi is called the cheese shop.
[13:58:23] <supakeen> Here's the Monty Python sketch: https://www.youtube.com/watch?v=Hz1JWzyvv8A :)
[13:58:57] <lericson> right
[13:59:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:22] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[13:59:54] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:59:56] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0::7e04) (Ping timeout: 268 seconds)
[14:00:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:01:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:01:37] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:01:52] *** Lord_of_Life_ is now known as Lord_of_Life
[14:02:53] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:03:41] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:03:49] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:06:08] *** Joins: martingale (~beta@170-83-120-154.customer.nbtos.com.br)
[14:06:12] *** Joins: bluedust (~bluedust@103.148.20.45)
[14:06:23] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:06:56] *** Quits: bluedust (~bluedust@103.148.20.45) (Remote host closed the connection)
[14:07:13] *** Joins: frost (~frost@user/frost)
[14:07:39] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[14:07:46] *** Joins: vlm (~vlm@user/vlm)
[14:08:46] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[14:09:10] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:10:17] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[14:10:38] <boris[m]> starting out with asyncio. In an application should all functions be awaited even non-blocking ? For example a simple def print_something() : print('test') , should this be decorated with async, left as is, or it does not matter ?
[14:10:38] *** Joins: digitalice__ (~digitalic@2800:a4:2925:9c00:29c3:1f67:b8bb:fb6)
[14:12:23] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:12:49] <supakeen> if you're not awaiting anything the functions should not be marked as async.
[14:13:37] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[14:14:01] *** Joins: d0ku (~d0ku@178.43.48.143.ipv4.supernova.orange.pl)
[14:14:06] *** Quits: digitalice_ (~digitalic@2800:a4:286c:3f00:29c3:1f67:b8bb:fb6) (Ping timeout: 268 seconds)
[14:14:12] *** Quits: nomic (~nomic@185.217.117.87) (Quit: Leaving)
[14:15:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:15:33] <supakeen> or, said in a different way, any function that is defined as sync should have a continuation (e.g. an await) in every path of execution
[14:15:36] <supakeen> is a good rule of thumb
[14:15:43] <supakeen> * defined as async, awkward typo
[14:16:52] *** Joins: ustedes (~whaley@2603-6080-a301-33d1-7d20-8f44-8a65-56bd.res6.spectrum.com)
[14:19:38] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:19:39] *** Quits: whaley (~whaley@2603-6080-a301-33d1-9d40-7422-8e53-b204.res6.spectrum.com) (Ping timeout: 268 seconds)
[14:20:07] *** Joins: bboles (~bboles@64.94.212.195)
[14:20:33] <boris[m]> supakeen: thank you ! however I don't understand when I need async / await . I can understand this for blocking functions like requests. What about non-blocking functions though? For example : https://github.com/borisrunakov/maubot_azuracast/blob/master/azuracast/radio.py#L32 this is going to be replaced with httpx and the get_json_data and all related methods will be awaited. What about update_info() though ? Should I leave this as sync or
[14:20:33] <boris[m]> make it async? In other words the async event loop should be responsible for scheduling all executions of an application or only the blocking parts ?
[14:21:42] <supakeen> Ah, well, there are some operations which are easy to make 'asynchronous', mostly those revolving around any sort of I/O. Functions that are instead dependent on CPU time are not that easy to make asynchronous.
[14:22:39] <supakeen> In this context `update_info` is not a good target for that since you're not doing any I/O in there.
[14:23:12] <boris[m]> so a rule of thumb would be to async blocking parts of an application ?
[14:23:19] <supakeen> I'd also like to point out that you're really only going to get any true benefit out of this asynchronous idiom if you are wanting to perform multiple operations at the same time.
[14:23:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:23:42] <supakeen> The rule of thumb would be to make things where you are waiting for things that are I/O to be asynchronous.
[14:24:09] <supakeen> "blocking" means a specific thing in the asynchronous world.
[14:24:25] <supakeen> If you're referring to "blocking i/o" yes, that's what event loops and such are made to deal with :)
[14:24:34] <boris[m]> Ok , by blocking I am referring to network operations for exmapel
[14:24:39] <boris[m]> example*
[14:25:09] <supakeen> Yea, blocking I/O is what we try to fix with asynchronous I/O so we can do other things while we wait for something.
[14:25:34] <boris[m]> however a cpu intensive methods should also be async right ?
[14:25:51] <supakeen> You won't gain any benefit.
[14:26:20] <boris[m]> makes sense !
[14:27:03] <supakeen> There are of course tricks around this, executing the CPU intensive task in another process and having the communication with that process be asynchronous gives the idea of awaiting cpu intensive tasks.
[14:27:08] <supakeen> But that's complicating things :)
[14:27:37] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[14:27:54] <boris[m]> sure :D
[14:28:01] <boris[m]> thank you very much supakeen
[14:29:04] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[14:30:22] <supakeen> No problem, and don't forget that it isn't some magical thing that immediately speeds up code.
[14:32:28] *** Joins: overrider (~overrider@user/overrider)
[14:32:36] <boris[m]> hehe ok !
[14:33:55] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:33:57] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[14:34:07] *** Joins: cdown (~cdown@188.214.11.14)
[14:34:40] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:39:35] *** Joins: aldcor (~davis@gateway/tor-sasl/aldcor)
[14:39:58] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[14:40:04] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[14:42:03] <aldcor> hi! I'm going through beginner course and copied exact lines as in example but here's is an error I get.
[14:42:13] *** Joins: han-`8 (~han`@li987-55.members.linode.com)
[14:42:15] <aldcor> https://0x0.st/ozNc.txt
[14:42:59] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Quit: Leaving)
[14:43:13] *** Quits: han-` (~han`@user/han-/x-0887595) (Read error: Connection reset by peer)
[14:43:21] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[14:43:33] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:44:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:44:17] *** Joins: weedmic (~weedmic@5.102.235.240)
[14:44:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:44:28] <energizer> aldcor: which python version is that?
[14:44:42] *** Joins: mickey8 (~user@user/mickey)
[14:45:10] <energizer> aldcor: /home/davis/PycharmProjects/pythonProject/venv/bin/python --version
[14:45:26] <aldcor> must be 3
[14:45:45] <energizer> run that command and report what it says
[14:45:45] <aldcor> oh Python 2.7.18.4
[14:45:46] <bjs> aldcor: well,  the error is because it's 2
[14:45:57] <bjs> aldcor: use Python 3 :)
[14:46:33] <energizer> since when do python versions have four components
[14:46:48] *** Joins: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it)
[14:47:14] <aldcor> so, pycharm is 2.7 but on my system I installed 3
[14:47:25] *** Joins: Vonter (~Vonter@user/vonter)
[14:47:29] *** Joins: nomic (~nomic@185.217.117.87)
[14:47:46] <bjs> aldcor: it looks like you're using a venv in PyCharm,  you can probably tell PyCharm to make a Python 3 venv instead
[14:51:22] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[14:55:49] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[14:57:10] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:58:14] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[14:59:02] <aldcor> bjs: I did this -> python3 -m venv ~/PycharmProjects/pythonProject but it didn't fix
[14:59:28] <bjs> aldcor: see https://www.jetbrains.com/help/pycharm/configuring-python-interpreter.html
[14:59:43] <bjs> you want to do some configuration inside PyCharm to tell PyCharm to use a Python 3 interpreter
[14:59:53] <aldcor> i see
[15:00:35] <bjs> aldcor: Probably you want to do something like "Add an interpreter" and make a virutalenv that uses a Python 3 interpreter as the base
[15:00:37] *** Quits: vanessa (~farawayas@103.160.128.7) (Ping timeout: 240 seconds)
[15:01:57] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Ping timeout: 240 seconds)
[15:02:43] <aldcor> fixed it, thanks bjs
[15:03:15] *** Quits: nomic (~nomic@185.217.117.87) (Ping timeout: 256 seconds)
[15:04:39] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[15:05:01] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[15:05:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:06:15] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[15:08:50] *** Joins: nomic (~nomic@185.198.243.165)
[15:09:08] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[15:10:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:10:28] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:10:40] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:11:02] *** Joins: sgn_ (~sgn@user/sgn)
[15:11:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:11:45] *** Quits: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:11:46] <ThothCastel> https://www.youtube.com/watch?v=QoM0c29HkEc
[15:11:53] <ThothCastel> trying this script
[15:12:17] <ThothCastel> https://www.irccloud.com/pastebin/pLCGSZlc/
[15:12:39] <ThothCastel> I am getting      import networkscan  -   ModuleNotFoundError: No module named 'networkscan'
[15:13:01] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[15:13:06] *** cdown_ is now known as cdown
[15:13:12] <ThothCastel> the pip install networkscan and pip install python-netbox have both gone through fine
[15:13:22] <bjs> ThothCastel: do you have multiple versions of Python installed?
[15:13:30] <bjs> possibly you `pip` installed for one, but are running the script with another
[15:13:32] <ThothCastel> single one
[15:13:33] <ThothCastel> 3.10
[15:13:41] <ThothCastel> just installed it on windows 10 pro
[15:13:42] <bjs> ThothCastel: what does pip --version  output?
[15:13:48] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:13:49] <bjs> ThothCastel: and how are you running the script?
[15:13:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:14:15] <ThothCastel> pip 21.3.1 from C:\Users\user1\AppData\Local\Programs\Python\Python310\lib\site-packages\pip (python 3.10)
[15:14:27] <ThothCastel> bjs i am using pycharm
[15:14:55] *** Joins: LuKaRo (~LuKaRo@p4fc32532.dip0.t-ipconnect.de)
[15:15:04] <ThothCastel> community edition
[15:15:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:15:24] <bjs> ThothCastel: pycharm can be setup in many different ways,  is PyCharm actually using the version of Python your pip is?
[15:16:22] <bjs> You might be able to install the networkscan and python-netbox libraries from within PyCharm, see https://www.jetbrains.com/help/pycharm/configuring-python-interpreter.html
[15:16:30] <ThothCastel> yes i only have the default and single python
[15:16:38] *** Joins: shad (~shad@user/shad)
[15:16:45] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[15:17:07] <bjs> ThothCastel: I strongly believe that PyCharm is using a different installation of Python (probably a virtualenv it or you created when you started the project).
[15:17:43] <nedbat> ThothCastel: put this at the top of your program, what does it print?  import sys; print(sys.executable); print(sys.path)
[15:17:58] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:18:11] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[15:18:57] <ThothCastel> yes I think i am running a virtual environment
[15:19:26] <ThothCastel> nedbat: yep it prints
[15:20:35] <Yhg1s> ThothCastel: if you're using a virtualenv, make sure you run both pip and your program with the same one. (virtualenvs count as different Python installations)
[15:20:46] <nedbat> ThothCastel: i was hoping to see what it prints, but it doesn't matter if it confirms you are in a virtualenv.  You should either use pycharm to install thepackage, or run the program from the command line
[15:21:01] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e9c6:8220:ff1c:841a)
[15:21:10] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Read error: Connection reset by peer)
[15:21:40] <ThothCastel> nedbat: it prints this
[15:21:49] *** Quits: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[15:22:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:22:06] <Yhg1s> ThothCastel: you know you're not showing us anything, right?
[15:22:29] <ThothCastel> https://www.irccloud.com/pastebin/GENoKzV1/
[15:23:06] <Yhg1s> ThothCastel: install the dependencies using "C:\Users\user1\PycharmProjects\netbox-network-scan\venv\Scripts\python.exe -m pip"
[15:23:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:23:29] <Yhg1s> (or, from inside PyCharm, if it offers that.)
[15:24:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:24:32] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5) (Ping timeout: 240 seconds)
[15:24:53] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:25:05] <ThothCastel> Yhg1s: The system cannot find the path specified.
[15:25:37] <Yhg1s> ThothCastel: when you do what?
[15:25:53] <ThothCastel> how can i install modules inside of a venv in pycharm?
[15:25:58] <ThothCastel> Yhg1s: yes
[15:26:05] <Yhg1s> ThothCastel: that was not a yes/no question.
[15:26:08] <ThothCastel> I am running your command on a Admin CMD promt
[15:26:11] <ThothCastel> prompt4
[15:26:12] <Yhg1s> ThothCastel: show us what you're running and the output you get.
[15:26:13] *** Quits: d0ku (~d0ku@178.43.48.143.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[15:26:13] <bjs> ThothCastel: did you see the link I gave? it explains how to manage the Python virtualenvs and how to install packages from inside PyCharm
[15:26:20] *** babilen_ is now known as babilen
[15:26:29] <bjs> you can also run the command Yhg1s gave, it should let you install things from the command-line.
[15:26:50] <ThothCastel> https://usercontent.irccloud-cdn.com/file/imQnGgFF/image.png
[15:26:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[15:27:26] <ThothCastel> I run it as Adminstrator
[15:27:26] <Yhg1s> ThothCastel: are you not actually 'user1'?
[15:27:32] <Yhg1s> Don't run it as administrator.
[15:27:38] <Yhg1s> ThothCastel: is your username 'user1'?
[15:27:40] <ThothCastel> ah sorry!
[15:27:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[15:27:49] <ThothCastel> no I have my full name in there
[15:27:53] <ThothCastel> let me try again
[15:27:57] *** Joins: ravan_ (~ravan@user/ravan)
[15:27:59] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[15:28:19] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:28:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:28:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:29:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:29:25] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:29:27] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.145)
[15:30:21] *** Joins: ano (~ano@user/ano)
[15:30:39] <ThothCastel> ok thanks guys
[15:30:58] <ThothCastel> installation of those two modules inside of venv as advised went through
[15:31:15] <ThothCastel> do I need to restart the environent?
[15:31:20] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[15:31:28] <ThothCastel> my script is still not recognizing the import netscan
[15:31:32] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[15:31:41] <ThothCastel> ok that worked
[15:31:43] <ThothCastel> thanks guys
[15:31:52] <ThothCastel> but my script is still not going past line 1
[15:32:13] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[15:32:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[15:32:25] *** Joins: grooverman (~grooverma@177.102.117.95)
[15:33:16] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[15:33:22] <ThothCastel> actually it seems to be going past line 1
[15:33:35] <ThothCastel> but it says NameError: name 'Netbox' is not defined. Did you mean: 'NetBox'?
[15:33:47] <bjs> ThothCastel: well, did you?
[15:34:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:34:28] <ThothCastel> lol
[15:34:31] <ThothCastel> i see
[15:34:34] <ThothCastel> yes i did
[15:34:42] <bjs> ThothCastel: helpful error message :)
[15:34:44] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[15:34:50] <ThothCastel> I have gone past it now on line 9 it seems I have it right
[15:34:57] <ThothCastel> NameError: name 'myscan' is not defined. Did you mean: 'my_scan'?
[15:35:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:26] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[15:35:32] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[15:35:34] *** Joins: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:11] *** Joins: zeden (~zeden@user/zeden)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:47] <ThothCastel> https://usercontent.irccloud-cdn.com/file/CLo9Voa1/image.png
[15:37:21] <bjs> ThothCastel: I guess same question, did you?
[15:37:23] <ThothCastel> ah
[15:37:24] <ThothCastel> nevermind!
[15:37:30] <ThothCastel> sorry been away from coding for a long time
[15:37:36] <ThothCastel> thank you guys
[15:37:43] <ThothCastel> i found it lol
[15:37:47] <ThothCastel> getting back to coding
[15:38:21] <ThothCastel> from my script, would it be possible to get also the hostname of the hosts discovered?
[15:39:03] *** Quits: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46) (Remote host closed the connection)
[15:40:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:40:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:41:36] *** Joins: mspe (~user@tilde.team/user/mspe)
[15:42:13] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:42:15] *** Joins: OCode (~OCode@user/Ocode)
[15:43:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:43:59] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:45:22] *** Joins: oda (~oda@gateway/vpn/pia/oda)
[15:45:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:46:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:51:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:51:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:52:04] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[15:54:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:54:29] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:54:32] *** Quits: oda (~oda@gateway/vpn/pia/oda) (Remote host closed the connection)
[15:54:52] *** _vanessa_ is now known as vanessa
[15:55:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:56:24] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:57:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:57:21] *** Joins: tsujp84 (~tsujp@sourcehut/user/tsujp)
[15:57:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:58:53] <ThothCastel> oh man there must be some sort of arp command in this module with python
[15:59:07] <ThothCastel> really need these hundreds of servers hostname with their IP addresses
[15:59:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:59:15] <ThothCastel> IP addresses are coming through fine
[16:00:45] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[16:01:11] *** Joins: EgonX_ (~EgonX@2001:558:6022:6d:6971:a5f0:543e:eb4d)
[16:01:11] *** Joins: sgn (~sgn@user/sgn)
[16:01:57] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:15e3:9bde:3b8e:caa1) (Ping timeout: 240 seconds)
[16:02:41] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[16:02:53] *** Joins: sgn (~sgn@user/sgn)
[16:03:57] *** Quits: ensyde (~ensyde@2600:1702:2e30:1a40:46f:eb54:3eb6:1199) (Ping timeout: 240 seconds)
[16:04:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:04:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:04:50] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:05:25] *** Joins: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il)
[16:06:33] *** Joins: ATAD (~ATAD@user/atad)
[16:06:40] *** Quits: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il) (Read error: Connection reset by peer)
[16:06:58] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:07:19] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f5:37d:9ac:c716:7577:64d4)
[16:07:37] *** Joins: bluedust (~bluedust@103.148.20.45)
[16:07:40] *** Joins: Naan (~Naan@user/naan)
[16:08:48] *** Joins: badsektor (~badsektor@user/badsektor)
[16:08:48] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[16:10:40] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[16:11:37] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:11:55] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:12:23] *** Quits: bluedust (~bluedust@103.148.20.45) (Ping timeout: 256 seconds)
[16:12:26] *** Joins: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il)
[16:12:44] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:12:50] *** Joins: Vonter (~Vonter@user/vonter)
[16:13:31] *** Quits: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il) (Ping timeout: 256 seconds)
[16:14:09] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[16:14:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:15:06] *** Joins: thevishy (~Nishant@2405:201:f005:c007:3c5f:229d:dc3f:da32)
[16:15:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:15:43] <NeilRG> Why does functools.partial do its initialization in __new__ instead of __init__?
[16:15:49] <NeilRG> https://github.com/python/cpython/blob/main/Lib/functools.py#L283
[16:16:01] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:16:44] *** CuriousErnestBro is now known as cactus
[16:18:36] *** cactus is now known as CuriousErnestBro
[16:18:54] <Yhg1s> NeilRG: probably to emulate the C type that's normally used. (See https://github.com/python/cpython/blob/main/Lib/functools.py#L342)
[16:19:11] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[16:19:32] <NeilRG> Yhg1s: Thank you.  So was there a reason the C type couldn't do the initialization in __init__?
[16:20:51] <Yhg1s> NeilRG: it's the normal way to do it in C, really. It's why we have __new__. Also, it's pretty much necessary for immutable types.
[16:21:25] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[16:22:17] <NeilRG> Yhg1s: right, but partial isn't immutable, right?
[16:22:26] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:22:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[16:23:07] *** Joins: tristan_ (~tristan@223.62.175.52)
[16:23:27] <Yhg1s> NeilRG: it pretty much is. You can set attributes of it, but you can't change the things set at construction.
[16:23:54] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[16:24:11] <NeilRG> Yhg1s: I see, I didn't realize that
[16:24:13] <NeilRG> thanks
[16:24:15] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.224)
[16:24:17] *** Quits: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[16:24:24] <NeilRG> I've added this PR https://github.com/python/mypy/pull/11898
[16:24:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[16:25:19] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[16:25:24] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[16:25:33] <jinsun> shouldn't the PR be in https://github.com/python/typeshed
[16:25:49] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:26:12] <NeilRG> jinsun: oh!  I didn't realize.  Thanks, I'll move it over.
[16:26:16] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:26:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:26:48] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:27:25] *** Joins: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr)
[16:27:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[16:28:35] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126)
[16:28:35] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126) (Changing host)
[16:28:35] *** Joins: skapata (~Skapata@user/skapata)
[16:28:58] <wyre> hi guys, what should I specify that functions returns https://bpa.st/JSKQ if I would like to use annotations?
[16:29:23] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.224) (Ping timeout: 256 seconds)
[16:30:28] *** Joins: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it)
[16:31:00] <jinsun> subprocess.CompletedProcess[str]
[16:31:38] <jinsun> cmd should be list[str] too, instead of just list to be more precise
[16:32:13] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 256 seconds)
[16:32:33] *** dcaro is now known as dcaro_lunch
[16:33:41] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[16:33:51] *** Joins: ice9 (~ice9@user/ice9)
[16:34:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:34:43] *** Joins: Atque (~Atque@user/atque)
[16:35:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:35:16] <wyre> jinsun, list[str] or list(str)?
[16:35:36] <jinsun> list[str]
[16:35:59] <wyre> jinsun, is not that a weird syntax?
[16:36:13] <wyre> I mean, ... to use [] instead ()
[16:36:22] <Yhg1s> wyre: do you know what type annotations are?
[16:37:28] <wyre> Yhg1s, well, more or less I was checking this https://docs.python.org/3/library/typing.html
[16:37:41] <jinsun> wyre: list() makes a list at  runtime from its argument, passing str to it will fail at runtime, and it is not a valid annotation
[16:37:48] <wyre> ups, sorry this one, I meant https://www.python.org/dev/peps/pep-0483/
[16:38:27] <wyre> so there is a specific syntax for annotations, right?
[16:38:32] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[16:38:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-241.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:38:47] <jinsun> wyre: see https://docs.python.org/3/library/typing.html#typing.Generic, generics use []
[16:39:43] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[16:39:43] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[16:40:48] <jinsun> wyre: also read https://www.python.org/dev/peps/pep-0484 for all the type hinting syntax
[16:40:53] *** Joins: shad (~shad@user/shad)
[16:40:57] *** Joins: grooverman (~grooverma@177.102.117.95)
[16:42:03] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:43:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: -now)
[16:43:47] <wyre> jinsun, why is this info split in two PEPs?
[16:43:53] <wyre> I mean, ... in two different
[16:44:31] <Yhg1s> It's different info in different PEPs. Much more than 2, too.
[16:45:13] *** Quits: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) (Quit: Connection closed)
[16:46:56] *** Joins: funkytwig (~funkyttwi@2a07:23c0:0:5000::183f)
[16:46:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-241.dhcp.inet.fi)
[16:48:00] <jinsun> too much info for one PEP, you don't actually need to read it all, just search for the part you care about, the typing docs link to all relevant PEPs https://docs.python.org/3/library/typing.html#relevant-peps
[16:48:13] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[16:49:22] *** Joins: jim (~jim@about/linux/staff/jim)
[16:50:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:51:31] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b)
[16:51:55] <wyre> jinsun, https://bpa.st/Z7EQ
[16:52:39] <wyre> apparently I'd say that last [str] is not properly placed there (in the annotation, I mean)
[16:53:14] <Yhg1s> wyre: no, what's going on is that your Python is too old to use that syntax.
[16:53:18] <jinsun> wyre: which python version? it works only in 3.9+, before that you'd have have to use typing.List for list and quote the CompleteedProcess thing
[16:53:37] <wyre> 3.7.3
[16:54:27] <jinsun> yeah so not 3.9+, you'll have to do it the old ugly way
[16:54:55] *** Joins: aniketgm (~Aniket@49.36.107.163)
[16:55:00] <wyre> jinsun, so I have to import also explicitly typing module?
[16:55:03] <jinsun> or do `from __future__ import annotations` at the top of your file
[16:55:34] <jinsun> wyre: if you don't use the future import then yes, otherwsie you can avoid it here
[16:57:01] <funkytwig> Ive been using PyCharm community edition but noticed the pro versions supports flask (and other things) better.  Was wondering if maybe I should switch to visual Source Code IDE.
[16:57:31] *** Joins: Guest31 (~Guest31@pool-96-253-74-73.rcmdva.fios.verizon.net)
[16:57:34] <funkytwig> Would this be better than continuing to use the Free PyCharn in the long run?
[16:57:38] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:58:51] *** Quits: martingale (~beta@170-83-120-154.customer.nbtos.com.br) (Ping timeout: 256 seconds)
[16:58:53] <Guest31> Hi I am wondering how to convert the date into UTC? https://dpaste.org/qKwR
[16:59:00] <wyre> jinsun, wow, I didn't know about __future__ how is this handled internally?
[16:59:26] *** Quits: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il) (Remote host closed the connection)
[16:59:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:59:56] *** Joins: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il)
[17:01:01] *** Quits: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il) (Read error: Connection reset by peer)
[17:01:46] *** Joins: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il)
[17:01:57] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[17:02:17] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[17:03:01] *** Joins: zaquest (~notzaques@5.130.79.72)
[17:03:19] <jinsun> wyre: it works like a compiler switch, see https://docs.python.org/3/library/__future__.html and https://docs.python.org/3/reference/simple_stmts.html#future
[17:03:30] <Helle> *grmbl* I hate it when the pattern of code pushes itself towards an async __init__, because well, asyncinit does exist, it is also a horrible hack, so eeeh, mmmm
[17:04:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[17:04:26] *** Quits: jay-m1262 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[17:04:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:04:40] *** Joins: RiFo (~RiFo@user/rifo)
[17:04:47] <Helle> guess I am just using a factory method so I don't depend on asyncinit
[17:05:01] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[17:05:05] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[17:05:29] *** Joins: ihopeyourot (~ihopeyour@31.142.224.22)
[17:05:33] <jinsun> wyre: if you were askingn specifically about the annotations thing, then all annotations are stored as strings instead of getting evalutated, when you use that future import
[17:06:21] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0::7e04)
[17:07:01] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0::cf1c) (Quit: Leaving)
[17:07:39] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[17:08:33] <jinsun> wyre: see https://www.python.org/dev/peps/pep-0563/ for details of that future import (it will probably not be enabled in the future though)
[17:09:18] <Helle> jinsun: ooof, back and forthing on that has kept me from using that feature so far
[17:10:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:12:24] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[17:13:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[17:14:09] *** Quits: aniketgm (~Aniket@49.36.107.163) (Quit: leaving)
[17:14:27] *** Joins: aniketgm (~Aniket@49.36.107.163)
[17:14:52] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[17:16:00] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:16:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:18:15] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:18:27] *** Joins: marcello42 (~mp@2001:1a81:12a9:b900:4ccd:c26d:723b:afc2)
[17:18:57] *** Joins: kts (~kts@103.73.237.210)
[17:19:24] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[17:19:40] <VaniaPy> i have 4 different APIs and i need to call them in parallel to check some of their values (the json response has the same structure in all of them). Which library shall i use?
[17:20:13] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Ping timeout: 240 seconds)
[17:20:13] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Ping timeout: 240 seconds)
[17:20:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[17:20:37] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: mspe (~user@tilde.team/user/mspe) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: Vipulk (~vipulk@user/vipulk) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Ping timeout: 240 seconds)
[17:21:09] *** Joins: kts_ (~kts@103.73.237.175)
[17:21:15] *** Quits: kts_ (~kts@103.73.237.175) (Client Quit)
[17:21:26] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:22:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:22:39] *** Joins: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de)
[17:22:54] *** Joins: mspe (~user@tilde.team/user/mspe)
[17:23:06] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:23:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:23:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:23:47] *** Quits: kts (~kts@103.73.237.210) (Ping timeout: 256 seconds)
[17:24:18] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[17:25:00] *** Joins: cebor (~cebor@user/cebor)
[17:25:54] *** Joins: Vonter (~Vonter@user/vonter)
[17:26:29] *** Joins: badsektor (~badsektor@user/badsektor)
[17:26:53] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:26:58] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:27:01] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:29:01] *** Quits: trace987 (~trace@ip5b4296d8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[17:29:35] *** Joins: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs)
[17:29:41] *** ravan_ is now known as ravan
[17:29:51] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[17:30:15] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8)
[17:31:58] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:31:58] *** Joins: nicode (~nic@69-165-153-180.dsl.teksavvy.com)
[17:32:23] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[17:32:35] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:32:37] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[17:33:01] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:33:47] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[17:33:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:34:13] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[17:34:16] *** Quits: dupondje (~dupondje@artemis.dupie.be) (Quit: dupondje)
[17:34:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:35:12] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[17:35:20] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[17:35:49] *** Quits: marcello42 (~mp@2001:1a81:12a9:b900:4ccd:c26d:723b:afc2) (Ping timeout: 240 seconds)
[17:37:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:37:49] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[17:38:31] *** Quits: yotsuba-chan (~yotsuba@89-138-112-52.bb.netvision.net.il) (Ping timeout: 256 seconds)
[17:39:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:39:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[17:39:05] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[17:39:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:39:14] *** dcaro_lunch is now known as dcaro
[17:39:15] *** Joins: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il)
[17:39:20] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[17:39:47] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[17:39:56] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[17:39:57] *** Joins: p-i- (~Ohmu@mx-ll-180.183.72-66.dynamic.3bb.co.th)
[17:40:20] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:41:38] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[17:42:05] *** Joins: Vipulk (~vipulk@user/vipulk)
[17:42:56] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[17:42:58] *** Joins: esther (~esther@2607:fb90:20d7:1eed:c4d5:3af1:61b8:145d)
[17:44:19] *** Quits: p-i- (~Ohmu@mx-ll-180.183.72-66.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[17:44:24] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[17:45:19] *** Quits: sleeping1 (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[17:45:33] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:45:35] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d5f:588f:7873:144a)
[17:46:08] *** Joins: Sadale (~Sadale@user/sadale)
[17:46:57] *** Quits: esther (~esther@2607:fb90:20d7:1eed:c4d5:3af1:61b8:145d) (Ping timeout: 240 seconds)
[17:47:09] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e9c6:8220:ff1c:841a) (Ping timeout: 250 seconds)
[17:47:09] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[17:47:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:48:41] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:50:00] *** Joins: blcyber (~blcyber@216.74.235.178)
[17:50:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:50:14] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9d7b:9dc9:6c46:c2cd) (Quit: Leaving)
[17:50:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:50:33] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:51:29] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[17:52:07] <Roey> -.,¸¸.-·°'`'°·-.,¸¸.-·°'`'°· \_O<   PYTHON NOiSES HISS HISSSSSS
[17:52:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:52:25] *** Joins: jazzy (~jaziz@user/jaziz)
[17:52:44] *** Joins: cxv (~cxv@123.201.194.57)
[17:53:48] *** Parts: cxv (~cxv@123.201.194.57) ()
[17:53:48] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[17:54:12] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:54:49] *** Joins: Sadale (~Sadale@user/sadale)
[17:54:59] *** Quits: EgonX_ (~EgonX@2001:558:6022:6d:6971:a5f0:543e:eb4d) (Quit: Textual IRC Client: www.textualapp.com)
[17:55:19] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:68dc:b85b:435e:78ae)
[17:55:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:55:44] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:56:24] <The-Compiler> Roey: wrong Python ;)
[17:57:13] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[17:57:42] <Roey> :)
[17:58:01] <Roey> The-Compiler: was trying to see who would type .bang or .bef[riend]
[17:58:12] <Roey> The-Compiler: in knee-jerk reactio
[17:58:14] <Roey> *reaction
[17:58:48] *** Joins: sleeping1 (~sleepingf@pool-98-111-201-185.pitbpa.ftas.verizon.net)
[18:00:02] <wyre> jinsun, I hadn't problems to use `-> list:` instead typing.List (despite I'm using python 3.7)
[18:01:27] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:02:32] <vanessa> what does *[list] mean in Python?
[18:02:44] *** Joins: unyu (~pyon@user/pyon)
[18:03:07] *** Joins: kts (~kts@103.73.237.175)
[18:03:35] <grym> vanessa: that's 'unpacking'
[18:03:45] <grym> the * expands the list to its constitutent elements
[18:03:53] *** Joins: whatif (~user@114.250.138.116)
[18:04:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:04:10] <grym> so you can do `a,b,c = *[1,2,3]` and then a==1, b==2, c==3
[18:04:31] *** Joins: kmh (~kmh@2a00:6020:5004:6800:a21f:ef4a:1372:da5b)
[18:04:38] <vanessa> grym, so * converts a list into a tuple?
[18:04:40] <grym> no
[18:05:14] <kmh> list() or Tuple() should do such conversions
[18:05:19] <Yhg1s> grym: `a,b,c = *[1,2,3]` doesn't actually work.
[18:05:26] <kmh> -T+t
[18:05:41] <Yhg1s> vanessa: what context are you seeing it in?
[18:06:06] <whatif> I want to post a form data to a website, but the requests library can't handle netsted data, how should I do? like data = "{'a':['b','c'], 'd':{'e':'f'}}"
[18:06:08] <vanessa> Yhg1s, it is put inside a function called zip
[18:06:08] <grym> maybe i need more coffee
[18:06:18] <grym> because yes of course that doesn't work, sigh
[18:06:20] <Yhg1s> vanessa: where? It does different things depending on where it is.
[18:06:24] <jinsun_> <wyre> "jinsun, I hadn't problems to use..." <- yes, the problem is only if you try to subscript it with the type, like list[str]
[18:06:26] <phy1729> whatif: you probably want json=...
[18:06:46] <whatif> phy1729: use json=... can post form data?
[18:07:08] <wyre> jinsun_, oh, I see ... so that syntax is actually called 'subscript', right?
[18:07:28] <whatif> phy1729: do I need set the post request header to application/json?
[18:07:29] <jinsun_> wyre: try to avoid just writing list, because all items inside the list are treated as Any in that case and type checking is disabled for any lines involving those items, if you run mypy with --strict flag it will not allow just writing list as annotation
[18:07:42] <wyre> grym, what's the proper expression then?
[18:07:53] <phy1729> whatif: what does the API expect? A lot of them are JSON espically for nested data
[18:07:59] *** Quits: luva (~luva@146.70.62.244) (Ping timeout: 256 seconds)
[18:08:02] <whatif> phy1729: the website header is multiple-form-data
[18:08:05] <vanessa> Yhg1s, https://pytorch.org/tutorials/beginner/nn_tutorial.html
[18:08:28] <phy1729> In that case you have to figure out how the website wants to serialize things; sorry
[18:08:34] <wyre> jinsun_, sure, so is better to specify the type of elements inside the list, right?
[18:08:44] <grym> wyre: `a,b,c = [1,2,3]`
[18:08:46] *** Quits: aniketgm (~Aniket@49.36.107.163) (Quit: leaving)
[18:08:57] *** Joins: luva (~luva@146.70.62.246)
[18:08:57] <vanessa> if you go down about 70% of the page, you will see the definition of the function fit() where it is defined, Yhg1s
[18:09:02] <wyre> grym, but the starred expression
[18:09:03] *** Joins: aniketgm (~Aniket@49.36.107.163)
[18:09:41] <SnoopJ> wyre, ...is invalid syntax
[18:10:10] <wyre> SnoopJ, sure, but I'd like to see some example like this where starred expression is used to expand a list 🤔
[18:10:16] <Yhg1s> vanessa: it's unpacking a sequence into arguments to zip(). See https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
[18:10:21] <SnoopJ> wyre, `some_func(*some_iterable)`
[18:10:29] <jinsun_> wyre: yes, set Any explicitly if you really wanted Any, and yeah it is called subscript (the error message says so "type object is not subscriptable")
[18:10:47] <whatif> phy1729: there's a weird thing, I put data = "{'a':['b','c'], 'd':{'e':'f'}}" in IDEA, it show an error about ['], but I put that string into a file and read it to data= f.read(), it just works
[18:10:48] <wyre> SnoopJ, so you cannot use that starred way outside of a function call?
[18:11:01] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[18:11:04] <SnoopJ> wyre, you can use it in places that aren't function calls, but you asked for an example.
[18:11:19] <wyre> SnoopJ, sure, but I usually use it in that context
[18:11:27] <wyre> I was wondering about something like grym suggested 😆
[18:11:45] <grym> wyre: i did a hypercorrection
[18:11:47] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Read error: No route to host)
[18:12:08] <vanessa> Yhg1s, so, *[list] converts the list into function arguments?
[18:12:17] <wyre> grym, hypercorrection? 🤔
[18:12:28] <Yhg1s> vanessa: into individual ones, yes.
[18:12:28] <wyre> vanessa, it expands the list
[18:12:47] <grym> wyre: "hypercorrection is non-standard use of language that results from the over-application of a perceived rule of language-usage"
[18:12:58] <wyre> oh, sure
[18:13:10] <grym> "you're wrong by trying to be too right"
[18:13:45] <wyre> I see
[18:13:56] <SnoopJ> wyre, unpacking on the right-hand side doesn't really make sense because that's what multiple assignment is going to try and do
[18:14:29] <wyre> SnoopJ, what about left-hand side?
[18:14:51] <SnoopJ> wyre, it's fine there, and often useful when you don't care about some number of arguments: `a, b, *rest = it` is valid and meaningful
[18:14:52] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[18:15:01] <grym> or first, *middle, last
[18:15:22] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[18:15:30] <SnoopJ> right, a starred expression can be any one of the targets, but it must be just one IIRC
[18:15:37] <grym> yeah i think it'd have to be
[18:15:47] <vanessa> *[] doesn't work anywhere outside function args list
[18:16:26] <SnoopJ> vanessa, that isn't true: `lst = [*[1,2,3], *[4,5,6]]` is valid syntax
[18:16:49] <wyre> SnoopJ, I guess you used `it` at right-hand side as you could have used `whatever`, right?
[18:16:58] *** Quits: cosimone (~user@93-47-228-11.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[18:17:07] *** Joins: Guest32 (~Guest32@2a02:c7e:4649:5800:b857:62bd:109c:6641)
[18:17:22] <SnoopJ> wyre, yes, it doesn't really matter what the name is, I usually use `it` when the object I'm annotating is an iterable
[18:17:40] <wyre> oh, it from iterable, I see
[18:18:18] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz) (Remote host closed the connection)
[18:18:55] <wyre> thank you very much guys 😁
[18:20:07] *** Quits: whatif (~user@114.250.138.116) (Quit: ERC (IRC client for Emacs 26.3))
[18:20:08] *** Joins: trace987 (~trace@dynamic-002-247-248-146.2.247.pool.telefonica.de)
[18:20:09] *** Quits: trace987 (~trace@dynamic-002-247-248-146.2.247.pool.telefonica.de) (Remote host closed the connection)
[18:22:01] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[18:23:10] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:23:39] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[18:23:50] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:5dc2:1a32:5950:97d4)
[18:25:00] *** Quits: tristan_ (~tristan@223.62.175.52) (Remote host closed the connection)
[18:25:05] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[18:25:19] *** Joins: tristan_ (~tristan@223.62.175.52)
[18:25:24] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:26:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:26:16] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[18:27:07] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[18:27:18] *** Joins: withered_dragon (~withered_@172.93.207.245)
[18:27:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:27:30] *** Joins: sgn (~sgn@user/sgn)
[18:28:06] *** Quits: Guest32 (~Guest32@2a02:c7e:4649:5800:b857:62bd:109c:6641) (Quit: Client closed)
[18:28:12] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz)
[18:28:14] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[18:29:21] *** Joins: Barneyz (~Barneyz@2a02:c7e:4649:5800:b857:62bd:109c:6641)
[18:29:48] *** Quits: Barneyz (~Barneyz@2a02:c7e:4649:5800:b857:62bd:109c:6641) (Remote host closed the connection)
[18:30:39] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[18:30:47] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4ccd-223a-881b-3d7b.res6.spectrum.com)
[18:30:54] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[18:31:09] <Zweimer> Hey. I am trying to incoperate mypy into my program. However, the line "item.setFlags(QtCore.Qt.ItemIsTristate | QtCore.Qt.ItemIsUserCheckable)" produces an error: "error: Argument 1 to "setFlags" of "QTreeWidgetItem" has incompatible type "int"; expected "Union[ItemFlags, ItemFlag]"". Does anyone know how I can work around this error?
[18:31:29] *** Joins: frmlof (~frmlof@12.50.11.83)
[18:31:55] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[18:32:46] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[18:33:05] *** Joins: kts (~kts@103.73.237.175)
[18:34:01] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:34:16] *** Joins: plitter (~user@user/plitter)
[18:34:50] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[18:37:39] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:38:04] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[18:38:29] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:39:07] *** Joins: shad (~shad@user/shad)
[18:39:11] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[18:41:49] *** Joins: Vonter (~Vonter@user/vonter)
[18:43:01] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[18:43:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:44:51] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[18:45:09] *** Joins: obnoxiousnerd (~obnoxious@103.39.245.227)
[18:45:10] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[18:45:14] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:45:19] *** Quits: m1dnight (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[18:45:20] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:45:37] *** Joins: m1dnight (~christoph@christophe.dev)
[18:45:55] *** Quits: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[18:46:00] *** Quits: tristan_ (~tristan@223.62.175.52) (Remote host closed the connection)
[18:46:13] *** Quits: luva (~luva@146.70.62.246) (Ping timeout: 240 seconds)
[18:46:14] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:46:18] *** Joins: tristan_ (~tristan@223.62.175.52)
[18:46:33] *** Quits: plitter (~user@user/plitter) (Remote host closed the connection)
[18:46:49] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:46:57] *** Joins: luva (~luva@45.141.152.36)
[18:46:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:46:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[18:47:37] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[18:47:49] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:48:23] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Client Quit)
[18:49:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[18:49:56] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:50:12] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[18:51:01] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[18:51:30] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[18:51:37] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[18:51:45] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Ping timeout: 256 seconds)
[18:51:54] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[18:53:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[18:53:20] *** Joins: Vonter (~Vonter@user/vonter)
[18:53:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl)
[18:54:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[18:54:24] <wyre> Is there something like doxygen or javadocs for python? 🤔
[18:54:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:54:38] <wyre> what about sphinx?
[18:54:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:55:03] <grym> sphinx fills that role, i think
[18:55:24] <wyre> grym, but I guess I would have to follow some standards for comments, right?
[18:56:19] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f) (Quit: pvergain)
[18:56:25] <jinsun_> PEP 257
[18:56:35] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[18:56:39] <ketiv> Hello World
[18:57:03] <jinsun_> or numpy or Google style with napoleon extension for sphinx
[18:58:01] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[18:58:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[18:59:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:59:08] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f)
[18:59:34] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f5:37d:9ac:c716:7577:64d4) (Read error: Connection reset by peer)
[18:59:35] <obnoxiousnerd> is keeping "*" as a version in Pipfile a bad practice?
[18:59:37] <SnoopJ> wyre, sphinx is the best analogue, and as jinsun_ says there are some options for conventions
[18:59:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:00:12] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[19:00:20] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:00:32] *** Quits: nomic (~nomic@185.198.243.165) (Quit: Leaving)
[19:00:32] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9345:f8d4:9895:230f) (Client Quit)
[19:00:43] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:01:24] *** Quits: obnoxiousnerd (~obnoxious@103.39.245.227) (Remote host closed the connection)
[19:01:30] *** Quits: anddt (~anddt@net-47-53-0-126.cust.vodafonedsl.it) (Quit: Leaving)
[19:01:31] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Remote host closed the connection)
[19:01:49] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[19:01:51] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[19:03:08] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[19:04:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:04:34] <wyre> SnoopJ, jinsun_, grym is also Docutils an alternative? 🤔
[19:05:03] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Remote host closed the connection)
[19:05:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:05:29] *** Joins: ketiv (~ketiv@92.40.194.87.threembb.co.uk)
[19:05:30] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:05:44] <SnoopJ> wyre, it's an available tool, but I wouldn't say it's analogous to doxygen/javadoc in the same way. Sphinx is built on top of docutils.
[19:05:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:06:47] <SnoopJ> Section 9.3 of the Sphinx manual discusses the distinction a bit
[19:06:51] <wyre> SnoopJ, yes, sphinx is a python module but doxygen/javadoc are specific and different tools (not libraries/modules I mean)
[19:06:53] <wyre> right?
[19:07:10] <SnoopJ> I'm not sure what you're asking me
[19:07:30] *** Quits: tristan_ (~tristan@223.62.175.52) (Remote host closed the connection)
[19:07:48] *** Joins: tristan_ (~tristan@223.62.175.52)
[19:07:59] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[19:08:03] <SnoopJ> Sphinx is frequently used as a tool in the same fashion you'd often use doxygen/javadoc
[19:08:08] *** Joins: ketiv_ (~ketiv@92.40.192.93.threembb.co.uk)
[19:08:31] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:09:02] <wyre> SnoopJ, hmmm, I thought you have to import explicitly the module 🤔
[19:09:18] <wyre> but I guess then you can use it as `python -m sphinx`, right?
[19:09:30] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:09:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:10:19] *** Quits: ketiv (~ketiv@92.40.194.87.threembb.co.uk) (Ping timeout: 256 seconds)
[19:10:33] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:10:36] <SnoopJ> right
[19:11:25] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[19:11:29] <SnoopJ> it's operating on the regular source code and specially-formatted docstrings, so really, it is quite analogous to those
[19:12:01] <SnoopJ> there might be some cases where you'd want to use the library but I don't know about any of those because they're less common modes of operation
[19:12:04] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[19:12:29] <wyre> I see, thank you very much 😊
[19:13:09] <Jong> I'm seeing people use "--debug_mode" with argparse to basically mean with print_mode. Do you like this practice?
[19:13:11] *** Quits: binary011 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Ping timeout: 268 seconds)
[19:14:04] <wyre> Jong, what's print_mode?
[19:14:22] <Jong> turn on a bunch of print statements
[19:14:24] <SnoopJ> Jong, I usually prefer to use the `logging` module with --debug as an argument to modify the log level
[19:14:45] <Jong> SnoopJ  that's very elegant!
[19:14:51] <wyre> Jong, I've never seen that before 😆
[19:15:25] <Jong> wyre  I just made it up. I was looking at this code and realized that --debug-mode did nothing but turned on/off printing numpy array values
[19:16:12] <wyre> Jong, did you see that in some opensource project?
[19:16:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:16:55] *** Quits: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[19:17:03] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[19:18:13] <Jong> it was closed source
[19:18:31] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[19:18:38] <wyre> oh, I see, I was curious about that structure ... 😆
[19:19:24] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[19:19:29] *** Joins: stockholm (~Andreas@p200300d2c70cd300884c6f4cafbd521f.dip0.t-ipconnect.de)
[19:19:45] *** Joins: georgios (~georgios@user/georgios)
[19:19:54] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:19:59] <wyre> has someone tried https://asciidoc3.org/ ?
[19:20:20] <SnoopJ> Never heard of it
[19:20:35] *** Joins: iphone (~spiderman@user/spiderman)
[19:21:03] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:443f:3e79:f513:1a13)
[19:22:34] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[19:23:12] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:23:29] *** Quits: ketiv_ (~ketiv@92.40.192.93.threembb.co.uk) (Ping timeout: 256 seconds)
[19:23:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:24:42] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:25:30] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[19:25:37] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[19:25:54] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Client Quit)
[19:26:12] *** Joins: moog (~moog@107.126.53.244)
[19:26:27] *** Joins: ketiv (~ketiv@92.40.192.86.threembb.co.uk)
[19:26:58] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[19:27:08] <stockholm>  i want to use typing (and typing hints in my IDE. I have some multiprocessing queues. what is their type hint? and how do i find out myself?
[19:27:21] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[19:27:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:28:03] <stockholm> is there some command that would print out the type of its argument?
[19:28:12] <The-Compiler> stockholm: print(type(obj))
[19:28:17] <stockholm> oh
[19:28:23] <The-Compiler> stockholm: I'd guess multiprocessing.Queue
[19:28:36] <The-Compiler> that won't tell you the "inner" type for generics, but at least is a good start
[19:28:42] *** Quits: grundrausch3n (~grundraus@pd9582044.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:28:52] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[19:29:08] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.224)
[19:29:19] *** Joins: grundrausch3n (~grundraus@p200300e9ef0ab500bc39f9cc14bd70ee.dip0.t-ipconnect.de)
[19:29:25] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[19:29:28] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[19:29:29] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[19:29:44] <bjs> The-Compiler: well multiprocessing.Queue isn't even a class (it's a function)
[19:29:55] *** Quits: grundrausch3n (~grundraus@p200300e9ef0ab500bc39f9cc14bd70ee.dip0.t-ipconnect.de) (Client Quit)
[19:29:56] <bjs> stockholm: see https://github.com/python/typeshed/tree/master/stdlib/multiprocessing for the actual type annotations for the multiprocessing module
[19:29:57] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[19:29:59] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:30:24] <bjs> stockholm: multiprocessing.Queue[T] appears to be the right annotation.  reveal_type(obj)  should get a typechecker to print the type it thinks an object is
[19:30:48] <stockholm> ok, thank you very much.
[19:31:13] <bjs> stockholm: multiprocessing.queues.Queue sorry
[19:31:36] <stockholm> yes, pycharm said that, too :-)
[19:32:03] <stockholm> however, reveal_type is nothing that looks familiar. do i have to import something for that to work?
[19:32:06] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:a975:c233:f1ea:92a6)
[19:32:11] <bjs> stockholm: no
[19:33:13] *** Joins: mq^v (~user@217-149-175-115.nat.highway.telekom.at)
[19:33:16] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[19:33:57] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[19:34:00] <bjs> stockholm: if you're getting PyCharm to do the typechecking it might not support reveal_type, I'm not sure.  It might just let you hover over things or ask the type that way
[19:34:11] <bjs> (the type the typechecker believes at least)
[19:34:40] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:34:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b2a5:d3bb:c9bd:5a42:d7a8:23d8) (Ping timeout: 240 seconds)
[19:35:00] <stockholm> name 'reveal_type' is not defined, when i run it. i did print(reveal_type(io_q)) on the queue
[19:35:20] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:36:00] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d5f:588f:7873:144a) (Ping timeout: 268 seconds)
[19:36:37] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[19:36:53] <bjs> stockholm: no just reveal_type(io_q)   it's not a Python function, it doesn't exist.  But when you run the typechecker it'll print the type out for you (e.g. if use mypy or pytype or something)
[19:37:06] <bjs> if you're using PyCharm's built-in typechecker I don't know what it does or if it supports reveal_type
[19:37:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[19:37:56] <stockholm> there is a seperate program that just does type checks, called the typechecker?
[19:38:05] <bjs> stockholm: yes, like mypy or pytype
[19:38:10] <bjs> Python itself doesn't look at the types at all
[19:38:20] <stockholm> ahhh :-)
[19:39:52] <mq^v> is there a `man pip`-style documentation for pip/pip3?
[19:40:04] <grym> `pip --help` ?
[19:40:10] <mq^v> thanks
[19:41:49] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[19:42:56] <CrtxReavr> Isn't the output of 'pip' & 'pip --help' identical?
[19:43:02] <CrtxReavr> Why, yes it is.
[19:44:26] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[19:45:19] <mq^v> thanks again i shouldn't hurry these things
[19:45:25] *** Quits: someuser (~user@197.54.14.247) (Ping timeout: 240 seconds)
[19:46:43] *** Joins: Guest21 (~Guest21@191-0-127-151.isp.overthebox.ovh)
[19:48:44] <mq^v> Is there a logfile or a history of pip installations besides freeze/list?
[19:48:52] *** Quits: legola (~legola@46.235.102.73) (Remote host closed the connection)
[19:48:58] <grym> no, because there's not just one pip
[19:49:01] <grym> there's one per site
[19:49:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:28] <mq^v> per repository?
[19:49:33] <grym> per "python"
[19:49:38] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[19:49:53] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[19:50:05] <mq^v> you mean the site-packages folder?
[19:50:39] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:51:08] <grym> when you call a particular python, like /usr/bin/python or /usr/bin/python3 or /home/grym/.pyenv/versions/3.10.0/bin/python or myvenv/bin/python ...
[19:51:13] <grym> all of those have separate pips
[19:51:17] <grym> (if they have pip at all)
[19:51:38] *** Quits: thevishy (~Nishant@2405:201:f005:c007:3c5f:229d:dc3f:da32) (Quit: Leaving)
[19:51:51] <mq^v> i only see pip and pip3 (vor versions >3 i guess)
[19:51:54] <SnoopJ> mq^v, per interpreter, basically.
[19:53:01] <mq^v> thank you for your effort, i am somewhat short on time, i'll check back again later.
[19:53:44] <grym> mq^v: your shell might have bare commands called pip and pip3, but _where they point to_ is actually hard to know in general and i recommend not using pip that way
[19:53:49] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.145) (Ping timeout: 240 seconds)
[19:54:04] <grym> pip is sometimes but certainly not always /usr/bin/python -m pip, for example
[19:54:24] <SnoopJ> https://snarky.ca/why-you-should-use-python-m-pip/
[19:54:31] <grym> mq^v: also, `sudo pip` is 100% always a bad plan, don't do it
[19:55:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:55:36] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:55:56] <mq^v> thanks. I have to go now but thanks, i'll try confronting these things again when there's more time.
[19:57:07] <mq^v> sorry for the inconvenience
[19:57:11] *** Quits: mq^v (~user@217-149-175-115.nat.highway.telekom.at) (Quit: Leaving)
[19:57:31] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:59:11] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:00:25] <stockholm> how would i insert typing hints here:         self.io_cmd_q, self.status_q, self.raw_q, = args
[20:00:26] <stockholm>    ?
[20:00:36] *** Joins: shabius (~shabius@2a0e:1c80:1:1042::1003)
[20:00:42] <stockholm> these are all multiprocessing.queues
[20:01:05] <stockholm> i am unsure how to do it because of the syntax
[20:01:14] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[20:01:59] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[20:02:04] *** Joins: stwange (~j@239.213.6.51.dyn.plus.net)
[20:02:11] *** Joins: raxor2k (~raxor2k@78.158.254.45)
[20:02:17] *** Joins: netpipe (~netpipe@user/netpipe)
[20:02:19] *** Joins: paulrf (~paulrf@199.10.64.228)
[20:02:19] <jinsun> you would hint arg to be a Tuple[T1, T2, T3], then those 3 things will automatically be inferred to be T1, T2 and T3
[20:02:31] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:02:38] <enoq> hi, been a while, have people finally solved package management for Python?
[20:02:52] *** Joins: sgn (~sgn@user/sgn)
[20:03:18] <CodeMouse92> enoq: Depends, define "a while"
[20:03:23] <enoq> 3 years
[20:03:26] <CodeMouse92> Then no.
[20:03:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:04:25] <grym> enoq: pipenv fell into some disfavor; pyproject.toml/setup.cfg projects are more common than they were, but otherwise you'll recognize all the nouns and verbs still i suspect
[20:04:54] <grym> pip's had some dependency resolution work done on it
[20:04:56] <SnoopJ> enoq, what problems did you have previously that you are asking about?
[20:05:04] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[20:05:07] <SnoopJ> "solved package management" is casting a pretty wide net
[20:05:20] <CodeMouse92> grym: pipenv fell into disfavor? You mean my hesitancy to put it in the book was right??
[20:05:23] <enoq> SnoopJ: proper dependency resolution plus per project dependencies without venv
[20:05:28] <grym> CodeMouse92: probably
[20:05:29] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:05:38] <CodeMouse92> (I did acknowledge it's existence)
[20:05:47] <grym> enoq: venvs still drive
[20:05:49] <SnoopJ> enoq, per-project dependencies has been possible for a very long time
[20:05:51] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-134.poda.cz) (Ping timeout: 256 seconds)
[20:05:52] <SnoopJ> without venv
[20:05:58] <SnoopJ> certainly much longer than 3 years
[20:06:06] *** Quits: tsujp84 (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:06] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:07] <Jookia> isn't the choice just linux packages or venvs
[20:06:23] <SnoopJ> Jookia, they don't do anywhere near the same thing
[20:07:07] <Jookia> i've been using venvs to handle things
[20:07:22] <SnoopJ> they're a good choice when what you want is a separate environment
[20:07:23] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:4d3f:8f37:6755:e967)
[20:07:44] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.214)
[20:07:52] <Jookia> generally you want a second environment so you can install packages without dependency hell
[20:08:13] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:08:21] *** Joins: Kyron (~Kyron@2001:1c05:3608:3f00:c90:163b:e231:5a57)
[20:10:22] *** Quits: paulrf (~paulrf@199.10.64.228) (Quit: Client closed)
[20:11:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:12:02] *** Joins: rsx (~dummy@ppp-188-174-143-110.dynamic.mnet-online.de)
[20:13:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:13:35] *** Joins: esv (~esv@74.124.178.154)
[20:13:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:13:48] <nedbat> enoq: what would per-project dependencies look like without venv? Whatever made that possible, wouldn't it basically be venv? And what don't you like about venv?
[20:14:07] <SnoopJ> setup.cfg/pyproject.toml ?
[20:14:31] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Quit: Leaving)
[20:14:36] <nedbat> SnoopJ: plus some tooling that understood that file.
[20:14:48] <SnoopJ> right
[20:15:17] <SnoopJ> nedbat, maybe "per-project" really means "per development environment" here
[20:15:36] <nedbat> SnoopJ: those sound like the same things to me, so i guess you are right.
[20:15:47] <nedbat> i wanted to understand what enoq didn't like about using venv for this.
[20:16:11] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:16:37] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:16:41] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[20:17:05] *** Quits: Guest21 (~Guest21@191-0-127-151.isp.overthebox.ovh) (Quit: Client closed)
[20:17:39] <SnoopJ> I read it more like "per package" because if a venv isn't involved I don't know what else a project would really be
[20:17:46] <SnoopJ> but sure, I'd like to know what the gripe with venv is, too
[20:18:06] *** Joins: grooverman (~grooverma@177.95.12.14)
[20:19:08] *** Joins: ianliu (~ianliu@200-150-188-220.static-user.ajato.com.br)
[20:20:08] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[20:20:09] *** Quits: NoxTurminal (~Noxturmin@user/noxturminal) (Ping timeout: 256 seconds)
[20:20:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:20:38] *** Joins: sgn (~sgn@user/sgn)
[20:21:41] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[20:22:34] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:22:44] *** Joins: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[20:22:52] *** Joins: sgn (~sgn@user/sgn)
[20:22:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:23:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[20:24:02] <Guest20> Hi, I'm downloading some big data (100mb~) with slow internet connection, in order to see progress in my logs while downloading I'm using https://2.python-requests.org/projects/3/api/#requests.Response.iter_content, but after sometime I see that one of the iteration (of iter_content) is stucked, I'm trying to find a way to set a timeout for each
[20:24:03] <Guest20> iteration but can't find any, there is any other possible solution for that? Thanks!
[20:24:26] *** Quits: hyiltiz (~quassel@31.220.5.250) (Quit: hyiltiz)
[20:24:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:25:32] *** Parts: andr01d (~andr01d@johnea.net) (Leaving)
[20:25:41] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 256 seconds)
[20:26:48] *** Quits: stwange (~j@239.213.6.51.dyn.plus.net) (Quit: This computer has gone to sleep)
[20:27:15] *** Quits: kilitary (~Username@188.242.187.4) (Read error: Connection reset by peer)
[20:27:26] *** Joins: waynew (~wayne@user/waynew)
[20:27:34] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[20:28:09] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.4)
[20:29:01] <zen_coder> how can I transfer a python dictionary to my named tupple?
[20:29:13] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.214) (Ping timeout: 256 seconds)
[20:29:19] <nedbat> zen_coder: t = MyNamedTuple(**my_dict)
[20:29:29] *** Joins: IronManAvgr (~IronManAv@179.84.16.200)
[20:30:03] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:31:02] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:31:46] *** Quits: ianliu (~ianliu@200-150-188-220.static-user.ajato.com.br) (Quit: WeeChat 3.4)
[20:31:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-241.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:32:44] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[20:33:02] *** Joins: kilitary (~Username@188.242.187.4)
[20:33:45] *** Quits: IronManAvgr (~IronManAv@179.84.16.200) (Client Quit)
[20:34:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:34:53] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[20:34:58] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[20:36:07] *** Quits: kilitary (~Username@188.242.187.4) (Remote host closed the connection)
[20:36:10] *** Joins: grooverman (~grooverma@177.95.12.14)
[20:36:27] *** Quits: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[20:36:35] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 256 seconds)
[20:37:41] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:37:43] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:37:55] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:38:04] *** Joins: mickey8 (~user@user/mickey)
[20:38:05] *** Joins: vladoski (~foo@2001:b07:add:d406:4f4:510f:6edb:7ba4)
[20:38:51] *** Quits: chele (~chele@user/chele) (Quit: Leaving)
[20:38:53] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Client Quit)
[20:39:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:40:17] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:41:32] *** dcaro is now known as dcaro_ooo
[20:41:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:41:57] *** Joins: sgn (~sgn@user/sgn)
[20:42:49] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Read error: Connection reset by peer)
[20:43:37] *** Quits: shabius (~shabius@2a0e:1c80:1:1042::1003) (Quit: Leaving)
[20:43:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:43:52] <enoq> nedbat: pain to change into the env each time
[20:44:05] <enoq> when the module loader could just use a different base folder
[20:44:26] <SnoopJ> enoq, you don't have to activate venvs, but there are tools that help you do it automagically if that's what you want
[20:44:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:44:37] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:a629:f731:f450:d2ba) (Ping timeout: 240 seconds)
[20:44:42] <nedbat> enoq: if you run venv/bin/python it will use the right packages.
[20:44:55] *** Joins: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[20:45:00] <SnoopJ> yea, it'll always use the associated site if you run the interpreter directly
[20:45:16] *** Quits: Juhaz_ (juhaz@hilla.kapsi.fi) (Quit: Reconnecting)
[20:45:22] <enoq> yeah, IntelliJ makes it easy
[20:45:23] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[20:45:30] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10e1:c29f:443f:3e79:f513:1a13)
[20:45:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:45:50] *** Joins: nomic (~nomic@185.198.243.165)
[20:45:52] *** Joins: sgn (~sgn@user/sgn)
[20:46:49] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:46:52] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Quit: Farewell)
[20:47:18] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:3a3d:dd63:4712:76f8) (Read error: Connection reset by peer)
[20:47:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:47:59] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Quit: Leaving)
[20:48:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:48:41] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:443f:3e79:f513:1a13) (Ping timeout: 245 seconds)
[20:48:44] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:48:44] <SnoopJ> PyCharm is supposed to have good integrations for it, yep
[20:49:00] *** Joins: sgn (~sgn@user/sgn)
[20:49:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:49:11] <SnoopJ> Question: is there a good reference anywhere on building a Windows service to contain a Python application?
[20:49:59] <mefistofeles> https://thepythoncorner.com/posts/2018-08-01-how-to-create-a-windows-service-in-python/ just found this, maybe it helps
[20:50:14] <mefistofeles> you probably already know that
[20:50:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:50:50] <SnoopJ> Yea, that's got some handy pointers in it, just wondering if there's resources my searching is missing :)
[20:51:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[20:51:32] <SnoopJ> this is quite close to what I want to do, actually (+PyInstaller): https://metallapan.se/post/windows-service-pywin32-pyinstaller/
[20:51:49] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[20:53:47] *** Joins: hanaan (~naan@user/naan)
[20:54:22] *** Quits: nomic (~nomic@185.198.243.165) (Quit: Leaving)
[20:54:39] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[20:55:17] *** Joins: nomic (~nomic@185.198.243.165)
[20:55:42] <mefistofeles> SnoopJ: sounds even easier in windows than in Linux :P
[20:55:43] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[20:56:28] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:57:14] *** Joins: dubitant (~dubitant@84.126.222.41.dyn.user.ono.com)
[20:57:34] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:57:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:58:00] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[20:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:58:53] *** Joins: emf (~emf@2620:10d:c091:480::1:89d7)
[20:59:06] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[20:59:30] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[21:00:24] *** Joins: bluedust (~bluedust@103.148.20.45)
[21:00:28] <SnoopJ> I hadn't realized that pywin32 could do service stuff, but I guess in hindsight it makes complete sense, since it's "just" the Win32 API and friends :)
[21:00:42] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:01:29] *** Joins: blcyber (~blcyber@216.74.235.178)
[21:02:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[21:02:31] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[21:03:54] *** Joins: cliluw (~cliluw@47.147.73.223)
[21:04:45] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[21:04:48] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:05:39] *** Joins: bluedust_ (~bluedust@117.217.156.172)
[21:05:52] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[21:06:55] *** hanaan is now known as Naan
[21:07:20] *** Quits: frmlof (~frmlof@12.50.11.83) (Quit: frmlof)
[21:08:45] *** Quits: bluedust (~bluedust@103.148.20.45) (Ping timeout: 256 seconds)
[21:09:04] *** Quits: bluedust_ (~bluedust@117.217.156.172) (Remote host closed the connection)
[21:09:15] *** Joins: grooverman (~grooverma@177.95.12.14)
[21:09:19] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[21:09:49] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[21:10:07] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:4d3f:8f37:6755:e967) (Quit: I have gone to sleep. ZZZzzz…)
[21:11:18] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:5dc2:1a32:5950:97d4) (Quit: Client closed)
[21:13:59] *** Quits: tristan_ (~tristan@223.62.175.52) (Ping timeout: 256 seconds)
[21:15:05] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:15:09] *** Joins: kilitary (~Username@188.242.187.4)
[21:16:39] <Kyron> Hi there. I have the following code (simplified):     A = CustomObj(x), B = CustomObj(y). The init of my CustomObj appends the value to some integer, let's say Z.
[21:17:13] <Kyron> I expect the Z value of A to be X, and the Z value of B to be Y. However, the Z value of B has both values X and Y
[21:17:42] <Kyron> Somehow by enforcing "self.Z = []"  I can prevent this, but this code smells a bit to me since it seems that some data is somehow leaking into the next object
[21:17:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:18:03] <Kyron> (I am sorry, in the example above Z is not an integer but a list)
[21:18:07] <Yhg1s> Kyron: you would have to show us the actual code. I'm guessing you're doing something like 'class CustomObj: Z = []'?
[21:18:22] <Kyron> YhG1s Ill quickly make a mockup
[21:18:22] <phy1729> or def __init__(..., Z = [])
[21:18:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:18:32] <Yhg1s> Kyron: make sure the mockup misbehaves the same way.
[21:18:34] *** Quits: aniketgm (~Aniket@49.36.107.163) (Quit: leaving)
[21:18:38] <Kyron> I will
[21:18:55] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[21:19:28] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:20:06] <jim87> Hello! Anyone with Qt/PySide? I'm trying to populate a QTreeView, and it works well... the first time. The second time I do it, when I setModel with the new model, all the memory is being taken and the application freezes... this is my function: https://bpa.st/2HWA - what am I doing wrong? Thanks :)
[21:22:38] *** Joins: ensyde (~ensyde@2600:1702:2e30:1a40:45a0:ed37:83fe:d777)
[21:22:46] *** Joins: bloody (~bloody@user/bloody)
[21:22:49] <Kyron> Yhg1s https://bpa.st/7ZAA This is the code
[21:23:10] <Kyron> Im pretty sure it has to do with me initialising z outside of the dunder init
[21:23:14] <Kyron> But Im not sure why
[21:23:14] <Yhg1s> Kyron: line 2 defines a *class attribute* that is a list.
[21:23:26] <Yhg1s> Kyron: it doesn't define an *instance attribute*. All instances share the class attribute.
[21:23:29] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:23:29] *** Quits: Guest20 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[21:23:43] <Yhg1s> Kyron: if you want different lists for each instance, you do need to assign to self.z in __init__. That's how that's done in Python.
[21:24:01] <Kyron> But they also copy adjustments to the class attribute? I would expect the class attribute to persist if i added an actual value there
[21:24:18] <Kyron> I always thought that class attributes were just parsed inside the init after compilation anyway
[21:24:26] <Yhg1s> Kyron: I'm not sure what you mean by that. The value does 'perist'.
[21:24:40] <Yhg1s> Kyron: 'parsed inside the init'? No, that doesn't sound like something that makes sense, or that happens.
[21:24:51] *** Joins: bluedust (~bluedust@117.217.156.172)
[21:24:58] *** Quits: kilitary (~Username@188.242.187.4) (Remote host closed the connection)
[21:24:59] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:25:23] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:25:30] *** Joins: bluedust_ (~bluedust@185.248.85.57)
[21:25:42] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:25:45] <Yhg1s> Kyron: classes, class objects, are created by executing the class body. Any names defined in that class body become attributes of the class. Class attributes can be accessed through the class object, or instances of the class.
[21:26:11] <Yhg1s> Kyron: instance attributes have to be assigned to the instance, and that's commonly (but not necessarily) done in __init__.
[21:26:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:26:38] <Kyron> I mean that I thought that class attributes were linked to objects on compilation. In other words, that as soon as you made a change to a class attribute (while refering to it via an object) would only affect the instance
[21:27:34] <Yhg1s> Kyron: yes, that's not what happens. It's also not at all how Python works.
[21:27:35] <Kyron> So in other words, what happens now would be as if I had adapted the class parameter without assigning it to an object, such as in CustomObj().z = ?
[21:27:49] <Yhg1s> Kyron: you may want to watch or read bit.ly/pynames1 to understand how objects and references work in Python.
[21:28:19] <Yhg1s> Kyron: I don't understand what you mean by 'adapting the class parameter', sorry.
[21:28:35] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[21:29:01] *** Quits: bluedust (~bluedust@117.217.156.172) (Ping timeout: 240 seconds)
[21:30:19] <Repiphany> Kyron: The class attribute isn't affected by doing an assignment to an instance
[21:30:45] <Repiphany> It would still be accessible by other instances by the same name or through the class directly
[21:31:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[21:32:41] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 256 seconds)
[21:33:01] <Kyron> I mean, as an equivalent to the idea of static classes, for example in a language such as java were you would call the class instead of the object to change the class parameter.
[21:33:08] <Kyron> Somehow here, through the object, i am adapting the class parameter
[21:33:13] <Kyron> or attribute, sorry for the sloppy nomenclature
[21:33:41] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[21:33:49] <Kyron> By defining the attribute outside of the init I am making it a property of the class rather than of the object, that had me confused
[21:34:03] <Kyron> (because i was still calling it via the object)
[21:34:20] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[21:34:26] <Kyron> Thanks for the tip though, I will have to look into that a bit more to make sure I fully understand the python architecture as opposed to other programming languages (y)
[21:34:40] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[21:34:50] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:35:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[21:35:11] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:35:24] <Repiphany> `self.a` tries to look up the instance attribute `a` first, then the class `a` if the former doesn't exist
[21:36:00] <Repiphany> `self.a = blah` assigns to the instance attribute even if cls.a is already a thing
[21:36:07] *** Joins: blcyber (~blcyber@216.74.235.178)
[21:36:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:17] *** Joins: tristan_ (~tristan@223.62.175.52)
[21:37:24] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:37:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:37:29] <grym> Kyron: python doesn't really have static, or const
[21:37:39] *** Quits: bytehackr (~Sandipan@43.252.250.96) (Ping timeout: 256 seconds)
[21:37:43] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:37:51] *** Parts: hwrd_ (aa272caead@2604:bf00:561:2000::137) ()
[21:37:58] *** Joins: cyrus_mc (~cyrus_mc@45.62.180.58)
[21:38:05] <grym> personally, i don't commonly find class level attributes useful
[21:38:11] *** Parts: cyrus_mc (~cyrus_mc@45.62.180.58) ()
[21:40:38] *** Joins: mike18 (~geri@216.200.232.252)
[21:40:52] <mike18> hi how can i use bytes for flask send_file ?
[21:41:58] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[21:42:00] *** Joins: Han (~han@user/han)
[21:42:04] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Client Quit)
[21:42:22] *** Joins: d0ku (~d0ku@178.43.3.56.ipv4.supernova.orange.pl)
[21:42:46] *** Joins: magla (~gelignite@55d453bf.access.ecotel.net)
[21:43:17] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[21:43:18] <Han> Hi there, I'm working on a gtk+python application with language support, works fine on linux, but with windows 10, all users are forced to use english.
[21:43:26] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[21:43:39] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[21:43:46] <Han> What's the recommended way to set the language for gtk+python apps on windows?
[21:44:27] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[21:46:10] *** Quits: Kyron (~Kyron@2001:1c05:3608:3f00:c90:163b:e231:5a57) (Ping timeout: 256 seconds)
[21:46:40] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38f3:2d35:549b:3277)
[21:46:43] *** Quits: tristan_ (~tristan@223.62.175.52) (Ping timeout: 256 seconds)
[21:47:10] *** Joins: mrwick (~mrwick@user/mrwick)
[21:47:47] *** Quits: Pddy (~patrick@user/SmplyPddy) (Remote host closed the connection)
[21:49:51] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:50:02] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[21:50:03] *** Joins: tristan_ (~tristan@223.62.175.52)
[21:50:06] *** Joins: grundrausch3n (~grundraus@p200300e9ef0ab500bc39f9cc14bd70ee.dip0.t-ipconnect.de)
[21:50:25] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[21:50:25] *** Quits: tristan_ (~tristan@223.62.175.52) (Remote host closed the connection)
[21:50:32] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-385a-cc83-b7b2-21fe.res6.spectrum.com)
[21:50:53] *** Joins: tristan_ (~tristan@223.62.175.52)
[21:50:54] *** Quits: ihopeyourot (~ihopeyour@31.142.224.22) (Read error: Connection reset by peer)
[21:54:45] *** Quits: stockholm (~Andreas@p200300d2c70cd300884c6f4cafbd521f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:55:17] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[21:55:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:55:30] *** Joins: sgn (~sgn@user/sgn)
[21:55:49] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[21:55:55] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:58:00] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:00:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:00:47] *** notevil_ is now known as NOTevil
[22:01:01] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Quit: cemotyz09)
[22:01:21] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[22:02:12] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[22:03:47] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:03:54] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:04:18] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:04:28] *** Quits: raxor2k (~raxor2k@78.158.254.45) (Remote host closed the connection)
[22:04:28] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:04:48] *** Quits: rsx (~dummy@ppp-188-174-143-110.dynamic.mnet-online.de) (Quit: rsx)
[22:06:52] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[22:08:36] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Remote host closed the connection)
[22:08:57] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[22:10:12] *** Joins: Vonter (~Vonter@user/vonter)
[22:10:13] *** Quits: tristan_ (~tristan@223.62.175.52) (Ping timeout: 240 seconds)
[22:12:47] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[22:13:38] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:c4be:ff6:d859:75b2)
[22:14:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[22:14:04] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:14:41] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:14:45] *** Joins: SuperLag (~akulbe@user/superlag)
[22:15:26] *** lukedashjr is now known as luke-jr
[22:15:45] *** Joins: Pddy (~patrick@user/SmplyPddy)
[22:15:49] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[22:16:13] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:a975:c233:f1ea:92a6) (Ping timeout: 240 seconds)
[22:16:23] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[22:16:45] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[22:16:47] *** Joins: sgn (~sgn@user/sgn)
[22:18:07] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:18:24] *** Parts: Han (~han@user/han) ()
[22:19:02] *** Joins: Galladite27 (~Galladite@host-92-24-75-159.as13285.net)
[22:20:17] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[22:20:43] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 256 seconds)
[22:21:02] *** Joins: SuperLag (~akulbe@user/superlag)
[22:21:58] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[22:22:17] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[22:22:35] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[22:23:18] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:24:01] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:24:02] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[22:24:30] *** Joins: luva9 (~luva@37.120.197.53)
[22:24:32] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[22:24:33] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:24:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[22:24:42] *** lukedashjr is now known as luke-jr
[22:25:00] <Payam> When a thread is finished. Can it be determinated?
[22:25:23] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[22:25:31] *** Joins: tristan_ (~tristan@223.62.175.221)
[22:25:49] *** Quits: Galladite27 (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 240 seconds)
[22:26:23] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 256 seconds)
[22:26:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:27:01] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10e1:c29f:443f:3e79:f513:1a13) (Read error: Connection reset by peer)
[22:27:02] *** Quits: ensyde (~ensyde@2600:1702:2e30:1a40:45a0:ed37:83fe:d777) (Quit: Leaving)
[22:27:49] *** Quits: luva (~luva@45.141.152.36) (Ping timeout: 240 seconds)
[22:27:49] *** luva9 is now known as luva
[22:28:18] *** Quits: ecool (~ecool@ecool.dev) (Changing host)
[22:28:18] *** Joins: ecool (~ecool@user/ecool)
[22:28:31] *** Joins: ircs (~ircs@2-111-85-72-cable.dk.customer.tdc.net)
[22:28:54] <bjs> Payam: what do you mean by "determinated"
[22:29:19] <Payam> feels like the thread.join never exit
[22:29:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:29:28] <bjs> Payam: thread.join exits once the thread is finished
[22:29:29] <Payam> so my program doesn't do to the next line of code.
[22:29:37] <bjs> maybe your thread doesn't actually finish like you thought it did?
[22:29:42] *** Joins: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de)
[22:29:46] <Payam> It does :( from the logs
[22:29:49] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[22:30:23] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:30:31] <bjs> Payam: okay, well, the join() not terminating seems like *pretty* strong evidence to the contrary?
[22:30:42] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[22:30:47] <mike18> hi how can i convert bytes in io.BytesIO?
[22:30:52] <Payam> I will try to undrestand it better. Very interesting
[22:31:00] <bjs> Payam: maybe you can share the code, or make a small example snippet
[22:31:01] *** Quits: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:31:05] <bjs> mike18: convert bytes to what?
[22:31:06] <mike18> is it as simple as mem = io.BytesIO(my_bytes) ?
[22:31:22] <Payam> bjs, This code is crazy. If I don't get no where I will post it here.
[22:31:37] <bjs> mike18: oh you mean you want to create a BytesIO object given some bytes?  did you try that example? or look at the BytesIO Docs
[22:31:37] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Ping timeout: 256 seconds)
[22:31:39] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.3)
[22:31:41] <bjs> I'm sure it would tell you :P
[22:31:50] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[22:31:53] <mike18> bjs: correct to use with flask send_file
[22:32:15] *** Joins: sgn (~sgn@user/sgn)
[22:32:23] <akk> Is there a way of opening an sqlite3 as read-only? The doc says sqlite3.connect("file:path/to/file?mode=ro", uri=True) should work, but it doesn't, either with file:/// or file:/
[22:33:23] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[22:33:25] <Payam> One other question. I am using asyncio on an different thread called "async_thread" to not block the main thread. For the UI work I use a thread also to not block the mainthread. But still the application freezes
[22:33:45] *** Quits: ketiv (~ketiv@92.40.192.86.threembb.co.uk) (Ping timeout: 256 seconds)
[22:33:48] *** Joins: gareppa (~gareppa@user/gareppa)
[22:34:14] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[22:34:41] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:34:48] <bjs> Payam: well, maybe you accidentally wrote a line that froze the main thread somewhere? it's impossible to answer a question like that, it could be that you just used a library wrong, or did a blocking operation in the wrong place, or your synchronization is broken, or you interact with the UI incorrectly, or a million and one other random unrelated reasons
[22:34:49] <bluss> akk: something like ?immutable=1&mode=ro  maybe
[22:34:50] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[22:35:04] *** Joins: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de)
[22:35:09] *** Joins: MrFantastik (~f@2607:f598:bbda:250:b0ab:6263:8d63:381b)
[22:35:16] <Payam> okej, Let me do a bpaste
[22:35:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:35:49] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[22:36:07] *** Quits: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:36:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:36:15] <akk> bluss: wonderful, thanks! That works.
[22:36:20] <bjs> Payam: e.g. the number of people that come here saying that threading doesn't work properly and there's some crazy and deep reason why its wrong and it turns out they just have a typo like `submit(f(), args)` or something in their code.
[22:36:26] *** Joins: cliluw (~cliluw@47.147.73.223)
[22:36:35] <bjs> and then "Oh, now it works fine" :P
[22:36:59] *** Joins: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de)
[22:38:48] *** Joins: ketiv (~ketiv@92.40.192.83.threembb.co.uk)
[22:40:11] *** Joins: paulrf (~paulrf@195.181.171.239)
[22:40:45] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Remote host closed the connection)
[22:41:10] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[22:41:49] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 256 seconds)
[22:42:03] <Payam> https://bpa.st/DN7A bjs
[22:42:13] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.224) (Ping timeout: 240 seconds)
[22:42:33] <bluss> akk: there seem to be quite a few caveats so I guess check the docs. mode=ro not working suggests that there's a different open call that passes a different mode, so maybe you can override that somewhere else?
[22:43:08] <Payam> line 33 in the seconf file is time consuming. but it should use the thread of asyncio right?
[22:43:32] <Payam> and it should schedule everything in that thread
[22:43:55] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[22:44:23] <bjs> Payam: well 149 `group = future.result()` is getting the result
[22:44:25] *** Joins: stwange (~j@82.21.202.140)
[22:44:34] <akk> bluss: The docs say that mode=ro is supposed to work and don't mention immutable anywhere, but it failed without immutable=1&, using the same mode=ro URI that worked fine for the sqlite3 commandline.
[22:44:46] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:45:03] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:34] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:45:41] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[22:46:22] *** Joins: earendel (uid498179@user/earendel)
[22:47:00] <bjs> Payam: (but obviously that line can't continue until the coroutine has finished and the result is known).  Maybe you want to add some kind of callback to the future?
[22:47:07] * akk wonders if I should file a documentation bug about that
[22:47:31] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:48:53] <bjs> Payam: the lines after with add_projects_ui.join() just looks like a bug (start() doesn't return anything)
[22:49:04] <bjs> so you just get a TypeError there probably
[22:49:19] <bjs> or AttributeError or something
[22:51:53] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[22:52:20] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[22:52:45] <Payam> bjs, I was just testing it. Yea a callback. but anyreason why it blocks the mainthread?
[22:53:01] <bjs> Payam: why what blocks the mainthread? `join()` and `result()` block the thread you're in
[22:53:09] <bjs> that's what they do, block until the thing is done
[22:53:33] <Payam> yes. but the the ui freezes. so something blocks the ui thread
[22:53:36] *** Joins: ewwegweg_ (~ewwegweg@user/ewwegweg)
[22:54:06] <bjs> Payam: well what is calling _add_group_diag ?
[22:54:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[22:54:17] <bjs> what thread is that in
[22:54:25] <Payam> ui
[22:54:34] *** Joins: sgn (~sgn@user/sgn)
[22:54:35] <bjs> Payam: well that explains why it blocks the ui thread no?
[22:54:35] <Payam> ah I see what you saying.
[22:54:43] <Payam> awesome.
[22:54:47] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[22:54:47] <Payam> Thanks :d
[22:54:49] <Payam> :D
[22:56:10] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[22:56:33] *** Joins: Auron (~Auron956@user/auron)
[22:57:52] <Payam> so bjs when you start a thread you don't need to explicitly call join to close it?
[22:58:04] <bjs> Payam: join doesn't "close" a thread, it waits for it to finish
[22:59:03] <Payam> but will the thread still be around? or it gets killed?
[23:00:03] *** Joins: marcello42 (~mp@2001:1a81:12a9:b900:4ccd:c26d:723b:afc2)
[23:00:10] <bjs> Payam: the thread will die once it finishes,  or yes, if something kills it
[23:00:31] <Payam> awesome.
[23:00:32] <Payam> thanks
[23:01:20] *** Joins: vicfred (~vicfred@user/vicfred)
[23:02:02] <bjs> Payam: daemon threads will be killed once all non-daemon threads are finished
[23:02:12] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:02:30] <bjs> join() doesn't "do" anything, it just waits for the thread to be done before returning
[23:02:31] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[23:03:21] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[23:03:55] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[23:04:55] *** Quits: d0ku (~d0ku@178.43.3.56.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[23:05:33] *** Joins: d0ku (~d0ku@178.43.3.56.ipv4.supernova.orange.pl)
[23:05:37] *** Joins: SuperLag (~akulbe@user/superlag)
[23:06:02] <Payam> ah. Okej. So if you want to be sure that the operation are done in one thread you have to join it.
[23:06:26] *** Joins: mexen (uid495612@user/mexen)
[23:06:27] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[23:06:31] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[23:06:50] *** Joins: sgn (~sgn@user/sgn)
[23:07:07] <mexen> ferros what is it you are trying to accomplish and what effect are you getting instead?
[23:07:10] *** Quits: bluedust_ (~bluedust@185.248.85.57) (Remote host closed the connection)
[23:07:35] *** Joins: seednode (~seednode@user/seednode)
[23:08:03] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:09:21] *** Joins: georgios (~georgios@user/georgios)
[23:09:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[23:11:19] <stewie925> hi guys, is there a way to make the unicode characters render correctly?  https://bpa.st/34OA
[23:12:00] *** Joins: agonhajdari (~textual@user/agonhajdari)
[23:12:25] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 256 seconds)
[23:13:07] <Wooble> stewie925: just printing that should work. how are you outputting it?
[23:13:24] <Wooble> stewie925: (and what version of python?)
[23:13:41] <stewie925> Wooble - it is Python 3.8
[23:13:56] <stewie925> I just straight up print it out :(
[23:14:11] <Wooble> stewie925: is it JSON, and not a dict?
[23:14:37] <stewie925> it is a dict, right before I wrote it out to a json file
[23:15:05] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b) (Ping timeout: 252 seconds)
[23:15:06] <stewie925> so the JSON file also ended up showing these unreadable characters
[23:15:31] <Wooble> stewie925: a JSON file is expected to contain those unicode escapes unless you use ensure_ascii=False
[23:15:37] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[23:15:59] <stewie925> oh
[23:16:22] <stewie925> thank you, Wooble, let me google that
[23:16:57] *** Quits: d0ku (~d0ku@178.43.3.56.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[23:17:23] *** Joins: beli6148 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[23:18:08] <stewie925> will try this - ` json.dumps(d, encoding='utf-8', ensure_ascii=False) `
[23:18:33] <stewie925> will try printing it out this way
[23:19:02] <stewie925> IT WORKS!
[23:19:06] <stewie925> thanks, Wobble!
[23:19:57] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:20:37] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 240 seconds)
[23:20:37] *** beli6148 is now known as beli6147
[23:21:39] *** Parts: paulrf (~paulrf@195.181.171.239) (Leaving)
[23:21:42] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[23:22:29] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 256 seconds)
[23:22:32] *** Joins: rwb (~augh@theguntretort.com)
[23:23:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:24:09] *** rwb is now known as rb
[23:25:27] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[23:27:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[23:27:17] *** Joins: raxor2k (~raxor2k@78.158.254.45)
[23:27:38] *** Joins: stonkey (~stonkey@user/stonkey)
[23:27:43] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[23:28:20] *** Quits: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:28:43] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:30:07] *** Joins: greedom (~greedom@p200300de671109004a1b0504f5388bd1.dip0.t-ipconnect.de)
[23:30:14] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:30:25] *** Quits: ketiv (~ketiv@92.40.192.83.threembb.co.uk) (Ping timeout: 256 seconds)
[23:31:01] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 240 seconds)
[23:31:45] *** Joins: paulrf (~paulrf@195.181.171.239)
[23:31:59] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[23:33:28] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[23:34:25] *** Quits: rb (~augh@theguntretort.com) (Remote host closed the connection)
[23:35:16] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 268 seconds)
[23:35:53] *** Joins: rwb (~augh@theguntretort.com)
[23:35:59] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Remote host closed the connection)
[23:36:06] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[23:36:15] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[23:39:15] *** Joins: Betal (~Betal@user/betal)
[23:40:03] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[23:41:55] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:42:00] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[23:42:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[23:43:01] *** Quits: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[23:43:17] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:43:26] *** Quits: georgios (~georgios@user/georgios) (Remote host closed the connection)
[23:44:31] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:44:51] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[23:45:34] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:183c:628d:c742:39a8)
[23:46:59] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[23:47:25] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[23:47:55] *** Joins: matsaman (~matsaman@user/matsaman)
[23:49:37] *** Quits: Bkid (~Bkid@user/bkid) (Ping timeout: 250 seconds)
[23:49:46] *** Quits: dubitant (~dubitant@84.126.222.41.dyn.user.ono.com) (Quit: dubitant)
[23:51:19] *** Joins: parv (~quass@user/parv)
[23:52:05] *** Joins: krupp (~svarten@m37-2-27-184.cust.tele2.se)
[23:52:56] *** Joins: luigibu (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[23:54:39] *** Joins: audiobirb (~audio@user/audio)
[23:56:01] *** Joins: blcyber (~blcyber@216.74.235.178)
[23:56:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:57:09] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:57:16] *** Joins: rootroot (~rootroot@p2003000631e4a74160399822ac8108ba.dip0.t-ipconnect.de)
[23:58:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:59:10] *** Quits: rootroot (~rootroot@p2003000631e4a74160399822ac8108ba.dip0.t-ipconnect.de) (Client Quit)
