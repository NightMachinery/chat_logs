[00:11:57] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[00:39:14] *** Joins: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net)
[01:04:28] *** Quits: Leone (~Leo@216.154.21.17) ()
[01:39:13] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[01:39:41] *** Joins: pony (~ed@101.100.135.45)
[02:14:13] *** Joins: bjorkintosh (~bjork@2600:1702:6a0:af0:55a7:a0fc:48ed:3860)
[02:17:54] <bjorkintosh> so I was listening to an explanation of graph databases and their advantages over relational databases...
[02:18:09] <bjorkintosh> and it sounded a LOT like simply using prolog.
[02:18:14] <bjorkintosh> am I mistaken?
[02:21:41] *** Joins: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net)
[02:35:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[02:44:16] *** Quits: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net) (Ping timeout: 252 seconds)
[02:58:31] *** Quits: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se) (Ping timeout: 252 seconds)
[04:59:29] *** Joins: serpent (~Serpent77@90-156-31-193.internetia.net.pl)
[05:00:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Ping timeout: 265 seconds)
[05:04:06] *** Quits: brettgilio (~brettgili@x-node.gq) (Read error: Connection reset by peer)
[05:04:14] *** Joins: brettgilio (~brettgili@x-node.gq)
[05:04:58] *** Quits: pbone (~pbone@159.196.16.104) (Ping timeout: 268 seconds)
[05:05:14] *** Joins: pbone (~pbone@159.196.16.104)
[05:28:10] *** Quits: jealousmonk (~user@2804:431:e7c4:7e2f:f785:531d:f45d:57b8) (Ping timeout: 252 seconds)
[05:39:24] *** Quits: cmsmcq (~cmsmcq@65.19.36.46) (Quit: cmsmcq)
[05:42:41] *** Joins: cmsmcq (~cmsmcq@h166.18.187.173.dynamic.ip.windstream.net)
[07:05:21] *** Quits: pony (~ed@101.100.135.45) (Quit: WeeChat 3.0.1)
[07:06:08] *** Joins: pony (~ed@101.100.135.45)
[07:19:30] *** Quits: cmsmcq (~cmsmcq@h166.18.187.173.dynamic.ip.windstream.net) (Quit: cmsmcq)
[07:21:35] *** Joins: cmsmcq (~cmsmcq@h166.18.187.173.dynamic.ip.windstream.net)
[07:33:17] *** Joins: jealousmonk (~user@2804:431:e7c5:3f2:5f6e:d4b3:6e97:d2df)
[07:34:50] *** Quits: jealousmonk (~user@2804:431:e7c5:3f2:5f6e:d4b3:6e97:d2df) (Client Quit)
[07:46:35] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[08:48:04] *** Quits: jbalint (~jbalint@097-090-242-068.res.spectrum.com) (Ping timeout: 265 seconds)
[09:14:35] *** Joins: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net)
[09:16:46] *** Joins: no-n (~ed@101.100.135.45)
[09:22:01] *** Quits: pony (~ed@101.100.135.45) (Quit: WeeChat 3.0.1)
[09:22:07] *** no-n is now known as pony
[09:23:49] *** Joins: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[10:04:38] *** Quits: pony (~ed@101.100.135.45) (*.net *.split)
[10:04:38] *** Quits: cmsmcq (~cmsmcq@h166.18.187.173.dynamic.ip.windstream.net) (*.net *.split)
[10:04:38] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (*.net *.split)
[10:04:38] *** Quits: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com) (*.net *.split)
[10:04:39] *** Quits: mzan (~quassel@mail.asterisell.com) (*.net *.split)
[10:04:39] *** Quits: Balooga_ (sid407689@lymington.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[10:04:39] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (*.net *.split)
[10:04:39] *** Quits: tolja (tolja@kapsi.fi) (*.net *.split)
[10:04:39] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[10:12:35] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:422d:8662:a5f5:7f36)
[10:26:23] *** Joins: cmsmcq (~cmsmcq@h166.18.187.173.dynamic.ip.windstream.net)
[10:26:23] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[10:26:23] *** Joins: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com)
[10:26:23] *** Joins: mzan (~quassel@mail.asterisell.com)
[10:26:23] *** Joins: Balooga_ (sid407689@lymington.irccloud.com)
[10:26:23] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[10:26:23] *** Joins: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder)
[10:26:23] *** Joins: tolja (tolja@kapsi.fi)
[10:26:23] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[10:28:28] *** Quits: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net) (Ping timeout: 265 seconds)
[10:28:45] *** Quits: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com) (Max SendQ exceeded)
[10:29:09] *** Joins: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com)
[10:34:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:31a5:effc:63aa:3481)
[10:34:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:31a5:effc:63aa:3481) (Changing host)
[10:34:13] *** Joins: skapata (~Skapata@user/skapata)
[11:05:49] *** Joins: pony (~ed@101.100.135.45)
[11:18:44] *** Quits: pony (~ed@101.100.135.45) (Quit: WeeChat 3.0.1)
[11:20:40] *** Joins: pony (~ed@101.100.135.45)
[12:10:43] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:30:28] *** Quits: tolja (tolja@kapsi.fi) (Ping timeout: 252 seconds)
[13:30:36] *** Joins: tolja (tolja@kapsi.fi)
[14:31:10] <ccx_> bjorkintosh: FWIU while you can use recursive queries with modern SQL servers it didn't use to be commonplace nor efficient.
[14:33:24] <ccx_> There are relational approaches that do use recursion and nested data types like D from Third Manifesto. Datalog and *kanren are also relational in design yet very unlike traditional SQL.
[14:34:13] <ccx_> I guess the magic sauce is as usual indexing and query optimization. Which works differently for different kinds of queries.
[14:44:10] *** Joins: rogersm_ (~rogersm@90.166.177.48)
[14:50:14] *** serpent is now known as Serpent7776
[15:09:03] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:09:19] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Client Quit)
[15:09:35] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:23:53] <bjorkintosh> oh excellent.
[15:24:20] <bjorkintosh> thanks ccx_.
[15:37:44] <ccx_> bjorkintosh: I like pointing out the implementation of Prolog in PostgreSQL (not as a language extension, that also exists, but rather different syntax for Prolog that is valid SQL with recursive queries). Can't be arsed to look it up right now but it's good fun.
[16:35:29] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Remote host closed the connection)
[18:52:04] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:422d:8662:a5f5:7f36) (Quit: WeeChat 2.8)
[19:13:55] <aindilis_> bjorkintosh: (Incidentally, I thought all SQL queries were polynomial time).  Also, say one is trying to build a todo system.  you could say: task('do X'). task('do Y').  depends('do X','do Y').  Or you could say hasNL(1,'do X'). hasNL(2,'do Y').  depends(1,2).
[19:14:01] <aindilis_> As I understand it, it may be easier to build such a todo system using ?RDF? quads, i.e. using a Graph datastructure (like the SOAR Cognitive Architecture does).  I assume GraphDBs are similar to RDF.
[19:14:08] <aindilis_> I was thinking what would be cool would be the best of both Prolog + quads.  So I don't think GraphDBs are super similar Prolog.  Another thing I heard, if GraphDB = NoSQL, is that NoSQL and SQL are the same category-theoretic objects,
[19:14:10] <aindilis_> but with the functor reversed, or some such thing.  Apologies for my incoherence.
[19:18:45] <aindilis_> https://queue.acm.org/detail.cfm?id=1961297 <- NoSQL/SQL Category theory?
[19:21:10] <tolja> ccx_: can you post some links about those postges stuff? Can't seem to find any myself
[19:21:28] <aindilis_> Also, I have a DB for mapping between Prolog <-> Relational DBs.  It's not super straightforward. https://github.com/aindilis/freekbs2/blob/master/freekbs2-schema.sql
[19:23:51] <aindilis_> I'm working on implementing a SWIPL ODBC interface to this schema.
[19:24:12] <aindilis_> https://github.com/aindilis/data-integration
[19:32:44] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[20:14:28] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:16:10] *** Joins: econo (uid147250@user/econo)
[20:32:39] *** Quits: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net) (Remote host closed the connection)
[20:33:25] *** Joins: PrologMUD (~PrologMUD@c-98-232-203-68.hsd1.wa.comcast.net)
[20:36:45] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 268 seconds)
[20:36:54] *** Joins: bleb (~cm@user/bleb)
[20:42:29] *** Joins: pelle (~pelle@83-94-28-55-cable.dk.customer.tdc.net)
[21:57:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[22:15:52] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Quit: Leaving)
[22:19:45] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:27:05] *** Quits: rogersm_ (~rogersm@90.166.177.48) (Quit: Leaving...)
[22:27:23] *** Joins: rogersm (~rogersm@90.166.177.48)
[22:36:03] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[22:45:07] *** Quits: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:17] *** Joins: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com)
[23:53:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
