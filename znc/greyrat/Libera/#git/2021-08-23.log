[00:06:31] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:10:23] *** Joins: dontyouloveshort (~julius@ip5f5bc232.dynamic.kabel-deutschland.de)
[00:12:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:13:24] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:14:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:14:31] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:15:48] *** Joins: molt (~molt@79.140.150.21)
[00:21:19] *** Quits: dontyouloveshort (~julius@ip5f5bc232.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[00:29:51] *** Joins: Lenny (~Lenny@148.103.43.67)
[00:31:13] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[00:31:40] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[00:32:36] *** Joins: Drek45 (~jrept371@129.59.122.18)
[00:33:25] *** Quits: rahl (~rahl@102.114.91.219) (Ping timeout: 252 seconds)
[00:35:18] *** Joins: rahl (~rahl@102.114.5.212)
[00:35:23] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[00:35:46] *** Joins: subopt (~subopt@2603-8081-2302-459a-1dd8-02ef-cb71-05d4.res6.spectrum.com)
[00:36:16] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[00:36:25] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[00:38:03] *** Quits: furrymcgee (~devuan@31.179.186.66) (Remote host closed the connection)
[00:38:37] *** Joins: JackRuby (~textual@22.105.128.77.rev.sfr.net)
[00:39:20] *** Joins: arcatech (~arcatech@user/arcatech)
[00:40:16] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[00:41:28] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:61f7:d7e2:289c:493b)
[00:42:46] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 252 seconds)
[00:44:43] *** Joins: SuperLag (~akulbe@user/superlag)
[00:46:39] *** Joins: pulse (~pulse@user/pulse)
[00:49:42] <baltazar> ikke: it's the failglob shell option I think
[00:49:58] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[00:50:13] <baltazar> if you unset it, patterns that don't match any files will be printed unchanged
[00:56:30] *** Joins: reset (~reset@user/reset)
[00:57:08] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[00:57:44] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[01:00:09] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Remote host closed the connection)
[01:00:29] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[01:06:11] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[01:07:14] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[01:08:05] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:09:15] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:10:02] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Client Quit)
[01:11:19] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Ping timeout: 246 seconds)
[01:12:38] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:15:23] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[01:16:14] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[01:16:25] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[01:20:10] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 252 seconds)
[01:22:01] *** Joins: Samian (~Sami@174.27.107.153)
[01:23:37] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: ciao bella)
[01:26:19] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[01:29:14] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 250 seconds)
[01:30:32] *** Quits: jrofd (~test@185.192.69.14) (Ping timeout: 250 seconds)
[01:31:17] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[01:34:14] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:803b:ebc8:891d:8b3a) (Quit: So as you can see from this flowchSQUIRREL!!)
[01:42:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[01:43:38] *** Joins: jrofd (~test@85.203.36.23)
[01:47:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[01:47:31] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[01:47:32] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[01:47:34] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:48:09] <^-^hi> can't microsoft just inject code into what we clone from github?
[01:48:12] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:21] *** Joins: venue (~venue@user/venue)
[01:48:26] *** Joins: dontyouloveshort (~julius@ip5f5bc232.dynamic.kabel-deutschland.de)
[01:48:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:53] <^-^hi> like add an extra commit for this specific ip when it downloads. who is gonna check.
[01:49:19] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[01:49:20] <^-^hi> (last period should have been a question mark)
[01:49:47] *** Quits: JackRuby (~textual@22.105.128.77.rev.sfr.net) (Quit: Again ... I forgot to turn on amphetamine on my macbook)
[01:49:49] *** Gustavo6046_ is now known as Gustavo6046
[01:51:54] <pasky> ^-^hi: yes they could, but only when really relying on noone doing even a cursory check; for example, if they lie to you once, they will have to keep lying to you in every subsequent git pull (and the lie will become bigger and bigger since they will have to be rewriting the whole future history since your original pull)
[01:52:40] <pasky> ^-^hi: since it's so easy to uncover, this would most likely make this an unlikely attack since the reputational risk for github is absolutely huge
[01:54:48] <^-^hi> pasky:hmm... yes but in a lot of cases people just clone, build and discard it rather than pulling to the directory again and again
[01:55:15] <pasky> another sneaky thing they could do is add an extra commit to the history while a merge request is merged; this would make it part of history for everyone who pulls it from the repo (raising the risk of uncovering) but if done cleverly it might be hard to notice (lowering the risk) and more importantly create some plausible deniability (they can say the original MR author is at fault)
[01:55:23] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[01:56:23] <pasky> ^-^hi: yes, if you can identify such clients reliably then that'd make it hard to notice in many scenarios
[01:56:27] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[01:56:43] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[01:56:44] <pasky> git allows you to protect against this by using signed tags; they are rarely used in practice though
[01:56:54] <^-^hi> for example let's say someone has some control of github, then they just add one commit on the top when it is the Nix server that builds binaries that is cloning it
[01:57:07] <^-^hi> and that code is shown for nobody else
[01:57:13] <pasky> yes
[01:57:19] <pasky> that's also why the reputational risk is so huge :)
[01:57:25] <pasky> people trust github not to do it
[01:58:21] <^-^hi> who is gonna check the binary integrity? or the source in that little time that it was being downloaded?
[01:58:35] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[01:58:58] *** Joins: ano (~weechat@user/ano)
[02:01:04] <pasky> ^-^hi: just the paranoid people :)
[02:01:43] <^-^hi> dude even paranoid people wont go and read the entire source for every time it fetches to build
[02:02:33] <^-^hi> maybe we should run a service that constantly makes hashes of github repo contents, so people can get sha256sums from an independent source and check against it.
[02:02:33] <pasky> they won't, but they might rely on just signed tags; or hardcode the commit id of what they want to build; or cross-check the commit id with some other source
[02:02:59] <pasky> see, the commit id is actually prcisely the hash of github repo contents
[02:03:07] *** Joins: PluckyDucky (~PluckyDuc@193.180.57.75)
[02:03:10] <pasky> you are talking about adding an extra commit
[02:03:33] <pasky> which is possible but easy to spot precisely because you will have an additional commit; you cannot modify older commits with known ids
[02:04:09] <^-^hi> hmm... so i would specify the commit id next time
[02:04:23] <pasky> yes
[02:05:25] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[02:12:08] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 250 seconds)
[02:19:11] *** Quits: Drek45 (~jrept371@129.59.122.18) (Quit: Leaving)
[02:20:24] *** Joins: aac (~AAC@2001:8a0:6cc5:7e01:e50f:437e:5517:edd2)
[02:20:36] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[02:22:54] *** Joins: autistic (~linguist@170.84.56.192)
[02:23:37] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 248 seconds)
[02:24:59] *** Quits: autistic (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[02:26:15] *** Joins: autistic (~linguist@170.84.56.192)
[02:28:05] <Lenny> Writing commits in present tense vs past tense? Which style should I stick with?
[02:30:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[02:31:09] <pasky> git project itself prefers present tense (imperative)
[02:33:07] <aac> hey. Where can i access git scopes?
[02:33:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:33:12] <aac> sorry github
[02:35:23] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[02:36:25] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[02:36:42] <pasky> aac: consider asking at #github
[02:36:53] <aac> sorru no need just figured it out :)
[02:37:12] <aac> altough interest solutions, just generate another token
[02:38:16] *** Quits: autistic (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[02:39:30] *** Joins: autistic (~linguist@170.84.56.192)
[02:40:01] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Remote host closed the connection)
[02:40:53] *** Joins: TehBrian (~TehBrian@2600:6c4a:7d00:1e7b:e526:ea00:ff37:b1c1)
[02:41:05] *** Quits: TehBrian (~TehBrian@2600:6c4a:7d00:1e7b:e526:ea00:ff37:b1c1) (Client Quit)
[02:41:24] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[02:42:59] *** Quits: kingjulian (~kingjulia@41.1.76.76) (Ping timeout: 268 seconds)
[02:45:23] <xx> is https://github.com/tj/git-extras legit or should I avoid using it and instead learn to use the proper git commands?
[02:47:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[02:47:40] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 250 seconds)
[02:50:26] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[02:51:45] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[02:53:19] <nedbat> xx: i would recommend learning the "proper" commands first
[02:54:29] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:54:33] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 248 seconds)
[02:55:13] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:58:39] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[02:59:44] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[03:01:14] <xx> ok. I am struggling with very common cases. Such as when I want to drop all changes I've made to a file since that file was last committed, I'd instictively think `git restore myfile.txt` but it doesn't do what I'd think it should do
[03:03:52] *** Quits: aac (~AAC@2001:8a0:6cc5:7e01:e50f:437e:5517:edd2) (Quit: aac)
[03:03:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[03:04:02] <pasky> oh interesting I actually missed `git restore` exists now; I'd use `git checkout` for this purpose
[03:04:21] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:08:59] *** Joins: gast0n (~g4570n@user/gast0n)
[03:09:57] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[03:10:43] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:11:31] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[03:13:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[03:19:27] *** Joins: brunodOut (~linguist@170.84.56.192)
[03:19:43] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[03:23:39] *** Quits: autistic (~linguist@170.84.56.192) (Ping timeout: 258 seconds)
[03:27:06] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[03:31:04] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[03:36:10] *** Quits: kobaz_ (~kobaz@cpe-74-67-47-183.nycap.res.rr.com) (Ping timeout: 240 seconds)
[03:39:43] *** Quits: dontyouloveshort (~julius@ip5f5bc232.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[03:43:22] *** Joins: Drek45 (~jrept371@102.129.153.207)
[03:46:16] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[03:49:19] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[03:49:32] *** Joins: JanC (~janc@user/janc)
[03:50:22] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[03:52:41] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Ping timeout: 248 seconds)
[03:53:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[03:54:32] <nedbat> xx: i would have thought "restore" was the right thing.  What are you seeing it do?
[03:55:47] <xx> nedbat: I'm seeing it not do anything at all
[03:56:08] <xx> I just copied over the file from backup anyway
[03:56:32] <xx> I just keep making a backup of the *entire* git repo before I run *any* git command (except status), and it is starting to take up a lot of space...
[03:56:55] <xx> so I need to learn git properly, or find tooling that makes git easier
[03:57:04] <nedbat> xx: I just tried git restore, and it did exactly what you wanted.  Can you give us more details?
[03:57:19] <nedbat> xx: are you sure you are using the right file path?
[03:57:20] <xx> not anymore, since I restored from backup
[03:58:20] *** Quits: V (~v@anomalous.eu) (Ping timeout: 256 seconds)
[03:59:31] <nedbat> xx: can you try again? This is very odd
[04:00:22] <xx> git was probably in some weird state, such as parts of the file being in an ongoing interactive add, or a rebase was in progress as well, or some part of the file was committed while rest was not
[04:00:28] <xx> I tend to break git a lot...
[04:01:03] <nedbat> xx: i'd like to help, but "welp, I tend to break things!
[04:01:09] <nedbat> might not be the best approach :)
[04:01:15] <xx> I'll ask when I break something again :)
[04:02:45] <pasky> git restore by default restores from the index
[04:02:52] <pasky> rather than HEAD (the last commit)
[04:03:02] <pasky> so if it didn't fully restore in the middle of interactive add, that checks out
[04:09:34] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 250 seconds)
[04:11:50] *** Joins: sgn (~sgn@user/sgn)
[04:21:09] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 258 seconds)
[04:24:18] *** Quits: brunodOut (~linguist@170.84.56.192) (Ping timeout: 250 seconds)
[04:24:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:26:02] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:28:11] *** Quits: Samian (~Sami@174.27.107.153) (Read error: Connection reset by peer)
[04:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[04:30:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[04:30:21] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[04:30:42] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[04:33:32] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:45:15] *** Joins: igemnace (~ian@user/igemnace)
[04:47:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:51:11] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:03:01] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:07:07] *** Quits: fnurkla (~fnurkla@91.193.4.135) (Quit: WeeChat 3.2)
[05:07:21] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 248 seconds)
[05:09:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[05:10:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[05:22:57] *** Quits: em (~em@li247-180.members.linode.com) (Changing host)
[05:22:57] *** Joins: em (~em@user/emnode)
[05:33:44] *** Joins: n000g (~NRG@user/nrg)
[05:34:26] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 268 seconds)
[05:36:32] *** Joins: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac)
[05:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[05:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[06:17:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[06:19:49] *** Joins: thiago (~thiago@c-73-11-93-254.hsd1.or.comcast.net)
[06:20:41] *** Joins: thiago_ (~thiago@2601:1c0:4501:635c:6e7c:5b7c:c284:db61)
[06:21:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[06:24:48] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:29:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[06:30:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[06:30:21] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[06:30:49] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[06:36:51] *** Joins: asbachb (~asbachb@190.148.209.14)
[06:38:41] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:39:55] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:43:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[06:43:09] *** Joins: keypushe- (keypusher@user/keypusher)
[06:43:34] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[06:46:22] *** keypushe- is now known as keypusher
[06:47:19] *** Quits: Lenny (~Lenny@148.103.43.67) (Ping timeout: 246 seconds)
[06:47:43] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[06:48:27] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:48:27] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (cadmium.libera.chat (Nickname regained by services)))
[06:48:27] *** finn_elija is now known as FinnElija
[06:52:22] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[06:55:27] *** Quits: thiago_ (~thiago@2601:1c0:4501:635c:6e7c:5b7c:c284:db61) (Quit: Lost terminal)
[06:57:42] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[07:02:21] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[07:04:36] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:04:56] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[07:06:33] *** Joins: thiago_ (~thiago@2601:1c0:4501:635c:4e6:7044:24b6:781c)
[07:07:24] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[07:08:40] *** Quits: thiago (~thiago@c-73-11-93-254.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:09:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[07:10:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[07:11:29] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[07:22:40] *** Quits: asbachb (~asbachb@190.148.209.14) (Ping timeout: 246 seconds)
[07:24:00] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 258 seconds)
[07:24:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[07:26:21] *** Joins: Vonter (~Vonter@user/vonter)
[07:27:54] *** Joins: bin101 (~bin101@user/bin101)
[07:48:32] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[07:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[07:52:03] *** Quits: ham (~ham4@user/ham) (Ping timeout: 276 seconds)
[08:05:12] *** Joins: Samian (~Sami@174.27.107.153)
[08:21:35] *** Joins: ByteHackr (~sanroy@43.252.250.83)
[08:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[08:30:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[08:35:20] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:36:01] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[08:36:09] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[08:36:48] *** Joins: gnoo (~gnoo@user/gnoo)
[08:38:14] *** Quits: pizdets (~pizdets@183.182.110.111) (Ping timeout: 250 seconds)
[08:39:12] *** Joins: pizdets (~pizdets@183.182.110.30)
[08:42:09] *** Joins: durham (~durham@45-30-94-113.lightspeed.sntcca.sbcglobal.net)
[08:42:31] *** Quits: durham (~durham@45-30-94-113.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[08:42:53] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[08:43:32] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:46:57] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[08:49:59] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[08:50:37] *** Joins: durham (~durham@2620:10d:c090:400::5:d1bc)
[09:01:04] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:01:38] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[09:03:05] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:04:24] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:04:57] *** Joins: vishal (~vishal@fedora/vishal)
[09:05:44] *** Joins: vysn (~vysn@user/vysn)
[09:06:16] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:08:08] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[09:09:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[09:10:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[09:13:11] *** Joins: sandra (~snan@chicken/contributor/snan)
[09:14:05] *** Joins: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com)
[09:15:28] *** Joins: yaymukun1 (~yaymukund@185.21.216.136)
[09:15:30] *** Joins: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com)
[09:15:32] *** Joins: ario_ (~ario@159.65.220.102)
[09:15:35] *** Joins: Walex2 (~Walex@smtp.sabi.co.uk)
[09:15:37] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[09:15:37] *** Quits: charly (~charly@2a01cb040a52f90000000000abac0043.ipv6.abo.wanadoo.fr) (*.net *.split)
[09:15:37] *** Quits: mjorgensen_ (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc) (*.net *.split)
[09:15:37] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[09:15:37] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:15:37] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:15:37] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[09:15:37] *** Quits: marc-o (e23c17097e@vps71629.serveur-vps.net) (*.net *.split)
[09:15:37] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:15:37] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[09:15:37] *** Quits: bartman (~bartman@up.jukie.net) (*.net *.split)
[09:15:37] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:37] *** Quits: Mocramis_ (~mocramis@dalaran.sceen.net) (*.net *.split)
[09:15:37] *** Quits: Natrick (~thelounge@vmd42932.contaboserver.net) (*.net *.split)
[09:15:37] *** Quits: trilobite (~Malka@user/malka) (*.net *.split)
[09:15:37] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[09:15:37] *** Quits: Walex (~Walex@SMTP.sabi.co.UK) (*.net *.split)
[09:15:37] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[09:15:37] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[09:15:37] *** Quits: yaymukund (~yaymukund@user/yaymukund) (*.net *.split)
[09:15:37] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:15:37] *** Joins: dmvrtx_ (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[09:15:39] *** Joins: sco1_ (~sco1@charon.whatbox.ca)
[09:15:39] *** Joins: trilobite0 (~Malka@ns300725.ip-91-121-65.eu)
[09:15:39] *** Joins: mattf_ (~mattf@li908-138.members.linode.com)
[09:15:40] *** Joins: charly_ (~charly@2a01cb040a52f90000000000abac0043.ipv6.abo.wanadoo.fr)
[09:15:41] *** Joins: Natrick6 (~thelounge@vmd42932.contaboserver.net)
[09:15:41] *** Joins: _Mocramis (~mocramis@dalaran.sceen.net)
[09:15:41] *** Joins: Anarchic` (~Anarchic@getlegit.co.uk)
[09:15:43] *** Joins: mjorgensen (mjorgensen@2600:3c00::f03c:92ff:fe80:1ccc)
[09:15:45] *** Joins: glider_ (~glider@user/glider)
[09:15:46] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[09:15:47] *** Joins: marc-o (e23c17097e@vps71629.serveur-vps.net)
[09:15:49] *** Joins: bartman` (~bartman@up.jukie.net)
[09:15:49] *** Joins: n-st- (~n-st@user/n-st)
[09:15:55] *** Joins: f-chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:15:59] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[09:16:21] *** f-chymera is now known as chymera
[09:16:25] *** Joins: mikeputnam (~mikeputna@wilug/mikeputnam)
[09:16:31] *** n-st- is now known as n-st
[09:18:50] *** Quits: lechner (~lechner@debian/lechner) (*.net *.split)
[09:18:50] *** Quits: vodkra (~vodkra@user/vodkra) (*.net *.split)
[09:18:50] *** Quits: ndim (hun@moooo.n-dimensional.de) (*.net *.split)
[09:18:50] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:18:50] *** Quits: j416 (~j416@user/j416) (*.net *.split)
[09:18:50] *** Quits: dslegends (~dslegends@user/dslegends) (*.net *.split)
[09:18:50] *** Quits: staceee (~stacy@51.158.78.158) (*.net *.split)
[09:18:50] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (*.net *.split)
[09:18:50] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[09:18:50] *** Quits: Techcable_ (~Techcable@168.235.93.147) (*.net *.split)
[09:18:50] *** Quits: robink (~quassel@user/robink) (*.net *.split)
[09:18:50] *** Quits: preisi (~preisi@prei.si) (*.net *.split)
[09:18:50] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[09:18:50] *** Quits: thelounge6619 (~thelounge@ip202.ip-51-178-215.eu) (*.net *.split)
[09:18:50] *** Quits: davve_ (davve@bsd.douchedata.com) (*.net *.split)
[09:18:50] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[09:18:50] *** Quits: Yorick_ (znc@vps.freegamehosting.eu) (*.net *.split)
[09:18:50] *** Quits: Muzer (~muzer@tim32.org) (*.net *.split)
[09:18:50] *** Quits: supernovah (~supernova@mail.ijk.nz) (*.net *.split)
[09:18:50] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:18:50] *** Quits: de-vri-es (~de-vri-es@voyager.de-vri.es) (*.net *.split)
[09:18:50] *** Quits: mika (~mika@odysseus.grml.info) (*.net *.split)
[09:18:50] *** Quits: bboles (~bboles@64.94.212.195) (*.net *.split)
[09:18:50] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[09:18:50] *** Quits: themill (~stuart@debian/stuart) (*.net *.split)
[09:18:50] *** Quits: xaxas (~quassel@nebulosa.jtopia.org) (*.net *.split)
[09:18:53] *** Joins: davve (davve@bsd.douchedata.com)
[09:18:57] *** Joins: supernov1h (~supernova@mail.ijk.nz)
[09:18:58] *** Joins: Riviera_ (Riviera@user/riviera)
[09:18:58] *** Joins: vodkra_ (~vodkra@user/vodkra)
[09:19:02] *** Joins: ndim (hun@moooo.n-dimensional.de)
[09:19:02] *** Joins: mika (~mika@odysseus.grml.info)
[09:19:03] *** Joins: robink (~quassel@groontosotehill.creosotehill.org)
[09:19:04] *** Joins: de-vri-es (~de-vri-es@voyager.de-vri.es)
[09:19:05] *** Quits: robink (~quassel@groontosotehill.creosotehill.org) (Changing host)
[09:19:05] *** Joins: robink (~quassel@user/robink)
[09:19:07] *** Joins: thelounge661 (~thelounge@ip202.ip-51-178-215.eu)
[09:19:13] *** Quits: PluckyDucky (~PluckyDuc@193.180.57.75) (Ping timeout: 246 seconds)
[09:19:16] *** Joins: preisi (~preisi@80.241.218.130)
[09:19:17] *** Joins: push-f (~martin@push-f.com)
[09:19:17] *** Joins: themill_ (~stuart@debian/stuart)
[09:19:19] *** Joins: Bitflux (~byte@byteflux.net)
[09:19:19] *** Joins: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de)
[09:19:22] *** Joins: Yorick- (znc@vps.freegamehosting.eu)
[09:19:25] *** Joins: lechner (~lechner@letbox-vps.us-core.com)
[09:19:28] *** Joins: xaxas (~quassel@nebulosa.jtopia.org)
[09:19:28] *** Joins: dslegends (~dslegends@user/dslegends)
[09:19:29] *** Quits: xcm_ (~xcm@static.90.45.69.159.clients.your-server.de) (Signing in (xcm_))
[09:19:29] *** Joins: xcm_ (~xcm@user/xcm)
[09:19:36] *** Quits: lechner (~lechner@letbox-vps.us-core.com) (Changing host)
[09:19:36] *** Joins: lechner (~lechner@debian/lechner)
[09:19:42] *** Joins: staceee_ (~stacy@51.158.78.158)
[09:19:47] *** Joins: Techcable (~Techcable@168.235.93.147)
[09:19:57] *** Joins: bboles (~bboles@64.94.212.195)
[09:19:57] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[09:20:43] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:20:44] *** Quits: durham (~durham@2620:10d:c090:400::5:d1bc) (Read error: Connection reset by peer)
[09:20:46] *** Joins: j416 (~j416@user/j416)
[09:22:30] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:22:38] *** Joins: durham (~durham@2620:10d:c090:400::5:d1bc)
[09:24:36] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[09:28:02] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[09:29:26] *** Joins: Muzer (~muzer@tim32.org)
[09:31:22] *** Quits: subopt (~subopt@2603-8081-2302-459a-1dd8-02ef-cb71-05d4.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:35:30] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:38:39] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[09:38:51] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[09:38:56] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 258 seconds)
[09:39:21] *** Quits: Drek45 (~jrept371@102.129.153.207) (Ping timeout: 248 seconds)
[09:40:59] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:41:21] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[09:42:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 248 seconds)
[09:43:32] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 258 seconds)
[09:45:37] *** Joins: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br)
[09:47:52] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[09:48:42] *** Joins: jim (~jim@about/linux/staff/jim)
[09:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[09:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[09:51:47] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:52:26] *** Joins: ham (~ham4@user/ham)
[09:54:48] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Client Quit)
[09:55:12] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:58:20] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:58:36] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[09:59:18] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[10:00:27] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:05:07] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[10:06:38] *** Quits: hbautista_ (~hbautista@187.171.122.100) (Ping timeout: 250 seconds)
[10:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:12:30] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:13:40] *** Quits: thiago_ (~thiago@2601:1c0:4501:635c:4e6:7044:24b6:781c) (Ping timeout: 240 seconds)
[10:14:37] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[10:14:48] *** Joins: tristan__ (~tristan@223.62.212.239)
[10:15:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[10:15:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:18:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:20:13] *** Quits: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br) (Remote host closed the connection)
[10:27:06] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[10:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[10:30:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[10:31:16] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[10:32:03] *** Parts: PinealGlandOptic (~PinealGla@37.115.210.35) ()
[10:32:53] *** Joins: codebam (~codebam@user/codebam)
[10:35:59] *** Joins: dsrt^ (~dsrt@12.16.129.111)
[10:38:34] *** Quits: rwp (~invalid@havoc.proulx.com) (Ping timeout: 240 seconds)
[10:50:48] *** Joins: rwp (~invalid@havoc.proulx.com)
[11:02:10] <osse> ambiguous use of the phrase "checks out"
[11:06:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:06:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:07:48] *** Joins: codebam (~codebam@user/codebam)
[11:08:10] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[11:09:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[11:10:17] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:d5b6:1cec:7da8:af3e)
[11:10:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[11:11:36] *** Quits: igemnace (~ian@user/igemnace) (Read error: Connection reset by peer)
[11:13:10] *** Joins: igemnace (~ian@user/igemnace)
[11:14:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[11:14:40] *** Joins: natrys (~natrys@user/natrys)
[11:16:10] *** Quits: jazzy (~jaziz@2600:380:4533:7020:c055:7f23:886:f4ac) (Ping timeout: 240 seconds)
[11:18:01] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[11:18:35] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:20:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[11:20:10] *** Quits: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:21:20] *** Quits: mbalmer_ (~mbalmer@2001:67c:1090:5073:f8d1:1ba0:2895:c45b) (Quit: Leaving...)
[11:22:02] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[11:30:47] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:31:42] *** Joins: palasso (~palasso@user/palasso)
[11:32:40] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:33:14] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[11:34:45] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:12] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:42:06] *** Joins: PluckyDucky (~PluckyDuc@193.180.57.75)
[11:43:38] *** Joins: sQVe (~sQVe@user/sqve)
[11:48:12] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:49:20] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[11:50:22] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[11:51:02] *** Joins: noidea (~noidea@user/noidea)
[11:51:27] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[11:56:18] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[11:57:12] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[12:01:42] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 268 seconds)
[12:03:07] *** Quits: tristan__ (~tristan@223.62.212.239) (Ping timeout: 240 seconds)
[12:10:03] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[12:11:41] *** Quits: durham (~durham@2620:10d:c090:400::5:d1bc) (Read error: Connection reset by peer)
[12:11:46] *** Joins: durham_ (~durham@2620:10d:c090:400::5:d1bc)
[12:15:17] *** Joins: tristan__ (~tristan@223.62.172.102)
[12:16:01] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:6fa4:9aff:db69:8cff) (Remote host closed the connection)
[12:29:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[12:30:00] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[12:30:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[12:30:34] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[12:30:40] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[12:31:27] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:34:53] *** Joins: cadmio (~cadmio@rm-19-0-165.service.infuturo.it)
[12:34:55] <cadmio> Hello
[12:38:42] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[12:40:28] <cadmio> remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
[12:40:40] <cadmio> I cannot update anymore the repository through the command line
[12:41:30] <tuxifreund> use ssh instead
[12:41:41] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:42:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:42:16] <[twisti]> or a personal access token
[12:42:27] <tuxifreund> or that, yes
[12:43:11] <canton7> cadmio, https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token
[12:44:08] <cadmio> I was reading this: https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
[12:44:34] <canton7> Or you can use an SSH key, yep
[12:45:02] <cadmio> have I to create an SSH key for each repository?
[12:45:20] <tuxifreund> no, just one for your account
[12:45:29] <tuxifreund> and then add it to the account
[12:46:04] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[12:47:07] *** Quits: tristan__ (~tristan@223.62.172.102) (Ping timeout: 252 seconds)
[12:47:35] *** Joins: tristan__ (~tristan@223.38.29.249)
[12:48:19] <[twisti]> ssh keys are like regular keys
[12:48:51] <ikke> Not really, they're a public/private key-pair
[12:49:30] <[twisti]> you can use one key for everything in your life, but that comes with exactly the same cost as actually using one key for everything in your life: if its lost, you lose access to EVERYTHING, if it gets out, whoever finds it will have access to EVERYTHING, and if you want to share access to one repo, you have to share access to EVERYTHING ;)
[12:49:55] <cadmio> when I try to ssh-add ~/.ssh/id_ed25519 I get Could not open a connection to your authentication agent.
[12:50:15] <tuxifreund> eval $(ssh-agent -s)
[12:50:17] <osse> cadmio: which OS ?
[12:50:45] <osse> I can't remember the last time I actually had to use ssh-agent myself
[12:51:37] <cadmio> debian
[12:51:56] <cadmio> Agent pid 1771
[12:52:41] <osse> I'd do this: 1. Make a key and add its public part to the github account. 2. Use ~/.ssh/config to configure ssh to use that key towards github.com  3. Change URLs of you repos. 4. The End
[12:53:13] <cadmio> I've generated the key with $ ssh-keygen -t ed25519 -C "your_email@example.com"
[12:53:38] <cadmio> then ssh-add ~/.ssh/id_ed25519 gives error, what should be the next step?
[12:56:23] <geirha> try ssh-add again, now that you've started an ssh-agent
[12:58:05] <geirha> I usually do   exec ssh-agent bash   instead of   eval "$(ssh-agent)"   to avoid leaving unused agents around
[12:59:12] <cadmio> now it seems to have added the authet
[13:00:45] <geirha> then if you've switched to the ssh-url, git should be able to push and pull now
[13:00:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[13:01:32] <cadmio> I get the same error as before
[13:01:56] <geirha> then you're still using the https url
[13:03:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:04:01] <cadmio> I got: Identity added: /home/cadmio/.ssh/id_ed28523 (cadmio@alchool.com)
[13:04:09] <cadmio> now how can I use it?
[13:04:20] <geirha> git remote set-url origin git@github.com:<user>/<repo>.git
[13:05:32] <geirha> i.e. go to the page for the repo you want to use, click the green Code butten, then select SSH instead of HTTPS and copy the url
[13:06:41] <cadmio> ok so I've to use the webiterface to set it up
[13:07:09] <tuxifreund> no, you don’t. the only time you need to use the web ui, is to add the ssh key to your account
[13:07:48] <geirha> the ssh url is always git@github.com:<user>/<repo>.git
[13:08:17] <geirha> so when you know the user and repo name, just write it out. If not, I showed you where you can copy/paste it from
[13:09:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[13:09:38] <mgedmin> I like to git clone https://github.com/user/repo and then rely on git config --global url.git@github.com.pushInsteadOf https://github.com/ to make git push work
[13:09:46] <mgedmin> (probably only works for public repos)
[13:10:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[13:12:24] <cadmio> so I've to clone the repository with "git clone git@github.com:cadmio/my_repo.git" ?
[13:12:58] <geirha> cadmio: you can change the url in the existing clone
[13:13:26] <cadmio> where?
[13:13:27] <geirha> git remote -v  #  to list the current url(s)
[13:13:33] <geirha> git remote set-url origin git@github.com:<user>/<repo>.git  # to change it
[13:13:45] <geirha> (don't forget to replace <user> and <repo>)
[13:14:54] <cadmio> once listed to remove the URL, how can I do it?
[13:18:05] *** Quits: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b) (Quit: Leaving)
[13:18:41] *** Joins: dontyouloveshort (~julius@ip5f5bc213.dynamic.kabel-deutschland.de)
[13:20:45] <geirha> what?
[13:21:09] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[13:21:42] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[13:21:49] <cadmio> with git remote -v  I got a list now what do I do?
[13:26:35] <cadmio> then In the web app I see "There are no SSH keys associated with your account."
[13:27:39] <tuxifreund> you’ve to add the *public* key to your github account
[13:27:46] <tuxifreund> or gitlab, whatever
[13:28:31] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[13:28:34] *** Joins: randomuser (~randomuse@user/randomuser)
[13:30:23] <cadmio> this one "The key fingerprint is: 45X64adf.. " ?
[13:32:23] <tuxifreund> copy the content of the file ~/.ssh/id_ed28523.pub into the web interface
[13:32:23] <geirha> you copied the contents of ~/.ssh/id_ed25519.pub (not ~/.ssh/id_ed25519) right?
[13:33:24] <cadmio> it says  Key is invalid. You must supply a key in OpenSSH public key format
[13:34:08] <geirha> make sure you copy the entire content; all the words
[13:34:58] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:35:00] <cadmio> you mean I've to copy also "-----BEGIN OPENSSH PRIVATE KEY-----" ?
[13:35:13] <tuxifreund> not the private one!!
[13:35:15] <tuxifreund> the public!!
[13:36:32] <geirha> ~/.ssh/id_ed25519  is the PRIVATE one. ~/.ssh/id_ed25519.pub is the PUBLIC one
[13:36:36] <cadmio> ok did it
[13:37:40] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 250 seconds)
[13:38:17] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[13:38:24] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:38:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[13:39:28] <cadmio> I'm updating with "git commit -m "update all" git push" but I get "Everything up-to-date" which is not
[13:39:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:41:19] <Nomikos> cadmio: you have to add the changed files too, "git add ."
[13:41:33] <Nomikos> . will add everything in the current directory, you can also add them file by file
[13:41:57] <cadmio> this is a cloned dir they should be already addedd
[13:42:01] <Nomikos> "git add" tells git which files you want to commit
[13:42:45] <Nomikos> they are tracked, yes, but not automatically added to the list of files to be committed
[13:42:50] <Nomikos> (stage? index?)
[13:43:07] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[13:43:53] <cadmio> now it works but I didn't understand the purpose of "git add ." if the file were already in the repo
[13:44:55] <ikke> cadmio: git does not assume you want to commit every change you made
[13:45:11] <Nomikos> often you only want to commit certain files or even certain changes within files. "git add" allows you to pick what you want to go into the next commit
[13:45:36] <ikke> So you 'stage' all changes that you want to commit with git add
[13:46:39] <cadmio> so If I want to update the repo I've to : 1) git add . 2) git commit -m "update all" 3) git push ?
[13:46:46] <Nomikos> yes!
[13:47:42] <Nomikos> and if you only want to commit 2 out of 5 files, you "git add file1.txt file2.txt" and git commit etc, then file 3-5 can be added and committed later
[13:48:17] <cadmio> I thought that 'add' was used only to add files the first time
[13:48:25] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[13:48:40] <Nomikos> there is also a shortcut for adding everything which was already being tracked and committing at the same time: "git commit -a -m 'commit message' "
[13:49:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[13:49:26] <Nomikos> (or "git commit -am")
[13:50:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[13:51:27] <cadmio> ok thanks!
[13:53:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:54:49] <geirha> I'm too chicken to ever run ''git add .''  the chance of accidentally adding file with password or sensitive data is too great. I recommend explicitly naming new files you want to add (git add file1 file2), and for already tracked files, just run  git add -p   to be prompted for each change and whether to apply it or not
[13:55:08] <j416> geirha: -u
[13:55:50] <geirha> -p beats -u
[13:55:52] *** Joins: plugwash (~plugwash@2a02:c7f:bce9:2d00::2)
[13:56:04] <plugwash> is there a way to abort a git commit --amend ?
[13:56:36] <j416> plugwash: delete the commit message and save an empty file, or make your editor quit with an error (if vim, :cq)
[13:56:57] <cadmio> see you
[13:56:59] *** Parts: cadmio (~cadmio@rm-19-0-165.service.infuturo.it) (WeeChat 3.0)
[13:57:29] <plugwash> j416, thanks
[13:59:32] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[14:02:07] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 240 seconds)
[14:05:26] <[twisti]> the empty file trick saved my butt a few times (when i had chained a few commands that would have otherwise pushed my commit)
[14:06:27] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[14:07:12] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[14:08:10] *** Quits: durham_ (~durham@2620:10d:c090:400::5:d1bc) (Ping timeout: 240 seconds)
[14:11:23] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[14:11:44] *** Joins: randomuser (~randomuse@user/randomuser)
[14:17:18] *** Joins: argument (~0ptions@user/argument)
[14:18:21] <argument> When using feature branches, if you have sub-tickets of a feature that you finish, is it common to merge them into master before the actual feature being finished? Just wondering, if it can take a week to finish a feature, if it's better to merge it incrementally to master or just merge when all the subtickets are finished and the feature is fully done
[14:22:08] <canton7> argument, if you can get away with merging it when each subticket is done (without breaking other parts of the application), many people prefer to do that.
[14:22:40] <canton7> argument, if you do need to avoid merging until a few weeks in, it might be a good idea to back-merge/rebase frequently, so it's not just getting out of date and you don't have problems merging at the end
[14:22:53] *** Joins: rsx (~dummy@ppp-188-174-138-96.dynamic.mnet-online.de)
[14:23:00] <canton7> argument, ultimately though it depends on your product and your team: both approaches can work
[14:23:05] <argument> canton7: Thanks. I was also thinking if you just limit a feature to 1-3 days of work, so it would come out similarly
[14:23:19] <j416> ^. avoiding long-lived feature branches is generally a good idea, since the more branches diverge, the more difficult it will be to merge them back together
[14:23:23] <argument> rebase, is that basically when you merge master with your branch?
[14:23:41] <canton7> A back-merge would be merging master into your branch. A rebase is a rebase
[14:23:42] <argument> that is, merge master with your local branch
[14:24:00] <canton7> Another point: if you're doing code reviews, reviewing multiple weeks' work is normally pretty painful
[14:24:29] <canton7> Many people insist that reviews are kept below 1000 lines of diff or so
[14:24:42] <j416> argument: try doing some commits in two branches here, then try rebase vs. merge; I think it visualises the difference quite nicely. https://learngitbranching.js.org/?NODEMO
[14:25:14] *** Joins: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2)
[14:26:05] <argument> j416: Awesome!
[14:26:51] *** Joins: unixbhaskar (~user@191.96.227.59)
[14:28:07] *** Joins: pikaro (~pikaro@ec2-3-66-49-133.eu-central-1.compute.amazonaws.com)
[14:28:57] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[14:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[14:30:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[14:33:43] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[14:45:01] *** Quits: unixbhaskar (~user@191.96.227.59) (Remote host closed the connection)
[14:48:27] *** Joins: cdown (~cdown@89.32.122.5)
[14:49:32] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:52:57] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 248 seconds)
[14:53:06] *** cdown_ is now known as cdown
[14:54:31] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[14:55:23] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[14:55:40] *** Quits: cdown (~cdown@163.114.131.1) (Quit: https://chrisdown.name)
[14:55:53] *** Joins: cdown (~cdown@163.114.131.1)
[15:03:16] <argument> That website is aweomse at visiualizing this
[15:05:28] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[15:09:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[15:09:34] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[15:10:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[15:10:24] *** Joins: computeiro (~Wender@189.15.168.19)
[15:11:27] *** themill_ is now known as themill
[15:23:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Remote host closed the connection)
[15:23:54] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:23:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[15:27:02] <OnkelTem> Hey folks! In one of our git repos one developer commited node_modules directory by accident. He was splitting our npm project by workspaces and .gitignore needed to be updated properly but it wasn't. After a few commits he finally deletes that node_modules dir but now it's a part of the history
[15:27:27] <OnkelTem> How can I rewrite this properly? I found the commit when it was first "invented"
[15:27:37] <canton7> OnkelTem, First, !rewrite
[15:27:37] <gitinfo> OnkelTem: Rewriting public history is not recommended. Everyone who has pulled the old history will have to do work (and you'll have to tell them to), so it's infinitely better to just move on. If you must, you can use `git push --force-with-lease <remote> <branch>` to force (and the remote may reject that, anyway). See http://goo.gl/waqum
[15:27:54] <canton7> Also, !fixup
[15:27:54] <gitinfo> So you lost or broke something or need to otherwise find, fix, or delete commits? Look at https://sukima.github.io/GitFixUm/ for full instructions, or !fixup_hints for the tl;dr. Warning: changing old commits will require you to !rewrite published history!
[15:29:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[15:29:55] <OnkelTem> Erm
[15:29:57] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:30:06] *** Joins: autistic (~linguist@170.84.56.192)
[15:30:12] <OnkelTem> Not sure if it's really an answer to my particular question
[15:30:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:30:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:30:46] <OnkelTem> I mean, there is node_modules dir. How can I delete it properly and how to rewrite this particular commit?
[15:31:10] <osse> how many commits ago?
[15:31:17] <OnkelTem> dozens
[15:31:40] <osse> git filter-branch/filter-repo
[15:31:41] <canton7> OnkelTem, if you follow the links, it will take you through stuff around the dangers of rewriting published history, then ask whether you need to rewrite a commit which is before a merge or not, and give you tailored instructions
[15:31:55] <canton7> (I just followed the process, to check it has the info you need)
[15:32:50] <OnkelTem> All this looks too complicated heh
[15:34:48] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:36:12] <OnkelTem> Ah look, I've a better idea. That directory was finally removed, right? So I can just squash those commits: from the one where the dir appeared for the first time and up to the commit when it was finally deleted
[15:36:30] <canton7> That will squish everything in between into one commit: that's probably not what you want?
[15:36:47] <canton7> If you're going to do that, it's just as easy/hard to 'edit' the commit which introduced node_modules, using rebase -i
[15:36:57] <canton7> ... but that has the same complications if merges happened after the commit you want to change
[15:37:14] <OnkelTem> So in a sequence like: C1 C2 C3 C4 C5, how to squash commits [C2, C4]?
[15:37:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[15:37:38] <canton7> Step back. You said "dozens" of commits. Are there any merge commits since the one which introduced node_modules?
[15:37:38] <OnkelTem> canton7: no, we're just fine with squashing them
[15:37:56] <OnkelTem> a moment
[15:39:07] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[15:39:28] <OnkelTem> no canton7, no merges. It was a work in one branch
[15:39:55] <canton7> And you're OK with rewriting those commits, including telling each developer how to fetch the rewritten commits without accidentally merging together the old and new versions of history?
[15:39:59] <OnkelTem> There are 4 commits which need to be squashed now
[15:40:40] <OnkelTem> fortunately there are only my and that developer on the project, so it won't affect anyone else
[15:40:53] <OnkelTem> me*
[15:40:55] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[15:41:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:41:11] <canton7> In which case, `git rebase -i <commit which introduced node_modules>^` (the ^ is important). Change 'pick' to 'edit' on that commit, save and close. That will drop you just after the troublesome commit
[15:41:34] <canton7> Remove node_modules, stage, `git commit --amend` to edit that troublesome commit, `git rebase --continue` to finish the rebase
[15:42:14] *** Joins: pulse (~pulse@user/pulse)
[15:42:37] <OnkelTem> Wait a second. Shouldn't I pass both starting and ending commit or at least the number of commits to be squashed?
[15:42:57] <canton7> I don't see why you're so fixated on squashing. You can just edit the bad commit to no include add node_modules
[15:42:57] <OnkelTem> And  on which comit should "stand" initially?
[15:43:05] <canton7> *to not include
[15:43:36] <canton7> If you do want to squash, start off the same, but change 'pick' to 'fixup' on the commits you want to combine into the commit above
[15:44:06] <OnkelTem> fixup is not squashing?
[15:44:16] <OnkelTem> I used squash before
[15:44:43] <OnkelTem> Look, I don't want to delete node_modules myself because it WAS deleted by that developer after 4 commits since it was added
[15:44:48] <canton7> They're similar. 'squash' lets you change the commit message, 'fixup' just uses the message of the commit above
[15:45:07] <OnkelTem> so if I take C2 and squash it up to C4, it should do the work, no?
[15:45:44] <canton7> Another way of doing exactly the same thing would be to re-arrange the lines in the rebase -i editor so that C4 is just below C2, and change 'pick' to 'fixup'
[15:45:55] <canton7> That will have exactly the same end result as my 'edit' suggestion
[15:46:05] <OnkelTem> I see
[15:46:31] <OnkelTem> so the cmd line should be: git rebase -i 4 while I'm "standing" on the C2?
[15:46:37] <OnkelTem> sorry
[15:46:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:47:09] <OnkelTem> wrong numbers. In the terms of the example above, where C2 to C4 should be squashed, the cmd line should be
[15:47:27] <OnkelTem> git rebase -i 3, and I'm standing on C2, right?
[15:47:36] <OnkelTem> or I should be on C4?
[15:47:48] <OnkelTem> yeah, I think the latter. It counts back
[15:47:58] <canton7> Start off on the *branch* you want to rebase. Do probably on C5
[15:48:06] <canton7> Then 'git rebase -i C2^', or 'git rebase -i C1'
[15:48:12] <canton7> *So probably
[15:48:23] <OnkelTem> ok, I'll check it on a copy now
[15:48:37] <canton7> Yeah, have gitk or similar open so you can visualise what you're doing
[15:49:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[15:49:29] *** Quits: tristan__ (~tristan@223.38.29.249) (Ping timeout: 248 seconds)
[15:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[15:51:05] *** Joins: pikaro_ (~pikaro@ec2-3-120-72-149.eu-central-1.compute.amazonaws.com)
[15:52:13] <jast> friendly reminder that we have a command to visualize commit graphs :)
[15:52:15] <jast> https://gitirc.eu/bot/gitgraph.php
[15:52:25] *** autistic is now known as linguist
[15:53:27] *** Quits: pikaro (~pikaro@ec2-3-66-49-133.eu-central-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[15:54:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[15:55:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:56:10] <OnkelTem> grr, it doesn't seem to work. Cannot squash commits
[15:56:57] <OnkelTem> One more time, please. In a sequence of: C1 C2 C3 C4 C5, to squash from C2 to C4 (inclulding), 1) where should I be and 2) what should I run?
[15:57:10] <OnkelTem> git rebase -i C2 C4 won't do the trick?
[15:57:16] <jast> git rebase -i C1
[15:57:22] <jast> then change C3 and C4 to "squash"
[15:57:24] <OnkelTem> how?
[15:57:28] <canton7> Erm, wait
[15:57:30] <OnkelTem> Why C2?
[15:57:33] <OnkelTem> sorry  C1
[15:57:36] *** Joins: pikaro (~pikaro@dslb-088-067-238-140.088.067.pools.vodafone-ip.de)
[15:57:43] <jast> you need to rebase from the parent of the first commit that will be changed
[15:57:45] <canton7> I think we ended up wanting to squash C4 into C2, and leave C3 alone
[15:58:10] <canton7> 12:18 <canton7> Then 'git rebase -i C2^', or 'git rebase -i C1' / 12:11 <canton7> In which case, `git rebase -i <commit which introduced node_modules>^` (the ^ is important).
[15:58:11] <jast> if you want to squash stuff into C2, C1 is the topmost commit that will be unchanged, so it's the "base" of the operation
[15:58:19] <jast> C2^ says the same thing
[15:58:20] <OnkelTem> no no, what do you mean - leave C3 alone?
[15:58:31] <OnkelTem> and what about changes in C3?
[15:58:40] <canton7> You don't need to squash C3 into anything, right?
[15:58:49] <jast> depends. if you want the changes in C3 squashed into C2, ignore what canton7 said :)
[15:58:51] <canton7> Why are you so intent on getting rid of it?
[15:59:04] <jast> if you want to keep C3 as a separate commit, move C4 below C2 in the editor and mark only that one "squash"
[15:59:12] <OnkelTem> jast: I see, but how to set the right bound of the operation? I mean - C4
[15:59:21] *** Quits: pikaro (~pikaro@dslb-088-067-238-140.088.067.pools.vodafone-ip.de) (Client Quit)
[15:59:22] <OnkelTem> or I shoud be there?
[15:59:27] <jast> all of the later commits need to be rewritten anyway, you can't set a "bound" at C4
[15:59:40] <OnkelTem> ahh, really?
[15:59:44] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Excess Flood)
[15:59:50] <jast> yeah, C5 will have the newly rewritten commit as a parent
[15:59:58] <jast> so C5 can't be reused exactly - it needs the new parent pointer
[16:00:09] *** Quits: pikaro_ (~pikaro@ec2-3-120-72-149.eu-central-1.compute.amazonaws.com) (Ping timeout: 248 seconds)
[16:00:12] <jast> rebase takes care of that for you, but it means everything gets rewritten :)
[16:00:53] *** Joins: brunodOut (~linguist@170.84.56.192)
[16:00:56] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[16:02:42] <jast> .gitgraph C1 C2 C3[label "squash C3"] C4[label "squash C4"] C5;; C1 C2'[label "squashed C2"] C5'
[16:02:42] <gitinfo> Generated graph: https://gitirc.eu/g/Pu.png
[16:02:46] *** Joins: tristan__ (~tristan@223.38.29.194)
[16:03:12] <jast> left: old history with "rebase -i" instructions. right: new history
[16:03:21] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 248 seconds)
[16:03:40] *** Quits: argument (~0ptions@user/argument) (Quit: WeeChat 1.9.1)
[16:03:50] <canton7> .gitgraph C1 C2 C3 C4 C5;; C1 C2'[label "Squashed C4 into C2"] C3' C5'
[16:03:50] <gitinfo> Generated graph: https://gitirc.eu/g/Pv.png
[16:03:59] <canton7> ^ alternatively, if you want to keep C3 intact
[16:04:18] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[16:05:07] <jast> hm, I should add a feature to automatically generate a sequence of numbered commits
[16:09:30] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:fc56:81d6:ed7b:e2ba)
[16:09:30] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:fc56:81d6:ed7b:e2ba) (Changing host)
[16:09:30] *** Joins: skapata (~Skapata@user/skapata)
[16:18:00] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 250 seconds)
[16:19:09] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[16:22:38] *** Joins: Lenny (~Lenny@148.103.43.67)
[16:27:06] *** Quits: haskl (~haskl@user/haskl) (Remote host closed the connection)
[16:29:05] *** Joins: haskl (~haskl@98.37.78.63)
[16:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[16:30:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[16:30:54] *** Quits: haskl (~haskl@98.37.78.63) (Changing host)
[16:30:54] *** Joins: haskl (~haskl@user/haskl)
[16:34:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[16:34:55] *** Joins: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br)
[16:35:02] *** Quits: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br) (Remote host closed the connection)
[16:35:25] *** Joins: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br)
[16:40:19] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[16:42:16] *** Quits: dontyouloveshort (~julius@ip5f5bc213.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:42:19] *** Joins: UrsoBranco (~UrsoBranc@170.244.200.200)
[16:42:57] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[16:43:53] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 248 seconds)
[16:46:51] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[16:50:07] *** Quits: linuxverksento (~linuxverk@168-90-146-89.jrnetdns.net.br) (Ping timeout: 240 seconds)
[16:50:37] *** Joins: xmenr911 (~xmenr911@117.196.178.146)
[16:50:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 240 seconds)
[16:53:13] <furrymcgee> git am
[16:54:48] *** Parts: haskl (~haskl@user/haskl) (Leaving)
[16:54:51] *** Joins: haskl (~haskl@user/haskl)
[16:56:33] <osse> Agree
[16:56:47] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:56:52] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Remote host closed the connection)
[16:57:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[16:57:40] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[16:57:47] *** Quits: xmenr911 (~xmenr911@117.196.178.146) (Ping timeout: 240 seconds)
[17:03:03] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[17:04:22] *** Quits: brunodOut (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[17:05:59] *** Joins: linguist (~linguist@170.84.56.192)
[17:07:49] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[17:08:57] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:09:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[17:10:05] *** Joins: ppang (~ppang@user/ppang)
[17:10:22] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[17:12:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:12:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:12:27] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:12:41] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[17:12:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:14:49] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[17:15:34] *** Joins: linguist (~linguist@170.84.56.192)
[17:17:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:22:25] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[17:24:00] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[17:25:07] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[17:25:42] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[17:27:05] *** Joins: hazmi35 (~Hazmi35@36.74.47.42)
[17:28:48] <OnkelTem> Ok guys, so I've rewritten the history but the big files are still there
[17:28:54] <OnkelTem> how to explain that?
[17:29:07] <OnkelTem> and how to really remove those big files?
[17:30:02] <OnkelTem> https://dpaste.org/fcv7
[17:30:12] <OnkelTem> I use this script to print big files
[17:30:18] <OnkelTem> And I see something like:
[17:30:30] * linguist I have to work
[17:30:54] <OnkelTem> https://dpaste.org/YyKw
[17:31:25] <osse> it's explainable by git being lazy
[17:31:27] <OnkelTem> Now I need to get rid of those bastards
[17:31:30] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[17:31:41] <osse> try git gc --prune=now
[17:31:47] <OnkelTem> Yeah, I usued git gc, but it left those untouched
[17:31:47] <sandra> OnkelTem: https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_removing_file_every_commit
[17:31:49] <OnkelTem> ah
[17:31:58] <osse> also note that fresh clones won't ever receive these objects
[17:32:24] <sandra> https://github.com/newren/git-filter-repo
[17:33:30] <OnkelTem> osse: nah, it's still there unfortunately. I mean - a fresh clone. I tried it a few minutes ago and it's still there
[17:34:05] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[17:34:26] <osse> then you didn't rewrite all the required history
[17:35:25] <OnkelTem> yeah, seems so
[17:35:40] <osse> that rev-list --all starts listing objects from ALL refs
[17:35:55] <OnkelTem> ok!
[17:35:57] <osse> do you have some recently created branch? a tag perhaps?
[17:36:26] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[17:36:34] *** Quits: hazmi35 (~Hazmi35@36.74.47.42) (Quit: Konversation terminated!)
[17:36:41] <OnkelTem> osse: no, not that I'm aware of
[17:37:02] *** Quits: furrymcgee (~devuan@31.179.186.66) (Remote host closed the connection)
[17:37:10] *** Joins: furrymcgee (~devuan@31.179.186.66)
[17:37:17] <OnkelTem> so my command for searching big files shows what, file hashes? Can I use that to find a commit where the file first appeared?
[17:37:40] <osse> I dunno, man. It's your command
[17:37:45] <OnkelTem> it uses: git rev-list --all --objects
[17:37:57] <osse> yes, 21 times
[17:38:24] <osse> isntead of --all  do it one by one.
[17:38:35] <osse> git rev-list --objects refhere
[17:38:41] <OnkelTem> yeah. I see
[17:39:04] *** Joins: dcpc007 (~dcpc007@lfbn-idf2-1-152-89.w83-202.abo.wanadoo.fr)
[17:39:12] *** Joins: hubble (~hubble@69.160.252.247)
[17:39:22] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[17:39:32] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[17:39:32] *** Joins: Bayes (~Bayes@user/bayes)
[17:40:45] *** Joins: daoudr (~daoudr@178.197.213.56)
[17:41:26] *** Joins: easyme (~easyme@user/easyme)
[17:41:55] <easyme> Hello, how can I delete all commits of a branch?
[17:42:10] <easyme> I have not pushed commited branch to remote yet.
[17:42:37] <easyme> I want the branch as a new one.
[17:44:25] <Fernando-Basso> One way to achieve that is to --move (rename) your branch, go back to main/master/develop/whatever and create a new branch with the same name of the one you renamed.
[17:45:24] <Fernando-Basso> Or perhaps a reset --hard <ref>? Something like git reset --hard <remote>/<branch>?
[17:45:26] <j416> another way is "git reset --hard <commit>" where <commit> is the commit you want the branch to be at
[17:45:31] <j416> nod
[17:47:17] *** Quits: Lenny (~Lenny@148.103.43.67) (Quit: Client closed)
[17:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[17:49:22] <easyme> git reset --hard HEAD~1 , what does it do?
[17:49:46] <Fernando-Basso> Removes your last commit, as if it never happened.
[17:49:52] *** Quits: hubble (~hubble@69.160.252.247) (Ping timeout: 246 seconds)
[17:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[17:50:22] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:50:36] *** Joins: sunyibo (~dorsch@5.2.75.229)
[17:52:13] <easyme> git reset --hard HEAD , what does it do?
[17:54:13] <Nomikos> about the same as a "git checkout .", looks like - all unstaged changes are undone
[17:54:29] *** Joins: arcatech (~arcatech@user/arcatech)
[17:55:05] <j416> (also staged changes)
[17:55:28] <Nomikos> ah, yes that too
[17:56:11] <osse> easyme: sounds like you can just delete the branch and create a new one with the same name
[17:56:57] <easyme> I am trying to understand this command: git reset --hard HEAD , what does it do?
[17:57:36] <easyme> HEAD~1 deletes the last commit, HEAD deletes what?
[17:57:41] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:57:52] <j416> easyme: it is equivalent to "git reset --hard" (which implies HEAD; HEAD is the commit you are currently at); and its side-effect is that it will destroy any uncommitted changes.
[17:58:01] <Nomikos> it removes all uncommitted changes and removes the staged files
[17:58:11] <Nomikos> *from the stage
[17:58:28] <j416> (staged files are also uncommitted)
[17:58:45] <j416> *changes
[17:58:54] *** Joins: liefer (~liefer@user/liefer)
[17:59:05] *** Quits: daoudr (~daoudr@178.197.213.56) (Ping timeout: 248 seconds)
[18:01:50] *** Quits: Bayes (~Bayes@user/bayes) (Quit: Connection closed)
[18:02:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[18:05:12] *** Joins: jimklimov (~jimklimov@165.225.200.85)
[18:06:30] <easyme> git reset --hard HEAD remains in the last commit, right?
[18:07:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[18:07:45] <easyme> *remains at the last commit*
[18:09:24] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[18:09:35] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:14:25] <osse> yes
[18:16:04] <easyme> Thank you all.
[18:16:08] *** Parts: easyme (~easyme@user/easyme) ()
[18:19:19] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:20:37] *** Joins: daoudr (~daoudr@178.197.213.56)
[18:27:20] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[18:29:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[18:29:46] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:29:47] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[18:30:18] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[18:30:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[18:30:20] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[18:30:39] *** Joins: Minall (~Minall@ftth-179-49-61-42.uio.celerity.ec)
[18:30:47] <Minall> Hello Git Community!
[18:31:47] <Minall> I have been working some weeks in my organization, with another Github account... Now I want to use mine because I want to have all the changes I made logged into my personal github, is there a way to transfer this or, should I just start using my personal git account?
[18:32:15] *** Quits: unbuggedware (~unbuggedw@2602:fe90:300:1a2::40e1:8aec) (Read error: Connection reset by peer)
[18:33:01] *** Quits: avu (~jan@user/avu) (Quit: o/)
[18:35:41] *** Joins: avu (~jan@user/avu)
[18:36:56] *** Quits: daoudr (~daoudr@178.197.213.56) (Quit: Leaving)
[18:37:19] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[18:39:03] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[18:39:18] <Fernando-Basso> Minall: You want to make all your previous commits with this different account look like if you had made them with your personal account?
[18:41:18] *** Joins: daoudr (~daoudr@178.197.213.56)
[18:43:02] <Minall> Yes Fernando-Basso
[18:43:19] <Minall> I think it would be difficult right?, so I just have to start working with my personal project
[18:44:25] <Fernando-Basso> If you have only commits with that other user, and you can rewrite the history, it should, in principle, be possible to --amend --author="new user <user.email.dv>", perhaps with an interactive rebase or somethng.
[18:44:35] <mackerman> Minall: man gitmailmap
[18:44:35] <gitinfo> Minall: the gitmailmap manpage is available at https://gitirc.eu/gitmailmap.html
[18:45:25] *** Joins: hubble (~hubble@69.160.252.229)
[18:46:20] *** Quits: jimklimov (~jimklimov@165.225.200.85) (Quit: Leaving.)
[18:46:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[18:48:08] <mackerman> Although a mailmap only changes log output.  Any future amending of all your commits would need all of your author names.
[18:48:46] <Minall> Thank you mackerman!
[18:50:39] *** Joins: fdan (~fdan@192.146.154.3)
[18:52:10] *** Quits: hubble (~hubble@69.160.252.229) (Ping timeout: 246 seconds)
[18:52:30] *** Joins: Guest65 (~Guest65@pool-100-7-38-116.rcmdva.fios.verizon.net)
[18:56:04] *** Quits: UrsoBranco (~UrsoBranc@170.244.200.200) (Quit: leaving)
[18:56:23] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:56:26] *** Quits: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32) (Changing host)
[18:56:26] *** Joins: zfnmxt (~zfnmxtzfn@user/zfnmxt)
[18:56:37] *** Quits: zfnmxt (~zfnmxtzfn@user/zfnmxt) (Quit: Reconnecting)
[18:56:54] *** Joins: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32)
[18:57:42] *** Quits: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32) (Changing host)
[18:57:42] *** Joins: zfnmxt (~zfnmxtzfn@user/zfnmxt)
[18:59:27] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[19:00:33] *** Joins: linguist (~linguist@170.84.56.192)
[19:01:17] *** Joins: caster (~quassel@nat1.prg.suse.com)
[19:02:03] *** Joins: gnoo (~gnoo@user/gnoo)
[19:02:41] *** Joins: thiago (~thiago@2601:1c0:4501:635c:4e6:7044:24b6:781c)
[19:06:34] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:07:24] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Remote host closed the connection)
[19:07:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[19:09:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[19:10:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[19:10:33] *** Quits: ByteHackr (~sanroy@43.252.250.83) (Quit: Leaving)
[19:13:26] *** sco1_ is now known as sco1
[19:16:10] *** Quits: jazzy (~jaziz@2600:380:8773:c113:1093:1c01:217f:efb2) (Ping timeout: 240 seconds)
[19:22:15] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:23:07] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[19:23:26] *** Joins: NeoCron (~NeoCron@45.158.175.19)
[19:26:25] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[19:27:10] *** Joins: subopt (~subopt@2603-8081-2302-459a-1dd8-02ef-cb71-05d4.res6.spectrum.com)
[19:29:07] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:29:15] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[19:31:05] *** Quits: madewokherd (~urk@65-128-171-161.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:31:14] *** Joins: hubble (~hubble@69.160.255.138)
[19:31:27] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[19:31:29] *** cdown_ is now known as cdown
[19:32:46] *** Quits: Guest65 (~Guest65@pool-100-7-38-116.rcmdva.fios.verizon.net) (Quit: Client closed)
[19:33:17] *** Quits: computeiro (~Wender@189.15.168.19) (Quit: Leaving)
[19:36:50] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[19:37:19] *** Quits: hubble (~hubble@69.160.255.138) (Ping timeout: 246 seconds)
[19:37:25] *** Joins: hornhack (~hackingho@user/hackinghorn)
[19:39:53] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 248 seconds)
[19:43:07] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[19:44:34] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[19:45:53] *** Joins: linguist (~linguist@170.84.56.192)
[19:46:42] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:46:45] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[19:47:02] *** Joins: jinsun (~quassel@user/jinsun)
[19:48:37] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[19:48:48] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:49:13] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[19:49:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[19:50:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[19:50:27] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 250 seconds)
[19:51:27] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[19:51:48] *** Joins: jinsun (~quassel@user/jinsun)
[19:57:22] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[19:57:34] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:59:22] *** Joins: nvmd (~nvmd@user/nvmd)
[19:59:39] *** Joins: codebam (~codebam@user/codebam)
[20:01:25] *** Joins: durham (~durham@2620:10d:c090:400::5:1e14)
[20:02:06] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:03:26] *** Joins: hubble (~hubble@69.160.255.152)
[20:05:28] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 252 seconds)
[20:05:46] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[20:06:01] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[20:06:47] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[20:07:15] *** Quits: mikkel (~mike@208.110.120.167) (Quit: leaving)
[20:09:18] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[20:11:05] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[20:12:33] *** Joins: masoudd (~masoudd@user/masoudd)
[20:12:46] *** Joins: stephenplatz (~steve@71-212-109-235.tukw.qwest.net)
[20:14:01] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Remote host closed the connection)
[20:15:18] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[20:16:01] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[20:16:07] *** Joins: chexum_ (~quassel@gateway/tor-sasl/chexum)
[20:17:46] <stephenplatz> Hi all - I've got a quick question: I recently got an inquiry from a client about a .git directory on a production web server. Apparently they we contacted by a security company that flagged this as a vulnerability. I usually don't consider that, but it got me to think a little more about what the best practices may be for deploying a codebase to a server with git, if that's needed. I went ahead and adjusted the permissions for the .git
[20:17:46] <stephenplatz> dir on the server, but wanted to also ask here what users felt, aside from not deploying the .git dir at all, which is probably not a bad idea.
[20:19:18] <bremner> !deploy
[20:19:18] <gitinfo> Git is not a deployment tool, but you can build one around it (in simple environments) or use it as an object store(for complex ones). Here are some options/ideas to get you started: http://gitolite.com/deploy.html
[20:19:25] <bremner> the collected wisdom ^
[20:19:56] *** Joins: lgc (~lgc@user/lgc)
[20:20:19] <stephenplatz> Well, that's just it, I am using git to deploy, although I do know that there are better ways to do the same.
[20:22:43] <ikke> stephenplatz: there were companies who's credentials leaked out through exposed git configuration
[20:22:49] <stephenplatz> In general, I do a sort of manual deployment, as you can probably imagine, where code it pushed from a development environment to the service hosting the codebase, then pulled from there to the production environment.
[20:23:10] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 240 seconds)
[20:23:11] <stephenplatz> @ikke: was that recent?
[20:23:14] *** Joins: furrymcgee (~devuan@31.179.186.66)
[20:23:15] <ikke> fairly recent
[20:23:22] <ikke> ~1 year ago
[20:23:51] <stephenplatz> I can't imagine storing sensitive creds in the config, but I suppose it could happen.
[20:23:53] <ikke> stephenplatz: fyi: the .git directory does not have to live in the same dir
[20:24:33] <stephenplatz> That's another option. Why not just make sure no one can read from it except the owner?
[20:24:49] <ikke> stephenplatz: usually the webserver is the owner
[20:25:01] <ikke> although, for the .git dir, you could make it a different user
[20:25:20] *** Joins: lgc_ (~lgc@user/lgc)
[20:25:49] <stephenplatz> Which I do, the web server is in the group.
[20:26:50] *** Joins: daoudr_ (~daoudr@178.197.213.56)
[20:26:53] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:26:53] *** Quits: daoudr (~daoudr@178.197.213.56) (Read error: No route to host)
[20:27:07] *** Quits: lgc (~lgc@user/lgc) (Ping timeout: 240 seconds)
[20:28:11] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[20:29:07] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 240 seconds)
[20:29:08] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[20:29:18] *** cdown_ is now known as cdown
[20:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[20:30:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[20:30:24] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:30:39] *** Quits: daoudr_ (~daoudr@178.197.213.56) (Read error: No route to host)
[20:31:46] *** lgc_ is now known as lgc
[20:32:10] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[20:32:21] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[20:32:21] *** Joins: Bayes (~Bayes@user/bayes)
[20:32:53] *** chexum_ is now known as chexum
[20:33:38] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[20:33:55] *** Joins: wroathe (~wroathe@user/wroathe)
[20:35:00] <mackerman> Seperating the git dir from the work tree is possibly easier to audit and verify than a file permissions scheme that works.
[20:35:17] <ikke> The easiest way is to use a gitfile as a reference
[20:36:09] <stephenplatz> I'm noticing that the file permissions aren't easy to get right.
[20:36:29] <mackerman> Or do real release archives installed by a package manager system.
[20:36:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[20:36:45] <wroathe> So I just finished reading the Google paper on how they manage a monorepo. So far at every place I've worked I've set up minirepos and managed code sharing through libraries and language ecosystem package managers like NPM or Rubygems. Lately there's been a lot of buzz about monorepos though, and one of my first questions was how that would work with a DVCS like Git that, by default, requires you to maintain
[20:36:51] <wroathe> a copy of the entire repository on your system. Google's VCS, Piper, apparently gives their developers a lot of flexibility in how they access subtrees of the larger Google monorepo though. Does anyone know if there have been any projects that have extended Git to provide this Piper-like functionality?
[20:37:10] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:37:11] <wroathe> This is the paper: https://research.google/pubs/pub45424/
[20:37:48] <imMute> wroathe: Google is it's own scale.  Your company is not as big as google, so things that work for google might not work for you.
[20:38:16] <imMute> IMO, monorepos are stupid, to some extent.
[20:38:53] <wroathe> imMute: Indeed. I just want to be prepared for the eventuality of needing or wanting to set up a monorepo. It would be the worst of all worlds to lose a vote to other devs insisting on a monorepo, and have to maintain an entire copy of that monorepo on each devs system
[20:39:05] <wroathe> imMute: So it's best to know what the current state of the art is ahead of time so I'm prepared
[20:39:08] <ikke> monorepos might make sense in certain context
[20:39:20] <ikke> but only to contain things that are actually depending on eachother
[20:39:40] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[20:39:51] <wroathe> Usually I've been the guy responsible for setting up and maintaining git servers and CI build processes and the like, and so it's good to have this under my belt :)
[20:40:11] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[20:40:36] <imMute> wroathe: AFAIK, nothing has been added to git to make it able to check out only part of the repo.  you can do shallow clones, but that's on the time dimension only.
[20:41:02] <mackerman> Design the requirements of such a workflow in your organization first. Sketch out the process.
[20:41:11] <mackerman>  Way too early to be looking at tools if the reason for doing so is because it is trendy.
[20:41:12] <ikke> imMute: nowadays, that's not entirely true, git does have mechanism to only download certain parts, but the porcelain for this is not yet in place
[20:41:20] <caster> is there more elegant way to compare e.g. 20-commit series (with branch2 potentially rebased) than "git format-patch branch1~20..branch1 branch2~20..branch2" ?
[20:41:41] <ikke> caster: man git range-diff
[20:41:41] <gitinfo> caster: the git-range-diff manpage is available at https://gitirc.eu/git-range-diff.html
[20:41:43] *** Quits: hubble (~hubble@69.160.255.152) (Ping timeout: 246 seconds)
[20:41:45] <caster> for example one can write "git format-patch HEAD -20"
[20:42:32] *** Quits: woohoiV5_ (~woohoiV5@85-250-29-125.bb.netvision.net.il) (Ping timeout: 245 seconds)
[20:42:50] <caster> I read the manpage, also read "git help revisions"
[20:43:56] <ikke> git range-diff branch1~20..branch1 branch2~20..branch2
[20:44:19] <caster> I was trying the "<rev>^-<n>" format but ^- is for different parents of single commit... guess I'd want a "<rev>~-<n>" format that would expand to rev~20..rev
[20:44:38] *** Joins: woohoiV5 (~woohoiV5@46-116-234-75.bb.netvision.net.il)
[20:44:39] <ikke> yes, you want ~ not ^
[20:46:28] <caster> ah, I see, I wrote "format-patch" instead of "range-diff" in my initial question
[20:47:16] <ikke> right
[20:47:20] <caster> so the question was how to specify the ranges more elegantly
[20:47:33] <ikke> caster: are both based on a common other branch?
[20:47:58] <wroathe> So it sounds like you guys aren't aware of any community extensions to Git to make it operate more like a centralized VCS ala Piper, then
[20:48:13] <caster> ikke: often not :/
[20:48:17] *** Quits: NeoCron (~NeoCron@45.158.175.19) (Remote host closed the connection)
[20:48:31] <wroathe> That paper mentioned Google was investing resources into Mercurial. I wonder if they've made progress with that.
[20:49:02] *** Quits: oncall-pokemon (uid134758@id-134758.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[20:49:17] <ikke> wroathe: are the repos you're working with so large that these things matter?
[20:49:34] <wroathe> You guys have a lot of opinions on what I should and shouldn't be investing my time in learning :P
[20:50:14] <wroathe> ikke: I'm not planning on recommending a monorepo to anyone. I just want to be prepared in the event that I'm overruled. I don't want to be caught off guard and have to manage a monorepo with a pure DVCS.
[20:50:17] <ikke> Well, the reason that there not a lot of tools to do this is that most projects do not need to solve these issues
[20:50:42] <ikke> The big companies have tools that integrate in their systems / workflows
[20:51:13] <wroathe> ikke: Yup. The paper was pretty clear on that, and I've got some experience setting up CI and release pipelines.
[20:51:20] <wroathe> And automated testing suites
[20:51:27] <ikke> So no, I'm not aware of any tools to do this
[20:51:28] <wroathe> For fortune 500 companies
[20:51:31] <wroathe> Cool. Thanks.
[20:52:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 250 seconds)
[20:53:03] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:d5b6:1cec:7da8:af3e) (Quit: Leaving)
[20:53:26] <ikke> The reason we are opinionated on this is that most of us are not happy to work on custom overcomplicated systems, we want to spare others the same faith :)
[20:54:04] <wroathe> This last place I worked at had a front end team with something like 150 repos in Bitbucket, and they were starting conversations around merging those into a monorepo. At the time, I didn't have any background on monorepos at all, and it's been on my list of things to do to get more familiar so I have more background coming into a debate like that.
[20:54:25] <wroathe> ikke: Sure. I've already said where I stand on the matter. The problem is that when you're on a team you sometimes don't get to make the decision.
[20:54:40] <mackerman> wroathe: If you want an enormous git monorepo, try  Microsoft's fork  https://github.com/microsoft/git
[20:54:55] *** Joins: hubble (~hubble@69.160.252.250)
[20:55:06] <wroathe> mackerman: Oh, they extended it for monorepos then? Cool.
[20:55:11] <ikke> wroathe: monorepos have advantages and disadvantages
[20:55:22] <wroathe> ikke: Indeed. The paper did a good job of reviewing them, and I agree with their analysis.
[20:56:03] <mackerman> Beware, just because it has acceptable performance for enormous repos doesn't mean  that  it makes sense to use.
[20:56:06] <ikke> wroathe: unless all these 140 repos are somehow related, I don't see a lot of benefit of merging them all together
[20:56:38] <wroathe> ikke: Well, they constituted the entire font end for the B2C side of a fortune 500 company
[20:56:47] <ikke> Ok, so they are related
[20:56:49] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[20:56:50] <wroathe> ikke: So yeah, they're related. Whether or not a monorepo is a good idea though is a much different debate.
[20:57:21] <mackerman> So? Android for example has several hundred git repos.
[20:57:25] <wroathe> Because that has implications for how you manage code on your machine, how you share code between projects, how you manage automated builds, and so on
[20:57:44] <ikke> one big monorepo creates a lot of contention on integration
[20:58:24] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[20:58:30] <wroathe> Again, when they were first discussing the idea my first thought was, "wait, you're going to make me clone down all 150 of those repositories, even though I only work on a handful?"
[20:58:43] <wroathe> But Google's paper makes it clear that a DVCS isn't the right choice for such a setup.
[20:58:57] *** Joins: masoudd (~masoudd@user/masoudd)
[20:59:03] *** Parts: plugwash (~plugwash@2a02:c7f:bce9:2d00::2) (Leaving)
[20:59:06] <mackerman>  Right choice *for Google*
[20:59:11] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[20:59:37] *** Quits: Minall (~Minall@ftth-179-49-61-42.uio.celerity.ec) (Quit: Connection closed)
[20:59:55] <wroathe> Well, I can say that I don't want to have to manage a monorepo with 150 projects locally. I don't even want to manage 50 projects locally.
[21:00:08] <wroathe> So yeah, for Google, for whatever other arbitrary bar you establish for where you think it'll be a pain in the ass
[21:00:23] <ikke> !repo
[21:00:23] <gitinfo> Repo is a tool produced by Google for the AOSP project(and others) which wraps git and provides its own set of commands. While it is possible to use git with repositories that are managed by repo, it is not always easy. https://source.android.com/source/using-repo.html
[21:00:35] <ikke> That's what mackerman referred to earlier
[21:00:42] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Remote host closed the connection)
[21:00:56] <wroathe> ikke: Thanks
[21:01:11] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:01:51] *** Quits: Strom (strom@fedora/strom) ()
[21:02:00] <wroathe> Thanks guys. I appreciate the help.
[21:02:07] <mackerman> If scripts exist to clone those 150 reps, I don't know that the number of them matters for the user.
[21:02:38] <wroathe> mackerman: This is a monorepo scenario. Without "scripts", Git would be used to clone all 150 by default. So that's the rub.
[21:02:49] *** Joins: linguist (~linguist@170.84.56.192)
[21:02:58] <wroathe> mackerman: And why a tool that supports creating a workspace from just a subtree from that monorepo, like Piper, is convenient
[21:03:03] <wroathe> Regardless of scale
[21:03:22] <ikke> wroathe: note that git is starting to gain functionality to do exactly that
[21:03:41] <wroathe> ikke: Yeah, I saw you mention that. I have it earmarked to look into.
[21:03:53] *** Joins: frtdlteo^ (~frtdlteo@12.16.129.111)
[21:03:59] <ikke> look at git clone --filter
[21:03:59] *** Joins: Strom (strom@fedora/strom)
[21:04:23] <ikke> (and git rev-list --filter for more details)
[21:04:23] <mackerman> I consider the maturity of the tooling around 150 repos as a proxy for if you are ready to do a major reorganizatino.
[21:04:28] <wroathe> ikke: Nice
[21:04:39] <wroathe> mackerman: Agreed
[21:04:52] <wroathe> mackerman: That was one of my first thoughts too when they were first floating the idea
[21:05:13] <wroathe> mackerman: My concern is making sure that if I'm ever overruled on the monorepo debate that we at least do monorepo *right* if we're going to do it
[21:05:29] <wroathe> Because monorepo done wrong sounds like a special kind of hell
[21:05:34] <ikke> agreed
[21:08:07] *** Quits: christall (~christall@dyn-4-36.myactv.net) (Ping timeout: 240 seconds)
[21:08:31] *** Joins: daoudr_ (~daoudr@178.197.213.56)
[21:09:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[21:10:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[21:13:16] *** Parts: wroathe (~wroathe@user/wroathe) ()
[21:15:37] *** Joins: hbautista_ (~hbautista@187.171.122.100)
[21:15:38] *** Joins: jess (~jess@libera/staff/jess)
[21:16:06] <cbreak> monorepos work in only two situations:
[21:16:17] <cbreak> 1. you have a different one for each project
[21:16:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 240 seconds)
[21:16:30] <cbreak> 2. you're alone and like chaos
[21:16:55] *** Quits: hbautista_ (~hbautista@187.171.122.100) (Client Quit)
[21:17:10] *** Joins: hbautista (~hbautista@187.171.122.100)
[21:20:00] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[21:20:37] *** Joins: linguist (~linguist@170.84.56.192)
[21:21:39] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:22:35] *** Joins: erikbean (~erikbean@2601:441:4680:6cd0:f51e:7f6d:ef98:b231)
[21:23:01] *** Quits: hubble (~hubble@69.160.252.250) (Ping timeout: 246 seconds)
[21:23:52] <erikbean> Hey
[21:24:50] <erikbean> Howdy
[21:24:59] *** erikbean is now known as eebean
[21:25:13] *** Quits: eebean (~erikbean@2601:441:4680:6cd0:f51e:7f6d:ef98:b231) (Client Quit)
[21:25:59] *** Joins: christall (~christall@dyn-4-36.myactv.net)
[21:26:14] *** Joins: snowyboy (~snowyboy@2601:441:4680:6cd0:f51e:7f6d:ef98:b231)
[21:26:53] *** Joins: Guest57 (~Guest57@2601:441:4680:6cd0:f51e:7f6d:ef98:b231)
[21:29:59] *** Quits: Guest57 (~Guest57@2601:441:4680:6cd0:f51e:7f6d:ef98:b231) (Client Quit)
[21:32:15] *** Joins: zebrag (~chris@user/zebrag)
[21:35:20] *** Quits: snowyboy (~snowyboy@2601:441:4680:6cd0:f51e:7f6d:ef98:b231) ()
[21:39:24] *** Joins: Titus-Tzeng (uid514377@id-514377.highgate.irccloud.com)
[21:40:25] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[21:42:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[21:44:48] *** Joins: randomuser (~randomuse@user/randomuser)
[21:44:58] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[21:45:42] *** Joins: Trieste (T@user/pilgrim)
[21:48:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Ping timeout: 250 seconds)
[21:49:18] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[21:49:26] *** Quits: Titus-Tzeng (uid514377@id-514377.highgate.irccloud.com) ()
[21:50:20] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[21:51:47] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 240 seconds)
[21:55:15] *** Joins: milahu (~quassel@p200300d7e721dc00a84ef402a92ae746.dip0.t-ipconnect.de)
[21:56:00] *** Joins: JackRuby (~textual@22.105.128.77.rev.sfr.net)
[21:56:05] <milahu> invalid refspec: im having trouble adding tor (https://git.torproject.org/tor.git) as a git submodule. the error is: fatal: invalid refspec '+refs/tags/tor-0.4.6.5^{}' -- see https://github.com/NixOS/nixpkgs/pull/128440#issuecomment-903491817
[21:57:09] <cbreak> milahu: so... what's wrong with just running a git submodule add ?
[21:57:29] <milahu> done that
[21:58:05] <milahu> git submodule add -b tor-0.4.6.5 https://github.com/torproject/tor.git
[21:58:30] <cbreak> why the -b tor-0.4.6.5?
[21:58:39] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[21:58:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e)
[21:58:55] <milahu> to set the branch ... ?
[21:59:07] <milahu> or to update:
[21:59:08] <milahu> git submodule set-branch --branch tor-0.4.6.5 src/extern/tor
[21:59:10] <cbreak> submodules track a commit
[21:59:19] *** Joins: Betal (~Betal@user/betal)
[21:59:26] <cbreak> does that branch exist?
[21:59:33] <milahu> yepp
[22:00:08] <cbreak> I don't see it: https://github.com/torproject/tor/branches
[22:00:52] <milahu> oh wait, no, thats a tag
[22:01:26] <cbreak> I'd recommend leaving the -b stuff away
[22:01:38] <cbreak> and just checking out the commit you want after the submodule clone
[22:01:45] <cbreak> before you commit the submodule addition
[22:02:21] <milahu> any way to do a shallow clone?
[22:02:29] <milahu> init + update?
[22:02:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:4ddf:1f6c:f92c:b88e) (Client Quit)
[22:02:49] <cbreak> you can clone how ever you want
[22:02:54] <cbreak> and run submodule add afterwards
[22:04:04] <cbreak> you can apparently also set some settings in .gitmodules to make initial clones shallow in some circumstances
[22:04:59] <cbreak> ( see man git-submodule, search for --depth and recommend-shallow)
[22:05:00] <gitinfo> the git-submodule manpage is available at https://gitirc.eu/git-submodule.html
[22:06:45] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:08:37] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:09:06] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[22:09:28] *** Joins: randomuser (~randomuse@user/randomuser)
[22:09:54] *** Quits: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com) (Quit: leaving)
[22:10:05] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[22:14:42] <milahu> weird. looks like the "fatal: invalid refspec '+refs/tags/tor-0.4.6.5^{}'" was not fatal at all, but my problem was "error: Server does not allow request for unadvertised object 62a500dd1d3ad012e12b7bf49fad912c9733107a". i removed and re-added the submodule with "git submodule add https://github.com/torproject/tor.git; cd tor; git checkout tor-0.4.6.5" ... and now its working, with the warning "fatal: invalid refspec '+
[22:14:42] <milahu> refs/tags/tor-0.4.6.5^{}'"
[22:17:29] *** Quits: JackRuby (~textual@22.105.128.77.rev.sfr.net) (Quit: Again ... I forgot to turn on amphetamine on my macbook)
[22:18:35] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[22:20:07] *** Joins: linguist (~linguist@170.84.56.192)
[22:24:07] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:28:24] *** Quits: rsx (~dummy@ppp-188-174-138-96.dynamic.mnet-online.de) (Quit: rsx)
[22:29:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[22:30:13] *** Joins: computeiro (~Wender@189.37.66.42)
[22:30:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[22:35:27] *** Joins: goldfish (~goldfish@user/goldfish)
[22:35:27] *** Quits: linguist (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[22:36:44] *** Joins: linguist (~linguist@170.84.56.192)
[22:37:42] *** Joins: austin987 (~null@100.42.98.196)
[22:37:49] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[22:41:10] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 240 seconds)
[22:41:11] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 268 seconds)
[22:42:52] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[22:43:47] *** Quits: stephenplatz (~steve@71-212-109-235.tukw.qwest.net) (Ping timeout: 250 seconds)
[22:44:55] *** Quits: PluckyDucky (~PluckyDuc@193.180.57.75) (Ping timeout: 246 seconds)
[22:45:40] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:48:15] *** Joins: vysn (~vysn@user/vysn)
[22:50:50] *** Joins: dontyouloveshort (~julius@ip5f5bc213.dynamic.kabel-deutschland.de)
[22:52:22] *** Quits: milahu (~quassel@p200300d7e721dc00a84ef402a92ae746.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:54:23] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:57:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:b597:2d79:a888:531f)
[22:59:16] *** Quits: dontyouloveshort (~julius@ip5f5bc213.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[22:59:59] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[23:03:10] *** Joins: manin (~x@185.242.190.95)
[23:04:17] *** Joins: DoofusCanadensis (~DoofusCan@208.38.34.74)
[23:06:45] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 250 seconds)
[23:08:55] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 250 seconds)
[23:09:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[23:10:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[23:11:38] *** Quits: DoofusCanadensis (~DoofusCan@208.38.34.74) (Quit: So as you can see from this flowchSQUIRREL!!)
[23:12:12] *** Joins: drew (~drew@user/drew)
[23:12:28] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[23:14:09] *** Joins: junktext (~junktext@109.201.152.169)
[23:15:25] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 250 seconds)
[23:16:56] *** Quits: frtdlteo^ (~frtdlteo@12.16.129.111) (Remote host closed the connection)
[23:21:48] *** Joins: jwr (~jwr@pool-71-182-194-5.pitbpa.fios.verizon.net)
[23:26:35] <jwr> I'm using `git log` to show me the last change in a file, like this: https://pastebin.com/raw/09fT1JKw. But what I really want is only that one line which changed ("bar" was added). Can git do that?
[23:27:30] <jwr> I can pipe to `grep ^+` or something, but if I can do the whole thing in git it would feel cleaner.
[23:27:40] *** Quits: ueberall (ueberall_l@user/ueberall) (Ping timeout: 240 seconds)
[23:27:49] *** Joins: junktext_ (~junktext@109.201.152.175)
[23:27:49] *** Joins: m_ueberall (ueberall_l@user/ueberall)
[23:28:01] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Quit:  )
[23:28:05] *** Quits: starfarer (~quassel@v22017084888652747.happysrv.de) (Ping timeout: 258 seconds)
[23:28:21] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[23:28:32] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[23:28:36] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[23:28:40] *** Joins: starfarer (~quassel@v22017084888652747.happysrv.de)
[23:29:43] *** Quits: junktext (~junktext@109.201.152.169) (Ping timeout: 250 seconds)
[23:30:08] <nedbat> jwr: you can add -U0 to show zero lines of unified context.
[23:31:34] *** Joins: gareppa (~gareppa@user/gareppa)
[23:32:06] *** m_ueberall is now known as ueberall
[23:32:57] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[23:33:18] <jwr> nedbat: thanks, and that does get me closer. but it still outputs the metadata above the actual change. https://pastebin.com/raw/6ju2dPSk
[23:33:37] <ikke> no real way around that
[23:33:40] <nedbat> jwr: look at  ` git diff --help` to see what options are available
[23:34:40] *** Quits: jug (~jug@user/jug) (Ping timeout: 240 seconds)
[23:35:58] *** Joins: 040AAADSY (~linguist@170.84.56.192)
[23:37:14] *** Joins: dscho (~dscho@cgn-89-1-214-7.nc.de)
[23:37:27] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[23:39:07] *** Quits: linguist (~linguist@170.84.56.192) (Ping timeout: 240 seconds)
[23:39:08] *** Joins: unbuggedware (~unbuggedw@2602:fe90:300:1a2::40e1:8aec)
[23:44:48] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:44:53] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:4082:25ec:2577:3a2f)
[23:47:03] *** Quits: 040AAADSY (~linguist@170.84.56.192) (Read error: Connection reset by peer)
[23:48:10] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[23:48:20] *** Joins: linguist (~linguist@170.84.56.192)
[23:49:19] *** Parts: Vallenciana (~shells@the.best.shells.pancakecloud.com) ()
[23:49:20] *** Joins: jug (~jug@user/jug)
[23:50:21] *** Joins: Vallenciana (~shells@the.best.shells.pancakecloud.com)
[23:59:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
