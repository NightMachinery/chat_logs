[00:19:24] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[00:19:38] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[00:23:41] *** Joins: tester12 (~tester12@5.120.77.247)
[00:40:46] *** Joins: P1RATEZ (piratez@user/p1ratez)
[00:42:00] <biberu> relipse: you should probably ask e.g. your local health care system or other authorities about that
[00:47:54] *** Quits: magla (~gelignite@55d40f0c.access.ecotel.net) (Quit: Stay safe!)
[00:48:01] <Byteflux> I vaguely remember... are you in the US? Contractors don't get (in my experience) employer-based insurance. You need to purchase a health insurance plan from your state's marketplace. https://www.healthcare.gov is a good place to find out how it works in your state.
[00:53:22] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[00:53:46] *** Quits: siinus (hmmm@saabas.kahtlane.info) (Ping timeout: 268 seconds)
[00:57:02] *** Joins: nuala2 (~nuala@user/nuala)
[00:57:05] <Sammitch> AFAIK pretty general that contractors do not receive supplementary benefits from the companies that they are contracted to. you do work and get paid money, that is the extent of it. you are responsible for everything else such as health/dental/etc coverage, payroll tax reporting and deduction, company financial reporting [you are a company of one], etc, etc. those are among the reasons why contractors'
[00:57:12] <Sammitch> rates are markedly higher than an equivalent FTE.
[00:57:12] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 245 seconds)
[00:59:33] <entuland> sigh, I should ask for a raise then
[00:59:51] <Byteflux> Indeed. Contractors also pay more taxes (before deductions) than the typically employed. Notably, contractors pay the full 15% of the Social Security/Medicare tax while others only pay 7.5% (employer covers the other half) :(
[01:00:00] *** Joins: siinus` (hmmm@saabas.kahtlane.info)
[01:00:01] <Byteflux> Which is why it's important to take every damn deduction you possibly can as a contractor.
[01:00:54] <Byteflux> Home office, supplies, development software, bookkeeping software, tax accountant etc. All deductible.
[01:01:28] <Byteflux> I even deducted a lot my Steam purchases as R&D expenses when I was in game development :)
[01:01:35] *** Quits: nuala2 (~nuala@user/nuala) (Ping timeout: 258 seconds)
[01:01:44] <Sammitch> the company I currently work for initially wanted to hire me on as a contractor, which I had never done before. I took my time and sked around and did math and planning, and when I quoted them my rate, which I thought was high even for a contractor, they stopped me and said "are you sure? that seems awfully _low_"
[01:02:08] <entuland> context-dependent - for the "plan" I have, I get to pay less taxes overall as long as I don't go beyond a certain yearly income, but on the downside I can't deduct anything at all
[01:02:20] <Sammitch> yadda yadda yadda they wound up offering me a term employment contract because it was clear I was an imbecile
[01:03:25] <Sammitch> most other companies would have just let me shoot myself in the foot and go bankrupt or whatever
[01:03:39] <entuland> glad you got a good arrangement there
[01:07:20] *** Joins: dlundgren_ (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net)
[01:10:32] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 255 seconds)
[01:10:32] *** dlundgren_ is now known as dlundgren
[01:13:31] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:18:06] *** Quits: genom (~g@37.214.74.93) (Remote host closed the connection)
[01:25:10] *** Joins: dlundgren_ (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[01:27:12] *** Quits: dlundgren (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net) (Ping timeout: 245 seconds)
[01:27:12] *** dlundgren_ is now known as dlundgren
[02:14:07] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[02:26:39] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Quit: Konversation terminated!)
[02:33:12] *** Joins: nuala2 (~nuala@user/nuala)
[02:50:33] <tester12> hi freinds
[02:51:59] *** Quits: pmercado (~pmercado@186.107.49.222) (Quit: Konversation terminated!)
[02:55:34] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[03:02:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:04:51] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:05:07] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[03:15:34] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[03:17:52] *** Quits: tester12 (~tester12@5.120.77.247) (Quit: Client closed)
[03:18:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[03:28:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:30:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:30:50] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[03:38:36] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f472:b5db:88c6:67dd) (Read error: Connection reset by peer)
[04:21:47] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[04:22:11] <sumthing1980> hello does anyone have problem with socket connections ?
[04:22:25] *** Joins: bobdobbs (~user@2406:5a00:f001:c600:f168:5b77:9f1c:6c14)
[04:22:51] <sumthing1980> I have a client and server, and when sending like a few mb s the data is randomly cut off and sometimes complete
[04:25:54] *** Quits: cspray (~cspray@75.76.18.60) (Ping timeout: 240 seconds)
[04:29:34] <Blondie101010> sumthing1980:  what type of connection?  maybe just seeing a few lines of code would clarify many things
[04:29:45] <sumthing1980> I can put the code on the net
[04:29:58] <sumthing1980> choose a site
[04:30:12] <sumthing1980> tcp
[04:30:24] <Blondie101010> !+pastebin
[04:30:24] <php-bot> Submit your code to https://gist.github.com/ or https://paste.gg/ (both support multiple files in a single paste); https://3v4l.org/ (for an actually runnable code, if you actually need it); or any of the other hundred similar Pastebins and post the URL and a summary of your issue to the channel. Please don't flood by pasting code directly into ##php.
[04:31:22] <Blondie101010> it would also be nice to get a general understanding of the problem...  does it happen for all clients or just a few?
[04:31:38] <Blondie101010> are you monitoring anything while the issue occurs?
[04:31:39] <sumthing1980> I connect with telnet and it does the same thing
[04:31:46] <Blondie101010> then that's it
[04:31:46] <sumthing1980> no not monitoring
[04:31:50] <sumthing1980> like wireshark?
[04:31:57] <Blondie101010> hold on
[04:32:01] <sumthing1980> maybe I can try that
[04:33:01] <Blondie101010> yes maybe but your situation is not clear enough
[04:33:50] <Blondie101010> so, is this happening for most people or just one?
[04:36:06] <Blondie101010> when you said that you connect with telnet and it does the same thing, it makes it more confusing
[04:36:07] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:36:15] <Blondie101010> otherwise what do you connect with what else?
[04:37:27] <sumthing1980> I connect with php to the php script that runs in cli
[04:37:48] <sumthing1980> both standard tcp so should be no difference
[04:37:54] <sumthing1980> same as basic telnet to that port
[04:38:03] <Blondie101010> on the same machine?
[04:38:21] <sumthing1980> open 2 terminal windows and run them on each window
[04:38:22] <sumthing1980> yes
[04:39:14] <sumthing1980> run listen on one terminal it just sends a 12 mb data to whoever connects
[04:39:32] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[04:39:43] <sumthing1980> the other one connects but it receives different sizes
[04:39:58] <sumthing1980> each time you run it gets different amount
[04:40:18] <Blondie101010> you should start by enabling error reporting and removing the "@" to hide problems
[04:40:47] <ash_worksi> Blondie101010: you mentioned you were a vim user before; do you still use it for PHP?
[04:41:20] <Blondie101010> sure
[04:42:35] <sumthing1980> did you manage to run it
[04:43:11] <Blondie101010> I won't run it or debug your code
[04:43:33] <sumthing1980> nice why are we talking then
[04:43:39] <Blondie101010> what is the output it gives?
[04:44:20] <ash_worksi> Blondie101010: when writing a new file, do you start from scratch or do you have a basic file generated? If the latter, do you use a PHP package to do that or is there something vim-ish (autocomplete?) you use?
[04:45:24] <Blondie101010> ash_worksi:  I don't do PHP full time, though I have more to work on at the moment
[04:45:50] <Blondie101010> I don't like autocomplete, and don't care so much about coloring though it can be nice
[04:47:00] <Blondie101010> sumthing1980:  there's something you don't see to understand about support channels...  people here help other learn to code or troubleshoot, not work for them for free
[04:47:28] <Blondie101010> if you can't even give answers, then you'll need to pay someone to help you
[04:49:21] <sumthing1980> there may be a bug thats why I asked for someone to verify it
[04:49:48] <Blondie101010> I'm sure there is one....  I already gave you some suggestions and asked you a bunch of questions
[04:49:54] <Blondie101010> now time for you to do something
[04:50:36] <Blondie101010> but frankly I'm not sure where you think you're going with this idea...  what I see is fairly ugly code that does almost nothing, and nothing well
[04:51:12] <celphi> whats the shortcut command to get all the values of a specific key of each array? or do i need to do array map?
[04:51:31] <sumthing1980> my mistake of asking you
[04:51:43] <Blondie101010> celphi:  please clarify...  there is *one* value per key
[04:52:06] <Blondie101010> perhaps you want to var_dump($arr['somekey'])
[04:52:44] <celphi> `[  ['field' => 'peanut', 'blah' => 'blah'], ['field' => 'jelly', 'blah' => 'blah'] ]` i want `['peanut', 'jelly']`
[04:52:50] <Blondie101010> sumthing1980:  did you follow any of my suggestions or provide any answer?
[04:52:52] <celphi> is array map the best approach?
[04:53:00] <Blondie101010> sumthing1980: !+error reporting
[04:53:00] <php-bot> sumthing1980, Set `error_reporting = -1` in your php.ini (to see errors on your webpage, also set `display_errors = 1`) and be sure to restart your webserver/fastcgi-listeners. Using `ini_set()` and `error_reporting()` is less reliable - for example, in the case of parse errors. See https://php.net/errorfunc.configuration or "/msg php-bot error logging" for more.
[04:53:03] <Blondie101010> !+@
[04:53:03] <php-bot> [@] The PHP error control operator that suppresses errors (@foo()), see: http://php.net/operators.errorcontrol - Don't use it. See http://derickrethans.nl/five-reasons-why-the-shutop-operator-should-be-avoided.html for some reasons why not
[04:53:29] <Blondie101010> and please don't use globals
[04:53:59] <Blondie101010> also experiment with type juggling in a specific piece of code that is not related to sockets
[04:54:19] <Blondie101010> I was NOT exaggerating when I politely said this was bad
[04:54:34] <celphi> `array_map(function($field){ return $field['field']; });` ??
[04:54:50] <celphi> oops and add the array in there
[04:54:57] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:54:58] <celphi> or is there something better
[04:55:47] <Blondie101010> celphi: you know what's worse than not making the right choice?
[04:55:53] <Blondie101010> taking hours to make a worst choice
[04:55:57] <Blondie101010> just make it work
[04:56:42] <celphi> k ty Blondie101010
[04:57:07] *** Joins: ferdna (~ferdna@user/ferdna)
[04:57:40] <__adrian> celphi: https://php.net/array_column
[05:00:32] <celphi> perfect ! ty __adrian
[05:03:31] <ash_worksi> celphi: perhaps array_column
[05:03:34] <ash_worksi> damn __adrian
[05:03:41] <celphi> lol
[05:03:46] <celphi> thnx anyhow
[05:03:46] <ash_worksi> you stole my oppertunity to be helpful
[05:04:09] <celphi> im sure I WILL provide you more opportunities
[05:04:13] <celphi> lmao
[05:05:19] <ash_worksi> Blondie101010: so then do you start from scratch or do you have something make for example an empty class with declare(strict_types=1) and a namespace, etc?
[05:06:00] <Blondie101010> that doesn't seem to useful, but I often do start with something similar I already have
[05:07:38] <ash_worksi> Blondie101010: so generally, you just `cp` a file?
[05:08:56] * Blondie101010 nods
[05:09:42] <__adrian> my personal stuff doesn'
[05:09:51] <__adrian> my personal stuff doesn't have so much boilerplate that it matters
[05:09:56] <__adrian> i just type it
[05:10:18] <__adrian> work stuff, i copy. there's a bunch of gibberish that literally doesn't make any sense
[05:16:46] <celphi> is it more common to use NULL or null
[05:16:58] <__adrian> ...meh
[05:16:59] <Blondie101010> seriously, come on
[05:17:10] <celphi> what? every language is different
[05:17:24] <__adrian> wrt the language,  NULL and null are exactly the same
[05:17:39] <celphi> not in all languages
[05:17:41] <Blondie101010> and even so, what matters is the one you're using at that moment
[05:17:57] <celphi> javascript NULL != null
[05:18:00] <Blondie101010> you obviously already know it doesn't matter
[05:18:00] <__adrian> wrt style, don't fixate on it. pick one
[05:18:18] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 240 seconds)
[05:18:24] <celphi> ok ty
[05:18:37] <Blondie101010> I used to use all caps for booleans and null until I got tired of pressing shift
[05:19:55] <celphi> lol
[05:20:14] <celphi> well in languages like C it matters :P
[05:20:35] <celphi> so i guess it's a valid question
[05:20:38] <Blondie101010> this is not #c and not the language you're using right now
[05:20:45] <__adrian> also an ansswered question
[05:20:49] <celphi> ya- ty
[05:21:19] <__adrian> welcome
[05:21:35] <__adrian> i'll refer you to php.net for similarly basic questions, though.
[05:22:31] <celphi> php.net doesnt say which is convention
[05:24:04] <__adrian> it says they're the same
[05:24:08] <__adrian> which is all that matters
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:50] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[06:05:49] <celphi> interesting- i didnt know `null` unsets a variable
[06:06:14] <celphi> well unsets the value
[06:06:49] <celphi> it removes the variable
[06:07:22] <Blondie101010> hmmm, why do you say that?
[06:08:46] <celphi> oh this article is wrong. it seems php.net has a note in there now that the behavior is no longer the case
[06:08:48] <Blondie101010> is it because of how isset() and is_null() behave?
[06:09:26] <celphi> https://kunststube.net/isset/
[06:09:56] <celphi> "casting to null" is now deprecated
[06:10:01] <celphi> "Casting a variable to null will remove the variable and unset its value."
[06:10:31] <Blondie101010> it's easy to find bad information
[06:10:37] <Blondie101010> https://3v4l.org/ipRNS
[06:10:57] <Blondie101010> one gives a warning/notice, and not the other, for a very obvious reason
[06:11:06] <Blondie101010> the variable exists
[06:11:55] <Blondie101010> though some may not like that null is a value, it is one
[06:13:14] <Blondie101010> going one step further: https://3v4l.org/Q588m
[06:13:15] <celphi> nice
[06:15:04] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:21:40] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 258 seconds)
[06:21:59] *** Joins: goddard (~goddard@user/goddard)
[06:27:55] <celphi> does php have short circuit functions?
[06:29:02] <celphi> or is the only way to achieve this is with foreach with function wrapper
[06:45:13] *** Joins: Rockwood (~Rocky@user/rocky)
[06:57:34] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 265 seconds)
[06:58:48] <Sammitch> celphi: what do you mean by "short circuit functions"?
[06:59:53] <celphi> javascript has .every and .some where the function stops "short cirtuits" immedately after the condition is met/ or fails without having to iterate through the rest of array @Sammitch
[07:00:33] <celphi> so i was wondering do i have to create an anon function with foreach with return in it to achieve same thing or is there better?
[07:01:38] <Sammitch> I'm not familiar with JS, but it sounds vaguely like a generator https://www.php.net/manual/en/language.generators.overview.php
[07:02:14] <__adrian> he just wants a foreach with a conditional
[07:02:21] <__adrian> yes, make a function. it's easy.
[07:02:37] <Rockwood> __adrian, hi how are you sir?
[07:02:46] <Sammitch> then I guess the difference would be where the conditional lives :P
[07:02:51] <__adrian> mm hm
[07:03:12] <celphi> actually with generator it may work
[07:03:22] <celphi> i didnt know php had them
[07:04:04] <__adrian> funtion until(callable $condition, callable $callback, iterable $items) { foreach ($items as $item) { if ($condition($item)) { return; } $callback($item); } }
[07:04:38] <__adrian> whether you make that a generator has nothin to do with nothin
[07:05:49] <celphi> better memory management if it's the same generators as python/javascript
[07:05:57] <__adrian> ...
[07:05:58] <__adrian> no
[07:06:18] <__adrian> that might be so if the $items were a generator
[07:06:23] <Sammitch> ^
[07:06:58] <__adrian> or if you were yielding each result. but that means it's a generator anyway (it has nothing to do with the "short circuit" part)
[07:07:46] <celphi> you're right i began with one idea and realized the solutin to my problem could be solved with both.
[07:08:59] <__adrian> if you were to solve your original question with a generator, it would be by managing the condition/short-circuit yourself (in calling code, outside of the function). so it would be not different, in that regard, than just _not_ using a function at all.
[07:09:12] <__adrian> *no different
[07:09:18] *** Joins: goddard (~goddard@user/goddard)
[07:10:18] <celphi> i was manually handling what a generator does by splitting the data into pieces then looking to short circuit on those results. but since php has generators i can achieve both with generators
[07:11:39] <__adrian> like i said, that's still a manual, calling-code solution (you loop on the generator and decide when you want to stop). not a different solution (in isolation) than just looping, without a generator.
[07:12:15] <__adrian> you can move that logic into the function, yes (and probably should). but you don't need the "generator" part to do just that.
[07:13:34] <celphi> i had [100k elements] x 1000 that i was iterating and needing short circuiting - but now that i know there's generators i can do all 1 billion elements at once and stop on condition
[07:13:36] <Rockwood> really sorry to interrupt you friends i am very confuse what kind of stuff, he is trying to solve by generators?
[07:14:46] <celphi> im good Rockwood - all is well
[07:16:41] <__adrian> at this point i'll just say, yeah, do it. it'll work. not for the reasons you think, but that's slightly less important.
[07:16:45] <Rockwood> really me too wanna learn thing that why asking
[07:21:41] <Sammitch> Rockwood: two things: 1. he wants to iterate over a dataset, stopping when a certain condition is met. this has nothing to do with generators, really. 2. He wants to iterate over a large dataset, which is a good use case for generators.
[07:22:28] <Sammitch> point 1 is more or less replicating an invocation peculiar to javascript
[07:22:31] <__adrian> Rockwood: did you have a question about it? or just random curiosity
[07:23:07] <__adrian> well, "iterate until" is a useful thing. just, like you said, not a "generator" thing specifically.
[07:23:16] <Sammitch> but is generally just a foreach() { if() { break; } ... }
[07:23:35] <Rockwood> __adrian, yes asked in real
[07:24:29] <celphi> break exits foreach in php?
[07:24:39] <celphi> lmao
[07:24:49] <Rockwood> Sammitch, thanks for explain
[07:24:57] <celphi> never would have guessed that one
[07:25:28] <Blondie101010> just read the manual
[07:25:38] <Blondie101010> the address is easy to remember: php.net
[07:25:38] <Rockwood> what its generating?
[07:25:38] <__adrian> celphi: you don't need to guess :)  https://php.net/foreach https://php.net/break
[07:25:56] <__adrian> Rockwood: values. whatever your code does.
[07:25:56] <celphi> yeah i know what break does but i guess i didnt lol.
[07:26:19] <celphi> man- php does things so differently
[07:26:29] <Blondie101010> what?
[07:26:31] <Rockwood> its iterating not generating i think
[07:26:47] <Blondie101010> celphi:  how is `break` in PHP so unlike other languages?
[07:26:55] <celphi> javascript doesnt exit
[07:27:01] <celphi> in forEach
[07:27:05] <celphi> nor does C++
[07:27:14] <__adrian> no, it's different than iterating. it's like  return $value;  except you can do so multiple times. the generator will  yield  a value, and then when you get to the next loop, the generator will keep going to yeild another, etc.
[07:28:20] <Rockwood> an okay
[07:28:23] <Rockwood> ah
[07:28:56] <Rockwood> thanks for explain
[07:29:31] <Rockwood> oops i am working something else lol
[07:29:31] <Sammitch> https://3v4l.org/aAeF3#v8.0.8
[07:30:14] <celphi> if i use array_keys($arr) and array_values($arr); am i guarantteed to get them in same order?
[07:30:32] <celphi> like the mapping will be in same index
[07:30:50] <Rockwood> is yield in PHP8?
[07:30:58] <Rockwood> i never noticed before
[07:31:02] <celphi> even before 8
[07:31:07] <__adrian> it's been around a long while
[07:31:12] <Blondie101010> celphi:  just try it, but yes
[07:31:15] <__adrian> Rockwood: https://3v4l.org/bqWH7
[07:31:16] <Blondie101010> but try it
[07:31:29] <celphi> yes but trying !== yes
[07:31:43] <__adrian> what?
[07:31:45] <celphi> python doesnt guarantee it but it works
[07:31:49] <celphi> sometimes
[07:31:52] <__adrian> ah
[07:31:53] <Blondie101010> basic understanding of array principles is way sufficient to answer that
[07:31:59] <__adrian> php arrays are ordered.
[07:32:01] <Blondie101010> the index is the same for both operations
[07:32:06] <celphi> ty
[07:32:21] <__adrian> php manual usually notes things like that
[07:32:51] <celphi> i like informing room of my Qs - extra chatter could help :P
[07:33:25] <__adrian> check first
[07:33:29] <celphi> aight
[07:33:49] <__adrian> if you can't find it, then yes, ask. but otherwise, we're just reading the manual for you, which is not a good use of time
[07:33:56] <celphi> good point
[07:34:18] <__adrian> find *or understand
[07:34:31] <Sammitch> I might be biasedd because I've been fighting with python all day, but why were people so jazzed about this language? =_=
[07:34:44] <__adrian> because it has a "way"
[07:38:37] <celphi> super easy to learn
[07:39:07] <celphi> and lots of libraries with machine learning / opencv
[07:39:43] <celphi> but php dominates web imo
[07:40:01] <celphi> so much easier to make sites in this langauge than any other
[07:40:03] <__adrian> i don't enjoy python for web stuff
[07:40:12] <__adrian> but in general i like things about it
[07:40:13] <celphi> i dont either
[07:40:26] <Byteflux> Like anything you'll struggle with it until you learn how to do things the idiomatic way. There's a "Python way" to do most things and you just have to learn the language well enough
[07:40:34] <__adrian> ^
[07:40:44] <__adrian> the idioms are really pushed onto you
[07:40:53] <celphi> yup
[07:40:57] <__adrian> if you don't follow them it'll basically alway be a pita
[07:41:03] <__adrian> *s
[07:41:22] <celphi> they still have lambda functions though
[07:41:40] <Byteflux> Python's lambdas are... not that great. Probably not that useful either.
[07:42:03] <celphi> im just saying it's easier to transition to the language if you learn the syntax
[07:42:29] <__adrian> hmmm... nice advice
[07:43:55] <celphi> lol. im just saying you dont have to learn the list comprehension or the idioms they use-- if you use map/reduce/filter in php you can use same thing with their lambda functions in relatively same syntax
[07:44:27] <__adrian> the fact that someone showed me comprehensions might be the only reason i jumped into it
[07:44:52] <Byteflux> well you *should* learn those things and you should learn/use idioms
[07:45:45] <celphi> i agree. i know them., just advice if you wanted to dab with it a little and not have to take on too much you can learn just the lambda syntax and achieve pretty much w/e
[07:46:16] <Byteflux> i almost never use lambda so im not sure where this is coming from >_>
[07:46:30] <celphi> shrug- it's a style
[07:47:27] <celphi> if you're into functional programming like me -- then you'd prob like them more
[07:48:44] <__adrian> ...you might mean the right thing by that, but ime, most people that say that sort of thing mistake "functional code" with "code that has functions"
[07:49:00] <__adrian> just for awareness  :)
[07:49:30] <celphi> heh., no i mean like currying
[07:49:50] <__adrian> gotcha
[07:52:18] <Byteflux> fair, but FP is very minimally used/unpopular in python
[07:53:11] <Byteflux> though it has first-class functions it's just not a common style
[07:56:23] <Byteflux> it's too bad python is so slow though... one of the slowest runtimes among other similarly high level languages. defeated even by php.
[08:04:59] *** Joins: guidoc (~guido@host-95-234-253-170.retail.telecomitalia.it)
[08:36:56] *** Quits: ham5 (iamfive@user/ham5) (Ping timeout: 255 seconds)
[08:37:02] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[08:37:51] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[08:38:30] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Client Quit)
[08:40:16] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[08:55:59] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[09:16:39] <celphi> what's the simpliest way to check [values, values] all exist in ['keys' => 'only_check_on_keys', 'keys2' => 'only_care_about_keys' ]
[09:17:09] <celphi> array_diff($arr1, array_keys($arr2)); ?
[09:17:25] <Rockwood> cya
[09:17:32] <celphi> cya Rockwood
[09:17:32] <Rockwood> my office time :)
[09:18:04] <Rockwood> by foreach too
[09:18:07] <Rockwood> anyway
[09:18:09] <Rockwood> cya
[09:18:13] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:36:14] *** Joins: stenno (~stenno@user/stenno)
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:41:21] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:46:32] <Byteflux> celphi: close. you probably want array_intersect() instead of array_diff()
[09:47:20] <Byteflux> `array_intersect($arr1, array_keys($arr2)) == $arr1`
[09:47:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[09:47:53] <celphi> i want the difference
[09:48:05] <celphi> ie the ones missing- its working
[09:48:23] <Byteflux> you said you want to test if the values in $arr1 *ALL* exist as keys in $arr2
[09:48:27] <Byteflux> this sounds like you want intersect.
[09:49:12] <Byteflux> so i guess the question was wrong then, maybe
[09:49:18] <celphi> ya. array dif is checking if they are all present., and for the ones not present i get an array of those values
[09:49:50] <Byteflux> that works both ways
[09:49:59] <Byteflux> you get the keys back that are not present in either $arr1 or $arr2
[09:50:09] <celphi> npe
[09:50:13] <celphi> just in $arr1
[09:53:20] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 272 seconds)
[09:53:35] <Byteflux> seems so yeah, documentation was a bit confusing
[09:53:54] <celphi> yeah the text is defintly confusing
[09:54:29] <Byteflux> lol the top rated comment on the array_diff() page is about the confusing description
[09:54:41] <celphi> lmao
[09:55:09] <celphi> off to take a break from coding -- time to watch some tv then ZZZzzz
[09:55:19] <celphi> l8a
[09:55:22] <Byteflux> see ya.
[09:58:31] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:02:00] *** Joins: stenno (~stenno@user/stenno)
[10:06:27] *** Joins: goddard (~goddard@user/goddard)
[10:06:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[10:10:57] *** Joins: stenno (~stenno@user/stenno)
[10:11:23] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 265 seconds)
[10:19:13] *** LSD is now known as acidsys
[10:19:40] *** Joins: guy_frm_yogaland (~gourab@117.228.75.49)
[10:24:45] *** Joins: goddard (~goddard@user/goddard)
[10:32:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[10:35:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:37:44] *** Quits: guy_frm_yogaland (~gourab@117.228.75.49) (Ping timeout: 258 seconds)
[10:43:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:00:13] *** Joins: nucc1 (~nucc1@user/nucc1)
[11:02:10] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[11:02:37] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[11:06:00] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 265 seconds)
[11:13:37] *** Joins: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru)
[11:18:18] *** Quits: guidoc (~guido@host-95-234-253-170.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[11:26:54] *** undefined_bob1 is now known as undefined_bob
[11:28:10] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[11:28:29] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[11:30:16] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[11:31:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:35:09] *** Joins: guy_frm_yogaland (~gourab@117.228.54.213)
[11:36:59] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[11:41:08] *** Joins: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:47:45] *** Joins: stenno (~stenno@user/stenno)
[11:57:49] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:08:46] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[12:09:51] *** Joins: entuland (~entuland@user/entuland)
[12:49:46] *** Joins: keypushe- (keypusher@user/keypusher)
[12:49:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[12:52:46] *** keypushe- is now known as keypusher
[12:58:21] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 268 seconds)
[12:58:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[13:00:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:11:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:16:11] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[13:30:23] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[13:30:32] *** Quits: guy_frm_yogaland (~gourab@117.228.54.213) (Ping timeout: 245 seconds)
[13:32:21] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[13:54:29] *** Joins: chao (~stenno@user/stenno)
[13:58:46] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:59:29] *** chao is now known as stenno
[14:06:24] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[14:20:16] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[14:20:58] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[14:25:03] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[14:25:24] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 256 seconds)
[14:29:50] *** Joins: keypusher (keypusher@user/keypusher)
[14:30:23] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:51:17] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[14:52:23] *** Joins: keypusher (keypusher@user/keypusher)
[15:07:20] *** Quits: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru) (Ping timeout: 252 seconds)
[15:07:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[15:11:37] *** Joins: stenno (~stenno@user/stenno)
[15:12:51] *** Joins: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru)
[15:17:26] *** Joins: gefd (~Geoff@user/gefd)
[15:29:54] *** Quits: yuckey2d (~yuckey2d@66.115.145.202) (Ping timeout: 265 seconds)
[15:30:55] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 250 seconds)
[15:32:53] *** Quits: guidoc (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.2)
[15:37:33] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[15:39:20] *** Joins: keypusher (keypusher@user/keypusher)
[15:45:02] *** Joins: goddard (~goddard@user/goddard)
[15:48:59] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[15:52:47] *** Joins: guidoc (~guido@host-95-234-253-170.retail.telecomitalia.it)
[15:54:17] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 245 seconds)
[15:56:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[16:18:15] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:19:46] *** Joins: zibby15 (~androirc@user/zibby15)
[16:32:31] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e)
[16:33:18] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr)
[16:36:42] *** Joins: stenno (~stenno@user/stenno)
[16:48:06] *** Joins: Northwoods (~Northwood@223.130.30.69)
[16:54:04] *** Joins: sleetdrop (~sleetdrop@61.135.152.135)
[16:57:19] *** Joins: cspray (~cspray@75.76.18.60)
[17:06:57] <relipse> Where is the best place to do code challenges to prepare me for interviews?
[17:08:11] <__adrian> not sure. i don't find such things valuable (personally, as a learning tool, or as an interview method)
[17:09:31] <__adrian> a better team might ask you about how you might approach fixing some code, or hold a planning session/discussion instead
[17:09:31] <Blondie101010> well there are some fairly good tests...  I remember I once went on testdome.com and liked those
[17:12:17] <AllenJB> > Skip the Resume Review ... Simply include the test link in your job posting. Candidates apply for your job by taking a skills test.
[17:13:02] <AllenJB> "Ignore experience and what makes the candidate unique in favor of a point in time, one time test that almost certainly doesn't reflect actual work!"
[17:13:37] <AllenJB> These things need to die in a fire
[17:14:46] <Naktibalda> I'm hearing about leetcode.com a lot recently.
[17:15:26] <stenno> i like to take coding challenges but only because i am competitive and like to compare myself to others
[17:15:41] <stenno> like, compare my skills to the skills of otherse
[17:16:14] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[17:16:25] <olle> Anyone knows if phpmd is broken for generators? yield
[17:16:26] <stenno> stuff like aoc
[17:19:58] <__adrian> even good assessments are generally applied poorly in interviews.
[17:20:52] <stenno> i don't think there is a sensible ruleset for a challenge for an interview
[17:21:34] <olle> The discussion is interviews? I'm interested in this... We need to come up with something for our new applicants.
[17:23:43] <Naktibalda> about code challenges
[17:24:13] <zibby15> Is the purpose of these sites to measure the algorithm skills of the candidates or to see if the candidate can answer the question as soon as possible?
[17:25:41] <Naktibalda> different sites can have different ways of working
[17:26:13] <olle> Naktibalda: Hm
[17:26:18] <olle> I prefer system design challenges.
[17:26:25] <olle> Or OOP design
[17:27:39] <olle> The "challenge" is to come up with something that only takes ~2h, but still give you lots of info/signals from the applicant
[17:27:51] <stenno> 2 hours?
[17:29:37] <Blondie101010> 2 hours is long for a screening test
[17:29:46] <olle> Depens on the position.
[17:29:56] <olle> I did 3h test for rebuy.de
[17:31:23] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:31:49] <olle> But yes, if you do the exercise during the interview, you can reduce the time to 20 min or so. I guess. Never tried.
[17:34:47] *** Quits: sleetdrop (~sleetdrop@61.135.152.135) (Quit: Textual IRC Client: www.textualapp.com)
[17:34:56] *** Joins: pmercado (~pmercado@190.22.176.14)
[17:47:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e) (Ping timeout: 252 seconds)
[17:52:02] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[17:53:00] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr)
[18:08:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:14:49] *** Joins: Jck_true3 (~jcktrue@188.228.89.240)
[18:15:08] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Read error: Connection reset by peer)
[18:15:08] *** Jck_true3 is now known as Jck_true
[18:20:46] *** Joins: mykiwi (~mykiwi@51.15.25.130)
[18:24:23] *** Quits: gefd (~Geoff@user/gefd) (Ping timeout: 265 seconds)
[18:36:18] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:7969:171a:ce93:2df8)
[18:43:06] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:56:20] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[19:01:05] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 250 seconds)
[19:09:07] <celphi> i have one olle
[19:09:11] *** Joins: Northwoods (~Northwood@223.130.30.69)
[19:10:17] <celphi> you still there olle ?
[19:12:07] <olle> celphi: have one what?
[19:12:12] <celphi> https://bpa.st/KFUQ
[19:13:35] <olle> celphi: Nah, that's algorithmic
[19:13:42] <olle> Too far away from our work
[19:13:53] *** Quits: Ducki (~ducki@user/ducki) (Remote host closed the connection)
[19:20:30] *** Quits: stenno (~stenno@user/stenno) (Remote host closed the connection)
[19:21:07] *** Joins: stenno (~stenno@user/stenno)
[19:22:35] <olle> Knowing how to use polymorphism is something I'd like to check.
[19:25:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[19:28:16] *** Joins: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d)
[19:28:34] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-1.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[19:31:45] <AllenJB> olle: Which you can do in about a minute in a discussion. No need to have candidate waste time writing code that's (far too frequently) never discussed and they get zero feedback on.
[19:32:24] <olle> AllenJB: I actually don't want any code, I want design. ;)
[19:32:46] <olle> AllenJB: How would you ask about polymorphism, tho?
[19:32:54] *** Joins: genom (~g@37.214.74.93)
[19:39:08] <AllenJB> olle: Present some code and have a discussion around refactoring / extending it
[19:39:22] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[19:43:09] <olle> AllenJB: OK, yes, that's another way. Although it doesn't test design skill. But maybe that's not needed/wanted for every position.
[19:44:11] <celphi> is there a way to see get_defined_vars in error log
[19:44:30] <celphi> everythig im using either gives me nothing or ugly text
[19:46:15] *** Quits: zibby15 (~androirc@user/zibby15) (Quit: Leaving.)
[19:47:34] *** Joins: ferdna (~ferdna@user/ferdna)
[19:47:47] *** Joins: Ducki (~ducki@user/ducki)
[19:49:49] <olle> print_r
[19:49:53] <olle> or json_encode
[19:54:42] <AllenJB> Don't use print_r - it obfuscates values (empty strings, null, booleans - https://3v4l.org/6X5D0 ). I would suggest rather than dumping every defined variable you should focus on what's likely to be related to the problem you're trying to diagnose.
[19:54:42] <biberu> celphi: are you trying to log everything? do you really need that? if you are, careful with getting unintended information such as pii in your logs
[19:56:11] <celphi> yeah trust me i would love that buut these guys use 0 encapsulation and lots of weird things with variables-- would be so much easier to see a list of all their values than evaluating/var_dumping them one by one
[19:57:49] <biberu> celphi: is this something you could get af with a debugger instead?
[19:58:08] <celphi> it's results from an ajax call
[19:58:20] <biberu> yes?
[19:58:40] <celphi> so it's either going to be in dev tools as response or in error log
[19:58:55] <olle> or you can mail it to yourself
[19:59:06] <biberu> you can't attach a debugger to php?
[19:59:23] <celphi> debugger works if it's actually outputing to page
[19:59:37] <biberu> do you know what xdebug is?
[19:59:48] <celphi> ive heard of it yes
[20:01:41] <biberu> celphi: right, the debugger in your browser is for the client side things, e.g. javascript, you'll be able to see the response from php but not debug the actual execution on the server like that
[20:02:50] <biberu> i don't know if xdebug is what people are using these days, been a while since i did php, but you want something like it so that you can break in your php code and see what's going on there
[20:03:05] <Derick> yes, definitely Xdebug
[20:03:12] <biberu> that'll also avoid the entire issue of logging *everything*
[20:03:55] <celphi> aight ill look into it later tonight thnxx
[20:04:13] <__adrian> Derick> yes, definitely Xdebug  // ah good to hear an unbiased recommendation!
[20:04:15] <biberu> cool, life is much easier with a debugger
[20:05:00] <__adrian> also properly capatalized, sure to make googling easier :thumbsup::thumbsup:
[20:05:14] <__adrian> *i
[20:05:17] <biberu> __adrian: what are you using? ;)
[20:05:22] <__adrian> xdebug
[20:05:28] <__adrian> what else would i use?
[20:05:29] <celphi> lmao
[20:05:56] <celphi> thanks for a good laugh this am __adrian
[20:08:57] *** Joins: stenno (~stenno@user/stenno)
[20:13:18] <olle> var_dump($foo);die gang
[20:21:58] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[20:22:31] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[20:23:01] *** Joins: nbin (~nbin@user/nbin)
[20:23:29] *** Quits: guy_frm_yogaland (~gourab@2409:4062:117:330:4b5f:d414:f9b7:3b1d) (Remote host closed the connection)
[20:26:22] *** Quits: olle (~olle@p578524f9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:28:04] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[20:28:14] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[20:28:34] *** Joins: nbin (~nbin@user/nbin)
[20:30:32] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 245 seconds)
[20:30:33] *** dlundgren_ is now known as dlundgren
[20:32:34] *** Quits: mgocobachi (~m@ancrae.com) (Ping timeout: 240 seconds)
[20:33:29] *** Quits: mom (~mommy666@user/mom) (Ping timeout: 252 seconds)
[20:33:56] *** Quits: bernard__ (~bernard@user/bernard) (Ping timeout: 252 seconds)
[20:34:09] *** Quits: salathe (~peter@idle.php.net) (Ping timeout: 252 seconds)
[20:38:39] *** Joins: dskull (~dskull@user/dskull)
[20:39:03] *** Parts: dskull (~dskull@user/dskull) ()
[20:43:21] *** Joins: mom (~mommy666@user/mom)
[20:43:35] *** Joins: mgocobachi (~m@ancrae.com)
[20:43:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[20:45:45] *** Joins: bernard__ (~bernard@user/bernard)
[20:47:18] *** Joins: salathe (~peter@idle.php.net)
[20:54:03] *** Joins: impliednude (~impliednu@104.232.118.176)
[20:54:42] *** Quits: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru) (Ping timeout: 265 seconds)
[20:55:28] <NoiseEee> well digital ocean had NYC droplets down for 12 minutes, pretty solid adrenaline rush there
[21:01:57] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 265 seconds)
[21:16:51] *** Joins: ham5 (iamfive@user/ham5)
[21:44:24] <dag> i once had an archlinux droplet on DO and they managed to lose it and did not have backups. i got credited a few months lol
[21:45:04] <dag> this was years after they dropped archlinux support
[21:54:37] *** Quits: ethoxy (~root@echelon.lucif3r.ru) (Quit: brb)
[21:55:22] *** Joins: stenno (~stenno@user/stenno)
[22:12:10] *** Quits: impliednude (~impliednu@104.232.118.176) ()
[22:40:00] *** Quits: nucc1 (~nucc1@user/nucc1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:48:05] *** Joins: nucc1 (~nucc1@user/nucc1)
[22:51:19] *** Quits: nucc1 (~nucc1@user/nucc1) (Read error: Connection reset by peer)
[23:05:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:14:09] *** Joins: justache (~justache@user/justache)
[23:24:23] *** Joins: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru)
[23:25:51] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:28:31] *** Joins: Ducki_ (~ducki@user/ducki)
[23:29:17] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 245 seconds)
[23:30:09] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[23:33:17] <Sammitch> php y u no have PDOInterface to typedef on?
[23:34:09] <AllenJB> Because no one submitted and RFC for that yet
[23:34:58] *** Quits: guidoc (~guido@host-95-234-253-170.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[23:35:18] <__adrian> also there's only one class
[23:40:09] <AllenJB> True. I was thinking more about being able to create something which acts like PDO but isn't necessarily PDO. I guess a PDO interface might actually be quite complex too - exactly which methods would it define and which would be left up to the implementation - it might be better to have a method to implement PDO drivers in userland code for that.
[23:41:06] <AllenJB> Also PHP implements "magic" for certain classes - I suspect that's why you're not allowed to define classes that implement DateTimeInteface
[23:42:57] *** Quits: Wojjie (~Wojjie@64.137.159.231) (Read error: Connection reset by peer)
[23:56:57] *** Quits: Northwoods (~Northwood@223.130.30.69) (Ping timeout: 268 seconds)
[23:57:29] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Remote host closed the connection)
[23:57:57] *** Joins: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick)
[23:58:03] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[23:59:04] *** Quits: Mr-Snick (mr-snick@gateway/vpn/protonvpn/mr-snick) (Remote host closed the connection)
