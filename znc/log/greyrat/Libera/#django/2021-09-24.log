[00:03:59] <moldy> TWal: you can customize the form's __init__() to generate the field dynamically with an appropriate queryset argument
[00:04:14] <moldy> TWal: or alternativel, you generate the whole form class dynamically
[00:06:15] <moldy> TWal: https://dpaste.org/32EF
[00:11:21] *** Joins: JustJ (~TheLetter@207.38.28.68)
[00:13:13] <JustJ> Hi all. New to Django, but not new to server frameworks (specifically in Python). I had a question about freezing Django for am embedded project I am on. Currently we are using a VERY old version of Django, and freezing works. However, we have been relying on FastCGI support. The old version of Django supported a command `runfcgi` but now it's only `runserver`. If I freeze Django with wsgi.py in it, how am
[00:13:19] <JustJ> I wiring uWSGI to point to wsgi.py if the entire python file is one giant binary? (hope that makes sense)
[00:14:54] <JustJ> (if there a django tut that explains freezing + wsgi, and I missed it, my apologies, but Im happy to read a source if anyone has one)
[00:29:30] <FunkyBob> JustJ: when yo usay "freezing" ... what exactly do you mean?
[00:29:37] <FunkyBob> am guessing not "pip freeze"
[00:30:27] <FunkyBob> direct FastCGI support was removed long, long ago... and uWSGI is the only way left I know of to get it back
[00:37:26] *** Quits: JustJ (~TheLetter@207.38.28.68) (Ping timeout: 252 seconds)
[00:46:39] *** Joins: JustJ (~TheLetter@207.38.28.68)
[00:50:24] *** Joins: rcm888 (~u1@176.59.12.18)
[00:51:41] *** Quits: Elzington (~Elzington@89.38.227.231) (Quit: Leaving)
[01:00:58] *** Quits: JustJ (~TheLetter@207.38.28.68) (Ping timeout: 252 seconds)
[01:10:36] <TWal> moldy: Thank you for your help! I fiddled a bit with the dynamic approach, and this is the code that solved all my problems: https://dpaste.org/sPvp (will refactor it with a factory function later to use in the ModifyView)
[01:13:47] *** Joins: doc (~doc@user/doc)
[01:24:44] *** Quits: rcm888 (~u1@176.59.12.18) (Ping timeout: 252 seconds)
[01:40:23] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:42:16] *** Joins: djapo (~archangel@user/djapo)
[01:55:58] *** Quits: CodenameTim (~CodenameT@static-68-235-44-57.cust.tzulo.com) (Ping timeout: 252 seconds)
[01:57:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:58:41] *** Joins: JustJ (~TheLetter@207.38.28.68)
[01:59:27] *** Joins: fikran (~fikran@user/fikran)
[01:59:51] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:03:23] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[02:04:22] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:05:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:09:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[02:11:44] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:11:54] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:12:26] *** Joins: gitly (~gitly@185.69.144.134)
[02:21:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:21:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:27:38] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 260 seconds)
[02:28:29] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:32:06] *** Joins: bambanxx (~bambanx@181-163-37-254.baf.movistar.cl)
[02:32:40] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[03:23:32] *** Quits: JustJ (~TheLetter@207.38.28.68) (Ping timeout: 252 seconds)
[03:29:24] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[03:29:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:32:09] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[04:06:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:08:47] *** Joins: fikran (~fikran@user/fikran)
[04:12:27] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[04:14:14] <nedbat> why would an exception raised in a view function get turned into a 404?  I set the view to `lambda *a, **kw: 1/0`,  and i get a 404 page.
[04:17:56] <nedbat> it seems like the view function isn't run at all.
[04:18:54] <PaulWay[w]> Because the URL pattern didn't match?
[04:20:02] <nedbat> PaulWay[w]: the pattern does match, and the view function is in the mix, because when i use my real view function, the 404 page says, "Raised by: djstell.pages.views.entry" and when i change to a lambda, it says, "Raised by: djstell.pages.urls.<lambda>"
[04:20:05] <nedbat> I don't understand.
[04:23:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:25:03] <PaulWay[w]> I'm not an expert on substituting lambdas for view functions, but maybe it causes the URLs resolution to get confused?
[04:25:27] <PaulWay[w]> The real question is: why is your view function raising an exception not getting caught normally.
[04:25:39] <PaulWay[w]> Ignore the lambda question for the moment.
[04:25:55] <PaulWay[w]> Just put x = 1/0 in the start of your entry view function and see what that does.
[04:29:08] <nedbat> PaulWay[w]: right, i started with that.  it gives a 404.  Then I put this in the view function:  with open("/tmp/foo.txt", "a") as f: print("Hello", file=f)    and it gave a 404, without writing /tmp/foo.txt.   something strange is going on.
[04:30:19] <PaulWay[w]> Yes, it's not getting to your view function.
[04:30:31] <PaulWay[w]> Do you have DEBUG turned on?
[04:30:31] <nedbat> PaulWay[w]: right. but it names the view function in the 404 error page
[04:30:54] <PaulWay[w]> Let's assume it's lying about that then.
[04:31:00] <PaulWay[w]> Since you've proved that it's not getting to that code.
[04:31:40] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 252 seconds)
[04:31:59] <nedbat> PaulWay[w]: ok, what else could be doing it?
[04:32:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:34:05] <PaulWay[w]> The URL resolution itself.
[04:34:14] <PaulWay[w]> You've established it's giving a 404.
[04:34:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:34:20] <PaulWay[w]> Do you have DEBUG turned on?
[04:36:00] <nedbat> PaulWay[w]: yes, it's the yellow debug page which names the view function
[04:36:49] <PaulWay[w]> Right.  Does it show you which patterns it tried?  Does it look like one should have?
[04:37:07] <nedbat> PaulWay[w]: when I change the URL to a different pattern, it's still a 404, but names the correct view function for the url.
[04:37:39] <nedbat> i'm thinking some middleware is raising a 404 before the view function can be called.
[04:37:44] <PaulWay[w]> I'm suspecting something deeper, yes,.
[04:38:02] <PaulWay[w]> Is it showing you which pattern actually matched?
[04:40:27] <nedbat> PaulWay[w]: no, because it thinks a view function was found. it's acting as if the view function was called and raised 404.
[04:41:00] <PaulWay[w]> If you change the URL to one that doesn't match, does it show you the patterns?
[04:42:25] <nedbat> hmm, no
[04:42:36] <nedbat> though then it doesn't name a view function.
[04:44:00] <PaulWay[w]> Then something's wrong with the URL matching.
[04:44:21] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[04:47:46] <nedbat> PaulWay[w]: i guess i'm coming to different conclusions than you
[04:48:05] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[04:48:07] <PaulWay[w]> Let's try all the options.
[04:48:24] <PaulWay[w]> Look at all possibilities and eliminate the ones that aren't correct.
[04:49:20] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 252 seconds)
[04:51:54] *** Joins: cgar (~cgar@072-185-251-159.res.spectrum.com)
[04:51:54] <nedbat> the 404 is from the staticfiles.serve() function.
[04:52:05] <PaulWay[w]> Ah-hah!
[04:52:17] <PaulWay[w]> It's maybe a bit too broad?
[04:54:19] <nedbat> PaulWay[w]: would you say this is too broad? :)   STATIC_URL = "/"
[04:54:56] <PaulWay[w]> Well, depends on what staticfiles is adding to that.
[04:55:20] <PaulWay[w]> r'^/(.*)$' is going to be too broad :-)
[04:55:26] <nedbat> PaulWay[w]: when i change that setting, things work as I expect.  now I need to decide what to do about static files.
[04:59:21] <PaulWay[w]> Right.  Yeah, `/static/` is the usual path for static files... :-)
[05:23:20] <nedbat> PaulWay[w]: yes. i have a slightly unusual setup. it works on a real site (nedbatchelder.com), but i need apache locally to mimic it completely
[05:26:52] <PaulWay[w]> Is your set-up "I want Apache to serve static files for most things but to look to Django for specific paths"?
[05:26:56] <PaulWay[w]> Because that's what I want to do.
[05:27:18] *** Quits: ndwk (~ndwk@user/ndwk) (Ping timeout: 260 seconds)
[05:33:26] *** Joins: djapo (~archangel@user/djapo)
[05:34:20] <nedbat> PaulWay[w]: apache overlays django: if the URL is in the document root, apache serves it. if it's not a real file, then django gets it.
[05:34:55] *** Quits: rob4226 (~Thunderbi@136.144.35.49) (Ping timeout: 252 seconds)
[05:48:49] *** Quits: cgar (~cgar@072-185-251-159.res.spectrum.com) (Quit: Lost terminal)
[05:55:40] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[05:59:21] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[06:06:04] *** Quits: bambanxx (~bambanx@181-163-37-254.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:16:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:18:07] *** Joins: fikran (~fikran@user/fikran)
[06:18:46] <FunkyBob> nedbat: am curious how you managed that
[06:19:03] <FunkyBob> traditionally apache has caveats -- explicit lines for static and media, and passes everything else to django
[06:25:38] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[06:34:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:39:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[06:43:01] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[06:48:04] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[06:52:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:02:21] *** Joins: rje_ (~rje@50.35.241.164)
[07:02:52] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[07:06:14] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 265 seconds)
[07:07:54] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Quit: Ping timeout (120 seconds))
[07:13:22] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:20:43] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:24:46] *** Joins: aditya (~aditya@2401:4900:52f9:2552:c97c:953:5069:ceb2)
[07:26:22] <aditya> Hi I am the guy who opened #14885. I wish to know if there is any document which I should go through to understand all the cases.
[07:26:23] <django-ticketbot> https://code.djangoproject.com/ticket/14885
[07:28:15] <aditya> I am referring to https://github.com/django/django/pull/14885
[07:33:38] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[07:53:44] *** Quits: aditya (~aditya@2401:4900:52f9:2552:c97c:953:5069:ceb2) (Ping timeout: 256 seconds)
[07:59:15] *** Quits: zBeeble42 (~zBeeble@repeat.dclg.ca) (Remote host closed the connection)
[07:59:19] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[07:59:57] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[08:08:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[08:10:06] *** Quits: wht (~wht@havoc.proulx.com) (Quit: leaving)
[08:14:42] *** Joins: wht (~wht@havoc.proulx.com)
[08:16:08] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[08:17:39] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:27:28] *** Joins: fikran (~fikran@user/fikran)
[08:38:00] *** Joins: adiaholic (~adiaholic@2401:4900:52f9:2552:b107:f9a7:8c80:22c6)
[08:43:28] *** Quits: adiaholic (~adiaholic@2401:4900:52f9:2552:b107:f9a7:8c80:22c6) (Quit: Client closed)
[08:51:18] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[08:56:46] *** Joins: adiaholic (~adiaholic@2401:4900:52f9:2552:b107:f9a7:8c80:22c6)
[08:59:30] *** Quits: adiaholic (~adiaholic@2401:4900:52f9:2552:b107:f9a7:8c80:22c6) (Client Quit)
[09:02:44] *** Joins: sandeepk (~sandeepk@202.14.122.106)
[09:23:52] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[09:35:53] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[10:04:55] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[10:11:04] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[10:11:36] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[10:15:40] *** Joins: pycode (~pycode@2001:b07:5d28:551:3d1b:9448:afed:9721)
[10:33:25] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:35:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:36:48] *** Joins: fikran (~fikran@user/fikran)
[10:37:08] *** Joins: djapo (~archangel@user/djapo)
[10:40:57] *** Joins: node1 (~node1@user/node1)
[11:04:59] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[11:09:27] <serafeim> hello friends
[11:14:49] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[11:16:17] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:29:57] <debnet> Mornin'.
[11:30:21] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[11:46:14] *** Quits: node1 (~node1@user/node1) (Ping timeout: 260 seconds)
[11:55:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[12:04:54] *** Joins: zothix (~zoth@user/zothix)
[12:07:03] <zothix> Hi, i am making a Blog website, i want automate facebook posting ( post my newly created Blog on facebook when ever a blog is published ) for that regard i have implemented everything, the only problem i am facing is, my post_save django hook is supposed to run after the post is made, yet it runs while saving the post making the facebook not catch the newly created Blog post with seconds of dely, how can i make a signal that actually works after whole process
[12:07:03] <zothix> of saving is done by django
[12:08:09] *** Joins: Rikem (~mike@user/rikem)
[12:22:10] *** Joins: node1 (~node1@user/node1)
[12:23:37] <serafeim> zothix: use an asnyc task and start it a couple of seconds after the post is created
[12:25:09] <zothix> serafeim, so basically i should  add a decorator on my signal reciever @async_toasync
[12:25:19] <serafeim> zothix: no
[12:25:20] <zothix> and then use time.sleep , then post on facebook
[12:25:21] <zothix> ?
[12:26:07] <zothix> can you elaborate how should i be using async in signals?
[12:26:23] <serafeim> you need to have a job queue and your post_save should add a job to that queue. then a worker will get the job from the queue and execute it
[12:26:56] <serafeim> maybe take a look att this also https://spapas.github.io/2015/01/27/async-tasks-with-django-rq/
[12:27:04] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[12:27:13] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:27:13] *** ChanServ sets mode: +v EvilDMP
[12:28:23] <zothix> got it, thanks!
[12:29:12] <serafeim> cool
[12:34:32] *** Joins: Safa_[A_Boy] (~Safa@89.148.34.172)
[12:35:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:42:44] *** Quits: Safa_[A_Boy] (~Safa@89.148.34.172) (Quit: Leaving)
[12:43:59] *** Quits: sandeepk (~sandeepk@202.14.122.106) (Ping timeout: 252 seconds)
[12:44:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[12:45:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[12:46:07] *** Joins: fikran (~fikran@user/fikran)
[12:48:27] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:49:38] *** Joins: Atque (~Atque@user/atque)
[12:51:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:59:00] *** ChanServ sets mode: +v EvilDMP
[13:07:00] *** Joins: thiras (~thiras@user/thiras)
[13:14:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:17:34] *** ChanServ sets mode: +v EvilDMP
[13:21:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:23:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:27:54] *** Joins: mcrot (~mcrot@dslb-092-074-228-225.092.074.pools.vodafone-ip.de)
[13:36:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:36:12] *** ChanServ sets mode: +v EvilDMP
[13:36:48] *** Joins: sandeepk (~sandeepk@202.14.122.106)
[13:50:28] <nedbat> FunkyBob: tbh, i'm not sure how it's configured, this is shared hosting, with passenger
[13:51:20] <nedbat> FunkyBob: so i didn't choose it, but it has advantages: I have an auto-convert image url: the first time, django serves it, creating an actual file, then after that, apache serves the file.
[13:51:38] <FunkyBob> oh, nice
[13:54:06] <nedbat> FunkyBob: yeah, now I can upload jpg and png, but serve webp
[13:54:34] <FunkyBob> tasty
[13:54:59] <FunkyBob> am currently wishing (a) i could meet you in person, (b) we coudl share a meal and/or drinks and work over this...
[13:55:03] <FunkyBob> fuck this plague
[13:55:43] <FunkyBob> (c) I could find Max Max 2 on any streaming service :/
[13:55:58] <FunkyBob> Why did they not understand why are there a bajillion streaming services???
[13:56:09] <FunkyBob> (ah, found it on prime)
[13:56:32] <FunkyBob> [fek, they want me to pay extra]
[13:58:44] <FunkyBob> anyway
[13:58:58] <nedbat> FunkyBob: i would like all of those things, except Mad Max 2 :)
[13:59:09] <FunkyBob> every time I've configured apache / mod_wsgi ... it's required setting two alias lines before the WsgiScriptAlias
[13:59:21] <FunkyBob> oh, you hurt me! you don't like aus cinema??? :P
[13:59:43] <nedbat> FunkyBob: it's not aus, i just prefer different genres :)
[14:00:47] <FunkyBob> mm
[14:00:57] <FunkyBob> am open to suggestions.... of what to watch
[14:02:00] <FunkyBob> am also open to suggestions of what to cook... but that's not relevant here
[14:02:39] *** Joins: mattil (~mattil@airio.portalify.com)
[14:03:31] <nedbat> FunkyBob: i'm looking forward to season 3 of Succession
[14:04:03] <nedbat> FunkyBob: i'm trying to figure out if i can tweak runserver into working the way my apache does
[14:05:13] <FunkyBob> you should not be using runserver in prod... flat out.. don't
[14:05:15] <FunkyBob> it's a toy
[14:07:08] *** Joins: node1 (~node1@user/node1)
[14:09:02] <nedbat> i know, this is for dev
[14:09:26] <FunkyBob> so what is it yo uwant it to do that it is not?
[14:09:29] <FunkyBob> serve media?
[14:12:10] <FunkyBob> or is it still the 'static overaly' thing?
[14:12:29] <nedbat> yes, static overlay
[14:13:50] <FunkyBob> hmm
[14:14:22] <FunkyBob> do you want static/media to take precedence?
[14:14:27] <FunkyBob> or be a fallback?
[14:15:57] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:16:09] <nedbat> FunkyBob: static wins. seems like i need to make my own wsgi app
[14:19:00] <FunkyBob> middleware could do it
[14:19:10] <FunkyBob> there's an existing one...
[14:19:13] <FunkyBob> whitenoise
[14:20:53] <nedbat> oh, nice
[14:25:54] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[14:34:28] *** Quits: pycode (~pycode@2001:b07:5d28:551:3d1b:9448:afed:9721) (Ping timeout: 252 seconds)
[14:34:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[14:36:51] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:37:33] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.2.1)
[14:38:00] *** Joins: shangxiao (~davids@124.187.230.212)
[14:43:12] *** Joins: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net)
[14:52:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:53:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:55:26] *** Joins: fikran (~fikran@user/fikran)
[14:55:56] *** Joins: slav0nic (slav0nic@python.su)
[14:56:56] <nedbat> FunkyBob: middleware was a great idea.  I could write a few lines myself to make it work locally
[14:57:29] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 265 seconds)
[15:20:31] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[15:35:02] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:36:06] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[15:36:51] *** Quits: dre (~dre@2001:8003:c932:c301:a33d:f011:dc0c:a672) (Remote host closed the connection)
[15:41:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:41:03] *** ChanServ sets mode: +v EvilDMP
[15:42:55] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:01:15] *** Joins: dez (uid92154@user/dez)
[16:11:47] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:29:16] *** Joins: mattil (~mattil@airio.portalify.com)
[16:29:17] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[16:29:36] *** Joins: node1 (~node1@user/node1)
[16:34:54] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:35:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:40:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[16:44:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:03:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:04:41] *** Joins: pro_z (~pro_z@37.214.44.116)
[17:04:46] *** Joins: fikran (~fikran@user/fikran)
[17:05:21] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[17:11:15] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[17:30:19] *** Joins: CodenameTim (~CodenameT@66.63.167.153)
[17:30:34] *** Joins: node1 (~node1@user/node1)
[17:35:29] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[17:35:59] *** Quits: rje_ (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz…)
[17:36:44] *** Joins: rje (~rje@50.35.241.164)
[17:37:22] *** Quits: rje (~rje@50.35.241.164) (Read error: Connection reset by peer)
[17:37:28] *** Joins: rje_ (~rje@50.35.241.164)
[17:58:35] *** Quits: node1 (~node1@user/node1) (Ping timeout: 252 seconds)
[18:01:44] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[18:28:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[18:33:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:43] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 252 seconds)
[18:33:54] *** Quits: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:34:16] *** Quits: schinckel (uid38120@2a03:5180:f:3::94e8) (Ping timeout: 252 seconds)
[18:34:33] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[18:34:33] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[18:34:37] *** Joins: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com)
[18:34:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:34:48] *** ChanServ sets mode: +v EvilDMP
[18:35:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:35:20] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[18:35:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:35:35] *** ChanServ sets mode: +v EvilDMP
[18:35:53] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[18:35:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:36:28] *** Joins: debnet (sid330295@python/afpy/debnet)
[18:36:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:36:32] *** Joins: schinckel (uid38120@id-38120.ilkley.irccloud.com)
[18:36:32] *** ChanServ sets mode: +v EvilDMP
[18:36:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:37:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:37:25] *** ChanServ sets mode: +v EvilDMP
[18:37:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:37:50] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[18:37:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:37:58] *** ChanServ sets mode: +v EvilDMP
[18:38:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:38:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:38:58] *** ChanServ sets mode: +v EvilDMP
[18:39:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:39:18] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:39:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:39:47] *** ChanServ sets mode: +v EvilDMP
[18:39:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:40:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:40:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:40:19] *** ChanServ sets mode: +v EvilDMP
[18:55:22] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[19:02:10] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:02:14] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[19:04:50] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[19:05:37] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[19:12:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:14:06] *** Joins: fikran (~fikran@user/fikran)
[19:17:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Quit: Leaving)
[19:36:48] *** Joins: pycode (~pycode@2001:b07:5d28:551:c395:48d5:fd70:7615)
[19:40:53] *** Joins: node1 (~node1@user/node1)
[19:45:50] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:46:58] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:48:44] *** Joins: JordiGH (~jordi@user/jordigh)
[19:48:55] <JordiGH> Man, I'm trying to get django-impersonate and django-reversion to play nice.
[19:49:07] <JordiGH> All I wanna do is that impersonated reversions have a note of who the impersonator was.
[19:49:23] <JordiGH> But the new middleware style has pretty much no points to hook into.
[19:49:36] <JordiGH> So I kind of have to just rewrite the entirety of the middleware.
[19:50:08] <JordiGH> Sigh, I really hate upgrading software. You have to upgrade Django, so you have to upgrade everything else, but everyone thinks it's so cool to break things, and now I have to figure out how to deal with the things everyone else wants to break.
[19:51:02] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[19:52:24] <pycode> hello everybody
[19:53:51] <pycode> i wounder who of you is deploying to a standalone server, i wound like to understasnd what you are doing for deploying, i was talking about that with someone here, but yes... more solutions are accepted :)
[19:54:45] *** Quits: sandeepk (~sandeepk@202.14.122.106) (Quit: Leaving)
[19:59:11] <pycode> does anyone know a good tutorial to understand how to "organize" the deployment of a project?
[20:03:53] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[20:07:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:21:28] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:28:28] *** Quits: mcrot (~mcrot@dslb-092-074-228-225.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[20:35:29] <pycode> can i manage multiple domain with the same project?
[20:35:44] <pycode> i basically have a project that have the same models of another
[20:35:57] <pycode> i thought to put that as an app inside the main project
[20:36:01] <pycode> but assigning a different domain
[20:38:22] *** Quits: bodozene (~bodozene@pool-108-29-155-252.nycmny.fios.verizon.net) (Quit: Leaving)
[20:39:38] <JordiGH> I use django-multisite for that but I'm not entirely sure why.
[20:39:50] <JordiGH> I think because we want to route domains to databases?
[20:42:00] <pycode> JordiGH, i basically have a kind of landing page that need the SAME models as the main project it only have a different layout... so instead of recreating a new project i thought to create an app with that custom layout/templates and share the same model
[20:42:27] <pycode> but the problem is that this langing page needs a specific domain
[20:42:32] <pycode> separated from the main domain
[20:44:58] <pycode> JordiGH, how can i manage it?
[20:45:17] <JordiGH> I don't really understand the problem statement.
[20:45:19] <pycode> creating a new project for a landing page is basically copying 90% of the code of the main project
[20:45:32] <pycode> JordiGH, i have example.com (main project)
[20:45:43] <pycode> and i have example-landing.com for the landing page
[20:45:57] <pycode> the landing page uses the same model as the main project
[20:46:09] <pycode> same models and other few things (commands for example)
[20:46:36] <pycode> so i could create a second project to put the landing page but sounds like a repetition of the code
[20:46:45] <pycode> it is just a problem with the domain
[20:49:03] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:53:51] <pycode> JordiGH, ^^
[20:55:11] <JordiGH> idk git submodules?
[20:55:38] <pycode> JordiGH, no i mean how can i configure the same django project to accept multiple domain
[20:56:00] <JordiGH> Create two django projects and just copy the shared model into each project.
[20:56:14] <JordiGH> And for accepting multiple domains, I use django-multisite, but I don't know why.
[20:56:19] <JordiGH> Django can do this by itself, I think.
[20:56:55] <JordiGH> https://docs.djangoproject.com/en/3.2/ref/contrib/sites/
[21:04:02] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:06:28] <pycode> ok
[21:06:29] <pycode> thanks
[21:21:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[21:23:04] *** Quits: CodenameTim (~CodenameT@66.63.167.153) (Ping timeout: 252 seconds)
[21:23:26] *** Joins: fikran (~fikran@user/fikran)
[21:23:35] *** Joins: CodenameTim (~CodenameT@c-98-212-133-245.hsd1.il.comcast.net)
[21:44:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[21:46:11] *** Quits: pycode (~pycode@2001:b07:5d28:551:c395:48d5:fd70:7615) (Ping timeout: 250 seconds)
[21:56:40] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 252 seconds)
[21:57:43] *** Quits: CodenameTim (~CodenameT@c-98-212-133-245.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[21:58:46] *** Joins: CodenameTim (~CodenameT@66.63.167.169)
[22:16:56] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[22:17:29] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Client Quit)
[22:17:53] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[22:31:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:47:11] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[22:50:01] *** Quits: pro_z (~pro_z@37.214.44.116) (Ping timeout: 252 seconds)
[22:52:44] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[22:57:10] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:58:53] *** Quits: CodenameTim (~CodenameT@66.63.167.169) (Ping timeout: 252 seconds)
[23:12:43] *** Joins: CodenameTim (~CodenameT@66.63.167.169)
[23:24:44] *** Quits: CodenameTim (~CodenameT@66.63.167.169) (Ping timeout: 252 seconds)
[23:25:36] *** Joins: CodenameTim (~CodenameT@193.27.13.121)
[23:30:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:32:46] *** Joins: fikran (~fikran@user/fikran)
[23:40:14] *** Quits: gitly (~gitly@185.69.144.134) (Ping timeout: 260 seconds)
[23:40:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[23:42:14] *** Joins: gitly (~gitly@85.255.236.215)
[23:44:32] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:52:34] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
