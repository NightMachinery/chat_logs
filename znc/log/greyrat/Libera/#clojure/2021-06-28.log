[00:19:20] *** Joins: arca0 (~tesuji@91.193.4.124)
[00:30:24] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 272 seconds)
[00:31:00] *** Quits: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de) (Ping timeout: 250 seconds)
[00:32:47] *** Joins: silasfox (~sbv@cgn-213-196-213-250.nc.de)
[00:41:14] *** Quits: silasfox (~sbv@cgn-213-196-213-250.nc.de) (Ping timeout: 252 seconds)
[01:02:05] *** Quits: andreyorst_ (~u0_a177@176.59.54.85) (Quit: WeeChat 3.0.1)
[01:04:20] *** Joins: glider (~glider@user/glider)
[01:21:39] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net)
[01:29:56] *** Quits: arca0 (~tesuji@91.193.4.124) (Ping timeout: 272 seconds)
[02:00:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net) (Quit: Client closed)
[02:07:22] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
[02:26:34] *** Quits: jonys (~jonys@user/jonys) (Ping timeout: 268 seconds)
[02:47:23] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:48:47] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:26] *** Quits: uncleyear (~ian@93.185.28.32) (Ping timeout: 252 seconds)
[03:42:04] *** Quits: andreyorst (~andreyors@2.92.125.229) (Ping timeout: 258 seconds)
[03:45:00] *** Joins: andreyorst (~andreyors@2.92.125.200)
[03:45:56] *** Quits: kipz (~kipz@2a02:8010:6876:0:30c1:edbc:570d:b0a5) (Remote host closed the connection)
[03:46:10] *** Joins: kipz (~kipz@2a02:8010:6876:0:d94f:e224:e4b0:330)
[04:52:32] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[04:58:11] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
[05:06:33] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[05:32:10] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 265 seconds)
[05:34:11] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[05:35:28] *** Joins: saba_sedigh (~saba_sedi@5.160.21.189)
[05:35:45] <saba_sedigh> hello people
[05:36:31] <saba_sedigh> I am a java programmer and I want to learn clojure. Could you tell me what is the best way to ease in to the process and learn clojure
[05:36:46] <saba_sedigh> Should I go and learn lisp first?
[05:37:00] <saba_sedigh> basically give me some good advise
[05:37:03] <saba_sedigh> Thanks
[05:40:48] <aphyr> I'd say you can pick up Clojure directly
[05:41:09] <aphyr> What's our community go-to these days for introductions? Clojure for the Brave and True?
[05:46:19] <saba_sedigh> aphyr: What is the IDE of choice for clojure. It seems IntelliJ Can't work with coljure
[05:47:18] <saba_sedigh> In fact it hanged just now
[05:47:23] <saba_sedigh> :(
[05:50:35] <aphyr> I know people use IntelliJ and like it! I don't actually use an IDE myself, just plain old Vim. I mean, syntax highlighting and reformatting, but that's all I really feel like I need.
[05:51:01] <aphyr> (this is somewhat helped by the fact that Clojure codebases are generally a good deal smaller than Java ones--less digging required)
[05:59:49] <form_feed> saba_sedigh: IntelliJ has a plugin for Clojure
[05:59:55] <form_feed> https://cursive-ide.com/
[06:00:16] <saba_sedigh> form_feed: it seems i have to buy it. is that right?
[06:03:10] <form_feed> saba_sedigh: Yes. If you don't want that, and don't do Emacs or Vim, you probably want VS Code (or VS Codium) with Calva or Atom with Chlorine.
[06:04:17] <saba_sedigh> form_feed: do you know or use cursive. can I use it for now and pay later let say a 30 days usage?
[06:04:30] <saba_sedigh> or It doesn't work if you don't pay.
[06:05:17] <form_feed> saba_sedigh: you have to apply for a non-commercial licence, which is valid for 6 months. https://cursive-ide.com/buy.html
[06:06:06] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[06:06:23] *** Joins: derelict (~derelict@user/derelict)
[06:09:46] *** Joins: kevin`` (~user@12.172.77.234)
[06:13:52] <saba_sedigh> form_feed: thanks I applied.
[06:15:09] <form_feed> saba_sedigh: :) Welcome to Clojure and hope you have a good time.
[06:15:57] <saba_sedigh> form_feed: Good time I I hope
[06:16:15] <saba_sedigh> form_feed: What are the use cases for clojure?
[06:16:31] <saba_sedigh> for example could I writ a rest application with it?
[06:17:24] <saba_sedigh> write spring application using clojure; now that would be interesting...
[06:19:44] <form_feed> saba_sedigh: https://itnext.io/getting-started-with-clojure-e8f207ff8eab
[06:21:07] <saba_sedigh> LOL
[06:21:17] <saba_sedigh> my first clojurfe script
[06:22:27] <saba_sedigh> https://dpaste.org/9Yt8
[06:23:21] <saba_sedigh> 	... 31 more
[06:23:22] <saba_sedigh> Process finished with exit code 1
[06:23:26] <saba_sedigh> :D
[06:25:49] <saba_sedigh> form_feed: thanks for itnext link
[06:25:56] <saba_sedigh> very useful
[06:26:02] *** Joins: cydork (~vihang@8.17.206.245)
[06:30:46] *** Quits: cydork (~vihang@8.17.206.245) (Ping timeout: 272 seconds)
[06:31:48] <form_feed> saba_sedigh: it seems your `def` is malformed. Try to look at an introduction to the syntax like https://learnxinyminutes.com/docs/clojure/
[06:33:59] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:42:13] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[06:47:55] <hendursa1> saba_sedigh: personally I think Emacs is a pretty good 'IDE', Clojure or not..
[06:48:12] *** Joins: meinside (uid24933@id-24933.brockwell.irccloud.com)
[07:05:00] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[07:06:50] *** Joins: shredder (~user@user/shredder)
[07:32:45] *** Joins: deadmeme (~deadmeme3@61.247.52.158)
[07:55:55] *** Joins: deadmeme1 (~deadmeme3@61.247.52.158)
[07:59:54] *** Quits: deadmeme (~deadmeme3@61.247.52.158) (Ping timeout: 268 seconds)
[08:02:22] *** Quits: deadmeme1 (~deadmeme3@61.247.52.158) (Ping timeout: 268 seconds)
[08:44:18] *** Quits: kevin`` (~user@12.172.77.234) (Ping timeout: 268 seconds)
[09:12:52] *** Joins: jonys (~jonys@user/jonys)
[09:30:00] *** Joins: struchu (~struchu@staticline-31-183-186-122.toya.net.pl)
[09:34:03] *** Joins: cydork (~vihang@8.17.206.245)
[09:36:08] *** Quits: sailorCa` (~user@p200300f6a70c9d6e45b2f9ae6a664bbb.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:37:19] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 244 seconds)
[09:37:57] *** Joins: sailorCa` (~user@p200300f6a70c9dceb5a3d11577322a9b.dip0.t-ipconnect.de)
[09:41:42] *** Joins: etiago (~etiago@user/etiago)
[09:42:16] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net)
[09:42:29] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-18.prtc.net) (Write error: Broken pipe)
[09:51:05] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[10:05:38] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[10:07:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:18:33] *** Joins: derelict (~derelict@user/derelict)
[10:21:48] *** Joins: xsperry (~as@user/xsperry)
[10:35:09] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[10:35:34] *** Joins: lad (~lad@user/lad)
[10:35:53] *** Joins: uncleyear (~ian@93.185.27.45)
[10:38:58] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:52:52] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
[11:03:06] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[11:30:52] *** Joins: derelict (~derelict@user/derelict)
[11:38:29] *** Joins: arca0 (~tesuji@91.193.4.124)
[11:41:55] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 265 seconds)
[11:43:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[12:01:51] *** Joins: xsperry (~as@user/xsperry)
[12:23:50] *** Quits: lad (~lad@user/lad) (Ping timeout: 268 seconds)
[12:36:19] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:38:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:38:52] *** Quits: jespada (~jespada@90.254.247.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:40:04] *** Joins: jespada (~jespada@90.254.247.46)
[13:50:23] <EdwardIII> i'm always a bit tempted by emacs but i feel like i'm just too invested in vim
[13:52:41] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:51] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[13:59:55] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[14:34:29] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[15:04:22] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[15:05:41] *** Quits: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt) (Ping timeout: 268 seconds)
[15:07:52] *** Quits: cydork (~vihang@8.17.206.245) (Ping timeout: 268 seconds)
[15:12:56] *** Joins: yeik-the-spik (~user@77.red-81-37-143.dynamicip.rima-tde.net)
[15:14:05] <yeik-the-spik> Good day. I just posted a question in the matrix room. But then I saw it recommended to ask here. Sorry for the duplication
[15:14:31] <yeik-the-spik> Hi everyone! I am Yeik, first time here. I have some Clojure experience, but I am developing my first web app. I would like to know what is the recommended auth / password hashing library. So far my research points to buddy https://funcool.github.io/buddy-hashers/latest/user-guide.html
[15:14:31] <yeik-the-spik> Am I pointed in the right direction?
[15:36:54] *** Joins: cydork (~vihang@8.17.206.245)
[15:39:51] *** Joins: Danishman (~Allan@62-243-156-218-static.dk.customer.tdc.net)
[15:41:07] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[15:46:35] *** Quits: amk (~amk@176.61.106.150) (Remote host closed the connection)
[16:02:29] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[16:13:25] *** Joins: yoonkn (~user@175.197.208.79)
[16:31:53] *** Quits: yeik-the-spik (~user@77.red-81-37-143.dynamicip.rima-tde.net) (Remote host closed the connection)
[16:37:17] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[16:40:28] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[16:44:25] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:fcd0:b167:3e55:e9f4) (Remote host closed the connection)
[16:44:37] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:d583:889d:9b29:825f)
[16:47:43] *** Joins: IPmonger28 (~IPmonger@2601:41:c401:4f10:a436:40e1:7457:ab75)
[16:48:35] *** Parts: IPmonger28 (~IPmonger@2601:41:c401:4f10:a436:40e1:7457:ab75) ()
[16:53:41] *** Joins: IPmonger (~ipmonger@2601:41:c401:4f10:a436:40e1:7457:ab75)
[17:06:18] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[17:21:00] *** Joins: GrayArea_ (~cpd@46.246.122.184)
[17:25:05] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 265 seconds)
[17:27:22] *** Quits: cydork (~vihang@8.17.206.245) (Ping timeout: 252 seconds)
[17:45:46] *** Quits: arca0 (~tesuji@91.193.4.124) (Quit: WeeChat 3.1)
[17:46:22] *** Joins: xsperry (~as@user/xsperry)
[17:50:13] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 265 seconds)
[17:53:04] *** Joins: jespada (~jespada@90.254.247.46)
[18:07:12] <aphyr> I've used Buddy before, seemed fine!
[18:19:45] *** Joins: derelict (~derelict@user/derelict)
[18:22:47] *** Joins: libertyprime (~libertypr@124.197.60.232)
[18:25:36] <ridcully> slack folks sending users over to irc.  have i missed some memo?
[18:29:35] *** Joins: xulfer (uid452788@id-452788.charlton.irccloud.com)
[18:30:52] *** Quits: struchu (~struchu@staticline-31-183-186-122.toya.net.pl) (Ping timeout: 272 seconds)
[18:35:02] <EdwardIII> aphyr: he's gone :) but good to know!
[18:36:02] *** Joins: cydork (~vihang@8.17.206.245)
[18:37:29] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[18:38:26] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[18:39:02] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Read error: Connection reset by peer)
[18:39:51] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[18:41:00] *** Quits: cydork (~vihang@8.17.206.245) (Ping timeout: 272 seconds)
[18:41:13] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[18:41:37] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[18:44:33] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[18:45:28] *** Joins: amk (~amk@176.61.106.150)
[18:45:28] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 252 seconds)
[18:50:14] * wink needs to redo this one web app from 2013
[18:51:09] *** Quits: IPmonger (~ipmonger@2601:41:c401:4f10:a436:40e1:7457:ab75) (Quit: Textual IRC Client: www.textualapp.com)
[18:52:06] *** Quits: libertyprime (~libertypr@124.197.60.232) (Ping timeout: 258 seconds)
[18:59:43] <EdwardIII> wink: is it in clojure?
[19:10:13] <wink> EdwardIII: yeah. not sure how old luminus was back then, I think not very old. and it still uses libnoir and korma. and probably 3 other deprecated things
[19:10:30] <wink> it shouldn't be too much effort, just redo the scaffolding, really
[19:11:06] <EdwardIII> nice
[19:35:57] *** Joins: cydork (~vihang@2a09:bac0:202::811:cef5)
[19:40:12] *** Quits: cydork (~vihang@2a09:bac0:202::811:cef5) (Ping timeout: 250 seconds)
[19:49:13] *** Joins: midre (~midre@2601:547:901:40b0:abe8:5d35:280b:ed8f)
[19:51:28] *** Parts: midre (~midre@2601:547:901:40b0:abe8:5d35:280b:ed8f) (Leaving)
[20:03:09] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:07:47] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[20:08:12] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[20:09:52] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[20:12:36] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 258 seconds)
[20:14:59] *** Quits: saba_sedigh (~saba_sedi@5.160.21.189) (Ping timeout: 268 seconds)
[20:17:09] *** Joins: saba_sedigh (~saba_sedi@109.125.173.133)
[20:41:06] *** Joins: seschwar (~seschwar@user/seschwar)
[20:47:17] *** Quits: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net) (Remote host closed the connection)
[20:47:42] *** Joins: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net)
[20:56:53] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[20:57:48] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Ping timeout: 272 seconds)
[20:57:48] *** harrigan- is now known as harrigan
[20:59:13] *** Quits: harrigan (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Read error: Connection reset by peer)
[20:59:52] *** Joins: harrigan (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[21:03:58] *** Joins: harrigan- (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[21:04:46] *** Quits: harrigan (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 272 seconds)
[21:04:46] *** harrigan- is now known as harrigan
[21:26:21] *** Joins: son0p (~ff@181.136.122.143)
[21:41:38] <sobel> saba_sedigh: I have used Cursive a bit, but eventually found i preferred Calva (VSCode plugin)
[21:55:50] <oenone> sobel: 
[21:55:55] <oenone> oops, sorry, wrong window
[22:02:19] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[22:03:23] *** Joins: op2 (~op@user/op2)
[22:06:58] <mayhew> Is there a built-in way to destructure a map and require that certain keys be present rather than default to nil?
[22:09:12] <aphyr> I don't think there's a single expression for destructuring and assertion--I imagine you'd cover that with spec, perhaps?
[22:09:31] <saba_sedigh> sobel: Thanks. I am using cursive right now. cause all of my java coding eco-system is on intellij and I am about 13hrs in; learning clojure. but I would keep your suggestion in mind for when I am setting my cljs system.
[22:10:21] <aphyr> mayhew: What I usually do when I want to ensure map key presence is something like `(let [x (assert+ (:map x) "Expected an X!")] ...)`
[22:10:35] <aphyr> (using https://github.com/aphyr/dom-top/blob/master/src/dom_top/core.clj#L6 to assert and transparently pass through x's value)
[22:13:22] <turlando> mayhew depending on the context you might use a :pre clause https://clojure.org/reference/special_forms#_fn_name_param_condition_map_expr_2
[22:14:06] <mayhew> aphyr: thank you for the recommendations. I'm a bit surprised there's nothing built in for this, essentially trying to emulate named parameters in Ruby/Python.
[22:14:07] <technomancy> remember that (contains? m x) does not imply (not= (get m x))
[22:14:14] <technomancy> (not= nil (get m x)) rather
[22:14:40] <mayhew> turlando: thanks, will look into this as well :)
[22:15:13] <aphyr> Yeah, assuming you *want* nil punning here.
[22:17:21] <aphyr> mayhew: It's sort of an in-between thing. I tend to use map destructuring when I'm fine with nil values and expect later things to handle it. If I'm trying to be rigorous about "no, really, this map NEEDS an x" and I don't want to use an assertion, I'll pull in core.typed.
[22:18:36] <aphyr> In particular, I can never remember the semantics of map destructuring's `:or` notation and how it handles nil vs absent values, so when that matters I'm usually writing (:x some-map :some-default-value) explicitly
[22:18:43] <turlando> aphyr would you suggest core.typed? It seems to be in a semi-abandoned state (or maybe it's just stable :))
[22:19:00] <technomancy> I'm getting spoiled by Lua's tables where they literally cannot contain nil
[22:19:36] <aphyr> It's workable. I've been using c.t for roughly 5 years and I quite like it. Definitely under-documented, has its rough spots, but when you're having trouble keeping the unityped Clojure world in your head, it's extremely nice.
[22:19:43] <turlando> TIL (:x m :default), I've always used get
[22:20:10] <aphyr> I've also used Schema recently, which I quite liked for runtime validation.
[22:20:43] <aphyr> I've tried three or four times to get into Clojure spec, but every time I try I just bounce right off of it and I don't know why. I'm sure it's fine, I just can't seem to make it do useful things for the way my code is structured.
[22:21:14] <turlando> I used spec at my previous job and... I have mixed feelings but I can't explain exactly
[22:21:32] <aphyr> The assumption that keywords have exactly one meaning per namespace is extremely at odds with most of my code.
[22:22:58] <aphyr> the times where I need validation are generally when I'm having to keep four or five different representations of similarly-named data straight; e.g. :id in one map represents a transaction ID as a string, and :id in another represents a Java TransactionId instance, and I need to be particular about which is used when. Core.typed and Schema are both really good at that.
[22:24:46] <mayhew> I'm not even really thinking of this as validation. More so "are my function calls lined up correctly", and positional arguments don't scale, etc.
[22:25:23] <aphyr> If you want to verify that statically, you want core.typed, I think.
[22:25:46] <turlando> If you see namespaces as bags of keys having a meaning per namespace makes sense, the problem I think is that you will find youself creating a myriad of namespaces just for keywords and they don't really compose IIRC
[22:25:51] <aphyr> If you want to verify it dynamically, then do an assert, manual throw, :pre constraint on the function, spec, schema, etc
[22:26:15] <aphyr> turlando: Yeah, it doesn't make sense to have five different namespaces for the same semantic concept, IMO
[22:27:51] <technomancy> aphyr: the fact that the spec registry isn't first-class really bugs me too
[22:28:05] <technomancy> I sorta understand the motivation but I miss back when Clojure was a lisp-1
[22:28:10] <aphyr> it also makes it difficult to validate data that comes from other places. It bugs me that I'm expected to redefine my existing data model in order to make it look like what spec wants.
[22:28:25] <technomancy> (but we still use it to great effect at work and it's fine; just annoying)
[22:28:47] <aphyr> right!
[22:29:29] <aphyr> also the error messages, my GOD, I have literally never correctly interpreted a spec syntax error from the compiler
[22:29:57] <aphyr> "hope you like reading sixty lines of non-pretty-printed sexprs"
[22:30:11] <technomancy> but I mean
[22:30:14] <technomancy> par for the course honestly
[22:30:23] <aphyr> I think spec actually made them worse haha
[22:30:54] <technomancy> possible but maybe you just got numbed to the pain of the old style
[22:31:02] <aphyr> Oh, entirely possible
[22:31:22] <aphyr> I'm sure there's a lein plugin that makes them tolerable?
[22:31:36] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[22:32:55] <mayhew> hah, how long have you all been using Clojure? This is my 2nd or 3rd dabble with it. It's sticking a bit more this time.
[22:33:21] <technomancy> aphyr: dunno, I've already become too numb to bother looking =D
[22:33:27] <technomancy> mayhew: started in 2008
[22:33:36] <ehashman> I haven't seen any spec error messages so I have no idea if they're worse
[22:33:42] <aphyr> Full-time since ~2013
[22:33:50] * ehashman since 2016?
[22:33:58] <ehashman> but not really anymore, lol
[22:34:07] <technomancy> suspect the IRC channel is not super representative, lol
[22:43:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[22:56:39] *** Joins: derelict (~derelict@user/derelict)
[23:12:00] <ToxicFrog> Since 2012-2013 or so, according to my commit history
[23:12:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:18:26] *** Joins: kurtis (~kurtismul@user/kurtis)
[23:19:50] <kurtis> I have a project separated into multiple files in my src directory -- each with a different namespace. WHen I use emacs+cider and cider-jack-in, I have to manually evaluate each of those files so the namespace is available to be used. What am I doing wrong?
[23:23:33] <turlando> kurtis Personally I use cider-ns-refresh, not sure if there's a better way. I will make things consistent in your repl but every time you call it your repl defs will be wiped out (for the better I would say)
[23:24:21] <turlando> https://docs.cider.mx/cider/usage/misc_features.html#reloading-code
[23:24:54] <technomancy> kurtis: set your project.clj :repl-options {:init-ns myproject.init} to point to a namespace that requires whatever other namespaces you want loaded at launch, if you use leiningen
[23:26:46] <kurtis> technomancy: Thank you! Let me give that a try
[23:27:30] <technomancy> in general it shouldn't be surprising that code needs to be loaded before it can be used though
[23:29:31] <kurtis> Yeah, I I would agree with that. I assumed that it would follow all of my references from (:require) in my core.clj file. I may be missing what "cider-jack-in" is doing behind the scenes
[23:30:12] <technomancy> it will, but only if your project.clj file indicates that your core.clj file should be loaded
[23:30:29] <technomancy> maybe declaring it as :main would be enough? I'm a bit fuzzy on that tbh
[23:31:11] <kurtis> ahhh good point. I don't see it referenced in there. I'll dig into that more. 
[23:31:20] <technomancy> :init-ns is a bit more explicit way of saying what you want
[23:32:09] <kurtis> Oh, it is in there: :main ^:skip-aot myprojectname.core
[23:32:18] <kurtis> I'll give the init-ns a try
[23:36:18] <kurtis> That seems to have done the trick. Thanks a lot!
[23:37:47] <kurtis> Odd question -- when you start an emacs session and you're about to "jack-in" ... do you typically have a specific file you open first? Or just jump straight into whatever source file you're going to modify?
[23:38:35] <kurtis> I need to look at cider's docs to find out if it uses $PWD or the current file, or some other mechanism to find the project.clj and anything else it might read
[23:39:32] *** Quits: op2 (~op@user/op2) (Remote host closed the connection)
[23:41:30] <kurtis> ahh, I think I found my answer. It's just calling out to lein which I assume uses $PWD `CIDER shells out and runs a command like lein repl :headless to start an nREPL server`
[23:43:08] *** Joins: op2 (~op@user/op2)
[23:52:15] *** Joins: slant (~ssnatt@2806:103e:2:e58:a272:61a6:ddd8:f63)
[23:56:33] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
